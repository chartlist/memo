From voisine at gmail.com  Thu May  1 22:35:14 2014
From: voisine at gmail.com (Aaron Voisine)
Date: Thu, 1 May 2014 15:35:14 -0700
Subject: [Bitcoin-development] "bits": Unit of account
Message-ID: <CACq0ZD6EJnG4iwehfcFU-4AhBiNdtyf7eE9iGW8d6rv6327Eug@mail.gmail.com>

I'm also a big fan of standardizing on microBTC as the standard unit.
I didn't like the name "bits" at first, but the more I think about it,
the more I like it. The main thing going for it is the fact that it's
part of the name bitcoin. If Bitcoin is the protocol and network, bits
are an obvious choice for the currency unit.

I would like to propose using Unicode character U+0180, lowercase b
with stroke, as the symbol to represent the microBTC denomination,
whether we call bits or something else:
 http://www.fileformat.info/info/unicode/char/0180/index.htm

Another candidate is Unicode character U+2422, the blank symbol, but I
prefer stroke b.
http://www.fileformat.info/info/unicode/char/2422/index.htm

Aaron

There's no trick to being a humorist when you have the whole
government working for you -- Will Rodgers

> On Apr 21, 2014 5:41 AM, "Pieter Wuille" <pieter.wuille at gm...> wrote:
>
>>On Apr 21, 2014 3:37 AM, "Un Ix" <slashdevnull at ...> wrote:
>>
>> Something tells me this would be reduced to a single syllable in common
>> usage I.e. bit.
>
> What units will be called colloquially is not something developers will
> determine. It will vary, depend on language and culture, and is not
> relevant to this discussion in my opinion.
>
> It may well be that people in some geographic or language area will end up
> (or for a while) calling 1e-06 BTC "bits". That's fine, but using that as
> "official" name in software would be very strange and potentially confusing
> in my opinion. As mentioned by others, that would seem to me like calling
> dollars "bucks" in bank software. Nobody seems to have a problem with
> having colloquial names, but "US dollar" or "euro" are far less ambiguous
> than "bit". I think we need a more distinctive name.
>
> --
> Pieter



From sergiolerner at certimix.com  Fri May  2 12:00:57 2014
From: sergiolerner at certimix.com (Sergio Lerner)
Date: Fri, 02 May 2014 09:00:57 -0300
Subject: [Bitcoin-development] Block collision resolution using the
 DECOR protocol and Bonneau's Kickbacks problem
In-Reply-To: <53638616.2030009@certimix.com>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
	<20140423150555.GE19430@savin>
	<CAOe4Ui=OaVLvh0vUnNv-1j41YB4B2x896DQ5b6xt4oUJ5oLPFg@mail.gmail.com>
	<53638616.2030009@certimix.com>
Message-ID: <536388F9.3040607@certimix.com>

The original post is here: http://bitslog.wordpress.com/2014/05/02/decor/



From sergiolerner at certimix.com  Fri May  2 11:48:38 2014
From: sergiolerner at certimix.com (Sergio Lerner)
Date: Fri, 02 May 2014 08:48:38 -0300
Subject: [Bitcoin-development] Block collision resolution using the DECOR
 protocol and Bonneau's Kickbacks problem
In-Reply-To: <CAOe4Ui=OaVLvh0vUnNv-1j41YB4B2x896DQ5b6xt4oUJ5oLPFg@mail.gmail.com>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
	<20140423150555.GE19430@savin>
	<CAOe4Ui=OaVLvh0vUnNv-1j41YB4B2x896DQ5b6xt4oUJ5oLPFg@mail.gmail.com>
Message-ID: <53638616.2030009@certimix.com>

The Bonneau's Kickbacks problem is interesting because it is a
destabilizing incentive.
Just by luck yesterday I was working on the same problem. I found a way
to prevent Kickbacks and provide a conflict resolution strategy that
benefits all member of the network.
I will repost my blog post here, but the original has very nice diagrams
and is full of hyperlinnk, so I recommend you see the original post...

Even faster block-chains with DECOR protocol

One of the most interesting papers ever written about the Bitcoin
block-chain design is ?Accelerating Bitcoin?s Transaction Processing? by
Sompolinsky and Zohar. The paper presents the GHOST protocol which aims
to achieve higher TPS securely by changing the way nodes decide which is
the best chain fork. One of the issues that is not considered by the
paper is the existence of a selfish bias independent of the miner?s
hashing power. When a miner solves a block, and a competing block is
also received, the miner will mine on top of his own solved block. This
is not only a consequence of the best-chain selection policy, there is a
strong incentive to do so. By mining on top of your own solved block,
you double the expected reward while keeping the same winning
probabilities. As a informal comparison, in Satoshi?s security model,
the rogue miner is irrational and malicious. For example, the
confirmation interval computations assume a rogue miner having 10% of
the network hashing power will try to mine a selfish chain in order to
try to outperform the global best-chain even if the odds are against
him. In Sopolinky/Zohar security model, the miners are rational, but use
a sub-optimal strategy. For example when two blocks compete, all miners
will chose one of them arbitrarily (all choose the same block). Although
this may be optimal for a fully cooperative network it?s not what miners
will optimally choose for themselves. In Eyal/Sirer security model, the
rogue miner is rational and uses an strategy believed by the authors to
be optimal.
In this post we improve Sopolinky/Zohar model assuming the attacker uses
Eyal/Sirer selfish strategy and the standard double-betting strategy.

Double-betting Strategy by Default

The double-betting is a mining strategy pre-programmed in the in Satoshi
reference miner. When a miner mines a block and a competing block is
also detected, the miner won?t switch to the other chain because is has
the same length, so mining will continue on the ?selfish? fork. Of
course there is nothing inherently selfish with this strategy since the
miner has not enough information about which of the two forks is the one
which the majority of the miners are mining on top of. Nevertheless the
division of hashing power in forks is against the common good and
reduces both the network TPS and the network confirmation time.

Tit for Tat and identities

If the two competing miners could detect the other miners identity in
blocks, they could apply a cooperative strategy like Tit for Tat.
Whenever two competing blocks are found by two miners without having any
previous interaction, the conflict is resolved by both miners mining on
top of the block with lower hash digest. If the two miners have
interacted before, the conflict is resolved by both miners mining in the
block that was solved by the opposite miner chosen in the previous
interaction. If a miner acts selfishness and breaks the ties, then the
other miner opts to apply an equivalent retaliation in the next block
conflict. The retaliation is only considered successful if the miner who
retaliates wins the ties. This strategy may in practice for at least
four reasons:

Sometimes a miner may solve two blocks in a row without noticing that
the first one had a conflicting sibling. Then the competing miner would
retaliate.
If more than two miners are competing, it?s more complex to decide which
block should be chosen as parent.
All miners must dynamically maintain information of all previous
interactions between all other miners.
Some miners want to preserve anonymity and won?t publish identifying
information.

The first two reasons can be disregarded since the conflicting events
may have a very low probability. The third is only a minor technical
difficulty. But the last reason may be very strong.

DECOR (DEterministic COnflict Resolution)

I present here a reward strategy I called DECOR that incentives
resolving conflicts in a deterministic way that benefits all conflicting
miners at the same time. This strategy practically eliminates any
possibly block-chain reversal when miners are rational. To make this
explanation clearer we?ll assume that all block rewards and fees are
equal so each miner receives exactly the same net payment for a block.
Also the reward percentages proposed can be varied as long as some
relations between are maintained. The idea is that whenever two miners
Alice and Bob mine two competing blocks (a block conflict) both decide
to mine on top of the block with the lower hash. First, all conflicting
blocks headers that are not very old are forwarded to allow all peers to
compare block hashes. If a miner Carol (or Alice or Bob) solves a
following block, she includes in his block a reference to the uncle
block header that was left out of the main chain. This reference is
stored either in the block header, the coinbase field or in a special
transaction. The uncle block owner will get automatically 50% of the
reward of his main-chain sibling if uncle hash is higher than sibling
hash or 35% if not. The sibling also pays a 10% to Carol. Also the
sibling burns 10% if the uncle hash is higher than the sibling hash or
35% if not. This strategy sets incentives for conflicting miners to
choose always the parent with the lowest hash and to always reference a
lost uncle in the following blocks.

Mining strategy:

If there is no block Y having a sibling X in the main chain whose reward
has not matured then mine in the standard way and exit this procedure
Add a reference to Y in the new block that is being prepared.
Let x := BlockRewardPlusFees(X)
Let q := x*0.5
Let z :=x*0.1
If Hash(X)>Hash(Y) then q :=q-(x*0.2) and z :=z+(x*0.2)
Add a transaction that has as input the coinbase output of X and has
four outputs: the first output pays q coins to the address specified in
the coinbase output of block Y, the second output pays (x*0.1) coins to
an owned address, the third output burns z coins, and the forth output
pays the remaining coins to the same address as the input address. All
users accept this transaction as valid even if it?s unsigned if a
correct uncle is referenced.

The following diagrams show an example of how two miners Alice and Bob
will prefer mining on top of the same parent (A1) after a block A1
(created by Alice) is in conflict with a block B1 created by Bob. Carol
is a third miner that is not in conflict with neither Alice nor Bob. In
the diagrams the first letter indicates who created the block and the
number following indicates the block height. The arrows point to each
block parent.Bob-op


Although I?m giving no formal proof, It?s evident that the best strategy
for Alice and Bob is to choose the same parent for the following block.

GHOST+DECOR

The DECOR strategy can be implemented along with the GHOST protocol. In
fact both protocols have things in common, such as the need to forward
block headers that are siblings of blocks in the best chain. Using both
protocols together, along with route optimizations proposed here, maybe
2000 TPS can be achieved today.



Best regards,
Sergio.



From melvincarvalho at gmail.com  Fri May  2 14:29:35 2014
From: melvincarvalho at gmail.com (Melvin Carvalho)
Date: Fri, 2 May 2014 16:29:35 +0200
Subject: [Bitcoin-development] moving the default display to mbtc
In-Reply-To: <CAKaEYhK4oXH3hB7uS3=AEkA6r0VB5OYyTua+LOP18rq+rYajHg@mail.gmail.com>
References: <CAKaEYhK4oXH3hB7uS3=AEkA6r0VB5OYyTua+LOP18rq+rYajHg@mail.gmail.com>
Message-ID: <CAKaEYhLcDnKR3Sk0--sci-yBPfe3guYzo_G3mOYYA_QYXsKSTQ@mail.gmail.com>

On 14 November 2013 12:45, Melvin Carvalho <melvincarvalho at gmail.com> wrote:

> Rationale
> =======
>
> Given the recent rise in value there seems to be anecdotal evidence that 1
> bitcoin being so high is putting off a lot of normal buyers, because they
> feel that putting down $400+ and only getting "1 coin", or having to buy in
> multiples of 1 whole coin, is too much.. only after it being explained that
> they can buy fractional amounts to they regain interest, apparently
> happening increasingly.
>
>
> Straw Poll
> ========
>
> 6 months ago there was a straw poll on this
>
> https://bitcointalk.org/index.php?topic=220322.0
>
> Roughly 2/3 of respondents favoured switching
>
> A further 20% said to switch after it hits 1000
>
> Satoshi's comments:
> ================
>
> Eventually at most only 21 million coins for 6.8 billion people in the
> world if it really gets huge.
>
> But don't worry, there are another 6 decimal places that aren't shown, for
> a total of 8 decimal places internally.  It shows 1.00 but internally it's
> 1.00000000.  If there's massive deflation in the future, the software could
> show more decimal places.
>
> If it gets tiresome working with small numbers, we could change where the
> display shows the decimal point.  Same amount of money, just different
> convention for where the ","'s and "."'s go.  e.g. moving the decimal place
> 3 places would mean if you had 1.00000 before, now it shows it as 1,000.00.
>
> https://bitcointalk.org/index.php?topic=44.msg267#msg267
>
>
> Would now be a good time to start thinking about changing the default
> display in the software.  Perhaps initially it could be a dropdown display
> option, then at some point mbtc becomes the default?
>
>
Just a FYI on this topic.  In Gavin's recent interview he described the
block reward as 25,000 millibits (about 25 minutes in).

https://www.youtube.com/watch?v=4pBd-OD9Rns

Decide for yourself whether or not that's meaningful :)

PS very enjoyable and accessible panel ...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140502/aa705858/attachment.html>

From mike at plan99.net  Fri May  2 15:39:44 2014
From: mike at plan99.net (Mike Hearn)
Date: Fri, 2 May 2014 17:39:44 +0200
Subject: [Bitcoin-development] BIP70 implementation guidance
Message-ID: <CANEZrP15TKPcWnjdnfbRd9KxrS_5F=07gTL1DxyMo1os-sVOpA@mail.gmail.com>

A bunch of different people either have implemented or are implementing
BIP70 at the moment. Here's a bunch of things I've been telling people in
response to questions. At some point I'll submit a pull req with this stuff
in but for now it's just an email.

*Error handling during signature checking*

I've had queries around the right behaviour here. BIP 70 is underspecified
and we should fix it IMO. If PKI checking fails you should just treat the
request as if it's unsigned. The reason is that there is no incentive for
an attacker to break the signature instead of just removing it entirely, so
an attacker would never trigger any error flows you put in. However,
someone who is signing their request with an unknown CA or using an
upgraded version of the protocol that isn't entirely backwards compatible
*could* trigger signature checking failure.

Therefore, in order to make introducing new (possibly community run) CA's
or new variations on signing possible, please treat any errors as if there
was no signature at all. This is not what browsers do,  but browsers have
an advantage - they were already given an identity and told to expect a
secure protocol when the user typed in the web address with an
https://prefix (or clicked a link). Unfortunately a Bitcoin wallet has
no context
like this.

One person asked me whether this makes the whole scheme pointless because a
MITM can just delete the signature. The answer is no - downgrade attacks
are always possible on systems that start out insecure. The solution is to
train users to expect the upgrade and refuse to go ahead if it's not there.
Training users to expect signed payment requests will be a big task similar
to the way the browser industry trained users to look for the padlock when
typing in credit card details, but it must be done.

Because wallets lack context there's no equivalent to HSTS for us either.
So in your GUI's try to train the user - when showing a signed payment
request, tell them to expect the recipient name to appear in future and
that they should not proceed if it doesn't. This gives us a kind of mental
HSTS.

*Extended validation certs*

When a business is accepting payment, showing the name of the business is
usually better than showing just the domain name, for a few reasons:

   1. Unless your domain name *is* your business name like blockchain.info,
   it looks better and gives more info.

   2. Domain names are more phishable than EV names, e.g. is the right name
   bitpay.com or bit-pay.com or bitpay.co.uk?

   3. More important: Someone who hacks your web server or DNS provider can
   silently get themselves a domain name SSL cert issued, probably without you
   noticing. Certificate transparency will eventually fix that but it's years
   away from full deployment. It's much harder for a hacker to get a bogus EV
   cert issued to them because there's a lot more checking involved.

EV certs still have the domain name in the CN field, but they also have the
business name in the OU field.

In theory we are supposed to have extra code to check that a certificate
really was subject to extended validation before showing the contents of
this field. In practice either bitcoinj nor Bitcoin Core actually do, they
just always trust it. It'd be nice to fix that in future.

You should show the organisation data instead of the domain name if you
find it, for EV certs.

*pki=none*

Signing is optional in BIP 70 for good reasons. One implementor told me
they were considering rejecting unsigned payment requests. Do not do this!
A MITM can easily rewrite the bitcoin URI to look as if BIP70 isn't in use
at all.

Even though today most (all?) payment requests you'll encounter are signed,
it's important that signing is optional because in future we need
individual people to start generating payment requests too, and many of
them won't have any kind of memorisable digital identity. Plus other people
just won't want to do it. BIP70 is about lots of features, signing is only
one.

*S/MIME certs*

Email address certs look a bit different to SSL certs. You can get one for
free from here

    https://comodo.com/home/email-security/free-email-certificate.php

In these certs the display name can be found in the Subject Alternative
Name field with a type code of 1. Example code:


https://github.com/bitcoinj/bitcoinj/commit/feecc8f48641cd02cafc42150abba4e4841ea33d

You won't encounter many of these today except on Gavin's test site, but in
future people may wish to start creating and signing their own payment
requests for individual purposes using these certs (especially as they are
free). So please try to handle them correctly.

*Broadcast vs upload*

Please upload transactions and commit them to your wallet when the server
responds with 200 OK, but expect the merchant to broadcast them. Don't give
the user an option to pick - it's pointless as there's no obvious right
answer.

*Testing*

You can find a test site here:

http://bitcoincore.org/~gavin/createpaymentrequest.php

It's testnet only. For testing regular payment requests on the main
network, I use BitPay as they were the first seller-side implementation:

http://bitgivefoundation.org/donate-now/

*Memo contents*

Please put something useful here, ideally what is actually being sold but
failing that, the name of the merchant if you're a payment processor. Don't
be like BitPay and put large random numbers in the memo field but nothing
about what's actually purchased.

This is not particularly important today except for cosmetic reasons,
because wallets don't store the payment requests they saw to disk. But in
future they will and then a properly signed memo field + the transactions
used for payment give us a digital receipt. Receipts are useful for things
like filing expense reports, proving a purchase when returning an item to a
merchant, etc.

*Expiry times*

Don't be too aggressive with these. Although today it doesn't matter much,
some users may be trying to pay from multi-party accounts that require
multiple humans to coordinate to make a payment.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140502/e56ae858/attachment.html>

From author at anonymousbitcoinbook.com  Fri May  2 17:46:37 2014
From: author at anonymousbitcoinbook.com (Kristov Atlas)
Date: Fri, 02 May 2014 13:46:37 -0400
Subject: [Bitcoin-development] Compatibility Bitcoin-Qt with Tails
In-Reply-To: <CA+s+GJC_1YzKNwQKSreWB73vZVMYmM=+CqonqP7XWcDFP7ZZLw@mail.gmail.com>
References: <CA+s+GJARfPhMo8ucE7E40bE890NsuzuWPq1DQuK6ZVMvps0LVQ@mail.gmail.com>	<535BECDC.9070804@anonymousbitcoinbook.com>
	<CA+s+GJC_1YzKNwQKSreWB73vZVMYmM=+CqonqP7XWcDFP7ZZLw@mail.gmail.com>
Message-ID: <5363D9FD.4070509@anonymousbitcoinbook.com>


On 04/30/2014 03:02 AM, Wladimir wrote:
> On Sat, Apr 26, 2014 at 7:29 PM, Kristov Atlas
> <author at anonymousbitcoinbook.com> wrote:
>> Hey Wladimir,
>>
>> Thanks for building this binary. The initial problem with Qt was
>> resolved, and I was able to load the GUI that chooses my datadir. After
>> choosing the default datadir, however, it segfaulted.
> I've fixed the issue; at least on Debian 6 - which is a lot more
> conductive to development than tails :-). See
> https://github.com/bitcoin/bitcoin/pull/4094 for the gory details. New
> test build available:
>
> https://download.visucore.com/bitcoin/linux-gitian-3cbabfa.tar.gz
> (sigs: https://download.visucore.com/bitcoin/linux-gitian-3cbabfa.tar.gz.sig
> )
>
> Wladimir

Nice work! I can confirm that this dev binary runs smoothly in the 
latest version of Tails, v1.0. Screenshot proof here [1]. When this is 
incorporated into the next release of Bitcoin Core, will this make the 
usual Linux binary compatible, or will there be a special binary just 
for systems running the older Qt?

-Kristov

[1] http://postimg.org/image/p3ycwai9d/



From laanwj at gmail.com  Fri May  2 18:28:18 2014
From: laanwj at gmail.com (Wladimir)
Date: Fri, 2 May 2014 20:28:18 +0200
Subject: [Bitcoin-development] Compatibility Bitcoin-Qt with Tails
In-Reply-To: <5363D9FD.4070509@anonymousbitcoinbook.com>
References: <CA+s+GJARfPhMo8ucE7E40bE890NsuzuWPq1DQuK6ZVMvps0LVQ@mail.gmail.com>
	<535BECDC.9070804@anonymousbitcoinbook.com>
	<CA+s+GJC_1YzKNwQKSreWB73vZVMYmM=+CqonqP7XWcDFP7ZZLw@mail.gmail.com>
	<5363D9FD.4070509@anonymousbitcoinbook.com>
Message-ID: <CA+s+GJCOdoO0STE-pcGC+dSLxbSmw07T=Uuv50RBeHVP36uuwQ@mail.gmail.com>

On Fri, May 2, 2014 at 7:46 PM, Kristov Atlas
<author at anonymousbitcoinbook.com> wrote:
> Nice work! I can confirm that this dev binary runs smoothly in the latest

Thanks for testing!

> version of Tails, v1.0. Screenshot proof here [1]. When this is incorporated
> into the next release of Bitcoin Core, will this make the usual Linux binary
> compatible, or will there be a special binary just for systems running the
> older Qt?

The normal binary will be compatible.

At some point we may add a binary that is linked to Qt 5.x as well for
newer distributions, but compatibility is most important.

Wladimir



From jgarzik at bitpay.com  Fri May  2 19:17:59 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Fri, 2 May 2014 15:17:59 -0400
Subject: [Bitcoin-development] moving the default display to mbtc
In-Reply-To: <CAJfRnm7w5dH5BwqnQX_APx53rhfBiUEbLP5RSU6o15rToOqAhw@mail.gmail.com>
References: <CAKaEYhK4oXH3hB7uS3=AEkA6r0VB5OYyTua+LOP18rq+rYajHg@mail.gmail.com>
	<52852C2D.9020103@gmail.com> <52853D8A.6010501@monetize.io>
	<CAJfRnm7w5dH5BwqnQX_APx53rhfBiUEbLP5RSU6o15rToOqAhw@mail.gmail.com>
Message-ID: <CAJHLa0M+Wibtu7v6vq-ivv92t9Z+Va4Vjtbzk3AQwwjxN2pmJQ@mail.gmail.com>

<vendor hat: on>

Related: http://blog.bitpay.com/2014/05/02/bitpay-bitcoin-and-where-to-put-that-decimal-point.html

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From voisine at gmail.com  Fri May  2 19:21:41 2014
From: voisine at gmail.com (Aaron Voisine)
Date: Fri, 2 May 2014 12:21:41 -0700
Subject: [Bitcoin-development] BIP70 implementation guidance
In-Reply-To: <CANEZrP15TKPcWnjdnfbRd9KxrS_5F=07gTL1DxyMo1os-sVOpA@mail.gmail.com>
References: <CANEZrP15TKPcWnjdnfbRd9KxrS_5F=07gTL1DxyMo1os-sVOpA@mail.gmail.com>
Message-ID: <CACq0ZD6d1teN+MZM9Xx2EOX_OSPt5x7XmGtujT0DgBp0de-g5Q@mail.gmail.com>

At the moment BIP70 specifically requires that a request be rejected
if validation fails, so that should be fixed that sooner rather than
later:

"The recipient must verify the certificate chain according to
[RFC5280] and reject the PaymentRequest if any validation failure
occurs."

Aaron

There's no trick to being a humorist when you have the whole
government working for you -- Will Rodgers


On Fri, May 2, 2014 at 8:39 AM, Mike Hearn <mike at plan99.net> wrote:
> A bunch of different people either have implemented or are implementing
> BIP70 at the moment. Here's a bunch of things I've been telling people in
> response to questions. At some point I'll submit a pull req with this stuff
> in but for now it's just an email.
>
> Error handling during signature checking
>
> I've had queries around the right behaviour here. BIP 70 is underspecified
> and we should fix it IMO. If PKI checking fails you should just treat the
> request as if it's unsigned. The reason is that there is no incentive for an
> attacker to break the signature instead of just removing it entirely, so an
> attacker would never trigger any error flows you put in. However, someone
> who is signing their request with an unknown CA or using an upgraded version
> of the protocol that isn't entirely backwards compatible could trigger
> signature checking failure.
>
> Therefore, in order to make introducing new (possibly community run) CA's or
> new variations on signing possible, please treat any errors as if there was
> no signature at all. This is not what browsers do,  but browsers have an
> advantage - they were already given an identity and told to expect a secure
> protocol when the user typed in the web address with an https:// prefix (or
> clicked a link). Unfortunately a Bitcoin wallet has no context like this.
>
> One person asked me whether this makes the whole scheme pointless because a
> MITM can just delete the signature. The answer is no - downgrade attacks are
> always possible on systems that start out insecure. The solution is to train
> users to expect the upgrade and refuse to go ahead if it's not there.
> Training users to expect signed payment requests will be a big task similar
> to the way the browser industry trained users to look for the padlock when
> typing in credit card details, but it must be done.
>
> Because wallets lack context there's no equivalent to HSTS for us either. So
> in your GUI's try to train the user - when showing a signed payment request,
> tell them to expect the recipient name to appear in future and that they
> should not proceed if it doesn't. This gives us a kind of mental HSTS.
>
> Extended validation certs
>
> When a business is accepting payment, showing the name of the business is
> usually better than showing just the domain name, for a few reasons:
>
> Unless your domain name is your business name like blockchain.info, it looks
> better and gives more info.
>
> Domain names are more phishable than EV names, e.g. is the right name
> bitpay.com or bit-pay.com or bitpay.co.uk?
>
> More important: Someone who hacks your web server or DNS provider can
> silently get themselves a domain name SSL cert issued, probably without you
> noticing. Certificate transparency will eventually fix that but it's years
> away from full deployment. It's much harder for a hacker to get a bogus EV
> cert issued to them because there's a lot more checking involved.
>
> EV certs still have the domain name in the CN field, but they also have the
> business name in the OU field.
>
> In theory we are supposed to have extra code to check that a certificate
> really was subject to extended validation before showing the contents of
> this field. In practice either bitcoinj nor Bitcoin Core actually do, they
> just always trust it. It'd be nice to fix that in future.
>
> You should show the organisation data instead of the domain name if you find
> it, for EV certs.
>
> pki=none
>
> Signing is optional in BIP 70 for good reasons. One implementor told me they
> were considering rejecting unsigned payment requests. Do not do this! A MITM
> can easily rewrite the bitcoin URI to look as if BIP70 isn't in use at all.
>
> Even though today most (all?) payment requests you'll encounter are signed,
> it's important that signing is optional because in future we need individual
> people to start generating payment requests too, and many of them won't have
> any kind of memorisable digital identity. Plus other people just won't want
> to do it. BIP70 is about lots of features, signing is only one.
>
> S/MIME certs
>
> Email address certs look a bit different to SSL certs. You can get one for
> free from here
>
>     https://comodo.com/home/email-security/free-email-certificate.php
>
> In these certs the display name can be found in the Subject Alternative Name
> field with a type code of 1. Example code:
>
>
> https://github.com/bitcoinj/bitcoinj/commit/feecc8f48641cd02cafc42150abba4e4841ea33d
>
> You won't encounter many of these today except on Gavin's test site, but in
> future people may wish to start creating and signing their own payment
> requests for individual purposes using these certs (especially as they are
> free). So please try to handle them correctly.
>
> Broadcast vs upload
>
> Please upload transactions and commit them to your wallet when the server
> responds with 200 OK, but expect the merchant to broadcast them. Don't give
> the user an option to pick - it's pointless as there's no obvious right
> answer.
>
> Testing
>
> You can find a test site here:
>
> http://bitcoincore.org/~gavin/createpaymentrequest.php
>
> It's testnet only. For testing regular payment requests on the main network,
> I use BitPay as they were the first seller-side implementation:
>
> http://bitgivefoundation.org/donate-now/
>
> Memo contents
>
> Please put something useful here, ideally what is actually being sold but
> failing that, the name of the merchant if you're a payment processor. Don't
> be like BitPay and put large random numbers in the memo field but nothing
> about what's actually purchased.
>
> This is not particularly important today except for cosmetic reasons,
> because wallets don't store the payment requests they saw to disk. But in
> future they will and then a properly signed memo field + the transactions
> used for payment give us a digital receipt. Receipts are useful for things
> like filing expense reports, proving a purchase when returning an item to a
> merchant, etc.
>
> Expiry times
>
> Don't be too aggressive with these. Although today it doesn't matter much,
> some users may be trying to pay from multi-party accounts that require
> multiple humans to coordinate to make a payment.
>
>
>
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From roy at gnomon.org.uk  Fri May  2 20:41:47 2014
From: roy at gnomon.org.uk (Roy Badami)
Date: Fri, 2 May 2014 21:41:47 +0100
Subject: [Bitcoin-development] BIP70 implementation guidance
In-Reply-To: <CANEZrP15TKPcWnjdnfbRd9KxrS_5F=07gTL1DxyMo1os-sVOpA@mail.gmail.com>
References: <CANEZrP15TKPcWnjdnfbRd9KxrS_5F=07gTL1DxyMo1os-sVOpA@mail.gmail.com>
Message-ID: <20140502204146.GD62950@giles.gnomon.org.uk>

> *Extended validation certs*
> 
> When a business is accepting payment, showing the name of the business is
> usually better than showing just the domain name, for a few reasons:
> 
>    1. Unless your domain name *is* your business name like blockchain.info,
>    it looks better and gives more info.
> 
>    2. Domain names are more phishable than EV names, e.g. is the right name
>    bitpay.com or bit-pay.com or bitpay.co.uk?
> 
>    3. More important: Someone who hacks your web server or DNS provider can
>    silently get themselves a domain name SSL cert issued, probably without you
>    noticing. Certificate transparency will eventually fix that but it's years
>    away from full deployment. It's much harder for a hacker to get a bogus EV
>    cert issued to them because there's a lot more checking involved.
> 
> EV certs still have the domain name in the CN field, but they also have the
> business name in the OU field.

Well, many certs have something in the O field.  That has nothing to
do with EV - EV just mandates a particular set of validation
requirements.

> 
> In theory we are supposed to have extra code to check that a certificate
> really was subject to extended validation before showing the contents of
> this field. In practice either bitcoinj nor Bitcoin Core actually do, they
> just always trust it. It'd be nice to fix that in future.

I agree that blindly showing the O field may not be ideal - there
*may* conceivably be some CAs that include it without validation on
their cheap certs (although most cheap certs simply don't include it).
But it's not clear that EV or not is the right criterion here - there
are certainly non-EV certs out there that are organisation validated.
 
> You should show the organisation data instead of the domain name if you
> find it, for EV certs.

I have really mixed feelings about giving this privileged treatment
exclusively to EV certs, for the simple reason that the rules around
EV certs are iniquitous and some businesses are excluded.

e.g. in the UK sole traders (that is, unincorporated businesses) can't
get EV certs because the UK doesn't maintain a trade register of such
businesses and therefore such businesses are incapable of satisfying
the EV rules.

That said, EV certs are here, now, and (sadly) supporting them is
better than doing nothing...

roy





From bendavenport at gmail.com  Sat May  3 00:54:37 2014
From: bendavenport at gmail.com (Ben Davenport)
Date: Fri, 2 May 2014 17:54:37 -0700
Subject: [Bitcoin-development] moving the default display to mbtc
In-Reply-To: <CAJHLa0M+Wibtu7v6vq-ivv92t9Z+Va4Vjtbzk3AQwwjxN2pmJQ@mail.gmail.com>
References: <CAKaEYhK4oXH3hB7uS3=AEkA6r0VB5OYyTua+LOP18rq+rYajHg@mail.gmail.com>
	<52852C2D.9020103@gmail.com> <52853D8A.6010501@monetize.io>
	<CAJfRnm7w5dH5BwqnQX_APx53rhfBiUEbLP5RSU6o15rToOqAhw@mail.gmail.com>
	<CAJHLa0M+Wibtu7v6vq-ivv92t9Z+Va4Vjtbzk3AQwwjxN2pmJQ@mail.gmail.com>
Message-ID: <CALimQCVLF4UbbDFO1RxhWuutThF2o+p-8JJgtbqCCih-WWFAqQ@mail.gmail.com>

I fully support this (it's what I suggested over a year ago), but what it
comes down to is BitPay, Coinbase, Blockchain and Bitstamp getting
together, agreeing what they're going to use, and doing a little joint
customer education campaign around it. If there's community momentum around
"bits", great.

My only addition is that I think we should all stop trying to attach SI
prefixes to the currency unit. Name me another world currency that uses SI
prefixes. No one quotes amounts as 63 k$ or 3 M$. The accepted standard at
least in the US is <currency-symbol><amount><modifier>, i.e. $63k or $3M.
That may not be accepted form everywhere, but in any case it's an informal
format, not a formal one. The important point is there should be one base
unit that is not modified with SI prefixes. And I think the arguments are
strong for that unit being = 100 satoshi.

Ben




On Fri, May 2, 2014 at 12:17 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:

> <vendor hat: on>
>
> Related:
> http://blog.bitpay.com/2014/05/02/bitpay-bitcoin-and-where-to-put-that-decimal-point.html
>
> --
> Jeff Garzik
> Bitcoin core developer and open source evangelist
> BitPay, Inc.      https://bitpay.com/
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140502/3dded3a2/attachment.html>

From etotheipi at gmail.com  Sat May  3 01:13:55 2014
From: etotheipi at gmail.com (Alan Reiner)
Date: Fri, 02 May 2014 21:13:55 -0400
Subject: [Bitcoin-development] moving the default display to mbtc
In-Reply-To: <CALimQCVLF4UbbDFO1RxhWuutThF2o+p-8JJgtbqCCih-WWFAqQ@mail.gmail.com>
References: <CAKaEYhK4oXH3hB7uS3=AEkA6r0VB5OYyTua+LOP18rq+rYajHg@mail.gmail.com>	<52852C2D.9020103@gmail.com>
	<52853D8A.6010501@monetize.io>	<CAJfRnm7w5dH5BwqnQX_APx53rhfBiUEbLP5RSU6o15rToOqAhw@mail.gmail.com>	<CAJHLa0M+Wibtu7v6vq-ivv92t9Z+Va4Vjtbzk3AQwwjxN2pmJQ@mail.gmail.com>
	<CALimQCVLF4UbbDFO1RxhWuutThF2o+p-8JJgtbqCCih-WWFAqQ@mail.gmail.com>
Message-ID: <536442D3.50508@gmail.com>

I've been a strong supporter of the 1e-6 unit switch since the beginning
and ready to do whatever I can with Armory to help ease that
transition.  I'm happy to prioritize a release that updates the Armory
interface to make "bits" the default unit, when the time is right.  I
think it makes sense to get as many apps and services to upgrade nearly
simultaneously.

My plan is to have a popup on the first load of the new version that
briefly introduces the change, and mentions that they can go back to the
old way in the settings, but make them work to do it.  For the transient
period (6 months?) all input boxes will auto-update nearby labels with
the converted-to-BTC value as they type, so that they don't have to do
any math in their head.  Similarly, all displayed BTC values will show
both.  But the 1e-6 unit will always be default or first unless they
explicitly change it in the interface.




On 5/2/2014 8:54 PM, Ben Davenport wrote:
> I fully support this (it's what I suggested over a year ago), but what
> it comes down to is BitPay, Coinbase, Blockchain and Bitstamp getting
> together, agreeing what they're going to use, and doing a little joint
> customer education campaign around it. If there's community momentum
> around "bits", great.
>
> My only addition is that I think we should all stop trying to attach
> SI prefixes to the currency unit. Name me another world currency that
> uses SI prefixes. No one quotes amounts as 63 k$ or 3 M$. The accepted
> standard at least in the US is <currency-symbol><amount><modifier>,
> i.e. $63k or $3M. That may not be accepted form everywhere, but in any
> case it's an informal format, not a formal one. The important point is
> there should be one base unit that is not modified with SI prefixes.
> And I think the arguments are strong for that unit being = 100 satoshi.
>
> Ben
>
>
>
>
> On Fri, May 2, 2014 at 12:17 PM, Jeff Garzik <jgarzik at bitpay.com
> <mailto:jgarzik at bitpay.com>> wrote:
>
>     <vendor hat: on>
>
>     Related:
>     http://blog.bitpay.com/2014/05/02/bitpay-bitcoin-and-where-to-put-that-decimal-point.html
>
>     --
>     Jeff Garzik
>     Bitcoin core developer and open source evangelist
>     BitPay, Inc.      https://bitpay.com/
>
>     ------------------------------------------------------------------------------
>     "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>     Instantly run your Selenium tests across 300+ browser/OS combos.  Get
>     unparalleled scalability from the best Selenium testing platform
>     available.
>     Simple to use. Nothing to install. Get started now for free."
>     http://p.sf.net/sfu/SauceLabs
>     _______________________________________________
>     Bitcoin-development mailing list
>     Bitcoin-development at lists.sourceforge.net
>     <mailto:Bitcoin-development at lists.sourceforge.net>
>     https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get 
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140502/44cb1298/attachment.html>

From voisine at gmail.com  Sat May  3 01:50:15 2014
From: voisine at gmail.com (Aaron Voisine)
Date: Fri, 2 May 2014 18:50:15 -0700
Subject: [Bitcoin-development] moving the default display to mbtc
In-Reply-To: <536442D3.50508@gmail.com>
References: <CAKaEYhK4oXH3hB7uS3=AEkA6r0VB5OYyTua+LOP18rq+rYajHg@mail.gmail.com>
	<52852C2D.9020103@gmail.com> <52853D8A.6010501@monetize.io>
	<CAJfRnm7w5dH5BwqnQX_APx53rhfBiUEbLP5RSU6o15rToOqAhw@mail.gmail.com>
	<CAJHLa0M+Wibtu7v6vq-ivv92t9Z+Va4Vjtbzk3AQwwjxN2pmJQ@mail.gmail.com>
	<CALimQCVLF4UbbDFO1RxhWuutThF2o+p-8JJgtbqCCih-WWFAqQ@mail.gmail.com>
	<536442D3.50508@gmail.com>
Message-ID: <CACq0ZD59=WWWaZXMsjKj=Brv1aLkBgZEBEedx-u3_525GuOQCQ@mail.gmail.com>

It will also be important to chose the currency symbol for "bits" at the
same time. Lowercase stroke "b" I think is the obvious choice.
Unicode U+0180

Aaron

On Friday, May 2, 2014, Alan Reiner <etotheipi at gmail.com> wrote:

>  I've been a strong supporter of the 1e-6 unit switch since the beginning
> and ready to do whatever I can with Armory to help ease that transition.
> I'm happy to prioritize a release that updates the Armory interface to make
> "bits" the default unit, when the time is right.  I think it makes sense to
> get as many apps and services to upgrade nearly simultaneously.
>
> My plan is to have a popup on the first load of the new version that
> briefly introduces the change, and mentions that they can go back to the
> old way in the settings, but make them work to do it.  For the transient
> period (6 months?) all input boxes will auto-update nearby labels with the
> converted-to-BTC value as they type, so that they don't have to do any math
> in their head.  Similarly, all displayed BTC values will show both.  But
> the 1e-6 unit will always be default or first unless they explicitly change
> it in the interface.
>
>
>
>
> On 5/2/2014 8:54 PM, Ben Davenport wrote:
>
> I fully support this (it's what I suggested over a year ago), but what it
> comes down to is BitPay, Coinbase, Blockchain and Bitstamp getting
> together, agreeing what they're going to use, and doing a little joint
> customer education campaign around it. If there's community momentum around
> "bits", great.
>
>  My only addition is that I think we should all stop trying to attach SI
> prefixes to the currency unit. Name me another world currency that uses SI
> prefixes. No one quotes amounts as 63 k$ or 3 M$. The accepted standard at
> least in the US is <currency-symbol><amount><modifier>, i.e. $63k or $3M.
> That may not be accepted form everywhere, but in any case it's an informal
> format, not a formal one. The important point is there should be one base
> unit that is not modified with SI prefixes. And I think the arguments are
> strong for that unit being = 100 satoshi.
>
>  Ben
>
>
>
>
> On Fri, May 2, 2014 at 12:17 PM, Jeff Garzik <jgarzik at bitpay.com<javascript:_e(%7B%7D,'cvml','jgarzik at bitpay.com');>
> > wrote:
>
>> <vendor hat: on>
>>
>> Related:
>> http://blog.bitpay.com/2014/05/02/bitpay-bitcoin-and-where-to-put-that-decimal-point.html
>>
>> --
>> Jeff Garzik
>> Bitcoin core developer and open source evangelist
>> BitPay, Inc.      https://bitpay.com/
>>
>>
>> ------------------------------------------------------------------------------
>>  "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
>> unparalleled scalability from the best Selenium testing platform
>> available.
>> Simple to use. Nothing to install. Get started now for free."
>> http://p.sf.net/sfu/SauceLabs
>>  _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net<javascript:_e(%7B%7D,'cvml','Bitcoin-development at lists.sourceforge.net');>
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."http://p.sf.net/sfu/SauceLabs
>
>
>
> _______________________________________________
> Bitcoin-development mailing listBitcoin-development at lists.sourceforge.net <javascript:_e(%7B%7D,'cvml','Bitcoin-development at lists.sourceforge.net');>https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>

-- 
There's no trick to being a humorist when you have the whole government
working for you -- Will Rodgers
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140502/2e5065c9/attachment.html>

From gojomo at gmail.com  Sat May  3 02:06:11 2014
From: gojomo at gmail.com (Gordon Mohr)
Date: Fri, 02 May 2014 19:06:11 -0700
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CACq0ZD6EJnG4iwehfcFU-4AhBiNdtyf7eE9iGW8d6rv6327Eug@mail.gmail.com>
References: <CACq0ZD6EJnG4iwehfcFU-4AhBiNdtyf7eE9iGW8d6rv6327Eug@mail.gmail.com>
Message-ID: <53644F13.1080203@gmail.com>

[resend - apologies if duplicate]

Microbitcoin is a good-sized unit, workable for everyday transaction 
values, with room-to-grow, and a nice relationship to satoshis as 'cents'.

But "bits" has problems as a unit name.

"Bits" will be especially problematic whenever people try to graduate 
from informal use to understanding the system internals - that is, when 
the real "bits" of key sizes, hash sizes, and storage/bandwidth needs 
become important. The "bit" as "binary digit" was important enough that 
Satoshi named the system after it; that homage gets lost if the word is 
muddied with a new retconned meaning that's quite different.

Some examples of possible problems:

* If "bit" equals "100 satoshis", then the natural-language unpacking of 
"bit-coin" is "100 satoshi coin", which runs against all prior usage.

* If people are informed that a "256-bit private key" is what ultimately 
controls their balances, it could prompt confusion like, "if each key 
has 256-bits, will I need 40 keys to hold 10,000.00 bits?"

* When people learn that there are 8 bits to a byte, they may think, 
"OK, my wallet holding my 80,000.00 bits will then take up 10 kilobytes".

* When people naturally extend "bit" into "kilobits" to mean "1000 
bits", then the new coinage "kilobits" will mean the exact same amount 
(100,000 satoshi) as many have already been calling "millibits".

I believe it'd be best to pick a new made-up single-syllable word as a 
synonym for "microbitcoin", and I've laid out the case for "zib" as that 
word at <http://zibcoin.org>.

'Zib' also lends itself to an expressive unicode symbol, '?' 
(Z-with-stroke), that remains distinctive even if it loses its stroke or 
gets case-reversed. (Comparatively, all 'b'-derived symbols for 
data-bits, bitcoins, or '100 satoshi bits' risk collision in contexts 
where subtleties of casing/stroking are lost.)

(There's summary of more problems with "bit" in the zibcoin.org FAQ  at: 
<http://zibcoin.org/faq#why-not-bits-to-mean-microbitcoins>.)

- Gordon

On 5/1/14, 3:35 PM, Aaron Voisine wrote:
> I'm also a big fan of standardizing on microBTC as the standard unit.
> I didn't like the name "bits" at first, but the more I think about it,
> the more I like it. The main thing going for it is the fact that it's
> part of the name bitcoin. If Bitcoin is the protocol and network, bits
> are an obvious choice for the currency unit.
>
> I would like to propose using Unicode character U+0180, lowercase b
> with stroke, as the symbol to represent the microBTC denomination,
> whether we call bits or something else:
>   http://www.fileformat.info/info/unicode/char/0180/index.htm
>
> Another candidate is Unicode character U+2422, the blank symbol, but I
> prefer stroke b.
> http://www.fileformat.info/info/unicode/char/2422/index.htm
>
> Aaron
>
> There's no trick to being a humorist when you have the whole
> government working for you -- Will Rodgers
>
>> On Apr 21, 2014 5:41 AM, "Pieter Wuille" <pieter.wuille at gm...> wrote:
>>
>>> On Apr 21, 2014 3:37 AM, "Un Ix" <slashdevnull at ...> wrote:
>>>
>>> Something tells me this would be reduced to a single syllable in common
>>> usage I.e. bit.
>>
>> What units will be called colloquially is not something developers will
>> determine. It will vary, depend on language and culture, and is not
>> relevant to this discussion in my opinion.
>>
>> It may well be that people in some geographic or language area will end up
>> (or for a while) calling 1e-06 BTC "bits". That's fine, but using that as
>> "official" name in software would be very strange and potentially confusing
>> in my opinion. As mentioned by others, that would seem to me like calling
>> dollars "bucks" in bank software. Nobody seems to have a problem with
>> having colloquial names, but "US dollar" or "euro" are far less ambiguous
>> than "bit". I think we need a more distinctive name.
>>
>> --
>> Pieter
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From ematiu at gmail.com  Sat May  3 02:10:26 2014
From: ematiu at gmail.com (Matias Alejo Garcia)
Date: Fri, 2 May 2014 23:10:26 -0300
Subject: [Bitcoin-development] moving the default display to mbtc
In-Reply-To: <536442D3.50508@gmail.com>
References: <CAKaEYhK4oXH3hB7uS3=AEkA6r0VB5OYyTua+LOP18rq+rYajHg@mail.gmail.com>
	<52852C2D.9020103@gmail.com> <52853D8A.6010501@monetize.io>
	<CAJfRnm7w5dH5BwqnQX_APx53rhfBiUEbLP5RSU6o15rToOqAhw@mail.gmail.com>
	<CAJHLa0M+Wibtu7v6vq-ivv92t9Z+Va4Vjtbzk3AQwwjxN2pmJQ@mail.gmail.com>
	<CALimQCVLF4UbbDFO1RxhWuutThF2o+p-8JJgtbqCCih-WWFAqQ@mail.gmail.com>
	<536442D3.50508@gmail.com>
Message-ID: <CA+vKqYdzgwRCH3iUtoQyBu8g3r4fwir-2OY=SN9m2KbGojdoQA@mail.gmail.com>

I live in Argentina. Here, 1BTC is around half of a monthly average
wage (net), so, as you
can imagine, the value of 1 BTC is *very* inconvenient  for everyday
transactions.

 Also it presents an important entry barrier for new adopters: It would be
easier to accept buying thousands of "bits" than buying a tiny fraction
of a Bitcoin, for the same amount of pesos.

Changing to 1e-6 "bits" will solve both problems. Changing to 1e-6
"microbitcoins" will
solve the first one, but not sure about the second one. Buying (or
earning) mili or micro
something  isn't that sexy either.

Finally, against "micro" and in favor of "bits", micro is noted "?",
which is also
 inconvenient (I had to copy and paste it from an other site). Many
different notations will be used like:  ?BTC, uBTC,  "microBTC" and
even "mBTC".
Please prevent that.

These arguments also applies to many places in the  world (Argentina
is 40 out of 72 listed countries in
http://en.wikipedia.org/wiki/List_of_countries_by_average_wage).

mat?as




On Fri, May 2, 2014 at 10:13 PM, Alan Reiner <etotheipi at gmail.com> wrote:
> I've been a strong supporter of the 1e-6 unit switch since the beginning and
> ready to do whatever I can with Armory to help ease that transition.  I'm
> happy to prioritize a release that updates the Armory interface to make
> "bits" the default unit, when the time is right.  I think it makes sense to
> get as many apps and services to upgrade nearly simultaneously.
>
> My plan is to have a popup on the first load of the new version that briefly
> introduces the change, and mentions that they can go back to the old way in
> the settings, but make them work to do it.  For the transient period (6
> months?) all input boxes will auto-update nearby labels with the
> converted-to-BTC value as they type, so that they don't have to do any math
> in their head.  Similarly, all displayed BTC values will show both.  But the
> 1e-6 unit will always be default or first unless they explicitly change it
> in the interface.
>
>
>
>
>
> On 5/2/2014 8:54 PM, Ben Davenport wrote:
>
> I fully support this (it's what I suggested over a year ago), but what it
> comes down to is BitPay, Coinbase, Blockchain and Bitstamp getting together,
> agreeing what they're going to use, and doing a little joint customer
> education campaign around it. If there's community momentum around "bits",
> great.
>
> My only addition is that I think we should all stop trying to attach SI
> prefixes to the currency unit. Name me another world currency that uses SI
> prefixes. No one quotes amounts as 63 k$ or 3 M$. The accepted standard at
> least in the US is <currency-symbol><amount><modifier>, i.e. $63k or $3M.
> That may not be accepted form everywhere, but in any case it's an informal
> format, not a formal one. The important point is there should be one base
> unit that is not modified with SI prefixes. And I think the arguments are
> strong for that unit being = 100 satoshi.
>
> Ben
>
>
>
>
> On Fri, May 2, 2014 at 12:17 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:
>>
>> <vendor hat: on>
>>
>> Related:
>> http://blog.bitpay.com/2014/05/02/bitpay-bitcoin-and-where-to-put-that-decimal-point.html
>>
>> --
>> Jeff Garzik
>> Bitcoin core developer and open source evangelist
>> BitPay, Inc.      https://bitpay.com/
>>
>>
>> ------------------------------------------------------------------------------
>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
>> unparalleled scalability from the best Selenium testing platform
>> available.
>> Simple to use. Nothing to install. Get started now for free."
>> http://p.sf.net/sfu/SauceLabs
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
>
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



-- 
Mat?as Alejo Garcia
Skype/Twitter: @ematiu
Roads? Where we're going, we don't need roads!



From luke at dashjr.org  Sat May  3 02:38:10 2014
From: luke at dashjr.org (Luke Dashjr)
Date: Sat, 3 May 2014 02:38:10 +0000
Subject: [Bitcoin-development] moving the default display to mbtc
In-Reply-To: <CALimQCVLF4UbbDFO1RxhWuutThF2o+p-8JJgtbqCCih-WWFAqQ@mail.gmail.com>
References: <CAKaEYhK4oXH3hB7uS3=AEkA6r0VB5OYyTua+LOP18rq+rYajHg@mail.gmail.com>
	<CAJHLa0M+Wibtu7v6vq-ivv92t9Z+Va4Vjtbzk3AQwwjxN2pmJQ@mail.gmail.com>
	<CALimQCVLF4UbbDFO1RxhWuutThF2o+p-8JJgtbqCCih-WWFAqQ@mail.gmail.com>
Message-ID: <201405030238.11625.luke@dashjr.org>

On Saturday, May 03, 2014 12:54:37 AM Ben Davenport wrote:
> My only addition is that I think we should all stop trying to attach SI
> prefixes to the currency unit. Name me another world currency that uses SI
> prefixes. No one quotes amounts as 63 k$ or 3 M$. The accepted standard at
> least in the US is <currency-symbol><amount><modifier>, i.e. $63k or $3M.
> That may not be accepted form everywhere, but in any case it's an informal
> format, not a formal one. The important point is there should be one base
> unit that is not modified with SI prefixes. And I think the arguments are
> strong for that unit being = 100 satoshi.

Huh? Your examples demonstrate the *opposite* of your point. 'k' and 'M' *are* 
the SI prefixes. People *do* use 63k USD, $63k, and $3M. I'll be the first one 
to admit SI is terrible, but I don't understand your argument here.

Luke

P.S. Note that SI units haven't actually ever been adopted, except by force of 
law. "Name me ... that uses SI" is a silly thing to say, since virtually all 
naturally-or-freely-adopted units of any measure have been based on a number 
that factor to twos and threes (not fives, like decimal).



From bendavenport at gmail.com  Sat May  3 02:41:38 2014
From: bendavenport at gmail.com (Ben Davenport)
Date: Fri, 2 May 2014 19:41:38 -0700
Subject: [Bitcoin-development] moving the default display to mbtc
In-Reply-To: <201405030238.11625.luke@dashjr.org>
References: <CAKaEYhK4oXH3hB7uS3=AEkA6r0VB5OYyTua+LOP18rq+rYajHg@mail.gmail.com>
	<CAJHLa0M+Wibtu7v6vq-ivv92t9Z+Va4Vjtbzk3AQwwjxN2pmJQ@mail.gmail.com>
	<CALimQCVLF4UbbDFO1RxhWuutThF2o+p-8JJgtbqCCih-WWFAqQ@mail.gmail.com>
	<201405030238.11625.luke@dashjr.org>
Message-ID: <CALimQCXA7w4yZjwmGPEGGF2jLHFYVkXm-Qi-XbP_LsXkw4uX9w@mail.gmail.com>

Luke,

My point is that you never apply the prefixes to the currency unit itself.
We don't spend kilodollars or megadollars.

Ben


On Fri, May 2, 2014 at 7:38 PM, Luke Dashjr <luke at dashjr.org> wrote:

> On Saturday, May 03, 2014 12:54:37 AM Ben Davenport wrote:
> > My only addition is that I think we should all stop trying to attach SI
> > prefixes to the currency unit. Name me another world currency that uses
> SI
> > prefixes. No one quotes amounts as 63 k$ or 3 M$. The accepted standard
> at
> > least in the US is <currency-symbol><amount><modifier>, i.e. $63k or $3M.
> > That may not be accepted form everywhere, but in any case it's an
> informal
> > format, not a formal one. The important point is there should be one base
> > unit that is not modified with SI prefixes. And I think the arguments are
> > strong for that unit being = 100 satoshi.
>
> Huh? Your examples demonstrate the *opposite* of your point. 'k' and 'M'
> *are*
> the SI prefixes. People *do* use 63k USD, $63k, and $3M. I'll be the first
> one
> to admit SI is terrible, but I don't understand your argument here.
>
> Luke
>
> P.S. Note that SI units haven't actually ever been adopted, except by
> force of
> law. "Name me ... that uses SI" is a silly thing to say, since virtually
> all
> naturally-or-freely-adopted units of any measure have been based on a
> number
> that factor to twos and threes (not fives, like decimal).
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140502/391c75c7/attachment.html>

From pete at petertodd.org  Sat May  3 02:43:58 2014
From: pete at petertodd.org (Peter Todd)
Date: Fri, 02 May 2014 21:43:58 -0500
Subject: [Bitcoin-development] moving the default display to mbtc
In-Reply-To: <201405030238.11625.luke@dashjr.org>
References: <CAKaEYhK4oXH3hB7uS3=AEkA6r0VB5OYyTua+LOP18rq+rYajHg@mail.gmail.com>
	<CAJHLa0M+Wibtu7v6vq-ivv92t9Z+Va4Vjtbzk3AQwwjxN2pmJQ@mail.gmail.com>
	<CALimQCVLF4UbbDFO1RxhWuutThF2o+p-8JJgtbqCCih-WWFAqQ@mail.gmail.com>
	<201405030238.11625.luke@dashjr.org>
Message-ID: <dd8069d2-2f20-4a42-925b-e5067cb45cee@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256



>Huh? Your examples demonstrate the *opposite* of your point. 'k' and
>'M' *are*
>the SI prefixes. People *do* use 63k USD, $63k, and $3M.

Excellent point.

Also, I frequently hear statements referring to mili-bitcoins, mBTC, pronounced as "mili-bits" or "m-bits"; the term "bits" is very much already in use and not to refer to uBTC.
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCAA6BQJTZFfuMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhRSfB/434bom68YyzgW0rPek
wrkjBHtxK7BgrPvkpMsBpAIWQ+NbKZBNTIZfp78rbUlGdj+3mXc5e+QXSnKHJn6V
azUtn4PsvL/iNAIZ91vdMYKRvFkAPfS+XBxR0J3JiAzQb6dshyUm9X6UQyJHGs8O
EOS2sQ/c2ZY6hFVE5JfA3jH8ykQy36MNfehbT290kppkcRq24JAVLYz66444CHA1
iMHCfnlcR9hMUVQmzds4QLIPHLLjEqkMxJUe5yxFVeW0MFxu2sG3jfYcOwoqQbBY
N+hLHOKuH5mOm6mfJ3/IHVj2dM9jok+JKG0GytZA1kKGbh/KGIhxIxE/06dNakfW
QzfS
=666/
-----END PGP SIGNATURE-----




From slashdevnull at hotmail.com  Sat May  3 03:35:16 2014
From: slashdevnull at hotmail.com (Un Ix)
Date: Sat, 3 May 2014 11:35:16 +0800
Subject: [Bitcoin-development] moving the default display to mbtc
In-Reply-To: <201405030238.11625.luke@dashjr.org>
References: <CAKaEYhK4oXH3hB7uS3=AEkA6r0VB5OYyTua+LOP18rq+rYajHg@mail.gmail.com>
	<CAJHLa0M+Wibtu7v6vq-ivv92t9Z+Va4Vjtbzk3AQwwjxN2pmJQ@mail.gmail.com>
	<CALimQCVLF4UbbDFO1RxhWuutThF2o+p-8JJgtbqCCih-WWFAqQ@mail.gmail.com>
	<201405030238.11625.luke@dashjr.org>
Message-ID: <BLU402-EAS76D85D76EADEBF5C8965CAC6420@phx.gbl>

Think your example is not quite valid ...

People say or write $88M or $45k I.e. use SI prefix as a suffix, else it would be more, not less, clear on what amount is being referred to.

For me, "bits" are easy to say and one million as a factor is simple to understand.

M-bits, kilobits, millibits, etc are never going to be used by folk in everyday transactions, IMHO 

Gavin

> On 3/05/2014, at 10:40 am, "Luke Dashjr" <luke at dashjr.org> wrote:
> 
>> On Saturday, May 03, 2014 12:54:37 AM Ben Davenport wrote:
>> My only addition is that I think we should all stop trying to attach SI
>> prefixes to the currency unit. Name me another world currency that uses SI
>> prefixes. No one quotes amounts as 63 k$ or 3 M$. The accepted standard at
>> least in the US is <currency-symbol><amount><modifier>, i.e. $63k or $3M.
>> That may not be accepted form everywhere, but in any case it's an informal
>> format, not a formal one. The important point is there should be one base
>> unit that is not modified with SI prefixes. And I think the arguments are
>> strong for that unit being = 100 satoshi.
> 
> Huh? Your examples demonstrate the *opposite* of your point. 'k' and 'M' *are* 
> the SI prefixes. People *do* use 63k USD, $63k, and $3M. I'll be the first one 
> to admit SI is terrible, but I don't understand your argument here.
> 
> Luke
> 
> P.S. Note that SI units haven't actually ever been adopted, except by force of 
> law. "Name me ... that uses SI" is a silly thing to say, since virtually all 
> naturally-or-freely-adopted units of any measure have been based on a number 
> that factor to twos and threes (not fives, like decimal).
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get 
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From tamas at bitsofproof.com  Sat May  3 04:23:24 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Sat, 3 May 2014 06:23:24 +0200
Subject: [Bitcoin-development] moving the default display to mbtc
In-Reply-To: <CAJHLa0M+Wibtu7v6vq-ivv92t9Z+Va4Vjtbzk3AQwwjxN2pmJQ@mail.gmail.com>
References: <CAKaEYhK4oXH3hB7uS3=AEkA6r0VB5OYyTua+LOP18rq+rYajHg@mail.gmail.com>
	<52852C2D.9020103@gmail.com> <52853D8A.6010501@monetize.io>
	<CAJfRnm7w5dH5BwqnQX_APx53rhfBiUEbLP5RSU6o15rToOqAhw@mail.gmail.com>
	<CAJHLa0M+Wibtu7v6vq-ivv92t9Z+Va4Vjtbzk3AQwwjxN2pmJQ@mail.gmail.com>
Message-ID: <5056AC79-F277-49FC-9106-B9ED7894A024@bitsofproof.com>

Excellent move Jeff.

Best would now be to establish XBT as the ISO code for bits.

Regards,

Tamas Blummer
http://bitsofproof.com

On 02.05.2014, at 21:17, Jeff Garzik <jgarzik at bitpay.com> wrote:

> <vendor hat: on>
> 
> Related: http://blog.bitpay.com/2014/05/02/bitpay-bitcoin-and-where-to-put-that-decimal-point.html
> 
> -- 
> Jeff Garzik
> Bitcoin core developer and open source evangelist
> BitPay, Inc.      https://bitpay.com/
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get 
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140503/277f101e/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140503/277f101e/attachment.sig>

From voisine at gmail.com  Sat May  3 05:41:23 2014
From: voisine at gmail.com (Aaron Voisine)
Date: Fri, 2 May 2014 22:41:23 -0700
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <53644F13.1080203@gmail.com>
References: <CACq0ZD6EJnG4iwehfcFU-4AhBiNdtyf7eE9iGW8d6rv6327Eug@mail.gmail.com>
	<53644F13.1080203@gmail.com>
Message-ID: <CACq0ZD7s8tp8GvJhEhZx4T7xMpeZ+tz5HNKQK-p=f=R10NaCmA@mail.gmail.com>

I have to agree with Mike. Human language is surprisingly tolerant of
overloading and inference from context. Neurotypical people have no
problem with it and perceive a software engineer's aversion to it as
being pedantic and strange. Note that "bits" was a term for a unit of
money long before the invention of digital computers.

Aaron

There's no trick to being a humorist when you have the whole
government working for you -- Will Rodgers


On Fri, May 2, 2014 at 7:06 PM, Gordon Mohr <gojomo at gmail.com> wrote:
> [resend - apologies if duplicate]
>
> Microbitcoin is a good-sized unit, workable for everyday transaction
> values, with room-to-grow, and a nice relationship to satoshis as 'cents'.
>
> But "bits" has problems as a unit name.
>
> "Bits" will be especially problematic whenever people try to graduate
> from informal use to understanding the system internals - that is, when
> the real "bits" of key sizes, hash sizes, and storage/bandwidth needs
> become important. The "bit" as "binary digit" was important enough that
> Satoshi named the system after it; that homage gets lost if the word is
> muddied with a new retconned meaning that's quite different.
>
> Some examples of possible problems:
>
> * If "bit" equals "100 satoshis", then the natural-language unpacking of
> "bit-coin" is "100 satoshi coin", which runs against all prior usage.
>
> * If people are informed that a "256-bit private key" is what ultimately
> controls their balances, it could prompt confusion like, "if each key
> has 256-bits, will I need 40 keys to hold 10,000.00 bits?"
>
> * When people learn that there are 8 bits to a byte, they may think,
> "OK, my wallet holding my 80,000.00 bits will then take up 10 kilobytes".
>
> * When people naturally extend "bit" into "kilobits" to mean "1000
> bits", then the new coinage "kilobits" will mean the exact same amount
> (100,000 satoshi) as many have already been calling "millibits".
>
> I believe it'd be best to pick a new made-up single-syllable word as a
> synonym for "microbitcoin", and I've laid out the case for "zib" as that
> word at <http://zibcoin.org>.
>
> 'Zib' also lends itself to an expressive unicode symbol, '?'
> (Z-with-stroke), that remains distinctive even if it loses its stroke or
> gets case-reversed. (Comparatively, all 'b'-derived symbols for
> data-bits, bitcoins, or '100 satoshi bits' risk collision in contexts
> where subtleties of casing/stroking are lost.)
>
> (There's summary of more problems with "bit" in the zibcoin.org FAQ  at:
> <http://zibcoin.org/faq#why-not-bits-to-mean-microbitcoins>.)
>
> - Gordon
>
> On 5/1/14, 3:35 PM, Aaron Voisine wrote:
>> I'm also a big fan of standardizing on microBTC as the standard unit.
>> I didn't like the name "bits" at first, but the more I think about it,
>> the more I like it. The main thing going for it is the fact that it's
>> part of the name bitcoin. If Bitcoin is the protocol and network, bits
>> are an obvious choice for the currency unit.
>>
>> I would like to propose using Unicode character U+0180, lowercase b
>> with stroke, as the symbol to represent the microBTC denomination,
>> whether we call bits or something else:
>>   http://www.fileformat.info/info/unicode/char/0180/index.htm
>>
>> Another candidate is Unicode character U+2422, the blank symbol, but I
>> prefer stroke b.
>> http://www.fileformat.info/info/unicode/char/2422/index.htm
>>
>> Aaron
>>
>> There's no trick to being a humorist when you have the whole
>> government working for you -- Will Rodgers
>>
>>> On Apr 21, 2014 5:41 AM, "Pieter Wuille" <pieter.wuille at gm...> wrote:
>>>
>>>> On Apr 21, 2014 3:37 AM, "Un Ix" <slashdevnull at ...> wrote:
>>>>
>>>> Something tells me this would be reduced to a single syllable in common
>>>> usage I.e. bit.
>>>
>>> What units will be called colloquially is not something developers will
>>> determine. It will vary, depend on language and culture, and is not
>>> relevant to this discussion in my opinion.
>>>
>>> It may well be that people in some geographic or language area will end up
>>> (or for a while) calling 1e-06 BTC "bits". That's fine, but using that as
>>> "official" name in software would be very strange and potentially confusing
>>> in my opinion. As mentioned by others, that would seem to me like calling
>>> dollars "bucks" in bank software. Nobody seems to have a problem with
>>> having colloquial names, but "US dollar" or "euro" are far less ambiguous
>>> than "bit". I think we need a more distinctive name.
>>>
>>> --
>>> Pieter
>>
>> ------------------------------------------------------------------------------
>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
>> unparalleled scalability from the best Selenium testing platform available.
>> Simple to use. Nothing to install. Get started now for free."
>> http://p.sf.net/sfu/SauceLabs
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From roy at gnomon.org.uk  Sat May  3 12:32:45 2014
From: roy at gnomon.org.uk (Roy Badami)
Date: Sat, 3 May 2014 13:32:45 +0100
Subject: [Bitcoin-development] moving the default display to mbtc
In-Reply-To: <201405030238.11625.luke@dashjr.org>
References: <CAKaEYhK4oXH3hB7uS3=AEkA6r0VB5OYyTua+LOP18rq+rYajHg@mail.gmail.com>
	<CAJHLa0M+Wibtu7v6vq-ivv92t9Z+Va4Vjtbzk3AQwwjxN2pmJQ@mail.gmail.com>
	<CALimQCVLF4UbbDFO1RxhWuutThF2o+p-8JJgtbqCCih-WWFAqQ@mail.gmail.com>
	<201405030238.11625.luke@dashjr.org>
Message-ID: <20140503123244.GE62950@giles.gnomon.org.uk>

> the SI prefixes. People *do* use 63k USD, $63k, and $3M. I'll be the first one 

As a counter argument, many sources (including the BBC) abbreviate
million to 'm' (and billion to 'bn'), e.g. $3m, $3bn.

I think any similarity with SI units here is coincidental.

roy



From christophe.biocca at gmail.com  Sat May  3 15:48:06 2014
From: christophe.biocca at gmail.com (Christophe Biocca)
Date: Sat, 3 May 2014 11:48:06 -0400
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CACq0ZD7s8tp8GvJhEhZx4T7xMpeZ+tz5HNKQK-p=f=R10NaCmA@mail.gmail.com>
References: <CACq0ZD6EJnG4iwehfcFU-4AhBiNdtyf7eE9iGW8d6rv6327Eug@mail.gmail.com>
	<53644F13.1080203@gmail.com>
	<CACq0ZD7s8tp8GvJhEhZx4T7xMpeZ+tz5HNKQK-p=f=R10NaCmA@mail.gmail.com>
Message-ID: <CANOOu=9orMZH6fpTfkO8zgwPDmwpA8WW78EKwSTiw2GXn7UCxA@mail.gmail.com>

Context as a disambiguator works fine when the interlocutors
understand the topics they're talking about.
Not a day goes by without me seeing "neurotypical people" get horribly
confused between RAM and Hard Drive sizes, because they share the same
units (not that that can be helped, as the units are supposed to be
the same, base 1000 vs 1024 notwithstanding).

Bit (as a unit) is already really confusing for anyone who doesn't
deal with it on a regular basis. I think people who don't see an issue
are making an assumption based on their own lack of confusion. We
understand computer science AND Bitcoin. Most people have zero
understanding of either.

Bitcoin already has a ton of issues with terrible names for things:

- Mining (for transaction validation).
- Addresses (which are meant to be one-time use, and don't even really
exist at the network level).
- Wallets (which don't hold your bitcoins, can be copied, and all
backups can be stolen from equally).

I end up having to make the distinctions obvious every time I explain
Bitcoin to someone new to it. There's an acceptable tradeoff here,
because there were arguably no better words to assign to these
concepts (although I'd argue mining is a really awful metaphor, and is
the one that prompts the most questions from people). Then add to the
pile a bunch of third parties naming themselves after parts of the
protocol (Coinbase,Blockchain.info). Not blaming them for it, but I've
definitiely seen average people get confused between "the blockchain"
and "blockchain.info" (not so much Coinbase, because that name doesn't
come up in beginner explanations).

It seems downright masochistic to add
yet-another-word-that-doesn't-mean-what-you-think-it-means to the pile
for no reason other than aesthetics. Are we actively trying to confuse
people?

On Sat, May 3, 2014 at 1:41 AM, Aaron Voisine <voisine at gmail.com> wrote:
> I have to agree with Mike. Human language is surprisingly tolerant of
> overloading and inference from context. Neurotypical people have no
> problem with it and perceive a software engineer's aversion to it as
> being pedantic and strange. Note that "bits" was a term for a unit of
> money long before the invention of digital computers.
>
> Aaron
>
> There's no trick to being a humorist when you have the whole
> government working for you -- Will Rodgers
>
>
> On Fri, May 2, 2014 at 7:06 PM, Gordon Mohr <gojomo at gmail.com> wrote:
>> [resend - apologies if duplicate]
>>
>> Microbitcoin is a good-sized unit, workable for everyday transaction
>> values, with room-to-grow, and a nice relationship to satoshis as 'cents'.
>>
>> But "bits" has problems as a unit name.
>>
>> "Bits" will be especially problematic whenever people try to graduate
>> from informal use to understanding the system internals - that is, when
>> the real "bits" of key sizes, hash sizes, and storage/bandwidth needs
>> become important. The "bit" as "binary digit" was important enough that
>> Satoshi named the system after it; that homage gets lost if the word is
>> muddied with a new retconned meaning that's quite different.
>>
>> Some examples of possible problems:
>>
>> * If "bit" equals "100 satoshis", then the natural-language unpacking of
>> "bit-coin" is "100 satoshi coin", which runs against all prior usage.
>>
>> * If people are informed that a "256-bit private key" is what ultimately
>> controls their balances, it could prompt confusion like, "if each key
>> has 256-bits, will I need 40 keys to hold 10,000.00 bits?"
>>
>> * When people learn that there are 8 bits to a byte, they may think,
>> "OK, my wallet holding my 80,000.00 bits will then take up 10 kilobytes".
>>
>> * When people naturally extend "bit" into "kilobits" to mean "1000
>> bits", then the new coinage "kilobits" will mean the exact same amount
>> (100,000 satoshi) as many have already been calling "millibits".
>>
>> I believe it'd be best to pick a new made-up single-syllable word as a
>> synonym for "microbitcoin", and I've laid out the case for "zib" as that
>> word at <http://zibcoin.org>.
>>
>> 'Zib' also lends itself to an expressive unicode symbol, '?'
>> (Z-with-stroke), that remains distinctive even if it loses its stroke or
>> gets case-reversed. (Comparatively, all 'b'-derived symbols for
>> data-bits, bitcoins, or '100 satoshi bits' risk collision in contexts
>> where subtleties of casing/stroking are lost.)
>>
>> (There's summary of more problems with "bit" in the zibcoin.org FAQ  at:
>> <http://zibcoin.org/faq#why-not-bits-to-mean-microbitcoins>.)
>>
>> - Gordon
>>
>> On 5/1/14, 3:35 PM, Aaron Voisine wrote:
>>> I'm also a big fan of standardizing on microBTC as the standard unit.
>>> I didn't like the name "bits" at first, but the more I think about it,
>>> the more I like it. The main thing going for it is the fact that it's
>>> part of the name bitcoin. If Bitcoin is the protocol and network, bits
>>> are an obvious choice for the currency unit.
>>>
>>> I would like to propose using Unicode character U+0180, lowercase b
>>> with stroke, as the symbol to represent the microBTC denomination,
>>> whether we call bits or something else:
>>>   http://www.fileformat.info/info/unicode/char/0180/index.htm
>>>
>>> Another candidate is Unicode character U+2422, the blank symbol, but I
>>> prefer stroke b.
>>> http://www.fileformat.info/info/unicode/char/2422/index.htm
>>>
>>> Aaron
>>>
>>> There's no trick to being a humorist when you have the whole
>>> government working for you -- Will Rodgers
>>>
>>>> On Apr 21, 2014 5:41 AM, "Pieter Wuille" <pieter.wuille at gm...> wrote:
>>>>
>>>>> On Apr 21, 2014 3:37 AM, "Un Ix" <slashdevnull at ...> wrote:
>>>>>
>>>>> Something tells me this would be reduced to a single syllable in common
>>>>> usage I.e. bit.
>>>>
>>>> What units will be called colloquially is not something developers will
>>>> determine. It will vary, depend on language and culture, and is not
>>>> relevant to this discussion in my opinion.
>>>>
>>>> It may well be that people in some geographic or language area will end up
>>>> (or for a while) calling 1e-06 BTC "bits". That's fine, but using that as
>>>> "official" name in software would be very strange and potentially confusing
>>>> in my opinion. As mentioned by others, that would seem to me like calling
>>>> dollars "bucks" in bank software. Nobody seems to have a problem with
>>>> having colloquial names, but "US dollar" or "euro" are far less ambiguous
>>>> than "bit". I think we need a more distinctive name.
>>>>
>>>> --
>>>> Pieter
>>>
>>> ------------------------------------------------------------------------------
>>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
>>> unparalleled scalability from the best Selenium testing platform available.
>>> Simple to use. Nothing to install. Get started now for free."
>>> http://p.sf.net/sfu/SauceLabs
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>
>> ------------------------------------------------------------------------------
>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
>> unparalleled scalability from the best Selenium testing platform available.
>> Simple to use. Nothing to install. Get started now for free."
>> http://p.sf.net/sfu/SauceLabs
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From slush at centrum.cz  Sat May  3 16:02:27 2014
From: slush at centrum.cz (slush)
Date: Sat, 3 May 2014 18:02:27 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CANOOu=9orMZH6fpTfkO8zgwPDmwpA8WW78EKwSTiw2GXn7UCxA@mail.gmail.com>
References: <CACq0ZD6EJnG4iwehfcFU-4AhBiNdtyf7eE9iGW8d6rv6327Eug@mail.gmail.com>
	<53644F13.1080203@gmail.com>
	<CACq0ZD7s8tp8GvJhEhZx4T7xMpeZ+tz5HNKQK-p=f=R10NaCmA@mail.gmail.com>
	<CANOOu=9orMZH6fpTfkO8zgwPDmwpA8WW78EKwSTiw2GXn7UCxA@mail.gmail.com>
Message-ID: <CAJna-HiqBG1+iN+gMiM6F_nXCkJZyC78u9rF=hmdPZm_Yb7VJw@mail.gmail.com>

Excellent points Christophe!

Although moving to 1e-6 units is fine for me and I see advantages of doing
this, I don't get that people on this mailing list are fine with calling
such unit "bit". It's geeky as hell, ambiguous and confusing.

slush


On Sat, May 3, 2014 at 5:48 PM, Christophe Biocca <
christophe.biocca at gmail.com> wrote:

> Context as a disambiguator works fine when the interlocutors
> understand the topics they're talking about.
> Not a day goes by without me seeing "neurotypical people" get horribly
> confused between RAM and Hard Drive sizes, because they share the same
> units (not that that can be helped, as the units are supposed to be
> the same, base 1000 vs 1024 notwithstanding).
>
> Bit (as a unit) is already really confusing for anyone who doesn't
> deal with it on a regular basis. I think people who don't see an issue
> are making an assumption based on their own lack of confusion. We
> understand computer science AND Bitcoin. Most people have zero
> understanding of either.
>
> Bitcoin already has a ton of issues with terrible names for things:
>
> - Mining (for transaction validation).
> - Addresses (which are meant to be one-time use, and don't even really
> exist at the network level).
> - Wallets (which don't hold your bitcoins, can be copied, and all
> backups can be stolen from equally).
>
> I end up having to make the distinctions obvious every time I explain
> Bitcoin to someone new to it. There's an acceptable tradeoff here,
> because there were arguably no better words to assign to these
> concepts (although I'd argue mining is a really awful metaphor, and is
> the one that prompts the most questions from people). Then add to the
> pile a bunch of third parties naming themselves after parts of the
> protocol (Coinbase,Blockchain.info). Not blaming them for it, but I've
> definitiely seen average people get confused between "the blockchain"
> and "blockchain.info" (not so much Coinbase, because that name doesn't
> come up in beginner explanations).
>
> It seems downright masochistic to add
> yet-another-word-that-doesn't-mean-what-you-think-it-means to the pile
> for no reason other than aesthetics. Are we actively trying to confuse
> people?
>
> On Sat, May 3, 2014 at 1:41 AM, Aaron Voisine <voisine at gmail.com> wrote:
> > I have to agree with Mike. Human language is surprisingly tolerant of
> > overloading and inference from context. Neurotypical people have no
> > problem with it and perceive a software engineer's aversion to it as
> > being pedantic and strange. Note that "bits" was a term for a unit of
> > money long before the invention of digital computers.
> >
> > Aaron
> >
> > There's no trick to being a humorist when you have the whole
> > government working for you -- Will Rodgers
> >
> >
> > On Fri, May 2, 2014 at 7:06 PM, Gordon Mohr <gojomo at gmail.com> wrote:
> >> [resend - apologies if duplicate]
> >>
> >> Microbitcoin is a good-sized unit, workable for everyday transaction
> >> values, with room-to-grow, and a nice relationship to satoshis as
> 'cents'.
> >>
> >> But "bits" has problems as a unit name.
> >>
> >> "Bits" will be especially problematic whenever people try to graduate
> >> from informal use to understanding the system internals - that is, when
> >> the real "bits" of key sizes, hash sizes, and storage/bandwidth needs
> >> become important. The "bit" as "binary digit" was important enough that
> >> Satoshi named the system after it; that homage gets lost if the word is
> >> muddied with a new retconned meaning that's quite different.
> >>
> >> Some examples of possible problems:
> >>
> >> * If "bit" equals "100 satoshis", then the natural-language unpacking of
> >> "bit-coin" is "100 satoshi coin", which runs against all prior usage.
> >>
> >> * If people are informed that a "256-bit private key" is what ultimately
> >> controls their balances, it could prompt confusion like, "if each key
> >> has 256-bits, will I need 40 keys to hold 10,000.00 bits?"
> >>
> >> * When people learn that there are 8 bits to a byte, they may think,
> >> "OK, my wallet holding my 80,000.00 bits will then take up 10
> kilobytes".
> >>
> >> * When people naturally extend "bit" into "kilobits" to mean "1000
> >> bits", then the new coinage "kilobits" will mean the exact same amount
> >> (100,000 satoshi) as many have already been calling "millibits".
> >>
> >> I believe it'd be best to pick a new made-up single-syllable word as a
> >> synonym for "microbitcoin", and I've laid out the case for "zib" as that
> >> word at <http://zibcoin.org>.
> >>
> >> 'Zib' also lends itself to an expressive unicode symbol, '?'
> >> (Z-with-stroke), that remains distinctive even if it loses its stroke or
> >> gets case-reversed. (Comparatively, all 'b'-derived symbols for
> >> data-bits, bitcoins, or '100 satoshi bits' risk collision in contexts
> >> where subtleties of casing/stroking are lost.)
> >>
> >> (There's summary of more problems with "bit" in the zibcoin.org FAQ
>  at:
> >> <http://zibcoin.org/faq#why-not-bits-to-mean-microbitcoins>.)
> >>
> >> - Gordon
> >>
> >> On 5/1/14, 3:35 PM, Aaron Voisine wrote:
> >>> I'm also a big fan of standardizing on microBTC as the standard unit.
> >>> I didn't like the name "bits" at first, but the more I think about it,
> >>> the more I like it. The main thing going for it is the fact that it's
> >>> part of the name bitcoin. If Bitcoin is the protocol and network, bits
> >>> are an obvious choice for the currency unit.
> >>>
> >>> I would like to propose using Unicode character U+0180, lowercase b
> >>> with stroke, as the symbol to represent the microBTC denomination,
> >>> whether we call bits or something else:
> >>>   http://www.fileformat.info/info/unicode/char/0180/index.htm
> >>>
> >>> Another candidate is Unicode character U+2422, the blank symbol, but I
> >>> prefer stroke b.
> >>> http://www.fileformat.info/info/unicode/char/2422/index.htm
> >>>
> >>> Aaron
> >>>
> >>> There's no trick to being a humorist when you have the whole
> >>> government working for you -- Will Rodgers
> >>>
> >>>> On Apr 21, 2014 5:41 AM, "Pieter Wuille" <pieter.wuille at gm...> wrote:
> >>>>
> >>>>> On Apr 21, 2014 3:37 AM, "Un Ix" <slashdevnull at ...> wrote:
> >>>>>
> >>>>> Something tells me this would be reduced to a single syllable in
> common
> >>>>> usage I.e. bit.
> >>>>
> >>>> What units will be called colloquially is not something developers
> will
> >>>> determine. It will vary, depend on language and culture, and is not
> >>>> relevant to this discussion in my opinion.
> >>>>
> >>>> It may well be that people in some geographic or language area will
> end up
> >>>> (or for a while) calling 1e-06 BTC "bits". That's fine, but using
> that as
> >>>> "official" name in software would be very strange and potentially
> confusing
> >>>> in my opinion. As mentioned by others, that would seem to me like
> calling
> >>>> dollars "bucks" in bank software. Nobody seems to have a problem with
> >>>> having colloquial names, but "US dollar" or "euro" are far less
> ambiguous
> >>>> than "bit". I think we need a more distinctive name.
> >>>>
> >>>> --
> >>>> Pieter
> >>>
> >>>
> ------------------------------------------------------------------------------
> >>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> >>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> >>> unparalleled scalability from the best Selenium testing platform
> available.
> >>> Simple to use. Nothing to install. Get started now for free."
> >>> http://p.sf.net/sfu/SauceLabs
> >>> _______________________________________________
> >>> Bitcoin-development mailing list
> >>> Bitcoin-development at lists.sourceforge.net
> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >>>
> >>
> >>
> ------------------------------------------------------------------------------
> >> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> >> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> >> unparalleled scalability from the best Selenium testing platform
> available.
> >> Simple to use. Nothing to install. Get started now for free."
> >> http://p.sf.net/sfu/SauceLabs
> >> _______________________________________________
> >> Bitcoin-development mailing list
> >> Bitcoin-development at lists.sourceforge.net
> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
> >
> ------------------------------------------------------------------------------
> > "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> > Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> > unparalleled scalability from the best Selenium testing platform
> available.
> > Simple to use. Nothing to install. Get started now for free."
> > http://p.sf.net/sfu/SauceLabs
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140503/0822abf5/attachment.html>

From tamas at bitsofproof.com  Sat May  3 16:10:22 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Sat, 3 May 2014 18:10:22 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CAJna-HiqBG1+iN+gMiM6F_nXCkJZyC78u9rF=hmdPZm_Yb7VJw@mail.gmail.com>
References: <CACq0ZD6EJnG4iwehfcFU-4AhBiNdtyf7eE9iGW8d6rv6327Eug@mail.gmail.com>
	<53644F13.1080203@gmail.com>
	<CACq0ZD7s8tp8GvJhEhZx4T7xMpeZ+tz5HNKQK-p=f=R10NaCmA@mail.gmail.com>
	<CANOOu=9orMZH6fpTfkO8zgwPDmwpA8WW78EKwSTiw2GXn7UCxA@mail.gmail.com>
	<CAJna-HiqBG1+iN+gMiM6F_nXCkJZyC78u9rF=hmdPZm_Yb7VJw@mail.gmail.com>
Message-ID: <E2D270BC-F70E-41EA-8773-5332B229C1DB@bitsofproof.com>

bit has a lot of meanings to geeks, so what.

bit means for average people:
- something very small, that 100 satoshi is. 
- part of the name Bitcoin
- easy to get conversion 1 coin = 1 million bits = 1 Bitcoin

Regards,

Tamas Blummer
Founder, CEO
http://bitsofproof.com

On 03.05.2014, at 18:02, slush <slush at centrum.cz> wrote:

> Excellent points Christophe!
> 
> Although moving to 1e-6 units is fine for me and I see advantages of doing this, I don't get that people on this mailing list are fine with calling such unit "bit". It's geeky as hell, ambiguous and confusing. 
> 
> slush
> 
> 
> On Sat, May 3, 2014 at 5:48 PM, Christophe Biocca <christophe.biocca at gmail.com> wrote:
> Context as a disambiguator works fine when the interlocutors
> understand the topics they're talking about.
> Not a day goes by without me seeing "neurotypical people" get horribly
> confused between RAM and Hard Drive sizes, because they share the same
> units (not that that can be helped, as the units are supposed to be
> the same, base 1000 vs 1024 notwithstanding).
> 
> Bit (as a unit) is already really confusing for anyone who doesn't
> deal with it on a regular basis. I think people who don't see an issue
> are making an assumption based on their own lack of confusion. We
> understand computer science AND Bitcoin. Most people have zero
> understanding of either.
> 
> Bitcoin already has a ton of issues with terrible names for things:
> 
> - Mining (for transaction validation).
> - Addresses (which are meant to be one-time use, and don't even really
> exist at the network level).
> - Wallets (which don't hold your bitcoins, can be copied, and all
> backups can be stolen from equally).
> 
> I end up having to make the distinctions obvious every time I explain
> Bitcoin to someone new to it. There's an acceptable tradeoff here,
> because there were arguably no better words to assign to these
> concepts (although I'd argue mining is a really awful metaphor, and is
> the one that prompts the most questions from people). Then add to the
> pile a bunch of third parties naming themselves after parts of the
> protocol (Coinbase,Blockchain.info). Not blaming them for it, but I've
> definitiely seen average people get confused between "the blockchain"
> and "blockchain.info" (not so much Coinbase, because that name doesn't
> come up in beginner explanations).
> 
> It seems downright masochistic to add
> yet-another-word-that-doesn't-mean-what-you-think-it-means to the pile
> for no reason other than aesthetics. Are we actively trying to confuse
> people?
> 
> On Sat, May 3, 2014 at 1:41 AM, Aaron Voisine <voisine at gmail.com> wrote:
> > I have to agree with Mike. Human language is surprisingly tolerant of
> > overloading and inference from context. Neurotypical people have no
> > problem with it and perceive a software engineer's aversion to it as
> > being pedantic and strange. Note that "bits" was a term for a unit of
> > money long before the invention of digital computers.
> >
> > Aaron
> >
> > There's no trick to being a humorist when you have the whole
> > government working for you -- Will Rodgers
> >
> >
> > On Fri, May 2, 2014 at 7:06 PM, Gordon Mohr <gojomo at gmail.com> wrote:
> >> [resend - apologies if duplicate]
> >>
> >> Microbitcoin is a good-sized unit, workable for everyday transaction
> >> values, with room-to-grow, and a nice relationship to satoshis as 'cents'.
> >>
> >> But "bits" has problems as a unit name.
> >>
> >> "Bits" will be especially problematic whenever people try to graduate
> >> from informal use to understanding the system internals - that is, when
> >> the real "bits" of key sizes, hash sizes, and storage/bandwidth needs
> >> become important. The "bit" as "binary digit" was important enough that
> >> Satoshi named the system after it; that homage gets lost if the word is
> >> muddied with a new retconned meaning that's quite different.
> >>
> >> Some examples of possible problems:
> >>
> >> * If "bit" equals "100 satoshis", then the natural-language unpacking of
> >> "bit-coin" is "100 satoshi coin", which runs against all prior usage.
> >>
> >> * If people are informed that a "256-bit private key" is what ultimately
> >> controls their balances, it could prompt confusion like, "if each key
> >> has 256-bits, will I need 40 keys to hold 10,000.00 bits?"
> >>
> >> * When people learn that there are 8 bits to a byte, they may think,
> >> "OK, my wallet holding my 80,000.00 bits will then take up 10 kilobytes".
> >>
> >> * When people naturally extend "bit" into "kilobits" to mean "1000
> >> bits", then the new coinage "kilobits" will mean the exact same amount
> >> (100,000 satoshi) as many have already been calling "millibits".
> >>
> >> I believe it'd be best to pick a new made-up single-syllable word as a
> >> synonym for "microbitcoin", and I've laid out the case for "zib" as that
> >> word at <http://zibcoin.org>.
> >>
> >> 'Zib' also lends itself to an expressive unicode symbol, '?'
> >> (Z-with-stroke), that remains distinctive even if it loses its stroke or
> >> gets case-reversed. (Comparatively, all 'b'-derived symbols for
> >> data-bits, bitcoins, or '100 satoshi bits' risk collision in contexts
> >> where subtleties of casing/stroking are lost.)
> >>
> >> (There's summary of more problems with "bit" in the zibcoin.org FAQ  at:
> >> <http://zibcoin.org/faq#why-not-bits-to-mean-microbitcoins>.)
> >>
> >> - Gordon
> >>
> >> On 5/1/14, 3:35 PM, Aaron Voisine wrote:
> >>> I'm also a big fan of standardizing on microBTC as the standard unit.
> >>> I didn't like the name "bits" at first, but the more I think about it,
> >>> the more I like it. The main thing going for it is the fact that it's
> >>> part of the name bitcoin. If Bitcoin is the protocol and network, bits
> >>> are an obvious choice for the currency unit.
> >>>
> >>> I would like to propose using Unicode character U+0180, lowercase b
> >>> with stroke, as the symbol to represent the microBTC denomination,
> >>> whether we call bits or something else:
> >>>   http://www.fileformat.info/info/unicode/char/0180/index.htm
> >>>
> >>> Another candidate is Unicode character U+2422, the blank symbol, but I
> >>> prefer stroke b.
> >>> http://www.fileformat.info/info/unicode/char/2422/index.htm
> >>>
> >>> Aaron
> >>>
> >>> There's no trick to being a humorist when you have the whole
> >>> government working for you -- Will Rodgers
> >>>
> >>>> On Apr 21, 2014 5:41 AM, "Pieter Wuille" <pieter.wuille at gm...> wrote:
> >>>>
> >>>>> On Apr 21, 2014 3:37 AM, "Un Ix" <slashdevnull at ...> wrote:
> >>>>>
> >>>>> Something tells me this would be reduced to a single syllable in common
> >>>>> usage I.e. bit.
> >>>>
> >>>> What units will be called colloquially is not something developers will
> >>>> determine. It will vary, depend on language and culture, and is not
> >>>> relevant to this discussion in my opinion.
> >>>>
> >>>> It may well be that people in some geographic or language area will end up
> >>>> (or for a while) calling 1e-06 BTC "bits". That's fine, but using that as
> >>>> "official" name in software would be very strange and potentially confusing
> >>>> in my opinion. As mentioned by others, that would seem to me like calling
> >>>> dollars "bucks" in bank software. Nobody seems to have a problem with
> >>>> having colloquial names, but "US dollar" or "euro" are far less ambiguous
> >>>> than "bit". I think we need a more distinctive name.
> >>>>
> >>>> --
> >>>> Pieter
> >>>
> >>> ------------------------------------------------------------------------------
> >>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> >>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> >>> unparalleled scalability from the best Selenium testing platform available.
> >>> Simple to use. Nothing to install. Get started now for free."
> >>> http://p.sf.net/sfu/SauceLabs
> >>> _______________________________________________
> >>> Bitcoin-development mailing list
> >>> Bitcoin-development at lists.sourceforge.net
> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >>>
> >>
> >> ------------------------------------------------------------------------------
> >> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> >> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> >> unparalleled scalability from the best Selenium testing platform available.
> >> Simple to use. Nothing to install. Get started now for free."
> >> http://p.sf.net/sfu/SauceLabs
> >> _______________________________________________
> >> Bitcoin-development mailing list
> >> Bitcoin-development at lists.sourceforge.net
> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
> > ------------------------------------------------------------------------------
> > "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> > Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> > unparalleled scalability from the best Selenium testing platform available.
> > Simple to use. Nothing to install. Get started now for free."
> > http://p.sf.net/sfu/SauceLabs
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get 
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs_______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140503/b6c434e1/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140503/b6c434e1/attachment.sig>

From mcaldwell at swipeclock.com  Sat May  3 16:27:18 2014
From: mcaldwell at swipeclock.com (Mike Caldwell)
Date: Sat, 3 May 2014 12:27:18 -0400
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CANOOu=9orMZH6fpTfkO8zgwPDmwpA8WW78EKwSTiw2GXn7UCxA@mail.gmail.com>
References: <CACq0ZD6EJnG4iwehfcFU-4AhBiNdtyf7eE9iGW8d6rv6327Eug@mail.gmail.com>
	<53644F13.1080203@gmail.com>
	<CACq0ZD7s8tp8GvJhEhZx4T7xMpeZ+tz5HNKQK-p=f=R10NaCmA@mail.gmail.com>
	<CANOOu=9orMZH6fpTfkO8zgwPDmwpA8WW78EKwSTiw2GXn7UCxA@mail.gmail.com>
Message-ID: <A4150064-81C5-4B39-B696-B4F778531F3B@swipeclock.com>

I agree with the sentiment that most people don't understand either computer science or Bitcoin.  The goal of getting people to understand enough about Bitcoin to use it is achievable and a goal that is "in scope" of our efforts. Getting them to understand computer science at large at the same time, less so.

The fact that people routinely confuse RAM and hard drive sizes has much to do with the fact that the average lay person has little need to prioritize this as something to keep in the forefront.  They don't get "horribly" confused, they just simply don't get worked up over what looks to them like a rounding error, much to the dismay of anyone who believes that everyone should be an expert at computer science.  The average joe may assess (accurately from his perspective) that the distinction isn't important enough to merit significant mental resources and he is justified in not expending them that way even if someone else thinks he should.

Poor understanding is precisely what a proper effort to name this would be to avoid.  It is not frill or aesthetics, it is a planned targeting of language to achieve the clearest communication to the widest possible target audience using the language most likely to be understood by them in light of our objectives.  It's marketing. 

Mike

Sent from my iPhone

> On May 3, 2014, at 9:49 AM, "Christophe Biocca" <christophe.biocca at gmail.com> wrote:
> 
> Context as a disambiguator works fine when the interlocutors
> understand the topics they're talking about.
> Not a day goes by without me seeing "neurotypical people" get horribly
> confused between RAM and Hard Drive sizes, because they share the same
> units (not that that can be helped, as the units are supposed to be
> the same, base 1000 vs 1024 notwithstanding).
> 
> Bit (as a unit) is already really confusing for anyone who doesn't
> deal with it on a regular basis. I think people who don't see an issue
> are making an assumption based on their own lack of confusion. We
> understand computer science AND Bitcoin. Most people have zero
> understanding of either.
> 
> Bitcoin already has a ton of issues with terrible names for things:
> 
> - Mining (for transaction validation).
> - Addresses (which are meant to be one-time use, and don't even really
> exist at the network level).
> - Wallets (which don't hold your bitcoins, can be copied, and all
> backups can be stolen from equally).
> 
> I end up having to make the distinctions obvious every time I explain
> Bitcoin to someone new to it. There's an acceptable tradeoff here,
> because there were arguably no better words to assign to these
> concepts (although I'd argue mining is a really awful metaphor, and is
> the one that prompts the most questions from people). Then add to the
> pile a bunch of third parties naming themselves after parts of the
> protocol (Coinbase,Blockchain.info). Not blaming them for it, but I've
> definitiely seen average people get confused between "the blockchain"
> and "blockchain.info" (not so much Coinbase, because that name doesn't
> come up in beginner explanations).
> 
> It seems downright masochistic to add
> yet-another-word-that-doesn't-mean-what-you-think-it-means to the pile
> for no reason other than aesthetics. Are we actively trying to confuse
> people?



From flavien.charlon at coinprism.com  Sat May  3 18:04:52 2014
From: flavien.charlon at coinprism.com (Flavien Charlon)
Date: Sat, 3 May 2014 19:04:52 +0100
Subject: [Bitcoin-development] Bug with handing of OP_RETURN?
Message-ID: <CABbpET-uDQRFQ_XAFeWkgc=A1jEW62Q+8BTZZuW5UbZXX0y+HQ@mail.gmail.com>

Can someone enlighten me on why the following transaction is being rejected
by Bitcoind 0.9.1 with error code -22 on Mainnet.

01000000015594a8c1f84b926e84d70c3a3d5e517e0c12dc07cb1a774b587121fef08f91b8000000006b48304502202f534407f6dee4d8932ec22491cbc15a2d31af2bade4e8d417e4b1955de57f5902210086e2f0210c16ffff9b85074429b1b1c2f32e19509d7ed19f7804ab7212bd183a012102add59262e234c0045d1f6a3d40a144b47ea0b4214916f55fb6029a079cc0b3cbffffffff0358020000000000001976a9140f763005e063382f8f4138f75cdc64d14f8ec16f88ac00000000000000000a6a054f4101000102753d60860000000000001976a9140f763005e063382f8f4138f75cdc64d14f8ec16f88ac00000000


Debug.log shows the following:

ERROR: AcceptToMemoryPool : nonstandard transaction: scriptpubkey


Here is the decoded transaction:

{
>    "lock_time":0,
>    "inputs":[
>       {
>          "prev_out":{
>             "index":0,
>
> "hash":"b8918ff0fe2171584b771acb07dc120c7e515e3d3a0cd7846e924bf8c1a89455"
>          },
>
> "script":"48304502202f534407f6dee4d8932ec22491cbc15a2d31af2bade4e8d417e4b1955de57f5902210086e2f0210c16ffff9b85074429b1b1c2f32e19509d7ed19f7804ab7212bd183a012102add59262e234c0045d1f6a3d40a144b47ea0b4214916f55fb6029a079cc0b3cb"
>       }
>    ],
>    "vout_sz":3,
>
> "hash":"44130e812fa15f411c6accb739082eb81ecf074470cefb8e617ecf105690f6e1",
>    "vin_sz":1,
>    "out":[
>       {
>          "address":"12QkihKUyE1hAkv7wmaMj6V3QiN8FfMvpv",
>          "script_string":"OP_DUP OP_HASH160
> 0f763005e063382f8f4138f75cdc64d14f8ec16f OP_EQUALVERIFY OP_CHECKSIG",
>          "value":600,
>          "script":"76a9140f763005e063382f8f4138f75cdc64d14f8ec16f88ac"
>       },
>       {
>          "script_string":"OP_RETURN 4f41010001 753d",
>          "value":0,
>          "script":"6a054f4101000102753d"
>       },
>       {
>          "address":"12QkihKUyE1hAkv7wmaMj6V3QiN8FfMvpv",
>          "script_string":"OP_DUP OP_HASH160
> 0f763005e063382f8f4138f75cdc64d14f8ec16f OP_EQUALVERIFY OP_CHECKSIG",
>          "value":34400,
>          "script":"76a9140f763005e063382f8f4138f75cdc64d14f8ec16f88ac"
>       }
>    ],
>    "size":245,
>    "version":1
> }
>

Outputs are above dust, inputs are not spent. OP_RETURN is supposed to be
standard in 0.9.1 and the data is well below 40 bytes, so why is this being
rejected?

Thanks,
Flavien
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140503/e33b8a5a/attachment.html>

From pete at petertodd.org  Sat May  3 18:39:40 2014
From: pete at petertodd.org (Peter Todd)
Date: Sat, 03 May 2014 13:39:40 -0500
Subject: [Bitcoin-development] Bug with handing of OP_RETURN?
In-Reply-To: <CABbpET-uDQRFQ_XAFeWkgc=A1jEW62Q+8BTZZuW5UbZXX0y+HQ@mail.gmail.com>
References: <CABbpET-uDQRFQ_XAFeWkgc=A1jEW62Q+8BTZZuW5UbZXX0y+HQ@mail.gmail.com>
Message-ID: <218332ea-948d-4af0-b4c5-ced83f25d734@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

The standard format ended up being exactly:

    OP_RETURN <0 to 40-byte PUSHDATA>

You've split the data across two PUSHDATA's. The standard should have let the data be split up like that; pull requests accepted.

On 3 May 2014 13:04:52 GMT-05:00, Flavien Charlon <flavien.charlon at coinprism.com> wrote:
>Can someone enlighten me on why the following transaction is being
>rejected
>by Bitcoind 0.9.1 with error code -22 on Mainnet.
>
>01000000015594a8c1f84b926e84d70c3a3d5e517e0c12dc07cb1a774b587121fef08f91b8000000006b48304502202f534407f6dee4d8932ec22491cbc15a2d31af2bade4e8d417e4b1955de57f5902210086e2f0210c16ffff9b85074429b1b1c2f32e19509d7ed19f7804ab7212bd183a012102add59262e234c0045d1f6a3d40a144b47ea0b4214916f55fb6029a079cc0b3cbffffffff0358020000000000001976a9140f763005e063382f8f4138f75cdc64d14f8ec16f88ac00000000000000000a6a054f4101000102753d60860000000000001976a9140f763005e063382f8f4138f75cdc64d14f8ec16f88ac00000000
>
>
>Debug.log shows the following:
>
>ERROR: AcceptToMemoryPool : nonstandard transaction: scriptpubkey
>
>
>Here is the decoded transaction:
>
>{
>>    "lock_time":0,
>>    "inputs":[
>>       {
>>          "prev_out":{
>>             "index":0,
>>
>>
>"hash":"b8918ff0fe2171584b771acb07dc120c7e515e3d3a0cd7846e924bf8c1a89455"
>>          },
>>
>>
>"script":"48304502202f534407f6dee4d8932ec22491cbc15a2d31af2bade4e8d417e4b1955de57f5902210086e2f0210c16ffff9b85074429b1b1c2f32e19509d7ed19f7804ab7212bd183a012102add59262e234c0045d1f6a3d40a144b47ea0b4214916f55fb6029a079cc0b3cb"
>>       }
>>    ],
>>    "vout_sz":3,
>>
>>
>"hash":"44130e812fa15f411c6accb739082eb81ecf074470cefb8e617ecf105690f6e1",
>>    "vin_sz":1,
>>    "out":[
>>       {
>>          "address":"12QkihKUyE1hAkv7wmaMj6V3QiN8FfMvpv",
>>          "script_string":"OP_DUP OP_HASH160
>> 0f763005e063382f8f4138f75cdc64d14f8ec16f OP_EQUALVERIFY OP_CHECKSIG",
>>          "value":600,
>>
>"script":"76a9140f763005e063382f8f4138f75cdc64d14f8ec16f88ac"
>>       },
>>       {
>>          "script_string":"OP_RETURN 4f41010001 753d",
>>          "value":0,
>>          "script":"6a054f4101000102753d"
>>       },
>>       {
>>          "address":"12QkihKUyE1hAkv7wmaMj6V3QiN8FfMvpv",
>>          "script_string":"OP_DUP OP_HASH160
>> 0f763005e063382f8f4138f75cdc64d14f8ec16f OP_EQUALVERIFY OP_CHECKSIG",
>>          "value":34400,
>>
>"script":"76a9140f763005e063382f8f4138f75cdc64d14f8ec16f88ac"
>>       }
>>    ],
>>    "size":245,
>>    "version":1
>> }
>>
>
>Outputs are above dust, inputs are not spent. OP_RETURN is supposed to
>be
>standard in 0.9.1 and the data is well below 40 bytes, so why is this
>being
>rejected?
>
>Thanks,
>Flavien
>
>
>------------------------------------------------------------------------
>
>------------------------------------------------------------------------------
>"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>Instantly run your Selenium tests across 300+ browser/OS combos.  Get
>unparalleled scalability from the best Selenium testing platform
>available.
>Simple to use. Nothing to install. Get started now for free."
>http://p.sf.net/sfu/SauceLabs
>
>------------------------------------------------------------------------
>
>_______________________________________________
>Bitcoin-development mailing list
>Bitcoin-development at lists.sourceforge.net
>https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCAA6BQJTZTfsMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhQHmCADIcIs8w0FCDslGpbg1
audI1fAg/XnZ2J/862egYLtV2P0ooQnQz6g4kA0YIQGJI5tqyr9NEB6q/FVeKT61
3ecs3YsRtUkXmum6Wnq7QUGjvyMQo5nwLx2b3kDYEvb9v+aAKoBNKdz1xmp7jxE3
6bCx9eBeRBmhDWp1Xrr3VQI7KEUx4BfUxaLioYnCvaSuPsU+QQfXPFc+9ypRRclc
ymAj0VRGRPe2LQMNjerG4DMH8MRd5LOXjUxYV3XO3LyKSKvM18Lte+16w/uU3uBV
msIMbWEgm/DXI5fLWL7MFuLIsFrPs9BzjZSSZA7zQvntLtlQWCMnGeXsozjK14ol
lUl8
=0kuQ
-----END PGP SIGNATURE-----




From s9jafroe at stud.uni-saarland.de  Sat May  3 18:46:37 2014
From: s9jafroe at stud.uni-saarland.de (Jannis Froese)
Date: Sat, 03 May 2014 20:46:37 +0200
Subject: [Bitcoin-development] moving the default display to mbtc
In-Reply-To: <536537E2.1060200@stud.uni-saarland.de>
References: <536537E2.1060200@stud.uni-saarland.de>
Message-ID: <5365398D.1090703@stud.uni-saarland.de>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On 03.05.2014 02:54, Ben Davenport wrote:
> No one quotes amounts as 63 k$ or 3 M$. The accepted standard at 
> least in the US is <currency-symbol><amount><modifier>, i.e. $63k 
> or $3M.

As you said, that's in the US, and I strongly suspect the sole reason
is that in the US the currency symbol is written in front of the
amount. I often pronounce $10k as ten kilodollar, using it exactly
like a SI-prefix.

The much better argument against SI prefixes is that the prefixes for
values less than 1 tend to be much less well known: Most people know
that kilo means 1000, many know that mega means 1,000,000, but few
know that micro means 0.0000001, and those that do tend to confuse
micro and nano.

Jannis
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (MingW32)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQIbBAEBAgAGBQJTZTmNAAoJEBrvn3PsoRcmrzYP9R0cch42wV+I21MNVbWEEhfw
GjuCqE2Vz7QtI4nhRZ0Eas+MOY6iZD1c2A7cr4BjWx+MdQQwJSMKg/UKruE3j9xs
4QAFQtjvQ69Yd5ztq3ISWM/DpGfPXRvRdIf02ldz0Sf4HMxvqHCcYov3/laOrFnF
3ECpd+JLrU/Wq/HWwuFFXbfyQnpn+9LHx5gcfhV/pW7PwAjwzeaKhY1neQRHhQWq
pD8iv2dikqs30nO6bhnrCv/u0N+2iwV4e+J0E+kpBwrCZLeG8MirRRdnLruJ5mnT
nGyRNdfPKl5n0Gm4AFkBC3a4VIYwOxAzxdfA55Hn27yxll0GFEQNqR9OCNblGUbQ
RWa3Nywa22aYHOTi7evmuP6dVFjF4T8dl8LzDBmeawBsbOeHAUYJgLoHezdwEoto
Dt01ML4CmCINnPIFiuab17gpUYg7OXKomOQPrdyaVnP2abgvQCV5bYhMnKKVa25U
mW5PK02stxKcTEyHBsz0BG8zmdx5+7A5ySaUHrXs+l3YNBp3idlDUeYIsEBKFAtR
vNEGLbV2ZvteOb+tflxuPSjgIaMHD9w6vX2l7+VgkRTms743s/wbQuLb2fXq7osM
zws5D/L74zG1ZwsNM04Ygs2GJoJhkb1QXxY9EuoIeiuK3nVeJEWeRGHBEmqCXOPx
FB/2U/d69fUTbvUzOXA=
=Qo8z
-----END PGP SIGNATURE-----



From mark at monetize.io  Sat May  3 18:55:12 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Sat, 03 May 2014 11:55:12 -0700
Subject: [Bitcoin-development] Bug with handing of OP_RETURN?
In-Reply-To: <218332ea-948d-4af0-b4c5-ced83f25d734@email.android.com>
References: <CABbpET-uDQRFQ_XAFeWkgc=A1jEW62Q+8BTZZuW5UbZXX0y+HQ@mail.gmail.com>
	<218332ea-948d-4af0-b4c5-ced83f25d734@email.android.com>
Message-ID: <53653B90.4070401@monetize.io>

I don't think such a pull request would be accepted. The point was to
minimize impact to the block chain. Each extras txout adds 9 bytes
minimum, with zero benefit over serializing the data together in a
single OP_RETURN.

On 05/03/2014 11:39 AM, Peter Todd wrote:
> The standard format ended up being exactly:
> 
>     OP_RETURN <0 to 40-byte PUSHDATA>
> 
> You've split the data across two PUSHDATA's. The standard should have let the data be split up like that; pull requests accepted.
> 



From gmaxwell at gmail.com  Sat May  3 19:08:33 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sat, 3 May 2014 12:08:33 -0700
Subject: [Bitcoin-development] Bug with handing of OP_RETURN?
In-Reply-To: <53653B90.4070401@monetize.io>
References: <CABbpET-uDQRFQ_XAFeWkgc=A1jEW62Q+8BTZZuW5UbZXX0y+HQ@mail.gmail.com>
	<218332ea-948d-4af0-b4c5-ced83f25d734@email.android.com>
	<53653B90.4070401@monetize.io>
Message-ID: <CAAS2fgS61rxB3x4ii68XTHC-V_jpfng-Px6Tv9GV20-putiLUQ@mail.gmail.com>

On Sat, May 3, 2014 at 11:55 AM, Mark Friedenbach <mark at monetize.io> wrote:
> I don't think such a pull request would be accepted. The point was to
> minimize impact to the block chain. Each extras txout adds 9 bytes
> minimum, with zero benefit over serializing the data together in a
> single OP_RETURN.

In this case it's not a question extra txouts, its a question of
additional pushes. Assuming you didn't get the push overhead for free,
the only issue I see with that off the cuff is extra complexity in the
IsStandard rule... but really, why?  Your application already needs to
define the meaning of the data? what point is there in making your
hash commitment less uniform with the rest of the network?



From mark at monetize.io  Sat May  3 19:15:35 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Sat, 03 May 2014 12:15:35 -0700
Subject: [Bitcoin-development] Bug with handing of OP_RETURN?
In-Reply-To: <CAAS2fgS61rxB3x4ii68XTHC-V_jpfng-Px6Tv9GV20-putiLUQ@mail.gmail.com>
References: <CABbpET-uDQRFQ_XAFeWkgc=A1jEW62Q+8BTZZuW5UbZXX0y+HQ@mail.gmail.com>	<218332ea-948d-4af0-b4c5-ced83f25d734@email.android.com>	<53653B90.4070401@monetize.io>
	<CAAS2fgS61rxB3x4ii68XTHC-V_jpfng-Px6Tv9GV20-putiLUQ@mail.gmail.com>
Message-ID: <53654057.1080105@monetize.io>

Is it more complex? The current implementation using template matching
seems more complex than `if script.vch[0] == OP_RETURN &&
script.vch.size() < 42`

On 05/03/2014 12:08 PM, Gregory Maxwell wrote:
> On Sat, May 3, 2014 at 11:55 AM, Mark Friedenbach <mark at monetize.io> wrote:
>> I don't think such a pull request would be accepted. The point was to
>> minimize impact to the block chain. Each extras txout adds 9 bytes
>> minimum, with zero benefit over serializing the data together in a
>> single OP_RETURN.
> 
> In this case it's not a question extra txouts, its a question of
> additional pushes. Assuming you didn't get the push overhead for free,
> the only issue I see with that off the cuff is extra complexity in the
> IsStandard rule... but really, why?  Your application already needs to
> define the meaning of the data? what point is there in making your
> hash commitment less uniform with the rest of the network?
> 



From tomh at thinlink.com  Sun May  4 00:29:00 2014
From: tomh at thinlink.com (Tom Harding)
Date: Sat, 03 May 2014 17:29:00 -0700
Subject: [Bitcoin-development] A statistical consensus rule for reducing
	0-conf double-spend risk
Message-ID: <536589CC.8080005@thinlink.com>

This idea was suggested by "Joe" on 2011-02-14 
https://bitcointalk.org/index.php?topic=3441.msg48484#msg48484 .  It 
deserves another look.

Nodes today make a judgment regarding which of several conflicting 
spends to accept, and which is a double-spend.  But there is no 
incorporation of these collective judgments into the blockchain.  So 
today, it's the wild west, right up until the next block.  To address this:

  - Using its own clock, node associates a timestamp with every 
transaction upon first seeing its tx hash (at inv, in a block, or when 
created)
  - Node relays respend attempts (subject to anti-DOS rules, see github 
PR #3883)
  - Eventually, node adds a consensus rule:
     Do not accept blocks containing a transaction tx2 where
         - tx2 respends an output spent by another locally accepted 
transaction tx1, and
         - timestamp(tx2) - timestamp(tx1) > T

What is T?

According to http://bitcoinstats.com/network/propagation/ recent tx 
propagation has a median of 1.3 seconds.  If double-spender introduces 
both transactions from the same node, assuming propagation times 
distributed exponentially with median 1.3 seconds, the above consensus 
rule with reject threshold T = 7.4 seconds would result in 
mis-identification of the second-spend by less than 1% of nodes.*

If tx1 and tx2 are introduced in mutually time-distant parts of the 
network, a population of nodes in between would be able to accept either 
transaction, as they can today.  But the attacker still has to introduce 
them at close to the same time, or the majority of the network will 
confirm the one introduced earlier.

Merchant is watching also, and these dynamics mean he will not have to 
watch for very long to gain confidence if he was going to get 
double-spent, he would have learned it by now.  The consensus rule also 
makes mining a never-broadcast double-spend quite difficult, because the 
network assigns it very late timestamps.  Miner has to get lucky and 
find the block very quickly.  In other words, it converges to a Finney 
attack.

This would be the first consensus rule that anticipated less than 100% 
agreement.  But the parameters could be chosen so that it was still 
extremely conservative.  Joe also suggested a fail-safe condition: drop 
this rule if block has 6 confirmations, to prevent a fork in unusual 
network circumstances.

We can't move toward this, or any, solution without more data. Today, 
the network is not transparent to double-spend attempts, so we mostly 
have to guess what the quantitative effects would be.  The first step is 
to share the data broadly by relaying first double-spend attempts as in 
github PR #3883.


*Calcs:
For Exp(lambda), median ln(2)/lambda = 1.3 ==> lambda = .533
Laplace(0,1/lambda) < .01 ==> T = 7.34 seconds




From ctpacia at gmail.com  Sun May  4 01:04:52 2014
From: ctpacia at gmail.com (Chris Pacia)
Date: Sat, 03 May 2014 21:04:52 -0400
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <A4150064-81C5-4B39-B696-B4F778531F3B@swipeclock.com>
References: <CACq0ZD6EJnG4iwehfcFU-4AhBiNdtyf7eE9iGW8d6rv6327Eug@mail.gmail.com>	<53644F13.1080203@gmail.com>	<CACq0ZD7s8tp8GvJhEhZx4T7xMpeZ+tz5HNKQK-p=f=R10NaCmA@mail.gmail.com>	<CANOOu=9orMZH6fpTfkO8zgwPDmwpA8WW78EKwSTiw2GXn7UCxA@mail.gmail.com>
	<A4150064-81C5-4B39-B696-B4F778531F3B@swipeclock.com>
Message-ID: <53659234.3020207@gmail.com>

Absent a concerted effort to move to something else other than 'bits', I
would be willing to bet the nomenclature moves in that direction anyway.
'Bits' is just a shorten word for 'millibits' (or microbits, if you
will). It's easier to say and my guess is people would tend to use it
naturally own their own. Kind of like 'bucks' for dollars.

The other synergies are:
-bit is part of the word Bitcoin. The currency unit bit is part of a
whole bitcoin.
-bit symbolically represents the tech nature of the bitcoin.
-bit used to be a unit of money way back when. This largely reclaims it.
-when used as money bit when in references to a precession metal coin.
The name 'bitcoin' references that as well as the mimicking of the gold
standard in the protocol rules.

All around I don't think there is a better fit. I doubt people will get
confused by it. The context it's used in will distinguish it from other
uses of the word.

On 05/03/2014 12:27 PM, Mike Caldwell wrote:
> I agree with the sentiment that most people don't understand either computer science or Bitcoin.  The goal of getting people to understand enough about Bitcoin to use it is achievable and a goal that is "in scope" of our efforts. Getting them to understand computer science at large at the same time, less so.
>
> The fact that people routinely confuse RAM and hard drive sizes has much to do with the fact that the average lay person has little need to prioritize this as something to keep in the forefront.  They don't get "horribly" confused, they just simply don't get worked up over what looks to them like a rounding error, much to the dismay of anyone who believes that everyone should be an expert at computer science.  The average joe may assess (accurately from his perspective) that the distinction isn't important enough to merit significant mental resources and he is justified in not expending them that way even if someone else thinks he should.
>
> Poor understanding is precisely what a proper effort to name this would be to avoid.  It is not frill or aesthetics, it is a planned targeting of language to achieve the clearest communication to the widest possible target audience using the language most likely to be understood by them in light of our objectives.  It's marketing. 
>
> Mike
>
> Sent from my iPhone
>
>> On May 3, 2014, at 9:49 AM, "Christophe Biocca" <christophe.biocca at gmail.com> wrote:
>>
>> Context as a disambiguator works fine when the interlocutors
>> understand the topics they're talking about.
>> Not a day goes by without me seeing "neurotypical people" get horribly
>> confused between RAM and Hard Drive sizes, because they share the same
>> units (not that that can be helped, as the units are supposed to be
>> the same, base 1000 vs 1024 notwithstanding).
>>
>> Bit (as a unit) is already really confusing for anyone who doesn't
>> deal with it on a regular basis. I think people who don't see an issue
>> are making an assumption based on their own lack of confusion. We
>> understand computer science AND Bitcoin. Most people have zero
>> understanding of either.
>>
>> Bitcoin already has a ton of issues with terrible names for things:
>>
>> - Mining (for transaction validation).
>> - Addresses (which are meant to be one-time use, and don't even really
>> exist at the network level).
>> - Wallets (which don't hold your bitcoins, can be copied, and all
>> backups can be stolen from equally).
>>
>> I end up having to make the distinctions obvious every time I explain
>> Bitcoin to someone new to it. There's an acceptable tradeoff here,
>> because there were arguably no better words to assign to these
>> concepts (although I'd argue mining is a really awful metaphor, and is
>> the one that prompts the most questions from people). Then add to the
>> pile a bunch of third parties naming themselves after parts of the
>> protocol (Coinbase,Blockchain.info). Not blaming them for it, but I've
>> definitiely seen average people get confused between "the blockchain"
>> and "blockchain.info" (not so much Coinbase, because that name doesn't
>> come up in beginner explanations).
>>
>> It seems downright masochistic to add
>> yet-another-word-that-doesn't-mean-what-you-think-it-means to the pile
>> for no reason other than aesthetics. Are we actively trying to confuse
>> people?
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get 
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>




From losewife at gmail.com  Sun May  4 01:47:39 2014
From: losewife at gmail.com (losewife at gmail.com)
Date: Sun, 4 May 2014 09:47:39 +0800
Subject: [Bitcoin-development] (no subject)
Message-ID: <201405040947366776495@gmail.com>







losewife at gmail.com


losewife at gmail.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140504/dcd5909d/attachment.html>

From christophe.biocca at gmail.com  Sun May  4 02:54:26 2014
From: christophe.biocca at gmail.com (Christophe Biocca)
Date: Sat, 3 May 2014 22:54:26 -0400
Subject: [Bitcoin-development] A statistical consensus rule for reducing
 0-conf double-spend risk
In-Reply-To: <536589CC.8080005@thinlink.com>
References: <536589CC.8080005@thinlink.com>
Message-ID: <CANOOu=_tpqz8wdDGj9x_xT5QcT=CHRbr+5Cewj5xuZyJ+ZurNw@mail.gmail.com>

Unfortunately this could fork the network permanently, which is much
worse than a double spend. There's no magic way to have a consensus,
so it becomes trivial with a few tries to split the network into two
halves: (tx1 before tx2, tx2 before tx1). Some nodes in the middle
will accept either block, but you've still forked off some non-zero
number of nodes.

At a minimum, you'd need a way to reconcile the split (Accept the
offending block once it's 2+ deep). The problem is that since the rule
isn't enforceable, no miner will wait before mining on the longest
chain (which is the rational move), and you're back to where we are
now.

On Sat, May 3, 2014 at 8:29 PM, Tom Harding <tomh at thinlink.com> wrote:
> This idea was suggested by "Joe" on 2011-02-14
> https://bitcointalk.org/index.php?topic=3441.msg48484#msg48484 .  It
> deserves another look.
>
> Nodes today make a judgment regarding which of several conflicting
> spends to accept, and which is a double-spend.  But there is no
> incorporation of these collective judgments into the blockchain.  So
> today, it's the wild west, right up until the next block.  To address this:
>
>   - Using its own clock, node associates a timestamp with every
> transaction upon first seeing its tx hash (at inv, in a block, or when
> created)
>   - Node relays respend attempts (subject to anti-DOS rules, see github
> PR #3883)
>   - Eventually, node adds a consensus rule:
>      Do not accept blocks containing a transaction tx2 where
>          - tx2 respends an output spent by another locally accepted
> transaction tx1, and
>          - timestamp(tx2) - timestamp(tx1) > T
>
> What is T?
>
> According to http://bitcoinstats.com/network/propagation/ recent tx
> propagation has a median of 1.3 seconds.  If double-spender introduces
> both transactions from the same node, assuming propagation times
> distributed exponentially with median 1.3 seconds, the above consensus
> rule with reject threshold T = 7.4 seconds would result in
> mis-identification of the second-spend by less than 1% of nodes.*
>
> If tx1 and tx2 are introduced in mutually time-distant parts of the
> network, a population of nodes in between would be able to accept either
> transaction, as they can today.  But the attacker still has to introduce
> them at close to the same time, or the majority of the network will
> confirm the one introduced earlier.
>
> Merchant is watching also, and these dynamics mean he will not have to
> watch for very long to gain confidence if he was going to get
> double-spent, he would have learned it by now.  The consensus rule also
> makes mining a never-broadcast double-spend quite difficult, because the
> network assigns it very late timestamps.  Miner has to get lucky and
> find the block very quickly.  In other words, it converges to a Finney
> attack.
>
> This would be the first consensus rule that anticipated less than 100%
> agreement.  But the parameters could be chosen so that it was still
> extremely conservative.  Joe also suggested a fail-safe condition: drop
> this rule if block has 6 confirmations, to prevent a fork in unusual
> network circumstances.
>
> We can't move toward this, or any, solution without more data. Today,
> the network is not transparent to double-spend attempts, so we mostly
> have to guess what the quantitative effects would be.  The first step is
> to share the data broadly by relaying first double-spend attempts as in
> github PR #3883.
>
>
> *Calcs:
> For Exp(lambda), median ln(2)/lambda = 1.3 ==> lambda = .533
> Laplace(0,1/lambda) < .01 ==> T = 7.34 seconds
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From jgarzik at bitpay.com  Sun May  4 05:15:03 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Sun, 4 May 2014 01:15:03 -0400
Subject: [Bitcoin-development] Bug with handing of OP_RETURN?
In-Reply-To: <CABbpET-uDQRFQ_XAFeWkgc=A1jEW62Q+8BTZZuW5UbZXX0y+HQ@mail.gmail.com>
References: <CABbpET-uDQRFQ_XAFeWkgc=A1jEW62Q+8BTZZuW5UbZXX0y+HQ@mail.gmail.com>
Message-ID: <CAJHLa0NPJgZqgxhGYrFXdHwAgYNnE_At7tDzLb2V=K5TnXO7FQ@mail.gmail.com>

On Sat, May 3, 2014 at 2:04 PM, Flavien Charlon
<flavien.charlon at coinprism.com> wrote:
> Outputs are above dust, inputs are not spent. OP_RETURN is supposed to be
> standard in 0.9.1 and the data is well below 40 bytes, so why is this being
> rejected?

The carried data must all be contained within one pushdata.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From drak at zikula.org  Sun May  4 05:18:32 2014
From: drak at zikula.org (Drak)
Date: Sun, 4 May 2014 06:18:32 +0100
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <53659234.3020207@gmail.com>
References: <CACq0ZD6EJnG4iwehfcFU-4AhBiNdtyf7eE9iGW8d6rv6327Eug@mail.gmail.com>
	<53644F13.1080203@gmail.com>
	<CACq0ZD7s8tp8GvJhEhZx4T7xMpeZ+tz5HNKQK-p=f=R10NaCmA@mail.gmail.com>
	<CANOOu=9orMZH6fpTfkO8zgwPDmwpA8WW78EKwSTiw2GXn7UCxA@mail.gmail.com>
	<A4150064-81C5-4B39-B696-B4F778531F3B@swipeclock.com>
	<53659234.3020207@gmail.com>
Message-ID: <CANAnSg1=ap03K-Rxhje0RP-nxt8eWzWiURzXrMBe3Au-bBUBpQ@mail.gmail.com>

+1
On 4 May 2014 02:06, "Chris Pacia" <ctpacia at gmail.com> wrote:

> Absent a concerted effort to move to something else other than 'bits', I
> would be willing to bet the nomenclature moves in that direction anyway.
> 'Bits' is just a shorten word for 'millibits' (or microbits, if you
> will). It's easier to say and my guess is people would tend to use it
> naturally own their own. Kind of like 'bucks' for dollars.
>
> The other synergies are:
> -bit is part of the word Bitcoin. The currency unit bit is part of a
> whole bitcoin.
> -bit symbolically represents the tech nature of the bitcoin.
> -bit used to be a unit of money way back when. This largely reclaims it.
> -when used as money bit when in references to a precession metal coin.
> The name 'bitcoin' references that as well as the mimicking of the gold
> standard in the protocol rules.
>
> All around I don't think there is a better fit. I doubt people will get
> confused by it. The context it's used in will distinguish it from other
> uses of the word.
>
> On 05/03/2014 12:27 PM, Mike Caldwell wrote:
> > I agree with the sentiment that most people don't understand either
> computer science or Bitcoin.  The goal of getting people to understand
> enough about Bitcoin to use it is achievable and a goal that is "in scope"
> of our efforts. Getting them to understand computer science at large at the
> same time, less so.
> >
> > The fact that people routinely confuse RAM and hard drive sizes has much
> to do with the fact that the average lay person has little need to
> prioritize this as something to keep in the forefront.  They don't get
> "horribly" confused, they just simply don't get worked up over what looks
> to them like a rounding error, much to the dismay of anyone who believes
> that everyone should be an expert at computer science.  The average joe may
> assess (accurately from his perspective) that the distinction isn't
> important enough to merit significant mental resources and he is justified
> in not expending them that way even if someone else thinks he should.
> >
> > Poor understanding is precisely what a proper effort to name this would
> be to avoid.  It is not frill or aesthetics, it is a planned targeting of
> language to achieve the clearest communication to the widest possible
> target audience using the language most likely to be understood by them in
> light of our objectives.  It's marketing.
> >
> > Mike
> >
> > Sent from my iPhone
> >
> >> On May 3, 2014, at 9:49 AM, "Christophe Biocca" <
> christophe.biocca at gmail.com> wrote:
> >>
> >> Context as a disambiguator works fine when the interlocutors
> >> understand the topics they're talking about.
> >> Not a day goes by without me seeing "neurotypical people" get horribly
> >> confused between RAM and Hard Drive sizes, because they share the same
> >> units (not that that can be helped, as the units are supposed to be
> >> the same, base 1000 vs 1024 notwithstanding).
> >>
> >> Bit (as a unit) is already really confusing for anyone who doesn't
> >> deal with it on a regular basis. I think people who don't see an issue
> >> are making an assumption based on their own lack of confusion. We
> >> understand computer science AND Bitcoin. Most people have zero
> >> understanding of either.
> >>
> >> Bitcoin already has a ton of issues with terrible names for things:
> >>
> >> - Mining (for transaction validation).
> >> - Addresses (which are meant to be one-time use, and don't even really
> >> exist at the network level).
> >> - Wallets (which don't hold your bitcoins, can be copied, and all
> >> backups can be stolen from equally).
> >>
> >> I end up having to make the distinctions obvious every time I explain
> >> Bitcoin to someone new to it. There's an acceptable tradeoff here,
> >> because there were arguably no better words to assign to these
> >> concepts (although I'd argue mining is a really awful metaphor, and is
> >> the one that prompts the most questions from people). Then add to the
> >> pile a bunch of third parties naming themselves after parts of the
> >> protocol (Coinbase,Blockchain.info). Not blaming them for it, but I've
> >> definitiely seen average people get confused between "the blockchain"
> >> and "blockchain.info" (not so much Coinbase, because that name doesn't
> >> come up in beginner explanations).
> >>
> >> It seems downright masochistic to add
> >> yet-another-word-that-doesn't-mean-what-you-think-it-means to the pile
> >> for no reason other than aesthetics. Are we actively trying to confuse
> >> people?
> >
> ------------------------------------------------------------------------------
> > "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> > Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> > unparalleled scalability from the best Selenium testing platform
> available.
> > Simple to use. Nothing to install. Get started now for free."
> > http://p.sf.net/sfu/SauceLabs
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140504/8203ed3c/attachment.html>

From voisine at gmail.com  Sun May  4 06:15:55 2014
From: voisine at gmail.com (Aaron Voisine)
Date: Sat, 3 May 2014 23:15:55 -0700
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CANAnSg1=ap03K-Rxhje0RP-nxt8eWzWiURzXrMBe3Au-bBUBpQ@mail.gmail.com>
References: <CACq0ZD6EJnG4iwehfcFU-4AhBiNdtyf7eE9iGW8d6rv6327Eug@mail.gmail.com>
	<53644F13.1080203@gmail.com>
	<CACq0ZD7s8tp8GvJhEhZx4T7xMpeZ+tz5HNKQK-p=f=R10NaCmA@mail.gmail.com>
	<CANOOu=9orMZH6fpTfkO8zgwPDmwpA8WW78EKwSTiw2GXn7UCxA@mail.gmail.com>
	<A4150064-81C5-4B39-B696-B4F778531F3B@swipeclock.com>
	<53659234.3020207@gmail.com>
	<CANAnSg1=ap03K-Rxhje0RP-nxt8eWzWiURzXrMBe3Au-bBUBpQ@mail.gmail.com>
Message-ID: <CACq0ZD7SP==2cMCHnYPiHwh-MWwuWCKVX5T8+3P7xMAG+5i91g@mail.gmail.com>

Bit by bit, it's become clear that it's a bit much to worry even a
little bit that overloading the word "bit" would be every bit as bad
as a two bit horse with the bit between it's teeth that bit the hand
that feeds it, or a drill bit broken to bits after just a bit of use.

Aaron

There's no trick to being a humorist when you have the whole
government working for you -- Will Rodgers


On Sat, May 3, 2014 at 10:18 PM, Drak <drak at zikula.org> wrote:
> +1
>
> On 4 May 2014 02:06, "Chris Pacia" <ctpacia at gmail.com> wrote:
>>
>> Absent a concerted effort to move to something else other than 'bits', I
>> would be willing to bet the nomenclature moves in that direction anyway.
>> 'Bits' is just a shorten word for 'millibits' (or microbits, if you
>> will). It's easier to say and my guess is people would tend to use it
>> naturally own their own. Kind of like 'bucks' for dollars.
>>
>> The other synergies are:
>> -bit is part of the word Bitcoin. The currency unit bit is part of a
>> whole bitcoin.
>> -bit symbolically represents the tech nature of the bitcoin.
>> -bit used to be a unit of money way back when. This largely reclaims it.
>> -when used as money bit when in references to a precession metal coin.
>> The name 'bitcoin' references that as well as the mimicking of the gold
>> standard in the protocol rules.
>>
>> All around I don't think there is a better fit. I doubt people will get
>> confused by it. The context it's used in will distinguish it from other
>> uses of the word.
>>
>> On 05/03/2014 12:27 PM, Mike Caldwell wrote:
>> > I agree with the sentiment that most people don't understand either
>> > computer science or Bitcoin.  The goal of getting people to understand
>> > enough about Bitcoin to use it is achievable and a goal that is "in scope"
>> > of our efforts. Getting them to understand computer science at large at the
>> > same time, less so.
>> >
>> > The fact that people routinely confuse RAM and hard drive sizes has much
>> > to do with the fact that the average lay person has little need to
>> > prioritize this as something to keep in the forefront.  They don't get
>> > "horribly" confused, they just simply don't get worked up over what looks to
>> > them like a rounding error, much to the dismay of anyone who believes that
>> > everyone should be an expert at computer science.  The average joe may
>> > assess (accurately from his perspective) that the distinction isn't
>> > important enough to merit significant mental resources and he is justified
>> > in not expending them that way even if someone else thinks he should.
>> >
>> > Poor understanding is precisely what a proper effort to name this would
>> > be to avoid.  It is not frill or aesthetics, it is a planned targeting of
>> > language to achieve the clearest communication to the widest possible target
>> > audience using the language most likely to be understood by them in light of
>> > our objectives.  It's marketing.
>> >
>> > Mike
>> >
>> > Sent from my iPhone
>> >
>> >> On May 3, 2014, at 9:49 AM, "Christophe Biocca"
>> >> <christophe.biocca at gmail.com> wrote:
>> >>
>> >> Context as a disambiguator works fine when the interlocutors
>> >> understand the topics they're talking about.
>> >> Not a day goes by without me seeing "neurotypical people" get horribly
>> >> confused between RAM and Hard Drive sizes, because they share the same
>> >> units (not that that can be helped, as the units are supposed to be
>> >> the same, base 1000 vs 1024 notwithstanding).
>> >>
>> >> Bit (as a unit) is already really confusing for anyone who doesn't
>> >> deal with it on a regular basis. I think people who don't see an issue
>> >> are making an assumption based on their own lack of confusion. We
>> >> understand computer science AND Bitcoin. Most people have zero
>> >> understanding of either.
>> >>
>> >> Bitcoin already has a ton of issues with terrible names for things:
>> >>
>> >> - Mining (for transaction validation).
>> >> - Addresses (which are meant to be one-time use, and don't even really
>> >> exist at the network level).
>> >> - Wallets (which don't hold your bitcoins, can be copied, and all
>> >> backups can be stolen from equally).
>> >>
>> >> I end up having to make the distinctions obvious every time I explain
>> >> Bitcoin to someone new to it. There's an acceptable tradeoff here,
>> >> because there were arguably no better words to assign to these
>> >> concepts (although I'd argue mining is a really awful metaphor, and is
>> >> the one that prompts the most questions from people). Then add to the
>> >> pile a bunch of third parties naming themselves after parts of the
>> >> protocol (Coinbase,Blockchain.info). Not blaming them for it, but I've
>> >> definitiely seen average people get confused between "the blockchain"
>> >> and "blockchain.info" (not so much Coinbase, because that name doesn't
>> >> come up in beginner explanations).
>> >>
>> >> It seems downright masochistic to add
>> >> yet-another-word-that-doesn't-mean-what-you-think-it-means to the pile
>> >> for no reason other than aesthetics. Are we actively trying to confuse
>> >> people?
>> >
>> > ------------------------------------------------------------------------------
>> > "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> > Instantly run your Selenium tests across 300+ browser/OS combos.  Get
>> > unparalleled scalability from the best Selenium testing platform
>> > available.
>> > Simple to use. Nothing to install. Get started now for free."
>> > http://p.sf.net/sfu/SauceLabs
>> > _______________________________________________
>> > Bitcoin-development mailing list
>> > Bitcoin-development at lists.sourceforge.net
>> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >
>>
>>
>>
>> ------------------------------------------------------------------------------
>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
>> unparalleled scalability from the best Selenium testing platform
>> available.
>> Simple to use. Nothing to install. Get started now for free."
>> http://p.sf.net/sfu/SauceLabs
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From slashdevnull at hotmail.com  Sun May  4 06:23:08 2014
From: slashdevnull at hotmail.com (Un Ix)
Date: Sun, 4 May 2014 14:23:08 +0800
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CACq0ZD7SP==2cMCHnYPiHwh-MWwuWCKVX5T8+3P7xMAG+5i91g@mail.gmail.com>
References: <CACq0ZD6EJnG4iwehfcFU-4AhBiNdtyf7eE9iGW8d6rv6327Eug@mail.gmail.com>
	<53644F13.1080203@gmail.com>
	<CACq0ZD7s8tp8GvJhEhZx4T7xMpeZ+tz5HNKQK-p=f=R10NaCmA@mail.gmail.com>
	<CANOOu=9orMZH6fpTfkO8zgwPDmwpA8WW78EKwSTiw2GXn7UCxA@mail.gmail.com>
	<A4150064-81C5-4B39-B696-B4F778531F3B@swipeclock.com>
	<53659234.3020207@gmail.com>
	<CANAnSg1=ap03K-Rxhje0RP-nxt8eWzWiURzXrMBe3Au-bBUBpQ@mail.gmail.com>
	<CACq0ZD7SP==2cMCHnYPiHwh-MWwuWCKVX5T8+3P7xMAG+5i91g@mail.gmail.com>
Message-ID: <BLU402-EAS26897ED6E415147047692B7C64D0@phx.gbl>

+1(bit) for your bit on bits.

> On 4/05/2014, at 2:18 pm, "Aaron Voisine" <voisine at gmail.com> wrote:
> 
> Bit by bit, it's become clear that it's a bit much to worry even a
> little bit that overloading the word "bit" would be every bit as bad
> as a two bit horse with the bit between it's teeth that bit the hand
> that feeds it, or a drill bit broken to bits after just a bit of use.
> 
> Aaron
> 
> There's no trick to being a humorist when you have the whole
> government working for you -- Will Rodgers
> 
> 
>> On Sat, May 3, 2014 at 10:18 PM, Drak <drak at zikula.org> wrote:
>> +1
>> 
>>> On 4 May 2014 02:06, "Chris Pacia" <ctpacia at gmail.com> wrote:
>>> 
>>> Absent a concerted effort to move to something else other than 'bits', I
>>> would be willing to bet the nomenclature moves in that direction anyway.
>>> 'Bits' is just a shorten word for 'millibits' (or microbits, if you
>>> will). It's easier to say and my guess is people would tend to use it
>>> naturally own their own. Kind of like 'bucks' for dollars.
>>> 
>>> The other synergies are:
>>> -bit is part of the word Bitcoin. The currency unit bit is part of a
>>> whole bitcoin.
>>> -bit symbolically represents the tech nature of the bitcoin.
>>> -bit used to be a unit of money way back when. This largely reclaims it.
>>> -when used as money bit when in references to a precession metal coin.
>>> The name 'bitcoin' references that as well as the mimicking of the gold
>>> standard in the protocol rules.
>>> 
>>> All around I don't think there is a better fit. I doubt people will get
>>> confused by it. The context it's used in will distinguish it from other
>>> uses of the word.
>>> 
>>>> On 05/03/2014 12:27 PM, Mike Caldwell wrote:
>>>> I agree with the sentiment that most people don't understand either
>>>> computer science or Bitcoin.  The goal of getting people to understand
>>>> enough about Bitcoin to use it is achievable and a goal that is "in scope"
>>>> of our efforts. Getting them to understand computer science at large at the
>>>> same time, less so.
>>>> 
>>>> The fact that people routinely confuse RAM and hard drive sizes has much
>>>> to do with the fact that the average lay person has little need to
>>>> prioritize this as something to keep in the forefront.  They don't get
>>>> "horribly" confused, they just simply don't get worked up over what looks to
>>>> them like a rounding error, much to the dismay of anyone who believes that
>>>> everyone should be an expert at computer science.  The average joe may
>>>> assess (accurately from his perspective) that the distinction isn't
>>>> important enough to merit significant mental resources and he is justified
>>>> in not expending them that way even if someone else thinks he should.
>>>> 
>>>> Poor understanding is precisely what a proper effort to name this would
>>>> be to avoid.  It is not frill or aesthetics, it is a planned targeting of
>>>> language to achieve the clearest communication to the widest possible target
>>>> audience using the language most likely to be understood by them in light of
>>>> our objectives.  It's marketing.
>>>> 
>>>> Mike
>>>> 
>>>> Sent from my iPhone
>>>> 
>>>>> On May 3, 2014, at 9:49 AM, "Christophe Biocca"
>>>>> <christophe.biocca at gmail.com> wrote:
>>>>> 
>>>>> Context as a disambiguator works fine when the interlocutors
>>>>> understand the topics they're talking about.
>>>>> Not a day goes by without me seeing "neurotypical people" get horribly
>>>>> confused between RAM and Hard Drive sizes, because they share the same
>>>>> units (not that that can be helped, as the units are supposed to be
>>>>> the same, base 1000 vs 1024 notwithstanding).
>>>>> 
>>>>> Bit (as a unit) is already really confusing for anyone who doesn't
>>>>> deal with it on a regular basis. I think people who don't see an issue
>>>>> are making an assumption based on their own lack of confusion. We
>>>>> understand computer science AND Bitcoin. Most people have zero
>>>>> understanding of either.
>>>>> 
>>>>> Bitcoin already has a ton of issues with terrible names for things:
>>>>> 
>>>>> - Mining (for transaction validation).
>>>>> - Addresses (which are meant to be one-time use, and don't even really
>>>>> exist at the network level).
>>>>> - Wallets (which don't hold your bitcoins, can be copied, and all
>>>>> backups can be stolen from equally).
>>>>> 
>>>>> I end up having to make the distinctions obvious every time I explain
>>>>> Bitcoin to someone new to it. There's an acceptable tradeoff here,
>>>>> because there were arguably no better words to assign to these
>>>>> concepts (although I'd argue mining is a really awful metaphor, and is
>>>>> the one that prompts the most questions from people). Then add to the
>>>>> pile a bunch of third parties naming themselves after parts of the
>>>>> protocol (Coinbase,Blockchain.info). Not blaming them for it, but I've
>>>>> definitiely seen average people get confused between "the blockchain"
>>>>> and "blockchain.info" (not so much Coinbase, because that name doesn't
>>>>> come up in beginner explanations).
>>>>> 
>>>>> It seems downright masochistic to add
>>>>> yet-another-word-that-doesn't-mean-what-you-think-it-means to the pile
>>>>> for no reason other than aesthetics. Are we actively trying to confuse
>>>>> people?
>>>> 
>>>> ------------------------------------------------------------------------------
>>>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>>>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
>>>> unparalleled scalability from the best Selenium testing platform
>>>> available.
>>>> Simple to use. Nothing to install. Get started now for free."
>>>> http://p.sf.net/sfu/SauceLabs
>>>> _______________________________________________
>>>> Bitcoin-development mailing list
>>>> Bitcoin-development at lists.sourceforge.net
>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>> 
>>> 
>>> 
>>> 
>>> ------------------------------------------------------------------------------
>>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
>>> unparalleled scalability from the best Selenium testing platform
>>> available.
>>> Simple to use. Nothing to install. Get started now for free."
>>> http://p.sf.net/sfu/SauceLabs
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
>> 
>> ------------------------------------------------------------------------------
>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
>> unparalleled scalability from the best Selenium testing platform available.
>> Simple to use. Nothing to install. Get started now for free."
>> http://p.sf.net/sfu/SauceLabs
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get 
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From laanwj at gmail.com  Sun May  4 06:27:58 2014
From: laanwj at gmail.com (Wladimir)
Date: Sun, 4 May 2014 08:27:58 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CACq0ZD7SP==2cMCHnYPiHwh-MWwuWCKVX5T8+3P7xMAG+5i91g@mail.gmail.com>
References: <CACq0ZD6EJnG4iwehfcFU-4AhBiNdtyf7eE9iGW8d6rv6327Eug@mail.gmail.com>
	<53644F13.1080203@gmail.com>
	<CACq0ZD7s8tp8GvJhEhZx4T7xMpeZ+tz5HNKQK-p=f=R10NaCmA@mail.gmail.com>
	<CANOOu=9orMZH6fpTfkO8zgwPDmwpA8WW78EKwSTiw2GXn7UCxA@mail.gmail.com>
	<A4150064-81C5-4B39-B696-B4F778531F3B@swipeclock.com>
	<53659234.3020207@gmail.com>
	<CANAnSg1=ap03K-Rxhje0RP-nxt8eWzWiURzXrMBe3Au-bBUBpQ@mail.gmail.com>
	<CACq0ZD7SP==2cMCHnYPiHwh-MWwuWCKVX5T8+3P7xMAG+5i91g@mail.gmail.com>
Message-ID: <CA+s+GJAgYOmQ8GkJU5r3NZTHraq51e+z8EFyQkE=Kk7cP5dcoA@mail.gmail.com>

On Sun, May 4, 2014 at 8:15 AM, Aaron Voisine <voisine at gmail.com> wrote:
> Bit by bit, it's become clear that it's a bit much to worry even a
> little bit that overloading the word "bit" would be every bit as bad
> as a two bit horse with the bit between it's teeth that bit the hand
> that feeds it, or a drill bit broken to bits after just a bit of use.

+1 good summary

And I think that's a good conclusion to this discussion about unit
names on the development mailing list. Everything has been said now.

Wladimir



From tamas at bitsofproof.com  Sun May  4 06:36:02 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Sun, 4 May 2014 08:36:02 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CA+s+GJAgYOmQ8GkJU5r3NZTHraq51e+z8EFyQkE=Kk7cP5dcoA@mail.gmail.com>
References: <CACq0ZD6EJnG4iwehfcFU-4AhBiNdtyf7eE9iGW8d6rv6327Eug@mail.gmail.com>
	<53644F13.1080203@gmail.com>
	<CACq0ZD7s8tp8GvJhEhZx4T7xMpeZ+tz5HNKQK-p=f=R10NaCmA@mail.gmail.com>
	<CANOOu=9orMZH6fpTfkO8zgwPDmwpA8WW78EKwSTiw2GXn7UCxA@mail.gmail.com>
	<A4150064-81C5-4B39-B696-B4F778531F3B@swipeclock.com>
	<53659234.3020207@gmail.com>
	<CANAnSg1=ap03K-Rxhje0RP-nxt8eWzWiURzXrMBe3Au-bBUBpQ@mail.gmail.com>
	<CACq0ZD7SP==2cMCHnYPiHwh-MWwuWCKVX5T8+3P7xMAG+5i91g@mail.gmail.com>
	<CA+s+GJAgYOmQ8GkJU5r3NZTHraq51e+z8EFyQkE=Kk7cP5dcoA@mail.gmail.com>
Message-ID: <2AB62750-3A79-4951-AD41-590BEEE3E15A@bitsofproof.com>

Wladimir,

what is missing is a decision to pull for the reference client. 
Or did I missed that bit?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140504/7a5232ca/attachment.sig>

From laanwj at gmail.com  Sun May  4 06:59:52 2014
From: laanwj at gmail.com (Wladimir)
Date: Sun, 4 May 2014 08:59:52 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <2AB62750-3A79-4951-AD41-590BEEE3E15A@bitsofproof.com>
References: <CACq0ZD6EJnG4iwehfcFU-4AhBiNdtyf7eE9iGW8d6rv6327Eug@mail.gmail.com>
	<53644F13.1080203@gmail.com>
	<CACq0ZD7s8tp8GvJhEhZx4T7xMpeZ+tz5HNKQK-p=f=R10NaCmA@mail.gmail.com>
	<CANOOu=9orMZH6fpTfkO8zgwPDmwpA8WW78EKwSTiw2GXn7UCxA@mail.gmail.com>
	<A4150064-81C5-4B39-B696-B4F778531F3B@swipeclock.com>
	<53659234.3020207@gmail.com>
	<CANAnSg1=ap03K-Rxhje0RP-nxt8eWzWiURzXrMBe3Au-bBUBpQ@mail.gmail.com>
	<CACq0ZD7SP==2cMCHnYPiHwh-MWwuWCKVX5T8+3P7xMAG+5i91g@mail.gmail.com>
	<CA+s+GJAgYOmQ8GkJU5r3NZTHraq51e+z8EFyQkE=Kk7cP5dcoA@mail.gmail.com>
	<2AB62750-3A79-4951-AD41-590BEEE3E15A@bitsofproof.com>
Message-ID: <CA+s+GJCWSoEsnxmT-LJwQ7U+DfPEHu=4JJR4eTe1MGcYwoo+rA@mail.gmail.com>

On Sun, May 4, 2014 at 8:36 AM, Tamas Blummer <tamas at bitsofproof.com> wrote:
> Wladimir,
>
> what is missing is a decision to pull for the reference client.
> Or did I missed that bit?

No opinion - we'll follow whatever the rest does.

Wladimir



From flavien.charlon at coinprism.com  Sun May  4 10:05:36 2014
From: flavien.charlon at coinprism.com (Flavien Charlon)
Date: Sun, 4 May 2014 11:05:36 +0100
Subject: [Bitcoin-development] Bug with handing of OP_RETURN?
In-Reply-To: <CAJHLa0NPJgZqgxhGYrFXdHwAgYNnE_At7tDzLb2V=K5TnXO7FQ@mail.gmail.com>
References: <CABbpET-uDQRFQ_XAFeWkgc=A1jEW62Q+8BTZZuW5UbZXX0y+HQ@mail.gmail.com>
	<CAJHLa0NPJgZqgxhGYrFXdHwAgYNnE_At7tDzLb2V=K5TnXO7FQ@mail.gmail.com>
Message-ID: <CABbpET9W28zKKWjXTDm6k6ka48+giy7JQBAbDBtJNsS3WqRv-g@mail.gmail.com>

Thanks, that makes sense, just wanted to make sure this what the problem
was.


On Sun, May 4, 2014 at 6:15 AM, Jeff Garzik <jgarzik at bitpay.com> wrote:

> On Sat, May 3, 2014 at 2:04 PM, Flavien Charlon
> <flavien.charlon at coinprism.com> wrote:
> > Outputs are above dust, inputs are not spent. OP_RETURN is supposed to be
> > standard in 0.9.1 and the data is well below 40 bytes, so why is this
> being
> > rejected?
>
> The carried data must all be contained within one pushdata.
>
> --
> Jeff Garzik
> Bitcoin core developer and open source evangelist
> BitPay, Inc.      https://bitpay.com/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140504/1cfee0ec/attachment.html>

From sergiolerner at certimix.com  Sun May  4 12:07:37 2014
From: sergiolerner at certimix.com (Sergio Lerner)
Date: Sun, 04 May 2014 09:07:37 -0300
Subject: [Bitcoin-development] Bug with handing of OP_RETURN?
In-Reply-To: <53653B90.4070401@monetize.io>
References: <CABbpET-uDQRFQ_XAFeWkgc=A1jEW62Q+8BTZZuW5UbZXX0y+HQ@mail.gmail.com>
	<218332ea-948d-4af0-b4c5-ced83f25d734@email.android.com>
	<53653B90.4070401@monetize.io>
Message-ID: <53662D89.5070106@certimix.com>

El 03/05/2014 03:55 p.m., Mark Friedenbach escribi?:
>
> On 05/03/2014 11:39 AM, Peter Todd wrote:
>> The standard format ended up being exactly:
>>
>>     OP_RETURN <0 to 40-byte PUSHDATA>
>>
Please remember that the code actually does not implement the "standard
format" (at least the last time I checked it).  Any opcode after
OP_RETURN is accepted:

For example: OP_RETURN OP_CHECKSIG

is accepted.





From mike at plan99.net  Sun May  4 13:06:29 2014
From: mike at plan99.net (Mike Hearn)
Date: Sun, 4 May 2014 15:06:29 +0200
Subject: [Bitcoin-development] BIP70 implementation guidance
In-Reply-To: <20140502204146.GD62950@giles.gnomon.org.uk>
References: <CANEZrP15TKPcWnjdnfbRd9KxrS_5F=07gTL1DxyMo1os-sVOpA@mail.gmail.com>
	<20140502204146.GD62950@giles.gnomon.org.uk>
Message-ID: <CANEZrP34xJrFnntQqX5o88MyB=+W339kcwvZPojWt2hPF3HJwA@mail.gmail.com>

>
> e.g. in the UK sole traders (that is, unincorporated businesses) can't
> get EV certs because the UK doesn't maintain a trade register of such
> businesses
>

Sole traders can just trade under their own name, or their email address,
or their domain name, heck even their telephone number if someone sets up
an SMS verifying CA. I don't worry too much about such things - the point
of the cert is just to disambiguate the payment so people can't get
confused into paying the wrong entity.

Companies that can't get EV certs cause us pain indirectly by making users
less certain about what they're expecting to see when they pay a company,
making confusion attacks a bit easier, but I bet it'll be a minor issue in
practice.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140504/d83b00c5/attachment.html>

From jgarzik at bitpay.com  Sun May  4 13:25:35 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Sun, 4 May 2014 09:25:35 -0400
Subject: [Bitcoin-development] Bug with handing of OP_RETURN?
In-Reply-To: <53654057.1080105@monetize.io>
References: <CABbpET-uDQRFQ_XAFeWkgc=A1jEW62Q+8BTZZuW5UbZXX0y+HQ@mail.gmail.com>
	<218332ea-948d-4af0-b4c5-ced83f25d734@email.android.com>
	<53653B90.4070401@monetize.io>
	<CAAS2fgS61rxB3x4ii68XTHC-V_jpfng-Px6Tv9GV20-putiLUQ@mail.gmail.com>
	<53654057.1080105@monetize.io>
Message-ID: <CAJHLa0NDWjHFrYE4mQ1iB_70_=9Mg04-PiberkkaQmSdFDohEQ@mail.gmail.com>

On Sat, May 3, 2014 at 3:15 PM, Mark Friedenbach <mark at monetize.io> wrote:
> Is it more complex? The current implementation using template matching
> seems more complex than `if script.vch[0] == OP_RETURN &&
> script.vch.size() < 42`

Not much more complex.

The template matches a two-chunk script with OP_RETURN + one pushdata
(or just OP_RETURN with no push).  The pushdata is further limited to
MAX_OP_RETURN_RELAY bytes.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From mcaldwell at swipeclock.com  Sun May  4 14:42:40 2014
From: mcaldwell at swipeclock.com (Mike Caldwell)
Date: Sun, 4 May 2014 10:42:40 -0400
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CACq0ZD7SP==2cMCHnYPiHwh-MWwuWCKVX5T8+3P7xMAG+5i91g@mail.gmail.com>
References: <CACq0ZD6EJnG4iwehfcFU-4AhBiNdtyf7eE9iGW8d6rv6327Eug@mail.gmail.com>
	<53644F13.1080203@gmail.com>
	<CACq0ZD7s8tp8GvJhEhZx4T7xMpeZ+tz5HNKQK-p=f=R10NaCmA@mail.gmail.com>
	<CANOOu=9orMZH6fpTfkO8zgwPDmwpA8WW78EKwSTiw2GXn7UCxA@mail.gmail.com>
	<A4150064-81C5-4B39-B696-B4F778531F3B@swipeclock.com>
	<53659234.3020207@gmail.com>
	<CANAnSg1=ap03K-Rxhje0RP-nxt8eWzWiURzXrMBe3Au-bBUBpQ@mail.gmail.com>
	<CACq0ZD7SP==2cMCHnYPiHwh-MWwuWCKVX5T8+3P7xMAG+5i91g@mail.gmail.com>
Message-ID: <AFE68F19-20A8-4FFD-8065-92BDCAF1D3FF@swipeclock.com>

I will drink to that!

Bitte ein Bit! (A Bit please - aka Bitburger Beer)

Mike

Sent from my iPhone

> On May 4, 2014, at 12:17 AM, "Aaron Voisine" <voisine at gmail.com> wrote:
> 
> Bit by bit, it's become clear that it's a bit much to worry even a
> little bit that overloading the word "bit" would be every bit as bad
> as a two bit horse with the bit between it's teeth that bit the hand
> that feeds it, or a drill bit broken to bits after just a bit of use.
> 
> Aaron
> 
> There's no trick to being a humorist when you have the whole
> government working for you -- Will Rodgers
> 
> 
>> On Sat, May 3, 2014 at 10:18 PM, Drak <drak at zikula.org> wrote:
>> +1
>> 
>>> On 4 May 2014 02:06, "Chris Pacia" <ctpacia at gmail.com> wrote:
>>> 
>>> Absent a concerted effort to move to something else other than 'bits', I
>>> would be willing to bet the nomenclature moves in that direction anyway.
>>> 'Bits' is just a shorten word for 'millibits' (or microbits, if you
>>> will). It's easier to say and my guess is people would tend to use it
>>> naturally own their own. Kind of like 'bucks' for dollars.
>>> 
>>> The other synergies are:
>>> -bit is part of the word Bitcoin. The currency unit bit is part of a
>>> whole bitcoin.
>>> -bit symbolically represents the tech nature of the bitcoin.
>>> -bit used to be a unit of money way back when. This largely reclaims it.
>>> -when used as money bit when in references to a precession metal coin.
>>> The name 'bitcoin' references that as well as the mimicking of the gold
>>> standard in the protocol rules.
>>> 
>>> All around I don't think there is a better fit. I doubt people will get
>>> confused by it. The context it's used in will distinguish it from other
>>> uses of the word.
>>> 
>>>> On 05/03/2014 12:27 PM, Mike Caldwell wrote:
>>>> I agree with the sentiment that most people don't understand either
>>>> computer science or Bitcoin.  The goal of getting people to understand
>>>> enough about Bitcoin to use it is achievable and a goal that is "in scope"
>>>> of our efforts. Getting them to understand computer science at large at the
>>>> same time, less so.
>>>> 
>>>> The fact that people routinely confuse RAM and hard drive sizes has much
>>>> to do with the fact that the average lay person has little need to
>>>> prioritize this as something to keep in the forefront.  They don't get
>>>> "horribly" confused, they just simply don't get worked up over what looks to
>>>> them like a rounding error, much to the dismay of anyone who believes that
>>>> everyone should be an expert at computer science.  The average joe may
>>>> assess (accurately from his perspective) that the distinction isn't
>>>> important enough to merit significant mental resources and he is justified
>>>> in not expending them that way even if someone else thinks he should.
>>>> 
>>>> Poor understanding is precisely what a proper effort to name this would
>>>> be to avoid.  It is not frill or aesthetics, it is a planned targeting of
>>>> language to achieve the clearest communication to the widest possible target
>>>> audience using the language most likely to be understood by them in light of
>>>> our objectives.  It's marketing.
>>>> 
>>>> Mike
>>>> 
>>>> Sent from my iPhone
>>>> 
>>>>> On May 3, 2014, at 9:49 AM, "Christophe Biocca"
>>>>> <christophe.biocca at gmail.com> wrote:
>>>>> 
>>>>> Context as a disambiguator works fine when the interlocutors
>>>>> understand the topics they're talking about.
>>>>> Not a day goes by without me seeing "neurotypical people" get horribly
>>>>> confused between RAM and Hard Drive sizes, because they share the same
>>>>> units (not that that can be helped, as the units are supposed to be
>>>>> the same, base 1000 vs 1024 notwithstanding).
>>>>> 
>>>>> Bit (as a unit) is already really confusing for anyone who doesn't
>>>>> deal with it on a regular basis. I think people who don't see an issue
>>>>> are making an assumption based on their own lack of confusion. We
>>>>> understand computer science AND Bitcoin. Most people have zero
>>>>> understanding of either.
>>>>> 
>>>>> Bitcoin already has a ton of issues with terrible names for things:
>>>>> 
>>>>> - Mining (for transaction validation).
>>>>> - Addresses (which are meant to be one-time use, and don't even really
>>>>> exist at the network level).
>>>>> - Wallets (which don't hold your bitcoins, can be copied, and all
>>>>> backups can be stolen from equally).
>>>>> 
>>>>> I end up having to make the distinctions obvious every time I explain
>>>>> Bitcoin to someone new to it. There's an acceptable tradeoff here,
>>>>> because there were arguably no better words to assign to these
>>>>> concepts (although I'd argue mining is a really awful metaphor, and is
>>>>> the one that prompts the most questions from people). Then add to the
>>>>> pile a bunch of third parties naming themselves after parts of the
>>>>> protocol (Coinbase,Blockchain.info). Not blaming them for it, but I've
>>>>> definitiely seen average people get confused between "the blockchain"
>>>>> and "blockchain.info" (not so much Coinbase, because that name doesn't
>>>>> come up in beginner explanations).
>>>>> 
>>>>> It seems downright masochistic to add
>>>>> yet-another-word-that-doesn't-mean-what-you-think-it-means to the pile
>>>>> for no reason other than aesthetics. Are we actively trying to confuse
>>>>> people?
>>>> 
>>>> ------------------------------------------------------------------------------
>>>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>>>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
>>>> unparalleled scalability from the best Selenium testing platform
>>>> available.
>>>> Simple to use. Nothing to install. Get started now for free."
>>>> http://p.sf.net/sfu/SauceLabs
>>>> _______________________________________________
>>>> Bitcoin-development mailing list
>>>> Bitcoin-development at lists.sourceforge.net
>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>> 
>>> 
>>> 
>>> ------------------------------------------------------------------------------
>>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
>>> unparalleled scalability from the best Selenium testing platform
>>> available.
>>> Simple to use. Nothing to install. Get started now for free."
>>> http://p.sf.net/sfu/SauceLabs
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
>> 
>> ------------------------------------------------------------------------------
>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
>> unparalleled scalability from the best Selenium testing platform available.
>> Simple to use. Nothing to install. Get started now for free."
>> http://p.sf.net/sfu/SauceLabs
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From timo.hanke at web.de  Sun May  4 15:14:51 2014
From: timo.hanke at web.de (Timo Hanke)
Date: Sun, 4 May 2014 10:14:51 -0500
Subject: [Bitcoin-development] Proposal for extra nonce in block header
In-Reply-To: <CAKaEYh+ajt1QUz9_8v1b4azeajCdPB+WuCdsix3J8hO7vLnTvw@mail.gmail.com>
References: <20140427070732.GA23422@crunch>
	<CAKaEYh+ajt1QUz9_8v1b4azeajCdPB+WuCdsix3J8hO7vLnTvw@mail.gmail.com>
Message-ID: <20140504151451.GB5432@crunch>

> If changing the structure of the block header, wouldnt you also need to
> increment the version number to 3?

No, in this case I don't think so. Incrementing the version number has
two purposes:

1. inform old clients that something new is going on
2. be able to phase out old version numbers and block them once the new
version number becomes a supermajority.

None of these two is necessary here. Old clients already recognize the
new block headers as something new because they look like very high
version numbers to them. And there is no reason to ever phase out blocks
that have zero in the MSBs of the version.

On Sun, Apr 27, 2014 at 10:17:11AM +0200, Melvin Carvalho wrote:
> On 27 April 2014 09:07, Timo Hanke <timo.hanke at web.de> wrote:
> 
>     I'd like to put the following draft of a BIP up for discussion.
> 
>     Timo
> 
>     # Abstract
>     There are incentives for miners to find cheap, non-standard ways to
>     generate new work, which are not necessarily in the best interest of the
>     protocol.
>     In order to reduce these incentives this proposal re-assigns 2 bytes from
>     the version field of the block header to a new extra nonce field.
>     # Copyright
>     # Specification
>     The block version number field in the block header is reduced in size from
>     4 to 2 bytes.
>     The third and fourth byte in the block header are assigned to the new extra
>     nonce field inside the block header.
>     # Motivation
>     The motivation of this proposal is to provide miners with a cheap
>     constant-complexity method to create new work that does not require
>     altering the transaction tree.
> 
>     Furthermore, the motivation is to protect the version and timestamp fields
>     in the block header from abuse.
>     # Rationale
>     Traditionally, the extra nonce is part of the coinbase field of the
>     generation transaction, which is always the very first transaction of a
>     block.
>     After incrementing the extra nonce the minimum amount of work a miner has
>     to do to re-calculate the block header is a) to hash the coinbase
>     transaction and b) to re-calculate the left-most branch of the merkle tree
>     all the way to the merkle root.
>     This is necessary overhead a miner has to do besides hashing the block
>     header itself.
>     We shall call the process that leads to a new block header from the same
>     transaction set the _pre-hashing_.
> 
>     First it should be noted that the relative cost of pre-hashing in its
>     traditional form depends
>     on the block size, which may create an unwanted incentive for miners
>     to keep the block size small. However, this is not the main motivation for
>     the current proposal.
> 
>     While the block header is hashed by ASICs, pre-hashing typically happens on
>     a CPU because of the greater flexibility required.
>     Consequently, as ASIC cost per hash performance drops the relative cost of
>     pre-hashing increases.
> 
>     This creates an incentive for miners to find cheaper ways to create new
>     work than by means of pre-hashing.
>     An example of this currently happening is the on-device rolling of the
>     timestamp into the future.
>     These ways of creating new work are unlikely to be in the best interest of
>     the protocol.
>     For example, rolling the timestamp faster than the real time is unwanted
>     (more so on faster blockchains).
> 
>     The version number in the block header is a possible target for alteration
>     with the goal of cheaply creating new work.
>     Currently, blocks with arbitrarily large version numbers get relayed and
>     accepted by the network.
>     As this is unwanted behaviour, there should not exist any incentive for a
>     miner to abuse the version number in this way.
> 
>     The solution is to reduce the range of version numbers from 2^32 to 2^16
>     and to declare the third and forth bytes of the block header as legitimate
>     space for an extra nonce.
>     This will reduce the incentive for a miner to abuse the shortened version
>     number by a factor in the order of 2^16.
> 
>     As a side effect, this proposal greatly reduces the bandwidth requirements
>     of a blind pool protocol by only submitting the block header to the miner.
>     # Backwards Compatibility
>     Old versions of the client will accept blocks of this kind but will throw
>     an alert at the user to upgrade.
>     The only code change would be a cast of the version number to a short.
>     Besides the upgrade alert, old and new versions of the client can co-exist
>     and there is no need to introduce a new block version number or to
>     phase-out old block versions.
>     # Reference Implementation
>     # Final implementation
> 
> 
> If changing the structure of the block header, wouldnt you also need to
> increment the version number to 3?



From mike at plan99.net  Sun May  4 15:26:06 2014
From: mike at plan99.net (Mike Hearn)
Date: Sun, 4 May 2014 17:26:06 +0200
Subject: [Bitcoin-development] Proposal for extra nonce in block header
In-Reply-To: <20140504151451.GB5432@crunch>
References: <20140427070732.GA23422@crunch>
	<CAKaEYh+ajt1QUz9_8v1b4azeajCdPB+WuCdsix3J8hO7vLnTvw@mail.gmail.com>
	<20140504151451.GB5432@crunch>
Message-ID: <CANEZrP38P8-NVy5p1zBnk97MMZTZx7Fdhx386CAa2018e64abA@mail.gmail.com>

Although I agree 32 bits for a version is overkill, I really don't like the
idea of you simply ignoring the protocol spec to try and reduce your own
costs. Especially because in future we should make unknown versions a
validation rule, so we can easily trigger hard forks.

If this change was introduced through a proper process and software was
properly upgraded to understand the new header format, that'd be one thing.
Arbitrarily exploiting what is IMHO a missing rule in the rule set to shave
a bit more profit is something else.


On Sun, May 4, 2014 at 5:14 PM, Timo Hanke <timo.hanke at web.de> wrote:

> > If changing the structure of the block header, wouldnt you also need to
> > increment the version number to 3?
>
> No, in this case I don't think so. Incrementing the version number has
> two purposes:
>
> 1. inform old clients that something new is going on
> 2. be able to phase out old version numbers and block them once the new
> version number becomes a supermajority.
>
> None of these two is necessary here. Old clients already recognize the
> new block headers as something new because they look like very high
> version numbers to them. And there is no reason to ever phase out blocks
> that have zero in the MSBs of the version.
>
> On Sun, Apr 27, 2014 at 10:17:11AM +0200, Melvin Carvalho wrote:
> > On 27 April 2014 09:07, Timo Hanke <timo.hanke at web.de> wrote:
> >
> >     I'd like to put the following draft of a BIP up for discussion.
> >
> >     Timo
> >
> >     # Abstract
> >     There are incentives for miners to find cheap, non-standard ways to
> >     generate new work, which are not necessarily in the best interest of
> the
> >     protocol.
> >     In order to reduce these incentives this proposal re-assigns 2 bytes
> from
> >     the version field of the block header to a new extra nonce field.
> >     # Copyright
> >     # Specification
> >     The block version number field in the block header is reduced in
> size from
> >     4 to 2 bytes.
> >     The third and fourth byte in the block header are assigned to the
> new extra
> >     nonce field inside the block header.
> >     # Motivation
> >     The motivation of this proposal is to provide miners with a cheap
> >     constant-complexity method to create new work that does not require
> >     altering the transaction tree.
> >
> >     Furthermore, the motivation is to protect the version and timestamp
> fields
> >     in the block header from abuse.
> >     # Rationale
> >     Traditionally, the extra nonce is part of the coinbase field of the
> >     generation transaction, which is always the very first transaction
> of a
> >     block.
> >     After incrementing the extra nonce the minimum amount of work a
> miner has
> >     to do to re-calculate the block header is a) to hash the coinbase
> >     transaction and b) to re-calculate the left-most branch of the
> merkle tree
> >     all the way to the merkle root.
> >     This is necessary overhead a miner has to do besides hashing the
> block
> >     header itself.
> >     We shall call the process that leads to a new block header from the
> same
> >     transaction set the _pre-hashing_.
> >
> >     First it should be noted that the relative cost of pre-hashing in its
> >     traditional form depends
> >     on the block size, which may create an unwanted incentive for miners
> >     to keep the block size small. However, this is not the main
> motivation for
> >     the current proposal.
> >
> >     While the block header is hashed by ASICs, pre-hashing typically
> happens on
> >     a CPU because of the greater flexibility required.
> >     Consequently, as ASIC cost per hash performance drops the relative
> cost of
> >     pre-hashing increases.
> >
> >     This creates an incentive for miners to find cheaper ways to create
> new
> >     work than by means of pre-hashing.
> >     An example of this currently happening is the on-device rolling of
> the
> >     timestamp into the future.
> >     These ways of creating new work are unlikely to be in the best
> interest of
> >     the protocol.
> >     For example, rolling the timestamp faster than the real time is
> unwanted
> >     (more so on faster blockchains).
> >
> >     The version number in the block header is a possible target for
> alteration
> >     with the goal of cheaply creating new work.
> >     Currently, blocks with arbitrarily large version numbers get relayed
> and
> >     accepted by the network.
> >     As this is unwanted behaviour, there should not exist any incentive
> for a
> >     miner to abuse the version number in this way.
> >
> >     The solution is to reduce the range of version numbers from 2^32 to
> 2^16
> >     and to declare the third and forth bytes of the block header as
> legitimate
> >     space for an extra nonce.
> >     This will reduce the incentive for a miner to abuse the shortened
> version
> >     number by a factor in the order of 2^16.
> >
> >     As a side effect, this proposal greatly reduces the bandwidth
> requirements
> >     of a blind pool protocol by only submitting the block header to the
> miner.
> >     # Backwards Compatibility
> >     Old versions of the client will accept blocks of this kind but will
> throw
> >     an alert at the user to upgrade.
> >     The only code change would be a cast of the version number to a
> short.
> >     Besides the upgrade alert, old and new versions of the client can
> co-exist
> >     and there is no need to introduce a new block version number or to
> >     phase-out old block versions.
> >     # Reference Implementation
> >     # Final implementation
> >
> >
> > If changing the structure of the block header, wouldnt you also need to
> > increment the version number to 3?
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140504/7ddf8b9a/attachment.html>

From timo.hanke at web.de  Sun May  4 15:32:25 2014
From: timo.hanke at web.de (Timo Hanke)
Date: Sun, 4 May 2014 10:32:25 -0500
Subject: [Bitcoin-development] Proposal for extra nonce in block header
In-Reply-To: <535CCFFE.5090809@monetize.io>
References: <20140427070732.GA23422@crunch>
 <535CCFFE.5090809@monetize.io>
Message-ID: <20140504153225.GC5432@crunch>

On Sun, Apr 27, 2014 at 02:38:06AM -0700, Mark Friedenbach wrote:
> I'm not convinced of the necessity of this idea in general, but if it
> were to be implemented I would recommend serializing the nVersion field
> as a VarInt (Pieter Wuille's multi-byte serialization format) and using
> the remaining space of the 4 bytes as your extra nonce.
> 
> That would allow serialization of numbers up to 0x1020407f (slightly
> over 28 bits) before the 4-byte field is exhausted. For version numbers
> less than 0x204080 there will be at least one byte of padding space left
> over for extra-nonce usage (two bytes if less than 0x4080, three bytes
> if less than 0x80). For version values up to 127, the format is exactly
> identical when the padding bytes are zero.

Neat idea. It might somewhat reduce the flexibility in which the version
field can be used in the future, though. 

For the sake of simplicity I lean towards a fixed length version field,
but would be ok with either. Keep in mind that version numbers can be
recycled after a couple of years. So there is effectively zero benefit
in allowing varints to extend beyond 2 bytes. For that reason personally
I think 1 byte of version number would be enough.

> On 04/27/2014 12:07 AM, Timo Hanke wrote:
> > I'd like to put the following draft of a BIP up for discussion.
> > 
> > Timo
> > 
> > # Abstract
> > There are incentives for miners to find cheap, non-standard ways to generate new work, which are not necessarily in the best interest of the protocol.
> > In order to reduce these incentives this proposal re-assigns 2 bytes from the version field of the block header to a new extra nonce field. 
> > # Copyright
> > # Specification
> > The block version number field in the block header is reduced in size from 4 to 2 bytes. 
> > The third and fourth byte in the block header are assigned to the new extra nonce field inside the block header.
> > # Motivation
> > The motivation of this proposal is to provide miners with a cheap constant-complexity method to create new work that does not require altering the transaction tree.
> > 
> > Furthermore, the motivation is to protect the version and timestamp fields in the block header from abuse.
> > # Rationale
> > Traditionally, the extra nonce is part of the coinbase field of the generation transaction, which is always the very first transaction of a block.
> > After incrementing the extra nonce the minimum amount of work a miner has to do to re-calculate the block header is a) to hash the coinbase transaction and b) to re-calculate the left-most branch of the merkle tree all the way to the merkle root.
> > This is necessary overhead a miner has to do besides hashing the block header itself.
> > We shall call the process that leads to a new block header from the same transaction set the _pre-hashing_.
> > 
> > First it should be noted that the relative cost of pre-hashing in its traditional form depends
> > on the block size, which may create an unwanted incentive for miners
> > to keep the block size small. However, this is not the main motivation for
> > the current proposal.
> > 
> > While the block header is hashed by ASICs, pre-hashing typically happens on a CPU because of the greater flexibility required.
> > Consequently, as ASIC cost per hash performance drops the relative cost of pre-hashing increases.
> > 
> > This creates an incentive for miners to find cheaper ways to create new work than by means of pre-hashing.
> > An example of this currently happening is the on-device rolling of the timestamp into the future.
> > These ways of creating new work are unlikely to be in the best interest of the protocol.
> > For example, rolling the timestamp faster than the real time is unwanted (more so on faster blockchains).
> > 
> > The version number in the block header is a possible target for alteration with the goal of cheaply creating new work.
> > Currently, blocks with arbitrarily large version numbers get relayed and accepted by the network.
> > As this is unwanted behaviour, there should not exist any incentive for a miner to abuse the version number in this way. 
> > 
> > The solution is to reduce the range of version numbers from 2^32 to 2^16 and to declare the third and forth bytes of the block header as legitimate space for an extra nonce.
> > This will reduce the incentive for a miner to abuse the shortened version number by a factor in the order of 2^16. 
> > 
> > As a side effect, this proposal greatly reduces the bandwidth requirements of a blind pool protocol by only submitting the block header to the miner.
> > # Backwards Compatibility
> > Old versions of the client will accept blocks of this kind but will throw an alert at the user to upgrade.
> > The only code change would be a cast of the version number to a short.
> > Besides the upgrade alert, old and new versions of the client can co-exist and there is no need to introduce a new block version number or to phase-out old block versions.
> > # Reference Implementation
> > # Final implementation
> > 
> 
> 

-- 
Timo Hanke
PGP 1EFF 69BC 6FB7 8744 14DB  631D 1BB5 D6E3 AB96 7DA8



From timo.hanke at web.de  Sun May  4 16:08:22 2014
From: timo.hanke at web.de (Timo Hanke)
Date: Sun, 4 May 2014 11:08:22 -0500
Subject: [Bitcoin-development] Proposal for extra nonce in block header
In-Reply-To: <CANEZrP38P8-NVy5p1zBnk97MMZTZx7Fdhx386CAa2018e64abA@mail.gmail.com>
References: <20140427070732.GA23422@crunch>
	<CAKaEYh+ajt1QUz9_8v1b4azeajCdPB+WuCdsix3J8hO7vLnTvw@mail.gmail.com>
	<20140504151451.GB5432@crunch>
	<CANEZrP38P8-NVy5p1zBnk97MMZTZx7Fdhx386CAa2018e64abA@mail.gmail.com>
Message-ID: <20140504160822.GD5432@crunch>

On Sun, May 04, 2014 at 05:26:06PM +0200, Mike Hearn wrote:
> Although I agree 32 bits for a version is overkill, I really don't like the
> idea of you simply ignoring the protocol spec to try and reduce your own costs.

The purpose of the proposal is to change the protocol spec, not to
ignore it.

The argument for the proposal is explained in the Rationale section, and
in abstracted form means precisely to make everybody follow the protocol
spec by reducing incentives to ignore it. Specifically, it is about
protecting the timestamp field. 

I talked about relative costs involved in hashing, and how those will
change, and what incentives that creates. This development cannot be
ignored.

> Especially because in future we should make unknown versions a validation rule,
> so we can easily trigger hard forks.

Why does it require 32 bits?

> If this change was introduced through a proper process and software was
> properly upgraded to understand the new header format, that'd be one thing.
> Arbitrarily exploiting what is IMHO a missing rule in the rule set to shave a
> bit more profit is something else.

Again, this is a BIP. I am proposing a software upgrade, which is
absolutely required. When I said that version 3 is not required I meant
that the software upgrade (which basically just turns the nonce into a
short) does not have to be accompanied by a new version number for any
technical reason. Is there another reason why it should be incremented?

> On Sun, May 4, 2014 at 5:14 PM, Timo Hanke <timo.hanke at web.de> wrote:
> 
>     > If changing the structure of the block header, wouldnt you also need to
>     > increment the version number to 3?
> 
>     No, in this case I don't think so. Incrementing the version number has
>     two purposes:
> 
>     1. inform old clients that something new is going on
>     2. be able to phase out old version numbers and block them once the new
>     version number becomes a supermajority.
> 
>     None of these two is necessary here. Old clients already recognize the
>     new block headers as something new because they look like very high
>     version numbers to them. And there is no reason to ever phase out blocks
>     that have zero in the MSBs of the version.
> 
>     On Sun, Apr 27, 2014 at 10:17:11AM +0200, Melvin Carvalho wrote:
>     > On 27 April 2014 09:07, Timo Hanke <timo.hanke at web.de> wrote:
>     >
>     > ? ? I'd like to put the following draft of a BIP up for discussion.
>     >
>     > ? ? Timo
>     >
>     > ? ? # Abstract
>     > ? ? There are incentives for miners to find cheap, non-standard ways to
>     > ? ? generate new work, which are not necessarily in the best interest of
>     the
>     > ? ? protocol.
>     > ? ? In order to reduce these incentives this proposal re-assigns 2 bytes
>     from
>     > ? ? the version field of the block header to a new extra nonce field.
>     > ? ? # Copyright
>     > ? ? # Specification
>     > ? ? The block version number field in the block header is reduced in size
>     from
>     > ? ? 4 to 2 bytes.
>     > ? ? The third and fourth byte in the block header are assigned to the new
>     extra
>     > ? ? nonce field inside the block header.
>     > ? ? # Motivation
>     > ? ? The motivation of this proposal is to provide miners with a cheap
>     > ? ? constant-complexity method to create new work that does not require
>     > ? ? altering the transaction tree.
>     >
>     > ? ? Furthermore, the motivation is to protect the version and timestamp
>     fields
>     > ? ? in the block header from abuse.
>     > ? ? # Rationale
>     > ? ? Traditionally, the extra nonce is part of the coinbase field of the
>     > ? ? generation transaction, which is always the very first transaction of
>     a
>     > ? ? block.
>     > ? ? After incrementing the extra nonce the minimum amount of work a miner
>     has
>     > ? ? to do to re-calculate the block header is a) to hash the coinbase
>     > ? ? transaction and b) to re-calculate the left-most branch of the merkle
>     tree
>     > ? ? all the way to the merkle root.
>     > ? ? This is necessary overhead a miner has to do besides hashing the
>     block
>     > ? ? header itself.
>     > ? ? We shall call the process that leads to a new block header from the
>     same
>     > ? ? transaction set the _pre-hashing_.
>     >
>     > ? ? First it should be noted that the relative cost of pre-hashing in its
>     > ? ? traditional form depends
>     > ? ? on the block size, which may create an unwanted incentive for miners
>     > ? ? to keep the block size small. However, this is not the main
>     motivation for
>     > ? ? the current proposal.
>     >
>     > ? ? While the block header is hashed by ASICs, pre-hashing typically
>     happens on
>     > ? ? a CPU because of the greater flexibility required.
>     > ? ? Consequently, as ASIC cost per hash performance drops the relative
>     cost of
>     > ? ? pre-hashing increases.
>     >
>     > ? ? This creates an incentive for miners to find cheaper ways to create
>     new
>     > ? ? work than by means of pre-hashing.
>     > ? ? An example of this currently happening is the on-device rolling of
>     the
>     > ? ? timestamp into the future.
>     > ? ? These ways of creating new work are unlikely to be in the best
>     interest of
>     > ? ? the protocol.
>     > ? ? For example, rolling the timestamp faster than the real time is
>     unwanted
>     > ? ? (more so on faster blockchains).
>     >
>     > ? ? The version number in the block header is a possible target for
>     alteration
>     > ? ? with the goal of cheaply creating new work.
>     > ? ? Currently, blocks with arbitrarily large version numbers get relayed
>     and
>     > ? ? accepted by the network.
>     > ? ? As this is unwanted behaviour, there should not exist any incentive
>     for a
>     > ? ? miner to abuse the version number in this way.
>     >
>     > ? ? The solution is to reduce the range of version numbers from 2^32 to 2
>     ^16
>     > ? ? and to declare the third and forth bytes of the block header as
>     legitimate
>     > ? ? space for an extra nonce.
>     > ? ? This will reduce the incentive for a miner to abuse the shortened
>     version
>     > ? ? number by a factor in the order of 2^16.
>     >
>     > ? ? As a side effect, this proposal greatly reduces the bandwidth
>     requirements
>     > ? ? of a blind pool protocol by only submitting the block header to the
>     miner.
>     > ? ? # Backwards Compatibility
>     > ? ? Old versions of the client will accept blocks of this kind but will
>     throw
>     > ? ? an alert at the user to upgrade.
>     > ? ? The only code change would be a cast of the version number to a
>     short.
>     > ? ? Besides the upgrade alert, old and new versions of the client can
>     co-exist
>     > ? ? and there is no need to introduce a new block version number or to
>     > ? ? phase-out old block versions.
>     > ? ? # Reference Implementation
>     > ? ? # Final implementation
>     >
>     >
>     > If changing the structure of the block header, wouldnt you also need to
>     > increment the version number to 3?
> 
>     ------------------------------------------------------------------------------
>     "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>     Instantly run your Selenium tests across 300+ browser/OS combos. ?Get
>     unparalleled scalability from the best Selenium testing platform available.
>     Simple to use. Nothing to install. Get started now for free."
>     http://p.sf.net/sfu/SauceLabs
>     _______________________________________________
>     Bitcoin-development mailing list
>     Bitcoin-development at lists.sourceforge.net
>     https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> 

-- 
Timo Hanke
PGP 1EFF 69BC 6FB7 8744 14DB  631D 1BB5 D6E3 AB96 7DA8



From tier.nolan at gmail.com  Sun May  4 21:11:27 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Sun, 4 May 2014 22:11:27 +0100
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CAAS2fgS3cU4-yJMSMA4TSY4_mrw53d--543OVmize2BYVjUAqQ@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAAt2M18z_Qkqat1OETiXAz0QQey4+y5J6=pC7nkoJfyfrpj3=A@mail.gmail.com>
	<CAAS2fgScWkentFy7Ak0bpYVLsOFL+xkwPm5QRu9ENeX9oCtPug@mail.gmail.com>
	<534570A2.9090502@gmx.de>
	<CA+s+GJAXu3SEXFDDwi85dNFjO2rfPXJrg-aKHYwbogAHfu3vfQ@mail.gmail.com>
	<0B038624-8861-438E-B7B1-566B4A8E126B@bitsofproof.com>
	<CA+s+GJCQSCUyq7Ajv0EgZ8Vbcv4Xt7G-y_8D12fsoKjyFjnhwg@mail.gmail.com>
	<CAPg+sBjWL_hKhWW-6i=WAHnx+Ue5JE=A9RrxnWuAYOXw19qiDw@mail.gmail.com>
	<CAAS2fgTkgddRGGXuuAza-A=Dgjfr5aNF8yxDePPixN4M7Rbpyg@mail.gmail.com>
	<c3726067-5a9f-45b9-b798-1070bdde2ac4@email.android.com>
	<CAE-z3OV4w+vQ0b6h9E+7cSyxkKENduyfHenhdF3q3-0i2chnGQ@mail.gmail.com>
	<CAAS2fgS3cU4-yJMSMA4TSY4_mrw53d--543OVmize2BYVjUAqQ@mail.gmail.com>
Message-ID: <CAE-z3OXw8-3ezMOL4ik1hgDJ1sXioXHot6KgRT6rx+U67Jxhng@mail.gmail.com>

On Fri, Apr 11, 2014 at 5:54 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> For the non-error-coded case I believe nodes
> with random spans of blocks works out asymptotically to the same
> failure rates as random.
>

If each "block" is really 512 blocks in sequence, then each "slot" is more
likely to be hit.  It effectively reduces the number of blocks by the
minimum run lengths.

ECC seemed cooler though.


> (The conversation Peter Todd was referring to was one where I was
> pointing out that with suitable error coding you also get an
> anti-censorship effect where its very difficult to provide part of the
> data without potentially providing all of it)
>

Interesting too.

>
> I think in the network we have today and for the foreseeable future we
> can reasonably count on there being a reasonable number of nodes that
> store all the blocks... quite likely not enough to satisfy the
> historical block demand from the network alone, but easily enough to
> supply blocks that have otherwise gone missing.
>

That's true.  Scaling up the transactions per second increases the chance
of data lost.

With side/tree chains, the odds of data loss in the less important chains
increases (though they are by definition lower value chains)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140504/bb84548b/attachment.html>

From jgarzik at bitpay.com  Mon May  5 17:30:02 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Mon, 5 May 2014 13:30:02 -0400
Subject: [Bitcoin-development] Bug with handing of OP_RETURN?
In-Reply-To: <53662D89.5070106@certimix.com>
References: <CABbpET-uDQRFQ_XAFeWkgc=A1jEW62Q+8BTZZuW5UbZXX0y+HQ@mail.gmail.com>
	<218332ea-948d-4af0-b4c5-ced83f25d734@email.android.com>
	<53653B90.4070401@monetize.io> <53662D89.5070106@certimix.com>
Message-ID: <CAJHLa0MSmbVsYccqzsNjyMMGT1Ffy3ULTJ_O9jv3ZbDHMpVbkQ@mail.gmail.com>

Correct, though that was somewhat unintentional.  The pushed-data size
is limited to <= 40 bytes, and as non-pushdata opcodes carry zero
pushed data, they are accepted.

On Sun, May 4, 2014 at 8:07 AM, Sergio Lerner <sergiolerner at certimix.com> wrote:
> El 03/05/2014 03:55 p.m., Mark Friedenbach escribi?:
>>
>> On 05/03/2014 11:39 AM, Peter Todd wrote:
>>> The standard format ended up being exactly:
>>>
>>>     OP_RETURN <0 to 40-byte PUSHDATA>
>>>
> Please remember that the code actually does not implement the "standard
> format" (at least the last time I checked it).  Any opcode after
> OP_RETURN is accepted:
>
> For example: OP_RETURN OP_CHECKSIG
>
> is accepted.
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From nikita at megiontechnologies.com  Mon May  5 19:36:54 2014
From: nikita at megiontechnologies.com (Nikita Schmidt)
Date: Mon, 5 May 2014 22:36:54 +0300
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <CAAS2fgTyndBG=airHoAcW4W2WgFZ61THXP4JGuUQCSWV99tCtg@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>
	<1927948.OEZHQcsQ9n@crushinator> <2025496.b5Y3n7qx8B@crushinator>
	<1582E990-4E14-4EF7-9C9C-AA505B815104@bitsofproof.com>
	<53568B87.8040009@monetize.io>
	<11528A13-5D66-4D2B-BEE0-1C26F9987BC8@bitsofproof.com>
	<CABh=4qPsR1YbhJDeAPjr37Zjqawo9ZFAH43scFnEg7p9a7EkeQ@mail.gmail.com>
	<F292CC2F-BAA7-45ED-801E-1475D94632AF@bitsofproof.com>
	<CAAS2fgR5ciUeFonOXBD1d9b_inOuxQKJ-LaoGmoyjoeQ_KxQxQ@mail.gmail.com>
	<621AAD7D-FDC0-4C3C-B810-8C1F0B088586@bitsofproof.com>
	<CAAS2fgTyndBG=airHoAcW4W2WgFZ61THXP4JGuUQCSWV99tCtg@mail.gmail.com>
Message-ID: <CAC7yFxQR6oVdASacCefPiuWocvrDHTTnVU4xyVdZTwvMr4ZPNw@mail.gmail.com>

A fork of Matt's proposal converted to GF(2^8) is here:
https://github.com/cetuscetus/btctool/blob/bip/bip-xxxx.mediawiki

Other changes include:
- only six application/version bytes are allocated, which is the
minimum to ensure that the encoded form starts with S in all cases;
- encoded prefixes are SK/SL for a shared private key
(mainnet/testnet) and SS/ST for a shared BIP32 seed;
- the only hash function in use is SHA-256, which is the all-purpose
hash function in the Bitcoin protocol;
- double SHA is used for similarity with Bitcoin, although Jan and I
believe single SHA is enough in this application;
- bias-less encoding of M and x, because there can't be more than 255
shares over GF(2^8).


On 23 April 2014 09:16, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> On Tue, Apr 22, 2014 at 10:33 PM, Tamas Blummer <tamas at bitsofproof.com> wrote:
>> So you agree, that SSS should not contain specific flag for testnet?
>>
>> Or for that matter not even BIP32 needs them since it is not an address to
>> send to.
>
> I think the convention we have so far is that addresses and address
> relate thing we share normally contain an opaque 'version' identifier
> which we use to identify the purpose for the data (E.g. network
> meaning, etc.) and I think its a generally reasonable custom.
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From sergiolerner at certimix.com  Mon May  5 19:45:07 2014
From: sergiolerner at certimix.com (Sergio Lerner)
Date: Mon, 05 May 2014 16:45:07 -0300
Subject: [Bitcoin-development] Block collision resolution using the
 DECOR protocol and Bonneau's Kickbacks problem
In-Reply-To: <CAOe4UimBEe4t1Z41du3r8pQUOmzd_1V_aESizuiH2U6uvN9nFA@mail.gmail.com>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
	<20140423150555.GE19430@savin>
	<CAOe4Ui=OaVLvh0vUnNv-1j41YB4B2x896DQ5b6xt4oUJ5oLPFg@mail.gmail.com>
	<53638616.2030009@certimix.com> <536388F9.3040607@certimix.com>
	<CAOe4UimBEe4t1Z41du3r8pQUOmzd_1V_aESizuiH2U6uvN9nFA@mail.gmail.com>
Message-ID: <5367EA43.1090308@certimix.com>


On 02/05/2014 10:56 a.m., Joseph Bonneau wrote:
> This is an interesting idea Sergio. I have two concerns:
>
> You mention "50% of the block reward" going to the uncle block. Does
> this mean the parent gets 1, and the uncle 0.5, or both get 0.5? In
> the first interpretation (which I assumed was the design), mining is
> no longer a zero-sum game and this could have lots of unforeseen
> implications. For example, selfish mining might be more profitable,
> since you're less disincentivized to avoid conflicts.
The second interpretation is the correct one.
> In the second interpretation, there's pressure to have the next miner
> ignore the uncle to not share the reward. This would encourage
> kickback-style attacks and advantage large mining pools because they
> can mine on their own blocks and ignore colliding uncles.
Including an uncle can be done at any time before a coinbase matures
(100 blocks) (of course the term "uncle" is misleading in those cases) .
So, for example, the uncle can be included 50 blocks afterward. So it's
very difficult that a miner prevents other miners from including the
uncle and taking the reward given by uncle inclusion.

Same ineffective attack:
A big miner could try to bribe all other miners not to include the
uncle, but this would be terribly costly. Suppose that I mine a block
ignoring an uncle Z and then I publish this message: "Every miner from
block number X to block number Y that does not include this uncle Z will
be given Q Bitcoins". How much would Q be? Since by including the uncle
the miner gets 5 BTC of reward (in the example case where block reward
is 50 BTC), then each bribery payment would have to be higher than 5
BTC, totaling 500 BTC ! much more than the 25 BTC the miner will loose
by including the uncle.

Just by sending a transaction with a lot of fees that depends on my
block does not prevent subsequent miners from including the supposedly
banned uncle.

Then, I think there are no kickback-style attacks.

>
> Also, I think this came up in the Princeton meet-up, but it's not
> ideal to just hash the blocks to decide the "winner" because this lets
> you know in advance your block's likelihood of winning a collision by
> looking at how high or low its hash is, in which case you can publish
> a weak block right away or withhold a strong one and do selfish
> mining. A better approach to break ties between blocks A and B is to
> see if H(A||B) < H(B||A). That way neither block holder can find out
> in advance if their block is likely to win a collision.
>
In the DECOR protocol, I think selfish miners cannot get any advantage,
because the blocks that loose the latency race will come back as uncles
and get their reward share anyway. Maybe Ittay Eyal and Emin Gun Sirer
can say more about this...

Best regards, Sergio.



From ittay.eyal at cornell.edu  Mon May  5 20:27:08 2014
From: ittay.eyal at cornell.edu (Ittay)
Date: Mon, 5 May 2014 16:27:08 -0400
Subject: [Bitcoin-development] Block collision resolution using the
 DECOR protocol and Bonneau's Kickbacks problem
In-Reply-To: <5367EA43.1090308@certimix.com>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
	<20140423150555.GE19430@savin>
	<CAOe4Ui=OaVLvh0vUnNv-1j41YB4B2x896DQ5b6xt4oUJ5oLPFg@mail.gmail.com>
	<53638616.2030009@certimix.com> <536388F9.3040607@certimix.com>
	<CAOe4UimBEe4t1Z41du3r8pQUOmzd_1V_aESizuiH2U6uvN9nFA@mail.gmail.com>
	<5367EA43.1090308@certimix.com>
Message-ID: <CABT1wWkwLh8GVgE_0jgCJgm+rMwdKNMiVtSDQf28H8af0hci+w@mail.gmail.com>

As far as I understand, the incentives Sergio suggests would work. So
we can assume that the pruned uncle blocks would still win their creators
at least partial revenue.

As for selfish mining - I'm not sure how GHOST affects it. I don't think it
does. The selfish miners just care about heaviest subtree rather than
longest chain. DECOR changes revenue collection significantly, so it
certainly affects selfish mining. I believe it changes the threshold at
which
selfish mining is profitable, but doesn't deter selfish mining completely:
Selfish miners can still cause others to reduce their revenue by having
them work on older blocks.

Ittay



On Mon, May 5, 2014 at 3:45 PM, Sergio Lerner <sergiolerner at certimix.com>wrote:

>
> On 02/05/2014 10:56 a.m., Joseph Bonneau wrote:
> > This is an interesting idea Sergio. I have two concerns:
> >
> > You mention "50% of the block reward" going to the uncle block. Does
> > this mean the parent gets 1, and the uncle 0.5, or both get 0.5? In
> > the first interpretation (which I assumed was the design), mining is
> > no longer a zero-sum game and this could have lots of unforeseen
> > implications. For example, selfish mining might be more profitable,
> > since you're less disincentivized to avoid conflicts.
> The second interpretation is the correct one.
> > In the second interpretation, there's pressure to have the next miner
> > ignore the uncle to not share the reward. This would encourage
> > kickback-style attacks and advantage large mining pools because they
> > can mine on their own blocks and ignore colliding uncles.
> Including an uncle can be done at any time before a coinbase matures
> (100 blocks) (of course the term "uncle" is misleading in those cases) .
> So, for example, the uncle can be included 50 blocks afterward. So it's
> very difficult that a miner prevents other miners from including the
> uncle and taking the reward given by uncle inclusion.
>
> Same ineffective attack:
> A big miner could try to bribe all other miners not to include the
> uncle, but this would be terribly costly. Suppose that I mine a block
> ignoring an uncle Z and then I publish this message: "Every miner from
> block number X to block number Y that does not include this uncle Z will
> be given Q Bitcoins". How much would Q be? Since by including the uncle
> the miner gets 5 BTC of reward (in the example case where block reward
> is 50 BTC), then each bribery payment would have to be higher than 5
> BTC, totaling 500 BTC ! much more than the 25 BTC the miner will loose
> by including the uncle.
>
> Just by sending a transaction with a lot of fees that depends on my
> block does not prevent subsequent miners from including the supposedly
> banned uncle.
>
> Then, I think there are no kickback-style attacks.
>
> >
> > Also, I think this came up in the Princeton meet-up, but it's not
> > ideal to just hash the blocks to decide the "winner" because this lets
> > you know in advance your block's likelihood of winning a collision by
> > looking at how high or low its hash is, in which case you can publish
> > a weak block right away or withhold a strong one and do selfish
> > mining. A better approach to break ties between blocks A and B is to
> > see if H(A||B) < H(B||A). That way neither block holder can find out
> > in advance if their block is likely to win a collision.
> >
> In the DECOR protocol, I think selfish miners cannot get any advantage,
> because the blocks that loose the latency race will come back as uncles
> and get their reward share anyway. Maybe Ittay Eyal and Emin Gun Sirer
> can say more about this...
>
> Best regards, Sergio.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140505/4662568e/attachment.html>

From gojomo at gmail.com  Mon May  5 22:33:37 2014
From: gojomo at gmail.com (Gordon Mohr)
Date: Mon, 05 May 2014 15:33:37 -0700
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CACq0ZD7s8tp8GvJhEhZx4T7xMpeZ+tz5HNKQK-p=f=R10NaCmA@mail.gmail.com>
References: <CACq0ZD6EJnG4iwehfcFU-4AhBiNdtyf7eE9iGW8d6rv6327Eug@mail.gmail.com>	<53644F13.1080203@gmail.com>
	<CACq0ZD7s8tp8GvJhEhZx4T7xMpeZ+tz5HNKQK-p=f=R10NaCmA@mail.gmail.com>
Message-ID: <536811C1.1060706@gmail.com>

On 5/2/14, 10:41 PM, Aaron Voisine wrote:
> I have to agree with Mike. Human language is surprisingly tolerant of
> overloading and inference from context. Neurotypical people have no
> problem with it and perceive a software engineer's aversion to it as
> being pedantic and strange. Note that "bits" was a term for a unit of
> money long before the invention of digital computers.

Of course people *can* manage, when they need to; natural language is 
full of such overloading. But the clashes are not costless, they add 
mental load for first-time learners and low-context users.

So the concern is, when there's a free choice, why not bootstrap words 
that are less fragile and context-dependent? Why add extra comprehension 
gotchas into what is already a challenging domain?

And it's exactly the aspect that makes 'bit' attractive ? "it's right 
there in the name _Bit_coin!" ? that equally presents the clash ? 
because the sense of 'bit' honored in the "Bitcoin" name, and central to 
the systems' essential properties, is the binary digit.

It's like intentionally introducing a 'false friend' word-correlation 
between the vernacular of the casual Bitcoin user, and the language of 
Bitcoin experts. And the word pair is nearly auto-antonymic in some 
essential dimensions: indivisible vs. divisible, base-2 vs. base-10, 
composed-geometrically vs. composed-arithmetically.

https://en.wikipedia.org/wiki/False_friend - interferes w/ lang learning
https://en.wikipedia.org/wiki/Auto-antonym

In naming amounts, there's no desperate need to stay in the shallow 
crowded pool of words just derived from "bit" and "coin". Real 
currencies have many names for their units, including subunits with 
highly-unrelated sounds. The contrasting words help create more shades 
of meaning for different purposes. Some examples:

  dollars/bucks - bits (1/8ths) - dimes (1/10ths) - cents (1/100ths)
  pounds/quid - shillings (1/20ths) - pence (1/100th; formerly 1/240th)
  yuan/kuai - jiao (1/10ths) - fen (1/100ths)

Regarding the cute example of contextual disambiguation...

On 5/3/14, 11:15 PM, Aaron Voisine wrote:
> Bit by bit, it's become clear that it's a bit much to worry even a
> little bit that overloading the word "bit" would be every bit as bad
> as a two bit horse with the bit between it's teeth that bit the hand
> that feeds it, or a drill bit broken to bits after just a bit of use.

That there are many existing definitions doesn't reassure that one 
*extra* definition will still be costless, especially for 
low-literacy/low-context/low-numeracy users or learners.

Note that this example *doesn't* showcase the new proposed 
'100-satoshi-value' usage, nor activate the 'binary digit' meaning. (It 
does activate the "part/quantity, usually small or imprecise" sense of 
'bit', 7 times depending on how you classify the idioms.)

Try instead this mash of concepts, which someone deciding whether to 
trust 'bits' will face:

"Bitcoin uses the digital science of bits, the indivisible 1s and 0s of 
computer logic, to create a networked money measured in bits, which 
split into 100 indivisible cents called satoshis. Bit amounts are 
represented as 64-bit integer counts of 1/100th of a bit, so 64-bit 
integers can represent any balance from the smallest positive bit total, 
0.01 bits (integer 1), up to a number over 92 quintillion bits (2^63-1, 
integer 9,223,372,036,854,775,808).

That max value won't be needed, though, because a crucial bit of the 
original Satoshi design is a maximum issuance of 21,000,000,000,000.00 
bits (21 trillion bits, 21 terabits). These new bits are awarded to 
computers racing to complete a digital verification task on an 
algorithmic schedule: currently 25 million bits (25 megabits) arrive 
about every 10 minutes. That is, the total number of Bitcoin bits is 
increasing at 6.33 Kbps, though that arrival slows to 0 bps by around 
the year 2140.

The most important bit to remember is that your ability to spend bits is 
controlled by secret 256-bit numbers, called private keys, bits of info 
that only you know. The fact that these keys are 256-bits long is what 
makes them practically unguessable, even if someone had a computing 
budget of all the bits in the world, or built a computer out of all the 
bits in the universe. (That is, even though the network can create 25 
million bits every 10 minutes, it can't guess your secret 256 bits in 
the lifetime of the universe!)

Watch out, though: human-chosen passwords and 4-8 word phrases typically 
provide much less than 128 bits of security, far too little to create a 
256-bit key. And in the math of bits, having half as many bits doesn't 
mean half the security, it means the square-root as much security. (For 
a 128-bit shortfall, that's 2^128 or 340 billion billion billion billion 
times less strength.)

If your secret has enough bits, though, you can be confident that you 
can put millions of dollars into bits, because of the cryptographic 
power of hundreds of bits. The current value of a bit is 1/20th of a US 
cent, so 256 bits has the purchasing power of about 11?.

If you say you've got a bit of bitcoin in your wallet, I'll need you to 
be a bit more specific. If you've got one bit of bitcoin, you've got 
1/20th of a cent worth, an insignificant bit. But if you've got one 
bitcoin, you've got about $440 worth, quite a bit! Now you know a bit 
about Bitcoin, where your highly-valuable bits are protected by the 
science of bits. Get some bits now, they're small and still cheap, what 
is there to lose?"

Now, most people may never need to understand binary digits and 
information science. But if a future of widespread cryptocurrency 
success comes to pass, more people than ever before will want (and need) 
to understand the basics, and we can help them with clear terminology.

I'd also point out to those who've built their brands around the word 
'bit' that while it may seem grand to have the currency's most-common 
unit in your name/logo, you might wind up snake-bit. How?

*If* 'bit' is effectively bootstrapped to mean a tangible amount that 
people understand intuitively for everyday commerce, that amount is 
currently tiny (1/20th of a USD cent) and would still be tiny (10?) if 
bitcoin appreciates in value over 200x to USD$100K per bitcoin.

So "bitpay" starts reading as "penny-pay" ? and under an optimistic 
appreciation scenario might someday read as "dime-pay".

"bitsofproof" reads as "pennies-of-proof" or someday "dimes-of-proof".

- Gordon




From odinn.cyberguerrilla at riseup.net  Tue May  6 02:35:14 2014
From: odinn.cyberguerrilla at riseup.net (Odinn Cyberguerrilla)
Date: Mon, 5 May 2014 19:35:14 -0700
Subject: [Bitcoin-development] BIP70 proposed changes
In-Reply-To: <CAJHLa0MGaxJTGPR-bduW36-4Msb348FANqFmw67jqFxq1CLwbw@mail.gmail.com>
References: <le05ca$qn5$1@ger.gmane.org> <5303B110.70603@bitpay.com>
	<le0jvf$i7d$1@ger.gmane.org>
	<CAJHLa0MGaxJTGPR-bduW36-4Msb348FANqFmw67jqFxq1CLwbw@mail.gmail.com>
Message-ID: <70790f686997e51d680e9bde0c9d5a3e.squirrel@fulvetta.riseup.net>

I am curious if the Android developer who had been working on two factor
authentication and bitcoin had worked toward an open issue or pull
request?  I had been looking around for some sign that this had occurred
but hadn't found it, I am interested to know what is the progress in this
area (in a fully decentralized way that resides fully on one's device or
devices).

For some reason maidsafe keeps rising up in my brain, have bitcoin core
developers touched bases with maidsafe developers on these kind of fine
points?

Just thoughts and questions.

-Odinn

> On Tue, Feb 18, 2014 at 4:40 PM, Andreas Schildbach
> <andreas at schildbach.de> wrote:
>> On 02/18/2014 08:14 PM, Ryan X. Charles wrote:
>>> BitPay is working on a new standard
>>> based on bitcoin-like addresses for authentication. It would be great
>>> if
>>> we could work with the community to establish a complete, decentralized
>>> authentication protocol.
>>
>> Sounds interesting, let us know as soon as you have anything.
>
> SINs.  See https://en.bitcoin.it/wiki/Identity_protocol_v1
>
> --
> Jeff Garzik
> Bitcoin core developer and open source evangelist
> BitPay, Inc.      https://bitpay.com/
>
> ------------------------------------------------------------------------------
> Managing the Performance of Cloud-Based Applications
> Take advantage of what the Cloud has to offer - Avoid Common Pitfalls.
> Read the Whitepaper.
> http://pubads.g.doubleclick.net/gampad/clk?id=121054471&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>





From srintuar at gmail.com  Tue May  6 02:42:02 2014
From: srintuar at gmail.com (Srintuar)
Date: Mon, 5 May 2014 22:42:02 -0400
Subject: [Bitcoin-development] Bug in key.cpp
Message-ID: <CACUQsLJwNo=GtcozCRpZU9PDDJE1fY-mnMomCUtf0WCsgGEnfA@mail.gmail.com>

I think i see a bug:

line 273 of key.cpp

        if (rec<0 || rec>=3)
            return false;

Afaict, 3 is a perfectly valid value, meaning 25% of sig-> key recoveries
would fail erroneously...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140505/730bd78c/attachment.html>

From odinn.cyberguerrilla at riseup.net  Tue May  6 03:12:41 2014
From: odinn.cyberguerrilla at riseup.net (odinn.cyberguerrilla at riseup.net)
Date: Mon, 5 May 2014 20:12:41 -0700
Subject: [Bitcoin-development] Bug in key.cpp
In-Reply-To: <CACUQsLJwNo=GtcozCRpZU9PDDJE1fY-mnMomCUtf0WCsgGEnfA@mail.gmail.com>
References: <CACUQsLJwNo=GtcozCRpZU9PDDJE1fY-mnMomCUtf0WCsgGEnfA@mail.gmail.com>
Message-ID: <da34991a7a2db8f6f15401ed614cfe1e.squirrel@fulvetta.riseup.net>

You are right there is a bug in there.

But the value is not 25% I think.  Tinker some more. :-)

> I think i see a bug:
>
> line 273 of key.cpp
>
>         if (rec<0 || rec>=3)
>             return false;
>
> Afaict, 3 is a perfectly valid value, meaning 25% of sig-> key recoveries
> would fail erroneously...
> ------------------------------------------------------------------------------
> Is your legacy SCM system holding you back? Join Perforce May 7 to find
> out:
> &#149; 3 signs your SCM is hindering your productivity
> &#149; Requirements for releasing software faster
> &#149; Expert tips and advice for migrating your SCM now
> http://p.sf.net/sfu/perforce_______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>





From alonmuroch at gmail.com  Tue May  6 08:22:15 2014
From: alonmuroch at gmail.com (Alon Muroch)
Date: Tue, 6 May 2014 10:22:15 +0200
Subject: [Bitcoin-development] BIP70 proposed changes
In-Reply-To: <70790f686997e51d680e9bde0c9d5a3e.squirrel@fulvetta.riseup.net>
References: <le05ca$qn5$1@ger.gmane.org> <5303B110.70603@bitpay.com>
	<le0jvf$i7d$1@ger.gmane.org>
	<CAJHLa0MGaxJTGPR-bduW36-4Msb348FANqFmw67jqFxq1CLwbw@mail.gmail.com>
	<70790f686997e51d680e9bde0c9d5a3e.squirrel@fulvetta.riseup.net>
Message-ID: <CADCNpyO49OvysOB3RBEY1D8ei6Oz2xrd=ifmzC_3cbz1Wu09rQ@mail.gmail.com>

Hi Odinn,
There is a tromendous progress and we are working hard on the 2 factor
auth.
You an follow our progress at :
https://github.com/cpacia/BitcoinAuthenticator

We are still at development and there is a lot to be done :)


On Tue, May 6, 2014 at 4:35 AM, Odinn Cyberguerrilla <
odinn.cyberguerrilla at riseup.net> wrote:

> I am curious if the Android developer who had been working on two factor
> authentication and bitcoin had worked toward an open issue or pull
> request?  I had been looking around for some sign that this had occurred
> but hadn't found it, I am interested to know what is the progress in this
> area (in a fully decentralized way that resides fully on one's device or
> devices).
>
> For some reason maidsafe keeps rising up in my brain, have bitcoin core
> developers touched bases with maidsafe developers on these kind of fine
> points?
>
> Just thoughts and questions.
>
> -Odinn
>
> > On Tue, Feb 18, 2014 at 4:40 PM, Andreas Schildbach
> > <andreas at schildbach.de> wrote:
> >> On 02/18/2014 08:14 PM, Ryan X. Charles wrote:
> >>> BitPay is working on a new standard
> >>> based on bitcoin-like addresses for authentication. It would be great
> >>> if
> >>> we could work with the community to establish a complete, decentralized
> >>> authentication protocol.
> >>
> >> Sounds interesting, let us know as soon as you have anything.
> >
> > SINs.  See https://en.bitcoin.it/wiki/Identity_protocol_v1
> >
> > --
> > Jeff Garzik
> > Bitcoin core developer and open source evangelist
> > BitPay, Inc.      https://bitpay.com/
> >
> >
> ------------------------------------------------------------------------------
> > Managing the Performance of Cloud-Based Applications
> > Take advantage of what the Cloud has to offer - Avoid Common Pitfalls.
> > Read the Whitepaper.
> >
> http://pubads.g.doubleclick.net/gampad/clk?id=121054471&iu=/4140/ostg.clktrk
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
>
>
>
>
> ------------------------------------------------------------------------------
> Is your legacy SCM system holding you back? Join Perforce May 7 to find
> out:
> &#149; 3 signs your SCM is hindering your productivity
> &#149; Requirements for releasing software faster
> &#149; Expert tips and advice for migrating your SCM now
> http://p.sf.net/sfu/perforce
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140506/7a6497eb/attachment.html>

From pieter.wuille at gmail.com  Tue May  6 08:25:06 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Tue, 6 May 2014 10:25:06 +0200
Subject: [Bitcoin-development] Bug in key.cpp
In-Reply-To: <da34991a7a2db8f6f15401ed614cfe1e.squirrel@fulvetta.riseup.net>
References: <CACUQsLJwNo=GtcozCRpZU9PDDJE1fY-mnMomCUtf0WCsgGEnfA@mail.gmail.com>
	<da34991a7a2db8f6f15401ed614cfe1e.squirrel@fulvetta.riseup.net>
Message-ID: <CAPg+sBj4e-rXxjda9=_q6R+wxUfufGnvLU0v=BmQ1+g742BMKA@mail.gmail.com>

On Tue, May 6, 2014 at 5:12 AM,  <odinn.cyberguerrilla at riseup.net> wrote:
> You are right there is a bug in there.
>
> But the value is not 25% I think.  Tinker some more. :-)
>
>>
>> Afaict, 3 is a perfectly valid value, meaning 25% of sig-> key recoveries
>> would fail erroneously...

Values 2 and 3 are only needed in theory. They together shouldn't
occur more than once in 2**127 (when the signature value is between
the group size and the field size).

That said, this is indeed a bug.

-- 
Pieter



From tomh at thinlink.com  Tue May  6 17:49:05 2014
From: tomh at thinlink.com (Tom Harding)
Date: Tue, 06 May 2014 10:49:05 -0700
Subject: [Bitcoin-development] A statistical consensus rule for reducing
 0-conf double-spend risk
In-Reply-To: <CANOOu=_tpqz8wdDGj9x_xT5QcT=CHRbr+5Cewj5xuZyJ+ZurNw@mail.gmail.com>
References: <536589CC.8080005@thinlink.com>
	<CANOOu=_tpqz8wdDGj9x_xT5QcT=CHRbr+5Cewj5xuZyJ+ZurNw@mail.gmail.com>
Message-ID: <53692091.5040003@thinlink.com>

Christophe Biocca wrote:

> it becomes trivial with a few tries to split the network into two
> halves: (tx1 before tx2, tx2 before tx1).

"before" implies T=0.  That is a much too optimistic choice for T; 50% 
of nodes would misidentify the respend.


> Tom Harding <tomh at thinlink.com> wrote:
>>    - Eventually, node adds a consensus rule:
>>       Do not accept blocks containing a transaction tx2 where
>>           - tx2 respends an output spent by another locally accepted
>> transaction tx1, and
>>           - timestamp(tx2) - timestamp(tx1) > T




From sergiolerner at certimix.com  Wed May  7 04:31:01 2014
From: sergiolerner at certimix.com (Sergio Lerner)
Date: Wed, 07 May 2014 01:31:01 -0300
Subject: [Bitcoin-development] DECOR+ Better block selection rule
In-Reply-To: <CAOe4UimBEe4t1Z41du3r8pQUOmzd_1V_aESizuiH2U6uvN9nFA@mail.gmail.com>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
	<20140423150555.GE19430@savin>
	<CAOe4Ui=OaVLvh0vUnNv-1j41YB4B2x896DQ5b6xt4oUJ5oLPFg@mail.gmail.com>
	<53638616.2030009@certimix.com> <536388F9.3040607@certimix.com>
	<CAOe4UimBEe4t1Z41du3r8pQUOmzd_1V_aESizuiH2U6uvN9nFA@mail.gmail.com>
Message-ID: <5369B705.9090406@certimix.com>

This e-mail is an extract of my post:
http://bitslog.wordpress.com/2014/05/07/decor-2/

Some posts ago I presented the DECOR protocol. One of the assumptions I
did was that the amount of coins each miner earned in competing blocks
was approximately the same. This could be true for cryptocurrencies with
never ending block subsidies (inflationary designs) because the block
subsidy may be an order of magnitude higher than the fees collected in
the block. In Bitcoin we don?t really know what will happen with fees
when the reward is halved. Less we know if in that case the number of
transactions per block (and fees collected) will be fairly constant or
there will be high variability. If Alice and Bob compete for a certain
block height with blocks A and B respectively, and Alice?s block reward
(subsidy+fees) is half of Bob?s reward, then even if Hash(A) < Hash(B)
(and the DECOR incentives are set to prefer A) it may be the case that
both Alice and Bob would prefer to mine on top of B since they both earn
much more even paying the higher penalty d of burnt coins. In limit
cases, Alice?s optimal choice may not be the same as Bob?s optimal
choice. I propose a slight modification of the protocol such that even
with different block rewards the optimal choice of parent is always the
same for all miners. Instead of choosing the block with less hash
digest, miners will choose the block with higher reward (subsidy+fees).
Splitting the higher reward block would always be more profitable than
splitting lowest reward block. In the rare case both blocks have exactly
the same reward, then the block with lowest hash is chosen. Even if
rewards are approximately equal, the change adds a new monetary
incentive to cooperate. Compared with the DECOR protocol, the only
modification is in step 6.

*DECOR+ Mining strategy*

 1. If there is no block Y having a sibling X in the main chain whose
    reward has not matured then mine in the standard way and exit this
    procedure
 2. Add a reference to Y in the new block that is being prepared.
 3. Let x  := BlockReward(X)
 4. Let q := x*a
 5. Let z :=x*b
 6. If (BlockReward(X)<BlockReward(Y)) OR
    (BlockReward(X)=BlockReward(Y)) AND (Hash(X)>Hash(Y)) then
    q :=q-(x*c)
    z :=z+(x*d)
 7. Let w :=x*e
 8. Add a transaction that has as input the coinbase output of X and has
    four outputs:
          o pay q coins to the address specified in the coinbase output
            of block Y
          o pay w coins to an owned address
          o burns z coins
          o pay the remaining coins to the same address as the input
            address.

 

BlockReward() returns the block subsidy plus the transaction fees in the
block.

*Conditions on constants*

If you want to choose different values of a,b,c,d,e that still force
miners selections converge into a single parent then these conditions
must be satisfied:

  * e > 0
  * 1-a-e-b > a-c
  * 1+e-a-e-b > a-c
  * a > 1-a-c-e-b-d
  * a+e > 1-a-c-e-b-d

And all constants are between 0 and 1.

It's interesting that now it's much easier to prove that for two
competing miners the DECOR+ protocol cannot be abused, since there is no
dependence on the block content.

Best regards,
 Sergio.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140507/a54bf7e6/attachment.html>

From jameson.lopp at gmail.com  Wed May  7 19:12:18 2014
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Wed, 07 May 2014 15:12:18 -0400
Subject: [Bitcoin-development] Announcing the Statoshi fork
Message-ID: <536A8592.8010009@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

In order to gain more insight into what messages and requests a node is processing, I've created a Bitcoin Core fork that outputs statistics to StatsD. I hope that some of you will find this interesting and potentially useful.

http://coinchomp.com/2014/05/07/announcing-statoshi-realtime-bitcoin-node-statistics/

https://jlopp.github.io/statoshi/

Feedback is appreciated!

- - Jameson
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.14 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTaoWSAAoJEIch3FSFNiDclLoH/0CXPTum6B2cfoNsacihHuS9
9wt50sOgghttS3J/kloP315ijY7p2HSmhvqL2G/DWYh5Vx0f6gTaUAokQ8H6x4EV
3/pdZG+9a6eegpCtgr+IgphgPSEufzct/Mp7pKTAbH0G61toOM5ZfIgdL2X/2tpx
4TjOmjhZRHuglzsM9934EjezIsR7l2vaRQB0r1LPGSgWmDSKTTb2uK7xvD1zg0tz
QXb0hl7A6rw1xZwmw3i+PujshJCbjVh8QrFT55GYi05yYdBsS6BAG46F5D8Uvn+M
FnCBLdRfWrTzQXIxoLrtBmM1JXOJKdMhmG0p2mwzwXEGR7MR2suS/+Bb7iHJTpA=
=iNNR
-----END PGP SIGNATURE-----



From laanwj at gmail.com  Wed May  7 19:46:42 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 7 May 2014 21:46:42 +0200
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <536A8592.8010009@gmail.com>
References: <536A8592.8010009@gmail.com>
Message-ID: <CA+s+GJASND3OU2e+YxUeLmSOW6pTkMwuzHCHeJnnihg6xK9Caw@mail.gmail.com>

On Wed, May 7, 2014 at 9:12 PM, Jameson Lopp <jameson.lopp at gmail.com> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> In order to gain more insight into what messages and requests a node is processing, I've created a Bitcoin Core fork that outputs statistics to StatsD. I hope that some of you will find this interesting and potentially useful.
>
> http://coinchomp.com/2014/05/07/announcing-statoshi-realtime-bitcoin-node-statistics/
>
> https://jlopp.github.io/statoshi/
>
> Feedback is appreciated!

Ooh nice graphs!

We were coincidentally talking about showing stats from a node on a
local web site on the #bitcoin-dev IRC a few days ago.

At some point, if we're going to offer Bitcoin Core node-only
installers, it'd be nice to include something like this so the user
can keep an eye on their node(s).

Wladimir



From mike at plan99.net  Wed May  7 19:50:53 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 7 May 2014 21:50:53 +0200
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <536A8592.8010009@gmail.com>
References: <536A8592.8010009@gmail.com>
Message-ID: <CANEZrP1A0z0sVBHzW_2Z1RJ6STX9G1RW_KncbY_yN7NuTL8BZw@mail.gmail.com>

Really nice! We definitely need to put together a team who really cares
about the operations side of the network and this is a fantastic start.

It'd be nice if you didn't assume knowledge of what statsd is out of the
box. Given the name I'd assumed it was a small UNIX daemon but it seems
it's actually a Javascript thingy?

It looks like putting together a monitored bitcoind setup can be quite a
lot of work. I wonder if there are ways to simplify it. For example, would
it make sense for someone to run a community statsd and graphite instance,
so we can get aggregate statistics across many nodes and the node operators
don't have to set everything up themselves? Does that make any sense?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140507/b28c294a/attachment.html>

From jameson.lopp at gmail.com  Wed May  7 19:57:32 2014
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Wed, 07 May 2014 15:57:32 -0400
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <CA+s+GJASND3OU2e+YxUeLmSOW6pTkMwuzHCHeJnnihg6xK9Caw@mail.gmail.com>
References: <536A8592.8010009@gmail.com>
	<CA+s+GJASND3OU2e+YxUeLmSOW6pTkMwuzHCHeJnnihg6xK9Caw@mail.gmail.com>
Message-ID: <536A902C.6080602@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

The next logical step may be for us to offer a public instance of these graphs; I'd be happy to work with you to set one up.

I agree that it would be awesome to offer these types of stats with the installer; unfortunately the route I've taken has dependencies on several other other pieces of software to do all the heavy lifting of stats aggregation and chart rendering. I'm assuming that you would not want to build any of that processing into Bitcoin Core itself; would you be opposed to packaging other software along with the installer?

- - Jameson

On 05/07/2014 03:46 PM, Wladimir wrote:
> On Wed, May 7, 2014 at 9:12 PM, Jameson Lopp <jameson.lopp at gmail.com> wrote:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>>
>> In order to gain more insight into what messages and requests a node is processing, I've created a Bitcoin Core fork that outputs statistics to StatsD. I hope that some of you will find this interesting and potentially useful.
>>
>> http://coinchomp.com/2014/05/07/announcing-statoshi-realtime-bitcoin-node-statistics/
>>
>> https://jlopp.github.io/statoshi/
>>
>> Feedback is appreciated!
> 
> Ooh nice graphs!
> 
> We were coincidentally talking about showing stats from a node on a
> local web site on the #bitcoin-dev IRC a few days ago.
> 
> At some point, if we're going to offer Bitcoin Core node-only
> installers, it'd be nice to include something like this so the user
> can keep an eye on their node(s).
> 
> Wladimir
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.14 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTapAsAAoJEIch3FSFNiDcyMEIAIds0yo9zeWcqNqGZ+UNltoH
hNt8NhYOgL/6WNeLVYdRmCrrdNn/KMSLcAZmOQ0U+W/qL3xh1RB59o3BcBnW05Yr
ZxY5ajKKq+oz70ShMNUkVnzFSStMhH9fKnolrF0mgSx4CU9e0YTx/LBc/u9ulypO
QNZydiiegwvTFjMxHItgU5xo/wzySazmyxN9x3Gls98vDfSjE3Rt/DTqAwHleD3t
SlIu4RU2iPpAW/6MgfWqAw+CrbZ2NNKp7a7+0gsUlbdDP1h6WEvoae5sUzRmvLB3
rHMmRoRvTl4Hl1bG7CKyM4D3piBkpDf/nMqnAAFNYkocS5xVpHM1WrTMDAmkSLk=
=/TPp
-----END PGP SIGNATURE-----



From jameson.lopp at gmail.com  Wed May  7 20:00:44 2014
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Wed, 07 May 2014 16:00:44 -0400
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <CANEZrP1A0z0sVBHzW_2Z1RJ6STX9G1RW_KncbY_yN7NuTL8BZw@mail.gmail.com>
References: <536A8592.8010009@gmail.com>
	<CANEZrP1A0z0sVBHzW_2Z1RJ6STX9G1RW_KncbY_yN7NuTL8BZw@mail.gmail.com>
Message-ID: <536A90EC.3000205@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I completely agree that this setup is far too difficult to reasonably expect anyone to implement it. You're correct that we could run a single StatsD daemon and have quite a few nodes sending statistics to it - this is really what StatsD was designed for - sampling small amounts of stats from high volume systems. There would be an issue of trust, however - StatsD was also only really designed to be run inside of highly secure infrastructure where you trust all of the machines that are talking to it.

- - Jameson

On 05/07/2014 03:50 PM, Mike Hearn wrote:
> Really nice! We definitely need to put together a team who really cares
> about the operations side of the network and this is a fantastic start.
> 
> It'd be nice if you didn't assume knowledge of what statsd is out of the
> box. Given the name I'd assumed it was a small UNIX daemon but it seems
> it's actually a Javascript thingy?
> 
> It looks like putting together a monitored bitcoind setup can be quite a
> lot of work. I wonder if there are ways to simplify it. For example, would
> it make sense for someone to run a community statsd and graphite instance,
> so we can get aggregate statistics across many nodes and the node operators
> don't have to set everything up themselves? Does that make any sense?
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.14 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTapDsAAoJEIch3FSFNiDcqNMIAKbliLXVJ+CovCB+etqwCYfD
oTs0uxEIZvnGSzqn6i3z4tgzF7kbnpVThiHpG2MO2BytasGzfr+FsDLFpvkkvx0Q
yffa1J5uB5QhY/POwg6GCN4DEmy8tbd+I5rSTKg1m/JuXZV2B4TFgr6GF+t+gBNT
O2TTIngcl77XbGDF2XKOZSAHaIFx2KjdZNg5lfInVxDeA1dDzlU/vmEB37fx80EH
IzD7FTllLp5qhlwYxaQTVxXmbjy+pXbtArYsVSRgoscgJI3DDKpxQj3uzjxouEHv
27QkhuS2dzFioQhLPcnz/PtcCkE1l0aDNf6n7OiJ3lGygQ0+AKZHpyuvFujpSY8=
=QCYI
-----END PGP SIGNATURE-----



From mike at plan99.net  Wed May  7 20:12:13 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 7 May 2014 22:12:13 +0200
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <536A90EC.3000205@gmail.com>
References: <536A8592.8010009@gmail.com>
	<CANEZrP1A0z0sVBHzW_2Z1RJ6STX9G1RW_KncbY_yN7NuTL8BZw@mail.gmail.com>
	<536A90EC.3000205@gmail.com>
Message-ID: <CANEZrP1v2gB5zux6Y+7Ves5BedOD-4_N_7JHeV1s7EjNVSagQw@mail.gmail.com>

It looks like the packet format statsd expects is rather simple - it should
be easy to experiment with.

Perhaps a good next step would be to improve your patch so that someone can
get a feed of the stats packets via TCP by e.g. ssh tunnelling to their
host. Once it's easy to get a feed of simple stats packets, people can
easily experiment with different kinds of aggregation and monitoring
software from their desktop.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140507/6641da6e/attachment.html>

From stick at gk2.sk  Wed May  7 19:55:21 2014
From: stick at gk2.sk (Pavol Rusnak)
Date: Wed, 07 May 2014 21:55:21 +0200
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <536A8592.8010009@gmail.com>
References: <536A8592.8010009@gmail.com>
Message-ID: <536A8FA9.5060206@gk2.sk>

On 05/07/2014 09:12 PM, Jameson Lopp wrote:
> I've created a Bitcoin Core fork that outputs statistics to StatsD.

How complex is the patchset? Would it be possible to merge it into the
mainline and enable compilation of this feature conditionally by some
build-time option?

-- 
Best Regards / S pozdravom,

Pavol Rusnak <stick at gk2.sk>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 836 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140507/3e0fab77/attachment.sig>

From laanwj at gmail.com  Wed May  7 20:18:50 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 7 May 2014 22:18:50 +0200
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <536A902C.6080602@gmail.com>
References: <536A8592.8010009@gmail.com>
	<CA+s+GJASND3OU2e+YxUeLmSOW6pTkMwuzHCHeJnnihg6xK9Caw@mail.gmail.com>
	<536A902C.6080602@gmail.com>
Message-ID: <CA+s+GJCaUX3ErgVean0e91CBorPc6RNKgYs08fOOsqNYtbd6RA@mail.gmail.com>

On Wed, May 7, 2014 at 9:57 PM, Jameson Lopp <jameson.lopp at gmail.com> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> I agree that it would be awesome to offer these types of stats with the installer; unfortunately the route I've taken has dependencies on several other other pieces of software to do all the heavy lifting of stats aggregation and chart rendering. I'm assuming that you would not want to build any of that processing into Bitcoin Core itself; would you be opposed to packaging other software along with the installer?

Depends on just how much stuff it is. The idea is primarily to have an
installer for running a (wallet-less) node as an OS background
service.

Having some statistics available would be worth some extra download
size, otherwise it would be pretty much invisible.

We'd already decided that we would need something like Python for the
stats service. Implementing things like web services in C++ is just
not realistic given the time constraints and the great already-written
code that is out there. As an optional tool it should be external, not
part of bitcoind itself.

I suppose the chart rendering happens client-side? In that case the
web service just has to collect and provide the data, and serve static
html/js files.

Wladimir



From mike at plan99.net  Wed May  7 20:25:31 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 7 May 2014 22:25:31 +0200
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <CA+s+GJCaUX3ErgVean0e91CBorPc6RNKgYs08fOOsqNYtbd6RA@mail.gmail.com>
References: <536A8592.8010009@gmail.com>
	<CA+s+GJASND3OU2e+YxUeLmSOW6pTkMwuzHCHeJnnihg6xK9Caw@mail.gmail.com>
	<536A902C.6080602@gmail.com>
	<CA+s+GJCaUX3ErgVean0e91CBorPc6RNKgYs08fOOsqNYtbd6RA@mail.gmail.com>
Message-ID: <CANEZrP2aUBFkwx0s_xcS_e4gv1Ao1240NVNNFR3bFUBf9hHqsA@mail.gmail.com>

I think there a few different possible ways to go here.

One is to try and simplify the setup of all the components so it all gets
installed together. That might be feasible in some quite restricted setups
but the installation instructions for Graphite look kind of terrifying.

Another is to export stats over regular TCP and make them public so
literally anyone can listen to the stats feed for any node. Then people who
dig stats and graphs could work on stats aggregators that give global
network visibility independently, effectively crawling the p2p network for
data. It'd have the advantage of having zero setup for the node operators
and not require much in the way of resources.

For what it's worth, although the environment is a bit different inside
Google the latter approach is used. Monitoring servers locate servers of
interest via a discovery service, connect to them and start streaming stats
data into a database service that can then be queried later to get graphs.

The stats are also run through various rules to obtain alerts about
problematic conditions. For example, if a subset of the network splits it
might be hard to notice that if the node operators aren't paying attention
and Matt's fork alert/emailing code isn't set up. But if there was a site
crawling nodes and aggregating chain heights by version, that could trigger
an alert to people who *are* paying attention.

I know from practical experience that monitoring and analysis tends to
appeal more to certain types of people than others. So I quite like the
"let anyone monitor" approach. However, it may not be appropriate in a P2P
network, I did not think about it much.

Obviously I'm assuming none of the stats expose privacy sensitive data.



On Wed, May 7, 2014 at 10:18 PM, Wladimir <laanwj at gmail.com> wrote:

> On Wed, May 7, 2014 at 9:57 PM, Jameson Lopp <jameson.lopp at gmail.com>
> wrote:
> > -----BEGIN PGP SIGNED MESSAGE-----
> > Hash: SHA1
> >
> > I agree that it would be awesome to offer these types of stats with the
> installer; unfortunately the route I've taken has dependencies on several
> other other pieces of software to do all the heavy lifting of stats
> aggregation and chart rendering. I'm assuming that you would not want to
> build any of that processing into Bitcoin Core itself; would you be opposed
> to packaging other software along with the installer?
>
> Depends on just how much stuff it is. The idea is primarily to have an
> installer for running a (wallet-less) node as an OS background
> service.
>
> Having some statistics available would be worth some extra download
> size, otherwise it would be pretty much invisible.
>
> We'd already decided that we would need something like Python for the
> stats service. Implementing things like web services in C++ is just
> not realistic given the time constraints and the great already-written
> code that is out there. As an optional tool it should be external, not
> part of bitcoind itself.
>
> I suppose the chart rendering happens client-side? In that case the
> web service just has to collect and provide the data, and serve static
> html/js files.
>
> Wladimir
>
>
> ------------------------------------------------------------------------------
> Is your legacy SCM system holding you back? Join Perforce May 7 to find
> out:
> &#149; 3 signs your SCM is hindering your productivity
> &#149; Requirements for releasing software faster
> &#149; Expert tips and advice for migrating your SCM now
> http://p.sf.net/sfu/perforce
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140507/2826ee4a/attachment.html>

From nelsoneci at gmail.com  Wed May  7 20:28:28 2014
From: nelsoneci at gmail.com (Nelson Castillo)
Date: Wed, 7 May 2014 15:28:28 -0500
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <CA+s+GJCaUX3ErgVean0e91CBorPc6RNKgYs08fOOsqNYtbd6RA@mail.gmail.com>
References: <536A8592.8010009@gmail.com>
	<CA+s+GJASND3OU2e+YxUeLmSOW6pTkMwuzHCHeJnnihg6xK9Caw@mail.gmail.com>
	<536A902C.6080602@gmail.com>
	<CA+s+GJCaUX3ErgVean0e91CBorPc6RNKgYs08fOOsqNYtbd6RA@mail.gmail.com>
Message-ID: <CAPFxkVmPVp01hVMbNsseOJ=5MyCCQ9J1cYChK3-Z93UDp6qP9Q@mail.gmail.com>

On Wed, May 7, 2014 at 3:18 PM, Wladimir <laanwj at gmail.com> wrote:

> On Wed, May 7, 2014 at 9:57 PM, Jameson Lopp <jameson.lopp at gmail.com>
> wrote:
> > -----BEGIN PGP SIGNED MESSAGE-----
> > Hash: SHA1
> >
> > I agree that it would be awesome to offer these types of stats with the
> installer; unfortunately the route I've taken has dependencies on several
> other other pieces of software to do all the heavy lifting of stats
> aggregation and chart rendering. I'm assuming that you would not want to
> build any of that processing into Bitcoin Core itself; would you be opposed
> to packaging other software along with the installer?
>
> Depends on just how much stuff it is. The idea is primarily to have an
> installer for running a (wallet-less) node as an OS background
> service.
>
> Having some statistics available would be worth some extra download
> size, otherwise it would be pretty much invisible.
>
> We'd already decided that we would need something like Python for the
> stats service. Implementing things like web services in C++ is just
> not realistic given the time constraints and the great already-written
> code that is out there. As an optional tool it should be external, not
> part of bitcoind itself.
>
> I suppose the chart rendering happens client-side? In that case the
> web service just has to collect and provide the data, and serve static
> html/js files.
>

Is SNMP an option? That way you do not need to implement clients and there
are many tools written.


> Wladimir
>
>
> ------------------------------------------------------------------------------
> Is your legacy SCM system holding you back? Join Perforce May 7 to find
> out:
> &#149; 3 signs your SCM is hindering your productivity
> &#149; Requirements for releasing software faster
> &#149; Expert tips and advice for migrating your SCM now
> http://p.sf.net/sfu/perforce
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140507/9c16d25c/attachment.html>

From cshrem at gmail.com  Wed May  7 20:31:04 2014
From: cshrem at gmail.com (Charlie 'Charles' Shrem)
Date: Wed, 7 May 2014 16:31:04 -0400
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <CANEZrP2aUBFkwx0s_xcS_e4gv1Ao1240NVNNFR3bFUBf9hHqsA@mail.gmail.com>
References: <536A8592.8010009@gmail.com>
	<CA+s+GJASND3OU2e+YxUeLmSOW6pTkMwuzHCHeJnnihg6xK9Caw@mail.gmail.com>
	<536A902C.6080602@gmail.com>
	<CA+s+GJCaUX3ErgVean0e91CBorPc6RNKgYs08fOOsqNYtbd6RA@mail.gmail.com>
	<CANEZrP2aUBFkwx0s_xcS_e4gv1Ao1240NVNNFR3bFUBf9hHqsA@mail.gmail.com>
Message-ID: <CAC787aNHX+5UOdiKNY1P4xPXMttRt=th72czaMop7hzjyYTAog@mail.gmail.com>

I'm going to install this now on my full node, looks really cool!

This is my node page: http://199.58.210.124/



Thanks,

Charlie

CharlieShrem.com | *Please **encrypt messages with my PGP key
<http://charlieshrem.com/contact/>*


On Wed, May 7, 2014 at 4:25 PM, Mike Hearn <mike at plan99.net> wrote:

> I think there a few different possible ways to go here.
>
> One is to try and simplify the setup of all the components so it all gets
> installed together. That might be feasible in some quite restricted setups
> but the installation instructions for Graphite look kind of terrifying.
>
> Another is to export stats over regular TCP and make them public so
> literally anyone can listen to the stats feed for any node. Then people who
> dig stats and graphs could work on stats aggregators that give global
> network visibility independently, effectively crawling the p2p network for
> data. It'd have the advantage of having zero setup for the node operators
> and not require much in the way of resources.
>
> For what it's worth, although the environment is a bit different inside
> Google the latter approach is used. Monitoring servers locate servers of
> interest via a discovery service, connect to them and start streaming stats
> data into a database service that can then be queried later to get graphs.
>
> The stats are also run through various rules to obtain alerts about
> problematic conditions. For example, if a subset of the network splits it
> might be hard to notice that if the node operators aren't paying attention
> and Matt's fork alert/emailing code isn't set up. But if there was a site
> crawling nodes and aggregating chain heights by version, that could trigger
> an alert to people who *are* paying attention.
>
> I know from practical experience that monitoring and analysis tends to
> appeal more to certain types of people than others. So I quite like the
> "let anyone monitor" approach. However, it may not be appropriate in a P2P
> network, I did not think about it much.
>
> Obviously I'm assuming none of the stats expose privacy sensitive data.
>
>
>
> On Wed, May 7, 2014 at 10:18 PM, Wladimir <laanwj at gmail.com> wrote:
>
>> On Wed, May 7, 2014 at 9:57 PM, Jameson Lopp <jameson.lopp at gmail.com>
>> wrote:
>> > -----BEGIN PGP SIGNED MESSAGE-----
>> > Hash: SHA1
>> >
>> > I agree that it would be awesome to offer these types of stats with the
>> installer; unfortunately the route I've taken has dependencies on several
>> other other pieces of software to do all the heavy lifting of stats
>> aggregation and chart rendering. I'm assuming that you would not want to
>> build any of that processing into Bitcoin Core itself; would you be opposed
>> to packaging other software along with the installer?
>>
>> Depends on just how much stuff it is. The idea is primarily to have an
>> installer for running a (wallet-less) node as an OS background
>> service.
>>
>> Having some statistics available would be worth some extra download
>> size, otherwise it would be pretty much invisible.
>>
>> We'd already decided that we would need something like Python for the
>> stats service. Implementing things like web services in C++ is just
>> not realistic given the time constraints and the great already-written
>> code that is out there. As an optional tool it should be external, not
>> part of bitcoind itself.
>>
>> I suppose the chart rendering happens client-side? In that case the
>> web service just has to collect and provide the data, and serve static
>> html/js files.
>>
>> Wladimir
>>
>>
>> ------------------------------------------------------------------------------
>> Is your legacy SCM system holding you back? Join Perforce May 7 to find
>> out:
>> &#149; 3 signs your SCM is hindering your productivity
>> &#149; Requirements for releasing software faster
>> &#149; Expert tips and advice for migrating your SCM now
>> http://p.sf.net/sfu/perforce
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
>
> ------------------------------------------------------------------------------
> Is your legacy SCM system holding you back? Join Perforce May 7 to find
> out:
> &#149; 3 signs your SCM is hindering your productivity
> &#149; Requirements for releasing software faster
> &#149; Expert tips and advice for migrating your SCM now
> http://p.sf.net/sfu/perforce
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140507/8915977a/attachment.html>

From jameson.lopp at gmail.com  Wed May  7 20:35:06 2014
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Wed, 07 May 2014 16:35:06 -0400
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <CA+s+GJCaUX3ErgVean0e91CBorPc6RNKgYs08fOOsqNYtbd6RA@mail.gmail.com>
References: <536A8592.8010009@gmail.com>	<CA+s+GJASND3OU2e+YxUeLmSOW6pTkMwuzHCHeJnnihg6xK9Caw@mail.gmail.com>	<536A902C.6080602@gmail.com>
	<CA+s+GJCaUX3ErgVean0e91CBorPc6RNKgYs08fOOsqNYtbd6RA@mail.gmail.com>
Message-ID: <536A98FA.3090207@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

The charts are generated on-demand by Graphite, which is a Django app.

I will note that one reason I chose StatsD is because it sends the stats via UDP rather than TCP, which is a non-blocking operation. I didn't want the sending of stats to affect the node's performance.

- - Jameson

On 05/07/2014 04:18 PM, Wladimir wrote:
> On Wed, May 7, 2014 at 9:57 PM, Jameson Lopp <jameson.lopp at gmail.com> wrote:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>>
>> I agree that it would be awesome to offer these types of stats with the installer; unfortunately the route I've taken has dependencies on several other other pieces of software to do all the heavy lifting of stats aggregation and chart rendering. I'm assuming that you would not want to build any of that processing into Bitcoin Core itself; would you be opposed to packaging other software along with the installer?
> 
> Depends on just how much stuff it is. The idea is primarily to have an
> installer for running a (wallet-less) node as an OS background
> service.
> 
> Having some statistics available would be worth some extra download
> size, otherwise it would be pretty much invisible.
> 
> We'd already decided that we would need something like Python for the
> stats service. Implementing things like web services in C++ is just
> not realistic given the time constraints and the great already-written
> code that is out there. As an optional tool it should be external, not
> part of bitcoind itself.
> 
> I suppose the chart rendering happens client-side? In that case the
> web service just has to collect and provide the data, and serve static
> html/js files.
> 
> Wladimir
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.14 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTapj5AAoJEIch3FSFNiDcofAIALHi7XgQi8pf75btujaeBsX3
nniRD0yZIkoAvPlvFLiKQGE8TH+VR8Sb9fQACzmajYx1yjD0gN4xvkJXbI+pkeP5
L8ZryhqxL5qCh/OI4+fkWlsp5Nwx89QvUepdXXdc/AQGQJIEMceiZOLDcjbk29Yb
vCsyJL5yhzM9BM0cImuvrOBPtF3/L6DbgHP8OLD2LHRl4paJ1UDtfYCx3HVO9wp8
ZWq1oCaFyoYmUyx8GTUzbLjh9sOgaq43GKYec/kQSLmFxhhMF0dGNDMiwD/xz1i7
LIswjlEKHZYOWWL3SMQg3pLlOTzGH4mHg++BAyrtzZ5CHlc1rjsPSk2d2Df/8Zc=
=GFu9
-----END PGP SIGNATURE-----



From cshrem at gmail.com  Wed May  7 21:04:14 2014
From: cshrem at gmail.com (Charlie 'Charles' Shrem)
Date: Wed, 7 May 2014 17:04:14 -0400
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <536A98FA.3090207@gmail.com>
References: <536A8592.8010009@gmail.com>
	<CA+s+GJASND3OU2e+YxUeLmSOW6pTkMwuzHCHeJnnihg6xK9Caw@mail.gmail.com>
	<536A902C.6080602@gmail.com>
	<CA+s+GJCaUX3ErgVean0e91CBorPc6RNKgYs08fOOsqNYtbd6RA@mail.gmail.com>
	<536A98FA.3090207@gmail.com>
Message-ID: <CAC787aPB1QKj0rkooZPA1pM+YCgEY8EBVTz7rp-FYDs1gHV3Yw@mail.gmail.com>

For those who are interested, here is my 9 step way to install a full node.
I tried to make it as universal as possible.

http://charlieshrem.com/node/

Thanks,

Charlie

CharlieShrem.com | *Please **encrypt messages with my PGP key
<http://charlieshrem.com/contact/>*


On Wed, May 7, 2014 at 4:35 PM, Jameson Lopp <jameson.lopp at gmail.com> wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> The charts are generated on-demand by Graphite, which is a Django app.
>
> I will note that one reason I chose StatsD is because it sends the stats
> via UDP rather than TCP, which is a non-blocking operation. I didn't want
> the sending of stats to affect the node's performance.
>
> - - Jameson
>
> On 05/07/2014 04:18 PM, Wladimir wrote:
> > On Wed, May 7, 2014 at 9:57 PM, Jameson Lopp <jameson.lopp at gmail.com>
> wrote:
> >> -----BEGIN PGP SIGNED MESSAGE-----
> >> Hash: SHA1
> >>
> >> I agree that it would be awesome to offer these types of stats with the
> installer; unfortunately the route I've taken has dependencies on several
> other other pieces of software to do all the heavy lifting of stats
> aggregation and chart rendering. I'm assuming that you would not want to
> build any of that processing into Bitcoin Core itself; would you be opposed
> to packaging other software along with the installer?
> >
> > Depends on just how much stuff it is. The idea is primarily to have an
> > installer for running a (wallet-less) node as an OS background
> > service.
> >
> > Having some statistics available would be worth some extra download
> > size, otherwise it would be pretty much invisible.
> >
> > We'd already decided that we would need something like Python for the
> > stats service. Implementing things like web services in C++ is just
> > not realistic given the time constraints and the great already-written
> > code that is out there. As an optional tool it should be external, not
> > part of bitcoind itself.
> >
> > I suppose the chart rendering happens client-side? In that case the
> > web service just has to collect and provide the data, and serve static
> > html/js files.
> >
> > Wladimir
> >
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.14 (GNU/Linux)
> Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/
>
> iQEcBAEBAgAGBQJTapj5AAoJEIch3FSFNiDcofAIALHi7XgQi8pf75btujaeBsX3
> nniRD0yZIkoAvPlvFLiKQGE8TH+VR8Sb9fQACzmajYx1yjD0gN4xvkJXbI+pkeP5
> L8ZryhqxL5qCh/OI4+fkWlsp5Nwx89QvUepdXXdc/AQGQJIEMceiZOLDcjbk29Yb
> vCsyJL5yhzM9BM0cImuvrOBPtF3/L6DbgHP8OLD2LHRl4paJ1UDtfYCx3HVO9wp8
> ZWq1oCaFyoYmUyx8GTUzbLjh9sOgaq43GKYec/kQSLmFxhhMF0dGNDMiwD/xz1i7
> LIswjlEKHZYOWWL3SMQg3pLlOTzGH4mHg++BAyrtzZ5CHlc1rjsPSk2d2Df/8Zc=
> =GFu9
> -----END PGP SIGNATURE-----
>
>
> ------------------------------------------------------------------------------
> Is your legacy SCM system holding you back? Join Perforce May 7 to find
> out:
> &#149; 3 signs your SCM is hindering your productivity
> &#149; Requirements for releasing software faster
> &#149; Expert tips and advice for migrating your SCM now
> http://p.sf.net/sfu/perforce
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140507/a3cd38d2/attachment.html>

From laanwj at gmail.com  Wed May  7 21:07:21 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 7 May 2014 23:07:21 +0200
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <CANEZrP2aUBFkwx0s_xcS_e4gv1Ao1240NVNNFR3bFUBf9hHqsA@mail.gmail.com>
References: <536A8592.8010009@gmail.com>
	<CA+s+GJASND3OU2e+YxUeLmSOW6pTkMwuzHCHeJnnihg6xK9Caw@mail.gmail.com>
	<536A902C.6080602@gmail.com>
	<CA+s+GJCaUX3ErgVean0e91CBorPc6RNKgYs08fOOsqNYtbd6RA@mail.gmail.com>
	<CANEZrP2aUBFkwx0s_xcS_e4gv1Ao1240NVNNFR3bFUBf9hHqsA@mail.gmail.com>
Message-ID: <CA+s+GJC7p-W6EeGwsPXG7oDccpC_LfjE-mAiZjpkMtRwxH5sMw@mail.gmail.com>

On Wed, May 7, 2014 at 10:25 PM, Mike Hearn <mike at plan99.net> wrote:
> Another is to export stats over regular TCP and make them public so
> literally anyone can listen to the stats feed for any node.

TOR does this as well: http://torstatus.blutmagie.de/

No idea what they use to submit/gather the statistics.

Wladimir



From gmaxwell at gmail.com  Thu May  8 00:47:17 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 7 May 2014 17:47:17 -0700
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <CA+s+GJC7p-W6EeGwsPXG7oDccpC_LfjE-mAiZjpkMtRwxH5sMw@mail.gmail.com>
References: <536A8592.8010009@gmail.com>
	<CA+s+GJASND3OU2e+YxUeLmSOW6pTkMwuzHCHeJnnihg6xK9Caw@mail.gmail.com>
	<536A902C.6080602@gmail.com>
	<CA+s+GJCaUX3ErgVean0e91CBorPc6RNKgYs08fOOsqNYtbd6RA@mail.gmail.com>
	<CANEZrP2aUBFkwx0s_xcS_e4gv1Ao1240NVNNFR3bFUBf9hHqsA@mail.gmail.com>
	<CA+s+GJC7p-W6EeGwsPXG7oDccpC_LfjE-mAiZjpkMtRwxH5sMw@mail.gmail.com>
Message-ID: <CAAS2fgR0CtYeLmp8pmMFvtOyqrhNgz0U-BsfBQ7QRr3dM-7J9g@mail.gmail.com>

On Wed, May 7, 2014 at 2:07 PM, Wladimir <laanwj at gmail.com> wrote:
> On Wed, May 7, 2014 at 10:25 PM, Mike Hearn <mike at plan99.net> wrote:
>> Another is to export stats over regular TCP and make them public so
>> literally anyone can listen to the stats feed for any node.
>
> TOR does this as well: http://torstatus.blutmagie.de/
>
> No idea what they use to submit/gather the statistics.

The tor network works based on a centralized (well, in theory,
federated) trusted directory service. (More info in
https://gitweb.torproject.org/torspec.git?a=blob_plain;hb=HEAD;f=dir-spec.txt).

Much of data that is not related to relay related is just generated by
probes, e.g. semi-trusted bandwidth authorities that measure node
performance back to the directory authorities.

More info on their monitoring work is available here:
https://metrics.torproject.org/tools.html



From laanwj at gmail.com  Thu May  8 07:45:02 2014
From: laanwj at gmail.com (Wladimir)
Date: Thu, 8 May 2014 09:45:02 +0200
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <CAAS2fgR0CtYeLmp8pmMFvtOyqrhNgz0U-BsfBQ7QRr3dM-7J9g@mail.gmail.com>
References: <536A8592.8010009@gmail.com>
	<CA+s+GJASND3OU2e+YxUeLmSOW6pTkMwuzHCHeJnnihg6xK9Caw@mail.gmail.com>
	<536A902C.6080602@gmail.com>
	<CA+s+GJCaUX3ErgVean0e91CBorPc6RNKgYs08fOOsqNYtbd6RA@mail.gmail.com>
	<CANEZrP2aUBFkwx0s_xcS_e4gv1Ao1240NVNNFR3bFUBf9hHqsA@mail.gmail.com>
	<CA+s+GJC7p-W6EeGwsPXG7oDccpC_LfjE-mAiZjpkMtRwxH5sMw@mail.gmail.com>
	<CAAS2fgR0CtYeLmp8pmMFvtOyqrhNgz0U-BsfBQ7QRr3dM-7J9g@mail.gmail.com>
Message-ID: <CA+s+GJDm=J6-SYr4KEZ70f46E3U61Yva36a-gccRFSiT5ia2-g@mail.gmail.com>

On Thu, May 8, 2014 at 2:47 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
>
> The tor network works based on a centralized (well, in theory,
> federated) trusted directory service. (More info in
> https://gitweb.torproject.org/torspec.git?a=blob_plain;hb=HEAD;f=dir-spec.txt).

Thanks!

> Much of data that is not related to relay related is just generated by
> probes, e.g. semi-trusted bandwidth authorities that measure node
> performance back to the directory authorities.

Right, so there is more involved than just adding having nodes provide
measuring points, a third-party is also performing tests on the nodes.

In a way it looks similar to how the Bitcoin DNS seeds work, trying to
find good and stable nodes, although more extensive.

Wladimir



From mike at plan99.net  Thu May  8 10:08:19 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 8 May 2014 12:08:19 +0200
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <CA+s+GJDm=J6-SYr4KEZ70f46E3U61Yva36a-gccRFSiT5ia2-g@mail.gmail.com>
References: <536A8592.8010009@gmail.com>
	<CA+s+GJASND3OU2e+YxUeLmSOW6pTkMwuzHCHeJnnihg6xK9Caw@mail.gmail.com>
	<536A902C.6080602@gmail.com>
	<CA+s+GJCaUX3ErgVean0e91CBorPc6RNKgYs08fOOsqNYtbd6RA@mail.gmail.com>
	<CANEZrP2aUBFkwx0s_xcS_e4gv1Ao1240NVNNFR3bFUBf9hHqsA@mail.gmail.com>
	<CA+s+GJC7p-W6EeGwsPXG7oDccpC_LfjE-mAiZjpkMtRwxH5sMw@mail.gmail.com>
	<CAAS2fgR0CtYeLmp8pmMFvtOyqrhNgz0U-BsfBQ7QRr3dM-7J9g@mail.gmail.com>
	<CA+s+GJDm=J6-SYr4KEZ70f46E3U61Yva36a-gccRFSiT5ia2-g@mail.gmail.com>
Message-ID: <CANEZrP243Uq8HKqJ0bedp7CPXzEc01HnwxRAuFfFEAatbAJT3A@mail.gmail.com>

>
> In a way it looks similar to how the Bitcoin DNS seeds work, trying to
> find good and stable nodes, although more extensive.


Yeah, it's somewhat similar, except that Tor directory authorities are
authenticated (the public keys are in the source code), whereas DNS seeds
aren't. Also Bitcoin puts way more emphasis on decentralisation than Tor
does. For Tor having a P2P network is just something that's needed in order
to build an anonymity network, but it's not actually the goal. For us,
decentralisation is pretty much the end goal.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140508/d5ea5b94/attachment.html>

From laanwj at gmail.com  Thu May  8 10:32:59 2014
From: laanwj at gmail.com (Wladimir)
Date: Thu, 8 May 2014 12:32:59 +0200
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <CANEZrP243Uq8HKqJ0bedp7CPXzEc01HnwxRAuFfFEAatbAJT3A@mail.gmail.com>
References: <536A8592.8010009@gmail.com>
	<CA+s+GJASND3OU2e+YxUeLmSOW6pTkMwuzHCHeJnnihg6xK9Caw@mail.gmail.com>
	<536A902C.6080602@gmail.com>
	<CA+s+GJCaUX3ErgVean0e91CBorPc6RNKgYs08fOOsqNYtbd6RA@mail.gmail.com>
	<CANEZrP2aUBFkwx0s_xcS_e4gv1Ao1240NVNNFR3bFUBf9hHqsA@mail.gmail.com>
	<CA+s+GJC7p-W6EeGwsPXG7oDccpC_LfjE-mAiZjpkMtRwxH5sMw@mail.gmail.com>
	<CAAS2fgR0CtYeLmp8pmMFvtOyqrhNgz0U-BsfBQ7QRr3dM-7J9g@mail.gmail.com>
	<CA+s+GJDm=J6-SYr4KEZ70f46E3U61Yva36a-gccRFSiT5ia2-g@mail.gmail.com>
	<CANEZrP243Uq8HKqJ0bedp7CPXzEc01HnwxRAuFfFEAatbAJT3A@mail.gmail.com>
Message-ID: <CA+s+GJC-KCsFSO-xLargBZ2y-5MFcU6=_vYePHVgpYo1qwL+0g@mail.gmail.com>

On Thu, May 8, 2014 at 12:08 PM, Mike Hearn <mike at plan99.net> wrote:
>> In a way it looks similar to how the Bitcoin DNS seeds work, trying to
>> find good and stable nodes, although more extensive.
>
>
> Yeah, it's somewhat similar, except that Tor directory authorities are
> authenticated (the public keys are in the source code), whereas DNS seeds
> aren't. Also Bitcoin puts way more emphasis on decentralisation than Tor
> does.

Right, having authenticated 'directory authorities' hardcoded in the
source code would be out of the question for bitcoin.

Either the stats would have to be public, or private/authenticated to
parties the owner of the node configures themselves.

Wladimir



From laanwj at gmail.com  Thu May  8 11:22:46 2014
From: laanwj at gmail.com (Wladimir)
Date: Thu, 8 May 2014 13:22:46 +0200
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <CAPFxkVmPVp01hVMbNsseOJ=5MyCCQ9J1cYChK3-Z93UDp6qP9Q@mail.gmail.com>
References: <536A8592.8010009@gmail.com>
	<CA+s+GJASND3OU2e+YxUeLmSOW6pTkMwuzHCHeJnnihg6xK9Caw@mail.gmail.com>
	<536A902C.6080602@gmail.com>
	<CA+s+GJCaUX3ErgVean0e91CBorPc6RNKgYs08fOOsqNYtbd6RA@mail.gmail.com>
	<CAPFxkVmPVp01hVMbNsseOJ=5MyCCQ9J1cYChK3-Z93UDp6qP9Q@mail.gmail.com>
Message-ID: <CA+s+GJA6DzzoX4tod2FSV_L02Ne4exuNh_e9fOQfWFmCAMTKUQ@mail.gmail.com>

On Wed, May 7, 2014 at 10:28 PM, Nelson Castillo
> Is SNMP an option? That way you do not need to implement clients and there
> are many tools written.

It's always good to use an existing standard, but I remember SNMP,
even on a client device/application is pretty complex in itself.

And I suppose the registration for custom OIDs and such is kind of baroque.

I'm not entirely convinced of what the added value in this case would
be. Yes, there are tools for monitoring SNMP, but in my experience
those tools usually support other ways of collecting statistics as
well.

Wladimir



From mike at plan99.net  Fri May  9 12:05:24 2014
From: mike at plan99.net (Mike Hearn)
Date: Fri, 9 May 2014 14:05:24 +0200
Subject: [Bitcoin-development] ECDH in the payment protocol
Message-ID: <CANEZrP3VNXSc2cd3b9pz9iC2BR0-vG=tfYwMyUGBGaWPq+geXQ@mail.gmail.com>

I wrote an article about an ECDH extension for BIP 70:

   https://medium.com/p/cb2f81962c1b

The article is meant for people who don't follow bitcoin-development so
I'll summarise it here:

   - The notion of being able to publish a piece of data once and use it to
   receive lots of payments without any coordination is really useful. This is
   the idea behind the stealth address proposal.

   - Stealth addresses don't fit with the payment protocol, because they're
   a new kind of address (obviously).

   - Stealth addresses are not backwards compatible. If you give someone a
   stealth address and their wallet doesn't support it, they can't pay you,
   not even with worse privacy. Sometimes people may optionally want that
   behaviour but stealth addresses have it all the time.

   - The proposed stealth address design makes huge sacrifices to try and
   keep everything within the block chain. It bloats the chain with OP_RETURN
   stuff that isn't a part of the validation. But more seriously, the only way
   to make it efficient enough for lightweight clients is to reduce the
   "stealthyness". The more efficient you make your address the less private
   it becomes. This is somewhat similar to the dilemma we have with Bloom
   filtering, except Bloom filters are transient and can only be used to link
   addresses by someone who observes them on the wire. Stealth addresses
   record the relationship in the block chain forever.

   - The design makes these sacrifices to avoid moving data around outside
   the block chain. But with BIP 70 that's the direction we're heading in
   anyway. So by adding ECDH to the payment protocol and putting our effort
   into making BIP 70 work really well for everyone, we end up killing
   multiple birds with one stone. The same work that resolves the privacy
   problems inherent in the stealth address design also allows us to attach
   messages to payments and other commonly requested features.

There's a straw man in the article that I recreate here:

message Output {
   optional uint64 amount = 1 [default = 0];
   optional bytes script = 2;
   *optional boolean accept_ecdh = 3;  // Requires script to be a
pay-to-pubkey output.*
}

message Payment {
   optional bytes merchant_data = 1;
   repeated bytes transactions = 2;
   repeated Output refund_to = 3;
   optional string memo = 4;
   *repeated bytes ecdh_nonces = 5;*
}

The way the nonces are combined to arrive at the address could be the same
as in the current stealth address spec. A wallet that doesn't understand
ECDH but does understand raw BIP 70 would deliver the money to the base
address, which receiving wallets would look for too - so it's backwards
compatible. The nonces stay out of the block chain. The transactions are
delivered directly to the recipient so there's no problems with trying to
make it fit with Bloom/prefix filtering.

To make this work there obviously has to be a backchannel from payer to
payee. BIP 70 is mostly used by web shops today so that back channel is
just HTTPS to the website itself, but shops benefit less from ECDH than
others do. So we need a simple email-like store and forward network where
HTTP POSTs to a server get queued up and delivered later (or possibly
forwarded to another store-and-forward network like the Android push
network). Most of the article discusses how best to build such a thing.

The justification for the original stealth address design can be summed up
as "it's easier to [ab]use the Bitcoin network for delivery of short
messages than use a different system". But there are just so many features
we may want to add into the Payment message in future it seems better to
crack the SaF problem earlier rather than continue trying to jam a square
peg into a round hole. There are lots of very reliable SAF networks around
(email, instant messaging, etc) so it doesn't seem infeasible.

Thoughts welcome!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140509/05d1c2d1/attachment.html>

From pete at petertodd.org  Fri May  9 15:03:25 2014
From: pete at petertodd.org (Peter Todd)
Date: Fri, 9 May 2014 11:03:25 -0400
Subject: [Bitcoin-development] ECDH in the payment protocol
In-Reply-To: <CANEZrP3VNXSc2cd3b9pz9iC2BR0-vG=tfYwMyUGBGaWPq+geXQ@mail.gmail.com>
References: <CANEZrP3VNXSc2cd3b9pz9iC2BR0-vG=tfYwMyUGBGaWPq+geXQ@mail.gmail.com>
Message-ID: <20140509150325.GA30436@savin>

On Fri, May 09, 2014 at 02:05:24PM +0200, Mike Hearn wrote:

It's always interesting to see the reinvention cycle happen in the
Bitcoin space as ideas get proposed over and over again; I'm sure Amir
Taaki will be pleased to read this as it is a slightly less
sophisticated version of what he originally proposed to me for the
design of what became stealth addresses.

Of course we quickly rejected the idea of depending solely on a
communications backchannel to retrieve funds. Any communications medium
that isn't the blockchain makes the payment non-atomic, and thus creates
opportunities for it to fail. Fortunately we already have the necessary
ephemeral keys in standard Bitcoin transactions in pay-to-pubkey-hash
and pay-to-script-hash spending scriptSigs so you don't need to
compromise on reliability in exchange for transaction size as you're
mistakingly assuming. You should re-read my original stealth address
discussion with Gregory Maxwell on IRC if this is unclear.

In any case it's a mistake to argue that some times of data in the
blockchain are "bloat" by virtue of whether or not they happen to be
executed in a script. Multisig addresses use an extra ~107 bytes of data
per signature per txout spend to make it less likely for the user to
lose their funds under certain conditions; op-return-using stealth
addresses use an extra ~50 bytes of data per txout spend to make the
user less likely to lose their funds and make their transactions more
private under certain conditions.(1) Ultimately the resource being used
is the same, making it silly to try to dictate the right trade-offs by
brushing certain solutions as anti-social "bloat" and others not based
on top-down edict; let the free market for fees do its job.


1) Note that the recent advancements in ECDH multi-party signing are
   limited in the cases they can cover; there still is a strong need for
   discrete key multisig, e.g. for Greenaddress.it

-- 
'peter'[:-1]@petertodd.org
00000000000000003581a7e5d0e10205803803466240668215d178b216837386
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140509/ecab7668/attachment.sig>

From mike at plan99.net  Fri May  9 15:15:52 2014
From: mike at plan99.net (Mike Hearn)
Date: Fri, 9 May 2014 17:15:52 +0200
Subject: [Bitcoin-development] ECDH in the payment protocol
In-Reply-To: <20140509150325.GA30436@savin>
References: <CANEZrP3VNXSc2cd3b9pz9iC2BR0-vG=tfYwMyUGBGaWPq+geXQ@mail.gmail.com>
	<20140509150325.GA30436@savin>
Message-ID: <CANEZrP1m=-GWD5rLRe9vrx0JYKeKXghNw-a47ZbJTd1h3ngFww@mail.gmail.com>

>
> Of course we quickly rejected the idea of depending solely on a
> communications backchannel to retrieve funds. Any communications medium
> that isn't the blockchain makes the payment non-atomic


Yes, I know you rejected this design, which is why I'm now proposing it
instead. I think you made the wrong design call, but at any rate, it's
something reasonable people can disagree on.

Payment messages are sent directly to the merchant, who takes
responsibility for broadcast. Once you delivered transactions to the
merchant successfully, from your perspective the payment is made. A good
store and forward network doesn't allow messages to go missing - email is
an example of that (ignoring spam filters that explicitly want messages to
go missing). It either gets delivered or it doesn't. So I'm not worried
about atomicity.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140509/208f75e0/attachment.html>

From pete at petertodd.org  Fri May  9 15:27:15 2014
From: pete at petertodd.org (Peter Todd)
Date: Fri, 9 May 2014 11:27:15 -0400
Subject: [Bitcoin-development] ECDH in the payment protocol
In-Reply-To: <CANEZrP1m=-GWD5rLRe9vrx0JYKeKXghNw-a47ZbJTd1h3ngFww@mail.gmail.com>
References: <CANEZrP3VNXSc2cd3b9pz9iC2BR0-vG=tfYwMyUGBGaWPq+geXQ@mail.gmail.com>
	<20140509150325.GA30436@savin>
	<CANEZrP1m=-GWD5rLRe9vrx0JYKeKXghNw-a47ZbJTd1h3ngFww@mail.gmail.com>
Message-ID: <20140509152715.GA12421@savin>

On Fri, May 09, 2014 at 05:15:52PM +0200, Mike Hearn wrote:
> >
> > Of course we quickly rejected the idea of depending solely on a
> > communications backchannel to retrieve funds. Any communications medium
> > that isn't the blockchain makes the payment non-atomic
> 
> 
> Yes, I know you rejected this design, which is why I'm now proposing it
> instead. I think you made the wrong design call, but at any rate, it's
> something reasonable people can disagree on.
> 
> Payment messages are sent directly to the merchant, who takes
> responsibility for broadcast. Once you delivered transactions to the
> merchant successfully, from your perspective the payment is made. A good
> store and forward network doesn't allow messages to go missing - email is
> an example of that (ignoring spam filters that explicitly want messages to
> go missing). It either gets delivered or it doesn't. So I'm not worried
> about atomicity.

Ah, you're still misunderstanding my point: You can get atomicity in the
worst-case where the communications medium fails *and* stealth payments
that use up no extra space in the blockchain. This gives you the best of
both worlds.

I haven't yet specified that mode of operation in the current draft
stealth address standard, however I do plan on adding it. Notably the
standard is designed to allow exactly that feature to be added in a
backwards compatible way - senders who don't implement that feature, or
choose not to use it, simply fall back to op-return.

-- 
'peter'[:-1]@petertodd.org
00000000000000004d25218420094fda0891fe1d734e1a8df581bd6de7f2d0cd
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140509/bdbc414c/attachment.sig>

From mike at plan99.net  Fri May  9 15:34:07 2014
From: mike at plan99.net (Mike Hearn)
Date: Fri, 9 May 2014 17:34:07 +0200
Subject: [Bitcoin-development] ECDH in the payment protocol
In-Reply-To: <20140509152715.GA12421@savin>
References: <CANEZrP3VNXSc2cd3b9pz9iC2BR0-vG=tfYwMyUGBGaWPq+geXQ@mail.gmail.com>
	<20140509150325.GA30436@savin>
	<CANEZrP1m=-GWD5rLRe9vrx0JYKeKXghNw-a47ZbJTd1h3ngFww@mail.gmail.com>
	<20140509152715.GA12421@savin>
Message-ID: <CANEZrP0Yom_JjN2PnPsfKV5S4wZSze4XTcJJU2ZWee4VGo20tw@mail.gmail.com>

>
> Ah, you're still misunderstanding my point: You can get atomicity in the
> worst-case where the communications medium fails *and* stealth payments
> that use up no extra space in the blockchain. This gives you the best of
> both worlds.


Sounds great! How does a lightweight client identify such transactions
without any markers?

Regardless, there are lots of other useful features that require BIP70 to
work well person to person, like messages, refund addresses, etc. So
extending it with ECDH makes sense in the end anyway no matter what.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140509/3dbc2a30/attachment.html>

From pete at petertodd.org  Fri May  9 15:43:13 2014
From: pete at petertodd.org (Peter Todd)
Date: Fri, 9 May 2014 11:43:13 -0400
Subject: [Bitcoin-development] ECDH in the payment protocol
In-Reply-To: <CANEZrP0Yom_JjN2PnPsfKV5S4wZSze4XTcJJU2ZWee4VGo20tw@mail.gmail.com>
References: <CANEZrP3VNXSc2cd3b9pz9iC2BR0-vG=tfYwMyUGBGaWPq+geXQ@mail.gmail.com>
	<20140509150325.GA30436@savin>
	<CANEZrP1m=-GWD5rLRe9vrx0JYKeKXghNw-a47ZbJTd1h3ngFww@mail.gmail.com>
	<20140509152715.GA12421@savin>
	<CANEZrP0Yom_JjN2PnPsfKV5S4wZSze4XTcJJU2ZWee4VGo20tw@mail.gmail.com>
Message-ID: <20140509154313.GA17107@savin>

On Fri, May 09, 2014 at 05:34:07PM +0200, Mike Hearn wrote:
> >
> > Ah, you're still misunderstanding my point: You can get atomicity in the
> > worst-case where the communications medium fails *and* stealth payments
> > that use up no extra space in the blockchain. This gives you the best of
> > both worlds.
> 
> 
> Sounds great! How does a lightweight client identify such transactions
> without any markers?

The exact same way you're proposing: via the payment protocol.

If something goes wrong and a payment gets lost, that's where you
implement a last-ditch "scan for stealth payments" button or similar
that either just asks a semi-trusted server to scan the blockchain for
you, or accepts the bandwidth hit and does so itself. (note that the
scan pubkey used to find payments is unable to spend those payments)

-- 
'peter'[:-1]@petertodd.org
000000000000000074d6fdc4442dae1b7273f77f2deec988daf63d3e1ec6eeea
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140509/d6f88ca3/attachment.sig>

From pieter.wuille at gmail.com  Fri May  9 15:50:33 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Fri, 9 May 2014 17:50:33 +0200
Subject: [Bitcoin-development] ECDH in the payment protocol
In-Reply-To: <CANEZrP0Yom_JjN2PnPsfKV5S4wZSze4XTcJJU2ZWee4VGo20tw@mail.gmail.com>
References: <CANEZrP3VNXSc2cd3b9pz9iC2BR0-vG=tfYwMyUGBGaWPq+geXQ@mail.gmail.com>
	<20140509150325.GA30436@savin>
	<CANEZrP1m=-GWD5rLRe9vrx0JYKeKXghNw-a47ZbJTd1h3ngFww@mail.gmail.com>
	<20140509152715.GA12421@savin>
	<CANEZrP0Yom_JjN2PnPsfKV5S4wZSze4XTcJJU2ZWee4VGo20tw@mail.gmail.com>
Message-ID: <CAPg+sBh-OA7xSp3=SEGS1fP-d2CDMzMy_=S_jOs1hvdaWTw0mA@mail.gmail.com>

I believe stealth addresses and the payment protocol both have their
use cases, and that they don't overlap.

If you do not want to communicate with the receiver, you typically do
not want them to know who is paying or for what (otherwise you're
already talking to them in some way, right?). That's perfect for
things like anonymous donations.

In pretty much every other case, communicating directly with the
receiver has benefits. Negotiation of the transaction details,
messages associated with the transaction, refund information, no need
to scan the blockchain for incoming transaction... and the ability to
cancel if either party doesn't agree.

Instead of adding stealth functionality to the payment protocol as a
last resort, I'd rather see the payment protocol improve its
atomicity. Either you want the data channel sender->receiver, or you
don't. If it isn't available and you want it, things should fail. If
you don't want it, you shouldn't try to use it in the first place.

On Fri, May 9, 2014 at 5:34 PM, Mike Hearn <mike at plan99.net> wrote:
>> Ah, you're still misunderstanding my point: You can get atomicity in the
>> worst-case where the communications medium fails *and* stealth payments
>> that use up no extra space in the blockchain. This gives you the best of
>> both worlds.
>
>
> Sounds great! How does a lightweight client identify such transactions
> without any markers?
>
> Regardless, there are lots of other useful features that require BIP70 to
> work well person to person, like messages, refund addresses, etc. So
> extending it with ECDH makes sense in the end anyway no matter what.
>
> ------------------------------------------------------------------------------
> Is your legacy SCM system holding you back? Join Perforce May 7 to find out:
> &#149; 3 signs your SCM is hindering your productivity
> &#149; Requirements for releasing software faster
> &#149; Expert tips and advice for migrating your SCM now
> http://p.sf.net/sfu/perforce
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From mike at plan99.net  Fri May  9 16:12:46 2014
From: mike at plan99.net (Mike Hearn)
Date: Fri, 9 May 2014 18:12:46 +0200
Subject: [Bitcoin-development] ECDH in the payment protocol
In-Reply-To: <20140509154313.GA17107@savin>
References: <CANEZrP3VNXSc2cd3b9pz9iC2BR0-vG=tfYwMyUGBGaWPq+geXQ@mail.gmail.com>
	<20140509150325.GA30436@savin>
	<CANEZrP1m=-GWD5rLRe9vrx0JYKeKXghNw-a47ZbJTd1h3ngFww@mail.gmail.com>
	<20140509152715.GA12421@savin>
	<CANEZrP0Yom_JjN2PnPsfKV5S4wZSze4XTcJJU2ZWee4VGo20tw@mail.gmail.com>
	<20140509154313.GA17107@savin>
Message-ID: <CANEZrP230uYGp9-H7d29nUdudOZagaLf=3RhGCU-dwZF9W2kyw@mail.gmail.com>

>
> The exact same way you're proposing: via the payment protocol.
>

Ah, I see, that's what I was missing. So rather than have an explicit
repeated field for nonces, have an algorithm for extracting randomness from
one of the scriptSigs. I guess that makes sense.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140509/17707b03/attachment.html>

From pete at petertodd.org  Fri May  9 18:13:53 2014
From: pete at petertodd.org (Peter Todd)
Date: Fri, 9 May 2014 14:13:53 -0400
Subject: [Bitcoin-development] ECDH in the payment protocol
In-Reply-To: <CAPg+sBh-OA7xSp3=SEGS1fP-d2CDMzMy_=S_jOs1hvdaWTw0mA@mail.gmail.com>
References: <CANEZrP3VNXSc2cd3b9pz9iC2BR0-vG=tfYwMyUGBGaWPq+geXQ@mail.gmail.com>
	<20140509150325.GA30436@savin>
	<CANEZrP1m=-GWD5rLRe9vrx0JYKeKXghNw-a47ZbJTd1h3ngFww@mail.gmail.com>
	<20140509152715.GA12421@savin>
	<CANEZrP0Yom_JjN2PnPsfKV5S4wZSze4XTcJJU2ZWee4VGo20tw@mail.gmail.com>
	<CAPg+sBh-OA7xSp3=SEGS1fP-d2CDMzMy_=S_jOs1hvdaWTw0mA@mail.gmail.com>
Message-ID: <20140509181353.GB27819@savin>

On Fri, May 09, 2014 at 05:50:33PM +0200, Pieter Wuille wrote:
> I believe stealth addresses and the payment protocol both have their
> use cases, and that they don't overlap.
> 
> If you do not want to communicate with the receiver, you typically do
> not want them to know who is paying or for what (otherwise you're
> already talking to them in some way, right?). That's perfect for
> things like anonymous donations.
> 
> In pretty much every other case, communicating directly with the
> receiver has benefits. Negotiation of the transaction details,
> messages associated with the transaction, refund information, no need
> to scan the blockchain for incoming transaction... and the ability to
> cancel if either party doesn't agree.
> 
> Instead of adding stealth functionality to the payment protocol as a
> last resort, I'd rather see the payment protocol improve its
> atomicity. Either you want the data channel sender->receiver, or you
> don't. If it isn't available and you want it, things should fail. If
> you don't want it, you shouldn't try to use it in the first place.

I don't think we're going to find that's practical unfortunately due to
change. Every payment I make ties up txouts, so if we try to base the
atomicity of payments on whether or not the payee decides to broadcast
the transaction the payor is stuck with txouts that they can't use until
the payee makes up their mind. That leads to lots and lots of nasty edge
cases.

OTOH if we base the atomicity of payment on whether or not a specific
txout exists everything those edge cases don't exist. Yes, that might
force us to expose transaction fees to the user, but after all it's the
user who has control over those fees.

A separate issue is IsStandard() rules, and a near-term project for me
is to write a much relaxed version of them based on soft-fork safe
whitelisting/blacklisting of opcodes, version numbers, mutability etc.
We can definitely get to the point where those rules will change very
little.

-- 
'peter'[:-1]@petertodd.org
00000000000000006d5945d2dddece39487c36673e56a292b619b1929ff3b40f
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140509/4b1b5c33/attachment.sig>

From pieter.wuille at gmail.com  Fri May  9 18:38:22 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Fri, 9 May 2014 20:38:22 +0200
Subject: [Bitcoin-development] ECDH in the payment protocol
In-Reply-To: <20140509181353.GB27819@savin>
References: <CANEZrP3VNXSc2cd3b9pz9iC2BR0-vG=tfYwMyUGBGaWPq+geXQ@mail.gmail.com>
	<20140509150325.GA30436@savin>
	<CANEZrP1m=-GWD5rLRe9vrx0JYKeKXghNw-a47ZbJTd1h3ngFww@mail.gmail.com>
	<20140509152715.GA12421@savin>
	<CANEZrP0Yom_JjN2PnPsfKV5S4wZSze4XTcJJU2ZWee4VGo20tw@mail.gmail.com>
	<CAPg+sBh-OA7xSp3=SEGS1fP-d2CDMzMy_=S_jOs1hvdaWTw0mA@mail.gmail.com>
	<20140509181353.GB27819@savin>
Message-ID: <CAPg+sBiSkeoD-Rxkoo+Dp8vTt0hE4FGLVxrdqTox6Njo8Mk5pw@mail.gmail.com>

On Fri, May 9, 2014 at 8:13 PM, Peter Todd <pete at petertodd.org> wrote:
> I don't think we're going to find that's practical unfortunately due to
> change. Every payment I make ties up txouts, so if we try to base the
> atomicity of payments on whether or not the payee decides to broadcast
> the transaction the payor is stuck with txouts that they can't use until
> the payee makes up their mind. That leads to lots and lots of nasty edge
> cases.

I haven't talked much about it except for on IRC, but my idea was this:
* PaymentACK messages become signed (with the same key as the payment
request, or using some delegation mechanism, so that the same key
doesn't need to remain online).
* Instead of a full Bitcoin transaction, a Payment message contains a
scriptSig-less Bitcoin transaction + a limit on its byte size (and
perhaps a limit on its sigop count).
* The sender sends such a Payment to the receiver before actually
signing the transaction (or at least, before revealing the signed
form).
* The receiver only ACKs if the transaction satisfies the request, is
within time limits, isn't unlikely to confirm.
* If the sender likes the ACK (the refund and memo fields are intact,
the transaction isn't changed, the signature key is valid, ...), he
either sends the full transaction (with receiver taking responsibility
for broadcasting) or broadcasts it himself.

Together, this means that a paymentACK + a confirmed matching Bitcoin
transaction can count as proof of payment. Both parties have a chance
to disagree with the transaction, and are certain all communicated
data (apart from transaction signatures) in both directions happened
correctly before committing. It would completely remove the chance
that the Bitcoin transaction gets broadcast without the receiver
liking it (for legitimate or illegitimate reasons), or without the
backchannel functioning correctly.

It's also compatible with doing multiple payments in one Bitcoin
transaction - you can ask for ACKs from multiple parties before
signing the transaction.

Of course, the sender can still withhold the signed transaction (in
which case nothing happened, but we probably need a second timeout),
or the receiver can always claim to have never received the
transaction. The sender can broadcast the transaction himself in order
to prevent that, after obtaining an ACK.

-- 
Pieter



From ewillbefull at gmail.com  Sat May 10 11:05:29 2014
From: ewillbefull at gmail.com (E willbefull)
Date: Sat, 10 May 2014 05:05:29 -0600
Subject: [Bitcoin-development] we can all relax now
In-Reply-To: <5279D49D.5050807@jerviss.org>
References: <5279D49D.5050807@jerviss.org>
Message-ID: <CAGRKETt1UOh6GBeT5Ti1PvRHsqTsddybLZUvbWsQeyQQZEatrg@mail.gmail.com>

I've created a simulation framework called simbit to simulate the selfish
mining attack, though it is general enough to simulate any p2p network. I
even put together a rough simulation of MinCen. The goal is to be fun/easy
to rapidly prototype protocols and strategies, and visualize them. It's
written in javascript, so it can be demoed in the web browser or run on
Node.

It's still in early alpha and a lot of things are missing.

https://github.com/ebfull/simbit

https://bitcointalk.org/index.php?topic=603171.0

Feedback is appreciated!


On Tue, Nov 5, 2013 at 10:33 PM, kjj <bitcoin-devel at jerviss.org> wrote:

> One of the things that really gets me going is when someone devises a
> model, tests it against itself, and then pretends that they've learned
> something about the real world.
>
> Naturally, the Selfish Mining paper is exactly this sort of nonsense.
> Their model is one with no latency, and one where the attacker has total
> visibility across the network.  An iterated FSM is not a suitable
> simulation of the bitcoin system.  The bitcoin network does not have
> states, and to the extent that you can pretend that we do, you can't
> simulate transitions between them with static probabilities.
>
> The authors understand this deep down inside, even though they didn't
> work out the implications.  They handwave the issue by assuming a total
> sybil attack, and in true academic spirit, they don't realize that the
> condition necessary for the attack is far, far worse than the attack
> itself.
>
> Greg said he'd like to run some simulations, and I'm thinking about it
> too.  Unfortunately, he is busy all week, and I'm lazy (and also busy
> for most of tomorrow).
>
> If neither of us get to it first, I'm willing to pitch in 1 BTC as a
> bounty for building a general bitcoin network simulator framework. The
> simulator should be able to account for latency between nodes, and
> ideally within a node.  It needs to be able to simulate an attacker that
> owns varying fractions of the network, and make decisions based only on
> what the attacker actually knows.  It needs to be able to simulate this
> "attack" and should be generic enough to be easily modified for other
> crazy schemes.
>
> (Bounty offer is serious, but expires in one year [based on the earliest
> timestamp that my mail server puts on this email], and /may/ be subject
> to change if the price on any reputable exchange breaks 1000 USD per BTC
> in that period.)
>
> Basically, the lack of a decent network simulator is what allowed this
> paper to get press.  If the author had been able to see the importance
> of the stuff he was ignoring, we wouldn't be wasting so much time
> correcting him (and sadly the reporters that have no way to check his
> claims).
>
> https://bitcointalk.org/index.php?topic=324413.msg3495663#msg3495663
>
>
>
>
> ------------------------------------------------------------------------------
> November Webinars for C, C++, Fortran Developers
> Accelerate application performance with scalable programming models.
> Explore
> techniques for threading, error checking, porting, and tuning. Get the most
> from the latest Intel processors and coprocessors. See abstracts and
> register
> http://pubads.g.doubleclick.net/gampad/clk?id=60136231&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140510/70b79ae9/attachment.html>

From saivann at gmail.com  Sun May 11 02:08:37 2014
From: saivann at gmail.com (=?ISO-8859-1?Q?Sa=EFvann_Carignan?=)
Date: Sat, 10 May 2014 22:08:37 -0400
Subject: [Bitcoin-development] Developer documentation on bitcoin.org
Message-ID: <536EDBA5.2010700@gmail.com>

A new "Developer Documentation" section should be soon merged on
bitcoin.org .

Live Preview:
http://bitcoindev.us.to/en/developer-documentation

GitHub Pull Request:
https://github.com/bitcoin/bitcoin.org/pull/393

Bitcointalk Thread:
https://bitcointalk.org/index.php?topic=511876.0

We've worked hard to come up with good quality documentation and general
feedback has been positive. Reviews from experienced Bitcoin developers
would now be much appreciated. You are cordially invited to help
proofread the documentation so it can be published soon!

*Please avoid commenting on the mailing list* to not spam everyone. See
the pull request for instructions. Comments should go on the pull
request or bitcoin-documentation mailing list
https://groups.google.com/forum/#!forum/bitcoin-documentation .



From wtogami at gmail.com  Sun May 11 06:32:18 2014
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Sat, 10 May 2014 20:32:18 -1000
Subject: [Bitcoin-development] Translators Needed for Bitcoin Core
In-Reply-To: <CAEz79PqWawZjD+w0CO7XmJay+tuaa2pKabUJieGatxcxekOXMg@mail.gmail.com>
References: <CAEz79PqWawZjD+w0CO7XmJay+tuaa2pKabUJieGatxcxekOXMg@mail.gmail.com>
Message-ID: <CAEz79Pp1Hbp1tbw7-OD9c86Qjx_y9rbYQc0qpyf=35fxrJWKgA@mail.gmail.com>

https://www.transifex.com/projects/p/bitcoin/
This is a reminder that many languages still require translation coverage.
 See this page to see the percentage of strings translated into a given
language.  The 0.9.2 release candidate is currently scheduled for May 13th
with translations accepted for the release for at least a week after that.

Even if you do not speak other languages, you can help by pointing other
people who do at this page.

Warren


On Wed, Apr 23, 2014 at 7:47 PM, Warren Togami Jr. <wtogami at gmail.com>wrote:

> You do not need to be a developer to help in the improvement of Bitcoin.
>
> http://sourceforge.net/p/bitcoin/mailman/message/32255092/
> Bitcoin Core 0.9.2 feature freeze is May 13th, 2014.  Now is the time for
> native non-English speakers to join Transifex to clean up the translations
> in all languages.  This is important for more than just Bitcoin because
> Litecoin will use these same translations.
>
> *What should volunteer translators do?*
> https://bitcointalk.org/index.php?topic=571414
> Try the nightly builds of Bitcoin Core as it heads toward 0.9.2.  Not
> recommended for your production wallet.
>
> https://www.transifex.com/projects/p/bitcoin/
> Join Transifex as a translator and add your account to your language.
>
> https://groups.google.com/forum/#!forum/bitcoin-translators
> Join the Translator mailing list to receive announcements when
> translations are needed for Bitcoin.  You will also receive notifications
> if other Bitcoin Project things in Transifex need translations (likely
> bitcoin.org).
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140510/a59a192e/attachment.html>

From jameson.lopp at gmail.com  Sun May 11 17:14:18 2014
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Sun, 11 May 2014 13:14:18 -0400
Subject: [Bitcoin-development] statoshi.info is now live
Message-ID: <536FAFEA.5050404@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Since it seems unlikely that we'll be able to ship an integrated stats / monitoring feature in the short term, I went ahead and set up a public Statoshi instance and threw a nicer interface on top of it.

http://statoshi.info

You can also view the raw Graphite stats at http://statoshi.info:8080/

If there are any metrics that you think would be helpful for development or monitoring purposes, just let me know and I'll take a shot at adding them.

Jameson
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJTb6/qAAoJEIch3FSFNiDceR4H/jHchii5offrnQRsRcA7o4bh
EEeL7ln9ID2FtqpL5wEjFtYq7nXL/8+o1BY7MOULo4SMpQIi0aY3ehNkPUCX3XKh
U0F1ZZpkjMpI8BbIqBFwspNAE7bFh8vmRW9/IhWXf3VY8TmgVhZnbMmzxvcw7DwI
kb1pgXZOEKCwmMvxBoWdmwDogvZvNPIThoQ9InY+qaGQut3lvrrSQMR7jYXxTY/9
Rebnny5c15KUrM3xwRPJvFHlbFE8F5a6ue9uwGq/STK73/iDqXksJNFnpzk3fnGc
AryWmleHFfttfsb1kb991BFn2RCaKWvGBNUnq5dD/cCZIBwu3F16j65JAxboF94=
=Xe+e
-----END PGP SIGNATURE-----



From andy at coinbase.com  Mon May 12 01:05:20 2014
From: andy at coinbase.com (Andy Alness)
Date: Sun, 11 May 2014 18:05:20 -0700
Subject: [Bitcoin-development] Allow cross-site requests of payment requests
Message-ID: <CALKy-wq6FZs39KX-gk2PizEEikLvHhxMkt=OT61fcUchsaLpfg@mail.gmail.com>

Would it be a terrible idea to amend BIP 70 to suggest implementors include
a "Access-Control-Allow-Origin: *" response header for their payment
request responses? I don't think this opens up any useful attack vectors.

I ask because this would make it practical for pure HTML5 web wallets to
use the payment protocol entirely in-browser. Without this I think it would
be necessary for the server hosting the wallet's HTML to fetch payment
requests on the browser's behalf. This is somewhat inelegant and has
security/resource implications for the back-end.

-Andy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140511/0ad12a9d/attachment.html>

From tomh at thinlink.com  Mon May 12 04:41:04 2014
From: tomh at thinlink.com (Tom Harding)
Date: Sun, 11 May 2014 21:41:04 -0700
Subject: [Bitcoin-development] A statistical consensus rule for reducing
 0-conf double-spend risk
In-Reply-To: <CANOOu=_tpqz8wdDGj9x_xT5QcT=CHRbr+5Cewj5xuZyJ+ZurNw@mail.gmail.com>
References: <536589CC.8080005@thinlink.com>
	<CANOOu=_tpqz8wdDGj9x_xT5QcT=CHRbr+5Cewj5xuZyJ+ZurNw@mail.gmail.com>
Message-ID: <537050E0.2040008@thinlink.com>

Christophe Biocca wrote:

> The problem is that since the rule
> isn't enforceable, no miner will wait before mining on the longest
> chain (which is the rational move), and you're back to where we are
> now.

Back up to the miner who decided to include a "seasoned" double-spend in 
his block.  Let's say he saw it 21 seconds after he saw an earlier 
spend, and included it, despite the rule.

The expected cost of including the respend is any revenue loss from 
doing so: (total miner revenue of block)*(fraction of hashpower 
following the rule).  So today, if only 1% of hashpower follows the rule 
(ie a near total failure of consensus implementation), he still loses at 
least .25 BTC.

.25 BTC is about 1000x the typical "double-spend premium" I'm seeing 
right now.  Wouldn't the greedy-rational miner just decide to include 
the earlier spend instead?





From laanwj at gmail.com  Mon May 12 06:15:04 2014
From: laanwj at gmail.com (Wladimir)
Date: Mon, 12 May 2014 08:15:04 +0200
Subject: [Bitcoin-development] Developer documentation on bitcoin.org
In-Reply-To: <536EDBA5.2010700@gmail.com>
References: <536EDBA5.2010700@gmail.com>
Message-ID: <CA+s+GJBpkuBroz3AAcMCvKwEgwCbuqHJUUtVoQjWiGK9kniiGw@mail.gmail.com>

On Sun, May 11, 2014 at 4:08 AM, Sa?vann Carignan <saivann at gmail.com> wrote:
> A new "Developer Documentation" section should be soon merged on
> bitcoin.org .
>
> Live Preview:
> http://bitcoindev.us.to/en/developer-documentation
>
> GitHub Pull Request:
> https://github.com/bitcoin/bitcoin.org/pull/393
>
> Bitcointalk Thread:
> https://bitcointalk.org/index.php?topic=511876.0

Great work!

Very nice to see thorough developer documentation on bitcoin.org.

I've already been reading it now and then and haven't found any
technical issues yet, if I do, I'll let you know.

Wladimir



From mike at plan99.net  Mon May 12 10:28:29 2014
From: mike at plan99.net (Mike Hearn)
Date: Mon, 12 May 2014 12:28:29 +0200
Subject: [Bitcoin-development] Allow cross-site requests of payment
	requests
In-Reply-To: <CALKy-wq6FZs39KX-gk2PizEEikLvHhxMkt=OT61fcUchsaLpfg@mail.gmail.com>
References: <CALKy-wq6FZs39KX-gk2PizEEikLvHhxMkt=OT61fcUchsaLpfg@mail.gmail.com>
Message-ID: <CANEZrP0Ea-goS-Ba58z62E4cv5QKvYzbOkwT0JJPaXLniE_m5g@mail.gmail.com>

>
> Would it be a terrible idea to amend BIP 70 to suggest implementors
> include a "Access-Control-Allow-Origin: *" response header for their
> payment request responses? I don't think this opens up any useful attack
> vectors.
>

It sounds OK to me, although we should all sleep on it for a bit. The
reason this header exists is exactly because mobile code fetching random
web resources can result in surprising security holes.

For this to be useful, someone would have to actually want to fully
implement the payment protocol (with its own root cert store, ASN.1
parsing, RSA etc) in browser-sandboxed Javascript rather than just
providing a real app for people to download.

Is that really going to be popular, though? I think it's unclear.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140512/1bd9b568/attachment.html>

From jan.moller at gmail.com  Mon May 12 12:09:53 2014
From: jan.moller at gmail.com (=?UTF-8?Q?Jan_M=C3=B8ller?=)
Date: Mon, 12 May 2014 14:09:53 +0200
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <CAC7yFxQR6oVdASacCefPiuWocvrDHTTnVU4xyVdZTwvMr4ZPNw@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>
	<1927948.OEZHQcsQ9n@crushinator> <2025496.b5Y3n7qx8B@crushinator>
	<1582E990-4E14-4EF7-9C9C-AA505B815104@bitsofproof.com>
	<53568B87.8040009@monetize.io>
	<11528A13-5D66-4D2B-BEE0-1C26F9987BC8@bitsofproof.com>
	<CABh=4qPsR1YbhJDeAPjr37Zjqawo9ZFAH43scFnEg7p9a7EkeQ@mail.gmail.com>
	<F292CC2F-BAA7-45ED-801E-1475D94632AF@bitsofproof.com>
	<CAAS2fgR5ciUeFonOXBD1d9b_inOuxQKJ-LaoGmoyjoeQ_KxQxQ@mail.gmail.com>
	<621AAD7D-FDC0-4C3C-B810-8C1F0B088586@bitsofproof.com>
	<CAAS2fgTyndBG=airHoAcW4W2WgFZ61THXP4JGuUQCSWV99tCtg@mail.gmail.com>
	<CAC7yFxQR6oVdASacCefPiuWocvrDHTTnVU4xyVdZTwvMr4ZPNw@mail.gmail.com>
Message-ID: <CABh=4qMpge4q-CmKNNnxj5C_jGEFhwAVrUHSNbqy3njeUiSHvQ@mail.gmail.com>

A Java implementation of what is called BIPSS in lack of an official number
can be found here:
https://github.com/mycelium-com/wallet/blob/master/public/bitlib/src/main/java/com/mrd/bitlib/crypto/BipSs.java
(passing all test vectors)

Which is based on a GF2^8 implementation here:
https://github.com/mycelium-com/wallet/blob/master/public/bitlib/src/main/java/com/mrd/bitlib/crypto/Gf256.java

I think having 3 encoding formats (long/short/compact) is over engineered,
and basically only makes implementing the standard a pain in the rear. From
a user experience point of view only the long format makes sense, and it is
only a few bytes longer than the short version.




On Mon, May 5, 2014 at 9:36 PM, Nikita Schmidt <
nikita at megiontechnologies.com> wrote:

> A fork of Matt's proposal converted to GF(2^8) is here:
> https://github.com/cetuscetus/btctool/blob/bip/bip-xxxx.mediawiki
>
> Other changes include:
> - only six application/version bytes are allocated, which is the
> minimum to ensure that the encoded form starts with S in all cases;
> - encoded prefixes are SK/SL for a shared private key
> (mainnet/testnet) and SS/ST for a shared BIP32 seed;
> - the only hash function in use is SHA-256, which is the all-purpose
> hash function in the Bitcoin protocol;
> - double SHA is used for similarity with Bitcoin, although Jan and I
> believe single SHA is enough in this application;
> - bias-less encoding of M and x, because there can't be more than 255
> shares over GF(2^8).
>
>
> On 23 April 2014 09:16, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> > On Tue, Apr 22, 2014 at 10:33 PM, Tamas Blummer <tamas at bitsofproof.com>
> wrote:
> >> So you agree, that SSS should not contain specific flag for testnet?
> >>
> >> Or for that matter not even BIP32 needs them since it is not an address
> to
> >> send to.
> >
> > I think the convention we have so far is that addresses and address
> > relate thing we share normally contain an opaque 'version' identifier
> > which we use to identify the purpose for the data (E.g. network
> > meaning, etc.) and I think its a generally reasonable custom.
> >
> >
> ------------------------------------------------------------------------------
> > Start Your Social Network Today - Download eXo Platform
> > Build your Enterprise Intranet with eXo Platform Software
> > Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> > Get Started Now And Turn Your Intranet Into A Collaboration Platform
> > http://p.sf.net/sfu/ExoPlatform
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
> ------------------------------------------------------------------------------
> Is your legacy SCM system holding you back? Join Perforce May 7 to find
> out:
> &#149; 3 signs your SCM is hindering your productivity
> &#149; Requirements for releasing software faster
> &#149; Expert tips and advice for migrating your SCM now
> http://p.sf.net/sfu/perforce
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140512/27fd18ec/attachment.html>

From tomh at thinlink.com  Mon May 12 13:04:47 2014
From: tomh at thinlink.com (Tom Harding)
Date: Mon, 12 May 2014 06:04:47 -0700
Subject: [Bitcoin-development] A statistical consensus rule for reducing
 0-conf double-spend risk
In-Reply-To: <537050E0.2040008@thinlink.com>
References: <536589CC.8080005@thinlink.com>
	<CANOOu=_tpqz8wdDGj9x_xT5QcT=CHRbr+5Cewj5xuZyJ+ZurNw@mail.gmail.com>
	<537050E0.2040008@thinlink.com>
Message-ID: <5370C6EF.8020001@thinlink.com>

Sorry to run on, a correction is needed.  A much better approximation 
requires that the rule-following minority finds the next TWO blocks, so 
the cost is

(total miner revenue of block)*(fraction of hashpower following the rule)^2

So the lower bound cost in this very pessimistic scenario is .0025 BTC,  
still quite high for one transaction.  I guess miner could try to make a 
business out of mining double-spends, to defray that cost.


On 5/11/2014 9:41 PM, Tom Harding wrote:
> Back up to the miner who decided to include a "seasoned" double-spend 
> in his block.  Let's say he saw it 21 seconds after he saw an earlier 
> spend, and included it, despite the rule.
>
> The expected cost of including the respend is any revenue loss from 
> doing so: (total miner revenue of block)*(fraction of hashpower 
> following the rule).  So today, if only 1% of hashpower follows the 
> rule (ie a near total failure of consensus implementation), he still 
> loses at least .25 BTC.
>
> .25 BTC is about 1000x the typical "double-spend premium" I'm seeing 
> right now.  Wouldn't the greedy-rational miner just decide to include 
> the earlier spend instead 





From pete at petertodd.org  Mon May 12 13:07:44 2014
From: pete at petertodd.org (Peter Todd)
Date: Mon, 12 May 2014 09:07:44 -0400
Subject: [Bitcoin-development] ECDH in the payment protocol
In-Reply-To: <CAPg+sBiSkeoD-Rxkoo+Dp8vTt0hE4FGLVxrdqTox6Njo8Mk5pw@mail.gmail.com>
References: <CANEZrP3VNXSc2cd3b9pz9iC2BR0-vG=tfYwMyUGBGaWPq+geXQ@mail.gmail.com>
	<20140509150325.GA30436@savin>
	<CANEZrP1m=-GWD5rLRe9vrx0JYKeKXghNw-a47ZbJTd1h3ngFww@mail.gmail.com>
	<20140509152715.GA12421@savin>
	<CANEZrP0Yom_JjN2PnPsfKV5S4wZSze4XTcJJU2ZWee4VGo20tw@mail.gmail.com>
	<CAPg+sBh-OA7xSp3=SEGS1fP-d2CDMzMy_=S_jOs1hvdaWTw0mA@mail.gmail.com>
	<20140509181353.GB27819@savin>
	<CAPg+sBiSkeoD-Rxkoo+Dp8vTt0hE4FGLVxrdqTox6Njo8Mk5pw@mail.gmail.com>
Message-ID: <20140512130744.GC12679@savin>

On Fri, May 09, 2014 at 08:38:22PM +0200, Pieter Wuille wrote:
> On Fri, May 9, 2014 at 8:13 PM, Peter Todd <pete at petertodd.org> wrote:
> > I don't think we're going to find that's practical unfortunately due to
> > change. Every payment I make ties up txouts, so if we try to base the
> > atomicity of payments on whether or not the payee decides to broadcast
> > the transaction the payor is stuck with txouts that they can't use until
> > the payee makes up their mind. That leads to lots and lots of nasty edge
> > cases.
> 
> I haven't talked much about it except for on IRC, but my idea was this:
> * PaymentACK messages become signed (with the same key as the payment
> request, or using some delegation mechanism, so that the same key
> doesn't need to remain online).
> * Instead of a full Bitcoin transaction, a Payment message contains a
> scriptSig-less Bitcoin transaction + a limit on its byte size (and
> perhaps a limit on its sigop count).
> * The sender sends such a Payment to the receiver before actually
> signing the transaction (or at least, before revealing the signed
> form).
> * The receiver only ACKs if the transaction satisfies the request, is
> within time limits, isn't unlikely to confirm.
> * If the sender likes the ACK (the refund and memo fields are intact,
> the transaction isn't changed, the signature key is valid, ...), he
> either sends the full transaction (with receiver taking responsibility
> for broadcasting) or broadcasts it himself.
> 
> Together, this means that a paymentACK + a confirmed matching Bitcoin
> transaction can count as proof of payment. Both parties have a chance
> to disagree with the transaction, and are certain all communicated
> data (apart from transaction signatures) in both directions happened
> correctly before committing. It would completely remove the chance
> that the Bitcoin transaction gets broadcast without the receiver
> liking it (for legitimate or illegitimate reasons), or without the
> backchannel functioning correctly.
> 
> It's also compatible with doing multiple payments in one Bitcoin
> transaction - you can ask for ACKs from multiple parties before
> signing the transaction.
> 
> Of course, the sender can still withhold the signed transaction (in
> which case nothing happened, but we probably need a second timeout),
> or the receiver can always claim to have never received the
> transaction. The sender can broadcast the transaction himself in order
> to prevent that, after obtaining an ACK.

Yeah, with the receiver specifically signing off on the tx I think
that's fine. OTOH you still gotta ask if this process is really worth
it; do you really need this level of signing off for payments that are
only going to be considered fully valid after a confirmation? That's
always going to be the case for a large proportion of Bitcoin
transactions, and sticking to that model makes upgrades easier and
reduces the reasons why receivers would want to reimplement a bunch of
Bitcoin-related logic.

-- 
'peter'[:-1]@petertodd.org
00000000000000007cf5744be694eea2f20501e6db9d3362428aabd63dda4151
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140512/3d11d018/attachment.sig>

From gmaxwell at gmail.com  Mon May 12 16:53:42 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 12 May 2014 09:53:42 -0700
Subject: [Bitcoin-development] Prenumbered BIP naming
Message-ID: <CAAS2fgRWKWMkzqpQDXJGJYZPyb+vTnaRs3jOrzQ-zG5JJyqr1Q@mail.gmail.com>

I've noticed some folks struggling to attach labels to their yet to be
numbered BIPs.

I'd recommend people call them "draft-<main author name>-<what it
does>" like draft-maxwell-coinburning in the style of pre-WG IETF
drafts.



From bip at mattwhitlock.name  Mon May 12 17:01:43 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Mon, 12 May 2014 13:01:43 -0400
Subject: [Bitcoin-development] Prenumbered BIP naming
In-Reply-To: <CAAS2fgRWKWMkzqpQDXJGJYZPyb+vTnaRs3jOrzQ-zG5JJyqr1Q@mail.gmail.com>
References: <CAAS2fgRWKWMkzqpQDXJGJYZPyb+vTnaRs3jOrzQ-zG5JJyqr1Q@mail.gmail.com>
Message-ID: <1612758.yYdJV7lBXv@crushinator>

On Monday, 12 May 2014, at 9:53 am, Gregory Maxwell wrote:
> I've noticed some folks struggling to attach labels to their yet to be
> numbered BIPs.
> 
> I'd recommend people call them "draft-<main author name>-<what it
> does>" like draft-maxwell-coinburning in the style of pre-WG IETF
> drafts.

Why is there such a high bar to getting a number assigned to a BIP anyway? BIP 1 seems to suggest that getting a BIP number assigned is no big deal, but the reality seems to betray that casual notion. Even proposals with hours of work put into them are not getting BIP numbers. It's not exactly as though there's a shortage of integers. Are numbers assigned only to proposals that are well liked? Isn't the point of assigning numbers so that we can have organized discussions about all proposals, even ones we don't like?



From gmaxwell at gmail.com  Mon May 12 17:11:25 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 12 May 2014 10:11:25 -0700
Subject: [Bitcoin-development] Prenumbered BIP naming
In-Reply-To: <1612758.yYdJV7lBXv@crushinator>
References: <CAAS2fgRWKWMkzqpQDXJGJYZPyb+vTnaRs3jOrzQ-zG5JJyqr1Q@mail.gmail.com>
	<1612758.yYdJV7lBXv@crushinator>
Message-ID: <CAAS2fgQOOLKkXbc5FiXhabbew+xrYp7Cy6sQuNPQmg9DU-iyPg@mail.gmail.com>

On Mon, May 12, 2014 at 10:01 AM, Matt Whitlock <bip at mattwhitlock.name> wrote:
> Why is there such a high bar to getting a number assigned to a BIP anyway? BIP 1 seems to suggest that getting a BIP number assigned is no big deal, but the reality seems to betray that casual notion. Even proposals with hours of work put into them are not getting BIP numbers. It's not exactly as though there's a shortage of integers. Are numbers assigned only to proposals that are well liked? Isn't the point of assigning numbers so that we can have organized discussions about all proposals, even ones we don't like?

It isn't a big deal, but according to the process numbers shouldn't be
assigned for things that haven't even been publically discussed. If
someone wants to create specifications that are purely the product of
they own work and not a public discussion? they should feel free to do
that, but BIP isn't the process for that.  So, since things need to be
discussed, it can be useful to have something to call a proposal
before other things happen? thats all. The same kind of issue arises
elsewhere.



From andy at coinbase.com  Mon May 12 17:21:33 2014
From: andy at coinbase.com (Andy Alness)
Date: Mon, 12 May 2014 10:21:33 -0700
Subject: [Bitcoin-development] Allow cross-site requests of payment
	requests
In-Reply-To: <CANEZrP0Ea-goS-Ba58z62E4cv5QKvYzbOkwT0JJPaXLniE_m5g@mail.gmail.com>
References: <CALKy-wq6FZs39KX-gk2PizEEikLvHhxMkt=OT61fcUchsaLpfg@mail.gmail.com>
	<CANEZrP0Ea-goS-Ba58z62E4cv5QKvYzbOkwT0JJPaXLniE_m5g@mail.gmail.com>
Message-ID: <CALKy-wqMPvchyCCNYSdPXYEA7uNAA+qVaCCXqd5PNkxs1dr2Wg@mail.gmail.com>

>
> It sounds OK to me, although we should all sleep on it for a bit. The
> reason this header exists is exactly because mobile code fetching random
> web resources can result in surprising security holes.
>

That's fair. From the server perspective, I'd argue that payment requests /
payments already need to be publicly accessible endpoints. Current
practical use requires support for cross-app/cross-device requests for
them. It seems like a reasonable logical extension to explicitly allow for
them to be accessed cross-site as well.

For this to be useful, someone would have to actually want to fully
> implement the payment protocol (with its own root cert store, ASN.1
> parsing, RSA etc) in browser-sandboxed Javascript rather than just
> providing a real app for people to download.
>

I think there is still value in fetching the payment request cross-site
even if the request payload is validated by a 3rd party using a more
conventional TLS/crypto suite. Exposing x.509/RSA/ASN.1/chain verification
functionality strikes me as a useful thing browsers could easily offer but
that's another discussion entirely but sure it could be done all in JS. In
certain environments downloading a "real app" isn't possible/practical.


> Is that really going to be popular, though? I think it's unclear.
>

It certainly won't be if there is no ability :)

-Andy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140512/1e519cbe/attachment.html>

From ctpacia at gmail.com  Mon May 12 22:40:14 2014
From: ctpacia at gmail.com (Chris Pacia)
Date: Mon, 12 May 2014 18:40:14 -0400
Subject: [Bitcoin-development] ECDH in the payment protocol
In-Reply-To: <CAPg+sBiSkeoD-Rxkoo+Dp8vTt0hE4FGLVxrdqTox6Njo8Mk5pw@mail.gmail.com>
References: <CANEZrP3VNXSc2cd3b9pz9iC2BR0-vG=tfYwMyUGBGaWPq+geXQ@mail.gmail.com>	<20140509150325.GA30436@savin>	<CANEZrP1m=-GWD5rLRe9vrx0JYKeKXghNw-a47ZbJTd1h3ngFww@mail.gmail.com>	<20140509152715.GA12421@savin>	<CANEZrP0Yom_JjN2PnPsfKV5S4wZSze4XTcJJU2ZWee4VGo20tw@mail.gmail.com>	<CAPg+sBh-OA7xSp3=SEGS1fP-d2CDMzMy_=S_jOs1hvdaWTw0mA@mail.gmail.com>	<20140509181353.GB27819@savin>
	<CAPg+sBiSkeoD-Rxkoo+Dp8vTt0hE4FGLVxrdqTox6Njo8Mk5pw@mail.gmail.com>
Message-ID: <53714DCE.7020803@gmail.com>

Just a thought. Using the payment protocol for stealth would mean we
would likely have to return to backing up wallets all the time would it not?

The nonces cannot be derived from your wallet seed and, since they
aren't in the blockchain, would have to be stored in your wallet. I
suppose they could be stored on the server, but you would probably want
a backup for that anyway. So we would end up having to back up all the
time, something we're trying to get away from. Am I correct about this?

On 05/09/2014 02:38 PM, Pieter Wuille wrote:
> On Fri, May 9, 2014 at 8:13 PM, Peter Todd <pete at petertodd.org> wrote:
>> I don't think we're going to find that's practical unfortunately due to
>> change. Every payment I make ties up txouts, so if we try to base the
>> atomicity of payments on whether or not the payee decides to broadcast
>> the transaction the payor is stuck with txouts that they can't use until
>> the payee makes up their mind. That leads to lots and lots of nasty edge
>> cases.
> I haven't talked much about it except for on IRC, but my idea was this:
> * PaymentACK messages become signed (with the same key as the payment
> request, or using some delegation mechanism, so that the same key
> doesn't need to remain online).
> * Instead of a full Bitcoin transaction, a Payment message contains a
> scriptSig-less Bitcoin transaction + a limit on its byte size (and
> perhaps a limit on its sigop count).
> * The sender sends such a Payment to the receiver before actually
> signing the transaction (or at least, before revealing the signed
> form).
> * The receiver only ACKs if the transaction satisfies the request, is
> within time limits, isn't unlikely to confirm.
> * If the sender likes the ACK (the refund and memo fields are intact,
> the transaction isn't changed, the signature key is valid, ...), he
> either sends the full transaction (with receiver taking responsibility
> for broadcasting) or broadcasts it himself.
>
> Together, this means that a paymentACK + a confirmed matching Bitcoin
> transaction can count as proof of payment. Both parties have a chance
> to disagree with the transaction, and are certain all communicated
> data (apart from transaction signatures) in both directions happened
> correctly before committing. It would completely remove the chance
> that the Bitcoin transaction gets broadcast without the receiver
> liking it (for legitimate or illegitimate reasons), or without the
> backchannel functioning correctly.
>
> It's also compatible with doing multiple payments in one Bitcoin
> transaction - you can ask for ACKs from multiple parties before
> signing the transaction.
>
> Of course, the sender can still withhold the signed transaction (in
> which case nothing happened, but we probably need a second timeout),
> or the receiver can always claim to have never received the
> transaction. The sender can broadcast the transaction himself in order
> to prevent that, after obtaining an ACK.
>




From peter at grigor.ws  Tue May 13 01:21:44 2014
From: peter at grigor.ws (Peter Grigor)
Date: Mon, 12 May 2014 18:21:44 -0700
Subject: [Bitcoin-development] Bitcoin Fee Formula Proposal
Message-ID: <CAGpx8BVhQaO3+zeRgsMBgZa8-6L6+4k60tpQYOVBtFxVjoyBkw@mail.gmail.com>

This was originally submitted to the bitcoin github issue manager. I'm
re-posting here.

I propose the transaction fee should be calculated from a percentage of the
input amount divided by the confirmations of the input multiplied by the
number of inputs.

By using a percentage of the input amount the transaction fee will always
make sense no matter what the "price" of bitcoins may be in fiat; by
dividing the fee by the number of confirmations we discourage hasty spends
and reward savings (ie. old inputs); by multiplying the fee by the number
of inputs we discourage "payment fragmenting."

Let me further explain payment fragmenting by way of an example: Let's say
I get paid $2,500 in bitcoins per month from my job. If I then take that
$2,500 and pay for a coffee (right away, 1 confirmation) I'll be charged a
fee of $2.50 because I'm charged according to the *input amount*, not the
actual transaction size. Because of this it would behove my employer to pay
me the $2,500 as one transaction with, perhaps, 100 output addresses at $25
apiece so that when I pay for my coffee I use one of the $25 unspent
outputs. By multiplying the transaction fee be the number of inputs this
provides a disincentive for payment fragmenting as multiple inputs will be
required to pay for larger purchases.

Furthermore this provides an incentive for wallet software to use the
oldest input(s) which most closely match the transaction amount. For the
example above: In real life a user's wallet would have a number of inputs
to choose from and wouldn't use the newest "paycheck" input for the coffee
purchase. Furthermore, even if the $2,500 input was the only input
available, by waiting for 100 confirmations (less than a day) the
transaction fee would be 2.5 cents.

Transaction fees would then be calculated by the following formula:

((INPUT_AMOUNT * BASE_PERCENT) / CONFIRMATIONS) * NUMBER_OF_INPUTS

The INPUT_AMOUNT, CONFIRMATIONS and NUMBER_OF_INPUTS would be determined by
the creator of the transaction and should be optimized for the transaction
amount -- the BASE_PERCENT would be hard-coded in the bitcoind software.
The special case of zero CONFIRMATIONS will be treated as 1 confirmation in
order to avoid a divide by zero error.

For example: if I choose a BASE_PERCENT of 0.1% and one input it will cost:

   - $1 to send $1,000,000 that has 100 confirmations;
   - $0.10 (10 cents) to send $1,000,000 that has 1,000 confirmations
   (approx. 1 week);
   - $0.10 (10 cents) to send $100 which has 1 confirmation;
   - $0.01 (1 cent) to send $100 which has 10 confirmations;
   - $0.001 (1/10 cent) to send $100 which has 100 confirmations (less than
   a day);

I've put together a spreadsheet which shows the various fees by amount and
confirmations -- the spreadsheet assumes one input for a transaction:

https://docs.google.com/spreadsheets/d/1ovAQfxksQmOq3zYf79qFEDPCrSx58SmyK3Uwpu8iTUs/edit?usp=sharing
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140512/34d187de/attachment.html>

From will.yager at gmail.com  Tue May 13 01:46:24 2014
From: will.yager at gmail.com (Gmail)
Date: Mon, 12 May 2014 20:46:24 -0500
Subject: [Bitcoin-development] Bitcoin Fee Formula Proposal
In-Reply-To: <CAGpx8BVhQaO3+zeRgsMBgZa8-6L6+4k60tpQYOVBtFxVjoyBkw@mail.gmail.com>
References: <CAGpx8BVhQaO3+zeRgsMBgZa8-6L6+4k60tpQYOVBtFxVjoyBkw@mail.gmail.com>
Message-ID: <D6A11BEA-1612-4A92-83BA-584C1F99E070@gmail.com>

What about 0 confirmation inputs?

Mightn't this make tiny "spam" transactions unsafely inexpensive?

> On May 12, 2014, at 20:21, Peter Grigor <peter at grigor.ws> wrote:
> 
> 
> I propose the transaction fee should be calculated from a percentage of the input amount divided by the confirmations of the input multiplied by the number of inputs.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140512/58f4b564/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 1593 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140512/58f4b564/attachment.p7s>

From jgarzik at bitpay.com  Tue May 13 09:19:07 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Tue, 13 May 2014 05:19:07 -0400
Subject: [Bitcoin-development] ECDH in the payment protocol
In-Reply-To: <20140509150325.GA30436@savin>
References: <CANEZrP3VNXSc2cd3b9pz9iC2BR0-vG=tfYwMyUGBGaWPq+geXQ@mail.gmail.com>
	<20140509150325.GA30436@savin>
Message-ID: <CAJHLa0M1T8XyiYNqbVp2ch_J1n-eE63UzXyb0XA9bDASGEnrLQ@mail.gmail.com>

On Fri, May 9, 2014 at 11:03 AM, Peter Todd <pete at petertodd.org> wrote:
> Of course we quickly rejected the idea of depending solely on a
> communications backchannel to retrieve funds. Any communications medium
> that isn't the blockchain makes the payment non-atomic, and thus creates
> opportunities for it to fail.

This is extremely simple-minded logic that encourages ephemeral, junk
data in the blockchain.  Not a scalable approach.

The implication is to put the communications medium in the blockchain
itself, which is wrong.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From wtogami at gmail.com  Tue May 13 09:45:12 2014
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Mon, 12 May 2014 23:45:12 -1000
Subject: [Bitcoin-development] Regtest Address Version Change Proposal
Message-ID: <CAEz79Prrpwi6SXyCpGesmkdau6vjtwELAhr6quXtFZ6_t1-y2A@mail.gmail.com>

Hi folks,

I propose changing all of the address versions in -regtest mode to be
unique so they are no longer identical to testnet.

https://en.bitcoin.it/wiki/List_of_address_prefixes
For example, regtest pubkey hash addresses could begin with r or R.

We need to know if any existing tools would need to be modified to support
this change to regtest.  Do existing tools outside of pull tester expect
regtest to have testnet addresses?  If the quantity of tools that currently
handle regtest is small then we can modify them to the new address versions.

Warren Togami
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140512/ca948ab1/attachment.html>

From bitcoin at bpj-code.co.za  Tue May 13 10:02:08 2014
From: bitcoin at bpj-code.co.za (Bernd Jendrissek)
Date: Tue, 13 May 2014 12:02:08 +0200
Subject: [Bitcoin-development] Bitcoin Fee Formula Proposal
In-Reply-To: <CAGpx8BVhQaO3+zeRgsMBgZa8-6L6+4k60tpQYOVBtFxVjoyBkw@mail.gmail.com>
References: <CAGpx8BVhQaO3+zeRgsMBgZa8-6L6+4k60tpQYOVBtFxVjoyBkw@mail.gmail.com>
Message-ID: <CAF7PVPpC5Qz9Ajy4kN1dRNSP7rRXxAQEHe1OvUkV_0E8mQsMfg@mail.gmail.com>

On Tue, May 13, 2014 at 3:21 AM, Peter Grigor <peter at grigor.ws> wrote:
> This was originally submitted to the bitcoin github issue manager. I'm
> re-posting here.
>
> I propose the transaction fee should be calculated from a percentage of the
> input amount divided by the confirmations of the input multiplied by the
> number of inputs.

For reference: https://github.com/bitcoin/bitcoin/issues/4171

I think the responses in the issue tracker already adequately address
why this doesn't belong in *Bit*coin. Your cure is worse than the
disease, IMHO.



From mike at plan99.net  Tue May 13 10:29:43 2014
From: mike at plan99.net (Mike Hearn)
Date: Tue, 13 May 2014 12:29:43 +0200
Subject: [Bitcoin-development] ECDH in the payment protocol
In-Reply-To: <53714DCE.7020803@gmail.com>
References: <CANEZrP3VNXSc2cd3b9pz9iC2BR0-vG=tfYwMyUGBGaWPq+geXQ@mail.gmail.com>
	<20140509150325.GA30436@savin>
	<CANEZrP1m=-GWD5rLRe9vrx0JYKeKXghNw-a47ZbJTd1h3ngFww@mail.gmail.com>
	<20140509152715.GA12421@savin>
	<CANEZrP0Yom_JjN2PnPsfKV5S4wZSze4XTcJJU2ZWee4VGo20tw@mail.gmail.com>
	<CAPg+sBh-OA7xSp3=SEGS1fP-d2CDMzMy_=S_jOs1hvdaWTw0mA@mail.gmail.com>
	<20140509181353.GB27819@savin>
	<CAPg+sBiSkeoD-Rxkoo+Dp8vTt0hE4FGLVxrdqTox6Njo8Mk5pw@mail.gmail.com>
	<53714DCE.7020803@gmail.com>
Message-ID: <CANEZrP2PMvxhBEAS+eoqJ+eWu-+9i9chj4ZogpJW34o7ghJEsw@mail.gmail.com>

On Tue, May 13, 2014 at 12:40 AM, Chris Pacia <ctpacia at gmail.com> wrote:

> Just a thought. Using the payment protocol for stealth would mean we
> would likely have to return to backing up wallets all the time would it
> not?
>

I think you are right. Awkward.

Wallets could auto-respend transactions to a plain (private) HD derived key
to make them findable again. But that gets us back to using block space
inefficiently.

Over time I think wallet backups will get more valuable anyway, as they
will start containing more and more essential data that isn't in the block
chain: receipts, messages, exchange rate records for tax purposes etc. But
being able to get access to your money with just the 12 words (+a date for
SPV wallets) is a pretty desirable safety feature.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140513/4e1f8a4c/attachment.html>

From mike at plan99.net  Tue May 13 10:30:34 2014
From: mike at plan99.net (Mike Hearn)
Date: Tue, 13 May 2014 12:30:34 +0200
Subject: [Bitcoin-development] Regtest Address Version Change Proposal
In-Reply-To: <CAEz79Prrpwi6SXyCpGesmkdau6vjtwELAhr6quXtFZ6_t1-y2A@mail.gmail.com>
References: <CAEz79Prrpwi6SXyCpGesmkdau6vjtwELAhr6quXtFZ6_t1-y2A@mail.gmail.com>
Message-ID: <CANEZrP1--8C0Tf=RF1Hi9sXq5wbUC1feBswkGMcwGxwgZ1UYKw@mail.gmail.com>

Yes, bitcoinj supports and uses regtest mode. It would also have to be
changed.

You didn't provide a rationale for this. What's the cost of having them be
the same?


On Tue, May 13, 2014 at 11:45 AM, Warren Togami Jr. <wtogami at gmail.com>wrote:

> Hi folks,
>
> I propose changing all of the address versions in -regtest mode to be
> unique so they are no longer identical to testnet.
>
> https://en.bitcoin.it/wiki/List_of_address_prefixes
> For example, regtest pubkey hash addresses could begin with r or R.
>
> We need to know if any existing tools would need to be modified to support
> this change to regtest.  Do existing tools outside of pull tester expect
> regtest to have testnet addresses?  If the quantity of tools that currently
> handle regtest is small then we can modify them to the new address versions.
>
> Warren Togami
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform
> available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140513/baf17532/attachment.html>

From wtogami at gmail.com  Tue May 13 11:02:46 2014
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Tue, 13 May 2014 01:02:46 -1000
Subject: [Bitcoin-development] Regtest Address Version Change Proposal
In-Reply-To: <CANEZrP1--8C0Tf=RF1Hi9sXq5wbUC1feBswkGMcwGxwgZ1UYKw@mail.gmail.com>
References: <CAEz79Prrpwi6SXyCpGesmkdau6vjtwELAhr6quXtFZ6_t1-y2A@mail.gmail.com>
	<CANEZrP1--8C0Tf=RF1Hi9sXq5wbUC1feBswkGMcwGxwgZ1UYKw@mail.gmail.com>
Message-ID: <CAEz79PoNZ=B+BsmHkHykeh4TY3q_EVmksAJagzKTFuTAHL-1pA@mail.gmail.com>

bitcore guesses the network from the address version in several places in
its code.  They don't want to change that.  Perhaps it wasn't the wisest
approach for them to use.  I thought it might be simple to change the
address version since its still relatively new and it isn't a real network.
 Would it be too much work to change?


On Tue, May 13, 2014 at 12:30 AM, Mike Hearn <mike at plan99.net> wrote:

> Yes, bitcoinj supports and uses regtest mode. It would also have to be
> changed.
>
> You didn't provide a rationale for this. What's the cost of having them be
> the same?
>
>
> On Tue, May 13, 2014 at 11:45 AM, Warren Togami Jr. <wtogami at gmail.com>wrote:
>
>> Hi folks,
>>
>> I propose changing all of the address versions in -regtest mode to be
>> unique so they are no longer identical to testnet.
>>
>> https://en.bitcoin.it/wiki/List_of_address_prefixes
>> For example, regtest pubkey hash addresses could begin with r or R.
>>
>> We need to know if any existing tools would need to be modified to
>> support this change to regtest.  Do existing tools outside of pull tester
>> expect regtest to have testnet addresses?  If the quantity of tools that
>> currently handle regtest is small then we can modify them to the new
>> address versions.
>>
>> Warren Togami
>>
>>
>>
>> ------------------------------------------------------------------------------
>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> Instantly run your Selenium tests across 300+ browser/OS combos.
>> Get unparalleled scalability from the best Selenium testing platform
>> available
>> Simple to use. Nothing to install. Get started now for free."
>> http://p.sf.net/sfu/SauceLabs
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140513/bb49c804/attachment.html>

From mike at plan99.net  Tue May 13 11:28:44 2014
From: mike at plan99.net (Mike Hearn)
Date: Tue, 13 May 2014 13:28:44 +0200
Subject: [Bitcoin-development] Regtest Address Version Change Proposal
In-Reply-To: <CAEz79PoNZ=B+BsmHkHykeh4TY3q_EVmksAJagzKTFuTAHL-1pA@mail.gmail.com>
References: <CAEz79Prrpwi6SXyCpGesmkdau6vjtwELAhr6quXtFZ6_t1-y2A@mail.gmail.com>
	<CANEZrP1--8C0Tf=RF1Hi9sXq5wbUC1feBswkGMcwGxwgZ1UYKw@mail.gmail.com>
	<CAEz79PoNZ=B+BsmHkHykeh4TY3q_EVmksAJagzKTFuTAHL-1pA@mail.gmail.com>
Message-ID: <CANEZrP1_1E-EdEYAXW=STYJRReJPCuA4WiQshTim7z40Wfvbkw@mail.gmail.com>

And they can't just do

  NetworkParams.TESTNET = NetworkParams.REGTEST

at the start of a program that is connecting to regtest?

It's not like changing the address code is a huge problem or anything, but
it would disrupt a bunch of people and seems kind of annoying. Surely
there's a simpler way to work around this issue on their side? I mean their
code already has to know what network is *expected*, right, otherwise what
stops you accidentally trying to send coins cross chain?



On Tue, May 13, 2014 at 1:02 PM, Warren Togami Jr. <wtogami at gmail.com>wrote:

> bitcore guesses the network from the address version in several places in
> its code.  They don't want to change that.  Perhaps it wasn't the wisest
> approach for them to use.  I thought it might be simple to change the
> address version since its still relatively new and it isn't a real network.
>  Would it be too much work to change?
>
>
> On Tue, May 13, 2014 at 12:30 AM, Mike Hearn <mike at plan99.net> wrote:
>
>> Yes, bitcoinj supports and uses regtest mode. It would also have to be
>> changed.
>>
>> You didn't provide a rationale for this. What's the cost of having them
>> be the same?
>>
>>
>> On Tue, May 13, 2014 at 11:45 AM, Warren Togami Jr. <wtogami at gmail.com>wrote:
>>
>>> Hi folks,
>>>
>>> I propose changing all of the address versions in -regtest mode to be
>>> unique so they are no longer identical to testnet.
>>>
>>> https://en.bitcoin.it/wiki/List_of_address_prefixes
>>> For example, regtest pubkey hash addresses could begin with r or R.
>>>
>>> We need to know if any existing tools would need to be modified to
>>> support this change to regtest.  Do existing tools outside of pull tester
>>> expect regtest to have testnet addresses?  If the quantity of tools that
>>> currently handle regtest is small then we can modify them to the new
>>> address versions.
>>>
>>> Warren Togami
>>>
>>>
>>>
>>> ------------------------------------------------------------------------------
>>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>>> Instantly run your Selenium tests across 300+ browser/OS combos.
>>> Get unparalleled scalability from the best Selenium testing platform
>>> available
>>> Simple to use. Nothing to install. Get started now for free."
>>> http://p.sf.net/sfu/SauceLabs
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140513/23cd68fb/attachment.html>

From laanwj at gmail.com  Tue May 13 11:43:14 2014
From: laanwj at gmail.com (Wladimir)
Date: Tue, 13 May 2014 13:43:14 +0200
Subject: [Bitcoin-development] statoshi.info is now live
In-Reply-To: <536FAFEA.5050404@gmail.com>
References: <536FAFEA.5050404@gmail.com>
Message-ID: <CA+s+GJAoLTrujeHVEUZYDR1mNUFHVsLhH9BYPntrxLKzMm_AEw@mail.gmail.com>

Hello Jameson,

On Sun, May 11, 2014 at 7:14 PM, Jameson Lopp <jameson.lopp at gmail.com> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Since it seems unlikely that we'll be able to ship an integrated stats / monitoring feature in the short term, I went ahead and set up a public Statoshi instance and threw a nicer interface on top of it.
>
> http://statoshi.info

Must say it looks very nice.

One comment about the graphs: in the 'connected peers' chart you
visualize some larger quantities (especially knownAddresses) and some
very small ones (peer.(dis)connect). This makes the latter invisible
due to scale.

Some random stats may be useful as well:

- Number of connected peers that are SPV clients or full nodes (NODE_NETWORK)
- Current block height (so that it's possible to detect stuck nodes)
- Number of transactions in mempool
- Number of transactions in UTXO set
- Maybe some fee statistics,
https://github.com/bitcoin/bitcoin/pull/3959 would be useful here
- Number of orphan blocks/orphan transactions

Wladimir



From krellan at krellan.net  Tue May 13 17:48:19 2014
From: krellan at krellan.net (Josh Lehan)
Date: Tue, 13 May 2014 10:48:19 -0700
Subject: [Bitcoin-development] statoshi.info is now live
In-Reply-To: <CA+s+GJAoLTrujeHVEUZYDR1mNUFHVsLhH9BYPntrxLKzMm_AEw@mail.gmail.com>
References: <536FAFEA.5050404@gmail.com>
	<CA+s+GJAoLTrujeHVEUZYDR1mNUFHVsLhH9BYPntrxLKzMm_AEw@mail.gmail.com>
Message-ID: <AE9CCC5A-0DAB-4F5A-93D6-C2CA9484C4A4@krellan.net>

I agree, it looks very slick.  Well done.

While on the subject of connected peers, what about the idea of adding the ping time from this node to other peers?  The problem with fitting that information into the current design is that the graphs seem to be comprised of overall statistics for this node, not per-peer statistics that can vary between peers (such as ping time).  If a line were to be added to a graph to represent each peer's ping time, the number of lines (statistics) on the graph would have to vary in real time as peers are added or removed, which would be a challenge.

I earlier added the "ping" feature to bitcoind, and it works to measure the ping time, however this feature is on-demand: it won't ping other nodes unless requested.  So, something would have to send the "ping" RPC command on a regular schedule, to ensure the graph is updated with new information.  Also, there is currently no support for overlapping pings (although that would be easy to add), so if a peer is slow enough to not respond at all to the first ping request, and a second ping request goes out in the meantime, any late response from the first ping request would then be discarded.

Great graphs, and these are just brainstorms for future ideas :)

Josh Lehan

Sent from my iPad

> On May 13, 2014, at 4:43, Wladimir <laanwj at gmail.com> wrote:
> 
> Hello Jameson,
> 
>> On Sun, May 11, 2014 at 7:14 PM, Jameson Lopp <jameson.lopp at gmail.com> wrote:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>> 
>> Since it seems unlikely that we'll be able to ship an integrated stats / monitoring feature in the short term, I went ahead and set up a public Statoshi instance and threw a nicer interface on top of it.
>> 
>> http://statoshi.info
> 
> Must say it looks very nice.
> 
> One comment about the graphs: in the 'connected peers' chart you
> visualize some larger quantities (especially knownAddresses) and some
> very small ones (peer.(dis)connect). This makes the latter invisible
> due to scale.
> 
> Some random stats may be useful as well:
> 
> - Number of connected peers that are SPV clients or full nodes (NODE_NETWORK)
> - Current block height (so that it's possible to detect stuck nodes)
> - Number of transactions in mempool
> - Number of transactions in UTXO set
> - Maybe some fee statistics,
> https://github.com/bitcoin/bitcoin/pull/3959 would be useful here
> - Number of orphan blocks/orphan transactions
> 
> Wladimir
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From wtogami at gmail.com  Tue May 13 22:05:55 2014
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Tue, 13 May 2014 12:05:55 -1000
Subject: [Bitcoin-development] 0.9.2 RC postponed for 7 days
Message-ID: <CAEz79PpK7ofeT9VHUSWgn9NVCHsSBAcZpbSWJhHZ+U5-Cd8JBQ@mail.gmail.com>

The release candidate for 0.9.2 was previously scheduled for May 13th.
 Yesterday it was decided to postpone this for 7 days due to the Bitcoin
2014 Amsterdam conference.  The string freeze is now in effect and it is a
very good time to contribute
translations<https://bitcointalk.org/index.php?topic=582345.0>during
these next 7 days.

In Related News ...
http://nightly.bitcoin.it now has separate builds for the master and 0.9.2
branch.  0.9.2 is what will soon become the release while master is
accepting changes that may not be safe for a near-term release.  Read
details <https://bitcointalk.org/index.php?topic=571414> about
deterministic reproducibility of the unofficial nightly builds.

Warren Togami
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140513/658e2fdf/attachment.html>

From jameson.lopp at gmail.com  Wed May 14 11:38:48 2014
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Wed, 14 May 2014 07:38:48 -0400
Subject: [Bitcoin-development] statoshi.info is now live
In-Reply-To: <AE9CCC5A-0DAB-4F5A-93D6-C2CA9484C4A4@krellan.net>
References: <536FAFEA.5050404@gmail.com>
	<CA+s+GJAoLTrujeHVEUZYDR1mNUFHVsLhH9BYPntrxLKzMm_AEw@mail.gmail.com>
	<AE9CCC5A-0DAB-4F5A-93D6-C2CA9484C4A4@krellan.net>
Message-ID: <537355C8.2090700@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Thanks; I've received several suggestions for other metrics to collect that I hope to implement soon, but you're right in that tracking per-peer pings is a different type of metric than what I'm currently collecting. I actually noted the lack of pong messages in a post I made a few weeks ago: http://coinchomp.com/2014/04/27/peeking-hood-running-bitcoin-node/

Once I added metrics for sent messages, it validated my theory: my node has never sent a single ping request to a peer and thus has never received a pong message. I can't even add sent pings or received pongs to this chart because they don't exist in my graphite instance. http://statoshi.info:8080/render/?width=1548&height=883&_salt=1400066995.622&target=stats.message.received.ping&target=stats.message.sent.pong&lineMode=connected&bgcolor=000000&fgcolor=FFFFFF

I guess my question regarding ping stats is how useful that information would be - it seems to me that if we are trying to quantify the cohesiveness of the network, we should instead be observing the message propagation times. Though that's outside the scope of my project; there are other people who are doing just that.

http://bitcoinstats.com/network/propagation/

Jameson

On 05/13/2014 01:48 PM, Josh Lehan wrote:
> I agree, it looks very slick.  Well done.
> 
> While on the subject of connected peers, what about the idea of adding the ping time from this node to other peers?  The problem with fitting that information into the current design is that the graphs seem to be comprised of overall statistics for this node, not per-peer statistics that can vary between peers (such as ping time).  If a line were to be added to a graph to represent each peer's ping time, the number of lines (statistics) on the graph would have to vary in real time as peers are added or removed, which would be a challenge.
> 
> I earlier added the "ping" feature to bitcoind, and it works to measure the ping time, however this feature is on-demand: it won't ping other nodes unless requested.  So, something would have to send the "ping" RPC command on a regular schedule, to ensure the graph is updated with new information.  Also, there is currently no support for overlapping pings (although that would be easy to add), so if a peer is slow enough to not respond at all to the first ping request, and a second ping request goes out in the meantime, any late response from the first ping request would then be discarded.
> 
> Great graphs, and these are just brainstorms for future ideas :)
> 
> Josh Lehan
> 
> Sent from my iPad
> 
>> On May 13, 2014, at 4:43, Wladimir <laanwj at gmail.com> wrote:
>>
>> Hello Jameson,
>>
>>> On Sun, May 11, 2014 at 7:14 PM, Jameson Lopp <jameson.lopp at gmail.com> wrote:
>>> -----BEGIN PGP SIGNED MESSAGE-----
>>> Hash: SHA1
>>>
>>> Since it seems unlikely that we'll be able to ship an integrated stats / monitoring feature in the short term, I went ahead and set up a public Statoshi instance and threw a nicer interface on top of it.
>>>
>>> http://statoshi.info
>>
>> Must say it looks very nice.
>>
>> One comment about the graphs: in the 'connected peers' chart you
>> visualize some larger quantities (especially knownAddresses) and some
>> very small ones (peer.(dis)connect). This makes the latter invisible
>> due to scale.
>>
>> Some random stats may be useful as well:
>>
>> - Number of connected peers that are SPV clients or full nodes (NODE_NETWORK)
>> - Current block height (so that it's possible to detect stuck nodes)
>> - Number of transactions in mempool
>> - Number of transactions in UTXO set
>> - Maybe some fee statistics,
>> https://github.com/bitcoin/bitcoin/pull/3959 would be useful here
>> - Number of orphan blocks/orphan transactions
>>
>> Wladimir
>>
>> ------------------------------------------------------------------------------
>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> Instantly run your Selenium tests across 300+ browser/OS combos.
>> Get unparalleled scalability from the best Selenium testing platform available
>> Simple to use. Nothing to install. Get started now for free."
>> http://p.sf.net/sfu/SauceLabs
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTc1XIAAoJEIch3FSFNiDcrygH/A+cDzLdNNwdiT2oGjpfYO/A
fxlqSHqzGdTJQuTRgjxAOp9RrFGhGYT4Qz6TJ3qzSVAILyM3FYELxgm3B6TqDWi2
hc0FTFbVO3ys1Otza9r5r/6W0xGIkJaDRghoFlxd1jUCmuPyqK541pHjvX8MPAfm
zYWCb5U2dU0MAzkV8vClQNMy5lMN3RulCm3lZPvetjnQXfhf2e36Pl5MFOsuqzcp
PeZnuXHhxGT6BbVOoEnPRQiH7h0jmDqBV66nJaeUaLVvsg6urfo/HaUmDXuto0tF
r7O779o138mLTofVxCwFvxYxilYDhS9S8L2uZc8ILt+SAZA3XQIM5okJYLd6I6A=
=cJCd
-----END PGP SIGNATURE-----



From pieter.wuille at gmail.com  Wed May 14 13:10:52 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 14 May 2014 15:10:52 +0200
Subject: [Bitcoin-development] statoshi.info is now live
In-Reply-To: <537355C8.2090700@gmail.com>
References: <536FAFEA.5050404@gmail.com>
	<CA+s+GJAoLTrujeHVEUZYDR1mNUFHVsLhH9BYPntrxLKzMm_AEw@mail.gmail.com>
	<AE9CCC5A-0DAB-4F5A-93D6-C2CA9484C4A4@krellan.net>
	<537355C8.2090700@gmail.com>
Message-ID: <CAPg+sBhCouFoYxwEjq09C+wXrgojdzsedBM+tJJpNCwp0JsQFQ@mail.gmail.com>

On May 14, 2014 1:42 PM, "Jameson Lopp" <jameson.lopp at gmail.com> wrote:
>
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Thanks; I've received several suggestions for other metrics to collect
that I hope to implement soon, but you're right in that tracking per-peer
pings is a different type of metric than what I'm currently collecting. I
actually noted the lack of pong messages in a post I made a few weeks ago:
http://coinchomp.com/2014/04/27/peeking-hood-running-bitcoin-node/

See pull request #2784.

(Sent from my phone)

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140514/115ad356/attachment.html>

From andreas at schildbach.de  Thu May 15 11:50:29 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Thu, 15 May 2014 13:50:29 +0200
Subject: [Bitcoin-development] DNS seeds unstable
Message-ID: <ll29m5$r6c$1@ger.gmane.org>

I'm bringing this issue up again. The current Bitcoin DNS seed
infrastructure is unstable. I assume this is because of we're using a
custom DNS implementation which is not 100% compatible. There have been
bugs in the past, like a case sensitive match for the domain name.

Current state (seeds taken from bitcoinj):

mainnet:

seed.bitcoin.sipa.be			OK
dnsseed.bluematt.me			OK
dnsseed.bitcoin.dashjr.org		SERVFAIL, tried multiple ISPs
seed.bitcoinstats.com			OK

testnet:

testnet-seed.bitcoin.petertodd.org	SERVFAIL, just from Telefonica
testnet-seed.bluematt.me		OK (but only returns one node)

Note: Telefonica is one of Europe's largest ISPs.

I would try to improve DNS myself, but I'm not capable of writing C. My
"fix" would be to reimplement everything in Java -- I doubt you guys
would be happy with that.




From drak at zikula.org  Thu May 15 17:17:29 2014
From: drak at zikula.org (Drak)
Date: Thu, 15 May 2014 18:17:29 +0100
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <ll29m5$r6c$1@ger.gmane.org>
References: <ll29m5$r6c$1@ger.gmane.org>
Message-ID: <CANAnSg24Hhvb0T5Cu5yw=hbeF95mbDeVqLfY-5idH7zT95Sp0g@mail.gmail.com>

I am sure the failure here is probably more mundane like a a service not
restarted, or not on auto restart when server is rebooted and such like.
The dns seeder works pretty efficiently in my experience. Maybe we need
more seeders and to include the ability for zone transfers so existing
seeders can spread their records to multiple servers running standard DNS
servers like bind etc.


On 15 May 2014 12:50, Andreas Schildbach <andreas at schildbach.de> wrote:

> I'm bringing this issue up again. The current Bitcoin DNS seed
> infrastructure is unstable. I assume this is because of we're using a
> custom DNS implementation which is not 100% compatible. There have been
> bugs in the past, like a case sensitive match for the domain name.
>
> Current state (seeds taken from bitcoinj):
>
> mainnet:
>
> seed.bitcoin.sipa.be                    OK
> dnsseed.bluematt.me                     OK
> dnsseed.bitcoin.dashjr.org              SERVFAIL, tried multiple ISPs
> seed.bitcoinstats.com                   OK
>
> testnet:
>
> testnet-seed.bitcoin.petertodd.org      SERVFAIL, just from Telefonica
> testnet-seed.bluematt.me                OK (but only returns one node)
>
> Note: Telefonica is one of Europe's largest ISPs.
>
> I would try to improve DNS myself, but I'm not capable of writing C. My
> "fix" would be to reimplement everything in Java -- I doubt you guys
> would be happy with that.
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform
> available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140515/d1fa22db/attachment.html>

From jgarzik at bitpay.com  Thu May 15 17:41:31 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Thu, 15 May 2014 13:41:31 -0400
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <ll29m5$r6c$1@ger.gmane.org>
References: <ll29m5$r6c$1@ger.gmane.org>
Message-ID: <CAJHLa0Pb3gPFiFVwTowRCZ1duudvXpD_VbE6viJXHb4+3iqKKQ@mail.gmail.com>

On Thu, May 15, 2014 at 7:50 AM, Andreas Schildbach
<andreas at schildbach.de> wrote:
> I'm bringing this issue up again. The current Bitcoin DNS seed
> infrastructure is unstable. I assume this is because of we're using a
> custom DNS implementation which is not 100% compatible. There have been
> bugs in the past, like a case sensitive match for the domain name.

While I agree that the problem seeds should be fixed, it also sounds
like a problem with bitcoinj / other layers, if a malfunctioning seed
is a problem for your app.

Seeds are fundamentally a backup for peer exchange.  You are going to
run into problems if you rely 100% on seeds, always.

Further, there are multiple seeds so that we are not impacted if a
couple seeds malfunction or die.  All bitcoin apps must take this into
account.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From gmaxwell at gmail.com  Thu May 15 17:48:52 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Thu, 15 May 2014 10:48:52 -0700
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <ll29m5$r6c$1@ger.gmane.org>
References: <ll29m5$r6c$1@ger.gmane.org>
Message-ID: <CAAS2fgQrbK4LxWaeCmnJQKi_vUPByBDXFmxGfRG_3j0ZUsVEZQ@mail.gmail.com>

On Thu, May 15, 2014 at 4:50 AM, Andreas Schildbach
<andreas at schildbach.de> wrote:
> I'm bringing this issue up again. The current Bitcoin DNS seed
> infrastructure is unstable. I assume this is because of we're using a
> custom DNS implementation which is not 100% compatible. There have been
> bugs in the past, like a case sensitive match for the domain name.

If software is using the DNS seeds in a way where one or two being
unavailable is problematic, then the software may be using them
poorly.

Generally DNS seeds should only be used as fast connectivity hints,
primarily for initial connectivity. Relying on them exclusively
increases isolation vulnerabilities (e.g. because the dns seed
operators or any ISP or network attacker on the path between you and
the seeds can replace the results with ones that isolate you on a
bogus network).



From luke at dashjr.org  Thu May 15 18:05:29 2014
From: luke at dashjr.org (Luke Dashjr)
Date: Thu, 15 May 2014 18:05:29 +0000
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <ll29m5$r6c$1@ger.gmane.org>
References: <ll29m5$r6c$1@ger.gmane.org>
Message-ID: <201405151805.30904.luke@dashjr.org>

On Thursday, May 15, 2014 11:50:29 AM Andreas Schildbach wrote:
> dnsseed.bitcoin.dashjr.org		SERVFAIL, tried multiple ISPs

FWIW, this may be a routing issue: I notice various ISPs have been unable to 
route to my server over IPv4 today. IPv6 seems to be fine.

Not sure how important DNS seed reliability is anyway; it's just 
bootstrapping, and there are multiple servers listed.

Luke



From andreas at schildbach.de  Fri May 16 09:15:34 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Fri, 16 May 2014 11:15:34 +0200
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <CAAS2fgQrbK4LxWaeCmnJQKi_vUPByBDXFmxGfRG_3j0ZUsVEZQ@mail.gmail.com>
References: <ll29m5$r6c$1@ger.gmane.org>
	<CAAS2fgQrbK4LxWaeCmnJQKi_vUPByBDXFmxGfRG_3j0ZUsVEZQ@mail.gmail.com>
Message-ID: <ll4kvl$3nu$1@ger.gmane.org>

On 05/15/2014 07:48 PM, Gregory Maxwell wrote:
> On Thu, May 15, 2014 at 4:50 AM, Andreas Schildbach
> <andreas at schildbach.de> wrote:
>> I'm bringing this issue up again. The current Bitcoin DNS seed
>> infrastructure is unstable. I assume this is because of we're using a
>> custom DNS implementation which is not 100% compatible. There have been
>> bugs in the past, like a case sensitive match for the domain name.
>
> If software is using the DNS seeds in a way where one or two being
> unavailable is problematic, then the software may be using them
> poorly.
>
> Generally DNS seeds should only be used as fast connectivity hints,
> primarily for initial connectivity. Relying on them exclusively
> increases isolation vulnerabilities (e.g. because the dns seed
> operators or any ISP or network attacker on the path between you and
> the seeds can replace the results with ones that isolate you on a
> bogus network).

I just used "nslookup", after seeing the issues in bitcoinj.

I agree that clients should be robust regarding DNS lookups (and
bitcoinj isn't), but still I think the first step needs to be
maintaining a quality infrastructure.





From mike at plan99.net  Fri May 16 14:09:28 2014
From: mike at plan99.net (Mike Hearn)
Date: Fri, 16 May 2014 16:09:28 +0200
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <ll4kvl$3nu$1@ger.gmane.org>
References: <ll29m5$r6c$1@ger.gmane.org>
	<CAAS2fgQrbK4LxWaeCmnJQKi_vUPByBDXFmxGfRG_3j0ZUsVEZQ@mail.gmail.com>
	<ll4kvl$3nu$1@ger.gmane.org>
Message-ID: <CANEZrP0Eocd7CFXoW=meatRtcf-wVRQ=uE70exwO-aQJiYss_Q@mail.gmail.com>

My android wallet is working OK. Yes it isn't great when seeds have
temporary availability problems but things are still working.

There's a couple of pull reqs outstanding to include hard coded seed peers
and getaddr sourced IPs. Once those are finished and merged in there'll be
more backup paths.
On 16 May 2014 11:16, "Andreas Schildbach" <andreas at schildbach.de> wrote:

> On 05/15/2014 07:48 PM, Gregory Maxwell wrote:
> > On Thu, May 15, 2014 at 4:50 AM, Andreas Schildbach
> > <andreas at schildbach.de> wrote:
> >> I'm bringing this issue up again. The current Bitcoin DNS seed
> >> infrastructure is unstable. I assume this is because of we're using a
> >> custom DNS implementation which is not 100% compatible. There have been
> >> bugs in the past, like a case sensitive match for the domain name.
> >
> > If software is using the DNS seeds in a way where one or two being
> > unavailable is problematic, then the software may be using them
> > poorly.
> >
> > Generally DNS seeds should only be used as fast connectivity hints,
> > primarily for initial connectivity. Relying on them exclusively
> > increases isolation vulnerabilities (e.g. because the dns seed
> > operators or any ISP or network attacker on the path between you and
> > the seeds can replace the results with ones that isolate you on a
> > bogus network).
>
> I just used "nslookup", after seeing the issues in bitcoinj.
>
> I agree that clients should be robust regarding DNS lookups (and
> bitcoinj isn't), but still I think the first step needs to be
> maintaining a quality infrastructure.
>
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform
> available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140516/904fd554/attachment.html>

From davidshares at outlook.com  Fri May 16 14:22:46 2014
From: davidshares at outlook.com (David Shares)
Date: Fri, 16 May 2014 10:22:46 -0400
Subject: [Bitcoin-development] Someone put a virus signature into the
	blockchain
Message-ID: <BAY405-EAS11097F03F7300C55382D296BC310@phx.gbl>

http://www.reddit.com/r/Bitcoin/comments/25otbt/someone_put_a_virus_signature_in_the_bitcoin/ 

I just wanted to pass this into the dev list, in case it hasn't been seen yet. I haven't seen anything about it. Thanks, David. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140516/4bb0d90c/attachment.html>

From christophe.biocca at gmail.com  Fri May 16 15:19:37 2014
From: christophe.biocca at gmail.com (Christophe Biocca)
Date: Fri, 16 May 2014 11:19:37 -0400
Subject: [Bitcoin-development] Someone put a virus signature into the
	blockchain
In-Reply-To: <BAY405-EAS11097F03F7300C55382D296BC310@phx.gbl>
References: <BAY405-EAS11097F03F7300C55382D296BC310@phx.gbl>
Message-ID: <CANOOu=8wSzC+TegpJaxKgpKhT1rtO+-YYR0O+yYfNAvn3s7dhQ@mail.gmail.com>

Here's the relevant github issue: https://github.com/bitcoin/bitcoin/issues/4069

On Fri, May 16, 2014 at 10:22 AM, David Shares <davidshares at outlook.com> wrote:
> http://www.reddit.com/r/Bitcoin/comments/25otbt/someone_put_a_virus_signature_in_the_bitcoin/
>
> I just wanted to pass this into the dev list, in case it hasn't been seen
> yet. I haven't seen anything about it. Thanks, David.
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform
> available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From davidshares at outlook.com  Fri May 16 15:28:09 2014
From: davidshares at outlook.com (David Shares)
Date: Fri, 16 May 2014 11:28:09 -0400
Subject: [Bitcoin-development] Someone put a virus signature into
	the	blockchain
In-Reply-To: <CANOOu=8wSzC+TegpJaxKgpKhT1rtO+-YYR0O+yYfNAvn3s7dhQ@mail.gmail.com>
References: <BAY405-EAS11097F03F7300C55382D296BC310@phx.gbl>
	<CANOOu=8wSzC+TegpJaxKgpKhT1rtO+-YYR0O+yYfNAvn3s7dhQ@mail.gmail.com>
Message-ID: <BAY405-EAS2679C6F58B0E4E78D27C8F4BC310@phx.gbl>

Thanks! 

Sent from my iPhone

> On May 16, 2014, at 11:21 AM, "Christophe Biocca" <christophe.biocca at gmail.com> wrote:
> 
> Here's the relevant github issue: https://github.com/bitcoin/bitcoin/issues/4069
> 
>> On Fri, May 16, 2014 at 10:22 AM, David Shares <davidshares at outlook.com> wrote:
>> http://www.reddit.com/r/Bitcoin/comments/25otbt/someone_put_a_virus_signature_in_the_bitcoin/
>> 
>> I just wanted to pass this into the dev list, in case it hasn't been seen
>> yet. I haven't seen anything about it. Thanks, David.
>> 
>> ------------------------------------------------------------------------------
>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> Instantly run your Selenium tests across 300+ browser/OS combos.
>> Get unparalleled scalability from the best Selenium testing platform
>> available
>> Simple to use. Nothing to install. Get started now for free."
>> http://p.sf.net/sfu/SauceLabs
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From andreas at schildbach.de  Fri May 16 16:34:36 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Fri, 16 May 2014 18:34:36 +0200
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <ll29m5$r6c$1@ger.gmane.org>
References: <ll29m5$r6c$1@ger.gmane.org>
Message-ID: <ll5ems$6pt$1@ger.gmane.org>

Apparently British Telecom also cannot speak to Peter Todd's server.

That another very large ISP in Europe.


On 05/15/2014 01:50 PM, Andreas Schildbach wrote:
> I'm bringing this issue up again. The current Bitcoin DNS seed
> infrastructure is unstable. I assume this is because of we're using a
> custom DNS implementation which is not 100% compatible. There have been
> bugs in the past, like a case sensitive match for the domain name.
> 
> Current state (seeds taken from bitcoinj):
> 
> mainnet:
> 
> seed.bitcoin.sipa.be			OK
> dnsseed.bluematt.me			OK
> dnsseed.bitcoin.dashjr.org		SERVFAIL, tried multiple ISPs
> seed.bitcoinstats.com			OK
> 
> testnet:
> 
> testnet-seed.bitcoin.petertodd.org	SERVFAIL, just from Telefonica
> testnet-seed.bluematt.me		OK (but only returns one node)
> 
> Note: Telefonica is one of Europe's largest ISPs.
> 
> I would try to improve DNS myself, but I'm not capable of writing C. My
> "fix" would be to reimplement everything in Java -- I doubt you guys
> would be happy with that.
> 
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> 





From bip at mattwhitlock.name  Fri May 16 16:46:14 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Fri, 16 May 2014 12:46:14 -0400
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <ll5ems$6pt$1@ger.gmane.org>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
Message-ID: <13362447.xaWDMWIYTF@crushinator>

Is Peter Todd's server actually up? The Google public DNS resolver at 8.8.8.8 can't resolve testnet-seed.bitcoin.petertodd.org either (SERVFAIL).


On Friday, 16 May 2014, at 6:34 pm, Andreas Schildbach wrote:
> Apparently British Telecom also cannot speak to Peter Todd's server.
> 
> That another very large ISP in Europe.
> 
> 
> On 05/15/2014 01:50 PM, Andreas Schildbach wrote:
> > I'm bringing this issue up again. The current Bitcoin DNS seed
> > infrastructure is unstable. I assume this is because of we're using a
> > custom DNS implementation which is not 100% compatible. There have been
> > bugs in the past, like a case sensitive match for the domain name.
> > 
> > Current state (seeds taken from bitcoinj):
> > 
> > mainnet:
> > 
> > seed.bitcoin.sipa.be			OK
> > dnsseed.bluematt.me			OK
> > dnsseed.bitcoin.dashjr.org		SERVFAIL, tried multiple ISPs
> > seed.bitcoinstats.com			OK
> > 
> > testnet:
> > 
> > testnet-seed.bitcoin.petertodd.org	SERVFAIL, just from Telefonica
> > testnet-seed.bluematt.me		OK (but only returns one node)
> > 
> > Note: Telefonica is one of Europe's largest ISPs.
> > 
> > I would try to improve DNS myself, but I'm not capable of writing C. My
> > "fix" would be to reimplement everything in Java -- I doubt you guys
> > would be happy with that.
> > 
> > 
> > ------------------------------------------------------------------------------
> > "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> > Instantly run your Selenium tests across 300+ browser/OS combos.
> > Get unparalleled scalability from the best Selenium testing platform available
> > Simple to use. Nothing to install. Get started now for free."
> > http://p.sf.net/sfu/SauceLabs
> > 
> 
> 
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From laszlo at heliacal.net  Fri May 16 16:46:54 2014
From: laszlo at heliacal.net (Laszlo Hanyecz)
Date: Fri, 16 May 2014 16:46:54 +0000
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <ll5ems$6pt$1@ger.gmane.org>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
Message-ID: <09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>

It looks like it might be firewalled, probably just need to fix the ACL in EC2.

-Laszlo

On May 16, 2014, at 4:34 PM, Andreas Schildbach <andreas at schildbach.de> wrote:

> Apparently British Telecom also cannot speak to Peter Todd's server.
> 
> That another very large ISP in Europe.
> 
> 
> On 05/15/2014 01:50 PM, Andreas Schildbach wrote:
>> I'm bringing this issue up again. The current Bitcoin DNS seed
>> infrastructure is unstable. I assume this is because of we're using a
>> custom DNS implementation which is not 100% compatible. There have been
>> bugs in the past, like a case sensitive match for the domain name.
>> 
>> Current state (seeds taken from bitcoinj):
>> 
>> mainnet:
>> 
>> seed.bitcoin.sipa.be			OK
>> dnsseed.bluematt.me			OK
>> dnsseed.bitcoin.dashjr.org		SERVFAIL, tried multiple ISPs
>> seed.bitcoinstats.com			OK
>> 
>> testnet:
>> 
>> testnet-seed.bitcoin.petertodd.org	SERVFAIL, just from Telefonica
>> testnet-seed.bluematt.me		OK (but only returns one node)
>> 
>> Note: Telefonica is one of Europe's largest ISPs.
>> 
>> I would try to improve DNS myself, but I'm not capable of writing C. My
>> "fix" would be to reimplement everything in Java -- I doubt you guys
>> would be happy with that.
>> 
>> 
>> ------------------------------------------------------------------------------
>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> Instantly run your Selenium tests across 300+ browser/OS combos.
>> Get unparalleled scalability from the best Selenium testing platform available
>> Simple to use. Nothing to install. Get started now for free."
>> http://p.sf.net/sfu/SauceLabs
>> 
> 
> 
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From alexykot at gmail.com  Fri May 16 17:07:57 2014
From: alexykot at gmail.com (Alex Kotenko)
Date: Fri, 16 May 2014 18:07:57 +0100
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
	<09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>
Message-ID: <CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>

Hi guys


Just wanted to let you know that Andreas' testnet Bitcoin Wallet doesn't
work because of fail in the peer discovery, and this caused us problems as
we cannot properly demonstrate my XBTerminal POS on the Bitcoin Conference.

Right now I'm booting up an own full node that I will set as trusted peer
in the Wallet settings, hopefully this will work. However this DNS
discovery problem is really a problem, even for testnet. Btw, I had
problems firing up the full bitcoind node also, of the same reason -
discovery failed. I had to ask Andreas to paste me his node list to
manually seed the nodelist.

So I've set up and will run a well connected testnet node, as we need it
for the XBTerminal.
Please let me know if I can somehow help to fix the DNS discovery issue
also.


Best regards,
Alex Kotenko


2014-05-16 17:46 GMT+01:00 Laszlo Hanyecz <laszlo at heliacal.net>:

> It looks like it might be firewalled, probably just need to fix the ACL in
> EC2.
>
> -Laszlo
>
> On May 16, 2014, at 4:34 PM, Andreas Schildbach <andreas at schildbach.de>
> wrote:
>
> > Apparently British Telecom also cannot speak to Peter Todd's server.
> >
> > That another very large ISP in Europe.
> >
> >
> > On 05/15/2014 01:50 PM, Andreas Schildbach wrote:
> >> I'm bringing this issue up again. The current Bitcoin DNS seed
> >> infrastructure is unstable. I assume this is because of we're using a
> >> custom DNS implementation which is not 100% compatible. There have been
> >> bugs in the past, like a case sensitive match for the domain name.
> >>
> >> Current state (seeds taken from bitcoinj):
> >>
> >> mainnet:
> >>
> >> seed.bitcoin.sipa.be                 OK
> >> dnsseed.bluematt.me                  OK
> >> dnsseed.bitcoin.dashjr.org           SERVFAIL, tried multiple ISPs
> >> seed.bitcoinstats.com                        OK
> >>
> >> testnet:
> >>
> >> testnet-seed.bitcoin.petertodd.org   SERVFAIL, just from Telefonica
> >> testnet-seed.bluematt.me             OK (but only returns one node)
> >>
> >> Note: Telefonica is one of Europe's largest ISPs.
> >>
> >> I would try to improve DNS myself, but I'm not capable of writing C. My
> >> "fix" would be to reimplement everything in Java -- I doubt you guys
> >> would be happy with that.
> >>
> >>
> >>
> ------------------------------------------------------------------------------
> >> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> >> Instantly run your Selenium tests across 300+ browser/OS combos.
> >> Get unparalleled scalability from the best Selenium testing platform
> available
> >> Simple to use. Nothing to install. Get started now for free."
> >> http://p.sf.net/sfu/SauceLabs
> >>
> >
> >
> >
> >
> ------------------------------------------------------------------------------
> > "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> > Instantly run your Selenium tests across 300+ browser/OS combos.
> > Get unparalleled scalability from the best Selenium testing platform
> available
> > Simple to use. Nothing to install. Get started now for free."
> > http://p.sf.net/sfu/SauceLabs
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform
> available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140516/2f902475/attachment.html>

From rob.golding at astutium.com  Fri May 16 17:17:17 2014
From: rob.golding at astutium.com (Rob Golding)
Date: Fri, 16 May 2014 18:17:17 +0100
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <ll5ems$6pt$1@ger.gmane.org>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
Message-ID: <009d01cf712a$b0577340$110659c0$@golding@astutium.com>

> > dnsseed.bitcoin.dashjr.org		SERVFAIL, tried multiple ISPs

dnsseed.bitcoin.dashjr.org. 60  IN      NS      jun.dashjr.org.
but jun.dashjr.org isn't responding to dns queries (as at 18.10 GMT
2014-05-16)

that would be a fundamental problem with the dns infrastructure for that
domain (and the sub-hosts/records) , with the authoritive server not
replying to the dns query

> > testnet-seed.bitcoin.petertodd.org	SERVFAIL, just from Telefonica

Similarly no response from the alias'd aws dns service on 23.21.243.183
(testnet-seed-ns1.bitcoin.petertodd.org) from various test locations in
Europe

If there's a requirement for a domain & highly redundant dns to hard-code
into something, and one of the dev's drops me an email, I can get that
organised FoC, but these issues look like 'common'
firewall/transit/connectivity issues at first glance.

Rob




From nick at mynicknet.com  Fri May 16 17:34:02 2014
From: nick at mynicknet.com (Nick Simpson)
Date: Fri, 16 May 2014 12:34:02 -0500
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <009d01cf712a$b0577340$110659c0$@golding@astutium.com>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
	<009d01cf712a$b0577340$110659c0$@golding@astutium.com>
Message-ID: <c8c96a2f-d9f5-4b87-8ccd-9dd4cd811882@email.android.com>

Luke's server has been having issues with ipv4 routing lately anyway, even ignoring any DNS issues.

Nick

On May 16, 2014 12:17:17 PM CDT, Rob Golding <rob.golding at astutium.com> wrote:
>> > dnsseed.bitcoin.dashjr.org		SERVFAIL, tried multiple ISPs
>
>dnsseed.bitcoin.dashjr.org. 60  IN      NS      jun.dashjr.org.
>but jun.dashjr.org isn't responding to dns queries (as at 18.10 GMT
>2014-05-16)
>
>that would be a fundamental problem with the dns infrastructure for
>that
>domain (and the sub-hosts/records) , with the authoritive server not
>replying to the dns query
>
>> > testnet-seed.bitcoin.petertodd.org	SERVFAIL, just from Telefonica
>
>Similarly no response from the alias'd aws dns service on 23.21.243.183
>(testnet-seed-ns1.bitcoin.petertodd.org) from various test locations in
>Europe
>
>If there's a requirement for a domain & highly redundant dns to
>hard-code
>into something, and one of the dev's drops me an email, I can get that
>organised FoC, but these issues look like 'common'
>firewall/transit/connectivity issues at first glance.
>
>Rob
>
>
>------------------------------------------------------------------------------
>"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>Instantly run your Selenium tests across 300+ browser/OS combos.
>Get unparalleled scalability from the best Selenium testing platform
>available
>Simple to use. Nothing to install. Get started now for free."
>http://p.sf.net/sfu/SauceLabs
>_______________________________________________
>Bitcoin-development mailing list
>Bitcoin-development at lists.sourceforge.net
>https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140516/f8042474/attachment.html>

From bitcoin-list at bluematt.me  Fri May 16 18:53:26 2014
From: bitcoin-list at bluematt.me (Matt Corallo)
Date: Fri, 16 May 2014 18:53:26 +0000
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <ll29m5$r6c$1@ger.gmane.org>
References: <ll29m5$r6c$1@ger.gmane.org>
Message-ID: <53765EA6.8070309@bluematt.me>

This is very strange...when did you run this test and can anyone else
reproduce this?

Matt

On 05/15/14 11:50, Andreas Schildbach wrote:
> testnet-seed.bluematt.me		OK (but only returns one node)



From andreas at schildbach.de  Fri May 16 19:43:08 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Fri, 16 May 2014 21:43:08 +0200
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <53765EA6.8070309@bluematt.me>
References: <ll29m5$r6c$1@ger.gmane.org> <53765EA6.8070309@bluematt.me>
Message-ID: <ll5poc$env$1@ger.gmane.org>

For example just now:

$ nslookup testnet-seed.bluematt.me
Server:		127.0.1.1
Address:	127.0.1.1#53

Non-authoritative answer:
testnet-seed.bluematt.me	canonical name = bitcoin-seednode.bluematt.me.
bitcoin-seednode.bluematt.me	canonical name = desktopv2.bluematt.me.
Name:	desktopv2.bluematt.me
Address: 152.23.202.18

And that address doesn't connect on port 18333.


On 05/16/2014 08:53 PM, Matt Corallo wrote:
> This is very strange...when did you run this test and can anyone else
> reproduce this?
> 
> Matt
> 
> On 05/15/14 11:50, Andreas Schildbach wrote:
>> testnet-seed.bluematt.me		OK (but only returns one node)
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> 





From luke at dashjr.org  Fri May 16 21:46:00 2014
From: luke at dashjr.org (Luke Dashjr)
Date: Fri, 16 May 2014 21:46:00 +0000
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <009d01cf712a$b0577340$110659c0$@golding@astutium.com>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
	<009d01cf712a$b0577340$110659c0$@golding@astutium.com>
Message-ID: <201405162146.01429.luke@dashjr.org>

On Friday, May 16, 2014 5:17:17 PM Rob Golding wrote:
> > > dnsseed.bitcoin.dashjr.org		SERVFAIL, tried multiple ISPs
> 
> dnsseed.bitcoin.dashjr.org. 60  IN      NS      jun.dashjr.org.
> but jun.dashjr.org isn't responding to dns queries (as at 18.10 GMT
> 2014-05-16)
> 
> that would be a fundamental problem with the dns infrastructure for that
> domain (and the sub-hosts/records) , with the authoritive server not
> replying to the dns query

jun.dashjr.org has resolved 130 requests in the past ~12 hours, and I can see 
it resolving more in tcpdump. I do observe two potential problems, however:

- For the past 24-48 hours, there seem to be some significant routing problems 
on the IPv4 internet, resulting in people using various diverse ISPs 
(including myself at home) being unable to route to any of my servers. This 
issue doesn't affect IPv6, however.

- The DNS seeder seems to only be responding to requests received over IPv4. 
This means IPv6 DNS servers get no response. :(

Luke



From jgarzik at bitpay.com  Fri May 16 22:02:46 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Sat, 17 May 2014 00:02:46 +0200
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
	<09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>
	<CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>
Message-ID: <CAJHLa0OaAKTLR2hL6kReBFcD6FoXYV9AoqMbn0WwqYgtTNtQKw@mail.gmail.com>

There are only two testnet seeds listed in bitcoind, and one of them
returns SERVFAIL (testnet-seed.bitcoin.petertodd.org) and the other
just returns one A record (testnet-seed.bluematt.me).  No idea what
seeds bitcoinj uses.

If you are going to depend on testnet, especially for an important
demo... contribute to the infrastructure!  This stuff doesn't just fix
itself for free.




On Fri, May 16, 2014 at 7:07 PM, Alex Kotenko <alexykot at gmail.com> wrote:
> Hi guys
>
>
> Just wanted to let you know that Andreas' testnet Bitcoin Wallet doesn't
> work because of fail in the peer discovery, and this caused us problems as
> we cannot properly demonstrate my XBTerminal POS on the Bitcoin Conference.
>
> Right now I'm booting up an own full node that I will set as trusted peer in
> the Wallet settings, hopefully this will work. However this DNS discovery
> problem is really a problem, even for testnet. Btw, I had problems firing up
> the full bitcoind node also, of the same reason - discovery failed. I had to
> ask Andreas to paste me his node list to manually seed the nodelist.
>
> So I've set up and will run a well connected testnet node, as we need it for
> the XBTerminal.
> Please let me know if I can somehow help to fix the DNS discovery issue
> also.
>
>
> Best regards,
> Alex Kotenko
>
>
> 2014-05-16 17:46 GMT+01:00 Laszlo Hanyecz <laszlo at heliacal.net>:
>
>> It looks like it might be firewalled, probably just need to fix the ACL in
>> EC2.
>>
>> -Laszlo
>>
>> On May 16, 2014, at 4:34 PM, Andreas Schildbach <andreas at schildbach.de>
>> wrote:
>>
>> > Apparently British Telecom also cannot speak to Peter Todd's server.
>> >
>> > That another very large ISP in Europe.
>> >
>> >
>> > On 05/15/2014 01:50 PM, Andreas Schildbach wrote:
>> >> I'm bringing this issue up again. The current Bitcoin DNS seed
>> >> infrastructure is unstable. I assume this is because of we're using a
>> >> custom DNS implementation which is not 100% compatible. There have been
>> >> bugs in the past, like a case sensitive match for the domain name.
>> >>
>> >> Current state (seeds taken from bitcoinj):
>> >>
>> >> mainnet:
>> >>
>> >> seed.bitcoin.sipa.be                 OK
>> >> dnsseed.bluematt.me                  OK
>> >> dnsseed.bitcoin.dashjr.org           SERVFAIL, tried multiple ISPs
>> >> seed.bitcoinstats.com                        OK
>> >>
>> >> testnet:
>> >>
>> >> testnet-seed.bitcoin.petertodd.org   SERVFAIL, just from Telefonica
>> >> testnet-seed.bluematt.me             OK (but only returns one node)
>> >>
>> >> Note: Telefonica is one of Europe's largest ISPs.
>> >>
>> >> I would try to improve DNS myself, but I'm not capable of writing C. My
>> >> "fix" would be to reimplement everything in Java -- I doubt you guys
>> >> would be happy with that.
>> >>
>> >>
>> >>
>> >> ------------------------------------------------------------------------------
>> >> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> >> Instantly run your Selenium tests across 300+ browser/OS combos.
>> >> Get unparalleled scalability from the best Selenium testing platform
>> >> available
>> >> Simple to use. Nothing to install. Get started now for free."
>> >> http://p.sf.net/sfu/SauceLabs
>> >>
>> >
>> >
>> >
>> >
>> > ------------------------------------------------------------------------------
>> > "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> > Instantly run your Selenium tests across 300+ browser/OS combos.
>> > Get unparalleled scalability from the best Selenium testing platform
>> > available
>> > Simple to use. Nothing to install. Get started now for free."
>> > http://p.sf.net/sfu/SauceLabs
>> > _______________________________________________
>> > Bitcoin-development mailing list
>> > Bitcoin-development at lists.sourceforge.net
>> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>>
>> ------------------------------------------------------------------------------
>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> Instantly run your Selenium tests across 300+ browser/OS combos.
>> Get unparalleled scalability from the best Selenium testing platform
>> available
>> Simple to use. Nothing to install. Get started now for free."
>> http://p.sf.net/sfu/SauceLabs
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform
> available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From alexykot at gmail.com  Sat May 17 00:58:20 2014
From: alexykot at gmail.com (Alex Kotenko)
Date: Sat, 17 May 2014 01:58:20 +0100
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <CAJHLa0OaAKTLR2hL6kReBFcD6FoXYV9AoqMbn0WwqYgtTNtQKw@mail.gmail.com>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
	<09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>
	<CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>
	<CAJHLa0OaAKTLR2hL6kReBFcD6FoXYV9AoqMbn0WwqYgtTNtQKw@mail.gmail.com>
Message-ID: <CALDj+BY2jEL6-NwGdrh3wdcmjW_7tEDDxmyiP6woOxCg8bMQKw@mail.gmail.com>

Ok, what do I need to do? How do I host a testnet seed myself?

Best regards,
Alex Kotenko


2014-05-16 23:02 GMT+01:00 Jeff Garzik <jgarzik at bitpay.com>:

> There are only two testnet seeds listed in bitcoind, and one of them
> returns SERVFAIL (testnet-seed.bitcoin.petertodd.org) and the other
> just returns one A record (testnet-seed.bluematt.me).  No idea what
> seeds bitcoinj uses.
>
> If you are going to depend on testnet, especially for an important
> demo... contribute to the infrastructure!  This stuff doesn't just fix
> itself for free.
>
>
>
>
> On Fri, May 16, 2014 at 7:07 PM, Alex Kotenko <alexykot at gmail.com> wrote:
> > Hi guys
> >
> >
> > Just wanted to let you know that Andreas' testnet Bitcoin Wallet doesn't
> > work because of fail in the peer discovery, and this caused us problems
> as
> > we cannot properly demonstrate my XBTerminal POS on the Bitcoin
> Conference.
> >
> > Right now I'm booting up an own full node that I will set as trusted
> peer in
> > the Wallet settings, hopefully this will work. However this DNS discovery
> > problem is really a problem, even for testnet. Btw, I had problems
> firing up
> > the full bitcoind node also, of the same reason - discovery failed. I
> had to
> > ask Andreas to paste me his node list to manually seed the nodelist.
> >
> > So I've set up and will run a well connected testnet node, as we need it
> for
> > the XBTerminal.
> > Please let me know if I can somehow help to fix the DNS discovery issue
> > also.
> >
> >
> > Best regards,
> > Alex Kotenko
> >
> >
> > 2014-05-16 17:46 GMT+01:00 Laszlo Hanyecz <laszlo at heliacal.net>:
> >
> >> It looks like it might be firewalled, probably just need to fix the ACL
> in
> >> EC2.
> >>
> >> -Laszlo
> >>
> >> On May 16, 2014, at 4:34 PM, Andreas Schildbach <andreas at schildbach.de>
> >> wrote:
> >>
> >> > Apparently British Telecom also cannot speak to Peter Todd's server.
> >> >
> >> > That another very large ISP in Europe.
> >> >
> >> >
> >> > On 05/15/2014 01:50 PM, Andreas Schildbach wrote:
> >> >> I'm bringing this issue up again. The current Bitcoin DNS seed
> >> >> infrastructure is unstable. I assume this is because of we're using a
> >> >> custom DNS implementation which is not 100% compatible. There have
> been
> >> >> bugs in the past, like a case sensitive match for the domain name.
> >> >>
> >> >> Current state (seeds taken from bitcoinj):
> >> >>
> >> >> mainnet:
> >> >>
> >> >> seed.bitcoin.sipa.be                 OK
> >> >> dnsseed.bluematt.me                  OK
> >> >> dnsseed.bitcoin.dashjr.org           SERVFAIL, tried multiple ISPs
> >> >> seed.bitcoinstats.com                        OK
> >> >>
> >> >> testnet:
> >> >>
> >> >> testnet-seed.bitcoin.petertodd.org   SERVFAIL, just from Telefonica
> >> >> testnet-seed.bluematt.me             OK (but only returns one node)
> >> >>
> >> >> Note: Telefonica is one of Europe's largest ISPs.
> >> >>
> >> >> I would try to improve DNS myself, but I'm not capable of writing C.
> My
> >> >> "fix" would be to reimplement everything in Java -- I doubt you guys
> >> >> would be happy with that.
> >> >>
> >> >>
> >> >>
> >> >>
> ------------------------------------------------------------------------------
> >> >> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For
> FREE
> >> >> Instantly run your Selenium tests across 300+ browser/OS combos.
> >> >> Get unparalleled scalability from the best Selenium testing platform
> >> >> available
> >> >> Simple to use. Nothing to install. Get started now for free."
> >> >> http://p.sf.net/sfu/SauceLabs
> >> >>
> >> >
> >> >
> >> >
> >> >
> >> >
> ------------------------------------------------------------------------------
> >> > "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> >> > Instantly run your Selenium tests across 300+ browser/OS combos.
> >> > Get unparalleled scalability from the best Selenium testing platform
> >> > available
> >> > Simple to use. Nothing to install. Get started now for free."
> >> > http://p.sf.net/sfu/SauceLabs
> >> > _______________________________________________
> >> > Bitcoin-development mailing list
> >> > Bitcoin-development at lists.sourceforge.net
> >> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >>
> >>
> >>
> >>
> ------------------------------------------------------------------------------
> >> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> >> Instantly run your Selenium tests across 300+ browser/OS combos.
> >> Get unparalleled scalability from the best Selenium testing platform
> >> available
> >> Simple to use. Nothing to install. Get started now for free."
> >> http://p.sf.net/sfu/SauceLabs
> >> _______________________________________________
> >> Bitcoin-development mailing list
> >> Bitcoin-development at lists.sourceforge.net
> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
> >
> >
> >
> ------------------------------------------------------------------------------
> > "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> > Instantly run your Selenium tests across 300+ browser/OS combos.
> > Get unparalleled scalability from the best Selenium testing platform
> > available
> > Simple to use. Nothing to install. Get started now for free."
> > http://p.sf.net/sfu/SauceLabs
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
>
>
>
> --
> Jeff Garzik
> Bitcoin core developer and open source evangelist
> BitPay, Inc.      https://bitpay.com/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140517/4b719244/attachment.html>

From bitcoin-list at bluematt.me  Sat May 17 01:06:35 2014
From: bitcoin-list at bluematt.me (Matt Corallo)
Date: Fri, 16 May 2014 21:06:35 -0400
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <53766148.1000708@bluematt.me>
References: <ll29m5$r6c$1@ger.gmane.org> <53765EA6.8070309@bluematt.me>
	<8ADB6ABE-371C-4F4A-A003-F6751B01A12F@heliacal.net>
	<53766148.1000708@bluematt.me>
Message-ID: <049b4115-5d4d-46ae-9665-7fac8a726de1@email.android.com>

Oops, missed the lost

On May 16, 2014 3:04:40 PM EDT, Matt Corallo <bitcoin-list at bluematt.me> wrote:
>Oh, I missed that this was the testnet seed. Yea, that one never got
>set
>up properly and was just pointing to a static seed node (that is now
>down...). The mainnet seed actually works.
>
>On 05/16/14 19:01, Laszlo Hanyecz wrote:
>> Matt,
>> 
>> I get the same:
>> 
>> $ host testnet-seed.bluematt.me
>> testnet-seed.bluematt.me is an alias for
>bitcoin-seednode.bluematt.me.
>> bitcoin-seednode.bluematt.me is an alias for desktopv2.bluematt.me.
>> desktopv2.bluematt.me has address 152.23.202.18
>> 
>> 
>> $ dig +trace desktopv2.bluematt.me. any
>> 
>> ; <<>> DiG 9.8.5-P1 <<>> +trace desktopv2.bluematt.me. any
>> ;; global options: +cmd
>> .			451792	IN	NS	l.root-servers.net.
>> .			451792	IN	NS	d.root-servers.net.
>> .			451792	IN	NS	e.root-servers.net.
>> .			451792	IN	NS	c.root-servers.net.
>> .			451792	IN	NS	j.root-servers.net.
>> .			451792	IN	NS	b.root-servers.net.
>> .			451792	IN	NS	h.root-servers.net.
>> .			451792	IN	NS	f.root-servers.net.
>> .			451792	IN	NS	g.root-servers.net.
>> .			451792	IN	NS	a.root-servers.net.
>> .			451792	IN	NS	i.root-servers.net.
>> .			451792	IN	NS	m.root-servers.net.
>> .			451792	IN	NS	k.root-servers.net.
>> ;; Received 512 bytes from 2a00:5540:5014::1#53(2a00:5540:5014::1) in
>2 ms
>> 
>> me.			172800	IN	NS	b2.me.afilias-nst.org.
>> me.			172800	IN	NS	ns2.nic.me.
>> me.			172800	IN	NS	a0.cctld.afilias-nst.info.
>> me.			172800	IN	NS	b0.cctld.afilias-nst.org.
>> me.			172800	IN	NS	c0.cctld.afilias-nst.info.
>> me.			172800	IN	NS	d0.cctld.afilias-nst.org.
>> me.			172800	IN	NS	a2.me.afilias-nst.info.
>> me.			172800	IN	NS	ns.nic.me.
>> ;; Received 509 bytes from 2001:7fe::53#53(i.root-servers.net) in
>1807 ms
>> 
>> bluematt.me.		86400	IN	NS	ns.bluematt.me.
>> bluematt.me.		86400	IN	NS	ns3.he.net.
>> bluematt.me.		86400	IN	NS	ns4.he.net.
>> bluematt.me.		86400	IN	NS	ns1.rollernet.us.
>> bluematt.me.		86400	IN	NS	ns2.rollernet.us.
>> ;; Received 162 bytes from
>2001:500:26::1#53(b0.cctld.afilias-nst.org) in 118 ms
>> 
>> desktopv2.bluematt.me.	3600	IN	A	152.23.202.18
>> bluematt.me.		86400	IN	NS	ns4.he.net.
>> bluematt.me.		86400	IN	NS	ns3.he.net.
>> bluematt.me.		86400	IN	NS	ns2.rollernet.us.
>> bluematt.me.		86400	IN	NS	ns1.rollernet.us.
>> bluematt.me.		86400	IN	NS	ns.bluematt.me.
>> ;; Received 178 bytes from 2607:fe70:0:4::b#53(ns2.rollernet.us) in
>126 ms
>> 
>> 
>> 
>> 
>> Thanks,
>> Laszlo
>> 
>> 
>> On May 16, 2014, at 6:53 PM, Matt Corallo <bitcoin-list at bluematt.me>
>wrote:
>> 
>>> This is very strange...when did you run this test and can anyone
>else
>>> reproduce this?
>>>
>>> Matt
>>>
>>> On 05/15/14 11:50, Andreas Schildbach wrote:
>>>> testnet-seed.bluematt.me		OK (but only returns one node)
>>>
>>>
>------------------------------------------------------------------------------
>>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For
>FREE
>>> Instantly run your Selenium tests across 300+ browser/OS combos.
>>> Get unparalleled scalability from the best Selenium testing platform
>available
>>> Simple to use. Nothing to install. Get started now for free."
>>> http://p.sf.net/sfu/SauceLabs
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 




From andreas at schildbach.de  Sat May 17 11:39:40 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Sat, 17 May 2014 13:39:40 +0200
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <CALDj+BY2jEL6-NwGdrh3wdcmjW_7tEDDxmyiP6woOxCg8bMQKw@mail.gmail.com>
References: <ll29m5$r6c$1@ger.gmane.org>
	<ll5ems$6pt$1@ger.gmane.org>	<09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>	<CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>	<CAJHLa0OaAKTLR2hL6kReBFcD6FoXYV9AoqMbn0WwqYgtTNtQKw@mail.gmail.com>
	<CALDj+BY2jEL6-NwGdrh3wdcmjW_7tEDDxmyiP6woOxCg8bMQKw@mail.gmail.com>
Message-ID: <ll7hps$8gs$1@ger.gmane.org>

I think the best way to contribute to the infrastructure is actually
what we're doing: Test the current infrastructure and point out where it
is not working. Trying to find solutions for problems.

There is nothing gained by throwing additional hardware at a problem if
the problem itself isn't understood well.


On 05/17/2014 02:58 AM, Alex Kotenko wrote:
> Ok, what do I need to do? How do I host a testnet seed myself? 
> 
> Best regards, 
> Alex Kotenko
> 
> 
> 2014-05-16 23:02 GMT+01:00 Jeff Garzik <jgarzik at bitpay.com
> <mailto:jgarzik at bitpay.com>>:
> 
>     There are only two testnet seeds listed in bitcoind, and one of them
>     returns SERVFAIL (testnet-seed.bitcoin.petertodd.org
>     <http://testnet-seed.bitcoin.petertodd.org>) and the other
>     just returns one A record (testnet-seed.bluematt.me
>     <http://testnet-seed.bluematt.me>).  No idea what
>     seeds bitcoinj uses.
> 
>     If you are going to depend on testnet, especially for an important
>     demo... contribute to the infrastructure!  This stuff doesn't just fix
>     itself for free.





From alexykot at gmail.com  Sat May 17 12:02:37 2014
From: alexykot at gmail.com (Alex Kotenko)
Date: Sat, 17 May 2014 13:02:37 +0100
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <ll7hps$8gs$1@ger.gmane.org>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
	<09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>
	<CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>
	<CAJHLa0OaAKTLR2hL6kReBFcD6FoXYV9AoqMbn0WwqYgtTNtQKw@mail.gmail.com>
	<CALDj+BY2jEL6-NwGdrh3wdcmjW_7tEDDxmyiP6woOxCg8bMQKw@mail.gmail.com>
	<ll7hps$8gs$1@ger.gmane.org>
Message-ID: <CALDj+BYqMDxv+YYcrEzaZH+qFqUsme3UYuYh5Es7C6FbMZCtpg@mail.gmail.com>

Agree.

So, my understanding is that atm we have no working DNS seeds at the
testnet3, right? There are two DNS seeds known, of which one is unreachable
atm, and another one is giving just one IP address, which is also a dead
node.

If I'll start a DNS seed of my own and make sure it works well, will this
help?
I've found this DNS seeder daemon <https://github.com/sipa/bitcoin-seeder>,
and it seems to be exactly what I need to run a DNS seeder myself.
So if my understanding is correct, I'll setup a DNS seeds for mainnet and
for testnet at bitcoin-seed.alexykot.me and testnet-seed.alexykot.me, and
also a well connected nodes for mainnet and testnet on the same server.
Is this a good plan? Will this all help?


Best regards,
Alex Kotenko


2014-05-17 12:39 GMT+01:00 Andreas Schildbach <andreas at schildbach.de>:

> I think the best way to contribute to the infrastructure is actually
> what we're doing: Test the current infrastructure and point out where it
> is not working. Trying to find solutions for problems.
>
> There is nothing gained by throwing additional hardware at a problem if
> the problem itself isn't understood well.
>
>
> On 05/17/2014 02:58 AM, Alex Kotenko wrote:
> > Ok, what do I need to do? How do I host a testnet seed myself?
> >
> > Best regards,
> > Alex Kotenko
> >
> >
> > 2014-05-16 23:02 GMT+01:00 Jeff Garzik <jgarzik at bitpay.com
> > <mailto:jgarzik at bitpay.com>>:
> >
> >     There are only two testnet seeds listed in bitcoind, and one of them
> >     returns SERVFAIL (testnet-seed.bitcoin.petertodd.org
> >     <http://testnet-seed.bitcoin.petertodd.org>) and the other
> >     just returns one A record (testnet-seed.bluematt.me
> >     <http://testnet-seed.bluematt.me>).  No idea what
> >     seeds bitcoinj uses.
> >
> >     If you are going to depend on testnet, especially for an important
> >     demo... contribute to the infrastructure!  This stuff doesn't just
> fix
> >     itself for free.
>
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform
> available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140517/381d1eda/attachment.html>

From andreas at schildbach.de  Sat May 17 12:39:25 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Sat, 17 May 2014 14:39:25 +0200
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <CALDj+BYqMDxv+YYcrEzaZH+qFqUsme3UYuYh5Es7C6FbMZCtpg@mail.gmail.com>
References: <ll29m5$r6c$1@ger.gmane.org>
	<ll5ems$6pt$1@ger.gmane.org>	<09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>	<CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>	<CAJHLa0OaAKTLR2hL6kReBFcD6FoXYV9AoqMbn0WwqYgtTNtQKw@mail.gmail.com>	<CALDj+BY2jEL6-NwGdrh3wdcmjW_7tEDDxmyiP6woOxCg8bMQKw@mail.gmail.com>	<ll7hps$8gs$1@ger.gmane.org>
	<CALDj+BYqMDxv+YYcrEzaZH+qFqUsme3UYuYh5Es7C6FbMZCtpg@mail.gmail.com>
Message-ID: <ll7l9t$m82$1@ger.gmane.org>

On 05/17/2014 02:02 PM, Alex Kotenko wrote:

> So, my understanding is that atm we have no working DNS seeds at the
> testnet3, right? There are two DNS seeds known, of which one is
> unreachable atm, and another one is giving just one IP address, which is
> also a dead node. 

Yes, that's my understanding too.

> If I'll start a DNS seed of my own and make sure it works well, will
> this help? 

Yes, definately.

> I've found this DNS seeder daemon
> <https://github.com/sipa/bitcoin-seeder>, and it seems to be exactly
> what I need to run a DNS seeder myself. 

Afaik this is what most of the other seeds are using, yes.

> So if my understanding is correct, I'll setup a DNS seeds for mainnet
> and for testnet at bitcoin-seed.alexykot.me
> <http://bitcoin-seed.alexykot.me> and testnet-seed.alexykot.me
> <http://testnet-seed.alexykot.me>, and also a well connected nodes for
> mainnet and testnet on the same server. 
> Is this a good plan? Will this all help?

Sound great! Let me know if you've got something to test.





From jerfelix at hotmail.com  Sat May 17 15:31:02 2014
From: jerfelix at hotmail.com (Jerry Felix)
Date: Sat, 17 May 2014 11:31:02 -0400
Subject: [Bitcoin-development] Paper Currency
Message-ID: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>

It seems to me that there's a huge need for a paper currency that is counterfeit-resistant, inexpensive to print, internationally recognized (border-less), fits in a wallet, and machine readable.

I pitched this idea at the Cincinnati Bitcoin meetup last week, and I didn't get thrown out, so I took the time to document a proposed standard to accomplish this.  I've put my ideas into BIP format, so that you can see what I have in mind, although I picked some 
BIP numbers myself that seem to be available.  Call them "proposed proposals", or "provisional BIPs".  I've numbered them provisionally BIP-80 to BIP-84.

If you guys think that this idea has some merit, let's discuss.

https://github.com/jerfelix/provisional_bips/blob/master/README.mediawiki

Submitted with humility and some fear of getting laughed out of here...
- Jerry


 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140517/bd4ac1c8/attachment.html>

From bip at mattwhitlock.name  Sat May 17 15:45:03 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Sat, 17 May 2014 11:45:03 -0400
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
Message-ID: <1436862.L7LahpRYzp@crushinator>

On Saturday, 17 May 2014, at 11:31 am, Jerry Felix wrote:
> I picked some BIP numbers myself that seem to be available.

I'm quite certain you're explicitly *NOT* supposed to do this.



From ctpacia at gmail.com  Sat May 17 16:07:08 2014
From: ctpacia at gmail.com (Chris Pacia)
Date: Sat, 17 May 2014 12:07:08 -0400
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
Message-ID: <5377892C.8080402@gmail.com>

Since these notes have to be redeemed immediately the number of use
cases seems limited. I can't really just hand someone the note and walk
away because they have to scan it to see if it is actually valid.
Otherwise someone could just pass fake notes if they felt the recipient
wouldn't redeem them on the spot. This doesn't seem like an improvement
over just sending the coins via phone.

The use case with poor internet connection wouldn't work as well since,
presumably, the recipient would also have poor reception and couldn't
verify the note was actually loaded with bitcoins.

Also, I REALLY don't like the name bit reserve.

-Chris

On 05/17/2014 11:31 AM, Jerry Felix wrote:
> It seems to me that there's a huge need for a paper currency that is
> counterfeit-resistant, inexpensive to print, internationally
> recognized (border-less), fits in a wallet, and machine readable.
>
> I pitched this idea at the Cincinnati Bitcoin meetup last week, and I
> didn't get thrown out, so I took the time to document a proposed
> standard to accomplish this.  I've put my ideas into BIP format, so
> that you can see what I have in mind, although I picked some
> BIP numbers myself that seem to be available.  Call them "proposed
> proposals", or "provisional BIPs".  I've numbered them provisionally
> BIP-80 to BIP-84.
>
> If you guys think that this idea has some merit, let's discuss.
>
> https://github.com/jerfelix/provisional_bips/blob/master/README.mediawiki
>
> Submitted with humility and some fear of getting laughed out of here...
> - Jerry
>
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140517/50728eeb/attachment.html>

From gmaxwell at gmail.com  Sat May 17 16:40:17 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sat, 17 May 2014 09:40:17 -0700
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <5377892C.8080402@gmail.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
Message-ID: <CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>

On Sat, May 17, 2014 at 9:07 AM, Chris Pacia <ctpacia at gmail.com> wrote:
> I can't really just hand someone the note and walk away
> because they have to scan it to see if it is actually valid.

Not just scan it, but they actually must successfully sweep it?
otherwise they can be trivially double spent. This is especially bad
since any prior bearer can perform such an attack. E.g. record the
private key of everyone that passes through your hands and then
doublespend race any redemption that happens >24 hours after you spend
them. The wrong person would likely be blamed and even if you were
blamed you could plausibly deny it ("Must have been the guy that gave
it to me!").

Othercoin seems to have much better properties in the space of offline
transactions: https://bitcointalk.org/index.php?topic=319146.0

Separately, Cassius also ran into some regulatory issues selling
physical bitcoin artifacts. Especially printing things that seem to be
redeemable for a named USD value sounds especially problematic.

Some random comments? The base58 encoding is fairly human unfriendly.
It's fine for something being copy and pasted, but I've found typing
or reading it works poorly due to mixed case.  I expect the A/B side
to be difficult to educate users about. "This side is private" is more
easily understood, you could just pick one of your sides and call it
private.  I find it kind of odd that this design seems to have no
facility for checking its txouts without recovering the private key,
though considering no one should rely on such a measurement without
sweeping perhaps thats for the best.

(As far as the numbering goes, I think you should be calling these
draft-felix-paper-currency  etc. As a matter of hygienic practice I
will not assign a matching bip number for something that went public
with a number outside of the assignment.)



From alexykot at gmail.com  Sun May 18 11:47:11 2014
From: alexykot at gmail.com (Alex Kotenko)
Date: Sun, 18 May 2014 12:47:11 +0100
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
Message-ID: <CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>

I had a long discussion recently with somebody who wants and has resources
to do exactly this - paper currency representing bitcoins. Yet we've been
thinking mostly about a centralized solution, where one party is producing
and maintaining paper currency, with bitcoins tied to each note verifiable
via blockchain.

The points we've ended up is that it needs to be:
- reloadable
- NFC based
So anybody can verify any notes instantly by just touching it with his
phone, and so merchants could redeem the notes at the moment of accepting
it, convert it into fully online bitcoins and avoid costs of maintaining
paper money turnover. Probably merchant would sell back redeemed
empty notes to the issuer for a price of the note issue, and issuer will
recharge it and put back into circulation.

One problem we couldn't figure out here though - how to protect the notes
from unauthorized redeem. Like if someone else tries to reach your wallet
with his own NFC - how can we distinguish between deliberate redeem by
owner and fraudulent redeem by anybody else with custom built long
range NFC antenna? Any ideas?


Best regards,
Alex Kotenko


2014-05-17 17:40 GMT+01:00 Gregory Maxwell <gmaxwell at gmail.com>:

> On Sat, May 17, 2014 at 9:07 AM, Chris Pacia <ctpacia at gmail.com> wrote:
> > I can't really just hand someone the note and walk away
> > because they have to scan it to see if it is actually valid.
>
> Not just scan it, but they actually must successfully sweep it?
> otherwise they can be trivially double spent. This is especially bad
> since any prior bearer can perform such an attack. E.g. record the
> private key of everyone that passes through your hands and then
> doublespend race any redemption that happens >24 hours after you spend
> them. The wrong person would likely be blamed and even if you were
> blamed you could plausibly deny it ("Must have been the guy that gave
> it to me!").
>
> Othercoin seems to have much better properties in the space of offline
> transactions: https://bitcointalk.org/index.php?topic=319146.0
>
> Separately, Cassius also ran into some regulatory issues selling
> physical bitcoin artifacts. Especially printing things that seem to be
> redeemable for a named USD value sounds especially problematic.
>
> Some random comments? The base58 encoding is fairly human unfriendly.
> It's fine for something being copy and pasted, but I've found typing
> or reading it works poorly due to mixed case.  I expect the A/B side
> to be difficult to educate users about. "This side is private" is more
> easily understood, you could just pick one of your sides and call it
> private.  I find it kind of odd that this design seems to have no
> facility for checking its txouts without recovering the private key,
> though considering no one should rely on such a measurement without
> sweeping perhaps thats for the best.
>
> (As far as the numbering goes, I think you should be calling these
> draft-felix-paper-currency  etc. As a matter of hygienic practice I
> will not assign a matching bip number for something that went public
> with a number outside of the assignment.)
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform
> available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140518/ec456939/attachment.html>

From andreas at schildbach.de  Sun May 18 12:14:51 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Sun, 18 May 2014 14:14:51 +0200
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>	<5377892C.8080402@gmail.com>	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
Message-ID: <lla87r$l7j$1@ger.gmane.org>

> One problem we couldn't figure out here though - how to protect the
> notes from unauthorized redeem. Like if someone else tries to reach your
> wallet with his own NFC - how can we distinguish between deliberate
> redeem by owner and fraudulent redeem by anybody else with custom built
> long range NFC antenna? Any ideas?

I think you'd need multiple factors to protect against that attack. Like
encrypting with a key that is printed on the note as an QR code.





From alexykot at gmail.com  Sun May 18 12:51:57 2014
From: alexykot at gmail.com (Alex Kotenko)
Date: Sun, 18 May 2014 13:51:57 +0100
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <lla87r$l7j$1@ger.gmane.org>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
	<lla87r$l7j$1@ger.gmane.org>
Message-ID: <CALDj+BaQ5sn9_=KAmNUUbmDva2g3mabm_wmcL_gibLyci5zFUQ@mail.gmail.com>

Yes, but it must not sacrifice usability. It's paper money, people are used
to it and they have rather high standard of expectations in this area. Any
usbility sacrifices in this area result into failure of the whole thing.

Best regards,
Alex Kotenko


2014-05-18 13:14 GMT+01:00 Andreas Schildbach <andreas at schildbach.de>:

> > One problem we couldn't figure out here though - how to protect the
> > notes from unauthorized redeem. Like if someone else tries to reach your
> > wallet with his own NFC - how can we distinguish between deliberate
> > redeem by owner and fraudulent redeem by anybody else with custom built
> > long range NFC antenna? Any ideas?
>
> I think you'd need multiple factors to protect against that attack. Like
> encrypting with a key that is printed on the note as an QR code.
>
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform
> available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140518/a79df162/attachment.html>

From k.okupski at googlemail.com  Sun May 18 13:35:33 2014
From: k.okupski at googlemail.com (Krzysztof Okupski)
Date: Sun, 18 May 2014 15:35:33 +0200
Subject: [Bitcoin-development] Bitcoin Protocol Specification
Message-ID: <5378B725.50400@googlemail.com>

Dear all,

I'd like to kindly ask, those of you that have a bit of spare time, to
take a look at a Bitcoin protocol specification I've written. It is still
in development and, as some of you have already indicated, needs
improvement. I'd be very thankful if some of you could take the
time to review it. If there are any errors or suggestions from your
side, I'd gladly hear them. My e-mail can be found on the front page
of the document:

http://enetium.com/resources/Bitcoin.pdf

Warm greetings,
Chris




From natanael.l at gmail.com  Sun May 18 13:50:08 2014
From: natanael.l at gmail.com (Natanael)
Date: Sun, 18 May 2014 15:50:08 +0200
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
Message-ID: <CAAt2M19KJTysuaFfT8rthsMk07UhQL3owBF4Q0Cc4SoKg3UBqw@mail.gmail.com>

Now you are talking about Trusted Platform Modules. Like smartcards,
actually. Devices that won't leak their keys but let the holder spend the
coins. It could even have it's own simple SPV wallet client to make it
easier to handle. And they'd use the attestation features provided by the
TPM to prove the software it's unmodified top the current holder.

But then you still have to trust the manufacturer of the device, and you
have to trust it has no exploitable side channels.

- Sent from my phone
Den 18 maj 2014 13:52 skrev "Alex Kotenko" <alexykot at gmail.com>:

> I had a long discussion recently with somebody who wants and has resources
> to do exactly this - paper currency representing bitcoins. Yet we've been
> thinking mostly about a centralized solution, where one party is producing
> and maintaining paper currency, with bitcoins tied to each note verifiable
> via blockchain.
>
> The points we've ended up is that it needs to be:
> - reloadable
> - NFC based
> So anybody can verify any notes instantly by just touching it with his
> phone, and so merchants could redeem the notes at the moment of accepting
> it, convert it into fully online bitcoins and avoid costs of maintaining
> paper money turnover. Probably merchant would sell back redeemed
> empty notes to the issuer for a price of the note issue, and issuer will
> recharge it and put back into circulation.
>
> One problem we couldn't figure out here though - how to protect the notes
> from unauthorized redeem. Like if someone else tries to reach your wallet
> with his own NFC - how can we distinguish between deliberate redeem by
> owner and fraudulent redeem by anybody else with custom built long
> range NFC antenna? Any ideas?
>
>
> Best regards,
> Alex Kotenko
>
>
> 2014-05-17 17:40 GMT+01:00 Gregory Maxwell <gmaxwell at gmail.com>:
>
>> On Sat, May 17, 2014 at 9:07 AM, Chris Pacia <ctpacia at gmail.com> wrote:
>> > I can't really just hand someone the note and walk away
>> > because they have to scan it to see if it is actually valid.
>>
>> Not just scan it, but they actually must successfully sweep it?
>> otherwise they can be trivially double spent. This is especially bad
>> since any prior bearer can perform such an attack. E.g. record the
>> private key of everyone that passes through your hands and then
>> doublespend race any redemption that happens >24 hours after you spend
>> them. The wrong person would likely be blamed and even if you were
>> blamed you could plausibly deny it ("Must have been the guy that gave
>> it to me!").
>>
>> Othercoin seems to have much better properties in the space of offline
>> transactions: https://bitcointalk.org/index.php?topic=319146.0
>>
>> Separately, Cassius also ran into some regulatory issues selling
>> physical bitcoin artifacts. Especially printing things that seem to be
>> redeemable for a named USD value sounds especially problematic.
>>
>> Some random comments? The base58 encoding is fairly human unfriendly.
>> It's fine for something being copy and pasted, but I've found typing
>> or reading it works poorly due to mixed case.  I expect the A/B side
>> to be difficult to educate users about. "This side is private" is more
>> easily understood, you could just pick one of your sides and call it
>> private.  I find it kind of odd that this design seems to have no
>> facility for checking its txouts without recovering the private key,
>> though considering no one should rely on such a measurement without
>> sweeping perhaps thats for the best.
>>
>> (As far as the numbering goes, I think you should be calling these
>> draft-felix-paper-currency  etc. As a matter of hygienic practice I
>> will not assign a matching bip number for something that went public
>> with a number outside of the assignment.)
>>
>>
>> ------------------------------------------------------------------------------
>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> Instantly run your Selenium tests across 300+ browser/OS combos.
>> Get unparalleled scalability from the best Selenium testing platform
>> available
>> Simple to use. Nothing to install. Get started now for free."
>> http://p.sf.net/sfu/SauceLabs
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform
> available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140518/62c97e9d/attachment.html>

From andreas at schildbach.de  Sun May 18 13:50:56 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Sun, 18 May 2014 15:50:56 +0200
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
Message-ID: <llads0$unt$1@ger.gmane.org>

Jerry, some feedback on generating space-efficient QR codes. QR codes
have 4 possible encodings, see "Storage":
http://en.wikipedia.org/wiki/QR_code

The encoding you're proposing in BIP81 switches you to binary mode
without actually using all the bits. So you'll end up with bloaty QR
codes. One fix would be of course use all the available bits.

However, binary QR codes cannot be used to auto-dispatch to apps on
Android. If you want a wallet app to automatically open upon scan, you
need to encode your data as an URI. That pretty much locks you into
using alphanumeric mode QR codes.

I've implemented that in Bitcoin Wallet for efficiently encoding
transactions and BIP70 payment requests into QR codes. Since the allowed
alphabet is 43 chars, I've named the encoding Base43 (it uses the same
algorithm as Base58 or Base64). Tell me if you're interested in the details.


On 05/17/2014 05:31 PM, Jerry Felix wrote:
> It seems to me that there's a huge need for a paper currency that is
> counterfeit-resistant, inexpensive to print, internationally recognized
> (border-less), fits in a wallet, and machine readable.
> 
> I pitched this idea at the Cincinnati Bitcoin meetup last week, and I
> didn't get thrown out, so I took the time to document a proposed
> standard to accomplish this.  I've put my ideas into BIP format, so that
> you can see what I have in mind, although I picked some
> BIP numbers myself that seem to be available.  Call them "proposed
> proposals", or "provisional BIPs".  I've numbered them provisionally
> BIP-80 to BIP-84.
> 
> If you guys think that this idea has some merit, let's discuss.
> 
> https://github.com/jerfelix/provisional_bips/blob/master/README.mediawiki
> 
> Submitted with humility and some fear of getting laughed out of here...
> - Jerry
> 
> 
> 
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> 
> 
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 





From adam at cypherspace.org  Sun May 18 14:38:53 2014
From: adam at cypherspace.org (Adam Back)
Date: Sun, 18 May 2014 16:38:53 +0200
Subject: [Bitcoin-development] Bitcoin Protocol Specification
In-Reply-To: <5378B725.50400@googlemail.com>
References: <5378B725.50400@googlemail.com>
Message-ID: <20140518143853.GA12783@netbook.cypherspace.org>

Suggestion: maybe you want to write and post here a paragraph summarizing
the topic of your paper so people can know if they feel qualified and if
they need to review it from their interests.

Adam

On Sun, May 18, 2014 at 03:35:33PM +0200, Krzysztof Okupski wrote:
>Dear all,
>
>I'd like to kindly ask, those of you that have a bit of spare time, to
>take a look at a Bitcoin protocol specification I've written. It is still
>in development and, as some of you have already indicated, needs
>improvement. I'd be very thankful if some of you could take the
>time to review it. If there are any errors or suggestions from your
>side, I'd gladly hear them. My e-mail can be found on the front page
>of the document:
>
>http://enetium.com/resources/Bitcoin.pdf
>
>Warm greetings,
>Chris
>
>
>------------------------------------------------------------------------------
>"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>Instantly run your Selenium tests across 300+ browser/OS combos.
>Get unparalleled scalability from the best Selenium testing platform available
>Simple to use. Nothing to install. Get started now for free."
>http://p.sf.net/sfu/SauceLabs
>_______________________________________________
>Bitcoin-development mailing list
>Bitcoin-development at lists.sourceforge.net
>https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From rme at i-rme.es  Sun May 18 17:43:44 2014
From: rme at i-rme.es (=?UTF-8?B?UmHDumwgTWFydMOtbmV6?=)
Date: Sun, 18 May 2014 19:43:44 +0200
Subject: [Bitcoin-development] About the small number of bitcoin nodes
Message-ID: <CA+8=xu+GPykmKdAjxLdRA3QoCPR8azervT9uO-GVraNowAb49g@mail.gmail.com>

About the small number of bitcoin nodes:
Hi, I read the message that Mike Hearn sent to this mailing list some days
ago (2014-04-07 11:34:43) related to the number of bitcoin full nodes.

As an owner of two Bitcoin Nodes, one in my home computer and one in a
dedicated server, I believe I can contribute with some of my thoughts and
ideas:

- Allow users to view the bandwith used by Bitcoin Core:
This is available in the Bitcoin Core GUI (btw, when the computer is
restarted the data gets reseted) but I cant find it in the bitcoind
commandline, people that run nodes want to see the amount of GB that they
have "donated" to the network.

- Educate users about the correct setup of a bitcoin node:
Add a page in the bitcoin.org website with a tutorial about running Bitcoin
Core with the ports opened, about runing bitcoind, etc. This guide shoud
not be for regular users but for advanced ones.

- bitcoind and Bitcoin Core should create a bitcoin.conf file on the first
start:
The first time the software should create a default config file with a
random RCP password and username (user can change it later) and the config
file should be commented so the user can know how to change configurations.
This is very useful in setups without GUI, for example in Ubuntu Server.

- bitcoind and Bitcoin Core should be in Linux repos:
People want to type "yum install bitcoind" or "apt-get install bitcoind"
and install bitcoin. No one wants to follow a tutorial made by somewho
saying that you have to add external repos to install bitcoin in your
server.
For example Electrum has been added to Ubuntu software center recently.
Bitcoin Core an bitcoind should be on CentOS, Debian, Ubuntu and Ubuntu
Server repos.

- Create a "grafical interface" for bitcoind on Linux servers:
Create a command, for example "bitcoind show" that shows a nice summary in
your Terminal (Console) with all the data that a node administrator wants
to know.
When I say "grafical interface" I mean like "top" command, an interface
made out of characters in ASCII.

- Split Bitcoin Wallet from Bitcoin Node:
I believe that this is planned, some people want to help the network and
others want to keep a wallet, someones want both.
With bitcoind you can use the option "disablewallet=1" that allows to save
some memory.

- Inform users if 8333 port is closed:
That should be more visible, I dont mean an alert or warning but some icon.

- Keep connections if bitcoind is restarted:
I noticed that if I restart bitcoind (to apply new config) my reset to 0
and take some hours to rise up to ~40. I believe that my peers should
notice that I am down for less than ~15 minutes and try to connect again
faster.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140518/d0f1a16a/attachment.html>

From alexykot at gmail.com  Sun May 18 18:47:46 2014
From: alexykot at gmail.com (Alex Kotenko)
Date: Sun, 18 May 2014 19:47:46 +0100
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <CAAt2M19KJTysuaFfT8rthsMk07UhQL3owBF4Q0Cc4SoKg3UBqw@mail.gmail.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
	<CAAt2M19KJTysuaFfT8rthsMk07UhQL3owBF4Q0Cc4SoKg3UBqw@mail.gmail.com>
Message-ID: <CALDj+BbEY8+3feH8WQOr2f-VW1xZfq_WPgi3DmMAfOkZwJ2oJQ@mail.gmail.com>

Erm, few things here.
?- I can't see really how to embed electronics capable to run an SPV
cli?ent into printed paper. I know that passive NFC tags can be printed on
paper, but not actual chips and/or power modules. So we are talking about a
completely different things here.
- even with paper notes printed proprietarily by some business the notes
itself still can have routes for independent blockchain-based verification,
and you won't need to trust anybody to test it. You will have to trust
security of the notes itself, but this is same as when you trust the phone
manufacturer when you're putting your bitcoin wallet on it.

?So really I see ?only issues of technical security in here, and this is
the problem I'm seeking solutions for.


Best regards,
Alex Kotenko


2014-05-18 14:50 GMT+01:00 Natanael <natanael.l at gmail.com>:

> Now you are talking about Trusted Platform Modules. Like smartcards,
> actually. Devices that won't leak their keys but let the holder spend the
> coins. It could even have it's own simple SPV wallet client to make it
> easier to handle. And they'd use the attestation features provided by the
> TPM to prove the software it's unmodified top the current holder.
>
> But then you still have to trust the manufacturer of the device, and you
> have to trust it has no exploitable side channels.
>
> - Sent from my phone
> Den 18 maj 2014 13:52 skrev "Alex Kotenko" <alexykot at gmail.com>:
> ?
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140518/5a1cb108/attachment.html>

From jerfelix at hotmail.com  Sun May 18 19:54:18 2014
From: jerfelix at hotmail.com (Jerry Felix)
Date: Sun, 18 May 2014 15:54:18 -0400
Subject: [Bitcoin-development] Paper Currency
Message-ID: <BAY173-W2D84A9A7CD199702CC34FCC330@phx.gbl>

Thanks for all the feedback, and for everyone who read through the docs.  

My BIP numbering was a blunder, and I have revised the numbering to be PCP-0 (Paper Currency Proposal Number 0) through PCP-4.   I think I was brain-dead on that, sorry, and I am now on PCP.



Please allow me to walk you through my thought process on Paper Currency, if you aren't sold that there's merit.

At present time, paper currency undeniably serves a major purpose in society and has a huge value.  Whether all-digital transfers can totally replace paper is still unknown.

And we citizens currently pay a lot to create paper money that is hard to counterfeit.  That too has tons of value, and it can be measured by looking at how much is spent to design, print, and protect fiat currencies from counterfeiting.  And you can add to that cost the societal costs of successful counterfeiting.  US Numbers exceed $800M annually, and are a fraction of the worldwide numbers.

And travelers routinely pay currency exchange fees, to acquire paper currency that is accepted in particular locales.  So a single internationally accepted, border-less paper currency would have high value, as it could potentially eliminate exchange fees for travelers.

Add all the above costs together, and you can see that this is a multi-billion dollar market that Bitcoin could disrupt.   We could actually eliminate all of those costs, while at the same time put Bitcoins into the hands of people in a form that is more familiar.

That's why this feels like a huge need that can be satisfied by creating a single standard for hard-to-counterfeit, cheap to print, paper currency.    I think the key is a "single standard" that the public recognizes.



I think that there are things that you can do with paper now that can't be done with all-digital transfers.  Maybe my perspective is too US-centric due to tipping customs, but it seems much easier to rapidly leave money for someone without their involvement via paper than digital transfers ever will be.   

A recent video showed a stripper/dancer stop dancing and pose to have her QR Tattoo scanned for payment.  (Not that this is all about strippers and PCP, but...) paper would be a much more practical medium than digital transfer in a lot of scenarios.  
http://blogs-images.forbes.com/kashmirhill/files/2014/05/Bitcoin-stripper-QR-code.jpg 
If you think about it, whether you slipped her a Bitcoin Paper note or digitally transferred payment to her QR code, in neither case is she able to verify receipt of payment until she steps off stage.  But remember, we're typically talking about a buck or ten or twenty, not 3 bitcoins as shown in the video!



I saw a Reddit or bitcointalk comment, I believe credited to Mike Caldwell, saying that the author envisioned transactions where the buyer simply handed over private keys (paper wallets), and the merchant had all the electronics.  Reducing the electronics necessary for transfers seems to be desirable.  Should I have to carry a $300 cell phone to be able to carry and spend $20?  This would be moot if 100% of people had their electronic devices with them 100% of the time they need to spend money, and the device is 100% reliable.  I know for me that's not the case.

So, if the currency medium of paper has value, and Bitcoin can make paper currency more counterfeit-proof, and Bitcoin can eliminate costs, and it's a huge market, and the public is familiar with the paper paradigm, all that's left is for the community to come up with a standard.  That's why I took a crack at it, but I certainly welcome improvements!

Questions: 
1)  Is paper a valuable medium for currency?  I contend yes.  
2)  What's the proper tradeoff between convenience and security for paper Bitcoin Notes?  I opted for splitting the private key over two QR codes on opposite sides of the page, as opposed to BIP-38, and I explained my rationale in the documents.

The rest of the technical details (the splitting algorithm, for instance) need to be resolved.  But I took a crack at it.
And the marketing details (note size, shape, color, layout, text, do we call them "Bits", etc.) all need to be resolved.  again, I gave it my best effort, but I'm quite certain the community can do better than me!


First step, though, is to determine whether there's consensus to define a standard for paper bitcoin currency.



Thanks for hearing me out! 
Docs are here:   
https://github.com/jerfelix/provisional_bips/blob/master/README.mediawiki 



 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140518/53cc225f/attachment.html>

From natanael.l at gmail.com  Sun May 18 20:10:03 2014
From: natanael.l at gmail.com (Natanael)
Date: Sun, 18 May 2014 22:10:03 +0200
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <CALDj+BbEY8+3feH8WQOr2f-VW1xZfq_WPgi3DmMAfOkZwJ2oJQ@mail.gmail.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
	<CAAt2M19KJTysuaFfT8rthsMk07UhQL3owBF4Q0Cc4SoKg3UBqw@mail.gmail.com>
	<CALDj+BbEY8+3feH8WQOr2f-VW1xZfq_WPgi3DmMAfOkZwJ2oJQ@mail.gmail.com>
Message-ID: <CAAt2M19cBL2W+PxcQCE7XkjJ0C=9Zshu9SfsT-CBPk9C6EN5Zg@mail.gmail.com>

The problem with not involving any electronics is that somebody needs to
generate a recoverable private key that we have to trust haven't recovered
the private key.

The only plausible solution is multisignature P2SH addresses where you
trust several independent entities to not collude instead, where you
combine their paper notes into one piece. And then you still don't know if
all the private keys are recoverable to you (failed print?).

- Sent from my phone
Den 18 maj 2014 20:48 skrev "Alex Kotenko" <alexykot at gmail.com>:

> Erm, few things here.
> ?- I can't see really how to embed electronics capable to run an SPV
> cli?ent into printed paper. I know that passive NFC tags can be printed on
> paper, but not actual chips and/or power modules. So we are talking about a
> completely different things here.
> - even with paper notes printed proprietarily by some business the notes
> itself still can have routes for independent blockchain-based verification,
> and you won't need to trust anybody to test it. You will have to trust
> security of the notes itself, but this is same as when you trust the phone
> manufacturer when you're putting your bitcoin wallet on it.
>
> ?So really I see ?only issues of technical security in here, and this is
> the problem I'm seeking solutions for.
>
>
> Best regards,
> Alex Kotenko
>
>
> 2014-05-18 14:50 GMT+01:00 Natanael <natanael.l at gmail.com>:
>
>> Now you are talking about Trusted Platform Modules. Like smartcards,
>> actually. Devices that won't leak their keys but let the holder spend the
>> coins. It could even have it's own simple SPV wallet client to make it
>> easier to handle. And they'd use the attestation features provided by the
>> TPM to prove the software it's unmodified top the current holder.
>>
>> But then you still have to trust the manufacturer of the device, and you
>> have to trust it has no exploitable side channels.
>>
>> - Sent from my phone
>> Den 18 maj 2014 13:52 skrev "Alex Kotenko" <alexykot at gmail.com>:
>> ?
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140518/5b4cc866/attachment.html>

From rme at i-rme.es  Sun May 18 20:15:10 2014
From: rme at i-rme.es (=?UTF-8?B?UmHDumwgTWFydMOtbmV6?=)
Date: Sun, 18 May 2014 22:15:10 +0200
Subject: [Bitcoin-development] About the small number of bitcoin nodes
In-Reply-To: <CA+8=xu+GPykmKdAjxLdRA3QoCPR8azervT9uO-GVraNowAb49g@mail.gmail.com>
References: <CA+8=xu+GPykmKdAjxLdRA3QoCPR8azervT9uO-GVraNowAb49g@mail.gmail.com>
Message-ID: <CA+8=xuLLmqMivUeCWVNVCLRbUk4J-3ddmcOwHXsw55A3P8UOTw@mail.gmail.com>

About the small number of bitcoin nodes:
Hi, I read the message that Mike Hearn sent to this mailing list some days
ago (2014-04-07 11:34:43) related to the number of bitcoin full nodes.

As an owner of two Bitcoin Nodes, one in my home computer and one in a
dedicated server, I believe I can contribute with some of my thoughts and
ideas:

- Allow users to view the bandwith used by Bitcoin Core:
This is available in the Bitcoin Core GUI (btw, when the computer is
restarted the data gets reseted) but I cant find it in the bitcoind
commandline, people that run nodes want to see the amount of GB that they
have "donated" to the network.

- Educate users about the correct setup of a bitcoin node:
Add a page in the bitcoin.org website with a tutorial about running Bitcoin
Core with the ports opened, about runing bitcoind, etc. This guide shoud
not be for regular users but for advanced ones.

- bitcoind and Bitcoin Core should create a bitcoin.conf file on the first
start:
The first time the software should create a default config file with a
random RCP password and username (user can change it later) and the config
file should be commented so the user can know how to change configurations.
This is very useful in setups without GUI, for example in Ubuntu Server.

- bitcoind and Bitcoin Core should be in Linux repos:
People want to type "yum install bitcoind" or "apt-get install bitcoind"
and install bitcoin. No one wants to follow a tutorial made by somewho
saying that you have to add external repos to install bitcoin in your
server.
For example Electrum has been added to Ubuntu software center recently.
Bitcoin Core an bitcoind should be on CentOS, Debian, Ubuntu and Ubuntu
Server repos.

- Create a "grafical interface" for bitcoind on Linux servers:
Create a command, for example "bitcoind show" that shows a nice summary in
your Terminal (Console) with all the data that a node administrator wants
to know.
When I say "grafical interface" I mean like "top" command, an interface
made out of characters in ASCII.

- Split Bitcoin Wallet from Bitcoin Node:
I believe that this is planned, some people want to help the network and
others want to keep a wallet, someones want both.
With bitcoind you can use the option "disablewallet=1" that allows to save
some memory.

- Inform users if 8333 port is closed:
That should be more visible, I dont mean an alert or warning but some icon.

- Keep connections if bitcoind is restarted:
I noticed that if I restart bitcoind (to apply new config) my reset to 0
and take some hours to rise up to ~40. I believe that my peers should
notice that I am down for less than ~15 minutes and try to connect again
faster.

Thanks for reading
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140518/a18d3d02/attachment.html>

From jgarzik at bitpay.com  Mon May 19 07:11:37 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Mon, 19 May 2014 03:11:37 -0400
Subject: [Bitcoin-development] About the small number of bitcoin nodes
In-Reply-To: <CA+8=xu+GPykmKdAjxLdRA3QoCPR8azervT9uO-GVraNowAb49g@mail.gmail.com>
References: <CA+8=xu+GPykmKdAjxLdRA3QoCPR8azervT9uO-GVraNowAb49g@mail.gmail.com>
Message-ID: <CAJHLa0ODAUCpG8D7AMpsmi5bL9r_7KS711OC7HSzeeyTKoheXg@mail.gmail.com>

On Sun, May 18, 2014 at 1:43 PM, Ra?l Mart?nez <rme at i-rme.es> wrote:
> - Allow users to view the bandwith used by Bitcoin Core:

+1 for the sake of transparency

HOWEVER, the impact on this feature RE user population is
unpredictable.  Users may see bigger than expected numbers, and switch
off their node.


> - Educate users about the correct setup of a bitcoin node:

+1

> - bitcoind and Bitcoin Core should create a bitcoin.conf file on the first

Meh.  I like example configs, perhaps tuned by the distro.  If the
distro (_not_ Bitcoin Core upstream) chooses to install a bitcoin.conf
in the proper location, that's up to them.


> - bitcoind and Bitcoin Core should be in Linux repos:

Agreed with conditions:
1) The distro MUST let bitcoin devs dictate which dependent libs are
shipped with / built statically into the bitcoin binaries/libs.
2) The distro MUST permit fresh updates even to older stable distros.
2) The maintainer(s) MUST be active, and follow bitcoin development,
release status, etc. on a near-daily basis, be able to respond quickly
if security issues arise, etc.

Matt C seems to do a good job of this in Ubuntu PPA, I'm told.


> - Create a "grafical interface" for bitcoind on Linux servers:
> When I say "grafical interface" I mean like "top" command, an interface made
> out of characters in ASCII.

The best path for this is figure out what statistics you want to see,
and have bitcoind export those raw numbers to any willing consumer.
Then write your bitcoind-top on top of that.

> - Split Bitcoin Wallet from Bitcoin Node:

+1

In progress.  Disable-wallet support, at compile time or runtime, was
the first step.

> - Inform users if 8333 port is closed:

+1

> - Keep connections if bitcoind is restarted:
> I noticed that if I restart bitcoind (to apply new config) my reset to 0 and
> take some hours to rise up to ~40. I believe that my peers should notice
> that I am down for less than ~15 minutes and try to connect again faster.

No, you don't want this (and it's not possible in many cases anyway).

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From justusranvier at gmail.com  Mon May 19 07:25:07 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Mon, 19 May 2014 09:25:07 +0200
Subject: [Bitcoin-development] About the small number of bitcoin nodes
In-Reply-To: <CAJHLa0ODAUCpG8D7AMpsmi5bL9r_7KS711OC7HSzeeyTKoheXg@mail.gmail.com>
References: <CA+8=xu+GPykmKdAjxLdRA3QoCPR8azervT9uO-GVraNowAb49g@mail.gmail.com>
	<CAJHLa0ODAUCpG8D7AMpsmi5bL9r_7KS711OC7HSzeeyTKoheXg@mail.gmail.com>
Message-ID: <5379B1D3.6070509@localhost.local>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 05/19/2014 09:11 AM, Jeff Garzik wrote:
> Meh.  I like example configs, perhaps tuned by the distro.  If the 
> distro (_not_ Bitcoin Core upstream) chooses to install a
> bitcoin.conf in the proper location, that's up to them.
> 
> 
>> - bitcoind and Bitcoin Core should be in Linux repos:
> 
> Agreed with conditions: 1) The distro MUST let bitcoin devs dictate
> which dependent libs are shipped with / built statically into the
> bitcoin binaries/libs. 2) The distro MUST permit fresh updates even
> to older stable distros. 2) The maintainer(s) MUST be active, and
> follow bitcoin development, release status, etc. on a near-daily
> basis, be able to respond quickly if security issues arise, etc.

If we're talking about making bitcoind behave like a proper daemon,
then syslog support should be on the list.

Also, the option to store things in FHS-compliant directories (not
somewhere/.bitcoin)
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTebHTAAoJEMP3uyY4RQ2170IIAMDcx5rj/ZlCTJTOJ2sFttFM
miK9t7oewJ73UpgvFniCUngfjk9Tt5knmskQYEMQ5C9Do/P3Deh1gF6MBBuuai5G
kDNDv51zMEqhwGcqGrPYFMV3NEnBEjullTMgJFvKJf1kZRo7uplwp+eUhILjgSY5
mZjLIUK8iKDNn+Pi8/2UetAvyaRibHAsAnkJnEeOoKAhxUbtzjgZsj08loCCmJrs
RleOTLgArdc33e1bwTTwsS9DDvF18RNTACglsc75Oz0ohHyc5U1A1hBfaRuyu6Fv
8BK+0KPg/zdBCnM1m3aueVukg9p3kIfB2VUVFBHBTo4CPMi91k6oldbfRHy8dXw=
=SjxO
-----END PGP SIGNATURE-----



From laanwj at gmail.com  Mon May 19 08:48:52 2014
From: laanwj at gmail.com (Wladimir)
Date: Mon, 19 May 2014 10:48:52 +0200
Subject: [Bitcoin-development] About the small number of bitcoin nodes
In-Reply-To: <CA+8=xu+GPykmKdAjxLdRA3QoCPR8azervT9uO-GVraNowAb49g@mail.gmail.com>
References: <CA+8=xu+GPykmKdAjxLdRA3QoCPR8azervT9uO-GVraNowAb49g@mail.gmail.com>
Message-ID: <CA+s+GJDphJ5yetm7kQyGrsLWfhXjz1TtgF8kp4BaLaFWLJf9rg@mail.gmail.com>

On Sun, May 18, 2014 at 7:43 PM, Ra?l Mart?nez <rme at i-rme.es> wrote:
> About the small number of bitcoin nodes:
> Hi, I read the message that Mike Hearn sent to this mailing list some days
> ago (2014-04-07 11:34:43) related to the number of bitcoin full nodes.
>
> As an owner of two Bitcoin Nodes, one in my home computer and one in a
> dedicated server, I believe I can contribute with some of my thoughts and
> ideas:
>
> - Allow users to view the bandwith used by Bitcoin Core:
> This is available in the Bitcoin Core GUI (btw, when the computer is
> restarted the data gets reseted) but I cant find it in the bitcoind
> commandline

That's also possible through the RPC. See "getnettotals". You can also
get stats per peer in "getpeerinfo".

I also suggest looking at Jameson Lopp's Statoshi work
(http://statoshi.info) if you like graphs and more detailed stats.

> - Educate users about the correct setup of a bitcoin node:
> Add a page in the bitcoin.org website with a tutorial about running Bitcoin
> Core with the ports opened, about runing bitcoind, etc. This guide shoud not
> be for regular users but for advanced ones.

Yes, such a document would be very welcome.

Maybe coordinate with Sa?vann Carignan or David Harding, it could be
part of their bitcoin documentation project.

> - bitcoind and Bitcoin Core should create a bitcoin.conf file on the first
> start:
> The first time the software should create a default config file with a
> random RCP password and username (user can change it later) and the config
> file should be commented so the user can know how to change configurations.
> This is very useful in setups without GUI, for example in Ubuntu Server.

I agree with you that a default configuration file is useful,
*however* this does not need to be created by the daemon.

The idea would be to make bitcoind and its data and configuration
system-wide. See https://github.com/bitcoin/bitcoin/issues/4124

A daemon should not even have write access to its own configuration
files. To follow the example of apache, tor, and such the distribution
installs a default configuration file which the user can adapt.

> - bitcoind and Bitcoin Core should be in Linux repos:
> People want to type "yum install bitcoind" or "apt-get install bitcoind" and
> install bitcoin. No one wants to follow a tutorial made by somewho saying
> that you have to add external repos to install bitcoin in your server.
> For example Electrum has been added to Ubuntu software center recently.
> Bitcoin Core an bitcoind should be on CentOS, Debian, Ubuntu and Ubuntu
> Server repos.

This sounds good, but as usual the practice is much uglier.

Bitcoind was part of the Ubuntu default repos for a while, but they
don't upgrade versions as we need to. This resulted in Ubuntu 12.04
stable being stuck with 0.3.xx forever. It would be even worse for
Debian Stable, which has even older versions of packages.

So right now we need you to add the PPA to get the package for Ubuntu.
This is only a small extra step.

This has to be determined per distribution, though. In some distros
this may be perfectly possible. This is just another place where the
project is completely dependent on volunteers.

> - Create a "grafical interface" for bitcoind on Linux servers:
> Create a command, for example "bitcoind show" that shows a nice summary in
> your Terminal (Console) with all the data that a node administrator wants to
> know.
> When I say "grafical interface" I mean like "top" command, an interface made
> out of characters in ASCII.

Sounds like a fun project for someone in Python. Most of the
information is already available through RPC (and if not, request
it!).

Some hacking with ncurses could quickly make a decent tool here. It
could be packaged with bitcoin itself but that's not necessary. For
example Tor has the tool 'arm' which is a separate package.

You may want to talk with Shawn Wilkinson he has some ideas in this
direction. See also the issue
https://github.com/bitcoin/bitcoin/issues/3122 .

> - Split Bitcoin Wallet from Bitcoin Node:
> I believe that this is planned, some people want to help the network and
> others want to keep a wallet, someones want both.
> With bitcoind you can use the option "disablewallet=1" that allows to save
> some memory.

Running the node without wallet is already possible since 0.9.0 in two ways:

- ./configure --disable-wallet when compiling
- run with -disablewallet  (as you say)

This works both for the GUI and the daemon. You can use the resulting
node-only instance ("edge router") with any existing SPV wallet.

There are plans to split off the wallet so that it can run separately,
but I wouldn't be holding my breath.

It feels to me that the general direction things are going in is that
other wallet projects are advancing much faster than Bitcoin Core's
wallet and people will likely switch to other wallet projects for
wallet functionality. Bitcoin Core is moving to an edge router role.

I'm happy to be proven wrong here and would like to see someone work
on bitcoind's wallet, but with the current development resources we
have to focus on a what is most urgent: maintaining and improving the
infrastructure.

> - Inform users if 8333 port is closed:
> That should be more visible, I dont mean an alert or warning but some icon.

Yes, it would be great of connectivity and proxy problems were
signaled in some way.

Detecting whether your port is closed from the outside is an imprecise
art at most, though, as it relies on information from others.

A first step could be showing the number of incoming and outgoing
connections separately in getnetworkinfo. If you have no incoming
connections after a while you can be fairly sure that there is no
outward connectivity.

> - Keep connections if bitcoind is restarted:
> I noticed that if I restart bitcoind (to apply new config) my reset to 0 and
> take some hours to rise up to ~40. I believe that my peers should notice
> that I am down for less than ~15 minutes and try to connect again faster.

What incentive do peers have to reconnect to you specifically? The
nature of a P2P network is that nodes are interchangeable. If a node
fails or kicks them, they'll just try the next node in the list.
Sometimes that will be you, sometimes it will not.

Wladimir



From bo.bjornsen at gmail.com  Mon May 19 09:26:37 2014
From: bo.bjornsen at gmail.com (=?ISO-8859-1?Q?Bj=F8rn_=D8ivind_Bj=F8rnsen?=)
Date: Mon, 19 May 2014 11:26:37 +0200
Subject: [Bitcoin-development] About the small number of bitcoin nodes
In-Reply-To: <CA+8=xu+GPykmKdAjxLdRA3QoCPR8azervT9uO-GVraNowAb49g@mail.gmail.com>
References: <CA+8=xu+GPykmKdAjxLdRA3QoCPR8azervT9uO-GVraNowAb49g@mail.gmail.com>
Message-ID: <5379CE4D.5040100@gmail.com>

On 18/05/14 19:43, Ra?l Mart?nez wrote:
> About the small number of bitcoin nodes:
> Hi, I read the message that Mike Hearn sent to this mailing list some
> days ago (2014-04-07 11:34:43) related to the number of bitcoin full nodes.
> 
> As an owner of two Bitcoin Nodes, one in my home computer and one in a
> dedicated server, I believe I can contribute with some of my thoughts
> and ideas:
> 
> <snip some good ideas>

As an interested party not intimately familiar with the bitcoin codebase
who also spent some time setting up a node a while ago, I would like to
add one thing to the above list - network rate limiting.
When I first set up my node, I did not consider this until it started
eating all of my upstream bandwith (on an ADSL line that isn't so fun),
and I must admit I was a bit disappointed when I found that I would have
to set this up separately. An option to limit the upstream and
downstream network usage (like what tor or most torrent clients does)
would be useful.

On the note of the distro packages, I've so far been pretty happy with
the packages provided by Arch Linux - I have no idea if they build it
correctly (with the correct static libs and all), but it seems to work
fine for the edge router case.

Bj?rn ?ivind


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 901 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/6b7f5512/attachment.sig>

From alexykot at gmail.com  Mon May 19 10:26:35 2014
From: alexykot at gmail.com (Alex Kotenko)
Date: Mon, 19 May 2014 11:26:35 +0100
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <CAAt2M19cBL2W+PxcQCE7XkjJ0C=9Zshu9SfsT-CBPk9C6EN5Zg@mail.gmail.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
	<CAAt2M19KJTysuaFfT8rthsMk07UhQL3owBF4Q0Cc4SoKg3UBqw@mail.gmail.com>
	<CALDj+BbEY8+3feH8WQOr2f-VW1xZfq_WPgi3DmMAfOkZwJ2oJQ@mail.gmail.com>
	<CAAt2M19cBL2W+PxcQCE7XkjJ0C=9Zshu9SfsT-CBPk9C6EN5Zg@mail.gmail.com>
Message-ID: <CALDj+Bbc_G1djYx-F-QpRPKMY7WBznemEd0pd0Yt2UE4rg6QiQ@mail.gmail.com>

Practically I would approach it from a different angle. We need to make
sure that notes we're accepting are still loaded, but assuming it's NFC
enabled this is still quite easy for the user and is an acceptable
usability drawback.
Then what we need to make sure is that when someone is redeeming the notes
- he has control over physical object itself, ideally for a period of time.

?With some active powered electronics in place it would be easy, but how do
we do it without anything active in place? ?


Best regards,
Alex Kotenko


2014-05-18 21:10 GMT+01:00 Natanael <natanael.l at gmail.com>:

> The problem with not involving any electronics is that somebody needs to
> generate a recoverable private key that we have to trust haven't recovered
> the private key.
>
> The only plausible solution is multisignature P2SH addresses where you
> trust several independent entities to not collude instead, where you
> combine their paper notes into one piece. And then you still don't know if
> all the private keys are recoverable to you (failed print?).
>
> - Sent from my phone
> Den 18 maj 2014 20:48 skrev "Alex Kotenko" <alexykot at gmail.com>:
>
> Erm, few things here.
>> ?- I can't see really how to embed electronics capable to run an SPV
>> cli?ent into printed paper. I know that passive NFC tags can be printed on
>> paper, but not actual chips and/or power modules. So we are talking about a
>> completely different things here.
>> - even with paper notes printed proprietarily by some business the notes
>> itself still can have routes for independent blockchain-based verification,
>> and you won't need to trust anybody to test it. You will have to trust
>> security of the notes itself, but this is same as when you trust the phone
>> manufacturer when you're putting your bitcoin wallet on it.
>>
>> ?So really I see ?only issues of technical security in here, and this is
>> the problem I'm seeking solutions for.
>>
>>
>> Best regards,
>> Alex Kotenko
>>
>>
>> 2014-05-18 14:50 GMT+01:00 Natanael <natanael.l at gmail.com>:
>>
>>> Now you are talking about Trusted Platform Modules. Like smartcards,
>>> actually. Devices that won't leak their keys but let the holder spend the
>>> coins. It could even have it's own simple SPV wallet client to make it
>>> easier to handle. And they'd use the attestation features provided by the
>>> TPM to prove the software it's unmodified top the current holder.
>>>
>>> But then you still have to trust the manufacturer of the device, and you
>>> have to trust it has no exploitable side channels.
>>>
>>> - Sent from my phone
>>> Den 18 maj 2014 13:52 skrev "Alex Kotenko" <alexykot at gmail.com>:
>>> ?
>>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/d1363baf/attachment.html>

From laanwj at gmail.com  Mon May 19 10:39:48 2014
From: laanwj at gmail.com (Wladimir)
Date: Mon, 19 May 2014 12:39:48 +0200
Subject: [Bitcoin-development] About the small number of bitcoin nodes
In-Reply-To: <CA+s+GJDphJ5yetm7kQyGrsLWfhXjz1TtgF8kp4BaLaFWLJf9rg@mail.gmail.com>
References: <CA+8=xu+GPykmKdAjxLdRA3QoCPR8azervT9uO-GVraNowAb49g@mail.gmail.com>
	<CA+s+GJDphJ5yetm7kQyGrsLWfhXjz1TtgF8kp4BaLaFWLJf9rg@mail.gmail.com>
Message-ID: <CA+s+GJD0VE7O4_BLO+RmS5veYcTisBvdbRfnorZdMtZuhOzu7g@mail.gmail.com>

On Mon, May 19, 2014 at 10:48 AM, Wladimir <laanwj at gmail.com> wrote:
>
> Some hacking with ncurses could quickly make a decent tool here. It
> could be packaged with bitcoin itself but that's not necessary. For
> example Tor has the tool 'arm' which is a separate package.

Regarding tor-arm, here are some screenshots:
https://www.atagar.com/arm/screenshots.php

It shows, among other things:
- bandwidth up/down graphs
- CPU usage
- debug logging (in real time)
- connected peers+statistics
- currently active configuration

Would be nice to have a similar tool for bitcoind.

Wladimir



From micaroni at walltime.info  Mon May 19 10:47:47 2014
From: micaroni at walltime.info (Felipe Micaroni Lalli)
Date: Mon, 19 May 2014 07:47:47 -0300
Subject: [Bitcoin-development] About the small number of bitcoin nodes
In-Reply-To: <CA+s+GJD0VE7O4_BLO+RmS5veYcTisBvdbRfnorZdMtZuhOzu7g@mail.gmail.com>
References: <CA+8=xu+GPykmKdAjxLdRA3QoCPR8azervT9uO-GVraNowAb49g@mail.gmail.com>
	<CA+s+GJDphJ5yetm7kQyGrsLWfhXjz1TtgF8kp4BaLaFWLJf9rg@mail.gmail.com>
	<CA+s+GJD0VE7O4_BLO+RmS5veYcTisBvdbRfnorZdMtZuhOzu7g@mail.gmail.com>
Message-ID: <F8750E85-68EA-48DD-82F1-AD84BEFF568C@walltime.info>

Is the small number of bitcoin nodes a concern? If yes, why? What kind of attack can the network suffer? And where can we find statistical information about the full nodes running?

I guess the only effective incentive to keep a node running would be financial. A kind of proof of stake would be nice on bitcoin. But I have no idea how to begin with.



Felipe Micaroni Lalli

Walltime: https://walltime.info
Bitcoin Paranoid Android developer
PGP ID: 0x4c0afccfed5cde14
BTC: 1LipeR1AjHL6gwE7WQECW4a2H4tuqm768N

On 19/05/2014, at 07:39, Wladimir <laanwj at gmail.com> wrote:

> On Mon, May 19, 2014 at 10:48 AM, Wladimir <laanwj at gmail.com> wrote:
>> 
>> Some hacking with ncurses could quickly make a decent tool here. It
>> could be packaged with bitcoin itself but that's not necessary. For
>> example Tor has the tool 'arm' which is a separate package.
> 
> Regarding tor-arm, here are some screenshots:
> https://www.atagar.com/arm/screenshots.php
> 
> It shows, among other things:
> - bandwidth up/down graphs
> - CPU usage
> - debug logging (in real time)
> - connected peers+statistics
> - currently active configuration
> 
> Would be nice to have a similar tool for bitcoind.
> 
> Wladimir
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/430cddf7/attachment.sig>

From mike at plan99.net  Mon May 19 12:15:54 2014
From: mike at plan99.net (Mike Hearn)
Date: Mon, 19 May 2014 14:15:54 +0200
Subject: [Bitcoin-development] About the small number of bitcoin nodes
In-Reply-To: <5379CE4D.5040100@gmail.com>
References: <CA+8=xu+GPykmKdAjxLdRA3QoCPR8azervT9uO-GVraNowAb49g@mail.gmail.com>
	<5379CE4D.5040100@gmail.com>
Message-ID: <CANEZrP28PQNwuLYTgzyaTDUY-Sg2fEijiPZ26k3NbwvgYoqLww@mail.gmail.com>

>
> As an interested party not intimately familiar with the bitcoin codebase
> who also spent some time setting up a node a while ago, I would like to
> add one thing to the above list - network rate limiting.


The problem is that this is easier said than done. Bitcoin Core won't
notice a remote peer is working but slow and switch to a faster one, and
even if it did, it'd just mean throttling your connection would cause all
remote nodes to give up and hit the other unthrottled peers even more.

The best way to implement this is to do chain pruning, so your node will
still try and shovel bytes as fast as possible, but it's limited by how
many bytes it has to shovel. Remote nodes that are pulling down the block
chain can then switch between nodes depending on what they have available
in order to try and avoid hitting one node too hard. Nodes that were
offline for a while and just catching up would prefer nodes that have less
of the chain.

It'd be great if someone could experiment with this. The first step is
extending the p2p protocol so addr broadcasts and version messages include
how much of the chain (counting blocks from the head?) the peer is willing
to serve, and then updating the downloading code so it tries to be smarter
about peer selection. Unfortunately all this work is sort of backed up
waiting for sipa to finish merging in headers-first downloading.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/e5042642/attachment.html>

From mike at plan99.net  Mon May 19 12:21:47 2014
From: mike at plan99.net (Mike Hearn)
Date: Mon, 19 May 2014 14:21:47 +0200
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
Message-ID: <CANEZrP27wSZ=aFdW5Nw1gGqemE4GeLbfTS5=DD5uX+fsTfpF3g@mail.gmail.com>

> Submitted with humility and some fear of getting laughed out of here...
>

Off topic aside, a bunch of us have lately started to think about the
atmosphere on this list and how to improve it. Nobody should have to fear
getting flamed or laughed at for proposing ideas, even if they turn out to
be silly ones. Gavin talked about this in his Bitcoin 2014 keynote and
asked for someone to solve the forum trolling problem.

I don't know if there are any silver bullets per se, but:

1) Please do keep ideas coming. It's easy to mute threads in any good mail
client for people who don't care. If anyone gets too aggressive, the rest
of us will remind them that this is unacceptable.

2) If you're willing to become a list moderator, please get in touch. Gavin
and I are looking for neutral people who are willing to keep up with this
list and help ensure the debate is civilised. Ideally moderation is not
necessary, but that's what we tried so far and we keep getting consistent
feedback from lots of people that it's not working.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/fc7f6920/attachment.html>

From bo.bjornsen at gmail.com  Mon May 19 12:24:35 2014
From: bo.bjornsen at gmail.com (=?UTF-8?B?QmrDuHJuIMOYaXZpbmQgQmrDuHJuc2Vu?=)
Date: Mon, 19 May 2014 14:24:35 +0200
Subject: [Bitcoin-development] About the small number of bitcoin nodes
In-Reply-To: <CANEZrP28PQNwuLYTgzyaTDUY-Sg2fEijiPZ26k3NbwvgYoqLww@mail.gmail.com>
References: <CA+8=xu+GPykmKdAjxLdRA3QoCPR8azervT9uO-GVraNowAb49g@mail.gmail.com>	<5379CE4D.5040100@gmail.com>
	<CANEZrP28PQNwuLYTgzyaTDUY-Sg2fEijiPZ26k3NbwvgYoqLww@mail.gmail.com>
Message-ID: <5379F803.40509@gmail.com>

On 19/05/14 14:15, Mike Hearn wrote:
>     As an interested party not intimately familiar with the bitcoin codebase
>     who also spent some time setting up a node a while ago, I would like to
>     add one thing to the above list - network rate limiting.
> 
> 
> The problem is that this is easier said than done. Bitcoin Core won't
> notice a remote peer is working but slow and switch to a faster one, and
> even if it did, it'd just mean throttling your connection would cause
> all remote nodes to give up and hit the other unthrottled peers even more.
> 

Does this mean that you can currently actively hurt the network by
adding a node with a very slow upstream / downstream? If so, what is the
recommended minimum amount of bandwidth you should allocate for a node?
I've already throttled mine with QoS based on the script in the contrib/
folder.

Bj?rn ?ivind


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 901 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/9ea04427/attachment.sig>

From mike at plan99.net  Mon May 19 12:28:17 2014
From: mike at plan99.net (Mike Hearn)
Date: Mon, 19 May 2014 14:28:17 +0200
Subject: [Bitcoin-development] About the small number of bitcoin nodes
In-Reply-To: <5379F803.40509@gmail.com>
References: <CA+8=xu+GPykmKdAjxLdRA3QoCPR8azervT9uO-GVraNowAb49g@mail.gmail.com>
	<5379CE4D.5040100@gmail.com>
	<CANEZrP28PQNwuLYTgzyaTDUY-Sg2fEijiPZ26k3NbwvgYoqLww@mail.gmail.com>
	<5379F803.40509@gmail.com>
Message-ID: <CANEZrP1h1YL9NaFKLdnq-dmAn_vz=ubs3BuUnn2mE7Zi6n_53w@mail.gmail.com>

>
> Does this mean that you can currently actively hurt the network by
> adding a node with a very slow upstream / downstream?


Well, I guess "hurting" the network is perhaps a bit dramatic. There are
already lots of ways the download process can go wrong and take days. Using
the torrent is much faster. But my understanding is that this will slow
down the bootstrap process for some people yes. Remote peers won't try and
download in parallel or anything like that.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/8235930b/attachment.html>

From laanwj at gmail.com  Mon May 19 12:44:24 2014
From: laanwj at gmail.com (Wladimir)
Date: Mon, 19 May 2014 14:44:24 +0200
Subject: [Bitcoin-development] About the small number of bitcoin nodes
In-Reply-To: <5379CE4D.5040100@gmail.com>
References: <CA+8=xu+GPykmKdAjxLdRA3QoCPR8azervT9uO-GVraNowAb49g@mail.gmail.com>
	<5379CE4D.5040100@gmail.com>
Message-ID: <CA+s+GJCzks9RRi8HgFbPJ+zmuona26QCpYX8Eax+Qg6WmDd2fQ@mail.gmail.com>

On Mon, May 19, 2014 at 11:26 AM, Bj?rn ?ivind Bj?rnsen
<bo.bjornsen at gmail.com> wrote:
> On 18/05/14 19:43, Ra?l Mart?nez wrote:
>> <snip some good ideas>
>
> As an interested party not intimately familiar with the bitcoin codebase
> who also spent some time setting up a node a while ago, I would like to
> add one thing to the above list - network rate limiting.

There is already an (old) patch that implements that. It won't be
merged, though, until headers-first and parallel block download is in.
Only when the node can download blocks from multiple peers at once it
is really safe to allow limiting rates.

(sure - there are tricks to limit rates anyway, like the script in
contrib/qos, but to have it generally available the block download
needs to be more robust first)

Wladimir



From mike at plan99.net  Mon May 19 12:53:57 2014
From: mike at plan99.net (Mike Hearn)
Date: Mon, 19 May 2014 14:53:57 +0200
Subject: [Bitcoin-development] About the small number of bitcoin nodes
In-Reply-To: <CA+s+GJCzks9RRi8HgFbPJ+zmuona26QCpYX8Eax+Qg6WmDd2fQ@mail.gmail.com>
References: <CA+8=xu+GPykmKdAjxLdRA3QoCPR8azervT9uO-GVraNowAb49g@mail.gmail.com>
	<5379CE4D.5040100@gmail.com>
	<CA+s+GJCzks9RRi8HgFbPJ+zmuona26QCpYX8Eax+Qg6WmDd2fQ@mail.gmail.com>
Message-ID: <CANEZrP01qyMiCddOEo3Kpoj4P1JKocjEPUL-Veh0toECWMUMxQ@mail.gmail.com>

>
> (sure - there are tricks to limit rates anyway, like the script in
> contrib/qos, but to have it generally available the block download
> needs to be more robust first)


One thing we could consider as a short term solution (if headers
first+parallel downloading will take a while, which seems plausible) is to
add a service bit that says "I have chain data and am willing to Bloom
filter it for you, but I won't serve full block data", and then just
exclude all of those from the chain download logic. It should not be a deep
change to the code headers first is impacting, and would allow home users
who may have no tolerance for block chain uploads at all to still take part
and offer useful services to the network.

I know Pieter likes the idea of an "archival node" service bit, or
something like that. I'd been thinking that the stored chain height value
would be better, but perhaps we need to divorce "I have CPU and can filter"
from "I have bandwidth and can serve" more vigorously.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/1d5463ef/attachment.html>

From sergiolerner at certimix.com  Mon May 19 12:55:20 2014
From: sergiolerner at certimix.com (Sergio Lerner)
Date: Mon, 19 May 2014 09:55:20 -0300
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
Message-ID: <5379FF38.4050909@certimix.com>

Alex,

    I think that what you are talking about more or less something like
the Firmcoin

    Check: http://firmcoin.com/?p=92


On 18/05/2014 08:47 a.m., Alex Kotenko wrote:
>
>
> One problem we couldn't figure out here though - how to protect the
> notes from unauthorized redeem. Like if someone else tries to reach
> your wallet with his own NFC - how can we distinguish between
> deliberate redeem by owner and fraudulent redeem by anybody else with
> custom built long range NFC antenna? Any ideas?
>
>
The firmcoin has two capacitive buttons that you have to press in
sequence to redeem to coins. No long range antenna can do that.

Best regards,
 Sergio.

PS:   the device has patents pending
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/705629fa/attachment.html>

From boydb at midnightdesign.ws  Mon May 19 13:06:40 2014
From: boydb at midnightdesign.ws (Brooks Boyd)
Date: Mon, 19 May 2014 08:06:40 -0500
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <CALDj+BaQ5sn9_=KAmNUUbmDva2g3mabm_wmcL_gibLyci5zFUQ@mail.gmail.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
	<lla87r$l7j$1@ger.gmane.org>
	<CALDj+BaQ5sn9_=KAmNUUbmDva2g3mabm_wmcL_gibLyci5zFUQ@mail.gmail.com>
Message-ID: <CANg-TZAFdmPBj_+U=jbhP_t9Gb-yZ-8LMtGzj+6ub=qWcLP0UQ@mail.gmail.com>

>> 2014-05-18 13:14 GMT+01:00 Andreas Schildbach <andreas at schildbach.de>:
>> One problem we couldn't figure out here though - how to protect the
>> notes from unauthorized redeem. Like if someone else tries to reach your
>> wallet with his own NFC - how can we distinguish between deliberate
>> redeem by owner and fraudulent redeem by anybody else with custom built
>> long range NFC antenna? Any ideas?
>>
>> I think you'd need multiple factors to protect against that attack. Like
>> encrypting with a key that is printed on the note as an QR code.
>
>On Sun, May 18, 2014 at 7:51 AM, Alex Kotenko <alexykot at gmail.com> wrote:
>
> Yes, but it must not sacrifice usability. It's paper money, people are used to it and they have rather high standard of expectations in this area. Any usbility sacrifices in this area result into failure of the whole thing.
>
> Best regards,
> Alex Kotenko

One thought I had reading through this exchange: I think the general
public is becoming more aware of the "hacker with a long range
antenna" sort of attack, since credit cards are getting microchips
that can be scanned. There's a few videos I've seen of white hat
hackers demonstrating how a suitcase-sized apparatus carried by
someone walking down the street can scan and make charges on cards in
people's pockets as the attacker brushes past. Hence RFID-blocking
sleeves/wallets are on the market, such that your smart credit card
can't make a purchase while its in your wallet. Is a RFID-blocking
wallet also NFC-blocking? Irregardless of whatever "future cash" you
choose to carry (be it credit card or bitcoin card/coin/cash), perhaps
its the wallet/purse that needs an upgrade, to ensure your money
doesn't spend itself while its in your pocket, but you can easily
remove it and spend it conveniently?

Brooks



From m.sip at volny.cz  Mon May 19 13:34:05 2014
From: m.sip at volny.cz (Martin Sip)
Date: Mon, 19 May 2014 15:34:05 +0200
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <5379FF38.4050909@certimix.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>	<5377892C.8080402@gmail.com>	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
	<5379FF38.4050909@certimix.com>
Message-ID: <001601cf7367$01666ff0$04334fd0$@volny.cz>

Alex,

I think the problem of making paper bitcoins is equivalent to the idea of
creating paper implementation of bitcoin sidechain. Hard one in my mind. If
we could resolve this one in secure and decentralized way it would be the
same breakthrough as bitcoin itself is.

Martin Sip

 

 

On 18/05/2014 08:47 a.m., Alex Kotenko wrote:

 

 

One problem we couldn't figure out here though - how to protect the notes
from unauthorized redeem. Like if someone else tries to reach your wallet
with his own NFC - how can we distinguish between deliberate redeem by owner
and fraudulent redeem by anybody else with custom built long range NFC
antenna? Any ideas?

 

 

The firmcoin has two capacitive buttons that you have to press in sequence
to redeem to coins. No long range antenna can do that.

Best regards,
 Sergio.

PS:   the device has patents pending 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/923bb13c/attachment.html>

From alexykot at gmail.com  Mon May 19 13:50:34 2014
From: alexykot at gmail.com (Alex Kotenko)
Date: Mon, 19 May 2014 14:50:34 +0100
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <CANg-TZAFdmPBj_+U=jbhP_t9Gb-yZ-8LMtGzj+6ub=qWcLP0UQ@mail.gmail.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
	<lla87r$l7j$1@ger.gmane.org>
	<CALDj+BaQ5sn9_=KAmNUUbmDva2g3mabm_wmcL_gibLyci5zFUQ@mail.gmail.com>
	<CANg-TZAFdmPBj_+U=jbhP_t9Gb-yZ-8LMtGzj+6ub=qWcLP0UQ@mail.gmail.com>
Message-ID: <CALDj+BYoP9=13b4=jLCBjEwectY-+pp3Y1wMAP4z=ydEoTM5Nw@mail.gmail.com>

Asking random ignorant stranger to care to protect themselves never works.
We need solution that requires strictly zero effort.


Best regards,
Alex Kotenko


2014-05-19 14:06 GMT+01:00 Brooks Boyd <boydb at midnightdesign.ws>:

> >> 2014-05-18 13:14 GMT+01:00 Andreas Schildbach <andreas at schildbach.de>:
> >> One problem we couldn't figure out here though - how to protect the
> >> notes from unauthorized redeem. Like if someone else tries to reach your
> >> wallet with his own NFC - how can we distinguish between deliberate
> >> redeem by owner and fraudulent redeem by anybody else with custom built
> >> long range NFC antenna? Any ideas?
> >>
> >> I think you'd need multiple factors to protect against that attack. Like
> >> encrypting with a key that is printed on the note as an QR code.
> >
> >On Sun, May 18, 2014 at 7:51 AM, Alex Kotenko <alexykot at gmail.com> wrote:
> >
> > Yes, but it must not sacrifice usability. It's paper money, people are
> used to it and they have rather high standard of expectations in this area.
> Any usbility sacrifices in this area result into failure of the whole thing.
> >
> > Best regards,
> > Alex Kotenko
>
> One thought I had reading through this exchange: I think the general
> public is becoming more aware of the "hacker with a long range
> antenna" sort of attack, since credit cards are getting microchips
> that can be scanned. There's a few videos I've seen of white hat
> hackers demonstrating how a suitcase-sized apparatus carried by
> someone walking down the street can scan and make charges on cards in
> people's pockets as the attacker brushes past. Hence RFID-blocking
> sleeves/wallets are on the market, such that your smart credit card
> can't make a purchase while its in your wallet. Is a RFID-blocking
> wallet also NFC-blocking? Irregardless of whatever "future cash" you
> choose to carry (be it credit card or bitcoin card/coin/cash), perhaps
> its the wallet/purse that needs an upgrade, to ensure your money
> doesn't spend itself while its in your pocket, but you can easily
> remove it and spend it conveniently?
>
> Brooks
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform
> available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/66c3777d/attachment.html>

From alexykot at gmail.com  Mon May 19 13:53:04 2014
From: alexykot at gmail.com (Alex Kotenko)
Date: Mon, 19 May 2014 14:53:04 +0100
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <5379FF38.4050909@certimix.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
	<5379FF38.4050909@certimix.com>
Message-ID: <CALDj+BaG=t-j51kb4y_LYuhBwHZDnps0pSUZHyzLghkD+ChrVQ@mail.gmail.com>

Hmm, this is firmcoin thing looks like what I mean. They don't have a
solution yet, and prices they quote smartcards are unacceptable, but if
they will manage to get down in selfcost - that may work. Ok, I'll follow
them and see what it will come to.


Best regards,
Alex Kotenko


2014-05-19 13:55 GMT+01:00 Sergio Lerner <sergiolerner at certimix.com>:

>  Alex,
>
>     I think that what you are talking about more or less something like
> the Firmcoin
>
>     Check: http://firmcoin.com/?p=92
>
>
>
> On 18/05/2014 08:47 a.m., Alex Kotenko wrote:
>
>
>
>  One problem we couldn't figure out here though - how to protect the
> notes from unauthorized redeem. Like if someone else tries to reach your
> wallet with his own NFC - how can we distinguish between deliberate redeem
> by owner and fraudulent redeem by anybody else with custom built long
> range NFC antenna? Any ideas?
>
>
>   The firmcoin has two capacitive buttons that you have to press in
> sequence to redeem to coins. No long range antenna can do that.
>
> Best regards,
>  Sergio.
>
> PS:   the device has patents pending
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/cd61a2fa/attachment.html>

From showard314 at gmail.com  Mon May 19 14:02:22 2014
From: showard314 at gmail.com (Scott Howard)
Date: Mon, 19 May 2014 10:02:22 -0400
Subject: [Bitcoin-development] About the small number of bitcoin nodes
In-Reply-To: <CAJHLa0ODAUCpG8D7AMpsmi5bL9r_7KS711OC7HSzeeyTKoheXg@mail.gmail.com>
References: <CA+8=xu+GPykmKdAjxLdRA3QoCPR8azervT9uO-GVraNowAb49g@mail.gmail.com>
	<CAJHLa0ODAUCpG8D7AMpsmi5bL9r_7KS711OC7HSzeeyTKoheXg@mail.gmail.com>
Message-ID: <CANg8-dAVmvFDO=ofgCXVurd+L71WGAANfNkn43jH4QB8DNUzEw@mail.gmail.com>

On Mon, May 19, 2014 at 3:11 AM, Jeff Garzik <jgarzik at bitpay.com> wrote:
> On Sun, May 18, 2014 at 1:43 PM, Ra?l Mart?nez <rme at i-rme.es> wrote:
>> - bitcoind and Bitcoin Core should be in Linux repos:
>
> Agreed with conditions:
> 1) The distro MUST let bitcoin devs dictate which dependent libs are
> shipped with / built statically into the bitcoin binaries/libs.
> 2) The distro MUST permit fresh updates even to older stable distros.
> 2) The maintainer(s) MUST be active, and follow bitcoin development,
> release status, etc. on a near-daily basis, be able to respond quickly
> if security issues arise, etc.
>
> Matt C seems to do a good job of this in Ubuntu PPA, I'm told.

Update:

(1) and (3) are doable, however, Debian and Ubuntu policies make (2)
very difficult (with the exception of security patches). Micha Bailey
and I worked to get bitcoin removed from Debian and Ubuntu stable
releases because they would not allow (2). There are other mechanisms
that could accomplish (2) (backports, volatile, and updates
repositories), however they are not enabled by default and require
user intervention.

Debian unstable does allow (2) since there is no release, and there is
a package in Debian unstable. That package is blocked from
transitioning to a stable release. We've also blacklisted it from
Ubuntu so that Ubuntu doesn't just autoimport and release the Debian
unstable package in an Ubuntu stable release.

Micha is also working to have all old versions of bitcoin removed from
previous released Ubuntu versions.

Matt C's PPA is the best way of getting (1-3) above on Ubuntu, and the
Debian unstable package is probably the best way of getting (1-3)
above in Debian. Both require users to add a line to their apt sources
list; the Debian package would also require apt pinning.

Regards,
Scott



From adam at cypherspace.org  Mon May 19 14:47:09 2014
From: adam at cypherspace.org (Adam Back)
Date: Mon, 19 May 2014 16:47:09 +0200
Subject: [Bitcoin-development] patents...
In-Reply-To: <5379FF38.4050909@certimix.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
	<5379FF38.4050909@certimix.com>
Message-ID: <20140519144709.GA29574@netbook.cypherspace.org>

someone recently wrote (not pointing fingers, nor demanding a spirited
defense from that person, its a generic comment):
>   PS: the device has patents pending

btw about patents, I wonder if people who feel the need to do that, would
you consider putting those patents into like a linux foundation defensive
pool?

I imagine a number of other bitcoin companies have patented things, but if
you think ahead a little bit, or look at prior ecash history, patents held
by individuals or companies can be outright dangerous.  

We saw this in the past eg the digicash patents after the company went
bankrupt were sold by the investor to some random large company that parked
it in its huge pile of patents, didnt use it, and prevented anyone else from
using it - stalling Chaum dependent payment innovation for perhaps 5 years
until the thing expired, and a Chaum patent expiry party was held.

Just some food for thought.

hmm Yes and this topic now is more than a bit non dev related.  Sorry about
that.  There seems to be no convenient mailing list format for non-dev stuff
or I would Cc and set Reply-To for example?  (Web forums somewhat suck IMO). 

Adam



From mike at plan99.net  Mon May 19 15:09:07 2014
From: mike at plan99.net (Mike Hearn)
Date: Mon, 19 May 2014 17:09:07 +0200
Subject: [Bitcoin-development] patents...
In-Reply-To: <20140519144709.GA29574@netbook.cypherspace.org>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
	<5379FF38.4050909@certimix.com>
	<20140519144709.GA29574@netbook.cypherspace.org>
Message-ID: <CANEZrP3sDh3Q9T0xFi7maNQR9Z6R7gQ6vT5kjchcMkD0hMHOdw@mail.gmail.com>

IMO this list is fine for discussing such topics.

Here are some thoughts. I had to deal with patents at Google (my name is on
a few, not my choice unfortunately). Many aspects of patent law are deeply
unintuitive, so here's the crash course as I was given it.



The first rule of patents is *you do not go looking for patents*. US law is
written in a really stupid way, such that if you knowingly infringe,
damages triple. Because America uses the patent office as a revenue source,
basically everything you can possibly imagine is covered by some ridiculous
patent so if you go looking you will always find applicable patents on
every idea and then you end up potentially much worse off.

Most companies (Google certainly included) have therefore banned their
staff from reading patents, thus ensuring that the whole point of them, the
sharing of knowledge, doesn't actually function! And it's much better I
think if we follow the same policy. So *please do not ever mention that
suchandsuch is patented on this list*! When it comes to patent law,
ignorance is bliss. Patents are written in a heavily obfuscated manner such
that actually trying to learn from them is hard work anyway.


One reason I wrote up the contracts stuff when I did is to get it out there
into the public domain, so people couldn't patent the basics of the Bitcoin
protocol. It'll be much better for everyone if new ideas are just put right
out into the public domain. *Please do not patent Bitcoin related research
you do*, even if you think it's for the best:

1) Defensive patenting doesn't work. The whole idea was mutually assured
destruction, you hit me I'll hit you type of logic, but the prevalence of
shell/troll companies killed off that idea. Plus it turns out that big
companies are quite willing to sue each other into oblivion anyway. Once a
patent exists, it'll be used as a weapon by someone eventually, and
attempting to "fight back" is probably not a workable strategy. Far better
to ensure the material is simply unpatentable by anyone.

2) Patenting with the intention to sue people using Bitcoin in the same
way: well, if you plan to do this, there's not much to talk about .... you
won't make any friends this way.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/7fd3a88b/attachment.html>

From justusranvier at gmail.com  Mon May 19 18:20:40 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Mon, 19 May 2014 20:20:40 +0200
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <CANEZrP27wSZ=aFdW5Nw1gGqemE4GeLbfTS5=DD5uX+fsTfpF3g@mail.gmail.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<CANEZrP27wSZ=aFdW5Nw1gGqemE4GeLbfTS5=DD5uX+fsTfpF3g@mail.gmail.com>
Message-ID: <537A4B78.7060804@localhost.local>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 05/19/2014 02:21 PM, Mike Hearn wrote:
>> Submitted with humility and some fear of getting laughed out of
>> here...
>> 
> 
> Off topic aside, a bunch of us have lately started to think about
> the atmosphere on this list and how to improve it. Nobody should
> have to fear getting flamed or laughed at for proposing ideas, even
> if they turn out to be silly ones. Gavin talked about this in his
> Bitcoin 2014 keynote and asked for someone to solve the forum
> trolling problem.

You and Gavin could do a lot better by working on a Bitcoin social
contract - a promise of what features will *never* be added (or taken
away) from Bitcoin, because despite what you say it's not acceptable
to propose anything at all.

Maybe start with things like how the Bitcoin protocol will never be
changed to allow for confiscation of funds, regardless of who might
demand such a feature.

You are willing to promise all users of Bitcoin that you'll never
propose to steal their coins, aren't you?
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTekt4AAoJEMP3uyY4RQ214QgIAM3DdtAUTG63FG/r9Yg4dWb+
TXWoXRd9AYDg/SAirF6qV+r6K0vohMv8UJhCpX0OnNSOfxKcgVt2CnG8i3iWBRu1
V+LRFmaHkJ+vJLaR2lEdFKMc2DVuZUIXGH6jEgVo/dzFJGZ/GcoUwTBrZztjCHDy
WbpuuIfV2ya1bqkhMOn78pDgkDfXBD7qWQsz0MTzSkPitT0AnUEPxCl3KBWizkdH
shGwE4YNhRSX+yTBaFHVMqFb9LzExEWgIgkgghddKfJzj9REcw6wiotD3DvYaDl7
LPegCttg0vdG4YTVlTH0iMwFYC3qrw/Ab43uqLjTy7aWyFjhsPtKceTE3KpGDrk=
=dRhy
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x38450DB5.asc
Type: application/pgp-keys
Size: 13085 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/5fa20ce6/attachment.bin>

From pete at petertodd.org  Mon May 19 18:27:08 2014
From: pete at petertodd.org (Peter Todd)
Date: Mon, 19 May 2014 20:27:08 +0200
Subject: [Bitcoin-development] patents...
In-Reply-To: <CANEZrP3sDh3Q9T0xFi7maNQR9Z6R7gQ6vT5kjchcMkD0hMHOdw@mail.gmail.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
	<5379FF38.4050909@certimix.com>
	<20140519144709.GA29574@netbook.cypherspace.org>
	<CANEZrP3sDh3Q9T0xFi7maNQR9Z6R7gQ6vT5kjchcMkD0hMHOdw@mail.gmail.com>
Message-ID: <c4d00173-a233-4f55-988a-ad2ba771d457@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256



On 19 May 2014 17:09:07 CEST, Mike Hearn <mike at plan99.net> wrote:

>The first rule of patents is *you do not go looking for patents*. US
>law is
>written in a really stupid way, such that if you knowingly infringe,
>damages triple. Because America uses the patent office as a revenue
>source,
>basically everything you can possibly imagine is covered by some
>ridiculous
>patent so if you go looking you will always find applicable patents on
>every idea and then you end up potentially much worse off.
>
>Most companies (Google certainly included) have therefore banned their
>staff from reading patents, thus ensuring that the whole point of them,
>the
>sharing of knowledge, doesn't actually function! And it's much better I
>think if we follow the same policy. So *please do not ever mention that
>suchandsuch is patented on this list*! When it comes to patent law,
>ignorance is bliss. Patents are written in a heavily obfuscated manner
>such
>that actually trying to learn from them is hard work anyway.

Meh. The world is much bigger than the USA. Secondly that rule makes it difficult to educate people about why patents are as bad as they are.

Feel free to continue censoring your own discussion within closed corporate environments. But to say keeping patent discussion off mailing lists is appropriate or wise when the tech news is full of such discussion is silly.
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCAA6BQJTekz8MxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhX0TB/wNZoi5sWj6n3fM7O7T
emVbrVpuBwOvUEJAFYGmXgb2KXGdheVRhXfcwteQybLG+M+Ra/HAqLq+1YrPmopE
QeldiSc31KAkVLYXQMIfD6QO1PBlvKP7qPLqBEpCc9ocd8XLppTPQ2K8o5soV8VF
z6Jt/Hh74xhkhhb/kEzsQ8YKkg+m26WY9Yggu0Qxtb0OTjL86IhEKpH9ijr08jvV
TKs+PHwou5rt0dT3vqLd8ogb7xihTPx/7tciaXHCOfvxGsEgtqdTsjdHlCJ6cR9a
DrZcrIQnX+s1+YbHs3P4kyBfzNHBwwVuwaf5W5pU6vFp276jhsgT/65J7PqoRmxK
AkXg
=dk4R
-----END PGP SIGNATURE-----




From pete at petertodd.org  Mon May 19 18:39:21 2014
From: pete at petertodd.org (Peter Todd)
Date: Mon, 19 May 2014 20:39:21 +0200
Subject: [Bitcoin-development] Paper Currency
In-Reply-To: <537A4B78.7060804@localhost.local>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<CANEZrP27wSZ=aFdW5Nw1gGqemE4GeLbfTS5=DD5uX+fsTfpF3g@mail.gmail.com>
	<537A4B78.7060804@localhost.local>
Message-ID: <16b400d8-7f1f-408a-9193-2fdde7ed393e@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256



On 19 May 2014 20:20:40 CEST, Justus Ranvier <justusranvier at gmail.com> wrote:

>You and Gavin could do a lot better by working on a Bitcoin social
>contract - a promise of what features will *never* be added (or taken
>away) from Bitcoin, because despite what you say it's not acceptable
>to propose anything at all.
>
>Maybe start with things like how the Bitcoin protocol will never be
>changed to allow for confiscation of funds, regardless of who might
>demand such a feature.

Might be worth looking into the recent RFC?7258: Pervasive Monitoring Is an Attack for some guidance on how to write such a social contract.

Re: Gavin, note the language in the foundation bylaws:

Section 2.2 The Corporation shall promote and protect both the decentralized, distributed and private nature of the Bitcoin distributed-digital currency and transaction system as well as individual choice, participation and financial privacy when using such systems.

You might want to do a pull-req to add fungibility and rejection of blacklists to that list; note Adam Back's comments on how fungibility and privacy are inherently linked.
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCAA6BQJTek/ZMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhYPIB/9/mhDOei8uMGHmzK41
YdL2ezs4LMPLyCRbo9Eu7MDJAMBaMH4VUbomR0tJVPRS191ifa2F/xGYnbDvk/PG
rLX86uPPMBxZqnVMgZLeKJkUHm3Zlkm1Ti58bMR8VVQuPazBBpkYtsvk+0+8j9su
ke7Xq+OqUGOC03bM4bxtKyBCy1FrCJuFgZEywKhOjr6boANLctDRBZerPqQ4AcjP
tHSAAImcesMhjc/N9LJ4MeygszzblYpdsQeiw8jvvyZI7vCSHuKb+hur+kCszYjD
ygfY9QmoNye2yc0GLZd+kXSMwY6gLIvaAFhv2ElMTMiJ7btHtJJfyEaA9Ub4zEEY
JKeO
=DSjZ
-----END PGP SIGNATURE-----




From mike at plan99.net  Mon May 19 18:40:25 2014
From: mike at plan99.net (Mike Hearn)
Date: Mon, 19 May 2014 20:40:25 +0200
Subject: [Bitcoin-development] patents...
In-Reply-To: <c4d00173-a233-4f55-988a-ad2ba771d457@email.android.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
	<5379FF38.4050909@certimix.com>
	<20140519144709.GA29574@netbook.cypherspace.org>
	<CANEZrP3sDh3Q9T0xFi7maNQR9Z6R7gQ6vT5kjchcMkD0hMHOdw@mail.gmail.com>
	<c4d00173-a233-4f55-988a-ad2ba771d457@email.android.com>
Message-ID: <CANEZrP047f0=9Bt8qEc2MLeOBay4sQXAR9zpL1rKKzSsmk2oaA@mail.gmail.com>

>
> Meh. The world is much bigger than the USA. Secondly that rule makes it
> difficult to educate people about why patents are as bad as they are.
>

You can easily find examples that are not relevant to Bitcoin if you want
to discuss the patent system in general.


> Feel free to continue censoring your own discussion within closed
> corporate environments. But to say keeping patent discussion off mailing
> lists is appropriate or wise when the tech news is full of such discussion
> is silly.


It is both appropriate and wise. Please keep discussion of Bitcoin-relevant
patents elsewhere.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/ba29396d/attachment.html>

From gmaxwell at gmail.com  Mon May 19 18:43:15 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 19 May 2014 11:43:15 -0700
Subject: [Bitcoin-development] patents...
In-Reply-To: <CANEZrP3sDh3Q9T0xFi7maNQR9Z6R7gQ6vT5kjchcMkD0hMHOdw@mail.gmail.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
	<5379FF38.4050909@certimix.com>
	<20140519144709.GA29574@netbook.cypherspace.org>
	<CANEZrP3sDh3Q9T0xFi7maNQR9Z6R7gQ6vT5kjchcMkD0hMHOdw@mail.gmail.com>
Message-ID: <CAAS2fgRhEJUT4JEXtZSqnNnBV=tLFD4qjLFOQpeA-V2jA_UtHg@mail.gmail.com>

On Mon, May 19, 2014 at 8:09 AM, Mike Hearn <mike at plan99.net> wrote:
> The first rule of patents is you do not go looking for patents. US law is
> written in a really stupid way, such that if you knowingly infringe, damages
> triple. Because America uses the patent office as a revenue source,

You have received outdated advice on this point. In Re Seagate
(http://patentlyo.com/patent/2007/08/in-re-seagate-t.html) this
precident was over-turned (and has subsequently been upheld in other
cases). Avoiding willfull infringement no longer requires paying off a
patent attorney to get a freedom to operate review.  This isn't to say
that reading patents is always productive now:  They're often nearly
inscrutable (especially to people without substantial patent reading
experience), and you may discover potential infringement that creates
more work for you to sort out (especially since people without patent
experience tend to read patents much more broadly than they actually
are).

There are other defensive approaches which are interesting than hoping
to use patents as a counter attack: For one? filing a patent gets the
work entered in the only database that USPTO examiners are
_guaranteed_ to consult when doing a prior art search, so it may have
a fighting chance of precluding someone else patenting the same
material later (they may also search the internet and use other
resources, but they're guaranteed to consult the existing patents and
applications). Patents can also be used defensively as leverage in a
licensing negotiation: Without your own patents you don't get invited
to the negotiating table at all with someone else who may hold patents
in a space that you're working on.  These are somewhat thin advantages
so great care is required to make sure that things are setup so that
badness cannot happen later when inevitable changes of ownership
happen.



From pete at petertodd.org  Mon May 19 18:46:26 2014
From: pete at petertodd.org (Peter Todd)
Date: Mon, 19 May 2014 20:46:26 +0200
Subject: [Bitcoin-development] patents...
In-Reply-To: <CAAS2fgRhEJUT4JEXtZSqnNnBV=tLFD4qjLFOQpeA-V2jA_UtHg@mail.gmail.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
	<5379FF38.4050909@certimix.com>
	<20140519144709.GA29574@netbook.cypherspace.org>
	<CANEZrP3sDh3Q9T0xFi7maNQR9Z6R7gQ6vT5kjchcMkD0hMHOdw@mail.gmail.com>
	<CAAS2fgRhEJUT4JEXtZSqnNnBV=tLFD4qjLFOQpeA-V2jA_UtHg@mail.gmail.com>
Message-ID: <4f52185b-7fc3-4802-9ce5-824f9569c2bd@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256



On 19 May 2014 20:43:15 CEST, Gregory Maxwell <gmaxwell at gmail.com> wrote:

>There are other defensive approaches which are interesting than hoping
>to use patents as a counter attack: For one? filing a patent gets the
>work entered in the only database that USPTO examiners are
>_guaranteed_ to consult when doing a prior art search, so it may have
>a fighting chance of precluding someone else patenting the same
>material later (they may also search the internet and use other
>resources, but they're guaranteed to consult the existing patents and
>applications).

Interesting. Is that to say a viable strategy would be to apply for patents and let the application lapse?
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCAA6BQJTelGCMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhQPlCACjJgJEyMYMtF+/dJJh
TgWfVuE7E7QmwgWoQMBo7/5LgO1W5PQt9d3jfQ7gkrdCqTWs4HtA3lcgjdeEQ6ZW
QvMFG5/xITVi85v2zlE9CteQZXLBTSI+J7VlkjqnJeftQkklvGjiDtNfaDDsTacV
ZNem06V4fmBxNgzqmit2Roilp+NMQb2iM9Ofkr5FbI0cT/kzD/IJd2+Crqsu/uDU
8r2YQY0bbEf2wqxVdq5TSf1rFqqnWKHB3lD1GGRJ8n5BciBmysZL43jct8YABSgi
BHFpJP2ii7gz076mRiBb+KwCo+1xKUYNpsJk1m7HND7PjqkXps+JHiNaWdr9vAxx
raFO
=L1oX
-----END PGP SIGNATURE-----




From mike at plan99.net  Mon May 19 18:49:23 2014
From: mike at plan99.net (Mike Hearn)
Date: Mon, 19 May 2014 20:49:23 +0200
Subject: [Bitcoin-development] patents...
In-Reply-To: <CAAS2fgRhEJUT4JEXtZSqnNnBV=tLFD4qjLFOQpeA-V2jA_UtHg@mail.gmail.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
	<5379FF38.4050909@certimix.com>
	<20140519144709.GA29574@netbook.cypherspace.org>
	<CANEZrP3sDh3Q9T0xFi7maNQR9Z6R7gQ6vT5kjchcMkD0hMHOdw@mail.gmail.com>
	<CAAS2fgRhEJUT4JEXtZSqnNnBV=tLFD4qjLFOQpeA-V2jA_UtHg@mail.gmail.com>
Message-ID: <CANEZrP0T1SMoVPLS6PgbN04S9gdfqAzF4+8mMG5Njifa8v=w6w@mail.gmail.com>

>
> Avoiding willfull infringement no longer requires paying off a
> patent attorney to get a freedom to operate review.  This isn't to say
> that reading patents is always productive


That case raised the bar a bit, but the core problem remains - if you learn
about a patent you definitely violate (and there is very likely to be at
least one and possibly many), via whatever means, then by continuing
business you become a wilful violator. Which makes sense: how could it be
any other way?

It still never makes sense to read patents. You can only lose.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/0c928bc1/attachment.html>

From gavinandresen at gmail.com  Mon May 19 19:41:15 2014
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Mon, 19 May 2014 15:41:15 -0400
Subject: [Bitcoin-development] Working on social contracts (was: Paper
	Currency)
Message-ID: <CABsx9T2=nE1c-WOGnQiBqfFQqM0qtPiCcBsWN8pew6JhdpBNOA@mail.gmail.com>

On Mon, May 19, 2014 at 2:20 PM, Justus Ranvier <justusranvier at gmail.com>wrote:

>
> You and Gavin could do a lot better by working on a Bitcoin social
> contract - a promise of what features will *never* be added (or taken
> away) from Bitcoin, because despite what you say it's not acceptable
> to propose anything at all.
>

Now I'm really confused.

Why would Mike or I have the authority to write a "social contract" to
promise anything about future-Bitcoin?

I thought the only "social contract" was the decentralized one we have
already-- if you don't like something about the code, then don't download
and run it. Or fork it if you're able.

As the person who started this mailing list, I DO feel like I have the
authority to enforce a social contract of "no trolling or flaming or
name-calling" here. I'd very much like to delegate that authority, though;
ideally to some software algorithm that automatically censors topics or
people who don't contribute to a productive discussion.

PS: speaking of productive discussion...
... please change the Subject line when the topic wanders.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/c3c3e1c9/attachment.html>

From justusranvier at gmail.com  Mon May 19 20:01:17 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Mon, 19 May 2014 22:01:17 +0200
Subject: [Bitcoin-development] Working on social contracts (was: Paper
	Currency)
In-Reply-To: <CABsx9T2=nE1c-WOGnQiBqfFQqM0qtPiCcBsWN8pew6JhdpBNOA@mail.gmail.com>
References: <CABsx9T2=nE1c-WOGnQiBqfFQqM0qtPiCcBsWN8pew6JhdpBNOA@mail.gmail.com>
Message-ID: <537A630D.104@localhost.local>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 05/19/2014 09:41 PM, Gavin Andresen wrote:
> Now I'm really confused.
> 
> Why would Mike or I have the authority to write a "social contract"
> to promise anything about future-Bitcoin?

YOU can make promises about YOUR future behavior. So can everyone else.

The rest of the community can keep track of which developers will and
will not make promises about what changes they will and will not
attempt to implement in Bitcoin, and they can use that information to
make informed decisions about which software they will choose to support.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTemMNAAoJEMP3uyY4RQ21KJMH/1MbnPxZ42sjVjEiGSQBkGfE
E3jt8aAf2DTza8xtybSmT/pHVhx/VUT4UNj9oBZayqJ1eUNr6YMgGCP8J+DxBtN+
mYH4lTnCiR4+hjO9aux0AWFV+hfZSq7A41QH6wymLa5CyywOtc+i7i3qU5ZGrbtX
9yBrQpFilvMIlrAOBDlXUwb06FDK17ZHHX4V5sI8PSRYJvoiWCrk12Vqj1Z95UOy
ayzWGwbO30ky6lGirBXfpu2e2WJADE9sc43ecNCDplUMR4D4n9jwAUldEiMSBKg2
pwUNcfj1gaKkscj4QmGKMbq6yug+lrSa8qq/jFsbQq+2pqT4VjlQlrN52wz7Yeg=
=Jafe
-----END PGP SIGNATURE-----



From gavinandresen at gmail.com  Mon May 19 20:06:33 2014
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Mon, 19 May 2014 16:06:33 -0400
Subject: [Bitcoin-development] Working on social contracts (was: Paper
	Currency)
In-Reply-To: <537A630D.104@localhost.local>
References: <CABsx9T2=nE1c-WOGnQiBqfFQqM0qtPiCcBsWN8pew6JhdpBNOA@mail.gmail.com>
	<537A630D.104@localhost.local>
Message-ID: <CABsx9T3ysnsYathAn6eupevkiqc2hvZVXasLj-nGLQx_WQf8FQ@mail.gmail.com>

Okey dokey:

I hereby promise and solemnly swear on pain of atomic wedgie that I will
never ever work on or endorse any changes to the Bitcoin system that would
enable any person or group to confiscate, blacklist, or devalue any other
person or group's bitcoin.

RE: writing an RFC: go for it. I have much higher tasks on my TODO list.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/bb54fff4/attachment.html>

From mike at plan99.net  Mon May 19 20:06:39 2014
From: mike at plan99.net (Mike Hearn)
Date: Mon, 19 May 2014 22:06:39 +0200
Subject: [Bitcoin-development] Working on social contracts (was: Paper
	Currency)
In-Reply-To: <537A630D.104@localhost.local>
References: <CABsx9T2=nE1c-WOGnQiBqfFQqM0qtPiCcBsWN8pew6JhdpBNOA@mail.gmail.com>
	<537A630D.104@localhost.local>
Message-ID: <CANEZrP3nf7kCqwQZd9vhtd_pM=jgVVmPS2BjCMh7z5i0L+dd5A@mail.gmail.com>

Sorry. I will never agree to the concept of a relevant idea so dangerous it
cannot be discussed. That's medieval thinking. If you would like to create
a parallel development forum where people have to swear an oath not to
think bad thoughts, go right ahead and do so.

But I'm glad to see you correctly identified yourself as one of the people
causing problems on this list. Your vicious attacks are one of the reasons
we're now seeing threads that start with "I hope I don't get flamed or
laughed at for this idea but ...." which is totally unacceptable. I would
prefer you just unsubscribe, in the hope we get a second chance from some
of the potential developers we've lost.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/03d42df4/attachment.html>

From justusranvier at gmail.com  Mon May 19 20:13:01 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Mon, 19 May 2014 22:13:01 +0200
Subject: [Bitcoin-development] Working on social contracts (was: Paper
 Currency)
In-Reply-To: <CANEZrP3nf7kCqwQZd9vhtd_pM=jgVVmPS2BjCMh7z5i0L+dd5A@mail.gmail.com>
References: <CABsx9T2=nE1c-WOGnQiBqfFQqM0qtPiCcBsWN8pew6JhdpBNOA@mail.gmail.com>	<537A630D.104@localhost.local>
	<CANEZrP3nf7kCqwQZd9vhtd_pM=jgVVmPS2BjCMh7z5i0L+dd5A@mail.gmail.com>
Message-ID: <537A65CD.2090602@localhost.local>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 05/19/2014 10:06 PM, Mike Hearn wrote:
> Sorry. I will never agree to the concept of a relevant idea so
> dangerous it cannot be discussed. That's medieval thinking. If you
> would like to create a parallel development forum where people have
> to swear an oath not to think bad thoughts, go right ahead and do
> so.
> 
> But I'm glad to see you correctly identified yourself as one of the
> people causing problems on this list. Your vicious attacks are one
> of the reasons we're now seeing threads that start with "I hope I
> don't get flamed or laughed at for this idea but ...." which is
> totally unacceptable. I would prefer you just unsubscribe, in the
> hope we get a second chance from some of the potential developers
> we've lost.
> 

I'm glad to see you correctly identified yourself as well.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTemXNAAoJEMP3uyY4RQ21KNUH/12vTPOPNjQQIunTkNCSqV6P
hub7mrW/hS4NSlK7P3Laq5qj+qB9ou/uIRCPP6uIhk6scicbukn31nw1p/er0YoQ
XGFE+SmF+Z5Ysz/5uA1OP9VdjBKggbI6rFVZKbt5DwrFK0gCDMtgcxO2y6CFGR+U
mFhD9ORf/NdAozFanXSEk81p5OfZqhhnxaPPpPnwQeojtLwE20reLrEcCKy6XMEs
Mtfan+qgPJYTmWiWmDHsrFsz+5HwpkR5giDf4hzW5J1F8Vj+LTPXjGz9Txldk89t
0dRmYFAtE74QgXsIRvWny9ho4YL/Nn+WHf0Qf3HKh31wrzSea0KFKpPaa32xpKA=
=jIov
-----END PGP SIGNATURE-----



From alexykot at gmail.com  Mon May 19 20:14:32 2014
From: alexykot at gmail.com (Alex Kotenko)
Date: Mon, 19 May 2014 21:14:32 +0100
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <ll7l9t$m82$1@ger.gmane.org>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
	<09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>
	<CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>
	<CAJHLa0OaAKTLR2hL6kReBFcD6FoXYV9AoqMbn0WwqYgtTNtQKw@mail.gmail.com>
	<CALDj+BY2jEL6-NwGdrh3wdcmjW_7tEDDxmyiP6woOxCg8bMQKw@mail.gmail.com>
	<ll7hps$8gs$1@ger.gmane.org>
	<CALDj+BYqMDxv+YYcrEzaZH+qFqUsme3UYuYh5Es7C6FbMZCtpg@mail.gmail.com>
	<ll7l9t$m82$1@ger.gmane.org>
Message-ID: <CALDj+BamyawuTgDhzM0AyB5LWNPb_xY_BQeDHqs9t9WLPibiCQ@mail.gmail.com>

Hmm, I've mostly setup what's promised, testing DNS seeds now. There is one
problem I see that I can't really solve myself.
This dnsseed daemon cannot serve more than one name at once, which means
that I cannot serve testnet and mainnet seeds off one daemon instance which
means I need to buy two IP addresses for it. That's unfortunate as it needs
much more spendings from me to operate, second IP address will cost nearly
as much as the server itself.

?Can anybody help with this? I cannot into C++ to fix that myself.   ?


Best regards,
Alex Kotenko


2014-05-17 13:39 GMT+01:00 Andreas Schildbach <andreas at schildbach.de>:

> On 05/17/2014 02:02 PM, Alex Kotenko wrote:
>
> > So, my understanding is that atm we have no working DNS seeds at the
> > testnet3, right? There are two DNS seeds known, of which one is
> > unreachable atm, and another one is giving just one IP address, which is
> > also a dead node.
>
> Yes, that's my understanding too.
>
> > If I'll start a DNS seed of my own and make sure it works well, will
> > this help?
>
> Yes, definately.
>
> > I've found this DNS seeder daemon
> > <https://github.com/sipa/bitcoin-seeder>, and it seems to be exactly
> > what I need to run a DNS seeder myself.
>
> Afaik this is what most of the other seeds are using, yes.
>
> > So if my understanding is correct, I'll setup a DNS seeds for mainnet
> > and for testnet at bitcoin-seed.alexykot.me
> > <http://bitcoin-seed.alexykot.me> and testnet-seed.alexykot.me
> > <http://testnet-seed.alexykot.me>, and also a well connected nodes for
> > mainnet and testnet on the same server.
> > Is this a good plan? Will this all help?
>
> Sound great! Let me know if you've got something to test.
>
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform
> available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/5e7b4deb/attachment.html>

From alexykot at gmail.com  Mon May 19 20:38:45 2014
From: alexykot at gmail.com (Alex Kotenko)
Date: Mon, 19 May 2014 21:38:45 +0100
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <8E95FB7C-CFC5-410D-B8AF-8F227BA852F6@osfda.org>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
	<09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>
	<CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>
	<CAJHLa0OaAKTLR2hL6kReBFcD6FoXYV9AoqMbn0WwqYgtTNtQKw@mail.gmail.com>
	<CALDj+BY2jEL6-NwGdrh3wdcmjW_7tEDDxmyiP6woOxCg8bMQKw@mail.gmail.com>
	<ll7hps$8gs$1@ger.gmane.org>
	<CALDj+BYqMDxv+YYcrEzaZH+qFqUsme3UYuYh5Es7C6FbMZCtpg@mail.gmail.com>
	<ll7l9t$m82$1@ger.gmane.org>
	<CALDj+BamyawuTgDhzM0AyB5LWNPb_xY_BQeDHqs9t9WLPibiCQ@mail.gmail.com>
	<8E95FB7C-CFC5-410D-B8AF-8F227BA852F6@osfda.org>
Message-ID: <CALDj+BakAK2qqDeGzUT5z=knWczMg1ZT5cqZ0xBs=qiEbrHn=Q@mail.gmail.com>

Well, it's possible theoretically, but will need another piece of custom
software that will understand DNS protocol and proxy it correctly based on
actual incoming DNS queries.
On 19 May 2014 21:22, "Michael Wozniak" <mw at osfda.org> wrote:

> I?m not familiar with how the daemon works, however could you set up two
> daemons listening local on different ports and with a separate daemon or
> normal dns server that proxies incoming queries to either domain? I don?t
> know if standard DNS servers would support that, or if you would need a
> custom proxy application.
>
> -
> Michael Wozniak
>
>
> On May 19, 2014, at 4:14 PM, Alex Kotenko <alexykot at gmail.com> wrote:
>
> > Hmm, I've mostly setup what's promised, testing DNS seeds now. There is
> one problem I see that I can't really solve myself.
> > This dnsseed daemon cannot serve more than one name at once, which means
> that I cannot serve testnet and mainnet seeds off one daemon instance which
> means I need to buy two IP addresses for it. That's unfortunate as it needs
> much more spendings from me to operate, second IP address will cost nearly
> as much as the server itself.
> >
> > ?Can anybody help with this? I cannot into C++ to fix that myself.   ?
> >
> >
> > Best regards,
> > Alex Kotenko
> >
> >
> > 2014-05-17 13:39 GMT+01:00 Andreas Schildbach <andreas at schildbach.de>:
> > On 05/17/2014 02:02 PM, Alex Kotenko wrote:
> >
> > > So, my understanding is that atm we have no working DNS seeds at the
> > > testnet3, right? There are two DNS seeds known, of which one is
> > > unreachable atm, and another one is giving just one IP address, which
> is
> > > also a dead node.
> >
> > Yes, that's my understanding too.
> >
> > > If I'll start a DNS seed of my own and make sure it works well, will
> > > this help?
> >
> > Yes, definately.
> >
> > > I've found this DNS seeder daemon
> > > <https://github.com/sipa/bitcoin-seeder>, and it seems to be exactly
> > > what I need to run a DNS seeder myself.
> >
> > Afaik this is what most of the other seeds are using, yes.
> >
> > > So if my understanding is correct, I'll setup a DNS seeds for mainnet
> > > and for testnet at bitcoin-seed.alexykot.me
> > > <http://bitcoin-seed.alexykot.me> and testnet-seed.alexykot.me
> > > <http://testnet-seed.alexykot.me>, and also a well connected nodes for
> > > mainnet and testnet on the same server.
> > > Is this a good plan? Will this all help?
> >
> > Sound great! Let me know if you've got something to test.
> >
> >
> >
> >
> ------------------------------------------------------------------------------
> > "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> > Instantly run your Selenium tests across 300+ browser/OS combos.
> > Get unparalleled scalability from the best Selenium testing platform
> available
> > Simple to use. Nothing to install. Get started now for free."
> > http://p.sf.net/sfu/SauceLabs
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
> >
> ------------------------------------------------------------------------------
> > "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> > Instantly run your Selenium tests across 300+ browser/OS combos.
> > Get unparalleled scalability from the best Selenium testing platform
> available
> > Simple to use. Nothing to install. Get started now for free."
> >
> http://p.sf.net/sfu/SauceLabs_______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/cc158b63/attachment.html>

From mw at osfda.org  Mon May 19 20:22:46 2014
From: mw at osfda.org (Michael Wozniak)
Date: Mon, 19 May 2014 16:22:46 -0400
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <CALDj+BamyawuTgDhzM0AyB5LWNPb_xY_BQeDHqs9t9WLPibiCQ@mail.gmail.com>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
	<09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>
	<CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>
	<CAJHLa0OaAKTLR2hL6kReBFcD6FoXYV9AoqMbn0WwqYgtTNtQKw@mail.gmail.com>
	<CALDj+BY2jEL6-NwGdrh3wdcmjW_7tEDDxmyiP6woOxCg8bMQKw@mail.gmail.com>
	<ll7hps$8gs$1@ger.gmane.org>
	<CALDj+BYqMDxv+YYcrEzaZH+qFqUsme3UYuYh5Es7C6FbMZCtpg@mail.gmail.com>
	<ll7l9t$m82$1@ger.gmane.org>
	<CALDj+BamyawuTgDhzM0AyB5LWNPb_xY_BQeDHqs9t9WLPibiCQ@mail.gmail.com>
Message-ID: <8E95FB7C-CFC5-410D-B8AF-8F227BA852F6@osfda.org>

I?m not familiar with how the daemon works, however could you set up two daemons listening local on different ports and with a separate daemon or normal dns server that proxies incoming queries to either domain? I don?t know if standard DNS servers would support that, or if you would need a custom proxy application.

-
Michael Wozniak


On May 19, 2014, at 4:14 PM, Alex Kotenko <alexykot at gmail.com> wrote:

> Hmm, I've mostly setup what's promised, testing DNS seeds now. There is one problem I see that I can't really solve myself. 
> This dnsseed daemon cannot serve more than one name at once, which means that I cannot serve testnet and mainnet seeds off one daemon instance which means I need to buy two IP addresses for it. That's unfortunate as it needs much more spendings from me to operate, second IP address will cost nearly as much as the server itself. 
> 
> ?Can anybody help with this? I cannot into C++ to fix that myself.   ?
> 
> 
> Best regards, 
> Alex Kotenko
> 
> 
> 2014-05-17 13:39 GMT+01:00 Andreas Schildbach <andreas at schildbach.de>:
> On 05/17/2014 02:02 PM, Alex Kotenko wrote:
> 
> > So, my understanding is that atm we have no working DNS seeds at the
> > testnet3, right? There are two DNS seeds known, of which one is
> > unreachable atm, and another one is giving just one IP address, which is
> > also a dead node.
> 
> Yes, that's my understanding too.
> 
> > If I'll start a DNS seed of my own and make sure it works well, will
> > this help?
> 
> Yes, definately.
> 
> > I've found this DNS seeder daemon
> > <https://github.com/sipa/bitcoin-seeder>, and it seems to be exactly
> > what I need to run a DNS seeder myself.
> 
> Afaik this is what most of the other seeds are using, yes.
> 
> > So if my understanding is correct, I'll setup a DNS seeds for mainnet
> > and for testnet at bitcoin-seed.alexykot.me
> > <http://bitcoin-seed.alexykot.me> and testnet-seed.alexykot.me
> > <http://testnet-seed.alexykot.me>, and also a well connected nodes for
> > mainnet and testnet on the same server.
> > Is this a good plan? Will this all help?
> 
> Sound great! Let me know if you've got something to test.
> 
> 
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs_______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From robert at mckay.com  Mon May 19 20:36:19 2014
From: robert at mckay.com (Robert McKay)
Date: Mon, 19 May 2014 21:36:19 +0100
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <CALDj+BamyawuTgDhzM0AyB5LWNPb_xY_BQeDHqs9t9WLPibiCQ@mail.gmail.com>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
	<09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>
	<CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>
	<CAJHLa0OaAKTLR2hL6kReBFcD6FoXYV9AoqMbn0WwqYgtTNtQKw@mail.gmail.com>
	<CALDj+BY2jEL6-NwGdrh3wdcmjW_7tEDDxmyiP6woOxCg8bMQKw@mail.gmail.com>
	<ll7hps$8gs$1@ger.gmane.org>
	<CALDj+BYqMDxv+YYcrEzaZH+qFqUsme3UYuYh5Es7C6FbMZCtpg@mail.gmail.com>
	<ll7l9t$m82$1@ger.gmane.org>
	<CALDj+BamyawuTgDhzM0AyB5LWNPb_xY_BQeDHqs9t9WLPibiCQ@mail.gmail.com>
Message-ID: <779f3ed92d29cfd6922a92c5d60d3f9d@webmail.mckay.com>

It should be possible to configure bind as a DNS forwarder.. this can 
be done in a zone context.. then you can forward the different zones to 
different dnsseed daemons running on different non-public IPs or two 
different ports on the same IP (or on one single non-public IP since 
there's really no reason to expose the dnsseed directly daemon at all).

Rob

On Mon, 19 May 2014 21:14:32 +0100, Alex Kotenko wrote:
> Hmm, Ive mostly setup whats promised, testing DNS seeds now. There is
> one problem I see that I cant really solve myself.?
> This dnsseed daemon cannot serve more than one name at once, which
> means that I cannot serve testnet and mainnet seeds off one daemon
> instance which means I need to buy two IP addresses for it. Thats
> unfortunate as it needs much more spendings from me to operate, 
> second
> IP address will cost nearly as much as the server itself.?
>
> ?Can anybody help with this? I cannot into C++ to fix that myself.
> ? ?
>
> Best regards,?
>
> Alex Kotenko
>
> 2014-05-17 13:39 GMT+01:00 Andreas Schildbach :
>
>> On 05/17/2014 02:02 PM, Alex Kotenko wrote:
>>
>> > So, my understanding is that atm we have no working DNS seeds at
>> the
>> > testnet3, right? There are two DNS seeds known, of which one is
>> > unreachable atm, and another one is giving just one IP address,
>> which is
>> > also a dead node.
>>
>> Yes, thats my understanding too.
>>
>> > If Ill start a DNS seed of my own and make sure it works well,
>> will
>> > this help?
>>
>> Yes, definately.
>>
>> > Ive found this DNS seeder daemon
>> > , and it seems to be exactly
>>
>>> what I need to run a DNS seeder myself.
>>
>> Afaik this is what most of the other seeds are using, yes.
>>
>> > So if my understanding is correct, Ill setup a DNS seeds for
>> mainnet
>> > and for testnet at bitcoin-seed.alexykot.me [2]
>> > and testnet-seed.alexykot.me [4]
>> > , and also a well connected nodes for
>>
>>> mainnet and testnet on the same server.
>> > Is this a good plan? Will this all help?
>>
>> Sound great! Let me know if youve got something to test.
>>
>>
> 
> ------------------------------------------------------------------------------
>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For
>> FREE
>> Instantly run your Selenium tests across 300+ browser/OS combos.
>> Get unparalleled scalability from the best Selenium testing
>> platform available
>> Simple to use. Nothing to install. Get started now for free."
>> http://p.sf.net/sfu/SauceLabs [6]
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net [7]
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> [8]
>
>
>
> Links:
> ------
> [1] https://github.com/sipa/bitcoin-seeder
> [2] http://bitcoin-seed.alexykot.me
> [3] http://bitcoin-seed.alexykot.me
> [4] http://testnet-seed.alexykot.me
> [5] http://testnet-seed.alexykot.me
> [6] http://p.sf.net/sfu/SauceLabs
> [7] mailto:Bitcoin-development at lists.sourceforge.net
> [8] https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> [9] mailto:andreas at schildbach.de




From gmaxwell at gmail.com  Mon May 19 21:07:38 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 19 May 2014 14:07:38 -0700
Subject: [Bitcoin-development] Working on social contracts (was: Paper
	Currency)
In-Reply-To: <537A630D.104@localhost.local>
References: <CABsx9T2=nE1c-WOGnQiBqfFQqM0qtPiCcBsWN8pew6JhdpBNOA@mail.gmail.com>
	<537A630D.104@localhost.local>
Message-ID: <CAAS2fgQADU27NABcP1r52YTgDUy+PX7OZfT5H7XSsecjy1dmQg@mail.gmail.com>

On Mon, May 19, 2014 at 1:01 PM, Justus Ranvier <justusranvier at gmail.com> wrote:
> YOU can make promises about YOUR future behavior. So can everyone else.
>
> The rest of the community can keep track of which developers will and
> will not make promises about what changes they will and will not
> attempt to implement in Bitcoin, and they can use that information to
> make informed decisions about which software they will choose to support.

I promise that if bad people show up with a sufficient pointy gun that
I'll do whatever they tell me to do. I'll make bad proposals, submit
backdoors, and argue with querulous folks on mailing lists, diverting
them from real development and review work, all as commanded. Maybe
I'll try to sneak out a warning of some kind, maybe... but with my
life or my families or friends lives on the line? probably not.

... and I think that anyone who tells you otherwise probably just
hasn't really thought it through.  So what is the point of commitments
like that?  People change, people go crazy, people are coerced. Crap
happens, justifications are made, life goes on? or so we hope.

What matters is building infrastructure? both social and technical?
that is robust against those sorts of failures. If you're depending on
individual developers (including anonymous parties and volunteers) to
be somehow made more trustworthy by some promises on a mailing list
you've already lost.

If you care about this you could instead tell us about how much time
you promise to spend reviewing technical work to make sure such
attacks cannot be successful, regardless of their origins. Where are
your gitian signatures? I think thats a lot more meaningful, and it
also improves security for everyone involved since knowing that such
attacks can not succeeded removes the motivation for ever trying.

A lot of what Bitcoin is about, for me at least, is building systems
which are as trustless as possible? ruled by unbreakable rules
embodied in the software people chose to use out of their own free
will and understanding. Or at least thats the ideal we should try to
approximate. If we're successful the adhomenim you've thrown on this
list will be completely pointless? not because people are trusted to
not do evil but because Bitcoin users won't accept technology that
makes it possible.

So please go ahead and assume I'm constantly being evil and trying to
sneak something in... the technology and security can only be better
for it, but please leave the overt attacks at the door. Think
gentleman spies, not a street fighting death match. The rude attacks
and characterizations just turn people off and don't uncover actual
attacks.  Maybe the informal guideline should be one flame-out
personal attack per cryptosystem you break, serious bug you uncover,
or impossible problem you solve. :)



From justusranvier at gmail.com  Mon May 19 21:18:54 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Mon, 19 May 2014 23:18:54 +0200
Subject: [Bitcoin-development] Working on social contracts (was: Paper
 Currency)
In-Reply-To: <CAAS2fgQADU27NABcP1r52YTgDUy+PX7OZfT5H7XSsecjy1dmQg@mail.gmail.com>
References: <CABsx9T2=nE1c-WOGnQiBqfFQqM0qtPiCcBsWN8pew6JhdpBNOA@mail.gmail.com>	<537A630D.104@localhost.local>
	<CAAS2fgQADU27NABcP1r52YTgDUy+PX7OZfT5H7XSsecjy1dmQg@mail.gmail.com>
Message-ID: <537A753E.60200@localhost.local>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 05/19/2014 11:07 PM, Gregory Maxwell wrote:
> I promise that if bad people show up with a sufficient pointy gun
> that I'll do whatever they tell me to do. I'll make bad proposals,
> submit backdoors, and argue with querulous folks on mailing lists,
> diverting them from real development and review work, all as
> commanded. Maybe I'll try to sneak out a warning of some kind,
> maybe... but with my life or my families or friends lives on the
> line? probably not.
> 
> ... and I think that anyone who tells you otherwise probably just 
> hasn't really thought it through.  So what is the point of
> commitments like that?  People change, people go crazy, people are
> coerced. Crap happens, justifications are made, life goes on? or so
> we hope.

I presume you're familiar with the concept of a warrant canary, so
presumably you'd also see why public statements such as I was
discussing would be similarly useful.

Social contracts make it more difficult to hide coercion, which serves
no one except the attackers.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTenU+AAoJEMP3uyY4RQ21P1UH/2fvYa7Hfv53eXA0k9appRVI
8KWpH2D95zCo/s6kIeKZtmEzhFWFkKxOHwiHZbD5JokG+U/vUeR8p+SxF1/xUc1X
1tTNAjfAALz0/KzjPKmlMQCqM5vT4yumHsDusqPuzbPFnJnwFufrAW9vWu9OJacs
JEv4yoRGNZhR+eM8hCUkDfTtj7D8J3gMYyYds7K4kppiHN2UPRgZT6TCVyCRlThe
8w9MzYoTAf1WXPmzvSfPhzKMfNV9Y+tjt6ZV+KyLG1ZGLw2EDCxJR1O23QQE8IfK
53I2RgeFnvcdceoExSfYJj+kNpbPQ/WDVszswO5esoMWJ/E3j5PCBsLdGt+8e7I=
=BysA
-----END PGP SIGNATURE-----



From bitcoin at bpj-code.co.za  Mon May 19 22:15:01 2014
From: bitcoin at bpj-code.co.za (Bernd Jendrissek)
Date: Tue, 20 May 2014 00:15:01 +0200
Subject: [Bitcoin-development] patents...
In-Reply-To: <CANEZrP3sDh3Q9T0xFi7maNQR9Z6R7gQ6vT5kjchcMkD0hMHOdw@mail.gmail.com>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
	<5379FF38.4050909@certimix.com>
	<20140519144709.GA29574@netbook.cypherspace.org>
	<CANEZrP3sDh3Q9T0xFi7maNQR9Z6R7gQ6vT5kjchcMkD0hMHOdw@mail.gmail.com>
Message-ID: <CAF7PVPrw76Gzspo3i1pU75CV9LUite46K7yrUJMmjoHLKOdhZg@mail.gmail.com>

On Mon, May 19, 2014 at 5:09 PM, Mike Hearn <mike at plan99.net> wrote:
> Most companies (Google certainly included) have therefore banned their staff
> from reading patents,

Bitcoin is not Google though, and applying the same patent protocols
to Bitcoin as in Google is drawing a false equivalence between the
two. Google can survive single or triple damages, so it makes sense to
hope that of those patents you necessarily violate due to the size of
your operations, they attract only single damages. Google has so many
fingers in so many pies that violating some patents is a question of
when, not if. Bitcoin has a far narrower scope than trying to take
over the world (and moon).

Happy reading: http://endsoftpatents.org/2010/03/transcript-tridgell-patents/

TL;DR: If even single damages result in commercial death, you better
pay attention to patents, to reduce the chances of accidentally
running into one.

(But Bitcoin is not ccache either - it's all about money and it isn't
inconceivable that a patent infringement suit might not result in
commercial death. The right answer here isn't as obvious as you make
it out to be.)



From saivann at gmail.com  Mon May 19 22:22:48 2014
From: saivann at gmail.com (=?ISO-8859-1?Q?Sa=EFvann_Carignan?=)
Date: Mon, 19 May 2014 18:22:48 -0400
Subject: [Bitcoin-development] Developer documentation on bitcoin.org
In-Reply-To: <536EDBA5.2010700@gmail.com>
References: <536EDBA5.2010700@gmail.com>
Message-ID: <537A8438.9010708@gmail.com>

A quick update on the project:

More reviews and feedback on the pull request are very welcome:
https://github.com/bitcoin/bitcoin.org/pull/393

This pull request will be merged on May 24th and hopefully will be
accurate as much as possible. Reporting any inaccuracy / mistake on the
pull request is very appreciated.

Sa?vann


Le 2014-05-10 22:08, Sa?vann Carignan a ?crit :
> A new "Developer Documentation" section should be soon merged on
> bitcoin.org .
> 
> Live Preview:
> http://bitcoindev.us.to/en/developer-documentation
> 
> GitHub Pull Request:
> https://github.com/bitcoin/bitcoin.org/pull/393
> 
> Bitcointalk Thread:
> https://bitcointalk.org/index.php?topic=511876.0
> 
> We've worked hard to come up with good quality documentation and general
> feedback has been positive. Reviews from experienced Bitcoin developers
> would now be much appreciated. You are cordially invited to help
> proofread the documentation so it can be published soon!
> 
> *Please avoid commenting on the mailing list* to not spam everyone. See
> the pull request for instructions. Comments should go on the pull
> request or bitcoin-documentation mailing list
> https://groups.google.com/forum/#!forum/bitcoin-documentation .
> 



From jgarzik at bitpay.com  Mon May 19 23:49:52 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Mon, 19 May 2014 19:49:52 -0400
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <779f3ed92d29cfd6922a92c5d60d3f9d@webmail.mckay.com>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
	<09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>
	<CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>
	<CAJHLa0OaAKTLR2hL6kReBFcD6FoXYV9AoqMbn0WwqYgtTNtQKw@mail.gmail.com>
	<CALDj+BY2jEL6-NwGdrh3wdcmjW_7tEDDxmyiP6woOxCg8bMQKw@mail.gmail.com>
	<ll7hps$8gs$1@ger.gmane.org>
	<CALDj+BYqMDxv+YYcrEzaZH+qFqUsme3UYuYh5Es7C6FbMZCtpg@mail.gmail.com>
	<ll7l9t$m82$1@ger.gmane.org>
	<CALDj+BamyawuTgDhzM0AyB5LWNPb_xY_BQeDHqs9t9WLPibiCQ@mail.gmail.com>
	<779f3ed92d29cfd6922a92c5d60d3f9d@webmail.mckay.com>
Message-ID: <CAJHLa0O_F3MJc1KJJn+L6AjT-wa8sPunibb4rfWGGUWYSOkVOg@mail.gmail.com>

On Mon, May 19, 2014 at 4:36 PM, Robert McKay <robert at mckay.com> wrote:
> It should be possible to configure bind as a DNS forwarder.. this can
> be done in a zone context.. then you can forward the different zones to
> different dnsseed daemons running on different non-public IPs or two
> different ports on the same IP (or on one single non-public IP since
> there's really no reason to expose the dnsseed directly daemon at all).

Quite the opposite.  dnsseed data rotates through a lot of addresses
if available.  Using the bind/zone-xfer system would result in fewer
total addresses going through to the clients, thanks to the addition
of caching levels that the bind/zone-xfer system brings.

That said, if the choice is between no-service and bind, bind it is ;p

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From mw at osfda.org  Tue May 20 00:45:55 2014
From: mw at osfda.org (Michael Wozniak)
Date: Mon, 19 May 2014 20:45:55 -0400
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <CAJHLa0O_F3MJc1KJJn+L6AjT-wa8sPunibb4rfWGGUWYSOkVOg@mail.gmail.com>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
	<09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>
	<CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>
	<CAJHLa0OaAKTLR2hL6kReBFcD6FoXYV9AoqMbn0WwqYgtTNtQKw@mail.gmail.com>
	<CALDj+BY2jEL6-NwGdrh3wdcmjW_7tEDDxmyiP6woOxCg8bMQKw@mail.gmail.com>
	<ll7hps$8gs$1@ger.gmane.org>
	<CALDj+BYqMDxv+YYcrEzaZH+qFqUsme3UYuYh5Es7C6FbMZCtpg@mail.gmail.com>
	<ll7l9t$m82$1@ger.gmane.org>
	<CALDj+BamyawuTgDhzM0AyB5LWNPb_xY_BQeDHqs9t9WLPibiCQ@mail.gmail.com>
	<779f3ed92d29cfd6922a92c5d60d3f9d@webmail.mckay.com>
	<CAJHLa0O_F3MJc1KJJn+L6AjT-wa8sPunibb4rfWGGUWYSOkVOg@mail.gmail.com>
Message-ID: <21D4D9FD-9919-4157-ADFD-C061518E28DA@osfda.org>

You would set it up as a forwarder, not as a zone transfer to bind.  That should proxy the request every time and only cache based on any TTL that?s set in the response.

Here?s an example of how it could work:
https://planet.jboss.org/post/setting_up_a_forwarding_dns_server_or_dns_proxy_with_isc_bind


On May 19, 2014, at 7:49 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:

> On Mon, May 19, 2014 at 4:36 PM, Robert McKay <robert at mckay.com> wrote:
>> It should be possible to configure bind as a DNS forwarder.. this can
>> be done in a zone context.. then you can forward the different zones to
>> different dnsseed daemons running on different non-public IPs or two
>> different ports on the same IP (or on one single non-public IP since
>> there's really no reason to expose the dnsseed directly daemon at all).
> 
> Quite the opposite.  dnsseed data rotates through a lot of addresses
> if available.  Using the bind/zone-xfer system would result in fewer
> total addresses going through to the clients, thanks to the addition
> of caching levels that the bind/zone-xfer system brings.
> 
> That said, if the choice is between no-service and bind, bind it is ;p
> 
> -- 
> Jeff Garzik
> Bitcoin core developer and open source evangelist
> BitPay, Inc.      https://bitpay.com/
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From robert at mckay.com  Tue May 20 00:44:29 2014
From: robert at mckay.com (Robert McKay)
Date: Tue, 20 May 2014 01:44:29 +0100
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <CAJHLa0O_F3MJc1KJJn+L6AjT-wa8sPunibb4rfWGGUWYSOkVOg@mail.gmail.com>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
	<09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>
	<CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>
	<CAJHLa0OaAKTLR2hL6kReBFcD6FoXYV9AoqMbn0WwqYgtTNtQKw@mail.gmail.com>
	<CALDj+BY2jEL6-NwGdrh3wdcmjW_7tEDDxmyiP6woOxCg8bMQKw@mail.gmail.com>
	<ll7hps$8gs$1@ger.gmane.org>
	<CALDj+BYqMDxv+YYcrEzaZH+qFqUsme3UYuYh5Es7C6FbMZCtpg@mail.gmail.com>
	<ll7l9t$m82$1@ger.gmane.org>
	<CALDj+BamyawuTgDhzM0AyB5LWNPb_xY_BQeDHqs9t9WLPibiCQ@mail.gmail.com>
	<779f3ed92d29cfd6922a92c5d60d3f9d@webmail.mckay.com>
	<CAJHLa0O_F3MJc1KJJn+L6AjT-wa8sPunibb4rfWGGUWYSOkVOg@mail.gmail.com>
Message-ID: <0f40d061612966ff809fff04d3f698eb@webmail.mckay.com>

On Mon, 19 May 2014 19:49:52 -0400, Jeff Garzik wrote:
> On Mon, May 19, 2014 at 4:36 PM, Robert McKay <robert at mckay.com> 
> wrote:
>> It should be possible to configure bind as a DNS forwarder.. this 
>> can
>> be done in a zone context.. then you can forward the different zones 
>> to
>> different dnsseed daemons running on different non-public IPs or two
>> different ports on the same IP (or on one single non-public IP since
>> there's really no reason to expose the dnsseed directly daemon at 
>> all).
>
> Quite the opposite.  dnsseed data rotates through a lot of addresses
> if available.  Using the bind/zone-xfer system would result in fewer
> total addresses going through to the clients, thanks to the addition
> of caching levels that the bind/zone-xfer system brings.
>
> That said, if the choice is between no-service and bind, bind it is 
> ;p

Setting it up as a zone forwarder causes each request to go through to 
the dnsseed backend for each request.

Rob



From robert at mckay.com  Tue May 20 00:50:30 2014
From: robert at mckay.com (Robert McKay)
Date: Tue, 20 May 2014 01:50:30 +0100
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <0f40d061612966ff809fff04d3f698eb@webmail.mckay.com>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
	<09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>
	<CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>
	<CAJHLa0OaAKTLR2hL6kReBFcD6FoXYV9AoqMbn0WwqYgtTNtQKw@mail.gmail.com>
	<CALDj+BY2jEL6-NwGdrh3wdcmjW_7tEDDxmyiP6woOxCg8bMQKw@mail.gmail.com>
	<ll7hps$8gs$1@ger.gmane.org>
	<CALDj+BYqMDxv+YYcrEzaZH+qFqUsme3UYuYh5Es7C6FbMZCtpg@mail.gmail.com>
	<ll7l9t$m82$1@ger.gmane.org>
	<CALDj+BamyawuTgDhzM0AyB5LWNPb_xY_BQeDHqs9t9WLPibiCQ@mail.gmail.com>
	<779f3ed92d29cfd6922a92c5d60d3f9d@webmail.mckay.com>
	<CAJHLa0O_F3MJc1KJJn+L6AjT-wa8sPunibb4rfWGGUWYSOkVOg@mail.gmail.com>
	<0f40d061612966ff809fff04d3f698eb@webmail.mckay.com>
Message-ID: <a9d48b2474c87e6d9b80b567b782ecfa@webmail.mckay.com>

On Tue, 20 May 2014 01:44:29 +0100, Robert McKay wrote:
> On Mon, 19 May 2014 19:49:52 -0400, Jeff Garzik wrote:
>> On Mon, May 19, 2014 at 4:36 PM, Robert McKay <robert at mckay.com>
>> wrote:
>>> It should be possible to configure bind as a DNS forwarder.. this
>>> can
>>> be done in a zone context.. then you can forward the different 
>>> zones
>>> to
>>> different dnsseed daemons running on different non-public IPs or 
>>> two
>>> different ports on the same IP (or on one single non-public IP 
>>> since
>>> there's really no reason to expose the dnsseed directly daemon at
>>> all).
>>
>> Quite the opposite.  dnsseed data rotates through a lot of addresses
>> if available.  Using the bind/zone-xfer system would result in fewer
>> total addresses going through to the clients, thanks to the addition
>> of caching levels that the bind/zone-xfer system brings.
>>
>> That said, if the choice is between no-service and bind, bind it is
>> ;p
>
> Setting it up as a zone forwarder causes each request to go through 
> to
> the dnsseed backend for each request.

This stackoverflow describes a similar situation;

http://stackoverflow.com/questions/15338232/how-to-forward-a-subzone

you can additionally specify the port to forward too;

http://www.zytrax.com/books/dns/ch7/queries.html#forwarders

it should be possible to forward to different ports on 127.0.0.1 for 
each dnsseed instance.

Rob



From bitcoingrant at gmx.com  Tue May 20 08:15:44 2014
From: bitcoingrant at gmx.com (bitcoingrant at gmx.com)
Date: Tue, 20 May 2014 10:15:44 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CANAnSg0ABVyRcSaO2aEcqO8qaj+JdxRN4z-hLE-EbESv2TMf2g@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>,
	<CANAnSg0ABVyRcSaO2aEcqO8qaj+JdxRN4z-hLE-EbESv2TMf2g@mail.gmail.com>
Message-ID: <trinity-1957ed0e-a607-47d7-803b-71c59af8eb89-1400573744536@3capp-mailcom-bs08>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140520/198cc1b1/attachment.html>

From mike at plan99.net  Tue May 20 08:42:28 2014
From: mike at plan99.net (Mike Hearn)
Date: Tue, 20 May 2014 10:42:28 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <trinity-1957ed0e-a607-47d7-803b-71c59af8eb89-1400573744536@3capp-mailcom-bs08>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<CANAnSg0ABVyRcSaO2aEcqO8qaj+JdxRN4z-hLE-EbESv2TMf2g@mail.gmail.com>
	<trinity-1957ed0e-a607-47d7-803b-71c59af8eb89-1400573744536@3capp-mailcom-bs08>
Message-ID: <CANEZrP2qRP3ayP5ognX4hz6JMG57A96NerX3+xBwi6WPcRcqiQ@mail.gmail.com>

Yeah I'm expecting port 8333 to go away in China at some point. Actually I
was expecting that years ago and was kind of surprised that the suppression
was being done via banks. Guess the GFW operators were just slow to catch
up.
On 20 May 2014 10:16, <bitcoingrant at gmx.com> wrote:

> Recently China has updated its firewall blocking bitcoin sites and pools.
> Whether this is simple blacklist or more sophisticated packet targeting
> is uncertain, however this update did spefically target VPN handshakes.
>
>  *Sent:* Monday, April 07, 2014 at 1:07 PM
> *From:* Drak <drak at zikula.org>
> *To:* "Mike Hearn" <mike at plan99.net>
> *Cc:* "Bitcoin Dev" <bitcoin-development at lists.sourceforge.net>
> *Subject:* Re: [Bitcoin-development] Why are we bleeding nodes?
>  For what it's worth, the number of nodes rose dramatically during the
> China bullrun (I recall 45k in China alone) and dropped as dramatically as
> the price after the first PBOC announcement designed to cool down bitcoin
> trading in China.
>
> On 7 April 2014 12:34, Mike Hearn <mike at plan99.net> wrote:
>>
>> At the start of February we had 10,000 bitcoin nodes. Now we have 8,500
>> and still falling:
>>
>>    http://getaddr.bitnodes.io/dashboard/chart/?days=60
>>
>> I know all the reasons why people *might* stop running a node (uses too
>> much disk space, bandwidth, lost interest etc). But does anyone have any
>> idea how we might get more insight into what's really going on? It'd be
>> convenient if the subVer contained the operating system, as then we could
>> tell if the bleed was mostly from desktops/laptops (Windows/Mac), which
>> would be expected, or from virtual servers (Linux), which would be more
>> concerning.
>>
>> When you set up a Tor node, you can add your email address to the config
>> file and the Tor project sends you emails from time to time about things
>> you should know about. If we did the same, we could have a little exit
>> survey: if your node disappears for long enough, we could email the
>> operator and ask why they stopped.
>>
>>
>> ------------------------------------------------------------------------------
>> Put Bad Developers to Shame
>> Dominate Development with Jenkins Continuous Integration
>> Continuously Automate Build, Test & Deployment
>> Start a new project now. Try Jenkins in the cloud.
>> http://p.sf.net/sfu/13600_Cloudbees_APR
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>  ------------------------------------------------------------------------------
> Put Bad Developers to Shame Dominate Development with Jenkins Continuous
> Integration Continuously Automate Build, Test & Deployment Start a new
> project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees_______________________________________________Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140520/994e0862/attachment.html>

From jgarzik at bitpay.com  Tue May 20 10:30:37 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Tue, 20 May 2014 06:30:37 -0400
Subject: [Bitcoin-development] patents...
In-Reply-To: <20140519144709.GA29574@netbook.cypherspace.org>
References: <BAY173-W1475F72C70BC089A82C20FCC300@phx.gbl>
	<5377892C.8080402@gmail.com>
	<CAAS2fgS-Ewj3T0-d=h7ET9dCz3+NPPYVOLDWd7T7oYY95x-sUA@mail.gmail.com>
	<CALDj+Bbsb6JiLabTBx21k02dDvnmZZDCXmJ2mnh7DngBon202w@mail.gmail.com>
	<5379FF38.4050909@certimix.com>
	<20140519144709.GA29574@netbook.cypherspace.org>
Message-ID: <CAJHLa0P8iuh3atbh8hwGaW24qb3JhGBBRyHZObuU0bGGWLVVXg@mail.gmail.com>

On Mon, May 19, 2014 at 10:47 AM, Adam Back <adam at cypherspace.org> wrote:
> hmm Yes and this topic now is more than a bit non dev related.  Sorry about
> that.  There seems to be no convenient mailing list format for non-dev stuff
> or I would Cc and set Reply-To for example?  (Web forums somewhat suck IMO).

There is the little-used "bitcoin-list" on SourceForge that claims a
rubric of "general discussion":
https://sourceforge.net/p/bitcoin/mailman/?source=navbar

I just subscribed there.

We can "reboot" that list with a couple new rules such as
a) be good to each other.  consistent rude behavior gets the boot.
b) anything related to decentralization, consensus, proven data
structures or crypto is on-topic

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From eugen at leitl.org  Tue May 20 14:37:10 2014
From: eugen at leitl.org (Eugen Leitl)
Date: Tue, 20 May 2014 16:37:10 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <trinity-1957ed0e-a607-47d7-803b-71c59af8eb89-1400573744536@3capp-mailcom-bs08>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<CANAnSg0ABVyRcSaO2aEcqO8qaj+JdxRN4z-hLE-EbESv2TMf2g@mail.gmail.com>
	<trinity-1957ed0e-a607-47d7-803b-71c59af8eb89-1400573744536@3capp-mailcom-bs08>
Message-ID: <20140520143710.GT26986@leitl.org>

On Tue, May 20, 2014 at 10:15:44AM +0200, bitcoingrant at gmx.com wrote:
>    Recently China has updated its firewall blocking bitcoin sites and pools.
>    Whether this is simple blacklist or more?sophisticated?packet targeting is
>    uncertain, however this update did spefically target VPN handshakes.

Could a blockchain fork due to network split happen?
    ?



From will.yager at gmail.com  Tue May 20 14:52:40 2014
From: will.yager at gmail.com (Gmail)
Date: Tue, 20 May 2014 10:52:40 -0400
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <20140520143710.GT26986@leitl.org>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<CANAnSg0ABVyRcSaO2aEcqO8qaj+JdxRN4z-hLE-EbESv2TMf2g@mail.gmail.com>
	<trinity-1957ed0e-a607-47d7-803b-71c59af8eb89-1400573744536@3capp-mailcom-bs08>
	<20140520143710.GT26986@leitl.org>
Message-ID: <4078A034-6626-495D-B42F-BDA94ACE1DA3@gmail.com>

Unlikely. I doubt any significant portion of miners in china will continue to mine on a china-specific chain, since it will certainly be outmined by non-Chinese miners, and will be orphaned eventually. 

More likely is that mining interests in china will make special arrangements to circumvent the GFwOC.

Users who can't access the worldwide blockchain will notice horrendously slow confirmation times and other side effects. 

> On May 20, 2014, at 10:37, Eugen Leitl <eugen at leitl.org> 
> 
> Could a blockchain fork due to network split happen?
>     
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 1593 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140520/b680ca83/attachment.p7s>

From stephenreed at yahoo.com  Tue May 20 16:12:53 2014
From: stephenreed at yahoo.com (Stephen Reed)
Date: Tue, 20 May 2014 09:12:53 -0700 (PDT)
Subject: [Bitcoin-development] Bitcoin Cooperative Proof-of-Stake whitpaper
Message-ID: <1400602373.46778.YahooMailNeo@web160501.mail.bf1.yahoo.com>

I completed a whitepaper for Bitcoin a proof-of-stake version which uses a single nomadic verifiable mint agent and distributed replication of a single blockchain by compensated full nodes to achieve 6-hop, sub-second transaction acknowledgement times. Plus it pays dividends to holders instead of wasting it on miners. Subsidized transaction fees are thus lower.

https://docs.google.com/document/d/1C4m-MFnxw0JjDorzrKs_IRQRqD9ila79o0IDt6KsbcE


Because the code is not yet written, this idea is half-baked so to speak. Comments appreciated on my project thread, which will be a development diary. I plan a hard fork of the Bitcoin blockchain in early 2016, after a year of public system testing, and conditioned on wide approval.

https://bitcointalk.org/index.php?topic=584719.msg6397403#msg6397403

-Steve

Stephen L. Reed 
Austin, Texas, USA 
512.791.7860
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140520/a2e808e8/attachment.html>

From nick at mynicknet.com  Tue May 20 16:42:40 2014
From: nick at mynicknet.com (Nick Simpson)
Date: Tue, 20 May 2014 11:42:40 -0500
Subject: [Bitcoin-development] Bitcoin Cooperative Proof-of-Stake
	whitpaper
In-Reply-To: <1400602373.46778.YahooMailNeo@web160501.mail.bf1.yahoo.com>
References: <1400602373.46778.YahooMailNeo@web160501.mail.bf1.yahoo.com>
Message-ID: <f0c1b2dc-963a-4ea2-82c0-31b0d339d46c@email.android.com>

Referring to the subsidy for miners as "wasting it on miners" isn't going to garner you much favor. 


On May 20, 2014 11:12:53 AM CDT, Stephen Reed <stephenreed at yahoo.com> wrote:
>I completed a whitepaper for Bitcoin a proof-of-stake version which
>uses a single nomadic verifiable mint agent and distributed replication
>of a single blockchain by compensated full nodes to achieve 6-hop,
>sub-second transaction acknowledgement times. Plus it pays dividends to
>holders instead of wasting it on miners. Subsidized transaction fees
>are thus lower.
>
>https://docs.google.com/document/d/1C4m-MFnxw0JjDorzrKs_IRQRqD9ila79o0IDt6KsbcE
>
>
>Because the code is not yet written, this idea is half-baked so to
>speak. Comments appreciated on my project thread, which will be a
>development diary. I plan a hard fork of the Bitcoin blockchain in
>early 2016, after a year of public system testing, and conditioned on
>wide approval.
>
>https://bitcointalk.org/index.php?topic=584719.msg6397403#msg6397403
>
>-Steve
>
>Stephen L. Reed 
>Austin, Texas, USA 
>512.791.7860
>
>------------------------------------------------------------------------
>
>------------------------------------------------------------------------------
>"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>Instantly run your Selenium tests across 300+ browser/OS combos.
>Get unparalleled scalability from the best Selenium testing platform
>available
>Simple to use. Nothing to install. Get started now for free."
>http://p.sf.net/sfu/SauceLabs
>
>------------------------------------------------------------------------
>
>_______________________________________________
>Bitcoin-development mailing list
>Bitcoin-development at lists.sourceforge.net
>https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140520/34da049b/attachment.html>

From adam at cypherspace.org  Tue May 20 17:48:38 2014
From: adam at cypherspace.org (Adam Back)
Date: Tue, 20 May 2014 19:48:38 +0200
Subject: [Bitcoin-development] good bitcoin summary paper in more detail
 than Satoshi paper (Re: Bitcoin Protocol Specification)
In-Reply-To: <20140518143853.GA12783@netbook.cypherspace.org>
References: <5378B725.50400@googlemail.com>
	<20140518143853.GA12783@netbook.cypherspace.org>
Message-ID: <20140520174838.GA12364@netbook.cypherspace.org>

Actually I read the paper now as it was linked somewhere else also, and its
quite good.  So now I can summarize it:

Its a writeup of bitcoin in 29 pages, which covers things in the original
bitcoin paper but with more detail of formats, scripts with some examples,
formats etc.  Quite nice paper, concise presentation of many bitcoin details
that are otherwise hard to put together, requiring examining source or
asking people knowledgeable at algorithm/code level.

>>http://enetium.com/resources/Bitcoin.pdf

Adam

On Sun, May 18, 2014 at 04:38:53PM +0200, Adam Back wrote:
>Suggestion: maybe you want to write and post here a paragraph summarizing
>the topic of your paper so people can know if they feel qualified and if
>they need to review it from their interests.
>
>Adam
>
>On Sun, May 18, 2014 at 03:35:33PM +0200, Krzysztof Okupski wrote:
>>Dear all,
>>
>>I'd like to kindly ask, those of you that have a bit of spare time, to
>>take a look at a Bitcoin protocol specification I've written. It is still
>>in development and, as some of you have already indicated, needs
>>improvement. I'd be very thankful if some of you could take the
>>time to review it. If there are any errors or suggestions from your
>>side, I'd gladly hear them. My e-mail can be found on the front page
>>of the document:
>>
>>http://enetium.com/resources/Bitcoin.pdf
>>
>>Warm greetings,
>>Chris
>>
>>
>>------------------------------------------------------------------------------
>>"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>>Instantly run your Selenium tests across 300+ browser/OS combos.
>>Get unparalleled scalability from the best Selenium testing platform available
>>Simple to use. Nothing to install. Get started now for free."
>>http://p.sf.net/sfu/SauceLabs
>>_______________________________________________
>>Bitcoin-development mailing list
>>Bitcoin-development at lists.sourceforge.net
>>https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>------------------------------------------------------------------------------
>"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>Instantly run your Selenium tests across 300+ browser/OS combos.
>Get unparalleled scalability from the best Selenium testing platform available
>Simple to use. Nothing to install. Get started now for free."
>http://p.sf.net/sfu/SauceLabs
>_______________________________________________
>Bitcoin-development mailing list
>Bitcoin-development at lists.sourceforge.net
>https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From andy at coinbase.com  Tue May 20 18:46:33 2014
From: andy at coinbase.com (Andy Alness)
Date: Tue, 20 May 2014 11:46:33 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <4078A034-6626-495D-B42F-BDA94ACE1DA3@gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<CANAnSg0ABVyRcSaO2aEcqO8qaj+JdxRN4z-hLE-EbESv2TMf2g@mail.gmail.com>
	<trinity-1957ed0e-a607-47d7-803b-71c59af8eb89-1400573744536@3capp-mailcom-bs08>
	<20140520143710.GT26986@leitl.org>
	<4078A034-6626-495D-B42F-BDA94ACE1DA3@gmail.com>
Message-ID: <CALKy-wodNVZK+3q79YUJLmTRjihP85va4Mcp=mnUQTuUfLh+zg@mail.gmail.com>

Has there ever been serious discussion on extending the protocol to
support UDP transport? That would allow for NAT traversal and for many
more people to run effective nodes. I'm also curious if it could be
made improve block propagation time.

On Tue, May 20, 2014 at 7:52 AM, Gmail <will.yager at gmail.com> wrote:
> Unlikely. I doubt any significant portion of miners in china will continue to mine on a china-specific chain, since it will certainly be outmined by non-Chinese miners, and will be orphaned eventually.
>
> More likely is that mining interests in china will make special arrangements to circumvent the GFwOC.
>
> Users who can't access the worldwide blockchain will notice horrendously slow confirmation times and other side effects.
>
>> On May 20, 2014, at 10:37, Eugen Leitl <eugen at leitl.org>
>>
>> Could a blockchain fork due to network split happen?
>>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



-- 
Andy Alness
Software Engineer
Coinbase
San Francisco, CA



From jgarzik at bitpay.com  Tue May 20 19:17:46 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Tue, 20 May 2014 15:17:46 -0400
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CALKy-wodNVZK+3q79YUJLmTRjihP85va4Mcp=mnUQTuUfLh+zg@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<CANAnSg0ABVyRcSaO2aEcqO8qaj+JdxRN4z-hLE-EbESv2TMf2g@mail.gmail.com>
	<trinity-1957ed0e-a607-47d7-803b-71c59af8eb89-1400573744536@3capp-mailcom-bs08>
	<20140520143710.GT26986@leitl.org>
	<4078A034-6626-495D-B42F-BDA94ACE1DA3@gmail.com>
	<CALKy-wodNVZK+3q79YUJLmTRjihP85va4Mcp=mnUQTuUfLh+zg@mail.gmail.com>
Message-ID: <CAJHLa0PjUqJd_Hfjiwfj5c1yb6LJZeZMS0LFHd3Ncb+Ly88F8w@mail.gmail.com>

Yes, i spec'd out the UDP traversal of the P2P protocol.  It seems
reasonable especially for "inv" messages.

On Tue, May 20, 2014 at 2:46 PM, Andy Alness <andy at coinbase.com> wrote:
> Has there ever been serious discussion on extending the protocol to
> support UDP transport? That would allow for NAT traversal and for many
> more people to run effective nodes. I'm also curious if it could be
> made improve block propagation time.
>
> On Tue, May 20, 2014 at 7:52 AM, Gmail <will.yager at gmail.com> wrote:
>> Unlikely. I doubt any significant portion of miners in china will continue to mine on a china-specific chain, since it will certainly be outmined by non-Chinese miners, and will be orphaned eventually.
>>
>> More likely is that mining interests in china will make special arrangements to circumvent the GFwOC.
>>
>> Users who can't access the worldwide blockchain will notice horrendously slow confirmation times and other side effects.
>>
>>> On May 20, 2014, at 10:37, Eugen Leitl <eugen at leitl.org>
>>>
>>> Could a blockchain fork due to network split happen?
>>>
>>
>> ------------------------------------------------------------------------------
>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> Instantly run your Selenium tests across 300+ browser/OS combos.
>> Get unparalleled scalability from the best Selenium testing platform available
>> Simple to use. Nothing to install. Get started now for free."
>> http://p.sf.net/sfu/SauceLabs
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
>
> --
> Andy Alness
> Software Engineer
> Coinbase
> San Francisco, CA
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From cryptocurrencies at quidecco.de  Tue May 20 18:38:15 2014
From: cryptocurrencies at quidecco.de (Isidor Zeuner)
Date: Tue, 20 May 2014 20:38:15 +0200 (CEST)
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CANEZrP2bbFordbKdTWnMuCx0yQpL1D5-=_mK6VXPGB9ogDLDDw@mail.gmail.com>
References: <CANEZrP2bbFordbKdTWnMuCx0yQpL1D5-=_mK6VXPGB9ogDLDDw@mail.gmail.com>
	<CAPg+sBhL+Lr_noM7hVB4w-tvX0LLK2bKbQTzAw=4WswyxNGboQ@mail.gmail.com>
Message-ID: <20140520183815.2A186DF7279@quidecco.de>

> >
> > In my opinion, the number of full nodes doesn't matter (as long as
> > it's enough to satisfy demand by other nodes).
> >
>
> Correct. Still, a high number of nodes has a few other benefits:
>
> 1) The more nodes there are, the cheaper it should be to run each one,
> given that the bandwidth and CPU for serving the chain will be spread over
> more people.
>
> 2) It makes Bitcoin *seem* bigger, more robust and more decentralised,
> because there are more people uniting to run it. So there's a psychological
> benefit.
>

Psychological benefit vs. effective benefit involves the danger of
destroying trust in the Bitcoin network when there are hard facts for
non-robustness while the node number looks big. Therefore, it may make
sense to establish better metrics.

> Also, we don't have a good way to measure capacity vs demand at the moment.
> Whether we have enough capacity is rather a shot in the dark right now.
>
>
> > What matters is how hard it is to run one.
> >
>
> Which is why I'm interested to learn the reason behind the drop. Is it
> insufficient interest, or is running a node too painful?
>
> For this purpose I'd like to exclude people running Bitcoin Core on laptops
> or non-dedicated desktops. I don't think full nodes will ever make sense
> for consumer wallets again, and I see the bleeding off of those people as
> natural and expected (as Satoshi did). But if someone feels it's too hard
> to run on a cheap server then that'd concern me.
>

In my opinion, the characteristic of being able to make use of
non-dedicated nodes should be regarded as an advantage of the Bitcoin
protocol, and not something to get rid of. Nodes being able to
contribute this way may lead to even more robustness than
decentralization alone, as they can do so without exposing a fixed
address which could be attacked.

Best regards,

Isidor



From andy at coinbase.com  Tue May 20 20:09:50 2014
From: andy at coinbase.com (Andy Alness)
Date: Tue, 20 May 2014 13:09:50 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAJHLa0PjUqJd_Hfjiwfj5c1yb6LJZeZMS0LFHd3Ncb+Ly88F8w@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<CANAnSg0ABVyRcSaO2aEcqO8qaj+JdxRN4z-hLE-EbESv2TMf2g@mail.gmail.com>
	<trinity-1957ed0e-a607-47d7-803b-71c59af8eb89-1400573744536@3capp-mailcom-bs08>
	<20140520143710.GT26986@leitl.org>
	<4078A034-6626-495D-B42F-BDA94ACE1DA3@gmail.com>
	<CALKy-wodNVZK+3q79YUJLmTRjihP85va4Mcp=mnUQTuUfLh+zg@mail.gmail.com>
	<CAJHLa0PjUqJd_Hfjiwfj5c1yb6LJZeZMS0LFHd3Ncb+Ly88F8w@mail.gmail.com>
Message-ID: <CALKy-wp_d5Tzu2POai5gpe+EJUVGuOvN58aGu2WekBjkhNm8Gw@mail.gmail.com>

Awesome! I'm assuming this is it:
https://bitcointalk.org/index.php?topic=156769.0

It would be interesting (at least to me) to take this a step further
and offer UDP as a full TCP replacement capable of STUN-assisted NAT
traversal and possibly swarmed blockchain syncs. It would require open
TCP nodes to facilitate "connection" establishment. It is obviously a
non-trivial amount of work but would be an interesting experiment.
Maybe BitTorrent's ?TP protocol could be leveraged.

On Tue, May 20, 2014 at 12:17 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:
> Yes, i spec'd out the UDP traversal of the P2P protocol.  It seems
> reasonable especially for "inv" messages.
>
> On Tue, May 20, 2014 at 2:46 PM, Andy Alness <andy at coinbase.com> wrote:
>> Has there ever been serious discussion on extending the protocol to
>> support UDP transport? That would allow for NAT traversal and for many
>> more people to run effective nodes. I'm also curious if it could be
>> made improve block propagation time.
>>
>> On Tue, May 20, 2014 at 7:52 AM, Gmail <will.yager at gmail.com> wrote:
>>> Unlikely. I doubt any significant portion of miners in china will continue to mine on a china-specific chain, since it will certainly be outmined by non-Chinese miners, and will be orphaned eventually.
>>>
>>> More likely is that mining interests in china will make special arrangements to circumvent the GFwOC.
>>>
>>> Users who can't access the worldwide blockchain will notice horrendously slow confirmation times and other side effects.
>>>
>>>> On May 20, 2014, at 10:37, Eugen Leitl <eugen at leitl.org>
>>>>
>>>> Could a blockchain fork due to network split happen?
>>>>
>>>
>>> ------------------------------------------------------------------------------
>>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>>> Instantly run your Selenium tests across 300+ browser/OS combos.
>>> Get unparalleled scalability from the best Selenium testing platform available
>>> Simple to use. Nothing to install. Get started now for free."
>>> http://p.sf.net/sfu/SauceLabs
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>
>>
>>
>> --
>> Andy Alness
>> Software Engineer
>> Coinbase
>> San Francisco, CA
>>
>> ------------------------------------------------------------------------------
>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> Instantly run your Selenium tests across 300+ browser/OS combos.
>> Get unparalleled scalability from the best Selenium testing platform available
>> Simple to use. Nothing to install. Get started now for free."
>> http://p.sf.net/sfu/SauceLabs
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
> --
> Jeff Garzik
> Bitcoin core developer and open source evangelist
> BitPay, Inc.      https://bitpay.com/



-- 
Andy Alness
Software Engineer
Coinbase
San Francisco, CA



From jgarzik at bitpay.com  Tue May 20 20:22:27 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Tue, 20 May 2014 16:22:27 -0400
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CALKy-wp_d5Tzu2POai5gpe+EJUVGuOvN58aGu2WekBjkhNm8Gw@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<CANAnSg0ABVyRcSaO2aEcqO8qaj+JdxRN4z-hLE-EbESv2TMf2g@mail.gmail.com>
	<trinity-1957ed0e-a607-47d7-803b-71c59af8eb89-1400573744536@3capp-mailcom-bs08>
	<20140520143710.GT26986@leitl.org>
	<4078A034-6626-495D-B42F-BDA94ACE1DA3@gmail.com>
	<CALKy-wodNVZK+3q79YUJLmTRjihP85va4Mcp=mnUQTuUfLh+zg@mail.gmail.com>
	<CAJHLa0PjUqJd_Hfjiwfj5c1yb6LJZeZMS0LFHd3Ncb+Ly88F8w@mail.gmail.com>
	<CALKy-wp_d5Tzu2POai5gpe+EJUVGuOvN58aGu2WekBjkhNm8Gw@mail.gmail.com>
Message-ID: <CAJHLa0Omi=fyE0S440dAqkzvZMKcfuOTrvoYwvxW+hO76CHogA@mail.gmail.com>

Indeed -- you must reinvent TCP over UDP, ultimately, to handle blocks
and large TXs.


On Tue, May 20, 2014 at 4:09 PM, Andy Alness <andy at coinbase.com> wrote:
> Awesome! I'm assuming this is it:
> https://bitcointalk.org/index.php?topic=156769.0
>
> It would be interesting (at least to me) to take this a step further
> and offer UDP as a full TCP replacement capable of STUN-assisted NAT
> traversal and possibly swarmed blockchain syncs. It would require open
> TCP nodes to facilitate "connection" establishment. It is obviously a
> non-trivial amount of work but would be an interesting experiment.
> Maybe BitTorrent's ?TP protocol could be leveraged.
>
> On Tue, May 20, 2014 at 12:17 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:
>> Yes, i spec'd out the UDP traversal of the P2P protocol.  It seems
>> reasonable especially for "inv" messages.
>>
>> On Tue, May 20, 2014 at 2:46 PM, Andy Alness <andy at coinbase.com> wrote:
>>> Has there ever been serious discussion on extending the protocol to
>>> support UDP transport? That would allow for NAT traversal and for many
>>> more people to run effective nodes. I'm also curious if it could be
>>> made improve block propagation time.
>>>
>>> On Tue, May 20, 2014 at 7:52 AM, Gmail <will.yager at gmail.com> wrote:
>>>> Unlikely. I doubt any significant portion of miners in china will continue to mine on a china-specific chain, since it will certainly be outmined by non-Chinese miners, and will be orphaned eventually.
>>>>
>>>> More likely is that mining interests in china will make special arrangements to circumvent the GFwOC.
>>>>
>>>> Users who can't access the worldwide blockchain will notice horrendously slow confirmation times and other side effects.
>>>>
>>>>> On May 20, 2014, at 10:37, Eugen Leitl <eugen at leitl.org>
>>>>>
>>>>> Could a blockchain fork due to network split happen?
>>>>>
>>>>
>>>> ------------------------------------------------------------------------------
>>>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>>>> Instantly run your Selenium tests across 300+ browser/OS combos.
>>>> Get unparalleled scalability from the best Selenium testing platform available
>>>> Simple to use. Nothing to install. Get started now for free."
>>>> http://p.sf.net/sfu/SauceLabs
>>>> _______________________________________________
>>>> Bitcoin-development mailing list
>>>> Bitcoin-development at lists.sourceforge.net
>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>
>>>
>>>
>>>
>>> --
>>> Andy Alness
>>> Software Engineer
>>> Coinbase
>>> San Francisco, CA
>>>
>>> ------------------------------------------------------------------------------
>>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>>> Instantly run your Selenium tests across 300+ browser/OS combos.
>>> Get unparalleled scalability from the best Selenium testing platform available
>>> Simple to use. Nothing to install. Get started now for free."
>>> http://p.sf.net/sfu/SauceLabs
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>>
>> --
>> Jeff Garzik
>> Bitcoin core developer and open source evangelist
>> BitPay, Inc.      https://bitpay.com/
>
>
>
> --
> Andy Alness
> Software Engineer
> Coinbase
> San Francisco, CA



-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From odinn.cyberguerrilla at riseup.net  Wed May 21 06:47:36 2014
From: odinn.cyberguerrilla at riseup.net (Odinn Cyberguerrilla)
Date: Tue, 20 May 2014 23:47:36 -0700
Subject: [Bitcoin-development] Bitcoin Cooperative Proof-of-Stake
 whitpaper
In-Reply-To: <1400602373.46778.YahooMailNeo@web160501.mail.bf1.yahoo.com>
References: <1400602373.46778.YahooMailNeo@web160501.mail.bf1.yahoo.com>
Message-ID: <6d3b8553c923f009cdb378c4a4967518.squirrel@fulvetta.riseup.net>

> I completed a whitepaper for Bitcoin a proof-of-stake version which uses a
> single nomadic verifiable mint agent and distributed replication of a
> single blockchain by compensated full nodes to achieve 6-hop, sub-second
> transaction acknowledgement times. Plus it pays dividends to holders
> instead of wasting it on miners. Subsidized transaction fees are thus
> lower.


I look at this and agree of course that the nodes are decreasing, see,
https://getaddr.bitnodes.io/   But when I see stuff in the white paper
like "misbehaving nodes" in the context of an "audit agent," a "single
non-forking blockchain," the notion of "Misbehaving nodes" that would be
"banned from the network" so as to "motivat(e) honest behavior," ~ really,
all of this does sound as though a sort of morality is being formulated
rather than a mathematical solution.

This is not to say that the white paper hasn't addressed a problem that
needs to be addressed, namely... the problem of the nodes disappearing,
and a few other things.  But to take that and then layer onto that the
issues associated with proof of stake... There does seem to be a simpler
way to address this and I think first without suggesting the complex issue
of some kind of thing that would involve dividends for those in a
proof-of-stake system, consensus achieved by stake-weighted voting, and so
forth, one would be better off removing all references to voting and
stake, and determining ways simply to incentivize more substantively those
who actually run a full node.  Additionally I am hesitant to characterize
behavior as has been described in the white paper, as it would seem that
(in such a system) there would be an inclination or a tendency to exclude
certain patterns or groups of participants rather than determine ways in
which all participants or potential peers can serve the network.



>
> https://docs.google.com/document/d/1C4m-MFnxw0JjDorzrKs_IRQRqD9ila79o0IDt6KsbcE
>
>
> Because the code is not yet written, this idea is half-baked so to speak.
> Comments appreciated on my project thread, which will be a development
> diary. I plan a hard fork of the Bitcoin blockchain in early 2016, after a
> year of public system testing, and conditioned on wide approval.
>
> https://bitcointalk.org/index.php?topic=584719.msg6397403#msg6397403
>
> -Steve
>
> Stephen L. Reed
> Austin, Texas, USA
> 512.791.7860------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform
> available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs_______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>





From alexykot at gmail.com  Wed May 21 09:23:08 2014
From: alexykot at gmail.com (Alex Kotenko)
Date: Wed, 21 May 2014 10:23:08 +0100
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <a9d48b2474c87e6d9b80b567b782ecfa@webmail.mckay.com>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
	<09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>
	<CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>
	<CAJHLa0OaAKTLR2hL6kReBFcD6FoXYV9AoqMbn0WwqYgtTNtQKw@mail.gmail.com>
	<CALDj+BY2jEL6-NwGdrh3wdcmjW_7tEDDxmyiP6woOxCg8bMQKw@mail.gmail.com>
	<ll7hps$8gs$1@ger.gmane.org>
	<CALDj+BYqMDxv+YYcrEzaZH+qFqUsme3UYuYh5Es7C6FbMZCtpg@mail.gmail.com>
	<ll7l9t$m82$1@ger.gmane.org>
	<CALDj+BamyawuTgDhzM0AyB5LWNPb_xY_BQeDHqs9t9WLPibiCQ@mail.gmail.com>
	<779f3ed92d29cfd6922a92c5d60d3f9d@webmail.mckay.com>
	<CAJHLa0O_F3MJc1KJJn+L6AjT-wa8sPunibb4rfWGGUWYSOkVOg@mail.gmail.com>
	<0f40d061612966ff809fff04d3f698eb@webmail.mckay.com>
	<a9d48b2474c87e6d9b80b567b782ecfa@webmail.mckay.com>
Message-ID: <CALDj+BZ8U29qKywO=Ejxx-WtKGvEyUg5RoYZb=j07oAOSq57yA@mail.gmail.com>

okay, I've set it up with bind forwarding requests to two dnsseeds running
on separate ports. Though I see a problem with testnet DNS seed itself. It
runs, but somehow it only returns one IP address. Exactly same DNS seeder
looking for mainnet nodes is working fine.

You can reach seeds through
mainnet seed:
dig @node.alexykot.me bitcoin-seed.alexykot.me A
or directly
dig -p 8353 @node.alexykot.me bitcoin-seed.alexykot.me A

testnet seed
dig @node.alexykot.me testnet-seed.alexykot.me A
or directly
dig -p 18353 @node.alexykot.me testnet-seed.alexykot.me A

So what can be the problem with testnet DNS seeder?


Best regards,
Alex Kotenko


2014-05-20 1:50 GMT+01:00 Robert McKay <robert at mckay.com>:

> On Tue, 20 May 2014 01:44:29 +0100, Robert McKay wrote:
> > On Mon, 19 May 2014 19:49:52 -0400, Jeff Garzik wrote:
> >> On Mon, May 19, 2014 at 4:36 PM, Robert McKay <robert at mckay.com>
> >> wrote:
> >>> It should be possible to configure bind as a DNS forwarder.. this
> >>> can
> >>> be done in a zone context.. then you can forward the different
> >>> zones
> >>> to
> >>> different dnsseed daemons running on different non-public IPs or
> >>> two
> >>> different ports on the same IP (or on one single non-public IP
> >>> since
> >>> there's really no reason to expose the dnsseed directly daemon at
> >>> all).
> >>
> >> Quite the opposite.  dnsseed data rotates through a lot of addresses
> >> if available.  Using the bind/zone-xfer system would result in fewer
> >> total addresses going through to the clients, thanks to the addition
> >> of caching levels that the bind/zone-xfer system brings.
> >>
> >> That said, if the choice is between no-service and bind, bind it is
> >> ;p
> >
> > Setting it up as a zone forwarder causes each request to go through
> > to
> > the dnsseed backend for each request.
>
> This stackoverflow describes a similar situation;
>
> http://stackoverflow.com/questions/15338232/how-to-forward-a-subzone
>
> you can additionally specify the port to forward too;
>
> http://www.zytrax.com/books/dns/ch7/queries.html#forwarders
>
> it should be possible to forward to different ports on 127.0.0.1 for
> each dnsseed instance.
>
> Rob
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform
> available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140521/e7433ef3/attachment.html>

From andreas at schildbach.de  Wed May 21 11:03:29 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Wed, 21 May 2014 13:03:29 +0200
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <CALDj+BZ8U29qKywO=Ejxx-WtKGvEyUg5RoYZb=j07oAOSq57yA@mail.gmail.com>
References: <ll29m5$r6c$1@ger.gmane.org>
	<ll5ems$6pt$1@ger.gmane.org>	<09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>	<CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>	<CAJHLa0OaAKTLR2hL6kReBFcD6FoXYV9AoqMbn0WwqYgtTNtQKw@mail.gmail.com>	<CALDj+BY2jEL6-NwGdrh3wdcmjW_7tEDDxmyiP6woOxCg8bMQKw@mail.gmail.com>	<ll7hps$8gs$1@ger.gmane.org>	<CALDj+BYqMDxv+YYcrEzaZH+qFqUsme3UYuYh5Es7C6FbMZCtpg@mail.gmail.com>	<ll7l9t$m82$1@ger.gmane.org>	<CALDj+BamyawuTgDhzM0AyB5LWNPb_xY_BQeDHqs9t9WLPibiCQ@mail.gmail.com>	<779f3ed92d29cfd6922a92c5d60d3f9d@webmail.mckay.com>	<CAJHLa0O_F3MJc1KJJn+L6AjT-wa8sPunibb4rfWGGUWYSOkVOg@mail.gmail.com>	<0f40d061612966ff809fff04d3f698eb@webmail.mckay.com>	<a9d48b2474c87e6d9b80b567b782ecfa@webmail.mckay.com>
	<CALDj+BZ8U29qKywO=Ejxx-WtKGvEyUg5RoYZb=j07oAOSq57yA@mail.gmail.com>
Message-ID: <lli161$81k$1@ger.gmane.org>

Great, thanks for this contribution!

Do you plan to have your seeds reachable on port 53 eventually?
Currently bitcoinj cannot deal with nonstandard ports I think.


On 05/21/2014 11:23 AM, Alex Kotenko wrote:
> okay, I've set it up with bind forwarding requests to two dnsseeds
> running on separate ports. Though I see a problem with testnet DNS seed
> itself. It runs, but somehow it only returns one IP address. Exactly
> same DNS seeder looking for mainnet nodes is working fine. 
> 
> You can reach seeds through
> mainnet seed:
> dig @node.alexykot.me <http://node.alexykot.me> bitcoin-seed.alexykot.me
> <http://bitcoin-seed.alexykot.me> A
> or directly
> dig -p 8353 @node.alexykot.me <http://node.alexykot.me>
> bitcoin-seed.alexykot.me <http://bitcoin-seed.alexykot.me> A
> 
> testnet seed
> dig @node.alexykot.me <http://node.alexykot.me> testnet-seed.alexykot.me
> <http://testnet-seed.alexykot.me> A
> or directly
> dig -p 18353 @node.alexykot.me <http://node.alexykot.me>
> testnet-seed.alexykot.me <http://testnet-seed.alexykot.me> A
> 
> So what can be the problem with testnet DNS seeder?
> 
> 
> Best regards, 
> Alex Kotenko
> 
> 
> 2014-05-20 1:50 GMT+01:00 Robert McKay <robert at mckay.com
> <mailto:robert at mckay.com>>:
> 
>     On Tue, 20 May 2014 01:44:29 +0100, Robert McKay wrote:
>     > On Mon, 19 May 2014 19:49:52 -0400, Jeff Garzik wrote:
>     >> On Mon, May 19, 2014 at 4:36 PM, Robert McKay <robert at mckay.com
>     <mailto:robert at mckay.com>>
>     >> wrote:
>     >>> It should be possible to configure bind as a DNS forwarder.. this
>     >>> can
>     >>> be done in a zone context.. then you can forward the different
>     >>> zones
>     >>> to
>     >>> different dnsseed daemons running on different non-public IPs or
>     >>> two
>     >>> different ports on the same IP (or on one single non-public IP
>     >>> since
>     >>> there's really no reason to expose the dnsseed directly daemon at
>     >>> all).
>     >>
>     >> Quite the opposite.  dnsseed data rotates through a lot of addresses
>     >> if available.  Using the bind/zone-xfer system would result in fewer
>     >> total addresses going through to the clients, thanks to the addition
>     >> of caching levels that the bind/zone-xfer system brings.
>     >>
>     >> That said, if the choice is between no-service and bind, bind it is
>     >> ;p
>     >
>     > Setting it up as a zone forwarder causes each request to go through
>     > to
>     > the dnsseed backend for each request.
> 
>     This stackoverflow describes a similar situation;
> 
>     http://stackoverflow.com/questions/15338232/how-to-forward-a-subzone
> 
>     you can additionally specify the port to forward too;
> 
>     http://www.zytrax.com/books/dns/ch7/queries.html#forwarders
> 
>     it should be possible to forward to different ports on 127.0.0.1 for
>     each dnsseed instance.
> 
>     Rob
> 
>     ------------------------------------------------------------------------------
>     "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>     Instantly run your Selenium tests across 300+ browser/OS combos.
>     Get unparalleled scalability from the best Selenium testing platform
>     available
>     Simple to use. Nothing to install. Get started now for free."
>     http://p.sf.net/sfu/SauceLabs
>     _______________________________________________
>     Bitcoin-development mailing list
>     Bitcoin-development at lists.sourceforge.net
>     <mailto:Bitcoin-development at lists.sourceforge.net>
>     https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> 
> 
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> 
> 
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 





From alexykot at gmail.com  Wed May 21 11:10:52 2014
From: alexykot at gmail.com (Alex Kotenko)
Date: Wed, 21 May 2014 12:10:52 +0100
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <lli161$81k$1@ger.gmane.org>
References: <ll29m5$r6c$1@ger.gmane.org> <ll5ems$6pt$1@ger.gmane.org>
	<09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>
	<CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>
	<CAJHLa0OaAKTLR2hL6kReBFcD6FoXYV9AoqMbn0WwqYgtTNtQKw@mail.gmail.com>
	<CALDj+BY2jEL6-NwGdrh3wdcmjW_7tEDDxmyiP6woOxCg8bMQKw@mail.gmail.com>
	<ll7hps$8gs$1@ger.gmane.org>
	<CALDj+BYqMDxv+YYcrEzaZH+qFqUsme3UYuYh5Es7C6FbMZCtpg@mail.gmail.com>
	<ll7l9t$m82$1@ger.gmane.org>
	<CALDj+BamyawuTgDhzM0AyB5LWNPb_xY_BQeDHqs9t9WLPibiCQ@mail.gmail.com>
	<779f3ed92d29cfd6922a92c5d60d3f9d@webmail.mckay.com>
	<CAJHLa0O_F3MJc1KJJn+L6AjT-wa8sPunibb4rfWGGUWYSOkVOg@mail.gmail.com>
	<0f40d061612966ff809fff04d3f698eb@webmail.mckay.com>
	<a9d48b2474c87e6d9b80b567b782ecfa@webmail.mckay.com>
	<CALDj+BZ8U29qKywO=Ejxx-WtKGvEyUg5RoYZb=j07oAOSq57yA@mail.gmail.com>
	<lli161$81k$1@ger.gmane.org>
Message-ID: <CALDj+BZ-F31aWURYX_SF+aYxfz2KxeynspLACzBxbmXnCUx4xw@mail.gmail.com>

Misunderstanding. Both seeds are available on port 53 via BIND forwarding.
Just also each DNS seed is available separately on it's own port.


Best regards,
Alex Kotenko


2014-05-21 12:03 GMT+01:00 Andreas Schildbach <andreas at schildbach.de>:

> Great, thanks for this contribution!
>
> Do you plan to have your seeds reachable on port 53 eventually?
> Currently bitcoinj cannot deal with nonstandard ports I think.
>
>
> On 05/21/2014 11:23 AM, Alex Kotenko wrote:
> > okay, I've set it up with bind forwarding requests to two dnsseeds
> > running on separate ports. Though I see a problem with testnet DNS seed
> > itself. It runs, but somehow it only returns one IP address. Exactly
> > same DNS seeder looking for mainnet nodes is working fine.
> >
> > You can reach seeds through
> > mainnet seed:
> > dig @node.alexykot.me <http://node.alexykot.me> bitcoin-seed.alexykot.me
> > <http://bitcoin-seed.alexykot.me> A
> > or directly
> > dig -p 8353 @node.alexykot.me <http://node.alexykot.me>
> > bitcoin-seed.alexykot.me <http://bitcoin-seed.alexykot.me> A
> >
> > testnet seed
> > dig @node.alexykot.me <http://node.alexykot.me> testnet-seed.alexykot.me
> > <http://testnet-seed.alexykot.me> A
> > or directly
> > dig -p 18353 @node.alexykot.me <http://node.alexykot.me>
> > testnet-seed.alexykot.me <http://testnet-seed.alexykot.me> A
> >
> > So what can be the problem with testnet DNS seeder?
> >
> >
> > Best regards,
> > Alex Kotenko
> >
> >
> > 2014-05-20 1:50 GMT+01:00 Robert McKay <robert at mckay.com
> > <mailto:robert at mckay.com>>:
> >
> >     On Tue, 20 May 2014 01:44:29 +0100, Robert McKay wrote:
> >     > On Mon, 19 May 2014 19:49:52 -0400, Jeff Garzik wrote:
> >     >> On Mon, May 19, 2014 at 4:36 PM, Robert McKay <robert at mckay.com
> >     <mailto:robert at mckay.com>>
> >     >> wrote:
> >     >>> It should be possible to configure bind as a DNS forwarder.. this
> >     >>> can
> >     >>> be done in a zone context.. then you can forward the different
> >     >>> zones
> >     >>> to
> >     >>> different dnsseed daemons running on different non-public IPs or
> >     >>> two
> >     >>> different ports on the same IP (or on one single non-public IP
> >     >>> since
> >     >>> there's really no reason to expose the dnsseed directly daemon at
> >     >>> all).
> >     >>
> >     >> Quite the opposite.  dnsseed data rotates through a lot of
> addresses
> >     >> if available.  Using the bind/zone-xfer system would result in
> fewer
> >     >> total addresses going through to the clients, thanks to the
> addition
> >     >> of caching levels that the bind/zone-xfer system brings.
> >     >>
> >     >> That said, if the choice is between no-service and bind, bind it
> is
> >     >> ;p
> >     >
> >     > Setting it up as a zone forwarder causes each request to go through
> >     > to
> >     > the dnsseed backend for each request.
> >
> >     This stackoverflow describes a similar situation;
> >
> >     http://stackoverflow.com/questions/15338232/how-to-forward-a-subzone
> >
> >     you can additionally specify the port to forward too;
> >
> >     http://www.zytrax.com/books/dns/ch7/queries.html#forwarders
> >
> >     it should be possible to forward to different ports on 127.0.0.1 for
> >     each dnsseed instance.
> >
> >     Rob
> >
> >
> ------------------------------------------------------------------------------
> >     "Accelerate Dev Cycles with Automated Cross-Browser Testing - For
> FREE
> >     Instantly run your Selenium tests across 300+ browser/OS combos.
> >     Get unparalleled scalability from the best Selenium testing platform
> >     available
> >     Simple to use. Nothing to install. Get started now for free."
> >     http://p.sf.net/sfu/SauceLabs
> >     _______________________________________________
> >     Bitcoin-development mailing list
> >     Bitcoin-development at lists.sourceforge.net
> >     <mailto:Bitcoin-development at lists.sourceforge.net>
> >     https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
> >
> >
> >
> >
> ------------------------------------------------------------------------------
> > "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> > Instantly run your Selenium tests across 300+ browser/OS combos.
> > Get unparalleled scalability from the best Selenium testing platform
> available
> > Simple to use. Nothing to install. Get started now for free."
> > http://p.sf.net/sfu/SauceLabs
> >
> >
> >
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
>
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform
> available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140521/aae8a29d/attachment.html>

From andreas at schildbach.de  Wed May 21 11:26:21 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Wed, 21 May 2014 13:26:21 +0200
Subject: [Bitcoin-development] DNS seeds unstable
In-Reply-To: <CALDj+BZ-F31aWURYX_SF+aYxfz2KxeynspLACzBxbmXnCUx4xw@mail.gmail.com>
References: <ll29m5$r6c$1@ger.gmane.org>
	<ll5ems$6pt$1@ger.gmane.org>	<09E70F88-DA1C-4E3F-9342-547FB8794EAB@heliacal.net>	<CALDj+BZrn6TBjdVjGkc293SLAAcqzni+-7daFpZAq5gSaL1cKw@mail.gmail.com>	<CAJHLa0OaAKTLR2hL6kReBFcD6FoXYV9AoqMbn0WwqYgtTNtQKw@mail.gmail.com>	<CALDj+BY2jEL6-NwGdrh3wdcmjW_7tEDDxmyiP6woOxCg8bMQKw@mail.gmail.com>	<ll7hps$8gs$1@ger.gmane.org>	<CALDj+BYqMDxv+YYcrEzaZH+qFqUsme3UYuYh5Es7C6FbMZCtpg@mail.gmail.com>	<ll7l9t$m82$1@ger.gmane.org>	<CALDj+BamyawuTgDhzM0AyB5LWNPb_xY_BQeDHqs9t9WLPibiCQ@mail.gmail.com>	<779f3ed92d29cfd6922a92c5d60d3f9d@webmail.mckay.com>	<CAJHLa0O_F3MJc1KJJn+L6AjT-wa8sPunibb4rfWGGUWYSOkVOg@mail.gmail.com>	<0f40d061612966ff809fff04d3f698eb@webmail.mckay.com>	<a9d48b2474c87e6d9b80b567b782ecfa@webmail.mckay.com>	<CALDj+BZ8U29qKywO=Ejxx-WtKGvEyUg5RoYZb=j07oAOSq57yA@mail.gmail.com>	<lli161$81k$1@ger.gmane.org>
	<CALDj+BZ-F31aWURYX_SF+aYxfz2KxeynspLACzBxbmXnCUx4xw@mail.gmail.com>
Message-ID: <lli2gt$t1n$1@ger.gmane.org>

Hmmm, not for me:

$ nslookup bitcoin-seed.alexykot.me
Server:		127.0.1.1
Address:	127.0.1.1#53

** server can't find bitcoin-seed.alexykot.me: SERVFAIL

$ nslookup testnet-seed.alexykot.me
Server:		127.0.1.1
Address:	127.0.1.1#53

** server can't find testnet-seed.alexykot.me: SERVFAIL


Can you look up in the logfile what requests I just made?



On 05/21/2014 01:10 PM, Alex Kotenko wrote:
> Misunderstanding. Both seeds are available on port 53 via BIND forwarding.
> Just also each DNS seed is available separately on it's own port.
> 
> 
> Best regards, 
> Alex Kotenko
> 
> 
> 2014-05-21 12:03 GMT+01:00 Andreas Schildbach <andreas at schildbach.de
> <mailto:andreas at schildbach.de>>:
> 
>     Great, thanks for this contribution!
> 
>     Do you plan to have your seeds reachable on port 53 eventually?
>     Currently bitcoinj cannot deal with nonstandard ports I think.
> 
> 
>     On 05/21/2014 11:23 AM, Alex Kotenko wrote:
>     > okay, I've set it up with bind forwarding requests to two dnsseeds
>     > running on separate ports. Though I see a problem with testnet DNS
>     seed
>     > itself. It runs, but somehow it only returns one IP address. Exactly
>     > same DNS seeder looking for mainnet nodes is working fine.
>     >
>     > You can reach seeds through
>     > mainnet seed:
>     > dig @node.alexykot.me <http://node.alexykot.me>
>     <http://node.alexykot.me> bitcoin-seed.alexykot.me
>     <http://bitcoin-seed.alexykot.me>
>     > <http://bitcoin-seed.alexykot.me> A
>     > or directly
>     > dig -p 8353 @node.alexykot.me <http://node.alexykot.me>
>     <http://node.alexykot.me>
>     > bitcoin-seed.alexykot.me <http://bitcoin-seed.alexykot.me>
>     <http://bitcoin-seed.alexykot.me> A
>     >
>     > testnet seed
>     > dig @node.alexykot.me <http://node.alexykot.me>
>     <http://node.alexykot.me> testnet-seed.alexykot.me
>     <http://testnet-seed.alexykot.me>
>     > <http://testnet-seed.alexykot.me> A
>     > or directly
>     > dig -p 18353 @node.alexykot.me <http://node.alexykot.me>
>     <http://node.alexykot.me>
>     > testnet-seed.alexykot.me <http://testnet-seed.alexykot.me>
>     <http://testnet-seed.alexykot.me> A
>     >
>     > So what can be the problem with testnet DNS seeder?
>     >
>     >
>     > Best regards,
>     > Alex Kotenko
>     >
>     >
>     > 2014-05-20 1:50 GMT+01:00 Robert McKay <robert at mckay.com
>     <mailto:robert at mckay.com>
>     > <mailto:robert at mckay.com <mailto:robert at mckay.com>>>:
>     >
>     >     On Tue, 20 May 2014 01:44:29 +0100, Robert McKay wrote:
>     >     > On Mon, 19 May 2014 19:49:52 -0400, Jeff Garzik wrote:
>     >     >> On Mon, May 19, 2014 at 4:36 PM, Robert McKay
>     <robert at mckay.com <mailto:robert at mckay.com>
>     >     <mailto:robert at mckay.com <mailto:robert at mckay.com>>>
>     >     >> wrote:
>     >     >>> It should be possible to configure bind as a DNS
>     forwarder.. this
>     >     >>> can
>     >     >>> be done in a zone context.. then you can forward the different
>     >     >>> zones
>     >     >>> to
>     >     >>> different dnsseed daemons running on different non-public
>     IPs or
>     >     >>> two
>     >     >>> different ports on the same IP (or on one single non-public IP
>     >     >>> since
>     >     >>> there's really no reason to expose the dnsseed directly
>     daemon at
>     >     >>> all).
>     >     >>
>     >     >> Quite the opposite.  dnsseed data rotates through a lot of
>     addresses
>     >     >> if available.  Using the bind/zone-xfer system would result
>     in fewer
>     >     >> total addresses going through to the clients, thanks to the
>     addition
>     >     >> of caching levels that the bind/zone-xfer system brings.
>     >     >>
>     >     >> That said, if the choice is between no-service and bind,
>     bind it is
>     >     >> ;p
>     >     >
>     >     > Setting it up as a zone forwarder causes each request to go
>     through
>     >     > to
>     >     > the dnsseed backend for each request.
>     >
>     >     This stackoverflow describes a similar situation;
>     >
>     >    
>     http://stackoverflow.com/questions/15338232/how-to-forward-a-subzone
>     >
>     >     you can additionally specify the port to forward too;
>     >
>     >     http://www.zytrax.com/books/dns/ch7/queries.html#forwarders
>     >
>     >     it should be possible to forward to different ports on
>     127.0.0.1 for
>     >     each dnsseed instance.
>     >
>     >     Rob
>     >
>     >    
>     ------------------------------------------------------------------------------
>     >     "Accelerate Dev Cycles with Automated Cross-Browser Testing -
>     For FREE
>     >     Instantly run your Selenium tests across 300+ browser/OS combos.
>     >     Get unparalleled scalability from the best Selenium testing
>     platform
>     >     available
>     >     Simple to use. Nothing to install. Get started now for free."
>     >     http://p.sf.net/sfu/SauceLabs
>     >     _______________________________________________
>     >     Bitcoin-development mailing list
>     >     Bitcoin-development at lists.sourceforge.net
>     <mailto:Bitcoin-development at lists.sourceforge.net>
>     >     <mailto:Bitcoin-development at lists.sourceforge.net
>     <mailto:Bitcoin-development at lists.sourceforge.net>>
>     >     https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>     >
>     >
>     >
>     >
>     >
>     ------------------------------------------------------------------------------
>     > "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>     > Instantly run your Selenium tests across 300+ browser/OS combos.
>     > Get unparalleled scalability from the best Selenium testing
>     platform available
>     > Simple to use. Nothing to install. Get started now for free."
>     > http://p.sf.net/sfu/SauceLabs
>     >
>     >
>     >
>     > _______________________________________________
>     > Bitcoin-development mailing list
>     > Bitcoin-development at lists.sourceforge.net
>     <mailto:Bitcoin-development at lists.sourceforge.net>
>     > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>     >
> 
> 
> 
>     ------------------------------------------------------------------------------
>     "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>     Instantly run your Selenium tests across 300+ browser/OS combos.
>     Get unparalleled scalability from the best Selenium testing platform
>     available
>     Simple to use. Nothing to install. Get started now for free."
>     http://p.sf.net/sfu/SauceLabs
>     _______________________________________________
>     Bitcoin-development mailing list
>     Bitcoin-development at lists.sourceforge.net
>     <mailto:Bitcoin-development at lists.sourceforge.net>
>     https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> 
> 
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> 
> 
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 





From laanwj at gmail.com  Wed May 21 12:23:38 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 21 May 2014 14:23:38 +0200
Subject: [Bitcoin-development] PSA: Please sign your git commits
Message-ID: <CA+s+GJBNWh0Py9KB4Y+B19ACeHOygtkLrPw5SbZ0SrVs50pqvg@mail.gmail.com>

Hello all,

When you're contributing to Bitcoin Core development please sign your
git commits. This is easy to do and will help in assuring the
integrity of the tree.

How to sign your commits?
------------------------------------------

Provide the `-S` flag (or `--gpg-sign`) to git commit when you commit
your changes, for example

    git commit -m "Commit message" -S

Optionally you can provide a key id after the -S option to sign with a
specific key.

What if I forgot?
-------------------------

You can retroactively sign your previous commit using --amend, for example

    git commit -S --amend

If you need to go further back, you can use the interactive rebase
command with 'edit'. Replace HEAD~3 with the base commit from which
you want to start.

    git rebase -i HEAD~3

Replace 'pick' by 'edit' for the commit that you want to sign and the
rebasing will stop after that commit. Then you can amend the commit as
above. Afterwards, do

    git rebase --continue

As this will rewrite history, you cannot do this when your commit is
already merged. In that case, too bad, better luck next time.

If you rewrite history for another reason - for example when squashing
commits - make sure that you re-sign as the signatures will be lost.

How to check if commits are signed?
-------------------------------------------------------

Use git log with show-signature,

    git log --show-signature

    commit 6fcdad787f1fb381a3a0fe6b1a1e45477426dccb
    gpg: Signature made Wed 21 May 2014 12:27:55 PM CEST using RSA key
ID 2346C9A6
    gpg: Good signature from "Wladimir J. van der Laan <laanwj at gmail.com>"
    Author: Wladimir J. van der Laan <laanwj at gmail.com>
    Date:   Wed May 21 12:27:37 2014 +0200

        qt: Periodic language update
    ...

You can also pass the --show-signature option to `git show` to check a
single commit.

If you do this on the current repository you'll see that I'm almost
the only person signing commits. I would like more people to get into
this habit.

How to sign merges?
--------------------------------

When using the github interface to merge a pull request, the resulting
merge commit is not signed.

Pieter Wullie wrote a script that simplifies merging and signing. It
can be found in contrib/devtools. Setup instructions can be found in
the README.md in that directory. After setting it up for the
repository you can use the script in the following way:

    contrib/devtools/github-merge.sh 1234

Replace 1234 by the pull request number that you want to merge. It
will merge the pull request and drop you into a shell so you can
verify changes and test. Once satisfied, exit the shell and answer the
questions to merge and sign it and push upstream automatically (or
not).

Please use this script when possible for merging instead of the github
interface.

--------------------------

Wladimir



From jgarzik at bitpay.com  Wed May 21 14:32:54 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Wed, 21 May 2014 10:32:54 -0400
Subject: [Bitcoin-development] PSA: Extending BIP 70 / payment protocol
Message-ID: <CAJHLa0P_HWm-qqKJxandJfNeN-KoBVwsW14biyNdnu4JESbKew@mail.gmail.com>

Please put any payment protocol extensions into a new draft BIP.  BIP
70 should not be updated continuously.

Mimic the IETF, where new RFCs are produced as protocols are extended.
 Once published, an IETF RFC is considered static.

That said, I think it is OK to be smart, and break the "static" rule a
bit for significant BIP bugs, or harmless maintenance of
links-to-resources.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From benjamin.l.cordes at gmail.com  Wed May 21 15:52:45 2014
From: benjamin.l.cordes at gmail.com (Benjamin Cordes)
Date: Wed, 21 May 2014 17:52:45 +0200
Subject: [Bitcoin-development] Bitcoin Cooperative Proof-of-Stake
	whitpaper
In-Reply-To: <f0c1b2dc-963a-4ea2-82c0-31b0d339d46c@email.android.com>
References: <1400602373.46778.YahooMailNeo@web160501.mail.bf1.yahoo.com>
	<f0c1b2dc-963a-4ea2-82c0-31b0d339d46c@email.android.com>
Message-ID: <CAOoPuRbZgj=F65ifGNpx7dKku0wipn9ujGVdV=20831shfQ1Cw@mail.gmail.com>

I'm doing a hard fork, too. In my version 78% of the wealth will go to me,
which I will redistribute on based on personal preferences. Come and join
me into a new and obviously superior system.

More seriously though: the paper is not bad, but I can guarantee you that
Bitcoin will *never* change that drastically. That's the whole point. It
has an indestructible kernel (think DNA). Rather it will do a slow death,
probably in 5-10 years. If you care for PoS than just launch your own.


On Tue, May 20, 2014 at 6:42 PM, Nick Simpson <nick at mynicknet.com> wrote:

> Referring to the subsidy for miners as "wasting it on miners" isn't going
> to garner you much favor.
>
>
> On May 20, 2014 11:12:53 AM CDT, Stephen Reed <stephenreed at yahoo.com>
> wrote:
>
>> I completed a whitepaper for Bitcoin a proof-of-stake version which uses
>> a single nomadic verifiable mint agent and distributed replication of a
>> single blockchain by compensated full nodes to achieve 6-hop, sub-second
>> transaction acknowledgement times. Plus it pays dividends to holders
>> instead of wasting it on miners. Subsidized transaction fees are thus lower.
>>
>>
>> https://docs.google.com/document/d/1C4m-MFnxw0JjDorzrKs_IRQRqD9ila79o0IDt6KsbcE
>>
>> Because the code is not yet written, this idea is half-baked so to speak.
>> Comments appreciated on my project thread, which will be a development
>> diary. I plan a hard fork of the Bitcoin blockchain in early 2016, after a
>> year of public system testing, and conditioned on wide approval.
>>
>> https://bitcointalk.org/index.php?topic=584719.msg6397403#msg6397403
>>
>> -Steve
>>
>> Stephen L. Reed
>> Austin, Texas, USA
>> 512.791.7860
>>
>> ------------------------------
>>
>> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
>> Instantly run your Selenium tests across 300+ browser/OS combos.
>> Get unparalleled scalability from the best Selenium testing platform available
>> Simple to use. Nothing to install. Get started now for free."
>> http://p.sf.net/sfu/SauceLabs
>>
>> ------------------------------
>>
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform
> available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140521/4ae8a65a/attachment.html>

From laanwj at gmail.com  Wed May 21 17:10:20 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 21 May 2014 19:10:20 +0200
Subject: [Bitcoin-development] PSA: Please sign your git commits
In-Reply-To: <7B48B9D4-5FB0-42CA-A462-C20D3F345A9A@beams.io>
References: <CA+s+GJBNWh0Py9KB4Y+B19ACeHOygtkLrPw5SbZ0SrVs50pqvg@mail.gmail.com>
	<7B48B9D4-5FB0-42CA-A462-C20D3F345A9A@beams.io>
Message-ID: <CA+s+GJC8=OHmmF7fc-fT8fQDWE1uNcCS8-ELEKr0MjQ4CpbPBA@mail.gmail.com>

Hello Chris,

On Wed, May 21, 2014 at 6:39 PM, Chris Beams <chris at beams.io> wrote:
> I'm personally happy to comply with this for any future commits, but wonder
> if you've considered the arguments against commit signing [1]? Note
> especially the reference therein to Linus' original negative opinion on
> signed commits [2].

Yes, I've read it. But would his alternative, signing tags, really
help us more here? How would that work? How would we have to structure
the process?

At least signed commits are easy to integrate into the current
development process with github - only a different way of merging has
to be used.

> I came across these when searching for a way to enable signing by default,
> e.g. a `git config` option that might allow for this. Unfortunately, there
> isn't one, meaning it's likely that most folks will forget to do this most
> of the time.

I'll remind people if they forget to do it, but I won't require it. As
you say, that would be an extra barrier, and I'm not suggesting this
because I to see people jumping through bureaucratic hoops.
But it is a pretty simple thing to do...

> If you're really serious about it, you should probably reject pull requests
> without signed commits; otherwise, signing becomes meaningless because only
> honest authors do it, and forgetful or malicious ones can avoid it without
> penalty.

This is not because I'm afraid of malicious authors, but because I
want to reduce the risk that github hacks would pose.

Something to watch for would be authors that normally sign pull
requests/merges and suddenly don't. Someone malicious may have gained
access to their github account. This just adds an extra layer of
protection.

Cheers,
Wladimir



From chris at beams.io  Wed May 21 16:39:44 2014
From: chris at beams.io (Chris Beams)
Date: Wed, 21 May 2014 18:39:44 +0200
Subject: [Bitcoin-development] PSA: Please sign your git commits
In-Reply-To: <CA+s+GJBNWh0Py9KB4Y+B19ACeHOygtkLrPw5SbZ0SrVs50pqvg@mail.gmail.com>
References: <CA+s+GJBNWh0Py9KB4Y+B19ACeHOygtkLrPw5SbZ0SrVs50pqvg@mail.gmail.com>
Message-ID: <7B48B9D4-5FB0-42CA-A462-C20D3F345A9A@beams.io>

Hi Wladimir,

I'm personally happy to comply with this for any future commits, but wonder if you've considered the arguments against commit signing [1]? Note especially the reference therein to Linus' original negative opinion on signed commits [2].

I came across these when searching for a way to enable signing by default, e.g. a `git config` option that might allow for this. Unfortunately, there isn't one, meaning it's likely that most folks will forget to do this most of the time.

If you're really serious about it, you should probably reject pull requests without signed commits; otherwise, signing becomes meaningless because only honest authors do it, and forgetful or malicious ones can avoid it without penalty.

That said, I'm not sure that creating such a barrier to contribution is worth it.

- Chris

[1]: http://stackoverflow.com/a/10166916/622403
[2]: http://git.661346.n2.nabble.com/GPG-signing-for-git-commit-td2582986.html

On May 21, 2014, at 2:23 PM, Wladimir <laanwj at gmail.com> wrote:

> Hello all,
> 
> When you're contributing to Bitcoin Core development please sign your
> git commits. This is easy to do and will help in assuring the
> integrity of the tree.
> 
> How to sign your commits?
> ------------------------------------------
> 
> Provide the `-S` flag (or `--gpg-sign`) to git commit when you commit
> your changes, for example
> 
>    git commit -m "Commit message" -S
> 
> Optionally you can provide a key id after the -S option to sign with a
> specific key.
> 
> What if I forgot?
> -------------------------
> 
> You can retroactively sign your previous commit using --amend, for example
> 
>    git commit -S --amend
> 
> If you need to go further back, you can use the interactive rebase
> command with 'edit'. Replace HEAD~3 with the base commit from which
> you want to start.
> 
>    git rebase -i HEAD~3
> 
> Replace 'pick' by 'edit' for the commit that you want to sign and the
> rebasing will stop after that commit. Then you can amend the commit as
> above. Afterwards, do
> 
>    git rebase --continue
> 
> As this will rewrite history, you cannot do this when your commit is
> already merged. In that case, too bad, better luck next time.
> 
> If you rewrite history for another reason - for example when squashing
> commits - make sure that you re-sign as the signatures will be lost.
> 
> How to check if commits are signed?
> -------------------------------------------------------
> 
> Use git log with show-signature,
> 
>    git log --show-signature
> 
>    commit 6fcdad787f1fb381a3a0fe6b1a1e45477426dccb
>    gpg: Signature made Wed 21 May 2014 12:27:55 PM CEST using RSA key
> ID 2346C9A6
>    gpg: Good signature from "Wladimir J. van der Laan <laanwj at gmail.com>"
>    Author: Wladimir J. van der Laan <laanwj at gmail.com>
>    Date:   Wed May 21 12:27:37 2014 +0200
> 
>        qt: Periodic language update
>    ...
> 
> You can also pass the --show-signature option to `git show` to check a
> single commit.
> 
> If you do this on the current repository you'll see that I'm almost
> the only person signing commits. I would like more people to get into
> this habit.
> 
> How to sign merges?
> --------------------------------
> 
> When using the github interface to merge a pull request, the resulting
> merge commit is not signed.
> 
> Pieter Wullie wrote a script that simplifies merging and signing. It
> can be found in contrib/devtools. Setup instructions can be found in
> the README.md in that directory. After setting it up for the
> repository you can use the script in the following way:
> 
>    contrib/devtools/github-merge.sh 1234
> 
> Replace 1234 by the pull request number that you want to merge. It
> will merge the pull request and drop you into a shell so you can
> verify changes and test. Once satisfied, exit the shell and answer the
> questions to merge and sign it and push upstream automatically (or
> not).
> 
> Please use this script when possible for merging instead of the github
> interface.
> 
> --------------------------
> 
> Wladimir
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140521/39a9fcfc/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140521/39a9fcfc/attachment.sig>

From mark at monetize.io  Wed May 21 20:30:25 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Wed, 21 May 2014 13:30:25 -0700
Subject: [Bitcoin-development] PSA: Please sign your git commits
In-Reply-To: <CA+s+GJC8=OHmmF7fc-fT8fQDWE1uNcCS8-ELEKr0MjQ4CpbPBA@mail.gmail.com>
References: <CA+s+GJBNWh0Py9KB4Y+B19ACeHOygtkLrPw5SbZ0SrVs50pqvg@mail.gmail.com>	<7B48B9D4-5FB0-42CA-A462-C20D3F345A9A@beams.io>
	<CA+s+GJC8=OHmmF7fc-fT8fQDWE1uNcCS8-ELEKr0MjQ4CpbPBA@mail.gmail.com>
Message-ID: <537D0CE1.3000608@monetize.io>

On 05/21/2014 10:10 AM, Wladimir wrote:
> On Wed, May 21, 2014 at 6:39 PM, Chris Beams <chris at beams.io> wrote:
>> I'm personally happy to comply with this for any future commits, but wonder
>> if you've considered the arguments against commit signing [1]? Note
>> especially the reference therein to Linus' original negative opinion on
>> signed commits [2].
> 
> Yes, I've read it. But would his alternative, signing tags, really
> help us more here?

Honest question: what would signed commits do to help us here anyway?
What's the problem being solved?

Unfortunately git places signatures in the history itself, so it's not
like we could use easily use signatures to indicate acceptance after
code review, like we could if we were using monotone for example. Git
just wasn't designed for a commit-signing workflow.



From dave at dtrt.org  Wed May 21 20:25:02 2014
From: dave at dtrt.org (David A. Harding)
Date: Wed, 21 May 2014 16:25:02 -0400
Subject: [Bitcoin-development] PSA: Please sign your git commits
In-Reply-To: <7B48B9D4-5FB0-42CA-A462-C20D3F345A9A@beams.io>
References: <CA+s+GJBNWh0Py9KB4Y+B19ACeHOygtkLrPw5SbZ0SrVs50pqvg@mail.gmail.com>
	<7B48B9D4-5FB0-42CA-A462-C20D3F345A9A@beams.io>
Message-ID: <20140521202502.GA439@localhost.localdomain>

On Wed, May 21, 2014 at 06:39:44PM +0200, Chris Beams wrote:
> I [was] searching for a way to enable signing by default [...]
> Unfortunately, there isn't one, meaning it's likely that most folks
> will forget to do this most of the time.

For all of my projects, I now I put this script in
.git/hooks/post-commit and post-merge:

    #!/bin/bash -eu

    if ! git log -n1 --show-signature | grep -q 'gpg: Good signature'
    then
        yes "FORGOT TO SIGN COMMIT MESSAGE"
        exit 1
    fi

So anytime I forget to sign, I get an obvious error and can immediately
run git commit --amend -S.

To automatically add a script like the one above to all new projects (plus
quickly add it old current projects), you can follow these instructions:

    http://stackoverflow.com/questions/2293498/git-commit-hooks-global-settings

> If you're really serious about it, you should probably reject pull
> requests without signed commits; otherwise, signing becomes
> meaningless because only honest authors do it

I find signing my commits quite useful even on projects without a
default signing policy because it lets me diff from the last time I
provably reviewed the code.  Here's my script for that:

    #!/bin/bash -eu

    KEY=F29EC4B7

    last_signed_commit=$( git log --topo-order --show-signature --pretty=oneline \
        | grep -m1 " gpg: Signature made.*RSA key ID $KEY" \
        | sed 's/ .*//' \
        | grep .
    ) || { echo "No signed commit found.  Dying..." ; exit 1 ; }

    set -x
    git diff $last_signed_commit

By diffing against the last signed commit I made, I also review any
commits that were made using my name but which I didn't actually make,
such as squashes and rebases of my commits (and, of course, forgeries).

For anyone who's bored and wants to read a lot of text, I think the
definitive work on git signing is this:

    http://mikegerwitz.com/papers/git-horror-story.html

-Dave
-- 
David A. Harding



From gmaxwell at gmail.com  Wed May 21 21:02:07 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 21 May 2014 14:02:07 -0700
Subject: [Bitcoin-development] PSA: Please sign your git commits
In-Reply-To: <537D0CE1.3000608@monetize.io>
References: <CA+s+GJBNWh0Py9KB4Y+B19ACeHOygtkLrPw5SbZ0SrVs50pqvg@mail.gmail.com>
	<7B48B9D4-5FB0-42CA-A462-C20D3F345A9A@beams.io>
	<CA+s+GJC8=OHmmF7fc-fT8fQDWE1uNcCS8-ELEKr0MjQ4CpbPBA@mail.gmail.com>
	<537D0CE1.3000608@monetize.io>
Message-ID: <CAAS2fgSN00Y2XUqLoft9=Fq1GfWvSYQfXdD=RE8890iOU5asRQ@mail.gmail.com>

On Wed, May 21, 2014 at 1:30 PM, Mark Friedenbach <mark at monetize.io> wrote:
> Honest question: what would signed commits do to help us here anyway?
> What's the problem being solved?
>
> Unfortunately git places signatures in the history itself, so it's not
> like we could use easily use signatures to indicate acceptance after
> code review, like we could if we were using monotone for example. Git
> just wasn't designed for a commit-signing workflow.

Just makes it easier to sort out things like your git account (or the
git site) being compromised and used to submit commits.



From chris at beams.io  Thu May 22 01:09:35 2014
From: chris at beams.io (Chris Beams)
Date: Thu, 22 May 2014 03:09:35 +0200
Subject: [Bitcoin-development] PSA: Please sign your git commits
In-Reply-To: <20140521202502.GA439@localhost.localdomain>
References: <CA+s+GJBNWh0Py9KB4Y+B19ACeHOygtkLrPw5SbZ0SrVs50pqvg@mail.gmail.com>
	<7B48B9D4-5FB0-42CA-A462-C20D3F345A9A@beams.io>
	<20140521202502.GA439@localhost.localdomain>
Message-ID: <D60239BA-5329-463F-9870-7B28661E9581@beams.io>


On May 21, 2014, at 10:25 PM, David A. Harding <dave at dtrt.org> wrote:

> On Wed, May 21, 2014 at 06:39:44PM +0200, Chris Beams wrote:
>> I [was] searching for a way to enable signing by default [...]
>> Unfortunately, there isn't one, meaning it's likely that most folks
>> will forget to do this most of the time.
> 
> For all of my projects, I now I put this script in
> .git/hooks/post-commit and post-merge:
> 
>    #!/bin/bash -eu
> 
>    if ! git log -n1 --show-signature | grep -q 'gpg: Good signature'
>    then
>        yes "FORGOT TO SIGN COMMIT MESSAGE"
>        exit 1
>    fi

Funny, I was just in the middle of writing a pre-push hook to do something similar when I decided to check my email :) Your post-commit approach is indeed simpler, so I've gone with it for the moment [1]. Thanks.

However, I noticed in the process of testing that this approach messes with rebase workflows. For example: if I make several commits (all of which are properly signed), and then rebase to reorder them, rebase ends up hanging because it delegates to `commit` and the use of `yes` in the post-commit hook blocks forever. I've changed `yes` to `echo` to avoid this, but it still means that one must be rather diligent to keep signatures in place when rebasing. Gerwitz does address rebasing in the presence of commit sigs in the "horror story" doc you linked to [2], but there's no magic: this makes the whole rebasing process considerably more tedious, and linearly so with however many commits you're modifying.

This may amount to a rationale for going with a pre-push hook after all, i.e. in order to defer the check for signatures until the last possible moment. This would allow for cheap iterative rebasing once again.

I suppose the proper solution would be a `git config` option such as 'commit.sign', that if set to true would mean your commits are always signed, even if rebase is the one calling `commit`. This would obviate the need for the alias I mention below as well.


> So anytime I forget to sign, I get an obvious error and can immediately
> run git commit --amend -S.

If one is already in the habit of using an alias for `commit` (I've long used `ci` for concision), the -S can be included in the alias:

    git config alias.ci 'commit -S'


> To automatically add a script like the one above to all new projects (plus
> quickly add it old current projects), you can follow these instructions:
> 
>    http://stackoverflow.com/questions/2293498/git-commit-hooks-global-settings

This was a great tip, thanks!

- Chris

[1]: https://github.com/cbeams/dotfiles/commit/58d6942
[2]: http://mikegerwitz.com/papers/git-horror-story.html#_option_3
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140522/16681d8b/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140522/16681d8b/attachment.sig>

From wtogami at gmail.com  Thu May 22 02:28:56 2014
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Wed, 21 May 2014 16:28:56 -1000
Subject: [Bitcoin-development] Bitcoin Core Nightly Builds
In-Reply-To: <CAEz79PoA=YRQYRwFRwn674fjf8ac_QyBHs_MwPR6bvzdWWtPUw@mail.gmail.com>
References: <CAEz79PoA=YRQYRwFRwn674fjf8ac_QyBHs_MwPR6bvzdWWtPUw@mail.gmail.com>
Message-ID: <CAEz79PoQcUsSUgMG4opFy+ypYKVutAsRQBMH15B2G-uu+x3=yw@mail.gmail.com>

https://bitcointalk.org/index.php?topic=571414.0
Thanks to the efforts of Cory Fields, Bitcoin Core now has deterministic
builds for MacOS X.  The nightly builder now has Windows, Linux and MacOS X
test builds available for download.

Warren


On Wed, Apr 16, 2014 at 3:43 PM, Warren Togami Jr. <wtogami at gmail.com>wrote:

> The Bitcoin Core developers have a desire to do a mostly bug-fix, cleanup
> and translation update release in v0.9.2 a few weeks from now.  You do not
> need to be a developer to help!  With these unofficial nightly builds,
> power users can more easily aid in testing of the master branch which will
> help to find bugs and polish things up faster.  Additionally translators
> can more easily run the latest code and see what strings need to be
> translated as we rapidly approach the next stable release.
>
> https://bitcointalk.org/index.php?topic=571414.0
> Read more details here.
>
> Warren Togami
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140521/81190a0e/attachment.html>

From jgarzik at bitpay.com  Thu May 22 18:06:10 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Thu, 22 May 2014 14:06:10 -0400
Subject: [Bitcoin-development] PSA: Please sign your git commits
In-Reply-To: <CAAS2fgSN00Y2XUqLoft9=Fq1GfWvSYQfXdD=RE8890iOU5asRQ@mail.gmail.com>
References: <CA+s+GJBNWh0Py9KB4Y+B19ACeHOygtkLrPw5SbZ0SrVs50pqvg@mail.gmail.com>
	<7B48B9D4-5FB0-42CA-A462-C20D3F345A9A@beams.io>
	<CA+s+GJC8=OHmmF7fc-fT8fQDWE1uNcCS8-ELEKr0MjQ4CpbPBA@mail.gmail.com>
	<537D0CE1.3000608@monetize.io>
	<CAAS2fgSN00Y2XUqLoft9=Fq1GfWvSYQfXdD=RE8890iOU5asRQ@mail.gmail.com>
Message-ID: <CAJHLa0NNMKW57r2cRsu3a1UFSf5MSp-EWATqf--DKTe-=n26CA@mail.gmail.com>

Related:  Current multi-sig wallet technology being rolled out now,
with 2FA and other fancy doodads, is now arguably more secure than my
PGP keyring.  My PGP keyring is, to draw an analogy, a non-multisig
wallet (set of keys), with all the associated theft/data
destruction/backup risks.

The more improvements I see in bitcoin wallets, the more antiquated my
PGP keyring appears.  Zero concept of multisig.  The PGP keyring
compromise process is rarely exercised.  2FA is lacking.  At least
offline signing works well. Mostly.



On Wed, May 21, 2014 at 5:02 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> On Wed, May 21, 2014 at 1:30 PM, Mark Friedenbach <mark at monetize.io> wrote:
>> Honest question: what would signed commits do to help us here anyway?
>> What's the problem being solved?
>>
>> Unfortunately git places signatures in the history itself, so it's not
>> like we could use easily use signatures to indicate acceptance after
>> code review, like we could if we were using monotone for example. Git
>> just wasn't designed for a commit-signing workflow.
>
> Just makes it easier to sort out things like your git account (or the
> git site) being compromised and used to submit commits.
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From pete at petertodd.org  Fri May 23 00:25:49 2014
From: pete at petertodd.org (Peter Todd)
Date: Fri, 23 May 2014 03:25:49 +0300
Subject: [Bitcoin-development] PSA: Please sign your git commits
In-Reply-To: <CAJHLa0NNMKW57r2cRsu3a1UFSf5MSp-EWATqf--DKTe-=n26CA@mail.gmail.com>
References: <CA+s+GJBNWh0Py9KB4Y+B19ACeHOygtkLrPw5SbZ0SrVs50pqvg@mail.gmail.com>
	<7B48B9D4-5FB0-42CA-A462-C20D3F345A9A@beams.io>
	<CA+s+GJC8=OHmmF7fc-fT8fQDWE1uNcCS8-ELEKr0MjQ4CpbPBA@mail.gmail.com>
	<537D0CE1.3000608@monetize.io>
	<CAAS2fgSN00Y2XUqLoft9=Fq1GfWvSYQfXdD=RE8890iOU5asRQ@mail.gmail.com>
	<CAJHLa0NNMKW57r2cRsu3a1UFSf5MSp-EWATqf--DKTe-=n26CA@mail.gmail.com>
Message-ID: <0b096c81-9746-4761-b124-563a991efb61@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

I've got a PGP smart card reader and card with a securely generated key and pin entered per signature.

Re: multisig, that's precisely why we want more than just a single maintainer signing commits.

PGP isn't perfect, but perfect is the enemy of good.


On 22 May 2014 21:06:10 GMT+03:00, Jeff Garzik <jgarzik at bitpay.com> wrote:
>Related:  Current multi-sig wallet technology being rolled out now,
>with 2FA and other fancy doodads, is now arguably more secure than my
>PGP keyring.  My PGP keyring is, to draw an analogy, a non-multisig
>wallet (set of keys), with all the associated theft/data
>destruction/backup risks.
>
>The more improvements I see in bitcoin wallets, the more antiquated my
>PGP keyring appears.  Zero concept of multisig.  The PGP keyring
>compromise process is rarely exercised.  2FA is lacking.  At least
>offline signing works well. Mostly.
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCAA6BQJTfpWNMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhfVGB/448B6UvhN7bmFQxmLS
9+wlhWGYioJKUPspz2Wtk0p8v1y1XlDt0UxC+5ODin4a/Zk0+0x4G4MWyaUP1TnA
Wq9FquY3MwTXDrwWzmeQR4QcRbC+EMMk6kXswzT4d/2clUwB1pLl2MYGnS9DjUK2
of0kzZEbaQvxSKcFmvuqhz0QqGy84pkHAFBHfopS1j4WqIZpelUMzBGRYP8D1IQd
H/M2YxdQ7T8peiNigqWSyllchKqGoLG+KEr3mvTYRLkxoYw5XTcFyc5AmuTRfzEC
yhRc7CJwTZjHYahgZRPGJQM0qeopdIVAifCu9NoPgdkyuQL+X8XSidrU5Kbv/YeZ
Scv/
=GdA4
-----END PGP SIGNATURE-----




From laanwj at gmail.com  Fri May 23 07:12:46 2014
From: laanwj at gmail.com (Wladimir)
Date: Fri, 23 May 2014 09:12:46 +0200
Subject: [Bitcoin-development] PSA: Please sign your git commits
In-Reply-To: <CAJHLa0NNMKW57r2cRsu3a1UFSf5MSp-EWATqf--DKTe-=n26CA@mail.gmail.com>
References: <CA+s+GJBNWh0Py9KB4Y+B19ACeHOygtkLrPw5SbZ0SrVs50pqvg@mail.gmail.com>
	<7B48B9D4-5FB0-42CA-A462-C20D3F345A9A@beams.io>
	<CA+s+GJC8=OHmmF7fc-fT8fQDWE1uNcCS8-ELEKr0MjQ4CpbPBA@mail.gmail.com>
	<537D0CE1.3000608@monetize.io>
	<CAAS2fgSN00Y2XUqLoft9=Fq1GfWvSYQfXdD=RE8890iOU5asRQ@mail.gmail.com>
	<CAJHLa0NNMKW57r2cRsu3a1UFSf5MSp-EWATqf--DKTe-=n26CA@mail.gmail.com>
Message-ID: <CA+s+GJBJKQqsJHzdHvw0-r3mmvbRMDpUrWFj2O2-RXkpgGLO7g@mail.gmail.com>

On Thu, May 22, 2014 at 8:06 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:
> Related:  Current multi-sig wallet technology being rolled out now,
> with 2FA and other fancy doodads, is now arguably more secure than my
> PGP keyring.  My PGP keyring is, to draw an analogy, a non-multisig
> wallet (set of keys), with all the associated theft/data
> destruction/backup risks.
>
> The more improvements I see in bitcoin wallets, the more antiquated my
> PGP keyring appears.  Zero concept of multisig.  The PGP keyring
> compromise process is rarely exercised.  2FA is lacking.  At least
> offline signing works well. Mostly.

Would be incredible to have multisig for git commits as well. I don't
think git supports multiple signers for one commit at this point -
amending the signature replaces the last one - but it would allow for
some interesting multi-factor designs in which the damage when a dev's
computer is compromised would be reduced.

Sounds like a lot of work to get a good workflow there, though.

My mail about single-signing commits was already longer than I
expected when I started writing there. Even though the process is
really simple.

Though if anyone's interest is piqued by this, please pick it up.

Wladimir



From laanwj at gmail.com  Fri May 23 10:23:45 2014
From: laanwj at gmail.com (Wladimir)
Date: Fri, 23 May 2014 12:23:45 +0200
Subject: [Bitcoin-development] PSA: Please sign your git commits
In-Reply-To: <CA+s+GJC8=OHmmF7fc-fT8fQDWE1uNcCS8-ELEKr0MjQ4CpbPBA@mail.gmail.com>
References: <CA+s+GJBNWh0Py9KB4Y+B19ACeHOygtkLrPw5SbZ0SrVs50pqvg@mail.gmail.com>
	<7B48B9D4-5FB0-42CA-A462-C20D3F345A9A@beams.io>
	<CA+s+GJC8=OHmmF7fc-fT8fQDWE1uNcCS8-ELEKr0MjQ4CpbPBA@mail.gmail.com>
Message-ID: <CA+s+GJD2B2LC2ssehvm+x-QUoXCsYMcp-1ctBko94XEw0dUzpg@mail.gmail.com>

On Wed, May 21, 2014 at 7:10 PM, Wladimir <laanwj at gmail.com> wrote:
> Hello Chris,
>
> On Wed, May 21, 2014 at 6:39 PM, Chris Beams <chris at beams.io> wrote:
>> I'm personally happy to comply with this for any future commits, but wonder
>> if you've considered the arguments against commit signing [1]? Note
>> especially the reference therein to Linus' original negative opinion on
>> signed commits [2].
>
> Yes, I've read it. But would his alternative, signing tags, really
> help us more here? How would that work? How would we have to structure
> the process?

I think a compromise - that is similar to signing tags but would still
work with the github process, and leaves a trail after merge - would
be: if you submit a stack of commits, only sign the most recent one.

As each commit contains the cryptographic hash of the previous commit,
which in turns contains the hash of that before it up to the root
commit, signing every commit if you have multiple in a row is
redundant.

I'll update the document and put it in the repository.

Wladimir



From mark at monetize.io  Fri May 23 16:38:02 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Fri, 23 May 2014 09:38:02 -0700
Subject: [Bitcoin-development] PSA: Please sign your git commits
In-Reply-To: <CA+s+GJBJKQqsJHzdHvw0-r3mmvbRMDpUrWFj2O2-RXkpgGLO7g@mail.gmail.com>
References: <CA+s+GJBNWh0Py9KB4Y+B19ACeHOygtkLrPw5SbZ0SrVs50pqvg@mail.gmail.com>	<7B48B9D4-5FB0-42CA-A462-C20D3F345A9A@beams.io>	<CA+s+GJC8=OHmmF7fc-fT8fQDWE1uNcCS8-ELEKr0MjQ4CpbPBA@mail.gmail.com>	<537D0CE1.3000608@monetize.io>	<CAAS2fgSN00Y2XUqLoft9=Fq1GfWvSYQfXdD=RE8890iOU5asRQ@mail.gmail.com>	<CAJHLa0NNMKW57r2cRsu3a1UFSf5MSp-EWATqf--DKTe-=n26CA@mail.gmail.com>
	<CA+s+GJBJKQqsJHzdHvw0-r3mmvbRMDpUrWFj2O2-RXkpgGLO7g@mail.gmail.com>
Message-ID: <537F796A.2040009@monetize.io>

I know the likelihood of this happening is slim, but if these are the
desired features we should consider switching to monotone (monotone.ca)
which has a much more flexible DAG structure and workflow built around
programmable multi-sig signing of commits. We could still maintain the
github account as a two-way repository interface, but acceptance of a
pull request would require some threshold signature sign-off in monotone.

I would seriously suggest anybody on this list exploring monotone if you
haven't already, at least for your personal projects if it is too late
to make that choice for bitcoin. Besides the benefits of using it, we
should be supporting build infrastructure that enables less trusted,
less centralized development.

http://www.monotone.ca/

Mark

On 05/23/2014 12:12 AM, Wladimir wrote:
> On Thu, May 22, 2014 at 8:06 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:
>> Related:  Current multi-sig wallet technology being rolled out now,
>> with 2FA and other fancy doodads, is now arguably more secure than my
>> PGP keyring.  My PGP keyring is, to draw an analogy, a non-multisig
>> wallet (set of keys), with all the associated theft/data
>> destruction/backup risks.
>>
>> The more improvements I see in bitcoin wallets, the more antiquated my
>> PGP keyring appears.  Zero concept of multisig.  The PGP keyring
>> compromise process is rarely exercised.  2FA is lacking.  At least
>> offline signing works well. Mostly.
> 
> Would be incredible to have multisig for git commits as well. I don't
> think git supports multiple signers for one commit at this point -
> amending the signature replaces the last one - but it would allow for
> some interesting multi-factor designs in which the damage when a dev's
> computer is compromised would be reduced.
> 
> Sounds like a lot of work to get a good workflow there, though.
> 
> My mail about single-signing commits was already longer than I
> expected when I started writing there. Even though the process is
> really simple.
> 
> Though if anyone's interest is piqued by this, please pick it up.
> 
> Wladimir
> 



From bitcoin-devel at jerviss.org  Fri May 23 16:48:34 2014
From: bitcoin-devel at jerviss.org (Kyle Jerviss)
Date: Fri, 23 May 2014 11:48:34 -0500
Subject: [Bitcoin-development] PSA: Please sign your git commits
In-Reply-To: <CA+s+GJBJKQqsJHzdHvw0-r3mmvbRMDpUrWFj2O2-RXkpgGLO7g@mail.gmail.com>
References: <CA+s+GJBNWh0Py9KB4Y+B19ACeHOygtkLrPw5SbZ0SrVs50pqvg@mail.gmail.com>	<7B48B9D4-5FB0-42CA-A462-C20D3F345A9A@beams.io>	<CA+s+GJC8=OHmmF7fc-fT8fQDWE1uNcCS8-ELEKr0MjQ4CpbPBA@mail.gmail.com>	<537D0CE1.3000608@monetize.io>	<CAAS2fgSN00Y2XUqLoft9=Fq1GfWvSYQfXdD=RE8890iOU5asRQ@mail.gmail.com>	<CAJHLa0NNMKW57r2cRsu3a1UFSf5MSp-EWATqf--DKTe-=n26CA@mail.gmail.com>
	<CA+s+GJBJKQqsJHzdHvw0-r3mmvbRMDpUrWFj2O2-RXkpgGLO7g@mail.gmail.com>
Message-ID: <537F7BE2.6010006@jerviss.org>

Multisig is great for irreversible actions, but pointless most of the 
time, which is why no PGP developer or user ever thought to implement it.

If you lose a key and an attacker signs a bogus email or commit with it, 
we all roll back with no lasting harm done.

Wladimir wrote:
> On Thu, May 22, 2014 at 8:06 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:
>> Related:  Current multi-sig wallet technology being rolled out now,
>> with 2FA and other fancy doodads, is now arguably more secure than my
>> PGP keyring.  My PGP keyring is, to draw an analogy, a non-multisig
>> wallet (set of keys), with all the associated theft/data
>> destruction/backup risks.
>>
>> The more improvements I see in bitcoin wallets, the more antiquated my
>> PGP keyring appears.  Zero concept of multisig.  The PGP keyring
>> compromise process is rarely exercised.  2FA is lacking.  At least
>> offline signing works well. Mostly.
> Would be incredible to have multisig for git commits as well. I don't
> think git supports multiple signers for one commit at this point -
> amending the signature replaces the last one - but it would allow for
> some interesting multi-factor designs in which the damage when a dev's
> computer is compromised would be reduced.
>
> Sounds like a lot of work to get a good workflow there, though.
>
> My mail about single-signing commits was already longer than I
> expected when I started writing there. Even though the process is
> really simple.
>
> Though if anyone's interest is piqued by this, please pick it up.
>
> Wladimir
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From gmaxwell at gmail.com  Fri May 23 17:32:34 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Fri, 23 May 2014 10:32:34 -0700
Subject: [Bitcoin-development] PSA: Please sign your git commits
In-Reply-To: <537F7BE2.6010006@jerviss.org>
References: <CA+s+GJBNWh0Py9KB4Y+B19ACeHOygtkLrPw5SbZ0SrVs50pqvg@mail.gmail.com>
	<7B48B9D4-5FB0-42CA-A462-C20D3F345A9A@beams.io>
	<CA+s+GJC8=OHmmF7fc-fT8fQDWE1uNcCS8-ELEKr0MjQ4CpbPBA@mail.gmail.com>
	<537D0CE1.3000608@monetize.io>
	<CAAS2fgSN00Y2XUqLoft9=Fq1GfWvSYQfXdD=RE8890iOU5asRQ@mail.gmail.com>
	<CAJHLa0NNMKW57r2cRsu3a1UFSf5MSp-EWATqf--DKTe-=n26CA@mail.gmail.com>
	<CA+s+GJBJKQqsJHzdHvw0-r3mmvbRMDpUrWFj2O2-RXkpgGLO7g@mail.gmail.com>
	<537F7BE2.6010006@jerviss.org>
Message-ID: <CAAS2fgR39ChTjhmY-wpcgUoHWGJenazQyOaj5=ym5zYOHiFQig@mail.gmail.com>

On Fri, May 23, 2014 at 9:48 AM, Kyle Jerviss <bitcoin-devel at jerviss.org> wrote:
> Multisig is great for irreversible actions, but pointless most of the
> time, which is why no PGP developer or user ever thought to implement it.
>
> If you lose a key and an attacker signs a bogus email or commit with it,
> we all roll back with no lasting harm done.

PGP in general is not very thoughtful about security. There are a lot
of things it does poorly. This is easily excusable considering the
historical context it came from? it was the first real cryptographic
tool I used, at the time its distribution had concerns about legality,
just getting things into people's hands was an achievement enough.

>From a cryptosystem perspective much more powerful things can be done
now, but there is a long way to go in figuring out how to many any
cryptographic tool usable to people.

PGP is a general purpose tool? which is the hardest kind to write? its
also used in a lot of irreversible contexts: If your key deploys a bad
software release and it steals everyone's data or wipes their disks?
thats not an irreversible action by any means.

If you want threshold pgp though? it's possible. The RSA cryptosystem
is directly compatible with threshold cryptography. It's just that no
one has written the tools. There are implementations of the bare
cryptosystem however.

One of my longer term would-be-nice goals for a upgrade bitcoin script
2.0 would be being thoughtful enough in the design that it could be
adopted as a signing cryptosystem in other applications (e.g. tools
similar to GPG)? allowing for things like creating a public key which
can only issue trust level 0 certifications, only certifications for
certain organizations (e.g. *.debian.org) unless thresholded with an
offline key, or only signing for messages meeting a certain
programmatic predicate generally.



From pete at petertodd.org  Fri May 23 22:17:26 2014
From: pete at petertodd.org (Peter Todd)
Date: Fri, 23 May 2014 18:17:26 -0400
Subject: [Bitcoin-development] testnet-seed.bitcoin.petertodd.org is up again
Message-ID: <20140523221726.GA30143@petertodd.org>

FWIW

That said, keep in mind the github discussion(1) that was had: if all
the DNS seeds being down breaks your application, your application is
broken and insecure. The only exception is initial startup, and even
then you should have fallbacks such as hardcoded node lists and manual
peer entry. If for some reason you really do need instant startup, run
your own centralized high-availability/low-latency nodes; either way
you're depending on a centralized resource.

1) https://github.com/bitcoin/bitcoin/pull/4203

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140523/56ca2638/attachment.sig>

From dscvlt at gmail.com  Sat May 24 03:57:05 2014
From: dscvlt at gmail.com (Ashley Holman)
Date: Sat, 24 May 2014 13:27:05 +0930
Subject: [Bitcoin-development] Cut-through propagation of blocks
Message-ID: <CAOXABZohe93SSRm1FN5ai2H97eBJV2j+LAjA-39YAaNmX=ep0Q@mail.gmail.com>

Hi,

On this list there has been some discussion around techniques to speed up
block propagation, with a particular focus on reducing the extra orphan
risk carried by larger blocks.

The current store-and-forward method means that larger blocks will
propagate with higher latency.  One proposed solution has been to broadcast
two separate messages: a fast, fixed-size header message, and a 2nd, slower
body message containing the full block.  Whilst this allows larger blocks
to compete equally with smaller blocks on the "which came first" rule, it
creates a new area of uncertain delay between receiving the header, and
receiving the body, where there may be perverse incentives to mine empty
blocks on top of not-yet-valid headers.

So I would like to propose another method which is hopefully a less
significant change to the existing protocol rules, but should help reduce
the latency gap between large and small blocks.

* Skip the inv/getdata sequence for new blocks - just push them out
directly to save 1 roundtrip per hop
*  When receiving a new block from a peer, as soon as we have the first 80
bytes (header) we can validate the PoW and, with only a low-level change to
the networking code, begin streaming that block to our peers (in the style
of cut-through switching).
* No other rules need to change.  Block primacy can still be determined as
of the moment they are fully validated and accepted, but now the latency
caused by larger blocks is only (1 * BlockSize * BottleneckHopSpeed),
instead of (Sum[n=0 to NumHops](BlockSize * NodeBandwidth(n))).
* As far as I can tell, this shouldn't change any game theory or incentives
because nodes still receive blocks exactly as they do now, just sooner.
 The difference is, invalid blocks that meet the PoW will be broadcast to
everyone, but this is nothing new since someone can peer with you and send
you an invalid block already.  Network DoS should not be a possibility
since it is very expensive to make invalid blocks that meet network PoW.

Thoughts?

Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140524/62e3e230/attachment.html>

From dscvlt at gmail.com  Sat May 24 05:11:53 2014
From: dscvlt at gmail.com (Ashley Holman)
Date: Sat, 24 May 2014 14:41:53 +0930
Subject: [Bitcoin-development] Cut-through propagation of blocks
In-Reply-To: <CAOXABZohe93SSRm1FN5ai2H97eBJV2j+LAjA-39YAaNmX=ep0Q@mail.gmail.com>
References: <CAOXABZohe93SSRm1FN5ai2H97eBJV2j+LAjA-39YAaNmX=ep0Q@mail.gmail.com>
Message-ID: <CAOXABZrSbG+98m9SBKdft5DOfZV5jF9Zj2LCFVaEsUDouRLGeg@mail.gmail.com>

On Sat, May 24, 2014 at 1:27 PM, Ashley Holman <dscvlt at gmail.com> wrote:
>
> * Skip the inv/getdata sequence for new blocks - just push them out
> directly to save 1 roundtrip per hop
>

Upon further reflection, I remove this from my proposal.  It's an unrelated
optimisation that probably distracts from the main point which is the
cut-through forwarding.  The rest of the proposal still works if the
inv/getdata sequence is retained.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140524/ae751af3/attachment.html>

From bitcoin at bpj-code.co.za  Sat May 24 22:59:36 2014
From: bitcoin at bpj-code.co.za (Bernd Jendrissek)
Date: Sun, 25 May 2014 00:59:36 +0200
Subject: [Bitcoin-development] Cut-through propagation of blocks
In-Reply-To: <CAOXABZohe93SSRm1FN5ai2H97eBJV2j+LAjA-39YAaNmX=ep0Q@mail.gmail.com>
References: <CAOXABZohe93SSRm1FN5ai2H97eBJV2j+LAjA-39YAaNmX=ep0Q@mail.gmail.com>
Message-ID: <CAF7PVPoGAyhQhU-p-SiT1H86A+Zs3Fb-s9wgFZQtxdb6674k3w@mail.gmail.com>

On Sat, May 24, 2014 at 5:57 AM, Ashley Holman <dscvlt at gmail.com> wrote:
> * As far as I can tell, this shouldn't change any game theory or incentives
> because nodes still receive blocks exactly as they do now, just sooner.  The
> difference is, invalid blocks that meet the PoW will be broadcast to
> everyone, but this is nothing new since someone can peer with you and send
> you an invalid block already.  Network DoS should not be a possibility since
> it is very expensive to make invalid blocks that meet network PoW.

The difference is that with cut-through forwarding of blocks, a
sufficiently motivated attacker (being willing to blow 25BTC's worth
of electricity on the effort) can subjugate the entire Bitcoin network
to its DoS attack, rather than having to connect to every node
individually and then still have those individual nodes reject that
invalid block without relaying any knowledge of its existence.

An attack could also take the form of a block body that never arrives
- a sort of teergrube attack, where the goal is to get the network
mining empty block upon empty block on top of that valid-PoW header
whose body never arrives. It doesn't have to be with an explicitly
invalid block.

Could one mitigate such attacks by allowing nodes to send a message to
the effect of, "Oops, I know that header i just sent is valid PoW, but
I'd like you to forget about it - I think its body is invalid"?



From gmaxwell at gmail.com  Sat May 24 23:16:43 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sat, 24 May 2014 16:16:43 -0700
Subject: [Bitcoin-development] Cut-through propagation of blocks
In-Reply-To: <CAOXABZohe93SSRm1FN5ai2H97eBJV2j+LAjA-39YAaNmX=ep0Q@mail.gmail.com>
References: <CAOXABZohe93SSRm1FN5ai2H97eBJV2j+LAjA-39YAaNmX=ep0Q@mail.gmail.com>
Message-ID: <CAAS2fgSJh83YEZjRfL81sKjC=nSKHtWT1qzS0evLJ9Gy6qdA1w@mail.gmail.com>

On Fri, May 23, 2014 at 8:57 PM, Ashley Holman <dscvlt at gmail.com> wrote:
> Hi,
> On this list there has been some discussion around techniques to speed up
> block propagation, with a particular focus on reducing the extra orphan risk
> carried by larger blocks.
> The current store-and-forward method means that larger blocks will propagate
> with higher latency.

FWIW, there are a lot of improvements which can be made before more
complex changes like cut-through-forwarding that change the protocol.

For example, the reference software has a 100ms sleep in p2p message
processing which could be replaced with a semaphore, this would
dramatically lower latency for block relaying.

Likewise nodes which are becoming bandwidth overloaded could adapt
their concurrent connection counts down (and ones that are underloaded
could accept more connections).

Relaying to multiple peers could be done in parallel instead of
serialized, and the order in which peers are relayed to could be
adapted to place more apparently useful and faster peers first, e.g.
every time a peer is the first to tell you about a block or
transaction you accept they move up the list, every time their socket
send queue fills they move down.

Luke-Jr had implemented cut through behavior previously and had posted
a patch, but absent those other network processing improvements it
didn't appear to help.


If you want to go full out crazy in optimizing in this space, there
are fancier things that can be done to further reduce latency and
increase efficiency:
https://en.bitcoin.it/wiki/User:Gmaxwell/block_network_coding  ... but
some of this stuff really should be done as a seperate protocol. There
is no need to have Bitcoin transport all using a single protocol, and
we can get better robustness and feature velocity if there are a
couple protocols in use (you could just run a block-transport-protocol
daemon that connects to your local node via the classic protocol).



From dscvlt at gmail.com  Sat May 24 23:41:39 2014
From: dscvlt at gmail.com (Ashley Holman)
Date: Sun, 25 May 2014 09:11:39 +0930
Subject: [Bitcoin-development] Cut-through propagation of blocks
In-Reply-To: <CAAS2fgSJh83YEZjRfL81sKjC=nSKHtWT1qzS0evLJ9Gy6qdA1w@mail.gmail.com>
References: <CAOXABZohe93SSRm1FN5ai2H97eBJV2j+LAjA-39YAaNmX=ep0Q@mail.gmail.com>
	<CAAS2fgSJh83YEZjRfL81sKjC=nSKHtWT1qzS0evLJ9Gy6qdA1w@mail.gmail.com>
Message-ID: <CAOXABZoOnYSRf0Ktqxh8dx20Zi=E5gkp-8-C3-0ECudK=q05uA@mail.gmail.com>

On Sun, May 25, 2014 at 8:29 AM, Bernd Jendrissek <bitcoin at bpj-code.co.za>
 wrote:
>
> The difference is that with cut-through forwarding of blocks, a
> sufficiently motivated attacker (being willing to blow 25BTC's worth
> of electricity on the effort) can subjugate the entire Bitcoin network
> to its DoS attack, rather than having to connect to every node
> individually and then still have those individual nodes reject that
> invalid block without relaying any knowledge of its existence.
>

That is true, but they could also apply the same hash power to mine valid
blocks and would achieve the same outcome (their blocks would go to
everyone), except they would get paid for it.  I wonder if it should even
be called DoS, due to the extreme and costly rate-limiting thats implied.



> An attack could also take the form of a block body that never arrives
> - a sort of teergrube attack, where the goal is to get the network
> mining empty block upon empty block on top of that valid-PoW header
> whose body never arrives. It doesn't have to be with an explicitly
> invalid block.
>

Thank you for raising this, as I share this concern.  There is another
similar attack: if I send you a new block very slowly, I occupy all your
upstream peer slots indefinitely until the block is complete, because there
is no out-of-band messaging capability or ability to cancel a message.

There is also sub-optimal logic in choosing to download a block only from
the first person to offer it.  It means you are fetching it from the lowest
latency path, but what really matters is who can give it to you fastest.
 If there are multiple people who can send you a block at once, and you
have some idea of your spare upstream bandwidth capacity, why not let two
or more peers compete to send you the block fastest?

So to implement this type of thing,  the p2p protocol should allow for
multiplexing of messages.  Something like HTTP chunked encoding.  It could
be in the form of:

<msgid><chunksize><rawbytes>, <msgid><chunksize><rawbytes>,  etc etc

You only send a chunk once you've got the whole chunk in your buffer, so
it's not possible to get hung up on a single slow message.   One block can
overtake another along the same hop path if it is being streamed faster.

On Sun, May 25, 2014 at 8:46 AM, Gregory Maxwell <gmaxwell at gmail.com>
 wrote:
>
> If you want to go full out crazy in optimizing in this space, there
> are fancier things that can be done to further reduce latency and
> increase efficiency:
> https://en.bitcoin.it/wiki/User:Gmaxwell/block_network_coding  ... but
> some of this stuff really should be done as a seperate protocol. There
> is no need to have Bitcoin transport all using a single protocol, and
> we can get better robustness and feature velocity if there are a
> couple protocols in use (you could just run a block-transport-protocol
> daemon that connects to your local node via the classic protocol).


What about a separate project which is a mesh router specifically designed
for low-latency transmission of blocks?  It could support things like a
more sophisticated/configurable routing table, and have some kind of
discovery where it tries to optimise its topology.  There could even be
some way for nodes to prove their hash power, so pools can find each other
and directly peer / prioritise sends.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140525/b81d24be/attachment.html>

From etotheipi at gmail.com  Sun May 25 00:04:33 2014
From: etotheipi at gmail.com (Alan Reiner)
Date: Sat, 24 May 2014 20:04:33 -0400
Subject: [Bitcoin-development] Cut-through propagation of blocks
In-Reply-To: <CAOXABZoOnYSRf0Ktqxh8dx20Zi=E5gkp-8-C3-0ECudK=q05uA@mail.gmail.com>
References: <CAOXABZohe93SSRm1FN5ai2H97eBJV2j+LAjA-39YAaNmX=ep0Q@mail.gmail.com>	<CAAS2fgSJh83YEZjRfL81sKjC=nSKHtWT1qzS0evLJ9Gy6qdA1w@mail.gmail.com>
	<CAOXABZoOnYSRf0Ktqxh8dx20Zi=E5gkp-8-C3-0ECudK=q05uA@mail.gmail.com>
Message-ID: <53813391.7040503@gmail.com>

On 05/24/2014 07:41 PM, Ashley Holman wrote:
> On Sun, May 25, 2014 at 8:29 AM, Bernd
> Jendrissek <bitcoin at bpj-code.co.za
> <mailto:bitcoin at bpj-code.co.za>> wrote:
>
>     The difference is that with cut-through forwarding of blocks, a
>     sufficiently motivated attacker (being willing to blow 25BTC's worth
>     of electricity on the effort) can subjugate the entire Bitcoin network
>     to its DoS attack, rather than having to connect to every node
>     individually and then still have those individual nodes reject that
>     invalid block without relaying any knowledge of its existence.
>
>
> That is true, but they could also apply the same hash power to mine
> valid blocks and would achieve the same outcome (their blocks would go
> to everyone), except they would get paid for it.  I wonder if it
> should even be called DoS, due to the extreme and costly rate-limiting
> thats implied.
>
>  
>
>     An attack could also take the form of a block body that never arrives
>     - a sort of teergrube attack, where the goal is to get the network
>     mining empty block upon empty block on top of that valid-PoW header
>     whose body never arrives. It doesn't have to be with an explicitly
>     invalid block.
>
>
> Thank you for raising this, as I share this concern.  There is another
> similar attack: if I send you a new block very slowly, I occupy all
> your upstream peer slots indefinitely until the block is complete,
> because there is no out-of-band messaging capability or ability to
> cancel a message.
>
> There is also sub-optimal logic in choosing to download a block only
> from the first person to offer it.  It means you are fetching it from
> the lowest latency path, but what really matters is who can give it to
> you fastest.  If there are multiple people who can send you a block at
> once, and you have some idea of your spare upstream bandwidth
> capacity, why not let two or more peers compete to send you the block
> fastest?
>
> So to implement this type of thing,  the p2p protocol should allow for
> multiplexing of messages.  Something like HTTP chunked encoding.  It
> could be in the form of:
>
> <msgid><chunksize><rawbytes>, <msgid><chunksize><rawbytes>,  etc etc
>
> You only send a chunk once you've got the whole chunk in your buffer,
> so it's not possible to get hung up on a single slow message.   One
> block can overtake another along the same hop path if it is being
> streamed faster.
>
> On Sun, May 25, 2014 at 8:46 AM, Gregory Maxwell <gmaxwell at gmail.com
> <mailto:gmaxwell at gmail.com>> wrote: 
>
>     If you want to go full out crazy in optimizing in this space, there
>     are fancier things that can be done to further reduce latency and
>     increase efficiency:
>     https://en.bitcoin.it/wiki/User:Gmaxwell/block_network_coding  ... but
>     some of this stuff really should be done as a seperate protocol. There
>     is no need to have Bitcoin transport all using a single protocol, and
>     we can get better robustness and feature velocity if there are a
>     couple protocols in use (you could just run a block-transport-protocol
>     daemon that connects to your local node via the classic protocol).
>
>
> What about a separate project which is a mesh router specifically
> designed for low-latency transmission of blocks?  It could support
> things like a more sophisticated/configurable routing table, and have
> some kind of discovery where it tries to optimise its topology.  There
> could even be some way for nodes to prove their hash power, so pools
> can find each other and directly peer / prioritise sends.
>

I think the most important change is modifying the way Bitcoin Core
prioritizes blocks.  Right now it uses the first full block verified. 
Instead, it should consider the first valid header received as highest
priority, but only mine on it once it has done full verification of the
block.  In other words, nodes will mine on whatever full/verified block
they have with the earliest header-received time.  If another header
comes in and the tx list is received before the first tx list is done,
then the node will mine the second block *until* it receives and
verifies the first block, then it will switch to mining that first
block.  Most of the time there's no race, it will simply mine the block
N-1 for an extra 1-3 seconds until it receives and verifies the full
block for the new header.

This at least solves part of the problem:  nodes are still only mining
on full blocks, but priority is given to *headers* that come first which
is independent of block size.   As long as a block isn't found within
the 1-3 seconds, then each miner will switch when they finish receiving
and verifying it.  If miners are concerned about that 1-3 second gap,
they should perhaps focus on making sure the tx they are mining are
well-propagated already, so that most of the network has most of the
transactions already in their memory pool by the time their block is mined.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140524/37cf72a1/attachment.html>

From gmaxwell at gmail.com  Sun May 25 00:14:59 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sat, 24 May 2014 17:14:59 -0700
Subject: [Bitcoin-development] Cut-through propagation of blocks
In-Reply-To: <53813391.7040503@gmail.com>
References: <CAOXABZohe93SSRm1FN5ai2H97eBJV2j+LAjA-39YAaNmX=ep0Q@mail.gmail.com>
	<CAAS2fgSJh83YEZjRfL81sKjC=nSKHtWT1qzS0evLJ9Gy6qdA1w@mail.gmail.com>
	<CAOXABZoOnYSRf0Ktqxh8dx20Zi=E5gkp-8-C3-0ECudK=q05uA@mail.gmail.com>
	<53813391.7040503@gmail.com>
Message-ID: <CAAS2fgRSvbUdB80vQOvSBfCckzPASkw6wNzqZUk-h2pWiY8srg@mail.gmail.com>

On Sat, May 24, 2014 at 5:04 PM, Alan Reiner <etotheipi at gmail.com> wrote:
> I think the most important change is modifying the way Bitcoin Core
> prioritizes blocks.  Right now it uses the first full block verified.
> Instead, it should consider the first valid header received as highest
> priority, but only mine on it once it has done full verification of the

This directly opens an attack where as soon as you find a block you
announce the header to the world and then you delay announcing the
block content.  You can continue to mine on the block but no one else
can (or alternatively they break their rule and risk extending an
invalid block? bad news for SPV wallets)? then when you find a
successor block or someone else finds a competing block you
immediately announce the content.

It basically means that you can always delay announcing a block and be
sure that doing so doesn't deprive you of your winning position.

> If miners are concerned about that 1-3 second gap, they
> should perhaps focus on making sure the tx they are mining are
> well-propagated already, so that most of the network has most of the
> transactions already in their memory pool by the time their block is mined.

With an alternative transport protocol, assuming the content has
already been relayed a block could be sent in a couple back to back
UDP packets.  (e.g. a few bytes per transaction to disambiguate the
transaction order out of the already sent transactions).  So I think
very similar latency could be achieved without doing any thing which
might increase the motivations for miners to misbehave.



From etotheipi at gmail.com  Sun May 25 00:38:41 2014
From: etotheipi at gmail.com (Alan Reiner)
Date: Sat, 24 May 2014 20:38:41 -0400
Subject: [Bitcoin-development] Cut-through propagation of blocks
In-Reply-To: <CAAS2fgRSvbUdB80vQOvSBfCckzPASkw6wNzqZUk-h2pWiY8srg@mail.gmail.com>
References: <CAOXABZohe93SSRm1FN5ai2H97eBJV2j+LAjA-39YAaNmX=ep0Q@mail.gmail.com>	<CAAS2fgSJh83YEZjRfL81sKjC=nSKHtWT1qzS0evLJ9Gy6qdA1w@mail.gmail.com>	<CAOXABZoOnYSRf0Ktqxh8dx20Zi=E5gkp-8-C3-0ECudK=q05uA@mail.gmail.com>	<53813391.7040503@gmail.com>
	<CAAS2fgRSvbUdB80vQOvSBfCckzPASkw6wNzqZUk-h2pWiY8srg@mail.gmail.com>
Message-ID: <53813B91.2070309@gmail.com>

On 05/24/2014 08:14 PM, Gregory Maxwell wrote:
> On Sat, May 24, 2014 at 5:04 PM, Alan Reiner <etotheipi at gmail.com> wrote:
>> I think the most important change is modifying the way Bitcoin Core
>> prioritizes blocks.  Right now it uses the first full block verified.
>> Instead, it should consider the first valid header received as highest
>> priority, but only mine on it once it has done full verification of the
> This directly opens an attack where as soon as you find a block you
> announce the header to the world and then you delay announcing the
> block content.  You can continue to mine on the block but no one else
> can (or alternatively they break their rule and risk extending an
> invalid block? bad news for SPV wallets)? then when you find a
> successor block or someone else finds a competing block you
> immediately announce the content.
>
> It basically means that you can always delay announcing a block and be
> sure that doing so doesn't deprive you of your winning position.
>
>

Would this not be solved by putting a expiration on application of this
logic?  For instance, if you haven't received the full new block within
5-10 seconds (perhaps adjusted based on local bandwidth), then the
header-received time is ignored.  Or is this too hacky?   I suppose this
is exactly what Ashley is trying to solve, she's just already made a few
more leaps forward in the design process than I have.  I'll stop
derailing it.



From jonathan.levin at sant.ox.ac.uk  Sat May 24 23:57:39 2014
From: jonathan.levin at sant.ox.ac.uk (Jonathan Levin)
Date: Sat, 24 May 2014 23:57:39 +0000
Subject: [Bitcoin-development] Cut-through propagation of blocks
In-Reply-To: <mailman.177181.1400974908.2207.bitcoin-development@lists.sourceforge.net>
References: <mailman.177181.1400974908.2207.bitcoin-development@lists.sourceforge.net>
Message-ID: <86C2A90A-6619-45CD-94EC-009456471050@sant.ox.ac.uk>

I have done some work on incentives arising from block propagation times and it turns out that Bitcoin is already quite good at establishing the primacy of blocks by time despite what people think. Part of the reason for this is the way that partitions on the network evolve as a block is propagated. Typically at the moment, blocks reach over 50% of the network in 5 seconds. Reach being defined as a node receiving and validating a block. If we make an assumption that the hashing power of the network is uniformly distributed over the nodes (I know it is not a good assumption but can discuss it off the list). Then 50% of the hashing power are already building a block that builds on top of the block that is already circulating. The probability that there is a collision on the network therefore falls fast and then the probability that the miner who propagated the first block wins given a collision occurs is rising. I think that block propagation times might actually be a bigger issue for miners who are less well connected to the network in the sense that they spend more time mining redundant problems and during that time may find blocks to compete with blocks that are already spreading throughout the network.

I have a paper that models this more formally and has some numerical simulations but cannot publish it on the internet at present (University Regulations) but I am happy to share a version privately if anyone is interested.

Best,

Jonathan

--
Jonathan Levin
Co-Founder Coinometrics
http://www.coinometrics.com/
Postgraduate Economist | St Antony's College | Oxford University
@jony_levin
@Coinometrics




-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140524/835e5e86/attachment.html>

From mike at plan99.net  Sun May 25 09:36:40 2014
From: mike at plan99.net (Mike Hearn)
Date: Sun, 25 May 2014 11:36:40 +0200
Subject: [Bitcoin-development] Cut-through propagation of blocks
In-Reply-To: <CAAS2fgSJh83YEZjRfL81sKjC=nSKHtWT1qzS0evLJ9Gy6qdA1w@mail.gmail.com>
References: <CAOXABZohe93SSRm1FN5ai2H97eBJV2j+LAjA-39YAaNmX=ep0Q@mail.gmail.com>
	<CAAS2fgSJh83YEZjRfL81sKjC=nSKHtWT1qzS0evLJ9Gy6qdA1w@mail.gmail.com>
Message-ID: <CANEZrP0wtyagZeSe7kRwk08Td-O5RGz_vwbTNm_v69VdfUuorw@mail.gmail.com>

>
> There
> is no need to have Bitcoin transport all using a single protocol, and
> we can get better robustness and feature velocity if there are a
> couple protocols in use (you could just run a block-transport-protocol
> daemon that connects to your local node via the classic protocol).


Although this is a somewhat appealing notion, would it really improve
feature velocity? I don't think the current p2p protocol is holding
anything back, and having to implement features twice in two protocols
would slow things down quite a bit.

Probably the lowest hanging fruit now is fixing the 100msec sleep and just
generally having tools to measure latency and queuing inside the code.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140525/61868344/attachment.html>

From gmaxwell at gmail.com  Sun May 25 09:51:06 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sun, 25 May 2014 02:51:06 -0700
Subject: [Bitcoin-development] Cut-through propagation of blocks
In-Reply-To: <CANEZrP0wtyagZeSe7kRwk08Td-O5RGz_vwbTNm_v69VdfUuorw@mail.gmail.com>
References: <CAOXABZohe93SSRm1FN5ai2H97eBJV2j+LAjA-39YAaNmX=ep0Q@mail.gmail.com>
	<CAAS2fgSJh83YEZjRfL81sKjC=nSKHtWT1qzS0evLJ9Gy6qdA1w@mail.gmail.com>
	<CANEZrP0wtyagZeSe7kRwk08Td-O5RGz_vwbTNm_v69VdfUuorw@mail.gmail.com>
Message-ID: <CAAS2fgRrDR5nHpuyDg7tdu-kYjYc6XnyPcjquodYjsMWiTJRaQ@mail.gmail.com>

On Sun, May 25, 2014 at 2:36 AM, Mike Hearn <mike at plan99.net> wrote:
> Although this is a somewhat appealing notion, would it really improve
> feature velocity? I don't think the current p2p protocol is holding anything
> back, and having to implement features twice in two protocols would slow
> things down quite a bit.

If someone wanted to implement swanky UDP non-blocking transports or
complex network coding schemes I'd probably want to see the proven in
actual use before sticking them in the reference code, so yes.

It's also the case that the ~last addition we made to the P2P code
added a remotely exploitable crash bug.

There are some pretty distinct use cases out there? fast block
relaying, supporting thin clients, minimizing bandwidth (e.g. via
compression and tx/block redundancy elimination), etc. Some of them
may not be well handled by an external gateway, some of them (e.g.
block relaying) very much could be.

The nice thing with alternative protocols and gatewaying is that it
can proceed completely asynchronously with implementation development,
e.g. revving versions as fast as the users of the protocol care, and
could potentially be used immediately with other bitcoin
implementations... and if its buggy it doesn't break the nodes using
it: I'd be much more likely to run an experimental gateway in another
process on a node than experimental p2p code inside my production
bitcoinds themselves.



From andreas at schildbach.de  Sun May 25 19:12:10 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Sun, 25 May 2014 21:12:10 +0200
Subject: [Bitcoin-development] testnet-seed.bitcoin.petertodd.org is up
	again
In-Reply-To: <20140523221726.GA30143@petertodd.org>
References: <20140523221726.GA30143@petertodd.org>
Message-ID: <lltfaa$2lv$1@ger.gmane.org>

Thanks for looking at the issue.

Unfortunately, it still fails for me:

$ nslookup testnet-seed.bitcoin.petertodd.org
Server:		127.0.1.1
Address:	127.0.1.1#53

** server can't find testnet-seed.bitcoin.petertodd.org: SERVFAIL

Like I said, can you look at the logfiles how the requests arrive?

What particular thing did you fix? It would be good to know for future
outages.


On 05/24/2014 12:17 AM, Peter Todd wrote:
> FWIW
> 
> That said, keep in mind the github discussion(1) that was had: if all
> the DNS seeds being down breaks your application, your application is
> broken and insecure. The only exception is initial startup, and even
> then you should have fallbacks such as hardcoded node lists and manual
> peer entry. If for some reason you really do need instant startup, run
> your own centralized high-availability/low-latency nodes; either way
> you're depending on a centralized resource.
> 
> 1) https://github.com/bitcoin/bitcoin/pull/4203





From timm123 at gmail.com  Sun May 25 20:02:17 2014
From: timm123 at gmail.com (Tim)
Date: Sun, 25 May 2014 21:02:17 +0100
Subject: [Bitcoin-development] testnet-seed.bitcoin.petertodd.org is up
	again
In-Reply-To: <lltfaa$2lv$1@ger.gmane.org>
References: <20140523221726.GA30143@petertodd.org> <lltfaa$2lv$1@ger.gmane.org>
Message-ID: <CAC=nqrQzp402QuwAoQ8bEaU5mRSRtZk03nXtgDN-m7z1NAXVLQ@mail.gmail.com>

Works fine for me


; <<>> DiG 9.8.1-P1 <<>> ANY testnet-seed.bitcoin.petertodd.org
;; global options: +cmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 40809
;; flags: qr rd ra; QUERY: 1, ANSWER: 22, AUTHORITY: 0, ADDITIONAL: 0

;; QUESTION SECTION:
;testnet-seed.bitcoin.petertodd.org. IN ANY

;; ANSWER SECTION:
testnet-seed.bitcoin.petertodd.org. 40000 IN NS
testnet-seed-ns1.bitcoin.petertodd.org.
testnet-seed.bitcoin.petertodd.org. 40000 IN SOA
testnet-seed-ns1.bitcoin.petertodd.org. root. 1401048038 604800 86400
2592000 604800
testnet-seed.bitcoin.petertodd.org. 60 IN A     54.208.21.132
testnet-seed.bitcoin.petertodd.org. 60 IN A     5.9.119.49
testnet-seed.bitcoin.petertodd.org. 60 IN A     54.221.156.77
testnet-seed.bitcoin.petertodd.org. 60 IN A     37.34.60.19
testnet-seed.bitcoin.petertodd.org. 60 IN A     46.105.173.28
testnet-seed.bitcoin.petertodd.org. 60 IN A     95.78.127.77
testnet-seed.bitcoin.petertodd.org. 60 IN A     208.111.49.42
testnet-seed.bitcoin.petertodd.org. 60 IN A     94.102.53.181
testnet-seed.bitcoin.petertodd.org. 60 IN A     85.153.13.35
testnet-seed.bitcoin.petertodd.org. 60 IN A     85.25.198.97
testnet-seed.bitcoin.petertodd.org. 60 IN A     217.46.198.163
testnet-seed.bitcoin.petertodd.org. 60 IN A     192.187.125.226
testnet-seed.bitcoin.petertodd.org. 60 IN A     37.187.40.137
testnet-seed.bitcoin.petertodd.org. 60 IN A     37.187.179.66
testnet-seed.bitcoin.petertodd.org. 60 IN A     93.93.135.12
testnet-seed.bitcoin.petertodd.org. 60 IN A     144.76.175.228
testnet-seed.bitcoin.petertodd.org. 60 IN A     74.207.241.92
testnet-seed.bitcoin.petertodd.org. 60 IN A     85.17.26.225
testnet-seed.bitcoin.petertodd.org. 60 IN A     148.251.11.118
testnet-seed.bitcoin.petertodd.org. 60 IN A     137.117.202.26

;; Query time: 569 msec
;; SERVER: 109.74.194.20#53(109.74.194.20)
;; WHEN: Sun May 25 21:00:35 2014
;; MSG SIZE  rcvd: 443



On 25 May 2014 20:12, Andreas Schildbach <andreas at schildbach.de> wrote:

> Thanks for looking at the issue.
>
> Unfortunately, it still fails for me:
>
> $ nslookup testnet-seed.bitcoin.petertodd.org
> Server:         127.0.1.1
> Address:        127.0.1.1#53
>
> ** server can't find testnet-seed.bitcoin.petertodd.org: SERVFAIL
>
> Like I said, can you look at the logfiles how the requests arrive?
>
> What particular thing did you fix? It would be good to know for future
> outages.
>
>
> On 05/24/2014 12:17 AM, Peter Todd wrote:
> > FWIW
> >
> > That said, keep in mind the github discussion(1) that was had: if all
> > the DNS seeds being down breaks your application, your application is
> > broken and insecure. The only exception is initial startup, and even
> > then you should have fallbacks such as hardcoded node lists and manual
> > peer entry. If for some reason you really do need instant startup, run
> > your own centralized high-availability/low-latency nodes; either way
> > you're depending on a centralized resource.
> >
> > 1) https://github.com/bitcoin/bitcoin/pull/4203
>
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing platform
> available
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140525/576866ed/attachment.html>

From mike at plan99.net  Mon May 26 15:08:46 2014
From: mike at plan99.net (Mike Hearn)
Date: Mon, 26 May 2014 17:08:46 +0200
Subject: [Bitcoin-development] Cut-through propagation of blocks
In-Reply-To: <CAAS2fgRrDR5nHpuyDg7tdu-kYjYc6XnyPcjquodYjsMWiTJRaQ@mail.gmail.com>
References: <CAOXABZohe93SSRm1FN5ai2H97eBJV2j+LAjA-39YAaNmX=ep0Q@mail.gmail.com>
	<CAAS2fgSJh83YEZjRfL81sKjC=nSKHtWT1qzS0evLJ9Gy6qdA1w@mail.gmail.com>
	<CANEZrP0wtyagZeSe7kRwk08Td-O5RGz_vwbTNm_v69VdfUuorw@mail.gmail.com>
	<CAAS2fgRrDR5nHpuyDg7tdu-kYjYc6XnyPcjquodYjsMWiTJRaQ@mail.gmail.com>
Message-ID: <CANEZrP3NQccynmtUZKN_9tdNO3r-fmfgZWdzWHUVsnXdzvRGWw@mail.gmail.com>

>
> it: I'd be much more likely to run an experimental gateway in another
> process on a node than experimental p2p code inside my production
> bitcoinds themselves.
>

Yes, it's certainly better to do that during the development phase. However
if it does turn out to be good and valuable then it'd eventually need to be
integrated or rewritten into Core anyway, lest we accidentally increase the
setup cost of running a node and end up with a two-tier network. And if the
code will eventually want to be merged into Core anyway, it might as well
be implemented into it directly, perhaps behind a switch that can disable
those codepaths if something goes wrong.

So I think the tradeoffs here are rather complicated and subtle.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140526/8212a80b/attachment.html>

From pete at petertodd.org  Mon May 26 16:37:53 2014
From: pete at petertodd.org (Peter Todd)
Date: Mon, 26 May 2014 12:37:53 -0400
Subject: [Bitcoin-development] testnet-seed.bitcoin.petertodd.org is up
 again
In-Reply-To: <lltfaa$2lv$1@ger.gmane.org>
References: <20140523221726.GA30143@petertodd.org> <lltfaa$2lv$1@ger.gmane.org>
Message-ID: <20140526163753.GA18693@petertodd.org>

On Sun, May 25, 2014 at 09:12:10PM +0200, Andreas Schildbach wrote:
> Thanks for looking at the issue.
> 
> Unfortunately, it still fails for me:
> 
> $ nslookup testnet-seed.bitcoin.petertodd.org
> Server:		127.0.1.1
> Address:	127.0.1.1#53
> 
> ** server can't find testnet-seed.bitcoin.petertodd.org: SERVFAIL
> 
> Like I said, can you look at the logfiles how the requests arrive?

There are no logfiles for DNS requests.

I just checked on EC2 and my cellphone internet connection here in Tel
Aviv; both work fine. My best guess is that your DNS resolver locally or
at your ISP is unable to deal with the fact that the second DNS seed
serving the domain testnet-seed.bitcoin.petertodd.org happens to be down
right now. Note that some ISP's appear to both run buggy DNS servers,
and redirect traffic meant to go to Google's 8.8.8 and 8.8.4.4 DNS
servers to their own servers.

I'd suggest that someone setup an alternate HTTP(S) based DNS seed for
protocol redundency.

> What particular thing did you fix? It would be good to know for future
> outages.

Dunno exactly. It appeared to be running fine when I logged into the
machine, but for whatever reason DNS requests just weren't getting
resolved. Restarted and it was ok again.

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140526/c87df7ed/attachment.sig>

From dave at dtrt.org  Mon May 26 21:01:28 2014
From: dave at dtrt.org (David A. Harding)
Date: Mon, 26 May 2014 17:01:28 -0400
Subject: [Bitcoin-development] Announce: Bitcoin.org Developer Documentation
	Now Live
Message-ID: <20140526210128.GB24336@localhost.localdomain>

Hi all,

The first version of the Bitcoin.org Developer Documentation is now
live. The main URL (below) provides a portal to two main documents, an
overview-level guide and a more detailed reference. The portal page also
links to individual sections of the documentation and noteworthy
off-site documentation:

    https://bitcoin.org/en/developer-documentation

In printed pages, the current version is about 130 pages long in total.
Notable parts include:

* Technical, but still plain-English, descriptions of the block chain
  and transactions, including several illustrations:

    https://bitcoin.org/en/developer-guide#block-chain
    https://bitcoin.org/en/developer-guide#transactions

* A description of several different "contracts", including arbitration
  contracts, micropayment channels, and coinjoin:

    https://bitcoin.org/en/developer-guide#contracts

* Information about wallet formats, including what we hope is a good
  introduction to BIP32 HD wallets for people not already familiar with
  ECDSA specifics:

    https://bitcoin.org/en/developer-guide#wallets
    https://bitcoin.org/en/developer-guide#hierarchical-deterministic-key-creation

* A considerable amount of payment processing detail, currently aimed
  primarily at developers writing payment-receiving applications for
  merchants. It includes a step-by-step description of the BIP70 Payment
  Protocol using an actual CGI script example.

    https://bitcoin.org/en/developer-guide#payment-processing
    https://bitcoin.org/en/developer-guide#payment-protocol

* A description of every RPC included in Bitcoin Core 0.9
  cross-referenced with the other sections of the documentation and
  augmented with actual examples of the command in use.

    https://bitcoin.org/en/developer-reference#remote-procedure-calls-rpcs

* Not a section, but still notable are the over 2,000 cross-references
  in the text---there are so many that we hide them by default. Hover
  your mouse over a paragraph to see the cross references (in blue) and
  hover your mouse over the link to see more information.



Additions and improvements to the text are being worked on right
now, with an average of 200 lines of text being added each day.

We are, however, in need of expert reviewers.  Issues can be opened on
the main Bitcoin.org repository:

    https://github.com/bitcoin/bitcoin.org/issues/new

(If you find an issue while reading the documentation, please click the
Report An Issue link on the bottom left side---this will automatically
add the URL and nearest HTML anchor to your bug report so we know where
to find what you're talking about.)

We also welcome suggestions about what to write next:

    https://github.com/bitcoin/bitcoin.org/wiki/Documentation-TODO

All work has been done by volunteers---and we're always looking for more
contributors.  Please feel free to subscribe to our mailing list and say
hello.

    https://groups.google.com/forum/#!forum/bitcoin-documentation

And, most importantly, thank you to everyone from the -dev mailing list
who has helped us produce this content over the last 80 days!

Sincerely,

-Dave Harding on behalf of Sa?vann Carignan, Greg Sanders, and all the
 documentation contributors
-- 
David A. Harding



From andreas at schildbach.de  Mon May 26 22:12:05 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Tue, 27 May 2014 00:12:05 +0200
Subject: [Bitcoin-development] testnet-seed.bitcoin.petertodd.org is up
	again
In-Reply-To: <20140526163753.GA18693@petertodd.org>
References: <20140523221726.GA30143@petertodd.org> <lltfaa$2lv$1@ger.gmane.org>
	<20140526163753.GA18693@petertodd.org>
Message-ID: <lm0e7m$thg$1@ger.gmane.org>

You're very quick to point at others. Especially since they run software
that had the time to mature for about 30 years, and the protocol didn't
really change since then...

The last time it didn't work, the bug -- non RFC-conformance -- was on
the bitcoin seeders side. ISPs do weird things with DNS, but usually
they stay within the RFC.

Anyway, without logs we don't have a chance to debug this issue. Any
chance you could add simple logging to the seeder?

DNS via HTTP? Never heard of that, at least it sounds weird as well.


On 05/26/2014 06:37 PM, Peter Todd wrote:
> On Sun, May 25, 2014 at 09:12:10PM +0200, Andreas Schildbach wrote:
>> Thanks for looking at the issue.
>>
>> Unfortunately, it still fails for me:
>>
>> $ nslookup testnet-seed.bitcoin.petertodd.org
>> Server:		127.0.1.1
>> Address:	127.0.1.1#53
>>
>> ** server can't find testnet-seed.bitcoin.petertodd.org: SERVFAIL
>>
>> Like I said, can you look at the logfiles how the requests arrive?
> 
> There are no logfiles for DNS requests.
> 
> I just checked on EC2 and my cellphone internet connection here in Tel
> Aviv; both work fine. My best guess is that your DNS resolver locally or
> at your ISP is unable to deal with the fact that the second DNS seed
> serving the domain testnet-seed.bitcoin.petertodd.org happens to be down
> right now. Note that some ISP's appear to both run buggy DNS servers,
> and redirect traffic meant to go to Google's 8.8.8 and 8.8.4.4 DNS
> servers to their own servers.
> 
> I'd suggest that someone setup an alternate HTTP(S) based DNS seed for
> protocol redundency.
> 
>> What particular thing did you fix? It would be good to know for future
>> outages.
> 
> Dunno exactly. It appeared to be running fine when I logged into the
> machine, but for whatever reason DNS requests just weren't getting
> resolved. Restarted and it was ok again.
> 
> 
> 
> ------------------------------------------------------------------------------
> The best possible search technologies are now affordable for all companies.
> Download your FREE open source Enterprise Search Engine today!
> Our experts will assist you in its installation for $59/mo, no commitment.
> Test it for FREE on our Cloud platform anytime!
> http://pubads.g.doubleclick.net/gampad/clk?id=145328191&iu=/4140/ostg.clktrk
> 
> 
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 





From pete at petertodd.org  Mon May 26 22:39:54 2014
From: pete at petertodd.org (Peter Todd)
Date: Tue, 27 May 2014 01:39:54 +0300
Subject: [Bitcoin-development] testnet-seed.bitcoin.petertodd.org is
	up	again
In-Reply-To: <lm0e7m$thg$1@ger.gmane.org>
References: <20140523221726.GA30143@petertodd.org> <lltfaa$2lv$1@ger.gmane.org>
	<20140526163753.GA18693@petertodd.org> <lm0e7m$thg$1@ger.gmane.org>
Message-ID: <b6884e2a-42b7-4c3f-a034-3a466aeec751@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256



On 27 May 2014 01:12:05 GMT+03:00, Andreas Schildbach <andreas at schildbach.de> wrote:
>You're very quick to point at others. Especially since they run
>software
>that had the time to mature for about 30 years, and the protocol didn't
>really change since then...
>
>The last time it didn't work, the bug -- non RFC-conformance -- was on
>the bitcoin seeders side. ISPs do weird things with DNS, but usually
>they stay within the RFC.
>
>Anyway, without logs we don't have a chance to debug this issue. Any
>chance you could add simple logging to the seeder?
>
>DNS via HTTP? Never heard of that, at least it sounds weird as well.

Hey, really sorry I don't have the time to fix this issue, been travelling for a few weeks for my consulting job. If you want to step up and volunteer please feel free.
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCAA6BQJTg8K6MxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhUWgCADCNe4CjWondwDCovkv
+Cq7Yl3gLixvsTt5L9nllYc63/wt3GYliSIkR9baJ1QdPhckEjsvJV51XtdXPmJ5
EwTEbkJe6gflVwprvXB+w7eJtwMgZy5UoaWIYIZAIGsGKtJA8sngU1t638ywm68a
UEAcq/xACU47l2wPK/WU3uPY8ctGutCtXW2XDlDlCZOugqSc/8yaA76S5ogBicXw
xXvf95uMPVPCqit6B8FHCG/DH7akKGcnv6lIBTfx25KjgpyMwaroPt6EkPuz96MK
YbkQin0T0iW+X5WvXblO1mgq4fDrLE6J5x8sULFx/QKC9lgGB+cOQNKdyhxKOzF9
jtX7
=SUP4
-----END PGP SIGNATURE-----




From andreas at schildbach.de  Mon May 26 23:19:39 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Tue, 27 May 2014 01:19:39 +0200
Subject: [Bitcoin-development] testnet-seed.bitcoin.petertodd.org is up
	again
In-Reply-To: <b6884e2a-42b7-4c3f-a034-3a466aeec751@email.android.com>
References: <20140523221726.GA30143@petertodd.org>
	<lltfaa$2lv$1@ger.gmane.org>	<20140526163753.GA18693@petertodd.org>
	<lm0e7m$thg$1@ger.gmane.org>
	<b6884e2a-42b7-4c3f-a034-3a466aeec751@email.android.com>
Message-ID: <lm0i6b$4m9$1@ger.gmane.org>

On 05/27/2014 12:39 AM, Peter Todd wrote:

> On 27 May 2014 01:12:05 GMT+03:00, Andreas Schildbach
> <andreas at schildbach.de> wrote:
>> You're very quick to point at others. Especially since they run 
>> software that had the time to mature for about 30 years, and the
>> protocol didn't really change since then...
> 
>> The last time it didn't work, the bug -- non RFC-conformance --
>> was on the bitcoin seeders side. ISPs do weird things with DNS,
>> but usually they stay within the RFC.
> 
>> Anyway, without logs we don't have a chance to debug this issue.
>> Any chance you could add simple logging to the seeder?
> 
>> DNS via HTTP? Never heard of that, at least it sounds weird as
>> well.
> 
> Hey, really sorry I don't have the time to fix this issue, been
> travelling for a few weeks for my consulting job. If you want to
> step up and volunteer please feel free.

I'm already volunteering. At least I don't get paid for my efforts in
debugging the seed infrastructure.

Can you verify if your copy of the seeder contains the commit
8dcc006e6256cb746c2b025daf3df41baa26353e ?

It fixed a bug that has exactly the symptoms we currently see.

I wonder if the restart of your server actually changed/fixed
anything. If you got a SERVFAIL this may be because you were traveling
through parts of the world that can't reach your server. Did you
actually try at home, before the restart?




From tkembo at gmail.com  Wed May 28 16:37:40 2014
From: tkembo at gmail.com (Tawanda Kembo)
Date: Wed, 28 May 2014 18:37:40 +0200
Subject: [Bitcoin-development] Make links on 'About Bitcoin Core' into
	clickable #4211
Message-ID: <8ED4B55B-E955-4F19-86B1-2155A7CD0EF0@gmail.com>

Hello,

I?m new to bitcoin, I?m a developer and I want to start contributing to the BitcoinQt project. My first contribution is to make the links on the ?About Bitcoin Core? clickable - personally I think it enhances the user experience. There is was some concern though of a tradeoff which makes it harder to translate that page. Here is the link to my pull request: https://github.com/bitcoin/bitcoin/pull/4211

I?m keen to hear what others think.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140528/38789acf/attachment.html>

From toshi at peernova.com  Fri May 30 00:01:23 2014
From: toshi at peernova.com (Toshi Morita)
Date: Thu, 29 May 2014 17:01:23 -0700
Subject: [Bitcoin-development] bitcoind minor bug in wallet and possible fix
Message-ID: <CANFXpYMC2hYzFx5fPkqTv2LiCrtDny3yUV5u20ckK56zVjSpGA@mail.gmail.com>

I ran bitcoind under valgrind and found a place where it references an
uninitialized variable in some cases:

tm at tm-VirtualBox:~/bitcoind/bitcoin/src$ valgrind ./bitcoind
==2337== Memcheck, a memory error detector
==2337== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==2337== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==2337== Command: ./bitcoind
==2337==
==2337== Conditional jump or move depends on uninitialised value(s)
==2337==    at 0x319176: CWallet::LoadKeyMetadata(CPubKey const&,
CKeyMetadata const&) (wallet.cpp:110)
==2337==    by 0x33645A: ReadKeyValue(CWallet*, CDataStream&, CDataStream&,
CWalletScanState&, std::string&, std::string&) (walletdb.cpp:509)
==2337==    by 0x3374F0: CWalletDB::LoadWallet(CWallet*) (walletdb.cpp:623)
==2337==    by 0x3218FD: CWallet::LoadWallet(bool&) (wallet.cpp:1485)
==2337==    by 0x157F16: AppInit2(boost::thread_group&) (init.cpp:958)
==2337==    by 0x140142: AppInit(int, char**) (bitcoind.cpp:143)
==2337==    by 0x13649E: main (bitcoind.cpp:180)
==2337==

The bug occurs here because nTimeFirstKey is not initialized when the
wallet is instantiated:

wallet.cpp:63
    if (!nTimeFirstKey || nCreationTime < nTimeFirstKey)
        nTimeFirstKey = nCreationTime;


I fixed it in my fork:

diff --git a/src/wallet.h b/src/wallet.h
index 9607415..b78045f 100644
--- a/src/wallet.h
+++ b/src/wallet.h
@@ -163,6 +163,7 @@ public:
         nOrderPosNext = 0;
         nNextResend = 0;
         nLastResend = 0;
+        nTimeFirstKey = 0;
     }

If this fix is ok please pull from my GitHub fork; username on GitHub is
tm314159.

Toshi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140529/648eb59b/attachment.html>

From mark at monetize.io  Fri May 30 00:06:40 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Thu, 29 May 2014 17:06:40 -0700
Subject: [Bitcoin-development] bitcoind minor bug in wallet and possible
	fix
In-Reply-To: <CANFXpYMC2hYzFx5fPkqTv2LiCrtDny3yUV5u20ckK56zVjSpGA@mail.gmail.com>
References: <CANFXpYMC2hYzFx5fPkqTv2LiCrtDny3yUV5u20ckK56zVjSpGA@mail.gmail.com>
Message-ID: <CACh7GpHqCK=FFOO6C=mdHnqfCu5uZ34jf5ez6VDaSHimYnj5AA@mail.gmail.com>

Please make a pull request on github. It'll likely get merged quickly.
On May 29, 2014 5:04 PM, "Toshi Morita" <toshi at peernova.com> wrote:

> I ran bitcoind under valgrind and found a place where it references an
> uninitialized variable in some cases:
>
> tm at tm-VirtualBox:~/bitcoind/bitcoin/src$ valgrind ./bitcoind
> ==2337== Memcheck, a memory error detector
> ==2337== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
> ==2337== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
> ==2337== Command: ./bitcoind
> ==2337==
> ==2337== Conditional jump or move depends on uninitialised value(s)
> ==2337==    at 0x319176: CWallet::LoadKeyMetadata(CPubKey const&,
> CKeyMetadata const&) (wallet.cpp:110)
> ==2337==    by 0x33645A: ReadKeyValue(CWallet*, CDataStream&,
> CDataStream&, CWalletScanState&, std::string&, std::string&)
> (walletdb.cpp:509)
> ==2337==    by 0x3374F0: CWalletDB::LoadWallet(CWallet*) (walletdb.cpp:623)
> ==2337==    by 0x3218FD: CWallet::LoadWallet(bool&) (wallet.cpp:1485)
> ==2337==    by 0x157F16: AppInit2(boost::thread_group&) (init.cpp:958)
> ==2337==    by 0x140142: AppInit(int, char**) (bitcoind.cpp:143)
> ==2337==    by 0x13649E: main (bitcoind.cpp:180)
> ==2337==
>
> The bug occurs here because nTimeFirstKey is not initialized when the
> wallet is instantiated:
>
> wallet.cpp:63
>     if (!nTimeFirstKey || nCreationTime < nTimeFirstKey)
>         nTimeFirstKey = nCreationTime;
>
>
> I fixed it in my fork:
>
> diff --git a/src/wallet.h b/src/wallet.h
> index 9607415..b78045f 100644
> --- a/src/wallet.h
> +++ b/src/wallet.h
> @@ -163,6 +163,7 @@ public:
>          nOrderPosNext = 0;
>          nNextResend = 0;
>          nLastResend = 0;
> +        nTimeFirstKey = 0;
>      }
>
> If this fix is ok please pull from my GitHub fork; username on GitHub is
> tm314159.
>
> Toshi
>
>
>
> ------------------------------------------------------------------------------
> Time is money. Stop wasting it! Get your web API in 5 minutes.
> www.restlet.com/download
> http://p.sf.net/sfu/restlet
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140529/c9a1b6ce/attachment.html>

From toshi at peernova.com  Fri May 30 00:10:36 2014
From: toshi at peernova.com (Toshi Morita)
Date: Thu, 29 May 2014 17:10:36 -0700
Subject: [Bitcoin-development] bitcoind minor bug in wallet and possible
	fix
In-Reply-To: <CACh7GpHqCK=FFOO6C=mdHnqfCu5uZ34jf5ez6VDaSHimYnj5AA@mail.gmail.com>
References: <CANFXpYMC2hYzFx5fPkqTv2LiCrtDny3yUV5u20ckK56zVjSpGA@mail.gmail.com>
	<CACh7GpHqCK=FFOO6C=mdHnqfCu5uZ34jf5ez6VDaSHimYnj5AA@mail.gmail.com>
Message-ID: <CANFXpYPw8dsein-LoJBrctgVm2u1yrFDNF1jTyWTM2RaX2tPuQ@mail.gmail.com>

Ok. Done.

Toshi



On Thu, May 29, 2014 at 5:06 PM, Mark Friedenbach <mark at monetize.io> wrote:

> Please make a pull request on github. It'll likely get merged quickly.
> On May 29, 2014 5:04 PM, "Toshi Morita" <toshi at peernova.com> wrote:
>
>> I ran bitcoind under valgrind and found a place where it references an
>> uninitialized variable in some cases:
>>
>> tm at tm-VirtualBox:~/bitcoind/bitcoin/src$ valgrind ./bitcoind
>> ==2337== Memcheck, a memory error detector
>> ==2337== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
>> ==2337== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
>> ==2337== Command: ./bitcoind
>> ==2337==
>> ==2337== Conditional jump or move depends on uninitialised value(s)
>> ==2337==    at 0x319176: CWallet::LoadKeyMetadata(CPubKey const&,
>> CKeyMetadata const&) (wallet.cpp:110)
>> ==2337==    by 0x33645A: ReadKeyValue(CWallet*, CDataStream&,
>> CDataStream&, CWalletScanState&, std::string&, std::string&)
>> (walletdb.cpp:509)
>> ==2337==    by 0x3374F0: CWalletDB::LoadWallet(CWallet*)
>> (walletdb.cpp:623)
>> ==2337==    by 0x3218FD: CWallet::LoadWallet(bool&) (wallet.cpp:1485)
>> ==2337==    by 0x157F16: AppInit2(boost::thread_group&) (init.cpp:958)
>> ==2337==    by 0x140142: AppInit(int, char**) (bitcoind.cpp:143)
>> ==2337==    by 0x13649E: main (bitcoind.cpp:180)
>> ==2337==
>>
>> The bug occurs here because nTimeFirstKey is not initialized when the
>> wallet is instantiated:
>>
>> wallet.cpp:63
>>     if (!nTimeFirstKey || nCreationTime < nTimeFirstKey)
>>         nTimeFirstKey = nCreationTime;
>>
>>
>> I fixed it in my fork:
>>
>> diff --git a/src/wallet.h b/src/wallet.h
>> index 9607415..b78045f 100644
>> --- a/src/wallet.h
>> +++ b/src/wallet.h
>> @@ -163,6 +163,7 @@ public:
>>          nOrderPosNext = 0;
>>          nNextResend = 0;
>>          nLastResend = 0;
>> +        nTimeFirstKey = 0;
>>      }
>>
>> If this fix is ok please pull from my GitHub fork; username on GitHub is
>> tm314159.
>>
>> Toshi
>>
>>
>>
>> ------------------------------------------------------------------------------
>> Time is money. Stop wasting it! Get your web API in 5 minutes.
>> www.restlet.com/download
>> http://p.sf.net/sfu/restlet
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140529/2a5c17ed/attachment.html>

From pete at petertodd.org  Fri May 30 09:43:12 2014
From: pete at petertodd.org (Peter Todd)
Date: Fri, 30 May 2014 12:43:12 +0300
Subject: [Bitcoin-development] testnet-seed.bitcoin.petertodd.org is
	up	again
In-Reply-To: <lm0i6b$4m9$1@ger.gmane.org>
References: <20140523221726.GA30143@petertodd.org> <lltfaa$2lv$1@ger.gmane.org>
	<20140526163753.GA18693@petertodd.org> <lm0e7m$thg$1@ger.gmane.org>
	<b6884e2a-42b7-4c3f-a034-3a466aeec751@email.android.com>
	<lm0i6b$4m9$1@ger.gmane.org>
Message-ID: <cae15a82-73f7-4703-bc7d-f433b002e06e@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256



On 27 May 2014 02:19:39 GMT+03:00, Andreas Schildbach <andreas at schildbach.de> wrote:
>> Hey, really sorry I don't have the time to fix this issue, been
>> travelling for a few weeks for my consulting job. If you want to
>> step up and volunteer please feel free.
>
>I'm already volunteering. At least I don't get paid for my efforts in
>debugging the seed infrastructure.

I meant running a seed yourself. Note that I've only received funds to cover expenses and a trivial amount on top to cover some time - about one and a half hours at my usual rates.

Gavin: Speaking of, given it looks like my work will be frequently keeping me out of country and unable to provide any more than a "best effort" attempt at running a seed, I'd like to give back the grant funds for doing so. Email me privately with an address to send them too. I have no plans to take it down, however the expectations users have for it aren't something I can provide.

>Can you verify if your copy of the seeder contains the commit
>8dcc006e6256cb746c2b025daf3df41baa26353e ?
>
>It fixed a bug that has exactly the symptoms we currently see.
>
>I wonder if the restart of your server actually changed/fixed
>anything. If you got a SERVFAIL this may be because you were traveling
>through parts of the world that can't reach your server. Did you
>actually try at home, before the restart?

I checked via the same proxy both times; I believe the endpoint is located in Europe.
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCAA6BQJTiFKwMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhQFCB/4jypD+xzKVp6fqRUxu
v22Rc6PeCbeaPYKmdNu0LbY1G5spB8C8ooaZX6z0Ib/CYobzDPJ+rJNB+c1Fna4N
1IdH7ZsrX0GFaEn7Grnp7D2rtOXGZV+1XGFAateIA/caQ9+rJfqkHLuvOI0Fh+Ua
/m857rxUNtA1kObLFS7gfhi2gwXGO6KQ3muS3462hXVVc9j7DhOWQQwJba5PL+Je
Eob4WtnF2gVFlCEWevxvflF7j4lW9I/S81yZQDnNW9ATF2mfZVqo26sB0yL6Tm4l
KgdKx7+w3khv6QfW9Ilx0Ov3Ml2ZMRhBimpbnENbW4jfklsuRQcM0yx6vXS/lIMz
LO5s
=Up3N
-----END PGP SIGNATURE-----




From alexykot at gmail.com  Fri May 30 13:19:05 2014
From: alexykot at gmail.com (Alex Kotenko)
Date: Fri, 30 May 2014 14:19:05 +0100
Subject: [Bitcoin-development] testnet-seed.bitcoin.petertodd.org is up
	again
In-Reply-To: <cae15a82-73f7-4703-bc7d-f433b002e06e@email.android.com>
References: <20140523221726.GA30143@petertodd.org> <lltfaa$2lv$1@ger.gmane.org>
	<20140526163753.GA18693@petertodd.org> <lm0e7m$thg$1@ger.gmane.org>
	<b6884e2a-42b7-4c3f-a034-3a466aeec751@email.android.com>
	<lm0i6b$4m9$1@ger.gmane.org>
	<cae15a82-73f7-4703-bc7d-f433b002e06e@email.android.com>
Message-ID: <CALDj+Bax5De1gh1wsz_BjTFTerjzrazZ4SBgEVvYGjhFw3+uEw@mail.gmail.com>

Hi Peter


I've setup DNS seeds myself a week ago, at testnet-seed.alexykot.me and
bitcoin-seed.alexykot.me, but there is a problem with DNS settings that we
with Andreas couldn't sort out quickly.
The problem itself is that I can reach my nameserver and get dnsseed
response if I query it directly with
dig @node.alexykot.me testnet-seed.alexykot.me
dig @node.alexykot.me bitcoin-seed.alexykot.me

?But when I try nslookup testnet-seed.alexykot.me? - it fails.
I guess the problem is in my DNS settings but I can't figure out what is it.

?S
o could you share
?how you configured
DNS
? for your seed
?
to help me debug
?mine
?



Best regards,
Alex Kotenko


2014-05-30 10:43 GMT+01:00 Peter Todd <pete at petertodd.org>:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA256
>
>
>
> On 27 May 2014 02:19:39 GMT+03:00, Andreas Schildbach <
> andreas at schildbach.de> wrote:
> >> Hey, really sorry I don't have the time to fix this issue, been
> >> travelling for a few weeks for my consulting job. If you want to
> >> step up and volunteer please feel free.
> >
> >I'm already volunteering. At least I don't get paid for my efforts in
> >debugging the seed infrastructure.
>
> I meant running a seed yourself. Note that I've only received funds to
> cover expenses and a trivial amount on top to cover some time - about one
> and a half hours at my usual rates.
>
> Gavin: Speaking of, given it looks like my work will be frequently keeping
> me out of country and unable to provide any more than a "best effort"
> attempt at running a seed, I'd like to give back the grant funds for doing
> so. Email me privately with an address to send them too. I have no plans to
> take it down, however the expectations users have for it aren't something I
> can provide.
>
> >Can you verify if your copy of the seeder contains the commit
> >8dcc006e6256cb746c2b025daf3df41baa26353e ?
> >
> >It fixed a bug that has exactly the symptoms we currently see.
> >
> >I wonder if the restart of your server actually changed/fixed
> >anything. If you got a SERVFAIL this may be because you were traveling
> >through parts of the world that can't reach your server. Did you
> >actually try at home, before the restart?
>
> I checked via the same proxy both times; I believe the endpoint is located
> in Europe.
> -----BEGIN PGP SIGNATURE-----
> Version: APG v1.1.1
>
> iQFQBAEBCAA6BQJTiFKwMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
> cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhQFCB/4jypD+xzKVp6fqRUxu
> v22Rc6PeCbeaPYKmdNu0LbY1G5spB8C8ooaZX6z0Ib/CYobzDPJ+rJNB+c1Fna4N
> 1IdH7ZsrX0GFaEn7Grnp7D2rtOXGZV+1XGFAateIA/caQ9+rJfqkHLuvOI0Fh+Ua
> /m857rxUNtA1kObLFS7gfhi2gwXGO6KQ3muS3462hXVVc9j7DhOWQQwJba5PL+Je
> Eob4WtnF2gVFlCEWevxvflF7j4lW9I/S81yZQDnNW9ATF2mfZVqo26sB0yL6Tm4l
> KgdKx7+w3khv6QfW9Ilx0Ov3Ml2ZMRhBimpbnENbW4jfklsuRQcM0yx6vXS/lIMz
> LO5s
> =Up3N
> -----END PGP SIGNATURE-----
>
>
>
> ------------------------------------------------------------------------------
> Time is money. Stop wasting it! Get your web API in 5 minutes.
> www.restlet.com/download
> http://p.sf.net/sfu/restlet
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140530/9fe8be01/attachment.html>

From robert at mckay.com  Fri May 30 13:41:39 2014
From: robert at mckay.com (Robert McKay)
Date: Fri, 30 May 2014 14:41:39 +0100
Subject: [Bitcoin-development] testnet-seed.bitcoin.petertodd.org is up
	again
In-Reply-To: <CALDj+Bax5De1gh1wsz_BjTFTerjzrazZ4SBgEVvYGjhFw3+uEw@mail.gmail.com>
References: <20140523221726.GA30143@petertodd.org>
	<lltfaa$2lv$1@ger.gmane.org> <20140526163753.GA18693@petertodd.org>
	<lm0e7m$thg$1@ger.gmane.org>
	<b6884e2a-42b7-4c3f-a034-3a466aeec751@email.android.com>
	<lm0i6b$4m9$1@ger.gmane.org>
	<cae15a82-73f7-4703-bc7d-f433b002e06e@email.android.com>
	<CALDj+Bax5De1gh1wsz_BjTFTerjzrazZ4SBgEVvYGjhFw3+uEw@mail.gmail.com>
Message-ID: <bce4e62749b3325d884caaf510e9d862@webmail.mckay.com>

Hi Alex,

I think the problem is with my suggestion to use bind forwarding.. 
basically bind is stripping off the authorative answer bit in the 
reply.. this causes the recursor to go into a loop chasing the authority 
server which again returns a non-authoritve answer with itself as the 
authority again. I'm not sure if this can be fixed without hacking the 
bind src, so maybe it wasn't such a great suggestion in the first place. 
Basically I think if bind was returning authorative answers it would 
work, but I can't see any way to make that happen in the bind 
configuration.

Rob


On Fri, 30 May 2014 14:19:05 +0100, Alex Kotenko wrote:
> Hi Peter
>
> Ive setup DNS seeds myself a week ago, at testnet-seed.alexykot.me 
> [6]
> and bitcoin-seed.alexykot.me [7], but there is a problem with DNS
> settings that we with Andreas couldnt sort out quickly.
> The problem itself is that I can reach my nameserver and get dnsseed
> response if I query it directly with
>  dig @node.alexykot.me [8] testnet-seed.alexykot.me [9]
>
>  dig @node.alexykot.me [10] bitcoin-seed.alexykot.me [11]
>
> ?But when I try nslookup testnet-seed.alexykot.me [12]? - it
> fails.?
> I guess the problem is in my DNS settings but I cant figure out what
> is it.
>
> ?S o could you share
> ?how you configured?DNS
>  ? for your seed
> ? to help me debug
>  ?mine
> ??
>
> Best regards,?
>
> Alex Kotenko
>
> 2014-05-30 10:43 GMT+01:00 Peter Todd :
>
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA256
>>
>> On 27 May 2014 02:19:39 GMT+03:00, Andreas Schildbach wrote:
>> >> Hey, really sorry I dont have the time to fix this issue, been
>> >> travelling for a few weeks for my consulting job. If you want to
>> >> step up and volunteer please feel free.
>> >
>> >Im already volunteering. At least I dont get paid for my efforts
>> in
>> >debugging the seed infrastructure.
>>
>> I meant running a seed yourself. Note that Ive only received funds
>> to cover expenses and a trivial amount on top to cover some time -
>> about one and a half hours at my usual rates.
>>
>> Gavin: Speaking of, given it looks like my work will be frequently
>> keeping me out of country and unable to provide any more than a
>> "best effort" attempt at running a seed, Id like to give back the
>> grant funds for doing so. Email me privately with an address to send
>> them too. I have no plans to take it down, however the expectations
>> users have for it arent something I can provide.
>>
>> >Can you verify if your copy of the seeder contains the commit
>> >8dcc006e6256cb746c2b025daf3df41baa26353e ?
>> >
>> >It fixed a bug that has exactly the symptoms we currently see.
>> >
>> >I wonder if the restart of your server actually changed/fixed
>> >anything. If you got a SERVFAIL this may be because you were
>> traveling
>> >through parts of the world that cant reach your server. Did you
>> >actually try at home, before the restart?
>>
>> I checked via the same proxy both times; I believe the endpoint is
>> located in Europe.
>>
>> -----BEGIN PGP SIGNATURE-----
>> Version: APG v1.1.1
>>
>> iQFQBAEBCAA6BQJTiFKwMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
>> cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhQFCB/4jypD+xzKVp6fqRUxu
>> v22Rc6PeCbeaPYKmdNu0LbY1G5spB8C8ooaZX6z0Ib/CYobzDPJ+rJNB+c1Fna4N
>> 1IdH7ZsrX0GFaEn7Grnp7D2rtOXGZV+1XGFAateIA/caQ9+rJfqkHLuvOI0Fh+Ua
>> /m857rxUNtA1kObLFS7gfhi2gwXGO6KQ3muS3462hXVVc9j7DhOWQQwJba5PL+Je
>> Eob4WtnF2gVFlCEWevxvflF7j4lW9I/S81yZQDnNW9ATF2mfZVqo26sB0yL6Tm4l
>> KgdKx7+w3khv6QfW9Ilx0Ov3Ml2ZMRhBimpbnENbW4jfklsuRQcM0yx6vXS/lIMz
>> LO5s
>> =Up3N
>> -----END PGP SIGNATURE-----
>>
>>
> 
> ------------------------------------------------------------------------------
>> Time is money. Stop wasting it! Get your web API in 5 minutes.
>> www.restlet.com/download [2]
>> http://p.sf.net/sfu/restlet [3]
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net [4]
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> [5]
>
>
>
> Links:
> ------
> [1] mailto:andreas at schildbach.de
> [2] http://www.restlet.com/download
> [3] http://p.sf.net/sfu/restlet
> [4] mailto:Bitcoin-development at lists.sourceforge.net
> [5] https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> [6] http://testnet-seed.alexykot.me
> [7] http://bitcoin-seed.alexykot.me
> [8] http://node.alexykot.me
> [9] http://testnet-seed.alexykot.me
> [10] http://alexykot.me
> [11] http://bitcoin-seed.alexykot.me
> [12] http://testnet-seed.alexykot.me
> [13] mailto:pete at petertodd.org




From alexykot at gmail.com  Fri May 30 14:13:36 2014
From: alexykot at gmail.com (Alex Kotenko)
Date: Fri, 30 May 2014 15:13:36 +0100
Subject: [Bitcoin-development] testnet-seed.bitcoin.petertodd.org is up
	again
In-Reply-To: <bce4e62749b3325d884caaf510e9d862@webmail.mckay.com>
References: <20140523221726.GA30143@petertodd.org> <lltfaa$2lv$1@ger.gmane.org>
	<20140526163753.GA18693@petertodd.org> <lm0e7m$thg$1@ger.gmane.org>
	<b6884e2a-42b7-4c3f-a034-3a466aeec751@email.android.com>
	<lm0i6b$4m9$1@ger.gmane.org>
	<cae15a82-73f7-4703-bc7d-f433b002e06e@email.android.com>
	<CALDj+Bax5De1gh1wsz_BjTFTerjzrazZ4SBgEVvYGjhFw3+uEw@mail.gmail.com>
	<bce4e62749b3325d884caaf510e9d862@webmail.mckay.com>
Message-ID: <CALDj+BZSYojZ1kQqb_5zrpjc=5E94bbZ7a0PG4bkZx38J0zHWQ@mail.gmail.com>

Hmm, you might be right, as queries
dig @node.alexykot.me testnet-seed.alexykot.me
?and
dig @node.alexykot.me -p 18353 testnet-seed.alexykot.me?

?are giving different authority sections.

Hmm, but if I setup custom SOA record for it - it should work, right?
What SOA name should it be actually, assuming that NS record for
testnet-seed.alexykot.me is pointing at alexykot.me?


Best regards,
Alex Kotenko


2014-05-30 14:41 GMT+01:00 Robert McKay <robert at mckay.com>:

> Hi Alex,
>
> I think the problem is with my suggestion to use bind forwarding..
> basically bind is stripping off the authorative answer bit in the reply..
> this causes the recursor to go into a loop chasing the authority server
> which again returns a non-authoritve answer with itself as the authority
> again. I'm not sure if this can be fixed without hacking the bind src, so
> maybe it wasn't such a great suggestion in the first place. Basically I
> think if bind was returning authorative answers it would work, but I can't
> see any way to make that happen in the bind configuration.
>
> Rob
>
>
> On Fri, 30 May 2014 14:19:05 +0100, Alex Kotenko wrote:
>
>> Hi Peter
>>
>> Ive setup DNS seeds myself a week ago, at testnet-seed.alexykot.me [6]
>> and bitcoin-seed.alexykot.me [7], but there is a problem with DNS
>> settings that we with Andreas couldnt sort out quickly.
>>
>> The problem itself is that I can reach my nameserver and get dnsseed
>> response if I query it directly with
>>  dig @node.alexykot.me [8] testnet-seed.alexykot.me [9]
>>
>>  dig @node.alexykot.me [10] bitcoin-seed.alexykot.me [11]
>>
>> ?But when I try nslookup testnet-seed.alexykot.me [12]? - it
>> fails.
>> I guess the problem is in my DNS settings but I cant figure out what
>> is it.
>>
>> ?S o could you share
>> ?how you configured DNS
>>  ? for your seed
>> ? to help me debug
>>  ?mine
>> ?
>>
>> Best regards,
>>
>> Alex Kotenko
>> ?
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140530/a4fe95aa/attachment.html>

From robert at mckay.com  Fri May 30 14:51:58 2014
From: robert at mckay.com (Robert McKay)
Date: Fri, 30 May 2014 15:51:58 +0100
Subject: [Bitcoin-development] testnet-seed.bitcoin.petertodd.org is up
	again
In-Reply-To: <CALDj+BZSYojZ1kQqb_5zrpjc=5E94bbZ7a0PG4bkZx38J0zHWQ@mail.gmail.com>
References: <20140523221726.GA30143@petertodd.org>
	<lltfaa$2lv$1@ger.gmane.org> <20140526163753.GA18693@petertodd.org>
	<lm0e7m$thg$1@ger.gmane.org>
	<b6884e2a-42b7-4c3f-a034-3a466aeec751@email.android.com>
	<lm0i6b$4m9$1@ger.gmane.org>
	<cae15a82-73f7-4703-bc7d-f433b002e06e@email.android.com>
	<CALDj+Bax5De1gh1wsz_BjTFTerjzrazZ4SBgEVvYGjhFw3+uEw@mail.gmail.com>
	<bce4e62749b3325d884caaf510e9d862@webmail.mckay.com>
	<CALDj+BZSYojZ1kQqb_5zrpjc=5E94bbZ7a0PG4bkZx38J0zHWQ@mail.gmail.com>
Message-ID: <48331d04b68b3d6554b4e59e97ffbafe@webmail.mckay.com>

No, I don't think so. The problem is the 'aa' flag is missing (see the 
'flags' section in dig). Perhaps if you could suppress the authority 
records the recursor would give up and just accept the non-authorative 
answer, but that isn't a good solution even if it might work for some 
resolvers.

Rob

On Fri, 30 May 2014 15:13:36 +0100, Alex Kotenko wrote:
> Hmm, you might be right, as queries?
> dig @node.alexykot.me [8]?testnet-seed.alexykot.me [9]
>
> ?and?
>  dig @node.alexykot.me [10]?-p 18353?testnet-seed.alexykot.me
> [11]?
>
> ?are giving different authority sections.
>
> Hmm, but if I setup custom SOA record for it - it should work,
> right??
>  What SOA name should it be actually, assuming that NS record for
> testnet-seed.alexykot.me [12] is pointing at alexykot.me [13]?
>
> Best regards,?
>
> Alex Kotenko
>
> 2014-05-30 14:41 GMT+01:00 Robert McKay :
>
>> Hi Alex,
>>
>> I think the problem is with my suggestion to use bind forwarding..
>> basically bind is stripping off the authorative answer bit in the
>> reply.. this causes the recursor to go into a loop chasing the
>> authority server which again returns a non-authoritve answer with
>> itself as the authority again. Im not sure if this can be fixed
>> without hacking the bind src, so maybe it wasnt such a great
>> suggestion in the first place. Basically I think if bind was
>> returning authorative answers it would work, but I cant see any way
>> to make that happen in the bind configuration.
>>
>> Rob
>>
>> On Fri, 30 May 2014 14:19:05 +0100, Alex Kotenko wrote:
>>
>>> Hi Peter
>>>
>>> Ive setup DNS seeds myself a week ago, at
>>> testnet-seed.alexykot.me [1] [6]
>>> and bitcoin-seed.alexykot.me [2] [7], but there is a problem with
>>> DNS
>>> settings that we with Andreas couldnt sort out quickly.
>>>
>>> The problem itself is that I can reach my nameserver and get
>>> dnsseed
>>> response if I query it directly with
>>> ?dig @node.alexykot.me [3] [8] testnet-seed.alexykot.me [4] [9]
>>>
>>> ?dig @node.alexykot.me [5] [10] bitcoin-seed.alexykot.me [6]
>>> [11]
>>>
>>> ?But when I try nslookup testnet-seed.alexykot.me [7] [12]? -
>>> it
>>> fails.?
>>> I guess the problem is in my DNS settings but I cant figure out
>>> what
>>> is it.
>>>
>>> ?S o could you share
>>> ?how you configured?DNS
>>> ?? for your seed
>>> ? to help me debug
>>> ??mine
>>> ??
>>>
>>> Best regards,?
>>>
>>> Alex Kotenko
>>>
>>> ?
>
>
> Links:
> ------
> [1] http://testnet-seed.alexykot.me
> [2] http://bitcoin-seed.alexykot.me
> [3] http://node.alexykot.me
> [4] http://testnet-seed.alexykot.me
> [5] http://node.alexykot.me
> [6] http://bitcoin-seed.alexykot.me
> [7] http://testnet-seed.alexykot.me
> [8] http://node.alexykot.me/
> [9] http://testnet-seed.alexykot.me/
> [10] http://node.alexykot.me/
> [11] http://testnet-seed.alexykot.me/
> [12] http://testnet-seed.alexykot.me
> [13] http://alexykot.me
> [14] mailto:robert at mckay.com




From pieter.wuille at gmail.com  Fri May 30 15:24:15 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Fri, 30 May 2014 17:24:15 +0200
Subject: [Bitcoin-development] testnet-seed.bitcoin.petertodd.org is up
	again
In-Reply-To: <48331d04b68b3d6554b4e59e97ffbafe@webmail.mckay.com>
References: <20140523221726.GA30143@petertodd.org> <lltfaa$2lv$1@ger.gmane.org>
	<20140526163753.GA18693@petertodd.org> <lm0e7m$thg$1@ger.gmane.org>
	<b6884e2a-42b7-4c3f-a034-3a466aeec751@email.android.com>
	<lm0i6b$4m9$1@ger.gmane.org>
	<cae15a82-73f7-4703-bc7d-f433b002e06e@email.android.com>
	<CALDj+Bax5De1gh1wsz_BjTFTerjzrazZ4SBgEVvYGjhFw3+uEw@mail.gmail.com>
	<bce4e62749b3325d884caaf510e9d862@webmail.mckay.com>
	<CALDj+BZSYojZ1kQqb_5zrpjc=5E94bbZ7a0PG4bkZx38J0zHWQ@mail.gmail.com>
	<48331d04b68b3d6554b4e59e97ffbafe@webmail.mckay.com>
Message-ID: <CAPg+sBj83Dnrk5nuBenATgJGD3ZJKC-BzcKe+03fJGF93qs+Rw@mail.gmail.com>

I don't think it would be too hard to add support for a option to the
seeder "for non-matching requests, forward to other DNS server at
IP:PORT", so you could cascade them.

On Fri, May 30, 2014 at 4:51 PM, Robert McKay <robert at mckay.com> wrote:
> No, I don't think so. The problem is the 'aa' flag is missing (see the
> 'flags' section in dig). Perhaps if you could suppress the authority
> records the recursor would give up and just accept the non-authorative
> answer, but that isn't a good solution even if it might work for some
> resolvers.
>
> Rob
>
> On Fri, 30 May 2014 15:13:36 +0100, Alex Kotenko wrote:
>> Hmm, you might be right, as queries
>> dig @node.alexykot.me [8] testnet-seed.alexykot.me [9]
>>
>> and
>>  dig @node.alexykot.me [10] -p 18353 testnet-seed.alexykot.me
>> [11]
>>
>> are giving different authority sections.
>>
>> Hmm, but if I setup custom SOA record for it - it should work,
>> right?
>>  What SOA name should it be actually, assuming that NS record for
>> testnet-seed.alexykot.me [12] is pointing at alexykot.me [13]?
>>
>> Best regards,
>>
>> Alex Kotenko
>>
>> 2014-05-30 14:41 GMT+01:00 Robert McKay :
>>
>>> Hi Alex,
>>>
>>> I think the problem is with my suggestion to use bind forwarding..
>>> basically bind is stripping off the authorative answer bit in the
>>> reply.. this causes the recursor to go into a loop chasing the
>>> authority server which again returns a non-authoritve answer with
>>> itself as the authority again. Im not sure if this can be fixed
>>> without hacking the bind src, so maybe it wasnt such a great
>>> suggestion in the first place. Basically I think if bind was
>>> returning authorative answers it would work, but I cant see any way
>>> to make that happen in the bind configuration.
>>>
>>> Rob
>>>
>>> On Fri, 30 May 2014 14:19:05 +0100, Alex Kotenko wrote:
>>>
>>>> Hi Peter
>>>>
>>>> Ive setup DNS seeds myself a week ago, at
>>>> testnet-seed.alexykot.me [1] [6]
>>>> and bitcoin-seed.alexykot.me [2] [7], but there is a problem with
>>>> DNS
>>>> settings that we with Andreas couldnt sort out quickly.
>>>>
>>>> The problem itself is that I can reach my nameserver and get
>>>> dnsseed
>>>> response if I query it directly with
>>>>  dig @node.alexykot.me [3] [8] testnet-seed.alexykot.me [4] [9]
>>>>
>>>>  dig @node.alexykot.me [5] [10] bitcoin-seed.alexykot.me [6]
>>>> [11]
>>>>
>>>> But when I try nslookup testnet-seed.alexykot.me [7] [12] -
>>>> it
>>>> fails.
>>>> I guess the problem is in my DNS settings but I cant figure out
>>>> what
>>>> is it.
>>>>
>>>> S o could you share
>>>> how you configured DNS
>>>>   for your seed
>>>> to help me debug
>>>>  mine
>>>> ?
>>>>
>>>> Best regards,
>>>>
>>>> Alex Kotenko
>>>>
>>>>
>>
>>
>> Links:
>> ------
>> [1] http://testnet-seed.alexykot.me
>> [2] http://bitcoin-seed.alexykot.me
>> [3] http://node.alexykot.me
>> [4] http://testnet-seed.alexykot.me
>> [5] http://node.alexykot.me
>> [6] http://bitcoin-seed.alexykot.me
>> [7] http://testnet-seed.alexykot.me
>> [8] http://node.alexykot.me/
>> [9] http://testnet-seed.alexykot.me/
>> [10] http://node.alexykot.me/
>> [11] http://testnet-seed.alexykot.me/
>> [12] http://testnet-seed.alexykot.me
>> [13] http://alexykot.me
>> [14] mailto:robert at mckay.com
>
>
> ------------------------------------------------------------------------------
> Time is money. Stop wasting it! Get your web API in 5 minutes.
> www.restlet.com/download
> http://p.sf.net/sfu/restlet
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From andreas at schildbach.de  Fri May 30 15:40:06 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Fri, 30 May 2014 17:40:06 +0200
Subject: [Bitcoin-development] testnet-seed.bitcoin.petertodd.org is up
	again
In-Reply-To: <CAPg+sBj83Dnrk5nuBenATgJGD3ZJKC-BzcKe+03fJGF93qs+Rw@mail.gmail.com>
References: <20140523221726.GA30143@petertodd.org>
	<lltfaa$2lv$1@ger.gmane.org>	<20140526163753.GA18693@petertodd.org>
	<lm0e7m$thg$1@ger.gmane.org>	<b6884e2a-42b7-4c3f-a034-3a466aeec751@email.android.com>	<lm0i6b$4m9$1@ger.gmane.org>	<cae15a82-73f7-4703-bc7d-f433b002e06e@email.android.com>	<CALDj+Bax5De1gh1wsz_BjTFTerjzrazZ4SBgEVvYGjhFw3+uEw@mail.gmail.com>	<bce4e62749b3325d884caaf510e9d862@webmail.mckay.com>	<CALDj+BZSYojZ1kQqb_5zrpjc=5E94bbZ7a0PG4bkZx38J0zHWQ@mail.gmail.com>	<48331d04b68b3d6554b4e59e97ffbafe@webmail.mckay.com>
	<CAPg+sBj83Dnrk5nuBenATgJGD3ZJKC-BzcKe+03fJGF93qs+Rw@mail.gmail.com>
Message-ID: <lma8om$4va$1@ger.gmane.org>

I maybe have made this suggestion in the past, but why don't we teach
the seeder (or maybe even plain bitcoind) how to write a zone file and
then use matured DNS servers to serve this zone?

I admit I never ran my own DNS so I'm not sure if that can work -- but
to me it sounds like the easiest approach plus everyone can just use
stock server software.


On 05/30/2014 05:24 PM, Pieter Wuille wrote:
> I don't think it would be too hard to add support for a option to the
> seeder "for non-matching requests, forward to other DNS server at
> IP:PORT", so you could cascade them.
> 
> On Fri, May 30, 2014 at 4:51 PM, Robert McKay <robert at mckay.com> wrote:
>> No, I don't think so. The problem is the 'aa' flag is missing (see the
>> 'flags' section in dig). Perhaps if you could suppress the authority
>> records the recursor would give up and just accept the non-authorative
>> answer, but that isn't a good solution even if it might work for some
>> resolvers.
>>
>> Rob
>>
>> On Fri, 30 May 2014 15:13:36 +0100, Alex Kotenko wrote:
>>> Hmm, you might be right, as queries
>>> dig @node.alexykot.me [8] testnet-seed.alexykot.me [9]
>>>
>>> and
>>>  dig @node.alexykot.me [10] -p 18353 testnet-seed.alexykot.me
>>> [11]
>>>
>>> are giving different authority sections.
>>>
>>> Hmm, but if I setup custom SOA record for it - it should work,
>>> right?
>>>  What SOA name should it be actually, assuming that NS record for
>>> testnet-seed.alexykot.me [12] is pointing at alexykot.me [13]?
>>>
>>> Best regards,
>>>
>>> Alex Kotenko
>>>
>>> 2014-05-30 14:41 GMT+01:00 Robert McKay :
>>>
>>>> Hi Alex,
>>>>
>>>> I think the problem is with my suggestion to use bind forwarding..
>>>> basically bind is stripping off the authorative answer bit in the
>>>> reply.. this causes the recursor to go into a loop chasing the
>>>> authority server which again returns a non-authoritve answer with
>>>> itself as the authority again. Im not sure if this can be fixed
>>>> without hacking the bind src, so maybe it wasnt such a great
>>>> suggestion in the first place. Basically I think if bind was
>>>> returning authorative answers it would work, but I cant see any way
>>>> to make that happen in the bind configuration.
>>>>
>>>> Rob
>>>>
>>>> On Fri, 30 May 2014 14:19:05 +0100, Alex Kotenko wrote:
>>>>
>>>>> Hi Peter
>>>>>
>>>>> Ive setup DNS seeds myself a week ago, at
>>>>> testnet-seed.alexykot.me [1] [6]
>>>>> and bitcoin-seed.alexykot.me [2] [7], but there is a problem with
>>>>> DNS
>>>>> settings that we with Andreas couldnt sort out quickly.
>>>>>
>>>>> The problem itself is that I can reach my nameserver and get
>>>>> dnsseed
>>>>> response if I query it directly with
>>>>>  dig @node.alexykot.me [3] [8] testnet-seed.alexykot.me [4] [9]
>>>>>
>>>>>  dig @node.alexykot.me [5] [10] bitcoin-seed.alexykot.me [6]
>>>>> [11]
>>>>>
>>>>> But when I try nslookup testnet-seed.alexykot.me [7] [12] -
>>>>> it
>>>>> fails.
>>>>> I guess the problem is in my DNS settings but I cant figure out
>>>>> what
>>>>> is it.
>>>>>
>>>>> S o could you share
>>>>> how you configured DNS
>>>>>   for your seed
>>>>> to help me debug
>>>>>  mine
>>>>> ?
>>>>>
>>>>> Best regards,
>>>>>
>>>>> Alex Kotenko
>>>>>
>>>>>
>>>
>>>
>>> Links:
>>> ------
>>> [1] http://testnet-seed.alexykot.me
>>> [2] http://bitcoin-seed.alexykot.me
>>> [3] http://node.alexykot.me
>>> [4] http://testnet-seed.alexykot.me
>>> [5] http://node.alexykot.me
>>> [6] http://bitcoin-seed.alexykot.me
>>> [7] http://testnet-seed.alexykot.me
>>> [8] http://node.alexykot.me/
>>> [9] http://testnet-seed.alexykot.me/
>>> [10] http://node.alexykot.me/
>>> [11] http://testnet-seed.alexykot.me/
>>> [12] http://testnet-seed.alexykot.me
>>> [13] http://alexykot.me
>>> [14] mailto:robert at mckay.com
>>
>>
>> ------------------------------------------------------------------------------
>> Time is money. Stop wasting it! Get your web API in 5 minutes.
>> www.restlet.com/download
>> http://p.sf.net/sfu/restlet
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> ------------------------------------------------------------------------------
> Time is money. Stop wasting it! Get your web API in 5 minutes.
> www.restlet.com/download
> http://p.sf.net/sfu/restlet
> 





From robert at mckay.com  Fri May 30 15:54:38 2014
From: robert at mckay.com (Robert McKay)
Date: Fri, 30 May 2014 16:54:38 +0100
Subject: [Bitcoin-development] testnet-seed.bitcoin.petertodd.org is up
	again
In-Reply-To: <lma8om$4va$1@ger.gmane.org>
References: <20140523221726.GA30143@petertodd.org>
	"<lltfaa$2lv$1@ger.gmane.org>" <20140526163753.GA18693@petertodd.org>
	"<lm0e7m$thg$1@ger.gmane.org>	<b6884e2a-42b7-4c3f-a034-3a466aeec751@email.android.com>	<lm0i6b$4m9$1@ger.gmane.org>	<cae15a82-73f7-4703-bc7d-f433b002e06e@email.android.com>	<CALDj+Bax5De1gh1wsz_BjTFTerjzrazZ4SBgEVvYGjhFw3+uEw@mail.gmail.com>	<bce4e62749b3325d884caaf510e9d862@webmail.mckay.com>	<CALDj+BZSYojZ1kQqb_5zrpjc=5E94bbZ7a0PG4bkZx38J0zHWQ@mail.gmail.com>"
	<48331d04b68b3d6554b4e59e97ffbafe@webmail.mckay.com>
	<CAPg+sBj83Dnrk5nuBenATgJGD3ZJKC-BzcKe+03fJGF93qs+Rw@mail.gmail.com>
	<lma8om$4va$1@ger.gmane.org>
Message-ID: <759940f6ac0a5ab33d9bc233edf69f33@webmail.mckay.com>

A simple hack would be to crontab up a couple of dig scripts that every 
minute 'dig' (dig's output is in bind zonefile format) the bitcoin-seed 
and write the results to two zonefiles that bind can then serve.

Basically

dig @127.0.0.1 -p 5353 > zonefile1.zone
dig @127.0.0.1 -p 5354 > zonefile2.zone

pkill -HUP named

Ugly, but should work.

Rob

On Fri, 30 May 2014 17:40:06 +0200, Andreas Schildbach wrote:
> I maybe have made this suggestion in the past, but why don't we teach
> the seeder (or maybe even plain bitcoind) how to write a zone file 
> and
> then use matured DNS servers to serve this zone?
>
> I admit I never ran my own DNS so I'm not sure if that can work -- 
> but
> to me it sounds like the easiest approach plus everyone can just use
> stock server software.
>
>
> On 05/30/2014 05:24 PM, Pieter Wuille wrote:
>> I don't think it would be too hard to add support for a option to 
>> the
>> seeder "for non-matching requests, forward to other DNS server at
>> IP:PORT", so you could cascade them.
>>
>> On Fri, May 30, 2014 at 4:51 PM, Robert McKay <robert at mckay.com> 
>> wrote:
>>> No, I don't think so. The problem is the 'aa' flag is missing (see 
>>> the
>>> 'flags' section in dig). Perhaps if you could suppress the 
>>> authority
>>> records the recursor would give up and just accept the 
>>> non-authorative
>>> answer, but that isn't a good solution even if it might work for 
>>> some
>>> resolvers.
>>>
>>> Rob
>>>
>>> On Fri, 30 May 2014 15:13:36 +0100, Alex Kotenko wrote:
>>>> Hmm, you might be right, as queries
>>>> dig @node.alexykot.me [8] testnet-seed.alexykot.me [9]
>>>>
>>>> and
>>>>  dig @node.alexykot.me [10] -p 18353 testnet-seed.alexykot.me
>>>> [11]
>>>>
>>>> are giving different authority sections.
>>>>
>>>> Hmm, but if I setup custom SOA record for it - it should work,
>>>> right?
>>>>  What SOA name should it be actually, assuming that NS record for
>>>> testnet-seed.alexykot.me [12] is pointing at alexykot.me [13]?
>>>>
>>>> Best regards,
>>>>
>>>> Alex Kotenko
>>>>
>>>> 2014-05-30 14:41 GMT+01:00 Robert McKay :
>>>>
>>>>> Hi Alex,
>>>>>
>>>>> I think the problem is with my suggestion to use bind 
>>>>> forwarding..
>>>>> basically bind is stripping off the authorative answer bit in the
>>>>> reply.. this causes the recursor to go into a loop chasing the
>>>>> authority server which again returns a non-authoritve answer with
>>>>> itself as the authority again. Im not sure if this can be fixed
>>>>> without hacking the bind src, so maybe it wasnt such a great
>>>>> suggestion in the first place. Basically I think if bind was
>>>>> returning authorative answers it would work, but I cant see any 
>>>>> way
>>>>> to make that happen in the bind configuration.
>>>>>
>>>>> Rob
>>>>>
>>>>> On Fri, 30 May 2014 14:19:05 +0100, Alex Kotenko wrote:
>>>>>
>>>>>> Hi Peter
>>>>>>
>>>>>> Ive setup DNS seeds myself a week ago, at
>>>>>> testnet-seed.alexykot.me [1] [6]
>>>>>> and bitcoin-seed.alexykot.me [2] [7], but there is a problem 
>>>>>> with
>>>>>> DNS
>>>>>> settings that we with Andreas couldnt sort out quickly.
>>>>>>
>>>>>> The problem itself is that I can reach my nameserver and get
>>>>>> dnsseed
>>>>>> response if I query it directly with
>>>>>>  dig @node.alexykot.me [3] [8] testnet-seed.alexykot.me [4] [9]
>>>>>>
>>>>>>  dig @node.alexykot.me [5] [10] bitcoin-seed.alexykot.me [6]
>>>>>> [11]
>>>>>>
>>>>>> But when I try nslookup testnet-seed.alexykot.me [7] [12] -
>>>>>> it
>>>>>> fails.
>>>>>> I guess the problem is in my DNS settings but I cant figure out
>>>>>> what
>>>>>> is it.
>>>>>>
>>>>>> S o could you share
>>>>>> how you configured DNS
>>>>>>   for your seed
>>>>>> to help me debug
>>>>>>  mine
>>>>>> ?
>>>>>>
>>>>>> Best regards,
>>>>>>
>>>>>> Alex Kotenko
>>>>>>
>>>>>>
>>>>
>>>>
>>>> Links:
>>>> ------
>>>> [1] http://testnet-seed.alexykot.me
>>>> [2] http://bitcoin-seed.alexykot.me
>>>> [3] http://node.alexykot.me
>>>> [4] http://testnet-seed.alexykot.me
>>>> [5] http://node.alexykot.me
>>>> [6] http://bitcoin-seed.alexykot.me
>>>> [7] http://testnet-seed.alexykot.me
>>>> [8] http://node.alexykot.me/
>>>> [9] http://testnet-seed.alexykot.me/
>>>> [10] http://node.alexykot.me/
>>>> [11] http://testnet-seed.alexykot.me/
>>>> [12] http://testnet-seed.alexykot.me
>>>> [13] http://alexykot.me
>>>> [14] mailto:robert at mckay.com
>>>
>>>
>>> 
>>> ------------------------------------------------------------------------------
>>> Time is money. Stop wasting it! Get your web API in 5 minutes.
>>> www.restlet.com/download
>>> http://p.sf.net/sfu/restlet
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>> 
>> ------------------------------------------------------------------------------
>> Time is money. Stop wasting it! Get your web API in 5 minutes.
>> www.restlet.com/download
>> http://p.sf.net/sfu/restlet
>>
>
>
>
> 
> ------------------------------------------------------------------------------
> Time is money. Stop wasting it! Get your web API in 5 minutes.
> www.restlet.com/download
> http://p.sf.net/sfu/restlet
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From pieter.wuille at gmail.com  Fri May 30 15:59:26 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Fri, 30 May 2014 17:59:26 +0200
Subject: [Bitcoin-development] testnet-seed.bitcoin.petertodd.org is up
	again
In-Reply-To: <lma8om$4va$1@ger.gmane.org>
References: <20140523221726.GA30143@petertodd.org> <lltfaa$2lv$1@ger.gmane.org>
	<20140526163753.GA18693@petertodd.org> <lm0e7m$thg$1@ger.gmane.org>
	<b6884e2a-42b7-4c3f-a034-3a466aeec751@email.android.com>
	<lm0i6b$4m9$1@ger.gmane.org>
	<cae15a82-73f7-4703-bc7d-f433b002e06e@email.android.com>
	<CALDj+Bax5De1gh1wsz_BjTFTerjzrazZ4SBgEVvYGjhFw3+uEw@mail.gmail.com>
	<bce4e62749b3325d884caaf510e9d862@webmail.mckay.com>
	<CALDj+BZSYojZ1kQqb_5zrpjc=5E94bbZ7a0PG4bkZx38J0zHWQ@mail.gmail.com>
	<48331d04b68b3d6554b4e59e97ffbafe@webmail.mckay.com>
	<CAPg+sBj83Dnrk5nuBenATgJGD3ZJKC-BzcKe+03fJGF93qs+Rw@mail.gmail.com>
	<lma8om$4va$1@ger.gmane.org>
Message-ID: <CAPg+sBh7ChHdGk7Vth9_CggokPeWL+a9onLgsRDk=G1CYQD0EQ@mail.gmail.com>

On Fri, May 30, 2014 at 5:40 PM, Andreas Schildbach
<andreas at schildbach.de> wrote:
> I maybe have made this suggestion in the past, but why don't we teach
> the seeder (or maybe even plain bitcoind) how to write a zone file and
> then use matured DNS servers to serve this zone?
>
> I admit I never ran my own DNS so I'm not sure if that can work -- but
> to me it sounds like the easiest approach plus everyone can just use
> stock server software.

That's what Matt's implementation is doing. You don't have to run mine :)

I chose not to do so, as I wanted to be able to serve a different
response to every query, but more diversity is a good thing.

-- 
Pieter



From gmaxwell at gmail.com  Fri May 30 16:03:09 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Fri, 30 May 2014 09:03:09 -0700
Subject: [Bitcoin-development] testnet-seed.bitcoin.petertodd.org is up
	again
In-Reply-To: <lma8om$4va$1@ger.gmane.org>
References: <20140523221726.GA30143@petertodd.org> <lltfaa$2lv$1@ger.gmane.org>
	<20140526163753.GA18693@petertodd.org> <lm0e7m$thg$1@ger.gmane.org>
	<b6884e2a-42b7-4c3f-a034-3a466aeec751@email.android.com>
	<lm0i6b$4m9$1@ger.gmane.org>
	<cae15a82-73f7-4703-bc7d-f433b002e06e@email.android.com>
	<CALDj+Bax5De1gh1wsz_BjTFTerjzrazZ4SBgEVvYGjhFw3+uEw@mail.gmail.com>
	<bce4e62749b3325d884caaf510e9d862@webmail.mckay.com>
	<CALDj+BZSYojZ1kQqb_5zrpjc=5E94bbZ7a0PG4bkZx38J0zHWQ@mail.gmail.com>
	<48331d04b68b3d6554b4e59e97ffbafe@webmail.mckay.com>
	<CAPg+sBj83Dnrk5nuBenATgJGD3ZJKC-BzcKe+03fJGF93qs+Rw@mail.gmail.com>
	<lma8om$4va$1@ger.gmane.org>
Message-ID: <CAAS2fgRv2GmfAxCODhTfemseHrHc2BO_d9Qi3K9JekpvhMOPhg@mail.gmail.com>

On Fri, May 30, 2014 at 8:40 AM, Andreas Schildbach
<andreas at schildbach.de> wrote:
> I maybe have made this suggestion in the past, but why don't we teach
> the seeder (or maybe even plain bitcoind) how to write a zone file and
> then use matured DNS servers to serve this zone?
>
> I admit I never ran my own DNS so I'm not sure if that can work -- but
> to me it sounds like the easiest approach plus everyone can just use
> stock server software.

We'd used an approach like that previously and I believe it produced
fairly bad load imbalances, especially since some resolvers only pass
on a single result. And that was before there was a wide deployment of
broken client software that trusted the dnsseeds exclusively.



From gubatron at gmail.com  Fri May 30 16:39:40 2014
From: gubatron at gmail.com (Angel Leon)
Date: Fri, 30 May 2014 12:39:40 -0400
Subject: [Bitcoin-development] [QT] Feature proposal: Displaying current
 Units/Changing Units with status bar control.
Message-ID: <CADZB0_YZ==Kd-R10d996E=6X-VoVhyE0cvW=_LGXJvQLAbVUpw@mail.gmail.com>

There's been quite a lot of debate over the default unit of display to use,
you can read the conversation here, which was closed.
https://github.com/bitcoin/bitcoin/issues/3862

Whatever the side of the debate you're on, wether it should be BTC or mBTC,
or other, regular users will probably take too long to find a way to change
the current unit of display, and if the unit of display were ever changed
to something other than BTC, the current transaction tables"Amount" column
don't mention anywhere what Unit of Display is being used.

So last night I started playing with the idea of having a status bar
component that would:
1. Show you what is the current unit of display at all times.
2. Let you change the unit of display easily.

Here's how it looks (see attachment), just wanted to get feedback, if this
is something you also consider valuable in terms of user experience, or
maybe you don't want to allow any more controls on the status bar (because
then people will want to add more and more)

Just want to get some feedback before I continue working on this to polish
it and submit a pull request.


Cheers.
Angel (@gubatron)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140530/e28af0c5/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Screen Shot 2014-05-30 at 12.27.38 PM.png
Type: image/png
Size: 45646 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140530/e28af0c5/attachment.png>

