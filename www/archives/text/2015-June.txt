From pindar.wong at gmail.com  Mon Jun  1 00:03:36 2015
From: pindar.wong at gmail.com (Pindar Wong)
Date: Mon, 1 Jun 2015 08:03:36 +0800
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CALC81CMR_9KsCa4rr-YbVtXLLA81Sn1RtgUEuaaj5qgPUHUUuw@mail.gmail.com>
References: <554BE0E1.5030001@bluematt.me>
	<CAFzgq-xByQ1E_33_m3UpXQFUkGc78HKnA=7XXMshANDuTkNsvA@mail.gmail.com>
	<CABsx9T0kbRe31LMwk499MQUw225f5GGd67GfhXBezHmDqxkioA@mail.gmail.com>
	<CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>
	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>
	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
	<CAM7BtUr3msGfp_XiBc-D6=G+b834YhnxVQ_d59EJUE=avxpL1g@mail.gmail.com>
	<CALC81CMR_9KsCa4rr-YbVtXLLA81Sn1RtgUEuaaj5qgPUHUUuw@mail.gmail.com>
Message-ID: <CAM7BtUo7dGrFqLy-Rj5V6Xb0rtNPE2CMtUfdS8FcT=VSbW9x1Q@mail.gmail.com>

On Mon, Jun 1, 2015 at 7:58 AM, Ricardo Filipe <ricardojdfilipe at gmail.com>
wrote:

> 2015-06-01 0:40 GMT+01:00 Pindar Wong <pindar.wong at gmail.com>:
> >
> >
> > On Mon, Jun 1, 2015 at 7:23 AM, Ricardo Filipe <
> ricardojdfilipe at gmail.com>
> > wrote:
> >>
> >> He also said that the equation for miners has many variables, as it
> >> should. There is no disadvantage if the network speed is the same
> >> between the miners.
> >
> >
> > Hi,
> >
> > Is that an assumption?
> no, let me rephrase: The disadvantage alex refers to only exists if
> miners do not have the same network speed.
>
> >
> >> If there is a difference in network speed, the
> >> miner is incentivized to invest in their network infrastructure.
> >
> >
> > Perhaps it's best not to  assume that investing in Internet network
> > infrastructure's a free or open market everywhere.
> Just like easy ASIC access, low price electricity, etc are not a free
> and open market.
>

-- point well made and taken.

p.


>
> >
> > p.
> >
> >>
> >>
> >> 2015-05-31 23:55 GMT+01:00 Alex Mizrahi <alex.mizrahi at gmail.com>:
> >> >> Yes, if you are on a slow network then you are at a (slight)
> >> >> disadvantage.
> >> >> So?
> >> >
> >> >
> >> > Chun mentioned that his pool is on a slow network, and thus bigger
> >> > blocks
> >> > give it an disadvantage. (Orphan rate is proportional to block size.)
> >> > You said that no, on contrary those who make big blocks have a
> >> > disadvantage.
> >> > And now you say that yes, this disadvantage exist.
> >> >
> >> > Did you just lie to Chun?
> >> >
> >> >
> >> >
> >> >
> ------------------------------------------------------------------------------
> >> >
> >> > _______________________________________________
> >> > Bitcoin-development mailing list
> >> > Bitcoin-development at lists.sourceforge.net
> >> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >> >
> >>
> >>
> >>
> ------------------------------------------------------------------------------
> >> _______________________________________________
> >> Bitcoin-development mailing list
> >> Bitcoin-development at lists.sourceforge.net
> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/80dd82e6/attachment.html>

From alex.mizrahi at gmail.com  Mon Jun  1 07:57:03 2015
From: alex.mizrahi at gmail.com (Alex Mizrahi)
Date: Mon, 1 Jun 2015 10:57:03 +0300
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
References: <554BE0E1.5030001@bluematt.me>
	<CAFzgq-xByQ1E_33_m3UpXQFUkGc78HKnA=7XXMshANDuTkNsvA@mail.gmail.com>
	<CABsx9T0kbRe31LMwk499MQUw225f5GGd67GfhXBezHmDqxkioA@mail.gmail.com>
	<CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>
	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>
	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
Message-ID: <CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>

> He also said that the equation for miners has many variables, as it
> should.


He only said that AFTER I called him on his bullshit.
Before that he wrote it like there is 100% certainty that only the party
producing big blocks is punished:

"That orphan rate increase will go to whoever is producing the 20MB blocks,
NOT you."


> There is no disadvantage if the network speed is the same
> between the miners.


Which is exactly not the situation they were discussing. This assumption is
not reasonable.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/f222ed42/attachment.html>

From mike at plan99.net  Mon Jun  1 10:13:55 2015
From: mike at plan99.net (Mike Hearn)
Date: Mon, 1 Jun 2015 12:13:55 +0200
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>
References: <554BE0E1.5030001@bluematt.me>
	<CAFzgq-xByQ1E_33_m3UpXQFUkGc78HKnA=7XXMshANDuTkNsvA@mail.gmail.com>
	<CABsx9T0kbRe31LMwk499MQUw225f5GGd67GfhXBezHmDqxkioA@mail.gmail.com>
	<CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>
	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>
	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
	<CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>
Message-ID: <CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>

Whilst it would be nice if miners in China can carry on forever regardless
of their internet situation, nobody has any inherent "right" to mine if
they can't do the job - if miners in China can't get the trivial amounts of
bandwidth required through their firewall and end up being outcompeted then
OK, too bad, we'll have to carry on without them.

But I'm not sure why it should be a big deal. They can always run a node on
a server in Taiwan and connect the hardware to it via a VPN or so.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/0d79eaed/attachment.html>

From pindar.wong at gmail.com  Mon Jun  1 10:42:05 2015
From: pindar.wong at gmail.com (Pindar Wong)
Date: Mon, 1 Jun 2015 18:42:05 +0800
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
References: <554BE0E1.5030001@bluematt.me>
	<CAFzgq-xByQ1E_33_m3UpXQFUkGc78HKnA=7XXMshANDuTkNsvA@mail.gmail.com>
	<CABsx9T0kbRe31LMwk499MQUw225f5GGd67GfhXBezHmDqxkioA@mail.gmail.com>
	<CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>
	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>
	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
	<CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>
	<CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
Message-ID: <CAM7BtUou9xfesF7srHQ1vVDUoArmWQvifcDwsXPFdh7NfgC1wA@mail.gmail.com>

On Mon, Jun 1, 2015 at 6:13 PM, Mike Hearn <mike at plan99.net> wrote:

> Whilst it would be nice if miners in China can carry on forever regardless
> of their internet situation, nobody has any inherent "right" to mine if
> they can't do the job - if miners in China can't get the trivial amounts of
> bandwidth required through their firewall and end up being outcompeted then
> OK, too bad, we'll have to carry on without them.
>

I'd rather think of mining as a responsibility than a right per se, but
you're right in so far as it's competitive and self-correcting.


>
> But I'm not sure why it should be a big deal. They can always run a node
> on a server in Taiwan and connect the hardware to it via a VPN or so.
>
>
 Let's agree to disagree on this point.

p.

------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/46657e6a/attachment.html>

From 1240902 at gmail.com  Mon Jun  1 11:02:05 2015
From: 1240902 at gmail.com (Chun Wang)
Date: Mon, 1 Jun 2015 19:02:05 +0800
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
References: <554BE0E1.5030001@bluematt.me>
	<CAFzgq-xByQ1E_33_m3UpXQFUkGc78HKnA=7XXMshANDuTkNsvA@mail.gmail.com>
	<CABsx9T0kbRe31LMwk499MQUw225f5GGd67GfhXBezHmDqxkioA@mail.gmail.com>
	<CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>
	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>
	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
	<CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>
	<CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
Message-ID: <CAFzgq-ykeMeWF-ndgSm9upHTe8j6ZFYhBQjFs_WSz1oVd29j7g@mail.gmail.com>

On Mon, Jun 1, 2015 at 6:13 PM, Mike Hearn <mike at plan99.net> wrote:
> Whilst it would be nice if miners in China can carry on forever regardless
> of their internet situation, nobody has any inherent "right" to mine if they
> can't do the job - if miners in China can't get the trivial amounts of
> bandwidth required through their firewall and end up being outcompeted then
> OK, too bad, we'll have to carry on without them.
>
> But I'm not sure why it should be a big deal. They can always run a node on
> a server in Taiwan and connect the hardware to it via a VPN or so.

Ignorant. You seem do not understand the current situation. We
suffered from orphans a lot when we started in 2013. It is now your
turn. If Western miners do not find a China-based VPN into China, or
if Western pools do not manage to improve their connectivity to China,
or run a node in China, it would be them to have higher orphans, not
us. Because we have 50%+.



From pindar.wong at gmail.com  Mon Jun  1 11:09:13 2015
From: pindar.wong at gmail.com (Pindar Wong)
Date: Mon, 1 Jun 2015 19:09:13 +0800
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CAFzgq-ykeMeWF-ndgSm9upHTe8j6ZFYhBQjFs_WSz1oVd29j7g@mail.gmail.com>
References: <554BE0E1.5030001@bluematt.me>
	<CAFzgq-xByQ1E_33_m3UpXQFUkGc78HKnA=7XXMshANDuTkNsvA@mail.gmail.com>
	<CABsx9T0kbRe31LMwk499MQUw225f5GGd67GfhXBezHmDqxkioA@mail.gmail.com>
	<CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>
	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>
	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
	<CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>
	<CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
	<CAFzgq-ykeMeWF-ndgSm9upHTe8j6ZFYhBQjFs_WSz1oVd29j7g@mail.gmail.com>
Message-ID: <CAM7BtUo0kJOmA+7+4pr-SPZb-YO-cOvrE8f0GZ-=v3mFT8MEYg@mail.gmail.com>

I think it would be helpful if we could all *chill* and focus on the solid
engineering necessary to make Bitcoin succeed.

p.


On Mon, Jun 1, 2015 at 7:02 PM, Chun Wang <1240902 at gmail.com> wrote:

> On Mon, Jun 1, 2015 at 6:13 PM, Mike Hearn <mike at plan99.net> wrote:
> > Whilst it would be nice if miners in China can carry on forever
> regardless
> > of their internet situation, nobody has any inherent "right" to mine if
> they
> > can't do the job - if miners in China can't get the trivial amounts of
> > bandwidth required through their firewall and end up being outcompeted
> then
> > OK, too bad, we'll have to carry on without them.
> >
> > But I'm not sure why it should be a big deal. They can always run a node
> on
> > a server in Taiwan and connect the hardware to it via a VPN or so.
>
> Ignorant. You seem do not understand the current situation. We
> suffered from orphans a lot when we started in 2013. It is now your
> turn. If Western miners do not find a China-based VPN into China, or
> if Western pools do not manage to improve their connectivity to China,
> or run a node in China, it would be them to have higher orphans, not
> us. Because we have 50%+.
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/e773ec57/attachment.html>

From thyshizzle at outlook.com  Mon Jun  1 11:12:34 2015
From: thyshizzle at outlook.com (Thy Shizzle)
Date: Mon, 1 Jun 2015 21:12:34 +1000
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
Message-ID: <BAY403-EAS10178999B08666884BFEDD1C2B60@phx.gbl>

WOW!!!! Way to burn your biggest adopters who put your transactions into the chain.......what a douche.
________________________________
From: Mike Hearn<mailto:mike at plan99.net>
Sent: ?1/?06/?2015 8:15 PM
To: Alex Mizrahi<mailto:alex.mizrahi at gmail.com>
Cc: Bitcoin Dev<mailto:bitcoin-development at lists.sourceforge.net>
Subject: Re: [Bitcoin-development] Fwd: Block Size Increase Requirements

Whilst it would be nice if miners in China can carry on forever regardless
of their internet situation, nobody has any inherent "right" to mine if
they can't do the job - if miners in China can't get the trivial amounts of
bandwidth required through their firewall and end up being outcompeted then
OK, too bad, we'll have to carry on without them.

But I'm not sure why it should be a big deal. They can always run a node on
a server in Taiwan and connect the hardware to it via a VPN or so.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/85fbfd51/attachment.html>
-------------- next part --------------
------------------------------------------------------------------------------
-------------- next part --------------
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development

From 1240902 at gmail.com  Mon Jun  1 11:20:46 2015
From: 1240902 at gmail.com (Chun Wang)
Date: Mon, 1 Jun 2015 19:20:46 +0800
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CAFzgq-ykeMeWF-ndgSm9upHTe8j6ZFYhBQjFs_WSz1oVd29j7g@mail.gmail.com>
References: <554BE0E1.5030001@bluematt.me>
	<CAFzgq-xByQ1E_33_m3UpXQFUkGc78HKnA=7XXMshANDuTkNsvA@mail.gmail.com>
	<CABsx9T0kbRe31LMwk499MQUw225f5GGd67GfhXBezHmDqxkioA@mail.gmail.com>
	<CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>
	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>
	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
	<CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>
	<CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
	<CAFzgq-ykeMeWF-ndgSm9upHTe8j6ZFYhBQjFs_WSz1oVd29j7g@mail.gmail.com>
Message-ID: <CAFzgq-x+-s_Nbt4z-C4SWQbHdPr159AmL2JvpP0zg1axM+Vwcw@mail.gmail.com>

I cannot believe why Gavin (who seems to have difficulty to spell my
name correctly.) insists on his 20MB proposal regardless the
community. BIP66 has been introduced for a long time and no one knows
when the 95% goal can be met. This change to the block max size must
take one year or more to be adopted. We should increase the limit and
increase it now. 20MB is simply too big and too risky, sometimes we
need compromise and push things forward. I agree with any solution
lower than 10MB in its first two years.

On Mon, Jun 1, 2015 at 7:02 PM, Chun Wang <1240902 at gmail.com> wrote:
> On Mon, Jun 1, 2015 at 6:13 PM, Mike Hearn <mike at plan99.net> wrote:
>> Whilst it would be nice if miners in China can carry on forever regardless
>> of their internet situation, nobody has any inherent "right" to mine if they
>> can't do the job - if miners in China can't get the trivial amounts of
>> bandwidth required through their firewall and end up being outcompeted then
>> OK, too bad, we'll have to carry on without them.
>>
>> But I'm not sure why it should be a big deal. They can always run a node on
>> a server in Taiwan and connect the hardware to it via a VPN or so.
>
> Ignorant. You seem do not understand the current situation. We
> suffered from orphans a lot when we started in 2013. It is now your
> turn. If Western miners do not find a China-based VPN into China, or
> if Western pools do not manage to improve their connectivity to China,
> or run a node in China, it would be them to have higher orphans, not
> us. Because we have 50%+.

On Mon, Jun 1, 2015 at 7:02 PM, Chun Wang <1240902 at gmail.com> wrote:
> On Mon, Jun 1, 2015 at 6:13 PM, Mike Hearn <mike at plan99.net> wrote:
>> Whilst it would be nice if miners in China can carry on forever regardless
>> of their internet situation, nobody has any inherent "right" to mine if they
>> can't do the job - if miners in China can't get the trivial amounts of
>> bandwidth required through their firewall and end up being outcompeted then
>> OK, too bad, we'll have to carry on without them.
>>
>> But I'm not sure why it should be a big deal. They can always run a node on
>> a server in Taiwan and connect the hardware to it via a VPN or so.
>
> Ignorant. You seem do not understand the current situation. We
> suffered from orphans a lot when we started in 2013. It is now your
> turn. If Western miners do not find a China-based VPN into China, or
> if Western pools do not manage to improve their connectivity to China,
> or run a node in China, it would be them to have higher orphans, not
> us. Because we have 50%+.



From pete at petertodd.org  Mon Jun  1 11:26:34 2015
From: pete at petertodd.org (Peter Todd)
Date: Mon, 1 Jun 2015 13:26:34 +0200
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CAM7BtUou9xfesF7srHQ1vVDUoArmWQvifcDwsXPFdh7NfgC1wA@mail.gmail.com>
References: <CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>
	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>
	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
	<CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>
	<CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
	<CAM7BtUou9xfesF7srHQ1vVDUoArmWQvifcDwsXPFdh7NfgC1wA@mail.gmail.com>
Message-ID: <20150601112634.GA27160@muck>

On Mon, Jun 01, 2015 at 06:42:05PM +0800, Pindar Wong wrote:
> On Mon, Jun 1, 2015 at 6:13 PM, Mike Hearn <mike at plan99.net> wrote:
> 
> > Whilst it would be nice if miners in China can carry on forever regardless
> > of their internet situation, nobody has any inherent "right" to mine if
> > they can't do the job - if miners in China can't get the trivial amounts of
> > bandwidth required through their firewall and end up being outcompeted then
> > OK, too bad, we'll have to carry on without them.
> >
> 
> I'd rather think of mining as a responsibility than a right per se, but
> you're right in so far as it's competitive and self-correcting.

It's important to remember that the service Bitcoin miners are providing
us is *not* transaction validation, but rather decentralization.
Validation is something every full node does already; there's no
shortage of it. What's tricky is designing a Bitcoin protocol that
creates the appropriate incentives for mining to remain decentralized,
so we get good value for the large amount of money being sent to miners.

I've often likened this task to building a robot to go to the grocery
store to buy milk for you. If that robot doesn't have a nose, before
long store owners are going to realise it can't tell the difference
between unspoilt and spoilt milk, and you're going to get ripped off
paying for a bunch of spoiled milk.

Designing a Bitcoin protocol where we expect "competition" to result in
smaller miners in more geographically decentralized places to get
outcompeted by larger miners who are more geographically centralized
gets us bad value for our money. Sure it's "self-correcting", but not in
a way that we want.

> > But I'm not sure why it should be a big deal. They can always run a node
> > on a server in Taiwan and connect the hardware to it via a VPN or so.
> >
> >
>  Let's agree to disagree on this point.

Note how that VPN, and likely VPS it's connected too, immediately adds
another one or two points of failure to the whole system. Not only does
this decrease reliability, it also decreases security by making attacks
significantly easier - VPS security is orders of magnitude worse than
the security of physical hardware.

-- 
'peter'[:-1]@petertodd.org
00000000000000000e187b95a9159d04a3586dd4cbc068be88a3eafcb5b885f9
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/9505014d/attachment.sig>

From ricardojdfilipe at gmail.com  Mon Jun  1 11:30:40 2015
From: ricardojdfilipe at gmail.com (Ricardo Filipe)
Date: Mon, 1 Jun 2015 12:30:40 +0100
Subject: [Bitcoin-development] Proposed alternatives to the 20MB step
	function
In-Reply-To: <CACq0ZD7-qr4BCdnqOSXLYv-i58vAXWGcQ1oLsrbHoNFMeiNTtg@mail.gmail.com>
References: <16096345.A1MpJQQkRW@crushinator>
	<CABsx9T3-zxCAagAS0megd06xvG5n-3tUL9NUK9TT3vt7XNL9Tg@mail.gmail.com>
	<CANEZrP3VCaFsW4+gPm2kCJ9z7oVUZYVaeNf=_cJWEWwh4ZxiPQ@mail.gmail.com>
	<CABsx9T21zjHyO-nh1aSBM3z4Bg015O0rOfYq7=Sy4mf=QxUVQA@mail.gmail.com>
	<CANEZrP2BaKwhpPgcUHWAHswOmUeFLgEk4ysrn4+73qNzWDJ=yQ@mail.gmail.com>
	<CABsx9T3nCJ-w_v-yEbEE2Ytb+xC65mhYqhoAhoOHw9tkPpG0TA@mail.gmail.com>
	<CANEZrP1qH+zucYsGrMgnfi99e61Edxaj+xm=u_xYXga1g0WzJQ@mail.gmail.com>
	<CAE-z3OVmw+0doCe0hmYE6A1D61h0AUh4Mtnf5Fg1e4zQBkpraQ@mail.gmail.com>
	<CANEZrP0psA7hcJdKdA-r01UEt7ig3O-9vjwBMqKSEq-csu0hPQ@mail.gmail.com>
	<CABsx9T23r_y2R9OEgqb3AAZf47Hh8BUJncjxxmPp5v_9uKEiqQ@mail.gmail.com>
	<CA+VAk3O7SmDkxL9rATWe9oqCVVKcT=cFXDJnARPN8pv=UiHaiA@mail.gmail.com>
	<CACq0ZD7-qr4BCdnqOSXLYv-i58vAXWGcQ1oLsrbHoNFMeiNTtg@mail.gmail.com>
Message-ID: <CALC81CNidPEgLpTVCRWqXYn0UpSCU-nuo5S85NSQ4UCce=n4EA@mail.gmail.com>

I've been following the discussion of the block size limit and IMO it
is clear that any constant block size limit is, as many have said
before, just kicking the can down the road.
My problem with the dynamic lower limit solution based on past blocks
is that it doesn't account for usage spikes. I would like to propose
another dynamic lower limit scheme:
Let the block size limit be a function of the number of current
transactions in the mempool. This way, bitcoin usage regulates the
block size limit.

I'm sorry i don't have the knowledge of the code base or time to make
simulations on this kind of approach, but nevertheless I would like to
leave it here for discussion or foster other ideas.

cheers



From pindar.wong at gmail.com  Mon Jun  1 12:19:12 2015
From: pindar.wong at gmail.com (Pindar Wong)
Date: Mon, 1 Jun 2015 20:19:12 +0800
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <20150601112634.GA27160@muck>
References: <CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>
	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>
	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
	<CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>
	<CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
	<CAM7BtUou9xfesF7srHQ1vVDUoArmWQvifcDwsXPFdh7NfgC1wA@mail.gmail.com>
	<20150601112634.GA27160@muck>
Message-ID: <CAM7BtUq_GexPBwhKiCpNbGBm-Y3y8pTRUWabt8rYQkwpKNRObg@mail.gmail.com>

Two very valid and important points. Thank you for making these
observations Peter.

p.


On Mon, Jun 1, 2015 at 7:26 PM, Peter Todd <pete at petertodd.org> wrote:

> On Mon, Jun 01, 2015 at 06:42:05PM +0800, Pindar Wong wrote:
> > On Mon, Jun 1, 2015 at 6:13 PM, Mike Hearn <mike at plan99.net> wrote:
> >
> > > Whilst it would be nice if miners in China can carry on forever
> regardless
> > > of their internet situation, nobody has any inherent "right" to mine if
> > > they can't do the job - if miners in China can't get the trivial
> amounts of
> > > bandwidth required through their firewall and end up being outcompeted
> then
> > > OK, too bad, we'll have to carry on without them.
> > >
> >
> > I'd rather think of mining as a responsibility than a right per se, but
> > you're right in so far as it's competitive and self-correcting.
>
> It's important to remember that the service Bitcoin miners are providing
> us is *not* transaction validation, but rather decentralization.
> Validation is something every full node does already; there's no
> shortage of it. What's tricky is designing a Bitcoin protocol that
> creates the appropriate incentives for mining to remain decentralized,
> so we get good value for the large amount of money being sent to miners.
>
> I've often likened this task to building a robot to go to the grocery
> store to buy milk for you. If that robot doesn't have a nose, before
> long store owners are going to realise it can't tell the difference
> between unspoilt and spoilt milk, and you're going to get ripped off
> paying for a bunch of spoiled milk.
>
> Designing a Bitcoin protocol where we expect "competition" to result in
> smaller miners in more geographically decentralized places to get
> outcompeted by larger miners who are more geographically centralized
> gets us bad value for our money. Sure it's "self-correcting", but not in
> a way that we want.
>
> > > But I'm not sure why it should be a big deal. They can always run a
> node
> > > on a server in Taiwan and connect the hardware to it via a VPN or so.
> > >
> > >
> >  Let's agree to disagree on this point.
>
> Note how that VPN, and likely VPS it's connected too, immediately adds
> another one or two points of failure to the whole system. Not only does
> this decrease reliability, it also decreases security by making attacks
> significantly easier - VPS security is orders of magnitude worse than
> the security of physical hardware.
>
> --
> 'peter'[:-1]@petertodd.org
> 00000000000000000e187b95a9159d04a3586dd4cbc068be88a3eafcb5b885f9
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/495ef5e9/attachment.html>

From wtogami at gmail.com  Mon Jun  1 12:29:19 2015
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Mon, 1 Jun 2015 02:29:19 -1000
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
References: <554BE0E1.5030001@bluematt.me>
	<CAFzgq-xByQ1E_33_m3UpXQFUkGc78HKnA=7XXMshANDuTkNsvA@mail.gmail.com>
	<CABsx9T0kbRe31LMwk499MQUw225f5GGd67GfhXBezHmDqxkioA@mail.gmail.com>
	<CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>
	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>
	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
	<CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>
	<CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
Message-ID: <CAEz79Pr22g=2ZZWE_HrH5-foPqejp6Cb_Qr9n2=vRjmzGhHhZQ@mail.gmail.com>

Whilst it would be nice if miners in *outside* China can carry on forever
regardless of their internet situation, nobody has any inherent "right" to
mine if they can't do the job - if miners in *outside* China can't get the
trivial amounts of bandwidth required through their firewall *TO THE
MAJORITY OF THE HASHRATE* and end up being outcompeted then OK, too bad,
we'll have to carry on without them.


On Mon, Jun 1, 2015 at 12:13 AM, Mike Hearn <mike at plan99.net> wrote:

> Whilst it would be nice if miners in China can carry on forever regardless
> of their internet situation, nobody has any inherent "right" to mine if
> they can't do the job - if miners in China can't get the trivial amounts of
> bandwidth required through their firewall and end up being outcompeted then
> OK, too bad, we'll have to carry on without them.
>
> But I'm not sure why it should be a big deal. They can always run a node
> on a server in Taiwan and connect the hardware to it via a VPN or so.
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/a156e424/attachment.html>

From marcel at jamin.net  Mon Jun  1 11:46:30 2015
From: marcel at jamin.net (Marcel Jamin)
Date: Mon, 1 Jun 2015 13:46:30 +0200
Subject: [Bitcoin-development] Proposed alternatives to the 20MB step
	function
In-Reply-To: <CALC81CNidPEgLpTVCRWqXYn0UpSCU-nuo5S85NSQ4UCce=n4EA@mail.gmail.com>
References: <16096345.A1MpJQQkRW@crushinator>
	<CABsx9T3-zxCAagAS0megd06xvG5n-3tUL9NUK9TT3vt7XNL9Tg@mail.gmail.com>
	<CANEZrP3VCaFsW4+gPm2kCJ9z7oVUZYVaeNf=_cJWEWwh4ZxiPQ@mail.gmail.com>
	<CABsx9T21zjHyO-nh1aSBM3z4Bg015O0rOfYq7=Sy4mf=QxUVQA@mail.gmail.com>
	<CANEZrP2BaKwhpPgcUHWAHswOmUeFLgEk4ysrn4+73qNzWDJ=yQ@mail.gmail.com>
	<CABsx9T3nCJ-w_v-yEbEE2Ytb+xC65mhYqhoAhoOHw9tkPpG0TA@mail.gmail.com>
	<CANEZrP1qH+zucYsGrMgnfi99e61Edxaj+xm=u_xYXga1g0WzJQ@mail.gmail.com>
	<CAE-z3OVmw+0doCe0hmYE6A1D61h0AUh4Mtnf5Fg1e4zQBkpraQ@mail.gmail.com>
	<CANEZrP0psA7hcJdKdA-r01UEt7ig3O-9vjwBMqKSEq-csu0hPQ@mail.gmail.com>
	<CABsx9T23r_y2R9OEgqb3AAZf47Hh8BUJncjxxmPp5v_9uKEiqQ@mail.gmail.com>
	<CA+VAk3O7SmDkxL9rATWe9oqCVVKcT=cFXDJnARPN8pv=UiHaiA@mail.gmail.com>
	<CACq0ZD7-qr4BCdnqOSXLYv-i58vAXWGcQ1oLsrbHoNFMeiNTtg@mail.gmail.com>
	<CALC81CNidPEgLpTVCRWqXYn0UpSCU-nuo5S85NSQ4UCce=n4EA@mail.gmail.com>
Message-ID: <CAAUq484AGnEm91TAUJzLUHdxyNTERJ=FtT3w5UYc+oiFVOaq1w@mail.gmail.com>

> Let the block size limit be a function of the number of current transactions
in the mempool.

There is no single mempool which transactions could be counted and there is
no consensus about the average number of unconfirmed transactions.

2015-06-01 13:30 GMT+02:00 Ricardo Filipe <ricardojdfilipe at gmail.com>:

> I've been following the discussion of the block size limit and IMO it
> is clear that any constant block size limit is, as many have said
> before, just kicking the can down the road.
> My problem with the dynamic lower limit solution based on past blocks
> is that it doesn't account for usage spikes. I would like to propose
> another dynamic lower limit scheme:
> Let the block size limit be a function of the number of current
> transactions in the mempool. This way, bitcoin usage regulates the
> block size limit.
>
> I'm sorry i don't have the knowledge of the code base or time to make
> simulations on this kind of approach, but nevertheless I would like to
> leave it here for discussion or foster other ideas.
>
> cheers
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/7027163a/attachment.html>

From jjlegoupil at gmail.com  Mon Jun  1 12:45:21 2015
From: jjlegoupil at gmail.com (=?UTF-8?B?SsOpcsO0bWUgTGVnb3VwaWw=?=)
Date: Mon, 1 Jun 2015 14:45:21 +0200
Subject: [Bitcoin-development] Proposed alternatives to the 20MB step
Message-ID: <CAFnMCfd8N_2nvspXF+Tro_SsofUUrMy4_QG9tRbPm1pUWtUCXQ@mail.gmail.com>

>What do other people think?
>
>
>If we can't come to an agreement soon, then I'll ask for help
>reviewing/submitting patches to Mike's Bitcoin-Xt project that implement a
>big increase now that grows over time so we may never have to go through
>all this rancor and debate again."
>
>
>I'll then ask for help lobbying the merchant services and exchanges and
>hosted wallet companies and other bitcoind-using-infrastructure companies


It's surprising to see a core dev going to the public to defend a proposal
most other core devs disagree on, and then lobbying the Bitcoin ecosystem.

This is an very unhealthy way to go because it incentives the other core
devs to stop their technical work and go public and lobby too (cf G.Maxwell
trying to raise redditters awareness).

We need core devs to work on technical issues, not waste time doing
politics, but Gavin's confrontational approach doesn't give them much of a
choice.

I fear that because of this approach, in the next monthes, core devs with
be lobbying and doing politics : precious time will be wasted for everyone
having stake in Bitcoin.


Regarding the 20MB proposal content:

Decentralization is the core of Bitcoin's security model and thus that's
what gives Bitcoin its value.

The danger is that decentralization tends naturally towards centralization,
because centralization is more efficient. Going from decentralization to
centralization is easy, going the other way is a lot harder :
decentralization we lose, may never be gained back.

Regarding "the urgency to do something":

I believe it would be extremely healthy for the network to bump into any
limit ASAP ... (let it be 1MB) : to incentive layer 2 and offchain
solutions to scale Bitcoin : there are promising designs/solutions out
there (LN, ChainDB, OtherCoin protocole, ...), but most don't get much
attention, because there is right now no need for them. And, I am sure new
solutions will be invented.

If during the "1MB bumpy period" something goes wrong, consensus among the
community would be reached easily if necessary.

Pretending there is urgency and that Apocalypse is approaching is a fallacy.

The Gavin 20MB proposal is compromising Bitcoin's long-term security in an
irreversible way, for gaining short-term better user experience.

I oppose the Gavin proposal in both content and form.

Cheers,
Jerome
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/2c17e1f9/attachment.html>

From adam at cypherspace.org  Mon Jun  1 13:00:49 2015
From: adam at cypherspace.org (Adam Back)
Date: Mon, 1 Jun 2015 14:00:49 +0100
Subject: [Bitcoin-development] Proposed alternatives to the 20MB step
In-Reply-To: <CAFnMCfd8N_2nvspXF+Tro_SsofUUrMy4_QG9tRbPm1pUWtUCXQ@mail.gmail.com>
References: <CAFnMCfd8N_2nvspXF+Tro_SsofUUrMy4_QG9tRbPm1pUWtUCXQ@mail.gmail.com>
Message-ID: <CALqxMTFJD5HrPjt=Ua5yFti9R_rj1gpFGGOKQb__xj8Bb4epGQ@mail.gmail.com>

Agree with everything you said.  Spot on observations on all counts.
Thank you for speaking up.

Adam

On 1 June 2015 at 13:45, J?r?me Legoupil <jjlegoupil at gmail.com> wrote:
>>What do other people think?
>>
>>
>>If we can't come to an agreement soon, then I'll ask for help
>>reviewing/submitting patches to Mike's Bitcoin-Xt project that implement a
>>big increase now that grows over time so we may never have to go through
>>all this rancor and debate again."
>>
>>
>>I'll then ask for help lobbying the merchant services and exchanges and
>>hosted wallet companies and other bitcoind-using-infrastructure companies
>
>
> It's surprising to see a core dev going to the public to defend a proposal
> most other core devs disagree on, and then lobbying the Bitcoin ecosystem.
>
> This is an very unhealthy way to go because it incentives the other core
> devs to stop their technical work and go public and lobby too (cf G.Maxwell
> trying to raise redditters awareness).
>
> We need core devs to work on technical issues, not waste time doing
> politics, but Gavin's confrontational approach doesn't give them much of a
> choice.
>
> I fear that because of this approach, in the next monthes, core devs with be
> lobbying and doing politics : precious time will be wasted for everyone
> having stake in Bitcoin.
>
>
> Regarding the 20MB proposal content:
>
> Decentralization is the core of Bitcoin's security model and thus that's
> what gives Bitcoin its value.
>
> The danger is that decentralization tends naturally towards centralization,
> because centralization is more efficient. Going from decentralization to
> centralization is easy, going the other way is a lot harder :
> decentralization we lose, may never be gained back.
>
> Regarding "the urgency to do something":
>
> I believe it would be extremely healthy for the network to bump into any
> limit ASAP ... (let it be 1MB) : to incentive layer 2 and offchain solutions
> to scale Bitcoin : there are promising designs/solutions out there (LN,
> ChainDB, OtherCoin protocole, ...), but most don't get much attention,
> because there is right now no need for them. And, I am sure new solutions
> will be invented.
>
> If during the "1MB bumpy period" something goes wrong, consensus among the
> community would be reached easily if necessary.
>
> Pretending there is urgency and that Apocalypse is approaching is a fallacy.
>
> The Gavin 20MB proposal is compromising Bitcoin's long-term security in an
> irreversible way, for gaining short-term better user experience.
>
> I oppose the Gavin proposal in both content and form.
>
> Cheers,
> Jerome
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From thyshizzle at outlook.com  Mon Jun  1 13:06:21 2015
From: thyshizzle at outlook.com (Thy Shizzle)
Date: Mon, 1 Jun 2015 23:06:21 +1000
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
Message-ID: <BAY403-EAS318194A3B22E4C5D5FE559DC2B60@phx.gbl>

Doesn't mean you should build something that says "fuck you" to the companies that have invested in farms of ASICS. To say "Oh yea if they can't mine it how we want stuff 'em" is naive. I get decentralisation, but don't dis incentivise mining. If miners are telling you that you're going to hurt them, esp. Miners that combined hold > 50% hashing power, why would you say too bad so sad? Why not just start stripping bitcoin out of adopters wallets? Same thing.
________________________________
From: Warren Togami Jr.<mailto:wtogami at gmail.com>
Sent: ?1/?06/?2015 10:30 PM
Cc: Bitcoin Dev<mailto:bitcoin-development at lists.sourceforge.net>
Subject: Re: [Bitcoin-development] Fwd: Block Size Increase Requirements

Whilst it would be nice if miners in *outside* China can carry on forever
regardless of their internet situation, nobody has any inherent "right" to
mine if they can't do the job - if miners in *outside* China can't get the
trivial amounts of bandwidth required through their firewall *TO THE
MAJORITY OF THE HASHRATE* and end up being outcompeted then OK, too bad,
we'll have to carry on without them.


On Mon, Jun 1, 2015 at 12:13 AM, Mike Hearn <mike at plan99.net> wrote:

> Whilst it would be nice if miners in China can carry on forever regardless
> of their internet situation, nobody has any inherent "right" to mine if
> they can't do the job - if miners in China can't get the trivial amounts of
> bandwidth required through their firewall and end up being outcompeted then
> OK, too bad, we'll have to carry on without them.
>
> But I'm not sure why it should be a big deal. They can always run a node
> on a server in Taiwan and connect the hardware to it via a VPN or so.
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/eca65e9f/attachment.html>
-------------- next part --------------
------------------------------------------------------------------------------
-------------- next part --------------
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development

From gavinandresen at gmail.com  Mon Jun  1 13:15:18 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Mon, 1 Jun 2015 09:15:18 -0400
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
References: <554BE0E1.5030001@bluematt.me>
	<CAFzgq-xByQ1E_33_m3UpXQFUkGc78HKnA=7XXMshANDuTkNsvA@mail.gmail.com>
	<CABsx9T0kbRe31LMwk499MQUw225f5GGd67GfhXBezHmDqxkioA@mail.gmail.com>
	<CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>
	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>
	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
Message-ID: <CABsx9T2Qbb2zhwrZtU0__-gCBQ_0qrvYxktBBSB2WaaNygzqow@mail.gmail.com>

On Sun, May 31, 2015 at 6:55 PM, Alex Mizrahi <alex.mizrahi at gmail.com>
wrote:

> Yes, if you are on a slow network then you are at a (slight) disadvantage.
>> So?
>>
>
> Chun mentioned that his pool is on a slow network, and thus bigger blocks
> give it an disadvantage. (Orphan rate is proportional to block size.)
>
You said that no, on contrary those who make big blocks have a disadvantage.
> And now you say that yes, this disadvantage exist.
>
>
Did you just lie to Chun?
>

Chun said that if somebody produced a big block it would take them at least
6 seconds to process it.

He also said he has nodes outside the great firewall ("We also use Aliyun
and Linode cloud services for block
propagation.").

So I assumed that he was talking about the "what if somebody produces a
block that takes a long time to process" attack -- which doesn't work (the
attacker just increases their own orphan rate).

If the whole network is creating blocks that takes everybody (except the
person creating the blocks) six seconds to broadcast+validate, then the
increase in orphan rate is spread out over the whole network. The
network-wide orphan rate goes up, everybody suffers a little (fewer blocks
created over time) until the next difficulty adjustment, then the
difficulty drops, then everybody is back in the same boat.

If it takes six seconds to validate because of limited bandwidth, then he
should connect via Matt's fast relay network, which optimize new block
announcements so they take a couple orders of magnitude less bandwidth.

If it takes six seconds because he's trying to validate on a raspberry
pi.... then he should buy a better validating machine, and/or help test the
current pending pull requests to make validation faster (e.g.
https://github.com/bitcoin/bitcoin/pull/5835 or
https://github.com/bitcoin/bitcoin/pull/6077 ).

If Chun had six seconds of latency, and he can't pay for a lower-latency
connection (or it is insanely expensive), then there's nothing he can do,
he'll have to live with a higher orphan rate no matter the block size.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/29cd43fc/attachment.html>

From mike at plan99.net  Mon Jun  1 13:21:39 2015
From: mike at plan99.net (Mike Hearn)
Date: Mon, 1 Jun 2015 15:21:39 +0200
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CAFzgq-ykeMeWF-ndgSm9upHTe8j6ZFYhBQjFs_WSz1oVd29j7g@mail.gmail.com>
References: <554BE0E1.5030001@bluematt.me>
	<CAFzgq-xByQ1E_33_m3UpXQFUkGc78HKnA=7XXMshANDuTkNsvA@mail.gmail.com>
	<CABsx9T0kbRe31LMwk499MQUw225f5GGd67GfhXBezHmDqxkioA@mail.gmail.com>
	<CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>
	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>
	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
	<CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>
	<CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
	<CAFzgq-ykeMeWF-ndgSm9upHTe8j6ZFYhBQjFs_WSz1oVd29j7g@mail.gmail.com>
Message-ID: <CANEZrP097saSOQAqKF=P+xe-Q0Jeq7H-Q6_FYKweygALRkw1bg@mail.gmail.com>

>
> Ignorant. You seem do not understand the current situation. We
> suffered from orphans a lot when we started in 2013. It is now your
> turn.


Then please enlighten me. You're unable to download block templates from a
trusted node outside of the country because the bandwidth requirements are
too high? Or due to some other problem?

With respect to "now it's your turn". Let's imagine the hard fork goes
ahead. Let us assume that almost all exchanges, payment processors and
other businesses go with larger blocks, but Chinese miners do not.

Then you will mine coins that will not be recognised on trading platforms
and cannot be sold. Your losses will be much larger than from orphans.

This can happen *even* if Chinese miners who can't/won't scale up are >50%
hashrate. SPV clients would need a forced checkpoint, which would be messy
and undesirable, but it's technically feasible. The smaller side of the
chain would cease to exist from the perspective of people actually trading
coins.

If your internet connectivity situation is really so poor that you cannot
handle one or two megabits out of the country then you're hanging on by
your fingernails anyway: your connection to the main internet could become
completely unusable at any time. If that's really the case, it seems to me
that Chinese Bitcoin is unsustainable and what you really need is a
China-specific alt coin that can run entirely within the Chinese internet.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/cf20069e/attachment.html>

From gavinandresen at gmail.com  Mon Jun  1 13:37:11 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Mon, 1 Jun 2015 09:37:11 -0400
Subject: [Bitcoin-development] Proposed alternatives to the 20MB step
In-Reply-To: <CAFnMCfd8N_2nvspXF+Tro_SsofUUrMy4_QG9tRbPm1pUWtUCXQ@mail.gmail.com>
References: <CAFnMCfd8N_2nvspXF+Tro_SsofUUrMy4_QG9tRbPm1pUWtUCXQ@mail.gmail.com>
Message-ID: <CABsx9T2D_yde6ZCH0tib6kxBfOgf-3BZDcEx4zsiqrTsA=Nvzw@mail.gmail.com>

RE: going to the public:

I started pushing privately for SOMETHING, ANYTHING to be done, or at the
very least for there to be some coherent plan besides "wait and see" back
in February.

As for it being unhealthy for me to write the code that I think should be
written and asking people to run it:

Ok. What would you suggest I do? I believe scaling up is the number one
priority right now. I think core devs SHOULD be taking time to solve it,
because I think the uncertainty of how it will be solved (or if it will be
solved) is bad for Bitcoin.

I think working on things like fixing transaction malleability is great...
but the reason to work on that is to enable smart contracts and all sorts
of other interesting new uses of the blockchain. But if we're stuck with
1MB blocks then there won't be room for all of those interesting new uses
on the blockchain.

Others disagree, and have the advantage of status-quo : if nothing is done,
they get what they want.

Based on some comments I've seen, I think there is also concern that "my
own personal network/computer connection might not be able to handle more
transaction volume." That is NOT a good reason to limit scalability, but I
think it is clouding the judgement of many of the core contributors who
started contributing as a spare-time hobby from their homes (where maybe
they have crappy DSL connections).


RE: decentralization:

I think this is a red-herring. I'll quote something I said on reddit
yesterday:

"I don't believe a 20MB max size will increase centralization to any
significant degree.

See
http://gavinandresen.ninja/does-more-transactions-necessarily-mean-more-centralized

and http://gavinandresen.ninja/are-bigger-blocks-better-for-bigger-miners

And I think we will have a lot LESS centralization of payments via services
like Coinbase (or hubs in some future StrawPay/Lightning network) if the
bitcoin network can directly handle more payment volume.

The centralization trade-offs seems very clear to me, and I think the "big
blocks mean more centralized" arguments are either just wrong or are
exaggerated or ignore the tradeoff with payment centralization (I think
that is a lot more important for privacy and censorship resistance)."


RE: incentives for off-chain solutions:

I'll quote myself again from
http://gavinandresen.ninja/it-must-be-done-but-is-not-a-panacea :

"The ?layer 2? services that are being built on top of the blockchain are
absolutely necessary to get nearly instant real-time payments,
micropayments and high volume machine-to-machine payments, to pick just
three examples. The ten-minute settlement time of blocks on the network is
not fast enough for those problems, and it will be the ten minute block
interval that drives development of those off-chain innovations more than
the total number of transactions supported."

On Mon, Jun 1, 2015 at 8:45 AM, J?r?me Legoupil <jjlegoupil at gmail.com>
wrote:

> If during the "1MB bumpy period" something goes wrong, consensus among the
> community would be reached easily if necessary.
>

That is the problem: this will be a "frog in boiling water" problem. I
believe there will be no sudden crisis-- instead, transactions will just
get increasingly unreliable and expensive, driving more and more people
away from Bitcoin towards... I don't know what. Some less expensive, more
reliable, probably more-centralized solution.

The Gavin 20MB proposal is compromising Bitcoin's long-term security in an
> irreversible way, for gaining short-term better user experience.
>

If by long-term security you mean "will transaction fees be high enough to
pay for enough hashing power to secure the network if there are bigger
blocks" I've written about that:
http://gavinandresen.ninja/block-size-and-miner-fees-again


If you mean something else, then please be specific.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/4417e2e4/attachment.html>

From gavinandresen at gmail.com  Mon Jun  1 13:59:31 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Mon, 1 Jun 2015 09:59:31 -0400
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CAFzgq-x+-s_Nbt4z-C4SWQbHdPr159AmL2JvpP0zg1axM+Vwcw@mail.gmail.com>
References: <554BE0E1.5030001@bluematt.me>
	<CAFzgq-xByQ1E_33_m3UpXQFUkGc78HKnA=7XXMshANDuTkNsvA@mail.gmail.com>
	<CABsx9T0kbRe31LMwk499MQUw225f5GGd67GfhXBezHmDqxkioA@mail.gmail.com>
	<CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>
	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>
	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
	<CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>
	<CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
	<CAFzgq-ykeMeWF-ndgSm9upHTe8j6ZFYhBQjFs_WSz1oVd29j7g@mail.gmail.com>
	<CAFzgq-x+-s_Nbt4z-C4SWQbHdPr159AmL2JvpP0zg1axM+Vwcw@mail.gmail.com>
Message-ID: <CABsx9T2aEvPs68pQA-KrtaDQFcTTtiB36eqKAcJRkiOFQr6WsA@mail.gmail.com>

On Mon, Jun 1, 2015 at 7:20 AM, Chun Wang <1240902 at gmail.com> wrote:

> I cannot believe why Gavin (who seems to have difficulty to spell my
> name correctly.) insists on his 20MB proposal regardless the
> community. BIP66 has been introduced for a long time and no one knows
> when the 95% goal can be met. This change to the block max size must
> take one year or more to be adopted. We should increase the limit and
> increase it now. 20MB is simply too big and too risky, sometimes we
> need compromise and push things forward. I agree with any solution
> lower than 10MB in its first two years.
>
>
Thanks, that's useful!

What do other people think?  Would starting at a max of 8 or 4 get
consensus?  Scaling up a little less than Nielsen's Law of Internet
Bandwidth predicts for the next 20 years?  (I think predictability is
REALLY important).

I chose 20 because all of my testing shows it to be safe, and all of my
back-of-the-envelope calculations indicate the costs are reasonable.

If consensus is "8 because more than order-of-magnitude increases are
scary" -- ok.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/6b7b4f7c/attachment.html>

From 1240902 at gmail.com  Mon Jun  1 14:08:29 2015
From: 1240902 at gmail.com (Chun Wang)
Date: Mon, 1 Jun 2015 22:08:29 +0800
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CABsx9T2aEvPs68pQA-KrtaDQFcTTtiB36eqKAcJRkiOFQr6WsA@mail.gmail.com>
References: <554BE0E1.5030001@bluematt.me>
	<CAFzgq-xByQ1E_33_m3UpXQFUkGc78HKnA=7XXMshANDuTkNsvA@mail.gmail.com>
	<CABsx9T0kbRe31LMwk499MQUw225f5GGd67GfhXBezHmDqxkioA@mail.gmail.com>
	<CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>
	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>
	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
	<CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>
	<CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
	<CAFzgq-ykeMeWF-ndgSm9upHTe8j6ZFYhBQjFs_WSz1oVd29j7g@mail.gmail.com>
	<CAFzgq-x+-s_Nbt4z-C4SWQbHdPr159AmL2JvpP0zg1axM+Vwcw@mail.gmail.com>
	<CABsx9T2aEvPs68pQA-KrtaDQFcTTtiB36eqKAcJRkiOFQr6WsA@mail.gmail.com>
Message-ID: <CAFzgq-wzQaS5K1hQMz_TcbvKMKQbAde488bx4uDXhODNXpqtsA@mail.gmail.com>

That is good. I oppose 20MB because I estimate it may increase the
overall orphan rate to an unacceptable level. 5MB, 8MB or probably
10MB should be ok.

On Mon, Jun 1, 2015 at 9:59 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:
> On Mon, Jun 1, 2015 at 7:20 AM, Chun Wang <1240902 at gmail.com> wrote:
>>
>> I cannot believe why Gavin (who seems to have difficulty to spell my
>> name correctly.) insists on his 20MB proposal regardless the
>> community. BIP66 has been introduced for a long time and no one knows
>> when the 95% goal can be met. This change to the block max size must
>> take one year or more to be adopted. We should increase the limit and
>> increase it now. 20MB is simply too big and too risky, sometimes we
>> need compromise and push things forward. I agree with any solution
>> lower than 10MB in its first two years.
>>
>
> Thanks, that's useful!
>
> What do other people think?  Would starting at a max of 8 or 4 get
> consensus?  Scaling up a little less than Nielsen's Law of Internet
> Bandwidth predicts for the next 20 years?  (I think predictability is REALLY
> important).
>
> I chose 20 because all of my testing shows it to be safe, and all of my
> back-of-the-envelope calculations indicate the costs are reasonable.
>
> If consensus is "8 because more than order-of-magnitude increases are scary"
> -- ok.
>
> --
> --
> Gavin Andresen



From bitcoin at olivere.de  Mon Jun  1 14:46:15 2015
From: bitcoin at olivere.de (Oliver Egginger)
Date: Mon, 01 Jun 2015 16:46:15 +0200
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CABsx9T2aEvPs68pQA-KrtaDQFcTTtiB36eqKAcJRkiOFQr6WsA@mail.gmail.com>
References: <554BE0E1.5030001@bluematt.me>	<CABsx9T0kbRe31LMwk499MQUw225f5GGd67GfhXBezHmDqxkioA@mail.gmail.com>	<CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>	<CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>	<CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>	<CAFzgq-ykeMeWF-ndgSm9upHTe8j6ZFYhBQjFs_WSz1oVd29j7g@mail.gmail.com>	<CAFzgq-x+-s_Nbt4z-C4SWQbHdPr159AmL2JvpP0zg1axM+Vwcw@mail.gmail.com>
	<CABsx9T2aEvPs68pQA-KrtaDQFcTTtiB36eqKAcJRkiOFQr6WsA@mail.gmail.com>
Message-ID: <556C7037.1050206@olivere.de>

On Mon, Jun 1, 2015 at 3:59 PM, Gavin Andresen wrote:
> What do other people think?  Would starting at a max of 8 or 4 get
> consensus?  Scaling up a little less than Nielsen's Law of Internet
> Bandwidth predicts for the next 20 years?  (I think predictability is
> REALLY important).
> 
> I chose 20 because all of my testing shows it to be safe, and all of my
> back-of-the-envelope calculations indicate the costs are reasonable.
> 
> If consensus is "8 because more than order-of-magnitude increases are
> scary" -- ok.

It would feel better for me if you would keep the power of two:

2^0 = 1MB
2^1 = 2MB
2^2 = 4MB
2^3 = 8MB
.
.
.

But that's only personal. Maybe other people feeling the same.

- oliver



From 1240902 at gmail.com  Mon Jun  1 14:48:45 2015
From: 1240902 at gmail.com (Chun Wang)
Date: Mon, 1 Jun 2015 22:48:45 +0800
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <556C7037.1050206@olivere.de>
References: <554BE0E1.5030001@bluematt.me>
	<CABsx9T0kbRe31LMwk499MQUw225f5GGd67GfhXBezHmDqxkioA@mail.gmail.com>
	<CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>
	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>
	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
	<CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>
	<CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
	<CAFzgq-ykeMeWF-ndgSm9upHTe8j6ZFYhBQjFs_WSz1oVd29j7g@mail.gmail.com>
	<CAFzgq-x+-s_Nbt4z-C4SWQbHdPr159AmL2JvpP0zg1axM+Vwcw@mail.gmail.com>
	<CABsx9T2aEvPs68pQA-KrtaDQFcTTtiB36eqKAcJRkiOFQr6WsA@mail.gmail.com>
	<556C7037.1050206@olivere.de>
Message-ID: <CAFzgq-wdA=grvpU4B4uXLqbZtpfJpVK+nkJDdbkGrJayWU5aAQ@mail.gmail.com>

The current max block size of 1000000 bytes is not power of two anyway.

On Mon, Jun 1, 2015 at 10:46 PM, Oliver Egginger <bitcoin at olivere.de> wrote:
> On Mon, Jun 1, 2015 at 3:59 PM, Gavin Andresen wrote:
>> What do other people think?  Would starting at a max of 8 or 4 get
>> consensus?  Scaling up a little less than Nielsen's Law of Internet
>> Bandwidth predicts for the next 20 years?  (I think predictability is
>> REALLY important).
>>
>> I chose 20 because all of my testing shows it to be safe, and all of my
>> back-of-the-envelope calculations indicate the costs are reasonable.
>>
>> If consensus is "8 because more than order-of-magnitude increases are
>> scary" -- ok.
>
> It would feel better for me if you would keep the power of two:
>
> 2^0 = 1MB
> 2^1 = 2MB
> 2^2 = 4MB
> 2^3 = 8MB
> .
> .
> .
>
> But that's only personal. Maybe other people feeling the same.
>
> - oliver
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From 165318903 at qq.com  Mon Jun  1 14:50:28 2015
From: 165318903 at qq.com (Potter QQ)
Date: Mon, 1 Jun 2015 22:50:28 +0800
Subject: [Bitcoin-development] Version bits proposal
In-Reply-To: <CAE-z3OVskd1JAE5g-WW2eDiPcxysYhbv-NsOYu7yKZvzu88VSg@mail.gmail.com>
References: <CAPg+sBg5TqQ=zjyZ7dp-d1oBGp31Krnix3zyt9suP4-AGbxW=Q@mail.gmail.com>
	<201505270346.17014.luke@dashjr.org>
	<CABm2gDoriDaQ1AjRDFxCT9zCNPQakJd9xRxfWkOJBf4v22hndQ@mail.gmail.com>
	<CAE-z3OVAKyppLVEWR=qNX-_p5yVAj_0Y7Kw76o4qaywf2DKtVw@mail.gmail.com>
	<20150527101516.GB25814@savin.petertodd.org>
	<CAE-z3OVskd1JAE5g-WW2eDiPcxysYhbv-NsOYu7yKZvzu88VSg@mail.gmail.com>
Message-ID: <F60298F2-D5C8-4D25-911E-4CBBE33183F3@qq.com>

oh my God ...

???? iPhone

> ? 2015?5?27??19:26?Tier Nolan <tier.nolan at gmail.com> ???
> 
> 
> 
>> On Wed, May 27, 2015 at 11:15 AM, Peter Todd <pete at petertodd.org> wrote:
>> The median time mechanism is basically a way for hashing power to show
>> what time they think it is. Equally, the nVersion soft-fork mechanism is
>> a way for hashing power to show what features they want to support.
> 
> Fair enough.  It means slightly more processing, but the median time could be cached in the header index, so no big deal.
> 
>> Block counts are inconvenient for planning, as there's no guarantee
>> they'll actually happen in any particular time frame, forward and back.
> 
> I don't think the deadline needs to be set that accurately.  A roughly 6 month deadline should be fine, but as you say a majority of miners is needed to abuse the median time and it is already a miner poll.
> 
> Perhaps the number of blocks used in the median could be increased to reduce "noise".
> 
> The median time could be median of the last 144 blocks plus 12 hours.
>  
>> If you assume no large reorganizations, your table of known BIPs can
>> just as easily be a list of block heights even if the median time
>> mechanism is used.
> 
> I think it makes it easier to write the code.  It reduced the state that needs to be stored per BIP.  You don't need to check if the previous bips were all accepted.
> 
> Each bit is assigned to a particular BIP for a particular range of times (or blocks).
> 
> If block numbers were used for the deadline, you just need to check the block index for the deadline block.
> 
> enum {
>     BIP_INACTIVE = 0,
>     BIP_ACTIVE,
>     BIP_LOCKED
>     BIP_INVALID_BLOCK,
> }
> 
> int GetBIPState(block, bip) 
> {
>     if (block.height == bip.deadline)  // Bit must be set to match locked/unlocked at deadline
>     {
>         int bipState = check_supermajority(...);
>         if (bipState == BIP_LOCKED && (block.nVersion & bip.bit)
>             return BIP_LOCKED;
> 
>         if (bipState != BIP_LOCKED && (block.nVersion & (~bip.bit)))
>             return BIP_INACTIVE;
> 
>         return BIP_INVALID_BLOCK;
>     }
> 
>     if (block.height > deadline) // Look at the deadline block to determine if the BIP is locked
>         return (block_index[deadline].nVersion & bip_bit) != 0 ? BIP_LOCKED : BIP_INACTIVE;
> 
>     if (block.height < startline + I) // BIP cannot activate/lock until startline + implicit window size
>         return INACTIVE;
> 
>     return check_supermajority(....) // Check supermajority of bit
> }
> 
> The block at height deadline would indicate if the BIP was locked in.
> 
> Block time could still be used as long as the block height was set after that.  The deadline_time could be in six months.  The startline height could be the current block height and the deadline_height could be startline + 35000.  
> 
> The gives roughly
> 
> start time = now
> deadline time = now + six months
> deadline height = now + eight months
> 
> The deadline height is the block height when the bit is returned to the pool but the deadline time is when the BIP has to be accepted.
> 
> It also helps with the warning system.  For each block height, there is a set of known BIP bits that are allowed.  Once the final deadline is passed, the expected mask is zeros.
> 
>> On Wed, May 27, 2015 at 11:15 AM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
>> On May 27, 2015 11:35 AM, "Tier Nolan" <tier.nolan at gmail.com> wrote:
>> 
>> > Was the intention to change the 95% rule.  You need 750 of the last 1000 to activate and then must wait at least 1000 for implication?
>> 
>> You need 75% to start applying it, 95% to start rejecting blocks that don't apply it.
> 
> I think the phrasing is ambiguous.  I was just asking for clarification.
> 
> "Whenever I out of any W subsequent blocks (regardless of the block itself) have bit B set,"
> 
> That suggests that the I of W blocks for the 95% rule must happen after activation.  This makes the rule checking harder.  Easier to use the current system, where blocks that were part of the 750 rule also count towards the 95% rule.
> ------------------------------------------------------------------------------
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/c8bd5163/attachment.html>

From mike at plan99.net  Mon Jun  1 15:33:41 2015
From: mike at plan99.net (Mike Hearn)
Date: Mon, 1 Jun 2015 17:33:41 +0200
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CAFzgq-wzQaS5K1hQMz_TcbvKMKQbAde488bx4uDXhODNXpqtsA@mail.gmail.com>
References: <554BE0E1.5030001@bluematt.me>
	<CAFzgq-xByQ1E_33_m3UpXQFUkGc78HKnA=7XXMshANDuTkNsvA@mail.gmail.com>
	<CABsx9T0kbRe31LMwk499MQUw225f5GGd67GfhXBezHmDqxkioA@mail.gmail.com>
	<CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>
	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>
	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
	<CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>
	<CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
	<CAFzgq-ykeMeWF-ndgSm9upHTe8j6ZFYhBQjFs_WSz1oVd29j7g@mail.gmail.com>
	<CAFzgq-x+-s_Nbt4z-C4SWQbHdPr159AmL2JvpP0zg1axM+Vwcw@mail.gmail.com>
	<CABsx9T2aEvPs68pQA-KrtaDQFcTTtiB36eqKAcJRkiOFQr6WsA@mail.gmail.com>
	<CAFzgq-wzQaS5K1hQMz_TcbvKMKQbAde488bx4uDXhODNXpqtsA@mail.gmail.com>
Message-ID: <CANEZrP1OX4j=AoiHDQx10mSVY6D4Yu7rd9Lnq=RW-H+byhCnyw@mail.gmail.com>

I'm OK with a smaller size + a formula that ramps it up over time. We are
far from having enough demand to fill 10MB blocks, let alone 20MB today.

To put it in perspective, to be feeling squeezed inside 10MB within two
years, we would need to double usage five times. I wish I knew a way to
make that happen. So the chances of us going to 20MB blocks full of real
transactions any time soon is close to zero short of some amazing killer
app that takes the world by storm (in which case: yay, nice problem to
have). As long as capacity significantly outpaces organic growth, we should
avoid problems.

The reason to pick 20MB then is merely one of expedience: we have to pick a
number, 20 is tested and seems to work, and we don't want to get caught by
surprise if demand does outstrip expectations.

Still, I question the underlying logic. We have no idea what connectivity
into China will look like a few years from now: it's seems to be a function
of politics rather than hardware trends. It might go down rather than up.
So 10 vs 20 feels a bit arbitrary. We can't let the Chinese government
dictate how Bitcoin is used, that would never be accepted by the rest of
the world. But if we optimistically assume things don't get worse, and 10
== more acceptance, then alright - it should make no difference in practice.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/e1fcd67d/attachment.html>

From adam at cypherspace.org  Mon Jun  1 15:40:17 2015
From: adam at cypherspace.org (Adam Back)
Date: Mon, 1 Jun 2015 16:40:17 +0100
Subject: [Bitcoin-development] soft-fork block size increase (extension
	blocks)
Message-ID: <CALqxMTHfU5+1ezP-Jnn5obpd621EHwpstseFzTjAvOdhDkfj=g@mail.gmail.com>

Hi Gavin

Sorry for slow response & broken threading - mailbox filled up & only
saw your response on archive.

I do earnestly think opt-in block-size increases are politically
cleaner (gives different people different sized blocks by their own
volition without forcing a compromise) and less risky than hard forks.
Particularly if a hard-fork were really provoked without clear and
wide consensus - dragons lay there.

> Then ask the various wallet developer how long it would take them to update
> their software to support something like this,

I don't think thats any particular concern, extension block payments
are forwards and backwards compatible.  Businesses who are keen to
have more transactions, would make it their problem to implement in
their wallet, or ask the wallet vendor/maintainer they're working with
to do it.  Nothing breaks if they dont use it.  The people that have
the need for it will work on it.  Market at work.  If it turns out
they dont really have a need for it, just projected huge numbers for
their business plan that say dont materialise, well no foul.

> and do some UI mockups of what the experience would look like for users.

I am not a UX guy, but for example it might be appropriate for tipping
services or other micropayments to use an extension block.  Or small
retail payments.  They can choose what address they use.  Merchants,
integrators etc can do likewise.
It gives plenty enough scope that people can work with useful
trade-offs while others work on lightning.

> If there are two engineering solutions to a problem, one really simple, and
> one complex, why would you pick the complex one?

Because the more complex one is safer, more flexible, more future
proof and better for decentralisation (and so as a bonus and might
actually get done without more months of argument as its less
contentious because it gives users choice to opt-in).  Bitcoin itself
is complex, a central ledger is simpler but as we know uninteresting
which is to say this is a security tradeoff.

Obviously I do appreciate KISS as a design principle, and utility of
incremental improvements, but this is a security trade-off we're
discussing here.  I am proposing a way to not weaken security, while
getting what you think is important - access to more TPS with a higher
centralisation tradeoff (for those who opt-in to it, rather than for
everyone whether that tradeoff is strongly against their interests or
not).

The decentralisation metrics are getting worse, not better, see Greg
Maxwell's comments
http://www.reddit.com/r/Bitcoin/comments/37vg8y/is_the_blockstream_company_the_reason_why_4_core/crqg381

This would not by those metrics be a good moment in history to make
the situation worse.

> Especially if the complex solution has all of the problems of the simple
> one (20MB extension blocks are just as "dangerous" as 20MB main blocks,
> yes? If not, why not?)

Not at all, thats the point.  Bitcoin has a one-size fits all
blocksize.  People can pool mine the 8MB extension block, while solo
or GBT mining the 1MB block.  Thats more centralising than staying at
1MB (because to get the fees from the extension block some people
without that kind of bandwidth are pool mining 8/9th of the lower
security/decentralisation transactions.  But its less centralising
than a fixed blocksize of 9MB (1+8 for apples/apples) because
realistically if those transactions are not spam, they would've
happened offchain, and offchain until we get lightning like systems
up, means central systems which are worse than the slight
centralisation of 8MB blocks being single servers and prone to custody
& security failure.  I think you made that point yourself in a recent
post also.

Sound good? ;)  Seriously I think its the least bad idea I've heard on
this topic.

As an aside, a risk with using companies as a sounding board, is that
you can get a misleading sense of consensus.  Did they understand the
tradeoff between security (decentralisation) and blocksize.  Did they
care?  Do they represent users interests?  Would they have "voted"
instead for extension blocks if it was presented in similar terms?  (I
have to imagine they might have preferred extension blocks given the
better story if you gloss over complexity and tradeoffs).

Adam



From mike at plan99.net  Mon Jun  1 15:55:39 2015
From: mike at plan99.net (Mike Hearn)
Date: Mon, 1 Jun 2015 17:55:39 +0200
Subject: [Bitcoin-development] Proposed alternatives to the 20MB step
In-Reply-To: <CAFnMCfd8N_2nvspXF+Tro_SsofUUrMy4_QG9tRbPm1pUWtUCXQ@mail.gmail.com>
References: <CAFnMCfd8N_2nvspXF+Tro_SsofUUrMy4_QG9tRbPm1pUWtUCXQ@mail.gmail.com>
Message-ID: <CANEZrP1HttM5rRqTchMrsbhfTbASHm3j0q=vjDaTjeYQHHBr9Q@mail.gmail.com>

>
> It's surprising to see a core dev going to the public to defend a proposal
> most other core devs disagree on, and then lobbying the Bitcoin ecosystem.
>

I agree that it is a waste of time. Many agree. The Bitcoin ecosystem
doesn't really need lobbying - my experience from talking to businesses and
wallet developers months ago is they virtually all see raising capacity as
a no brainer ... and some of them see this "debate" as despair-inducing
insanity.

What's happened here is that a small number of people have come to believe
they have veto power over changes to Bitcoin, and they have also become
*wildly* out of step with what the wider community wants. That cannot last.
So, short of some sudden change of heart that lets us kick the can down the
road a bit longer, a fork is inevitable.

Just be glad it's Gavin driving this and not me ... or a faceless coalition
of startups.


> Decentralization is the core of Bitcoin's security model and thus that's
> what gives Bitcoin its value.
>

No. Usage is what gives Bitcoin value.

It's kind of maddening that I have to point this out. Decentralisation is a
means to an end. I first used Bitcoin in April 2009 and it was perfectly
decentralised back then: every wallet was a full node and every computer
was capable of mining.

So if you believe what you just wrote, I guess Bitcoin's value has gone
down every day since.

On the other hand, if you believe the markets, Bitcoin's value has gone up.

Apparently the question of what gives Bitcoin its value is a bit more
complicated than that.




> : to incentive layer 2 and offchain solutions to scale Bitcoin : there are
> promising designs/solutions out there (LN, ChainDB, OtherCoin protocole,
> ...), but most don't get much attention, because there is right now no need
> for them. And, I am sure new solutions will be invented.
>

I have seen this notion a few times. I would like to dispose of it right
now.

I am one of the wallet developers you would be trying to "incentivise" by
letting Bitcoin break, and I say: get real. Developers are not some
bottomless fountain of work that will spit out whatever you like for free
if you twist their arms badly enough.

The problems that incentivised the creation of Bitcoin existed for decades
before Bitcoin was actually invented. Incentives are not enough. Someone
has to actually do the work, too. All proposals on the table would:

   - Involve enormous amounts of effort from many different people
   - Be technically risky (read: we don't know if they would even work)
   - Not be Bitcoin

The last point is important: people who got interested in Bitcoin and
decided to devote their time to it might not feel the same way about some
network of payment hubs or whatever today's fashion is. Faced with their
work being broken by armchair developers on some mailing list, they might
just say screw it and walk away completely.

After all, as the arguments for these systems are not particularly logical,
they might slave over hot keyboards for a year to support the Lightning
Network or whatever and then discover that it's no longer the fashionable
thing ... and that suddenly an even more convoluted design is being
"incentivised".
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/cfb40524/attachment.html>

From ajriesgo at gmail.com  Mon Jun  1 16:06:14 2015
From: ajriesgo at gmail.com (=?UTF-8?Q?=C3=81ngel_Jos=C3=A9_Riesgo?=)
Date: Mon, 1 Jun 2015 18:06:14 +0200
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CANEZrP1OX4j=AoiHDQx10mSVY6D4Yu7rd9Lnq=RW-H+byhCnyw@mail.gmail.com>
References: <554BE0E1.5030001@bluematt.me>
	<CAFzgq-xByQ1E_33_m3UpXQFUkGc78HKnA=7XXMshANDuTkNsvA@mail.gmail.com>
	<CABsx9T0kbRe31LMwk499MQUw225f5GGd67GfhXBezHmDqxkioA@mail.gmail.com>
	<CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>
	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>
	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
	<CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>
	<CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
	<CAFzgq-ykeMeWF-ndgSm9upHTe8j6ZFYhBQjFs_WSz1oVd29j7g@mail.gmail.com>
	<CAFzgq-x+-s_Nbt4z-C4SWQbHdPr159AmL2JvpP0zg1axM+Vwcw@mail.gmail.com>
	<CABsx9T2aEvPs68pQA-KrtaDQFcTTtiB36eqKAcJRkiOFQr6WsA@mail.gmail.com>
	<CAFzgq-wzQaS5K1hQMz_TcbvKMKQbAde488bx4uDXhODNXpqtsA@mail.gmail.com>
	<CANEZrP1OX4j=AoiHDQx10mSVY6D4Yu7rd9Lnq=RW-H+byhCnyw@mail.gmail.com>
Message-ID: <CAKqjTbRU=xZ3XGf2naPm4R5T5gGdMvr=+pzNP4c-WVwmxDbjsw@mail.gmail.com>

Hi everyone,

I'm a long-time lurker of this mailing list but it's the first time I post
here, so first of all I'd like to thank all of the usual contributors for
the great insights and technical discussions that can be found here. As
this is such a momentous point in the history of Bitcoin, I'd just like to
throw in my opinion too.

First, I agree with Oliver Egginger's message that it's much more elegant
to keep the numbers as powers of 2 rather than introducing somewhat
arbitrary numbers like 20. This also makes it easier to count the level of
support for what would be a clear spectrum of discrete levels (1, 2, 4, ...
32, 64, ..., infinite). If a temporary peace accord can be reached with a
value like 8 or 16, this will buy us some time for both the user base to
continue growing without hitting the limit and for newer technologies like
the lightning network to be developed and tested. We will also see whether
the relatively small increase causes any unexpected harm or whether (as I
expect) everything continues to run smoothly.

Personally, I'd like to see Bitcoin grow and become what I think most
Bitcoin users like myself expect from it: that it should be a payment
network directly accessible to people all over the world. In my opinion, it
is the proposition of Bitcoin as a form of electronic money that
additionally makes it a good store of value. I don't believe in the idea
that it can exist as just some sort of digital gold for a geeky financial
elite. And I haven't been persuaded by those who claim the scarcity of
block space is an economic fundamental of Bitcoin either. It seems to me
there's a lot of batty economic ideas being bandied about regarding the
supposed long-term value of the cap without much justification. In this
sense, my sympathies are with those who want to remove the maximum block
size cap. This was after all the original idea, so it's not fair for the
1MB camp to claim that they're the ones preserving the essences of Bitcoin.

But, anyway, I also think that a consensus at this point would be much
better than a head-on confrontation between two incompatible pieces of
software competing to gain the favour of a majority of exchanges and
merchants. With this in mind, can't we accept the consensus that raising
the hard-coded limit to a value like 8MB buys us a bit of time and should
be at least palatable to everyone? This may not be what the staunch
supporters of the 1MB limit want, but it's also not what I and others would
want, so we're talking about finding some common ground here, and not about
one side getting their way to the detriment or humiliation of the other.

The problem with a compromise based on a one-off maximum-size increase, of
course, is that we're just kicking the can down the road and the discussion
will continue. It's not a solution I like, but how can we get people like
say Greg Maxwell or Pieter Wuille to accept something more drastic? If they
find a new maximum-size cap acceptable, then it could be a reasonable
compromise. A new cap will let us test the situation and see how the
Bitcoin environment reacts. The next time the discussion crops up (probably
very soon, I know...), we may all have a better understanding of the
implications.

?ngel Jos? Riesgo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/f631e338/attachment.html>

From mike at plan99.net  Mon Jun  1 16:12:28 2015
From: mike at plan99.net (Mike Hearn)
Date: Mon, 1 Jun 2015 18:12:28 +0200
Subject: [Bitcoin-development] soft-fork block size increase (extension
	blocks)
In-Reply-To: <CALqxMTHfU5+1ezP-Jnn5obpd621EHwpstseFzTjAvOdhDkfj=g@mail.gmail.com>
References: <CALqxMTHfU5+1ezP-Jnn5obpd621EHwpstseFzTjAvOdhDkfj=g@mail.gmail.com>
Message-ID: <CANEZrP3SGdpSkpi-1eBiUMD74NPnAr7sW=eZ8WCz7PU6FVQaBA@mail.gmail.com>

Hi Adam,

I have more experience than Gavin of building consumer wallets, so I'll
make an attempt to answer your questions.

> Then ask the various wallet developer how long it would take them to
> update
> > their software to support something like this,
>
> I don't think thats any particular concern


I am a wallet developer and I am telling you that it is.


> Businesses who are keen to
> have more transactions, would make it their problem to implement in
> their wallet, or ask the wallet vendor/maintainer they're working with
> to do it.  Nothing breaks if they dont use it.


I don't see how this is the case. If an exchange supports extension blocks
and I withdraw from that to a wallet that doesn't, the money will never
arrive from my perspective. Yet the exchange will claim they sent it and
they will wash their hands of the matter. Disaster.

I am not a UX guy
>

But I am. I've designed both consumer and engineering UI's at Google, and
also more recently for Lighthouse.

Attempting to explain to a user why they sent money that didn't show up on
the other end is a non starter. It's bad enough when things take a long
time to confirm or bugs cause propagation failures. Doing it
deliberately is not going to work. Payments *must* be reliable and wallets
*must* be compatible with each other.

This is one reason why a Lightning style approach also isn't going to work
any time soon. For example, it would require people to abandon Bitcoin
addresses. I pushed for that before, around the P2SH time, and Gavin
correctly intuited that the community wasn't ready for it yet. I'm not sure
much has changed.


> Because the more complex one is safer, more flexible, more future
> proof and better for decentralisation


I disagree with all of those points. I find Lightning/Stroem etc to be more
dangerous, less flexible, and worse for decentralisation. I explain why
here:

https://medium.com/@octskyward/the-capacity-cliff-586d1bf7715e

You mentioned decentralisation metrics. Gregory's post is ignoring one of
the most important decentralisation metrics, which is number of wallets
made by independent developers. That has got dramatically better over time.
It would get worse if wallets became more complex very suddenly.


> As an aside, a risk with using companies as a sounding board, is that
> you can get a misleading sense of consensus.


>From what I can tell Blockstream employees are just ignoring those
companies entirely, which will give you a radically more distorted view of
the consensus. As companies providing services to our community have
serious economic weight, it stands to reason that their opinions would
matter a great deal. Yet on this mailing list I see zero effort to even
recognise their concerns, let alone care about them.
  <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>
Anyway, let me repeat again to make it clear - as someone who has spent
five years writing SPV wallets, I am not on board with extension blocks or
any other Rube Goldberg contraption that exists purely to work around
theoretical objections by Blockstream employees+Peter Todd, which is what
this feels like to me.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/044693d8/attachment.html>

From jameson.lopp at gmail.com  Mon Jun  1 16:41:50 2015
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Mon, 1 Jun 2015 09:41:50 -0700
Subject: [Bitcoin-development] Proposed alternatives to the 20MB step
In-Reply-To: <CANEZrP1HttM5rRqTchMrsbhfTbASHm3j0q=vjDaTjeYQHHBr9Q@mail.gmail.com>
References: <CAFnMCfd8N_2nvspXF+Tro_SsofUUrMy4_QG9tRbPm1pUWtUCXQ@mail.gmail.com>
	<CANEZrP1HttM5rRqTchMrsbhfTbASHm3j0q=vjDaTjeYQHHBr9Q@mail.gmail.com>
Message-ID: <CADL_X_cjDdRoJCpi6XxkxDcVQErriutRhMMdxosSD9MbgQ5eEA@mail.gmail.com>

The overlapping consensus mechanisms between the Core Developers, the
miners, the block chain based businesses, and the end users make it such
that the very definition of Bitcoin is not just what any single one of
those groups comes to a consensus about. We must ALL be in consensus about
just what Bitcoin actually is and what its goals should be. As such, the
onus is on the Core Developers to convince the other groups to either
accept or reject major changes to the protocol.

Greg made a great point regarding the difficulty in determining the
definition of Bitcoin:
https://twitter.com/lopp/status/596135982539395073/photo/1

My point being that Bitcoin is inherently a political phenomenon; we're
just trying to describe the human politics behind Bitcoin with computer
code that is reasonably secure against attack.

- Jameson

On Mon, Jun 1, 2015 at 8:55 AM, Mike Hearn <mike at plan99.net> wrote:

> It's surprising to see a core dev going to the public to defend a proposal
>> most other core devs disagree on, and then lobbying the Bitcoin ecosystem.
>>
>
> I agree that it is a waste of time. Many agree. The Bitcoin ecosystem
> doesn't really need lobbying - my experience from talking to businesses and
> wallet developers months ago is they virtually all see raising capacity as
> a no brainer ... and some of them see this "debate" as despair-inducing
> insanity.
>
> What's happened here is that a small number of people have come to believe
> they have veto power over changes to Bitcoin, and they have also become
> *wildly* out of step with what the wider community wants. That cannot
> last. So, short of some sudden change of heart that lets us kick the can
> down the road a bit longer, a fork is inevitable.
>
> Just be glad it's Gavin driving this and not me ... or a faceless
> coalition of startups.
>
>
>> Decentralization is the core of Bitcoin's security model and thus that's
>> what gives Bitcoin its value.
>>
>
> No. Usage is what gives Bitcoin value.
>
> It's kind of maddening that I have to point this out. Decentralisation is
> a means to an end. I first used Bitcoin in April 2009 and it was perfectly
> decentralised back then: every wallet was a full node and every computer
> was capable of mining.
>
> So if you believe what you just wrote, I guess Bitcoin's value has gone
> down every day since.
>
> On the other hand, if you believe the markets, Bitcoin's value has gone up.
>
> Apparently the question of what gives Bitcoin its value is a bit more
> complicated than that.
>
>
>
>
>> : to incentive layer 2 and offchain solutions to scale Bitcoin : there
>> are promising designs/solutions out there (LN, ChainDB, OtherCoin
>> protocole, ...), but most don't get much attention, because there is right
>> now no need for them. And, I am sure new solutions will be invented.
>>
>
> I have seen this notion a few times. I would like to dispose of it right
> now.
>
> I am one of the wallet developers you would be trying to "incentivise" by
> letting Bitcoin break, and I say: get real. Developers are not some
> bottomless fountain of work that will spit out whatever you like for free
> if you twist their arms badly enough.
>
> The problems that incentivised the creation of Bitcoin existed for decades
> before Bitcoin was actually invented. Incentives are not enough. Someone
> has to actually do the work, too. All proposals on the table would:
>
>    - Involve enormous amounts of effort from many different people
>    - Be technically risky (read: we don't know if they would even work)
>    - Not be Bitcoin
>
> The last point is important: people who got interested in Bitcoin and
> decided to devote their time to it might not feel the same way about some
> network of payment hubs or whatever today's fashion is. Faced with their
> work being broken by armchair developers on some mailing list, they might
> just say screw it and walk away completely.
>
> After all, as the arguments for these systems are not particularly
> logical, they might slave over hot keyboards for a year to support the
> Lightning Network or whatever and then discover that it's no longer the
> fashionable thing ... and that suddenly an even more convoluted design is
> being "incentivised".
>
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/e4b3d878/attachment.html>

From yifu at coinapex.com  Mon Jun  1 16:43:38 2015
From: yifu at coinapex.com (Yifu Guo)
Date: Mon, 1 Jun 2015 12:43:38 -0400
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CABsx9T2aEvPs68pQA-KrtaDQFcTTtiB36eqKAcJRkiOFQr6WsA@mail.gmail.com>
References: <554BE0E1.5030001@bluematt.me>
	<CAFzgq-xByQ1E_33_m3UpXQFUkGc78HKnA=7XXMshANDuTkNsvA@mail.gmail.com>
	<CABsx9T0kbRe31LMwk499MQUw225f5GGd67GfhXBezHmDqxkioA@mail.gmail.com>
	<CAFzgq-z5WCznGhbOexS0XESNGAVauw45ewEV-1eMij7yDT61=Q@mail.gmail.com>
	<CAFzgq-zTybEQyGz0nq90u5n5JZcJzxQS_XKaTpr5POJi-tHM6A@mail.gmail.com>
	<CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
	<CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>
	<CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
	<CAFzgq-ykeMeWF-ndgSm9upHTe8j6ZFYhBQjFs_WSz1oVd29j7g@mail.gmail.com>
	<CAFzgq-x+-s_Nbt4z-C4SWQbHdPr159AmL2JvpP0zg1axM+Vwcw@mail.gmail.com>
	<CABsx9T2aEvPs68pQA-KrtaDQFcTTtiB36eqKAcJRkiOFQr6WsA@mail.gmail.com>
Message-ID: <CAHcfU-X2OF-YuRfBhmq3B=CqgXhqMQLYvW8T0kfCcqjS5YpAHQ@mail.gmail.com>

 Nielsen's Law of Internet Bandwidth is simply not true, but if you look at
data points like http://www.netindex.com/upload/ which will show we are at
least on the right track, but this is flawed still.

The fact of the matter is these speed tests are done from local origin to
local destination within the city, let alone the country ( see note about
how these test are only conducted 300 miles within the server). and our
current internet infrastructure is set up with CDNs for the web and media
consumption.
these data points can not and should not be used to model the connectivity
of a peer to peer network.

Uplink bandwidth is scarce is China and expensive, avg about $37 per 1mbps
after 5, but this is not the real problem. the true issue lies in the
ISP transparent proxy they run. this is not a problem isolated in just
China, Thailand and various other countries in Asia like Lebanon. I have
also heard in various IRCs that southern France also face this similar
issue due to poor routing configurations they have that prevents
connections to certain parts of the world, unsure if this is a mistake or a
geopolitical by-product.

As for your question earlier Gavin, from Dallas TX to a VPS in Shanghai
on ????/Shanghai telecom, which is capped at 5mbps the data results match
my concerns, I've gotten low as 83 Kbits/sec and as high as 9.24 Mbits/sec.
and other ranges in between, none are consistent. ping avg is about 250ms.

The temporary solution I recommend again from earlier is MPTCP:
http://www.multipath-tcp.org/ which allows you to multiple
interfaces/networks for a single TCP connection, this is mainly developed
for mobile3g/wifi transition but I found uses to improve bandwidth and
connection stability on the go by combining a local wifi/ethernet
connection with my 3g phone tether. this allows you to set up a middlebox
somewhere, put shadowsocks server on it, and on your local machine you can
route all TCP traffic over the shadow socks client and MPTCP will
automatically pick the best path for upload and download.



On Mon, Jun 1, 2015 at 9:59 AM, Gavin Andresen <gavinandresen at gmail.com>
wrote:

> On Mon, Jun 1, 2015 at 7:20 AM, Chun Wang <1240902 at gmail.com> wrote:
>
>> I cannot believe why Gavin (who seems to have difficulty to spell my
>> name correctly.) insists on his 20MB proposal regardless the
>> community. BIP66 has been introduced for a long time and no one knows
>> when the 95% goal can be met. This change to the block max size must
>> take one year or more to be adopted. We should increase the limit and
>> increase it now. 20MB is simply too big and too risky, sometimes we
>> need compromise and push things forward. I agree with any solution
>> lower than 10MB in its first two years.
>>
>>
> Thanks, that's useful!
>
> What do other people think?  Would starting at a max of 8 or 4 get
> consensus?  Scaling up a little less than Nielsen's Law of Internet
> Bandwidth predicts for the next 20 years?  (I think predictability is
> REALLY important).
>
> I chose 20 because all of my testing shows it to be safe, and all of my
> back-of-the-envelope calculations indicate the costs are reasonable.
>
> If consensus is "8 because more than order-of-magnitude increases are
> scary" -- ok.
>
> --
> --
> Gavin Andresen
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>


-- 
*Yifu Guo*
*"Life is an everlasting self-improvement."*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/3c8e46e8/attachment.html>

From adam at cypherspace.org  Mon Jun  1 17:21:15 2015
From: adam at cypherspace.org (Adam Back)
Date: Mon, 1 Jun 2015 18:21:15 +0100
Subject: [Bitcoin-development] soft-fork block size increase (extension
	blocks)
In-Reply-To: <CANEZrP3SGdpSkpi-1eBiUMD74NPnAr7sW=eZ8WCz7PU6FVQaBA@mail.gmail.com>
References: <CALqxMTHfU5+1ezP-Jnn5obpd621EHwpstseFzTjAvOdhDkfj=g@mail.gmail.com>
	<CANEZrP3SGdpSkpi-1eBiUMD74NPnAr7sW=eZ8WCz7PU6FVQaBA@mail.gmail.com>
Message-ID: <CALqxMTE57mEiG7VuEDSfBDswCeYPWRoa1DEY9iL=P0xLFu8YCA@mail.gmail.com>

Mike wrote:
>> Businesses who are keen to
>> have more transactions, would make it their problem to implement in
>> their wallet, or ask the wallet vendor/maintainer they're working with
>> to do it.  Nothing breaks if they dont use it.
>
>
> I don't see how this is the case. If an exchange supports extension blocks
> and I withdraw from that to a wallet that doesn't, the money will never
> arrive from my perspective. Yet the exchange will claim they sent it and
> they will wash their hands of the matter. Disaster.

To be clear in case you are missing part of the mechanism.: it is
forward and backwards compatible meaning a 1MB address can receive
payments from an 8MB address (at reduced security if it has software
that doesnt understand it) and a 1MB address can pay an 8MB address by
paying to an OP_TRUE that has meaning to the extension block nodes.

A 1MB client wont even understand the difference between a 1MB and 8MB
out payment.  An 8MB client will understand and pay 1MB addresses in a
different way (moving the coin back to the 1MB chain).

So its opt-in and incrementally deployable.  Exchanges could encourage
their users to use wallets that support 8MB blocks, eg by charging a
fee for 1MB transactions.  If 1MB blocks experience significant fee
pressure, this will be persuasive.  Or they could chose not to and eat
the cost.  This is all normal market adoption of a new cheaper
technical option (in this case with a tradeoff of reduced
security/more centralisation for those opting in to it).

>> Because the more complex one is safer, more flexible, more future
>> proof and better for decentralisation
>
> I disagree with all of those points. I find Lightning/Stroem etc to be more
> dangerous, less flexible, and worse for decentralisation. I explain why
> here:

Extension blocks & lightning are unrelated things.

While I understand the need for being practical, there is IMO, amongst
engineering maxims something as far as being too pragmatic,
dangerously pragmatic even.  We cant do stuff in bitcoin that has bad
carry costs, nor throw out the baby with the bathwater.

The situation is just that we are facing a security vs volume tradeoff
and different people will have different requirements and comfort
zones.  If I am not misremembering, I think you've sided typically
with the huge block, big data center only end of the spectrum.  What I
am proposing empowers you to do experiments in that direction without
getting into a requirements conflict with people who value more
strongly the bitcoin properties arising from it being robustly
decentralised.

I am not sure personally where the blocksize discussion comes out - if
it stays as is for a year, in a wait and see, reduce spam, see
fee-pressure take effect as it has before, work on improving improve
decentralisation metrics, relay latency, and do a blocksize increment
to kick the can if-and-when it becomes necessary and in the mean-time
try to do something more long-term ambitious about scale rather than
volume.  Bitcoin without scale improvements probably wont get the
volume people would like.  So scale is more important than volume; and
security (decentralisation) is important too.  To the extreme analogy
we could fix scale tomorrow by throwing up a single high perf
database, but then we'd break the security properties arising from
decentralisation.  We should improve both within an approximately safe
envelope IMO.

Adam



From mike at plan99.net  Mon Jun  1 18:01:53 2015
From: mike at plan99.net (Mike Hearn)
Date: Mon, 1 Jun 2015 20:01:53 +0200
Subject: [Bitcoin-development] soft-fork block size increase (extension
	blocks)
In-Reply-To: <CALqxMTE57mEiG7VuEDSfBDswCeYPWRoa1DEY9iL=P0xLFu8YCA@mail.gmail.com>
References: <CALqxMTHfU5+1ezP-Jnn5obpd621EHwpstseFzTjAvOdhDkfj=g@mail.gmail.com>
	<CANEZrP3SGdpSkpi-1eBiUMD74NPnAr7sW=eZ8WCz7PU6FVQaBA@mail.gmail.com>
	<CALqxMTE57mEiG7VuEDSfBDswCeYPWRoa1DEY9iL=P0xLFu8YCA@mail.gmail.com>
Message-ID: <CANEZrP0Ym7E6e5EASx-YeDRNPU=00804nPqeq1a0-fmxCpfmCA@mail.gmail.com>

>
> (at reduced security if it has software that doesnt understand it)


Well, yes. Isn't that rather key to the issue?  Whereas by simply
increasing the block size, SPV wallets don't care (same security and
protocol as before) and fully validating wallets can be updated with a very
small code change.


> A 1MB client wont even understand the difference between a 1MB and 8MB
> out payment.


Let's say an old client makes a payment that only gets confirmed in an
extension block. The wallet will think the payment is unconfirmed and show
that to the user forever, no?

Can you walk through the UX for each case?


> If I am not misremembering, I think you've sided typically
> with the huge block, big data center only end of the spectrum.


It would be Satoshi, that argued that.

I think there must be a communication issue here somewhere. I'm not sure
how this meme has taken hold amongst you guys, as I am the guy who wrote
the scalability page back in 2011:

https://en.bitcoin.it/wiki/Scalability

It says:

*The core Bitcoin network can scale to much higher transaction rates than
are seen today, assuming that nodes in the network are primarily running on
high end servers rather than desktops. *


By "much higher rates" I meant VISA scale and by "high end server" I meant
high end by today's standards not tomorrows. There's a big difference
between a datacenter and a single server! By definition a single server is
not a datacenter, although it would be conventional to place it in
one. But even
with the most wildly optimistic growth imaginable, I couldn't foresee a
time when you needed more than a single machine to keep up with the
transaction stream.

And we're not going to get to VISA scale any time soon: I don't think I've
ever argued we will. If it does happen it would presumably be decades away.
Again, short of some currently unimagined killer app.

So I don't believe I've ever argued this, and honestly I kinda feel people
are putting words in my mouth.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/a93d6e3d/attachment.html>

From wtogami at gmail.com  Mon Jun  1 18:19:40 2015
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Mon, 1 Jun 2015 08:19:40 -1000
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <BAY403-EAS318194A3B22E4C5D5FE559DC2B60@phx.gbl>
References: <BAY403-EAS318194A3B22E4C5D5FE559DC2B60@phx.gbl>
Message-ID: <CAEz79PqGJ5XSMUbWVQOQ6DjJqbqHmad6t37RUX9Zz=2k4HJK3Q@mail.gmail.com>

By reversing Mike's language to the reality of the situation I had hoped
people would realize how abjectly ignorant and insensitive his statement
was.  I am sorry to those in the community if they misunderstood my post. I
thought it was obvious that it was sarcasm where I do not seriously believe
particular participants should be excluded.

On Mon, Jun 1, 2015 at 3:06 AM, Thy Shizzle <thyshizzle at outlook.com> wrote:

>  Doesn't mean you should build something that says "fuck you" to the
> companies that have invested in farms of ASICS. To say "Oh yea if they
> can't mine it how we want stuff 'em" is naive. I get decentralisation, but
> don't dis incentivise mining. If miners are telling you that you're going
> to hurt them, esp. Miners that combined hold > 50% hashing power, why would
> you say too bad so sad? Why not just start stripping bitcoin out of
> adopters wallets? Same thing.
>  ------------------------------
> From: Warren Togami Jr. <wtogami at gmail.com>
> Sent: ?1/?06/?2015 10:30 PM
> Cc: Bitcoin Dev <bitcoin-development at lists.sourceforge.net>
> Subject: Re: [Bitcoin-development] Fwd: Block Size Increase Requirements
>
>   Whilst it would be nice if miners in *outside* China can carry on
> forever regardless of their internet situation, nobody has any inherent
> "right" to mine if they can't do the job - if miners in *outside* China
> can't get the trivial amounts of bandwidth required through their firewall *TO
> THE MAJORITY OF THE HASHRATE* and end up being outcompeted then OK, too
> bad, we'll have to carry on without them.
>
>
> On Mon, Jun 1, 2015 at 12:13 AM, Mike Hearn <mike at plan99.net> wrote:
>
>  Whilst it would be nice if miners in China can carry on forever
> regardless of their internet situation, nobody has any inherent "right" to
> mine if they can't do the job - if miners in China can't get the trivial
> amounts of bandwidth required through their firewall and end up being
> outcompeted then OK, too bad, we'll have to carry on without them.
>
>  But I'm not sure why it should be a big deal. They can always run a node
> on a server in Taiwan and connect the hardware to it via a VPN or so.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/4604b753/attachment.html>

From mike at plan99.net  Mon Jun  1 18:30:20 2015
From: mike at plan99.net (Mike Hearn)
Date: Mon, 1 Jun 2015 20:30:20 +0200
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CAEz79PqGJ5XSMUbWVQOQ6DjJqbqHmad6t37RUX9Zz=2k4HJK3Q@mail.gmail.com>
References: <BAY403-EAS318194A3B22E4C5D5FE559DC2B60@phx.gbl>
	<CAEz79PqGJ5XSMUbWVQOQ6DjJqbqHmad6t37RUX9Zz=2k4HJK3Q@mail.gmail.com>
Message-ID: <CANEZrP1DT2VB9kNLCTXExVXwWkPFSar0GhbvhY9Wfz+H1Xx2gw@mail.gmail.com>

I don't see this as an issue of sensitivity or not. Miners are businesses
that sell a service to Bitcoin users - the service of ordering transactions
chronologically. They aren't charities.

If some miners can't provide the service Bitcoin users need any more, then
OK, they should not/cannot mine. Lots of miners have come and gone since
Bitcoin started as different technology generations came and went. That's
just business.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/f2f7017a/attachment.html>

From jim at ergophobia.org  Mon Jun  1 18:32:24 2015
From: jim at ergophobia.org (Jim Phillips)
Date: Mon, 1 Jun 2015 13:32:24 -0500
Subject: [Bitcoin-development] Why do we need a MAX_BLOCK_SIZE at all?
Message-ID: <CANe1mWz_wDAFL2piyLeOxEnMxHCQaTnGLQA6f9jZvLEmbMj6Zw@mail.gmail.com>

Ok, I understand at least some of the reason that blocks have to be kept to
a certain size. I get that blocks which are too big will be hard to
propagate by relays. Miners will have more trouble uploading the large
blocks to the network once they've found a hash. We need block size
constraints to create a fee economy for the miners.

But these all sound to me like issues that affect some, but not others. So
it seems to me like it ought to be a configurable setting. We've already
witnessed with last week's stress test that most miners aren't even
creating 1MB blocks but are still using the software defaults of 730k. If
there are configurable limits, why does there have to be a hard limit?
Can't miners just use the configurable limit to decide what size blocks
they can afford to and are thus willing to create? They could just as
easily use that to create a fee economy. If the miners with the most
hashpower are not willing to mine blocks larger than 1 or 2 megs, then they
are able to slow down confirmations of transactions. It may take several
blocks before a miner willing to include a particular transaction finds a
block. This would actually force miners to compete with each other and find
a block size naturally instead of having it forced on them by the protocol.
Relays would be able to participate in that process by restricting the
miners ability to propagate large blocks. You know, like what happens in a
FREE MARKET economy, without burdensome regulation which can be manipulated
through politics? Isn't that what's really happening right now? Different
political factions with different agendas are fighting over how best to
regulate the Bitcoin protocol.

I know the limit was originally put in place to prevent spamming. But that
was when we were mining with CPUs and just beginning to see the occasional
GPU which could take control over the network and maliciously spam large
blocks. But with ASIC mining now catching up to Moore's Law, that's not
really an issue anymore. No one malicious entity can really just take over
the network now without spending more money than it's worth -- and that's
just going to get truer with time as hashpower continues to grow. And it's
not like the hard limit really does anything anymore to prevent spamming.
If a spammer wants to create thousands or millions of transactions, a hard
limit on the block size isn't going to stop him.. He'll just fill up the
mempool or UTXO database instead of someone's block database.. And block
storage media is generally the cheapest storage.. I mean they could be
written to tape and be just as valid as if they're stored in DRAM. Combine
that with pruning, and block storage costs are almost a non-issue for
anyone who isn't running an archival node.

And can't relay nodes just configure a limit on the size of blocks they
will relay? Sure they'd still need to download a big block occasionally,
but that's not really that big a deal, and they're under no obligation to
propagate it.. Even if it's a 2GB block, it'll get downloaded eventually.
It's only if it gets to the point where the average home connection is too
slow to keep up with the transaction & block flow that there's any real
issue there, and that would happen regardless of how big the blocks are. I
personally would much prefer to see hardware limits act as the bottleneck
than to introduce an artificial bottleneck into the protocol that has to be
adjusted regularly. The software and protocol are TECHNICALLY capable of
scaling to handle the world's entire transaction set. The real issue with
scaling to this size is limitations on hardware, which are regulated by
Moore's Law. Why do we need arbitrary soft limits? Why can't we allow
Bitcoin to grow naturally within the ever increasing limits of our
hardware? Is it because nobody will ever need more than 640k of RAM?

Am I missing something here? Is there some big reason that I'm overlooking
why there has to be some hard-coded limit on the block size that affects
the entire network and creates ongoing issues in the future?

--

*James G. Phillips IV*
<https://plus.google.com/u/0/113107039501292625391/posts>

*"Don't bunt. Aim out of the ball park. Aim for the company of immortals."
-- David Ogilvy*

 *This message was created with 100% recycled electrons. Please think twice
before printing.*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/82b314f9/attachment.html>

From raystonn at hotmail.com  Mon Jun  1 18:39:31 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Mon, 1 Jun 2015 11:39:31 -0700
Subject: [Bitcoin-development] soft-fork block size increase
	(extensionblocks)
In-Reply-To: <CANEZrP0Ym7E6e5EASx-YeDRNPU=00804nPqeq1a0-fmxCpfmCA@mail.gmail.com>
References: <CALqxMTHfU5+1ezP-Jnn5obpd621EHwpstseFzTjAvOdhDkfj=g@mail.gmail.com><CANEZrP3SGdpSkpi-1eBiUMD74NPnAr7sW=eZ8WCz7PU6FVQaBA@mail.gmail.com><CALqxMTE57mEiG7VuEDSfBDswCeYPWRoa1DEY9iL=P0xLFu8YCA@mail.gmail.com>
	<CANEZrP0Ym7E6e5EASx-YeDRNPU=00804nPqeq1a0-fmxCpfmCA@mail.gmail.com>
Message-ID: <COL131-DS2145F20239BDE2202FE36CDB60@phx.gbl>

> And we're not going to get to VISA scale any time soon

No, not at these block size limits.  The closer we get to the maximum block size, the slower we grow the average block size toward it.  Number of transactions per day is of course highly correlated with average block size.  Based on these graphs we can expect that hitting 1 million transactions per day will be impossible without raising the maximum block size.


https://blockchain.info/charts/avg-block-size?showDataPoints=false&show_header=true&daysAverageString=7&timespan=all&scale=1&address=



https://blockchain.info/charts/n-transactions?showDataPoints=false&timespan=all&show_header=true&daysAverageString=7&scale=1&address= 



From: Mike Hearn 
Sent: Monday, June 01, 2015 11:01 AM
To: Adam Back 
Cc: Bitcoin Dev 
Subject: Re: [Bitcoin-development] soft-fork block size increase (extensionblocks)

  (at reduced security if it has software that doesnt understand it) 

Well, yes. Isn't that rather key to the issue?  Whereas by simply increasing the block size, SPV wallets don't care (same security and protocol as before) and fully validating wallets can be updated with a very small code change.

  A 1MB client wont even understand the difference between a 1MB and 8MB
  out payment. 

Let's say an old client makes a payment that only gets confirmed in an extension block. The wallet will think the payment is unconfirmed and show that to the user forever, no?

Can you walk through the UX for each case?

  If I am not misremembering, I think you've sided typically
  with the huge block, big data center only end of the spectrum.  

It would be Satoshi, that argued that.

I think there must be a communication issue here somewhere. I'm not sure how this meme has taken hold amongst you guys, as I am the guy who wrote the scalability page back in 2011:

https://en.bitcoin.it/wiki/Scalability


It says:

  The core Bitcoin network can scale to much higher transaction rates than are seen today, assuming that nodes in the network are primarily running on high end servers rather than desktops. 


By "much higher rates" I meant VISA scale and by "high end server" I meant high end by today's standards not tomorrows. There's a big difference between a datacenter and a single server! By definition a single server is not a datacenter, although it would be conventional to place it in one. But even with the most wildly optimistic growth imaginable, I couldn't foresee a time when you needed more than a single machine to keep up with the transaction stream. 


And we're not going to get to VISA scale any time soon: I don't think I've ever argued we will. If it does happen it would presumably be decades away. Again, short of some currently unimagined killer app.


So I don't believe I've ever argued this, and honestly I kinda feel people are putting words in my mouth.


--------------------------------------------------------------------------------
------------------------------------------------------------------------------



--------------------------------------------------------------------------------
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/6ea5f791/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image[2].png
Type: image/png
Size: 53618 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/6ea5f791/attachment.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image[12].png
Type: image/png
Size: 50593 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/6ea5f791/attachment-0001.png>

From adam at cypherspace.org  Mon Jun  1 18:44:22 2015
From: adam at cypherspace.org (Adam Back)
Date: Mon, 1 Jun 2015 19:44:22 +0100
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CANEZrP1DT2VB9kNLCTXExVXwWkPFSar0GhbvhY9Wfz+H1Xx2gw@mail.gmail.com>
References: <BAY403-EAS318194A3B22E4C5D5FE559DC2B60@phx.gbl>
	<CAEz79PqGJ5XSMUbWVQOQ6DjJqbqHmad6t37RUX9Zz=2k4HJK3Q@mail.gmail.com>
	<CANEZrP1DT2VB9kNLCTXExVXwWkPFSar0GhbvhY9Wfz+H1Xx2gw@mail.gmail.com>
Message-ID: <CALqxMTHU+Bcgn8NjRvnO-6o3y457-VvxCAFms6H99=rPD8BuwQ@mail.gmail.com>

So lets rephrase that and say instead more correctly it is the job of
miners (collectively) to be well connected globally - and indeed there
are incentivised to be or they tend to receive blocks at higher
latency and so are at increased risk of orphans.  And miner groups
with good block latency in-group and high hashrate are definitionally
the well connected, so the cost of getting good connectivity to high
hashrate groups is naturally borne by people outside of those groups.
Or thats the incentive anyway.

Adam


On 1 June 2015 at 19:30, Mike Hearn <mike at plan99.net> wrote:
> I don't see this as an issue of sensitivity or not. Miners are businesses
> that sell a service to Bitcoin users - the service of ordering transactions
> chronologically. They aren't charities.
>
> If some miners can't provide the service Bitcoin users need any more, then
> OK, they should not/cannot mine. Lots of miners have come and gone since
> Bitcoin started as different technology generations came and went. That's
> just business.
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From stephencalebmorse at gmail.com  Mon Jun  1 19:02:12 2015
From: stephencalebmorse at gmail.com (Stephen Morse)
Date: Mon, 1 Jun 2015 15:02:12 -0400
Subject: [Bitcoin-development] Why do we need a MAX_BLOCK_SIZE at all?
In-Reply-To: <CANe1mWz_wDAFL2piyLeOxEnMxHCQaTnGLQA6f9jZvLEmbMj6Zw@mail.gmail.com>
References: <CANe1mWz_wDAFL2piyLeOxEnMxHCQaTnGLQA6f9jZvLEmbMj6Zw@mail.gmail.com>
Message-ID: <CABHVRKSm08T7ik4Ozd-WgMTrkT2c0waKDwg6Ma+ZMTWWeevfAw@mail.gmail.com>

This exact question came up on the Bitcoin Stack Exchange once. I gave an
answer here:
http://bitcoin.stackexchange.com/questions/37292/whats-the-purpose-of-a-maximum-block-size/37303#37303

On Mon, Jun 1, 2015 at 2:32 PM, Jim Phillips <jim at ergophobia.org> wrote:

> Ok, I understand at least some of the reason that blocks have to be kept
> to a certain size. I get that blocks which are too big will be hard to
> propagate by relays. Miners will have more trouble uploading the large
> blocks to the network once they've found a hash. We need block size
> constraints to create a fee economy for the miners.
>
> But these all sound to me like issues that affect some, but not others. So
> it seems to me like it ought to be a configurable setting. We've already
> witnessed with last week's stress test that most miners aren't even
> creating 1MB blocks but are still using the software defaults of 730k. If
> there are configurable limits, why does there have to be a hard limit?
> Can't miners just use the configurable limit to decide what size blocks
> they can afford to and are thus willing to create? They could just as
> easily use that to create a fee economy. If the miners with the most
> hashpower are not willing to mine blocks larger than 1 or 2 megs, then they
> are able to slow down confirmations of transactions. It may take several
> blocks before a miner willing to include a particular transaction finds a
> block. This would actually force miners to compete with each other and find
> a block size naturally instead of having it forced on them by the protocol.
> Relays would be able to participate in that process by restricting the
> miners ability to propagate large blocks. You know, like what happens in a
> FREE MARKET economy, without burdensome regulation which can be manipulated
> through politics? Isn't that what's really happening right now? Different
> political factions with different agendas are fighting over how best to
> regulate the Bitcoin protocol.
>
> I know the limit was originally put in place to prevent spamming. But that
> was when we were mining with CPUs and just beginning to see the occasional
> GPU which could take control over the network and maliciously spam large
> blocks. But with ASIC mining now catching up to Moore's Law, that's not
> really an issue anymore. No one malicious entity can really just take over
> the network now without spending more money than it's worth -- and that's
> just going to get truer with time as hashpower continues to grow. And it's
> not like the hard limit really does anything anymore to prevent spamming.
> If a spammer wants to create thousands or millions of transactions, a hard
> limit on the block size isn't going to stop him.. He'll just fill up the
> mempool or UTXO database instead of someone's block database.. And block
> storage media is generally the cheapest storage.. I mean they could be
> written to tape and be just as valid as if they're stored in DRAM. Combine
> that with pruning, and block storage costs are almost a non-issue for
> anyone who isn't running an archival node.
>
> And can't relay nodes just configure a limit on the size of blocks they
> will relay? Sure they'd still need to download a big block occasionally,
> but that's not really that big a deal, and they're under no obligation to
> propagate it.. Even if it's a 2GB block, it'll get downloaded eventually.
> It's only if it gets to the point where the average home connection is too
> slow to keep up with the transaction & block flow that there's any real
> issue there, and that would happen regardless of how big the blocks are. I
> personally would much prefer to see hardware limits act as the bottleneck
> than to introduce an artificial bottleneck into the protocol that has to be
> adjusted regularly. The software and protocol are TECHNICALLY capable of
> scaling to handle the world's entire transaction set. The real issue with
> scaling to this size is limitations on hardware, which are regulated by
> Moore's Law. Why do we need arbitrary soft limits? Why can't we allow
> Bitcoin to grow naturally within the ever increasing limits of our
> hardware? Is it because nobody will ever need more than 640k of RAM?
>
> Am I missing something here? Is there some big reason that I'm overlooking
> why there has to be some hard-coded limit on the block size that affects
> the entire network and creates ongoing issues in the future?
>
> --
>
> *James G. Phillips IV*
> <https://plus.google.com/u/0/113107039501292625391/posts>
>
> *"Don't bunt. Aim out of the ball park. Aim for the company of immortals."
> -- David Ogilvy*
>
>  *This message was created with 100% recycled electrons. Please think
> twice before printing.*
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/1eead1a9/attachment.html>

From btcdrak at gmail.com  Mon Jun  1 19:23:43 2015
From: btcdrak at gmail.com (Btc Drak)
Date: Mon, 1 Jun 2015 20:23:43 +0100
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CAEz79PqGJ5XSMUbWVQOQ6DjJqbqHmad6t37RUX9Zz=2k4HJK3Q@mail.gmail.com>
References: <BAY403-EAS318194A3B22E4C5D5FE559DC2B60@phx.gbl>
	<CAEz79PqGJ5XSMUbWVQOQ6DjJqbqHmad6t37RUX9Zz=2k4HJK3Q@mail.gmail.com>
Message-ID: <CADJgMzs55FpaGdn-30-wcZzs8=b4HZLHJyQaDxre00u404MCLQ@mail.gmail.com>

I did wonder what the post actually meant, I recommend appending /s after
sarcasm so it's clear. Lots gets lost in text. But I agree with you btw his
response was not particularly tactful.

On Mon, Jun 1, 2015 at 7:19 PM, Warren Togami Jr. <wtogami at gmail.com> wrote:

> By reversing Mike's language to the reality of the situation I had hoped
> people would realize how abjectly ignorant and insensitive his statement
> was.  I am sorry to those in the community if they misunderstood my post. I
> thought it was obvious that it was sarcasm where I do not seriously believe
> particular participants should be excluded.
>
> On Mon, Jun 1, 2015 at 3:06 AM, Thy Shizzle <thyshizzle at outlook.com>
> wrote:
>
>>  Doesn't mean you should build something that says "fuck you" to the
>> companies that have invested in farms of ASICS. To say "Oh yea if they
>> can't mine it how we want stuff 'em" is naive. I get decentralisation, but
>> don't dis incentivise mining. If miners are telling you that you're going
>> to hurt them, esp. Miners that combined hold > 50% hashing power, why would
>> you say too bad so sad? Why not just start stripping bitcoin out of
>> adopters wallets? Same thing.
>>  ------------------------------
>> From: Warren Togami Jr. <wtogami at gmail.com>
>> Sent: ?1/?06/?2015 10:30 PM
>> Cc: Bitcoin Dev <bitcoin-development at lists.sourceforge.net>
>> Subject: Re: [Bitcoin-development] Fwd: Block Size Increase Requirements
>>
>>   Whilst it would be nice if miners in *outside* China can carry on
>> forever regardless of their internet situation, nobody has any inherent
>> "right" to mine if they can't do the job - if miners in *outside* China
>> can't get the trivial amounts of bandwidth required through their
>> firewall *TO THE MAJORITY OF THE HASHRATE* and end up being outcompeted
>> then OK, too bad, we'll have to carry on without them.
>>
>>
>> On Mon, Jun 1, 2015 at 12:13 AM, Mike Hearn <mike at plan99.net> wrote:
>>
>>  Whilst it would be nice if miners in China can carry on forever
>> regardless of their internet situation, nobody has any inherent "right" to
>> mine if they can't do the job - if miners in China can't get the trivial
>> amounts of bandwidth required through their firewall and end up being
>> outcompeted then OK, too bad, we'll have to carry on without them.
>>
>>  But I'm not sure why it should be a big deal. They can always run a
>> node on a server in Taiwan and connect the hardware to it via a VPN or so.
>>
>>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/ecb5f0df/attachment.html>

From roy at gnomon.org.uk  Mon Jun  1 20:01:50 2015
From: roy at gnomon.org.uk (Roy Badami)
Date: Mon, 1 Jun 2015 21:01:50 +0100
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <CABsx9T2aEvPs68pQA-KrtaDQFcTTtiB36eqKAcJRkiOFQr6WsA@mail.gmail.com>
References: <CABsx9T2L5bi-c63-KqSifOMeNayUWSPo0_Hx8VjMR_4=kC3ixg@mail.gmail.com>
	<CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
	<CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>
	<CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
	<CAFzgq-ykeMeWF-ndgSm9upHTe8j6ZFYhBQjFs_WSz1oVd29j7g@mail.gmail.com>
	<CAFzgq-x+-s_Nbt4z-C4SWQbHdPr159AmL2JvpP0zg1axM+Vwcw@mail.gmail.com>
	<CABsx9T2aEvPs68pQA-KrtaDQFcTTtiB36eqKAcJRkiOFQr6WsA@mail.gmail.com>
Message-ID: <20150601200149.GE13473@giles.gnomon.org.uk>

> What do other people think?  Would starting at a max of 8 or 4 get
> consensus?  Scaling up a little less than Nielsen's Law of Internet
> Bandwidth predicts for the next 20 years?  (I think predictability is
> REALLY important).

TL;DR: Personally I'm in favour of doing something relatively
uncontroversial (say, a simple increase in the block size to something
in the 4-8GB range) with no further increases without a further hard
fork.

I'm not sure how relevent Nielsen's Law really is.  The only relevent
data points Nielsen has really boil down to a law about how the speed
of his cable modem connection has changed during the period 1998-2014.

Interesting though that is, it's not hugely relevent to
bandwidth-intensive operations like running a full node.  The problem
is he's only looking at the actual speed of his connection in Mbps,
not the amount of data usage in GB/month that his provider permits -
and there's no particular reason to expect that both of those two
figures follow the same curve.  In particular, we're more interested
in the cost of backhaul and IP transit (which is what drives the
GB/month figure) than we are in improvements in DOCSIS technology,
which have little relevence to node operators even on cable modem, and
none to any other kind of full node operator, be it on DSL or in a
datacentre.

More importantly, I also think a scheduled ramp up is an unnecessary
complication.  Why do we need to commit now to future block size
increases perhaps years into the future?  I'd rather schedule an
uncontroversial hard fork now (if such thing is possible) even if
there's a very real expectation - even an assumption - that by the
time the fork has taken place, it's already time to start discussing
the next one.  Any curve or schedule of increases that stretches years
into the future is inevitably going to be controversial - and more so
the further into the future it stretches - simply because the
uncertainties around the Bitcoin landscape are going to be greater the
further ahead we look.

If a simple increase from 1GB to 4GB or 8GB will solve the problem for
now, why not do that?  Yes, it's quite likely we'll have to do it
again, but we'll be able to make that decision in the light of the
2016 or 2017 landscape and can again make a simple, hopefully
uncontroversial, increase in the limit at that time.

So, with the proviso that I think this is all bike shedding, if I had
to pick my favourite colour for the bike shed, it would be to schedule
a hard fork that increases the 1GB limit (to something in the 4-8GB
range) but with no further increases without a further hard fork.

Personally I think trying to pick the best value of the 2035 block
size now is about as foolish as trying to understand now the economics
of Bitcoin mining many halvings hence.

NB: this is not saying that I think we shouldn't go above 8GB in the
relatively foreseeable future; quite the contrary, I strongly expect
that we will.  I just don't see the need to pick the 2020 block size
now when we can easily make a far better informed decision as to the
2020 block size in 2018 or even 2019.

As to knowing what the block size is going to be for the next 20 years
being "REALLY important"?  100% disagree.  I also think it's
impossible, because even if you manage to get consensus on a block
size increase schedule that stretches out to 2035 (and my prediction
is you won't) the reality is that that block size schedule will have
been modified by a future hard fork long before we get to 2035.

What I personally think is REALLY important is that the Bitcoin
community demonstrates an ability to react appropriately to changing
requirements and conditions - and we'll only be able to react to those
conditions when we know what they are!  My expectation is that there
will be several (hopefully _relatively_ uncontroversial) scheduled
hard forks between now and 2035, and each of those will be discussed
in suitable detail before being agreed.  And that's as it should be.

roy



From jim at ergophobia.org  Mon Jun  1 20:02:31 2015
From: jim at ergophobia.org (Jim Phillips)
Date: Mon, 1 Jun 2015 15:02:31 -0500
Subject: [Bitcoin-development] Why do we need a MAX_BLOCK_SIZE at all?
In-Reply-To: <CABHVRKSm08T7ik4Ozd-WgMTrkT2c0waKDwg6Ma+ZMTWWeevfAw@mail.gmail.com>
References: <CANe1mWz_wDAFL2piyLeOxEnMxHCQaTnGLQA6f9jZvLEmbMj6Zw@mail.gmail.com>
	<CABHVRKSm08T7ik4Ozd-WgMTrkT2c0waKDwg6Ma+ZMTWWeevfAw@mail.gmail.com>
Message-ID: <CANe1mWzqo0EdEpuQB6FgaOVTrYGvB6bQT-oz+bm_hoi=3WT4xw@mail.gmail.com>

>
> 1. To Maintaining Consensus
>


There has to be clearly defined rules about which blocks are valid and
> which are not for the network to agree. Obviously no node will accept a
> block that is 10 million terabytes, it would be near impossible to download
> even if it were valid. So where do you set the limit? And what if one nodes
> sets their limit differently than other nodes on the network? If this were
> to happen, the network would no longer be in consensus about which blocks
> were valid when a block was broadcasted that met some nodes' size limits
> and did not meet others.
> Setting a network limit on the maximum block size ensures that everyone is
> in agreement about which blocks are valid and which are not, so that
> consensus is achieved.


It is as impossible to upload a 10 million terabyte block as it is to
download it. But even on a more realistic scale, of say a 2GB block, there
are other factors that prevent a rogue miner from being able to flood the
network using large blocks -- such as the ability to get that block
propagated before it can be orphaned. A simple solution to these large
blocks is for relays to set configurable limits on the size of blocks that
they will relay. If the rogue miner can't get his megablock propagated
before it is orphaned, his attack will not succeed. It doesn't make the
block invalid, just useless as a DoS tool. And over time, relays can raise
the limits they set on block sizes they will propagate according to what
they can handle. As more and more relays accept larger and larger blocks,
the true maximum block size can grow naturally and not require a hard fork.

2. To Avoid (further) Centralization of Pools



Suppose we remove the 1 MB cap entirely. A large pool says to itself, "I
> wish I had a larger percentage of the network hashrate so I could make more
> profit."
>


Then they realize that since there's no block size limit, they can make a
> block that is 4 GB large by filling it with nonsense. They and a few other
> pools have bandwidth large enough to download a block of this size in a
> reasonable time, but a smaller pool does not. The tiny pool is then stuck
> trying to download a block that is too large, and continuing to mine on
> their previous block until they finish downloading the new block. This
> means the small pool is now wasting their time mining blocks that are
> likely never to be accepted even if they were solved, since they wouldn't
> be in the 'longest' chain. Since their hash power is wasted, the original
> pool operator now has effectively forced smaller pools out of the network,
> and simultaneously increased their percentage of the network hashrate.



Yet another issue that can be addressed by allowing relays to restrict
propagation. Relays are just as impacted by large blocks filled with
nonsense as small miners. If a relay downloads a block and sees that it's
full of junk or comes from a miner notorious for producing bad blocks, he
can refuse to relay it. If a bad block doesn't propagate, it can't hurt
anyone. Large miners also typically have to use static IPs. Anonymizing
networks like TOR aren't geared towards handling that type of traffic. They
can't afford to have the reputation of the IPs they release blocks with
tarnished, so why would they risk getting blacklisted by relays?

> 3. To Make Full Nodes Feasible
>


Essentially, larger blocks means fewer people that can download and verify
> the chain, which results fewer people willing to run full nodes and store
> all of the blockchain data.
>


If there were no block size limit, malicious persons could artificially
> bloat the block with nonsense and increase the server costs for everyone
> running a full node, in addition to making it infeasible for people with
> just home computers to even keep up with the network.
> The goal is to find a block size limit with the right tradeoff between
> resource restrictions (so that someone on their home computer can still run
> a full node), and functional requirements (being able to process X number
> of transactions per second). Eventually, transactions will likely be done
> off-chain using micropayment channels, but no such solution currently
> exists.


This same attack could be achieved simply by sending lots of spam
transactions and bloating the UTXO database or the mempool. In fact, given
that block storage is substantially cheaper than UTXO/mempool storage, I'd
be far more concerned with that type of attack. And this particular attack
vector has already been largely mitigated by pruning and could be further
mitigated by allowing relays to decide which blocks they propagate.


--
*James G. Phillips IV*
<https://plus.google.com/u/0/113107039501292625391/posts>
<http://www.linkedin.com/in/ergophobe>

*"Don't bunt. Aim out of the ball park. Aim for the company of immortals."
-- David Ogilvy*

 *This message was created with 100% recycled electrons. Please think twice
before printing.*

On Mon, Jun 1, 2015 at 2:02 PM, Stephen Morse <stephencalebmorse at gmail.com>
wrote:

> This exact question came up on the Bitcoin Stack Exchange once. I gave an
> answer here:
> http://bitcoin.stackexchange.com/questions/37292/whats-the-purpose-of-a-maximum-block-size/37303#37303
>
> On Mon, Jun 1, 2015 at 2:32 PM, Jim Phillips <jim at ergophobia.org> wrote:
>
>> Ok, I understand at least some of the reason that blocks have to be kept
>> to a certain size. I get that blocks which are too big will be hard to
>> propagate by relays. Miners will have more trouble uploading the large
>> blocks to the network once they've found a hash. We need block size
>> constraints to create a fee economy for the miners.
>>
>> But these all sound to me like issues that affect some, but not others.
>> So it seems to me like it ought to be a configurable setting. We've already
>> witnessed with last week's stress test that most miners aren't even
>> creating 1MB blocks but are still using the software defaults of 730k. If
>> there are configurable limits, why does there have to be a hard limit?
>> Can't miners just use the configurable limit to decide what size blocks
>> they can afford to and are thus willing to create? They could just as
>> easily use that to create a fee economy. If the miners with the most
>> hashpower are not willing to mine blocks larger than 1 or 2 megs, then they
>> are able to slow down confirmations of transactions. It may take several
>> blocks before a miner willing to include a particular transaction finds a
>> block. This would actually force miners to compete with each other and find
>> a block size naturally instead of having it forced on them by the protocol.
>> Relays would be able to participate in that process by restricting the
>> miners ability to propagate large blocks. You know, like what happens in a
>> FREE MARKET economy, without burdensome regulation which can be manipulated
>> through politics? Isn't that what's really happening right now? Different
>> political factions with different agendas are fighting over how best to
>> regulate the Bitcoin protocol.
>>
>> I know the limit was originally put in place to prevent spamming. But
>> that was when we were mining with CPUs and just beginning to see the
>> occasional GPU which could take control over the network and maliciously
>> spam large blocks. But with ASIC mining now catching up to Moore's Law,
>> that's not really an issue anymore. No one malicious entity can really just
>> take over the network now without spending more money than it's worth --
>> and that's just going to get truer with time as hashpower continues to
>> grow. And it's not like the hard limit really does anything anymore to
>> prevent spamming. If a spammer wants to create thousands or millions of
>> transactions, a hard limit on the block size isn't going to stop him..
>> He'll just fill up the mempool or UTXO database instead of someone's block
>> database.. And block storage media is generally the cheapest storage.. I
>> mean they could be written to tape and be just as valid as if they're
>> stored in DRAM. Combine that with pruning, and block storage costs are
>> almost a non-issue for anyone who isn't running an archival node.
>>
>> And can't relay nodes just configure a limit on the size of blocks they
>> will relay? Sure they'd still need to download a big block occasionally,
>> but that's not really that big a deal, and they're under no obligation to
>> propagate it.. Even if it's a 2GB block, it'll get downloaded eventually.
>> It's only if it gets to the point where the average home connection is too
>> slow to keep up with the transaction & block flow that there's any real
>> issue there, and that would happen regardless of how big the blocks are. I
>> personally would much prefer to see hardware limits act as the bottleneck
>> than to introduce an artificial bottleneck into the protocol that has to be
>> adjusted regularly. The software and protocol are TECHNICALLY capable of
>> scaling to handle the world's entire transaction set. The real issue with
>> scaling to this size is limitations on hardware, which are regulated by
>> Moore's Law. Why do we need arbitrary soft limits? Why can't we allow
>> Bitcoin to grow naturally within the ever increasing limits of our
>> hardware? Is it because nobody will ever need more than 640k of RAM?
>>
>> Am I missing something here? Is there some big reason that I'm
>> overlooking why there has to be some hard-coded limit on the block size
>> that affects the entire network and creates ongoing issues in the future?
>>
>> --
>>
>> *James G. Phillips IV*
>> <https://plus.google.com/u/0/113107039501292625391/posts>
>>
>> *"Don't bunt. Aim out of the ball park. Aim for the company of
>> immortals." -- David Ogilvy*
>>
>>  *This message was created with 100% recycled electrons. Please think
>> twice before printing.*
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/b87b3b04/attachment.html>

From roy at gnomon.org.uk  Mon Jun  1 20:15:03 2015
From: roy at gnomon.org.uk (Roy Badami)
Date: Mon, 1 Jun 2015 21:15:03 +0100
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <20150601200149.GE13473@giles.gnomon.org.uk>
References: <CAE28kUT61qYxqV0mOqw5Dan=eMiCvnG2SnsAeWzOWTxwLydyeQ@mail.gmail.com>
	<CABsx9T2hfpts5y_M6PdDcxmq9Q2smesJ0Nmp9a9iyPD_MoPC9g@mail.gmail.com>
	<CAE28kUTZV3YsaSCX2d5YwLetnf=f+bOWGrwxLXdZFywTZ=+Pjg@mail.gmail.com>
	<CALC81CNq-GK5q6R4bmgHL5_Ej2+cZrtQMMLVmuhvMxkZokM3hQ@mail.gmail.com>
	<CAE28kUQr+kUPak67tcNQGGscUXtJiD1LiXfjdD8_LMUWyVdR5w@mail.gmail.com>
	<CANEZrP12WAcUOJp5UYg4pfWL7_4WiAHWWZAoaxAb5xB+qAP4Xg@mail.gmail.com>
	<CAFzgq-ykeMeWF-ndgSm9upHTe8j6ZFYhBQjFs_WSz1oVd29j7g@mail.gmail.com>
	<CAFzgq-x+-s_Nbt4z-C4SWQbHdPr159AmL2JvpP0zg1axM+Vwcw@mail.gmail.com>
	<CABsx9T2aEvPs68pQA-KrtaDQFcTTtiB36eqKAcJRkiOFQr6WsA@mail.gmail.com>
	<20150601200149.GE13473@giles.gnomon.org.uk>
Message-ID: <20150601201503.GF13473@giles.gnomon.org.uk>

On Mon, Jun 01, 2015 at 09:01:49PM +0100, Roy Badami wrote:
> > What do other people think?  Would starting at a max of 8 or 4 get
> > consensus?  Scaling up a little less than Nielsen's Law of Internet
> > Bandwidth predicts for the next 20 years?  (I think predictability is
> > REALLY important).
> 
> TL;DR: Personally I'm in favour of doing something relatively
> uncontroversial (say, a simple increase in the block size to something
> in the 4-8GB range) with no further increases without a further hard
> fork.

And the other bit I should have added to my TL;DR:

If we end up spending a significant proportion of the next 20 years
discussing the then _next_ hard fork, that's a *good* thing, not a
*bad* thing.  Hard forks need to become, if not entirely routine, then
certainly less scary.  A sequence of (relatively) uncontroversial hard
forks over time is way more likely to gain consensus than a single
hard fork that attempts to set a schedule for block size increases out
to 2035.  IMHO.

> 
> I'm not sure how relevent Nielsen's Law really is.  The only relevent
> data points Nielsen has really boil down to a law about how the speed
> of his cable modem connection has changed during the period 1998-2014.
> 
> Interesting though that is, it's not hugely relevent to
> bandwidth-intensive operations like running a full node.  The problem
> is he's only looking at the actual speed of his connection in Mbps,
> not the amount of data usage in GB/month that his provider permits -
> and there's no particular reason to expect that both of those two
> figures follow the same curve.  In particular, we're more interested
> in the cost of backhaul and IP transit (which is what drives the
> GB/month figure) than we are in improvements in DOCSIS technology,
> which have little relevence to node operators even on cable modem, and
> none to any other kind of full node operator, be it on DSL or in a
> datacentre.
> 
> More importantly, I also think a scheduled ramp up is an unnecessary
> complication.  Why do we need to commit now to future block size
> increases perhaps years into the future?  I'd rather schedule an
> uncontroversial hard fork now (if such thing is possible) even if
> there's a very real expectation - even an assumption - that by the
> time the fork has taken place, it's already time to start discussing
> the next one.  Any curve or schedule of increases that stretches years
> into the future is inevitably going to be controversial - and more so
> the further into the future it stretches - simply because the
> uncertainties around the Bitcoin landscape are going to be greater the
> further ahead we look.
> 
> If a simple increase from 1GB to 4GB or 8GB will solve the problem for
> now, why not do that?  Yes, it's quite likely we'll have to do it
> again, but we'll be able to make that decision in the light of the
> 2016 or 2017 landscape and can again make a simple, hopefully
> uncontroversial, increase in the limit at that time.
> 
> So, with the proviso that I think this is all bike shedding, if I had
> to pick my favourite colour for the bike shed, it would be to schedule
> a hard fork that increases the 1GB limit (to something in the 4-8GB
> range) but with no further increases without a further hard fork.
> 
> Personally I think trying to pick the best value of the 2035 block
> size now is about as foolish as trying to understand now the economics
> of Bitcoin mining many halvings hence.
> 
> NB: this is not saying that I think we shouldn't go above 8GB in the
> relatively foreseeable future; quite the contrary, I strongly expect
> that we will.  I just don't see the need to pick the 2020 block size
> now when we can easily make a far better informed decision as to the
> 2020 block size in 2018 or even 2019.
> 
> As to knowing what the block size is going to be for the next 20 years
> being "REALLY important"?  100% disagree.  I also think it's
> impossible, because even if you manage to get consensus on a block
> size increase schedule that stretches out to 2035 (and my prediction
> is you won't) the reality is that that block size schedule will have
> been modified by a future hard fork long before we get to 2035.
> 
> What I personally think is REALLY important is that the Bitcoin
> community demonstrates an ability to react appropriately to changing
> requirements and conditions - and we'll only be able to react to those
> conditions when we know what they are!  My expectation is that there
> will be several (hopefully _relatively_ uncontroversial) scheduled
> hard forks between now and 2035, and each of those will be discussed
> in suitable detail before being agreed.  And that's as it should be.
> 
> roy



From raystonn at hotmail.com  Mon Jun  1 20:18:01 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Mon, 1 Jun 2015 13:18:01 -0700
Subject: [Bitcoin-development] We are filling most blocks right now - Let's
	change the max blocksize default
In-Reply-To: <CANe1mWzqo0EdEpuQB6FgaOVTrYGvB6bQT-oz+bm_hoi=3WT4xw@mail.gmail.com>
References: <CANe1mWz_wDAFL2piyLeOxEnMxHCQaTnGLQA6f9jZvLEmbMj6Zw@mail.gmail.com><CABHVRKSm08T7ik4Ozd-WgMTrkT2c0waKDwg6Ma+ZMTWWeevfAw@mail.gmail.com>
	<CANe1mWzqo0EdEpuQB6FgaOVTrYGvB6bQT-oz+bm_hoi=3WT4xw@mail.gmail.com>
Message-ID: <COL131-DS88BB85749A64E3F8698CACDB60@phx.gbl>

We seem to be experiencing bursts of high transaction rate right now.  https://blockchain.info/ shows nearly all blocks full.  We should increase the default max block size to 1MB to give us more space where we see the 731MB blocks, as we don?t want to be limited by those who don?t bother to change the settings from the default, and thus probably aren?t paying attention to this whole discussion.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/85679428/attachment.html>

From thyshizzle at outlook.com  Mon Jun  1 21:32:47 2015
From: thyshizzle at outlook.com (Thy Shizzle)
Date: Tue, 2 Jun 2015 07:32:47 +1000
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
Message-ID: <BAY403-EAS416EB557ABDDCA6FE2FCC7FC2B60@phx.gbl>

Ah sorry, I just thought you were saying doesn't matter which side let 'em burn.

If I were the Chinese and people moved to 20mb MAX size blocks and said stuff you, I'd just start firing out small coinbase only blocks now, if they truly have >50% hashing power and they collaborate chances are they can build a longer chain of just coinbase for themselves then the rest of the network doing big blocks. They don't even have to propagate this chain to you in a hurry right? And then they never have to receive a 20mb block from you because they have a longer chain without 20mb blocks and always ahead of your big blocks. As long as it is the longest chain it is Authority so let you guys transact your coinbase from the blocks you create etc. then whamo along come the chinese and supply a longer chain of just coinbase only blocks which invalidates all your previous transactions and gives them all the coinbase they stamped, while invalidating yours.

But who cares about them right :p
________________________________
From: Warren Togami Jr.<mailto:wtogami at gmail.com>
Sent: ?2/?06/?2015 4:19 AM
Cc: Bitcoin Dev<mailto:bitcoin-development at lists.sourceforge.net>
Subject: Re: [Bitcoin-development] Fwd: Block Size Increase Requirements

By reversing Mike's language to the reality of the situation I had hoped
people would realize how abjectly ignorant and insensitive his statement
was.  I am sorry to those in the community if they misunderstood my post. I
thought it was obvious that it was sarcasm where I do not seriously believe
particular participants should be excluded.

On Mon, Jun 1, 2015 at 3:06 AM, Thy Shizzle <thyshizzle at outlook.com> wrote:

>  Doesn't mean you should build something that says "fuck you" to the
> companies that have invested in farms of ASICS. To say "Oh yea if they
> can't mine it how we want stuff 'em" is naive. I get decentralisation, but
> don't dis incentivise mining. If miners are telling you that you're going
> to hurt them, esp. Miners that combined hold > 50% hashing power, why would
> you say too bad so sad? Why not just start stripping bitcoin out of
> adopters wallets? Same thing.
>  ------------------------------
> From: Warren Togami Jr. <wtogami at gmail.com>
> Sent: ?1/?06/?2015 10:30 PM
> Cc: Bitcoin Dev <bitcoin-development at lists.sourceforge.net>
> Subject: Re: [Bitcoin-development] Fwd: Block Size Increase Requirements
>
>   Whilst it would be nice if miners in *outside* China can carry on
> forever regardless of their internet situation, nobody has any inherent
> "right" to mine if they can't do the job - if miners in *outside* China
> can't get the trivial amounts of bandwidth required through their firewall *TO
> THE MAJORITY OF THE HASHRATE* and end up being outcompeted then OK, too
> bad, we'll have to carry on without them.
>
>
> On Mon, Jun 1, 2015 at 12:13 AM, Mike Hearn <mike at plan99.net> wrote:
>
>  Whilst it would be nice if miners in China can carry on forever
> regardless of their internet situation, nobody has any inherent "right" to
> mine if they can't do the job - if miners in China can't get the trivial
> amounts of bandwidth required through their firewall and end up being
> outcompeted then OK, too bad, we'll have to carry on without them.
>
>  But I'm not sure why it should be a big deal. They can always run a node
> on a server in Taiwan and connect the hardware to it via a VPN or so.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/bc3d7499/attachment.html>
-------------- next part --------------
------------------------------------------------------------------------------
-------------- next part --------------
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development

From pindar.wong at gmail.com  Mon Jun  1 22:13:58 2015
From: pindar.wong at gmail.com (Pindar Wong)
Date: Tue, 2 Jun 2015 06:13:58 +0800
Subject: [Bitcoin-development] Fwd: Block Size Increase Requirements
In-Reply-To: <BAY403-EAS416EB557ABDDCA6FE2FCC7FC2B60@phx.gbl>
References: <BAY403-EAS416EB557ABDDCA6FE2FCC7FC2B60@phx.gbl>
Message-ID: <CAM7BtUqx6Ku+ozzPhk4jh2CPmA=XcuudWqCxF82qciFiwM_h5A@mail.gmail.com>

It would be helpful to hear from the other miners, and perhaps arrange some
testing and telemetry in China with 8 ...  that's even a Chinese lucky
number ;)

p.


On Tue, Jun 2, 2015 at 5:32 AM, Thy Shizzle <thyshizzle at outlook.com> wrote:

>  Ah sorry, I just thought you were saying doesn't matter which side let
> 'em burn.
>
> If I were the Chinese and people moved to 20mb MAX size blocks and said
> stuff you, I'd just start firing out small coinbase only blocks now, if
> they truly have >50% hashing power and they collaborate chances are they
> can build a longer chain of just coinbase for themselves then the rest of
> the network doing big blocks. They don't even have to propagate this chain
> to you in a hurry right? And then they never have to receive a 20mb block
> from you because they have a longer chain without 20mb blocks and always
> ahead of your big blocks. As long as it is the longest chain it is
> Authority so let you guys transact your coinbase from the blocks you create
> etc. then whamo along come the chinese and supply a longer chain of just
> coinbase only blocks which invalidates all your previous transactions and
> gives them all the coinbase they stamped, while invalidating yours.
>
> But who cares about them right :p
>  ------------------------------
> From: Warren Togami Jr. <wtogami at gmail.com>
> Sent: ?2/?06/?2015 4:19 AM
> Cc: Bitcoin Dev <bitcoin-development at lists.sourceforge.net>
> Subject: Re: [Bitcoin-development] Fwd: Block Size Increase Requirements
>
>  By reversing Mike's language to the reality of the situation I had hoped
> people would realize how abjectly ignorant and insensitive his statement
> was.  I am sorry to those in the community if they misunderstood my post. I
> thought it was obvious that it was sarcasm where I do not seriously believe
> particular participants should be excluded.
>
> On Mon, Jun 1, 2015 at 3:06 AM, Thy Shizzle <thyshizzle at outlook.com>
> wrote:
>
>  Doesn't mean you should build something that says "fuck you" to the
> companies that have invested in farms of ASICS. To say "Oh yea if they
> can't mine it how we want stuff 'em" is naive. I get decentralisation, but
> don't dis incentivise mining. If miners are telling you that you're going
> to hurt them, esp. Miners that combined hold > 50% hashing power, why would
> you say too bad so sad? Why not just start stripping bitcoin out of
> adopters wallets? Same thing.
>  ------------------------------
> From: Warren Togami Jr. <wtogami at gmail.com>
> Sent: ?1/?06/?2015 10:30 PM
> Cc: Bitcoin Dev <bitcoin-development at lists.sourceforge.net>
> Subject: Re: [Bitcoin-development] Fwd: Block Size Increase Requirements
>
>    Whilst it would be nice if miners in *outside* China can carry on
> forever regardless of their internet situation, nobody has any inherent
> "right" to mine if they can't do the job - if miners in *outside* China
> can't get the trivial amounts of bandwidth required through their firewall *TO
> THE MAJORITY OF THE HASHRATE* and end up being outcompeted then OK, too
> bad, we'll have to carry on without them.
>
>
> On Mon, Jun 1, 2015 at 12:13 AM, Mike Hearn <mike at plan99.net> wrote:
>
>  Whilst it would be nice if miners in China can carry on forever
> regardless of their internet situation, nobody has any inherent "right" to
> mine if they can't do the job - if miners in China can't get the trivial
> amounts of bandwidth required through their firewall and end up being
> outcompeted then OK, too bad, we'll have to carry on without them.
>
>  But I'm not sure why it should be a big deal. They can always run a node
> on a server in Taiwan and connect the hardware to it via a VPN or so.
>
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/c082d1e3/attachment.html>

From mats at henricson.se  Mon Jun  1 22:22:01 2015
From: mats at henricson.se (Mats Henricson)
Date: Tue, 02 Jun 2015 00:22:01 +0200
Subject: [Bitcoin-development] Meta suggestions for this block size debate
Message-ID: <556CDB09.8050906@henricson.se>

Hi!

My fingers have been itching many times now, this debate
drives me nuts.

I just wish all posters could follow two simple principles:

1. Read up. Yes. All of what has been written. Yes, it will
   take many hours. But if you're rehashing what other
   smarter people have said over and over before, you're
   wasting hundreds of peoples time. Please don't.

2. Be helpful. Suggest alternatives. Just cristizising is
   just destructive. If you want no change, then say so.

Mats



From tomh at thinlink.com  Tue Jun  2 00:42:41 2015
From: tomh at thinlink.com (Tom Harding)
Date: Mon, 01 Jun 2015 17:42:41 -0700
Subject: [Bitcoin-development] soft-fork block size increase (extension
 blocks)
In-Reply-To: <CALqxMTE57mEiG7VuEDSfBDswCeYPWRoa1DEY9iL=P0xLFu8YCA@mail.gmail.com>
References: <CALqxMTHfU5+1ezP-Jnn5obpd621EHwpstseFzTjAvOdhDkfj=g@mail.gmail.com>	<CANEZrP3SGdpSkpi-1eBiUMD74NPnAr7sW=eZ8WCz7PU6FVQaBA@mail.gmail.com>
	<CALqxMTE57mEiG7VuEDSfBDswCeYPWRoa1DEY9iL=P0xLFu8YCA@mail.gmail.com>
Message-ID: <556CFC01.9030309@thinlink.com>

On 6/1/2015 10:21 AM, Adam Back wrote:
> if it stays as is for a year, in a wait and see, reduce spam, see
> fee-pressure take effect as it has before, work on improving improve
> decentralisation metrics, relay latency, and do a blocksize increment
> to kick the can if-and-when it becomes necessary and in the mean-time
> try to do something more long-term ambitious about scale rather than
> volume.

What's your estimate of the lead time required to kick the can,
if-and-when it becomes necessary?

The other time-series I've seen all plot an average block size.  That's
misleading, because there's a distribution of block sizes.  If you bin
by retarget interval and plot every single block, you get this

http://i.imgur.com/5Gfh9CW.png

The max block size has clearly been in play for 8 months already.





From mark at friedenbach.org  Tue Jun  2 01:49:33 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Mon, 1 Jun 2015 18:49:33 -0700
Subject: [Bitcoin-development] [BIP draft] Consensus-enforced transaction
 replacement signalled via sequence numbers
Message-ID: <CAOG=w-uufDPkQSEi1K_L82j4OXObGmESnfYyxi1z99fcBCotcg@mail.gmail.com>

I have written a reference implementation and BIP draft for a soft-fork
change to the consensus-enforced behaviour of sequence numbers for the
purpose of supporting transaction replacement via per-input relative
lock-times. This proposal was previously discussed on the mailing list in
the following thread:

http://sourceforge.net/p/bitcoin/mailman/message/34146752/

In short summary, this proposal seeks to enable safe transaction
replacement by re-purposing the nSequence field of a transaction input to
be a consensus-enforced relative lock-time.

The advantages of this approach is that it makes use of the full range of
the 32-bit sequence number which until now has rarely been used for
anything other than a boolean control over absolute nLockTime, and it does
so in a way that is semantically compatible with the originally envisioned
use of sequence numbers for fast mempool transaction replacement.

The disadvantages are that external constraints often prevent the full
range of sequence numbers from being used when interpreted as a relative
lock-time, and re-purposing nSequence as a relative lock-time precludes its
use in other contexts. The latter point has been partially addressed by
having the relative lock-time semantics be enforced only if the
most-significant bit of nSequence is set. This preserves 31 bits for
alternative use when relative lock-times are not required.

The BIP draft can be found at the following gist:

https://gist.github.com/maaku/be15629fe64618b14f5a

The reference implementation is available at the following git repository:

https://github.com/maaku/bitcoin/tree/sequencenumbers

I request that the BIP editor please assign a BIP number for this work.

Sincerely,
Mark Friedenbach
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/14698846/attachment.html>

From gappleto97 at gmail.com  Tue Jun  2 03:02:15 2015
From: gappleto97 at gmail.com (gabe appleton)
Date: Mon, 1 Jun 2015 23:02:15 -0400
Subject: [Bitcoin-development] Meta suggestions for this block size
	debate
In-Reply-To: <556CDB09.8050906@henricson.se>
References: <556CDB09.8050906@henricson.se>
Message-ID: <CANJO25KUvYNzGLDjr=d_gUSKe0xAju+34W9B6jmcSjQvGXR=2g@mail.gmail.com>

Also, can we try to get a wiki page for the debate? That way we could
condense the information as much as possible. I'll be willing to assist if
the page gets approval.
On Jun 1, 2015 6:41 PM, "Mats Henricson" <mats at henricson.se> wrote:

> Hi!
>
> My fingers have been itching many times now, this debate
> drives me nuts.
>
> I just wish all posters could follow two simple principles:
>
> 1. Read up. Yes. All of what has been written. Yes, it will
>    take many hours. But if you're rehashing what other
>    smarter people have said over and over before, you're
>    wasting hundreds of peoples time. Please don't.
>
> 2. Be helpful. Suggest alternatives. Just cristizising is
>    just destructive. If you want no change, then say so.
>
> Mats
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/5a5d0607/attachment.html>

From eth3rs at gmail.com  Tue Jun  2 03:32:58 2015
From: eth3rs at gmail.com (Ethan Heilman)
Date: Mon, 1 Jun 2015 23:32:58 -0400
Subject: [Bitcoin-development] Meta suggestions for this block size
	debate
In-Reply-To: <CANJO25KUvYNzGLDjr=d_gUSKe0xAju+34W9B6jmcSjQvGXR=2g@mail.gmail.com>
References: <556CDB09.8050906@henricson.se>
	<CANJO25KUvYNzGLDjr=d_gUSKe0xAju+34W9B6jmcSjQvGXR=2g@mail.gmail.com>
Message-ID: <CAEM=y+Xf9b1p-KB-PKzjtMirM8_WMbpMZuQyGyDv+6GM=0O9hA@mail.gmail.com>

I second this, I don't have time to read the large number of emails
generated every day from the block size debate. A summary of the various
positions and arguments would be extremely helpful.

On Mon, Jun 1, 2015 at 11:02 PM, gabe appleton <gappleto97 at gmail.com> wrote:

> Also, can we try to get a wiki page for the debate? That way we could
> condense the information as much as possible. I'll be willing to assist if
> the page gets approval.
> On Jun 1, 2015 6:41 PM, "Mats Henricson" <mats at henricson.se> wrote:
>
>> Hi!
>>
>> My fingers have been itching many times now, this debate
>> drives me nuts.
>>
>> I just wish all posters could follow two simple principles:
>>
>> 1. Read up. Yes. All of what has been written. Yes, it will
>>    take many hours. But if you're rehashing what other
>>    smarter people have said over and over before, you're
>>    wasting hundreds of peoples time. Please don't.
>>
>> 2. Be helpful. Suggest alternatives. Just cristizising is
>>    just destructive. If you want no change, then say so.
>>
>> Mats
>>
>>
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/223152c1/attachment.html>

From stephencalebmorse at gmail.com  Tue Jun  2 03:45:46 2015
From: stephencalebmorse at gmail.com (Stephen Morse)
Date: Mon, 1 Jun 2015 23:45:46 -0400
Subject: [Bitcoin-development] [BIP draft] Consensus-enforced
 transaction replacement signalled via sequence numbers
In-Reply-To: <CAOG=w-uufDPkQSEi1K_L82j4OXObGmESnfYyxi1z99fcBCotcg@mail.gmail.com>
References: <CAOG=w-uufDPkQSEi1K_L82j4OXObGmESnfYyxi1z99fcBCotcg@mail.gmail.com>
Message-ID: <CABHVRKQD4YPt0NA8VnXW4VYx0fmCgSHUYq-73F2esHZqX-FUxw@mail.gmail.com>

Hi Mark,

Overall, I like this idea in every way except for one: unless I am missing
something, we may still need an OP_RCLTV even with this being implemented.

In use cases such as micropayment channels where the funds are locked up by
multiple parties, the enforcement of the relative locktime can be done by
the first-signing party. So, while your solution would probably work in
cases like this, where multiple signing parties are involved, there may be
other, seen or unforeseen, use cases that require putting the relative
locktime right into the spending contract (the scriptPubKey itself). When
there is only one signer, there's nothing that enforces using an nSequence
and nVersion=2 that would prevent spending the output until a certain time.

I hope this is received as constructive criticism, I do think this is an
innovative idea. In my view, though, it seems to be less fully-featured
than just repurposing an OP_NOP to create OP_RCLTV. The benefits are
obviously that it saves transaction space by repurposing unused space, and
would likely work for most cases where an OP_RCLTV would be needed.

Best,
Stephen

On Mon, Jun 1, 2015 at 9:49 PM, Mark Friedenbach <mark at friedenbach.org>
wrote:

> I have written a reference implementation and BIP draft for a soft-fork
> change to the consensus-enforced behaviour of sequence numbers for the
> purpose of supporting transaction replacement via per-input relative
> lock-times. This proposal was previously discussed on the mailing list in
> the following thread:
>
> http://sourceforge.net/p/bitcoin/mailman/message/34146752/
>
> In short summary, this proposal seeks to enable safe transaction
> replacement by re-purposing the nSequence field of a transaction input to
> be a consensus-enforced relative lock-time.
>
> The advantages of this approach is that it makes use of the full range of
> the 32-bit sequence number which until now has rarely been used for
> anything other than a boolean control over absolute nLockTime, and it does
> so in a way that is semantically compatible with the originally envisioned
> use of sequence numbers for fast mempool transaction replacement.
>
> The disadvantages are that external constraints often prevent the full
> range of sequence numbers from being used when interpreted as a relative
> lock-time, and re-purposing nSequence as a relative lock-time precludes its
> use in other contexts. The latter point has been partially addressed by
> having the relative lock-time semantics be enforced only if the
> most-significant bit of nSequence is set. This preserves 31 bits for
> alternative use when relative lock-times are not required.
>
> The BIP draft can be found at the following gist:
>
> https://gist.github.com/maaku/be15629fe64618b14f5a
>
> The reference implementation is available at the following git repository:
>
> https://github.com/maaku/bitcoin/tree/sequencenumbers
>
> I request that the BIP editor please assign a BIP number for this work.
>
> Sincerely,
> Mark Friedenbach
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/70c32838/attachment.html>

From gappleto97 at gmail.com  Tue Jun  2 03:52:14 2015
From: gappleto97 at gmail.com (gabe appleton)
Date: Mon, 1 Jun 2015 23:52:14 -0400
Subject: [Bitcoin-development] Meta suggestions for this block size
	debate
In-Reply-To: <CAEM=y+Xf9b1p-KB-PKzjtMirM8_WMbpMZuQyGyDv+6GM=0O9hA@mail.gmail.com>
References: <556CDB09.8050906@henricson.se>
	<CANJO25KUvYNzGLDjr=d_gUSKe0xAju+34W9B6jmcSjQvGXR=2g@mail.gmail.com>
	<CAEM=y+Xf9b1p-KB-PKzjtMirM8_WMbpMZuQyGyDv+6GM=0O9hA@mail.gmail.com>
Message-ID: <CANJO25K+tG3uH+GH8i4PBjdk8KyJZDAunfwMmWedOJyZOk7wNw@mail.gmail.com>

I don't have permission to create a page. If someone else does, I'll
happily get a framework started.

On Mon, Jun 1, 2015 at 11:32 PM, Ethan Heilman <eth3rs at gmail.com> wrote:

> I second this, I don't have time to read the large number of emails
> generated every day from the block size debate. A summary of the various
> positions and arguments would be extremely helpful.
>
> On Mon, Jun 1, 2015 at 11:02 PM, gabe appleton <gappleto97 at gmail.com>
> wrote:
>
>> Also, can we try to get a wiki page for the debate? That way we could
>> condense the information as much as possible. I'll be willing to assist if
>> the page gets approval.
>> On Jun 1, 2015 6:41 PM, "Mats Henricson" <mats at henricson.se> wrote:
>>
>>> Hi!
>>>
>>> My fingers have been itching many times now, this debate
>>> drives me nuts.
>>>
>>> I just wish all posters could follow two simple principles:
>>>
>>> 1. Read up. Yes. All of what has been written. Yes, it will
>>>    take many hours. But if you're rehashing what other
>>>    smarter people have said over and over before, you're
>>>    wasting hundreds of peoples time. Please don't.
>>>
>>> 2. Be helpful. Suggest alternatives. Just cristizising is
>>>    just destructive. If you want no change, then say so.
>>>
>>> Mats
>>>
>>>
>>> ------------------------------------------------------------------------------
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/c00b9834/attachment.html>

From mark at friedenbach.org  Tue Jun  2 04:16:03 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Mon, 1 Jun 2015 21:16:03 -0700
Subject: [Bitcoin-development] [BIP draft] Consensus-enforced
 transaction replacement signalled via sequence numbers
In-Reply-To: <CABHVRKQD4YPt0NA8VnXW4VYx0fmCgSHUYq-73F2esHZqX-FUxw@mail.gmail.com>
References: <CAOG=w-uufDPkQSEi1K_L82j4OXObGmESnfYyxi1z99fcBCotcg@mail.gmail.com>
	<CABHVRKQD4YPt0NA8VnXW4VYx0fmCgSHUYq-73F2esHZqX-FUxw@mail.gmail.com>
Message-ID: <CAOG=w-tDdJTkkqGaEEpDZ6pX0kXT7f2wvoN_cEpd6+MVnu1CdQ@mail.gmail.com>

You are correct! I am maintaining a 'checksequenceverify' branch in my git
repository as well, an OP_RCLTV using sequence numbers:

https://github.com/maaku/bitcoin/tree/checksequenceverify

Most of the interesting use cases for relative lock-time require an RCLTV
opcode. What is interesting about this architecture is that it possible to
cleanly separate the relative lock-time (sequence numbers) from the RCLTV
opcode (OP_CHECKSEQUENCEVERIFY) both in concept and in implementation. Like
CLTV, the CSV opcode only checks transaction data and requires no
contextual knowledge about block headers, a weakness of the other RCLTV
proposals that violate the clean separation between libscript and
libconsensus. In a similar way, this BIP proposal only touches the
transaction validation logic without any impact to script.

I would like to propose an additional BIP covering the CHECKSEQUENCEVERIFY
opcode and its enabling applications. But, well, one thing at a time.

On Mon, Jun 1, 2015 at 8:45 PM, Stephen Morse <stephencalebmorse at gmail.com>
wrote:

> Hi Mark,
>
> Overall, I like this idea in every way except for one: unless I am missing
> something, we may still need an OP_RCLTV even with this being
> implemented.
>
> In use cases such as micropayment channels where the funds are locked up
> by multiple parties, the enforcement of the relative locktime can be done
> by the first-signing party. So, while your solution would probably work in
> cases like this, where multiple signing parties are involved, there may be
> other, seen or unforeseen, use cases that require putting the relative
> locktime right into the spending contract (the scriptPubKey itself). When
> there is only one signer, there's nothing that enforces using an nSequence
> and nVersion=2 that would prevent spending the output until a certain time.
>
> I hope this is received as constructive criticism, I do think this is an
> innovative idea. In my view, though, it seems to be less fully-featured
> than just repurposing an OP_NOP to create OP_RCLTV. The benefits are
> obviously that it saves transaction space by repurposing unused space, and
> would likely work for most cases where an OP_RCLTV would be needed.
>
> Best,
> Stephen
>
> On Mon, Jun 1, 2015 at 9:49 PM, Mark Friedenbach <mark at friedenbach.org>
> wrote:
>
>> I have written a reference implementation and BIP draft for a soft-fork
>> change to the consensus-enforced behaviour of sequence numbers for the
>> purpose of supporting transaction replacement via per-input relative
>> lock-times. This proposal was previously discussed on the mailing list in
>> the following thread:
>>
>> http://sourceforge.net/p/bitcoin/mailman/message/34146752/
>>
>> In short summary, this proposal seeks to enable safe transaction
>> replacement by re-purposing the nSequence field of a transaction input to
>> be a consensus-enforced relative lock-time.
>>
>> The advantages of this approach is that it makes use of the full range of
>> the 32-bit sequence number which until now has rarely been used for
>> anything other than a boolean control over absolute nLockTime, and it does
>> so in a way that is semantically compatible with the originally envisioned
>> use of sequence numbers for fast mempool transaction replacement.
>>
>> The disadvantages are that external constraints often prevent the full
>> range of sequence numbers from being used when interpreted as a relative
>> lock-time, and re-purposing nSequence as a relative lock-time precludes its
>> use in other contexts. The latter point has been partially addressed by
>> having the relative lock-time semantics be enforced only if the
>> most-significant bit of nSequence is set. This preserves 31 bits for
>> alternative use when relative lock-times are not required.
>>
>> The BIP draft can be found at the following gist:
>>
>> https://gist.github.com/maaku/be15629fe64618b14f5a
>>
>> The reference implementation is available at the following git repository:
>>
>> https://github.com/maaku/bitcoin/tree/sequencenumbers
>>
>> I request that the BIP editor please assign a BIP number for this work.
>>
>> Sincerely,
>> Mark Friedenbach
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/b2e1f6dc/attachment.html>

From stephencalebmorse at gmail.com  Tue Jun  2 04:34:34 2015
From: stephencalebmorse at gmail.com (Stephen Morse)
Date: Tue, 2 Jun 2015 00:34:34 -0400
Subject: [Bitcoin-development] [BIP draft] Consensus-enforced
 transaction replacement signalled via sequence numbers
In-Reply-To: <CAOG=w-tDdJTkkqGaEEpDZ6pX0kXT7f2wvoN_cEpd6+MVnu1CdQ@mail.gmail.com>
References: <CAOG=w-uufDPkQSEi1K_L82j4OXObGmESnfYyxi1z99fcBCotcg@mail.gmail.com>
	<CABHVRKQD4YPt0NA8VnXW4VYx0fmCgSHUYq-73F2esHZqX-FUxw@mail.gmail.com>
	<CAOG=w-tDdJTkkqGaEEpDZ6pX0kXT7f2wvoN_cEpd6+MVnu1CdQ@mail.gmail.com>
Message-ID: <CABHVRKSXdtJvp_FY=OHQ2ZAGWTRMP4XdSzUeOij__47aQPSVag@mail.gmail.com>

I see, so OP_SEQUENCEVERIFY will have a value pushed on the stack right
before, and then check that the input spending the prevout has nSequence
corresponds to at least the sequence specified by the stack value. Good
idea! Keeps the script code from depending on external chain specific data,
which is nice.

Hopefully we can repurpose one of the OP_NOPs for CHECKLOCKTIMEVERIFY and
one for OP_CHECKSEQUENCEVERIFY. Very complementary.

Best,
Stephen


On Tue, Jun 2, 2015 at 12:16 AM, Mark Friedenbach <mark at friedenbach.org>
wrote:

> You are correct! I am maintaining a 'checksequenceverify' branch in my git
> repository as well, an OP_RCLTV using sequence numbers:
>
> https://github.com/maaku/bitcoin/tree/checksequenceverify
>
> Most of the interesting use cases for relative lock-time require an RCLTV
> opcode. What is interesting about this architecture is that it possible to
> cleanly separate the relative lock-time (sequence numbers) from the RCLTV
> opcode (OP_CHECKSEQUENCEVERIFY) both in concept and in implementation. Like
> CLTV, the CSV opcode only checks transaction data and requires no
> contextual knowledge about block headers, a weakness of the other RCLTV
> proposals that violate the clean separation between libscript and
> libconsensus. In a similar way, this BIP proposal only touches the
> transaction validation logic without any impact to script.
>
> I would like to propose an additional BIP covering the CHECKSEQUENCEVERIFY
> opcode and its enabling applications. But, well, one thing at a time.
>
> On Mon, Jun 1, 2015 at 8:45 PM, Stephen Morse <stephencalebmorse at gmail.com
> > wrote:
>
>> Hi Mark,
>>
>> Overall, I like this idea in every way except for one: unless I am
>> missing something, we may still need an OP_RCLTV even with this being
>> implemented.
>>
>> In use cases such as micropayment channels where the funds are locked up
>> by multiple parties, the enforcement of the relative locktime can be done
>> by the first-signing party. So, while your solution would probably work in
>> cases like this, where multiple signing parties are involved, there may be
>> other, seen or unforeseen, use cases that require putting the relative
>> locktime right into the spending contract (the scriptPubKey itself).
>> When there is only one signer, there's nothing that enforces using an
>> nSequence and nVersion=2 that would prevent spending the output until a
>> certain time.
>>
>> I hope this is received as constructive criticism, I do think this is an
>> innovative idea. In my view, though, it seems to be less fully-featured
>> than just repurposing an OP_NOP to create OP_RCLTV. The benefits are
>> obviously that it saves transaction space by repurposing unused space, and
>> would likely work for most cases where an OP_RCLTV would be needed.
>>
>> Best,
>> Stephen
>>
>> On Mon, Jun 1, 2015 at 9:49 PM, Mark Friedenbach <mark at friedenbach.org>
>> wrote:
>>
>>> I have written a reference implementation and BIP draft for a soft-fork
>>> change to the consensus-enforced behaviour of sequence numbers for the
>>> purpose of supporting transaction replacement via per-input relative
>>> lock-times. This proposal was previously discussed on the mailing list in
>>> the following thread:
>>>
>>> http://sourceforge.net/p/bitcoin/mailman/message/34146752/
>>>
>>> In short summary, this proposal seeks to enable safe transaction
>>> replacement by re-purposing the nSequence field of a transaction input to
>>> be a consensus-enforced relative lock-time.
>>>
>>> The advantages of this approach is that it makes use of the full range
>>> of the 32-bit sequence number which until now has rarely been used for
>>> anything other than a boolean control over absolute nLockTime, and it does
>>> so in a way that is semantically compatible with the originally envisioned
>>> use of sequence numbers for fast mempool transaction replacement.
>>>
>>> The disadvantages are that external constraints often prevent the full
>>> range of sequence numbers from being used when interpreted as a relative
>>> lock-time, and re-purposing nSequence as a relative lock-time precludes its
>>> use in other contexts. The latter point has been partially addressed by
>>> having the relative lock-time semantics be enforced only if the
>>> most-significant bit of nSequence is set. This preserves 31 bits for
>>> alternative use when relative lock-times are not required.
>>>
>>> The BIP draft can be found at the following gist:
>>>
>>> https://gist.github.com/maaku/be15629fe64618b14f5a
>>>
>>> The reference implementation is available at the following git
>>> repository:
>>>
>>> https://github.com/maaku/bitcoin/tree/sequencenumbers
>>>
>>> I request that the BIP editor please assign a BIP number for this work.
>>>
>>> Sincerely,
>>> Mark Friedenbach
>>>
>>>
>>> ------------------------------------------------------------------------------
>>>
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/de17029c/attachment.html>

From eric at voskuil.org  Tue Jun  2 00:09:10 2015
From: eric at voskuil.org (Eric Voskuil)
Date: Mon, 01 Jun 2015 17:09:10 -0700
Subject: [Bitcoin-development] Proposed alternatives to the 20MB step
In-Reply-To: <CANEZrP1HttM5rRqTchMrsbhfTbASHm3j0q=vjDaTjeYQHHBr9Q@mail.gmail.com>
References: <CAFnMCfd8N_2nvspXF+Tro_SsofUUrMy4_QG9tRbPm1pUWtUCXQ@mail.gmail.com>
	<CANEZrP1HttM5rRqTchMrsbhfTbASHm3j0q=vjDaTjeYQHHBr9Q@mail.gmail.com>
Message-ID: <556CF426.3030204@voskuil.org>

On 06/01/2015 08:55 AM, Mike Hearn wrote:
>> Decentralization is the core of Bitcoin's security model and thus
that's what gives Bitcoin its value.
> No. Usage is what gives Bitcoin value.

Nonsense.

Visa, Dollar, Euro, Yuan, Peso have usage.

The value in Bitcoin is *despite* it's far lesser usage.

Yes, the price is a function of demand, but demand is a function of
utility. Despite orders of magnitude less usage than state currencies,
Bitcoin has utility. This premium *only* exists due to its lack of
centralized control. I would not work full time, or at all, on Bitcoin
if it was not for decentralization; nor would I hold any of it. I doubt
anyone would show an interest in Bitcoin if it was not decentralized. If
it centralized even you would be forced to find something else to do,
because Bitcoin "usage" would drop to zero.

> It's kind of maddening that I have to point this out. Decentralisation
is a means to an end.

No, it was/is the primary objective. Paypal had already been done. If
anything is maddening it's that you of all people can't see this. When
people talk about the core innovation of Bitcoin, it's a conversation
about Byzantine Generals, not wicked growth hacking.

> in April 2009 and it was perfectly decentralised [...] every wallet
was a full node and every computer was capable of mining. So if you
believe what you just wrote [...] Bitcoin's value has gone down every
day since

An obvious non sequitur. By way of example, if 10 of 10 participants are
capable of mining it is not more decentralized than if 1,000 in 100,000
are doing so. 1,000 *people* in control vs. 10 is two orders of
magnitude more decentralized. The *percentage* of the community that
mines is totally irrelevant, it's the absolute number of (independent)
people that matters.

I'm not making a statement on block size, just trying to help ensure
that ill-considered ideas, like this inversion of the core value
proposition, stay on the margins.

e




-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 473 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/d5eed166/attachment.sig>

From mike at plan99.net  Tue Jun  2 11:03:55 2015
From: mike at plan99.net (Mike Hearn)
Date: Tue, 2 Jun 2015 13:03:55 +0200
Subject: [Bitcoin-development] Proposed alternatives to the 20MB step
In-Reply-To: <556CF426.3030204@voskuil.org>
References: <CAFnMCfd8N_2nvspXF+Tro_SsofUUrMy4_QG9tRbPm1pUWtUCXQ@mail.gmail.com>
	<CANEZrP1HttM5rRqTchMrsbhfTbASHm3j0q=vjDaTjeYQHHBr9Q@mail.gmail.com>
	<556CF426.3030204@voskuil.org>
Message-ID: <CANEZrP1TgAxd70UnnTac8-h2huUxCJD3VsqxWdgv2mpwbU_mkQ@mail.gmail.com>

>
>  1,000 *people* in control vs. 10 is two orders of

magnitude more decentralized.


Yet Bitcoin has got worse by all these metrics: there was a time before
mining pools when there were ~thousands of people mining with their local
CPUs and GPUs. Now the number of full nodes that matter for block selection
number in the dozens, and all the other miners just follow their blocks
blindly.

If you really believe that decentralisation is, itself, the end, then why
not go use an "ASIC resistant" alt coin with no SPV or web wallets which
resembles Bitcoin at the end of 2009? That'd be a whole lot more
decentralised than what you have now.

The *percentage* of the community that mines is totally irrelevant, it's
> the absolute number of (independent) people that matters.
>

So usage does matter, then? You'd rather have a coin that has power
concentrated in a far smaller elite, proportionally, but has overall more
usage? If there are say, 5000 full nodes today, and in ten years there are
6000, and they all run in vast datacenters and are owned by large
companies, you'll feel like Bitcoin is more decentralised than ever?
(n.b. I do not think this situation will ever happen, it's just an example).

That's not the vibe I'm getting from most people on this list. What I'm
seeing is complaints about how in the good old days back when Core was the
only wallet and ASICs hadn't been made,  there were lots of nodes and lots
of people mining solo and since then it's all been downhill and woe is us
... and let's throw on the brakes in case it gets worse.

Not for the first time, these discussions remind me very strongly of the
old desktop Linux/free software debates.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/0a67d49c/attachment.html>

From cipher.anthem at gmx.com  Tue Jun  2 11:19:48 2015
From: cipher.anthem at gmx.com (cipher anthem)
Date: Tue, 2 Jun 2015 13:19:48 +0200
Subject: [Bitcoin-development]
 =?utf-8?q?Fwd=3A_Block_Size_Increase_Requir?=
 =?utf-8?b?ZW1lbnRz4oCP?=
Message-ID: <trinity-cecc9151-6544-43e0-a958-ac9e4d7699ff-1433243988016@3capp-mailcom-bs06>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/e400a186/attachment.html>

From mike at plan99.net  Tue Jun  2 11:26:54 2015
From: mike at plan99.net (Mike Hearn)
Date: Tue, 2 Jun 2015 13:26:54 +0200
Subject: [Bitcoin-development]
	=?utf-8?q?Fwd=3A_Block_Size_Increase_Requir?=
	=?utf-8?b?ZW1lbnRz4oCP?=
In-Reply-To: <trinity-cecc9151-6544-43e0-a958-ac9e4d7699ff-1433243988016@3capp-mailcom-bs06>
References: <trinity-cecc9151-6544-43e0-a958-ac9e4d7699ff-1433243988016@3capp-mailcom-bs06>
Message-ID: <CANEZrP3W97oqqHLMu2i3y6ogp5YPCJ_vhNHTcQ9zN8f4mLGqAg@mail.gmail.com>

>
> But the majority of the hashrate can now perform double spends on your
> chain! They can send bitcoins to exchanges, sell it, extract the money and
> build a new longer chain to get their bitcoins back.
>
Obviously if the majority of the mining hash rate is doing double spending
attacks on exchanges then the Bitcoin experiment is resolved as a failure
and it will become abandoned. This has been known since day one: it's in
the white paper. The basic assumption behind Bitcoin is that only a
minority of actors are dishonest - if the majority are then Satoshi's
scheme does not work.

So you are not stating anything new here.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/385eabc4/attachment.html>

From nathan.cook at gmail.com  Tue Jun  2 11:43:29 2015
From: nathan.cook at gmail.com (Nathan Cook)
Date: Tue, 2 Jun 2015 14:43:29 +0300
Subject: [Bitcoin-development]
	=?utf-8?q?Fwd=3A_Block_Size_Increase_Requir?=
	=?utf-8?b?ZW1lbnRz4oCP?=
In-Reply-To: <CANEZrP3W97oqqHLMu2i3y6ogp5YPCJ_vhNHTcQ9zN8f4mLGqAg@mail.gmail.com>
References: <trinity-cecc9151-6544-43e0-a958-ac9e4d7699ff-1433243988016@3capp-mailcom-bs06>
	<CANEZrP3W97oqqHLMu2i3y6ogp5YPCJ_vhNHTcQ9zN8f4mLGqAg@mail.gmail.com>
Message-ID: <CAGNXQMR-Huhjai-hKvu_4jgTLzdmXqmNCz0U-wyn3hoM_NmN_Q@mail.gmail.com>

On 2 June 2015 at 14:26, Mike Hearn <mike at plan99.net> wrote:

> But the majority of the hashrate can now perform double spends on your
>> chain! They can send bitcoins to exchanges, sell it, extract the money and
>> build a new longer chain to get their bitcoins back.
>>
> Obviously if the majority of the mining hash rate is doing double spending
> attacks on exchanges then the Bitcoin experiment is resolved as a failure
> and it will become abandoned. This has been known since day one: it's in
> the white paper. The basic assumption behind Bitcoin is that only a
> minority of actors are dishonest - if the majority are then Satoshi's
> scheme does not work.
>
> So you are not stating anything new here.
>

It's both consistent and credible for an agent to commit to honesty on a
chain that it openly supports and dishonesty on a chain that it openly
opposes. (Moral? Legal? Perhaps not.) That said, majority hashpower doesn't
need to be dishonest to stop a change to large blocks. It just needs to
refuse to build on blocks that it doesn't like. The minority isn't going to
mine blocks larger than 1MB if it knows they'll be orphaned.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/727c8409/attachment.html>

From stephencalebmorse at gmail.com  Tue Jun  2 12:52:58 2015
From: stephencalebmorse at gmail.com (Stephen)
Date: Tue, 2 Jun 2015 08:52:58 -0400
Subject: [Bitcoin-development] [BIP draft] Consensus-enforced
	transaction replacement signalled via sequence numbers
In-Reply-To: <CAOG=w-tDdJTkkqGaEEpDZ6pX0kXT7f2wvoN_cEpd6+MVnu1CdQ@mail.gmail.com>
References: <CAOG=w-uufDPkQSEi1K_L82j4OXObGmESnfYyxi1z99fcBCotcg@mail.gmail.com>
	<CABHVRKQD4YPt0NA8VnXW4VYx0fmCgSHUYq-73F2esHZqX-FUxw@mail.gmail.com>
	<CAOG=w-tDdJTkkqGaEEpDZ6pX0kXT7f2wvoN_cEpd6+MVnu1CdQ@mail.gmail.com>
Message-ID: <E67A3D18-EFB0-4156-98B7-082793D2D871@gmail.com>

Do you think it would be useful to have an inverted version of both CSV and CLTV? To verify if an output is spent before a specific time. CLTV and CSV could be implemented by taking two stack arguments, an integer for the comparison and TRUE/FALSE. 

Now that I think about this more, the problem is that, for example, just having a lock time of less than some value doesn't actually mean it has to be spent before that script value, so this might not work. Likely any implementations of such a feature would have to provide the script execution environment with access to information that it doesn't have now, which is what we are trying to avoid. 

Best,
Stephen



> On Jun 2, 2015, at 12:16 AM, Mark Friedenbach <mark at friedenbach.org> wrote:
> 
> You are correct! I am maintaining a 'checksequenceverify' branch in my git repository as well, an OP_RCLTV using sequence numbers:
> 
> https://github.com/maaku/bitcoin/tree/checksequenceverify
> 
> Most of the interesting use cases for relative lock-time require an RCLTV opcode. What is interesting about this architecture is that it possible to cleanly separate the relative lock-time (sequence numbers) from the RCLTV opcode (OP_CHECKSEQUENCEVERIFY) both in concept and in implementation. Like CLTV, the CSV opcode only checks transaction data and requires no contextual knowledge about block headers, a weakness of the other RCLTV proposals that violate the clean separation between libscript and libconsensus. In a similar way, this BIP proposal only touches the transaction validation logic without any impact to script.
> 
> I would like to propose an additional BIP covering the CHECKSEQUENCEVERIFY opcode and its enabling applications. But, well, one thing at a time.
> 
>> On Mon, Jun 1, 2015 at 8:45 PM, Stephen Morse <stephencalebmorse at gmail.com> wrote:
>> Hi Mark,
>> 
>> Overall, I like this idea in every way except for one: unless I am missing something, we may still need an OP_RCLTV even with this being implemented. 
>> 
>> In use cases such as micropayment channels where the funds are locked up by multiple parties, the enforcement of the relative locktime can be done by the first-signing party. So, while your solution would probably work in cases like this, where multiple signing parties are involved, there may be other, seen or unforeseen, use cases that require putting the relative locktime right into the spending contract (the scriptPubKey itself). When there is only one signer, there's nothing that enforces using an nSequence and nVersion=2 that would prevent spending the output until a certain time. 
>> 
>> I hope this is received as constructive criticism, I do think this is an innovative idea. In my view, though, it seems to be less fully-featured than just repurposing an OP_NOP to create OP_RCLTV. The benefits are obviously that it saves transaction space by repurposing unused space, and would likely work for most cases where an OP_RCLTV would be needed.
>> 
>> Best,
>> Stephen
>> 
>>> On Mon, Jun 1, 2015 at 9:49 PM, Mark Friedenbach <mark at friedenbach.org> wrote:
>>> I have written a reference implementation and BIP draft for a soft-fork change to the consensus-enforced behaviour of sequence numbers for the purpose of supporting transaction replacement via per-input relative lock-times. This proposal was previously discussed on the mailing list in the following thread:
>>> 
>>> http://sourceforge.net/p/bitcoin/mailman/message/34146752/
>>> 
>>> In short summary, this proposal seeks to enable safe transaction replacement by re-purposing the nSequence field of a transaction input to be a consensus-enforced relative lock-time.
>>> 
>>> The advantages of this approach is that it makes use of the full range of the 32-bit sequence number which until now has rarely been used for anything other than a boolean control over absolute nLockTime, and it does so in a way that is semantically compatible with the originally envisioned use of sequence numbers for fast mempool transaction replacement.
>>> 
>>> The disadvantages are that external constraints often prevent the full range of sequence numbers from being used when interpreted as a relative lock-time, and re-purposing nSequence as a relative lock-time precludes its use in other contexts. The latter point has been partially addressed by having the relative lock-time semantics be enforced only if the most-significant bit of nSequence is set. This preserves 31 bits for alternative use when relative lock-times are not required.
>>> 
>>> The BIP draft can be found at the following gist:
>>> 
>>> https://gist.github.com/maaku/be15629fe64618b14f5a
>>> 
>>> The reference implementation is available at the following git repository:
>>> 
>>> https://github.com/maaku/bitcoin/tree/sequencenumbers
>>> 
>>> I request that the BIP editor please assign a BIP number for this work.
>>> 
>>> Sincerely,
>>> Mark Friedenbach
>>> 
>>> ------------------------------------------------------------------------------
>>> 
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/7b87e165/attachment.html>

From adam at cypherspace.org  Tue Jun  2 13:11:23 2015
From: adam at cypherspace.org (Adam Back)
Date: Tue, 2 Jun 2015 14:11:23 +0100
Subject: [Bitcoin-development] [BIP draft] Consensus-enforced
 transaction replacement signalled via sequence numbers
In-Reply-To: <E67A3D18-EFB0-4156-98B7-082793D2D871@gmail.com>
References: <CAOG=w-uufDPkQSEi1K_L82j4OXObGmESnfYyxi1z99fcBCotcg@mail.gmail.com>
	<CABHVRKQD4YPt0NA8VnXW4VYx0fmCgSHUYq-73F2esHZqX-FUxw@mail.gmail.com>
	<CAOG=w-tDdJTkkqGaEEpDZ6pX0kXT7f2wvoN_cEpd6+MVnu1CdQ@mail.gmail.com>
	<E67A3D18-EFB0-4156-98B7-082793D2D871@gmail.com>
Message-ID: <CALqxMTFkWOfWXOnVAnZESkVWHtbZLc=T_sQDoTofr66mcb6_gQ@mail.gmail.com>

That would also introduce the anomaly of a script that was once valid
becoming later invalid, when nothing varies other than time.  That is
not super compatible with the current model of reprocessing
transactions in later blocks if the block they were first in gets
reorged.

(Not a huge flexibility loss as you can implement "not after" by
making it the previous holders responsibility to spend a "not before"
back to themselves.)

Adam

On 2 June 2015 at 13:52, Stephen <stephencalebmorse at gmail.com> wrote:
> Do you think it would be useful to have an inverted version of both CSV and
> CLTV? To verify if an output is spent before a specific time. CLTV and CSV
> could be implemented by taking two stack arguments, an integer for the
> comparison and TRUE/FALSE.
>
> Now that I think about this more, the problem is that, for example, just
> having a lock time of less than some value doesn't actually mean it has to
> be spent before that script value, so this might not work. Likely any
> implementations of such a feature would have to provide the script execution
> environment with access to information that it doesn't have now, which is
> what we are trying to avoid.
>
> Best,
> Stephen
>
>
>
> On Jun 2, 2015, at 12:16 AM, Mark Friedenbach <mark at friedenbach.org> wrote:
>
> You are correct! I am maintaining a 'checksequenceverify' branch in my git
> repository as well, an OP_RCLTV using sequence numbers:
>
> https://github.com/maaku/bitcoin/tree/checksequenceverify
>
> Most of the interesting use cases for relative lock-time require an RCLTV
> opcode. What is interesting about this architecture is that it possible to
> cleanly separate the relative lock-time (sequence numbers) from the RCLTV
> opcode (OP_CHECKSEQUENCEVERIFY) both in concept and in implementation. Like
> CLTV, the CSV opcode only checks transaction data and requires no contextual
> knowledge about block headers, a weakness of the other RCLTV proposals that
> violate the clean separation between libscript and libconsensus. In a
> similar way, this BIP proposal only touches the transaction validation logic
> without any impact to script.
>
> I would like to propose an additional BIP covering the CHECKSEQUENCEVERIFY
> opcode and its enabling applications. But, well, one thing at a time.
>
> On Mon, Jun 1, 2015 at 8:45 PM, Stephen Morse <stephencalebmorse at gmail.com>
> wrote:
>>
>> Hi Mark,
>>
>> Overall, I like this idea in every way except for one: unless I am missing
>> something, we may still need an OP_RCLTV even with this being implemented.
>>
>> In use cases such as micropayment channels where the funds are locked up
>> by multiple parties, the enforcement of the relative locktime can be done by
>> the first-signing party. So, while your solution would probably work in
>> cases like this, where multiple signing parties are involved, there may be
>> other, seen or unforeseen, use cases that require putting the relative
>> locktime right into the spending contract (the scriptPubKey itself). When
>> there is only one signer, there's nothing that enforces using an nSequence
>> and nVersion=2 that would prevent spending the output until a certain time.
>>
>> I hope this is received as constructive criticism, I do think this is an
>> innovative idea. In my view, though, it seems to be less fully-featured than
>> just repurposing an OP_NOP to create OP_RCLTV. The benefits are obviously
>> that it saves transaction space by repurposing unused space, and would
>> likely work for most cases where an OP_RCLTV would be needed.
>>
>> Best,
>> Stephen
>>
>> On Mon, Jun 1, 2015 at 9:49 PM, Mark Friedenbach <mark at friedenbach.org>
>> wrote:
>>>
>>> I have written a reference implementation and BIP draft for a soft-fork
>>> change to the consensus-enforced behaviour of sequence numbers for the
>>> purpose of supporting transaction replacement via per-input relative
>>> lock-times. This proposal was previously discussed on the mailing list in
>>> the following thread:
>>>
>>> http://sourceforge.net/p/bitcoin/mailman/message/34146752/
>>>
>>> In short summary, this proposal seeks to enable safe transaction
>>> replacement by re-purposing the nSequence field of a transaction input to be
>>> a consensus-enforced relative lock-time.
>>>
>>> The advantages of this approach is that it makes use of the full range of
>>> the 32-bit sequence number which until now has rarely been used for anything
>>> other than a boolean control over absolute nLockTime, and it does so in a
>>> way that is semantically compatible with the originally envisioned use of
>>> sequence numbers for fast mempool transaction replacement.
>>>
>>> The disadvantages are that external constraints often prevent the full
>>> range of sequence numbers from being used when interpreted as a relative
>>> lock-time, and re-purposing nSequence as a relative lock-time precludes its
>>> use in other contexts. The latter point has been partially addressed by
>>> having the relative lock-time semantics be enforced only if the
>>> most-significant bit of nSequence is set. This preserves 31 bits for
>>> alternative use when relative lock-times are not required.
>>>
>>> The BIP draft can be found at the following gist:
>>>
>>> https://gist.github.com/maaku/be15629fe64618b14f5a
>>>
>>> The reference implementation is available at the following git
>>> repository:
>>>
>>> https://github.com/maaku/bitcoin/tree/sequencenumbers
>>>
>>> I request that the BIP editor please assign a BIP number for this work.
>>>
>>> Sincerely,
>>> Mark Friedenbach
>>>
>>>
>>> ------------------------------------------------------------------------------
>>>
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From stephencalebmorse at gmail.com  Tue Jun  2 14:10:30 2015
From: stephencalebmorse at gmail.com (Stephen Morse)
Date: Tue, 2 Jun 2015 10:10:30 -0400
Subject: [Bitcoin-development] [BIP draft] Consensus-enforced
 transaction replacement signalled via sequence numbers
In-Reply-To: <CALqxMTFkWOfWXOnVAnZESkVWHtbZLc=T_sQDoTofr66mcb6_gQ@mail.gmail.com>
References: <CAOG=w-uufDPkQSEi1K_L82j4OXObGmESnfYyxi1z99fcBCotcg@mail.gmail.com>
	<CABHVRKQD4YPt0NA8VnXW4VYx0fmCgSHUYq-73F2esHZqX-FUxw@mail.gmail.com>
	<CAOG=w-tDdJTkkqGaEEpDZ6pX0kXT7f2wvoN_cEpd6+MVnu1CdQ@mail.gmail.com>
	<E67A3D18-EFB0-4156-98B7-082793D2D871@gmail.com>
	<CALqxMTFkWOfWXOnVAnZESkVWHtbZLc=T_sQDoTofr66mcb6_gQ@mail.gmail.com>
Message-ID: <CABHVRKRympU4LAeD7xG9bX3PvWMNcJaa1RMff+fukn0wSRr81A@mail.gmail.com>

>
> That would also introduce the anomaly of a script that was once valid
> becoming later invalid, when nothing varies other than time.  That is
> not super compatible with the current model of reprocessing
> transactions in later blocks if the block they were first in gets
> reorged.
>

Very good point.


>
> (Not a huge flexibility loss as you can implement "not after" by
> making it the previous holders responsibility to spend a "not before"
> back to themselves.)
>

Do you mean something like the below?

scriptPubKey:
  IF
    {A's pub} CHECKSIGVERIFY
  ELSE
    {curr_height + 100} CLTV {B's pub} CHECKSIGVERIFY

This ensures that Alice has to spend the output in the next 100 blocks or
risk it being taken from her (she just has to put an OP_TRUE on the end of
her scriptSig). So, it seems we can forget about an inverted CLTV/CSV,
great!

Best,
Stephen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/16a5e2ae/attachment.html>

From mike at plan99.net  Tue Jun  2 14:20:47 2015
From: mike at plan99.net (Mike Hearn)
Date: Tue, 2 Jun 2015 16:20:47 +0200
Subject: [Bitcoin-development] DevCore London
In-Reply-To: <CANEZrP1MqzgfVrRHDjwizWCjnJqmMyRXJWDPAhv-rYU06sYw0g@mail.gmail.com>
References: <CANEZrP1MqzgfVrRHDjwizWCjnJqmMyRXJWDPAhv-rYU06sYw0g@mail.gmail.com>
Message-ID: <CANEZrP3Edn7o+Ti1KQsRrEwistXBmRxNmJ4qAxqmVax8U_pTZg@mail.gmail.com>

Hi there,

I got some requests to re-record the tutorial talk I gave at DevCore 2015,
"How to build a timestamping smart contracts app in 30 minutes". It's now
available here:

    https://bitcoinj.github.io/document-timestamp-app

It covers:

   - How to customise the wallet-template app for this use case
   - How to construct a complex multi-stage SPV proof of block chain
   inclusion
   - How to save and then verify proof files
   - How to bind transaction confidence state to the user interface
   - How to create a Mac DMG bundle with a custom icon

I hope someone finds it enjoyable!



On Thu, Apr 9, 2015 at 10:23 PM, Mike Hearn <mike at plan99.net> wrote:

> Next week on April 15th Gavin, Wladimir, Corey and myself will be at
> DevCore London:
>
>    https://everyeventgives.com/event/devcore-london
>
> If you're in town why not come along?
>
> It's often the case that conferences can be just talking shops, without
> much meat for real developers. So in the afternoon I'll be doing two things:
>
>    1. Running a hackathon/workshop type event. The theme is contracts,
>    but we can hack on whatever you all feel like.
>
>    2. My "talk" will actually be a live coding event. Writing contracts
>    apps has become a lot easier in the past few years, and to prove it to you
>    I will write a decentralised cross-platform Tor supporting document
>    timestamping app that uses OP_RETURN outputs and has a nice GUI ..... in 30
>    minutes, on stage.
>
>    Don't think it can be done? Turn up and see for yourself.
>
> See you there!
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/4a459d44/attachment.html>

From tier.nolan at gmail.com  Tue Jun  2 15:42:45 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Tue, 2 Jun 2015 16:42:45 +0100
Subject: [Bitcoin-development] [BIP draft] Consensus-enforced
 transaction replacement signalled via sequence numbers
In-Reply-To: <CABHVRKSXdtJvp_FY=OHQ2ZAGWTRMP4XdSzUeOij__47aQPSVag@mail.gmail.com>
References: <CAOG=w-uufDPkQSEi1K_L82j4OXObGmESnfYyxi1z99fcBCotcg@mail.gmail.com>
	<CABHVRKQD4YPt0NA8VnXW4VYx0fmCgSHUYq-73F2esHZqX-FUxw@mail.gmail.com>
	<CAOG=w-tDdJTkkqGaEEpDZ6pX0kXT7f2wvoN_cEpd6+MVnu1CdQ@mail.gmail.com>
	<CABHVRKSXdtJvp_FY=OHQ2ZAGWTRMP4XdSzUeOij__47aQPSVag@mail.gmail.com>
Message-ID: <CAE-z3OU9yDMV7GhFgZECON47wDL8aV6Ri8kaxOEtP4BF4TmD1A@mail.gmail.com>

I am glad to see the transaction version number increase.  The commit
doesn't update the default transaction version though.  The node would
still produce version 1 transactions.

Does the reference client already produce transactions with final sequence
numbers?  If so, then they will be valid version 2 transactions.  If it
sets the sequence to all zeros, then it won't trigger the new code either.
I think simply bumping the default version number to 2 would be safe.

For the timestamp locktime, median block time would be better than raw
block time.  Median time is the median timestamp of the previous 11
blocks.  This reduces the incentive to mess with the timestamp.  Median
time is earlier than block time, but since things are relative, it should
balance out.

Miners have around 2 hours worth of flexibility when setting the
timestamps, so it may not be that big a deal.



On Tue, Jun 2, 2015 at 5:34 AM, Stephen Morse <stephencalebmorse at gmail.com>
wrote:

> I see, so OP_SEQUENCEVERIFY will have a value pushed on the stack right
> before, and then check that the input spending the prevout has nSequence
> corresponds to at least the sequence specified by the stack value. Good
> idea! Keeps the script code from depending on external chain specific data,
> which is nice.
>
> Hopefully we can repurpose one of the OP_NOPs for CHECKLOCKTIMEVERIFY and
> one for OP_CHECKSEQUENCEVERIFY. Very complementary.
>
> Best,
> Stephen
>
>
> On Tue, Jun 2, 2015 at 12:16 AM, Mark Friedenbach <mark at friedenbach.org>
> wrote:
>
>> You are correct! I am maintaining a 'checksequenceverify' branch in my
>> git repository as well, an OP_RCLTV using sequence numbers:
>>
>> https://github.com/maaku/bitcoin/tree/checksequenceverify
>>
>> Most of the interesting use cases for relative lock-time require an RCLTV
>> opcode. What is interesting about this architecture is that it possible to
>> cleanly separate the relative lock-time (sequence numbers) from the RCLTV
>> opcode (OP_CHECKSEQUENCEVERIFY) both in concept and in implementation. Like
>> CLTV, the CSV opcode only checks transaction data and requires no
>> contextual knowledge about block headers, a weakness of the other RCLTV
>> proposals that violate the clean separation between libscript and
>> libconsensus. In a similar way, this BIP proposal only touches the
>> transaction validation logic without any impact to script.
>>
>> I would like to propose an additional BIP covering the
>> CHECKSEQUENCEVERIFY opcode and its enabling applications. But, well, one
>> thing at a time.
>>
>> On Mon, Jun 1, 2015 at 8:45 PM, Stephen Morse <
>> stephencalebmorse at gmail.com> wrote:
>>
>>> Hi Mark,
>>>
>>> Overall, I like this idea in every way except for one: unless I am
>>> missing something, we may still need an OP_RCLTV even with this being
>>> implemented.
>>>
>>> In use cases such as micropayment channels where the funds are locked up
>>> by multiple parties, the enforcement of the relative locktime can be done
>>> by the first-signing party. So, while your solution would probably work in
>>> cases like this, where multiple signing parties are involved, there may be
>>> other, seen or unforeseen, use cases that require putting the relative
>>> locktime right into the spending contract (the scriptPubKey itself).
>>> When there is only one signer, there's nothing that enforces using an
>>> nSequence and nVersion=2 that would prevent spending the output until a
>>> certain time.
>>>
>>> I hope this is received as constructive criticism, I do think this is an
>>> innovative idea. In my view, though, it seems to be less fully-featured
>>> than just repurposing an OP_NOP to create OP_RCLTV. The benefits are
>>> obviously that it saves transaction space by repurposing unused space, and
>>> would likely work for most cases where an OP_RCLTV would be needed.
>>>
>>> Best,
>>> Stephen
>>>
>>> On Mon, Jun 1, 2015 at 9:49 PM, Mark Friedenbach <mark at friedenbach.org>
>>> wrote:
>>>
>>>> I have written a reference implementation and BIP draft for a soft-fork
>>>> change to the consensus-enforced behaviour of sequence numbers for the
>>>> purpose of supporting transaction replacement via per-input relative
>>>> lock-times. This proposal was previously discussed on the mailing list in
>>>> the following thread:
>>>>
>>>> http://sourceforge.net/p/bitcoin/mailman/message/34146752/
>>>>
>>>> In short summary, this proposal seeks to enable safe transaction
>>>> replacement by re-purposing the nSequence field of a transaction input to
>>>> be a consensus-enforced relative lock-time.
>>>>
>>>> The advantages of this approach is that it makes use of the full range
>>>> of the 32-bit sequence number which until now has rarely been used for
>>>> anything other than a boolean control over absolute nLockTime, and it does
>>>> so in a way that is semantically compatible with the originally envisioned
>>>> use of sequence numbers for fast mempool transaction replacement.
>>>>
>>>> The disadvantages are that external constraints often prevent the full
>>>> range of sequence numbers from being used when interpreted as a relative
>>>> lock-time, and re-purposing nSequence as a relative lock-time precludes its
>>>> use in other contexts. The latter point has been partially addressed by
>>>> having the relative lock-time semantics be enforced only if the
>>>> most-significant bit of nSequence is set. This preserves 31 bits for
>>>> alternative use when relative lock-times are not required.
>>>>
>>>> The BIP draft can be found at the following gist:
>>>>
>>>> https://gist.github.com/maaku/be15629fe64618b14f5a
>>>>
>>>> The reference implementation is available at the following git
>>>> repository:
>>>>
>>>> https://github.com/maaku/bitcoin/tree/sequencenumbers
>>>>
>>>> I request that the BIP editor please assign a BIP number for this work.
>>>>
>>>> Sincerely,
>>>> Mark Friedenbach
>>>>
>>>>
>>>> ------------------------------------------------------------------------------
>>>>
>>>> _______________________________________________
>>>> Bitcoin-development mailing list
>>>> Bitcoin-development at lists.sourceforge.net
>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>
>>>>
>>>
>>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/b83d303f/attachment.html>

From mark at friedenbach.org  Tue Jun  2 15:44:53 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Tue, 2 Jun 2015 08:44:53 -0700
Subject: [Bitcoin-development] [BIP draft] Consensus-enforced
 transaction replacement signalled via sequence numbers
In-Reply-To: <CALqxMTFkWOfWXOnVAnZESkVWHtbZLc=T_sQDoTofr66mcb6_gQ@mail.gmail.com>
References: <CAOG=w-uufDPkQSEi1K_L82j4OXObGmESnfYyxi1z99fcBCotcg@mail.gmail.com>
	<CABHVRKQD4YPt0NA8VnXW4VYx0fmCgSHUYq-73F2esHZqX-FUxw@mail.gmail.com>
	<CAOG=w-tDdJTkkqGaEEpDZ6pX0kXT7f2wvoN_cEpd6+MVnu1CdQ@mail.gmail.com>
	<E67A3D18-EFB0-4156-98B7-082793D2D871@gmail.com>
	<CALqxMTFkWOfWXOnVAnZESkVWHtbZLc=T_sQDoTofr66mcb6_gQ@mail.gmail.com>
Message-ID: <CAOG=w-v-twsRcfT=nOQA0y5MYQ7bN+W_NVXYkuWSb0kyh4rnvg@mail.gmail.com>

Oh it is far worse than that. There is nothing preventing those coins from
being spent somewhere else, so actually an expiry would enable coin theft
in a reorg -- you make your spends expire right after they hit the chain
the first time, and then if there is a reorg the spend and subsequent
transactions are invalidated. This is an exploitable means of theft.

For this reason it is very important to male sure that once a transaction
makes it on the chain, it cannot be invalidated by means of a reorg.
On Jun 2, 2015 6:11 AM, "Adam Back" <adam at cypherspace.org> wrote:

> That would also introduce the anomaly of a script that was once valid
> becoming later invalid, when nothing varies other than time.  That is
> not super compatible with the current model of reprocessing
> transactions in later blocks if the block they were first in gets
> reorged.
>
> (Not a huge flexibility loss as you can implement "not after" by
> making it the previous holders responsibility to spend a "not before"
> back to themselves.)
>
> Adam
>
> On 2 June 2015 at 13:52, Stephen <stephencalebmorse at gmail.com> wrote:
> > Do you think it would be useful to have an inverted version of both CSV
> and
> > CLTV? To verify if an output is spent before a specific time. CLTV and
> CSV
> > could be implemented by taking two stack arguments, an integer for the
> > comparison and TRUE/FALSE.
> >
> > Now that I think about this more, the problem is that, for example, just
> > having a lock time of less than some value doesn't actually mean it has
> to
> > be spent before that script value, so this might not work. Likely any
> > implementations of such a feature would have to provide the script
> execution
> > environment with access to information that it doesn't have now, which is
> > what we are trying to avoid.
> >
> > Best,
> > Stephen
> >
> >
> >
> > On Jun 2, 2015, at 12:16 AM, Mark Friedenbach <mark at friedenbach.org>
> wrote:
> >
> > You are correct! I am maintaining a 'checksequenceverify' branch in my
> git
> > repository as well, an OP_RCLTV using sequence numbers:
> >
> > https://github.com/maaku/bitcoin/tree/checksequenceverify
> >
> > Most of the interesting use cases for relative lock-time require an RCLTV
> > opcode. What is interesting about this architecture is that it possible
> to
> > cleanly separate the relative lock-time (sequence numbers) from the RCLTV
> > opcode (OP_CHECKSEQUENCEVERIFY) both in concept and in implementation.
> Like
> > CLTV, the CSV opcode only checks transaction data and requires no
> contextual
> > knowledge about block headers, a weakness of the other RCLTV proposals
> that
> > violate the clean separation between libscript and libconsensus. In a
> > similar way, this BIP proposal only touches the transaction validation
> logic
> > without any impact to script.
> >
> > I would like to propose an additional BIP covering the
> CHECKSEQUENCEVERIFY
> > opcode and its enabling applications. But, well, one thing at a time.
> >
> > On Mon, Jun 1, 2015 at 8:45 PM, Stephen Morse <
> stephencalebmorse at gmail.com>
> > wrote:
> >>
> >> Hi Mark,
> >>
> >> Overall, I like this idea in every way except for one: unless I am
> missing
> >> something, we may still need an OP_RCLTV even with this being
> implemented.
> >>
> >> In use cases such as micropayment channels where the funds are locked up
> >> by multiple parties, the enforcement of the relative locktime can be
> done by
> >> the first-signing party. So, while your solution would probably work in
> >> cases like this, where multiple signing parties are involved, there may
> be
> >> other, seen or unforeseen, use cases that require putting the relative
> >> locktime right into the spending contract (the scriptPubKey itself).
> When
> >> there is only one signer, there's nothing that enforces using an
> nSequence
> >> and nVersion=2 that would prevent spending the output until a certain
> time.
> >>
> >> I hope this is received as constructive criticism, I do think this is an
> >> innovative idea. In my view, though, it seems to be less fully-featured
> than
> >> just repurposing an OP_NOP to create OP_RCLTV. The benefits are
> obviously
> >> that it saves transaction space by repurposing unused space, and would
> >> likely work for most cases where an OP_RCLTV would be needed.
> >>
> >> Best,
> >> Stephen
> >>
> >> On Mon, Jun 1, 2015 at 9:49 PM, Mark Friedenbach <mark at friedenbach.org>
> >> wrote:
> >>>
> >>> I have written a reference implementation and BIP draft for a soft-fork
> >>> change to the consensus-enforced behaviour of sequence numbers for the
> >>> purpose of supporting transaction replacement via per-input relative
> >>> lock-times. This proposal was previously discussed on the mailing list
> in
> >>> the following thread:
> >>>
> >>> http://sourceforge.net/p/bitcoin/mailman/message/34146752/
> >>>
> >>> In short summary, this proposal seeks to enable safe transaction
> >>> replacement by re-purposing the nSequence field of a transaction input
> to be
> >>> a consensus-enforced relative lock-time.
> >>>
> >>> The advantages of this approach is that it makes use of the full range
> of
> >>> the 32-bit sequence number which until now has rarely been used for
> anything
> >>> other than a boolean control over absolute nLockTime, and it does so
> in a
> >>> way that is semantically compatible with the originally envisioned use
> of
> >>> sequence numbers for fast mempool transaction replacement.
> >>>
> >>> The disadvantages are that external constraints often prevent the full
> >>> range of sequence numbers from being used when interpreted as a
> relative
> >>> lock-time, and re-purposing nSequence as a relative lock-time
> precludes its
> >>> use in other contexts. The latter point has been partially addressed by
> >>> having the relative lock-time semantics be enforced only if the
> >>> most-significant bit of nSequence is set. This preserves 31 bits for
> >>> alternative use when relative lock-times are not required.
> >>>
> >>> The BIP draft can be found at the following gist:
> >>>
> >>> https://gist.github.com/maaku/be15629fe64618b14f5a
> >>>
> >>> The reference implementation is available at the following git
> >>> repository:
> >>>
> >>> https://github.com/maaku/bitcoin/tree/sequencenumbers
> >>>
> >>> I request that the BIP editor please assign a BIP number for this work.
> >>>
> >>> Sincerely,
> >>> Mark Friedenbach
> >>>
> >>>
> >>>
> ------------------------------------------------------------------------------
> >>>
> >>> _______________________________________________
> >>> Bitcoin-development mailing list
> >>> Bitcoin-development at lists.sourceforge.net
> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >>>
> >>
> >
> >
> >
> ------------------------------------------------------------------------------
> >
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/989508d0/attachment.html>

From eric at voskuil.org  Tue Jun  2 16:18:56 2015
From: eric at voskuil.org (Eric Voskuil)
Date: Tue, 02 Jun 2015 09:18:56 -0700
Subject: [Bitcoin-development] Proposed alternatives to the 20MB step
In-Reply-To: <CANEZrP1TgAxd70UnnTac8-h2huUxCJD3VsqxWdgv2mpwbU_mkQ@mail.gmail.com>
References: <CAFnMCfd8N_2nvspXF+Tro_SsofUUrMy4_QG9tRbPm1pUWtUCXQ@mail.gmail.com>	<CANEZrP1HttM5rRqTchMrsbhfTbASHm3j0q=vjDaTjeYQHHBr9Q@mail.gmail.com>	<556CF426.3030204@voskuil.org>
	<CANEZrP1TgAxd70UnnTac8-h2huUxCJD3VsqxWdgv2mpwbU_mkQ@mail.gmail.com>
Message-ID: <556DD770.6060406@voskuil.org>

On 06/02/2015 04:03 AM, Mike Hearn wrote:
>
>      1,000 *people* in control vs. 10 is two orders of
>
>     magnitude more decentralized. 
>
>
> Yet Bitcoin has got worse by all these metrics: there was a time
> before mining pools when there were ~thousands of people mining with
> their local CPUs and GPUs. Now the number of full nodes that matter
> for block selection number in the dozens, and all the other miners
> just follow their blocks blindly.

A mining pool is not a person, a full node is not a miner, and
cooperation is not control.

http://bravenewcoin.com/news/number-of-bitcoin-miners-far-higher-than-popular-estimates/

The entire Bitcoin ecosystem cooperates, that is what consensus means.
Establishing proof of that cooperation is the purpose of Bitcoin.

Decentralization is about keeping control out of the hands of the state
(any entity that would substitute violence for consensus). Nobody has
the power to compel the cooperation of individual miners in a pool. When
state power is applied to a pool operator the miners (people) retain
their vote.

e

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/228e8429/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 473 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/228e8429/attachment.sig>

From bip at mattwhitlock.name  Tue Jun  2 21:26:27 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Tue, 02 Jun 2015 17:26:27 -0400
Subject: [Bitcoin-development] Max Block Size: Simple Voting Procedure
In-Reply-To: <CABHVRKSFV_dXZeLnhBLfRK=wrBFsRH5kFBZqwECh-LyCkwrmtQ@mail.gmail.com>
References: <CABHVRKSFV_dXZeLnhBLfRK=wrBFsRH5kFBZqwECh-LyCkwrmtQ@mail.gmail.com>
Message-ID: <2342620.MypLiFWdOh@crushinator>

Why do it as an OP_RETURN output? It could be a simple token in the coinbase input script, similar to how support for P2SH was signaled among miners. And why should there be an explicit token for voting for the status quo? Simply omitting any indication should be an implicit vote for the status quo. A miner would only need to insert an indicator into their block if they wished for a larger block.

That said, proposals of this type have been discussed before, and the objection is always that miners would want larger blocks than the rest of the network could bear. Unless you want Bitcoin to become centralized in the hands of a few large mining pools, you shouldn't hand control over the block size limits to the miners.


On Sunday, 31 May 2015, at 3:04 pm, Stephen Morse wrote:
> This is likely very similar to other proposals, but I want to bring voting
> procedures back into the discussion. The goal here is to create a voting
> procedure that is as simple as possible to increase the block size limit.
> 
> Votes are aggregated over each 2016 block period. Each coinbase transaction
> may have an output at tx.vout[0] with OP_RETURN data in it of the format:
> 
>   OP_RETURN {OP_1 or OP_2}
> 
> OP_2 means the miner votes to increase the block size limit. OP_1 means the
> miner votes to not increase the block size limit. *Not including such a
> vote is equivalent to voting to NOT increase the block size. *I first
> thought that not voting should mean that you vote with your block size, but
> then decided that it would be too gameable by others broadcasting
> transactions to affect your block size.
> 
> If in a 2016 block round there were more than 1008 blocks that voted to
> increase the block size limit, then the max block size increases by 500 kb.
> The votes can start when there is a supermajority of miners signaling
> support for the voting procedure.
> 
> A few important properties of this simple voting:
> 
>    - It's not gameable via broadcasting transactions (assuming miners don't
>    set their votes to be automatic, based on the size of recent blocks).
>    - Miners don't have to bloat their blocks artificially just to place a
>    vote for larger block sizes, and, similarly, don't need to exclude
>    transactions even when they think the block size does not need to be raised.
>    - The chain up until the point that this goes into effect may be
>    interpreted as just lacking votes to increase the block size.
> 
> We can't trust all miners, but we have to trust that >50% of them are
> honest for the system to work. This system makes it so that altering the
> maximum block size requires >50% of miners (hash power) to vote to increase
> the consensus-limit.
> 
> Thanks for your time. I think this is an important time in Bitcoin's
> history. I'm not married to this proposal, but I think it would work. I
> think a lot of the proposals mentioned on this mailing list would work. I
> think it's time we just pick one and run with it.
> 
> Please let me know your thoughts. I will start working on a pull request if
> this receives any support from miners/core devs/community members, unless
> someone with more experience volunteers.
> 
> Best,
> Stephen



From stephencalebmorse at gmail.com  Wed Jun  3 00:30:58 2015
From: stephencalebmorse at gmail.com (Stephen Morse)
Date: Tue, 2 Jun 2015 20:30:58 -0400
Subject: [Bitcoin-development] Max Block Size: Simple Voting Procedure
In-Reply-To: <2342620.MypLiFWdOh@crushinator>
References: <CABHVRKSFV_dXZeLnhBLfRK=wrBFsRH5kFBZqwECh-LyCkwrmtQ@mail.gmail.com>
	<2342620.MypLiFWdOh@crushinator>
Message-ID: <CABHVRKTPevP-Z9te2W_N=SaJrF-yUkYgREQQ5O=khOzoL-sbZQ@mail.gmail.com>

>
> Why do it as an OP_RETURN output? It could be a simple token in the
> coinbase input script, similar to how support for P2SH was signaled among
> miners. And why should there be an explicit token for voting for the status
> quo? Simply omitting any indication should be an implicit vote for the
> status quo. A miner would only need to insert an indicator into their block
> if they wished for a larger block.
>

I don't really care the exact location it's put in. I just thought there
wasn't an explicit need to put it in the header (via a bit of nVersion),
and the scriptSig is already used for many things (block height, merged
mining hash, "\"P2SH\"", miner identifier). And voting to keep the block
size the same by not voting is fine by me.


> That said, proposals of this type have been discussed before, and the
> objection is always that miners would want larger blocks than the rest of
> the network could bear. Unless you want Bitcoin to become centralized in
> the hands of a few large mining pools, you shouldn't hand control over the
> block size limits to the miners.
>

Yeah, that was the conclusion we came to chatting on #bitcoin-wizards the
other day. I now think that this could be useful to dynamically increase a
lower limit, but that there should still be a hard upper limit like 20 MB.
I think that just changing the upper limit might be simpler and better,
though.

- Stephen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/71c4ecb9/attachment.html>

From stephencalebmorse at gmail.com  Wed Jun  3 02:33:51 2015
From: stephencalebmorse at gmail.com (Stephen Morse)
Date: Tue, 2 Jun 2015 22:33:51 -0400
Subject: [Bitcoin-development] Max Block Size: Simple Voting Procedure
In-Reply-To: <CAM7BtUrN9D__ha63Qfs2Fi4HSUFWb8BArHni9yFKRSdLSxCNnA@mail.gmail.com>
References: <CABHVRKSFV_dXZeLnhBLfRK=wrBFsRH5kFBZqwECh-LyCkwrmtQ@mail.gmail.com>
	<CAM7BtUod0hyteqx-yj8XMwATYp73Shi0pvdcTrW0buseLGc_ZQ@mail.gmail.com>
	<CABHVRKT7H1p67Bz_T_caaGFnfuswnC+kXKGdkpRhtXUZQv3HtQ@mail.gmail.com>
	<CAM7BtUrN9D__ha63Qfs2Fi4HSUFWb8BArHni9yFKRSdLSxCNnA@mail.gmail.com>
Message-ID: <CABHVRKS5Mnp9vSJ6mZwNroY7jbBJx+4d+m4hVpWONisaMvBNUw@mail.gmail.com>

Pindar,

yes and it's a good idea to separate the hard/soft fork upgrades. The point
> being here is that we're also establishing a process for the community to
> self-determine the way forward in a transparent and verifiable manner.
>
> What's not to like? :)
>
> I'll probably have some time on Sunday to help hack something up but I
> don't think this is that heavy a coding lift? What am I missing?
>

As Matt mentioned, many members of the bitcoin community would be hesitant
about giving miners this much power. It essentially lets them vote to
change the rules of the system. But miners are not the only part of this
ecosystem, and they are not the only ones affected by the choice of block
size limit, so they probably shouldn't be the only ones with a vote.
Instead, we vote with the software we run, and all upgrade.

So, while I think an idea like this has its merits, I would bet that it's
fairly unlikely to get enough support to be merged into bitcoin core.

Best,
Stephen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/12a7e17a/attachment.html>

From stephencalebmorse at gmail.com  Wed Jun  3 03:36:00 2015
From: stephencalebmorse at gmail.com (Stephen Morse)
Date: Tue, 2 Jun 2015 23:36:00 -0400
Subject: [Bitcoin-development] Max Block Size: Simple Voting Procedure
In-Reply-To: <CACrzPe=vNd8T0B4DGH3dTE9S9S1jEU9k6_5Uz_NUP1ZEgC8uYA@mail.gmail.com>
References: <CABHVRKSFV_dXZeLnhBLfRK=wrBFsRH5kFBZqwECh-LyCkwrmtQ@mail.gmail.com>
	<CAM7BtUod0hyteqx-yj8XMwATYp73Shi0pvdcTrW0buseLGc_ZQ@mail.gmail.com>
	<CABHVRKT7H1p67Bz_T_caaGFnfuswnC+kXKGdkpRhtXUZQv3HtQ@mail.gmail.com>
	<CAM7BtUrN9D__ha63Qfs2Fi4HSUFWb8BArHni9yFKRSdLSxCNnA@mail.gmail.com>
	<CABHVRKS5Mnp9vSJ6mZwNroY7jbBJx+4d+m4hVpWONisaMvBNUw@mail.gmail.com>
	<CACrzPe=vNd8T0B4DGH3dTE9S9S1jEU9k6_5Uz_NUP1ZEgC8uYA@mail.gmail.com>
Message-ID: <CABHVRKQbTa5SA=CpGK2+Fpqxo7V3VCRKVigMrEJ_PvUg5owPiQ@mail.gmail.com>

Vincent,

> Some changes:
>
> Votes need to be 100%, not 50.01%. That way small miners have a fair
> chance. A 50.01% vote means large miners call the shots.
>
While I like the idea of possibly requiring more than 50%, you wouldn't
want to have a situation where a minority of uncooperative (or just lazy)
miners don't add their votes and hold up progress. Maybe 2/3 instead of
1/2, though.

> Users (people who make transactions) need to vote. A vote by a miner
> shouldn't count without user votes. Fee incentives should attract
> legitimate votes from miners. A cheating miner will be defeated by another
> miner who includes those votes, and take the fees.
>
> This lets wallet providers and exchanges cast votes (few wallets will
> implement prompts and will just auto vote, so if you don't agree, switch
> wallets. Vote with your wallet).
>
The idea of voting with your wallet, while appealing, is technically
infeasible. Miners can fill their blocks with any type of transactions,
including their own specially designed transactions. And any fees from
these transactions can be collected right back into their coinbase
transaction.

- Stephen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/ff5448a5/attachment.html>

From vincent.truong at procabiak.com  Wed Jun  3 03:08:17 2015
From: vincent.truong at procabiak.com (Vincent Truong)
Date: Wed, 3 Jun 2015 13:08:17 +1000
Subject: [Bitcoin-development] Max Block Size: Simple Voting Procedure
In-Reply-To: <CABHVRKS5Mnp9vSJ6mZwNroY7jbBJx+4d+m4hVpWONisaMvBNUw@mail.gmail.com>
References: <CABHVRKSFV_dXZeLnhBLfRK=wrBFsRH5kFBZqwECh-LyCkwrmtQ@mail.gmail.com>
	<CAM7BtUod0hyteqx-yj8XMwATYp73Shi0pvdcTrW0buseLGc_ZQ@mail.gmail.com>
	<CABHVRKT7H1p67Bz_T_caaGFnfuswnC+kXKGdkpRhtXUZQv3HtQ@mail.gmail.com>
	<CAM7BtUrN9D__ha63Qfs2Fi4HSUFWb8BArHni9yFKRSdLSxCNnA@mail.gmail.com>
	<CABHVRKS5Mnp9vSJ6mZwNroY7jbBJx+4d+m4hVpWONisaMvBNUw@mail.gmail.com>
Message-ID: <CACrzPe=vNd8T0B4DGH3dTE9S9S1jEU9k6_5Uz_NUP1ZEgC8uYA@mail.gmail.com>

Some changes:

Votes need to be 100%, not 50.01%. That way small miners have a fair
chance. A 50.01% vote means large miners call the shots.

Users (people who make transactions) need to vote. A vote by a miner
shouldn't count without user votes. Fee incentives should attract
legitimate votes from miners. A cheating miner will be defeated by another
miner who includes those votes, and take the fees.

This lets wallet providers and exchanges cast votes (few wallets will
implement prompts and will just auto vote, so if you don't agree, switch
wallets. Vote with your wallet).

~Vince
On Jun 3, 2015 12:34 PM, "Stephen Morse" <stephencalebmorse at gmail.com>
wrote:

> Pindar,
>
> yes and it's a good idea to separate the hard/soft fork upgrades. The
>> point being here is that we're also establishing a process for the
>> community to self-determine the way forward in a transparent and verifiable
>> manner.
>>
>> What's not to like? :)
>>
>> I'll probably have some time on Sunday to help hack something up but I
>> don't think this is that heavy a coding lift? What am I missing?
>>
>
> As Matt mentioned, many members of the bitcoin community would be hesitant
> about giving miners this much power. It essentially lets them vote to
> change the rules of the system. But miners are not the only part of this
> ecosystem, and they are not the only ones affected by the choice of block
> size limit, so they probably shouldn't be the only ones with a vote.
> Instead, we vote with the software we run, and all upgrade.
>
> So, while I think an idea like this has its merits, I would bet that it's
> fairly unlikely to get enough support to be merged into bitcoin core.
>
> Best,
> Stephen
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150603/9795292e/attachment.html>

From pindar.wong at gmail.com  Wed Jun  3 04:18:22 2015
From: pindar.wong at gmail.com (Pindar Wong)
Date: Wed, 3 Jun 2015 12:18:22 +0800
Subject: [Bitcoin-development] Max Block Size: Simple Voting Procedure
In-Reply-To: <CABHVRKS5Mnp9vSJ6mZwNroY7jbBJx+4d+m4hVpWONisaMvBNUw@mail.gmail.com>
References: <CABHVRKSFV_dXZeLnhBLfRK=wrBFsRH5kFBZqwECh-LyCkwrmtQ@mail.gmail.com>
	<CAM7BtUod0hyteqx-yj8XMwATYp73Shi0pvdcTrW0buseLGc_ZQ@mail.gmail.com>
	<CABHVRKT7H1p67Bz_T_caaGFnfuswnC+kXKGdkpRhtXUZQv3HtQ@mail.gmail.com>
	<CAM7BtUrN9D__ha63Qfs2Fi4HSUFWb8BArHni9yFKRSdLSxCNnA@mail.gmail.com>
	<CABHVRKS5Mnp9vSJ6mZwNroY7jbBJx+4d+m4hVpWONisaMvBNUw@mail.gmail.com>
Message-ID: <CAM7BtUofDnj6mJJ=zg3DxDC9TESJsjoOebRYfoAXmh0mew3J0w@mail.gmail.com>

On Wed, Jun 3, 2015 at 10:33 AM, Stephen Morse <stephencalebmorse at gmail.com>
wrote:

> Pindar,
>
> yes and it's a good idea to separate the hard/soft fork upgrades. The
>> point being here is that we're also establishing a process for the
>> community to self-determine the way forward in a transparent and verifiable
>> manner.
>>
>> What's not to like? :)
>>
>> I'll probably have some time on Sunday to help hack something up but I
>> don't think this is that heavy a coding lift? What am I missing?
>>
>
> As Matt mentioned, many members of the bitcoin community would be hesitant
> about giving miners this much power.
>

I understand this concern and it's a valid one, including other dimensions
such as better decentralization. Some might argue that the mining pools in
China currently have such power and that's a bad thing:-

https://blockchain.info/pools

I happen to think  that it's unhealthy for the network but the irony is
that they are huge bitcoin fanbase that perhaps should be involved in this,
and other,  decisions. The question is how.

Thus far our friends from f2pool have chimed in with some data from their
perspective. It would be interesting to hear from the others and I'm
finding ways to do exactly that.

So let's find a way to involve, and not alienate them or others. Let's find
a way to get more data and test assumptions and boundaries.


It essentially lets them vote to change the rules of the system.
>

It's data and yes, it gives then a very visible, verifiable 'vote' ...
though I prefer to think of this as 'voice'  as in a ' hummmm. '

But miners are not the only part of this ecosystem, and they are not the
> only ones affected by the choice of block size limit, so they probably
> shouldn't be the only ones with a vote.
>

I fully agree and it doesn't have to be the only voice ...  think 'choir'
...  after all this is an ecosystem with each party playing their
respective roles. But sustainable ecosystems have 'keystone' species, and I
believe these to be the 'honest' miners that help secure the network.

Instead, we vote with the software we run, and all upgrade.
>

or not as the case may be.   I think we're trying to find a level of rough
consensus where members of the community feel comfortable enough to do this
upgrade in their respective codebase.


>
> So, while I think an idea like this has its merits, I would bet that it's
> fairly unlikely to get enough support to be merged into bitcoin core.
>

Bitcoin was 'unlikely' ...  yet it happened.

Nevertheless you raise the possibility of a different possible path forward
and that's positive. So thank you for doing that!

Bitcoin's humming in China, behind an GFW ... who could have guessed?

'Connect and Liberate' :)

p.


>
> Best,
> Stephen
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150603/addc9f1d/attachment.html>

From rdwnj at yahoo.com  Wed Jun  3 05:50:32 2015
From: rdwnj at yahoo.com (Ron)
Date: Wed, 3 Jun 2015 05:50:32 +0000 (UTC)
Subject: [Bitcoin-development] Bitcoin-development Digest, Vol 49,
	Issue 16
In-Reply-To: <mailman.263582.1433245437.2287.bitcoin-development@lists.sourceforge.net>
References: <mailman.263582.1433245437.2287.bitcoin-development@lists.sourceforge.net>
Message-ID: <2122164151.2048223.1433310632572.JavaMail.yahoo@mail.yahoo.com>


      Subject: Bitcoin-development Digest, Vol 49, Issue 16
   ? 1. Re: Proposed alternatives to the 20MB step (Eric Voskuil)
----------------------------------------------------------------------

Message: 1
Date: Mon, 01 Jun 2015 17:09:10 -0700
From: Eric Voskuil <eric at voskuil.org>
Subject: Re: [Bitcoin-development] Proposed alternatives to the 20MB
??? step
To: Mike Hearn <mike at plan99.net>, J?r?me Legoupil
??? <jjlegoupil at gmail.com>
Cc: Bitcoin Dev <bitcoin-development at lists.sourceforge.net>
Message-ID: <556CF426.3030204 at voskuil.org>
Content-Type: text/plain; charset="iso-8859-1"

On 06/01/2015 08:55 AM, Mike Hearn wrote:
>> Decentralization is the core of Bitcoin's security model and thus
that's what gives Bitcoin its value.
> No. Usage is what gives Bitcoin value.

Nonsense.

Visa, Dollar, Euro, Yuan, Peso have usage.

The value in Bitcoin is *despite* it's far lesser usage.

Yes, the price is a function of demand, but demand is a function of
utility. Despite orders of magnitude less usage than state currencies,
Bitcoin has utility. This premium *only* exists due to its lack of
centralized control. I would not work full time, or at all, on Bitcoin
if it was not for decentralization; nor would I hold any of it. I doubt
anyone would show an interest in Bitcoin if it was not decentralized. If
it centralized even you would be forced to find something else to do,
because Bitcoin "usage" would drop to zero.

> It's kind of maddening that I have to point this out. Decentralisation
is a means to an end.

No, it was/is the primary objective.
...
e
________________________________________________________I agree Eric, but I would add that demand is more a function of one's? lack?of faith in one's government and its fiat currency.? The value of Bitcoin is 
its independence and constancy.? Its value doesn't change, only the worth 
or worthlessness of corrupt states and their currencies that it's compared 
to / exchanged with.? I hesitate to say money since money is supposed to 
be a store of value over time.
Ron




  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150603/f01f9ec6/attachment.html>

From pieter.wuille at gmail.com  Wed Jun  3 20:42:44 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 3 Jun 2015 13:42:44 -0700
Subject: [Bitcoin-development] Version bits proposal
In-Reply-To: <CAPg+sBg5TqQ=zjyZ7dp-d1oBGp31Krnix3zyt9suP4-AGbxW=Q@mail.gmail.com>
References: <CAPg+sBg5TqQ=zjyZ7dp-d1oBGp31Krnix3zyt9suP4-AGbxW=Q@mail.gmail.com>
Message-ID: <CAPg+sBgGjcGO4uNQm1P77PaXS5Vj8vpcceNKMDNGxmytRc5weQ@mail.gmail.com>

Thanks for all the comments.

I plan to address the feedback and work on an implementation next week.

On Tue, May 26, 2015 at 6:48 PM, Pieter Wuille <pieter.wuille at gmail.com>
wrote:

> Hello everyone,
>
> here is a proposal for how to coordinate future soft-forking consensus
> changes: https://gist.github.com/sipa/bf69659f43e763540550
>
> It supports multiple parallel changes, as well as changes that get
> permanently rejected without obstructing the rollout of others.
>
> Feel free to comment. As the gist does not support notifying participants
> of new comments, I would suggest using the mailing list instead.
>
> This is joint work with Peter Todd and Greg Maxwell.
>
> --
> Pieter
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150603/f0fe1bfb/attachment.html>

From svenberg at airmail.cc  Thu Jun  4 21:52:16 2015
From: svenberg at airmail.cc (Sven Berg)
Date: Thu, 04 Jun 2015 21:52:16 +0000
Subject: [Bitcoin-development] Tough questions for Peter Todd,
 Chief Scientist {Mastercoin | Counterparty | Coinkite | Darkwallet
 | Viacoin}
Message-ID: <0cbff64091257104c64992b9a0a351cb@airmail.cc>

1) Hours/week have you devoted to each project out of a 40hr work week

2) Upfront and ongoing fees for use of your name

3) Break down total amounts for each project

4) Start dates of contracts for each project

5) End dates (if applicable)

6) Current and past holdings of altcoins/appcoins (including liquidation 
dates)

7) Describe return on investment to investors related to your activities 
during employment
    (other than marketing/price pump)

8) Describe your involvement with Initial Coin Offers (ICO) of 
applicable

9) Explain rational for pursuit of ICO fund sources rather than 
community/established
    businesses (Lighthouse, legit startups, etc.)

-- 
Berg Investigations LLC.



From mark at friedenbach.org  Thu Jun  4 21:54:12 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Thu, 4 Jun 2015 14:54:12 -0700
Subject: [Bitcoin-development] Tough questions for Peter Todd,
 Chief Scientist {Mastercoin | Counterparty | Coinkite | Darkwallet
 | Viacoin}
In-Reply-To: <0cbff64091257104c64992b9a0a351cb@airmail.cc>
References: <0cbff64091257104c64992b9a0a351cb@airmail.cc>
Message-ID: <CAOG=w-te98UdUOgsqi959OVqJ-LeKUVxR6MsnGA52XkwaM2VdQ@mail.gmail.com>

Why is this your business or the business of anyone on this list? Take it
somewhere else.

On Thu, Jun 4, 2015 at 2:52 PM, Sven Berg <svenberg at airmail.cc> wrote:

> 1) Hours/week have you devoted to each project out of a 40hr work week
>
> 2) Upfront and ongoing fees for use of your name
>
> 3) Break down total amounts for each project
>
> 4) Start dates of contracts for each project
>
> 5) End dates (if applicable)
>
> 6) Current and past holdings of altcoins/appcoins (including liquidation
> dates)
>
> 7) Describe return on investment to investors related to your activities
> during employment
>     (other than marketing/price pump)
>
> 8) Describe your involvement with Initial Coin Offers (ICO) of
> applicable
>
> 9) Explain rational for pursuit of ICO fund sources rather than
> community/established
>     businesses (Lighthouse, legit startups, etc.)
>
> --
> Berg Investigations LLC.
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150604/842dd351/attachment.html>

From dstadulis at gmail.com  Thu Jun  4 22:02:17 2015
From: dstadulis at gmail.com (Daniel Stadulis)
Date: Thu, 4 Jun 2015 15:02:17 -0700
Subject: [Bitcoin-development] Tough questions for Peter Todd,
 Chief Scientist {Mastercoin | Counterparty | Coinkite | Darkwallet
 | Viacoin}
In-Reply-To: <CAOG=w-te98UdUOgsqi959OVqJ-LeKUVxR6MsnGA52XkwaM2VdQ@mail.gmail.com>
References: <0cbff64091257104c64992b9a0a351cb@airmail.cc>
	<CAOG=w-te98UdUOgsqi959OVqJ-LeKUVxR6MsnGA52XkwaM2VdQ@mail.gmail.com>
Message-ID: <CAHpxFbFkatrec0fP-GfO+u3kgdQVJ5zZ735J9LE9i-oCmHiLtw@mail.gmail.com>

Off topic and inappropriate

On a meta level, all the anti-Todd comments are originating from
*@airmail.cc accounts.

On Thu, Jun 4, 2015 at 2:54 PM, Mark Friedenbach <mark at friedenbach.org>
wrote:

> Why is this your business or the business of anyone on this list? Take it
> somewhere else.
>
> On Thu, Jun 4, 2015 at 2:52 PM, Sven Berg <svenberg at airmail.cc> wrote:
>
>> 1) Hours/week have you devoted to each project out of a 40hr work week
>>
>> 2) Upfront and ongoing fees for use of your name
>>
>> 3) Break down total amounts for each project
>>
>> 4) Start dates of contracts for each project
>>
>> 5) End dates (if applicable)
>>
>> 6) Current and past holdings of altcoins/appcoins (including liquidation
>> dates)
>>
>> 7) Describe return on investment to investors related to your activities
>> during employment
>>     (other than marketing/price pump)
>>
>> 8) Describe your involvement with Initial Coin Offers (ICO) of
>> applicable
>>
>> 9) Explain rational for pursuit of ICO fund sources rather than
>> community/established
>>     businesses (Lighthouse, legit startups, etc.)
>>
>> --
>> Berg Investigations LLC.
>>
>>
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150604/2eeea72f/attachment.html>

From svenberg at airmail.cc  Thu Jun  4 22:04:42 2015
From: svenberg at airmail.cc (Sven Berg)
Date: Thu, 04 Jun 2015 22:04:42 +0000
Subject: [Bitcoin-development] Tough questions for Peter Todd,
 Chief Scientist {Mastercoin | Counterparty | Coinkite | Darkwallet
 | Viacoin}
In-Reply-To: <CAOG=w-te98UdUOgsqi959OVqJ-LeKUVxR6MsnGA52XkwaM2VdQ@mail.gmail.com>
References: <0cbff64091257104c64992b9a0a351cb@airmail.cc>
	<CAOG=w-te98UdUOgsqi959OVqJ-LeKUVxR6MsnGA52XkwaM2VdQ@mail.gmail.com>
Message-ID: <f82f029afbed18754d45142b410d127a@airmail.cc>

On 2015-06-04 21:54, Mark Friedenbach wrote:
> Why is this your business or the business of anyone on this list? Take
> it somewhere else.

Do you have a better avenue? Todd refuses to answer reasonable questions 
about his involvement in these scams and failures elsewhere. The 
community deserves answers when someone so prominent is involved in so 
many shady projects with huge losses most recently the failure of 
DarkWallet.

-- 
Berg Investigations LLC



From bbrelin at gmail.com  Thu Jun  4 22:14:03 2015
From: bbrelin at gmail.com (Braun Brelin)
Date: Fri, 5 Jun 2015 01:14:03 +0300
Subject: [Bitcoin-development] Tough questions for Peter Todd,
 Chief Scientist {Mastercoin | Counterparty | Coinkite | Darkwallet
 | Viacoin}
In-Reply-To: <f82f029afbed18754d45142b410d127a@airmail.cc>
References: <0cbff64091257104c64992b9a0a351cb@airmail.cc>
	<CAOG=w-te98UdUOgsqi959OVqJ-LeKUVxR6MsnGA52XkwaM2VdQ@mail.gmail.com>
	<f82f029afbed18754d45142b410d127a@airmail.cc>
Message-ID: <CAJ2OvpiN2CH0-X+o_eqeJ1_VqkTisfpm432OoULz7jRu7wfOpw@mail.gmail.com>

I'm sorry.  Are you a federal prosecutor? or a state prosecutor? Or
involved with law enforcement in any way?
Or involved in a civil suit against Mr. Todd?

The "community" doesn't deserve anything in this regard.  The appropriate
response to your questions is:  "F*** off".

Braun Brelin



On Fri, Jun 5, 2015 at 1:04 AM, Sven Berg <svenberg at airmail.cc> wrote:

> On 2015-06-04 21:54, Mark Friedenbach wrote:
> > Why is this your business or the business of anyone on this list? Take
> > it somewhere else.
>
> Do you have a better avenue? Todd refuses to answer reasonable questions
> about his involvement in these scams and failures elsewhere. The
> community deserves answers when someone so prominent is involved in so
> many shady projects with huge losses most recently the failure of
> DarkWallet.
>
> --
> Berg Investigations LLC
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150605/14dd8e67/attachment.html>

From svenberg at airmail.cc  Thu Jun  4 22:21:54 2015
From: svenberg at airmail.cc (Sven Berg)
Date: Thu, 04 Jun 2015 22:21:54 +0000
Subject: [Bitcoin-development] Tough questions for Peter Todd,
 Chief Scientist {Mastercoin | Counterparty | Coinkite | Darkwallet
 | Viacoin}
In-Reply-To: <CAJ2OvpiN2CH0-X+o_eqeJ1_VqkTisfpm432OoULz7jRu7wfOpw@mail.gmail.com>
References: <0cbff64091257104c64992b9a0a351cb@airmail.cc>
	<CAOG=w-te98UdUOgsqi959OVqJ-LeKUVxR6MsnGA52XkwaM2VdQ@mail.gmail.com>
	<f82f029afbed18754d45142b410d127a@airmail.cc>
	<CAJ2OvpiN2CH0-X+o_eqeJ1_VqkTisfpm432OoULz7jRu7wfOpw@mail.gmail.com>
Message-ID: <497022bd20cc2dbd923eebb68568b8f3@airmail.cc>

On 2015-06-04 22:14, Braun Brelin wrote:
> I'm sorry.? Are you a federal prosecutor? or a state prosecutor? Or
> involved with law enforcement in any way?
> Or involved in a civil suit against Mr. Todd? ?

Depending on Todd's answers I'm sure all of the above will be involved.

> The "community" doesn't deserve anything in this regard.? The
> appropriate response to your questions is: ?"F*** off".

Strong words to some reasonable questions.

--
Berg Investigations LLC




From kristovatlas.lists at gmail.com  Thu Jun  4 22:32:50 2015
From: kristovatlas.lists at gmail.com (Kristov Atlas)
Date: Thu, 4 Jun 2015 18:32:50 -0400
Subject: [Bitcoin-development] Tough questions for Peter Todd,
 Chief Scientist {Mastercoin | Counterparty | Coinkite | Darkwallet
 | Viacoin}
In-Reply-To: <0cbff64091257104c64992b9a0a351cb@airmail.cc>
References: <0cbff64091257104c64992b9a0a351cb@airmail.cc>
Message-ID: <CAGH37SLoUUH+9Fd8ZiiS0DjTk5cWmBYXMqdNd5NW8cCu9jnbnw@mail.gmail.com>

Why would Peter be accountable to you in any shape or form? What contact
did he sign onto with you?

-Kr
On Jun 4, 2015 5:52 PM, "Sven Berg" <svenberg at airmail.cc> wrote:

> 1) Hours/week have you devoted to each project out of a 40hr work week
>
> 2) Upfront and ongoing fees for use of your name
>
> 3) Break down total amounts for each project
>
> 4) Start dates of contracts for each project
>
> 5) End dates (if applicable)
>
> 6) Current and past holdings of altcoins/appcoins (including liquidation
> dates)
>
> 7) Describe return on investment to investors related to your activities
> during employment
>     (other than marketing/price pump)
>
> 8) Describe your involvement with Initial Coin Offers (ICO) of
> applicable
>
> 9) Explain rational for pursuit of ICO fund sources rather than
> community/established
>     businesses (Lighthouse, legit startups, etc.)
>
> --
> Berg Investigations LLC.
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150604/d324704f/attachment.html>

From jgarzik at bitpay.com  Thu Jun  4 22:39:25 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Thu, 4 Jun 2015 18:39:25 -0400
Subject: [Bitcoin-development] Tough questions for Peter Todd,
 Chief Scientist {Mastercoin | Counterparty | Coinkite | Darkwallet
 | Viacoin}
In-Reply-To: <CAHpxFbFkatrec0fP-GfO+u3kgdQVJ5zZ735J9LE9i-oCmHiLtw@mail.gmail.com>
References: <0cbff64091257104c64992b9a0a351cb@airmail.cc>
	<CAOG=w-te98UdUOgsqi959OVqJ-LeKUVxR6MsnGA52XkwaM2VdQ@mail.gmail.com>
	<CAHpxFbFkatrec0fP-GfO+u3kgdQVJ5zZ735J9LE9i-oCmHiLtw@mail.gmail.com>
Message-ID: <CAJHLa0P_k0185kzSfPQ=ewr+LCJYhH0zm5-hsdBw-fPsNDz=YA@mail.gmail.com>

On Thu, Jun 4, 2015 at 6:02 PM, Daniel Stadulis <dstadulis at gmail.com> wrote:

> Off topic and inappropriate
>

Indeed.

Take this somewhere else, Mr. Berg.  This is a technical mailing list.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150604/bb46d84d/attachment.html>

From gavinandresen at gmail.com  Thu Jun  4 22:47:57 2015
From: gavinandresen at gmail.com (Gavin)
Date: Thu, 4 Jun 2015 18:47:57 -0400
Subject: [Bitcoin-development] Tough questions for Peter Todd,
	Chief Scientist {Mastercoin | Counterparty | Coinkite | Darkwallet
	| Viacoin}
In-Reply-To: <0cbff64091257104c64992b9a0a351cb@airmail.cc>
References: <0cbff64091257104c64992b9a0a351cb@airmail.cc>
Message-ID: <2C9E8946-301D-490C-9D4F-D7749AD6CC49@gmail.com>

Completely off-topic for this mailing list, which is about coding/technology not people.

Stop or I will excercise my moderator superpowers and remove you from this list.

--
Gavin Andresen


> On Jun 4, 2015, at 5:52 PM, Sven Berg <svenberg at airmail.cc> wrote:
> 
> 1) Hours/week have .....



From laanwj at gmail.com  Fri Jun  5 08:59:49 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Fri, 5 Jun 2015 10:59:49 +0200
Subject: [Bitcoin-development] Bitcoin core 0.11.0 release candidate 1
	available
Message-ID: <20150605085948.GA32090@amethyst.visucore.com>

Hello,

I've just uploaded Bitcoin Core 0.11.0rc1 executables to:

https://bitcoin.org/bin/bitcoin-core-0.11.0/test/

The source code can be found in the source tarball or in git under the tag 'v0.11.0rc1'

Preliminary release notes can be found here:

https://github.com/bitcoin/bitcoin/blob/0.11/doc/release-notes.md

Thanks to everyone that participated in development or in the gitian build process,

Wladimir




From kristovatlas.lists at gmail.com  Sat Jun  6 00:12:08 2015
From: kristovatlas.lists at gmail.com (Kristov Atlas)
Date: Fri, 5 Jun 2015 20:12:08 -0400
Subject: [Bitcoin-development] Lexicographical Indexing of Transaction
	Inputs and Outputs
Message-ID: <CAGH37SK0k1YUvadetyHcBGjzW+OHNFRmRwqsUDeHBGejUacigQ@mail.gmail.com>

Hello all,

I have written a draft of a BIP to standardize the sorting of tx inputs and
outputs for privacy and security reasons. A few colleagues have reviewed
this and provided feedback privately, but now it's ready for feedback from
a wider audience.

If there is positive sentiment about the proposal after feedback is
integrated, I aim for a bip number to be assigned and have it accepted into
https://github.com/bitcoin/bips

Link:
https://github.com/kristovatlas/rfc/blob/master/bips/bip-li01.mediawiki

For your convenience, here's the abstract:

"Currently there is no standard for bitcoin wallet clients when ordering
transaction inputs and outputs. As a result, wallet clients often have a
discernible blockchain fingerprint, and can leak private information about
their users. By contrast, a standard for non-deterministic sorting could be
difficult to audit. This document proposes deterministic lexicographical
sorting, using hashes of previous transactions and output indices to sort
transaction inputs, as well as value and locking scripts to sort
transaction outputs."

Thanks,

Kristov Atlas
Open Bitcoin Privacy Project Contributor, Blockchain.info Security
Engineer, etc.
Twitter: @kristovatlas
Blog: kristovatlas.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150605/9ba7bf54/attachment.html>

From stephencalebmorse at gmail.com  Sat Jun  6 03:20:38 2015
From: stephencalebmorse at gmail.com (Stephen)
Date: Fri, 5 Jun 2015 23:20:38 -0400
Subject: [Bitcoin-development] Lexicographical Indexing of Transaction
	Inputs and Outputs
In-Reply-To: <CAGH37SK0k1YUvadetyHcBGjzW+OHNFRmRwqsUDeHBGejUacigQ@mail.gmail.com>
References: <CAGH37SK0k1YUvadetyHcBGjzW+OHNFRmRwqsUDeHBGejUacigQ@mail.gmail.com>
Message-ID: <44BE16F9-AB24-4A8E-BC7F-03A6C590FCE7@gmail.com>

Hi Kristov,

I like the idea. Mainly because having a standard reminds developers to consider this issue. In addition, we would have visibility into the portion of the network that adopts this strategy to enhance privacy. A few points of feedback:

 - I think your explanation of sorting could be significantly shortened and clarified by simply saying that the TXIDs of inputs should be compared as uint256 integers. 
 - The malleability of input TXIDs, as mentioned in the proposal, could cause inputs to be ordered in a non-standard way. Reordering then them would invalidate the signatures (assuming SIGHASH_ALL), so the transaction would be left with improperly ordered inputs. While not a huge issue, it's not ideal. I think the best way to get around this would be to use normalized TXIDs, but you might also be able to sort based on the previous outputs that each of the inputs are spending? These both require information that may not be readily available, however, and use of normalized transaction IDs is not fully developed yet. 

Best,
Stephen 



> On Jun 5, 2015, at 8:12 PM, Kristov Atlas <kristovatlas.lists at gmail.com> wrote:
> 
> Hello all,
> 
> I have written a draft of a BIP to standardize the sorting of tx inputs and outputs for privacy and security reasons. A few colleagues have reviewed this and provided feedback privately, but now it's ready for feedback from a wider audience.
> 
> If there is positive sentiment about the proposal after feedback is integrated, I aim for a bip number to be assigned and have it accepted into https://github.com/bitcoin/bips 
> 
> Link: https://github.com/kristovatlas/rfc/blob/master/bips/bip-li01.mediawiki
> 
> For your convenience, here's the abstract:
> 
> "Currently there is no standard for bitcoin wallet clients when ordering transaction inputs and outputs. As a result, wallet clients often have a discernible blockchain fingerprint, and can leak private information about their users. By contrast, a standard for non-deterministic sorting could be difficult to audit. This document proposes deterministic lexicographical sorting, using hashes of previous transactions and output indices to sort transaction inputs, as well as value and locking scripts to sort transaction outputs."
> 
> Thanks,
> 
> Kristov Atlas
> Open Bitcoin Privacy Project Contributor, Blockchain.info Security Engineer, etc.
> Twitter: @kristovatlas
> Blog: kristovatlas.com
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150605/6364f4b4/attachment.html>

From pindar.wong at gmail.com  Sat Jun  6 03:34:22 2015
From: pindar.wong at gmail.com (Pindar Wong)
Date: Sat, 6 Jun 2015 11:34:22 +0800
Subject: [Bitcoin-development] Meta suggestions for this block size
	debate
In-Reply-To: <CANJO25K+tG3uH+GH8i4PBjdk8KyJZDAunfwMmWedOJyZOk7wNw@mail.gmail.com>
References: <556CDB09.8050906@henricson.se>
	<CANJO25KUvYNzGLDjr=d_gUSKe0xAju+34W9B6jmcSjQvGXR=2g@mail.gmail.com>
	<CAEM=y+Xf9b1p-KB-PKzjtMirM8_WMbpMZuQyGyDv+6GM=0O9hA@mail.gmail.com>
	<CANJO25K+tG3uH+GH8i4PBjdk8KyJZDAunfwMmWedOJyZOk7wNw@mail.gmail.com>
Message-ID: <CAM7BtUoMHE4EwJAFCfOino0UKU5B4-Wzswfvttqs8=mBayK1OA@mail.gmail.com>

Gabe,

Did you ever get an answer to this?

I"ll have some time tomorrow to be able to help with some work on this and
will need to do it myself anyways since I'm not sure I understand the
nuances, where bitcoin XT fits into the scheme of things (or not) etc.

I would have thought that there would be a testnet4 by now using 8mb
blocks... but hey that's just me.

p.




On Tue, Jun 2, 2015 at 11:52 AM, gabe appleton <gappleto97 at gmail.com> wrote:

> I don't have permission to create a page. If someone else does, I'll
> happily get a framework started.
>
> On Mon, Jun 1, 2015 at 11:32 PM, Ethan Heilman <eth3rs at gmail.com> wrote:
>
>> I second this, I don't have time to read the large number of emails
>> generated every day from the block size debate. A summary of the various
>> positions and arguments would be extremely helpful.
>>
>> On Mon, Jun 1, 2015 at 11:02 PM, gabe appleton <gappleto97 at gmail.com>
>> wrote:
>>
>>> Also, can we try to get a wiki page for the debate? That way we could
>>> condense the information as much as possible. I'll be willing to assist if
>>> the page gets approval.
>>> On Jun 1, 2015 6:41 PM, "Mats Henricson" <mats at henricson.se> wrote:
>>>
>>>> Hi!
>>>>
>>>> My fingers have been itching many times now, this debate
>>>> drives me nuts.
>>>>
>>>> I just wish all posters could follow two simple principles:
>>>>
>>>> 1. Read up. Yes. All of what has been written. Yes, it will
>>>>    take many hours. But if you're rehashing what other
>>>>    smarter people have said over and over before, you're
>>>>    wasting hundreds of peoples time. Please don't.
>>>>
>>>> 2. Be helpful. Suggest alternatives. Just cristizising is
>>>>    just destructive. If you want no change, then say so.
>>>>
>>>> Mats
>>>>
>>>>
>>>> ------------------------------------------------------------------------------
>>>> _______________________________________________
>>>> Bitcoin-development mailing list
>>>> Bitcoin-development at lists.sourceforge.net
>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>
>>>
>>>
>>> ------------------------------------------------------------------------------
>>>
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>>
>>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/6c6ff215/attachment.html>

From rusty at rustcorp.com.au  Sat Jun  6 04:42:10 2015
From: rusty at rustcorp.com.au (Rusty Russell)
Date: Sat, 06 Jun 2015 14:12:10 +0930
Subject: [Bitcoin-development] [RFC] Canonical input and output ordering in
	transactions
Message-ID: <87k2vhfnx9.fsf@rustcorp.com.au>

Title: Canonical Input and Output Ordering
Author: Rusty Russell <rusty at rustcorp.com.au>
Discussions-To: "Bitcoin Dev" <bitcoin-development at lists.sourceforge.net>
Status: Draft
Type: Standards Track
Created: 2015-06-06

Abstract

This BIP provides a canonical ordering of inputs and outputs when
creating transactions.

Motivation

Most bitcoin wallet implementations randomize the outputs of
transactions they create to avoid trivial linkage analysis (especially
change outputs), however implementations have made mistakes in this area
in the past.

Using a canonical ordering has the same effect, but is simpler, more
obvious if incorrect, and can eventually be enforced by IsStandard() and
even a soft-fork to enforce it.

Specification

Inputs should be ordered like so:
        index (lower value first)
        txid (little endian order, lower byte first)

Outputs should be ordered like so:
        amount (lower value first)
        script (starting from first byte, lower byte first, shorter wins)

Rationale

Any single wallet is already free to implement this, but if other
wallets do not it would reduce privacy by making those transactions
stand out.  Thus a BIP is appropriate, especially if this were to
become an IsStandard() rule once widely adopted.

Because integers are fast to compare, they're sorted first, before the
lexographical ordering.

The other input fields do not influence the sort order, as any valid
transactions cannot have two inputs with the same index and txid.

Reference Implementation

https://github.com/rustyrussell/bitcoin/tree/bip-in-out-ordering



From mark at friedenbach.org  Sat Jun  6 04:46:17 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Fri, 5 Jun 2015 21:46:17 -0700
Subject: [Bitcoin-development] [RFC] Canonical input and output ordering
 in transactions
In-Reply-To: <87k2vhfnx9.fsf@rustcorp.com.au>
References: <87k2vhfnx9.fsf@rustcorp.com.au>
Message-ID: <CAOG=w-sfpgciy9AzmtjEU5-uZY5KCAuS-SGsbff81w1dGVyBPg@mail.gmail.com>

Rusty, this doesn't play well with SIGHASH_SINGLE which is used in
assurance contracts among other things. Sometimes the ordering is set by
the signing logic itself...
On Jun 5, 2015 9:43 PM, "Rusty Russell" <rusty at rustcorp.com.au> wrote:

> Title: Canonical Input and Output Ordering
> Author: Rusty Russell <rusty at rustcorp.com.au>
> Discussions-To: "Bitcoin Dev" <bitcoin-development at lists.sourceforge.net>
> Status: Draft
> Type: Standards Track
> Created: 2015-06-06
>
> Abstract
>
> This BIP provides a canonical ordering of inputs and outputs when
> creating transactions.
>
> Motivation
>
> Most bitcoin wallet implementations randomize the outputs of
> transactions they create to avoid trivial linkage analysis (especially
> change outputs), however implementations have made mistakes in this area
> in the past.
>
> Using a canonical ordering has the same effect, but is simpler, more
> obvious if incorrect, and can eventually be enforced by IsStandard() and
> even a soft-fork to enforce it.
>
> Specification
>
> Inputs should be ordered like so:
>         index (lower value first)
>         txid (little endian order, lower byte first)
>
> Outputs should be ordered like so:
>         amount (lower value first)
>         script (starting from first byte, lower byte first, shorter wins)
>
> Rationale
>
> Any single wallet is already free to implement this, but if other
> wallets do not it would reduce privacy by making those transactions
> stand out.  Thus a BIP is appropriate, especially if this were to
> become an IsStandard() rule once widely adopted.
>
> Because integers are fast to compare, they're sorted first, before the
> lexographical ordering.
>
> The other input fields do not influence the sort order, as any valid
> transactions cannot have two inputs with the same index and txid.
>
> Reference Implementation
>
> https://github.com/rustyrussell/bitcoin/tree/bip-in-out-ordering
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150605/12c1d6ed/attachment.html>

From kristovatlas.lists at gmail.com  Sat Jun  6 06:24:47 2015
From: kristovatlas.lists at gmail.com (Kristov Atlas)
Date: Sat, 6 Jun 2015 02:24:47 -0400
Subject: [Bitcoin-development] Lexicographical Indexing of Transaction
 Inputs and Outputs
In-Reply-To: <44BE16F9-AB24-4A8E-BC7F-03A6C590FCE7@gmail.com>
References: <CAGH37SK0k1YUvadetyHcBGjzW+OHNFRmRwqsUDeHBGejUacigQ@mail.gmail.com>
	<44BE16F9-AB24-4A8E-BC7F-03A6C590FCE7@gmail.com>
Message-ID: <CAGH37SL3TA7BXd3Y+4F1Fd5N3ZW+LRLvkfppPsPn61ZVbZJOnQ@mail.gmail.com>

Hey Stephen,

Thanks for your feedback

On Fri, Jun 5, 2015 at 11:20 PM, Stephen <stephencalebmorse at gmail.com>
wrote:

>  - I think your explanation of sorting could be significantly shortened
> and clarified by simply saying that the TXIDs of inputs should be compared
> as uint256 integers.
>

I considered defining the comparison of txids in terms of integers;
however, I am concerned that this definition may be ambiguous when applied
to a variety of languages and platforms without a similar amount of
explanation as currently exists. For example, if a web wallet uses an API
to receive transaction information, this is traditionally expressed in
terms tx id strings rather than 256-bit integers. My intent is that wallets
can implement the algorithm however they wish, but should ensure that their
output is compliant with the BIP definition. IMHO the algorithm stated in
the BIP should target test cases rather than implementation, and should
leave as little room for ambiguity as possible.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/964566ef/attachment.html>

From gappleto97 at gmail.com  Sat Jun  6 06:28:35 2015
From: gappleto97 at gmail.com (gabe appleton)
Date: Sat, 6 Jun 2015 02:28:35 -0400
Subject: [Bitcoin-development] Meta suggestions for this block size
	debate
In-Reply-To: <CAM7BtUoMHE4EwJAFCfOino0UKU5B4-Wzswfvttqs8=mBayK1OA@mail.gmail.com>
References: <556CDB09.8050906@henricson.se>
	<CANJO25KUvYNzGLDjr=d_gUSKe0xAju+34W9B6jmcSjQvGXR=2g@mail.gmail.com>
	<CAEM=y+Xf9b1p-KB-PKzjtMirM8_WMbpMZuQyGyDv+6GM=0O9hA@mail.gmail.com>
	<CANJO25K+tG3uH+GH8i4PBjdk8KyJZDAunfwMmWedOJyZOk7wNw@mail.gmail.com>
	<CAM7BtUoMHE4EwJAFCfOino0UKU5B4-Wzswfvttqs8=mBayK1OA@mail.gmail.com>
Message-ID: <CANJO25L-r+3_kR8FD1EZ0F1_Cz9fUO5c8Fz=DW-yKZuONa4qkw@mail.gmail.com>

Yeah. We made a git repo instead, so we don't have to bother with the
exclusive-by-default wiki policies. It's linked in this email chain.

I'll be getting home tomorrow, so I should be able to start back up on
this. A few days from now we should throw this on /r/Bitcoin so we can get
some more public comment on it. They already gave me a few leads to chase.
On Jun 5, 2015 11:34 PM, "Pindar Wong" <pindar.wong at gmail.com> wrote:

> Gabe,
>
> Did you ever get an answer to this?
>
> I"ll have some time tomorrow to be able to help with some work on this and
> will need to do it myself anyways since I'm not sure I understand the
> nuances, where bitcoin XT fits into the scheme of things (or not) etc.
>
> I would have thought that there would be a testnet4 by now using 8mb
> blocks... but hey that's just me.
>
> p.
>
>
>
>
> On Tue, Jun 2, 2015 at 11:52 AM, gabe appleton <gappleto97 at gmail.com>
> wrote:
>
>> I don't have permission to create a page. If someone else does, I'll
>> happily get a framework started.
>>
>> On Mon, Jun 1, 2015 at 11:32 PM, Ethan Heilman <eth3rs at gmail.com> wrote:
>>
>>> I second this, I don't have time to read the large number of emails
>>> generated every day from the block size debate. A summary of the various
>>> positions and arguments would be extremely helpful.
>>>
>>> On Mon, Jun 1, 2015 at 11:02 PM, gabe appleton <gappleto97 at gmail.com>
>>> wrote:
>>>
>>>> Also, can we try to get a wiki page for the debate? That way we could
>>>> condense the information as much as possible. I'll be willing to assist if
>>>> the page gets approval.
>>>> On Jun 1, 2015 6:41 PM, "Mats Henricson" <mats at henricson.se> wrote:
>>>>
>>>>> Hi!
>>>>>
>>>>> My fingers have been itching many times now, this debate
>>>>> drives me nuts.
>>>>>
>>>>> I just wish all posters could follow two simple principles:
>>>>>
>>>>> 1. Read up. Yes. All of what has been written. Yes, it will
>>>>>    take many hours. But if you're rehashing what other
>>>>>    smarter people have said over and over before, you're
>>>>>    wasting hundreds of peoples time. Please don't.
>>>>>
>>>>> 2. Be helpful. Suggest alternatives. Just cristizising is
>>>>>    just destructive. If you want no change, then say so.
>>>>>
>>>>> Mats
>>>>>
>>>>>
>>>>> ------------------------------------------------------------------------------
>>>>> _______________________________________________
>>>>> Bitcoin-development mailing list
>>>>> Bitcoin-development at lists.sourceforge.net
>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>
>>>>
>>>>
>>>> ------------------------------------------------------------------------------
>>>>
>>>> _______________________________________________
>>>> Bitcoin-development mailing list
>>>> Bitcoin-development at lists.sourceforge.net
>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>
>>>>
>>>
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/3995a234/attachment.html>

From pindar.wong at gmail.com  Sat Jun  6 06:34:12 2015
From: pindar.wong at gmail.com (Pindar Wong)
Date: Sat, 6 Jun 2015 14:34:12 +0800
Subject: [Bitcoin-development] Meta suggestions for this block size
	debate
In-Reply-To: <CANJO25L-r+3_kR8FD1EZ0F1_Cz9fUO5c8Fz=DW-yKZuONa4qkw@mail.gmail.com>
References: <556CDB09.8050906@henricson.se>
	<CANJO25KUvYNzGLDjr=d_gUSKe0xAju+34W9B6jmcSjQvGXR=2g@mail.gmail.com>
	<CAEM=y+Xf9b1p-KB-PKzjtMirM8_WMbpMZuQyGyDv+6GM=0O9hA@mail.gmail.com>
	<CANJO25K+tG3uH+GH8i4PBjdk8KyJZDAunfwMmWedOJyZOk7wNw@mail.gmail.com>
	<CAM7BtUoMHE4EwJAFCfOino0UKU5B4-Wzswfvttqs8=mBayK1OA@mail.gmail.com>
	<CANJO25L-r+3_kR8FD1EZ0F1_Cz9fUO5c8Fz=DW-yKZuONa4qkw@mail.gmail.com>
Message-ID: <CAM7BtUqN6rYrCrH6Ni5N+ENAwZ85YO53W0oEEkoqkBgsRPpinA@mail.gmail.com>

Thanks Gabe.

https://github.com/gappleto97/BlockSizeDebate

github's reachable via vpn.

p.


On Sat, Jun 6, 2015 at 2:28 PM, gabe appleton <gappleto97 at gmail.com> wrote:

> Yeah. We made a git repo instead, so we don't have to bother with the
> exclusive-by-default wiki policies. It's linked in this email chain.
>
> I'll be getting home tomorrow, so I should be able to start back up on
> this. A few days from now we should throw this on /r/Bitcoin so we can get
> some more public comment on it. They already gave me a few leads to chase.
> On Jun 5, 2015 11:34 PM, "Pindar Wong" <pindar.wong at gmail.com> wrote:
>
>> Gabe,
>>
>> Did you ever get an answer to this?
>>
>> I"ll have some time tomorrow to be able to help with some work on this
>> and will need to do it myself anyways since I'm not sure I understand the
>> nuances, where bitcoin XT fits into the scheme of things (or not) etc.
>>
>> I would have thought that there would be a testnet4 by now using 8mb
>> blocks... but hey that's just me.
>>
>> p.
>>
>>
>>
>>
>> On Tue, Jun 2, 2015 at 11:52 AM, gabe appleton <gappleto97 at gmail.com>
>> wrote:
>>
>>> I don't have permission to create a page. If someone else does, I'll
>>> happily get a framework started.
>>>
>>> On Mon, Jun 1, 2015 at 11:32 PM, Ethan Heilman <eth3rs at gmail.com> wrote:
>>>
>>>> I second this, I don't have time to read the large number of emails
>>>> generated every day from the block size debate. A summary of the various
>>>> positions and arguments would be extremely helpful.
>>>>
>>>> On Mon, Jun 1, 2015 at 11:02 PM, gabe appleton <gappleto97 at gmail.com>
>>>> wrote:
>>>>
>>>>> Also, can we try to get a wiki page for the debate? That way we could
>>>>> condense the information as much as possible. I'll be willing to assist if
>>>>> the page gets approval.
>>>>> On Jun 1, 2015 6:41 PM, "Mats Henricson" <mats at henricson.se> wrote:
>>>>>
>>>>>> Hi!
>>>>>>
>>>>>> My fingers have been itching many times now, this debate
>>>>>> drives me nuts.
>>>>>>
>>>>>> I just wish all posters could follow two simple principles:
>>>>>>
>>>>>> 1. Read up. Yes. All of what has been written. Yes, it will
>>>>>>    take many hours. But if you're rehashing what other
>>>>>>    smarter people have said over and over before, you're
>>>>>>    wasting hundreds of peoples time. Please don't.
>>>>>>
>>>>>> 2. Be helpful. Suggest alternatives. Just cristizising is
>>>>>>    just destructive. If you want no change, then say so.
>>>>>>
>>>>>> Mats
>>>>>>
>>>>>>
>>>>>> ------------------------------------------------------------------------------
>>>>>> _______________________________________________
>>>>>> Bitcoin-development mailing list
>>>>>> Bitcoin-development at lists.sourceforge.net
>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>>
>>>>>
>>>>>
>>>>> ------------------------------------------------------------------------------
>>>>>
>>>>> _______________________________________________
>>>>> Bitcoin-development mailing list
>>>>> Bitcoin-development at lists.sourceforge.net
>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>
>>>>>
>>>>
>>>
>>>
>>> ------------------------------------------------------------------------------
>>>
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/b05fb4c8/attachment.html>

From gappleto97 at gmail.com  Sat Jun  6 06:37:26 2015
From: gappleto97 at gmail.com (gabe appleton)
Date: Sat, 6 Jun 2015 02:37:26 -0400
Subject: [Bitcoin-development] Meta suggestions for this block size
	debate
In-Reply-To: <CAM7BtUqN6rYrCrH6Ni5N+ENAwZ85YO53W0oEEkoqkBgsRPpinA@mail.gmail.com>
References: <556CDB09.8050906@henricson.se>
	<CANJO25KUvYNzGLDjr=d_gUSKe0xAju+34W9B6jmcSjQvGXR=2g@mail.gmail.com>
	<CAEM=y+Xf9b1p-KB-PKzjtMirM8_WMbpMZuQyGyDv+6GM=0O9hA@mail.gmail.com>
	<CANJO25K+tG3uH+GH8i4PBjdk8KyJZDAunfwMmWedOJyZOk7wNw@mail.gmail.com>
	<CAM7BtUoMHE4EwJAFCfOino0UKU5B4-Wzswfvttqs8=mBayK1OA@mail.gmail.com>
	<CANJO25L-r+3_kR8FD1EZ0F1_Cz9fUO5c8Fz=DW-yKZuONa4qkw@mail.gmail.com>
	<CAM7BtUqN6rYrCrH6Ni5N+ENAwZ85YO53W0oEEkoqkBgsRPpinA@mail.gmail.com>
Message-ID: <CANJO25LUXBMxAGBruxt6kNkydfJZdJf_nuuvtO+fZ5CTEWV22g@mail.gmail.com>

Please use the one it's originally forked from that Ethan made. I don't
want to be the one who sorts through what's valid and what isn't, as I
don't have as low-level an understanding as I'd like. I don't feel
qualified.
On Jun 6, 2015 2:34 AM, "Pindar Wong" <pindar.wong at gmail.com> wrote:

> Thanks Gabe.
>
> https://github.com/gappleto97/BlockSizeDebate
>
> github's reachable via vpn.
>
> p.
>
>
> On Sat, Jun 6, 2015 at 2:28 PM, gabe appleton <gappleto97 at gmail.com>
> wrote:
>
>> Yeah. We made a git repo instead, so we don't have to bother with the
>> exclusive-by-default wiki policies. It's linked in this email chain.
>>
>> I'll be getting home tomorrow, so I should be able to start back up on
>> this. A few days from now we should throw this on /r/Bitcoin so we can get
>> some more public comment on it. They already gave me a few leads to chase.
>> On Jun 5, 2015 11:34 PM, "Pindar Wong" <pindar.wong at gmail.com> wrote:
>>
>>> Gabe,
>>>
>>> Did you ever get an answer to this?
>>>
>>> I"ll have some time tomorrow to be able to help with some work on this
>>> and will need to do it myself anyways since I'm not sure I understand the
>>> nuances, where bitcoin XT fits into the scheme of things (or not) etc.
>>>
>>> I would have thought that there would be a testnet4 by now using 8mb
>>> blocks... but hey that's just me.
>>>
>>> p.
>>>
>>>
>>>
>>>
>>> On Tue, Jun 2, 2015 at 11:52 AM, gabe appleton <gappleto97 at gmail.com>
>>> wrote:
>>>
>>>> I don't have permission to create a page. If someone else does, I'll
>>>> happily get a framework started.
>>>>
>>>> On Mon, Jun 1, 2015 at 11:32 PM, Ethan Heilman <eth3rs at gmail.com>
>>>> wrote:
>>>>
>>>>> I second this, I don't have time to read the large number of emails
>>>>> generated every day from the block size debate. A summary of the various
>>>>> positions and arguments would be extremely helpful.
>>>>>
>>>>> On Mon, Jun 1, 2015 at 11:02 PM, gabe appleton <gappleto97 at gmail.com>
>>>>> wrote:
>>>>>
>>>>>> Also, can we try to get a wiki page for the debate? That way we could
>>>>>> condense the information as much as possible. I'll be willing to assist if
>>>>>> the page gets approval.
>>>>>> On Jun 1, 2015 6:41 PM, "Mats Henricson" <mats at henricson.se> wrote:
>>>>>>
>>>>>>> Hi!
>>>>>>>
>>>>>>> My fingers have been itching many times now, this debate
>>>>>>> drives me nuts.
>>>>>>>
>>>>>>> I just wish all posters could follow two simple principles:
>>>>>>>
>>>>>>> 1. Read up. Yes. All of what has been written. Yes, it will
>>>>>>>    take many hours. But if you're rehashing what other
>>>>>>>    smarter people have said over and over before, you're
>>>>>>>    wasting hundreds of peoples time. Please don't.
>>>>>>>
>>>>>>> 2. Be helpful. Suggest alternatives. Just cristizising is
>>>>>>>    just destructive. If you want no change, then say so.
>>>>>>>
>>>>>>> Mats
>>>>>>>
>>>>>>>
>>>>>>> ------------------------------------------------------------------------------
>>>>>>> _______________________________________________
>>>>>>> Bitcoin-development mailing list
>>>>>>> Bitcoin-development at lists.sourceforge.net
>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>>>
>>>>>>
>>>>>>
>>>>>> ------------------------------------------------------------------------------
>>>>>>
>>>>>> _______________________________________________
>>>>>> Bitcoin-development mailing list
>>>>>> Bitcoin-development at lists.sourceforge.net
>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>>
>>>>>>
>>>>>
>>>>
>>>>
>>>> ------------------------------------------------------------------------------
>>>>
>>>> _______________________________________________
>>>> Bitcoin-development mailing list
>>>> Bitcoin-development at lists.sourceforge.net
>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>
>>>>
>>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/5cd23952/attachment.html>

From pindar.wong at gmail.com  Sat Jun  6 06:39:48 2015
From: pindar.wong at gmail.com (Pindar Wong)
Date: Sat, 6 Jun 2015 14:39:48 +0800
Subject: [Bitcoin-development] Meta suggestions for this block size
	debate
In-Reply-To: <CANJO25LUXBMxAGBruxt6kNkydfJZdJf_nuuvtO+fZ5CTEWV22g@mail.gmail.com>
References: <556CDB09.8050906@henricson.se>
	<CANJO25KUvYNzGLDjr=d_gUSKe0xAju+34W9B6jmcSjQvGXR=2g@mail.gmail.com>
	<CAEM=y+Xf9b1p-KB-PKzjtMirM8_WMbpMZuQyGyDv+6GM=0O9hA@mail.gmail.com>
	<CANJO25K+tG3uH+GH8i4PBjdk8KyJZDAunfwMmWedOJyZOk7wNw@mail.gmail.com>
	<CAM7BtUoMHE4EwJAFCfOino0UKU5B4-Wzswfvttqs8=mBayK1OA@mail.gmail.com>
	<CANJO25L-r+3_kR8FD1EZ0F1_Cz9fUO5c8Fz=DW-yKZuONa4qkw@mail.gmail.com>
	<CAM7BtUqN6rYrCrH6Ni5N+ENAwZ85YO53W0oEEkoqkBgsRPpinA@mail.gmail.com>
	<CANJO25LUXBMxAGBruxt6kNkydfJZdJf_nuuvtO+fZ5CTEWV22g@mail.gmail.com>
Message-ID: <CAM7BtUr7XXT4vctroxcb7kqGu7faWx-KY-fK=KKac1d0bkcXYw@mail.gmail.com>

OK... sorry for my confusion.

https://github.com/EthanHeilman/BlockSizeDebate

it is.

p.


On Sat, Jun 6, 2015 at 2:37 PM, gabe appleton <gappleto97 at gmail.com> wrote:

> Please use the one it's originally forked from that Ethan made. I don't
> want to be the one who sorts through what's valid and what isn't, as I
> don't have as low-level an understanding as I'd like. I don't feel
> qualified.
> On Jun 6, 2015 2:34 AM, "Pindar Wong" <pindar.wong at gmail.com> wrote:
>
>> Thanks Gabe.
>>
>> https://github.com/gappleto97/BlockSizeDebate
>>
>> github's reachable via vpn.
>>
>> p.
>>
>>
>> On Sat, Jun 6, 2015 at 2:28 PM, gabe appleton <gappleto97 at gmail.com>
>> wrote:
>>
>>> Yeah. We made a git repo instead, so we don't have to bother with the
>>> exclusive-by-default wiki policies. It's linked in this email chain.
>>>
>>> I'll be getting home tomorrow, so I should be able to start back up on
>>> this. A few days from now we should throw this on /r/Bitcoin so we can get
>>> some more public comment on it. They already gave me a few leads to chase.
>>> On Jun 5, 2015 11:34 PM, "Pindar Wong" <pindar.wong at gmail.com> wrote:
>>>
>>>> Gabe,
>>>>
>>>> Did you ever get an answer to this?
>>>>
>>>> I"ll have some time tomorrow to be able to help with some work on this
>>>> and will need to do it myself anyways since I'm not sure I understand the
>>>> nuances, where bitcoin XT fits into the scheme of things (or not) etc.
>>>>
>>>> I would have thought that there would be a testnet4 by now using 8mb
>>>> blocks... but hey that's just me.
>>>>
>>>> p.
>>>>
>>>>
>>>>
>>>>
>>>> On Tue, Jun 2, 2015 at 11:52 AM, gabe appleton <gappleto97 at gmail.com>
>>>> wrote:
>>>>
>>>>> I don't have permission to create a page. If someone else does, I'll
>>>>> happily get a framework started.
>>>>>
>>>>> On Mon, Jun 1, 2015 at 11:32 PM, Ethan Heilman <eth3rs at gmail.com>
>>>>> wrote:
>>>>>
>>>>>> I second this, I don't have time to read the large number of emails
>>>>>> generated every day from the block size debate. A summary of the various
>>>>>> positions and arguments would be extremely helpful.
>>>>>>
>>>>>> On Mon, Jun 1, 2015 at 11:02 PM, gabe appleton <gappleto97 at gmail.com>
>>>>>> wrote:
>>>>>>
>>>>>>> Also, can we try to get a wiki page for the debate? That way we
>>>>>>> could condense the information as much as possible. I'll be willing to
>>>>>>> assist if the page gets approval.
>>>>>>> On Jun 1, 2015 6:41 PM, "Mats Henricson" <mats at henricson.se> wrote:
>>>>>>>
>>>>>>>> Hi!
>>>>>>>>
>>>>>>>> My fingers have been itching many times now, this debate
>>>>>>>> drives me nuts.
>>>>>>>>
>>>>>>>> I just wish all posters could follow two simple principles:
>>>>>>>>
>>>>>>>> 1. Read up. Yes. All of what has been written. Yes, it will
>>>>>>>>    take many hours. But if you're rehashing what other
>>>>>>>>    smarter people have said over and over before, you're
>>>>>>>>    wasting hundreds of peoples time. Please don't.
>>>>>>>>
>>>>>>>> 2. Be helpful. Suggest alternatives. Just cristizising is
>>>>>>>>    just destructive. If you want no change, then say so.
>>>>>>>>
>>>>>>>> Mats
>>>>>>>>
>>>>>>>>
>>>>>>>> ------------------------------------------------------------------------------
>>>>>>>> _______________________________________________
>>>>>>>> Bitcoin-development mailing list
>>>>>>>> Bitcoin-development at lists.sourceforge.net
>>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> ------------------------------------------------------------------------------
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> Bitcoin-development mailing list
>>>>>>> Bitcoin-development at lists.sourceforge.net
>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>>
>>>>> ------------------------------------------------------------------------------
>>>>>
>>>>> _______________________________________________
>>>>> Bitcoin-development mailing list
>>>>> Bitcoin-development at lists.sourceforge.net
>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>
>>>>>
>>>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/481091c5/attachment.html>

From gappleto97 at gmail.com  Sat Jun  6 06:41:40 2015
From: gappleto97 at gmail.com (gabe appleton)
Date: Sat, 6 Jun 2015 02:41:40 -0400
Subject: [Bitcoin-development] Meta suggestions for this block size
	debate
In-Reply-To: <CAM7BtUr7XXT4vctroxcb7kqGu7faWx-KY-fK=KKac1d0bkcXYw@mail.gmail.com>
References: <556CDB09.8050906@henricson.se>
	<CANJO25KUvYNzGLDjr=d_gUSKe0xAju+34W9B6jmcSjQvGXR=2g@mail.gmail.com>
	<CAEM=y+Xf9b1p-KB-PKzjtMirM8_WMbpMZuQyGyDv+6GM=0O9hA@mail.gmail.com>
	<CANJO25K+tG3uH+GH8i4PBjdk8KyJZDAunfwMmWedOJyZOk7wNw@mail.gmail.com>
	<CAM7BtUoMHE4EwJAFCfOino0UKU5B4-Wzswfvttqs8=mBayK1OA@mail.gmail.com>
	<CANJO25L-r+3_kR8FD1EZ0F1_Cz9fUO5c8Fz=DW-yKZuONa4qkw@mail.gmail.com>
	<CAM7BtUqN6rYrCrH6Ni5N+ENAwZ85YO53W0oEEkoqkBgsRPpinA@mail.gmail.com>
	<CANJO25LUXBMxAGBruxt6kNkydfJZdJf_nuuvtO+fZ5CTEWV22g@mail.gmail.com>
	<CAM7BtUr7XXT4vctroxcb7kqGu7faWx-KY-fK=KKac1d0bkcXYw@mail.gmail.com>
Message-ID: <CANJO25KvK9imRngtHTZdFMFHY8Ua-+D6gj+nfgXebBVBKVud4A@mail.gmail.com>

Nothing to apologize for. And yes, that's the correct one.
On Jun 6, 2015 2:39 AM, "Pindar Wong" <pindar.wong at gmail.com> wrote:

> OK... sorry for my confusion.
>
> https://github.com/EthanHeilman/BlockSizeDebate
>
> it is.
>
> p.
>
>
> On Sat, Jun 6, 2015 at 2:37 PM, gabe appleton <gappleto97 at gmail.com>
> wrote:
>
>> Please use the one it's originally forked from that Ethan made. I don't
>> want to be the one who sorts through what's valid and what isn't, as I
>> don't have as low-level an understanding as I'd like. I don't feel
>> qualified.
>> On Jun 6, 2015 2:34 AM, "Pindar Wong" <pindar.wong at gmail.com> wrote:
>>
>>> Thanks Gabe.
>>>
>>> https://github.com/gappleto97/BlockSizeDebate
>>>
>>> github's reachable via vpn.
>>>
>>> p.
>>>
>>>
>>> On Sat, Jun 6, 2015 at 2:28 PM, gabe appleton <gappleto97 at gmail.com>
>>> wrote:
>>>
>>>> Yeah. We made a git repo instead, so we don't have to bother with the
>>>> exclusive-by-default wiki policies. It's linked in this email chain.
>>>>
>>>> I'll be getting home tomorrow, so I should be able to start back up on
>>>> this. A few days from now we should throw this on /r/Bitcoin so we can get
>>>> some more public comment on it. They already gave me a few leads to chase.
>>>> On Jun 5, 2015 11:34 PM, "Pindar Wong" <pindar.wong at gmail.com> wrote:
>>>>
>>>>> Gabe,
>>>>>
>>>>> Did you ever get an answer to this?
>>>>>
>>>>> I"ll have some time tomorrow to be able to help with some work on this
>>>>> and will need to do it myself anyways since I'm not sure I understand the
>>>>> nuances, where bitcoin XT fits into the scheme of things (or not) etc.
>>>>>
>>>>> I would have thought that there would be a testnet4 by now using 8mb
>>>>> blocks... but hey that's just me.
>>>>>
>>>>> p.
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> On Tue, Jun 2, 2015 at 11:52 AM, gabe appleton <gappleto97 at gmail.com>
>>>>> wrote:
>>>>>
>>>>>> I don't have permission to create a page. If someone else does, I'll
>>>>>> happily get a framework started.
>>>>>>
>>>>>> On Mon, Jun 1, 2015 at 11:32 PM, Ethan Heilman <eth3rs at gmail.com>
>>>>>> wrote:
>>>>>>
>>>>>>> I second this, I don't have time to read the large number of emails
>>>>>>> generated every day from the block size debate. A summary of the various
>>>>>>> positions and arguments would be extremely helpful.
>>>>>>>
>>>>>>> On Mon, Jun 1, 2015 at 11:02 PM, gabe appleton <gappleto97 at gmail.com
>>>>>>> > wrote:
>>>>>>>
>>>>>>>> Also, can we try to get a wiki page for the debate? That way we
>>>>>>>> could condense the information as much as possible. I'll be willing to
>>>>>>>> assist if the page gets approval.
>>>>>>>> On Jun 1, 2015 6:41 PM, "Mats Henricson" <mats at henricson.se> wrote:
>>>>>>>>
>>>>>>>>> Hi!
>>>>>>>>>
>>>>>>>>> My fingers have been itching many times now, this debate
>>>>>>>>> drives me nuts.
>>>>>>>>>
>>>>>>>>> I just wish all posters could follow two simple principles:
>>>>>>>>>
>>>>>>>>> 1. Read up. Yes. All of what has been written. Yes, it will
>>>>>>>>>    take many hours. But if you're rehashing what other
>>>>>>>>>    smarter people have said over and over before, you're
>>>>>>>>>    wasting hundreds of peoples time. Please don't.
>>>>>>>>>
>>>>>>>>> 2. Be helpful. Suggest alternatives. Just cristizising is
>>>>>>>>>    just destructive. If you want no change, then say so.
>>>>>>>>>
>>>>>>>>> Mats
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> ------------------------------------------------------------------------------
>>>>>>>>> _______________________________________________
>>>>>>>>> Bitcoin-development mailing list
>>>>>>>>> Bitcoin-development at lists.sourceforge.net
>>>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> ------------------------------------------------------------------------------
>>>>>>>>
>>>>>>>> _______________________________________________
>>>>>>>> Bitcoin-development mailing list
>>>>>>>> Bitcoin-development at lists.sourceforge.net
>>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>>
>>>>>> ------------------------------------------------------------------------------
>>>>>>
>>>>>> _______________________________________________
>>>>>> Bitcoin-development mailing list
>>>>>> Bitcoin-development at lists.sourceforge.net
>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>>
>>>>>>
>>>>>
>>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/a055a668/attachment.html>

From rusty at rustcorp.com.au  Sat Jun  6 06:44:07 2015
From: rusty at rustcorp.com.au (Rusty Russell)
Date: Sat, 06 Jun 2015 16:14:07 +0930
Subject: [Bitcoin-development] [RFC] Canonical input and output ordering
	in transactions
In-Reply-To: <CAOG=w-sfpgciy9AzmtjEU5-uZY5KCAuS-SGsbff81w1dGVyBPg@mail.gmail.com>
References: <87k2vhfnx9.fsf@rustcorp.com.au>
	<CAOG=w-sfpgciy9AzmtjEU5-uZY5KCAuS-SGsbff81w1dGVyBPg@mail.gmail.com>
Message-ID: <87h9qlfia0.fsf@rustcorp.com.au>

Mark Friedenbach <mark at friedenbach.org> writes:
> Rusty, this doesn't play well with SIGHASH_SINGLE which is used in
> assurance contracts among other things. Sometimes the ordering is set by
> the signing logic itself...

Ah, I forgot about that particular wart. Yech.  Implies that you can
order inputs or outputs, not both.

Something like "outputs must be in order, inputs which do not
CHECK(MULTI)SIG_(VERIFY) a SIGHASH_SINGLE sig must be in order with
respect to each other".  But that's much less trivial since it implies
script evaluation.

In other news, I noticed Kristov Atlas's concurrent proposal just after
I posted this (via reddit).  He used far more words, but didn't note
this issue either AFAICT.

Thanks!
Rusty.



From laanwj at gmail.com  Sat Jun  6 08:24:48 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Sat, 6 Jun 2015 10:24:48 +0200
Subject: [Bitcoin-development] [RFC] Canonical input and output ordering
 in transactions
In-Reply-To: <CAOG=w-sfpgciy9AzmtjEU5-uZY5KCAuS-SGsbff81w1dGVyBPg@mail.gmail.com>
References: <87k2vhfnx9.fsf@rustcorp.com.au>
	<CAOG=w-sfpgciy9AzmtjEU5-uZY5KCAuS-SGsbff81w1dGVyBPg@mail.gmail.com>
Message-ID: <20150606082447.GA12749@amethyst.visucore.com>

On Fri, Jun 05, 2015 at 09:46:17PM -0700, Mark Friedenbach wrote:
> Rusty, this doesn't play well with SIGHASH_SINGLE which is used in
> assurance contracts among other things. Sometimes the ordering is set by
> the signing logic itself...

But in that case (unconstrained) randomization can't be used either. This is posed as an alternative to randomization. So in that regard, the proposal still makes sense.
I think this move to verifyable, deterministic methods where possible is good.

Wladimir



From mark at friedenbach.org  Sat Jun  6 09:45:23 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Sat, 6 Jun 2015 02:45:23 -0700
Subject: [Bitcoin-development] [RFC] Canonical input and output ordering
 in transactions
In-Reply-To: <20150606082447.GA12749@amethyst.visucore.com>
References: <87k2vhfnx9.fsf@rustcorp.com.au>
	<CAOG=w-sfpgciy9AzmtjEU5-uZY5KCAuS-SGsbff81w1dGVyBPg@mail.gmail.com>
	<20150606082447.GA12749@amethyst.visucore.com>
Message-ID: <CAOG=w-v_wHdTEzRn2ej292c4x72C0d4bmp40wrGRmwMsXFi+EQ@mail.gmail.com>

Certainly, but I would drop discussion of IsStandard or consensus rules.
On Jun 6, 2015 1:24 AM, "Wladimir J. van der Laan" <laanwj at gmail.com> wrote:

> On Fri, Jun 05, 2015 at 09:46:17PM -0700, Mark Friedenbach wrote:
> > Rusty, this doesn't play well with SIGHASH_SINGLE which is used in
> > assurance contracts among other things. Sometimes the ordering is set by
> > the signing logic itself...
>
> But in that case (unconstrained) randomization can't be used either. This
> is posed as an alternative to randomization. So in that regard, the
> proposal still makes sense.
> I think this move to verifyable, deterministic methods where possible is
> good.
>
> Wladimir
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/11ad8bc7/attachment.html>

From kalle at rosenbaum.se  Sat Jun  6 14:35:17 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Sat, 6 Jun 2015 16:35:17 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
Message-ID: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>

Hi

Following earlier posts on Proof of Payment I'm now proposing the following
BIP (To read it formatted instead, go to
https://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP).

Regards,
Kalle Rosenbaum

<pre>
  BIP: <BIP number>
  Title: Proof of Payment
  Author: Kalle Rosenbaum <kalle at rosenbaum.se>
  Status: Draft
  Type: Standards Track
  Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>
</pre>

== Abstract ==

This BIP describes how a wallet can prove to a server that it has the
ability to sign a certain transaction.

== Motivation ==

There are several scenarios in which it would be useful to prove that you
have paid for something. For example:

* A pre-paid hotel room where your PoP functions as a key to the door.
* An online video rental service where you pay for a video and watch it on
any device.
* An ad-sign where you pay in advance for e.g. 2 weeks exclusivity. During
this period you can upload new content to the sign whenever you like using
PoP.
* Log in to a pay site using a PoP.
* A parking lot you pay for monthly and the car authenticates itself using
PoP.
* A lottery where all participants pay to the same address, and the winner
is selected among the transactions to that address. You exchange the prize
for a PoP for the winning transaction.

With Proof of Payment, these use cases can be achieved without any personal
information (user name, password, e-mail address, etc) being involved.

== Rationale ==

Desirable properties:

# A PoP should be generated on demand.
# It should only be usable once to avoid issues due to theft.
# It should be able to create a PoP for any payment, regardless of script
type (P2SH, P2PKH, etc.).
# It should prove that you have enough credentials to unlock all the inputs
of the proven transaction.
# It should be easy to implement by wallets and servers to ease adoption.

Current methods of proving a payment:

* In BIP0070, the PaymentRequest together with the transactions fulfilling
the request makes some sort of proof. However, it does not meet 1, 2 or 4
and it obviously only meets 3 if the payment is made through BIP0070. Also,
there's no standard way to request/provide the proof. If standardized it
would probably meet 5.
* Signing messages, chosen by the server, with the private keys used to
sign the transaction. This could meet 1 and 2 but probably not 3. This is
not standardized either. 4 Could be met if designed so.

If the script type is P2SH, any satisfying script should do, just like for
a payment. For M-of-N multisig scripts, that would mean that any set of M
keys should be sufficient, not neccesarily the same set of M keys that
signed the transaction. This is important because strictly demanding the
same set of M keys would undermine the purpose of a multisig address.

== Specification ==

=== Data structure ===

A proof of payment for a transaction T, here called PoP(T), is used to
prove that one has ownership of the credentials needed to unlock all the
inputs of T. It has the exact same structure as a bitcoin transaction with
the same inputs and outputs as T and in the same order as in T. There is
also one OP_RETURN output inserted at index 0, here called the pop output.
This output must have the following format:

 OP_RETURN <version> <txid> <nonce>

{|
! Field        !! Size [B] !! Description
|-
| &lt;version> || 2        || Version, little endian, currently 0x01 0x00
|-
| &lt;txid>    || 32       || The transaction to prove
|-
| &lt;nonce>   || 6        || Random data
|}

The value of the pop output is set to the same value as the transaction fee
of T. Also, if the outputs of T contains an OP_RETURN output, that output
must not be included in the PoP because there can only be one OP_RETURN
output in a transaction. The value of that OP_RETURN output is instead
added to the value of the pop output.

An illustration of the PoP data structure and its original payment is shown
below.

<pre>
  T
 +----------------------------------------------+
 |inputs       | outputs                        |
 |       Value | Value   Script                 |
 +----------------------------------------------+
 |input0 1     |     0   pay to A               |
 |input1 3     |     2   OP_RETURN <some data>  |
 |input2 4     |     1   pay to B               |
 |             |     4   pay to C               |
 +----------------------------------------------+

  PoP(T)
 +----------------------------------------------------------+
 |inputs       | outputs                                    |
 |       Value | Value   Script                             |
 +----------------------------------------------------------+
 |input0 1     |     3   OP_RETURN <version> <txid> <nonce> |
 |input1 3     |     0   pay to A                           |
 |input2 4     |     1   pay to B                           |
 |             |     4   pay to C                           |
 +----------------------------------------------------------+
</pre>

The PoP is signed using the same signing process that is used for bitcoin
transactions.

The purpose of the nonce is to make it harder to use a stolen PoP; Once the
PoP has reached the server, that PoP is useless since the server will
generate a new nonce for every PoP request.

Since a PoP is indistinguishable from a bitcoin transaction, there is a
risk that it, accidently or maliciously, enters the bitcoin p2p network. If
T is still unconfirmed, or if a reorg takes place, chances are that PoP(T)
ends up in a block, invalidating T. Therefore it is important that the
outputs of the PoP are the same as in T. The zero transaction fee in PoP(T)
is to minimize the incentives for miners to select PoP(T) for inclusion.

=== Process ===

# A proof of payment request is sent from the server to the wallet. The PoP
request contains:
## a random nonce
## a destination where to send the PoP, for example a https URL
## data hinting the wallet which transaction to create a proof for. For
example:
##* txid, if known by the server
##* PaymentRequest.PaymentDetails.merchant_data (in case of a BIP0070
payment)
##* amount, label, message or other information from a BIP0021 URL
# The wallet identifies a transaction T, if possible. Otherwise it asks the
user to select among the ones that match the hints in 1.iii.
# The wallet creates an unsigned PoP (UPoP) for T, and asks the user to
sign it.
# The user confirms
# The UPoP(T) is signed by the wallet, creating PoP(T).
# The PoP is sent to the destination in 1.ii.
# The server receiving the PoP validates it and responds with ?valid? or
?invalid?.
# The wallet displays the response in some way to the user.

'''Remarks:'''

* The method of transferring the PoP request at step 1 is not specified
here. Instead that is specified in separate specifications. See [btcpop
scheme BIP](btcpop scheme BIP).
* The nonce must be randomly generated by the server for every new PoP
request.

=== Validating a PoP ===

The server needs to validate the PoP and reply with "valid" or "invalid".
That process is outlined below. If any step fails, the validation is
aborted and "invalid" is returned:

# Check the format of the PoP. It must pass normal transaction checks,
except that the inputs may already be spent.
# Check the PoP output at index 0. It must conform to the OP_RETURN output
format outlined above.
# Check that the rest of the outputs exactly corresponds to the outputs of
T and that they appear in the same order as in T. An exception to this is
that any OP_RETURN outputs of T must not be included in the PoP. All output
value from the OP_RETURN must instead be included in the PoP output.
# Check that the nonce is the same as the one you requested.
# Check that the inputs of the PoP are exactly the same as in transaction
T, and in the same order.
# Check the scripts of all the inputs, as would be done on a normal
transaction.
# Check that the txid in the PoP output is the transaction you actually
want proof for. If you don?t know exactly what transaction you want proof
for, check that the transaction actually pays for the product/service you
deliver.
# Return "valid".

== Security considerations ==

* Someone can intercept the PoP-request and change the PoP destination so
that the user sends the PoP to the bad actor.
* Someone can intercept the PoP-request and change for example the txid to
trick the user to sign a PoP for another transaction than the intended.
This can of course be avoided if the user is actually looking at the UPoP
before signing it. The bad actor could also set hints for a transaction,
existing or not, that the user didn?t make, resulting in a broken service.
* Someone can steal a PoP and try to use the service hoping to get a
matching nonce. Probability per try: 1/(2^48). The server should have a
mechanism for detecting a brute force attack of this kind, or at least slow
down the process by delaying the PoP request by some 100 ms or so.
* Even if a wallet has no funds it might still be valuable as a generator
for PoPs. This makes it important to keep the security of the wallet after
it has been emptied.
* Transaction malleability may cause the server to have another transaction
id than the wallet for the payment. In that case the wallet will not be
able to prove the transaction for the server. Wallets should not rely on
the transaction id of the outgoing transaction. Instead it should listen
for the transaction on the network and put that in its list of transactions.

The first two issues are the same attack vector as for traditional, ie
BIP0021, bitcoin payments. They could be mitigated by using secure
connections.

== Reference implementation ==

[https://github.com/kallerosenbaum/poppoc poppoc on GitHub]

[https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]

== References ==

[https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki BIP0021]:
URI Scheme

[https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki BIP0070]:
Payment Protocol

[[btcpop scheme BIP]]
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/3aae1db3/attachment.html>

From kalle at rosenbaum.se  Sat Jun  6 14:35:38 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Sat, 6 Jun 2015 16:35:38 +0200
Subject: [Bitcoin-development] BIP for PoP URI scheme
Message-ID: <CAPswA9yb4S8X-_g+7JwwTL5teJCUHhAhaeR=aKfxHGdq56C5Bw@mail.gmail.com>

Hi

Following earlier posts on Proof of Payment I'm now proposing the following
BIP for a Proof of Payment URI scheme (To read it formatted instead, go to
https://github.com/kallerosenbaum/poppoc/wiki/btcpop-scheme-BIP).

Regards,
Kalle Rosenbaum

<pre>
  BIP: <BIP number>
  Title: Proof of Payment URI scheme
  Author: Kalle Rosenbaum <kalle at rosenbaum.se>
  Status: Draft
  Type: Standards Track
  Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>
</pre>

== Abstract ==

This is a proposal for a URI scheme to be used in the Proof of Payment
process.

== Motivation ==

To make a Proof of Payment, the party that wants the proof needs to
transfer a Proof of Payment request to the wallet software of the
other party. To facilitate that transfer, a new URI scheme
representing the PoP request is proposed. This URI can then be encoded
in QR images or sent over NFC in order to transfer it to the wallet.

== Specification ==

The specification is the same as BIP0021, with the following
differences:

* The URI scheme is <tt>btcpop</tt> instead of <tt>bitcoin</tt>
* The path component, i.e. the address part, is always empty.
* A mandatory <tt>p</tt> parameter whose value contains the destination for
the PoP. This could for example be a <tt>https:</tt> URL or a <tt>mailto:</tt>
URI.
* A mandatory <tt>n</tt> parameter representing the nonce, base58 encoded.
* An optional <tt>txid</tt> parameter containing the Base58 encoded hash of
the transaction to prove.

Just as in BIP0021, elements of the query component may contain
characters outside the valid range. These must first be encoded
according to UTF-8, and then each octet of the corresponding UTF-8
sequence must be percent-encoded as described in RFC 3986.

All parameters except <tt>p</tt> and <tt>n</tt> are hints to the
wallet on which transaction to create a PoP for.

The extensibility of BIP0021 applies to this scheme as well. For
example, a <tt>date</tt> parameter or a <tt>toaddr</tt> parameter
might be useful. <tt>req-*</tt> parameters are also allowed and obey
the same rules as in BIP0021, clients not supporting a <tt>req-*</tt>
parameter must consider the URI invalid.

=== Keep URIs short ===

Implementations should keep the URIs as short as possible. This is
because it makes QR decoding more stable. A camera with a scratched
lens or low resolution may run into problems scanning huge QR
codes. This is why the <tt>txid</tt> parameter is encoded in Base58
instead of the classic hex encoded string. We get away with 44
characters instead of 64. Also, the <tt>nonce</tt> parameter is Base58
encoded for the same reason.

== Interpretation ==

=== Transaction hints ===

The wallet processing the URI must use the hints in the PoP request to
filter its transaction set. The <tt>label</tt>, <tt>amount</tt> and
<tt>message</tt> parameters must, if present in the URI, exactly match
the data associated with the original payment according to the
following table:

{|
| <tt>btcpop:</tt> URI parameter || <tt>bitcoin:</tt> URI parameter ||
BIP70 PaymentDetails data
|-
| <tt>label</tt>                 || <tt>label</tt>                  ||
<tt>merchant_data</tt>
|-
| <tt>amount</tt>                || <tt>amount</tt>                 ||
<tt>sum of outputs.amount</tt>
|-
| <tt>message</tt>               || <tt>message</tt>                ||
<tt>memo</tt>
|}

The <tt>txid</tt> parameter value must match the transaction hash of
the payment.

After filtering, the resulting transaction set is displayed to the
user who selects one of them to prove. An implementation could also
automatically select a transaction in the filtered set, but
there must still be a way for the user to select freely among the
matching transactions. If the filtered set is empty, no transaction
fits the hints and a message about that is presented to the user. If
the filtered set contains exactly one transaction, which is
preferable, that transaction can be automatically selected.

As a fallback, there must also be a way for the user to select any
transaction from the wallet regardless of the transaction hints. This
can be useful if the metadata of the wallet is lost, possibly due to a
restore from backup.

=== PoP destination <tt>p</tt> ===

The <tt>p</tt> parameter value is the destination where to send the
PoP to. This destination is typically a <tt>https:</tt> URL or a
<tt>http:</tt> URL, but it could be any type of URI, for example
<tt>mailto:</tt>. To keep <tt>btcpop:</tt> URIs short, users should
not make their <tt>p</tt> parameter unneccesarily long.

==== <tt>http:</tt> and <tt>https:</tt> URLs ====

Wallet implementations must support the <tt>http:</tt> and
<tt>https:</tt> schemes in which case <tt>POST</tt> method must be
used. The content type of the POST request must be set to

 Content-Type: application/bitcoin-pop
 Content-Transfer-Encoding: binary

== Examples ==

Send PoP for a transaction with label "video 42923" to
<tt>https://www.example.com/pop/352</tt>, using nonce <tt>0x73 0xd5
0x1a 0xbb 0xd8 0x9c</tt>:

 btcpop:?p=https://www.example.com/pop/352&n=zgWTm8yH&label=video 42923

Send PoP through mail using
<tt>mailto:pop at example.com?subject=pop444</tt>, amount is 13370000
satoshis, nonce is <tt>0x6f 0xe 0xfb 0x68 0x92 0xf9</tt>. Note that
the <tt>?</tt> before <tt>subject</tt> is OK according to RFC3986,
since the query part starts from the first <tt>?</tt>:

 btcpop:?p=mailto:pop at example.com?subject%3Dpop444&n=xJdKmEbr&amount=0.1337

Send PoP for transaction with id
<tt>cca7507897abc89628f450e8b1e0c6fca4ec3f7b34cccf55f3f531c659ff4d79</tt>
to pizza place at <tt>http://pizza.example.com/pop/laszlo111</tt>
using nonce <tt>0xfc 0xcc 0x2c 0x35 0xf0 0xb8</tt>

 btcpop:?p=
http://pizza.example.com/pop/laszlo111&n=3AtNpVrPh&txid=Emt9MPvt1joznqHy5eEHkNtcuQuYWXzYJBQZN6BJm6NL

== Reference implementation ==

[https://github.com/kallerosenbaum/poppoc poppoc on GitHub]

[https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]

== References ==

[https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki BIP21]: URI
Scheme

[[Proof of Payment BIP]]

[https://www.ietf.org/rfc/rfc3986.txt RFC3986]: Uniform Resource Identifier
(URI): Generic Syntax
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/d3fa1871/attachment.html>

From pieter.wuille at gmail.com  Sat Jun  6 14:47:05 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Sat, 6 Jun 2015 16:47:05 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
Message-ID: <CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>

What do you gain by making PoPs actually valid transactions? You could for
example change the signature hashing algorithm (prepend a constant string,
or add a second hashing step) for signing, rendering the signatures in a
PoP unusable for actual transaction, while still committing to the same
actual transaction. That would also remove the need for the OP_RETURN to
catch fees.

Also, I would call it "proof of transaction intent", as it's a commitment
to a transaction and proof of its validity, but not a proof that an actual
transaction took place, nor a means to prevent it from being double spent.



On Sat, Jun 6, 2015 at 4:35 PM, Kalle Rosenbaum <kalle at rosenbaum.se> wrote:

> Hi
>
> Following earlier posts on Proof of Payment I'm now proposing the
> following BIP (To read it formatted instead, go to
> https://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP).
>
> Regards,
> Kalle Rosenbaum
>
> <pre>
>   BIP: <BIP number>
>   Title: Proof of Payment
>   Author: Kalle Rosenbaum <kalle at rosenbaum.se>
>   Status: Draft
>   Type: Standards Track
>   Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>
> </pre>
>
> == Abstract ==
>
> This BIP describes how a wallet can prove to a server that it has the
> ability to sign a certain transaction.
>
> == Motivation ==
>
> There are several scenarios in which it would be useful to prove that you
> have paid for something. For example:
>
> * A pre-paid hotel room where your PoP functions as a key to the door.
> * An online video rental service where you pay for a video and watch it on
> any device.
> * An ad-sign where you pay in advance for e.g. 2 weeks exclusivity. During
> this period you can upload new content to the sign whenever you like using
> PoP.
> * Log in to a pay site using a PoP.
> * A parking lot you pay for monthly and the car authenticates itself using
> PoP.
> * A lottery where all participants pay to the same address, and the winner
> is selected among the transactions to that address. You exchange the prize
> for a PoP for the winning transaction.
>
> With Proof of Payment, these use cases can be achieved without any
> personal information (user name, password, e-mail address, etc) being
> involved.
>
> == Rationale ==
>
> Desirable properties:
>
> # A PoP should be generated on demand.
> # It should only be usable once to avoid issues due to theft.
> # It should be able to create a PoP for any payment, regardless of script
> type (P2SH, P2PKH, etc.).
> # It should prove that you have enough credentials to unlock all the
> inputs of the proven transaction.
> # It should be easy to implement by wallets and servers to ease adoption.
>
> Current methods of proving a payment:
>
> * In BIP0070, the PaymentRequest together with the transactions fulfilling
> the request makes some sort of proof. However, it does not meet 1, 2 or 4
> and it obviously only meets 3 if the payment is made through BIP0070. Also,
> there's no standard way to request/provide the proof. If standardized it
> would probably meet 5.
> * Signing messages, chosen by the server, with the private keys used to
> sign the transaction. This could meet 1 and 2 but probably not 3. This is
> not standardized either. 4 Could be met if designed so.
>
> If the script type is P2SH, any satisfying script should do, just like for
> a payment. For M-of-N multisig scripts, that would mean that any set of M
> keys should be sufficient, not neccesarily the same set of M keys that
> signed the transaction. This is important because strictly demanding the
> same set of M keys would undermine the purpose of a multisig address.
>
> == Specification ==
>
> === Data structure ===
>
> A proof of payment for a transaction T, here called PoP(T), is used to
> prove that one has ownership of the credentials needed to unlock all the
> inputs of T. It has the exact same structure as a bitcoin transaction with
> the same inputs and outputs as T and in the same order as in T. There is
> also one OP_RETURN output inserted at index 0, here called the pop output.
> This output must have the following format:
>
>  OP_RETURN <version> <txid> <nonce>
>
> {|
> ! Field        !! Size [B] !! Description
> |-
> | &lt;version> || 2        || Version, little endian, currently 0x01 0x00
> |-
> | &lt;txid>    || 32       || The transaction to prove
> |-
> | &lt;nonce>   || 6        || Random data
> |}
>
> The value of the pop output is set to the same value as the transaction
> fee of T. Also, if the outputs of T contains an OP_RETURN output, that
> output must not be included in the PoP because there can only be one
> OP_RETURN output in a transaction. The value of that OP_RETURN output is
> instead added to the value of the pop output.
>
> An illustration of the PoP data structure and its original payment is
> shown below.
>
> <pre>
>   T
>  +----------------------------------------------+
>  |inputs       | outputs                        |
>  |       Value | Value   Script                 |
>  +----------------------------------------------+
>  |input0 1     |     0   pay to A               |
>  |input1 3     |     2   OP_RETURN <some data>  |
>  |input2 4     |     1   pay to B               |
>  |             |     4   pay to C               |
>  +----------------------------------------------+
>
>   PoP(T)
>  +----------------------------------------------------------+
>  |inputs       | outputs                                    |
>  |       Value | Value   Script                             |
>  +----------------------------------------------------------+
>  |input0 1     |     3   OP_RETURN <version> <txid> <nonce> |
>  |input1 3     |     0   pay to A                           |
>  |input2 4     |     1   pay to B                           |
>  |             |     4   pay to C                           |
>  +----------------------------------------------------------+
> </pre>
>
> The PoP is signed using the same signing process that is used for bitcoin
> transactions.
>
> The purpose of the nonce is to make it harder to use a stolen PoP; Once
> the PoP has reached the server, that PoP is useless since the server will
> generate a new nonce for every PoP request.
>
> Since a PoP is indistinguishable from a bitcoin transaction, there is a
> risk that it, accidently or maliciously, enters the bitcoin p2p network. If
> T is still unconfirmed, or if a reorg takes place, chances are that PoP(T)
> ends up in a block, invalidating T. Therefore it is important that the
> outputs of the PoP are the same as in T. The zero transaction fee in PoP(T)
> is to minimize the incentives for miners to select PoP(T) for inclusion.
>
> === Process ===
>
> # A proof of payment request is sent from the server to the wallet. The
> PoP request contains:
> ## a random nonce
> ## a destination where to send the PoP, for example a https URL
> ## data hinting the wallet which transaction to create a proof for. For
> example:
> ##* txid, if known by the server
> ##* PaymentRequest.PaymentDetails.merchant_data (in case of a BIP0070
> payment)
> ##* amount, label, message or other information from a BIP0021 URL
> # The wallet identifies a transaction T, if possible. Otherwise it asks
> the user to select among the ones that match the hints in 1.iii.
> # The wallet creates an unsigned PoP (UPoP) for T, and asks the user to
> sign it.
> # The user confirms
> # The UPoP(T) is signed by the wallet, creating PoP(T).
> # The PoP is sent to the destination in 1.ii.
> # The server receiving the PoP validates it and responds with ?valid? or
> ?invalid?.
> # The wallet displays the response in some way to the user.
>
> '''Remarks:'''
>
> * The method of transferring the PoP request at step 1 is not specified
> here. Instead that is specified in separate specifications. See [btcpop
> scheme BIP](btcpop scheme BIP).
> * The nonce must be randomly generated by the server for every new PoP
> request.
>
> === Validating a PoP ===
>
> The server needs to validate the PoP and reply with "valid" or "invalid".
> That process is outlined below. If any step fails, the validation is
> aborted and "invalid" is returned:
>
> # Check the format of the PoP. It must pass normal transaction checks,
> except that the inputs may already be spent.
> # Check the PoP output at index 0. It must conform to the OP_RETURN output
> format outlined above.
> # Check that the rest of the outputs exactly corresponds to the outputs of
> T and that they appear in the same order as in T. An exception to this is
> that any OP_RETURN outputs of T must not be included in the PoP. All output
> value from the OP_RETURN must instead be included in the PoP output.
> # Check that the nonce is the same as the one you requested.
> # Check that the inputs of the PoP are exactly the same as in transaction
> T, and in the same order.
> # Check the scripts of all the inputs, as would be done on a normal
> transaction.
> # Check that the txid in the PoP output is the transaction you actually
> want proof for. If you don?t know exactly what transaction you want proof
> for, check that the transaction actually pays for the product/service you
> deliver.
> # Return "valid".
>
> == Security considerations ==
>
> * Someone can intercept the PoP-request and change the PoP destination so
> that the user sends the PoP to the bad actor.
> * Someone can intercept the PoP-request and change for example the txid to
> trick the user to sign a PoP for another transaction than the intended.
> This can of course be avoided if the user is actually looking at the UPoP
> before signing it. The bad actor could also set hints for a transaction,
> existing or not, that the user didn?t make, resulting in a broken service.
> * Someone can steal a PoP and try to use the service hoping to get a
> matching nonce. Probability per try: 1/(2^48). The server should have a
> mechanism for detecting a brute force attack of this kind, or at least slow
> down the process by delaying the PoP request by some 100 ms or so.
> * Even if a wallet has no funds it might still be valuable as a generator
> for PoPs. This makes it important to keep the security of the wallet after
> it has been emptied.
> * Transaction malleability may cause the server to have another
> transaction id than the wallet for the payment. In that case the wallet
> will not be able to prove the transaction for the server. Wallets should
> not rely on the transaction id of the outgoing transaction. Instead it
> should listen for the transaction on the network and put that in its list
> of transactions.
>
> The first two issues are the same attack vector as for traditional, ie
> BIP0021, bitcoin payments. They could be mitigated by using secure
> connections.
>
> == Reference implementation ==
>
> [https://github.com/kallerosenbaum/poppoc poppoc on GitHub]
>
> [https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]
>
> == References ==
>
> [https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki BIP0021]:
> URI Scheme
>
> [https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki BIP0070]:
> Payment Protocol
>
> [[btcpop scheme BIP]]
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/f67abf67/attachment.html>

From kalle at rosenbaum.se  Sat Jun  6 15:05:36 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Sat, 6 Jun 2015 17:05:36 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
Message-ID: <CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>

> What do you gain by making PoPs actually valid transactions? You could for
> example change the signature hashing algorithm (prepend a constant string,
> or add a second hashing step) for signing, rendering the signatures in a PoP
> unusable for actual transaction, while still committing to the same actual
> transaction. That would also remove the need for the OP_RETURN to catch
> fees.

The idea is to simplify implementation. Existing software can be used
as is to sign and validate PoPs. But I do agree that it would be a
cleaner specification if we would make the PoP invalid as a
transaction. I'm open to changes here. I do like the idea to prepend a
constant string. But that would require changes in transaction signing
and validation code, wouldn't it?

>
> Also, I would call it "proof of transaction intent", as it's a commitment to
> a transaction and proof of its validity, but not a proof that an actual
> transaction took place, nor a means to prevent it from being double spent.
>

Naming is hard. I think a simpler name that explains what its main
purpose is (prove that you paid for something) is better than a name
that exactly tries to explain what it is. "Proof of transaction
intent" does not help me understand what this is about. But I would
like to see more name suggestions. The name does not prevent people
from using it for other purposes, ie internet over telephone network.

Thank you
/Kalle

>
>
> On Sat, Jun 6, 2015 at 4:35 PM, Kalle Rosenbaum <kalle at rosenbaum.se> wrote:
>>
>> Hi
>>
>> Following earlier posts on Proof of Payment I'm now proposing the
>> following BIP (To read it formatted instead, go to
>> https://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP).
>>
>> Regards,
>> Kalle Rosenbaum
>>
>> <pre>
>>   BIP: <BIP number>
>>   Title: Proof of Payment
>>   Author: Kalle Rosenbaum <kalle at rosenbaum.se>
>>   Status: Draft
>>   Type: Standards Track
>>   Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>
>> </pre>
>>
>> == Abstract ==
>>
>> This BIP describes how a wallet can prove to a server that it has the
>> ability to sign a certain transaction.
>>
>> == Motivation ==
>>
>> There are several scenarios in which it would be useful to prove that you
>> have paid for something. For example:
>>
>> * A pre-paid hotel room where your PoP functions as a key to the door.
>> * An online video rental service where you pay for a video and watch it on
>> any device.
>> * An ad-sign where you pay in advance for e.g. 2 weeks exclusivity. During
>> this period you can upload new content to the sign whenever you like using
>> PoP.
>> * Log in to a pay site using a PoP.
>> * A parking lot you pay for monthly and the car authenticates itself using
>> PoP.
>> * A lottery where all participants pay to the same address, and the winner
>> is selected among the transactions to that address. You exchange the prize
>> for a PoP for the winning transaction.
>>
>> With Proof of Payment, these use cases can be achieved without any
>> personal information (user name, password, e-mail address, etc) being
>> involved.
>>
>> == Rationale ==
>>
>> Desirable properties:
>>
>> # A PoP should be generated on demand.
>> # It should only be usable once to avoid issues due to theft.
>> # It should be able to create a PoP for any payment, regardless of script
>> type (P2SH, P2PKH, etc.).
>> # It should prove that you have enough credentials to unlock all the
>> inputs of the proven transaction.
>> # It should be easy to implement by wallets and servers to ease adoption.
>>
>> Current methods of proving a payment:
>>
>> * In BIP0070, the PaymentRequest together with the transactions fulfilling
>> the request makes some sort of proof. However, it does not meet 1, 2 or 4
>> and it obviously only meets 3 if the payment is made through BIP0070. Also,
>> there's no standard way to request/provide the proof. If standardized it
>> would probably meet 5.
>> * Signing messages, chosen by the server, with the private keys used to
>> sign the transaction. This could meet 1 and 2 but probably not 3. This is
>> not standardized either. 4 Could be met if designed so.
>>
>> If the script type is P2SH, any satisfying script should do, just like for
>> a payment. For M-of-N multisig scripts, that would mean that any set of M
>> keys should be sufficient, not neccesarily the same set of M keys that
>> signed the transaction. This is important because strictly demanding the
>> same set of M keys would undermine the purpose of a multisig address.
>>
>> == Specification ==
>>
>> === Data structure ===
>>
>> A proof of payment for a transaction T, here called PoP(T), is used to
>> prove that one has ownership of the credentials needed to unlock all the
>> inputs of T. It has the exact same structure as a bitcoin transaction with
>> the same inputs and outputs as T and in the same order as in T. There is
>> also one OP_RETURN output inserted at index 0, here called the pop output.
>> This output must have the following format:
>>
>>  OP_RETURN <version> <txid> <nonce>
>>
>> {|
>> ! Field        !! Size [B] !! Description
>> |-
>> | &lt;version> || 2        || Version, little endian, currently 0x01 0x00
>> |-
>> | &lt;txid>    || 32       || The transaction to prove
>> |-
>> | &lt;nonce>   || 6        || Random data
>> |}
>>
>> The value of the pop output is set to the same value as the transaction
>> fee of T. Also, if the outputs of T contains an OP_RETURN output, that
>> output must not be included in the PoP because there can only be one
>> OP_RETURN output in a transaction. The value of that OP_RETURN output is
>> instead added to the value of the pop output.
>>
>> An illustration of the PoP data structure and its original payment is
>> shown below.
>>
>> <pre>
>>   T
>>  +----------------------------------------------+
>>  |inputs       | outputs                        |
>>  |       Value | Value   Script                 |
>>  +----------------------------------------------+
>>  |input0 1     |     0   pay to A               |
>>  |input1 3     |     2   OP_RETURN <some data>  |
>>  |input2 4     |     1   pay to B               |
>>  |             |     4   pay to C               |
>>  +----------------------------------------------+
>>
>>   PoP(T)
>>  +----------------------------------------------------------+
>>  |inputs       | outputs                                    |
>>  |       Value | Value   Script                             |
>>  +----------------------------------------------------------+
>>  |input0 1     |     3   OP_RETURN <version> <txid> <nonce> |
>>  |input1 3     |     0   pay to A                           |
>>  |input2 4     |     1   pay to B                           |
>>  |             |     4   pay to C                           |
>>  +----------------------------------------------------------+
>> </pre>
>>
>> The PoP is signed using the same signing process that is used for bitcoin
>> transactions.
>>
>> The purpose of the nonce is to make it harder to use a stolen PoP; Once
>> the PoP has reached the server, that PoP is useless since the server will
>> generate a new nonce for every PoP request.
>>
>> Since a PoP is indistinguishable from a bitcoin transaction, there is a
>> risk that it, accidently or maliciously, enters the bitcoin p2p network. If
>> T is still unconfirmed, or if a reorg takes place, chances are that PoP(T)
>> ends up in a block, invalidating T. Therefore it is important that the
>> outputs of the PoP are the same as in T. The zero transaction fee in PoP(T)
>> is to minimize the incentives for miners to select PoP(T) for inclusion.
>>
>> === Process ===
>>
>> # A proof of payment request is sent from the server to the wallet. The
>> PoP request contains:
>> ## a random nonce
>> ## a destination where to send the PoP, for example a https URL
>> ## data hinting the wallet which transaction to create a proof for. For
>> example:
>> ##* txid, if known by the server
>> ##* PaymentRequest.PaymentDetails.merchant_data (in case of a BIP0070
>> payment)
>> ##* amount, label, message or other information from a BIP0021 URL
>> # The wallet identifies a transaction T, if possible. Otherwise it asks
>> the user to select among the ones that match the hints in 1.iii.
>> # The wallet creates an unsigned PoP (UPoP) for T, and asks the user to
>> sign it.
>> # The user confirms
>> # The UPoP(T) is signed by the wallet, creating PoP(T).
>> # The PoP is sent to the destination in 1.ii.
>> # The server receiving the PoP validates it and responds with ?valid? or
>> ?invalid?.
>> # The wallet displays the response in some way to the user.
>>
>> '''Remarks:'''
>>
>> * The method of transferring the PoP request at step 1 is not specified
>> here. Instead that is specified in separate specifications. See [btcpop
>> scheme BIP](btcpop scheme BIP).
>> * The nonce must be randomly generated by the server for every new PoP
>> request.
>>
>> === Validating a PoP ===
>>
>> The server needs to validate the PoP and reply with "valid" or "invalid".
>> That process is outlined below. If any step fails, the validation is aborted
>> and "invalid" is returned:
>>
>> # Check the format of the PoP. It must pass normal transaction checks,
>> except that the inputs may already be spent.
>> # Check the PoP output at index 0. It must conform to the OP_RETURN output
>> format outlined above.
>> # Check that the rest of the outputs exactly corresponds to the outputs of
>> T and that they appear in the same order as in T. An exception to this is
>> that any OP_RETURN outputs of T must not be included in the PoP. All output
>> value from the OP_RETURN must instead be included in the PoP output.
>> # Check that the nonce is the same as the one you requested.
>> # Check that the inputs of the PoP are exactly the same as in transaction
>> T, and in the same order.
>> # Check the scripts of all the inputs, as would be done on a normal
>> transaction.
>> # Check that the txid in the PoP output is the transaction you actually
>> want proof for. If you don?t know exactly what transaction you want proof
>> for, check that the transaction actually pays for the product/service you
>> deliver.
>> # Return "valid".
>>
>> == Security considerations ==
>>
>> * Someone can intercept the PoP-request and change the PoP destination so
>> that the user sends the PoP to the bad actor.
>> * Someone can intercept the PoP-request and change for example the txid to
>> trick the user to sign a PoP for another transaction than the intended. This
>> can of course be avoided if the user is actually looking at the UPoP before
>> signing it. The bad actor could also set hints for a transaction, existing
>> or not, that the user didn?t make, resulting in a broken service.
>> * Someone can steal a PoP and try to use the service hoping to get a
>> matching nonce. Probability per try: 1/(2^48). The server should have a
>> mechanism for detecting a brute force attack of this kind, or at least slow
>> down the process by delaying the PoP request by some 100 ms or so.
>> * Even if a wallet has no funds it might still be valuable as a generator
>> for PoPs. This makes it important to keep the security of the wallet after
>> it has been emptied.
>> * Transaction malleability may cause the server to have another
>> transaction id than the wallet for the payment. In that case the wallet will
>> not be able to prove the transaction for the server. Wallets should not rely
>> on the transaction id of the outgoing transaction. Instead it should listen
>> for the transaction on the network and put that in its list of transactions.
>>
>> The first two issues are the same attack vector as for traditional, ie
>> BIP0021, bitcoin payments. They could be mitigated by using secure
>> connections.
>>
>> == Reference implementation ==
>>
>> [https://github.com/kallerosenbaum/poppoc poppoc on GitHub]
>>
>> [https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]
>>
>> == References ==
>>
>> [https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki BIP0021]:
>> URI Scheme
>>
>> [https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki BIP0070]:
>> Payment Protocol
>>
>> [[btcpop scheme BIP]]
>>
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>



From pieter.wuille at gmail.com  Sat Jun  6 15:13:46 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Sat, 6 Jun 2015 17:13:46 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
Message-ID: <CAPg+sBjsjtSamZaBd-6tLLv0qjAHvEBgSbh4HBCUV2Z7hpioGQ@mail.gmail.com>

On Sat, Jun 6, 2015 at 5:05 PM, Kalle Rosenbaum <kalle at rosenbaum.se> wrote:

> > What do you gain by making PoPs actually valid transactions? You could
> for
> > example change the signature hashing algorithm (prepend a constant
> string,
> > or add a second hashing step) for signing, rendering the signatures in a
> PoP
> > unusable for actual transaction, while still committing to the same
> actual
> > transaction. That would also remove the need for the OP_RETURN to catch
> > fees.
>
> The idea is to simplify implementation. Existing software can be used
> as is to sign and validate PoPs. But I do agree that it would be a
> cleaner specification if we would make the PoP invalid as a
> transaction. I'm open to changes here. I do like the idea to prepend a
> constant string. But that would require changes in transaction signing
> and validation code, wouldn't it?
>

Yes, of course. An alternative is adding a 21M BTC output at the end, or
bitflipping the txin prevout hashes, or another reversible transformation
on the transaction data that is guaranteed to invalidate it.

I think that the risk of asking people to sign something that is not an
actual transaction, but could be used as one, is very scary.


> > Also, I would call it "proof of transaction intent", as it's a
> commitment to
> > a transaction and proof of its validity, but not a proof that an actual
> > transaction took place, nor a means to prevent it from being double
> spent.
>
>
> Naming is hard. I think a simpler name that explains what its main
> purpose is (prove that you paid for something) is better than a name
> that exactly tries to explain what it is.


"Proof of Payment" indeed does make me think it's something that proves you
paid. But as described, that is not what a PoP does. It proves the ability
to create a particular transaction, and committing to it. There is no
actual payment involved (plus, payment makes me think you're talking about
BIP70 payments, not simple Bitcoin transactions).


> "Proof of transaction
> intent" does not help me understand what this is about. But I would
> like to see more name suggestions. The name does not prevent people
> from using it for other purposes, ie internet over telephone network.
>

I don't understand why something like "Proof of Transaction Intent" would
be incompatible with internet over telephone network either...

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/f9b9daa2/attachment.html>

From luke at dashjr.org  Sat Jun  6 15:18:18 2015
From: luke at dashjr.org (Luke Dashjr)
Date: Sat, 6 Jun 2015 15:18:18 +0000
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
Message-ID: <201506061518.19431.luke@dashjr.org>

On Saturday, June 06, 2015 2:35:17 PM Kalle Rosenbaum wrote:
> Current methods of proving a payment:
> 
> * Signing messages, chosen by the server, with the private keys used to
> sign the transaction. This could meet 1 and 2 but probably not 3. This is
> not standardized either. 4 Could be met if designed so.

It's also not secure, since the signed messages only prove ownership of the 
address associated with the private key, and does not prove ownership of 
UTXOs currently redeemable with the private key, nor prove past UTXOs spent 
were approved by the owner of the address.

> A proof of payment for a transaction T, here called PoP(T), is used to
> prove that one has ownership of the credentials needed to unlock all the
> inputs of T.

This appears to be incompatible with CoinJoin at least. Maybe there's some 
clean way to avoid that by using 
https://github.com/Blockstream/contracthashtool ?

> It has the exact same structure as a bitcoin transaction with
> the same inputs and outputs as T and in the same order as in T. There is
> also one OP_RETURN output inserted at index 0, here called the pop output.

I also agree with Pieter, that this should *not* be so cleanly compatible 
with Bitcoin transactions. If you wish to share code, perhaps using an 
invalid opcode rather than OP_RETURN would be appropriate.

Luke



From pieter.wuille at gmail.com  Sat Jun  6 15:23:48 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Sat, 6 Jun 2015 17:23:48 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <201506061518.19431.luke@dashjr.org>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<201506061518.19431.luke@dashjr.org>
Message-ID: <CAPg+sBg+rE-0cxMU480Fierq_dU+=93LBD+vDatGdcSkPbvjqA@mail.gmail.com>

On Sat, Jun 6, 2015 at 5:18 PM, Luke Dashjr <luke at dashjr.org> wrote:

> I also agree with Pieter, that this should *not* be so cleanly compatible
> with Bitcoin transactions. If you wish to share code, perhaps using an
> invalid opcode rather than OP_RETURN would be appropriate.


Using an invalid opcode would merely send funds into the void. It wouldn't
invalidate the transaction.

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/e8ba6131/attachment.html>

From pete at petertodd.org  Sat Jun  6 15:32:47 2015
From: pete at petertodd.org (Peter Todd)
Date: Sat, 6 Jun 2015 11:32:47 -0400
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPg+sBg+rE-0cxMU480Fierq_dU+=93LBD+vDatGdcSkPbvjqA@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<201506061518.19431.luke@dashjr.org>
	<CAPg+sBg+rE-0cxMU480Fierq_dU+=93LBD+vDatGdcSkPbvjqA@mail.gmail.com>
Message-ID: <20150606153247.GA19619@savin.petertodd.org>

On Sat, Jun 06, 2015 at 05:23:48PM +0200, Pieter Wuille wrote:
> On Sat, Jun 6, 2015 at 5:18 PM, Luke Dashjr <luke at dashjr.org> wrote:
> 
> > I also agree with Pieter, that this should *not* be so cleanly compatible
> > with Bitcoin transactions. If you wish to share code, perhaps using an
> > invalid opcode rather than OP_RETURN would be appropriate.
> 
> 
> Using an invalid opcode would merely send funds into the void. It wouldn't
> invalidate the transaction.

Just set nLockTime to 500000000-1 and nSequence appropriately to make
the transaction impossible to mine for the next 9500 years.

Though I agree that this whole idea seems a bit dubious to me.

-- 
'peter'[:-1]@petertodd.org
00000000000000000000dd919214b66444dcebb4aa0214c1ab7c8b3b633be71f
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/3eae6c18/attachment.sig>

From kalle at rosenbaum.se  Sat Jun  6 16:20:41 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Sat, 6 Jun 2015 18:20:41 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPg+sBjsjtSamZaBd-6tLLv0qjAHvEBgSbh4HBCUV2Z7hpioGQ@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CAPg+sBjsjtSamZaBd-6tLLv0qjAHvEBgSbh4HBCUV2Z7hpioGQ@mail.gmail.com>
Message-ID: <CAPswA9wpynPn+HHzL0aTnrWKn3thKXwEfG459TTByX3QcYRubg@mail.gmail.com>

>> The idea is to simplify implementation. Existing software can be used
>> as is to sign and validate PoPs. But I do agree that it would be a
>> cleaner specification if we would make the PoP invalid as a
>> transaction. I'm open to changes here. I do like the idea to prepend a
>> constant string. But that would require changes in transaction signing
>> and validation code, wouldn't it?
>
>
> Yes, of course. An alternative is adding a 21M BTC output at the end, or
> bitflipping the txin prevout hashes, or another reversible transformation on
> the transaction data that is guaranteed to invalidate it.

If we do decide to make Pops invalid as transactions, there are a lot
of ways to do that. I guess the main question is if we should make
Pops invalid as transactions or not. So far I prefer to keep them
valid for the above reason.

>
> I think that the risk of asking people to sign something that is not an
> actual transaction, but could be used as one, is very scary.
>

I would feel comfortable doing it. It's just a matter of trusting your
wallet, which you already do with your ordinary transactions.

>>
>> > Also, I would call it "proof of transaction intent", as it's a
>> > commitment to
>> > a transaction and proof of its validity, but not a proof that an actual
>> > transaction took place, nor a means to prevent it from being double
>> > spent.
>>
>>
>> Naming is hard. I think a simpler name that explains what its main
>> purpose is (prove that you paid for something) is better than a name
>> that exactly tries to explain what it is.
>
>
> "Proof of Payment" indeed does make me think it's something that proves you
> paid. But as described, that is not what a PoP does. It proves the ability
> to create a particular transaction, and committing to it. There is no actual
> payment involved (plus, payment makes me think you're talking about BIP70
> payments, not simple Bitcoin transactions).
>
>>
>> "Proof of transaction
>> intent" does not help me understand what this is about. But I would
>> like to see more name suggestions. The name does not prevent people
>> from using it for other purposes, ie internet over telephone network.
>
>
> I don't understand why something like "Proof of Transaction Intent" would be
> incompatible with internet over telephone network either...
>

No, I meant that it's ok to call it Proof of Payment even though
people may use it for other stuff.

> --
> Pieter
>



From tomh at thinlink.com  Sat Jun  6 16:10:55 2015
From: tomh at thinlink.com (Tom Harding)
Date: Sat, 6 Jun 2015 09:10:55 -0700
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
Message-ID: <CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>

On Jun 6, 2015 8:05 AM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:

> I'm open to changes here.

I suggest:

- Don't include any real outputs.   They are redundant because the txid is
already referenced.

- Start the proof script, which should be invalid, with a magic constant
and include space for future expansion.  This makes PoP's easy to identify
and extend.

- "Proof of Potential"
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/d5ea22a1/attachment.html>

From kalle at rosenbaum.se  Sat Jun  6 16:35:50 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Sat, 6 Jun 2015 18:35:50 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <20150606153247.GA19619@savin.petertodd.org>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<201506061518.19431.luke@dashjr.org>
	<CAPg+sBg+rE-0cxMU480Fierq_dU+=93LBD+vDatGdcSkPbvjqA@mail.gmail.com>
	<20150606153247.GA19619@savin.petertodd.org>
Message-ID: <CAPswA9wSjcCNh0MAmOicPuOvBo03Wecn5Y6FkngeqedKHoUJpQ@mail.gmail.com>

2015-06-06 17:32 GMT+02:00 Peter Todd <pete at petertodd.org>:
> On Sat, Jun 06, 2015 at 05:23:48PM +0200, Pieter Wuille wrote:
>> On Sat, Jun 6, 2015 at 5:18 PM, Luke Dashjr <luke at dashjr.org> wrote:
>>
>> > I also agree with Pieter, that this should *not* be so cleanly compatible
>> > with Bitcoin transactions. If you wish to share code, perhaps using an
>> > invalid opcode rather than OP_RETURN would be appropriate.
>>
>>
>> Using an invalid opcode would merely send funds into the void. It wouldn't
>> invalidate the transaction.
>
> Just set nLockTime to 500000000-1 and nSequence appropriately to make
> the transaction impossible to mine for the next 9500 years.

Actually, I suggested that on this list on april 27, but shortly after
rejected my own idea:

#######################
"Or a really high lock_time, but it would not make it invalid, just delayed."

Ok, this was a bad idea, since nodes would have to keep it in memory.
Please disregard that idea...
########################

Now I think I rejected it on based on a misunderstanding. Nodes will
not put them in their mempool unless it's value is near in time,
right? From the 0.9.0 release notes: "Accept nLockTime transactions
that finalize in the next block".

In that case this is a really nice option.

>
> Though I agree that this whole idea seems a bit dubious to me.
>
> --
> 'peter'[:-1]@petertodd.org
> 00000000000000000000dd919214b66444dcebb4aa0214c1ab7c8b3b633be71f
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From kalle at rosenbaum.se  Sat Jun  6 17:00:39 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Sat, 6 Jun 2015 19:00:39 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
Message-ID: <CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>

2015-06-06 18:10 GMT+02:00 Tom Harding <tomh at thinlink.com>:
> On Jun 6, 2015 8:05 AM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:
>
>> I'm open to changes here.
>
> I suggest:
>
> - Don't include any real outputs.   They are redundant because the txid is
> already referenced.

with the nLocktime solution, the copied outputs are not needed.

>
> - Start the proof script, which should be invalid, with a magic constant and
> include space for future expansion.  This makes PoP's easy to identify and
> extend.

I did remore the constant (a "PoP" literal ascii encoded string)
because it didn't add much. The recipient will expect a pop, so it
will simply treat it as one. I did add a 2 byte version field to make
it extendable.

>
> - "Proof of Potential"

Noted :-)

Thank you
/Kalle



From kalle at rosenbaum.se  Sat Jun  6 21:25:02 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Sat, 6 Jun 2015 23:25:02 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
Message-ID: <CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>

Thank you all for the feedback.

I will change the data structure as follows:

* There will be only one output, the "pop output", and no outputs from
T will be copied to the PoP.
* The pop output will have value 0.
* The sequence number of all inputs of the PoP will be set to 0. I
chose to set it to 0 for all inputs for simplicity.
* The lock_time of the PoP is always set to 499999999.

Any comments on this?

/Kalle

2015-06-06 19:00 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:
> 2015-06-06 18:10 GMT+02:00 Tom Harding <tomh at thinlink.com>:
>> On Jun 6, 2015 8:05 AM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:
>>
>>> I'm open to changes here.
>>
>> I suggest:
>>
>> - Don't include any real outputs.   They are redundant because the txid is
>> already referenced.
>
> with the nLocktime solution, the copied outputs are not needed.
>
>>
>> - Start the proof script, which should be invalid, with a magic constant and
>> include space for future expansion.  This makes PoP's easy to identify and
>> extend.
>
> I did remore the constant (a "PoP" literal ascii encoded string)
> because it didn't add much. The recipient will expect a pop, so it
> will simply treat it as one. I did add a 2 byte version field to make
> it extendable.
>
>>
>> - "Proof of Potential"
>
> Noted :-)
>
> Thank you
> /Kalle



From luke at dashjr.org  Sat Jun  6 22:01:08 2015
From: luke at dashjr.org (Luke Dashjr)
Date: Sat, 6 Jun 2015 22:01:08 +0000
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
Message-ID: <201506062201.12143.luke@dashjr.org>

On Saturday, June 06, 2015 9:25:02 PM Kalle Rosenbaum wrote:
> * The pop output will have value 0.

Why not have it be -1 to make it completely invalid as a transaction?

Luke



From kristovatlas.lists at gmail.com  Sun Jun  7 00:06:56 2015
From: kristovatlas.lists at gmail.com (Kristov Atlas)
Date: Sat, 6 Jun 2015 20:06:56 -0400
Subject: [Bitcoin-development] Lexicographical Indexing of Transaction
 Inputs and Outputs
In-Reply-To: <CAGH37SL3TA7BXd3Y+4F1Fd5N3ZW+LRLvkfppPsPn61ZVbZJOnQ@mail.gmail.com>
References: <CAGH37SK0k1YUvadetyHcBGjzW+OHNFRmRwqsUDeHBGejUacigQ@mail.gmail.com>
	<44BE16F9-AB24-4A8E-BC7F-03A6C590FCE7@gmail.com>
	<CAGH37SL3TA7BXd3Y+4F1Fd5N3ZW+LRLvkfppPsPn61ZVbZJOnQ@mail.gmail.com>
Message-ID: <CAGH37SLCc-aEG0t0H7fsUZOv_h+Fiw4xoonmfwNaFWBin_7HcQ@mail.gmail.com>

I've updated the draft BIP in two ways:
-Making it clear that sorting is algorithmically agnostic, but should
conform to the output of the example algorithms written in python
-The BIP now handles schemes that create an input/output dependency, such
as SIGHASH_SINGLE:

Handling Input/Output Dependencies

Some uncommon forms of transactions create an ordering dependency between
inputs and outputs of a transaction. Wallets forming these transactions
should first sort inputs according to the methodology outlined in section
?Transaction Inputs? of this BIP. Then, they should fix the output indices
that depend on the input order, and sort the remaining outputs around them.
If there are no outputs that do not depend on input order, then all outputs
will simply be ordered based on the expected scheme. The following are the
known cases of input/output dependency that must be handled specially:

* SIGHASH_SINGLE hash type. [5] Clients seeking to verify LI01 compliance
for a transaction must inspect the last byte of the scriptSig of each input
to determine the signature hash type. In the case of SIGHASH_SINGLE (0x03)
for input ?n?, the verifier should expect that output ?n? will be fixed
when considering output ordering.

https://github.com/kristovatlas/rfc/blob/master/bips/bip-li01.mediawiki

I'm satisfied with this adjustment, as it is unlikely that any software
that wants to verify compliance with the BIP will not have access to the
scriptSig of each input.

-Kristov

On Sat, Jun 6, 2015 at 2:24 AM, Kristov Atlas <kristovatlas.lists at gmail.com>
wrote:

> Hey Stephen,
>
> Thanks for your feedback
>
> On Fri, Jun 5, 2015 at 11:20 PM, Stephen <stephencalebmorse at gmail.com>
> wrote:
>
>>  - I think your explanation of sorting could be significantly shortened
>> and clarified by simply saying that the TXIDs of inputs should be compared
>> as uint256 integers.
>>
>
> I considered defining the comparison of txids in terms of integers;
> however, I am concerned that this definition may be ambiguous when applied
> to a variety of languages and platforms without a similar amount of
> explanation as currently exists. For example, if a web wallet uses an API
> to receive transaction information, this is traditionally expressed in
> terms tx id strings rather than 256-bit integers. My intent is that wallets
> can implement the algorithm however they wish, but should ensure that their
> output is compliant with the BIP definition. IMHO the algorithm stated in
> the BIP should target test cases rather than implementation, and should
> leave as little room for ambiguity as possible.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/022fec3a/attachment.html>

From pete at petertodd.org  Sun Jun  7 02:35:23 2015
From: pete at petertodd.org (Peter Todd)
Date: Sat, 6 Jun 2015 22:35:23 -0400
Subject: [Bitcoin-development] Lexicographical Indexing of Transaction
 Inputs and Outputs
In-Reply-To: <CAGH37SLCc-aEG0t0H7fsUZOv_h+Fiw4xoonmfwNaFWBin_7HcQ@mail.gmail.com>
References: <CAGH37SK0k1YUvadetyHcBGjzW+OHNFRmRwqsUDeHBGejUacigQ@mail.gmail.com>
	<44BE16F9-AB24-4A8E-BC7F-03A6C590FCE7@gmail.com>
	<CAGH37SL3TA7BXd3Y+4F1Fd5N3ZW+LRLvkfppPsPn61ZVbZJOnQ@mail.gmail.com>
	<CAGH37SLCc-aEG0t0H7fsUZOv_h+Fiw4xoonmfwNaFWBin_7HcQ@mail.gmail.com>
Message-ID: <20150607023523.GB1570@savin.petertodd.org>

On Sat, Jun 06, 2015 at 08:06:56PM -0400, Kristov Atlas wrote:

In general I think this is a good idea, and should be implemented; we've
had a depressing number of wallets fail to implement randomization
properly, if at all.

> I've updated the draft BIP in two ways:
> -Making it clear that sorting is algorithmically agnostic, but should
> conform to the output of the example algorithms written in python
> -The BIP now handles schemes that create an input/output dependency, such
> as SIGHASH_SINGLE:
> 
> Handling Input/Output Dependencies
> 
> Some uncommon forms of transactions create an ordering dependency between
> inputs and outputs of a transaction. Wallets forming these transactions
> should first sort inputs according to the methodology outlined in section
> ?Transaction Inputs? of this BIP. Then, they should fix the output indices
> that depend on the input order, and sort the remaining outputs around them.
> If there are no outputs that do not depend on input order, then all outputs
> will simply be ordered based on the expected scheme. The following are the
> known cases of input/output dependency that must be handled specially:
> 
> * SIGHASH_SINGLE hash type. [5] Clients seeking to verify LI01 compliance
> for a transaction must inspect the last byte of the scriptSig of each input
> to determine the signature hash type. In the case of SIGHASH_SINGLE (0x03)
> for input ?n?, the verifier should expect that output ?n? will be fixed
> when considering output ordering.

Why mention SIGHASH_SINGLE at all? Its use-case is highly specialized
protocols; you haven't taken into account the needs of those protocols.
For BIP's it's better to stick to the use-cases where the need is clear
and there exists running code that to speculate too much on future uses.
With signature hashing in particular it's not yet clear at all what
future OP_CHECKSIG's will look like, let alone the various ways people
will use sighash for smart contract type stuff.

You'd be better off presenting the BIP in terms of a generic statement
that "except when otherwise prevented by advanced signature hashing
requirements, wallet software must emit transactions sorted according to
the following" You can then specify the two common cases in detail:

1) SIGHASH_ALL: input and output order signed, so sort appropriately

2) SIGHASH_ANYONECANPAY: input order not signed, so software should emit
   transactions sorted, recognising that the actual mined order may be
   changed.

As for IsStandard() rules - let alone soft forks - better to leave
discussion of them out for now. In particular, for the soft-fork case
mandating certain transaction orders will very likely cause problems in
the future for future OP_CHECKSIG upgrades. For SIGHASH_ANYONECANPAY, it
might be appropriate for nodes to enforce a certain ordering, but that
can be a separate BIP. (actually implementing that in Bitcoin Core would
be annoying and ugly right now; without replace-by-fee ANYONECANPAY has
a silly DoS attack (adding low-fee inputs) so I can't recommend wallets
use it in the general case yet)

"and a sequence number currently set to 0xFFFFFFFF." <- Actually, this
will be changed in Bitcoin Core as of v0.11.0, which implements
anti-fee-sniping w/ nLockTime.(1) (I need to write up a full BIP
describing it)


Do you have a patch implementing deterministic tx ordering for Bitcoin
Core yet?

1) https://github.com/bitcoin/bitcoin/pull/2340

-- 
'peter'[:-1]@petertodd.org
0000000000000000079693d8d175b476081a04af9c1d00ea2dbe0efb011bd79e
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/d3560629/attachment.sig>

From tomh at thinlink.com  Mon Jun  8 00:36:44 2015
From: tomh at thinlink.com (Tom Harding)
Date: Sun, 07 Jun 2015 17:36:44 -0700
Subject: [Bitcoin-development] Block Size Experiment Underway
Message-ID: <5574E39C.3090904@thinlink.com>

In September, 2014, a collective experiment began in the bitcoin
ecosystem.  Available block space (1MB) began to sometimes fall short of
the space required to mine all of the transactions that would otherwise
have been included.

This chart, posted earlier, shows the onset of the
some-blocks-at-maximum era. http://i.imgur.com/5Gfh9CW.png

Although the average block is only about 400K, real blocks are bigger or
smaller due to the random length of time between blocks (and other
factors).  I look at how often this is predicted to happen.

Recently, transactions have been confirmed at a rate of about
100000/day*.  The average transaction size for the past 6000 blocks has
been 545 bytes.  Using these values,

txesPerMinute = 100000 / 24 / 60 = 69.4
txesInMaxBlock = 999977 / 545 = 1834
minutesToFillBlock = txesInMaxBlock/txesPerMinute = 26.4

Using the theoretical formula for the time before an inter-block
interval of at least a given length **

blockChickenMinutes[x] := 10 (exp(x/10) - x/10 - 1)

we obtain

minutesBetweenFullBlocks = blockChickenMinutes[minutesToFillBlock] = 104

We currently expect a maximum-size block every 1 hour + 44 minutes, on
average.  If the transaction rate doubles, we should expect a
maximum-size block every 14 minutes, on average.  The non-linearity
makes sense, because doubling the average without raising the maximum
requires disproportionately more maximum-size blocks.

This estimate is understated because transaction size and submission
rate have their own distributions.  Using the averages of 545 bytes and
100000/day ignores the fact that for some blocks, there are unusually
big and/or numerous transactions, which increases the block size
variance and causes blocks over the threshold to be encountered more
frequently.

These calculations are confirmed by empirical observation of the most
recent 6000 blocks:

http://i.imgur.com/0pQUsdl.png

In many cases, the miner chose to create a 750KB block, which is
unusually likely to be followed by another 750KB or 1MB block, because
the next interval starts off with a 250KB backlog.  Some backlog
transactions may experience more than 1 block delay in these cases.


* https://www.quandl.com/data/BCHAIN/NTRAN-Bitcoin-Number-of-Transactions

** This is a chicken-crossing-the-road problem. Wait time = (exp(?x) ?
?x - 1) / ?
Some discussion at
https://github.com/nanotube/supybot-bitcoin-marketmonitor/pull/68.






From gappleto97 at gmail.com  Mon Jun  8 00:55:44 2015
From: gappleto97 at gmail.com (gabe appleton)
Date: Sun, 7 Jun 2015 20:55:44 -0400
Subject: [Bitcoin-development] Meta suggestions for this block size
	debate
In-Reply-To: <CANJO25KvK9imRngtHTZdFMFHY8Ua-+D6gj+nfgXebBVBKVud4A@mail.gmail.com>
References: <556CDB09.8050906@henricson.se>
	<CANJO25KUvYNzGLDjr=d_gUSKe0xAju+34W9B6jmcSjQvGXR=2g@mail.gmail.com>
	<CAEM=y+Xf9b1p-KB-PKzjtMirM8_WMbpMZuQyGyDv+6GM=0O9hA@mail.gmail.com>
	<CANJO25K+tG3uH+GH8i4PBjdk8KyJZDAunfwMmWedOJyZOk7wNw@mail.gmail.com>
	<CAM7BtUoMHE4EwJAFCfOino0UKU5B4-Wzswfvttqs8=mBayK1OA@mail.gmail.com>
	<CANJO25L-r+3_kR8FD1EZ0F1_Cz9fUO5c8Fz=DW-yKZuONa4qkw@mail.gmail.com>
	<CAM7BtUqN6rYrCrH6Ni5N+ENAwZ85YO53W0oEEkoqkBgsRPpinA@mail.gmail.com>
	<CANJO25LUXBMxAGBruxt6kNkydfJZdJf_nuuvtO+fZ5CTEWV22g@mail.gmail.com>
	<CAM7BtUr7XXT4vctroxcb7kqGu7faWx-KY-fK=KKac1d0bkcXYw@mail.gmail.com>
	<CANJO25KvK9imRngtHTZdFMFHY8Ua-+D6gj+nfgXebBVBKVud4A@mail.gmail.com>
Message-ID: <CANJO25+NufU1DeaXMi8QRx80D00ChFEHV8Fhw-LF0wms0jM+Mg@mail.gmail.com>

Just pushed the template for Arguments 3, 4, 6, and a full Argument 2.
Argument 5 should be pro, but is currently not defined. Argument 6 may be
merged with Argument 4 if you think that's necessary.

On Sat, Jun 6, 2015 at 2:41 AM, gabe appleton <gappleto97 at gmail.com> wrote:

> Nothing to apologize for. And yes, that's the correct one.
> On Jun 6, 2015 2:39 AM, "Pindar Wong" <pindar.wong at gmail.com> wrote:
>
>> OK... sorry for my confusion.
>>
>> https://github.com/EthanHeilman/BlockSizeDebate
>>
>> it is.
>>
>> p.
>>
>>
>> On Sat, Jun 6, 2015 at 2:37 PM, gabe appleton <gappleto97 at gmail.com>
>> wrote:
>>
>>> Please use the one it's originally forked from that Ethan made. I don't
>>> want to be the one who sorts through what's valid and what isn't, as I
>>> don't have as low-level an understanding as I'd like. I don't feel
>>> qualified.
>>> On Jun 6, 2015 2:34 AM, "Pindar Wong" <pindar.wong at gmail.com> wrote:
>>>
>>>> Thanks Gabe.
>>>>
>>>> https://github.com/gappleto97/BlockSizeDebate
>>>>
>>>> github's reachable via vpn.
>>>>
>>>> p.
>>>>
>>>>
>>>> On Sat, Jun 6, 2015 at 2:28 PM, gabe appleton <gappleto97 at gmail.com>
>>>> wrote:
>>>>
>>>>> Yeah. We made a git repo instead, so we don't have to bother with the
>>>>> exclusive-by-default wiki policies. It's linked in this email chain.
>>>>>
>>>>> I'll be getting home tomorrow, so I should be able to start back up on
>>>>> this. A few days from now we should throw this on /r/Bitcoin so we can get
>>>>> some more public comment on it. They already gave me a few leads to chase.
>>>>> On Jun 5, 2015 11:34 PM, "Pindar Wong" <pindar.wong at gmail.com> wrote:
>>>>>
>>>>>> Gabe,
>>>>>>
>>>>>> Did you ever get an answer to this?
>>>>>>
>>>>>> I"ll have some time tomorrow to be able to help with some work on
>>>>>> this and will need to do it myself anyways since I'm not sure I understand
>>>>>> the nuances, where bitcoin XT fits into the scheme of things (or not) etc.
>>>>>>
>>>>>> I would have thought that there would be a testnet4 by now using 8mb
>>>>>> blocks... but hey that's just me.
>>>>>>
>>>>>> p.
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> On Tue, Jun 2, 2015 at 11:52 AM, gabe appleton <gappleto97 at gmail.com>
>>>>>> wrote:
>>>>>>
>>>>>>> I don't have permission to create a page. If someone else does, I'll
>>>>>>> happily get a framework started.
>>>>>>>
>>>>>>> On Mon, Jun 1, 2015 at 11:32 PM, Ethan Heilman <eth3rs at gmail.com>
>>>>>>> wrote:
>>>>>>>
>>>>>>>> I second this, I don't have time to read the large number of emails
>>>>>>>> generated every day from the block size debate. A summary of the various
>>>>>>>> positions and arguments would be extremely helpful.
>>>>>>>>
>>>>>>>> On Mon, Jun 1, 2015 at 11:02 PM, gabe appleton <
>>>>>>>> gappleto97 at gmail.com> wrote:
>>>>>>>>
>>>>>>>>> Also, can we try to get a wiki page for the debate? That way we
>>>>>>>>> could condense the information as much as possible. I'll be willing to
>>>>>>>>> assist if the page gets approval.
>>>>>>>>> On Jun 1, 2015 6:41 PM, "Mats Henricson" <mats at henricson.se>
>>>>>>>>> wrote:
>>>>>>>>>
>>>>>>>>>> Hi!
>>>>>>>>>>
>>>>>>>>>> My fingers have been itching many times now, this debate
>>>>>>>>>> drives me nuts.
>>>>>>>>>>
>>>>>>>>>> I just wish all posters could follow two simple principles:
>>>>>>>>>>
>>>>>>>>>> 1. Read up. Yes. All of what has been written. Yes, it will
>>>>>>>>>>    take many hours. But if you're rehashing what other
>>>>>>>>>>    smarter people have said over and over before, you're
>>>>>>>>>>    wasting hundreds of peoples time. Please don't.
>>>>>>>>>>
>>>>>>>>>> 2. Be helpful. Suggest alternatives. Just cristizising is
>>>>>>>>>>    just destructive. If you want no change, then say so.
>>>>>>>>>>
>>>>>>>>>> Mats
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> ------------------------------------------------------------------------------
>>>>>>>>>> _______________________________________________
>>>>>>>>>> Bitcoin-development mailing list
>>>>>>>>>> Bitcoin-development at lists.sourceforge.net
>>>>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> ------------------------------------------------------------------------------
>>>>>>>>>
>>>>>>>>> _______________________________________________
>>>>>>>>> Bitcoin-development mailing list
>>>>>>>>> Bitcoin-development at lists.sourceforge.net
>>>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> ------------------------------------------------------------------------------
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> Bitcoin-development mailing list
>>>>>>> Bitcoin-development at lists.sourceforge.net
>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>>>
>>>>>>>
>>>>>>
>>>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150607/101b37a2/attachment.html>

From raystonn at hotmail.com  Mon Jun  8 20:07:59 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Mon, 8 Jun 2015 13:07:59 -0700
Subject: [Bitcoin-development] New attack identified and potential solution
	described: Dropped-transaction spam attack against the block
	size limit
In-Reply-To: <5574E39C.3090904@thinlink.com>
References: <5574E39C.3090904@thinlink.com>
Message-ID: <COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>

When implemented, the block size limit was put in place to prevent the 
potential for a massive block to be used as an attack to benefit the miner 
of that block.  The theory goes that such a massive block would enrich its 
miner by delaying other miners who are now busy downloading and validating 
that huge block.  The original miner of that large-block would be free to 
continue hashing the next block, giving it an advantage.

Unfortunately, this block size limit opened a different attack.  Prior to 
the limit, any attempt to spam the network by anyone other than someone 
mining their own transactions would have been economically unfeasible.  As 
every transaction would have a fee, there would have been a real cost for 
every minute of spam.  The end result would have been a transfer of wealth 
from spammer to Bitcoin miners, which would have harmed the spammers and 
encouraged further mining of Bitcoin, a very antifragile outcome.

But now we have the block size limit.  Things are very different with this 
feature in place.  The beginning of a spam attack on the Bitcoin network 
will incur transaction fees, just like before.  But if spam continues at a 
rate exceeding the block size limit long enough for transactions to be 
dropped from mempools, the vast majority of spam transaction fees will never 
have to be paid.  In fact, as real users gain in desperation and pay higher 
fees to get their transactions through in a timely manner, the spammers will 
adjust their fees to minimize the cost of the attack and maximize 
effectiveness.  Using this method, they keep their fees at a point that 
causes most of the spam transactions to be dropped without confirmation 
(free spam), while forcing a floor for transaction fees.  Thus, while spam 
could be used by attackers to disable the network entirely, by paying 
high-enough fees to actually fill the blocks with spam, it can also be used 
by a single entity to force a transaction fee floor.  Real users will be 
forced to pay a transaction fee higher than the majority of the spam to get 
their transactions confirmed.  So this is an effective means for a minority 
of miners to force higher fees through spam attacks, even in the face of 
benevolent miners who would not support a higher fee floor by policy. 
Miners would simply have no way to fix this, as they can only put in the 
transactions that will fit under the block size limit.

In the face of such a spam attack, Bitcoin's credibility and usability would 
be severely undermined.  The block size limit enables this attack, and I now 
argue for its removal.  But we can't just remove it and ignore the problem 
that it was intended to address.  We need a new fix for the large-block 
problem described in the first paragraph that does not suffer from the 
dropped-transaction spam-attack problem that is enabled by the block size 
limit today.  My proposal is likely to be controversial, and I'm very much 
open to hearing other better proposals.

Large blocks created by a miner as a means to spam other miners out of 
competition is a problem because miners do not pay fees for their own 
transactions when they mine them.  They collect the fees they pay.  This 
breaks the economic barrier keeping people from spamming the network, as the 
spamming is essentially free.  The proposed fix is to add a new rule on how 
fees are handled.  Some amount of every fee should be considered as burned 
and can never be spent.  I will propose 50% of the fee here, but there may 
be better numbers that can be discovered prior to putting this into place. 
If we'd like miners to continue to collect the same fees after this change, 
we can suggest the default fee per transaction to be doubled.  Half of every 
fee would be burned and disappear forever, effectively distributing the 
value of those bitcoins across the entire money supply.  The other half 
would be collected by the miner of the block as is done today.  This 
solution would mean large blocks would cost a significant number of bitcoin 
to create, even when all of the transactions are created by the miner of 
that block.  For this to work, we'd need to ensure a minimum fee is paid for 
most of the transactions in every block, and the new transaction fee rule is 
in place.  Then the block size limit can be removed.

Raystonn




From raystonn at hotmail.com  Mon Jun  8 21:14:01 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Mon, 8 Jun 2015 14:14:01 -0700
Subject: [Bitcoin-development] New attack identified and potential
	solution	described: Dropped-transaction spam attack against
	the block	size limit
In-Reply-To: <AD4A025F-D782-4094-9CBC-EBEF0DD04838@newcastle.ac.uk>
References: <5574E39C.3090904@thinlink.com>,
	<COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
	<AD4A025F-D782-4094-9CBC-EBEF0DD04838@newcastle.ac.uk>
Message-ID: <COL131-DS2729F02884BC43E54C8D63CDBF0@phx.gbl>

> If I were a miner under this attack, I would just use the spam to fill up 
> blocks alongside normal transactions maximising my profit.

You are assuming here that you can identify which transactions are spam, and 
which are not, and then segregate the spam into a separate channels of 
transactions for inclusion on a 50/50 basis alongside other transactions. 
There is no guarantee you will be able to identify those transactions. 
Sure, if you can do that, then the easy fix is just to put them into a lower 
class channel of transactions that guarantee no pressure on the non-spam 
transactions.  But it's just not possible to do this in any meaningful way. 
If you wanted to try, it would certainly add quite a bit of cost and 
complexity on the miner's side, and you aren't going to get anything other 
than the simple spam that comes from the same set of addresses.

> If I were to spam a lot of transactions to fill the memory pool it would 
> cost $120 every 10 minutes

You need to account for the transactions coming from real users.  Every real 
transaction is approximately one less spam transaction you need to fill the 
blocks.

> there is no memory pool cap currently

Real hardware does not have an infinite amount of RAM.  Memory pool sizes 
cannot grow unbounded.  Some transactions with insufficient fees do get 
dropped today after many hours.


-----Original Message----- 
From: Patrick Mccorry (PGR)
Sent: Monday, June 08, 2015 1:28 PM
To: Raystonn .
Cc: Bitcoin Dev
Subject: Re: [Bitcoin-development] New attack identified and potential 
solution described: Dropped-transaction spam attack against the block size 
limit

Please correct me if I'm wrong (hopefully understood it). I don't think 
normal users would need to pay a higher fee - as miners can just ignore the 
spam (since they will all be linked).

If I were to spam a lot of transactions to fill the memory pool it would 
cost $120 every 10 minutes (assuming 4,000 tx can fit inside a block and 3 
cents per transaction), anything exceeding that may be considered "spam" - 
although I don't know if it would be "free" as the miner will eventually 
claim all the fees, delayed payment is probably a better way to describe it. 
IIRC, there is no memory pool cap currently. To spam 1 million transactions 
would cost $30k which would take up approx 250 blocks (around 250mb) which 
is around 42 hours to process. I think the memory pool can handle this data 
today (someone more knowledgeable can check this for me) - so the attack is 
v.expensive to carry out.

A good way to prevent this spamming the memory pool is to only accept up to 
a 'x' length of 0-confirmed transactions to make it more difficult to pull 
off (not impossible).

If I were a miner under this attack, I would just use the spam to fill up 
blocks alongside normal transactions maximising my profit.

Sent from my iPhone

> On 8 Jun 2015, at 21:09, Raystonn . <raystonn at hotmail.com> wrote:
>
> When implemented, the block size limit was put in place to prevent the
> potential for a massive block to be used as an attack to benefit the miner
> of that block.  The theory goes that such a massive block would enrich its
> miner by delaying other miners who are now busy downloading and validating
> that huge block.  The original miner of that large-block would be free to
> continue hashing the next block, giving it an advantage.
>
> Unfortunately, this block size limit opened a different attack.  Prior to
> the limit, any attempt to spam the network by anyone other than someone
> mining their own transactions would have been economically unfeasible.  As
> every transaction would have a fee, there would have been a real cost for
> every minute of spam.  The end result would have been a transfer of wealth
> from spammer to Bitcoin miners, which would have harmed the spammers and
> encouraged further mining of Bitcoin, a very antifragile outcome.
>
> But now we have the block size limit.  Things are very different with this
> feature in place.  The beginning of a spam attack on the Bitcoin network
> will incur transaction fees, just like before.  But if spam continues at a
> rate exceeding the block size limit long enough for transactions to be
> dropped from mempools, the vast majority of spam transaction fees will 
> never
> have to be paid.  In fact, as real users gain in desperation and pay 
> higher
> fees to get their transactions through in a timely manner, the spammers 
> will
> adjust their fees to minimize the cost of the attack and maximize
> effectiveness.  Using this method, they keep their fees at a point that
> causes most of the spam transactions to be dropped without confirmation
> (free spam), while forcing a floor for transaction fees.  Thus, while spam
> could be used by attackers to disable the network entirely, by paying
> high-enough fees to actually fill the blocks with spam, it can also be 
> used
> by a single entity to force a transaction fee floor.  Real users will be
> forced to pay a transaction fee higher than the majority of the spam to 
> get
> their transactions confirmed.  So this is an effective means for a 
> minority
> of miners to force higher fees through spam attacks, even in the face of
> benevolent miners who would not support a higher fee floor by policy.
> Miners would simply have no way to fix this, as they can only put in the
> transactions that will fit under the block size limit.
>
> In the face of such a spam attack, Bitcoin's credibility and usability 
> would
> be severely undermined.  The block size limit enables this attack, and I 
> now
> argue for its removal.  But we can't just remove it and ignore the problem
> that it was intended to address.  We need a new fix for the large-block
> problem described in the first paragraph that does not suffer from the
> dropped-transaction spam-attack problem that is enabled by the block size
> limit today.  My proposal is likely to be controversial, and I'm very much
> open to hearing other better proposals.
>
> Large blocks created by a miner as a means to spam other miners out of
> competition is a problem because miners do not pay fees for their own
> transactions when they mine them.  They collect the fees they pay.  This
> breaks the economic barrier keeping people from spamming the network, as 
> the
> spamming is essentially free.  The proposed fix is to add a new rule on 
> how
> fees are handled.  Some amount of every fee should be considered as burned
> and can never be spent.  I will propose 50% of the fee here, but there may
> be better numbers that can be discovered prior to putting this into place.
> If we'd like miners to continue to collect the same fees after this 
> change,
> we can suggest the default fee per transaction to be doubled.  Half of 
> every
> fee would be burned and disappear forever, effectively distributing the
> value of those bitcoins across the entire money supply.  The other half
> would be collected by the miner of the block as is done today.  This
> solution would mean large blocks would cost a significant number of 
> bitcoin
> to create, even when all of the transactions are created by the miner of
> that block.  For this to work, we'd need to ensure a minimum fee is paid 
> for
> most of the transactions in every block, and the new transaction fee rule 
> is
> in place.  Then the block size limit can be removed.
>
> Raystonn
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development 




From danny.thorpe at gmail.com  Mon Jun  8 21:25:40 2015
From: danny.thorpe at gmail.com (Danny Thorpe)
Date: Mon, 8 Jun 2015 14:25:40 -0700
Subject: [Bitcoin-development] [RFC] Canonical input and output ordering
 in transactions
In-Reply-To: <87k2vhfnx9.fsf@rustcorp.com.au>
References: <87k2vhfnx9.fsf@rustcorp.com.au>
Message-ID: <CAJN5wHVSK-oW+zVZmEMfyFkd+GUHRhFHEjEmKrdvqas3LzY0zw@mail.gmail.com>

FWIW, The Open Assets colored coin protocol (CoinPrism) places special
significance on the zeroth input and the position of the OP_RETURN colored
coin marker output to distinguish colored coin issuance outputs from
transfer outputs. Reordering the inputs or the outputs breaks the colored
coin representation.

Recommending sorting of the inputs and outputs as a best practice is fine
(and better than random, IMO), but not as part of IsStandard() or consensus
rules.  There are cases where the order of the inputs and outputs is
significant.

-Danny

On Fri, Jun 5, 2015 at 9:42 PM, Rusty Russell <rusty at rustcorp.com.au> wrote:

> Title: Canonical Input and Output Ordering
> Author: Rusty Russell <rusty at rustcorp.com.au>
> Discussions-To: "Bitcoin Dev" <bitcoin-development at lists.sourceforge.net>
> Status: Draft
> Type: Standards Track
> Created: 2015-06-06
>
> Abstract
>
> This BIP provides a canonical ordering of inputs and outputs when
> creating transactions.
>
> Motivation
>
> Most bitcoin wallet implementations randomize the outputs of
> transactions they create to avoid trivial linkage analysis (especially
> change outputs), however implementations have made mistakes in this area
> in the past.
>
> Using a canonical ordering has the same effect, but is simpler, more
> obvious if incorrect, and can eventually be enforced by IsStandard() and
> even a soft-fork to enforce it.
>
> Specification
>
> Inputs should be ordered like so:
>         index (lower value first)
>         txid (little endian order, lower byte first)
>
> Outputs should be ordered like so:
>         amount (lower value first)
>         script (starting from first byte, lower byte first, shorter wins)
>
> Rationale
>
> Any single wallet is already free to implement this, but if other
> wallets do not it would reduce privacy by making those transactions
> stand out.  Thus a BIP is appropriate, especially if this were to
> become an IsStandard() rule once widely adopted.
>
> Because integers are fast to compare, they're sorted first, before the
> lexographical ordering.
>
> The other input fields do not influence the sort order, as any valid
> transactions cannot have two inputs with the same index and txid.
>
> Reference Implementation
>
> https://github.com/rustyrussell/bitcoin/tree/bip-in-out-ordering
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/d7100388/attachment.html>

From pete at petertodd.org  Mon Jun  8 21:33:36 2015
From: pete at petertodd.org (Peter Todd)
Date: Mon, 8 Jun 2015 17:33:36 -0400
Subject: [Bitcoin-development] New attack identified and potential
 solution	described: Dropped-transaction spam attack against the block	size
 limit
In-Reply-To: <COL131-DS2729F02884BC43E54C8D63CDBF0@phx.gbl>
References: <5574E39C.3090904@thinlink.com>
	<COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
	<AD4A025F-D782-4094-9CBC-EBEF0DD04838@newcastle.ac.uk>
	<COL131-DS2729F02884BC43E54C8D63CDBF0@phx.gbl>
Message-ID: <20150608213336.GA19826@muck>

On Mon, Jun 08, 2015 at 02:14:01PM -0700, Raystonn . wrote:
> > there is no memory pool cap currently
> 
> Real hardware does not have an infinite amount of RAM.  Memory pool sizes 
> cannot grow unbounded.  Some transactions with insufficient fees do get 
> dropped today after many hours.

Actually they don't, which is an unfortunate problem with the existing
mempool implementation; the only way a transaction can be removed from a
Bitcoin Core mempool is through it getting mined, double-spent, or the
node restarting.

The protection that we have against that attack is that you need access
to a lot of bitcoins to pay enough fees. With the 0.01mBTC/KB minimum
relay fee and $230 USD/BTC that works out to about $2.3kUSD/GB of ram
consumed, and furthermore, actually getting that many transactions to
propagate over the network is non-trivial. (no, I'm not going to tell
you how)

The obvious solution is to cap the size of the mempool and evict
transactions lowest fee/KB first, but if you do that they you (further)
break zeroconf security. On the other hand, if you don't break zeroconf
security an attacker can prevent reasonable fee transactions from
propagating.

I probably should get around to fixing this...

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/8ec8b81f/attachment.sig>

From raystonn at hotmail.com  Mon Jun  8 21:33:54 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Mon, 8 Jun 2015 14:33:54 -0700
Subject: [Bitcoin-development] New attack identified and potential
	solution	described: Dropped-transaction spam attack against
	the block	size limit
In-Reply-To: <7E7DF414-6DDB-48A6-9199-D6883209B67D@newcastle.ac.uk>
References: <5574E39C.3090904@thinlink.com>,
	<COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
	<AD4A025F-D782-4094-9CBC-EBEF0DD04838@newcastle.ac.uk>,
	<COL131-DS2729F02884BC43E54C8D63CDBF0@phx.gbl>
	<7E7DF414-6DDB-48A6-9199-D6883209B67D@newcastle.ac.uk>
Message-ID: <COL131-DS61BB9B5776DE65077ED0ACDBF0@phx.gbl>

> the attack would be expensive.

For attacks being waged to destroy Bitcoin by filling all blocks with spam transactions, the attack succeeds when the attacker is well funded.  This gives well-funded private and/or public entities the means to destroy Bitcoin if they desire.  This is only true after the block size limit was implemented.  Without the block size limit, the spam doesn?t harm Bitcoin.  It simply enriches miners at the cost of the spammers, which is a nicely antifragile quality.

For attacks being waged to push up minimum fees for the benefit of miners, by filling the mempool with enough spam transactions with the floor fee to cover a new block every time another block is discovered, they stand to gain.  Whatever fees they are paying, real transactions will have to pay more to get through.  It can be a net gain depending on how many miners are participating.


From: Patrick Mccorry (PGR) 
Sent: Monday, June 08, 2015 2:21 PM
To: Raystonn . 
Cc: Bitcoin Dev 
Subject: Re: [Bitcoin-development] New attack identified and potential solution described: Dropped-transaction spam attack against the block size limit

    If I were a miner under this attack, I would just use the spam to fill up blocks alongside normal transactions maximising my profit.

  You are assuming here that you can identify which transactions are spam, and which are not, and then segregate the spam into a separate channels of transactions for inclusion on a 50/50 basis alongside other transactions. There is no guarantee you will be able to identify those transactions. Sure, if you can do that, then the easy fix is just to put them into a lower class channel of transactions that guarantee no pressure on the non-spam transactions.  But it's just not possible to do this in any meaningful way. If you wanted to try, it would certainly add quite a bit of cost and complexity on the miner's side, and you aren't going to get anything other than the simple spam that comes from the same set of addresses.

Well it depends how the transactions spam - if you do a huge link of transactions (one after another, with the total bitcoins "sent" being reduced by a fee each time) this is easily identifiable - if you were to do it using unlinked transactions then this would require 2x the setup (do a lot of mixing to get 1 million unlinked outputs and then commence attack) which doubles the cost of the attack. 

    If I were to spam a lot of transactions to fill the memory pool it would cost $120 every 10 minutes

  You need to account for the transactions coming from real users.  Every real transaction is approximately one less spam transaction you need to fill the blocks.


I was suggesting the cost of an adversary to send the spam - if he did manage to fill the entire block each time that's the maximum charge. Of course the costs get spread out if normal transactions are included. 

    there is no memory pool cap currently

  Real hardware does not have an infinite amount of RAM.  Memory pool sizes cannot grow unbounded.  Some transactions with insufficient fees do get dropped today after many hours.

That's true that's why I used 250mb as an example to cost $30k. Cheap laptops today (around ?300) come with 6gb ram - so the attack would be expensive. 

I do doubt the miners codes probably are not prepared for an attack of this type - but it is really expensive to pull off from what I can see. 

Sent from my iPhone

On 8 Jun 2015, at 22:14, Raystonn . <raystonn at hotmail.com> wrote:


    If I were a miner under this attack, I would just use the spam to fill up blocks alongside normal transactions maximising my profit.


  You are assuming here that you can identify which transactions are spam, and which are not, and then segregate the spam into a separate channels of transactions for inclusion on a 50/50 basis alongside other transactions. There is no guarantee you will be able to identify those transactions. Sure, if you can do that, then the easy fix is just to put them into a lower class channel of transactions that guarantee no pressure on the non-spam transactions.  But it's just not possible to do this in any meaningful way. If you wanted to try, it would certainly add quite a bit of cost and complexity on the miner's side, and you aren't going to get anything other than the simple spam that comes from the same set of addresses.


    If I were to spam a lot of transactions to fill the memory pool it would cost $120 every 10 minutes


  You need to account for the transactions coming from real users.  Every real transaction is approximately one less spam transaction you need to fill the blocks.


    there is no memory pool cap currently


  Real hardware does not have an infinite amount of RAM.  Memory pool sizes cannot grow unbounded.  Some transactions with insufficient fees do get dropped today after many hours.


  -----Original Message----- From: Patrick Mccorry (PGR)
  Sent: Monday, June 08, 2015 1:28 PM
  To: Raystonn .
  Cc: Bitcoin Dev
  Subject: Re: [Bitcoin-development] New attack identified and potential solution described: Dropped-transaction spam attack against the block size limit

  Please correct me if I'm wrong (hopefully understood it). I don't think normal users would need to pay a higher fee - as miners can just ignore the spam (since they will all be linked).

  If I were to spam a lot of transactions to fill the memory pool it would cost $120 every 10 minutes (assuming 4,000 tx can fit inside a block and 3 cents per transaction), anything exceeding that may be considered "spam" - although I don't know if it would be "free" as the miner will eventually claim all the fees, delayed payment is probably a better way to describe it. IIRC, there is no memory pool cap currently. To spam 1 million transactions would cost $30k which would take up approx 250 blocks (around 250mb) which is around 42 hours to process. I think the memory pool can handle this data today (someone more knowledgeable can check this for me) - so the attack is v.expensive to carry out.

  A good way to prevent this spamming the memory pool is to only accept up to a 'x' length of 0-confirmed transactions to make it more difficult to pull off (not impossible).

  If I were a miner under this attack, I would just use the spam to fill up blocks alongside normal transactions maximising my profit.

  Sent from my iPhone


    On 8 Jun 2015, at 21:09, Raystonn . <raystonn at hotmail.com> wrote:



    When implemented, the block size limit was put in place to prevent the

    potential for a massive block to be used as an attack to benefit the miner

    of that block.  The theory goes that such a massive block would enrich its

    miner by delaying other miners who are now busy downloading and validating

    that huge block.  The original miner of that large-block would be free to

    continue hashing the next block, giving it an advantage.



    Unfortunately, this block size limit opened a different attack.  Prior to

    the limit, any attempt to spam the network by anyone other than someone

    mining their own transactions would have been economically unfeasible.  As

    every transaction would have a fee, there would have been a real cost for

    every minute of spam.  The end result would have been a transfer of wealth

    from spammer to Bitcoin miners, which would have harmed the spammers and

    encouraged further mining of Bitcoin, a very antifragile outcome.



    But now we have the block size limit.  Things are very different with this

    feature in place.  The beginning of a spam attack on the Bitcoin network

    will incur transaction fees, just like before.  But if spam continues at a

    rate exceeding the block size limit long enough for transactions to be

    dropped from mempools, the vast majority of spam transaction fees will never

    have to be paid.  In fact, as real users gain in desperation and pay higher

    fees to get their transactions through in a timely manner, the spammers will

    adjust their fees to minimize the cost of the attack and maximize

    effectiveness.  Using this method, they keep their fees at a point that

    causes most of the spam transactions to be dropped without confirmation

    (free spam), while forcing a floor for transaction fees.  Thus, while spam

    could be used by attackers to disable the network entirely, by paying

    high-enough fees to actually fill the blocks with spam, it can also be used

    by a single entity to force a transaction fee floor.  Real users will be

    forced to pay a transaction fee higher than the majority of the spam to get

    their transactions confirmed.  So this is an effective means for a minority

    of miners to force higher fees through spam attacks, even in the face of

    benevolent miners who would not support a higher fee floor by policy.

    Miners would simply have no way to fix this, as they can only put in the

    transactions that will fit under the block size limit.



    In the face of such a spam attack, Bitcoin's credibility and usability would

    be severely undermined.  The block size limit enables this attack, and I now

    argue for its removal.  But we can't just remove it and ignore the problem

    that it was intended to address.  We need a new fix for the large-block

    problem described in the first paragraph that does not suffer from the

    dropped-transaction spam-attack problem that is enabled by the block size

    limit today.  My proposal is likely to be controversial, and I'm very much

    open to hearing other better proposals.



    Large blocks created by a miner as a means to spam other miners out of

    competition is a problem because miners do not pay fees for their own

    transactions when they mine them.  They collect the fees they pay.  This

    breaks the economic barrier keeping people from spamming the network, as the

    spamming is essentially free.  The proposed fix is to add a new rule on how

    fees are handled.  Some amount of every fee should be considered as burned

    and can never be spent.  I will propose 50% of the fee here, but there may

    be better numbers that can be discovered prior to putting this into place.

    If we'd like miners to continue to collect the same fees after this change,

    we can suggest the default fee per transaction to be doubled.  Half of every

    fee would be burned and disappear forever, effectively distributing the

    value of those bitcoins across the entire money supply.  The other half

    would be collected by the miner of the block as is done today.  This

    solution would mean large blocks would cost a significant number of bitcoin

    to create, even when all of the transactions are created by the miner of

    that block.  For this to work, we'd need to ensure a minimum fee is paid for

    most of the transactions in every block, and the new transaction fee rule is

    in place.  Then the block size limit can be removed.



    Raystonn





    ------------------------------------------------------------------------------

    _______________________________________________

    Bitcoin-development mailing list

    Bitcoin-development at lists.sourceforge.net

    https://lists.sourceforge.net/lists/listinfo/bitcoin-development 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/0ec8b183/attachment.html>

From pete at petertodd.org  Mon Jun  8 21:36:11 2015
From: pete at petertodd.org (Peter Todd)
Date: Mon, 8 Jun 2015 17:36:11 -0400
Subject: [Bitcoin-development] [RFC] Canonical input and output ordering
 in transactions
In-Reply-To: <CAJN5wHVSK-oW+zVZmEMfyFkd+GUHRhFHEjEmKrdvqas3LzY0zw@mail.gmail.com>
References: <87k2vhfnx9.fsf@rustcorp.com.au>
	<CAJN5wHVSK-oW+zVZmEMfyFkd+GUHRhFHEjEmKrdvqas3LzY0zw@mail.gmail.com>
Message-ID: <20150608213611.GB19826@muck>

On Mon, Jun 08, 2015 at 02:25:40PM -0700, Danny Thorpe wrote:
> FWIW, The Open Assets colored coin protocol (CoinPrism) places special
> significance on the zeroth input and the position of the OP_RETURN colored
> coin marker output to distinguish colored coin issuance outputs from
> transfer outputs. Reordering the inputs or the outputs breaks the colored
> coin representation.
> 
> Recommending sorting of the inputs and outputs as a best practice is fine
> (and better than random, IMO), but not as part of IsStandard() or consensus
> rules.  There are cases where the order of the inputs and outputs is
> significant.

Timestamping is another case where order matters: if you put the digest
in the last vout you can use SHA256 midstate's to reduce the size of the
timestamp proof.

Anyway, there's no reason to rush re: changes to IsStandard()

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/6b176e01/attachment.sig>

From raystonn at hotmail.com  Mon Jun  8 21:40:17 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Mon, 8 Jun 2015 14:40:17 -0700
Subject: [Bitcoin-development] New attack identified and potential
	solution	described: Dropped-transaction spam attack against
	the blocksize limit
In-Reply-To: <20150608213336.GA19826@muck>
References: <5574E39C.3090904@thinlink.com>
	<COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
	<AD4A025F-D782-4094-9CBC-EBEF0DD04838@newcastle.ac.uk>
	<COL131-DS2729F02884BC43E54C8D63CDBF0@phx.gbl>
	<20150608213336.GA19826@muck>
Message-ID: <COL131-DS227FCC3AAB9F46ED79E97CCDBF0@phx.gbl>

> the only way a transaction can be removed from a Bitcoin Core mempool is 
> through it getting mined, double-spent, or the node restarting.

Right.  And that results in some transactions with insufficient fees getting 
dropped today after many hours.

> The protection that we have against that attack is that you need access to 
> a lot of bitcoins to pay enough fees.

That's no protection against a well-funded private and/or public entity. 
Without the block size limit, this attack doesn't exist.  It would simply 
result in a transfer of wealth from spammer to miners, which is a nicely 
antifragile response for the Bitcoin network.


-----Original Message----- 
From: Peter Todd
Sent: Monday, June 08, 2015 2:33 PM
To: Raystonn .
Cc: Patrick Mccorry (PGR) ; Bitcoin Dev
Subject: Re: [Bitcoin-development] New attack identified and potential 
solution described: Dropped-transaction spam attack against the blocksize 
limit

> > there is no memory pool cap currently
>
> Real hardware does not have an infinite amount of RAM.  Memory pool sizes
> cannot grow unbounded.  Some transactions with insufficient fees do get
> dropped today after many hours.

Actually they don't, which is an unfortunate problem with the existing
mempool implementation; the only way a transaction can be removed from a
Bitcoin Core mempool is through it getting mined, double-spent, or the
node restarting.

The protection that we have against that attack is that you need access
to a lot of bitcoins to pay enough fees. With the 0.01mBTC/KB minimum
relay fee and $230 USD/BTC that works out to about $2.3kUSD/GB of ram
consumed, and furthermore, actually getting that many transactions to
propagate over the network is non-trivial. (no, I'm not going to tell
you how)

The obvious solution is to cap the size of the mempool and evict
transactions lowest fee/KB first, but if you do that they you (further)
break zeroconf security. On the other hand, if you don't break zeroconf
security an attacker can prevent reasonable fee transactions from
propagating.

I probably should get around to fixing this... 




From pete at petertodd.org  Mon Jun  8 21:44:43 2015
From: pete at petertodd.org (Peter Todd)
Date: Mon, 8 Jun 2015 17:44:43 -0400
Subject: [Bitcoin-development] New attack identified and potential
 solution	described: Dropped-transaction spam attack against the block	size
 limit
In-Reply-To: <COL131-DS61BB9B5776DE65077ED0ACDBF0@phx.gbl>
References: <5574E39C.3090904@thinlink.com>
	<COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
	<AD4A025F-D782-4094-9CBC-EBEF0DD04838@newcastle.ac.uk>
	<COL131-DS2729F02884BC43E54C8D63CDBF0@phx.gbl>
	<7E7DF414-6DDB-48A6-9199-D6883209B67D@newcastle.ac.uk>
	<COL131-DS61BB9B5776DE65077ED0ACDBF0@phx.gbl>
Message-ID: <20150608214443.GC19826@muck>

On Mon, Jun 08, 2015 at 02:33:54PM -0700, Raystonn . wrote:
> > the attack would be expensive.
> 
> For attacks being waged to destroy Bitcoin by filling all blocks with spam transactions, the attack succeeds when the attacker is well funded.  This gives well-funded private and/or public entities the means to destroy Bitcoin if they desire.  This is only true after the block size limit was implemented.  Without the block size limit, the spam doesn?t harm Bitcoin.  It simply enriches miners at the cost of the spammers, which is a nicely antifragile quality.

There will always be a blocksize limit based on technological
considerations - the network has a finite bandwidth limit.

Without a blocksize limit the attacker would just flood the network
until the bandwidth usage became so great that consensus would fail,
rendering Bitcoin both worthless, and insecure.

The worst an attacker flooding the network with transactions with a
blocksize limit can do is raise costs, without harming security. Keep in
mind, that at some point it'd be cheaper to just 51% attack the network.
Based on the current block subsidy of 25BTC/MB that's at the point where
transaction fees are 25mBTC/KB, which corresponds to <$2/tx fees - not
that cheap, but still quite affordable for a large percentage of
Bitcoin's users right now. And that's the *absolute worst-case* attack
possible.

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/82d18602/attachment.sig>

From raystonn at hotmail.com  Mon Jun  8 22:01:34 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Mon, 8 Jun 2015 15:01:34 -0700
Subject: [Bitcoin-development] New attack identified and potential
	solution	described: Dropped-transaction spam attack against
	the blocksize limit
In-Reply-To: <20150608214443.GC19826@muck>
References: <5574E39C.3090904@thinlink.com>
	<COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
	<AD4A025F-D782-4094-9CBC-EBEF0DD04838@newcastle.ac.uk>
	<COL131-DS2729F02884BC43E54C8D63CDBF0@phx.gbl>
	<7E7DF414-6DDB-48A6-9199-D6883209B67D@newcastle.ac.uk>
	<COL131-DS61BB9B5776DE65077ED0ACDBF0@phx.gbl>
	<20150608214443.GC19826@muck>
Message-ID: <COL131-DS52C1B18F4EFC4D7D7EEA1CDBF0@phx.gbl>

> There will always be a blocksize limit based on technological 
> considerations - the network has a finite bandwidth limit.

A bandwidth limit is not the same as a blocksize limit.  Bandwidth is unique 
to every individual.  Miners in China have different bandwidth and 
connectivity than miners in the U.S., for example.  But the block size limit 
is dictated for eveyone.  They are not comparable.

> Without a blocksize limit the attacker would just flood the network until 
> the bandwidth usage became so great that consensus would fail, rendering 
> Bitcoin both worthless, and insecure.

No, with no blocksize limit, a spammer would would flood the network with 
transactions until they ran out of money.  Meanwhile, everyone would jump on 
board trying to mine the blocks to collect the fees from the spammers.  It 
could be one of the greatest transfers of wealth ever.  Bitcoin 
infrastructure would build up to handle the required bandwidth, paid for by 
the very entity spamming the network.  Bitcoin would flourish, growing 
wildly as long as the fees kept coming.  This is antifragility at its best.

> The worst an attacker flooding the network with transactions with a 
> blocksize limit can do is raise costs, without harming security.

No, at attacker flooding the network with transactions with a blocksize 
limit can keep their fees high enough that perhaps 1% of transactions coming 
from real end-users go through.  At this point everyone would give up on 
Bitcoin as it would become completely unusable.  The BTCUSD market would 
tank, making it even easier to pay the transaction fees to keep real 
transactions out of blocks, as it would continue to become cheaper and 
eventually cost-free to obtain the bitcoin fees through market purchase.


-----Original Message----- 
From: Peter Todd
Sent: Monday, June 08, 2015 2:44 PM
To: Raystonn .
Cc: Patrick Mccorry (PGR) ; Bitcoin Dev
Subject: Re: [Bitcoin-development] New attack identified and potential 
solution described: Dropped-transaction spam attack against the blocksize 
limit

On Mon, Jun 08, 2015 at 02:33:54PM -0700, Raystonn . wrote:
> > the attack would be expensive.
>
> For attacks being waged to destroy Bitcoin by filling all blocks with spam 
> transactions, the attack succeeds when the attacker is well funded.  This 
> gives well-funded private and/or public entities the means to destroy 
> Bitcoin if they desire.  This is only true after the block size limit was 
> implemented.  Without the block size limit, the spam doesn?t harm Bitcoin. 
> It simply enriches miners at the cost of the spammers, which is a nicely 
> antifragile quality.

There will always be a blocksize limit based on technological 
considerations - the network has a finite bandwidth limit.

Without a blocksize limit the attacker would just flood the network until 
the bandwidth usage became so great that consensus would fail, rendering 
Bitcoin both worthless, and insecure.

The worst an attacker flooding the network with transactions with a 
blocksize limit can do is raise costs, without harming security. Keep in 
mind, that at some point it'd be cheaper to just 51% attack the network. 
Based on the current block subsidy of 25BTC/MB that's at the point where 
transaction fees are 25mBTC/KB, which corresponds to <$2/tx fees - not that 
cheap, but still quite affordable for a large percentage of Bitcoin's users 
right now. And that's the *absolute worst-case* attack possible.




From bob_bitcoin at mcelrath.org  Mon Jun  8 22:06:00 2015
From: bob_bitcoin at mcelrath.org (Bob McElrath)
Date: Mon, 08 Jun 2015 18:06:00 -0400
Subject: [Bitcoin-development] New attack identified and potential
	solution	described: Dropped-transaction spam attack against
	the block	size limit
In-Reply-To: <20150608214443.GC19826@muck>
References: <5574E39C.3090904@thinlink.com>
	<COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
	<AD4A025F-D782-4094-9CBC-EBEF0DD04838@newcastle.ac.uk>
	<COL131-DS2729F02884BC43E54C8D63CDBF0@phx.gbl>
	<7E7DF414-6DDB-48A6-9199-D6883209B67D@newcastle.ac.uk>
	<COL131-DS61BB9B5776DE65077ED0ACDBF0@phx.gbl>
	<20150608214443.GC19826@muck>
Message-ID: <F0732D02-2452-46FC-BBAD-9DFDA95D2EFB@mcelrath.org>

There was this wonderful technology invented a few years ago to deal with spam. It's called Hashcash. All these hacky heuristics like block size are just dancing around the problem, and the natural solution is already present in bitcoin: smaller blocks, (down to the point of individual transactions) each mined. Don't relay things that haven't been mined. As spam or transaction levels go up, mining targets for submission go up too.

Of course this is a pretty serious redesign of bitcoin, and I'm not offering a concrete proposal at this time (but have one in the works, and I'd like to see others).

I call the parameters of these hacky heuristics "Consensus Threatening Quantities" (CTQs) because changing them induces a hard fork. Bitcoin is full of them (block time, block size, target difficulty, retarget time, etc) and bitcoin would do well to face difficult redesign questions head on, and remove them entirely. (Proposal to appear...)

On June 8, 2015 5:44:43 PM EDT, Peter Todd <pete at petertodd.org> wrote:
>On Mon, Jun 08, 2015 at 02:33:54PM -0700, Raystonn . wrote:
>> > the attack would be expensive.
>> 
>> For attacks being waged to destroy Bitcoin by filling all blocks with
>spam transactions, the attack succeeds when the attacker is well
>funded.  This gives well-funded private and/or public entities the
>means to destroy Bitcoin if they desire.  This is only true after the
>block size limit was implemented.  Without the block size limit, the
>spam doesn?t harm Bitcoin.  It simply enriches miners at the cost of
>the spammers, which is a nicely antifragile quality.
>
>There will always be a blocksize limit based on technological
>considerations - the network has a finite bandwidth limit.
>
>Without a blocksize limit the attacker would just flood the network
>until the bandwidth usage became so great that consensus would fail,
>rendering Bitcoin both worthless, and insecure.
>
>The worst an attacker flooding the network with transactions with a
>blocksize limit can do is raise costs, without harming security. Keep
>in
>mind, that at some point it'd be cheaper to just 51% attack the
>network.
>Based on the current block subsidy of 25BTC/MB that's at the point
>where
>transaction fees are 25mBTC/KB, which corresponds to <$2/tx fees - not
>that cheap, but still quite affordable for a large percentage of
>Bitcoin's users right now. And that's the *absolute worst-case* attack
>possible.
>
>-- 
>'peter'[:-1]@petertodd.org
>0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
>
>
>------------------------------------------------------------------------
>
>------------------------------------------------------------------------------
>
>
>!DSPAM:55760d26244955859016385!
>
>
>------------------------------------------------------------------------
>
>_______________________________________________
>Bitcoin-development mailing list
>Bitcoin-development at lists.sourceforge.net
>https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>!DSPAM:55760d26244955859016385!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/5e901d2e/attachment.html>

From btcdrak at gmail.com  Mon Jun  8 22:07:44 2015
From: btcdrak at gmail.com (Btc Drak)
Date: Mon, 8 Jun 2015 23:07:44 +0100
Subject: [Bitcoin-development] New attack identified and potential
 solution described: Dropped-transaction spam attack against the blocksize
 limit
In-Reply-To: <COL131-DS52C1B18F4EFC4D7D7EEA1CDBF0@phx.gbl>
References: <5574E39C.3090904@thinlink.com>
	<COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
	<AD4A025F-D782-4094-9CBC-EBEF0DD04838@newcastle.ac.uk>
	<COL131-DS2729F02884BC43E54C8D63CDBF0@phx.gbl>
	<7E7DF414-6DDB-48A6-9199-D6883209B67D@newcastle.ac.uk>
	<COL131-DS61BB9B5776DE65077ED0ACDBF0@phx.gbl>
	<20150608214443.GC19826@muck>
	<COL131-DS52C1B18F4EFC4D7D7EEA1CDBF0@phx.gbl>
Message-ID: <CADJgMztM1X4qudWocf5eYQ2fALHoWVu33gOkfQ-Co6NzWq8OGw@mail.gmail.com>

On Mon, Jun 8, 2015 at 11:01 PM, Raystonn . <raystonn at hotmail.com> wrote:

> No, with no blocksize limit, a spammer would would flood the network with
> transactions until they ran out of money.


I think you are forgetting even if you remove the blocksize limit, there is
still a hard message size limit imposed by the p2p protocol. Block would
de-facto be limited to this size.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/961926e8/attachment.html>

From raystonn at hotmail.com  Mon Jun  8 22:10:03 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Mon, 8 Jun 2015 15:10:03 -0700
Subject: [Bitcoin-development] New attack identified and potential
	solution described: Dropped-transaction spam attack against
	the blocksize limit
In-Reply-To: <CADJgMztM1X4qudWocf5eYQ2fALHoWVu33gOkfQ-Co6NzWq8OGw@mail.gmail.com>
References: <5574E39C.3090904@thinlink.com>
	<COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
	<AD4A025F-D782-4094-9CBC-EBEF0DD04838@newcastle.ac.uk>
	<COL131-DS2729F02884BC43E54C8D63CDBF0@phx.gbl>
	<7E7DF414-6DDB-48A6-9199-D6883209B67D@newcastle.ac.uk>
	<COL131-DS61BB9B5776DE65077ED0ACDBF0@phx.gbl>
	<20150608214443.GC19826@muck>
	<COL131-DS52C1B18F4EFC4D7D7EEA1CDBF0@phx.gbl>
	<CADJgMztM1X4qudWocf5eYQ2fALHoWVu33gOkfQ-Co6NzWq8OGw@mail.gmail.com>
Message-ID: <COL131-DS1513BA5E7AB827EAA819C1CDBF0@phx.gbl>

Not forgetting, simply deferring discussion on that.  We?ve a much smaller limit to deal with right now.  But even that limit would have to go to remove this attack.

From: Btc Drak 
Sent: Monday, June 08, 2015 3:07 PM
To: Raystonn . 
Cc: Peter Todd ; Bitcoin Dev ; Patrick Mccorry (PGR) 
Subject: Re: [Bitcoin-development] New attack identified and potential solution described: Dropped-transaction spam attack against the blocksize limit

On Mon, Jun 8, 2015 at 11:01 PM, Raystonn . <raystonn at hotmail.com> wrote:

  No, with no blocksize limit, a spammer would would flood the network with
  transactions until they ran out of money.

I think you are forgetting even if you remove the blocksize limit, there is still a hard message size limit imposed by the p2p protocol. Block would de-facto be limited to this size.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/e53bf0b4/attachment.html>

From pete at petertodd.org  Mon Jun  8 22:18:43 2015
From: pete at petertodd.org (Peter Todd)
Date: Mon, 8 Jun 2015 18:18:43 -0400
Subject: [Bitcoin-development] New attack identified and potential
 solution	described: Dropped-transaction spam attack against the blocksize
 limit
In-Reply-To: <COL131-DS52C1B18F4EFC4D7D7EEA1CDBF0@phx.gbl>
References: <5574E39C.3090904@thinlink.com>
	<COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
	<AD4A025F-D782-4094-9CBC-EBEF0DD04838@newcastle.ac.uk>
	<COL131-DS2729F02884BC43E54C8D63CDBF0@phx.gbl>
	<7E7DF414-6DDB-48A6-9199-D6883209B67D@newcastle.ac.uk>
	<COL131-DS61BB9B5776DE65077ED0ACDBF0@phx.gbl>
	<20150608214443.GC19826@muck>
	<COL131-DS52C1B18F4EFC4D7D7EEA1CDBF0@phx.gbl>
Message-ID: <20150608221843.GA4275@muck>

On Mon, Jun 08, 2015 at 03:01:34PM -0700, Raystonn . wrote:
> >There will always be a blocksize limit based on technological
> >considerations - the network has a finite bandwidth limit.
> 
> A bandwidth limit is not the same as a blocksize limit.  Bandwidth
> is unique to every individual.  Miners in China have different
> bandwidth and connectivity than miners in the U.S., for example.
> But the block size limit is dictated for eveyone.  They are not
> comparable.

Bitcoin is a global consensus system - if you're bandwidth isn't
sufficient to keep up you are not part of the consensus.

The blocksize limit *is* what determines the minimum bandwidth required
to stay in consensus.

> >Without a blocksize limit the attacker would just flood the
> >network until the bandwidth usage became so great that consensus
> >would fail, rendering Bitcoin both worthless, and insecure.
> 
> No, with no blocksize limit, a spammer would would flood the network
> with transactions until they ran out of money.  Meanwhile, everyone
> would jump on board trying to mine the blocks to collect the fees
> from the spammers.  It could be one of the greatest transfers of
> wealth ever.  Bitcoin infrastructure would build up to handle the
> required bandwidth, paid for by the very entity spamming the
> network.  Bitcoin would flourish, growing wildly as long as the fees
> kept coming.  This is antifragility at its best.

Again, in your scenario if the bandwidth consumed by those transactions
was sufficiently high, the network would collapse because consensus
would fail.

Why wouldn't that bandwidth be high enough to cause that collapse?
Because of the blocksize limit! (combined with an intelligent mempool
that increases the minimum fee/KB appropriately - we don't have that
yet)

> >The worst an attacker flooding the network with transactions with
> >a blocksize limit can do is raise costs, without harming security.
> 
> No, at attacker flooding the network with transactions with a
> blocksize limit can keep their fees high enough that perhaps 1% of
> transactions coming from real end-users go through.  At this point
> everyone would give up on Bitcoin as it would become completely
> unusable.  The BTCUSD market would tank, making it even easier to
> pay the transaction fees to keep real transactions out of blocks, as
> it would continue to become cheaper and eventually cost-free to
> obtain the bitcoin fees through market purchase.

I already did the math for you on that: the maximum transaction fee
you'd see in that kind of attack is around $2.5 USD/tx. That definitely
is not high enough to make Bitcoin non-viable - I personally could
easily afford fees like that for about 90% of my transactions this year
by value, as I mainly use Bitcoin to get paid by my clients around the
world. In fact, just today O'Reilly paid $15 USD to send me a wire
transfer for expenses related to a conference I was invited too.

A much more realistic transaction flood scenario - one that didn't raise
serious questions about whether or not the attacker could afford to 51%
attack Bitcoin - would raise tx fees to something more like $0.25/tx

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/c356183f/attachment.sig>

From pete at petertodd.org  Mon Jun  8 22:26:22 2015
From: pete at petertodd.org (Peter Todd)
Date: Mon, 8 Jun 2015 18:26:22 -0400
Subject: [Bitcoin-development] New attack identified and potential
 solution	described: Dropped-transaction spam attack against the block	size
 limit
In-Reply-To: <4A74E0B9-869E-448A-BFC7-7FD2F50F142F@newcastle.ac.uk>
References: <5574E39C.3090904@thinlink.com>
	<COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
	<AD4A025F-D782-4094-9CBC-EBEF0DD04838@newcastle.ac.uk>
	<COL131-DS2729F02884BC43E54C8D63CDBF0@phx.gbl>
	<20150608213336.GA19826@muck>
	<4A74E0B9-869E-448A-BFC7-7FD2F50F142F@newcastle.ac.uk>
Message-ID: <20150608222622.GA10819@muck>

On Mon, Jun 08, 2015 at 10:13:10PM +0000, Patrick Mccorry (PGR) wrote:
> With the 0.01mBTC/KB minimum
> relay fee and $230 USD/BTC that works out to about $2.3kUSD/GB of ram
> 
> IIRC, the fee is 0.1mBTC, so it's $23/MB (assuming 1,000 tx * 2.3 cents) and $23k/GB (assuming $23 * 1000, as each $23 is 1mb). Only pointing out as it highlights thats it's even more expense to do.

Mike Hearn reduced the minimum relay fee to 0.01mBTC/KB:

https://github.com/bitcoin/bitcoin/pull/3305

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/0dca52f6/attachment.sig>

From pete at petertodd.org  Mon Jun  8 22:28:16 2015
From: pete at petertodd.org (Peter Todd)
Date: Mon, 8 Jun 2015 18:28:16 -0400
Subject: [Bitcoin-development] New attack identified and potential
 solution	described: Dropped-transaction spam attack against the block	size
 limit
In-Reply-To: <F0732D02-2452-46FC-BBAD-9DFDA95D2EFB@mcelrath.org>
References: <5574E39C.3090904@thinlink.com>
	<COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
	<AD4A025F-D782-4094-9CBC-EBEF0DD04838@newcastle.ac.uk>
	<COL131-DS2729F02884BC43E54C8D63CDBF0@phx.gbl>
	<7E7DF414-6DDB-48A6-9199-D6883209B67D@newcastle.ac.uk>
	<COL131-DS61BB9B5776DE65077ED0ACDBF0@phx.gbl>
	<20150608214443.GC19826@muck>
	<F0732D02-2452-46FC-BBAD-9DFDA95D2EFB@mcelrath.org>
Message-ID: <20150608222815.GB10819@muck>

On Mon, Jun 08, 2015 at 06:06:00PM -0400, Bob McElrath wrote:
> There was this wonderful technology invented a few years ago to deal with spam. It's called Hashcash. All these hacky heuristics like block size are just dancing around the problem, and the natural solution is already present in bitcoin: smaller blocks, (down to the point of individual transactions) each mined. Don't relay things that haven't been mined. As spam or transaction levels go up, mining targets for submission go up too.

You know, you can think of Bitcoin as a system that maintains a ledger
for transferrable hashcash... Which means transaction fees *are* paid in
hashcash.

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/f6346052/attachment.sig>

From raystonn at hotmail.com  Mon Jun  8 22:46:59 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Mon, 8 Jun 2015 15:46:59 -0700
Subject: [Bitcoin-development] New attack identified and potential
	solution	described: Dropped-transaction spam attack against
	the blocksize limit
In-Reply-To: <20150608221843.GA4275@muck>
References: <5574E39C.3090904@thinlink.com>
	<COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
	<AD4A025F-D782-4094-9CBC-EBEF0DD04838@newcastle.ac.uk>
	<COL131-DS2729F02884BC43E54C8D63CDBF0@phx.gbl>
	<7E7DF414-6DDB-48A6-9199-D6883209B67D@newcastle.ac.uk>
	<COL131-DS61BB9B5776DE65077ED0ACDBF0@phx.gbl>
	<20150608214443.GC19826@muck>
	<COL131-DS52C1B18F4EFC4D7D7EEA1CDBF0@phx.gbl>
	<20150608221843.GA4275@muck>
Message-ID: <COL131-DS13BA58831B455DC05D1099CDBF0@phx.gbl>

> Bitcoin is a global consensus system - if you're (sic) bandwidth isn't 
> sufficient to keep up you are not part of the consensus.

Bandwidth can be purchased.  Infrastructure to handled increasing 
transaction volume can be purchased.  The very fees being paid by a spammer 
will be used to increase the miners' ability to absorb even more fees.  The 
blocksize limit cannot respond in such a dynamic way to attacks.  Miners 
cannot buy a greater blocksize limit in response to a spammer that is paying 
high fees to deny transaction confirmation to the rest of the planet in an 
attempt to destroy the network.  The blocksize limit is creating an attack 
that can be maintained forever by any organization that can afford to fill 
the blocks.  This attack would get incredibly cheaper once the BTCUSD market 
tanks in response to the lack of usability of the Bitcoin network, meaning 
it would be a self-reinforcing attack that would likely destroy Bitcoin for 
as long as an attacker wants to keep it up, or until you patch it to remove 
the limit after-the-fact, which might be too little too late.

If this isn't fixed, I would expect to see it carried out at some point by 
someone with a large short position in BTCUSD.

-----Original Message----- 
From: Peter Todd
Sent: Monday, June 08, 2015 3:18 PM
To: Raystonn .
Cc: Patrick Mccorry (PGR) ; Bitcoin Dev
Subject: Re: [Bitcoin-development] New attack identified and potential 
solution described: Dropped-transaction spam attack against the blocksize 
limit

On Mon, Jun 08, 2015 at 03:01:34PM -0700, Raystonn . wrote:
> >There will always be a blocksize limit based on technological
> >considerations - the network has a finite bandwidth limit.
>
> A bandwidth limit is not the same as a blocksize limit.  Bandwidth
> is unique to every individual.  Miners in China have different
> bandwidth and connectivity than miners in the U.S., for example.
> But the block size limit is dictated for eveyone.  They are not
> comparable.

Bitcoin is a global consensus system - if you're bandwidth isn't
sufficient to keep up you are not part of the consensus.

The blocksize limit *is* what determines the minimum bandwidth required
to stay in consensus.

> >Without a blocksize limit the attacker would just flood the
> >network until the bandwidth usage became so great that consensus
> >would fail, rendering Bitcoin both worthless, and insecure.
>
> No, with no blocksize limit, a spammer would would flood the network
> with transactions until they ran out of money.  Meanwhile, everyone
> would jump on board trying to mine the blocks to collect the fees
> from the spammers.  It could be one of the greatest transfers of
> wealth ever.  Bitcoin infrastructure would build up to handle the
> required bandwidth, paid for by the very entity spamming the
> network.  Bitcoin would flourish, growing wildly as long as the fees
> kept coming.  This is antifragility at its best.

Again, in your scenario if the bandwidth consumed by those transactions
was sufficiently high, the network would collapse because consensus
would fail.

Why wouldn't that bandwidth be high enough to cause that collapse?
Because of the blocksize limit! (combined with an intelligent mempool
that increases the minimum fee/KB appropriately - we don't have that
yet)

> >The worst an attacker flooding the network with transactions with
> >a blocksize limit can do is raise costs, without harming security.
>
> No, at attacker flooding the network with transactions with a
> blocksize limit can keep their fees high enough that perhaps 1% of
> transactions coming from real end-users go through.  At this point
> everyone would give up on Bitcoin as it would become completely
> unusable.  The BTCUSD market would tank, making it even easier to
> pay the transaction fees to keep real transactions out of blocks, as
> it would continue to become cheaper and eventually cost-free to
> obtain the bitcoin fees through market purchase.

I already did the math for you on that: the maximum transaction fee
you'd see in that kind of attack is around $2.5 USD/tx. That definitely
is not high enough to make Bitcoin non-viable - I personally could
easily afford fees like that for about 90% of my transactions this year
by value, as I mainly use Bitcoin to get paid by my clients around the
world. In fact, just today O'Reilly paid $15 USD to send me a wire
transfer for expenses related to a conference I was invited too.

A much more realistic transaction flood scenario - one that didn't raise
serious questions about whether or not the attacker could afford to 51%
attack Bitcoin - would raise tx fees to something more like $0.25/tx




From kristovatlas.lists at gmail.com  Mon Jun  8 22:53:54 2015
From: kristovatlas.lists at gmail.com (Kristov Atlas)
Date: Mon, 8 Jun 2015 18:53:54 -0400
Subject: [Bitcoin-development] Lexicographical Indexing of Transaction
 Inputs and Outputs
In-Reply-To: <20150607023523.GB1570@savin.petertodd.org>
References: <CAGH37SK0k1YUvadetyHcBGjzW+OHNFRmRwqsUDeHBGejUacigQ@mail.gmail.com>
	<44BE16F9-AB24-4A8E-BC7F-03A6C590FCE7@gmail.com>
	<CAGH37SL3TA7BXd3Y+4F1Fd5N3ZW+LRLvkfppPsPn61ZVbZJOnQ@mail.gmail.com>
	<CAGH37SLCc-aEG0t0H7fsUZOv_h+Fiw4xoonmfwNaFWBin_7HcQ@mail.gmail.com>
	<20150607023523.GB1570@savin.petertodd.org>
Message-ID: <CAGH37SLyG-g54-gGU5ZrmQsiogOqWNW1iiayHii1nWiWh+Nk=w@mail.gmail.com>

Hey Peter, thanks for your experienced feedback.

On Sat, Jun 6, 2015 at 10:35 PM, Peter Todd <pete at petertodd.org> wrote:

> Why mention SIGHASH_SINGLE at all? Its use-case is highly specialized
> protocols; you haven't taken into account the needs of those protocols.
> For BIP's it's better to stick to the use-cases where the need is clear
> and there exists running code that to speculate too much on future uses.
> With signature hashing in particular it's not yet clear at all what
> future OP_CHECKSIG's will look like, let alone the various ways people
> will use sighash for smart contract type stuff.
>
> You'd be better off presenting the BIP in terms of a generic statement
> that "except when otherwise prevented by advanced signature hashing
> requirements, wallet software must emit transactions sorted according to
> the following" You can then specify the two common cases in detail:
>
> 1) SIGHASH_ALL: input and output order signed, so sort appropriately
>
> 2) SIGHASH_ANYONECANPAY: input order not signed, so software should emit
>    transactions sorted, recognising that the actual mined order may be
>    changed.
>

That makes sense. I updated the language as follows -- your thoughts? Keep
in mind this BIP is informational, and so people are free to ignore it.

"Applicability: This BIP applies to all transactions of signature hash type
SIGHASH_ALL. Additionally,  software compliant with this BIP that allows
later parties to update the transaction (e.g. using signature hash types
SIGHASH_NONE or a variant of SIGHASH_ANYONECANPAY) should emit
lexicographically sorted inputs and outputs, although they may later be
modified. Transactions that have index dependencies between transactions or
within the same transaction are covered under the section of this BIP
entitled ?Handling Input/Output Dependencies.?"


> As for IsStandard() rules - let alone soft forks - better to leave
> discussion of them out for now. In particular, for the soft-fork case
> mandating certain transaction orders will very likely cause problems in
> the future for future OP_CHECKSIG upgrades. For SIGHASH_ANYONECANPAY, it
> might be appropriate for nodes to enforce a certain ordering, but that
> can be a separate BIP. (actually implementing that in Bitcoin Core would
> be annoying and ugly right now; without replace-by-fee ANYONECANPAY has
> a silly DoS attack (adding low-fee inputs) so I can't recommend wallets
> use it in the general case yet)
>
> "and a sequence number currently set to 0xFFFFFFFF." <- Actually, this
> will be changed in Bitcoin Core as of v0.11.0, which implements
> anti-fee-sniping w/ nLockTime.(1) (I need to write up a full BIP
> describing it)
>

Thanks for the heads-up; removed.


> Do you have a patch implementing deterministic tx ordering for Bitcoin
> Core yet?
>

I'm not a frequent C programmer, so I'd prefer to let someone else take
care of it, as a frequent committer of code would do a faster and more
stylistically consistent job of it. If no one else will, however, I will.

-Kristov
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/0d043ebb/attachment.html>

From kristovatlas.lists at gmail.com  Mon Jun  8 22:55:57 2015
From: kristovatlas.lists at gmail.com (Kristov Atlas)
Date: Mon, 8 Jun 2015 18:55:57 -0400
Subject: [Bitcoin-development] Lexicographical Indexing of Transaction
 Inputs and Outputs
In-Reply-To: <CAGH37SLyG-g54-gGU5ZrmQsiogOqWNW1iiayHii1nWiWh+Nk=w@mail.gmail.com>
References: <CAGH37SK0k1YUvadetyHcBGjzW+OHNFRmRwqsUDeHBGejUacigQ@mail.gmail.com>
	<44BE16F9-AB24-4A8E-BC7F-03A6C590FCE7@gmail.com>
	<CAGH37SL3TA7BXd3Y+4F1Fd5N3ZW+LRLvkfppPsPn61ZVbZJOnQ@mail.gmail.com>
	<CAGH37SLCc-aEG0t0H7fsUZOv_h+Fiw4xoonmfwNaFWBin_7HcQ@mail.gmail.com>
	<20150607023523.GB1570@savin.petertodd.org>
	<CAGH37SLyG-g54-gGU5ZrmQsiogOqWNW1iiayHii1nWiWh+Nk=w@mail.gmail.com>
Message-ID: <CAGH37S+21Z_taAP4Zpyr5bo8112aSxD2WKM2db9EhjAhzF+11w@mail.gmail.com>

>
> As for IsStandard() rules - let alone soft forks - better to leave
> discussion of them out for now.


Removed that bit as well.

 Latest version:
https://github.com/kristovatlas/rfc/blob/master/bips/bip-li01.mediawiki

-Kristov
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/683bd48c/attachment.html>

From loi.luuthe at gmail.com  Tue Jun  9 09:33:34 2015
From: loi.luuthe at gmail.com (Loi Luu)
Date: Tue, 9 Jun 2015 17:33:34 +0800
Subject: [Bitcoin-development] New attack identified and potential
 solution described: Dropped-transaction spam attack against the block size
 limit
In-Reply-To: <COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
References: <5574E39C.3090904@thinlink.com>
	<COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
Message-ID: <CAJmQggBcAw1u+Pha+67S4bG5FuKx0xi_dTffmEOUHPbwyJU1aA@mail.gmail.com>

>
> The proposed fix is to add a new rule on how
> fees are handled.  Some amount of every fee should be considered as burned
> and can never be spent.  I will propose 50% of the fee here, but there may
> be better numbers that can be discovered prior to putting this into place.
> If we'd like miners to continue to collect the same fees after this change,
> we can suggest the default fee per transaction to be doubled


I would propose another practical rule rather than burning 50% of the fee.
For example, you can
credit 50% of the transaction fee to the next block. Thus, the attacker
cannot perform
the attack with 0-fee any more, yet you don't have to double the price of
the TX fee for the fix.

Thanks,
Loi Luu.

On Tue, Jun 9, 2015 at 4:07 AM, Raystonn . <raystonn at hotmail.com> wrote:

> When implemented, the block size limit was put in place to prevent the
> potential for a massive block to be used as an attack to benefit the miner
> of that block.  The theory goes that such a massive block would enrich its
> miner by delaying other miners who are now busy downloading and validating
> that huge block.  The original miner of that large-block would be free to
> continue hashing the next block, giving it an advantage.
>
> Unfortunately, this block size limit opened a different attack.  Prior to
> the limit, any attempt to spam the network by anyone other than someone
> mining their own transactions would have been economically unfeasible.  As
> every transaction would have a fee, there would have been a real cost for
> every minute of spam.  The end result would have been a transfer of wealth
> from spammer to Bitcoin miners, which would have harmed the spammers and
> encouraged further mining of Bitcoin, a very antifragile outcome.
>
> But now we have the block size limit.  Things are very different with this
> feature in place.  The beginning of a spam attack on the Bitcoin network
> will incur transaction fees, just like before.  But if spam continues at a
> rate exceeding the block size limit long enough for transactions to be
> dropped from mempools, the vast majority of spam transaction fees will
> never
> have to be paid.  In fact, as real users gain in desperation and pay higher
> fees to get their transactions through in a timely manner, the spammers
> will
> adjust their fees to minimize the cost of the attack and maximize
> effectiveness.  Using this method, they keep their fees at a point that
> causes most of the spam transactions to be dropped without confirmation
> (free spam), while forcing a floor for transaction fees.  Thus, while spam
> could be used by attackers to disable the network entirely, by paying
> high-enough fees to actually fill the blocks with spam, it can also be used
> by a single entity to force a transaction fee floor.  Real users will be
> forced to pay a transaction fee higher than the majority of the spam to get
> their transactions confirmed.  So this is an effective means for a minority
> of miners to force higher fees through spam attacks, even in the face of
> benevolent miners who would not support a higher fee floor by policy.
> Miners would simply have no way to fix this, as they can only put in the
> transactions that will fit under the block size limit.
>
> In the face of such a spam attack, Bitcoin's credibility and usability
> would
> be severely undermined.  The block size limit enables this attack, and I
> now
> argue for its removal.  But we can't just remove it and ignore the problem
> that it was intended to address.  We need a new fix for the large-block
> problem described in the first paragraph that does not suffer from the
> dropped-transaction spam-attack problem that is enabled by the block size
> limit today.  My proposal is likely to be controversial, and I'm very much
> open to hearing other better proposals.
>
> Large blocks created by a miner as a means to spam other miners out of
> competition is a problem because miners do not pay fees for their own
> transactions when they mine them.  They collect the fees they pay.  This
> breaks the economic barrier keeping people from spamming the network, as
> the
> spamming is essentially free.  The proposed fix is to add a new rule on how
> fees are handled.  Some amount of every fee should be considered as burned
> and can never be spent.  I will propose 50% of the fee here, but there may
> be better numbers that can be discovered prior to putting this into place.
> If we'd like miners to continue to collect the same fees after this change,
> we can suggest the default fee per transaction to be doubled.  Half of
> every
> fee would be burned and disappear forever, effectively distributing the
> value of those bitcoins across the entire money supply.  The other half
> would be collected by the miner of the block as is done today.  This
> solution would mean large blocks would cost a significant number of bitcoin
> to create, even when all of the transactions are created by the miner of
> that block.  For this to work, we'd need to ensure a minimum fee is paid
> for
> most of the transactions in every block, and the new transaction fee rule
> is
> in place.  Then the block size limit can be removed.
>
> Raystonn
>
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150609/3947db5f/attachment.html>

From gavinandresen at gmail.com  Tue Jun  9 13:36:04 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Tue, 9 Jun 2015 09:36:04 -0400
Subject: [Bitcoin-development] New attack identified and potential
 solution described: Dropped-transaction spam attack against the block size
 limit
In-Reply-To: <CAJmQggBcAw1u+Pha+67S4bG5FuKx0xi_dTffmEOUHPbwyJU1aA@mail.gmail.com>
References: <5574E39C.3090904@thinlink.com>
	<COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
	<CAJmQggBcAw1u+Pha+67S4bG5FuKx0xi_dTffmEOUHPbwyJU1aA@mail.gmail.com>
Message-ID: <CABsx9T3tuBZePfS4_LCo4rp3aU6HFtrLbSDR28DktJyLQz2L-A@mail.gmail.com>

How about this for mitigating this potential attack:

1. Limit the memory pool to some reasonable number of blocks-worth of
transactions (e.g. 11)
2. If evicting transactions from the memory pool, prefer to evict
transactions that are part of long chains of unconfirmed transactions.
3. Allow blocks to grow in size in times of high transaction demand.

The combination of (1) and (2) means an attacker needs to prepare lots of
confirmed inputs to pull off the attack. By itself that means they MUST pay
transaction fees.

(3) further mitigates the attack because it allows miners to just absorb
fees that the attacker is throwing at miners.


On Tue, Jun 9, 2015 at 5:33 AM, Loi Luu <loi.luuthe at gmail.com> wrote:

> The proposed fix is to add a new rule on how
>> fees are handled.  Some amount of every fee should be considered as burned
>> and can never be spent.  I will propose 50% of the fee here, but there may
>> be better numbers that can be discovered prior to putting this into place.
>> If we'd like miners to continue to collect the same fees after this
>> change,
>> we can suggest the default fee per transaction to be doubled
>
>
> I would propose another practical rule rather than burning 50% of the fee.
> For example, you can
> credit 50% of the transaction fee to the next block. Thus, the attacker
> cannot perform
> the attack with 0-fee any more, yet you don't have to double the price of
> the TX fee for the fix.
>
> Thanks,
> Loi Luu.
>
> On Tue, Jun 9, 2015 at 4:07 AM, Raystonn . <raystonn at hotmail.com> wrote:
>
>> When implemented, the block size limit was put in place to prevent the
>> potential for a massive block to be used as an attack to benefit the miner
>> of that block.  The theory goes that such a massive block would enrich its
>> miner by delaying other miners who are now busy downloading and validating
>> that huge block.  The original miner of that large-block would be free to
>> continue hashing the next block, giving it an advantage.
>>
>> Unfortunately, this block size limit opened a different attack.  Prior to
>> the limit, any attempt to spam the network by anyone other than someone
>> mining their own transactions would have been economically unfeasible.  As
>> every transaction would have a fee, there would have been a real cost for
>> every minute of spam.  The end result would have been a transfer of wealth
>> from spammer to Bitcoin miners, which would have harmed the spammers and
>> encouraged further mining of Bitcoin, a very antifragile outcome.
>>
>> But now we have the block size limit.  Things are very different with this
>> feature in place.  The beginning of a spam attack on the Bitcoin network
>> will incur transaction fees, just like before.  But if spam continues at a
>> rate exceeding the block size limit long enough for transactions to be
>> dropped from mempools, the vast majority of spam transaction fees will
>> never
>> have to be paid.  In fact, as real users gain in desperation and pay
>> higher
>> fees to get their transactions through in a timely manner, the spammers
>> will
>> adjust their fees to minimize the cost of the attack and maximize
>> effectiveness.  Using this method, they keep their fees at a point that
>> causes most of the spam transactions to be dropped without confirmation
>> (free spam), while forcing a floor for transaction fees.  Thus, while spam
>> could be used by attackers to disable the network entirely, by paying
>> high-enough fees to actually fill the blocks with spam, it can also be
>> used
>> by a single entity to force a transaction fee floor.  Real users will be
>> forced to pay a transaction fee higher than the majority of the spam to
>> get
>> their transactions confirmed.  So this is an effective means for a
>> minority
>> of miners to force higher fees through spam attacks, even in the face of
>> benevolent miners who would not support a higher fee floor by policy.
>> Miners would simply have no way to fix this, as they can only put in the
>> transactions that will fit under the block size limit.
>>
>> In the face of such a spam attack, Bitcoin's credibility and usability
>> would
>> be severely undermined.  The block size limit enables this attack, and I
>> now
>> argue for its removal.  But we can't just remove it and ignore the problem
>> that it was intended to address.  We need a new fix for the large-block
>> problem described in the first paragraph that does not suffer from the
>> dropped-transaction spam-attack problem that is enabled by the block size
>> limit today.  My proposal is likely to be controversial, and I'm very much
>> open to hearing other better proposals.
>>
>> Large blocks created by a miner as a means to spam other miners out of
>> competition is a problem because miners do not pay fees for their own
>> transactions when they mine them.  They collect the fees they pay.  This
>> breaks the economic barrier keeping people from spamming the network, as
>> the
>> spamming is essentially free.  The proposed fix is to add a new rule on
>> how
>> fees are handled.  Some amount of every fee should be considered as burned
>> and can never be spent.  I will propose 50% of the fee here, but there may
>> be better numbers that can be discovered prior to putting this into place.
>> If we'd like miners to continue to collect the same fees after this
>> change,
>> we can suggest the default fee per transaction to be doubled.  Half of
>> every
>> fee would be burned and disappear forever, effectively distributing the
>> value of those bitcoins across the entire money supply.  The other half
>> would be collected by the miner of the block as is done today.  This
>> solution would mean large blocks would cost a significant number of
>> bitcoin
>> to create, even when all of the transactions are created by the miner of
>> that block.  For this to work, we'd need to ensure a minimum fee is paid
>> for
>> most of the transactions in every block, and the new transaction fee rule
>> is
>> in place.  Then the block size limit can be removed.
>>
>> Raystonn
>>
>>
>>
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>


-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150609/39174ba9/attachment.html>

From tier.nolan at gmail.com  Tue Jun  9 14:18:40 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Tue, 9 Jun 2015 15:18:40 +0100
Subject: [Bitcoin-development] New attack identified and potential
 solution described: Dropped-transaction spam attack against the block size
 limit
In-Reply-To: <CABsx9T3tuBZePfS4_LCo4rp3aU6HFtrLbSDR28DktJyLQz2L-A@mail.gmail.com>
References: <5574E39C.3090904@thinlink.com>
	<COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
	<CAJmQggBcAw1u+Pha+67S4bG5FuKx0xi_dTffmEOUHPbwyJU1aA@mail.gmail.com>
	<CABsx9T3tuBZePfS4_LCo4rp3aU6HFtrLbSDR28DktJyLQz2L-A@mail.gmail.com>
Message-ID: <CAE-z3OXfoAM-xgikzEUz=uYqgJBMr1x5_npU6Q-SBgw6gJ4jHA@mail.gmail.com>

On Tue, Jun 9, 2015 at 2:36 PM, Gavin Andresen <gavinandresen at gmail.com>
wrote:

> How about this for mitigating this potential attack:
>
> 1. Limit the memory pool to some reasonable number of blocks-worth of
> transactions (e.g. 11)
> 2. If evicting transactions from the memory pool, prefer to evict
> transactions that are part of long chains of unconfirmed transactions.
> 3. Allow blocks to grow in size in times of high transaction demand.
>
>
I think 2 should just be fee per kB.  If the pool is full and a transaction
arrives, it has to have a fee per kB that is higher than the lowest
transaction in the pool.

The effect is that the fee per kB threshold for getting a transaction into
the memory pool increases as the attack proceeds.  This means that the cost
to maintain the attack increases.

With replace by fee, the new transaction would have to have a fee that is
more than a fixed amount more than the lowest already in the pool.  I think
the replace by fee code already does this.  This prevents transactions with
fees that increase by 1 Satoshi at a time being relayed.

For allowing large blocks when block space is in high demand, you could
limit the average block size.

If the average was set to 1MB, the rule could be that blocks must be 2MB or
lower and the total size of the a block and the previous 99 must be 100MB
or lower.  This gives an average of 1MB per block, but allows bursts.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150609/5034b5a7/attachment.html>

From raystonn at hotmail.com  Tue Jun  9 17:52:05 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Tue, 9 Jun 2015 10:52:05 -0700
Subject: [Bitcoin-development] New attack identified and potential
	solution described: Dropped-transaction spam attack against
	the block size limit
In-Reply-To: <CABsx9T3tuBZePfS4_LCo4rp3aU6HFtrLbSDR28DktJyLQz2L-A@mail.gmail.com>
References: <5574E39C.3090904@thinlink.com><COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl><CAJmQggBcAw1u+Pha+67S4bG5FuKx0xi_dTffmEOUHPbwyJU1aA@mail.gmail.com>
	<CABsx9T3tuBZePfS4_LCo4rp3aU6HFtrLbSDR28DktJyLQz2L-A@mail.gmail.com>
Message-ID: <COL131-DS259B1E7F076282CE9BBF96CDBE0@phx.gbl>

That does sound good on the surface, but how do we enforce #1 and #2?  They seem to be unenforceable, as a miner can adjust the size of the memory pool in his local source.

From: Gavin Andresen 
Sent: Tuesday, June 09, 2015 6:36 AM
To: Loi Luu 
Cc: Raystonn . ; Bitcoin Dev 
Subject: Re: [Bitcoin-development] New attack identified and potential solution described: Dropped-transaction spam attack against the block size limit

How about this for mitigating this potential attack: 

1. Limit the memory pool to some reasonable number of blocks-worth of transactions (e.g. 11)
2. If evicting transactions from the memory pool, prefer to evict transactions that are part of long chains of unconfirmed transactions.
3. Allow blocks to grow in size in times of high transaction demand.

The combination of (1) and (2) means an attacker needs to prepare lots of confirmed inputs to pull off the attack. By itself that means they MUST pay transaction fees.

(3) further mitigates the attack because it allows miners to just absorb fees that the attacker is throwing at miners.


On Tue, Jun 9, 2015 at 5:33 AM, Loi Luu <loi.luuthe at gmail.com> wrote:

    The proposed fix is to add a new rule on how
    fees are handled.  Some amount of every fee should be considered as burned
    and can never be spent.  I will propose 50% of the fee here, but there may
    be better numbers that can be discovered prior to putting this into place.
    If we'd like miners to continue to collect the same fees after this change,
    we can suggest the default fee per transaction to be doubled

  I would propose another practical rule rather than burning 50% of the fee. For example, you can
  credit 50% of the transaction fee to the next block. Thus, the attacker cannot perform
  the attack with 0-fee any more, yet you don't have to double the price of the TX fee for the fix.

  Thanks,
  Loi Luu.


  On Tue, Jun 9, 2015 at 4:07 AM, Raystonn . <raystonn at hotmail.com> wrote:

    When implemented, the block size limit was put in place to prevent the
    potential for a massive block to be used as an attack to benefit the miner
    of that block.  The theory goes that such a massive block would enrich its
    miner by delaying other miners who are now busy downloading and validating
    that huge block.  The original miner of that large-block would be free to
    continue hashing the next block, giving it an advantage.

    Unfortunately, this block size limit opened a different attack.  Prior to
    the limit, any attempt to spam the network by anyone other than someone
    mining their own transactions would have been economically unfeasible.  As
    every transaction would have a fee, there would have been a real cost for
    every minute of spam.  The end result would have been a transfer of wealth
    from spammer to Bitcoin miners, which would have harmed the spammers and
    encouraged further mining of Bitcoin, a very antifragile outcome.

    But now we have the block size limit.  Things are very different with this
    feature in place.  The beginning of a spam attack on the Bitcoin network
    will incur transaction fees, just like before.  But if spam continues at a
    rate exceeding the block size limit long enough for transactions to be
    dropped from mempools, the vast majority of spam transaction fees will never
    have to be paid.  In fact, as real users gain in desperation and pay higher
    fees to get their transactions through in a timely manner, the spammers will
    adjust their fees to minimize the cost of the attack and maximize
    effectiveness.  Using this method, they keep their fees at a point that
    causes most of the spam transactions to be dropped without confirmation
    (free spam), while forcing a floor for transaction fees.  Thus, while spam
    could be used by attackers to disable the network entirely, by paying
    high-enough fees to actually fill the blocks with spam, it can also be used
    by a single entity to force a transaction fee floor.  Real users will be
    forced to pay a transaction fee higher than the majority of the spam to get
    their transactions confirmed.  So this is an effective means for a minority
    of miners to force higher fees through spam attacks, even in the face of
    benevolent miners who would not support a higher fee floor by policy.
    Miners would simply have no way to fix this, as they can only put in the
    transactions that will fit under the block size limit.

    In the face of such a spam attack, Bitcoin's credibility and usability would
    be severely undermined.  The block size limit enables this attack, and I now
    argue for its removal.  But we can't just remove it and ignore the problem
    that it was intended to address.  We need a new fix for the large-block
    problem described in the first paragraph that does not suffer from the
    dropped-transaction spam-attack problem that is enabled by the block size
    limit today.  My proposal is likely to be controversial, and I'm very much
    open to hearing other better proposals.

    Large blocks created by a miner as a means to spam other miners out of
    competition is a problem because miners do not pay fees for their own
    transactions when they mine them.  They collect the fees they pay.  This
    breaks the economic barrier keeping people from spamming the network, as the
    spamming is essentially free.  The proposed fix is to add a new rule on how
    fees are handled.  Some amount of every fee should be considered as burned
    and can never be spent.  I will propose 50% of the fee here, but there may
    be better numbers that can be discovered prior to putting this into place.
    If we'd like miners to continue to collect the same fees after this change,
    we can suggest the default fee per transaction to be doubled.  Half of every
    fee would be burned and disappear forever, effectively distributing the
    value of those bitcoins across the entire money supply.  The other half
    would be collected by the miner of the block as is done today.  This
    solution would mean large blocks would cost a significant number of bitcoin
    to create, even when all of the transactions are created by the miner of
    that block.  For this to work, we'd need to ensure a minimum fee is paid for
    most of the transactions in every block, and the new transaction fee rule is
    in place.  Then the block size limit can be removed.

    Raystonn


    ------------------------------------------------------------------------------
    _______________________________________________
    Bitcoin-development mailing list
    Bitcoin-development at lists.sourceforge.net
    https://lists.sourceforge.net/lists/listinfo/bitcoin-development



  ------------------------------------------------------------------------------

  _______________________________________________
  Bitcoin-development mailing list
  Bitcoin-development at lists.sourceforge.net
  https://lists.sourceforge.net/lists/listinfo/bitcoin-development






-- 

--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150609/f1191f01/attachment.html>

From gavinandresen at gmail.com  Tue Jun  9 18:25:18 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Tue, 9 Jun 2015 14:25:18 -0400
Subject: [Bitcoin-development] New attack identified and potential
 solution described: Dropped-transaction spam attack against the block size
 limit
In-Reply-To: <COL131-DS259B1E7F076282CE9BBF96CDBE0@phx.gbl>
References: <5574E39C.3090904@thinlink.com>
	<COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
	<CAJmQggBcAw1u+Pha+67S4bG5FuKx0xi_dTffmEOUHPbwyJU1aA@mail.gmail.com>
	<CABsx9T3tuBZePfS4_LCo4rp3aU6HFtrLbSDR28DktJyLQz2L-A@mail.gmail.com>
	<COL131-DS259B1E7F076282CE9BBF96CDBE0@phx.gbl>
Message-ID: <CABsx9T0TzRCr7DRzALymWiNJ2oA_MuZZQ8jFD+z4-cUaiSsE1A@mail.gmail.com>

On Tue, Jun 9, 2015 at 1:52 PM, Raystonn . <raystonn at hotmail.com> wrote:

>   That does sound good on the surface, but how do we enforce #1 and #2?
> They seem to be unenforceable, as a miner can adjust the size of the memory
> pool in his local source.
>

It doesn't have to be enforced. As long as a reasonable percentage of hash
rate is following that policy an attacker that tries to flood the network
will fail to prevent normal transaction traffic from going through and will
just end up transferring some wealth to the miners.

Although the existing default mining policy (which it seems about 70% of
hashpower follows) of setting aside some space for high-priority
transactions regardless of fee might also be enough to cause this attack to
fail in practice.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150609/71320ab8/attachment.html>

From raystonn at hotmail.com  Tue Jun  9 19:03:13 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Tue, 9 Jun 2015 12:03:13 -0700
Subject: [Bitcoin-development] New attack identified and potential
	solution described: Dropped-transaction spam attack against
	the block size limit
In-Reply-To: <CABsx9T0TzRCr7DRzALymWiNJ2oA_MuZZQ8jFD+z4-cUaiSsE1A@mail.gmail.com>
References: <5574E39C.3090904@thinlink.com><COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl><CAJmQggBcAw1u+Pha+67S4bG5FuKx0xi_dTffmEOUHPbwyJU1aA@mail.gmail.com><CABsx9T3tuBZePfS4_LCo4rp3aU6HFtrLbSDR28DktJyLQz2L-A@mail.gmail.com><COL131-DS259B1E7F076282CE9BBF96CDBE0@phx.gbl>
	<CABsx9T0TzRCr7DRzALymWiNJ2oA_MuZZQ8jFD+z4-cUaiSsE1A@mail.gmail.com>
Message-ID: <COL131-DS897EBDD5B5E7BD300318CCDBE0@phx.gbl>

You are right of course.  This will work.  I like this idea more than my own proposed fix, as it doesn?t make any big changes to the economics of the system in the way that burning would have.

From: Gavin Andresen 
Sent: Tuesday, June 09, 2015 11:25 AM
To: Raystonn . 
Cc: Loi Luu ; Bitcoin Dev 
Subject: Re: [Bitcoin-development] New attack identified and potential solution described: Dropped-transaction spam attack against the block size limit

On Tue, Jun 9, 2015 at 1:52 PM, Raystonn . <raystonn at hotmail.com> wrote:

  That does sound good on the surface, but how do we enforce #1 and #2?  They seem to be unenforceable, as a miner can adjust the size of the memory pool in his local source.

It doesn't have to be enforced. As long as a reasonable percentage of hash rate is following that policy an attacker that tries to flood the network will fail to prevent normal transaction traffic from going through and will just end up transferring some wealth to the miners.

Although the existing default mining policy (which it seems about 70% of hashpower follows) of setting aside some space for high-priority transactions regardless of fee might also be enough to cause this attack to fail in practice.

-- 

--
Gavin Andresen

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150609/77610583/attachment.html>

From pete at petertodd.org  Tue Jun  9 20:14:36 2015
From: pete at petertodd.org (Peter Todd)
Date: Tue, 9 Jun 2015 16:14:36 -0400
Subject: [Bitcoin-development] Lexicographical Indexing of Transaction
 Inputs and Outputs
In-Reply-To: <CAGH37SLyG-g54-gGU5ZrmQsiogOqWNW1iiayHii1nWiWh+Nk=w@mail.gmail.com>
References: <CAGH37SK0k1YUvadetyHcBGjzW+OHNFRmRwqsUDeHBGejUacigQ@mail.gmail.com>
	<44BE16F9-AB24-4A8E-BC7F-03A6C590FCE7@gmail.com>
	<CAGH37SL3TA7BXd3Y+4F1Fd5N3ZW+LRLvkfppPsPn61ZVbZJOnQ@mail.gmail.com>
	<CAGH37SLCc-aEG0t0H7fsUZOv_h+Fiw4xoonmfwNaFWBin_7HcQ@mail.gmail.com>
	<20150607023523.GB1570@savin.petertodd.org>
	<CAGH37SLyG-g54-gGU5ZrmQsiogOqWNW1iiayHii1nWiWh+Nk=w@mail.gmail.com>
Message-ID: <20150609201436.GD28093@muck>

On Mon, Jun 08, 2015 at 06:53:54PM -0400, Kristov Atlas wrote:

Two other things:



> On Sat, Jun 6, 2015 at 10:35 PM, Peter Todd <pete at petertodd.org> wrote:
> 
> > Why mention SIGHASH_SINGLE at all? Its use-case is highly specialized
> > protocols; you haven't taken into account the needs of those protocols.
> > For BIP's it's better to stick to the use-cases where the need is clear
> > and there exists running code that to speculate too much on future uses.
> > With signature hashing in particular it's not yet clear at all what
> > future OP_CHECKSIG's will look like, let alone the various ways people
> > will use sighash for smart contract type stuff.
> >
> > You'd be better off presenting the BIP in terms of a generic statement
> > that "except when otherwise prevented by advanced signature hashing
> > requirements, wallet software must emit transactions sorted according to
> > the following" You can then specify the two common cases in detail:
> >
> > 1) SIGHASH_ALL: input and output order signed, so sort appropriately
> >
> > 2) SIGHASH_ANYONECANPAY: input order not signed, so software should emit
> >    transactions sorted, recognising that the actual mined order may be
> >    changed.
> >
> 
> That makes sense. I updated the language as follows -- your thoughts? Keep
> in mind this BIP is informational, and so people are free to ignore it.
> 
> "Applicability: This BIP applies to all transactions of signature hash type
> SIGHASH_ALL. Additionally,  software compliant with this BIP that allows
> later parties to update the transaction (e.g. using signature hash types
> SIGHASH_NONE or a variant of SIGHASH_ANYONECANPAY) should emit
> lexicographically sorted inputs and outputs, although they may later be
> modified. Transactions that have index dependencies between transactions or
> within the same transaction are covered under the section of this BIP
> entitled ?Handling Input/Output Dependencies.?"

I'd keep it even simpler than that, and just say for now that such
use-cases are out of the scope of this BIP, however those standards
should come up with some kind of deterministic standard that meets the
needs of the protocol. Again, there's a bunch of possible use-cases here
and we just can't predict them; focus on the fact that the *spirit* of
what this BIP is about is applicable and future standards should be
developed.

So I'd change the "Applicability" section to:

This BIP applies to all transactions where the order of inputs and
outputs does not matter. This is true for the vast majority of
transactions as they simply move funds from one place to another.

Currently this generally refers to transactions where SIGHASH_ALL is
used, in which case the signatures commit to the exact order of input
and outputs. In the case where SIGHASH_ANYONECANPAY and/or SIGHASH_NONE
has been used (e.g. crowdfunds) the order of inputs and/or outputs may
not be signed, however compliant software should still emit transactions
with sorted inputs and outputs, even though they may later be modified
by others.

In the event that future protocol upgrades introduce new signature hash
types, compliant software should apply the lexographic ordering
principle analogously.

While out of scope of this BIP, protocols that do require a specified
order of inputs/outputs (e.g. due to use of SIGHASH_SINGLE) should
consider the goals of this BIP and how best to adapt them to the
specifics needs of those protocols.


Then remove the "handling input/output deps" section.

> > Do you have a patch implementing deterministic tx ordering for Bitcoin
> > Core yet?
> >
> 
> I'm not a frequent C programmer, so I'd prefer to let someone else take
> care of it, as a frequent committer of code would do a faster and more
> stylistically consistent job of it. If no one else will, however, I will.



re: the actual ordering algorithm, having txids be sorted by with the
hex-based algorithm is odd. I'd simply say they're sorted as
little-endian byte arrays, or in other words, with the bytearr_cmp()
function, but with the order of bytes reversed. You also should say that
we're doing that to make the user see them in visually sorted order to
match expectations because txids are displayed as little-endian.

For outputs, don't say "locking script", say "scriptPubKey". Secondly,
scriptPubKeys are not in little-endian representation - they have no
endianness to them. With output amount, there's no need to say that
they're unsigned or little-endian satoshies, just say they're sorted
largest/smallest amount first.

"For the sake of efficiency, amounts will be considered first for
sorting, since they contain fewer bytes of information (7 bytes)
compared to a standard P2PKH locking script (800 bytes)." <- where the
heck did you get these numbers from? Amounts are 8 bytes, and P2PKH
scriptPubKeys are 25 bytes.


"Backwards Compatibility" <- I'd just remove this whole section; we're
unlikely to make this an IsStandard() rule anytime soon.

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150609/d2847d2f/attachment.sig>

From rusty at rustcorp.com.au  Wed Jun 10 02:40:38 2015
From: rusty at rustcorp.com.au (Rusty Russell)
Date: Wed, 10 Jun 2015 12:10:38 +0930
Subject: [Bitcoin-development] Consensus-enforced transaction
	replacement via sequence numbers
In-Reply-To: <CAE-z3OWrVP+jE9bL=9+eC+RE5L5kYQ_Y-JT4Go2r+o-M=eYssw@mail.gmail.com>
References: <CAOG=w-sfiUQQGUh=RR55NU-TkAi1+2g3_Z+YP3dGDjp8zXYBGQ@mail.gmail.com>
	<CANEZrP0QMHp9PwBr=ekkujtA+=LXbgiL4xkXRSmcOGqaLJEp0g@mail.gmail.com>
	<CAOG=w-s7JkB6SyEE0=KwmrasyH22aB2Zf3jBdKcXvrGoNhN_Nw@mail.gmail.com>
	<CANEZrP0zKe7hK0KjiXN9M6CHnJxKZfW9myez3G+GWpr3fugBCg@mail.gmail.com>
	<CAOG=w-vusO30sBZfsuP94wbkUUfHupmhQtScGsJ2463sO=EpzA@mail.gmail.com>
	<CAE-z3OUG5p_hAOFvaE10kTT7sa=2GrzvZpis5FzATSEcNwZpyw@mail.gmail.com>
	<CAOG=w-tQyrc8ncAFauDObmBYn3uSwBcLoWVqruaV6PcTUFbTKg@mail.gmail.com>
	<CAE-z3OXO++0n+UVKe1KYyGv=GyHrZ-MsJtYELk+KC6cEV2UbHQ@mail.gmail.com>
	<CAOG=w-vY7WHso90mtzhSRiuTLVfahMv1Xr6p_AZvyh4krxPLSg@mail.gmail.com>
	<CAE-z3OWrVP+jE9bL=9+eC+RE5L5kYQ_Y-JT4Go2r+o-M=eYssw@mail.gmail.com>
Message-ID: <87ioawp9p5.fsf@rustcorp.com.au>

Tier Nolan <tier.nolan at gmail.com> writes:
> What are the use cases for relative lock time verify?  I have 1 and I think
> that is the kind of thing it is useful for.
>
> I think that most cases are just to guarantee that the other party has a
> chance to react.  This means that 8191 blocks should be more than enough
> (and most would set it lower).
>
> For long term, the absolute version is just as good.  That depends on use
> cases.  "You can't take step 4 until 3 months after step 3 has completed"
> doesn't seem useful.

Lightning channels want them exactly like this to revoke old
transactions, which could be ancient on long-lived channels.

Cheers,
Rusty.



From pete at petertodd.org  Wed Jun 10 09:10:13 2015
From: pete at petertodd.org (Peter Todd)
Date: Wed, 10 Jun 2015 05:10:13 -0400
Subject: [Bitcoin-development] First-Seen-Safe Replace-by-Fee patch against
	Bitcoin Core v0.10.2
In-Reply-To: <20150526051305.GA23502@savin.petertodd.org>
References: <20150526051305.GA23502@savin.petertodd.org>
Message-ID: <20150610091013.GA21649@savin.petertodd.org>

First-seen-safe Replace-by-Fee is now available as a patch against
v0.10.2:

    https://github.com/petertodd/bitcoin/tree/first-seen-safe-rbf-v0.10.2

I've also had a pull-req against git HEAD open for a few weeks now:

    https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-104877829

I've got some hashing power interested in running this patch in the near
future, so I'm offering a bounty of up to 1 BTC to anyone who can find a
way to attack miners running this patch. Specifically, I'm concerned
about things that would lead to significant losses for those miners. A
total crash would be considered very serious - 1 BTC - while excess
bandwidth usage would be considered minor - more like 0.1 BTC. (remember
that this would have to be bandwidth significantly in excess of existing
attacks)

For reference, here's an example of a crash exploit found by Suhas
Daftuar: https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-104877829

If two people report the same or overlapping issues, first person will
get priority. Adding a new test that demos your exploit to the unit
tests will be looked upon favorably. That said, in general I'm not going
to make any hard promises with regards to payouts and will be using my
best judgement. I've got a bit over 2BTC budgetted for this, which is
coming out of my own pockets - I'm not rich! All applicants are however
welcome to troll me on reddit if you think I'm being unfair.


Suhas: speaking of, feel free to email me a Bitcoin address! :)

-- 
'peter'[:-1]@petertodd.org
000000000000000006dd456cf5ff8bbb56cf88e9314711d55b75c8d23cccddd5
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/c18b5ba0/attachment.sig>

From xor at freenetproject.org  Wed Jun 10 08:25:12 2015
From: xor at freenetproject.org (xor)
Date: Wed, 10 Jun 2015 10:25:12 +0200
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough to
	host this list?
Message-ID: <1943127.DBnVxmfOIh@1337h4x0r>

http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/

TL;DR:

> In 2013, GIMP?s developers pulled the GIMP Windows downloads from
> SourceForge. SourceForge was full of misleading advertisements
> masquerading as ?Download? buttons ? something that?s a problem all over
> the web. 
[...]
> In 2015, SourceForge pushed back. Considering the old GIMP account on
> SourceForge ?abandoned,? they took control over it, locking out the
> original maintainer. They then put GIMP downloads back up on SourceForge,
> wrapped in SourceForge?s own junkware-filled installer.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 836 bytes
Desc: This is a digitally signed message part.
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/10e90e6d/attachment.sig>

From laanwj at gmail.com  Wed Jun 10 09:35:57 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Wed, 10 Jun 2015 11:35:57 +0200
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough
 to host this list?
In-Reply-To: <1943127.DBnVxmfOIh@1337h4x0r>
References: <1943127.DBnVxmfOIh@1337h4x0r>
Message-ID: <20150610093556.GA11409@amethyst.visucore.com>

On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:
> http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/

All our downloads (even old ones) have recently been deleted from sourceforge, for this reason. They haven't been mentioned in Bitcon Core release announcements for a long time.

No opinion on the mailing list. Though I think it's less urgent. The issue of moving the mailinglist has come up before a few times and people can't agree where to move to.

Wladimir




From info at AndySchroder.com  Wed Jun 10 16:46:49 2015
From: info at AndySchroder.com (Andy Schroder)
Date: Wed, 10 Jun 2015 12:46:49 -0400
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough
	to host this list?
In-Reply-To: <20150610093556.GA11409@amethyst.visucore.com>
References: <1943127.DBnVxmfOIh@1337h4x0r>
	<20150610093556.GA11409@amethyst.visucore.com>
Message-ID: <557869F9.8030109@AndySchroder.com>

Regarding changing the e-mail list provider. Is anyone interested in 
sponsoring it? There are non-free options, but it may be difficult to 
always ensure the fee is being paid to the provider. I think finding an 
agreeable free solution may have been the issue before? I've also 
thought of trying to make a pay per message or byte solution (and this 
cost could be dynamic based upon the number of current mailing list 
subscribers). This could solve the who pays problem (the sender pays), 
as well as motivate people to be more concise and clear with their 
messages, and at the same time limit spam.



Any thoughts?

Andy Schroder

On 06/10/2015 05:35 AM, Wladimir J. van der Laan wrote:
> On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:
>> http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/
> All our downloads (even old ones) have recently been deleted from sourceforge, for this reason. They haven't been mentioned in Bitcon Core release announcements for a long time.
>
> No opinion on the mailing list. Though I think it's less urgent. The issue of moving the mailinglist has come up before a few times and people can't agree where to move to.
>
> Wladimir
>
>
> ------------------------------------------------------------------------------




From ibrightly at gmail.com  Wed Jun 10 18:28:55 2015
From: ibrightly at gmail.com (Ivan Brightly)
Date: Wed, 10 Jun 2015 14:28:55 -0400
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough
 to host this list?
In-Reply-To: <557869F9.8030109@AndySchroder.com>
References: <1943127.DBnVxmfOIh@1337h4x0r>
	<20150610093556.GA11409@amethyst.visucore.com>
	<557869F9.8030109@AndySchroder.com>
Message-ID: <CAAre=yQSkFAHLfJ0h2rQY5vOFExSq2GDiRV32qe=EEVYOxCpqg@mail.gmail.com>

I like elegant solutions and while eventually I can see a "pay to
contribute" service, I don't imagine you'll get consensus in short order.

List provider costs are pretty reasonable, so if that's the hurdle to
overcome I'm happy to offer sponsorship.

Ivan Brightly
SolidX Partners

On Wed, Jun 10, 2015 at 12:46 PM, Andy Schroder <info at andyschroder.com>
wrote:

> Regarding changing the e-mail list provider. Is anyone interested in
> sponsoring it? There are non-free options, but it may be difficult to
> always ensure the fee is being paid to the provider. I think finding an
> agreeable free solution may have been the issue before? I've also
> thought of trying to make a pay per message or byte solution (and this
> cost could be dynamic based upon the number of current mailing list
> subscribers). This could solve the who pays problem (the sender pays),
> as well as motivate people to be more concise and clear with their
> messages, and at the same time limit spam.
>
>
>
> Any thoughts?
>
> Andy Schroder
>
> On 06/10/2015 05:35 AM, Wladimir J. van der Laan wrote:
> > On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:
> >>
> http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/
> > All our downloads (even old ones) have recently been deleted from
> sourceforge, for this reason. They haven't been mentioned in Bitcon Core
> release announcements for a long time.
> >
> > No opinion on the mailing list. Though I think it's less urgent. The
> issue of moving the mailinglist has come up before a few times and people
> can't agree where to move to.
> >
> > Wladimir
> >
> >
> >
> ------------------------------------------------------------------------------
>
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/8f93b6ab/attachment.html>

From s7r at sky-ip.org  Wed Jun 10 18:36:23 2015
From: s7r at sky-ip.org (s7r)
Date: Wed, 10 Jun 2015 21:36:23 +0300
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough
 to host this list?
In-Reply-To: <557869F9.8030109@AndySchroder.com>
References: <1943127.DBnVxmfOIh@1337h4x0r>	<20150610093556.GA11409@amethyst.visucore.com>
	<557869F9.8030109@AndySchroder.com>
Message-ID: <557883A7.7030906@sky-ip.org>

The mail list is public, so it's not like the data on it is somehow
sensitive. Sourcefoge is fine, it has a nice web UI where you can browse
the message and sort/order them as you want, etc.

Why would you want to move to a paid solution? And why would you want
users to have to pay per message? This is the worst idea ever from my
point of view. We want to encourage people to join the community, run
full nodes, ask questions, come with solutions, ideas for improvements
and so on. Everyone should read and write and contribute as much as
possible with ideas in debates. You never know who can have bright ideas
in some contexts.

Bottom line is so far sourceforge handles the mail lists just fine. I
don't see a single advantage another mail list provider / system could
offer, except some headache and extra work for migration. The software
distribution via sourcefoge was cancelled for obvious reasons which I
fully understand and agree to, but it has nothing to do with the mail
lists. We have way more important things to brainstorm about.

On 6/10/2015 7:46 PM, Andy Schroder wrote:
> Regarding changing the e-mail list provider. Is anyone interested in 
> sponsoring it? There are non-free options, but it may be difficult to 
> always ensure the fee is being paid to the provider. I think finding an 
> agreeable free solution may have been the issue before? I've also 
> thought of trying to make a pay per message or byte solution (and this 
> cost could be dynamic based upon the number of current mailing list 
> subscribers). This could solve the who pays problem (the sender pays), 
> as well as motivate people to be more concise and clear with their 
> messages, and at the same time limit spam.
> 
> 
> 
> Any thoughts?
> 
> Andy Schroder
> 
> On 06/10/2015 05:35 AM, Wladimir J. van der Laan wrote:
>> On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:
>>> http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/
>> All our downloads (even old ones) have recently been deleted from sourceforge, for this reason. They haven't been mentioned in Bitcon Core release announcements for a long time.
>>
>> No opinion on the mailing list. Though I think it's less urgent. The issue of moving the mailinglist has come up before a few times and people can't agree where to move to.
>>
>> Wladimir
>>
>>
>> ------------------------------------------------------------------------------
> 
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From info at AndySchroder.com  Wed Jun 10 18:41:32 2015
From: info at AndySchroder.com (Andy Schroder)
Date: Wed, 10 Jun 2015 14:41:32 -0400
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough
 to host this list?
In-Reply-To: <20150610180256.GN27932@nl.grid.coop>
References: <1943127.DBnVxmfOIh@1337h4x0r>
	<20150610093556.GA11409@amethyst.visucore.com>
	<557869F9.8030109@AndySchroder.com>
	<20150610180256.GN27932@nl.grid.coop>
Message-ID: <557884DC.1020700@AndySchroder.com>

Hello Troy,

I like the idea of the live mirrors. I'm personally just an amateur at 
setting up e-mail servers, but the first concern I have is that everyone 
hosting a mirror may not necessarily use the same SMTP MTA. I personally 
use postfix, but I'm not sure what most people use.

Some other features I'd like to see required is PGP/MIME support and 
ensuring that digital signatures are not broken by footers, etc. 
appended to the bottom of the message by the list. It might be nice to 
also allow for HTML messages?

Here is a link with some current statistics to get an idea what the load 
may be. I've been told there are about 1,200 subscribers. 
http://dir.gmane.org/gmane.comp.bitcoin.devel



Andy Schroder

On 06/10/2015 02:02 PM, Troy Benjegerdes wrote:
> I'll sponsor it, if we agree to implement a HashCash spam filter
> in the next 6 months. I've run mail servers for $DAYJOB for 5 or
> so years, and I've run my own personal server for the last 14.
>
> Since Bitcoin is a perfectly good HashCash system, I'm thinking a
> http://www.courier-mta.org/courierfilter.html filter plugin that
> checks to ensure that the required bitcoin fee has been paid, or
> better yet included in the message in some standard form.
>
> I'd like to have several other people with linux admin experience
> also agree to host live mirrors of the list, which could be switched
> over by whomever controls the relevant MX records for the mail list.
>
> What do you think a reasonable per-message fee should be, such that
> a couple of independent admins can reasonably expect to be able to
> pay $250/month each for their time and server hosting/bandwidth costs?
>
> I also think that anyone who's contributed more than say 10 or 15
> commits to https://github.com/bitcoin/bitcoin/graphs/contributors
> should be excluded from the pay-with-bitcoin filter, as they have
> paid with code. The rest of us should be paying to distribute and
> archive their efforts.
>
> On Wed, Jun 10, 2015 at 12:46:49PM -0400, Andy Schroder wrote:
>> Regarding changing the e-mail list provider. Is anyone interested in
>> sponsoring it? There are non-free options, but it may be difficult to
>> always ensure the fee is being paid to the provider. I think finding an
>> agreeable free solution may have been the issue before? I've also
>> thought of trying to make a pay per message or byte solution (and this
>> cost could be dynamic based upon the number of current mailing list
>> subscribers). This could solve the who pays problem (the sender pays),
>> as well as motivate people to be more concise and clear with their
>> messages, and at the same time limit spam.
>>
>>
>>
>> Any thoughts?
>>
>> Andy Schroder
>>
>> On 06/10/2015 05:35 AM, Wladimir J. van der Laan wrote:
>>> On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:
>>>> http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/
>>> All our downloads (even old ones) have recently been deleted from sourceforge, for this reason. They haven't been mentioned in Bitcon Core release announcements for a long time.
>>>
>>> No opinion on the mailing list. Though I think it's less urgent. The issue of moving the mailinglist has come up before a few times and people can't agree where to move to.
>>>
>>> Wladimir
>>>
>>>
>>> ------------------------------------------------------------------------------
>>
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/37956656/attachment.sig>

From nathan at leastauthority.com  Wed Jun 10 17:37:59 2015
From: nathan at leastauthority.com (Nathan Wilcox)
Date: Wed, 10 Jun 2015 11:37:59 -0600
Subject: [Bitcoin-development] Proposal: SPV Fee Discovery mechanism
Message-ID: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>

[I'm currently wading through bitcoin-development. I'm still about a month
behind, so I apologize in advance for any noisy redundancy in this post.]

While reading about blocksize, I've just finished Mike Hearn's blog post
describing expected systemic behavior as actual blocks approach the current
limit (with or without non-protocol-changing implementation improvements):

https://medium.com/@octskyward/crash-landing-f5cc19908e32


One detail Mike uses to argue against the "fee's will save us" line of
reasoning is that wallets have no good way to learn fee information.

So, here's a proposal to fix that: put fee and (and perhaps block size,
UTXO, etc...) statistics into the locally-verifiable data available to SPV
clients (ie: block headers).


It's easy to imagine a hard fork that places details like per-block total
fees, transaction count, fee variance, UTXO delta, etc... in a each block
header. This would allow SPV clients to rely on this data with the same
PoW-backed assurances as all other header data.

This mechanism seems valuable regardless of the outcome of blocksize
debate. So long as fees are interesting or important, SPV clients should
know about them. (Same for other stats such as UTXO count.)

Upgrading the protocol without a hard-fork may be possible and is left as
an exercise for the reader. ;-)

-- 
Nathan Wilcox
Least Authoritarian

email: nathan at leastauthority.com
twitter: @least_nathan
PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/73fcaa85/attachment.html>

From hozer at hozed.org  Wed Jun 10 18:02:56 2015
From: hozer at hozed.org (Troy Benjegerdes)
Date: Wed, 10 Jun 2015 13:02:56 -0500
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough
 to host this list?
In-Reply-To: <557869F9.8030109@AndySchroder.com>
References: <1943127.DBnVxmfOIh@1337h4x0r>
	<20150610093556.GA11409@amethyst.visucore.com>
	<557869F9.8030109@AndySchroder.com>
Message-ID: <20150610180256.GN27932@nl.grid.coop>

I'll sponsor it, if we agree to implement a HashCash spam filter
in the next 6 months. I've run mail servers for $DAYJOB for 5 or
so years, and I've run my own personal server for the last 14.

Since Bitcoin is a perfectly good HashCash system, I'm thinking a
http://www.courier-mta.org/courierfilter.html filter plugin that 
checks to ensure that the required bitcoin fee has been paid, or 
better yet included in the message in some standard form.

I'd like to have several other people with linux admin experience
also agree to host live mirrors of the list, which could be switched
over by whomever controls the relevant MX records for the mail list.

What do you think a reasonable per-message fee should be, such that
a couple of independent admins can reasonably expect to be able to
pay $250/month each for their time and server hosting/bandwidth costs?

I also think that anyone who's contributed more than say 10 or 15 
commits to https://github.com/bitcoin/bitcoin/graphs/contributors
should be excluded from the pay-with-bitcoin filter, as they have
paid with code. The rest of us should be paying to distribute and 
archive their efforts.

On Wed, Jun 10, 2015 at 12:46:49PM -0400, Andy Schroder wrote:
> Regarding changing the e-mail list provider. Is anyone interested in 
> sponsoring it? There are non-free options, but it may be difficult to 
> always ensure the fee is being paid to the provider. I think finding an 
> agreeable free solution may have been the issue before? I've also 
> thought of trying to make a pay per message or byte solution (and this 
> cost could be dynamic based upon the number of current mailing list 
> subscribers). This could solve the who pays problem (the sender pays), 
> as well as motivate people to be more concise and clear with their 
> messages, and at the same time limit spam.
> 
> 
> 
> Any thoughts?
> 
> Andy Schroder
> 
> On 06/10/2015 05:35 AM, Wladimir J. van der Laan wrote:
> > On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:
> >> http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/
> > All our downloads (even old ones) have recently been deleted from sourceforge, for this reason. They haven't been mentioned in Bitcon Core release announcements for a long time.
> >
> > No opinion on the mailing list. Though I think it's less urgent. The issue of moving the mailinglist has come up before a few times and people can't agree where to move to.
> >
> > Wladimir
> >
> >
> > ------------------------------------------------------------------------------
> 
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-- 
----------------------------------------------------------------------------
Troy Benjegerdes                 'da hozer'                  hozer at hozed.org
7 elements      earth::water::air::fire::mind::spirit::soul        grid.coop

      Never pick a fight with someone who buys ink by the barrel,
         nor try buy a hacker who makes money by the megahash




From hozer at hozed.org  Wed Jun 10 18:47:25 2015
From: hozer at hozed.org (Troy Benjegerdes)
Date: Wed, 10 Jun 2015 13:47:25 -0500
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough
 to host this list?
In-Reply-To: <CAAre=yQSkFAHLfJ0h2rQY5vOFExSq2GDiRV32qe=EEVYOxCpqg@mail.gmail.com>
References: <1943127.DBnVxmfOIh@1337h4x0r>
	<20150610093556.GA11409@amethyst.visucore.com>
	<557869F9.8030109@AndySchroder.com>
	<CAAre=yQSkFAHLfJ0h2rQY5vOFExSq2GDiRV32qe=EEVYOxCpqg@mail.gmail.com>
Message-ID: <20150610184725.GP27932@nl.grid.coop>

I think if the consensus is "pay with commits or pay with bitcoin"
we might have a consensus from the people that actually matter very 
quickly, because they've already paid ;)

My opinion is the most sustainable solution would be to identify a
team of admins and use something like Digital Ocean's new team accounts
feature and have someone like SolidX contribute funds for the servers
and a few hours a week from one of their sysadmins to the team.

I am dubious of most commercial list-as-a-service providers for the same
reason I am dubious of sourceforge. Market conditions change and then all
of a sudden the fact you're in control of a popular list becomes more 
valuable than what your customer is paying you to run the list.

If the list provider can actively help out in encouraging read-only mirrors
of the list archives, then I think we mitigate the above business risk.


On Wed, Jun 10, 2015 at 02:28:55PM -0400, Ivan Brightly wrote:
> I like elegant solutions and while eventually I can see a "pay to
> contribute" service, I don't imagine you'll get consensus in short order.
> 
> List provider costs are pretty reasonable, so if that's the hurdle to
> overcome I'm happy to offer sponsorship.
> 
> Ivan Brightly
> SolidX Partners
> 
> On Wed, Jun 10, 2015 at 12:46 PM, Andy Schroder <info at andyschroder.com>
> wrote:
> 
> > Regarding changing the e-mail list provider. Is anyone interested in
> > sponsoring it? There are non-free options, but it may be difficult to
> > always ensure the fee is being paid to the provider. I think finding an
> > agreeable free solution may have been the issue before? I've also
> > thought of trying to make a pay per message or byte solution (and this
> > cost could be dynamic based upon the number of current mailing list
> > subscribers). This could solve the who pays problem (the sender pays),
> > as well as motivate people to be more concise and clear with their
> > messages, and at the same time limit spam.
> >
> >
> >
> > Any thoughts?
> >
> > Andy Schroder
> >
> > On 06/10/2015 05:35 AM, Wladimir J. van der Laan wrote:
> > > On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:
> > >>
> > http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/
> > > All our downloads (even old ones) have recently been deleted from
> > sourceforge, for this reason. They haven't been mentioned in Bitcon Core
> > release announcements for a long time.
> > >
> > > No opinion on the mailing list. Though I think it's less urgent. The
> > issue of moving the mailinglist has come up before a few times and people
> > can't agree where to move to.
> > >
> > > Wladimir
> > >
> > >
> > >
> > ------------------------------------------------------------------------------
> >
> >
> >
> > ------------------------------------------------------------------------------
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >

> ------------------------------------------------------------------------------

> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development


-- 
----------------------------------------------------------------------------
Troy Benjegerdes                 'da hozer'                  hozer at hozed.org
7 elements      earth::water::air::fire::mind::spirit::soul        grid.coop

      Never pick a fight with someone who buys ink by the barrel,
         nor try buy a hacker who makes money by the megahash




From info at AndySchroder.com  Wed Jun 10 18:59:48 2015
From: info at AndySchroder.com (Andy Schroder)
Date: Wed, 10 Jun 2015 14:59:48 -0400
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough
 to host this list?
In-Reply-To: <557883A7.7030906@sky-ip.org>
References: <1943127.DBnVxmfOIh@1337h4x0r>	<20150610093556.GA11409@amethyst.visucore.com>
	<557869F9.8030109@AndySchroder.com> <557883A7.7030906@sky-ip.org>
Message-ID: <55788924.6090008@AndySchroder.com>

Hello,

A couple of motivations for a mailing list switch:

 1. Sometimes the mailing list delays delivery for 10 minutes to several
    days.
 2. There are usually lots of ads at the footer of the messages. Really
    confuses new readers (for me at least), and seems like it really
    pollutes such a historical dialog that may be referenced long into
    the future. How would it be if the 10 Commandments, Magna Carta,
    Bill of Rights, The Sermon on the Mount, or The Gettysburg Address
    had ads intertwined within them?
 3. Don't think HTML messages are allowed.
 4. Seems like digital signatures are always broken on messages because
    the list server slightly modifies them (?), so my e-mail client
    doesn't verify them all.



Andy Schroder

On 06/10/2015 02:36 PM, s7r wrote:
> The mail list is public, so it's not like the data on it is somehow
> sensitive. Sourcefoge is fine, it has a nice web UI where you can browse
> the message and sort/order them as you want, etc.
>
> Why would you want to move to a paid solution? And why would you want
> users to have to pay per message? This is the worst idea ever from my
> point of view. We want to encourage people to join the community, run
> full nodes, ask questions, come with solutions, ideas for improvements
> and so on. Everyone should read and write and contribute as much as
> possible with ideas in debates. You never know who can have bright ideas
> in some contexts.
>
> Bottom line is so far sourceforge handles the mail lists just fine. I
> don't see a single advantage another mail list provider / system could
> offer, except some headache and extra work for migration. The software
> distribution via sourcefoge was cancelled for obvious reasons which I
> fully understand and agree to, but it has nothing to do with the mail
> lists. We have way more important things to brainstorm about.
>
> On 6/10/2015 7:46 PM, Andy Schroder wrote:
>> Regarding changing the e-mail list provider. Is anyone interested in
>> sponsoring it? There are non-free options, but it may be difficult to
>> always ensure the fee is being paid to the provider. I think finding an
>> agreeable free solution may have been the issue before? I've also
>> thought of trying to make a pay per message or byte solution (and this
>> cost could be dynamic based upon the number of current mailing list
>> subscribers). This could solve the who pays problem (the sender pays),
>> as well as motivate people to be more concise and clear with their
>> messages, and at the same time limit spam.
>>
>>
>>
>> Any thoughts?
>>
>> Andy Schroder
>>
>> On 06/10/2015 05:35 AM, Wladimir J. van der Laan wrote:
>>> On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:
>>>> http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/
>>> All our downloads (even old ones) have recently been deleted from sourceforge, for this reason. They haven't been mentioned in Bitcon Core release announcements for a long time.
>>>
>>> No opinion on the mailing list. Though I think it's less urgent. The issue of moving the mailinglist has come up before a few times and people can't agree where to move to.
>>>
>>> Wladimir
>>>
>>>
>>> ------------------------------------------------------------------------------
>>
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/9f17930a/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/9f17930a/attachment.sig>

From pete at petertodd.org  Wed Jun 10 19:03:20 2015
From: pete at petertodd.org (Peter Todd)
Date: Wed, 10 Jun 2015 15:03:20 -0400
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough
 to host this list?
In-Reply-To: <55788924.6090008@AndySchroder.com>
References: <1943127.DBnVxmfOIh@1337h4x0r>
	<20150610093556.GA11409@amethyst.visucore.com>
	<557869F9.8030109@AndySchroder.com> <557883A7.7030906@sky-ip.org>
	<55788924.6090008@AndySchroder.com>
Message-ID: <20150610190320.GA1229@savin.petertodd.org>

On Wed, Jun 10, 2015 at 02:59:48PM -0400, Andy Schroder wrote:
> Hello,
> 
> A couple of motivations for a mailing list switch:
> 
> 1. Sometimes the mailing list delays delivery for 10 minutes to several
>    days.
> 2. There are usually lots of ads at the footer of the messages. Really
>    confuses new readers (for me at least), and seems like it really
>    pollutes such a historical dialog that may be referenced long into
>    the future. How would it be if the 10 Commandments, Magna Carta,
>    Bill of Rights, The Sermon on the Mount, or The Gettysburg Address
>    had ads intertwined within them?
> 3. Don't think HTML messages are allowed.

Please keep it that way; HTML messages have no place on a technical
mailing list.

> 4. Seems like digital signatures are always broken on messages because
>    the list server slightly modifies them (?), so my e-mail client
>    doesn't verify them all.

What type of digital signatures specifically? What email client?

-- 
'peter'[:-1]@petertodd.org
000000000000000004e3d7b1cff56c5264b16dd79d10a26683c2fabb11669b5d
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/47050741/attachment.sig>

From info at AndySchroder.com  Wed Jun 10 19:12:02 2015
From: info at AndySchroder.com (Andy Schroder)
Date: Wed, 10 Jun 2015 15:12:02 -0400
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough
 to host this list?
In-Reply-To: <20150610190320.GA1229@savin.petertodd.org>
References: <1943127.DBnVxmfOIh@1337h4x0r>
	<20150610093556.GA11409@amethyst.visucore.com>
	<557869F9.8030109@AndySchroder.com> <557883A7.7030906@sky-ip.org>
	<55788924.6090008@AndySchroder.com>
	<20150610190320.GA1229@savin.petertodd.org>
Message-ID: <55788C02.1010105@AndySchroder.com>


Andy Schroder

On 06/10/2015 03:03 PM, Peter Todd wrote:
>
>> 4. Seems like digital signatures are always broken on messages because
>>     the list server slightly modifies them (?), so my e-mail client
>>     doesn't verify them all.
> What type of digital signatures specifically? What email client?

I think they are usually PGP/MIME signatures that are not working right. 
If you'll notice from my e-mail headers:

User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:24.0) Gecko/20100101 Thunderbird/24.2.0
X-Enigmail-Version: 1.6





-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/469702e5/attachment.sig>

From ibrightly at gmail.com  Wed Jun 10 19:13:11 2015
From: ibrightly at gmail.com (Ivan Brightly)
Date: Wed, 10 Jun 2015 15:13:11 -0400
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough
 to host this list?
In-Reply-To: <20150610184725.GP27932@nl.grid.coop>
References: <1943127.DBnVxmfOIh@1337h4x0r>
	<20150610093556.GA11409@amethyst.visucore.com>
	<557869F9.8030109@AndySchroder.com>
	<CAAre=yQSkFAHLfJ0h2rQY5vOFExSq2GDiRV32qe=EEVYOxCpqg@mail.gmail.com>
	<20150610184725.GP27932@nl.grid.coop>
Message-ID: <CAAre=yRAzwBswqnpMcpL7dU+LEh5HM7u_FGu4nu2kt94CpwBKg@mail.gmail.com>

"My opinion is the most sustainable solution would be to identify a
team of admins and use something like Digital Ocean's new team accounts
feature and have someone like SolidX contribute funds for the servers
and a few hours a week from one of their sysadmins to the team."

This is a perfectly fine option. Alternatively, if the paid mailing list
option is preferred, I'd suggest Intermedia:
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/fb0ba912/attachment.html>

From voisine at gmail.com  Wed Jun 10 19:19:36 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Wed, 10 Jun 2015 12:19:36 -0700
Subject: [Bitcoin-development] Proposal: SPV Fee Discovery mechanism
In-Reply-To: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>
References: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>
Message-ID: <CACq0ZD5=EunMZJJMKfFUGkR=Ye_8nmV0qLkJJ997gbWk1MTC9w@mail.gmail.com>

It could be done by agreeing on a data format and encoding it in an
op_return output in the coinbase transaction. If it catches on it could
later be enforced with a soft fork.

For real up-to-the-minute fee calculations you're also going to want to
look at the current mempool, how many transactions are waiting, what fees
they're paying, etc, but of course that information is susceptible to sybil
attack.

In practice what we're doing for now is using services like blockcypher
who's business is improving reliability of zero-conf to tell us what
fee-per-kb is needed, and then putting a hard coded range around it to
protect against the service being compromised. This is also the kind of
thing being done for exchange rate data which is probably the bigger
security risk until bitcoin becomes the standard unit of account for the
planet.

Aaron Voisine
co-founder and CEO
breadwallet.com

On Wed, Jun 10, 2015 at 10:37 AM, Nathan Wilcox <nathan at leastauthority.com>
wrote:

> [I'm currently wading through bitcoin-development. I'm still about a month
> behind, so I apologize in advance for any noisy redundancy in this post.]
>
> While reading about blocksize, I've just finished Mike Hearn's blog post
> describing expected systemic behavior as actual blocks approach the current
> limit (with or without non-protocol-changing implementation improvements):
>
> https://medium.com/@octskyward/crash-landing-f5cc19908e32
>
>
> One detail Mike uses to argue against the "fee's will save us" line of
> reasoning is that wallets have no good way to learn fee information.
>
> So, here's a proposal to fix that: put fee and (and perhaps block size,
> UTXO, etc...) statistics into the locally-verifiable data available to SPV
> clients (ie: block headers).
>
>
> It's easy to imagine a hard fork that places details like per-block total
> fees, transaction count, fee variance, UTXO delta, etc... in a each block
> header. This would allow SPV clients to rely on this data with the same
> PoW-backed assurances as all other header data.
>
> This mechanism seems valuable regardless of the outcome of blocksize
> debate. So long as fees are interesting or important, SPV clients should
> know about them. (Same for other stats such as UTXO count.)
>
> Upgrading the protocol without a hard-fork may be possible and is left as
> an exercise for the reader. ;-)
>
> --
> Nathan Wilcox
> Least Authoritarian
>
> email: nathan at leastauthority.com
> twitter: @least_nathan
> PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/21988162/attachment.html>

From pete at petertodd.org  Wed Jun 10 19:20:04 2015
From: pete at petertodd.org (Peter Todd)
Date: Wed, 10 Jun 2015 15:20:04 -0400
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough
 to host this list?
In-Reply-To: <55788C02.1010105@AndySchroder.com>
References: <1943127.DBnVxmfOIh@1337h4x0r>
	<20150610093556.GA11409@amethyst.visucore.com>
	<557869F9.8030109@AndySchroder.com> <557883A7.7030906@sky-ip.org>
	<55788924.6090008@AndySchroder.com>
	<20150610190320.GA1229@savin.petertodd.org>
	<55788C02.1010105@AndySchroder.com>
Message-ID: <20150610192004.GB21416@savin.petertodd.org>

On Wed, Jun 10, 2015 at 03:12:02PM -0400, Andy Schroder wrote:
> 
> Andy Schroder
> 
> On 06/10/2015 03:03 PM, Peter Todd wrote:
> >
> >>4. Seems like digital signatures are always broken on messages because
> >>    the list server slightly modifies them (?), so my e-mail client
> >>    doesn't verify them all.
> >What type of digital signatures specifically? What email client?
> 
> I think they are usually PGP/MIME signatures that are not working
> right. If you'll notice from my e-mail headers:
> 
> User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:24.0) Gecko/20100101 Thunderbird/24.2.0
> X-Enigmail-Version: 1.6

It might be that Thunderbird doesn't properly handle messages with both
signed and unsigned content. I use mutt myself, which handles it just
fine. (the sigs on your emails verify just fine for instance)

-- 
'peter'[:-1]@petertodd.org
0000000000000000134f9a433a4bece258b5035ecda33384f820a60493ca2887
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/d87cbc4a/attachment.sig>

From info at AndySchroder.com  Wed Jun 10 19:36:42 2015
From: info at AndySchroder.com (Andy Schroder)
Date: Wed, 10 Jun 2015 15:36:42 -0400
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough
 to host this list?
In-Reply-To: <20150610192004.GB21416@savin.petertodd.org>
References: <1943127.DBnVxmfOIh@1337h4x0r>
	<20150610093556.GA11409@amethyst.visucore.com>
	<557869F9.8030109@AndySchroder.com> <557883A7.7030906@sky-ip.org>
	<55788924.6090008@AndySchroder.com>
	<20150610190320.GA1229@savin.petertodd.org>
	<55788C02.1010105@AndySchroder.com>
	<20150610192004.GB21416@savin.petertodd.org>
Message-ID: <557891CA.5010708@AndySchroder.com>


Andy Schroder

On 06/10/2015 03:20 PM, Peter Todd wrote:
> On Wed, Jun 10, 2015 at 03:12:02PM -0400, Andy Schroder wrote:
>> Andy Schroder
>>
>> On 06/10/2015 03:03 PM, Peter Todd wrote:
>>>> 4. Seems like digital signatures are always broken on messages because
>>>>     the list server slightly modifies them (?), so my e-mail client
>>>>     doesn't verify them all.
>>> What type of digital signatures specifically? What email client?
>> I think they are usually PGP/MIME signatures that are not working
>> right. If you'll notice from my e-mail headers:
>>
>> User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:24.0) Gecko/20100101 Thunderbird/24.2.0
>> X-Enigmail-Version: 1.6
> It might be that Thunderbird doesn't properly handle messages with both
> signed and unsigned content. I use mutt myself, which handles it just
> fine. (the sigs on your emails verify just fine for instance)
>

It's possible that the enigmail extension is not working right, but I 
was under the impression that it is just feeding data to gpg and then 
receiving the response back. It's possible that your e-mail you just 
checked was not sent through mailman since I also replied directly to 
you explicitly (in which case the message has not been modified) and you 
probably have the setting in the mailing list set to not send duplicate 
messages if you are an explicit TO. I just deleted all explicit TOs for 
this message, so everyone should be receiving it through the mailing 
list and not directly. Is the signature still valid for you now? I think 
enigmail can handle messages with some signed and unsigned content, and 
maybe PGP/MIME inherently does not support this and a mailing list 
re-writing parts of messages is an expected action? If this message 
re-writing is an expected action and I'm correct that PGP/MIME does not 
support partially signed content, then maybe it is just a recommendation 
for this mailing list to not use PGP/MIME for messages sent to the list?

Can anyone else confirm?



-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/76d9e8c0/attachment.sig>

From pete at petertodd.org  Wed Jun 10 19:43:01 2015
From: pete at petertodd.org (Peter Todd)
Date: Wed, 10 Jun 2015 15:43:01 -0400
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough
 to host this list?
In-Reply-To: <557891CA.5010708@AndySchroder.com>
References: <1943127.DBnVxmfOIh@1337h4x0r>
	<20150610093556.GA11409@amethyst.visucore.com>
	<557869F9.8030109@AndySchroder.com> <557883A7.7030906@sky-ip.org>
	<55788924.6090008@AndySchroder.com>
	<20150610190320.GA1229@savin.petertodd.org>
	<55788C02.1010105@AndySchroder.com>
	<20150610192004.GB21416@savin.petertodd.org>
	<557891CA.5010708@AndySchroder.com>
Message-ID: <20150610194301.GC21416@savin.petertodd.org>

On Wed, Jun 10, 2015 at 03:36:42PM -0400, Andy Schroder wrote:
> It's possible that the enigmail extension is not working right, but
> I was under the impression that it is just feeding data to gpg and
> then receiving the response back. It's possible that your e-mail you
> just checked was not sent through mailman since I also replied
> directly to you explicitly (in which case the message has not been
> modified) and you probably have the setting in the mailing list set
> to not send duplicate messages if you are an explicit TO. I just
> deleted all explicit TOs for this message, so everyone should be
> receiving it through the mailing list and not directly. Is the
> signature still valid for you now? I think enigmail can handle

It has perfectly valid signatures, as do your earlier messages to the
list.

> messages with some signed and unsigned content, and maybe PGP/MIME
> inherently does not support this and a mailing list re-writing parts
> of messages is an expected action? If this message re-writing is an
> expected action and I'm correct that PGP/MIME does not support
> partially signed content, then maybe it is just a recommendation for
> this mailing list to not use PGP/MIME for messages sent to the list?

PGP/MIME definitely does support partially signed content.

-- 
'peter'[:-1]@petertodd.org
000000000000000009e865d07f75341a5f3dc15f0e149055a241eedd552c3b88
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/f2d56e23/attachment.sig>

From jgarzik at bitpay.com  Wed Jun 10 19:54:25 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Wed, 10 Jun 2015 12:54:25 -0700
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough
 to host this list?
In-Reply-To: <55788924.6090008@AndySchroder.com>
References: <1943127.DBnVxmfOIh@1337h4x0r>
	<20150610093556.GA11409@amethyst.visucore.com>
	<557869F9.8030109@AndySchroder.com> <557883A7.7030906@sky-ip.org>
	<55788924.6090008@AndySchroder.com>
Message-ID: <CAJHLa0OHN-ouh5zXAHh-hTWd=Uh1TvhhxZQd_h3ChCKvbo7-0A@mail.gmail.com>

On Wed, Jun 10, 2015 at 11:59 AM, Andy Schroder <info at andyschroder.com>
wrote:

>  Hello,
>
> A couple of motivations for a mailing list switch:
>
>    1. Sometimes the mailing list delays delivery for 10 minutes to
>    several days.
>    2. There are usually lots of ads at the footer of the messages. Really
>    confuses new readers (for me at least), and seems like it really pollutes
>    such a historical dialog that may be referenced long into the future. How
>    would it be if the 10 Commandments, Magna Carta, Bill of Rights, The Sermon
>    on the Mount, or The Gettysburg Address had ads intertwined within them?
>     3. Don't think HTML messages are allowed.
>    4. Seems like digital signatures are always broken on messages because
>    the list server slightly modifies them (?), so my e-mail client doesn't
>    verify them all.
>
> Not only -- mail header rewrites cause all my emails to go into people's
spam folders, if they were not directly listed in the To/CC headers...




>
>    1.
>
>
>
> Andy Schroder
>
> On 06/10/2015 02:36 PM, s7r wrote:
>
> The mail list is public, so it's not like the data on it is somehow
> sensitive. Sourcefoge is fine, it has a nice web UI where you can browse
> the message and sort/order them as you want, etc.
>
> Why would you want to move to a paid solution? And why would you want
> users to have to pay per message? This is the worst idea ever from my
> point of view. We want to encourage people to join the community, run
> full nodes, ask questions, come with solutions, ideas for improvements
> and so on. Everyone should read and write and contribute as much as
> possible with ideas in debates. You never know who can have bright ideas
> in some contexts.
>
> Bottom line is so far sourceforge handles the mail lists just fine. I
> don't see a single advantage another mail list provider / system could
> offer, except some headache and extra work for migration. The software
> distribution via sourcefoge was cancelled for obvious reasons which I
> fully understand and agree to, but it has nothing to do with the mail
> lists. We have way more important things to brainstorm about.
>
> On 6/10/2015 7:46 PM, Andy Schroder wrote:
>
>  Regarding changing the e-mail list provider. Is anyone interested in
> sponsoring it? There are non-free options, but it may be difficult to
> always ensure the fee is being paid to the provider. I think finding an
> agreeable free solution may have been the issue before? I've also
> thought of trying to make a pay per message or byte solution (and this
> cost could be dynamic based upon the number of current mailing list
> subscribers). This could solve the who pays problem (the sender pays),
> as well as motivate people to be more concise and clear with their
> messages, and at the same time limit spam.
>
>
>
> Any thoughts?
>
> Andy Schroder
>
> On 06/10/2015 05:35 AM, Wladimir J. van der Laan wrote:
>
>  On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:
>
>  http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/
>
>  All our downloads (even old ones) have recently been deleted from sourceforge, for this reason. They haven't been mentioned in Bitcon Core release announcements for a long time.
>
> No opinion on the mailing list. Though I think it's less urgent. The issue of moving the mailinglist has come up before a few times and people can't agree where to move to.
>
> Wladimir
>
>
> ------------------------------------------------------------------------------
>
>  ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing listBitcoin-development at lists.sourceforge.nethttps://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>


-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/622a4d20/attachment.html>

From nathan at leastauthority.com  Wed Jun 10 20:00:27 2015
From: nathan at leastauthority.com (Nathan Wilcox)
Date: Wed, 10 Jun 2015 14:00:27 -0600
Subject: [Bitcoin-development] Proposal: SPV Fee Discovery mechanism
In-Reply-To: <CACq0ZD5=EunMZJJMKfFUGkR=Ye_8nmV0qLkJJ997gbWk1MTC9w@mail.gmail.com>
References: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>
	<CACq0ZD5=EunMZJJMKfFUGkR=Ye_8nmV0qLkJJ997gbWk1MTC9w@mail.gmail.com>
Message-ID: <CAFdHNGh=eGCwoMF36Siup-h6aSQtE0mvxCfk+OQRJb-37pds9w@mail.gmail.com>

On Wed, Jun 10, 2015 at 1:19 PM, Aaron Voisine <voisine at gmail.com> wrote:

> It could be done by agreeing on a data format and encoding it in an
> op_return output in the coinbase transaction. If it catches on it could
> later be enforced with a soft fork.
>
>
Sounds plausible, except SPV protocols would need to include this coinbase
txn if it's going to help SPV clients. (Until a softfork is activated, SPV
clients should not rely on this encoding, since until that time the results
can be fabricated by individual miners.)


> For real up-to-the-minute fee calculations you're also going to want to
> look at the current mempool, how many transactions are waiting, what fees
> they're paying, etc, but of course that information is susceptible to sybil
> attack.
>

Hm, when you mention Sybil attack, I don't quite follow.

When a client relies on any report of a mempool [*], this is already
outside the realm of locally-verifiable SPV information, so they are
already susceptible to the service making false claims. If that's
acceptable (and in many cases it may be) then this whole mechanism is moot,
because the client can ask the service for fee statistics for past blocks.


> In practice what we're doing for now is using services like blockcypher
> who's business is improving reliability of zero-conf to tell us what
> fee-per-kb is needed, and then putting a hard coded range around it to
> protect against the service being compromised.
>

This is interesting for me, because I had previously believed fees were
fairly static presently, and also because I like hearing about real life
wallet implementations.

So if this "SPV Fee Stats" feature were added, a wallet might rely on an
API for timely stats (aka "block height < 1") then verify that the API
isn't lying after doing SPV verification of fee stats for confirmed blocks.


This is also the kind of thing being done for exchange rate data which is
> probably the bigger security risk until bitcoin becomes the standard unit
> of account for the planet.
>
>
That makes sense, although there's no SPV equivalent for exchange data.


Aaron Voisine
> co-founder and CEO
> breadwallet.com
>
> On Wed, Jun 10, 2015 at 10:37 AM, Nathan Wilcox <nathan at leastauthority.com
> > wrote:
>
>> [I'm currently wading through bitcoin-development. I'm still about a
>> month behind, so I apologize in advance for any noisy redundancy in this
>> post.]
>>
>> While reading about blocksize, I've just finished Mike Hearn's blog post
>> describing expected systemic behavior as actual blocks approach the current
>> limit (with or without non-protocol-changing implementation improvements):
>>
>> https://medium.com/@octskyward/crash-landing-f5cc19908e32
>>
>>
>> One detail Mike uses to argue against the "fee's will save us" line of
>> reasoning is that wallets have no good way to learn fee information.
>>
>> So, here's a proposal to fix that: put fee and (and perhaps block size,
>> UTXO, etc...) statistics into the locally-verifiable data available to SPV
>> clients (ie: block headers).
>>
>>
>> It's easy to imagine a hard fork that places details like per-block total
>> fees, transaction count, fee variance, UTXO delta, etc... in a each block
>> header. This would allow SPV clients to rely on this data with the same
>> PoW-backed assurances as all other header data.
>>
>> This mechanism seems valuable regardless of the outcome of blocksize
>> debate. So long as fees are interesting or important, SPV clients should
>> know about them. (Same for other stats such as UTXO count.)
>>
>> Upgrading the protocol without a hard-fork may be possible and is left as
>> an exercise for the reader. ;-)
>>
>> --
>> Nathan Wilcox
>> Least Authoritarian
>>
>> email: nathan at leastauthority.com
>> twitter: @least_nathan
>> PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>


-- 
Nathan Wilcox
Least Authoritarian

email: nathan at leastauthority.com
twitter: @least_nathan
PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/084827a1/attachment.html>

From pete at petertodd.org  Wed Jun 10 20:03:23 2015
From: pete at petertodd.org (Peter Todd)
Date: Wed, 10 Jun 2015 16:03:23 -0400
Subject: [Bitcoin-development] Proposal: SPV Fee Discovery mechanism
In-Reply-To: <CAFdHNGh=eGCwoMF36Siup-h6aSQtE0mvxCfk+OQRJb-37pds9w@mail.gmail.com>
References: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>
	<CACq0ZD5=EunMZJJMKfFUGkR=Ye_8nmV0qLkJJ997gbWk1MTC9w@mail.gmail.com>
	<CAFdHNGh=eGCwoMF36Siup-h6aSQtE0mvxCfk+OQRJb-37pds9w@mail.gmail.com>
Message-ID: <20150610200323.GA13724@savin.petertodd.org>

On Wed, Jun 10, 2015 at 02:00:27PM -0600, Nathan Wilcox wrote:
> On Wed, Jun 10, 2015 at 1:19 PM, Aaron Voisine <voisine at gmail.com> wrote:
> 
> > It could be done by agreeing on a data format and encoding it in an
> > op_return output in the coinbase transaction. If it catches on it could
> > later be enforced with a soft fork.
> >
> >
> Sounds plausible, except SPV protocols would need to include this coinbase
> txn if it's going to help SPV clients. (Until a softfork is activated, SPV
> clients should not rely on this encoding, since until that time the results
> can be fabricated by individual miners.)

Fee stats can always be fabricated by individual miners because fees can
be paid out-of-band.

-- 
'peter'[:-1]@petertodd.org
00000000000000001245bd2f5c99379ee76836227ded9c08324894faabc0d27f
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/d361662b/attachment.sig>

From info at AndySchroder.com  Wed Jun 10 20:03:57 2015
From: info at AndySchroder.com (Andy Schroder)
Date: Wed, 10 Jun 2015 16:03:57 -0400
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough
 to host this list?
In-Reply-To: <20150610194301.GC21416@savin.petertodd.org>
References: <1943127.DBnVxmfOIh@1337h4x0r>
	<20150610093556.GA11409@amethyst.visucore.com>
	<557869F9.8030109@AndySchroder.com> <557883A7.7030906@sky-ip.org>
	<55788924.6090008@AndySchroder.com>
	<20150610190320.GA1229@savin.petertodd.org>
	<55788C02.1010105@AndySchroder.com>
	<20150610192004.GB21416@savin.petertodd.org>
	<557891CA.5010708@AndySchroder.com>
	<20150610194301.GC21416@savin.petertodd.org>
Message-ID: <5578982D.7010807@AndySchroder.com>

Hello,

Thanks for testing this clarifying things about PGP/MIME and I apologize 
for wasting your time with it. It looks like a SPAM filtering service I 
use is re-writing some parts of some plain text messages with some 
special/alternate encoding characters (not sure what it really is). 
Anyway, if I manually export/import a message from gmane (bypassing my 
e-mail SPAM filter), thunderbird/enigmail is not having problems 
verifying signatures. I guess I never realized this before because all 
other signed messages I normally receive are encrypted and the SPAM 
filter does not mess with non plain text data.



Andy Schroder

On 06/10/2015 03:43 PM, Peter Todd wrote:
> On Wed, Jun 10, 2015 at 03:36:42PM -0400, Andy Schroder wrote:
>> It's possible that the enigmail extension is not working right, but
>> I was under the impression that it is just feeding data to gpg and
>> then receiving the response back. It's possible that your e-mail you
>> just checked was not sent through mailman since I also replied
>> directly to you explicitly (in which case the message has not been
>> modified) and you probably have the setting in the mailing list set
>> to not send duplicate messages if you are an explicit TO. I just
>> deleted all explicit TOs for this message, so everyone should be
>> receiving it through the mailing list and not directly. Is the
>> signature still valid for you now? I think enigmail can handle
> It has perfectly valid signatures, as do your earlier messages to the
> list.
>
>> messages with some signed and unsigned content, and maybe PGP/MIME
>> inherently does not support this and a mailing list re-writing parts
>> of messages is an expected action? If this message re-writing is an
>> expected action and I'm correct that PGP/MIME does not support
>> partially signed content, then maybe it is just a recommendation for
>> this mailing list to not use PGP/MIME for messages sent to the list?
> PGP/MIME definitely does support partially signed content.
>


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/9129a0de/attachment.sig>

From mike at plan99.net  Wed Jun 10 20:26:18 2015
From: mike at plan99.net (Mike Hearn)
Date: Wed, 10 Jun 2015 22:26:18 +0200
Subject: [Bitcoin-development] Proposal: SPV Fee Discovery mechanism
In-Reply-To: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>
References: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>
Message-ID: <CANEZrP3+jW3BO=Zv41CGubJL7bSZ==o=Wp83K6Q0xL4PP+0ZUQ@mail.gmail.com>

I described an alternative way for SPV wallets to learn about fees some
time ago. It requires a new transaction version that embeds output values
into the signed data. Then an upgrade to the P2P protocol to send UTXO data
along with transactions when they are relayed.

The idea is that the wallet sets a Bloom filter with an FP rate that
ensures it will see some random subset of all transactions being broadcast
on the network, and with the extra data, it can calculate the fee paid.
Once a transaction broadcast is observed the wallet includes that tx hash
in its next Bloom filter, thus it can see which block the tx confirmed in.
By measuring the amount of time that passed between a broadcast and it
appearing in a block, it can calculate its own tables of fee paid:time
taken.

This has the advantage that you don't have to trust miners to publish data
accurately. However it requires some protocol upgrades and of course, a lot
of new code in SPV wallets.

The way Bitcoin Wallet for Android handles fees currently is to just update
a hard coded value every so often.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/195f8f71/attachment.html>

From voisine at gmail.com  Wed Jun 10 21:18:26 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Wed, 10 Jun 2015 14:18:26 -0700
Subject: [Bitcoin-development] Proposal: SPV Fee Discovery mechanism
In-Reply-To: <CAFdHNGh=eGCwoMF36Siup-h6aSQtE0mvxCfk+OQRJb-37pds9w@mail.gmail.com>
References: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>
	<CACq0ZD5=EunMZJJMKfFUGkR=Ye_8nmV0qLkJJ997gbWk1MTC9w@mail.gmail.com>
	<CAFdHNGh=eGCwoMF36Siup-h6aSQtE0mvxCfk+OQRJb-37pds9w@mail.gmail.com>
Message-ID: <CACq0ZD5O2Yt_XTzhTPm6tEEdA1OQinbeTfJi7cQE-=N=GWXTxQ@mail.gmail.com>

> Sounds plausible, except SPV protocols would need to include this
coinbase txn if it's going to help SPV clients.

Yes you'd either need a way to add those transactions to the bloom filter,
or add/modify a p2p message to request it specifically.

> when you mention Sybil attack, I don't quite follow.

I just mean that someone could spin up a bunch of malicious p2p nodes that
lied about mempool data. It's a bit worse for SPV clients since they can't
verify that unconfirmed transactions are valid.

> I had previously believed fees were fairly static presently,

I actually just added it the other day after getting blockcypher to include
it in their api. The current release is still using a hard coded fee rate.

Aaron Voisine
co-founder and CEO
breadwallet.com

On Wed, Jun 10, 2015 at 1:00 PM, Nathan Wilcox <nathan at leastauthority.com>
wrote:

> On Wed, Jun 10, 2015 at 1:19 PM, Aaron Voisine <voisine at gmail.com> wrote:
>
>> It could be done by agreeing on a data format and encoding it in an
>> op_return output in the coinbase transaction. If it catches on it could
>> later be enforced with a soft fork.
>>
>>
> Sounds plausible, except SPV protocols would need to include this coinbase
> txn if it's going to help SPV clients. (Until a softfork is activated, SPV
> clients should not rely on this encoding, since until that time the results
> can be fabricated by individual miners.)
>
>
>> For real up-to-the-minute fee calculations you're also going to want to
>> look at the current mempool, how many transactions are waiting, what fees
>> they're paying, etc, but of course that information is susceptible to sybil
>> attack.
>>
>
> Hm, when you mention Sybil attack, I don't quite follow.
>
> When a client relies on any report of a mempool [*], this is already
> outside the realm of locally-verifiable SPV information, so they are
> already susceptible to the service making false claims. If that's
> acceptable (and in many cases it may be) then this whole mechanism is moot,
> because the client can ask the service for fee statistics for past blocks.
>
>
>> In practice what we're doing for now is using services like blockcypher
>> who's business is improving reliability of zero-conf to tell us what
>> fee-per-kb is needed, and then putting a hard coded range around it to
>> protect against the service being compromised.
>>
>
> This is interesting for me, because I had previously believed fees were
> fairly static presently, and also because I like hearing about real life
> wallet implementations.
>
> So if this "SPV Fee Stats" feature were added, a wallet might rely on an
> API for timely stats (aka "block height < 1") then verify that the API
> isn't lying after doing SPV verification of fee stats for confirmed blocks.
>
>
> This is also the kind of thing being done for exchange rate data which is
>> probably the bigger security risk until bitcoin becomes the standard unit
>> of account for the planet.
>>
>>
> That makes sense, although there's no SPV equivalent for exchange data.
>
>
> Aaron Voisine
>> co-founder and CEO
>> breadwallet.com
>>
>> On Wed, Jun 10, 2015 at 10:37 AM, Nathan Wilcox <
>> nathan at leastauthority.com> wrote:
>>
>>> [I'm currently wading through bitcoin-development. I'm still about a
>>> month behind, so I apologize in advance for any noisy redundancy in this
>>> post.]
>>>
>>> While reading about blocksize, I've just finished Mike Hearn's blog post
>>> describing expected systemic behavior as actual blocks approach the current
>>> limit (with or without non-protocol-changing implementation improvements):
>>>
>>> https://medium.com/@octskyward/crash-landing-f5cc19908e32
>>>
>>>
>>> One detail Mike uses to argue against the "fee's will save us" line of
>>> reasoning is that wallets have no good way to learn fee information.
>>>
>>> So, here's a proposal to fix that: put fee and (and perhaps block size,
>>> UTXO, etc...) statistics into the locally-verifiable data available to SPV
>>> clients (ie: block headers).
>>>
>>>
>>> It's easy to imagine a hard fork that places details like per-block
>>> total fees, transaction count, fee variance, UTXO delta, etc... in a each
>>> block header. This would allow SPV clients to rely on this data with the
>>> same PoW-backed assurances as all other header data.
>>>
>>> This mechanism seems valuable regardless of the outcome of blocksize
>>> debate. So long as fees are interesting or important, SPV clients should
>>> know about them. (Same for other stats such as UTXO count.)
>>>
>>> Upgrading the protocol without a hard-fork may be possible and is left
>>> as an exercise for the reader. ;-)
>>>
>>> --
>>> Nathan Wilcox
>>> Least Authoritarian
>>>
>>> email: nathan at leastauthority.com
>>> twitter: @least_nathan
>>> PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993
>>>
>>>
>>> ------------------------------------------------------------------------------
>>>
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>>
>>
>
>
> --
> Nathan Wilcox
> Least Authoritarian
>
> email: nathan at leastauthority.com
> twitter: @least_nathan
> PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/b38d33f6/attachment.html>

From voisine at gmail.com  Wed Jun 10 21:18:30 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Wed, 10 Jun 2015 14:18:30 -0700
Subject: [Bitcoin-development] Proposal: SPV Fee Discovery mechanism
In-Reply-To: <CANEZrP3+jW3BO=Zv41CGubJL7bSZ==o=Wp83K6Q0xL4PP+0ZUQ@mail.gmail.com>
References: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>
	<CANEZrP3+jW3BO=Zv41CGubJL7bSZ==o=Wp83K6Q0xL4PP+0ZUQ@mail.gmail.com>
Message-ID: <CACq0ZD6Qr7F7_20Nfd0a8TTHEVMR0fxu-T5bO4FfN1Lp9PcGDQ@mail.gmail.com>

The other complication is that this will tend to be a lagging indicator
based on network congestion from the last time you connected. If we assume
that transactions are being dropped in an unpredictable way when blocks are
full, knowing the network congestion *right now* is critical, and even then
you just have to hope that someone who wants that space more than you do
doesn't show up after you disconnect.


Aaron Voisine
co-founder and CEO
breadwallet.com

On Wed, Jun 10, 2015 at 1:26 PM, Mike Hearn <mike at plan99.net> wrote:

> I described an alternative way for SPV wallets to learn about fees some
> time ago. It requires a new transaction version that embeds output values
> into the signed data. Then an upgrade to the P2P protocol to send UTXO data
> along with transactions when they are relayed.
>
> The idea is that the wallet sets a Bloom filter with an FP rate that
> ensures it will see some random subset of all transactions being broadcast
> on the network, and with the extra data, it can calculate the fee paid.
> Once a transaction broadcast is observed the wallet includes that tx hash
> in its next Bloom filter, thus it can see which block the tx confirmed in.
> By measuring the amount of time that passed between a broadcast and it
> appearing in a block, it can calculate its own tables of fee paid:time
> taken.
>
> This has the advantage that you don't have to trust miners to publish data
> accurately. However it requires some protocol upgrades and of course, a lot
> of new code in SPV wallets.
>
> The way Bitcoin Wallet for Android handles fees currently is to just
> update a hard coded value every so often.
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/e4d5b79a/attachment.html>

From kristovatlas.lists at gmail.com  Wed Jun 10 23:36:22 2015
From: kristovatlas.lists at gmail.com (Kristov Atlas)
Date: Wed, 10 Jun 2015 19:36:22 -0400
Subject: [Bitcoin-development] Lexicographical Indexing of Transaction
 Inputs and Outputs
In-Reply-To: <20150609201436.GD28093@muck>
References: <CAGH37SK0k1YUvadetyHcBGjzW+OHNFRmRwqsUDeHBGejUacigQ@mail.gmail.com>
	<44BE16F9-AB24-4A8E-BC7F-03A6C590FCE7@gmail.com>
	<CAGH37SL3TA7BXd3Y+4F1Fd5N3ZW+LRLvkfppPsPn61ZVbZJOnQ@mail.gmail.com>
	<CAGH37SLCc-aEG0t0H7fsUZOv_h+Fiw4xoonmfwNaFWBin_7HcQ@mail.gmail.com>
	<20150607023523.GB1570@savin.petertodd.org>
	<CAGH37SLyG-g54-gGU5ZrmQsiogOqWNW1iiayHii1nWiWh+Nk=w@mail.gmail.com>
	<20150609201436.GD28093@muck>
Message-ID: <CAGH37SLxDeRQi3_rXc7xWmtaJ5zbz1FtnwwZ_4wCPP-Tugn+NQ@mail.gmail.com>

Thanks for the feedback. I think I have reflected all of your requested
changes in the latest version, in the BIP and sample code:

https://github.com/kristovatlas/rfc/tree/master/bips

-Kr

On Tue, Jun 9, 2015 at 4:14 PM, Peter Todd <pete at petertodd.org> wrote:

> On Mon, Jun 08, 2015 at 06:53:54PM -0400, Kristov Atlas wrote:
>
> Two other things:
>
>
>
> > On Sat, Jun 6, 2015 at 10:35 PM, Peter Todd <pete at petertodd.org> wrote:
> >
> > > Why mention SIGHASH_SINGLE at all? Its use-case is highly specialized
> > > protocols; you haven't taken into account the needs of those protocols.
> > > For BIP's it's better to stick to the use-cases where the need is clear
> > > and there exists running code that to speculate too much on future
> uses.
> > > With signature hashing in particular it's not yet clear at all what
> > > future OP_CHECKSIG's will look like, let alone the various ways people
> > > will use sighash for smart contract type stuff.
> > >
> > > You'd be better off presenting the BIP in terms of a generic statement
> > > that "except when otherwise prevented by advanced signature hashing
> > > requirements, wallet software must emit transactions sorted according
> to
> > > the following" You can then specify the two common cases in detail:
> > >
> > > 1) SIGHASH_ALL: input and output order signed, so sort appropriately
> > >
> > > 2) SIGHASH_ANYONECANPAY: input order not signed, so software should
> emit
> > >    transactions sorted, recognising that the actual mined order may be
> > >    changed.
> > >
> >
> > That makes sense. I updated the language as follows -- your thoughts?
> Keep
> > in mind this BIP is informational, and so people are free to ignore it.
> >
> > "Applicability: This BIP applies to all transactions of signature hash
> type
> > SIGHASH_ALL. Additionally,  software compliant with this BIP that allows
> > later parties to update the transaction (e.g. using signature hash types
> > SIGHASH_NONE or a variant of SIGHASH_ANYONECANPAY) should emit
> > lexicographically sorted inputs and outputs, although they may later be
> > modified. Transactions that have index dependencies between transactions
> or
> > within the same transaction are covered under the section of this BIP
> > entitled ?Handling Input/Output Dependencies.?"
>
> I'd keep it even simpler than that, and just say for now that such
> use-cases are out of the scope of this BIP, however those standards
> should come up with some kind of deterministic standard that meets the
> needs of the protocol. Again, there's a bunch of possible use-cases here
> and we just can't predict them; focus on the fact that the *spirit* of
> what this BIP is about is applicable and future standards should be
> developed.
>
> So I'd change the "Applicability" section to:
>
> This BIP applies to all transactions where the order of inputs and
> outputs does not matter. This is true for the vast majority of
> transactions as they simply move funds from one place to another.
>
> Currently this generally refers to transactions where SIGHASH_ALL is
> used, in which case the signatures commit to the exact order of input
> and outputs. In the case where SIGHASH_ANYONECANPAY and/or SIGHASH_NONE
> has been used (e.g. crowdfunds) the order of inputs and/or outputs may
> not be signed, however compliant software should still emit transactions
> with sorted inputs and outputs, even though they may later be modified
> by others.
>
> In the event that future protocol upgrades introduce new signature hash
> types, compliant software should apply the lexographic ordering
> principle analogously.
>
> While out of scope of this BIP, protocols that do require a specified
> order of inputs/outputs (e.g. due to use of SIGHASH_SINGLE) should
> consider the goals of this BIP and how best to adapt them to the
> specifics needs of those protocols.
>
>
> Then remove the "handling input/output deps" section.
>
> > > Do you have a patch implementing deterministic tx ordering for Bitcoin
> > > Core yet?
> > >
> >
> > I'm not a frequent C programmer, so I'd prefer to let someone else take
> > care of it, as a frequent committer of code would do a faster and more
> > stylistically consistent job of it. If no one else will, however, I will.
>
>
>
> re: the actual ordering algorithm, having txids be sorted by with the
> hex-based algorithm is odd. I'd simply say they're sorted as
> little-endian byte arrays, or in other words, with the bytearr_cmp()
> function, but with the order of bytes reversed. You also should say that
> we're doing that to make the user see them in visually sorted order to
> match expectations because txids are displayed as little-endian.
>
> For outputs, don't say "locking script", say "scriptPubKey". Secondly,
> scriptPubKeys are not in little-endian representation - they have no
> endianness to them. With output amount, there's no need to say that
> they're unsigned or little-endian satoshies, just say they're sorted
> largest/smallest amount first.
>
> "For the sake of efficiency, amounts will be considered first for
> sorting, since they contain fewer bytes of information (7 bytes)
> compared to a standard P2PKH locking script (800 bytes)." <- where the
> heck did you get these numbers from? Amounts are 8 bytes, and P2PKH
> scriptPubKeys are 25 bytes.
>
>
> "Backwards Compatibility" <- I'd just remove this whole section; we're
> unlikely to make this an IsStandard() rule anytime soon.
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/51baef2a/attachment.html>

From hozer at hozed.org  Thu Jun 11 01:46:47 2015
From: hozer at hozed.org (Troy Benjegerdes)
Date: Wed, 10 Jun 2015 20:46:47 -0500
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough
 to host this list?
In-Reply-To: <DB5PR07MB091974E06974EA88136F60C2B5BD0@DB5PR07MB0919.eurprd07.prod.outlook.com>
References: <1943127.DBnVxmfOIh@1337h4x0r>
	<20150610093556.GA11409@amethyst.visucore.com>
	<557869F9.8030109@AndySchroder.com>
	<20150610180256.GN27932@nl.grid.coop>
	<DB12E925-11C6-4A82-BC81-FB3DA26BC5B3@newcastle.ac.uk>
	<20150610185810.GQ27932@nl.grid.coop>
	<DB5PR07MB091974E06974EA88136F60C2B5BD0@DB5PR07MB0919.eurprd07.prod.outlook.com>
Message-ID: <20150611014647.GS27932@nl.grid.coop>

And just like I did here, if I were a list member with good reputation,
and felt like reposting something that did not make it to the list by
accident or ommission, or a hashcash posting fee that was too high, it
would end up on the list if enough people bothered to read it and 
either repost, or post the bond to pass the filter.

On Wed, Jun 10, 2015 at 07:04:41PM +0000, Patrick Mccorry (PGR) wrote:
> Yeah post back to list - its an interesting response. So members with a good reputation could vote to say if the bond should be returned to the new member. I just wanted to highlight that people who do not commit a lot of code contribute in other, arguably equal ways. 
> 
> ________________________________________
> From: Troy Benjegerdes <hozer at hozed.org>
> Sent: 10 June 2015 19:58
> To: Patrick Mccorry (PGR)
> Subject: Re: [Bitcoin-development] Is SourceForge still trustworthy enough to host this list?
> 
> Did you want responses sent back to the list?
> 
> I think, if I had a revenue stream from a pay-to-post list in place,
> the first thing I'd do is spend some time on a reputation/'post bond'
> interface in which known users with a good reputation could post for
> no charge, while if you were unknown or new to the list, you would
> need to post a bond.
> 
> If the consensus of the list was that your message was valuable, it
> would be broadcast and archived no charge.
> 
> If enough readers thought the message was spam, those readers could
> collect the posted bond, thus compensating them for the time wasted
> reading said spam.
> 
> I would hope that in such an environment would still work for researchers.
> Does this answer your concerns? Should I repost to the list, because
> I do think your concern is worth sharing?
> 
> On Wed, Jun 10, 2015 at 06:48:29PM +0000, Patrick Mccorry (PGR) wrote:
> > What about researchers who do not commit code but help find problems in this space. I don't think a mailing should be a paid for service - as it's difficult to determine who should and should not pay.
> >
> > Sent from my iPhone
> >
> > > On 10 Jun 2015, at 19:45, Troy Benjegerdes <hozer at hozed.org> wrote:
> > >
> > > I'll sponsor it, if we agree to implement a HashCash spam filter
> > > in the next 6 months. I've run mail servers for $DAYJOB for 5 or
> > > so years, and I've run my own personal server for the last 14.
> > >
> > > Since Bitcoin is a perfectly good HashCash system, I'm thinking a
> > > http://www.courier-mta.org/courierfilter.html filter plugin that
> > > checks to ensure that the required bitcoin fee has been paid, or
> > > better yet included in the message in some standard form.
> > >
> > > I'd like to have several other people with linux admin experience
> > > also agree to host live mirrors of the list, which could be switched
> > > over by whomever controls the relevant MX records for the mail list.
> > >
> > > What do you think a reasonable per-message fee should be, such that
> > > a couple of independent admins can reasonably expect to be able to
> > > pay $250/month each for their time and server hosting/bandwidth costs?
> > >
> > > I also think that anyone who's contributed more than say 10 or 15
> > > commits to https://github.com/bitcoin/bitcoin/graphs/contributors
> > > should be excluded from the pay-with-bitcoin filter, as they have
> > > paid with code. The rest of us should be paying to distribute and
> > > archive their efforts.
> > >
> > >> On Wed, Jun 10, 2015 at 12:46:49PM -0400, Andy Schroder wrote:
> > >> Regarding changing the e-mail list provider. Is anyone interested in
> > >> sponsoring it? There are non-free options, but it may be difficult to
> > >> always ensure the fee is being paid to the provider. I think finding an
> > >> agreeable free solution may have been the issue before? I've also
> > >> thought of trying to make a pay per message or byte solution (and this
> > >> cost could be dynamic based upon the number of current mailing list
> > >> subscribers). This could solve the who pays problem (the sender pays),
> > >> as well as motivate people to be more concise and clear with their
> > >> messages, and at the same time limit spam.
> > >>
> > >>
> > >>
> > >> Any thoughts?
> > >>
> > >> Andy Schroder
> > >>
> > >>> On 06/10/2015 05:35 AM, Wladimir J. van der Laan wrote:
> > >>>> On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:
> > >>>> http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/
> > >>> All our downloads (even old ones) have recently been deleted from sourceforge, for this reason. They haven't been mentioned in Bitcon Core release announcements for a long time.
> > >>>
> > >>> No opinion on the mailing list. Though I think it's less urgent. The issue of moving the mailinglist has come up before a few times and people can't agree where to move to.
> > >>>
> > >>> Wladimir
> > >>>
> > >>>
> > >>> ------------------------------------------------------------------------------
> > >>
> > >>
> > >> ------------------------------------------------------------------------------
> > >> _______________________________________________
> > >> Bitcoin-development mailing list
> > >> Bitcoin-development at lists.sourceforge.net
> > >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> > >
> > > --
> > > ----------------------------------------------------------------------------
> > > Troy Benjegerdes                 'da hozer'                  hozer at hozed.org
> > > 7 elements      earth::water::air::fire::mind::spirit::soul        grid.coop
> > >
> > >      Never pick a fight with someone who buys ink by the barrel,
> > >         nor try buy a hacker who makes money by the megahash
> > >
> > >
> > > ------------------------------------------------------------------------------
> > > _______________________________________________
> > > Bitcoin-development mailing list
> > > Bitcoin-development at lists.sourceforge.net
> > > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> --
> ----------------------------------------------------------------------------
> Troy Benjegerdes                 'da hozer'                  hozer at hozed.org
> 7 elements      earth::water::air::fire::mind::spirit::soul        grid.coop
> 
>       Never pick a fight with someone who buys ink by the barrel,
>          nor try buy a hacker who makes money by the megahash

-- 
----------------------------------------------------------------------------
Troy Benjegerdes                 'da hozer'                  hozer at hozed.org
7 elements      earth::water::air::fire::mind::spirit::soul        grid.coop

      Never pick a fight with someone who buys ink by the barrel,
         nor try buy a hacker who makes money by the megahash




From laanwj at gmail.com  Thu Jun 11 09:27:46 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Thu, 11 Jun 2015 11:27:46 +0200
Subject: [Bitcoin-development] Is SourceForge still trustworthy enough
 to host this list?
In-Reply-To: <557883A7.7030906@sky-ip.org>
References: <1943127.DBnVxmfOIh@1337h4x0r>
	<20150610093556.GA11409@amethyst.visucore.com>
	<557869F9.8030109@AndySchroder.com> <557883A7.7030906@sky-ip.org>
Message-ID: <20150611092744.GA2167@amethyst.visucore.com>

On Wed, Jun 10, 2015 at 09:36:23PM +0300, s7r wrote:
> The mail list is public, so it's not like the data on it is somehow
> sensitive. Sourcefoge is fine, it has a nice web UI where you can browse
> the message and sort/order them as you want, etc.
> 
> Why would you want to move to a paid solution? And why would you want
> users to have to pay per message? This is the worst idea ever from my
> point of view. We want to encourage people to join the community, run
> full nodes, ask questions, come with solutions, ideas for improvements
> and so on. Everyone should read and write and contribute as much as
> possible with ideas in debates. You never know who can have bright ideas
> in some contexts.
> 
> Bottom line is so far sourceforge handles the mail lists just fine. I
> don't see a single advantage another mail list provider / system could
> offer, except some headache and extra work for migration. The software
> distribution via sourcefoge was cancelled for obvious reasons which I
> fully understand and agree to, but it has nothing to do with the mail
> lists. We have way more important things to brainstorm about.

I completely agree here. I'm not against migration if a much better option comes along, but e.g. paying for another provider sounds like nonsense when sourceforge does this for free (with some minor annoyances - other providers will have their own).

Paying per message is far-fetched, something that could work in economic theory with perfectly spherical people in their perfectly efficient market. In practice the likely result would be a mailing list only used for advertisement and promotion, and technical discussion and release announcements would disappear.

BTW for people that *don't* like sourceforge's web archive UI there are some other options via gmane:

http://dir.gmane.org/gmane.comp.bitcoin.devel

Wladimir



From mike at plan99.net  Thu Jun 11 10:19:09 2015
From: mike at plan99.net (Mike Hearn)
Date: Thu, 11 Jun 2015 12:19:09 +0200
Subject: [Bitcoin-development] Proposal: SPV Fee Discovery mechanism
In-Reply-To: <CACq0ZD6Qr7F7_20Nfd0a8TTHEVMR0fxu-T5bO4FfN1Lp9PcGDQ@mail.gmail.com>
References: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>
	<CANEZrP3+jW3BO=Zv41CGubJL7bSZ==o=Wp83K6Q0xL4PP+0ZUQ@mail.gmail.com>
	<CACq0ZD6Qr7F7_20Nfd0a8TTHEVMR0fxu-T5bO4FfN1Lp9PcGDQ@mail.gmail.com>
Message-ID: <CANEZrP2V_XAk-=XSmNywXKXmKN9W-eT_gS72te6P65OqAC5P_Q@mail.gmail.com>

>
> If we assume that transactions are being dropped in an unpredictable way
> when blocks are full, knowing the network congestion *right now* is
> critical, and even then you just have to hope that someone who wants that
> space more than you do doesn't show up after you disconnect.
>

Yeah, my proposal is not intended to function correctly with full blocks,
as Bitcoin cannot work at all in such a state. It assumes that fees only
change slowly and that transactions are being cleared normally.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150611/fb07fb95/attachment.html>

From pete at petertodd.org  Thu Jun 11 13:10:48 2015
From: pete at petertodd.org (Peter Todd)
Date: Thu, 11 Jun 2015 09:10:48 -0400
Subject: [Bitcoin-development] Proposal: SPV Fee Discovery mechanism
In-Reply-To: <CACq0ZD6Qr7F7_20Nfd0a8TTHEVMR0fxu-T5bO4FfN1Lp9PcGDQ@mail.gmail.com>
References: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>
	<CANEZrP3+jW3BO=Zv41CGubJL7bSZ==o=Wp83K6Q0xL4PP+0ZUQ@mail.gmail.com>
	<CACq0ZD6Qr7F7_20Nfd0a8TTHEVMR0fxu-T5bO4FfN1Lp9PcGDQ@mail.gmail.com>
Message-ID: <20150611131048.GA24053@savin.petertodd.org>

On Wed, Jun 10, 2015 at 02:18:30PM -0700, Aaron Voisine wrote:
> The other complication is that this will tend to be a lagging indicator
> based on network congestion from the last time you connected. If we assume
> that transactions are being dropped in an unpredictable way when blocks are
> full, knowing the network congestion *right now* is critical, and even then
> you just have to hope that someone who wants that space more than you do
> doesn't show up after you disconnect.

Hence the need for ways to increase fees on transactions after initial
broadcast like replace-by-fee and child-pays-for-parent.

Re: "dropped in an unpredictable way" - transactions would be dropped
lowest fee/KB first, a completely predictable way.

-- 
'peter'[:-1]@petertodd.org
0000000000000000124bae79afdcee9267b4e6f8137758b8b4135455cd8e3bfd
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150611/b3d975d6/attachment.sig>

From martin at datamagi.no  Thu Jun 11 14:11:51 2015
From: martin at datamagi.no (Martin Lie)
Date: Thu, 11 Jun 2015 16:11:51 +0200
Subject: [Bitcoin-development] Proposal: SPV Fee Discovery mechanism
In-Reply-To: <20150611131048.GA24053@savin.petertodd.org>
References: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>	<CANEZrP3+jW3BO=Zv41CGubJL7bSZ==o=Wp83K6Q0xL4PP+0ZUQ@mail.gmail.com>	<CACq0ZD6Qr7F7_20Nfd0a8TTHEVMR0fxu-T5bO4FfN1Lp9PcGDQ@mail.gmail.com>
	<20150611131048.GA24053@savin.petertodd.org>
Message-ID: <55799727.7090902@datamagi.no>

Peter Todd wrote:
> Re: "dropped in an unpredictable way" - transactions would be dropped
> lowest fee/KB first, a completely predictable way.

It would be 'completely predictable' for whoever knew the state and 
policies of a miner's mempool, but from an end user's perspective that 
wouldn't matter much: The end users wouldn't know if their 
transaction(s) would make the cut or not, somewhere in the network, and 
by what time. They (obviously) won't know what miners will find the next 
block(s), they won't know the miners' mempool sizes, potential custom 
eviction policies, etc.

I agree that this can be somewhat remedied by FSSRBF/CPFP, though, 
provided wallets give users a good (semi-automated?) interface for such 
transaction replacements/chains.


-- 
Martin Lie



From tomh at thinlink.com  Thu Jun 11 17:10:22 2015
From: tomh at thinlink.com (Tom Harding)
Date: Thu, 11 Jun 2015 10:10:22 -0700
Subject: [Bitcoin-development] Proposal: SPV Fee Discovery mechanism
In-Reply-To: <20150611131048.GA24053@savin.petertodd.org>
References: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>	<CANEZrP3+jW3BO=Zv41CGubJL7bSZ==o=Wp83K6Q0xL4PP+0ZUQ@mail.gmail.com>	<CACq0ZD6Qr7F7_20Nfd0a8TTHEVMR0fxu-T5bO4FfN1Lp9PcGDQ@mail.gmail.com>
	<20150611131048.GA24053@savin.petertodd.org>
Message-ID: <5579C0FE.8080701@thinlink.com>

On 6/11/2015 6:10 AM, Peter Todd wrote:
> On Wed, Jun 10, 2015 at 02:18:30PM -0700, Aaron Voisine wrote:
>> The other complication is that this will tend to be a lagging indicator
>> based on network congestion from the last time you connected. If we assume
>> that transactions are being dropped in an unpredictable way when blocks are
>> full, knowing the network congestion *right now* is critical, and even then
>> you just have to hope that someone who wants that space more than you do
>> doesn't show up after you disconnect.
> Hence the need for ways to increase fees on transactions after initial
> broadcast like replace-by-fee and child-pays-for-parent.
>
> Re: "dropped in an unpredictable way" - transactions would be dropped
> lowest fee/KB first, a completely predictable way.

Quite agreed.  Also, transactions with unconfirmed inputs should be 
among the first to get dropped, as discussed in the "Dropped-transaction 
spam" thread.  Like all policy rules, either of these works in 
proportion to its deployment.

Be advised that pull request #6068 emphasizes the view that the network 
will never have consistent mempool/relay policies, and on the contrary 
needs a framework that supports and encourages pluggable, generally 
parameterized policies that could (some might say should) conflict 
wildly with each other.

It probably doesn't matter that much.  Deploying a new policy still 
wouldn't be much easier than deploying a patched version.  I mean, 
nobody has proposed a policy rule engine yet (oops).





From mike at plan99.net  Thu Jun 11 17:52:26 2015
From: mike at plan99.net (Mike Hearn)
Date: Thu, 11 Jun 2015 19:52:26 +0200
Subject: [Bitcoin-development] Proposal: SPV Fee Discovery mechanism
In-Reply-To: <5579C0FE.8080701@thinlink.com>
References: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>
	<CANEZrP3+jW3BO=Zv41CGubJL7bSZ==o=Wp83K6Q0xL4PP+0ZUQ@mail.gmail.com>
	<CACq0ZD6Qr7F7_20Nfd0a8TTHEVMR0fxu-T5bO4FfN1Lp9PcGDQ@mail.gmail.com>
	<20150611131048.GA24053@savin.petertodd.org>
	<5579C0FE.8080701@thinlink.com>
Message-ID: <CANEZrP2MiU8=sUXqAAjoJtkcdu4oAKmqVxM3ERz_fuknzWGiiw@mail.gmail.com>

>
> > Re: "dropped in an unpredictable way" - transactions would be dropped
> > lowest fee/KB first, a completely predictable way.
>
> Quite agreed.


No, Aaron is correct. It's unpredictable from the perspective of the user
sending the transaction, and as they are the ones picking the fees, that is
what matters.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150611/57b98820/attachment.html>

From nathan at leastauthority.com  Thu Jun 11 18:18:50 2015
From: nathan at leastauthority.com (Nathan Wilcox)
Date: Thu, 11 Jun 2015 12:18:50 -0600
Subject: [Bitcoin-development] Proposal: SPV Fee Discovery mechanism
In-Reply-To: <20150611131048.GA24053@savin.petertodd.org>
References: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>
	<CANEZrP3+jW3BO=Zv41CGubJL7bSZ==o=Wp83K6Q0xL4PP+0ZUQ@mail.gmail.com>
	<CACq0ZD6Qr7F7_20Nfd0a8TTHEVMR0fxu-T5bO4FfN1Lp9PcGDQ@mail.gmail.com>
	<20150611131048.GA24053@savin.petertodd.org>
Message-ID: <CAFdHNGgtf+AuW=yMegCuFPNPpi6GgArsTkBWbdVxKNY6R7Erug@mail.gmail.com>

On Thu, Jun 11, 2015 at 7:10 AM, Peter Todd <pete at petertodd.org> wrote:

> On Wed, Jun 10, 2015 at 02:18:30PM -0700, Aaron Voisine wrote:
> > The other complication is that this will tend to be a lagging indicator
> > based on network congestion from the last time you connected. If we
> assume
> > that transactions are being dropped in an unpredictable way when blocks
> are
> > full, knowing the network congestion *right now* is critical, and even
> then
> > you just have to hope that someone who wants that space more than you do
> > doesn't show up after you disconnect.
>
> Hence the need for ways to increase fees on transactions after initial
> broadcast like replace-by-fee and child-pays-for-parent.
>
>
I haven't looked closely at replace-by-fee yet, but I assume this is a
non-consensus change to mempool mechanics. To me, this seems like the
"actuator" side of fee mechanics: it provides a transaction sender a way to
influence the system.  By contrast, learning about fees is the "sensor"
side of fee mechanics.

Consider how a replace-by-fee wallet makes fee decisions. When does it
replace by fee?  It needs feedback in one of two forms:

a. Direct feedback from a trnasaction relay service, or:

b. Information in the blockchain, which is verified by all verifying nodes
and refined by all miners.

The first kind of information is quite acceptable and practical for many
use cases, but leave the wallet vulnerable to fabrications by that service.
This vulnerability is precisely what SPV security intends to mitigate,
right?

With only information type a, a (non-SPV) wallet can "shop around" to find
competing services, and this should work pretty well, provided the wallet
can discover those competing services. If, OTOH, the wallet has access to
information type b, it now has "perfect competition" across all such
services, even when it can't discover the low-priced services directly.

This actual-fees-in-the-actual-block-chain information of type b seem like
a powerful source of pricing information, and if SPV security is already
valuable for other reasons, then it seems natural to leverage that value.


Re: "dropped in an unpredictable way" - transactions would be dropped
> lowest fee/KB first, a completely predictable way.
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000124bae79afdcee9267b4e6f8137758b8b4135455cd8e3bfd
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>


-- 
Nathan Wilcox
Least Authoritarian

email: nathan at leastauthority.com
twitter: @least_nathan
PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150611/6aed7d44/attachment.html>

From nathan at leastauthority.com  Thu Jun 11 18:30:54 2015
From: nathan at leastauthority.com (Nathan Wilcox)
Date: Thu, 11 Jun 2015 12:30:54 -0600
Subject: [Bitcoin-development] Proposal: SPV Fee Discovery mechanism
In-Reply-To: <20150610200323.GA13724@savin.petertodd.org>
References: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>
	<CACq0ZD5=EunMZJJMKfFUGkR=Ye_8nmV0qLkJJ997gbWk1MTC9w@mail.gmail.com>
	<CAFdHNGh=eGCwoMF36Siup-h6aSQtE0mvxCfk+OQRJb-37pds9w@mail.gmail.com>
	<20150610200323.GA13724@savin.petertodd.org>
Message-ID: <CAFdHNGg-gJ99L4oartyMMX3PhykhekNbuLrs7Z8JN0zTpwgaZw@mail.gmail.com>

On Wed, Jun 10, 2015 at 2:03 PM, Peter Todd <pete at petertodd.org> wrote:

> On Wed, Jun 10, 2015 at 02:00:27PM -0600, Nathan Wilcox wrote:
> > On Wed, Jun 10, 2015 at 1:19 PM, Aaron Voisine <voisine at gmail.com>
> wrote:
> >
> > > It could be done by agreeing on a data format and encoding it in an
> > > op_return output in the coinbase transaction. If it catches on it could
> > > later be enforced with a soft fork.
> > >
> > >
> > Sounds plausible, except SPV protocols would need to include this
> coinbase
> > txn if it's going to help SPV clients. (Until a softfork is activated,
> SPV
> > clients should not rely on this encoding, since until that time the
> results
> > can be fabricated by individual miners.)
>
> Fee stats can always be fabricated by individual miners because fees can
> be paid out-of-band.
>
>
This is a point I hadn't considered carefully before. I don't understand
the marketplace here or why miners would want to move fees outside of
explicit inband fees. Implicit in this proposal is that the statistics only
cover in-band data, because that's the scope of consensus rules, and thus
the proposal is only as useful as the information of in-band fees is useful.

I've also noticed a detracting technical argument given a particular
tradeoff:

A Header-PoW-verifying client could still be given all transactions in a
recent block, from which it can see the in-band fees directly.  The
trade-off is the size of those transactions versus the need to alter any
consensus rules or do soft forks.

Notice how this trade-off's costs change with maximum block size.




> --
> 'peter'[:-1]@petertodd.org
> 00000000000000001245bd2f5c99379ee76836227ded9c08324894faabc0d27f
>



-- 
Nathan Wilcox
Least Authoritarian

email: nathan at leastauthority.com
twitter: @least_nathan
PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150611/ae77eddb/attachment.html>

From voisine at gmail.com  Thu Jun 11 18:55:09 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Thu, 11 Jun 2015 11:55:09 -0700
Subject: [Bitcoin-development] Proposal: SPV Fee Discovery mechanism
In-Reply-To: <CAFdHNGg-gJ99L4oartyMMX3PhykhekNbuLrs7Z8JN0zTpwgaZw@mail.gmail.com>
References: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>
	<CACq0ZD5=EunMZJJMKfFUGkR=Ye_8nmV0qLkJJ997gbWk1MTC9w@mail.gmail.com>
	<CAFdHNGh=eGCwoMF36Siup-h6aSQtE0mvxCfk+OQRJb-37pds9w@mail.gmail.com>
	<20150610200323.GA13724@savin.petertodd.org>
	<CAFdHNGg-gJ99L4oartyMMX3PhykhekNbuLrs7Z8JN0zTpwgaZw@mail.gmail.com>
Message-ID: <CACq0ZD4LDTWXsk8Lk5Yf3D7FOwnrgY_oVjRHgH0PhRYmb3ZOdg@mail.gmail.com>

> A Header-PoW-verifying client could still be given all transactions in a
recent block, from which it can see the in-band fees directly.

You don't know the fees paid by any given transaction unless you also have
all it's inputs. Transaction inputs do not include an amount. You could
however get the average fee-per-kb paid by all transactions in a block by
looking at the coinbase transaction, subtracting the block reward, and
dividing by the size of block minus the header.


Aaron Voisine
co-founder and CEO
breadwallet.com

On Thu, Jun 11, 2015 at 11:30 AM, Nathan Wilcox <nathan at leastauthority.com>
wrote:

> On Wed, Jun 10, 2015 at 2:03 PM, Peter Todd <pete at petertodd.org> wrote:
>
>> On Wed, Jun 10, 2015 at 02:00:27PM -0600, Nathan Wilcox wrote:
>> > On Wed, Jun 10, 2015 at 1:19 PM, Aaron Voisine <voisine at gmail.com>
>> wrote:
>> >
>> > > It could be done by agreeing on a data format and encoding it in an
>> > > op_return output in the coinbase transaction. If it catches on it
>> could
>> > > later be enforced with a soft fork.
>> > >
>> > >
>> > Sounds plausible, except SPV protocols would need to include this
>> coinbase
>> > txn if it's going to help SPV clients. (Until a softfork is activated,
>> SPV
>> > clients should not rely on this encoding, since until that time the
>> results
>> > can be fabricated by individual miners.)
>>
>> Fee stats can always be fabricated by individual miners because fees can
>> be paid out-of-band.
>>
>>
> This is a point I hadn't considered carefully before. I don't understand
> the marketplace here or why miners would want to move fees outside of
> explicit inband fees. Implicit in this proposal is that the statistics only
> cover in-band data, because that's the scope of consensus rules, and thus
> the proposal is only as useful as the information of in-band fees is useful.
>
> I've also noticed a detracting technical argument given a particular
> tradeoff:
>
> A Header-PoW-verifying client could still be given all transactions in a
> recent block, from which it can see the in-band fees directly.  The
> trade-off is the size of those transactions versus the need to alter any
> consensus rules or do soft forks.
>
> Notice how this trade-off's costs change with maximum block size.
>
>
>
>
>> --
>> 'peter'[:-1]@petertodd.org
>> 00000000000000001245bd2f5c99379ee76836227ded9c08324894faabc0d27f
>>
>
>
>
> --
> Nathan Wilcox
> Least Authoritarian
>
> email: nathan at leastauthority.com
> twitter: @least_nathan
> PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150611/574993ab/attachment.html>

From pete at petertodd.org  Fri Jun 12 00:40:58 2015
From: pete at petertodd.org (Peter Todd)
Date: Thu, 11 Jun 2015 20:40:58 -0400
Subject: [Bitcoin-development] Miners: You'll (very likely) need to upgrade
 your Bitcoin Core node soon to support BIP66
Message-ID: <20150612004058.GA14749@muck>

Summary
-------

The BIP66 soft-fork recently passed the 75% support threshold. This
means that 75% of the hashing power has upgraded to support BIP66; 25%
of the hashing power has not. Once 95% of the hashing power has
upgraded, blocks created by the 5% who have not upgraded will be
rejected.

If you operate a pool, solo-mine, or mine on p2pool you'll very likely
need to upgrade your Bitcoin Core node to support the BIP66 soft-fork,
or your blocks will be rejected. If you only sell your hashing power to
a centralized pool you do not need to do anything.


How does the Bitcoin protocol measure BIP66 support?
----------------------------------------------------

Miners that have upgraded to support BIP66 create blocks with the
version field set to 3; non-upgraded miners set the version to 2.
Bitcoin Core measures BIP66 support by counting how many blocks with
version >= 3 exist in the blockchain within the last 1000 blocks.

If 750 out of the last 1000 blocks support BIP66, blocks with the
version set to >= 3 that do not follow the BIP66 rules are rejected; if
950 out of the last 1000 blocks support BIP66, blocks with version < 3
are rejected.


When will the 95% threshold be reached?
---------------------------------------

It's unknown exactly when the 95% threshold will be reached. The BIP34
soft-fork went from 75% to 95% support in a about two weeks, however
more or less time is possible; it's possible that the 95% threshold will
be reached in just a few days.


How can I monitor BIP66 adoption?
---------------------------------

See Pieter Wuille's graphs:

    http://bitcoin.sipa.be/ver-ever.png
    http://bitcoin.sipa.be/ver-50k.png
    http://bitcoin.sipa.be/ver-10k.png
    http://bitcoin.sipa.be/ver-2k.png

The 'ever' and '50k' graphs show the 75% and 95% thresholds.


What software supports support BIP66?
-------------------------------------

Bitcoin Core releases later than v0.10.0 support BIP66.

In addition, v0.9.5 supports BIP66, however we recommend that you
upgrade to v0.10.2

If you run a pool, you may also need to upgrade your pool software as
well. For instance, eloipool versions prior to May 22nd 2015, git commit
f5f4ea636fb38f38e6d9a04aad1f04427556a4bc, do not support BIP66. (For
Eloipool, cb8a5e8fbb4bfdfe9e35f670082603caff65e1b2 is a clean merge that
should work for any branch more recent than 2013 April 6)

Solo miners and decentralised miners using GBT need to also update their
mining software to a currently supported version of BFGMiner to get
support for v3 blocks. The official BFGMiner binaries include this
update with 5.1.0, 4.10.2, and 3.10.9.


What is BIP66?
--------------

BIP66 - "Strict DER signatures" - is a soft-fork that tightens the rules
for signature verification, specifically the way that signatures are
encoded. The Bitcoin Core implementation currently relies on OpenSSL for
signature validation, which means it implicitly defines Bitcoin's block
validity rules. Unfortunately, OpenSSL is not designed for
consensus-critical behaviour (it does not guarantee bug-for-bug
compatibility between versions), and thus changes to it can - and have -
affected Bitcoin software. (see CVE-2014-8275)

By tightening these rules BIP66 reduces the risk that changes to OpenSSL
will cause forks in the Bitcoin blockchain, as seen previously by the
March 2013 fork. Secondly reducing our dependency on OpenSSL is a step
towards replacing OpenSSL with libsecp256k1, a signature validation
library from Pieter Wuille and Gregory Maxwell, that is designed for
consensus-critical applications, as well as being significantly faster
than OpenSSL.


Is it possible that the BIP66 soft-fork will not happen?
--------------------------------------------------------

In theory yes, though it is unlikely and rejection of BIP66 would be a
very ugly process. Unfortunately the existing soft-fork mechanism
provides no mechanism for a soft-fork to expire, so once set in motion
there is no clean way to stop a soft-fork.

There is a proposal from Wuille/Maxwell/Todd, to reform how soft-forks
are adopted that aims to fix this issue, as well as allow multiple
soft-forks be adopted in parallel:

http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07863.html

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150611/d56b6e78/attachment.sig>

From voisine at gmail.com  Fri Jun 12 06:44:57 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Thu, 11 Jun 2015 23:44:57 -0700
Subject: [Bitcoin-development] Proposal: SPV Fee Discovery mechanism
In-Reply-To: <CANEZrP2MiU8=sUXqAAjoJtkcdu4oAKmqVxM3ERz_fuknzWGiiw@mail.gmail.com>
References: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>
	<CANEZrP3+jW3BO=Zv41CGubJL7bSZ==o=Wp83K6Q0xL4PP+0ZUQ@mail.gmail.com>
	<CACq0ZD6Qr7F7_20Nfd0a8TTHEVMR0fxu-T5bO4FfN1Lp9PcGDQ@mail.gmail.com>
	<20150611131048.GA24053@savin.petertodd.org>
	<5579C0FE.8080701@thinlink.com>
	<CANEZrP2MiU8=sUXqAAjoJtkcdu4oAKmqVxM3ERz_fuknzWGiiw@mail.gmail.com>
Message-ID: <CACq0ZD4wEBDKV8WtEsZJ54hxA9UP+T2N0g-7cxmgynZK+yaMxA@mail.gmail.com>

One possible solution that wallets could adopt when blocks fill up, would
be to abandon the p2p network for transaction propagation altogether, and
instead work directly with a handful of the largest miners and pools to get
transactions into blocks. The miners could auction off space in their
blocks with the guarantee that they will be included in the order accepted.
We'd lose the peer-to-peer nature of sending transactions for a federated
service operator style model, but avoid the problem of unpredictable
transaction failure. Also, unlike replace-by-fee, this would allow for
a send-and-forget usage pattern, as well as known up-front fees. Something
like this is certainly what I imagine the large hosted wallet companies
will end up moving to.

Aaron

On Thursday, June 11, 2015, Mike Hearn <mike at plan99.net> wrote:

> > Re: "dropped in an unpredictable way" - transactions would be dropped
>> > lowest fee/KB first, a completely predictable way.
>>
>> Quite agreed.
>
>
> No, Aaron is correct. It's unpredictable from the perspective of the user
> sending the transaction, and as they are the ones picking the fees, that is
> what matters.
>


-- 

Aaron Voisine
co-founder and CEO
breadwallet.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150611/18a6e3a1/attachment.html>

From tier.nolan at gmail.com  Fri Jun 12 08:37:17 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Fri, 12 Jun 2015 09:37:17 +0100
Subject: [Bitcoin-development] Miners: You'll (very likely) need to
 upgrade your Bitcoin Core node soon to support BIP66
In-Reply-To: <20150612004058.GA14749@muck>
References: <20150612004058.GA14749@muck>
Message-ID: <CAE-z3OXMp6494BXeD0FcKPSriHHr+F6grH=tdhk45Ni1+FQ6ZQ@mail.gmail.com>

Once the 75% threshold is reached, miners who haven't updated are at risk
of mining on invalid blocks.

If someone produces a version 3 block that violates the new rules, then
miners who haven't upgraded will end up wasting mining power building on
that block.

This could be used as an expensive way to attack miners who haven't
upgraded.  It is low risk of happening, since creating an invalid version 3
block costs 25BTC in hashing power and the miner who does it ends up
creating an invalid block.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/976d41cd/attachment.html>

From pieter.wuille at gmail.com  Fri Jun 12 16:51:02 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Fri, 12 Jun 2015 18:51:02 +0200
Subject: [Bitcoin-development] Mining centralization pressure from
	non-uniform propagation speed
Message-ID: <CAPg+sBi5fYHGLv4wtWbWE7jov8CX=q9UX=vhxDVepG6JfX30+g@mail.gmail.com>

Hello all,

I've created a simulator for Bitcoin mining which goes a bit further than
the one Gavin used for his blog post a while ago. The main difference is
support for links with different latency and bandwidth, because of the
clustered configuration described below. In addition, it supports different
block sizes, takes fees into account, does difficulty adjustments, and
takes processing and mining delays into account. It also simulates longer
periods of time, and averages the result of many simulations running in
parallel until the variance on the result is low enough.

The code is here: https://github.com/sipa/bitcoin-net-simul

The configuration used in the code right now simulates two groups of miners
(one 80%=25%+25%+30%, one 20%=5%+5%+5%+5%), which are well-connected
internally, but are only connected to each other through a slow 2 Mbit/s
link.

Here are some results.

This shows how the group of smaller miners loses around 8% of their
relative income (if they create larger blocks, their loss percentage goes
up slightly further):

Configuration:
  * Miner group 0: 80.000000% hashrate, blocksize 20000000.000000
  * Miner group 1: 20.000000% hashrate, blocksize 1000000.000000
  * Expected average block size: 16200000.000000
  * Average fee per block: 0.250000
  * Fee per byte: 0.0000000154
Result:
  * Miner group 0: 81.648985% income (factor 1.020612 with hashrate)
  * Miner group 1: 18.351015% income (factor 0.917551 with hashrate)

When fees become more important however, and half of a block's income is
due to fees, the effect becomes even stronger (a 15% loss), and the optimal
way to compete for small miners is to create larger blocks as well (smaller
blocks for them result in even less income):

Configuration:
  * Miner group 0: 80.000000% hashrate, blocksize 20000000.000000
  * Miner group 1: 20.000000% hashrate, blocksize 20000000.000000
  * Expected average block size: 20000000.000000
  * Average fee per block: 25.000000
  * Fee per byte: 0.0000012500
Result:
  * Miner group 0: 83.063545% income (factor 1.038294 with hashrate)
  * Miner group 1: 16.936455% income (factor 0.846823 with hashrate)

The simulator is not perfect. It doesn't take into account that multiple
blocks/relays can compete for the same bandwidth, or that nodes cannot
process multiple blocks at once.

The numbers used may be unrealistic, and I don't mean this as a prediction
for real-world events. However, it does very clearly show the effects of
larger blocks on centralization pressure of the system. Note that this also
does not make any assumption of destructive behavior on the network - just
simple profit maximalization.

Lastly, the code may be buggy; I only did some small sanity tests with
simple networks.

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/e8c2f530/attachment.html>

From gavinandresen at gmail.com  Fri Jun 12 17:21:46 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Fri, 12 Jun 2015 13:21:46 -0400
Subject: [Bitcoin-development] Mining centralization pressure from
 non-uniform propagation speed
In-Reply-To: <CAPg+sBi5fYHGLv4wtWbWE7jov8CX=q9UX=vhxDVepG6JfX30+g@mail.gmail.com>
References: <CAPg+sBi5fYHGLv4wtWbWE7jov8CX=q9UX=vhxDVepG6JfX30+g@mail.gmail.com>
Message-ID: <CABsx9T1=+S+dAdwASECUCkrVaMFT0TcmL7MiwnCuCx0MkF6sWw@mail.gmail.com>

Nice work, Pieter. You're right that my simulation assumed bandwidth for
'block' messages isn't the bottleneck.

But doesn't Matt's fast relay network (and the work I believe we're both
planning on doing in the near future to further optimize block propagation)
make both of our simulations irrelevant in the long-run?

Or, even simpler, why couldn't the little miners just run their
block-assembling-and-announcing code on the other high-bandwidth-side of
the bandwidth bottleneck?

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/30ea9c9f/attachment.html>

From pete at petertodd.org  Fri Jun 12 18:01:13 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 12 Jun 2015 14:01:13 -0400
Subject: [Bitcoin-development] Mining centralization pressure from
 non-uniform propagation speed
In-Reply-To: <CAPg+sBi5fYHGLv4wtWbWE7jov8CX=q9UX=vhxDVepG6JfX30+g@mail.gmail.com>
References: <CAPg+sBi5fYHGLv4wtWbWE7jov8CX=q9UX=vhxDVepG6JfX30+g@mail.gmail.com>
Message-ID: <20150612180028.GA19199@muck>

On Fri, Jun 12, 2015 at 06:51:02PM +0200, Pieter Wuille wrote:
> The configuration used in the code right now simulates two groups of miners
> (one 80%=25%+25%+30%, one 20%=5%+5%+5%+5%), which are well-connected
> internally, but are only connected to each other through a slow 2 Mbit/s
> link.
> 
> Here are some results.
> 
> This shows how the group of smaller miners loses around 8% of their
> relative income (if they create larger blocks, their loss percentage goes
> up slightly further):

To be clear, when you say 8% of their income, you mean revenue, not
profit?

Actual profit margins of something like 5%-10% are likely, so that's an
enormous hit that could make their mining operation completely
non-viable.

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/c610a4f7/attachment.sig>

From pete at petertodd.org  Fri Jun 12 18:11:53 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 12 Jun 2015 14:11:53 -0400
Subject: [Bitcoin-development] User vote in blocksize through fees
Message-ID: <20150612181153.GB19199@muck>

Jeff Garzik recently proposed that the upper blocksize limit be removed
entirely, with a "soft" limit being enforced via miner vote, recorded by
hashing power.

This mechanism within the protocol for users to have any influence over
the miner vote. We can add that back by providing a way for transactions
themselves to set a flag determining whether or not they can be included
in a block casting a specific vote.

We can simplify Garzik's vote to say that one of the nVersion bits
either votes for the blocksize to be increased, or decreased, by some
fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a
nVersion bit in transactions themselves, also voting for an increase or
decrease. Transactions may only be included in blocks with an
indentical vote, thus providing miners with a monetary incentive via
fees to vote according to user wishes.

Of course, to cast a "don't care" vote we can either define an
additional bit, or sign the transaction with both versions. Equally we
can even have different versions with different fees, broadcast via a
mechanism such as replace-by-fee.


See also John Dillon's proposal for proof-of-stake blocksize voting:

https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg02323.html

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/934ec915/attachment.sig>

From mark at friedenbach.org  Fri Jun 12 18:20:21 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Fri, 12 Jun 2015 11:20:21 -0700
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <20150612181153.GB19199@muck>
References: <20150612181153.GB19199@muck>
Message-ID: <CAOG=w-up7-wp2NnK52jeCLvcSWvbC-iT-YRDoA=10QhU=K14-g@mail.gmail.com>

Peter it's not clear to me that your described protocol is free of miner
influence over the vote, by artificially generating transactions which they
claim in their own blocks, or conforming incentives among voters by opting
to be with the (slight) majority in order to minimize fees.

Wouldn't it in fact be simpler to use the dynamic block size adjustment
algorithm presented to the list a few weeks back, where the miner opts for
a larger block by sacrificing fees? In that way the users "vote" for larger
blocks by including sufficient fees to offset subsidy, but as it is an
economic incentives miners gain nothing by inflating the fees in their own
blocks.

On Fri, Jun 12, 2015 at 11:11 AM, Peter Todd <pete at petertodd.org> wrote:

> Jeff Garzik recently proposed that the upper blocksize limit be removed
> entirely, with a "soft" limit being enforced via miner vote, recorded by
> hashing power.
>
> This mechanism within the protocol for users to have any influence over
> the miner vote. We can add that back by providing a way for transactions
> themselves to set a flag determining whether or not they can be included
> in a block casting a specific vote.
>
> We can simplify Garzik's vote to say that one of the nVersion bits
> either votes for the blocksize to be increased, or decreased, by some
> fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a
> nVersion bit in transactions themselves, also voting for an increase or
> decrease. Transactions may only be included in blocks with an
> indentical vote, thus providing miners with a monetary incentive via
> fees to vote according to user wishes.
>
> Of course, to cast a "don't care" vote we can either define an
> additional bit, or sign the transaction with both versions. Equally we
> can even have different versions with different fees, broadcast via a
> mechanism such as replace-by-fee.
>
>
> See also John Dillon's proposal for proof-of-stake blocksize voting:
>
>
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg02323.html
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/89a6898b/attachment.html>

From bip at mattwhitlock.name  Fri Jun 12 18:22:36 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Fri, 12 Jun 2015 14:22:36 -0400
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <20150612181153.GB19199@muck>
References: <20150612181153.GB19199@muck>
Message-ID: <23144512.HX7dfatEFr@crushinator>

Why should miners only be able to vote for "double the limit" or "halve" the limit? If you're going to use bits, I think you need to use two bits:

	0 0 = no preference ("wildcard" vote)
	0 1 = vote for the limit to remain the same
	1 0 = vote for the limit to be halved
	1 1 = vote for the limit to be doubled

User transactions would follow the same usage. In particular, a user vote of "0 0" (no preference) could be included in a block casting any vote, but a block voting "0 0" (no preference) could only contain transactions voting "0 0" as well.

Incidentally, I love this idea, as it addresses a concern I immediately had with Jeff's proposal, which is that it hands control exclusively to the miners. And your proposal here fixes that shortcoming in a economically powerful way: miners lose out on fees if they don't represent the wishes of the users.


On Friday, 12 June 2015, at 2:11 pm, Peter Todd wrote:
> Jeff Garzik recently proposed that the upper blocksize limit be removed
> entirely, with a "soft" limit being enforced via miner vote, recorded by
> hashing power.
> 
> This mechanism within the protocol for users to have any influence over
> the miner vote. We can add that back by providing a way for transactions
> themselves to set a flag determining whether or not they can be included
> in a block casting a specific vote.
> 
> We can simplify Garzik's vote to say that one of the nVersion bits
> either votes for the blocksize to be increased, or decreased, by some
> fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a
> nVersion bit in transactions themselves, also voting for an increase or
> decrease. Transactions may only be included in blocks with an
> indentical vote, thus providing miners with a monetary incentive via
> fees to vote according to user wishes.
> 
> Of course, to cast a "don't care" vote we can either define an
> additional bit, or sign the transaction with both versions. Equally we
> can even have different versions with different fees, broadcast via a
> mechanism such as replace-by-fee.
> 
> 
> See also John Dillon's proposal for proof-of-stake blocksize voting:
> 
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg02323.html
> 
> -- 
> 'peter'[:-1]@petertodd.org
> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778



From mike at plan99.net  Fri Jun 12 18:24:50 2015
From: mike at plan99.net (Mike Hearn)
Date: Fri, 12 Jun 2015 20:24:50 +0200
Subject: [Bitcoin-development] Mining centralization pressure from
 non-uniform propagation speed
In-Reply-To: <CAPg+sBi5fYHGLv4wtWbWE7jov8CX=q9UX=vhxDVepG6JfX30+g@mail.gmail.com>
References: <CAPg+sBi5fYHGLv4wtWbWE7jov8CX=q9UX=vhxDVepG6JfX30+g@mail.gmail.com>
Message-ID: <CANEZrP3=uM-d7zKcCW=YJnrgNBk3dCvSk8OhdUzR1g3m_ktBpw@mail.gmail.com>

>
> are only connected to each other through a slow 2 Mbit/s link.
>

That's very slow indeed. For comparison, plain old 3G connections routinely
cruise around 7-8 Mbit/sec.

So this simulation is assuming a speed dramatically worse than a mobile
phone can get!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/8cf55d02/attachment.html>

From pieter.wuille at gmail.com  Fri Jun 12 18:26:23 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Fri, 12 Jun 2015 20:26:23 +0200
Subject: [Bitcoin-development] Mining centralization pressure from
 non-uniform propagation speed
In-Reply-To: <CANEZrP3=uM-d7zKcCW=YJnrgNBk3dCvSk8OhdUzR1g3m_ktBpw@mail.gmail.com>
References: <CAPg+sBi5fYHGLv4wtWbWE7jov8CX=q9UX=vhxDVepG6JfX30+g@mail.gmail.com>
	<CANEZrP3=uM-d7zKcCW=YJnrgNBk3dCvSk8OhdUzR1g3m_ktBpw@mail.gmail.com>
Message-ID: <CAPg+sBgJAKA6s14SEoNSKOY=9-dTBBhNMzS03p0xTC4h9mmBvw@mail.gmail.com>

I'm merely proving the existence of the effect.
On Jun 12, 2015 8:24 PM, "Mike Hearn" <mike at plan99.net> wrote:

> are only connected to each other through a slow 2 Mbit/s link.
>>
>
> That's very slow indeed. For comparison, plain old 3G connections
> routinely cruise around 7-8 Mbit/sec.
>
> So this simulation is assuming a speed dramatically worse than a mobile
> phone can get!
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/1a3a0e82/attachment.html>

From bip at mattwhitlock.name  Fri Jun 12 18:26:20 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Fri, 12 Jun 2015 14:26:20 -0400
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <CAOG=w-up7-wp2NnK52jeCLvcSWvbC-iT-YRDoA=10QhU=K14-g@mail.gmail.com>
References: <20150612181153.GB19199@muck>
	<CAOG=w-up7-wp2NnK52jeCLvcSWvbC-iT-YRDoA=10QhU=K14-g@mail.gmail.com>
Message-ID: <1466351.XXvDcu7nzO@crushinator>

On Friday, 12 June 2015, at 11:20 am, Mark Friedenbach wrote:
> Peter it's not clear to me that your described protocol is free of miner
> influence over the vote, by artificially generating transactions which they
> claim in their own blocks

Miners could fill their blocks with garbage transactions that agree with their vote, but this wouldn't bring them any real income, as they'd be paying their own money as fees to themselves. To get real income, miners would have to vote in accordance with real users.



From mike at plan99.net  Fri Jun 12 18:27:49 2015
From: mike at plan99.net (Mike Hearn)
Date: Fri, 12 Jun 2015 20:27:49 +0200
Subject: [Bitcoin-development] Mining centralization pressure from
 non-uniform propagation speed
In-Reply-To: <CAPg+sBgJAKA6s14SEoNSKOY=9-dTBBhNMzS03p0xTC4h9mmBvw@mail.gmail.com>
References: <CAPg+sBi5fYHGLv4wtWbWE7jov8CX=q9UX=vhxDVepG6JfX30+g@mail.gmail.com>
	<CANEZrP3=uM-d7zKcCW=YJnrgNBk3dCvSk8OhdUzR1g3m_ktBpw@mail.gmail.com>
	<CAPg+sBgJAKA6s14SEoNSKOY=9-dTBBhNMzS03p0xTC4h9mmBvw@mail.gmail.com>
Message-ID: <CANEZrP3mwFyk8rscidPQMiA378UsuPrLX4P4ECofSC5MoNhx3g@mail.gmail.com>

Sure, and you did indeed say that.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/036c4473/attachment.html>

From pete at petertodd.org  Fri Jun 12 18:30:54 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 12 Jun 2015 19:30:54 +0100
Subject: [Bitcoin-development] Mining centralization pressure from
 non-uniform propagation speed
In-Reply-To: <CABsx9T1=+S+dAdwASECUCkrVaMFT0TcmL7MiwnCuCx0MkF6sWw@mail.gmail.com>
References: <CAPg+sBi5fYHGLv4wtWbWE7jov8CX=q9UX=vhxDVepG6JfX30+g@mail.gmail.com>
	<CABsx9T1=+S+dAdwASECUCkrVaMFT0TcmL7MiwnCuCx0MkF6sWw@mail.gmail.com>
Message-ID: <20150612183054.GD19199@muck>

On Fri, Jun 12, 2015 at 01:21:46PM -0400, Gavin Andresen wrote:
> Nice work, Pieter. You're right that my simulation assumed bandwidth for
> 'block' messages isn't the bottleneck.
> 
> But doesn't Matt's fast relay network (and the work I believe we're both
> planning on doing in the near future to further optimize block propagation)
> make both of our simulations irrelevant in the long-run?

Then simulate first the relay network assuming 100% of txs use it, and
secondly, assuming 100%-x use it.

For instance, is it in miners' advantage in some cases to sabotage the
relay network? The analyse say yes, so lets simulate that. Equally even
the relay network isn't instant.

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/5f41f6f4/attachment.sig>

From pete at petertodd.org  Fri Jun 12 18:34:21 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 12 Jun 2015 19:34:21 +0100
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <23144512.HX7dfatEFr@crushinator>
References: <20150612181153.GB19199@muck>
 <23144512.HX7dfatEFr@crushinator>
Message-ID: <20150612183421.GE19199@muck>

On Fri, Jun 12, 2015 at 02:22:36PM -0400, Matt Whitlock wrote:
> Why should miners only be able to vote for "double the limit" or "halve" the limit? If you're going to use bits, I think you need to use two bits:
> 
> 	0 0 = no preference ("wildcard" vote)
> 	0 1 = vote for the limit to remain the same
> 	1 0 = vote for the limit to be halved
> 	1 1 = vote for the limit to be doubled
> 
> User transactions would follow the same usage. In particular, a user vote of "0 0" (no preference) could be included in a block casting any vote, but a block voting "0 0" (no preference) could only contain transactions voting "0 0" as well.

Sounds like a good encoding to me. Taking the median of the three
options, and throwing away "don't care" votes entirely, makes sense.

> Incidentally, I love this idea, as it addresses a concern I immediately had with Jeff's proposal, which is that it hands control exclusively to the miners. And your proposal here fixes that shortcoming in a economically powerful way: miners lose out on fees if they don't represent the wishes of the users.

Thanks! I personally expect disaster to ensue with this kind of
proposal, but I'm less concerned if the disaster is something users
explicitly allowed to happen in a consensual way.

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/935b2101/attachment.sig>

From bip at mattwhitlock.name  Fri Jun 12 18:36:31 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Fri, 12 Jun 2015 14:36:31 -0400
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <20150612183421.GE19199@muck>
References: <20150612181153.GB19199@muck> <23144512.HX7dfatEFr@crushinator>
	<20150612183421.GE19199@muck>
Message-ID: <3287607.HcH18TyfSu@crushinator>

On Friday, 12 June 2015, at 7:34 pm, Peter Todd wrote:
> On Fri, Jun 12, 2015 at 02:22:36PM -0400, Matt Whitlock wrote:
> > Why should miners only be able to vote for "double the limit" or "halve" the limit? If you're going to use bits, I think you need to use two bits:
> > 
> > 	0 0 = no preference ("wildcard" vote)
> > 	0 1 = vote for the limit to remain the same
> > 	1 0 = vote for the limit to be halved
> > 	1 1 = vote for the limit to be doubled
> > 
> > User transactions would follow the same usage. In particular, a user vote of "0 0" (no preference) could be included in a block casting any vote, but a block voting "0 0" (no preference) could only contain transactions voting "0 0" as well.
> 
> Sounds like a good encoding to me. Taking the median of the three
> options, and throwing away "don't care" votes entirely, makes sense.

I hope you mean the *plurality* of the three options after throwing away the "don't cares," not the *median*.



From pete at petertodd.org  Fri Jun 12 18:36:45 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 12 Jun 2015 19:36:45 +0100
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <1466351.XXvDcu7nzO@crushinator>
References: <20150612181153.GB19199@muck>
	<CAOG=w-up7-wp2NnK52jeCLvcSWvbC-iT-YRDoA=10QhU=K14-g@mail.gmail.com>
	<1466351.XXvDcu7nzO@crushinator>
Message-ID: <20150612183645.GF19199@muck>

On Fri, Jun 12, 2015 at 02:26:20PM -0400, Matt Whitlock wrote:
> On Friday, 12 June 2015, at 11:20 am, Mark Friedenbach wrote:
> > Peter it's not clear to me that your described protocol is free of miner
> > influence over the vote, by artificially generating transactions which they
> > claim in their own blocks
> 
> Miners could fill their blocks with garbage transactions that agree with their vote, but this wouldn't bring them any real income, as they'd be paying their own money as fees to themselves. To get real income, miners would have to vote in accordance with real users.

Exactly. I very explicitly am proposing that we consider giving users a
mechanism to pay for votes to give them a way to directly influence the
outcome.

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/4c8599eb/attachment.sig>

From benjamin.l.cordes at gmail.com  Fri Jun 12 18:39:21 2015
From: benjamin.l.cordes at gmail.com (Benjamin)
Date: Fri, 12 Jun 2015 20:39:21 +0200
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <3287607.HcH18TyfSu@crushinator>
References: <20150612181153.GB19199@muck> <23144512.HX7dfatEFr@crushinator>
	<20150612183421.GE19199@muck> <3287607.HcH18TyfSu@crushinator>
Message-ID: <CAOoPuRaRMbY++Ys-D-k+Kb_oGLj9H8hKOty94Z2scU5u=jZsoQ@mail.gmail.com>

This is a misguided idea, to say the least. If such a mechanism of of
user input would be possible, one would use it for transaction
verification in the first place. In proof-of-stake outcomes are
determined by vote by stake (that vote has very different
characteristics than vote by compute power). There is no such thing as
making it possible to determine what "users want". That's what the
proof-of-work mechanism does in the first place, only that it is now
unfortunately skewed/corrupted/(whatever you want to call it). Before
centralization the concept of "miners" didn't exist in Bitcoin and
miners were roughly identical to users. Peer-to-Peer implies only one
class of users.

A big problem with such a vote (in PoW and PoS): miners get paid for
their work and have incentives to raise fees. Those who pay fees would
have no say in whether those fees are fair or not. Transaction
verification has to be roughly profitable, but there is no fixed
formula for determining profitability.

On Fri, Jun 12, 2015 at 8:26 PM, Matt Whitlock <bip at mattwhitlock.name> wrote:
> On Friday, 12 June 2015, at 11:20 am, Mark Friedenbach wrote:
>> Peter it's not clear to me that your described protocol is free of miner
>> influence over the vote, by artificially generating transactions which they
>> claim in their own blocks
>
> Miners could fill their blocks with garbage transactions that agree with their vote, but this wouldn't bring them any real income, as they'd be paying their own money as fees to themselves. To get real income, miners would have to vote in accordance with real users.
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

On Fri, Jun 12, 2015 at 8:34 PM, Peter Todd <pete at petertodd.org> wrote:
> On Fri, Jun 12, 2015 at 02:22:36PM -0400, Matt Whitlock wrote:
>> Why should miners only be able to vote for "double the limit" or "halve" the limit? If you're going to use bits, I think you need to use two bits:
>>
>>       0 0 = no preference ("wildcard" vote)
>>       0 1 = vote for the limit to remain the same
>>       1 0 = vote for the limit to be halved
>>       1 1 = vote for the limit to be doubled
>>
>> User transactions would follow the same usage. In particular, a user vote of "0 0" (no preference) could be included in a block casting any vote, but a block voting "0 0" (no preference) could only contain transactions voting "0 0" as well.
>
> Sounds like a good encoding to me. Taking the median of the three
> options, and throwing away "don't care" votes entirely, makes sense.
>
>> Incidentally, I love this idea, as it addresses a concern I immediately had with Jeff's proposal, which is that it hands control exclusively to the miners. And your proposal here fixes that shortcoming in a economically powerful way: miners lose out on fees if they don't represent the wishes of the users.
>
> Thanks! I personally expect disaster to ensue with this kind of
> proposal, but I'm less concerned if the disaster is something users
> explicitly allowed to happen in a consensual way.
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>

On Fri, Jun 12, 2015 at 8:36 PM, Peter Todd <pete at petertodd.org> wrote:
> On Fri, Jun 12, 2015 at 02:26:20PM -0400, Matt Whitlock wrote:
>> On Friday, 12 June 2015, at 11:20 am, Mark Friedenbach wrote:
>> > Peter it's not clear to me that your described protocol is free of miner
>> > influence over the vote, by artificially generating transactions which they
>> > claim in their own blocks
>>
>> Miners could fill their blocks with garbage transactions that agree with their vote, but this wouldn't bring them any real income, as they'd be paying their own money as fees to themselves. To get real income, miners would have to vote in accordance with real users.
>
> Exactly. I very explicitly am proposing that we consider giving users a
> mechanism to pay for votes to give them a way to directly influence the
> outcome.
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>

On Fri, Jun 12, 2015 at 8:36 PM, Matt Whitlock <bip at mattwhitlock.name> wrote:
> On Friday, 12 June 2015, at 7:34 pm, Peter Todd wrote:
>> On Fri, Jun 12, 2015 at 02:22:36PM -0400, Matt Whitlock wrote:
>> > Why should miners only be able to vote for "double the limit" or "halve" the limit? If you're going to use bits, I think you need to use two bits:
>> >
>> >     0 0 = no preference ("wildcard" vote)
>> >     0 1 = vote for the limit to remain the same
>> >     1 0 = vote for the limit to be halved
>> >     1 1 = vote for the limit to be doubled
>> >
>> > User transactions would follow the same usage. In particular, a user vote of "0 0" (no preference) could be included in a block casting any vote, but a block voting "0 0" (no preference) could only contain transactions voting "0 0" as well.
>>
>> Sounds like a good encoding to me. Taking the median of the three
>> options, and throwing away "don't care" votes entirely, makes sense.
>
> I hope you mean the *plurality* of the three options after throwing away the "don't cares," not the *median*.
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From pieter.wuille at gmail.com  Fri Jun 12 18:39:46 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Fri, 12 Jun 2015 20:39:46 +0200
Subject: [Bitcoin-development] Mining centralization pressure from
 non-uniform propagation speed
In-Reply-To: <20150612183054.GD19199@muck>
References: <CAPg+sBi5fYHGLv4wtWbWE7jov8CX=q9UX=vhxDVepG6JfX30+g@mail.gmail.com>
	<CABsx9T1=+S+dAdwASECUCkrVaMFT0TcmL7MiwnCuCx0MkF6sWw@mail.gmail.com>
	<20150612183054.GD19199@muck>
Message-ID: <CAPg+sBjD1y6jTzdWqGLhBxve8HfKy0mxg0tYBTWjBH1PAukmow@mail.gmail.com>

If there is a benefit in producing larger more-fee blocks if they propagate
slowly, then there is also a benefit in including high-fee transactions
that are unlikely to propagate quickly through optimized relay protocols
(for example: very recent transactions, or out-of-band receoved ones). This
effect is likely an order of magnitude less important still, but the effect
is likely the same.
On Jun 12, 2015 8:31 PM, "Peter Todd" <pete at petertodd.org> wrote:

> On Fri, Jun 12, 2015 at 01:21:46PM -0400, Gavin Andresen wrote:
> > Nice work, Pieter. You're right that my simulation assumed bandwidth for
> > 'block' messages isn't the bottleneck.
> >
> > But doesn't Matt's fast relay network (and the work I believe we're both
> > planning on doing in the near future to further optimize block
> propagation)
> > make both of our simulations irrelevant in the long-run?
>
> Then simulate first the relay network assuming 100% of txs use it, and
> secondly, assuming 100%-x use it.
>
> For instance, is it in miners' advantage in some cases to sabotage the
> relay network? The analyse say yes, so lets simulate that. Equally even
> the relay network isn't instant.
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/ba1f8c93/attachment.html>

From pete at petertodd.org  Fri Jun 12 18:44:51 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 12 Jun 2015 19:44:51 +0100
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <3287607.HcH18TyfSu@crushinator>
References: <20150612181153.GB19199@muck> <23144512.HX7dfatEFr@crushinator>
	<20150612183421.GE19199@muck> <3287607.HcH18TyfSu@crushinator>
Message-ID: <20150612184450.GG19199@muck>

On Fri, Jun 12, 2015 at 02:36:31PM -0400, Matt Whitlock wrote:
> On Friday, 12 June 2015, at 7:34 pm, Peter Todd wrote:
> > On Fri, Jun 12, 2015 at 02:22:36PM -0400, Matt Whitlock wrote:
> > > Why should miners only be able to vote for "double the limit" or "halve" the limit? If you're going to use bits, I think you need to use two bits:
> > > 
> > > 	0 0 = no preference ("wildcard" vote)
> > > 	0 1 = vote for the limit to remain the same
> > > 	1 0 = vote for the limit to be halved
> > > 	1 1 = vote for the limit to be doubled
> > > 
> > > User transactions would follow the same usage. In particular, a user vote of "0 0" (no preference) could be included in a block casting any vote, but a block voting "0 0" (no preference) could only contain transactions voting "0 0" as well.
> > 
> > Sounds like a good encoding to me. Taking the median of the three
> > options, and throwing away "don't care" votes entirely, makes sense.
> 
> I hope you mean the *plurality* of the three options after throwing away the "don't cares," not the *median*.

Median ensures that voting "no change" is meaningful. If "double" + "no
change" = 66%-1, you'd expect the result to be "no change", not "halve""
With a plurality vote you'd end up with a halving that was supported by
a minority.

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/ba7a2a93/attachment.sig>

From pete at petertodd.org  Fri Jun 12 18:47:34 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 12 Jun 2015 19:47:34 +0100
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <CAOoPuRaRMbY++Ys-D-k+Kb_oGLj9H8hKOty94Z2scU5u=jZsoQ@mail.gmail.com>
References: <20150612181153.GB19199@muck> <23144512.HX7dfatEFr@crushinator>
	<20150612183421.GE19199@muck> <3287607.HcH18TyfSu@crushinator>
	<CAOoPuRaRMbY++Ys-D-k+Kb_oGLj9H8hKOty94Z2scU5u=jZsoQ@mail.gmail.com>
Message-ID: <20150612184734.GH19199@muck>

On Fri, Jun 12, 2015 at 08:39:21PM +0200, Benjamin wrote:
> This is a misguided idea, to say the least. If such a mechanism of of
> user input would be possible, one would use it for transaction
> verification in the first place. In proof-of-stake outcomes are
> determined by vote by stake (that vote has very different
> characteristics than vote by compute power). There is no such thing as
> making it possible to determine what "users want". That's what the
> proof-of-work mechanism does in the first place, only that it is now
> unfortunately skewed/corrupted/(whatever you want to call it). Before
> centralization the concept of "miners" didn't exist in Bitcoin and
> miners were roughly identical to users. Peer-to-Peer implies only one
> class of users.
> 
> A big problem with such a vote (in PoW and PoS): miners get paid for
> their work and have incentives to raise fees. Those who pay fees would
> have no say in whether those fees are fair or not. Transaction
> verification has to be roughly profitable, but there is no fixed
> formula for determining profitability.

Read John Dillon's proposal then, which via proof-of-stake explicitly
approportions control of increases via % of Bitcoin owned.


Anyway, representing everyone is never going to be easy, but at least
this nVersion thing is very easy to implement.

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/9fb17544/attachment.sig>

From james at microtrx.com  Fri Jun 12 18:22:19 2015
From: james at microtrx.com (James Poole)
Date: Fri, 12 Jun 2015 14:22:19 -0400
Subject: [Bitcoin-development] Bip 32 Question
Message-ID: <CAN4RR9gRQCEkns21OTCpWmGOftFXbR-cLWuJX805iPjGATmLyQ@mail.gmail.com>

Looking at the BIP32 definition, I hit a line that I would appreciate
clarification on.

https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki

Under the section "Private parent key ? private child key" there is a step:

"The returned child key ki is parse256(IL) + kpar (mod n)."

Can someone help me understand what "n" is in the context of this
algorithm?  I very well could be looking right at it, but wanted to double
check if I am missing something.

Thanks,
James
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/3a56ecd5/attachment.html>

From bip at mattwhitlock.name  Fri Jun 12 18:52:31 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Fri, 12 Jun 2015 14:52:31 -0400
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <20150612184450.GG19199@muck>
References: <20150612181153.GB19199@muck> <3287607.HcH18TyfSu@crushinator>
	<20150612184450.GG19199@muck>
Message-ID: <3371959.rhW3Li6WRR@crushinator>

On Friday, 12 June 2015, at 7:44 pm, Peter Todd wrote:
> On Fri, Jun 12, 2015 at 02:36:31PM -0400, Matt Whitlock wrote:
> > On Friday, 12 June 2015, at 7:34 pm, Peter Todd wrote:
> > > On Fri, Jun 12, 2015 at 02:22:36PM -0400, Matt Whitlock wrote:
> > > > Why should miners only be able to vote for "double the limit" or "halve" the limit? If you're going to use bits, I think you need to use two bits:
> > > > 
> > > > 	0 0 = no preference ("wildcard" vote)
> > > > 	0 1 = vote for the limit to remain the same
> > > > 	1 0 = vote for the limit to be halved
> > > > 	1 1 = vote for the limit to be doubled
> > > > 
> > > > User transactions would follow the same usage. In particular, a user vote of "0 0" (no preference) could be included in a block casting any vote, but a block voting "0 0" (no preference) could only contain transactions voting "0 0" as well.
> > > 
> > > Sounds like a good encoding to me. Taking the median of the three
> > > options, and throwing away "don't care" votes entirely, makes sense.
> > 
> > I hope you mean the *plurality* of the three options after throwing away the "don't cares," not the *median*.
> 
> Median ensures that voting "no change" is meaningful. If "double" + "no
> change" = 66%-1, you'd expect the result to be "no change", not "halve""
> With a plurality vote you'd end up with a halving that was supported by
> a minority.

I'm very confused.

Let's say, out of the 12,000 blocks in a voting period:
? 1000 blocks express no preference,
? 2000 blocks vote to halve the limit,
? 3500 blocks vote to double the limit, and
? 5500 blocks vote to keep the limit the same.

 The plurality vote is to keep the limit the same. The median vote is? well, I'm not sure, since there are four choices, and an average of the two "middle" choices doesn't seem to make sense.



From bip at mattwhitlock.name  Fri Jun 12 18:54:25 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Fri, 12 Jun 2015 14:54:25 -0400
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <20150612184450.GG19199@muck>
References: <20150612181153.GB19199@muck> <3287607.HcH18TyfSu@crushinator>
	<20150612184450.GG19199@muck>
Message-ID: <1900349.Piv8ps0gCz@crushinator>

On Friday, 12 June 2015, at 7:44 pm, Peter Todd wrote:
> On Fri, Jun 12, 2015 at 02:36:31PM -0400, Matt Whitlock wrote:
> > On Friday, 12 June 2015, at 7:34 pm, Peter Todd wrote:
> > > On Fri, Jun 12, 2015 at 02:22:36PM -0400, Matt Whitlock wrote:
> > > > Why should miners only be able to vote for "double the limit" or "halve" the limit? If you're going to use bits, I think you need to use two bits:
> > > > 
> > > > 	0 0 = no preference ("wildcard" vote)
> > > > 	0 1 = vote for the limit to remain the same
> > > > 	1 0 = vote for the limit to be halved
> > > > 	1 1 = vote for the limit to be doubled
> > > > 
> > > > User transactions would follow the same usage. In particular, a user vote of "0 0" (no preference) could be included in a block casting any vote, but a block voting "0 0" (no preference) could only contain transactions voting "0 0" as well.
> > > 
> > > Sounds like a good encoding to me. Taking the median of the three
> > > options, and throwing away "don't care" votes entirely, makes sense.
> > 
> > I hope you mean the *plurality* of the three options after throwing away the "don't cares," not the *median*.
> 
> Median ensures that voting "no change" is meaningful. If "double" + "no
> change" = 66%-1, you'd expect the result to be "no change", not "halve""
> With a plurality vote you'd end up with a halving that was supported by
> a minority.

Never mind. I think I've figured out what you're getting at, and you're right. We wouldn't want "halve" to win on a plurality just because the remaining majority of the vote was split between double and remain-the-same. Good catch. :)



From jag426 at cornell.edu  Fri Jun 12 18:56:34 2015
From: jag426 at cornell.edu (Aaron Gustafson)
Date: Fri, 12 Jun 2015 11:56:34 -0700
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <1900349.Piv8ps0gCz@crushinator>
References: <20150612181153.GB19199@muck> <3287607.HcH18TyfSu@crushinator>
	<20150612184450.GG19199@muck> <1900349.Piv8ps0gCz@crushinator>
Message-ID: <CAAocdpzYbCf6Tmhi6FvThPpEX4Hj4X+BPcPrNtpCK95yJmxM4g@mail.gmail.com>

For the purposes of finding the median, halve < same < double. It will only
change if a majority of non-apathetic votes are for halve or a majority of
non-apathetic votes are for double.

On Fri, Jun 12, 2015 at 11:54 AM, Matt Whitlock <bip at mattwhitlock.name>
wrote:

> On Friday, 12 June 2015, at 7:44 pm, Peter Todd wrote:
> > On Fri, Jun 12, 2015 at 02:36:31PM -0400, Matt Whitlock wrote:
> > > On Friday, 12 June 2015, at 7:34 pm, Peter Todd wrote:
> > > > On Fri, Jun 12, 2015 at 02:22:36PM -0400, Matt Whitlock wrote:
> > > > > Why should miners only be able to vote for "double the limit" or
> "halve" the limit? If you're going to use bits, I think you need to use two
> bits:
> > > > >
> > > > >         0 0 = no preference ("wildcard" vote)
> > > > >         0 1 = vote for the limit to remain the same
> > > > >         1 0 = vote for the limit to be halved
> > > > >         1 1 = vote for the limit to be doubled
> > > > >
> > > > > User transactions would follow the same usage. In particular, a
> user vote of "0 0" (no preference) could be included in a block casting any
> vote, but a block voting "0 0" (no preference) could only contain
> transactions voting "0 0" as well.
> > > >
> > > > Sounds like a good encoding to me. Taking the median of the three
> > > > options, and throwing away "don't care" votes entirely, makes sense.
> > >
> > > I hope you mean the *plurality* of the three options after throwing
> away the "don't cares," not the *median*.
> >
> > Median ensures that voting "no change" is meaningful. If "double" + "no
> > change" = 66%-1, you'd expect the result to be "no change", not "halve""
> > With a plurality vote you'd end up with a halving that was supported by
> > a minority.
>
> Never mind. I think I've figured out what you're getting at, and you're
> right. We wouldn't want "halve" to win on a plurality just because the
> remaining majority of the vote was split between double and
> remain-the-same. Good catch. :)
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



-- 
J. Aaron Gustafson
Cornell University '16 | Computer Science, Engineering | Mathematics, Arts
& Sciences
Vice President, Kappa Delta Rho
jag426 at cornell.edu | Ithaca, New York
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/5da1e54c/attachment.html>

From kanzure at gmail.com  Fri Jun 12 19:13:35 2015
From: kanzure at gmail.com (Bryan Bishop)
Date: Fri, 12 Jun 2015 14:13:35 -0500
Subject: [Bitcoin-development] Various block size proposals
Message-ID: <CABaSBaz8-eHzrkt4oGCrXmDamEhZmNp2GUX8oZ+8Xt1VZWMDxg@mail.gmail.com>

Here are some proposals regarding the minimum block size questions, as well
as other related scalability issues.

Dynamic block size limit controller (maaku)
https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07599.html
https://www.reddit.com/r/Bitcoin/comments/35c47x/a_proposal_to_expand_the_block_size/

Re: dynamic block size limit controller (gmaxwell)
https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07620.html

Various other gmaxwell-relayed ideas
http://www.reddit.com/r/Bitcoin/comments/37pv74/gavin_andresen_moves_ahead_with_push_for_bigger/crp2735

Increasing the max block size using a soft-fork (Tier Nolan)
https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07927.html

Elastic block cap with rollover penalties (Meni Rosenfield)
https://bitcointalk.org/index.php?topic=1078521
worked example
https://bitcointalk.org/index.php?topic=1078521.msg11557115#msg11557115
section 6.2.3 of https://cryptonote.org/whitepaper.pdf
rollover transaction fees https://bitcointalk.org/index.php?topic=80387.0

Variable mining effort (gmaxwell)
http://sourceforge.net/p/bitcoin/mailman/message/34100485/

BIP100 Soft-fork limit of 2 MB (jgarzik)
http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf

Transaction fee targeting
https://bitcointalk.org/index.php?topic=176684.msg9416723#msg9416723

Difficulty target scaling
https://www.reddit.com/r/Bitcoin/comments/38937n/idea_make_the_difficulty_target_scale_with_block/

Annual 50% max block size increase
https://www.reddit.com/r/Bitcoin/comments/351dft/what_about_gavins_2014_proposal_of_having_block/

Various algorithmic adjustment proposals
https://bitcointalk.org/index.php?topic=1865.0
https://www.reddit.com/r/Bitcoin/comments/1owbpn/is_there_a_consensus_on_the_blocksize_limit_issue/ccwd7xh
https://www.reddit.com/r/Bitcoin/comments/35azxk/screw_the_hard_limit_lets_change_the_block_size/
https://www.reddit.com/r/Bitcoin/comments/359y0i/quick_question_about_the_block_size_limit_issue/
http://www.reddit.com/r/Bitcoin/comments/385xqj/what_if_block_size_limits_were_set_to_increase/
http://www.age-of-bitcoin.com/dynamic-block-size-cap-scaling/
(against)
http://garzikrants.blogspot.com/2013/02/bitcoin-block-size-thoughts.html

Average over last 144 blocks
http://www.reddit.com/r/Bitcoin/comments/38fmra/max_block_size_2_average_size_of_last_144_blocks/

Extension blocks (Adam Back) (why would he burn this idea for something so
trivial?)
https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07937.html
https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg08005.html
http://www.reddit.com/r/Bitcoin/comments/39kqzs/how_about_a_softfork_optin_blocksize_increase/
http://www.reddit.com/r/Bitcoin/comments/39hgzc/blockstream_cofounder_president_adam_back_phd_on/cs3tgss

Voting by paying to an address (note: vote censorship makes this
impractical, among other reasons)
http://www.reddit.com/r/Bitcoin/comments/3863vw/a_brandnew_idea_for_resolving_the_blocksize_debate/
http://www.reddit.com/r/Bitcoin/comments/1g0ywj/proposal_we_should_vote_on_the_blocksize_limit/
https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg02325.html

Vote by paying fees
https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg08164.html
https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg02323.html

Double the max block size at each block reward halving
https://www.reddit.com/r/Bitcoin/comments/359jdc/just_double_the_max_blocksize_on_every_block/

Reducing the block rate instead of increasing the maximum block size
(Sergio Lerner)
https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07663.html
https://www.reddit.com/r/Bitcoin/comments/35kpgk/sergio_lerner_on_bitcoindevelopment_reducing_the/

Decrease block interval
https://www.reddit.com/r/Bitcoin/comments/2vefmp/please_eli5_besides_increasing_the_block_size_why/
https://www.reddit.com/r/Bitcoin/comments/35hpkt/please_remind_me_once_again_why_we_cant_decrease/

Increase default soft block size limit in Bitcoin Core
http://www.reddit.com/r/Bitcoin/comments/38i6qr/why_not_increase_the_default_block_size_limit/
https://github.com/bitcoin/bitcoin/pull/6231

Consider the size of the utxo set when determining max block size (note
that utxo depth cannot have consensus)
https://bitcointalk.org/index.php?topic=153401.20

Reduce and decrease the max block size
https://www.reddit.com/r/Bitcoin/comments/381ygv/who_is_in_favour_of_reducing_the_blocksize_limit/
https://www.reddit.com/r/Bitcoin/comments/2vedt4/better_we_make_block_size_50kb_and_test/

Change the value of MAX_BLOCK_SIZE in Bitcoin Core
https://bitcointalk.org/index.php?topic=140233.0

Problems with floating block size limits (petertodd)
https://bitcointalk.org/index.php?topic=144895.0

Develop other ways to support high transaction volumes (gavinandresen)
https://bitcointalk.org/index.php?topic=96097.msg1059475#msg1059475

Simplified payment verification
https://bitcoin.org/bitcoin.pdf

Lightning network
https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf

GHOST
https://eprint.iacr.org/2013/881.pdf

Payment channels
https://bitcoinj.github.io/working-with-micropayments

Tree chains
http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg04388.html
https://github.com/petertodd/tree-chains-paper

fedpeg + SPV
https://github.com/ElementsProject/elements/blob/7848ae0eed5506fb32872b6d74a12fd781aa3024/contrib/fedpeg/rotating_consensus.py

Known missing:
- old bitcoin-development proposals
- old bitcointalk proposals
- anything unique from IRC

On a related note, the other day I found that reading all of the -wizards
logs regarding sidechains only takes 2 hours. So... that's something. YMMV.

- Bryan
http://heybryan.org/
1 512 203 0507
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/5ae9d4e9/attachment.html>

From j.faber at elevate.nl  Fri Jun 12 18:56:57 2015
From: j.faber at elevate.nl (Jannes Faber)
Date: Fri, 12 Jun 2015 18:56:57 +0000
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <1466351.XXvDcu7nzO@crushinator>
References: <20150612181153.GB19199@muck>
	<CAOG=w-up7-wp2NnK52jeCLvcSWvbC-iT-YRDoA=10QhU=K14-g@mail.gmail.com>
	<1466351.XXvDcu7nzO@crushinator>
Message-ID: <CABeL=0g5Lq0zpwW2sHTbO+TTj84aJaDH=1wzeQdFVyhHf-QiSg@mail.gmail.com>

I'm imagining in Peter's proposal it's not the transaction votes that are
counted but only the votes in the blocks? So miners get to vote but they
risk losing money by having to exclude counter voting transactions. But
garbage transactions are no problem at all.

Note that users that want to cast a vote "pay" for that by increased
confirmation time (on average, hopefully slightly depending on the trend).

On Fri, Jun 12, 2015, 20:27 Matt Whitlock <bip at mattwhitlock.name> wrote:

> On Friday, 12 June 2015, at 11:20 am, Mark Friedenbach wrote:
> > Peter it's not clear to me that your described protocol is free of miner
> > influence over the vote, by artificially generating transactions which
> they
> > claim in their own blocks
>
> Miners could fill their blocks with garbage transactions that agree with
> their vote, but this wouldn't bring them any real income, as they'd be
> paying their own money as fees to themselves. To get real income, miners
> would have to vote in accordance with real users.
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/57d6fac0/attachment.html>

From swansontec at gmail.com  Fri Jun 12 19:42:46 2015
From: swansontec at gmail.com (William Swanson)
Date: Fri, 12 Jun 2015 12:42:46 -0700
Subject: [Bitcoin-development] Bip 32 Question
In-Reply-To: <CAN4RR9gRQCEkns21OTCpWmGOftFXbR-cLWuJX805iPjGATmLyQ@mail.gmail.com>
References: <CAN4RR9gRQCEkns21OTCpWmGOftFXbR-cLWuJX805iPjGATmLyQ@mail.gmail.com>
Message-ID: <CABjHNoR=jrXixMdsESugw=ZgAVc87gJck48ozLT7XcFr4+Zr_g@mail.gmail.com>

The `n` is the curve order, as shown here:

https://en.bitcoin.it/wiki/Secp256k1

This step is necessary to keep you on the curve. The
secp256k1_ec_privkey_tweak_add function from libsecp256k1 handles this
automatically, but if you use OpenSSL or some non-EC math library, you
probably have to do it yourself.

-William

On Fri, Jun 12, 2015 at 11:22 AM, James Poole <james at microtrx.com> wrote:
> Looking at the BIP32 definition, I hit a line that I would appreciate
> clarification on.
>
> https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki
>
> Under the section "Private parent key ? private child key" there is a step:
>
> "The returned child key ki is parse256(IL) + kpar (mod n)."
>
> Can someone help me understand what "n" is in the context of this algorithm?
> I very well could be looking right at it, but wanted to double check if I am
> missing something.
>
> Thanks,
> James



From elombrozo at gmail.com  Fri Jun 12 20:04:23 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Fri, 12 Jun 2015 13:04:23 -0700
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <CABr1YTfowMqgDZoWhDXiM0Bd3dwhVo6++FOvLntGc2HkApEbGw@mail.gmail.com>
References: <20150612181153.GB19199@muck>
	<CAOG=w-up7-wp2NnK52jeCLvcSWvbC-iT-YRDoA=10QhU=K14-g@mail.gmail.com>
	<1466351.XXvDcu7nzO@crushinator>
	<CABeL=0g5Lq0zpwW2sHTbO+TTj84aJaDH=1wzeQdFVyhHf-QiSg@mail.gmail.com>
	<CABr1YTfowMqgDZoWhDXiM0Bd3dwhVo6++FOvLntGc2HkApEbGw@mail.gmail.com>
Message-ID: <CABr1YTd0wcOC8+KSPCPHrx5Ob4nY3azed46gS+nR_NzmxDiTzw@mail.gmail.com>

Miners currently only collect an almost negligible portion of their revenue
from fees. While I certainly welcome any proposals that move us in the
direction of defining a smooth metaconsensus process, I think with the
curent economics, miners (and especially those with significant hashing
power) have more of an incentive to block txs/spam their votes than to
adapt to tx sender preferences...unless people increase their tx fees
significantly. But without wallets that can make decent suggestions in this
regard, this feature will be almost inaccessible to most regular users. And
the economics still aren't entirely clear.

- Eric Lombrozo
On Jun 12, 2015 12:30 PM, "Jannes Faber" <j.faber at elevate.nl> wrote:

I'm imagining in Peter's proposal it's not the transaction votes that are
counted but only the votes in the blocks? So miners get to vote but they
risk losing money by having to exclude counter voting transactions. But
garbage transactions are no problem at all.

Note that users that want to cast a vote "pay" for that by increased
confirmation time (on average, hopefully slightly depending on the trend).

On Fri, Jun 12, 2015, 20:27 Matt Whitlock <bip at mattwhitlock.name> wrote:

> On Friday, 12 June 2015, at 11:20 am, Mark Friedenbach wrote:
> > Peter it's not clear to me that your described protocol is free of miner
> > influence over the vote, by artificially generating transactions which
> they
> > claim in their own blocks
>
> Miners could fill their blocks with garbage transactions that agree with
> their vote, but this wouldn't bring them any real income, as they'd be
> paying their own money as fees to themselves. To get real income, miners
> would have to vote in accordance with real users.
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>

------------------------------------------------------------------------------

_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/5958de23/attachment.html>

From kristovatlas.lists at gmail.com  Fri Jun 12 21:36:56 2015
From: kristovatlas.lists at gmail.com (Kristov Atlas)
Date: Fri, 12 Jun 2015 17:36:56 -0400
Subject: [Bitcoin-development] Lexicographical Indexing of Transaction
 Inputs and Outputs
In-Reply-To: <20150609201436.GD28093@muck>
References: <CAGH37SK0k1YUvadetyHcBGjzW+OHNFRmRwqsUDeHBGejUacigQ@mail.gmail.com>
	<44BE16F9-AB24-4A8E-BC7F-03A6C590FCE7@gmail.com>
	<CAGH37SL3TA7BXd3Y+4F1Fd5N3ZW+LRLvkfppPsPn61ZVbZJOnQ@mail.gmail.com>
	<CAGH37SLCc-aEG0t0H7fsUZOv_h+Fiw4xoonmfwNaFWBin_7HcQ@mail.gmail.com>
	<20150607023523.GB1570@savin.petertodd.org>
	<CAGH37SLyG-g54-gGU5ZrmQsiogOqWNW1iiayHii1nWiWh+Nk=w@mail.gmail.com>
	<20150609201436.GD28093@muck>
Message-ID: <CAGH37SL06R+=pfqY1aHE1XpE7k6jtJSv+CsNiJ3hec6TZvsGAA@mail.gmail.com>

Since everyone's busy, I went ahead and made a pull request to add this as
an informational BIP 79 to the bips directory.

https://github.com/bitcoin/bips/pull/157

Regards,
Kristov

On Tue, Jun 9, 2015 at 4:14 PM, Peter Todd <pete at petertodd.org> wrote:

> On Mon, Jun 08, 2015 at 06:53:54PM -0400, Kristov Atlas wrote:
>
> Two other things:
>
>
>
> > On Sat, Jun 6, 2015 at 10:35 PM, Peter Todd <pete at petertodd.org> wrote:
> >
> > > Why mention SIGHASH_SINGLE at all? Its use-case is highly specialized
> > > protocols; you haven't taken into account the needs of those protocols.
> > > For BIP's it's better to stick to the use-cases where the need is clear
> > > and there exists running code that to speculate too much on future
> uses.
> > > With signature hashing in particular it's not yet clear at all what
> > > future OP_CHECKSIG's will look like, let alone the various ways people
> > > will use sighash for smart contract type stuff.
> > >
> > > You'd be better off presenting the BIP in terms of a generic statement
> > > that "except when otherwise prevented by advanced signature hashing
> > > requirements, wallet software must emit transactions sorted according
> to
> > > the following" You can then specify the two common cases in detail:
> > >
> > > 1) SIGHASH_ALL: input and output order signed, so sort appropriately
> > >
> > > 2) SIGHASH_ANYONECANPAY: input order not signed, so software should
> emit
> > >    transactions sorted, recognising that the actual mined order may be
> > >    changed.
> > >
> >
> > That makes sense. I updated the language as follows -- your thoughts?
> Keep
> > in mind this BIP is informational, and so people are free to ignore it.
> >
> > "Applicability: This BIP applies to all transactions of signature hash
> type
> > SIGHASH_ALL. Additionally,  software compliant with this BIP that allows
> > later parties to update the transaction (e.g. using signature hash types
> > SIGHASH_NONE or a variant of SIGHASH_ANYONECANPAY) should emit
> > lexicographically sorted inputs and outputs, although they may later be
> > modified. Transactions that have index dependencies between transactions
> or
> > within the same transaction are covered under the section of this BIP
> > entitled ?Handling Input/Output Dependencies.?"
>
> I'd keep it even simpler than that, and just say for now that such
> use-cases are out of the scope of this BIP, however those standards
> should come up with some kind of deterministic standard that meets the
> needs of the protocol. Again, there's a bunch of possible use-cases here
> and we just can't predict them; focus on the fact that the *spirit* of
> what this BIP is about is applicable and future standards should be
> developed.
>
> So I'd change the "Applicability" section to:
>
> This BIP applies to all transactions where the order of inputs and
> outputs does not matter. This is true for the vast majority of
> transactions as they simply move funds from one place to another.
>
> Currently this generally refers to transactions where SIGHASH_ALL is
> used, in which case the signatures commit to the exact order of input
> and outputs. In the case where SIGHASH_ANYONECANPAY and/or SIGHASH_NONE
> has been used (e.g. crowdfunds) the order of inputs and/or outputs may
> not be signed, however compliant software should still emit transactions
> with sorted inputs and outputs, even though they may later be modified
> by others.
>
> In the event that future protocol upgrades introduce new signature hash
> types, compliant software should apply the lexographic ordering
> principle analogously.
>
> While out of scope of this BIP, protocols that do require a specified
> order of inputs/outputs (e.g. due to use of SIGHASH_SINGLE) should
> consider the goals of this BIP and how best to adapt them to the
> specifics needs of those protocols.
>
>
> Then remove the "handling input/output deps" section.
>
> > > Do you have a patch implementing deterministic tx ordering for Bitcoin
> > > Core yet?
> > >
> >
> > I'm not a frequent C programmer, so I'd prefer to let someone else take
> > care of it, as a frequent committer of code would do a faster and more
> > stylistically consistent job of it. If no one else will, however, I will.
>
>
>
> re: the actual ordering algorithm, having txids be sorted by with the
> hex-based algorithm is odd. I'd simply say they're sorted as
> little-endian byte arrays, or in other words, with the bytearr_cmp()
> function, but with the order of bytes reversed. You also should say that
> we're doing that to make the user see them in visually sorted order to
> match expectations because txids are displayed as little-endian.
>
> For outputs, don't say "locking script", say "scriptPubKey". Secondly,
> scriptPubKeys are not in little-endian representation - they have no
> endianness to them. With output amount, there's no need to say that
> they're unsigned or little-endian satoshies, just say they're sorted
> largest/smallest amount first.
>
> "For the sake of efficiency, amounts will be considered first for
> sorting, since they contain fewer bytes of information (7 bytes)
> compared to a standard P2PKH locking script (800 bytes)." <- where the
> heck did you get these numbers from? Amounts are 8 bytes, and P2PKH
> scriptPubKeys are 25 bytes.
>
>
> "Backwards Compatibility" <- I'd just remove this whole section; we're
> unlikely to make this an IsStandard() rule anytime soon.
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/6cbf4c0f/attachment.html>

From vincent.truong at procabiak.com  Fri Jun 12 23:01:02 2015
From: vincent.truong at procabiak.com (Vincent Truong)
Date: Sat, 13 Jun 2015 09:01:02 +1000
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <CABr1YTd0wcOC8+KSPCPHrx5Ob4nY3azed46gS+nR_NzmxDiTzw@mail.gmail.com>
References: <20150612181153.GB19199@muck>
	<CAOG=w-up7-wp2NnK52jeCLvcSWvbC-iT-YRDoA=10QhU=K14-g@mail.gmail.com>
	<1466351.XXvDcu7nzO@crushinator>
	<CABeL=0g5Lq0zpwW2sHTbO+TTj84aJaDH=1wzeQdFVyhHf-QiSg@mail.gmail.com>
	<CABr1YTfowMqgDZoWhDXiM0Bd3dwhVo6++FOvLntGc2HkApEbGw@mail.gmail.com>
	<CABr1YTd0wcOC8+KSPCPHrx5Ob4nY3azed46gS+nR_NzmxDiTzw@mail.gmail.com>
Message-ID: <CACrzPemekkQdn5awnb9tBc9uWs12KLHQAdqu=4zAtjn=O-kkaw@mail.gmail.com>

(Sorry for spam, forgot to cc the mailing list)

RE: miner economics
Miners who have an agenda can forego fees to achieve it and create their
own txns if it is completely txn/user driven. It is better to just count
miners votes and let the user votes be their backing.

Although miners need to include txns that have the same vote as them, or
you expect them be able to vote themselves with their own txns, with
backing eventually there will be a large pool of unconfirmed txns that vote
against them. Which means a juicy choice of fees for an honest or small
miner to vote the other way (if there are any).

If the votes are required to be near unanimous (almost 100%) rather than
majority rule, there will be a small miner out there who will vote honestly
and reset the vote on behalf of those users, because there is a fee
incentive to do so (a pure honest miner doesn't care about fees. But
they're a dying breed). If it is a majority rule type of vote, bigger
miners will set the vote direction and small miners have no say no matter
how they vote. From a decentralisation perspective, it is better to want
the big guns to have a small voice, otherwise it will tend towards
centralisation.

Troll users (voting against when the direction is very clear) can still be
ignored by excluding their txns unless they're paying attractive fees. (So
it isn't exactly 100%, but it'll be close). Miners have some power but
ultimately they will represent the users if the users votes are clearly
divided.

If you think 100% is hard, 95-90% could be a compromise but that requires
an assumption that at least 5-10% will have their voices unheard. And that
might be OK. Personally, 100% is consensus, anything less is just a
democracy.

RE: vote bits
I think letting a vote go up and down in the same vote is a strange one.
Personally I think binary votes simplify the process.

Would it be better to 'announce' a vote that will contain a certain change.
For example, hash of a config file that said change MAX_BLOCK_SIZE -> 8mb.
More things can use the same mechanism by including changes in a config (or
whatever script/markup) file as needed in the future, for whichever
constants you want to expose to votes.

Votes can just be 0 and 1 for no/yes and omitted for neutral. My preference
is 1 for yes, 0 for no neutral/ignored and omitted for no, so that it is
backwards compatible and doesn't skew votes to the agreeing direction, and
forces node owners and wallet developers to upgrade and participate.
On Jun 13, 2015 6:04 AM, "Eric Lombrozo" <elombrozo at gmail.com> wrote:

> Miners currently only collect an almost negligible portion of their
> revenue from fees. While I certainly welcome any proposals that move us in
> the direction of defining a smooth metaconsensus process, I think with the
> curent economics, miners (and especially those with significant hashing
> power) have more of an incentive to block txs/spam their votes than to
> adapt to tx sender preferences...unless people increase their tx fees
> significantly. But without wallets that can make decent suggestions in this
> regard, this feature will be almost inaccessible to most regular users. And
> the economics still aren't entirely clear.
>
> - Eric Lombrozo
> On Jun 12, 2015 12:30 PM, "Jannes Faber" <j.faber at elevate.nl> wrote:
>
> I'm imagining in Peter's proposal it's not the transaction votes that are
> counted but only the votes in the blocks? So miners get to vote but they
> risk losing money by having to exclude counter voting transactions. But
> garbage transactions are no problem at all.
>
> Note that users that want to cast a vote "pay" for that by increased
> confirmation time (on average, hopefully slightly depending on the trend).
>
> On Fri, Jun 12, 2015, 20:27 Matt Whitlock <bip at mattwhitlock.name> wrote:
>
>> On Friday, 12 June 2015, at 11:20 am, Mark Friedenbach wrote:
>> > Peter it's not clear to me that your described protocol is free of miner
>> > influence over the vote, by artificially generating transactions which
>> they
>> > claim in their own blocks
>>
>> Miners could fill their blocks with garbage transactions that agree with
>> their vote, but this wouldn't bring them any real income, as they'd be
>> paying their own money as fees to themselves. To get real income, miners
>> would have to vote in accordance with real users.
>>
>>
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/9f92b4cb/attachment.html>

From luke at dashjr.org  Fri Jun 12 23:11:43 2015
From: luke at dashjr.org (Luke Dashjr)
Date: Fri, 12 Jun 2015 23:11:43 +0000
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <CACrzPemekkQdn5awnb9tBc9uWs12KLHQAdqu=4zAtjn=O-kkaw@mail.gmail.com>
References: <20150612181153.GB19199@muck>
	<CABr1YTd0wcOC8+KSPCPHrx5Ob4nY3azed46gS+nR_NzmxDiTzw@mail.gmail.com>
	<CACrzPemekkQdn5awnb9tBc9uWs12KLHQAdqu=4zAtjn=O-kkaw@mail.gmail.com>
Message-ID: <201506122311.44549.luke@dashjr.org>

On Friday, June 12, 2015 11:01:02 PM Vincent Truong wrote:
> RE: miner economics
> Miners who have an agenda can forego fees to achieve it and create their
> own txns if it is completely txn/user driven. It is better to just count
> miners votes and let the user votes be their backing.

Just simplify this? Allow a miner to have their block counted as <max possible 
votes> votes for X provided not a single transaction they include votes 
against it. Then miners can explicitly forego the fees of opposing 
transactions without having to bloat blocks.

Luke



From jag426 at cornell.edu  Fri Jun 12 23:23:37 2015
From: jag426 at cornell.edu (Aaron Gustafson)
Date: Fri, 12 Jun 2015 16:23:37 -0700
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <CABr1YTd0wcOC8+KSPCPHrx5Ob4nY3azed46gS+nR_NzmxDiTzw@mail.gmail.com>
References: <20150612181153.GB19199@muck>
	<CAOG=w-up7-wp2NnK52jeCLvcSWvbC-iT-YRDoA=10QhU=K14-g@mail.gmail.com>
	<1466351.XXvDcu7nzO@crushinator>
	<CABeL=0g5Lq0zpwW2sHTbO+TTj84aJaDH=1wzeQdFVyhHf-QiSg@mail.gmail.com>
	<CABr1YTfowMqgDZoWhDXiM0Bd3dwhVo6++FOvLntGc2HkApEbGw@mail.gmail.com>
	<CABr1YTd0wcOC8+KSPCPHrx5Ob4nY3azed46gS+nR_NzmxDiTzw@mail.gmail.com>
Message-ID: <CAAocdpx-R6fY-vEMFvRSo7akxyHdHyf7sdAYWOGCej9YpQyyBQ@mail.gmail.com>

On Fri, Jun 12, 2015 at 1:04 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:

> Miners currently only collect an almost negligible portion of their
> revenue from fees.


Then they shouldn't care about the block size limit, since an increase in
block size (and thus in the number of txs they get fees from) will only
increase their revenue "negligibly".
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/509c299a/attachment.html>

From pindar.wong at gmail.com  Fri Jun 12 23:29:29 2015
From: pindar.wong at gmail.com (Pindar Wong)
Date: Sat, 13 Jun 2015 07:29:29 +0800
Subject: [Bitcoin-development] Various block size proposals
In-Reply-To: <CABaSBaz8-eHzrkt4oGCrXmDamEhZmNp2GUX8oZ+8Xt1VZWMDxg@mail.gmail.com>
References: <CABaSBaz8-eHzrkt4oGCrXmDamEhZmNp2GUX8oZ+8Xt1VZWMDxg@mail.gmail.com>
Message-ID: <CAM7BtUrDc=Kx_QazKa7Mi4Qz0+Qz8YN0ozjs055zXkBh6KQsDw@mail.gmail.com>

Thanks Bryan for collating these links in one great list. This is very
helpful and thanks for sharing it.

Feel free to fork https://github.com/EthanHeilman/BlockSizeDebate
edit to add the list of proposals and create a pull request to Ethan.

There's also a miningconsensus.slack.com group to have discussion w.r.t.
fact/source checking, completeness  (e.g. from IRC) etc.

Tks.

p.


On Sat, Jun 13, 2015 at 3:13 AM, Bryan Bishop <kanzure at gmail.com> wrote:

> Here are some proposals regarding the minimum block size questions, as
> well as other related scalability issues.
>
> Dynamic block size limit controller (maaku)
>
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07599.html
>
> https://www.reddit.com/r/Bitcoin/comments/35c47x/a_proposal_to_expand_the_block_size/
>
> Re: dynamic block size limit controller (gmaxwell)
>
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07620.html
>
> Various other gmaxwell-relayed ideas
>
> http://www.reddit.com/r/Bitcoin/comments/37pv74/gavin_andresen_moves_ahead_with_push_for_bigger/crp2735
>
> Increasing the max block size using a soft-fork (Tier Nolan)
>
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07927.html
>
> Elastic block cap with rollover penalties (Meni Rosenfield)
> https://bitcointalk.org/index.php?topic=1078521
> worked example
> https://bitcointalk.org/index.php?topic=1078521.msg11557115#msg11557115
> section 6.2.3 of https://cryptonote.org/whitepaper.pdf
> rollover transaction fees https://bitcointalk.org/index.php?topic=80387.0
>
> Variable mining effort (gmaxwell)
> http://sourceforge.net/p/bitcoin/mailman/message/34100485/
>
> BIP100 Soft-fork limit of 2 MB (jgarzik)
> http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf
>
> Transaction fee targeting
> https://bitcointalk.org/index.php?topic=176684.msg9416723#msg9416723
>
> Difficulty target scaling
>
> https://www.reddit.com/r/Bitcoin/comments/38937n/idea_make_the_difficulty_target_scale_with_block/
>
> Annual 50% max block size increase
>
> https://www.reddit.com/r/Bitcoin/comments/351dft/what_about_gavins_2014_proposal_of_having_block/
>
> Various algorithmic adjustment proposals
> https://bitcointalk.org/index.php?topic=1865.0
>
> https://www.reddit.com/r/Bitcoin/comments/1owbpn/is_there_a_consensus_on_the_blocksize_limit_issue/ccwd7xh
>
> https://www.reddit.com/r/Bitcoin/comments/35azxk/screw_the_hard_limit_lets_change_the_block_size/
>
> https://www.reddit.com/r/Bitcoin/comments/359y0i/quick_question_about_the_block_size_limit_issue/
>
> http://www.reddit.com/r/Bitcoin/comments/385xqj/what_if_block_size_limits_were_set_to_increase/
> http://www.age-of-bitcoin.com/dynamic-block-size-cap-scaling/
> (against)
> http://garzikrants.blogspot.com/2013/02/bitcoin-block-size-thoughts.html
>
> Average over last 144 blocks
>
> http://www.reddit.com/r/Bitcoin/comments/38fmra/max_block_size_2_average_size_of_last_144_blocks/
>
> Extension blocks (Adam Back) (why would he burn this idea for something so
> trivial?)
>
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07937.html
>
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg08005.html
>
> http://www.reddit.com/r/Bitcoin/comments/39kqzs/how_about_a_softfork_optin_blocksize_increase/
>
> http://www.reddit.com/r/Bitcoin/comments/39hgzc/blockstream_cofounder_president_adam_back_phd_on/cs3tgss
>
> Voting by paying to an address (note: vote censorship makes this
> impractical, among other reasons)
>
> http://www.reddit.com/r/Bitcoin/comments/3863vw/a_brandnew_idea_for_resolving_the_blocksize_debate/
>
> http://www.reddit.com/r/Bitcoin/comments/1g0ywj/proposal_we_should_vote_on_the_blocksize_limit/
>
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg02325.html
>
> Vote by paying fees
>
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg08164.html
>
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg02323.html
>
> Double the max block size at each block reward halving
>
> https://www.reddit.com/r/Bitcoin/comments/359jdc/just_double_the_max_blocksize_on_every_block/
>
> Reducing the block rate instead of increasing the maximum block size
> (Sergio Lerner)
>
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07663.html
>
> https://www.reddit.com/r/Bitcoin/comments/35kpgk/sergio_lerner_on_bitcoindevelopment_reducing_the/
>
> Decrease block interval
>
> https://www.reddit.com/r/Bitcoin/comments/2vefmp/please_eli5_besides_increasing_the_block_size_why/
>
> https://www.reddit.com/r/Bitcoin/comments/35hpkt/please_remind_me_once_again_why_we_cant_decrease/
>
> Increase default soft block size limit in Bitcoin Core
>
> http://www.reddit.com/r/Bitcoin/comments/38i6qr/why_not_increase_the_default_block_size_limit/
> https://github.com/bitcoin/bitcoin/pull/6231
>
> Consider the size of the utxo set when determining max block size (note
> that utxo depth cannot have consensus)
> https://bitcointalk.org/index.php?topic=153401.20
>
> Reduce and decrease the max block size
>
> https://www.reddit.com/r/Bitcoin/comments/381ygv/who_is_in_favour_of_reducing_the_blocksize_limit/
>
> https://www.reddit.com/r/Bitcoin/comments/2vedt4/better_we_make_block_size_50kb_and_test/
>
> Change the value of MAX_BLOCK_SIZE in Bitcoin Core
> https://bitcointalk.org/index.php?topic=140233.0
>
> Problems with floating block size limits (petertodd)
> https://bitcointalk.org/index.php?topic=144895.0
>
> Develop other ways to support high transaction volumes (gavinandresen)
> https://bitcointalk.org/index.php?topic=96097.msg1059475#msg1059475
>
> Simplified payment verification
> https://bitcoin.org/bitcoin.pdf
>
> Lightning network
> https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf
>
> GHOST
> https://eprint.iacr.org/2013/881.pdf
>
> Payment channels
> https://bitcoinj.github.io/working-with-micropayments
>
> Tree chains
>
> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg04388.html
> https://github.com/petertodd/tree-chains-paper
>
> fedpeg + SPV
>
> https://github.com/ElementsProject/elements/blob/7848ae0eed5506fb32872b6d74a12fd781aa3024/contrib/fedpeg/rotating_consensus.py
>
> Known missing:
> - old bitcoin-development proposals
> - old bitcointalk proposals
> - anything unique from IRC
>
> On a related note, the other day I found that reading all of the -wizards
> logs regarding sidechains only takes 2 hours. So... that's something. YMMV.
>
> - Bryan
> http://heybryan.org/
> 1 512 203 0507
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/8a5bacc4/attachment.html>

From odinn.cyberguerrilla at riseup.net  Sat Jun 13 04:52:25 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Fri, 12 Jun 2015 21:52:25 -0700
Subject: [Bitcoin-development] Address Expiration to Prevent Reuse
In-Reply-To: <CAAS2fgSgXdpbT3iqnu_B4j-twAixFBLN9zt=Qid62FrNSkwVdA@mail.gmail.com>
References: <55121611.1030104@thinlink.com>	<CAAS2fgRzskGcHjEhJLnyu-VMTR49i-Wo9TbOOqkHqEasxuO71A@mail.gmail.com>	<551301F0.9020806@thinlink.com>	<CAAS2fgQMW+Htqu0wonL7r-ZN_t0evRayDCGRMKYzRUaCm6wxjw@mail.gmail.com>	<55146E2C.9020105@thinlink.com>	<CAAS2fgSSOQi4uL95S=GUdXGKZK_y4aNTUoOqkkaLFvzAVPnRig@mail.gmail.com>	<551479A3.9010104@thinlink.com>
	<CAAS2fgSgXdpbT3iqnu_B4j-twAixFBLN9zt=Qid62FrNSkwVdA@mail.gmail.com>
Message-ID: <557BB709.1040107@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I'm way late to this one, I guess, but adding some thoughts here... it
seems that anything which mitigates the problem of reuse should be to
the maximum extent possible, the user's option... if a person wants to
have an address that lasts forever they should be able to have it...
if they want to have an address that expires they should be able to
have it.

The reuse problem is, I think, better solved by the presentation of
stealth address proposals, and would be handled by a stealth BIP (BIP
63) which has been recently re-discussed here:
https://bitcointalk.org/index.php?topic=1083961.0

On 03/26/2015 02:44 PM, Gregory Maxwell wrote:
> On Thu, Mar 26, 2015 at 9:26 PM, Tom Harding <tomh at thinlink.com> 
> wrote:
>> I should have been clearer that the motivation for address 
>> expiration is to reduce the rate of increase of the massive pile 
>> of bitcoin addresses out there which have to be monitored
>> forever for future payments.  It could make a significant dent
>> if something like this worked, and were used by default someday.
> 
> Great, that can be accomplished by simply encoding an expiration 
> into the address people are using and specifying that clients 
> enforce it.
> 
> ----------------------------------------------------------------------
- --------
>
>
> 
Dive into the World of Parallel Programming The Go Parallel Website,
sponsored
> by Intel and developed in partnership with Slashdot Media, is your 
> hub for all things parallel software development, from weekly 
> thought leadership blogs to news, videos, case studies, tutorials 
> and more. Take a look and join the conversation now. 
> http://goparallel.sourceforge.net/ 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net 
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVe7cJAAoJEGxwq/inSG8C2uwH/2UfTX+6CEssv5ZhiwwqVNWk
bmlODZulsJK0FIIcz2oVtMvnMR7L8DX/XtFOdiVTk/wOn7vc7X/DZ9UVKSixKCLJ
IJLzBKEzFzMmNhxXv9fPsefuMsMlTkhifykl2BOp0T2gMEr5GweKSqn9XpQuo9mb
LhS5vqNCRw0X3eQ5sIalSfmK3ghP5yaU+orhFjvb3QJ/JN3mxgXyl3xLx9diPVdu
2I1QoxzCyE/tlEnxZGPrCtGe3d93mPhEFGGeiP+7eW8TkJa5AGCg3QWbzniC3Nsv
gjg6rCbLKtj300hH0glbPT96YO+r9l5itox+aArkCtNnR+/HlUb6zubgqebzPuc=
=KZQe
-----END PGP SIGNATURE-----



From odinn.cyberguerrilla at riseup.net  Sat Jun 13 06:05:35 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Fri, 12 Jun 2015 23:05:35 -0700
Subject: [Bitcoin-development] Proposed alternatives to the 20MB step
In-Reply-To: <CANEZrP1TgAxd70UnnTac8-h2huUxCJD3VsqxWdgv2mpwbU_mkQ@mail.gmail.com>
References: <CAFnMCfd8N_2nvspXF+Tro_SsofUUrMy4_QG9tRbPm1pUWtUCXQ@mail.gmail.com>	<CANEZrP1HttM5rRqTchMrsbhfTbASHm3j0q=vjDaTjeYQHHBr9Q@mail.gmail.com>	<556CF426.3030204@voskuil.org>
	<CANEZrP1TgAxd70UnnTac8-h2huUxCJD3VsqxWdgv2mpwbU_mkQ@mail.gmail.com>
Message-ID: <557BC82F.1010901@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1



On 06/02/2015 04:03 AM, Mike Hearn wrote:
(...)
> 
> If you really believe that decentralisation is, itself, the end,
> then why not go use an "ASIC resistant" alt coin with no SPV or web
> wallets which resembles Bitcoin at the end of 2009? That'd be a
> whole lot more decentralised than what you have now.
> 
> The *percentage* of the community that mines is totally
> irrelevant, it's the absolute number of (independent) people that
> matters.
> 
> 
> So usage does matter, then? You'd rather have a coin that has
> power concentrated in a far smaller elite, proportionally, but has
> overall more usage? If there are say, 5000 full nodes today, and in
> ten years there are 6000, and they all run in vast datacenters and
> are owned by large companies, you'll feel like Bitcoin is more
> decentralised than ever?   (n.b. I do not think this situation will
> ever happen, it's just an example).
> 

Something you said about "power concentrated," made me think I should
post this here:

https://twitter.com/adam3us/status/608920099609817088

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVe8gvAAoJEGxwq/inSG8CcykH/0d+WuPnzFWooCRJR+FwaI4w
Ad0z5GSLfYKGnmMMbbqkLsIA2GsfRAvivrsfZYd4slF5C7HEDGa3J/NC72U46dk6
qVm07UNBO3V+loLJtStIQQkg3tVGWjXeiySf4E4b8wlaZiBMS9WW0sAOWUJiGMDQ
jKNRpjXobkQGd8C+VJXDpgtmiY60bS4l6j7bbYv+mU6LxhLwCVCqjRJSEN08BH4E
AOwJg1qlORHPnrepfeJrB6TVxeHuLjCjWodXQ0jHbNchVQw7zc81gKrD40BJTzyO
TTtGPu3JUkcHtx7MVLbIdYNVElqxMS5Li+j9j3h+m9eGSaNgOOl3+8VGJexKPKI=
=j5Fh
-----END PGP SIGNATURE-----



From matthew at roberts.pm  Sat Jun 13 06:20:37 2015
From: matthew at roberts.pm (Matthew Roberts)
Date: Sat, 13 Jun 2015 16:20:37 +1000
Subject: [Bitcoin-development] The timechain: an idea to solve TX
 malleability in smart contract protocols without requiring a fork.
Message-ID: <CAAEDBiGbEJhfOXTbk-bre-wAUTqWUzWO8vKapZrbuSMkt-hKoA@mail.gmail.com>

I've been tossing around an idea in my head that involves time-locked
encryption [0] and I wondered what the devs here think about it. In a
nutshell: the timechain is a serial chain of time-lock encrypted GPG keys
at N minute intervals (meaning that it requires N minutes to decrypt a
single link / key in the chain and each link must be fully decrypted before
decryption can start on the next link.) For those not aware of how
time-lock encryption works it goes something like this:

1. Choose some random, unique text - this is the initialisation vector or
IV.

2. Hash that text -> output.

3. Hash the output -> output.

4. Hash the output -> output.

5. ...

6. Process is repeated for N minutes.

7. Result is then used to generate encryption keys and the public key can
be used to time-lock encrypt an arbitrary number of plaintexts.

8. All intermediary results are discarded -- only the pub key is kept and
giving out the IV forces an individual to have to repeat the same amount of
work used to generate the encryption key.

What's interesting about this is that the keys can be generated in parallel
and then "stitched" together to form a single serial chain of keys. So
potentially, if a person had access to a GPU cluster then they could
generate a years worth of work in only 5 minutes. Now imagine if one were
to stitch these keys together into a chain of keys at five minute intervals
(a structure I refer to as the "timechain"): you could use this structure
to encrypt ECDSA keys which could then be used in multi-signature contract
schemes as a 100% decentralized, trustless way to execute refunds in
contract protocols.

Unexpected benefit: time-lock encryption can be used to build unbreakable
DACs.

Peter Todd has already done work on using Bitcoin to incentivize the
decryption process of time-lock encryption [1] but what he may not be aware
of is how important this process is for the construction of DACs.

Imagine a true peer-to-peer cryptocurrency exchange [2] that time-lock
encrypts a chain of ECDSA keys using the timechain and then sets up
contracts to pay a small portion of their fees "into" the ECDSA keys.
Essentially the exchange has created a DAC that pays its participants to
decrypt itself. This is the incentive for the decryption. The reason for
the incentive is that another chain of keys can be generate at 5 minute
intervals which can be used in contract protocols in place of nTimeLocked
refund transactions (which are vulnerable to transaction malleability.)

Sample contract using the timechain:

3 of 4 multi-sig: Owner, Owner, Recipient, Timelock

Pay N coins to recipient sequentially (micropayment channel) before [time /
date], otherwise fall back on timelock decrypted refund key to give full
leverage back to owner. This is how smart contracts would work using the
timechain for refunds (instead of nTimeLock TXs.)

Using the DAC, it might also be possible to force participants to reveal
their solutions to the decryption of the timechain (otherwise the first
person who starts on the chain would receive all the fees which isn't very
fair.) One way to do this would be to use the public key for the fee ECDSA
key as the IV used to generate the next key on the chain. To spend the fees
would therefore require revealing the public key if the fees were paid to a
pay-to-pub-key-hash transaction.

A further precaution would be to generate the pay to fee transaction in
such a way that the amount needs to be redeemed otherwise another
transaction would burn the coins. (I haven't worked out the full details
for this but similar schemes have been used successfully, for example in
BitHalo [3]. The Lightning Network [4] offers another potential solution.)
Perhaps a custom blockchain or sidechain could also be used to award coins
for successful (and timely solutions) but this is a subject for future work.

In conclusion: I have described a simple way to solve the TX malleability
problem in smart contract protocols without requiring a fork or relying on
a third-party escrow scheme to manage coins. My solution doesn't require
any trust beyond the initial need for the timechain to be generated in a
secure cluster and the solution remains secure so long as participants
stick to using future keys in the chain regardless of how far along
decryption is.

What do you think of the idea so far?

Obviously the biggest flaw here is that the integrity of a timechain can't
be known before-hand but if a timechain were to be generated securely by a
reputable party, the biggest benefit of using it is that it basically runs
itself: it does not require any third-party to manage its functionality and
the entity which originally generated it can completely disappear without
interrupting service. This could, for instance - allow companies to create
entirely secure and reliable systems that couldn't be hacked as the
behaviour of a timechain is deterministic. I think this is a huge
improvement over existing systems which require third-parties to be
perpetually trusted with managing key-pairs on their web servers.

Anyway, that's the basic idea. Let me know what you think.


Sources:

[0] http://www.gwern.net/Self-decrypting%20files

[1]
https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg05547.html

[2] http://www.uptrenda.com/uptrenda.pdf

[3] https://bithalo.org/wp-content/uploads/2014/06/whitepaper_twosided.pdf

[4] https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/6fbc7681/attachment.html>

From matthew at roberts.pm  Sat Jun 13 07:16:52 2015
From: matthew at roberts.pm (Matthew Roberts)
Date: Sat, 13 Jun 2015 17:16:52 +1000
Subject: [Bitcoin-development] The timechain: an idea to solve TX
 malleability in smart contract protocols with minimal involvement and
 without requiring a fork.
Message-ID: <CAAEDBiEZ9CrgFwg10BL_f+sv2mi_sZD_e5NLZ75nCg3gXf57Bg@mail.gmail.com>

I've been tossing around an idea in my head that involves time-locked
encryption [0] and I wondered what the devs here think about it. In a
nutshell: the timechain is a serial chain of time-lock encrypted GPG keys
at N minute intervals (meaning that it requires N minutes to decrypt a
single link / key in the chain and each link must be fully decrypted before
decryption can start on the next link.) For those not aware of how
time-lock encryption works it goes something like this:

1. Choose some random, unique text - this is the initialisation vector or
IV.

2. Hash that text -> output.

3. Hash the output -> output.

4. Hash the output -> output.

5. ...

6. Process is repeated for N minutes.

7. Result is then used to generate encryption keys and the public key can
be used to time-lock encrypt an arbitrary number of plaintexts.

8. All intermediary results are discarded -- only the pub key is kept and
giving out the IV forces an individual to have to repeat the same amount of
work used to generate the encryption key.

What's interesting about this is that the keys can be generated in parallel
and then "stitched" together to form a single serial chain of keys. So
potentially, if a person had access to a GPU cluster then they could
generate a years worth of keys in only 5 minutes. Now imagine if one were
to stitch these keys together into a chain of keys at five minute intervals
(a structure I refer to as the "timechain"): you could use this structure
to encrypt ECDSA keys which could then be used in multi-signature contract
schemes as a 100% decentralized, trustless way to execute refunds in
contract protocols.

Unexpected benefit: time-lock encryption can be used to build unbreakable
DACs.

Peter Todd has already done work on using Bitcoin to incentivize the
decryption process of time-lock encryption [1] but what he may not be aware
of is how important this process is for the construction of DACs.

Imagine a true peer-to-peer cryptocurrency exchange [2] that time-lock
encrypts a chain of ECDSA keys using the timechain and then sets up
contracts to pay a small portion of their fees "into" the ECDSA keys.
Essentially the exchange has created a DAC that pays its participants to
decrypt itself. This is the incentive for the decryption. The reason for
the incentive is that another chain of keys can be generate at 5 minute
intervals which can be used in contract protocols in place of nTimeLocked
refund transactions (which are vulnerable to transaction malleability.)

Sample contract using the timechain:

3 of 4 multi-sig: Owner, Owner, Recipient, Timelock

Pay N coins to recipient sequentially (micropayment channel) before [time /
date], otherwise fall back on timelock decrypted refund key to give full
leverage back to owner. This is how smart contracts would work using the
timechain for refunds (instead of nTimeLock TXs.)

Using the DAC, it might also be possible to force participants to reveal
their solutions to the decryption of the timechain (otherwise the first
person who starts on the chain would receive all the fees which isn't very
fair.) One way to do this would be to use the public key for the fee ECDSA
key as the IV used to generate the next key on the chain. To spend the fees
would therefore require revealing the public key if the fees were paid to a
pay-to-pub-key-hash transaction.

A further precaution would be to generate the pay to fee transaction in
such a way that the amount needed to be redeemed before a certain
time-frame otherwise another transaction would burn the coins. (I haven't
worked out the full details for this yet but similar schemes have been used
successfully, for example in BitHalo [3] and the Lightning Network [4]
offers another potential solution.) Perhaps a custom blockchain or
sidechain could be used to award coins for successful (and timely
solutions) but this is a subject for future work.

In conclusion: I have described a simple way to solve the TX malleability
problem in smart contract protocols without requiring a fork or relying on
a third-party escrow services to hold keys. My solution doesn't require any
trust beyond the initial need for the timechain to be generated in a secure
environment and the solution remains secure so long as participants stick
to using future keys in the chain regardless of how far along the
decryption is.

Critique / flaws

Obviously the biggest flaw here is that the integrity of a timechain can't
be known before-hand but if a timechain were to be generated securely by a
reputable party, the biggest benefit of using it is that it basically runs
itself: it does not require any third-party to manage its functionality and
the entity which originally generated it can completely disappear without
interrupting service. This could, for instance - allow companies to create
entirely secure and reliable systems that couldn't be hacked as the
behaviour of a timechain is deterministic. I think this is a huge
improvement over existing systems which require third-parties to be
perpetually trusted with managing key-pairs on their web servers.

You could even use collateral as a way to incentivize the reliable
construction of the timechain by collecting collateral into a multi-sig
controlled by a number of neutral parties and only releasing the coins back
to the entity if the chain behaves as expected. I imagine some kind of
signed copy of a GPU cluster bill + proof of code executed would be
additional proof.

Anyway, that's the basic idea. Let me know what you think.


Sources:

[0] http://www.gwern.net/Self-decrypting%20files

[1]
https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg05547.html

[2] http://www.uptrenda.com/uptrenda.pdf

[3] https://bithalo.org/wp-content/uploads/2014/06/whitepaper_twosided.pdf

[4] https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/ddc1964c/attachment.html>

From pieter.wuille at gmail.com  Sat Jun 13 13:01:12 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Sat, 13 Jun 2015 15:01:12 +0200
Subject: [Bitcoin-development] Miners: You'll (very likely) need to
 upgrade your Bitcoin Core node soon to support BIP66
In-Reply-To: <CAE-z3OXMp6494BXeD0FcKPSriHHr+F6grH=tdhk45Ni1+FQ6ZQ@mail.gmail.com>
References: <20150612004058.GA14749@muck>
	<CAE-z3OXMp6494BXeD0FcKPSriHHr+F6grH=tdhk45Ni1+FQ6ZQ@mail.gmail.com>
Message-ID: <CAPg+sBhNSuyctyuRvMYd9gDcjfGwxj=nhY56nSDhCtwp7rJxdw@mail.gmail.com>

On Fri, Jun 12, 2015 at 10:37 AM, Tier Nolan <tier.nolan at gmail.com> wrote:

> Once the 75% threshold is reached, miners who haven't updated are at risk
> of mining on invalid blocks.
>

Note that we've been above the 75% threshold since june 7th (before Peter's
main was sent).

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/ec812fd7/attachment.html>

From pieter.wuille at gmail.com  Sat Jun 13 14:39:04 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Sat, 13 Jun 2015 16:39:04 +0200
Subject: [Bitcoin-development] Scaling Bitcoin with Subchains
In-Reply-To: <CAL8tG==LG=xC_DzOaghbGGKab4=UVpGLQV7781pU4wg+WnFdMg@mail.gmail.com>
References: <CAL8tG==LG=xC_DzOaghbGGKab4=UVpGLQV7781pU4wg+WnFdMg@mail.gmail.com>
Message-ID: <CAPg+sBjqQ66f1Rmhi9HOBYP5BDjBHvTNPpUN-y3o-KX8dXBMhg@mail.gmail.com>

On Wed, May 20, 2015 at 4:55 AM, Andrew <onelineproof at gmail.com> wrote:

> Hi
>
> I briefly mentioned something about this on the bitcoin-dev IRC room. In
> general, it seems experts (like sipa i.e. Pieter) are against using
> sidechains as a way of scaling. As I only have a high level understanding
> of the Bitcoin protocol, I cannot be sure if what I want to do is actually
> defined as a side chain, but let me just propose it, and please let me know
> whether it can work, and if not why not (I'm not scared of digging into
> more technical resources in order to fully understand). I do have a good
> academic/practical background for Bitcoin, and I'm ready to contribute code
> if needed (one of my contributions includes a paper wallet creator written
> in C).
>
>
In your proposal, transactions go to a chain based the addresses involved.
We can reasonably assume that different people's wallet will tend to be
distributed uniformly over several sidechains to hold their transactions
(if they're not, there is no scaling benefit anyway...). That means that
for an average transaction, you will need a cross-chain transfer in order
to get the money to the recipient (as their wallet will usually be
associated to a chain that is different from your own). Either you use an
atomic swap (which actually means you end up briefly with coins in the
destination chain, and require multiple transactions and a medium delay),
or you use the 2way peg transfer mechanism (which is very slow, and reduces
the security the recipient has to SPV).

Whatever you do, the result will be that most transactions are:
* Slower (a bit, or a lot, depending on what mechanism you use).
* More complex, with more failure modes.
* Require more and larger transactions (causing a total net extra load on
all verifiers together).

And either:
* Less secure (because you rely on a third party to do an atomic swap with,
or because of the 2 way peg transfer mechanism which has SPV security)
* Doesn't offer any scaling benefit (because the recipient needs to fully
validate both his own and the receiver chain).

In short, you have not added any scaling at all, or reduced the security of
the system significantly, as well as made it significantly less convenient
to use.

So no, sidechains are not a direct means for solving any of the scaling
problems Bitcoin has. What they offer is a mechanism for easier
experimentation, so that new technology can be built and tested without
needing to introduce a new currency first (with the related speculative and
network effect problems). That experimentation could eventually lead us to
discover mechanisms for better scaling, or for more scalability/security
tradeoffs (see for example the Witness Segregation that Elements Alpha has).

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/0b10bf9a/attachment.html>

From nathan at leastauthority.com  Sat Jun 13 15:38:56 2015
From: nathan at leastauthority.com (Nathan Wilcox)
Date: Sat, 13 Jun 2015 09:38:56 -0600
Subject: [Bitcoin-development] Proposal: SPV Fee Discovery mechanism
In-Reply-To: <CACq0ZD4LDTWXsk8Lk5Yf3D7FOwnrgY_oVjRHgH0PhRYmb3ZOdg@mail.gmail.com>
References: <CAFdHNGgtgWGu8gnnJfM0EcVn2m_Wff5HPwAe-9FBvjR++q0Q-Q@mail.gmail.com>
	<CACq0ZD5=EunMZJJMKfFUGkR=Ye_8nmV0qLkJJ997gbWk1MTC9w@mail.gmail.com>
	<CAFdHNGh=eGCwoMF36Siup-h6aSQtE0mvxCfk+OQRJb-37pds9w@mail.gmail.com>
	<20150610200323.GA13724@savin.petertodd.org>
	<CAFdHNGg-gJ99L4oartyMMX3PhykhekNbuLrs7Z8JN0zTpwgaZw@mail.gmail.com>
	<CACq0ZD4LDTWXsk8Lk5Yf3D7FOwnrgY_oVjRHgH0PhRYmb3ZOdg@mail.gmail.com>
Message-ID: <CAFdHNGhS8TZq9d8zysU=kmCxaNAW=P0Vg=QKaDbbNw5b9cj1_Q@mail.gmail.com>

On Thu, Jun 11, 2015 at 12:55 PM, Aaron Voisine <voisine at gmail.com> wrote:

> > A Header-PoW-verifying client could still be given all transactions in
> a recent block, from which it can see the in-band fees directly.
>
> You don't know the fees paid by any given transaction unless you also have
> all it's inputs. Transaction inputs do not include an amount. You could
> however get the average fee-per-kb paid by all transactions in a block by
> looking at the coinbase transaction, subtracting the block reward, and
> dividing by the size of block minus the header.
>
>
Excellent point and alternative proposal. You're right: to get the specifi
fees, you'd need all transactions in a block, and all TxOuts with
membership proofs. Your alternative seems like a much leaner trade-off for
similar data.


>
> Aaron Voisine
> co-founder and CEO
> breadwallet.com
>
> On Thu, Jun 11, 2015 at 11:30 AM, Nathan Wilcox <nathan at leastauthority.com
> > wrote:
>
>> On Wed, Jun 10, 2015 at 2:03 PM, Peter Todd <pete at petertodd.org> wrote:
>>
>>> On Wed, Jun 10, 2015 at 02:00:27PM -0600, Nathan Wilcox wrote:
>>> > On Wed, Jun 10, 2015 at 1:19 PM, Aaron Voisine <voisine at gmail.com>
>>> wrote:
>>> >
>>> > > It could be done by agreeing on a data format and encoding it in an
>>> > > op_return output in the coinbase transaction. If it catches on it
>>> could
>>> > > later be enforced with a soft fork.
>>> > >
>>> > >
>>> > Sounds plausible, except SPV protocols would need to include this
>>> coinbase
>>> > txn if it's going to help SPV clients. (Until a softfork is activated,
>>> SPV
>>> > clients should not rely on this encoding, since until that time the
>>> results
>>> > can be fabricated by individual miners.)
>>>
>>> Fee stats can always be fabricated by individual miners because fees can
>>> be paid out-of-band.
>>>
>>>
>> This is a point I hadn't considered carefully before. I don't understand
>> the marketplace here or why miners would want to move fees outside of
>> explicit inband fees. Implicit in this proposal is that the statistics only
>> cover in-band data, because that's the scope of consensus rules, and thus
>> the proposal is only as useful as the information of in-band fees is useful.
>>
>> I've also noticed a detracting technical argument given a particular
>> tradeoff:
>>
>> A Header-PoW-verifying client could still be given all transactions in a
>> recent block, from which it can see the in-band fees directly.  The
>> trade-off is the size of those transactions versus the need to alter any
>> consensus rules or do soft forks.
>>
>> Notice how this trade-off's costs change with maximum block size.
>>
>>
>>
>>
>>> --
>>> 'peter'[:-1]@petertodd.org
>>> 00000000000000001245bd2f5c99379ee76836227ded9c08324894faabc0d27f
>>>
>>
>>
>>
>> --
>> Nathan Wilcox
>> Least Authoritarian
>>
>> email: nathan at leastauthority.com
>> twitter: @least_nathan
>> PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993
>>
>
>


-- 
Nathan Wilcox
Least Authoritarian

email: nathan at leastauthority.com
twitter: @least_nathan
PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/d2787118/attachment.html>

From onelineproof at gmail.com  Sat Jun 13 17:55:39 2015
From: onelineproof at gmail.com (Andrew)
Date: Sat, 13 Jun 2015 17:55:39 +0000
Subject: [Bitcoin-development] Scaling Bitcoin with Subchains
In-Reply-To: <CAPg+sBjqQ66f1Rmhi9HOBYP5BDjBHvTNPpUN-y3o-KX8dXBMhg@mail.gmail.com>
References: <CAL8tG==LG=xC_DzOaghbGGKab4=UVpGLQV7781pU4wg+WnFdMg@mail.gmail.com>
	<CAPg+sBjqQ66f1Rmhi9HOBYP5BDjBHvTNPpUN-y3o-KX8dXBMhg@mail.gmail.com>
Message-ID: <CAL8tG=kNt0aVkae-z40OTO8wA+dC=X21dHaMYMg1ptAAu2YVow@mail.gmail.com>

First of all, I added more info to bitcointalk.org:
https://bitcointalk.org/index.php?topic=1083345.0

On Sat, Jun 13, 2015 at 2:39 PM, Pieter Wuille <pieter.wuille at gmail.com>
wrote:

>
> In your proposal, transactions go to a chain based the addresses involved.
> We can reasonably assume that different people's wallet will tend to be
> distributed uniformly over several sidechains to hold their transactions
> (if they're not, there is no scaling benefit anyway...). That means that
> for an average transaction, you will need a cross-chain transfer in order
> to get the money to the recipient (as their wallet will usually be
> associated to a chain that is different from your own). Either you use an
> atomic swap (which actually means you end up briefly with coins in the
> destination chain, and require multiple transactions and a medium delay),
> or you use the 2way peg transfer mechanism (which is very slow, and reduces
> the security the recipient has to SPV).
>
> Whatever you do, the result will be that most transactions are:
> * Slower (a bit, or a lot, depending on what mechanism you use).
> * More complex, with more failure modes.
> * Require more and larger transactions (causing a total net extra load on
> all verifiers together).
>
> And either:
> * Less secure (because you rely on a third party to do an atomic swap
> with, or because of the 2 way peg transfer mechanism which has SPV security)
> * Doesn't offer any scaling benefit (because the recipient needs to fully
> validate both his own and the receiver chain).
>
> In short, you have not added any scaling at all, or reduced the security
> of the system significantly, as well as made it significantly less
> convenient to use.
>
> So no, sidechains are not a direct means for solving any of the scaling
> problems Bitcoin has. What they offer is a mechanism for easier
> experimentation, so that new technology can be built and tested without
> needing to introduce a new currency first (with the related speculative and
> network effect problems). That experimentation could eventually lead us to
> discover mechanisms for better scaling, or for more scalability/security
> tradeoffs (see for example the Witness Segregation that Elements Alpha has).
>

Thanks Pieter for your reply. The chain the transaction goes to does not
have to be based on the address (there can be a way for the protocol to
choose), but ya, the address scheme can be a good default. As I said, there
will be an incentive for empty chains to fill up since they will require
less fees (so the scaling benefit isn't dependent on a uniform distribution
of addresses).

The rule I mentioned is that at most 2 different chains can be involved in
one transaction. From a chain to itself is easy. From a parent or
grandparent chain to its child or grandchild chain, is also easy since the
child/grandchild always trusts its parent/grandparent. From a
child/grandchild to parent/grandparent, is also easy (no delay) since the
parent/grandparent will commit to its children (which recursively commit to
their children). As mentioned I am just doing a form of block extensions as
Adam Back described; the chains are not independent. From one chain to
another chain at the same level (sibling chains), the transaction is
recorded on both sibling chains (yes there is some duplication but this is
limited by requiring at most 2 sibling chains participating in a
transaction). They both have to be consistent and this will be ensured by
the miners of their parent chain (those miners will commit to their blocks).

So no, I don't see how it's slower, except that there needs to be some
delay for communication between children/grandchildren and
parents/grandparents, of time O(log n) where n is the number of levels.
Even a small number of levels corresponds to a large transaction volume: n
= 5 corresponds to the equivalent of 625 MB blocks.

Security-wise, it is true that the top level chain will likely have higher
security (more hash power), but at least you can fine tune the fees you pay
according to what level of security is acceptable to you, and as Bitcoin
grows, level 2,3,4 chains can be regarded as almost as secure as the level
1 chain, since there will still be a lot of hash power on them. And anyone
can run a full node on their chains of interest, so there is no SPV level
security here, it is full level security.

Transactions are not significantly different. Miners just have to deal with
child chains, but if there is a scaling benefit, we should not be scared of
complexity. It is probably the simplest way I can think of scaling.

The recipient will validate their own chain fully and will just need the
headers of the relevant parent chains to see whether an output from the
other chain involved in a transaction is really valid. They can also get
the headers of the sibling chain involved in the transaction if they want
to validate the work of the miners on these parent chains. They don't need
the full blocks of the parent and sibling chains involved since not all the
transactions in those blocks may be of interest to them, they just need
proof that any output used in their blocks of interest are valid, so that's
why the header-only SPV proof is sufficient. But yeah, typically a user
will have the full blocks of the parent and grandparent chains of the
chains they are interested in tracking, but it is not always necessary.

Also, in the bitcointalk forum I explain in more detail the mining
procedure and how to limit the extra traffic that may be caused on the
network in case this does get added as a soft fork and then later a new
better scaling method is invented that supercedes this.

But basically, for the mining, I think it should be merge-mined between
parent and direct children only. If all the chains are merge mining the
same root chain, then it would be bad for decentralization, right? But with
only direct parent and children merge mining, you can have smaller miners
on the lower (grand children) level chains and since they will need to
solve another hash problem than their grand parent chains, the grandparents
cannot solve blocks in the grand children chains (only the direct children).

So I still didn't hear a good argument against my proposal. I know Adam
Back's form of extension blocks is problematic because it still has the big
blocks, just at another level of chain, but just by partitioning his one 10
MB chain into 10 pieces, you get my idea, which I think solves the
scalability problem as well.

Cheers

-- 
PGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/b305a405/attachment.html>

From danny.thorpe at gmail.com  Sat Jun 13 22:20:28 2015
From: danny.thorpe at gmail.com (Danny Thorpe)
Date: Sat, 13 Jun 2015 15:20:28 -0700
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <20150612181153.GB19199@muck>
References: <20150612181153.GB19199@muck>
Message-ID: <CAJN5wHVj=KfQ3_KYOKee9uq4LNPwQ7x5nGuKDHEMUqGF4LSDLg@mail.gmail.com>

Please forgive my ignorance, but why should Bitcoin users have a say in
block size limits?  It's the miners and Bitcoin node operators that bear
the burden of managing large blocks, no?

Users voting on network parameters sounds like neighbors voting on how deep
my swimming pool should be.

Thanks,
-Danny

On Fri, Jun 12, 2015 at 11:11 AM, Peter Todd <pete at petertodd.org> wrote:

> Jeff Garzik recently proposed that the upper blocksize limit be removed
> entirely, with a "soft" limit being enforced via miner vote, recorded by
> hashing power.
>
> This mechanism within the protocol for users to have any influence over
> the miner vote. We can add that back by providing a way for transactions
> themselves to set a flag determining whether or not they can be included
> in a block casting a specific vote.
>
> We can simplify Garzik's vote to say that one of the nVersion bits
> either votes for the blocksize to be increased, or decreased, by some
> fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a
> nVersion bit in transactions themselves, also voting for an increase or
> decrease. Transactions may only be included in blocks with an
> indentical vote, thus providing miners with a monetary incentive via
> fees to vote according to user wishes.
>
> Of course, to cast a "don't care" vote we can either define an
> additional bit, or sign the transaction with both versions. Equally we
> can even have different versions with different fees, broadcast via a
> mechanism such as replace-by-fee.
>
>
> See also John Dillon's proposal for proof-of-stake blocksize voting:
>
>
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg02323.html
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/da34f3e3/attachment.html>

From elombrozo at gmail.com  Sat Jun 13 22:24:26 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sat, 13 Jun 2015 15:24:26 -0700
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <CAJN5wHVj=KfQ3_KYOKee9uq4LNPwQ7x5nGuKDHEMUqGF4LSDLg@mail.gmail.com>
References: <20150612181153.GB19199@muck>
	<CAJN5wHVj=KfQ3_KYOKee9uq4LNPwQ7x5nGuKDHEMUqGF4LSDLg@mail.gmail.com>
Message-ID: <4A6DFE58-02F6-40D5-833F-67348D722D0D@gmail.com>

That?s exactly the problem with Bitcoin - it was supposed to be the case that users ARE the miners and node operators?but?alas?

> On Jun 13, 2015, at 3:20 PM, Danny Thorpe <danny.thorpe at gmail.com> wrote:
> 
> Please forgive my ignorance, but why should Bitcoin users have a say in block size limits?  It's the miners and Bitcoin node operators that bear the burden of managing large blocks, no?
> 
> Users voting on network parameters sounds like neighbors voting on how deep my swimming pool should be.
> 
> Thanks,
> -Danny
> 
> On Fri, Jun 12, 2015 at 11:11 AM, Peter Todd <pete at petertodd.org <mailto:pete at petertodd.org>> wrote:
> Jeff Garzik recently proposed that the upper blocksize limit be removed
> entirely, with a "soft" limit being enforced via miner vote, recorded by
> hashing power.
> 
> This mechanism within the protocol for users to have any influence over
> the miner vote. We can add that back by providing a way for transactions
> themselves to set a flag determining whether or not they can be included
> in a block casting a specific vote.
> 
> We can simplify Garzik's vote to say that one of the nVersion bits
> either votes for the blocksize to be increased, or decreased, by some
> fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a
> nVersion bit in transactions themselves, also voting for an increase or
> decrease. Transactions may only be included in blocks with an
> indentical vote, thus providing miners with a monetary incentive via
> fees to vote according to user wishes.
> 
> Of course, to cast a "don't care" vote we can either define an
> additional bit, or sign the transaction with both versions. Equally we
> can even have different versions with different fees, broadcast via a
> mechanism such as replace-by-fee.
> 
> 
> See also John Dillon's proposal for proof-of-stake blocksize voting:
> 
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg02323.html <https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg02323.html>
> 
> --
> 'peter'[:-1]@petertodd.org <http://petertodd.org/>
> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
> 
> ------------------------------------------------------------------------------
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net <mailto:Bitcoin-development at lists.sourceforge.net>
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>
> 
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/0b7a0b67/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/0b7a0b67/attachment.sig>

From raystonn at hotmail.com  Sat Jun 13 23:57:39 2015
From: raystonn at hotmail.com (Raystonn)
Date: Sat, 13 Jun 2015 16:57:39 -0700
Subject: [Bitcoin-development] User vote in blocksize through fees
Message-ID: <COL402-EAS423BB81E15B25CD20B11B10CDBA0@phx.gbl>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/9194c627/attachment.html>

From stephencalebmorse at gmail.com  Sun Jun 14 04:16:53 2015
From: stephencalebmorse at gmail.com (Stephen)
Date: Sun, 14 Jun 2015 00:16:53 -0400
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <20150612181153.GB19199@muck>
References: <20150612181153.GB19199@muck>
Message-ID: <2B60EFC7-60C9-470A-9022-F6FA5566CF11@gmail.com>

While this idea is theoretically interesting because it involves many stakeholders, rather than just miners, I think in practice this would not work very well. Users don't want to worry about this kind of technicality, they just want to be able to make a transaction and have it be processed. 

In addition, while this gives stakeholders some weight with the fees they supply, these fees are marginal compared to the block size subsidy. If this proposal were actually implemented, I think miners would vote for whatever they think is best, and users would not contradict them with their votes to ensure a fast confirmation time. Users are incentivized to be in agreement with miners because the miners provide them with the confirmations they need, but fees do not provide a great incentive for miners to be in agreement with users, and likely won't for some time. 

Best, 
Stephen 




> On Jun 12, 2015, at 2:11 PM, Peter Todd <pete at petertodd.org> wrote:
> 
> Jeff Garzik recently proposed that the upper blocksize limit be removed
> entirely, with a "soft" limit being enforced via miner vote, recorded by
> hashing power.
> 
> This mechanism within the protocol for users to have any influence over
> the miner vote. We can add that back by providing a way for transactions
> themselves to set a flag determining whether or not they can be included
> in a block casting a specific vote.
> 
> We can simplify Garzik's vote to say that one of the nVersion bits
> either votes for the blocksize to be increased, or decreased, by some
> fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a
> nVersion bit in transactions themselves, also voting for an increase or
> decrease. Transactions may only be included in blocks with an
> indentical vote, thus providing miners with a monetary incentive via
> fees to vote according to user wishes.
> 
> Of course, to cast a "don't care" vote we can either define an
> additional bit, or sign the transaction with both versions. Equally we
> can even have different versions with different fees, broadcast via a
> mechanism such as replace-by-fee.
> 
> 
> See also John Dillon's proposal for proof-of-stake blocksize voting:
> 
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg02323.html
> 
> -- 
> 'peter'[:-1]@petertodd.org
> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From odinn.cyberguerrilla at riseup.net  Sun Jun 14 04:28:36 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Sat, 13 Jun 2015 21:28:36 -0700
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <COL402-EAS423BB81E15B25CD20B11B10CDBA0@phx.gbl>
References: <COL402-EAS423BB81E15B25CD20B11B10CDBA0@phx.gbl>
Message-ID: <557D02F4.7090001@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

A decentralized, distributed application should offer its users
decentralized, distributed method of weighing in on the direction of
how it evolves as well as having an open development model.  The
reference to Facebook and Myspace is completely inapplicable here
because the tyranny of such spaces isn't what we have with bitcoin
(fortunately), nor would we want to try to replicate it, ever, in any
way, shape, or form.

Yes, it does bother (some) people to see the consensus based system
because of the difficulties that can be associated with implementing
it.  But that's the way it is.  If you don't like consensus based
systems (or decentralized, distributed systems) this is probably the
wrong space for you.

On 06/13/2015 04:57 PM, Raystonn wrote:
> Adding back the list. Did not intend to remove it. Apologies.
> 
> On 13 Jun 2015 4:52 pm, Raystonn <raystonn at hotmail.com> wrote:
> 
> Based on my observations, what the majority of Bitcoin users want 
> is a system that can carry more transactions per second than any 
> existing payment system while retaining most of the security 
> offered today. The technicalities on how this is achieved are not 
> as important as the end result. If the only user input is to 
> technicalities, they will use that to voice their opinions.
> 
> On 13 Jun 2015 4:25 pm, Danny Thorpe <danny.thorpe at gmail.com> 
> wrote:
> 
> I don't recall Facebook or MySpace asking end users to alter the 
> parameters of their respective back-end network infrastructure.
> 
> How are Bitcoin end users qualified to make an informed decision 
> regarding block size limits? And why should they care?
> 
> Sure, I want Bitcoin to grow its user base. But to do that,
> Bitcoin has to be accessible to the nontechnical population.
> Asking nontechnical people to make technical decisions leads
> directly to stress and confusion, which most folks find
> off-putting.
> 
> And please don't call me Shirley.  ;>
> 
> On Sat, Jun 13, 2015 at 3:42 PM, Raystonn <raystonn at hotmail.com 
> <mailto:raystonn at hotmail.com>> wrote:
> 
> Surely you would prefer to actually have users? Bitcoin does not 
> exist in a vacuum. Network effect alone is not enough to ensure 
> success in the face of competition from alternatives with a much 
> better user experience. See Facebook vs MySpace, IE vs Netscape, 
> etc.
> 
> On 13 Jun 2015 3:20 pm, Danny Thorpe <danny.thorpe at gmail.com 
> <mailto:danny.thorpe at gmail.com>> wrote:
> 
> Please forgive my ignorance, but why should Bitcoin users have a 
> say in block size limits?  It's the miners and Bitcoin node 
> operators that bear the burden of managing large blocks, no?
> 
> Users voting on network parameters sounds like neighbors voting on 
> how deep my swimming pool should be.
> 
> Thanks, -Danny
> 
> On Fri, Jun 12, 2015 at 11:11 AM, Peter Todd <pete at petertodd.org 
> <mailto:pete at petertodd.org>> wrote:
> 
> Jeff Garzik recently proposed that the upper blocksize limit be 
> removed entirely, with a "soft" limit being enforced via miner 
> vote, recorded by hashing power.
> 
> This mechanism within the protocol for users to have any influence 
> over the miner vote. We can add that back by providing a way for 
> transactions themselves to set a flag determining whether or not 
> they can be included in a block casting a specific vote.
> 
> We can simplify Garzik's vote to say that one of the nVersion bits
>  either votes for the blocksize to be increased, or decreased, by 
> some fixed ratio (e.g 2x or 1/2x) the next interval. Then we can 
> use a nVersion bit in transactions themselves, also voting for an 
> increase or decrease. Transactions may only be included in blocks 
> with an indentical vote, thus providing miners with a monetary 
> incentive via fees to vote according to user wishes.
> 
> Of course, to cast a "don't care" vote we can either define an 
> additional bit, or sign the transaction with both versions.
> Equally we can even have different versions with different fees,
> broadcast via a mechanism such as replace-by-fee.
> 
> 
> See also John Dillon's proposal for proof-of-stake blocksize 
> voting:
> 
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net
/msg02323.html
>
>
> 
- -- 'peter'[:-1]@petertodd.org <http://petertodd.org>
> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
> 
> ----------------------------------------------------------------------
- --------
>
>
> 
_______________________________________________
> Bitcoin-development mailing list 
> Bitcoin-development at lists.sourceforge.net 
> <mailto:Bitcoin-development at lists.sourceforge.net> 
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> 
> 
> 
> 
> ----------------------------------------------------------------------
- --------
>
>
> 
> 
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net 
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVfQL0AAoJEGxwq/inSG8CRqMH/0l9tHGA8figVGnIBoMgdpVi
uwMGTQTjLUf12/NFS27vT+OLMWqZRvVXvlxDF25N7la+QImhh67LqmQy8fkwGg5T
kJ6MkkFLgy05aqE/X3ywJUifOKmS3Y/RDDUJhrFjjHrsMGoF4ATtVwTpUBLik+kX
G3XRNlInmyB55UEcpyfBg9kfLz8xiy6sBPeaeGnFLCNWTs5TgJ6DTFqhBAAmE8Hw
k0tN6mW3wYS610FFkS2E3+W8O8KGs4oqAYLX/ZQOhX9oKjBvWWI4ppRpSDyBNcxd
A6VAKyU8HCuDHAEwba6gdlUa+yf4qxuZV1KCNENbvtN1CTsJ6oh0OxnEO6dtogo=
=KZmG
-----END PGP SIGNATURE-----



From elombrozo at gmail.com  Sun Jun 14 04:50:39 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sat, 13 Jun 2015 21:50:39 -0700
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <2B60EFC7-60C9-470A-9022-F6FA5566CF11@gmail.com>
References: <20150612181153.GB19199@muck>
	<2B60EFC7-60C9-470A-9022-F6FA5566CF11@gmail.com>
Message-ID: <A99C4EDC-8F2B-4B51-913A-BD72B90BF1A4@gmail.com>

What Stephen said is very much along the same lines of my earlier critique. This voting mechanism would be all but unusable to most endusers without some pretty elaborate tools?and unless users are willing to pay substantially higher fees than they?re currently paying, their votes will not really count all that much. And it?s not all that clear that most users would really be able to make very rational economic decisions even having elaborate tools. More likely, a small group would figure out ways to exploit this for their own benefit - at everyone else?s expense.

- Eric Lombrozo


> On Jun 13, 2015, at 9:16 PM, Stephen <stephencalebmorse at gmail.com> wrote:
> 
> While this idea is theoretically interesting because it involves many stakeholders, rather than just miners, I think in practice this would not work very well. Users don't want to worry about this kind of technicality, they just want to be able to make a transaction and have it be processed.
> 
> In addition, while this gives stakeholders some weight with the fees they supply, these fees are marginal compared to the block size subsidy. If this proposal were actually implemented, I think miners would vote for whatever they think is best, and users would not contradict them with their votes to ensure a fast confirmation time. Users are incentivized to be in agreement with miners because the miners provide them with the confirmations they need, but fees do not provide a great incentive for miners to be in agreement with users, and likely won't for some time.
> 
> Best,
> Stephen
> 
> 
> 
> 
>> On Jun 12, 2015, at 2:11 PM, Peter Todd <pete at petertodd.org> wrote:
>> 
>> Jeff Garzik recently proposed that the upper blocksize limit be removed
>> entirely, with a "soft" limit being enforced via miner vote, recorded by
>> hashing power.
>> 
>> This mechanism within the protocol for users to have any influence over
>> the miner vote. We can add that back by providing a way for transactions
>> themselves to set a flag determining whether or not they can be included
>> in a block casting a specific vote.
>> 
>> We can simplify Garzik's vote to say that one of the nVersion bits
>> either votes for the blocksize to be increased, or decreased, by some
>> fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a
>> nVersion bit in transactions themselves, also voting for an increase or
>> decrease. Transactions may only be included in blocks with an
>> indentical vote, thus providing miners with a monetary incentive via
>> fees to vote according to user wishes.
>> 
>> Of course, to cast a "don't care" vote we can either define an
>> additional bit, or sign the transaction with both versions. Equally we
>> can even have different versions with different fees, broadcast via a
>> mechanism such as replace-by-fee.
>> 
>> 
>> See also John Dillon's proposal for proof-of-stake blocksize voting:
>> 
>> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg02323.html
>> 
>> --
>> 'peter'[:-1]@petertodd.org
>> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/e3f490de/attachment.sig>

From 1240902 at gmail.com  Sun Jun 14 04:55:47 2015
From: 1240902 at gmail.com (Chun Wang)
Date: Sun, 14 Jun 2015 12:55:47 +0800
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <CAJN5wHVj=KfQ3_KYOKee9uq4LNPwQ7x5nGuKDHEMUqGF4LSDLg@mail.gmail.com>
References: <20150612181153.GB19199@muck>
	<CAJN5wHVj=KfQ3_KYOKee9uq4LNPwQ7x5nGuKDHEMUqGF4LSDLg@mail.gmail.com>
Message-ID: <CAFzgq-y5xBSXexVi0mJw_w89R2_AHJCgmj=gLN4CK_-YaO4-eg@mail.gmail.com>

To tell you the truth. It is only because most miners are not located
in the West. If Slush, Eligius and BTC Guild still on top 3, the core
developers, including brain-dead Mike Hearn, would be very happy to do
BIP100 just like they did BIP34 and BIP66. Shame on you!

On Sun, Jun 14, 2015 at 6:20 AM, Danny Thorpe <danny.thorpe at gmail.com> wrote:
> Please forgive my ignorance, but why should Bitcoin users have a say in
> block size limits?  It's the miners and Bitcoin node operators that bear the
> burden of managing large blocks, no?
>
> Users voting on network parameters sounds like neighbors voting on how deep
> my swimming pool should be.
>
> Thanks,
> -Danny
>
> On Fri, Jun 12, 2015 at 11:11 AM, Peter Todd <pete at petertodd.org> wrote:
>>
>> Jeff Garzik recently proposed that the upper blocksize limit be removed
>> entirely, with a "soft" limit being enforced via miner vote, recorded by
>> hashing power.
>>
>> This mechanism within the protocol for users to have any influence over
>> the miner vote. We can add that back by providing a way for transactions
>> themselves to set a flag determining whether or not they can be included
>> in a block casting a specific vote.
>>
>> We can simplify Garzik's vote to say that one of the nVersion bits
>> either votes for the blocksize to be increased, or decreased, by some
>> fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a
>> nVersion bit in transactions themselves, also voting for an increase or
>> decrease. Transactions may only be included in blocks with an
>> indentical vote, thus providing miners with a monetary incentive via
>> fees to vote according to user wishes.
>>
>> Of course, to cast a "don't care" vote we can either define an
>> additional bit, or sign the transaction with both versions. Equally we
>> can even have different versions with different fees, broadcast via a
>> mechanism such as replace-by-fee.
>>
>>
>> See also John Dillon's proposal for proof-of-stake blocksize voting:
>>
>>
>> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg02323.html
>>
>> --
>> 'peter'[:-1]@petertodd.org
>> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From jgarzik at bitpay.com  Sun Jun 14 04:56:22 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Sun, 14 Jun 2015 00:56:22 -0400
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <2B60EFC7-60C9-470A-9022-F6FA5566CF11@gmail.com>
References: <20150612181153.GB19199@muck>
	<2B60EFC7-60C9-470A-9022-F6FA5566CF11@gmail.com>
Message-ID: <CAJHLa0MTmShORXA0xA-6e1QxYLJxjCHZ3hRKsNi0Av=FhX9HOw@mail.gmail.com>

Miner voting, while imperfect, is the least-worst of various solutions
which inject market input into the system.  It is is known quantity, field
tested, and must be sustained, in public, over a time span of months.  As
this thread shows, stakeholder and direct user voting is nigh impossible to
get right.

Choosing block size is fundamentally a central bank directive shaping the
fee market.  Whatever actor or algorithm or natural equilibrium picks the
block size, that choice will dictate the level of competition for fees, the
level of scarcity of an economically scarce resource.  Picking the block
size advantages some businesses over others, some business models over
others.  Software (and software devs) should not be the ones picking that
limit.

Checks-and-balances are also important.  BIP 100 notably includes two steps
at which user input is visibly and actively injected:   1) hard fork to
enable, and 2) a second hard fork if the system is to scale beyond 32MB.
The network users (not miners) twice approve the system.  Further, one must
remember all the basic miner incentives that do align with users, notably
that of maintaining the value of bitcoin tokens as their primary income
stream.


















On Sun, Jun 14, 2015 at 12:16 AM, Stephen <stephencalebmorse at gmail.com>
wrote:

> While this idea is theoretically interesting because it involves many
> stakeholders, rather than just miners, I think in practice this would not
> work very well. Users don't want to worry about this kind of technicality,
> they just want to be able to make a transaction and have it be processed.
>
> In addition, while this gives stakeholders some weight with the fees they
> supply, these fees are marginal compared to the block size subsidy. If this
> proposal were actually implemented, I think miners would vote for whatever
> they think is best, and users would not contradict them with their votes to
> ensure a fast confirmation time. Users are incentivized to be in agreement
> with miners because the miners provide them with the confirmations they
> need, but fees do not provide a great incentive for miners to be in
> agreement with users, and likely won't for some time.
>
> Best,
> Stephen
>
>
>
>
> > On Jun 12, 2015, at 2:11 PM, Peter Todd <pete at petertodd.org> wrote:
> >
> > Jeff Garzik recently proposed that the upper blocksize limit be removed
> > entirely, with a "soft" limit being enforced via miner vote, recorded by
> > hashing power.
> >
> > This mechanism within the protocol for users to have any influence over
> > the miner vote. We can add that back by providing a way for transactions
> > themselves to set a flag determining whether or not they can be included
> > in a block casting a specific vote.
> >
> > We can simplify Garzik's vote to say that one of the nVersion bits
> > either votes for the blocksize to be increased, or decreased, by some
> > fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a
> > nVersion bit in transactions themselves, also voting for an increase or
> > decrease. Transactions may only be included in blocks with an
> > indentical vote, thus providing miners with a monetary incentive via
> > fees to vote according to user wishes.
> >
> > Of course, to cast a "don't care" vote we can either define an
> > additional bit, or sign the transaction with both versions. Equally we
> > can even have different versions with different fees, broadcast via a
> > mechanism such as replace-by-fee.
> >
> >
> > See also John Dillon's proposal for proof-of-stake blocksize voting:
> >
> >
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg02323.html
> >
> > --
> > 'peter'[:-1]@petertodd.org
> > 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
> >
> ------------------------------------------------------------------------------
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/a0c711a4/attachment.html>

From jgarzik at bitpay.com  Sun Jun 14 04:59:03 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Sun, 14 Jun 2015 00:59:03 -0400
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <CAFzgq-y5xBSXexVi0mJw_w89R2_AHJCgmj=gLN4CK_-YaO4-eg@mail.gmail.com>
References: <20150612181153.GB19199@muck>
	<CAJN5wHVj=KfQ3_KYOKee9uq4LNPwQ7x5nGuKDHEMUqGF4LSDLg@mail.gmail.com>
	<CAFzgq-y5xBSXexVi0mJw_w89R2_AHJCgmj=gLN4CK_-YaO4-eg@mail.gmail.com>
Message-ID: <CAJHLa0Pvv-oyaZ03idm15WGAE-ra14oKdLkqv3w-bTdnS=wPog@mail.gmail.com>

On Sun, Jun 14, 2015 at 12:55 AM, Chun Wang <1240902 at gmail.com> wrote:

> To tell you the truth. It is only because most miners are not located
> in the West. If Slush, Eligius and BTC Guild still on top 3, the core
> developers, including brain-dead Mike Hearn, would be very happy to do
> BIP100 just like they did BIP34 and BIP66. Shame on you!
>

BIP 100 requires a hard fork to engage.  Users proactively opt-in.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/718f5a1c/attachment.html>

From elombrozo at gmail.com  Sun Jun 14 05:08:16 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sat, 13 Jun 2015 22:08:16 -0700
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <CAFzgq-y5xBSXexVi0mJw_w89R2_AHJCgmj=gLN4CK_-YaO4-eg@mail.gmail.com>
References: <20150612181153.GB19199@muck>
	<CAJN5wHVj=KfQ3_KYOKee9uq4LNPwQ7x5nGuKDHEMUqGF4LSDLg@mail.gmail.com>
	<CAFzgq-y5xBSXexVi0mJw_w89R2_AHJCgmj=gLN4CK_-YaO4-eg@mail.gmail.com>
Message-ID: <3BB36FC7-9212-42A1-A756-A66929C15D4F@gmail.com>

Chun,

With all due respect, there are a couple major differences between BIP34 and BIP66 on the one hand and BIP100 on the other.

1) BIP34 and BIP66 are soft forks. Miners choosing to switch to them will not seriously impact validation rules for non-mining users that do not make the switch. With BIP66, the worst that can happen to them is noncompliant transactions will no longer be accepted by the network?but even nodes that do not switch over will continue to remain synched with the network.

2) BIP100 has direct economic consequences?and particularly for miners. It lends itself to much greater corruptibility.

- Eric Lombrozo

> On Jun 13, 2015, at 9:55 PM, Chun Wang <1240902 at gmail.com> wrote:
> 
> To tell you the truth. It is only because most miners are not located
> in the West. If Slush, Eligius and BTC Guild still on top 3, the core
> developers, including brain-dead Mike Hearn, would be very happy to do
> BIP100 just like they did BIP34 and BIP66. Shame on you!
> 
> On Sun, Jun 14, 2015 at 6:20 AM, Danny Thorpe <danny.thorpe at gmail.com> wrote:
>> Please forgive my ignorance, but why should Bitcoin users have a say in
>> block size limits?  It's the miners and Bitcoin node operators that bear the
>> burden of managing large blocks, no?
>> 
>> Users voting on network parameters sounds like neighbors voting on how deep
>> my swimming pool should be.
>> 
>> Thanks,
>> -Danny
>> 
>> On Fri, Jun 12, 2015 at 11:11 AM, Peter Todd <pete at petertodd.org> wrote:
>>> 
>>> Jeff Garzik recently proposed that the upper blocksize limit be removed
>>> entirely, with a "soft" limit being enforced via miner vote, recorded by
>>> hashing power.
>>> 
>>> This mechanism within the protocol for users to have any influence over
>>> the miner vote. We can add that back by providing a way for transactions
>>> themselves to set a flag determining whether or not they can be included
>>> in a block casting a specific vote.
>>> 
>>> We can simplify Garzik's vote to say that one of the nVersion bits
>>> either votes for the blocksize to be increased, or decreased, by some
>>> fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a
>>> nVersion bit in transactions themselves, also voting for an increase or
>>> decrease. Transactions may only be included in blocks with an
>>> indentical vote, thus providing miners with a monetary incentive via
>>> fees to vote according to user wishes.
>>> 
>>> Of course, to cast a "don't care" vote we can either define an
>>> additional bit, or sign the transaction with both versions. Equally we
>>> can even have different versions with different fees, broadcast via a
>>> mechanism such as replace-by-fee.
>>> 
>>> 
>>> See also John Dillon's proposal for proof-of-stake blocksize voting:
>>> 
>>> 
>>> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg02323.html
>>> 
>>> --
>>> 'peter'[:-1]@petertodd.org
>>> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
>>> 
>>> 
>>> ------------------------------------------------------------------------------
>>> 
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>> 
>> 
>> 
>> ------------------------------------------------------------------------------
>> 
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/002c6401/attachment.sig>

From jgarzik at bitpay.com  Sun Jun 14 05:13:00 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Sun, 14 Jun 2015 01:13:00 -0400
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <3BB36FC7-9212-42A1-A756-A66929C15D4F@gmail.com>
References: <20150612181153.GB19199@muck>
	<CAJN5wHVj=KfQ3_KYOKee9uq4LNPwQ7x5nGuKDHEMUqGF4LSDLg@mail.gmail.com>
	<CAFzgq-y5xBSXexVi0mJw_w89R2_AHJCgmj=gLN4CK_-YaO4-eg@mail.gmail.com>
	<3BB36FC7-9212-42A1-A756-A66929C15D4F@gmail.com>
Message-ID: <CAJHLa0Oh0wm_1SynFdCu+WkVD-gTGk0ZUNgQV0GVj0-3zL=zzw@mail.gmail.com>

On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:

> 2) BIP100 has direct economic consequences?and particularly for miners. It
> lends itself to much greater corruptibility.
>
>
What is the alternative?  Have a Chief Scientist or Technical Advisory
Board choose what is a proper fee, what is a proper level of
decentralization, a proper growth factor?


-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/82643684/attachment.html>

From elombrozo at gmail.com  Sun Jun 14 05:20:37 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sat, 13 Jun 2015 22:20:37 -0700
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <CAJHLa0Oh0wm_1SynFdCu+WkVD-gTGk0ZUNgQV0GVj0-3zL=zzw@mail.gmail.com>
References: <20150612181153.GB19199@muck>
	<CAJN5wHVj=KfQ3_KYOKee9uq4LNPwQ7x5nGuKDHEMUqGF4LSDLg@mail.gmail.com>
	<CAFzgq-y5xBSXexVi0mJw_w89R2_AHJCgmj=gLN4CK_-YaO4-eg@mail.gmail.com>
	<3BB36FC7-9212-42A1-A756-A66929C15D4F@gmail.com>
	<CAJHLa0Oh0wm_1SynFdCu+WkVD-gTGk0ZUNgQV0GVj0-3zL=zzw@mail.gmail.com>
Message-ID: <04527D50-0118-4E74-8226-3E29B29CC7D8@gmail.com>

I definitely think we need some voting system for metaconsensus?but if we?re going to seriously consider this we should look at the problem much more generally. Using false choices doesn?t really help, though ;)

- Eric Lombrozo


> On Jun 13, 2015, at 10:13 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:
> 
> On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo <elombrozo at gmail.com <mailto:elombrozo at gmail.com>> wrote:
> 2) BIP100 has direct economic consequences?and particularly for miners. It lends itself to much greater corruptibility.
> 
> 
> What is the alternative?  Have a Chief Scientist or Technical Advisory Board choose what is a proper fee, what is a proper level of decentralization, a proper growth factor?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/9edf8eb0/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/9edf8eb0/attachment.sig>

From jgarzik at bitpay.com  Sun Jun 14 05:36:45 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Sun, 14 Jun 2015 01:36:45 -0400
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <04527D50-0118-4E74-8226-3E29B29CC7D8@gmail.com>
References: <20150612181153.GB19199@muck>
	<CAJN5wHVj=KfQ3_KYOKee9uq4LNPwQ7x5nGuKDHEMUqGF4LSDLg@mail.gmail.com>
	<CAFzgq-y5xBSXexVi0mJw_w89R2_AHJCgmj=gLN4CK_-YaO4-eg@mail.gmail.com>
	<3BB36FC7-9212-42A1-A756-A66929C15D4F@gmail.com>
	<CAJHLa0Oh0wm_1SynFdCu+WkVD-gTGk0ZUNgQV0GVj0-3zL=zzw@mail.gmail.com>
	<04527D50-0118-4E74-8226-3E29B29CC7D8@gmail.com>
Message-ID: <CAJHLa0NrNqECvqhJWNX=rt3-h4U3jwFWoMCrcbyC6hUT5EqWbw@mail.gmail.com>

The choice is very real and on-point.  What should the block size limit
be?  Why?

There is a large consensus that it needs increasing.  To what?  By what
factor?

The size limit literally defines the fee market, the whole damn thing.  If
software high priests choose a size limit of 300k, space is scarce, fees
are bid high.  If software high priests choose a size limit of 32mb, space
is plentiful, fees are near zero.  Market actors take their signals
accordingly.  Some business models boom, some business models fail, as a
direct result of changing this unintentionally-added speedbump.  Different
users value adoption, decentralization etc. differently.

The size limit is an economic policy lever that needs to be transitioned
-away- from software and software developers, to the free market.

A simple, e.g. hard fork to 2MB or 4MB does not fix higher level governance
problems associated with actors lobbying developers, even if a cloistered
and vetted Technical Advisory Board as has been proposed.







On Sun, Jun 14, 2015 at 1:20 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:

> I definitely think we need some voting system for metaconsensus?but if
> we?re going to seriously consider this we should look at the problem much
> more generally. Using false choices doesn?t really help, though ;)
>
> - Eric Lombrozo
>
>
> On Jun 13, 2015, at 10:13 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:
>
> On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo <elombrozo at gmail.com>
> wrote:
>
>> 2) BIP100 has direct economic consequences?and particularly for miners.
>> It lends itself to much greater corruptibility.
>>
>>
> What is the alternative?  Have a Chief Scientist or Technical Advisory
> Board choose what is a proper fee, what is a proper level of
> decentralization, a proper growth factor?
>
>
>


-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/b1a4825d/attachment.html>

From voisine at gmail.com  Sun Jun 14 05:46:18 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Sat, 13 Jun 2015 22:46:18 -0700
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <557D02F4.7090001@riseup.net>
References: <COL402-EAS423BB81E15B25CD20B11B10CDBA0@phx.gbl>
	<557D02F4.7090001@riseup.net>
Message-ID: <CACq0ZD7FujgZ3huyu50+LG7FM2ayRoQz_6cukQMix6MDYpuC7g@mail.gmail.com>

>
> Yes, it does bother (some) people to see the consensus based system
> because of the difficulties that can be associated with implementing
> it.  But that's the way it is.  If you don't like consensus based
> systems (or decentralized, distributed systems) this is probably the
> wrong space for you.
>

If consensus must be reached to make any changes, that just means that
changes of anything more than trivial consequence simply can't be made.
Extreme bias toward the status-quo will only work if external factors
affecting the network also remain static.

Aaron Voisine
co-founder and CEO
breadwallet.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/7454d242/attachment.html>

From martin.schwarz at gmail.com  Sun Jun 14 06:55:45 2015
From: martin.schwarz at gmail.com (Martin Schwarz)
Date: Sun, 14 Jun 2015 08:55:45 +0200
Subject: [Bitcoin-development] Scaling Bitcoin with Subchains
In-Reply-To: <CAPg+sBjqQ66f1Rmhi9HOBYP5BDjBHvTNPpUN-y3o-KX8dXBMhg@mail.gmail.com>
References: <CAL8tG==LG=xC_DzOaghbGGKab4=UVpGLQV7781pU4wg+WnFdMg@mail.gmail.com>
	<CAPg+sBjqQ66f1Rmhi9HOBYP5BDjBHvTNPpUN-y3o-KX8dXBMhg@mail.gmail.com>
Message-ID: <557D2571.601@gmail.com>

Pieter,

Am 13.06.2015 um 16:39 schrieb Pieter Wuille:
> We can reasonably assume that different people's wallet will tend to be distributed uniformly over several sidechains to hold their transactions (if they're not, there is no scaling benefit anyway...). That means that for an average transaction, you will need a cross-chain transfer in order to get the money to the recipient (as their wallet will usually be associated to a chain that is different from your own).

I think we should set the right incentives to invalidate these assumptions. If the fees as well as the security guarantees
on the main chain are highest and fees are dropping with the distance from the main chain on each level of side chains,
wouldn't communities with many internal transactions create their own side chain with low fees? I'd expect geographic
as well as virtual communities to be forming enjoying cheap fees on their 'local' chains and expensive but comparabily rare
'long distance' fees. One would expect geographic chains (e.g. continents) as well as virtual ones (e.g. the Open Bazaar
users' chain) to form. To save fees, a typical user would maintain a wallet in each of her communities which are loaded
and drained with rare expensive transacations, whereas daily business with many transactions is done cheaply within
each community chain. So, indeed, I would argue that side chains equipped with the right cost incentives for cross-chain
transactions would lead to a scalable and efficiently self-organizing network of side chains.

best regards,
Martin



From dscvlt at gmail.com  Sun Jun 14 07:19:47 2015
From: dscvlt at gmail.com (Ashley Holman)
Date: Sun, 14 Jun 2015 17:19:47 +1000
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <20150612181153.GB19199@muck>
References: <20150612181153.GB19199@muck>
Message-ID: <CAOXABZoAqNa1dou0zPffAj+m0J78VTPoZxscK8yiZ4JXfTBBsw@mail.gmail.com>

Economic policy sounds like a dirty word in the context of Bitcoin, but as
Jeff Garzik said, choosing a block size cap is unfortunately an economic
policy that has to be chosen somehow.  Enabling users to incentivise the
voting process is an interesting tool to have in the toolbox, but I think
it would be sensible to first observe how the miner-only voting system
behaves on its own.

If, for example, the hashing majority tended to favour a move towards
centralization (big blocks), user preferences could potentially hasten this
move by further punishing marginal miners through reduced fees.  On the
other hand, if user preferences tended to oppose the preferences of miners,
then such a system might function well in keeping a balance between
usability and security (although it's not clear how this balance might
change over time as the block subsidy drops).

In short, I think it's wise to keep it simple and implement one mechanism
at a time.

On Sat, Jun 13, 2015 at 4:11 AM, Peter Todd <pete at petertodd.org> wrote:

> Jeff Garzik recently proposed that the upper blocksize limit be removed
> entirely, with a "soft" limit being enforced via miner vote, recorded by
> hashing power.
>
> This mechanism within the protocol for users to have any influence over
> the miner vote. We can add that back by providing a way for transactions
> themselves to set a flag determining whether or not they can be included
> in a block casting a specific vote.
>
> We can simplify Garzik's vote to say that one of the nVersion bits
> either votes for the blocksize to be increased, or decreased, by some
> fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a
> nVersion bit in transactions themselves, also voting for an increase or
> decrease. Transactions may only be included in blocks with an
> indentical vote, thus providing miners with a monetary incentive via
> fees to vote according to user wishes.
>
> Of course, to cast a "don't care" vote we can either define an
> additional bit, or sign the transaction with both versions. Equally we
> can even have different versions with different fees, broadcast via a
> mechanism such as replace-by-fee.
>
>
> See also John Dillon's proposal for proof-of-stake blocksize voting:
>
>
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg02323.html
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/253e3f4d/attachment.html>

From mats at henricson.se  Sun Jun 14 10:06:49 2015
From: mats at henricson.se (Mats Henricson)
Date: Sun, 14 Jun 2015 12:06:49 +0200
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <CAJHLa0NrNqECvqhJWNX=rt3-h4U3jwFWoMCrcbyC6hUT5EqWbw@mail.gmail.com>
References: <20150612181153.GB19199@muck>	<CAJN5wHVj=KfQ3_KYOKee9uq4LNPwQ7x5nGuKDHEMUqGF4LSDLg@mail.gmail.com>	<CAFzgq-y5xBSXexVi0mJw_w89R2_AHJCgmj=gLN4CK_-YaO4-eg@mail.gmail.com>	<3BB36FC7-9212-42A1-A756-A66929C15D4F@gmail.com>	<CAJHLa0Oh0wm_1SynFdCu+WkVD-gTGk0ZUNgQV0GVj0-3zL=zzw@mail.gmail.com>	<04527D50-0118-4E74-8226-3E29B29CC7D8@gmail.com>
	<CAJHLa0NrNqECvqhJWNX=rt3-h4U3jwFWoMCrcbyC6hUT5EqWbw@mail.gmail.com>
Message-ID: <557D5239.1070105@henricson.se>

Jeff,

with all due respect, but I've seen you saying this a few times
now, that this decision is oh so difficult and important.

But this is not helpful. We all know that. Even I.

Make a suggestion, or stay out of the debate!

Mats

On 06/14/2015 07:36 AM, Jeff Garzik wrote:
> The choice is very real and on-point.  What should the block size limit
> be?  Why?
> 
> There is a large consensus that it needs increasing.  To what?  By what
> factor?
> 
> The size limit literally defines the fee market, the whole damn thing.  If
> software high priests choose a size limit of 300k, space is scarce, fees
> are bid high.  If software high priests choose a size limit of 32mb, space
> is plentiful, fees are near zero.  Market actors take their signals
> accordingly.  Some business models boom, some business models fail, as a
> direct result of changing this unintentionally-added speedbump.  Different
> users value adoption, decentralization etc. differently.
> 
> The size limit is an economic policy lever that needs to be transitioned
> -away- from software and software developers, to the free market.
> 
> A simple, e.g. hard fork to 2MB or 4MB does not fix higher level governance
> problems associated with actors lobbying developers, even if a cloistered
> and vetted Technical Advisory Board as has been proposed.
> 
> 
> 
> 
> 
> 
> 
> On Sun, Jun 14, 2015 at 1:20 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> 
>> I definitely think we need some voting system for metaconsensus?but if
>> we?re going to seriously consider this we should look at the problem much
>> more generally. Using false choices doesn?t really help, though ;)
>>
>> - Eric Lombrozo
>>
>>
>> On Jun 13, 2015, at 10:13 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:
>>
>> On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo <elombrozo at gmail.com>
>> wrote:
>>
>>> 2) BIP100 has direct economic consequences?and particularly for miners.
>>> It lends itself to much greater corruptibility.
>>>
>>>
>> What is the alternative?  Have a Chief Scientist or Technical Advisory
>> Board choose what is a proper fee, what is a proper level of
>> decentralization, a proper growth factor?
>>
>>
>>
> 
> 
> 
> 
> ------------------------------------------------------------------------------
> 
> 
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From wtogami at gmail.com  Sun Jun 14 10:12:40 2015
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Sun, 14 Jun 2015 00:12:40 -1000
Subject: [Bitcoin-development] Proposal: Move Bitcoin Dev List to a Neutral
	Competent Entity
Message-ID: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>

Discomfort with Sourceforge

For a while now people have been expressing concern about Sourceforge's
continued hosting of the bitcoin-dev mailing list.  Downloads were moved
completely to bitcoin.org after the Sept 2014 hacking incident of the SF
project account.  The company's behavior and perceived stability have been
growing to be increasingly questionable.

http://www.theregister.co.uk/2013/11/08/gimp_dumps_sourceforge_over_dodgy_ads_and_installer

November 2013: GIMP flees SourceForge over dodgy ads and installer

https://lwn.net/Articles/646118/

May 28th, 2015: SourceForge replacing GIMP Windows downloads

http://seclists.org/nmap-dev/2015/q2/194

June 3rd, 2015: Sourceforge hijacked nmap's old site and downloads.

When this topic came up over the past two years, it seemed that most people
agreed it would be a good idea to move.  Someone always suggests Google
Groups as the replacement host.  Google is quickly shot down as too
controversial in this community, and it becomes an even more difficult
question as to who else should host it.  Realizing this is not so simple,
discussion then dies off until the next time somebody brings it up.

http://sourceforge.net/p/bitcoin/mailman/bitcoin-development/thread/1943127.DBnVxmfOIh%401337h4x0r/#msg34192607

Somebody brought it up again this past week.

It seems logical that an open discussion list is not a big deal to continue
to be hosted on Sourceforge, as there isn?t much they could do to screw it
up.  I personally think moving it away now would be seen as a gesture that
we do not consider their behavior to be acceptable.  There are also some
benefits in being hosted elsewhere, at an entity able to professionally
maintain their infrastructure while also being neutral to the content.

Proposal: Move Bitcoin Dev List to a Neutral Competent Entity

Bitcoin is a global infrastructure development project where it would be
politically awkward for any of the existing Bitcoin companies or orgs to
host due to questions it would raise about perceived political control.
For example, consider a bizarro parallel universe where MtGox was the
inventor of Bitcoin, where they hosted its development infrastructure and
dev list under their own name.  Even if what they published was 100%
technically and ideologically equivalent to the Bitcoin we know in our
dimension, most people wouldn't have trusted it merely due to appearances
and it would have easily gone nowhere.

I had a similar thought process last week when sidechains code was
approaching release. Sidechains, like Bitcoin itself, are intended to be a
generic piece of infrastructure (like ethernet?) that anyone can build upon
and use.  We thought about Google Groups or existing orgs that already host
various open source infrastructure discussion lists like the IETF or the
Linux Foundation.  Google is too controversial in this community, and the
IETF is seen as possibly too politically fractured.  The Linux Foundation
hosts a bunch of infrastructure lists
<https://lists.linuxfoundation.org/mailman/listinfo> and it seems that
nobody in the Open Source industry considers them to be particularly
objectionable.  I talked with LF about the idea of hosting generic
Bitcoin-related infrastructure development lists.  They agreed as OSS
infrastructure dev is already within their charter, so early this week
sidechains-dev list began hosting there.

>From the perspective of our community, for bitcoin-dev it seems like a
great fit.  Why?  While they are interested in supporting general open
source development, the LF has literally zero stake in this.  In addition
to neutrality, they seem to be suitable as a competent host.  They have
full-time sysadmins maintaining their infrastructure including the Mailman
server. They are soon upgrading to Mailman 3 <http://wiki.list.org/Mailman3>,
which means mailing lists would benefit from the improved archive browser.
I am not personally familiar with HyperKitty, but the point here is they
are a stable non-profit entity who will competently maintain and improve
things like their Mailman deployment (a huge improvement over the stagnant
Sourceforge).  It seems that LF would be competent, neutral place to host
dev lists for the long-term.

To be clear, this proposal is only about hosting the discussion list.  The
LF would have no control over the Bitcoin Project, as no single entity
should.

Proposed Action Plan


   -

   Discuss this openly within this community.  Above is one example of a
   great neutral and competent host.  If the technical leaders here can agree
   to move to a particular neutral host then we do it.
   -

   Migration: The current list admins become the new list admins.  We
   import the entire list archive into the new host's archives for user
   convenience.
   -

   http://sourceforge.net/p/bitcoin/mailman/  Kill bitcoin-list and
   bitcoin-test.  Very few people actually use it.  Actually, let's delete the
   entire Bitcoin Sourceforge project as its continued existence serves no
   purpose and it only confuses people who find it.  By deletion, nobody has
   to monitor it for a repeat of the Sept 2014 hacking incident
   <https://www.phoronix.com/scan.php?page=news_item&px=MTc4Mzg> or GIMP-type
   hijacking <https://lwn.net/Articles/646118/>?
   -

   The toughest question would be the appropriateness of auto-importing the
   subscriber list to another list server, as mass imports have a tendency to
   upset people.


Thoughts?

Warren Togami
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/e399d028/attachment.html>

From benjamin.l.cordes at gmail.com  Sun Jun 14 10:34:01 2015
From: benjamin.l.cordes at gmail.com (Benjamin)
Date: Sun, 14 Jun 2015 12:34:01 +0200
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <557D5239.1070105@henricson.se>
References: <20150612181153.GB19199@muck>
	<CAJN5wHVj=KfQ3_KYOKee9uq4LNPwQ7x5nGuKDHEMUqGF4LSDLg@mail.gmail.com>
	<CAFzgq-y5xBSXexVi0mJw_w89R2_AHJCgmj=gLN4CK_-YaO4-eg@mail.gmail.com>
	<3BB36FC7-9212-42A1-A756-A66929C15D4F@gmail.com>
	<CAJHLa0Oh0wm_1SynFdCu+WkVD-gTGk0ZUNgQV0GVj0-3zL=zzw@mail.gmail.com>
	<04527D50-0118-4E74-8226-3E29B29CC7D8@gmail.com>
	<CAJHLa0NrNqECvqhJWNX=rt3-h4U3jwFWoMCrcbyC6hUT5EqWbw@mail.gmail.com>
	<557D5239.1070105@henricson.se>
Message-ID: <CAOoPuRaaA2Bi3RJCpi-vF6odSbTRwfOUi+x7csS8VQYkoWN7bw@mail.gmail.com>

"The size limit is an economic policy lever that needs to be
transitioned -away- from software and software developers, to the free
market."

Exactly right. Bitcoin does not have a free market for fee though, and
literally all the discussion so far has neglected some fundamental
aspect of this, as you described. It's not at all a "technical" or
"engineering" decision. It's the question of how to potentially
re-design a fundamental part of Bitcoin, and the proposals so far
don't address this. What is the price of the scarce resource of the
blockchain and the mechanism to decide on price, once the subsidy runs
out?

On Sun, Jun 14, 2015 at 12:06 PM, Mats Henricson <mats at henricson.se> wrote:
> Jeff,
>
> with all due respect, but I've seen you saying this a few times
> now, that this decision is oh so difficult and important.
>
> But this is not helpful. We all know that. Even I.
>
> Make a suggestion, or stay out of the debate!
>
> Mats
>
> On 06/14/2015 07:36 AM, Jeff Garzik wrote:
>> The choice is very real and on-point.  What should the block size limit
>> be?  Why?
>>
>> There is a large consensus that it needs increasing.  To what?  By what
>> factor?
>>
>> The size limit literally defines the fee market, the whole damn thing.  If
>> software high priests choose a size limit of 300k, space is scarce, fees
>> are bid high.  If software high priests choose a size limit of 32mb, space
>> is plentiful, fees are near zero.  Market actors take their signals
>> accordingly.  Some business models boom, some business models fail, as a
>> direct result of changing this unintentionally-added speedbump.  Different
>> users value adoption, decentralization etc. differently.
>>
>> The size limit is an economic policy lever that needs to be transitioned
>> -away- from software and software developers, to the free market.
>>
>> A simple, e.g. hard fork to 2MB or 4MB does not fix higher level governance
>> problems associated with actors lobbying developers, even if a cloistered
>> and vetted Technical Advisory Board as has been proposed.
>>
>>
>>
>>
>>
>>
>>
>> On Sun, Jun 14, 2015 at 1:20 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>>
>>> I definitely think we need some voting system for metaconsensus?but if
>>> we?re going to seriously consider this we should look at the problem much
>>> more generally. Using false choices doesn?t really help, though ;)
>>>
>>> - Eric Lombrozo
>>>
>>>
>>> On Jun 13, 2015, at 10:13 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:
>>>
>>> On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo <elombrozo at gmail.com>
>>> wrote:
>>>
>>>> 2) BIP100 has direct economic consequences?and particularly for miners.
>>>> It lends itself to much greater corruptibility.
>>>>
>>>>
>>> What is the alternative?  Have a Chief Scientist or Technical Advisory
>>> Board choose what is a proper fee, what is a proper level of
>>> decentralization, a proper growth factor?
>>>
>>>
>>>
>>
>>
>>
>>
>> ------------------------------------------------------------------------------
>>
>>
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From jgarzik at bitpay.com  Sun Jun 14 14:42:17 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Sun, 14 Jun 2015 10:42:17 -0400
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <557D5239.1070105@henricson.se>
References: <20150612181153.GB19199@muck>
	<CAJN5wHVj=KfQ3_KYOKee9uq4LNPwQ7x5nGuKDHEMUqGF4LSDLg@mail.gmail.com>
	<CAFzgq-y5xBSXexVi0mJw_w89R2_AHJCgmj=gLN4CK_-YaO4-eg@mail.gmail.com>
	<3BB36FC7-9212-42A1-A756-A66929C15D4F@gmail.com>
	<CAJHLa0Oh0wm_1SynFdCu+WkVD-gTGk0ZUNgQV0GVj0-3zL=zzw@mail.gmail.com>
	<04527D50-0118-4E74-8226-3E29B29CC7D8@gmail.com>
	<CAJHLa0NrNqECvqhJWNX=rt3-h4U3jwFWoMCrcbyC6hUT5EqWbw@mail.gmail.com>
	<557D5239.1070105@henricson.se>
Message-ID: <CAJHLa0OVJq-UqL5ecdEoXgy84WV40=Ympefnzn15DBhVBjCzuw@mail.gmail.com>

Since you missed it, here is the suggestion again:
http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf


On Sun, Jun 14, 2015 at 6:06 AM, Mats Henricson <mats at henricson.se> wrote:

> Jeff,
>
> with all due respect, but I've seen you saying this a few times
> now, that this decision is oh so difficult and important.
>
> But this is not helpful. We all know that. Even I.
>
> Make a suggestion, or stay out of the debate!
>
> Mats
>
> On 06/14/2015 07:36 AM, Jeff Garzik wrote:
> > The choice is very real and on-point.  What should the block size limit
> > be?  Why?
> >
> > There is a large consensus that it needs increasing.  To what?  By what
> > factor?
> >
> > The size limit literally defines the fee market, the whole damn thing.
> If
> > software high priests choose a size limit of 300k, space is scarce, fees
> > are bid high.  If software high priests choose a size limit of 32mb,
> space
> > is plentiful, fees are near zero.  Market actors take their signals
> > accordingly.  Some business models boom, some business models fail, as a
> > direct result of changing this unintentionally-added speedbump.
> Different
> > users value adoption, decentralization etc. differently.
> >
> > The size limit is an economic policy lever that needs to be transitioned
> > -away- from software and software developers, to the free market.
> >
> > A simple, e.g. hard fork to 2MB or 4MB does not fix higher level
> governance
> > problems associated with actors lobbying developers, even if a cloistered
> > and vetted Technical Advisory Board as has been proposed.
> >
> >
> >
> >
> >
> >
> >
> > On Sun, Jun 14, 2015 at 1:20 AM, Eric Lombrozo <elombrozo at gmail.com>
> wrote:
> >
> >> I definitely think we need some voting system for metaconsensus?but if
> >> we?re going to seriously consider this we should look at the problem
> much
> >> more generally. Using false choices doesn?t really help, though ;)
> >>
> >> - Eric Lombrozo
> >>
> >>
> >> On Jun 13, 2015, at 10:13 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:
> >>
> >> On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo <elombrozo at gmail.com>
> >> wrote:
> >>
> >>> 2) BIP100 has direct economic consequences?and particularly for miners.
> >>> It lends itself to much greater corruptibility.
> >>>
> >>>
> >> What is the alternative?  Have a Chief Scientist or Technical Advisory
> >> Board choose what is a proper fee, what is a proper level of
> >> decentralization, a proper growth factor?
> >>
> >>
> >>
> >
> >
> >
> >
> >
> ------------------------------------------------------------------------------
> >
> >
> >
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/073f0190/attachment.html>

From jgarzik at bitpay.com  Sun Jun 14 15:07:06 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Sun, 14 Jun 2015 11:07:06 -0400
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <CAOoPuRaaA2Bi3RJCpi-vF6odSbTRwfOUi+x7csS8VQYkoWN7bw@mail.gmail.com>
References: <20150612181153.GB19199@muck>
	<CAJN5wHVj=KfQ3_KYOKee9uq4LNPwQ7x5nGuKDHEMUqGF4LSDLg@mail.gmail.com>
	<CAFzgq-y5xBSXexVi0mJw_w89R2_AHJCgmj=gLN4CK_-YaO4-eg@mail.gmail.com>
	<3BB36FC7-9212-42A1-A756-A66929C15D4F@gmail.com>
	<CAJHLa0Oh0wm_1SynFdCu+WkVD-gTGk0ZUNgQV0GVj0-3zL=zzw@mail.gmail.com>
	<04527D50-0118-4E74-8226-3E29B29CC7D8@gmail.com>
	<CAJHLa0NrNqECvqhJWNX=rt3-h4U3jwFWoMCrcbyC6hUT5EqWbw@mail.gmail.com>
	<557D5239.1070105@henricson.se>
	<CAOoPuRaaA2Bi3RJCpi-vF6odSbTRwfOUi+x7csS8VQYkoWN7bw@mail.gmail.com>
Message-ID: <CAJHLa0MA6hoquewGSTcWNabpk5OycCpFuOOykDObEF-1NRXqow@mail.gmail.com>

Exactly -- both block size proponents and block size change conservatives
seem to be glossing over this aspect - much to my dismay.

Choosing the size limit is choosing the size of a scarce resource.  By fiat.

It is wrong to think that a "technical consensus" can choose what is best
here.

The block size limit defines the scope of a resource for which all fee
market actors bid.  That, in turn, defines who is in the fee market and how
they behave, what market choices are made.

It doesn't matter how or why the limit was originally enacted, what Satoshi
meant to do.  What matters, economically, is what is.  What the software
and our $3B economy & market knows and sees today.  (I think some block
size change proponents miss this!)

The solution lies in transitioning this size limit to the free market.  In
the end, the users must choose their desired level of growth,
decentralization, etc.  We cannot rely on some dev's idea of the proper
level of fee, proper level of growth, proper level of decentralization.

And IMO, a "floating limit with training wheels" is better and stronger for
bitcoin's health from a governance, user choice and free market perspective
than simply "hard fork to 2MB, come back again in 6 months."







On Sun, Jun 14, 2015 at 6:34 AM, Benjamin <benjamin.l.cordes at gmail.com>
wrote:

> "The size limit is an economic policy lever that needs to be
> transitioned -away- from software and software developers, to the free
> market."
>
> Exactly right. Bitcoin does not have a free market for fee though, and
> literally all the discussion so far has neglected some fundamental
> aspect of this, as you described. It's not at all a "technical" or
> "engineering" decision. It's the question of how to potentially
> re-design a fundamental part of Bitcoin, and the proposals so far
> don't address this. What is the price of the scarce resource of the
> blockchain and the mechanism to decide on price, once the subsidy runs
> out?
>
> On Sun, Jun 14, 2015 at 12:06 PM, Mats Henricson <mats at henricson.se>
> wrote:
> > Jeff,
> >
> > with all due respect, but I've seen you saying this a few times
> > now, that this decision is oh so difficult and important.
> >
> > But this is not helpful. We all know that. Even I.
> >
> > Make a suggestion, or stay out of the debate!
> >
> > Mats
> >
> > On 06/14/2015 07:36 AM, Jeff Garzik wrote:
> >> The choice is very real and on-point.  What should the block size limit
> >> be?  Why?
> >>
> >> There is a large consensus that it needs increasing.  To what?  By what
> >> factor?
> >>
> >> The size limit literally defines the fee market, the whole damn thing.
> If
> >> software high priests choose a size limit of 300k, space is scarce, fees
> >> are bid high.  If software high priests choose a size limit of 32mb,
> space
> >> is plentiful, fees are near zero.  Market actors take their signals
> >> accordingly.  Some business models boom, some business models fail, as a
> >> direct result of changing this unintentionally-added speedbump.
> Different
> >> users value adoption, decentralization etc. differently.
> >>
> >> The size limit is an economic policy lever that needs to be transitioned
> >> -away- from software and software developers, to the free market.
> >>
> >> A simple, e.g. hard fork to 2MB or 4MB does not fix higher level
> governance
> >> problems associated with actors lobbying developers, even if a
> cloistered
> >> and vetted Technical Advisory Board as has been proposed.
> >>
> >>
> >>
> >>
> >>
> >>
> >>
> >> On Sun, Jun 14, 2015 at 1:20 AM, Eric Lombrozo <elombrozo at gmail.com>
> wrote:
> >>
> >>> I definitely think we need some voting system for metaconsensus?but if
> >>> we?re going to seriously consider this we should look at the problem
> much
> >>> more generally. Using false choices doesn?t really help, though ;)
> >>>
> >>> - Eric Lombrozo
> >>>
> >>>
> >>> On Jun 13, 2015, at 10:13 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:
> >>>
> >>> On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo <elombrozo at gmail.com>
> >>> wrote:
> >>>
> >>>> 2) BIP100 has direct economic consequences?and particularly for
> miners.
> >>>> It lends itself to much greater corruptibility.
> >>>>
> >>>>
> >>> What is the alternative?  Have a Chief Scientist or Technical Advisory
> >>> Board choose what is a proper fee, what is a proper level of
> >>> decentralization, a proper growth factor?
> >>>
> >>>
> >>>
> >>
> >>
> >>
> >>
> >>
> ------------------------------------------------------------------------------
> >>
> >>
> >>
> >> _______________________________________________
> >> Bitcoin-development mailing list
> >> Bitcoin-development at lists.sourceforge.net
> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >>
> >
> >
> ------------------------------------------------------------------------------
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/48bfb14a/attachment.html>

From jgarzik at bitpay.com  Sun Jun 14 15:15:18 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Sun, 14 Jun 2015 11:15:18 -0400
Subject: [Bitcoin-development] Proposal: Move Bitcoin Dev List to a
 Neutral Competent Entity
In-Reply-To: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>
References: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>
Message-ID: <CAJHLa0OOnYMuA-8qfHafw5D0zGw_U06PZaAKS2j=Av_KUhgt-A@mail.gmail.com>

* ACK on moving away from SourceForge mailing lists - though only once a
community-welcomed replacement is up and running

* ACK on using LF as a mailing infrastructure provider

* Research secure mailing list models, for bitcoin-security.  The list is
not ultra high security - we all use PGP for that - but it would perhaps be
nice to find some spiffy cryptosystem where mailing list participants
individually hold keys & therefore access.


On Sun, Jun 14, 2015 at 6:12 AM, Warren Togami Jr. <wtogami at gmail.com>
wrote:

> Discomfort with Sourceforge
>
> For a while now people have been expressing concern about Sourceforge's
> continued hosting of the bitcoin-dev mailing list.  Downloads were moved
> completely to bitcoin.org after the Sept 2014 hacking incident of the SF
> project account.  The company's behavior and perceived stability have been
> growing to be increasingly questionable.
>
>
> http://www.theregister.co.uk/2013/11/08/gimp_dumps_sourceforge_over_dodgy_ads_and_installer
>
> November 2013: GIMP flees SourceForge over dodgy ads and installer
>
> https://lwn.net/Articles/646118/
>
> May 28th, 2015: SourceForge replacing GIMP Windows downloads
>
> http://seclists.org/nmap-dev/2015/q2/194
>
> June 3rd, 2015: Sourceforge hijacked nmap's old site and downloads.
>
> When this topic came up over the past two years, it seemed that most
> people agreed it would be a good idea to move.  Someone always suggests
> Google Groups as the replacement host.  Google is quickly shot down as too
> controversial in this community, and it becomes an even more difficult
> question as to who else should host it.  Realizing this is not so simple,
> discussion then dies off until the next time somebody brings it up.
>
>
> http://sourceforge.net/p/bitcoin/mailman/bitcoin-development/thread/1943127.DBnVxmfOIh%401337h4x0r/#msg34192607
>
> Somebody brought it up again this past week.
>
> It seems logical that an open discussion list is not a big deal to
> continue to be hosted on Sourceforge, as there isn?t much they could do to
> screw it up.  I personally think moving it away now would be seen as a
> gesture that we do not consider their behavior to be acceptable.  There are
> also some benefits in being hosted elsewhere, at an entity able to
> professionally maintain their infrastructure while also being neutral to
> the content.
>
> Proposal: Move Bitcoin Dev List to a Neutral Competent Entity
>
> Bitcoin is a global infrastructure development project where it would be
> politically awkward for any of the existing Bitcoin companies or orgs to
> host due to questions it would raise about perceived political control.
> For example, consider a bizarro parallel universe where MtGox was the
> inventor of Bitcoin, where they hosted its development infrastructure and
> dev list under their own name.  Even if what they published was 100%
> technically and ideologically equivalent to the Bitcoin we know in our
> dimension, most people wouldn't have trusted it merely due to appearances
> and it would have easily gone nowhere.
>
> I had a similar thought process last week when sidechains code was
> approaching release. Sidechains, like Bitcoin itself, are intended to be a
> generic piece of infrastructure (like ethernet?) that anyone can build upon
> and use.  We thought about Google Groups or existing orgs that already host
> various open source infrastructure discussion lists like the IETF or the
> Linux Foundation.  Google is too controversial in this community, and the
> IETF is seen as possibly too politically fractured.  The Linux Foundation
> hosts a bunch of infrastructure lists
> <https://lists.linuxfoundation.org/mailman/listinfo> and it seems that
> nobody in the Open Source industry considers them to be particularly
> objectionable.  I talked with LF about the idea of hosting generic
> Bitcoin-related infrastructure development lists.  They agreed as OSS
> infrastructure dev is already within their charter, so early this week
> sidechains-dev list began hosting there.
>
> From the perspective of our community, for bitcoin-dev it seems like a
> great fit.  Why?  While they are interested in supporting general open
> source development, the LF has literally zero stake in this.  In addition
> to neutrality, they seem to be suitable as a competent host.  They have
> full-time sysadmins maintaining their infrastructure including the Mailman
> server. They are soon upgrading to Mailman 3
> <http://wiki.list.org/Mailman3>, which means mailing lists would benefit
> from the improved archive browser.  I am not personally familiar with
> HyperKitty, but the point here is they are a stable non-profit entity who
> will competently maintain and improve things like their Mailman deployment
> (a huge improvement over the stagnant Sourceforge).  It seems that LF would
> be competent, neutral place to host dev lists for the long-term.
>
> To be clear, this proposal is only about hosting the discussion list.  The
> LF would have no control over the Bitcoin Project, as no single entity
> should.
>
> Proposed Action Plan
>
>
>    -
>
>    Discuss this openly within this community.  Above is one example of a
>    great neutral and competent host.  If the technical leaders here can agree
>    to move to a particular neutral host then we do it.
>    -
>
>    Migration: The current list admins become the new list admins.  We
>    import the entire list archive into the new host's archives for user
>    convenience.
>    -
>
>    http://sourceforge.net/p/bitcoin/mailman/  Kill bitcoin-list and
>    bitcoin-test.  Very few people actually use it.  Actually, let's delete the
>    entire Bitcoin Sourceforge project as its continued existence serves no
>    purpose and it only confuses people who find it.  By deletion, nobody has
>    to monitor it for a repeat of the Sept 2014 hacking incident
>    <https://www.phoronix.com/scan.php?page=news_item&px=MTc4Mzg> or GIMP-type
>    hijacking <https://lwn.net/Articles/646118/>?
>    -
>
>    The toughest question would be the appropriateness of auto-importing
>    the subscriber list to another list server, as mass imports have a tendency
>    to upset people.
>
>
> Thoughts?
>
> Warren Togami
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>


-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/76fad066/attachment.html>

From kristovatlas.lists at gmail.com  Sun Jun 14 16:29:37 2015
From: kristovatlas.lists at gmail.com (Kristov Atlas)
Date: Sun, 14 Jun 2015 12:29:37 -0400
Subject: [Bitcoin-development] Lexicographical Indexing of Transaction
 Inputs and Outputs
In-Reply-To: <CAGH37SL06R+=pfqY1aHE1XpE7k6jtJSv+CsNiJ3hec6TZvsGAA@mail.gmail.com>
References: <CAGH37SK0k1YUvadetyHcBGjzW+OHNFRmRwqsUDeHBGejUacigQ@mail.gmail.com>
	<44BE16F9-AB24-4A8E-BC7F-03A6C590FCE7@gmail.com>
	<CAGH37SL3TA7BXd3Y+4F1Fd5N3ZW+LRLvkfppPsPn61ZVbZJOnQ@mail.gmail.com>
	<CAGH37SLCc-aEG0t0H7fsUZOv_h+Fiw4xoonmfwNaFWBin_7HcQ@mail.gmail.com>
	<20150607023523.GB1570@savin.petertodd.org>
	<CAGH37SLyG-g54-gGU5ZrmQsiogOqWNW1iiayHii1nWiWh+Nk=w@mail.gmail.com>
	<20150609201436.GD28093@muck>
	<CAGH37SL06R+=pfqY1aHE1XpE7k6jtJSv+CsNiJ3hec6TZvsGAA@mail.gmail.com>
Message-ID: <CAGH37S+_6XXpKM5A7FYVtEjABmZ9w_j68Ler8EM7U5=ZXaxouQ@mail.gmail.com>

Update: BIP 79 has been implemented in the latest release of Electrum,
v2.3.2:

https://github.com/spesmilo/electrum/blob/master/RELEASE-NOTES

-Kristov

On Fri, Jun 12, 2015 at 5:36 PM, Kristov Atlas <kristovatlas.lists at gmail.com
> wrote:

> Since everyone's busy, I went ahead and made a pull request to add this as
> an informational BIP 79 to the bips directory.
>
> https://github.com/bitcoin/bips/pull/157
>
> Regards,
> Kristov
>
> On Tue, Jun 9, 2015 at 4:14 PM, Peter Todd <pete at petertodd.org> wrote:
>
>> On Mon, Jun 08, 2015 at 06:53:54PM -0400, Kristov Atlas wrote:
>>
>> Two other things:
>>
>>
>>
>> > On Sat, Jun 6, 2015 at 10:35 PM, Peter Todd <pete at petertodd.org> wrote:
>> >
>> > > Why mention SIGHASH_SINGLE at all? Its use-case is highly specialized
>> > > protocols; you haven't taken into account the needs of those
>> protocols.
>> > > For BIP's it's better to stick to the use-cases where the need is
>> clear
>> > > and there exists running code that to speculate too much on future
>> uses.
>> > > With signature hashing in particular it's not yet clear at all what
>> > > future OP_CHECKSIG's will look like, let alone the various ways people
>> > > will use sighash for smart contract type stuff.
>> > >
>> > > You'd be better off presenting the BIP in terms of a generic statement
>> > > that "except when otherwise prevented by advanced signature hashing
>> > > requirements, wallet software must emit transactions sorted according
>> to
>> > > the following" You can then specify the two common cases in detail:
>> > >
>> > > 1) SIGHASH_ALL: input and output order signed, so sort appropriately
>> > >
>> > > 2) SIGHASH_ANYONECANPAY: input order not signed, so software should
>> emit
>> > >    transactions sorted, recognising that the actual mined order may be
>> > >    changed.
>> > >
>> >
>> > That makes sense. I updated the language as follows -- your thoughts?
>> Keep
>> > in mind this BIP is informational, and so people are free to ignore it.
>> >
>> > "Applicability: This BIP applies to all transactions of signature hash
>> type
>> > SIGHASH_ALL. Additionally,  software compliant with this BIP that allows
>> > later parties to update the transaction (e.g. using signature hash types
>> > SIGHASH_NONE or a variant of SIGHASH_ANYONECANPAY) should emit
>> > lexicographically sorted inputs and outputs, although they may later be
>> > modified. Transactions that have index dependencies between
>> transactions or
>> > within the same transaction are covered under the section of this BIP
>> > entitled ?Handling Input/Output Dependencies.?"
>>
>> I'd keep it even simpler than that, and just say for now that such
>> use-cases are out of the scope of this BIP, however those standards
>> should come up with some kind of deterministic standard that meets the
>> needs of the protocol. Again, there's a bunch of possible use-cases here
>> and we just can't predict them; focus on the fact that the *spirit* of
>> what this BIP is about is applicable and future standards should be
>> developed.
>>
>> So I'd change the "Applicability" section to:
>>
>> This BIP applies to all transactions where the order of inputs and
>> outputs does not matter. This is true for the vast majority of
>> transactions as they simply move funds from one place to another.
>>
>> Currently this generally refers to transactions where SIGHASH_ALL is
>> used, in which case the signatures commit to the exact order of input
>> and outputs. In the case where SIGHASH_ANYONECANPAY and/or SIGHASH_NONE
>> has been used (e.g. crowdfunds) the order of inputs and/or outputs may
>> not be signed, however compliant software should still emit transactions
>> with sorted inputs and outputs, even though they may later be modified
>> by others.
>>
>> In the event that future protocol upgrades introduce new signature hash
>> types, compliant software should apply the lexographic ordering
>> principle analogously.
>>
>> While out of scope of this BIP, protocols that do require a specified
>> order of inputs/outputs (e.g. due to use of SIGHASH_SINGLE) should
>> consider the goals of this BIP and how best to adapt them to the
>> specifics needs of those protocols.
>>
>>
>> Then remove the "handling input/output deps" section.
>>
>> > > Do you have a patch implementing deterministic tx ordering for Bitcoin
>> > > Core yet?
>> > >
>> >
>> > I'm not a frequent C programmer, so I'd prefer to let someone else take
>> > care of it, as a frequent committer of code would do a faster and more
>> > stylistically consistent job of it. If no one else will, however, I
>> will.
>>
>>
>>
>> re: the actual ordering algorithm, having txids be sorted by with the
>> hex-based algorithm is odd. I'd simply say they're sorted as
>> little-endian byte arrays, or in other words, with the bytearr_cmp()
>> function, but with the order of bytes reversed. You also should say that
>> we're doing that to make the user see them in visually sorted order to
>> match expectations because txids are displayed as little-endian.
>>
>> For outputs, don't say "locking script", say "scriptPubKey". Secondly,
>> scriptPubKeys are not in little-endian representation - they have no
>> endianness to them. With output amount, there's no need to say that
>> they're unsigned or little-endian satoshies, just say they're sorted
>> largest/smallest amount first.
>>
>> "For the sake of efficiency, amounts will be considered first for
>> sorting, since they contain fewer bytes of information (7 bytes)
>> compared to a standard P2PKH locking script (800 bytes)." <- where the
>> heck did you get these numbers from? Amounts are 8 bytes, and P2PKH
>> scriptPubKeys are 25 bytes.
>>
>>
>> "Backwards Compatibility" <- I'd just remove this whole section; we're
>> unlikely to make this an IsStandard() rule anytime soon.
>>
>> --
>> 'peter'[:-1]@petertodd.org
>> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/5a268295/attachment.html>

From pete at petertodd.org  Sun Jun 14 16:56:36 2015
From: pete at petertodd.org (Peter Todd)
Date: Sun, 14 Jun 2015 17:56:36 +0100
Subject: [Bitcoin-development] Proposal: Move Bitcoin Dev List to a
 Neutral Competent Entity
In-Reply-To: <CAJHLa0OOnYMuA-8qfHafw5D0zGw_U06PZaAKS2j=Av_KUhgt-A@mail.gmail.com>
References: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>
	<CAJHLa0OOnYMuA-8qfHafw5D0zGw_U06PZaAKS2j=Av_KUhgt-A@mail.gmail.com>
Message-ID: <20150614165636.GA4067@muck>

On Sun, Jun 14, 2015 at 11:15:18AM -0400, Jeff Garzik wrote:
> * ACK on moving away from SourceForge mailing lists - though only once a
> community-welcomed replacement is up and running
> 
> * ACK on using LF as a mailing infrastructure provider
> 
> * Research secure mailing list models, for bitcoin-security.  The list is
> not ultra high security - we all use PGP for that - but it would perhaps be
> nice to find some spiffy cryptosystem where mailing list participants
> individually hold keys & therefore access.

ACK to the above as well.

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/03d6286e/attachment.sig>

From jnick at student.ethz.ch  Sun Jun 14 17:45:48 2015
From: jnick at student.ethz.ch (Jonas Nick)
Date: Sun, 14 Jun 2015 19:45:48 +0200
Subject: [Bitcoin-development] Mining centralization pressure from
 non-uniform propagation speed
In-Reply-To: <CAPg+sBi5fYHGLv4wtWbWE7jov8CX=q9UX=vhxDVepG6JfX30+g@mail.gmail.com>
References: <CAPg+sBi5fYHGLv4wtWbWE7jov8CX=q9UX=vhxDVepG6JfX30+g@mail.gmail.com>
Message-ID: <557DBDCC.5040106@student.ethz.ch>

Hi all,

it's a very useful approach to also model fees and you came up with an interesting scenario.
Assuming that you meant that the groups are only connected with a single link,
I've recreated the scenario with Gavin's simulation and got similar results.
The group with the large hashrate does profit overall, but the miners which are not directly
connected to the small group loose:
https://github.com/jonasnick/bitcoin_miningsim/blob/master/analysis/README.md#two-groups-well-connected-internally-but-connected-to-each-other-with-a-single-poor-connection

Moreover, it's important to note that this is not an equilibrium because these miners are better off when they create their own
connections to the small group (see the plot below the other one).
This means that your scenario is not the result of a cartel but the result of a long-term network partition.
When assuming partitions, there are quite a few scenarios where big miners can profit from creating big
blocks. For example, one 40% miner and two groups of three 10% miners, where both groups are connected to the big
miner but they are not connected to each other.
https://github.com/jonasnick/bitcoin_miningsim/blob/master/analysis/README.md#one-big-miner-and-two-partitioned-groups

Best,
Jonas


On 06/12/2015 06:51 PM, Pieter Wuille wrote:
> Hello all,
>
> I've created a simulator for Bitcoin mining which goes a bit further than
> the one Gavin used for his blog post a while ago. The main difference is
> support for links with different latency and bandwidth, because of the
> clustered configuration described below. In addition, it supports different
> block sizes, takes fees into account, does difficulty adjustments, and
> takes processing and mining delays into account. It also simulates longer
> periods of time, and averages the result of many simulations running in
> parallel until the variance on the result is low enough.
>
> The code is here: https://github.com/sipa/bitcoin-net-simul
>
> The configuration used in the code right now simulates two groups of miners
> (one 80%=25%+25%+30%, one 20%=5%+5%+5%+5%), which are well-connected
> internally, but are only connected to each other through a slow 2 Mbit/s
> link.
>
> Here are some results.
>
> This shows how the group of smaller miners loses around 8% of their
> relative income (if they create larger blocks, their loss percentage goes
> up slightly further):
>
> Configuration:
>   * Miner group 0: 80.000000% hashrate, blocksize 20000000.000000
>   * Miner group 1: 20.000000% hashrate, blocksize 1000000.000000
>   * Expected average block size: 16200000.000000
>   * Average fee per block: 0.250000
>   * Fee per byte: 0.0000000154
> Result:
>   * Miner group 0: 81.648985% income (factor 1.020612 with hashrate)
>   * Miner group 1: 18.351015% income (factor 0.917551 with hashrate)
>
> When fees become more important however, and half of a block's income is
> due to fees, the effect becomes even stronger (a 15% loss), and the optimal
> way to compete for small miners is to create larger blocks as well (smaller
> blocks for them result in even less income):
>
> Configuration:
>   * Miner group 0: 80.000000% hashrate, blocksize 20000000.000000
>   * Miner group 1: 20.000000% hashrate, blocksize 20000000.000000
>   * Expected average block size: 20000000.000000
>   * Average fee per block: 25.000000
>   * Fee per byte: 0.0000012500
> Result:
>   * Miner group 0: 83.063545% income (factor 1.038294 with hashrate)
>   * Miner group 1: 16.936455% income (factor 0.846823 with hashrate)
>
> The simulator is not perfect. It doesn't take into account that multiple
> blocks/relays can compete for the same bandwidth, or that nodes cannot
> process multiple blocks at once.
>
> The numbers used may be unrealistic, and I don't mean this as a prediction
> for real-world events. However, it does very clearly show the effects of
> larger blocks on centralization pressure of the system. Note that this also
> does not make any assumption of destructive behavior on the network - just
> simple profit maximalization.
>
> Lastly, the code may be buggy; I only did some small sanity tests with
> simple networks.
>
>
>
> ------------------------------------------------------------------------------
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development





From elombrozo at gmail.com  Sun Jun 14 20:10:41 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 14 Jun 2015 13:10:41 -0700
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <CAOoPuRaaA2Bi3RJCpi-vF6odSbTRwfOUi+x7csS8VQYkoWN7bw@mail.gmail.com>
References: <20150612181153.GB19199@muck>
	<CAJN5wHVj=KfQ3_KYOKee9uq4LNPwQ7x5nGuKDHEMUqGF4LSDLg@mail.gmail.com>
	<CAFzgq-y5xBSXexVi0mJw_w89R2_AHJCgmj=gLN4CK_-YaO4-eg@mail.gmail.com>
	<3BB36FC7-9212-42A1-A756-A66929C15D4F@gmail.com>
	<CAJHLa0Oh0wm_1SynFdCu+WkVD-gTGk0ZUNgQV0GVj0-3zL=zzw@mail.gmail.com>
	<04527D50-0118-4E74-8226-3E29B29CC7D8@gmail.com>
	<CAJHLa0NrNqECvqhJWNX=rt3-h4U3jwFWoMCrcbyC6hUT5EqWbw@mail.gmail.com>
	<557D5239.1070105@henricson.se>
	<CAOoPuRaaA2Bi3RJCpi-vF6odSbTRwfOUi+x7csS8VQYkoWN7bw@mail.gmail.com>
Message-ID: <D6AFE62D-6145-40C4-A0F6-8363AA23A84E@gmail.com>


> On Jun 14, 2015, at 3:34 AM, Benjamin <benjamin.l.cordes at gmail.com> wrote:
> 
> "The size limit is an economic policy lever that needs to be
> transitioned -away- from software and software developers, to the free
> market."
> 
> Exactly right. Bitcoin does not have a free market for fee though, and
> literally all the discussion so far has neglected some fundamental
> aspect of this, as you described. It's not at all a "technical" or
> "engineering" decision. It's the question of how to potentially
> re-design a fundamental part of Bitcoin, and the proposals so far
> don't address this. What is the price of the scarce resource of the
> blockchain and the mechanism to decide on price, once the subsidy runs
> out?
> 

In addition, fees are complicated by the fact that they are used as an anti-spam measure for relay nodes?who don?t see ANY direct compensation whatsoever for providing that service. So we really have two different fees being tacked on?but the miners get to keep all of it?and the relay fee is being hard coded into the software.

Fee calculation heuristics for wallets are already far from trivial - this is another issue that needs to be addressed.

- Eric Lombrozo

> On Sun, Jun 14, 2015 at 12:06 PM, Mats Henricson <mats at henricson.se> wrote:
>> Jeff,
>> 
>> with all due respect, but I've seen you saying this a few times
>> now, that this decision is oh so difficult and important.
>> 
>> But this is not helpful. We all know that. Even I.
>> 
>> Make a suggestion, or stay out of the debate!
>> 
>> Mats
>> 
>> On 06/14/2015 07:36 AM, Jeff Garzik wrote:
>>> The choice is very real and on-point.  What should the block size limit
>>> be?  Why?
>>> 
>>> There is a large consensus that it needs increasing.  To what?  By what
>>> factor?
>>> 
>>> The size limit literally defines the fee market, the whole damn thing.  If
>>> software high priests choose a size limit of 300k, space is scarce, fees
>>> are bid high.  If software high priests choose a size limit of 32mb, space
>>> is plentiful, fees are near zero.  Market actors take their signals
>>> accordingly.  Some business models boom, some business models fail, as a
>>> direct result of changing this unintentionally-added speedbump.  Different
>>> users value adoption, decentralization etc. differently.
>>> 
>>> The size limit is an economic policy lever that needs to be transitioned
>>> -away- from software and software developers, to the free market.
>>> 
>>> A simple, e.g. hard fork to 2MB or 4MB does not fix higher level governance
>>> problems associated with actors lobbying developers, even if a cloistered
>>> and vetted Technical Advisory Board as has been proposed.
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> On Sun, Jun 14, 2015 at 1:20 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>>> 
>>>> I definitely think we need some voting system for metaconsensus?but if
>>>> we?re going to seriously consider this we should look at the problem much
>>>> more generally. Using false choices doesn?t really help, though ;)
>>>> 
>>>> - Eric Lombrozo
>>>> 
>>>> 
>>>> On Jun 13, 2015, at 10:13 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:
>>>> 
>>>> On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo <elombrozo at gmail.com>
>>>> wrote:
>>>> 
>>>>> 2) BIP100 has direct economic consequences?and particularly for miners.
>>>>> It lends itself to much greater corruptibility.
>>>>> 
>>>>> 
>>>> What is the alternative?  Have a Chief Scientist or Technical Advisory
>>>> Board choose what is a proper fee, what is a proper level of
>>>> decentralization, a proper growth factor?
>>>> 
>>>> 
>>>> 
>>> 
>>> 
>>> 
>>> 
>>> ------------------------------------------------------------------------------
>>> 
>>> 
>>> 
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>> 
>> 
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/7bda2c1b/attachment.sig>

From info at AndySchroder.com  Sun Jun 14 20:55:48 2015
From: info at AndySchroder.com (Andy Schroder)
Date: Sun, 14 Jun 2015 16:55:48 -0400
Subject: [Bitcoin-development] Proposal: Move Bitcoin Dev List to a
	Neutral Competent Entity
In-Reply-To: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>
References: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>
Message-ID: <557DEA54.30200@AndySchroder.com>

Hello,

I'd support moving to a Linux Foundation e-mail list. I am also against 
google groups. I agree that the gesture of moving indicates that 
SourceForge is not playing nice on other issues and that moving this 
list shows their behavior is being acknowledged.

I understand your reason for wanting to delete the Source Forge account 
(after reading the links). However, the only problem with that is that 
the SourceForge archive is the oldest one I've found with some early 
messages from Satoshi. Myself finding Bitcoin after its inception, as 
well as this mailing list even later on, it's nice to be able to review 
the archives. SourceForge's interface to those archives is pretty bad 
though. I'm not sure if there is any way to get older messages archived 
on sites like gmane or mail-archive? Does anyone know? You mentioned 
importing the list archive as part of the migration plan, but I guess is 
this easy to do from SourceForge?


Andy Schroder

On 06/14/2015 06:12 AM, Warren Togami Jr. wrote:
>
> Discomfort with Sourceforge
>
> For a while now people have been expressing concern about 
> Sourceforge's continued hosting of the bitcoin-dev mailing list.?  
> Downloads were moved completely to bitcoin.org <http://bitcoin.org> 
> after the Sept 2014 hacking incident of the SF project account.?  The 
> company's behavior and perceived stability have been growing to be 
> increasingly questionable.
>
>
> http://www.theregister.co.uk/2013/11/08/gimp_dumps_sourceforge_over_dodgy_ads_and_installer
>
> November 2013: GIMP flees SourceForge over dodgy ads and installer
>
> https://lwn.net/Articles/646118/
>
> May 28th, 2015: SourceForge replacing GIMP Windows downloads
>
> http://seclists.org/nmap-dev/2015/q2/194
>
> June 3rd, 2015: Sourceforge hijacked nmap's old site and downloads.
>
>
> When this topic came up over the past two years, it seemed that most 
> people agreed it would be a good idea to move.? Someone always 
> suggests Google Groups as the replacement host.?  Google is quickly 
> shot down as too controversial in this community, and it becomes an 
> even more difficult question as to who else should host it.?  
> Realizing this is not so simple, discussion then dies off until the 
> next time somebody brings it up.
>
>
> http://sourceforge.net/p/bitcoin/mailman/bitcoin-development/thread/1943127.DBnVxmfOIh%401337h4x0r/#msg34192607
>
> Somebody brought it up again this past week.
>
>
> It seems logical that an open discussion list is not a big deal to 
> continue to be hosted on Sourceforge, as there isn?EUR^(TM)t much they 
> could do to screw it up.?  I personally think moving it away now would 
> be seen as a gesture that we do not consider their behavior to be 
> acceptable.? There are also some benefits in being hosted elsewhere, 
> at an entity able to professionally maintain their infrastructure 
> while also being neutral to the content.
>
>
> Proposal: Move Bitcoin Dev List to a Neutral Competent Entity
>
>
> Bitcoin is a global infrastructure development project where it would 
> be politically awkward for any of the existing Bitcoin companies or 
> orgs to host due to questions it would raise about perceived political 
> control.?  For example, consider a bizarro parallel universe where 
> MtGox was the inventor of Bitcoin, where they hosted its development 
> infrastructure and dev list under their own name.?  Even if what they 
> published was 100% technically and ideologically equivalent to the 
> Bitcoin we know in our dimension, most people wouldn't have trusted it 
> merely due to appearances and it would have easily gone nowhere.
>
>
> I had a similar thought process last week when sidechains code was 
> approaching release. Sidechains, like Bitcoin itself, are intended to 
> be a generic piece of infrastructure (like ethernet?) that anyone can 
> build upon and use.?  We thought about Google Groups or existing orgs 
> that already host various open source infrastructure discussion lists 
> like the IETF or the Linux Foundation.? Google is too controversial in 
> this community, and the IETF is seen as possibly too politically 
> fractured.?  The Linux Foundation hosts a bunch of infrastructure 
> lists <https://lists.linuxfoundation.org/mailman/listinfo>and it seems 
> that nobody in the Open Source industry considers them to be 
> particularly objectionable.?  I talked with LF about the idea of 
> hosting generic Bitcoin-related infrastructure development lists.?  
> They agreed as OSS infrastructure dev is already within their charter, 
> so early this week sidechains-dev list began hosting there.
>
>
> From the perspective of our community, for bitcoin-dev it seems like a 
> great fit.?  Why??  While they are interested in supporting general 
> open source development, the LF has literally zero stake in this.?  In 
> addition to neutrality, they seem to be suitable as a competenthost.?  
> They have full-time sysadmins maintaining their infrastructure 
> including the Mailman server. They are soon upgrading to Mailman 3 
> <http://wiki.list.org/Mailman3>, which means mailing lists would 
> benefit from the improved archive browser.?  I am not personally 
> familiar with HyperKitty, but the point here is they are a stable 
> non-profit entity who will competently maintain and improve things 
> like their Mailman deployment (a huge improvement over the stagnant 
> Sourceforge).?  It seems that LF would be competent, neutral place to 
> host dev lists for the long-term.
>
>
> To be clear, this proposal is only about hosting the discussion 
> list.?  The LF would have no control over the Bitcoin Project, as no 
> single entity should.
>
>
> Proposed Action Plan
>
>
>  *
>
>     Discuss this openly within this community.?  Above is one example
>     of a great neutral and competent host.?  If the technical leaders
>     here can agree to move to a particular neutral host then we do it.
>
>  *
>
>     Migration: The current list admins become the new list admins.? We
>     import the entire list archive into the new host's archives for
>     user convenience.
>
>  *
>
>     http://sourceforge.net/p/bitcoin/mailman/ ? Kill bitcoin-list and
>     bitcoin-test.?  Very few people actually use it.?  Actually, let's
>     delete the entire Bitcoin Sourceforge project as its continued
>     existence serves no purpose and it only confuses people who find
>     it.?  By deletion, nobody has to monitor it for a repeat of the
>     Sept 2014 hacking incident
>     <https://www.phoronix.com/scan.php?page=news_item&px=MTc4Mzg>or
>     GIMP-type hijacking <https://lwn.net/Articles/646118/>?
>
>  *
>
>     The toughest question would be the appropriateness of
>     auto-importing the subscriber list to another list server, as mass
>     imports have a tendency to upset people.
>
>
> Thoughts?
>
>
> Warren Togami
>
>
> ------------------------------------------------------------------------------
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/f0e7ca82/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/f0e7ca82/attachment.sig>

From adam at cypherspace.org  Sun Jun 14 21:23:55 2015
From: adam at cypherspace.org (Adam Back)
Date: Sun, 14 Jun 2015 23:23:55 +0200
Subject: [Bitcoin-development] comments on BIP 100
Message-ID: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>

Hi

I made these comments elsewhere, but I think really we should be
having these kind of conversations here rather than scattered around.

These are about Jeff Garzik's outline draft BIP 100 I guess this is
the latest draft:  (One good thing about getting off SF would be
finally JGarzik's emails actually not getting blocked!).

http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf

may have changed since the original [1]

Over the original proposal:

1. there should be a hard cap, not indefinitely growing.

2. there should be  a growth limiter (no more than X%/year)

3. I think the miners should not be given a vote that has no costs to
cast, because their interests are not necessarily aligned with users
or businesses.

I think Greg Maxwell's difficulty adjust [2] is better here for that
reason.  It puts quadratic cost via higher difficulty for miners to
vote to increase block-size, which miners can profitably do if there
are transactions with fees available to justify it. There is also the
growth limiter as part of Greg's proposal. [3]

I think bitcoin will have to involve layering models that uplift
security to higher layers, but preserve security assurances, and
smart-contracts even, with protocols that improve the algorithmic
complexity beyond O(n^2) in users, like lightning, and there are
multiple other candidates with useful tradeoffs for various use-cases.

One thing that is concerning is that few in industry seem inclined to
take any development initiatives or even integrate a library.  I
suppose eventually that problem would self-correct as new startups
would make a more scalable wallet and services that are layer2 aware
and eat the lunch of the laggards.  But it will be helpful if we
expose companies to the back-pressure actually implied by an O(n^2)
scaling protocol and don't just immediately increase the block-size to
levels that are dangerous for decentralisation security, as an
interventionist subsidy to save them having to do basic integration
work.  Otherwise I think whichever any kind of kick the can some 2-5
years down the road we consider, we risk the whole saga repeating in a
few years, when no algorithmic progress has been made and even more
protocol inertia has set in.

Adam

[1] original proposal comments on reddit
https://www.reddit.com/r/Bitcoin/comments/39kzyt/draft_bip_100_soft_fork_block_size_increase/

[2] flexcap propoal by Greg Maxwell see post by Mark Freidenbach
https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07599.html

[3] growth limited proposal for flexcap by Greg Maxwell
https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07620.html



From odinn.cyberguerrilla at riseup.net  Sun Jun 14 21:38:21 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Sun, 14 Jun 2015 14:38:21 -0700
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <CACq0ZD7FujgZ3huyu50+LG7FM2ayRoQz_6cukQMix6MDYpuC7g@mail.gmail.com>
References: <COL402-EAS423BB81E15B25CD20B11B10CDBA0@phx.gbl>	<557D02F4.7090001@riseup.net>
	<CACq0ZD7FujgZ3huyu50+LG7FM2ayRoQz_6cukQMix6MDYpuC7g@mail.gmail.com>
Message-ID: <557DF44D.90009@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I agree that changes of anything more than trivial are difficult, but
I would disagree that they can't be made.  It seems that the issue is
one of roadblocks and muddling through when a major issue (e.g. the
proposal of a hardfork / XT) is confronting the community and the
question of how to address this issue in a timely manner. That does
not mean that there isn't a process for the community to weigh in or
for the decisions of the participants in the network to be measured
because, of course, there is, but I submit that the larger issues are
having to do with concerns over the problems inherent in the totally
unnecessary XT proposal itself.

My own thoughts on that proposal are written up at
http://www.twitlonger.com/show/n_1smkanp

And have been supported somewhat by various others in the community,
such as GreenAddress (which is opposed at this time to increasing the
blocksize limit as per Gavin's proposal) and Adam Back:
https://twitter.com/adam3us/status/608920099609817088

I think Jeff Garzik had some good thoughts specifically regarding this
subject of user vote in blocksize through fees.  Although I do agree
with you, Aaron, that the "changes more than trivial" are a tough nut
to crack, I won't say that they can't be made in such processes and I
am curious to see how this discussion progresses.

- -O





On 06/13/2015 10:46 PM, Aaron Voisine wrote:
> Yes, it does bother (some) people to see the consensus based
> system because of the difficulties that can be associated with
> implementing it.  But that's the way it is.  If you don't like
> consensus based systems (or decentralized, distributed systems)
> this is probably the wrong space for you.
> 
> 
> If consensus must be reached to make any changes, that just means
> that changes of anything more than trivial consequence simply can't
> be made. Extreme bias toward the status-quo will only work if
> external factors affecting the network also remain static.
> 
> Aaron Voisine co-founder and CEO breadwallet.com
> <http://breadwallet.com/>

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVffRMAAoJEGxwq/inSG8CGfIH/RkMNeJpcXdG+pC6Cg1XMELQ
wa/fkdKnnkhhxNm4keHeO0YQFw0BL4rQSQ2PfGEXU3keJrWlmxchEQteAGDzL55Y
1dSkQbfxsaEco2m6P0/1+WGuNOn2Sp653+/G/WoeaqMvp+b2ORbVZoqURv7Iz240
sI6GqWxWxuGpJyaW/PwVYfvGAImeQRKgKiB3w001Q3Lc36wDr/EGs4lVWJTSk+g+
60zj4+7jmqpr/Q/+sjQDE0KZSBU/EmrPYEuEdBkOmG4JnFgBqM7civtHis/zu7Uc
1sr/LcqeGm0VB/yt0CfvtsAC5KZyMFQABF0/Q2qX0GtuLbjyKWf7B/KEAPdC+m0=
=3cf3
-----END PGP SIGNATURE-----



From odinn.cyberguerrilla at riseup.net  Sun Jun 14 21:54:36 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Sun, 14 Jun 2015 14:54:36 -0700
Subject: [Bitcoin-development] Proposal: Move Bitcoin Dev List to a
 Neutral Competent Entity
In-Reply-To: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>
References: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>
Message-ID: <557DF81C.5080803@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I fully agree and support this idea.

Some recent discussion on social media which touches on this very
subject of bitcoin and sourceforge.... (I include nmap and gittorrent
as well because those seem relevant, imho)

https://twitter.com/jgarzik/status/607750046021357568

https://twitter.com/nmap/status/608418994236891137

https://twitter.com/ktorn/status/607818378531631106

https://twitter.com/ktorn/status/607822900331020288

On 06/14/2015 03:12 AM, Warren Togami Jr. wrote:
> Discomfort with Sourceforge
> 
> For a while now people have been expressing concern about
> Sourceforge's continued hosting of the bitcoin-dev mailing list.
> Downloads were moved completely to bitcoin.org <http://bitcoin.org>
> after the Sept 2014 hacking incident of the SF project account.
> The company's behavior and perceived stability have been growing to
> be increasingly questionable.
> 
> 
> http://www.theregister.co.uk/2013/11/08/gimp_dumps_sourceforge_over_do
dgy_ads_and_installer
>
>  November 2013: GIMP flees SourceForge over dodgy ads and
> installer
> 
> https://lwn.net/Articles/646118/
> 
> May 28th, 2015: SourceForge replacing GIMP Windows downloads
> 
> http://seclists.org/nmap-dev/2015/q2/194
> 
> June 3rd, 2015: Sourceforge hijacked nmap's old site and
> downloads.
> 
> 
> When this topic came up over the past two years, it seemed that
> most people agreed it would be a good idea to move.  Someone always
> suggests Google Groups as the replacement host.  Google is quickly
> shot down as too controversial in this community, and it becomes an
> even more difficult question as to who else should host it.
> Realizing this is not so simple, discussion then dies off until the
> next time somebody brings it up.
> 
> 
> http://sourceforge.net/p/bitcoin/mailman/bitcoin-development/thread/19
43127.DBnVxmfOIh%401337h4x0r/#msg34192607
>
>  Somebody brought it up again this past week.
> 
> 
> It seems logical that an open discussion list is not a big deal to 
> continue to be hosted on Sourceforge, as there isn?t much they
> could do to screw it up.  I personally think moving it away now
> would be seen as a gesture that we do not consider their behavior
> to be acceptable. There are also some benefits in being hosted
> elsewhere, at an entity able to professionally maintain their
> infrastructure while also being neutral to the content.
> 
> 
> Proposal: Move Bitcoin Dev List to a Neutral Competent Entity
> 
> 
> Bitcoin is a global infrastructure development project where it
> would be politically awkward for any of the existing Bitcoin
> companies or orgs to host due to questions it would raise about
> perceived political control. For example, consider a bizarro
> parallel universe where MtGox was the inventor of Bitcoin, where
> they hosted its development infrastructure and dev list under their
> own name.  Even if what they published was 100% technically and
> ideologically equivalent to the Bitcoin we know in our dimension,
> most people wouldn't have trusted it merely due to appearances and
> it would have easily gone nowhere.
> 
> 
> I had a similar thought process last week when sidechains code was 
> approaching release. Sidechains, like Bitcoin itself, are intended
> to be a generic piece of infrastructure (like ethernet?) that
> anyone can build upon and use.  We thought about Google Groups or
> existing orgs that already host various open source infrastructure
> discussion lists like the IETF or the Linux Foundation.  Google is
> too controversial in this community, and the IETF is seen as
> possibly too politically fractured. The Linux Foundation hosts a
> bunch of infrastructure lists 
> <https://lists.linuxfoundation.org/mailman/listinfo>and it seems
> that nobody in the Open Source industry considers them to be
> particularly objectionable.  I talked with LF about the idea of
> hosting generic Bitcoin-related infrastructure development lists.
> They agreed as OSS infrastructure dev is already within their
> charter, so early this week sidechains-dev list began hosting
> there.
> 
> 
> From the perspective of our community, for bitcoin-dev it seems
> like a great fit.  Why?  While they are interested in supporting
> general open source development, the LF has literally zero stake in
> this.  In addition to neutrality, they seem to be suitable as a
> competenthost. They have full-time sysadmins maintaining their
> infrastructure including the Mailman server. They are soon
> upgrading to Mailman 3 <http://wiki.list.org/Mailman3>, which means
> mailing lists would benefit from the improved archive browser.  I
> am not personally familiar with HyperKitty, but the point here is
> they are a stable non-profit entity who will competently maintain
> and improve things like their Mailman deployment (a huge
> improvement over the stagnant Sourceforge).  It seems that LF would
> be competent, neutral place to host dev lists for the long-term.
> 
> 
> To be clear, this proposal is only about hosting the discussion
> list. The LF would have no control over the Bitcoin Project, as no
> single entity should.
> 
> 
> Proposed Action Plan
> 
> 
> *
> 
> Discuss this openly within this community.  Above is one example
> of a great neutral and competent host.  If the technical leaders
> here can agree to move to a particular neutral host then we do it.
> 
> *
> 
> Migration: The current list admins become the new list admins.  We 
> import the entire list archive into the new host's archives for
> user convenience.
> 
> *
> 
> http://sourceforge.net/p/bitcoin/mailman/  Kill bitcoin-list and 
> bitcoin-test.  Very few people actually use it.  Actually, let's 
> delete the entire Bitcoin Sourceforge project as its continued 
> existence serves no purpose and it only confuses people who find 
> it.  By deletion, nobody has to monitor it for a repeat of the
> Sept 2014 hacking incident 
> <https://www.phoronix.com/scan.php?page=news_item&px=MTc4Mzg>or 
> GIMP-type hijacking <https://lwn.net/Articles/646118/>?
> 
> *
> 
> The toughest question would be the appropriateness of
> auto-importing the subscriber list to another list server, as mass
> imports have a tendency to upset people.
> 
> 
> Thoughts?
> 
> 
> Warren Togami
> 
> 
> ----------------------------------------------------------------------
- --------
>
> 
> 
> 
> _______________________________________________ Bitcoin-development
> mailing list Bitcoin-development at lists.sourceforge.net 
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVffgcAAoJEGxwq/inSG8COOsH/jC5TAjec1ridg9Ww/1+SW26
QvTaZ79PrK4+/5rvt3qXtCicOidGLTGpk/ixrgVN64nOiquaQm8JM/BrOrtZbYN0
/lXjhR6N8AEKYYvtjCQdD/JjNZ8Z0QvRZ4+XKUblBagm4BkRt4OtaVkctechscbM
WiMh+SfUPPlGiuucotiBFliF4TprFTCw0w/+WY521yKE5qgTPc6ZKBHI5TzYROoF
aAz7i6GlAZR0qlbV91IzakszZWF/Im6KHG30CYbU4eTb6Ic9tVHogC2EuW2zePd3
NxRXE4M0FunnVX61Eg3Bglm73h6SuzsL9x79Ckp0UXpZ8sJ7+mYCDKTZSUEWeJs=
=Xje2
-----END PGP SIGNATURE-----



From adam at cypherspace.org  Sun Jun 14 21:59:24 2015
From: adam at cypherspace.org (Adam Back)
Date: Sun, 14 Jun 2015 23:59:24 +0200
Subject: [Bitcoin-development] Proposal: Move Bitcoin Dev List to a
 Neutral Competent Entity
In-Reply-To: <557DEA54.30200@AndySchroder.com>
References: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>
	<557DEA54.30200@AndySchroder.com>
Message-ID: <CALqxMTEe++n5Y6oL4gAknN9R_=K6EZjx11dq4FA8vij21rv+ag@mail.gmail.com>

It might be as well to keep the archive but disable new posts as
otherwise we create bit-rot for people who linked to posts on
sourceforge.

The list is also archived on mail-archive though.
https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/

Adam

On 14 June 2015 at 22:55, Andy Schroder <info at andyschroder.com> wrote:
> Hello,
>
> I'd support moving to a Linux Foundation e-mail list. I am also against
> google groups. I agree that the gesture of moving indicates that SourceForge
> is not playing nice on other issues and that moving this list shows their
> behavior is being acknowledged.
>
> I understand your reason for wanting to delete the Source Forge account
> (after reading the links). However, the only problem with that is that the
> SourceForge archive is the oldest one I've found with some early messages
> from Satoshi. Myself finding Bitcoin after its inception, as well as this
> mailing list even later on, it's nice to be able to review the archives.
> SourceForge's interface to those archives is pretty bad though. I'm not sure
> if there is any way to get older messages archived on sites like gmane or
> mail-archive? Does anyone know? You mentioned importing the list archive as
> part of the migration plan, but I guess is this easy to do from SourceForge?
>
>
> Andy Schroder
>
> On 06/14/2015 06:12 AM, Warren Togami Jr. wrote:
>
> Discomfort with Sourceforge
>
> For a while now people have been expressing concern about Sourceforge's
> continued hosting of the bitcoin-dev mailing list.?  Downloads were moved
> completely to bitcoin.org after the Sept 2014 hacking incident of the SF
> project account.?  The company's behavior and perceived stability have been
> growing to be increasingly questionable.
>
>
> http://www.theregister.co.uk/2013/11/08/gimp_dumps_sourceforge_over_dodgy_ads_and_installer
>
> November 2013: GIMP flees SourceForge over dodgy ads and installer
>
> https://lwn.net/Articles/646118/
>
> May 28th, 2015: SourceForge replacing GIMP Windows downloads
>
> http://seclists.org/nmap-dev/2015/q2/194
>
> June 3rd, 2015: Sourceforge hijacked nmap's old site and downloads.
>
>
> When this topic came up over the past two years, it seemed that most people
> agreed it would be a good idea to move.?  Someone always suggests Google
> Groups as the replacement host.?  Google is quickly shot down as too
> controversial in this community, and it becomes an even more difficult
> question as to who else should host it.?  Realizing this is not so simple,
> discussion then dies off until the next time somebody brings it up.
>
>
> http://sourceforge.net/p/bitcoin/mailman/bitcoin-development/thread/1943127.DBnVxmfOIh%401337h4x0r/#msg34192607
>
> Somebody brought it up again this past week.
>
>
> It seems logical that an open discussion list is not a big deal to continue
> to be hosted on Sourceforge, as there isn???t much they could do to screw it
> up.?  I personally think moving it away now would be seen as a gesture that
> we do not consider their behavior to be acceptable.?  There are also some
> benefits in being hosted elsewhere, at an entity able to professionally
> maintain their infrastructure while also being neutral to the content.
>
>
> Proposal: Move Bitcoin Dev List to a Neutral Competent Entity
>
>
> Bitcoin is a global infrastructure development project where it would be
> politically awkward for any of the existing Bitcoin companies or orgs to
> host due to questions it would raise about perceived political control.?
> For example, consider a bizarro parallel universe where MtGox was the
> inventor of Bitcoin, where they hosted its development infrastructure and
> dev list under their own name.?  Even if what they published was 100%
> technically and ideologically equivalent to the Bitcoin we know in our
> dimension, most people wouldn't have trusted it merely due to appearances
> and it would have easily gone nowhere.
>
>
> I had a similar thought process last week when sidechains code was
> approaching release. Sidechains, like Bitcoin itself, are intended to be a
> generic piece of infrastructure (like ethernet?) that anyone can build upon
> and use.?  We thought about Google Groups or existing orgs that already host
> various open source infrastructure discussion lists like the IETF or the
> Linux Foundation.?  Google is too controversial in this community, and the
> IETF is seen as possibly too politically fractured.?  The Linux Foundation
> hosts a bunch of infrastructure lists and it seems that nobody in the Open
> Source industry considers them to be particularly objectionable.?  I talked
> with LF about the idea of hosting generic Bitcoin-related infrastructure
> development lists.?  They agreed as OSS infrastructure dev is already within
> their charter, so early this week sidechains-dev list began hosting there.
>
>
> From the perspective of our community, for bitcoin-dev it seems like a great
> fit.?  Why??  While they are interested in supporting general open source
> development, the LF has literally zero stake in this.?  In addition to
> neutrality, they seem to be suitable as a competent host.?  They have
> full-time sysadmins maintaining their infrastructure including the Mailman
> server. They are soon upgrading to Mailman 3, which means mailing lists
> would benefit from the improved archive browser.?  I am not personally
> familiar with HyperKitty, but the point here is they are a stable non-profit
> entity who will competently maintain and improve things like their Mailman
> deployment (a huge improvement over the stagnant Sourceforge).?  It seems
> that LF would be competent, neutral place to host dev lists for the
> long-term.
>
>
> To be clear, this proposal is only about hosting the discussion list.?  The
> LF would have no control over the Bitcoin Project, as no single entity
> should.
>
>
> Proposed Action Plan
>
>
> Discuss this openly within this community.?  Above is one example of a great
> neutral and competent host.?  If the technical leaders here can agree to
> move to a particular neutral host then we do it.
>
> Migration: The current list admins become the new list admins.?  We import
> the entire list archive into the new host's archives for user convenience.
>
> http://sourceforge.net/p/bitcoin/mailman/ ? Kill bitcoin-list and
> bitcoin-test.?  Very few people actually use it.?  Actually, let's delete
> the entire Bitcoin Sourceforge project as its continued existence serves no
> purpose and it only confuses people who find it.?  By deletion, nobody has
> to monitor it for a repeat of the Sept 2014 hacking incident or GIMP-type
> hijacking?
>
> The toughest question would be the appropriateness of auto-importing the
> subscriber list to another list server, as mass imports have a tendency to
> upset people.
>
>
> Thoughts?
>
>
> Warren Togami
>
>
> ------------------------------------------------------------------------------
>
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From odinn.cyberguerrilla at riseup.net  Sun Jun 14 21:59:33 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Sun, 14 Jun 2015 14:59:33 -0700
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <CAJHLa0MA6hoquewGSTcWNabpk5OycCpFuOOykDObEF-1NRXqow@mail.gmail.com>
References: <20150612181153.GB19199@muck>	<CAJN5wHVj=KfQ3_KYOKee9uq4LNPwQ7x5nGuKDHEMUqGF4LSDLg@mail.gmail.com>	<CAFzgq-y5xBSXexVi0mJw_w89R2_AHJCgmj=gLN4CK_-YaO4-eg@mail.gmail.com>	<3BB36FC7-9212-42A1-A756-A66929C15D4F@gmail.com>	<CAJHLa0Oh0wm_1SynFdCu+WkVD-gTGk0ZUNgQV0GVj0-3zL=zzw@mail.gmail.com>	<04527D50-0118-4E74-8226-3E29B29CC7D8@gmail.com>	<CAJHLa0NrNqECvqhJWNX=rt3-h4U3jwFWoMCrcbyC6hUT5EqWbw@mail.gmail.com>	<557D5239.1070105@henricson.se>	<CAOoPuRaaA2Bi3RJCpi-vF6odSbTRwfOUi+x7csS8VQYkoWN7bw@mail.gmail.com>
	<CAJHLa0MA6hoquewGSTcWNabpk5OycCpFuOOykDObEF-1NRXqow@mail.gmail.com>
Message-ID: <557DF945.1060909@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Notionally, I agree with what I see written here by Jeff, and I
appreciate the thoughtfulness that went into this short post to list.

On 06/14/2015 08:07 AM, Jeff Garzik wrote:
> Exactly -- both block size proponents and block size change 
> conservatives seem to be glossing over this aspect - much to my 
> dismay.
> 
> Choosing the size limit is choosing the size of a scarce resource. 
> By fiat.
> 
> It is wrong to think that a "technical consensus" can choose what 
> is best here.
> 
> The block size limit defines the scope of a resource for which all 
> fee market actors bid.  That, in turn, defines who is in the fee 
> market and how they behave, what market choices are made.
> 
> It doesn't matter how or why the limit was originally enacted, what
> Satoshi meant to do.  What matters, economically, is what is. What
> the software and our $3B economy & market knows and sees today.  (I
> think some block size change proponents miss this!)
> 
> The solution lies in transitioning this size limit to the free 
> market. In the end, the users must choose their desired level of 
> growth, decentralization, etc.  We cannot rely on some dev's idea 
> of the proper level of fee, proper level of growth, proper level
> of decentralization.
> 
> And IMO, a "floating limit with training wheels" is better and 
> stronger for bitcoin's health from a governance, user choice and 
> free market perspective than simply "hard fork to 2MB, come back 
> again in 6 months."
> 
> 
> 
> 
> 
> 
> 
> On Sun, Jun 14, 2015 at 6:34 AM, Benjamin 
> <benjamin.l.cordes at gmail.com <mailto:benjamin.l.cordes at gmail.com>> 
> wrote:
> 
> "The size limit is an economic policy lever that needs to be 
> transitioned -away- from software and software developers, to the 
> free market."
> 
> Exactly right. Bitcoin does not have a free market for fee though, 
> and literally all the discussion so far has neglected some 
> fundamental aspect of this, as you described. It's not at all a 
> "technical" or "engineering" decision. It's the question of how to 
> potentially re-design a fundamental part of Bitcoin, and the 
> proposals so far don't address this. What is the price of the 
> scarce resource of the blockchain and the mechanism to decide on 
> price, once the subsidy runs out?
> 
> On Sun, Jun 14, 2015 at 12:06 PM, Mats Henricson <mats at henricson.se
> <mailto:mats at henricson.se>> wrote:
>> Jeff,
>> 
>> with all due respect, but I've seen you saying this a few times 
>> now, that this decision is oh so difficult and important.
>> 
>> But this is not helpful. We all know that. Even I.
>> 
>> Make a suggestion, or stay out of the debate!
>> 
>> Mats
>> 
>> On 06/14/2015 07:36 AM, Jeff Garzik wrote:
>>> The choice is very real and on-point.  What should the block 
>>> size
> limit
>>> be?  Why?
>>> 
>>> There is a large consensus that it needs increasing.  To what?
>>> 
> By what
>>> factor?
>>> 
>>> The size limit literally defines the fee market, the whole 
>>> damn
> thing.  If
>>> software high priests choose a size limit of 300k, space is
> scarce, fees
>>> are bid high.  If software high priests choose a size limit of
> 32mb, space
>>> is plentiful, fees are near zero.  Market actors take their 
>>> signals accordingly.  Some business models boom, some business 
>>> models
> fail, as a
>>> direct result of changing this unintentionally-added
>>> speedbump.
>>> 
> Different
>>> users value adoption, decentralization etc. differently.
>>> 
>>> The size limit is an economic policy lever that needs to be
> transitioned
>>> -away- from software and software developers, to the free 
>>> market.
>>> 
>>> A simple, e.g. hard fork to 2MB or 4MB does not fix higher 
>>> level
> governance
>>> problems associated with actors lobbying developers, even if a
> cloistered
>>> and vetted Technical Advisory Board as has been proposed.
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> On Sun, Jun 14, 2015 at 1:20 AM, Eric Lombrozo
> <elombrozo at gmail.com <mailto:elombrozo at gmail.com>> wrote:
>>> 
>>>> I definitely think we need some voting system for
> metaconsensus?but if
>>>> we?re going to seriously consider this we should look at the
> problem much
>>>> more generally. Using false choices doesn?t really help, 
>>>> though ;)
>>>> 
>>>> - Eric Lombrozo
>>>> 
>>>> 
>>>> On Jun 13, 2015, at 10:13 PM, Jeff Garzik 
>>>> <jgarzik at bitpay.com
> <mailto:jgarzik at bitpay.com>> wrote:
>>>> 
>>>> On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo
> <elombrozo at gmail.com <mailto:elombrozo at gmail.com>>
>>>> wrote:
>>>> 
>>>>> 2) BIP100 has direct economic consequences?and
>>>>> particularly for
> miners.
>>>>> It lends itself to much greater corruptibility.
>>>>> 
>>>>> 
>>>> What is the alternative?  Have a Chief Scientist or 
>>>> Technical
> Advisory
>>>> Board choose what is a proper fee, what is a proper level of
>>>>  decentralization, a proper growth factor?
>>>> 
>>>> 
>>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
> ----------------------------------------------------------------------
- --------
>
>
> 
>> 
>>> 
>>> 
>>> _______________________________________________ 
>>> Bitcoin-development mailing list 
>>> Bitcoin-development at lists.sourceforge.net
> <mailto:Bitcoin-development at lists.sourceforge.net>
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>>>
>>> 
>> 
>> 
>> 
> ----------------------------------------------------------------------
- --------
>
>
> 
_______________________________________________
>> Bitcoin-development mailing list 
>> Bitcoin-development at lists.sourceforge.net
> <mailto:Bitcoin-development at lists.sourceforge.net>
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> ----------------------------------------------------------------------
- --------
>
>
> 
_______________________________________________
> Bitcoin-development mailing list 
> Bitcoin-development at lists.sourceforge.net 
> <mailto:Bitcoin-development at lists.sourceforge.net> 
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> 
> 
> 
> -- Jeff Garzik Bitcoin core developer and open source evangelist 
> BitPay, Inc.      https://bitpay.com/
> 
> 
> ----------------------------------------------------------------------
- --------
>
>
> 
> 
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net 
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVfflFAAoJEGxwq/inSG8CrWoIAJOsZHTWqdILE0IYmmE50E/S
BcbPJJtjodw1liPVJEybyNUKSgq4Ucw9tuQpMVv3hF8bvug6/6HtxAQCptuIKRSw
WigZyvgm79u474YsPULG+2SltMrOFqmA05jTF9vWo0LBSY4xiMXjT4VwVt9xEcFc
qHW5OUa1QoFZkaOf/jtY+H3a9w8cHZFlroTkf4MaJkaMo81oSRfWz3Mj8wOz6f8z
MSEpvQERzETEcV0SqTBnzsoX8toO1s24a9HejMMfbeD7JAy8EvayFb3G1LNzBNVC
1x/yeLBGnE3Z0P80J0oUR5taLbGJl9+7Hb16rEzxivtZF5FWBdDmvwKBOKJ1Alo=
=ubcH
-----END PGP SIGNATURE-----



From davide at cedivad.com  Sun Jun 14 22:14:43 2015
From: davide at cedivad.com (Davide Cavion)
Date: Mon, 15 Jun 2015 00:14:43 +0200
Subject: [Bitcoin-development] Proposal: Move Bitcoin Dev List to a
	Neutral Competent Entity
In-Reply-To: <CALqxMTEe++n5Y6oL4gAknN9R_=K6EZjx11dq4FA8vij21rv+ag@mail.gmail.com>
References: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>
	<557DEA54.30200@AndySchroder.com>
	<CALqxMTEe++n5Y6oL4gAknN9R_=K6EZjx11dq4FA8vij21rv+ag@mail.gmail.com>
Message-ID: <E8090F96-6778-4ED5-B33C-0E987C62E6E5@cedivad.com>

Hi,

I just wanted to let everyone know that every email is also archived at bitcoin-development.narkive.com <http://bitcoin-development.narkive.com/>, where you can find everything since the beginning of the list (June 2011). That should answer to Andy?s concern about the older messages not being archived anywhere but on sourceforge.

Davide


> On 14 Jun 2015, at 23:59, Adam Back <adam at cypherspace.org> wrote:
> 
> It might be as well to keep the archive but disable new posts as
> otherwise we create bit-rot for people who linked to posts on
> sourceforge.
> 
> The list is also archived on mail-archive though.
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/
> 
> Adam
> 
> On 14 June 2015 at 22:55, Andy Schroder <info at andyschroder.com> wrote:
>> Hello,
>> 
>> I'd support moving to a Linux Foundation e-mail list. I am also against
>> google groups. I agree that the gesture of moving indicates that SourceForge
>> is not playing nice on other issues and that moving this list shows their
>> behavior is being acknowledged.
>> 
>> I understand your reason for wanting to delete the Source Forge account
>> (after reading the links). However, the only problem with that is that the
>> SourceForge archive is the oldest one I've found with some early messages
>> from Satoshi. Myself finding Bitcoin after its inception, as well as this
>> mailing list even later on, it's nice to be able to review the archives.
>> SourceForge's interface to those archives is pretty bad though. I'm not sure
>> if there is any way to get older messages archived on sites like gmane or
>> mail-archive? Does anyone know? You mentioned importing the list archive as
>> part of the migration plan, but I guess is this easy to do from SourceForge?
>> 
>> 
>> Andy Schroder
>> 
>> On 06/14/2015 06:12 AM, Warren Togami Jr. wrote:
>> 
>> Discomfort with Sourceforge
>> 
>> For a while now people have been expressing concern about Sourceforge's
>> continued hosting of the bitcoin-dev mailing list.?  Downloads were moved
>> completely to bitcoin.org after the Sept 2014 hacking incident of the SF
>> project account.?  The company's behavior and perceived stability have been
>> growing to be increasingly questionable.
>> 
>> 
>> http://www.theregister.co.uk/2013/11/08/gimp_dumps_sourceforge_over_dodgy_ads_and_installer
>> 
>> November 2013: GIMP flees SourceForge over dodgy ads and installer
>> 
>> https://lwn.net/Articles/646118/
>> 
>> May 28th, 2015: SourceForge replacing GIMP Windows downloads
>> 
>> http://seclists.org/nmap-dev/2015/q2/194
>> 
>> June 3rd, 2015: Sourceforge hijacked nmap's old site and downloads.
>> 
>> 
>> When this topic came up over the past two years, it seemed that most people
>> agreed it would be a good idea to move.?  Someone always suggests Google
>> Groups as the replacement host.?  Google is quickly shot down as too
>> controversial in this community, and it becomes an even more difficult
>> question as to who else should host it.?  Realizing this is not so simple,
>> discussion then dies off until the next time somebody brings it up.
>> 
>> 
>> http://sourceforge.net/p/bitcoin/mailman/bitcoin-development/thread/1943127.DBnVxmfOIh%401337h4x0r/#msg34192607
>> 
>> Somebody brought it up again this past week.
>> 
>> 
>> It seems logical that an open discussion list is not a big deal to continue
>> to be hosted on Sourceforge, as there isn???t much they could do to screw it
>> up.?  I personally think moving it away now would be seen as a gesture that
>> we do not consider their behavior to be acceptable.?  There are also some
>> benefits in being hosted elsewhere, at an entity able to professionally
>> maintain their infrastructure while also being neutral to the content.
>> 
>> 
>> Proposal: Move Bitcoin Dev List to a Neutral Competent Entity
>> 
>> 
>> Bitcoin is a global infrastructure development project where it would be
>> politically awkward for any of the existing Bitcoin companies or orgs to
>> host due to questions it would raise about perceived political control.?
>> For example, consider a bizarro parallel universe where MtGox was the
>> inventor of Bitcoin, where they hosted its development infrastructure and
>> dev list under their own name.?  Even if what they published was 100%
>> technically and ideologically equivalent to the Bitcoin we know in our
>> dimension, most people wouldn't have trusted it merely due to appearances
>> and it would have easily gone nowhere.
>> 
>> 
>> I had a similar thought process last week when sidechains code was
>> approaching release. Sidechains, like Bitcoin itself, are intended to be a
>> generic piece of infrastructure (like ethernet?) that anyone can build upon
>> and use.?  We thought about Google Groups or existing orgs that already host
>> various open source infrastructure discussion lists like the IETF or the
>> Linux Foundation.?  Google is too controversial in this community, and the
>> IETF is seen as possibly too politically fractured.?  The Linux Foundation
>> hosts a bunch of infrastructure lists and it seems that nobody in the Open
>> Source industry considers them to be particularly objectionable.?  I talked
>> with LF about the idea of hosting generic Bitcoin-related infrastructure
>> development lists.?  They agreed as OSS infrastructure dev is already within
>> their charter, so early this week sidechains-dev list began hosting there.
>> 
>> 
>> From the perspective of our community, for bitcoin-dev it seems like a great
>> fit.?  Why??  While they are interested in supporting general open source
>> development, the LF has literally zero stake in this.?  In addition to
>> neutrality, they seem to be suitable as a competent host.?  They have
>> full-time sysadmins maintaining their infrastructure including the Mailman
>> server. They are soon upgrading to Mailman 3, which means mailing lists
>> would benefit from the improved archive browser.?  I am not personally
>> familiar with HyperKitty, but the point here is they are a stable non-profit
>> entity who will competently maintain and improve things like their Mailman
>> deployment (a huge improvement over the stagnant Sourceforge).?  It seems
>> that LF would be competent, neutral place to host dev lists for the
>> long-term.
>> 
>> 
>> To be clear, this proposal is only about hosting the discussion list.?  The
>> LF would have no control over the Bitcoin Project, as no single entity
>> should.
>> 
>> 
>> Proposed Action Plan
>> 
>> 
>> Discuss this openly within this community.?  Above is one example of a great
>> neutral and competent host.?  If the technical leaders here can agree to
>> move to a particular neutral host then we do it.
>> 
>> Migration: The current list admins become the new list admins.?  We import
>> the entire list archive into the new host's archives for user convenience.
>> 
>> http://sourceforge.net/p/bitcoin/mailman/ ? Kill bitcoin-list and
>> bitcoin-test.?  Very few people actually use it.?  Actually, let's delete
>> the entire Bitcoin Sourceforge project as its continued existence serves no
>> purpose and it only confuses people who find it.?  By deletion, nobody has
>> to monitor it for a repeat of the Sept 2014 hacking incident or GIMP-type
>> hijacking?
>> 
>> The toughest question would be the appropriateness of auto-importing the
>> subscriber list to another list server, as mass imports have a tendency to
>> upset people.
>> 
>> 
>> Thoughts?
>> 
>> 
>> Warren Togami
>> 
>> 
>> ------------------------------------------------------------------------------
>> 
>> 
>> 
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
>> 
>> 
>> ------------------------------------------------------------------------------
>> 
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/7a01af58/attachment.html>

From mike at plan99.net  Sun Jun 14 22:23:44 2015
From: mike at plan99.net (Mike Hearn)
Date: Mon, 15 Jun 2015 00:23:44 +0200
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
Message-ID: <CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>

>
> One thing that is concerning is that few in industry seem inclined to
> take any development initiatives or even integrate a library.


Um, you mean except all the people who have built more scalable wallets
over the past few years, which is the only reason anyone can even use
Bitcoin from their phone? Or maybe you mean initiatives like Lightning ....
except StrawPay already developed something similar to the Lightning
network (complete with a working GUI wallet) and were ignored by
Blockstream as you prefer to write your own from scratch?

Sure, people in the industry take development initiatives. That doesn't
mean their work will be recognised on this mailing list.


> I suppose eventually that problem would self-correct as new startups would
> make a more scalable wallet and services that are layer2 aware and eat the
> lunch of the laggards.


"The laggards" being *everyone* who has already invested in building
Bitcoin software so far. Not a great way to frame things. Many of those
"laggards" have written orders of magnitude more code than you or Gregory
or Jeff, for instance.

I still think you guys don't recognise what you are actually asking for
here - scrapping virtually the entire existing investment in software,
wallets and tools.


> But it will be helpful if we expose companies to the back-pressure
> actually implied by an O(n^2) scaling protocol and don't just immediately
> increase the block-size to levels that are dangerous for decentralisation
> security


Bitcoin does not have n-squared scaling. I really don't get where this idea
comes from. Computational complexity for the entire network is O(nm) where
n=transactions and m=fully validating nodes. There is no fixed
relationships between those two variables.

"Exposing the companies to back-pressure" sounds quite nice and gentle. Let
me rephrase it to be equivalent but perhaps more direct: you mean "breaking
the current software ecosystem to force people into a new, fictional system
that bears little resemblance to the Bitcoin we use today, whether they
want that or not".

As nothing that has been proposed so far (Lightning, merge mined chains,
extension blocks etc) has much chance of actual deployment any time soon,
that leaves raising the block size limit as the only possible path left.
Which is why there will soon be a fork that does it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/a4acdd2d/attachment.html>

From mike at plan99.net  Sun Jun 14 22:26:27 2015
From: mike at plan99.net (Mike Hearn)
Date: Mon, 15 Jun 2015 00:26:27 +0200
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <CAJHLa0OVJq-UqL5ecdEoXgy84WV40=Ympefnzn15DBhVBjCzuw@mail.gmail.com>
References: <20150612181153.GB19199@muck>
	<CAJN5wHVj=KfQ3_KYOKee9uq4LNPwQ7x5nGuKDHEMUqGF4LSDLg@mail.gmail.com>
	<CAFzgq-y5xBSXexVi0mJw_w89R2_AHJCgmj=gLN4CK_-YaO4-eg@mail.gmail.com>
	<3BB36FC7-9212-42A1-A756-A66929C15D4F@gmail.com>
	<CAJHLa0Oh0wm_1SynFdCu+WkVD-gTGk0ZUNgQV0GVj0-3zL=zzw@mail.gmail.com>
	<04527D50-0118-4E74-8226-3E29B29CC7D8@gmail.com>
	<CAJHLa0NrNqECvqhJWNX=rt3-h4U3jwFWoMCrcbyC6hUT5EqWbw@mail.gmail.com>
	<557D5239.1070105@henricson.se>
	<CAJHLa0OVJq-UqL5ecdEoXgy84WV40=Ympefnzn15DBhVBjCzuw@mail.gmail.com>
Message-ID: <CANEZrP0dD6YL2Ssyt+U_HLM40704DG=c74n3fHChyo+_WV2BCQ@mail.gmail.com>

On Sun, Jun 14, 2015 at 4:42 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:

> Since you missed it, here is the suggestion again:
> http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf
>

Reposting as Jeff's mail got eaten by the anti-phishing filters, due to
SourceForge's obsolete mailman setup.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/ba5aa579/attachment.html>

From gmaxwell at gmail.com  Sun Jun 14 22:38:51 2015
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sun, 14 Jun 2015 22:38:51 +0000
Subject: [Bitcoin-development] Proposal: Move Bitcoin Dev List to a
 Neutral Competent Entity
In-Reply-To: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>
References: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>
Message-ID: <CAAS2fgTZ65G=Qpu0tPQMsGoaRwfi_L67w0GCJGtfwc4xLrOAgA@mail.gmail.com>

On Sun, Jun 14, 2015 at 10:12 AM, Warren Togami Jr. <wtogami at gmail.com> wrote:
> From the perspective of our community, for bitcoin-dev it seems like a great
> fit.  Why?  While they are interested in supporting general open source
> development, the LF has literally zero stake in this.  In addition to
> neutrality, they seem to be suitable as a competent host.  They have

I support this proposal.

But for clarity sake, we should recognize that Linux Foundation isn't
a charity chartered to act in the public good, is a trade organization
which acts in the commercial interest of it's membership.

I do not think this presents a problem: LF's membership's interests
are not at odds with ours currently, and aren't likely to become so
(doubly so with sourceforge as the comparison point). We are, after
all, just talking about a development mailing list; in the unlikely
case that there were issues in the future it could be changed, and
they've demonstrated considerable competence at this kind of operation
as well, and I would be grateful to have their support.  I mention it
only because the 'foundation' name sometimes carries the charity
confusion, and to be clear that I think the stakes on this matter are
small enough that it doesn't require a careful weighing of interests.
These concerns may matter for other initiatives but as you note, LF
has zero stake beyond the general support of the open source
ecosystem.

I do not believe it would be wise to delete the SF account, at least
while there are many active links to it. As it might well be recreated
to 'mirror' things as a 'service' to those following the old links.

I also agree with Jeff's comments wrt, bitcoin-security.



From gmaxwell at gmail.com  Sun Jun 14 23:02:51 2015
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sun, 14 Jun 2015 23:02:51 +0000
Subject: [Bitcoin-development] [RFC] Canonical input and output ordering
 in transactions
In-Reply-To: <87k2vhfnx9.fsf@rustcorp.com.au>
References: <87k2vhfnx9.fsf@rustcorp.com.au>
Message-ID: <CAAS2fgRgWZX_O_2O1bgdFd_04xVp5Lnpw4hf=v6RSTXmsbdzPQ@mail.gmail.com>

On Sat, Jun 6, 2015 at 4:42 AM, Rusty Russell <rusty at rustcorp.com.au> wrote:
> Title: Canonical Input and Output Ordering
> Author: Rusty Russell <rusty at rustcorp.com.au>
> Discussions-To: "Bitcoin Dev" <bitcoin-development at lists.sourceforge.net>
> Status: Draft
> Type: Standards Track
> Created: 2015-06-06
>
> Abstract
>
> This BIP provides a canonical ordering of inputs and outputs when
> creating transactions.
>
> Motivation
>
> Most bitcoin wallet implementations randomize the outputs of
> transactions they create to avoid trivial linkage analysis (especially
> change outputs), however implementations have made mistakes in this area
> in the past.
>
> Using a canonical ordering has the same effect, but is simpler, more
> obvious if incorrect, and can eventually be enforced by IsStandard() and
> even a soft-fork to enforce it.
>
> Specification
>
> Inputs should be ordered like so:
>         index (lower value first)
>         txid (little endian order, lower byte first)
>
> Outputs should be ordered like so:
>         amount (lower value first)
>         script (starting from first byte, lower byte first, shorter wins)
>
> Rationale
>
> Any single wallet is already free to implement this, but if other
> wallets do not it would reduce privacy by making those transactions
> stand out.  Thus a BIP is appropriate, especially if this were to
> become an IsStandard() rule once widely adopted.
>
> Because integers are fast to compare, they're sorted first, before the
> lexographical ordering.
>
> The other input fields do not influence the sort order, as any valid
> transactions cannot have two inputs with the same index and txid.
>
> Reference Implementation
>
> https://github.com/rustyrussell/bitcoin/tree/bip-in-out-ordering


Sorry I wasn't a part of the IRC conversation where this was first
discussed, though I'm very happy to see a concrete implementation
along with the proposal.

I'm not a great fan of this proposal for two reasons: The first is
that the strict ordering requirements is incompatible with future
soft-forks that may expose additional ordering constraints. Today we
have _SINGLE, which as noted this interacts with poorly, but there
have been other constraints proposed that this would also interact
with poorly.

The second is that even absent consensus rules there may be invisible
constraints in systems-- e.g. hardware wallets that sign top down, or
future transaction covenants that have constraints about ordering,  or
proof systems that use (yuck) midstate compression for efficiency.
Right now, with random ordering these applications are fairly
indistinguishable from other random uses (since their imposed order
could come about by chance) but if everyone else was ordered, even if
wasn't enforced.. these would be highly distinguishable. Which would
be unfortunate.  Worse, if most transactions are ordered the few that
aren't could be mishandled (which is, I assume, part of why you
propose requiring the ordering-- but I think the soft fork constraints
there hurt it more).

[Sorry for the delay in stating my views here; I wanted to talk them
over with a few other people to see if I was just being stupid and
misunderstanding the proposal]

I think perhaps the motivations here are understated. We have not seen
any massive deployments of accidentally broken ordering that I'm aware
of-- and an implementation that got this wrong in a harmful way would
likely make far more fatal mistakes (e.g. non random private keys).
As an alternative to this proposal the ordering can be privately
derandomized in the same way DSA is, to avoid the need for an actual
number source.  If getting the randomness right were really the only
motivation, I'd suggest we propose a simple derandomized randomization
algorithm--- e.g. take the order from (H(input ids||client secret)).

I think there is actually an unstated motivation also driving this
(and the other) proposal related to collaborative transaction systems
like coinjoins or micropayment channels; where multiple clients need
to agree on the same ordering. Is this the case? If so we should
probably talk through some of the requirements there and see if there
isn't a better way to address it.



From gmaxwell at gmail.com  Sun Jun 14 23:04:58 2015
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sun, 14 Jun 2015 23:04:58 +0000
Subject: [Bitcoin-development] [RFC] Canonical input and output ordering
 in transactions
In-Reply-To: <CAJN5wHVSK-oW+zVZmEMfyFkd+GUHRhFHEjEmKrdvqas3LzY0zw@mail.gmail.com>
References: <87k2vhfnx9.fsf@rustcorp.com.au>
	<CAJN5wHVSK-oW+zVZmEMfyFkd+GUHRhFHEjEmKrdvqas3LzY0zw@mail.gmail.com>
Message-ID: <CAAS2fgT95wqvFrjF8-c8vKtrX8ZHSA_heK2FFwnnBZnVomfRnw@mail.gmail.com>

On Mon, Jun 8, 2015 at 9:25 PM, Danny Thorpe <danny.thorpe at gmail.com> wrote:
> Recommending sorting of the inputs and outputs as a best practice is fine
> (and better than random, IMO), but not as part of IsStandard() or consensus
> rules.  There are cases where the order of the inputs and outputs is
> significant.

Is it your opinion that its fine if the result is that it makes the
usage trivially distinguishable e.g. where it might be subjected to
higher tx fees, or might break some software which incorrectly expects
all transactions to be ordered since most are?



From adam at cypherspace.org  Sun Jun 14 23:58:10 2015
From: adam at cypherspace.org (Adam Back)
Date: Mon, 15 Jun 2015 01:58:10 +0200
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
Message-ID: <CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com>

Hi Mike

On 15 June 2015 at 00:23, Mike Hearn <mike at plan99.net> wrote:
>> One thing that is concerning is that few in industry seem inclined to
>> take any development initiatives or even integrate a library.
>
> Um, you mean except all the people who have built more scalable wallets over
> the past few years, which is the only reason anyone can even use Bitcoin
> from their phone?

No slight intended obviously to people who do write actual client code.

That was probably insufficiently specific, let me rephrase: I am
referring to the trend that much of the industry is built on web2.0
technology using bitcoin via a library in a web scripting language,
often with consensus bugs, and even outsourcing and not even running
their own full node, so that the service itself offered to their users
isn't even SPV secure to the operator.  As well as being heavily based
on a third-party custody model that is the root cause of the repeated
wallet breaches.  Some of these companies have a noted tendency not to
upgrade or fix code.

So I mean this not to call out specific companies, but in the sense
that if we're technologists we should be trying to move the technology
forward, not just changing parameters which run into an O(n^2) scaling
wall or break decentralisation security.  And we shouldnt take the
above state of affairs as an immutable reality.  It can not persist
for bitcoin to reach maturity on scale nor security.

> I still think you guys don't recognise what you are actually asking for here
> - scrapping virtually the entire existing investment in software, wallets
> and tools.

As I said I dont think we can expect Bitcoin to scale with no further
algorithmic improvements.  Algorithmic improvements take code.  There
is reasonable scope to build in an incrementally deployable way,
there's plenty of time for people to code, test and opt-in to things,
the sky is not falling.  Companies do care about scaling, and can
invest in the integration and coding implied to improve their products
scalability, they have an economic incentive to do it and there is no
scalable and safe way todo it without this work.

> Computational complexity for the entire network is O(nm) where
> n=transactions and m=fully validating nodes. There is no fixed relationships
> between those two variables.

I am referring to global bandwidth O(n^2) with n=users, or O(n) per
user bandwidth cost to the system, while O(nm) is accurate nodes is an
internal system concept.  Anyway suffice to say the network does not
scale O(1) in per user cost.

> "Exposing the companies to back-pressure" sounds quite nice and gentle. Let
> me rephrase it to be equivalent but perhaps more direct: you mean "breaking
> the current software ecosystem to force people into a new, fictional system
> that bears little resemblance to the Bitcoin we use today, whether they want
> that or not".
>
> As nothing that has been proposed so far (Lightning, merge mined chains,
> extension blocks etc) has much chance of actual deployment any time soon,
> that leaves raising the block size limit as the only possible path left.

A hard-fork takes a long period of time to deploy due to the
non-upgrade risk, people are working on things in the mean-time.
There can be a case for some increase to create some breathing room to
work on scaling and decentralising tech, I just mean to say that if we
do it in isolation, we're not focussing on the big picture.

Adam



From adam at cypherspace.org  Mon Jun 15 00:04:44 2015
From: adam at cypherspace.org (Adam Back)
Date: Mon, 15 Jun 2015 02:04:44 +0200
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
	non-consensus hard-fork
Message-ID: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>

Mike Hearn <mike at plan99.net> wrote:
> Which is why there will soon be a fork that does it.

I understand why you would be keen to scale bitcoin, everyone here is.

But as you seem to be saying that you will do a unilateral hard-fork,
and fork the code-base simultaneously, probably a number of people
have questions, so I'll start with some:

( I noticed some of your initial thoughts are online here
https://www.youtube.com/watch?v=DB9goUDBAR0 or the full podcast
https://epicenterbitcoin.com/podcast/082/ )

- Are you releasing a BIP for that proposal for review?

- If the reviewers all say NACK will you take on board their suggestions?

- On the idea of a non-consensus hard-fork at all, I think we can
assume you will get a row of NACKs.  Can you explain your rationale
for going ahead anyway?  The risks are well understood and enormous.

- How do you propose to deal with the extra risks that come from
non-consensus hard-forks?  Hard-forks themselves are quite risky, but
non-consensus ones are extremely dangerous for consensus.

- If you're going it alone as it were, are you proposing that you will
personally maintain bitcoin-XT?  Or do you have a plan to later hand
over maintenance to the bitcoin developers?

- Do you have contingency plans for what to do if the non-consensus
hard-fork goes wrong and $3B is lost as a result?


As you can probably tell I think a unilateral fork without wide-scale
consensus from the technical and business communities is a deeply
inadvisable.  While apparently some companies have expressed interest
in increased scale, I can only assume they do no yet understand the
risks.  I suggest before they would actually go ahead that they seek
independent advice.

Of the overall process, I think you can agree we should not be making
technical decisions with this level of complexity and consensus risk
with financial implications of this magnitude under duress of haste?
This seems otherwise a little like the moral hazard of the 2008
financial collapse that Satoshi put the quote in the genesis block
about.

I think its best that we progress as Jeff Garzik has done to have
engineering discussions centre around BIPs, running code for review,
simulation and careful analysis.

I understand this has been going on for a long time, and some people
are frustrated with the rate of progress, but making hasty,
contentious or unilateral actions in this space is courting disaster.

Please use your considerable skills to, along with the rest of the
community, work on this problem collaboratively.

I can sincerely assure you everyone does want to scale bitcoin and
shares your long term objective on that.

Adam



From elombrozo at gmail.com  Mon Jun 15 00:53:05 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 14 Jun 2015 17:53:05 -0700
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
	<CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com>
Message-ID: <674CED15-3F4C-4E24-BCA2-3C474CC01708@gmail.com>

I think the whole complexity talk is missing the bigger issue.

Sure, per block validation scales linearly (or quasilinearly?there?s an O(log n) term in there somewhere but it?s probably dominated by linear factors at current levels?asymptotic limits don?t always apply very well to finite systems). And there?s an O(n^2) bandwidth issue.

The real issue, though, is validation cost. The n in O(n) here does not represent block size - it represents the size of the entire block chain for every new validator that must be synchronized! It means we have no way to construct short proofs (or at least arguments that are computationally *hard* to forge) without requiring the validator to maintain the complete system state. And currently, there is no mechanism for directly compensating validators.

A full validator that goes offline even for a short period of time takes a while to fully catch up to the rest of the network - and starting up a new validator from scratch will continue to be painful?even for those of us who?ve turned this into routine by now, let alone new nontechnical users.

Satoshi?s SPV is not a real solution - it?s a mere suggestion that wasn?t fully thought out at the time of the Bitcoin white paper. Besides lacking a good validation security model, practical implementations of it weaken privacy and complicate client implementations substantially?and the worst part, it still doesn?t scale all that well. The validator still has to query every single block (even if filtered) back to the first transaction (which cannot be determined without doing a blockchain scan anyway).

So yes, we will most certainly need algorithmic improvements!

- Eric Lombrozo


> On Jun 14, 2015, at 4:58 PM, Adam Back <adam at cypherspace.org> wrote:
> 
> Hi Mike
> 
> On 15 June 2015 at 00:23, Mike Hearn <mike at plan99.net> wrote:
>>> One thing that is concerning is that few in industry seem inclined to
>>> take any development initiatives or even integrate a library.
>> 
>> Um, you mean except all the people who have built more scalable wallets over
>> the past few years, which is the only reason anyone can even use Bitcoin
>> from their phone?
> 
> No slight intended obviously to people who do write actual client code.
> 
> That was probably insufficiently specific, let me rephrase: I am
> referring to the trend that much of the industry is built on web2.0
> technology using bitcoin via a library in a web scripting language,
> often with consensus bugs, and even outsourcing and not even running
> their own full node, so that the service itself offered to their users
> isn't even SPV secure to the operator.  As well as being heavily based
> on a third-party custody model that is the root cause of the repeated
> wallet breaches.  Some of these companies have a noted tendency not to
> upgrade or fix code.
> 
> So I mean this not to call out specific companies, but in the sense
> that if we're technologists we should be trying to move the technology
> forward, not just changing parameters which run into an O(n^2) scaling
> wall or break decentralisation security.  And we shouldnt take the
> above state of affairs as an immutable reality.  It can not persist
> for bitcoin to reach maturity on scale nor security.
> 
>> I still think you guys don't recognise what you are actually asking for here
>> - scrapping virtually the entire existing investment in software, wallets
>> and tools.
> 
> As I said I dont think we can expect Bitcoin to scale with no further
> algorithmic improvements.  Algorithmic improvements take code.  There
> is reasonable scope to build in an incrementally deployable way,
> there's plenty of time for people to code, test and opt-in to things,
> the sky is not falling.  Companies do care about scaling, and can
> invest in the integration and coding implied to improve their products
> scalability, they have an economic incentive to do it and there is no
> scalable and safe way todo it without this work.
> 
>> Computational complexity for the entire network is O(nm) where
>> n=transactions and m=fully validating nodes. There is no fixed relationships
>> between those two variables.
> 
> I am referring to global bandwidth O(n^2) with n=users, or O(n) per
> user bandwidth cost to the system, while O(nm) is accurate nodes is an
> internal system concept.  Anyway suffice to say the network does not
> scale O(1) in per user cost.
> 
>> "Exposing the companies to back-pressure" sounds quite nice and gentle. Let
>> me rephrase it to be equivalent but perhaps more direct: you mean "breaking
>> the current software ecosystem to force people into a new, fictional system
>> that bears little resemblance to the Bitcoin we use today, whether they want
>> that or not".
>> 
>> As nothing that has been proposed so far (Lightning, merge mined chains,
>> extension blocks etc) has much chance of actual deployment any time soon,
>> that leaves raising the block size limit as the only possible path left.
> 
> A hard-fork takes a long period of time to deploy due to the
> non-upgrade risk, people are working on things in the mean-time.
> There can be a case for some increase to create some breathing room to
> work on scaling and decentralising tech, I just mean to say that if we
> do it in isolation, we're not focussing on the big picture.
> 
> Adam
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/22d4865e/attachment.sig>

From elombrozo at gmail.com  Mon Jun 15 00:55:07 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 14 Jun 2015 17:55:07 -0700
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <674CED15-3F4C-4E24-BCA2-3C474CC01708@gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
	<CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com>
	<674CED15-3F4C-4E24-BCA2-3C474CC01708@gmail.com>
Message-ID: <35D2C620-DCCF-4D2C-B72C-07B276A28862@gmail.com>


> On Jun 14, 2015, at 5:53 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> 
> I think the whole complexity talk is missing the bigger issue.
> 
> Sure, per block validation scales linearly (or quasilinearly?there?s an O(log n) term in there somewhere but it?s probably dominated by linear factors at current levels?asymptotic limits don?t always apply very well to finite systems). And there?s an O(n^2) bandwidth issue.

For accuracy?s sake, I meant to say O(n log n).

> 
> The real issue, though, is validation cost. The n in O(n) here does not represent block size - it represents the size of the entire block chain for every new validator that must be synchronized! It means we have no way to construct short proofs (or at least arguments that are computationally *hard* to forge) without requiring the validator to maintain the complete system state. And currently, there is no mechanism for directly compensating validators.
> 
> A full validator that goes offline even for a short period of time takes a while to fully catch up to the rest of the network - and starting up a new validator from scratch will continue to be painful?even for those of us who?ve turned this into routine by now, let alone new nontechnical users.
> 
> Satoshi?s SPV is not a real solution - it?s a mere suggestion that wasn?t fully thought out at the time of the Bitcoin white paper. Besides lacking a good validation security model, practical implementations of it weaken privacy and complicate client implementations substantially?and the worst part, it still doesn?t scale all that well. The validator still has to query every single block (even if filtered) back to the first transaction (which cannot be determined without doing a blockchain scan anyway).
> 
> So yes, we will most certainly need algorithmic improvements!
> 
> - Eric Lombrozo
> 
> 
>> On Jun 14, 2015, at 4:58 PM, Adam Back <adam at cypherspace.org> wrote:
>> 
>> Hi Mike
>> 
>> On 15 June 2015 at 00:23, Mike Hearn <mike at plan99.net> wrote:
>>>> One thing that is concerning is that few in industry seem inclined to
>>>> take any development initiatives or even integrate a library.
>>> 
>>> Um, you mean except all the people who have built more scalable wallets over
>>> the past few years, which is the only reason anyone can even use Bitcoin
>>> from their phone?
>> 
>> No slight intended obviously to people who do write actual client code.
>> 
>> That was probably insufficiently specific, let me rephrase: I am
>> referring to the trend that much of the industry is built on web2.0
>> technology using bitcoin via a library in a web scripting language,
>> often with consensus bugs, and even outsourcing and not even running
>> their own full node, so that the service itself offered to their users
>> isn't even SPV secure to the operator.  As well as being heavily based
>> on a third-party custody model that is the root cause of the repeated
>> wallet breaches.  Some of these companies have a noted tendency not to
>> upgrade or fix code.
>> 
>> So I mean this not to call out specific companies, but in the sense
>> that if we're technologists we should be trying to move the technology
>> forward, not just changing parameters which run into an O(n^2) scaling
>> wall or break decentralisation security.  And we shouldnt take the
>> above state of affairs as an immutable reality.  It can not persist
>> for bitcoin to reach maturity on scale nor security.
>> 
>>> I still think you guys don't recognise what you are actually asking for here
>>> - scrapping virtually the entire existing investment in software, wallets
>>> and tools.
>> 
>> As I said I dont think we can expect Bitcoin to scale with no further
>> algorithmic improvements.  Algorithmic improvements take code.  There
>> is reasonable scope to build in an incrementally deployable way,
>> there's plenty of time for people to code, test and opt-in to things,
>> the sky is not falling.  Companies do care about scaling, and can
>> invest in the integration and coding implied to improve their products
>> scalability, they have an economic incentive to do it and there is no
>> scalable and safe way todo it without this work.
>> 
>>> Computational complexity for the entire network is O(nm) where
>>> n=transactions and m=fully validating nodes. There is no fixed relationships
>>> between those two variables.
>> 
>> I am referring to global bandwidth O(n^2) with n=users, or O(n) per
>> user bandwidth cost to the system, while O(nm) is accurate nodes is an
>> internal system concept.  Anyway suffice to say the network does not
>> scale O(1) in per user cost.
>> 
>>> "Exposing the companies to back-pressure" sounds quite nice and gentle. Let
>>> me rephrase it to be equivalent but perhaps more direct: you mean "breaking
>>> the current software ecosystem to force people into a new, fictional system
>>> that bears little resemblance to the Bitcoin we use today, whether they want
>>> that or not".
>>> 
>>> As nothing that has been proposed so far (Lightning, merge mined chains,
>>> extension blocks etc) has much chance of actual deployment any time soon,
>>> that leaves raising the block size limit as the only possible path left.
>> 
>> A hard-fork takes a long period of time to deploy due to the
>> non-upgrade risk, people are working on things in the mean-time.
>> There can be a case for some increase to create some breathing room to
>> work on scaling and decentralising tech, I just mean to say that if we
>> do it in isolation, we're not focussing on the big picture.
>> 
>> Adam
>> 
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/f6fc3e19/attachment.sig>

From jgarzik at bitpay.com  Mon Jun 15 02:28:02 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Sun, 14 Jun 2015 22:28:02 -0400
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
Message-ID: <CAJHLa0Mj7kAz4=yrZo=+nvoV97rF_xAvHGt+A3D2qE3P16zKBw@mail.gmail.com>

On Sun, Jun 14, 2015 at 5:23 PM, Adam Back <adam at cypherspace.org> wrote:

> Hi
>
> I made these comments elsewhere, but I think really we should be
> having these kind of conversations here rather than scattered around.
>
> These are about Jeff Garzik's outline draft BIP 100 I guess this is
> the latest draft:  (One good thing about getting off SF would be
> finally JGarzik's emails actually not getting blocked!).
>
> http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf
>
> may have changed since the original [1]
>
> Over the original proposal:
>
> 1. there should be a hard cap, not indefinitely growing.
>
>
In the latest draft there is an explicit 32MB ceiling now.

Users will need to opt into growth beyond 32MB via a 2nd hard fork.



> 2. there should be  a growth limiter (no more than X%/year)
>
>
As a general principle, this is an area of market disagreement, and should
not be our call.  Encoding this into software veers into personal opinion
about what economic policy should be.

That said  -- BIP 100, as a compromise, includes a growth limiter.  Abrupt
change (1MB -> 32MB!) is awful on markets.  Good policies include a
measured pace of transition from policy A to policy B.  It gives the
community time to assess system effectiveness - while also allowing free
market input.

In the long run I hope the cap is removed (see below), and the intention is
to -slowly- and -transparently- move from the tightly controlled limit to
something the free market and users are choosing.




> 3. I think the miners should not be given a vote that has no costs to
> cast, because their interests are not necessarily aligned with users
> or businesses.
>
> I think Greg Maxwell's difficulty adjust [2] is better here for that
> reason.  It puts quadratic cost via higher difficulty for miners to
> vote to increase block-size, which miners can profitably do if there
> are transactions with fees available to justify it. There is also the
> growth limiter as part of Greg's proposal. [3]
>
>
"paying with difficulty" has severe negative elements that will likely
cause it never to be used:
- complex and difficult for miners to reason
- fails the opportunity cost test - dollar cost lost losing the block race
versus value gained by increasing block size
- inherently unpredictable in the short term - user experience is that it's
possibly difficult to see a gain in utility versus the revenue you are
giving up
- REQUIRES informal miner collusion - probably less transparent than BIP
100 - in order to solve the who-goes-first problem.
- net result: tough sell

Paying bitcoins to future miners makes a lot more sense.  Initially I was a
fan of pay-with-diff, but freezing bitcoins (CLTV) or timelock'd
anyone-can-spend has much more clear incentives, if you want to go down
that road.

Problems with pay-to-increase-block-size:
- how much to pay?  You are inherently setting your growth policy on top of
bitcoin by choosing a price here.
- another who-goes-first problem

Anyway, there is a natural equilibrium block size that the free market and
user choice will seek.

Related:  There is a lot of naive "miner = max income = max block size"
reasoning going on, with regards to fees.  This is defining the bounds of
an economically scarce resource.  There are many reasons why a miner will
today, in the real world, limit their block size. WRT fee income, if block
size is too large the fee competition in the overall market is low-to-zero,
fee income rapidly collapses.  Then factor in price and demand elasticity
on top of that.

Quite frankly, there seems to be a natural block size equilibrium ceiling,
and I worry about miners squeezing the market by maximizing their fee
income through constrained block sizes and competition at the low end.
This is of course already possible today - miners may openly or covertly
collude to keep the block size low.














> I think bitcoin will have to involve layering models that uplift
> security to higher layers, but preserve security assurances, and
> smart-contracts even, with protocols that improve the algorithmic
> complexity beyond O(n^2) in users, like lightning, and there are
> multiple other candidates with useful tradeoffs for various use-cases.
>
> One thing that is concerning is that few in industry seem inclined to
> take any development initiatives or even integrate a library.  I
> suppose eventually that problem would self-correct as new startups
> would make a more scalable wallet and services that are layer2 aware
> and eat the lunch of the laggards.  But it will be helpful if we
> expose companies to the back-pressure actually implied by an O(n^2)
> scaling protocol and don't just immediately increase the block-size to
> levels that are dangerous for decentralisation security, as an
> interventionist subsidy to save them having to do basic integration
> work.  Otherwise I think whichever any kind of kick the can some 2-5
> years down the road we consider, we risk the whole saga repeating in a
> few years, when no algorithmic progress has been made and even more
> protocol inertia has set in.
>
> Adam
>
> [1] original proposal comments on reddit
>
> https://www.reddit.com/r/Bitcoin/comments/39kzyt/draft_bip_100_soft_fork_block_size_increase/
>
> [2] flexcap propoal by Greg Maxwell see post by Mark Freidenbach
>
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07599.html
>
> [3] growth limited proposal for flexcap by Greg Maxwell
>
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07620.html
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/714f63f5/attachment.html>

From rusty at rustcorp.com.au  Mon Jun 15 02:29:11 2015
From: rusty at rustcorp.com.au (Rusty Russell)
Date: Mon, 15 Jun 2015 11:59:11 +0930
Subject: [Bitcoin-development] [RFC] Canonical input and output ordering
	in transactions
In-Reply-To: <CAAS2fgRgWZX_O_2O1bgdFd_04xVp5Lnpw4hf=v6RSTXmsbdzPQ@mail.gmail.com>
References: <87k2vhfnx9.fsf@rustcorp.com.au>
	<CAAS2fgRgWZX_O_2O1bgdFd_04xVp5Lnpw4hf=v6RSTXmsbdzPQ@mail.gmail.com>
Message-ID: <87r3pdembs.fsf@rustcorp.com.au>

Gregory Maxwell <gmaxwell at gmail.com> writes:
> I'm not a great fan of this proposal for two reasons: The first is
> that the strict ordering requirements is incompatible with future
> soft-forks that may expose additional ordering constraints. Today we
> have _SINGLE, which as noted this interacts with poorly, but there
> have been other constraints proposed that this would also interact
> with poorly.

Yes, I hit this when I implemented an IsStandard change; upon input
evaluation the scriptsigs which used _SINGLE get disregarded from
ordering.  

> The second is that even absent consensus rules there may be invisible
> constraints in systems-- e.g. hardware wallets that sign top down,

I think that one's pretty easy to fix (and they should fix it anyway, to
avoid leaking information due to ordering): they can receive an
unordered tx and sign it as if it were ordered canonically.

> or
> future transaction covenants that have constraints about ordering,  or
> proof systems that use (yuck) midstate compression for efficiency.

The softfork argument I find the most compelling, though it's tempting
to argue that every ordering use (including SIGHASH_SINGLE) is likely
a mistake.

> I think perhaps the motivations here are understated. We have not seen
> any massive deployments of accidentally broken ordering that I'm aware
> of-- and an implementation that got this wrong in a harmful way would
> likely make far more fatal mistakes (e.g. non random private keys).

I was prompted to propose something by this:

https://blog.blocktrail.com/2015/05/getting-your-change-in-order/

If that's the only one though, it's less compelling.

> As an alternative to this proposal the ordering can be privately
> derandomized in the same way DSA is, to avoid the need for an actual
> number source.  If getting the randomness right were really the only
> motivation, I'd suggest we propose a simple derandomized randomization
> algorithm--- e.g. take the order from (H(input ids||client secret)).
>
> I think there is actually an unstated motivation also driving this
> (and the other) proposal related to collaborative transaction systems
> like coinjoins or micropayment channels; where multiple clients need
> to agree on the same ordering. Is this the case? If so we should
> probably talk through some of the requirements there and see if there
> isn't a better way to address it.

Indeed.  I was implementing deterministic permutations for lightning
(signature exchange requires both sides agree on ordering).

Cheers,
Rusty.



From gmaxwell at gmail.com  Mon Jun 15 02:33:03 2015
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 15 Jun 2015 02:33:03 +0000
Subject: [Bitcoin-development] [RFC] Canonical input and output ordering
 in transactions
In-Reply-To: <87r3pdembs.fsf@rustcorp.com.au>
References: <87k2vhfnx9.fsf@rustcorp.com.au>
	<CAAS2fgRgWZX_O_2O1bgdFd_04xVp5Lnpw4hf=v6RSTXmsbdzPQ@mail.gmail.com>
	<87r3pdembs.fsf@rustcorp.com.au>
Message-ID: <CAAS2fgTY5cqwj5XuKtkD8Z8N1vF=PZMba8EtGkbWnEackOcN8Q@mail.gmail.com>

On Mon, Jun 15, 2015 at 2:29 AM, Rusty Russell <rusty at rustcorp.com.au> wrote:
> The softfork argument I find the most compelling, though it's tempting
> to argue that every ordering use (including SIGHASH_SINGLE) is likely
> a mistake.

Oh.

Hm.

It is the case that the generalized sighash flag design I was thinking
about was actually completely neutral about ordering, and yet still
replaced SINGLE.

I need to think a bit on that.



From jgarzik at bitpay.com  Mon Jun 15 02:44:22 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Sun, 14 Jun 2015 22:44:22 -0400
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <CAJHLa0Mj7kAz4=yrZo=+nvoV97rF_xAvHGt+A3D2qE3P16zKBw@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CAJHLa0Mj7kAz4=yrZo=+nvoV97rF_xAvHGt+A3D2qE3P16zKBw@mail.gmail.com>
Message-ID: <CAJHLa0OcHuWcQeS7dRYHjyqBBkLyxr3XXe2sYGC9Xh2e4UOKDw@mail.gmail.com>

Adding - in re pay-to-FOO - these schemes are inherently short term, such
that it is near-impossible for the market to plan for what happens in 12+
months.

On Sun, Jun 14, 2015 at 10:28 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:

> On Sun, Jun 14, 2015 at 5:23 PM, Adam Back <adam at cypherspace.org> wrote:
>
>> Hi
>>
>> I made these comments elsewhere, but I think really we should be
>> having these kind of conversations here rather than scattered around.
>>
>> These are about Jeff Garzik's outline draft BIP 100 I guess this is
>> the latest draft:  (One good thing about getting off SF would be
>> finally JGarzik's emails actually not getting blocked!).
>>
>> http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf
>>
>> may have changed since the original [1]
>>
>> Over the original proposal:
>>
>> 1. there should be a hard cap, not indefinitely growing.
>>
>>
> In the latest draft there is an explicit 32MB ceiling now.
>
> Users will need to opt into growth beyond 32MB via a 2nd hard fork.
>
>
>
>> 2. there should be  a growth limiter (no more than X%/year)
>>
>>
> As a general principle, this is an area of market disagreement, and should
> not be our call.  Encoding this into software veers into personal opinion
> about what economic policy should be.
>
> That said  -- BIP 100, as a compromise, includes a growth limiter.  Abrupt
> change (1MB -> 32MB!) is awful on markets.  Good policies include a
> measured pace of transition from policy A to policy B.  It gives the
> community time to assess system effectiveness - while also allowing free
> market input.
>
> In the long run I hope the cap is removed (see below), and the intention
> is to -slowly- and -transparently- move from the tightly controlled limit
> to something the free market and users are choosing.
>
>
>
>
>> 3. I think the miners should not be given a vote that has no costs to
>> cast, because their interests are not necessarily aligned with users
>> or businesses.
>>
>> I think Greg Maxwell's difficulty adjust [2] is better here for that
>> reason.  It puts quadratic cost via higher difficulty for miners to
>> vote to increase block-size, which miners can profitably do if there
>> are transactions with fees available to justify it. There is also the
>> growth limiter as part of Greg's proposal. [3]
>>
>>
> "paying with difficulty" has severe negative elements that will likely
> cause it never to be used:
> - complex and difficult for miners to reason
> - fails the opportunity cost test - dollar cost lost losing the block race
> versus value gained by increasing block size
> - inherently unpredictable in the short term - user experience is that
> it's possibly difficult to see a gain in utility versus the revenue you are
> giving up
> - REQUIRES informal miner collusion - probably less transparent than BIP
> 100 - in order to solve the who-goes-first problem.
> - net result: tough sell
>
> Paying bitcoins to future miners makes a lot more sense.  Initially I was
> a fan of pay-with-diff, but freezing bitcoins (CLTV) or timelock'd
> anyone-can-spend has much more clear incentives, if you want to go down
> that road.
>
> Problems with pay-to-increase-block-size:
> - how much to pay?  You are inherently setting your growth policy on top
> of bitcoin by choosing a price here.
> - another who-goes-first problem
>
> Anyway, there is a natural equilibrium block size that the free market and
> user choice will seek.
>
> Related:  There is a lot of naive "miner = max income = max block size"
> reasoning going on, with regards to fees.  This is defining the bounds of
> an economically scarce resource.  There are many reasons why a miner will
> today, in the real world, limit their block size. WRT fee income, if block
> size is too large the fee competition in the overall market is low-to-zero,
> fee income rapidly collapses.  Then factor in price and demand elasticity
> on top of that.
>
> Quite frankly, there seems to be a natural block size equilibrium ceiling,
> and I worry about miners squeezing the market by maximizing their fee
> income through constrained block sizes and competition at the low end.
> This is of course already possible today - miners may openly or covertly
> collude to keep the block size low.
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>> I think bitcoin will have to involve layering models that uplift
>> security to higher layers, but preserve security assurances, and
>> smart-contracts even, with protocols that improve the algorithmic
>> complexity beyond O(n^2) in users, like lightning, and there are
>> multiple other candidates with useful tradeoffs for various use-cases.
>>
>> One thing that is concerning is that few in industry seem inclined to
>> take any development initiatives or even integrate a library.  I
>> suppose eventually that problem would self-correct as new startups
>> would make a more scalable wallet and services that are layer2 aware
>> and eat the lunch of the laggards.  But it will be helpful if we
>> expose companies to the back-pressure actually implied by an O(n^2)
>> scaling protocol and don't just immediately increase the block-size to
>> levels that are dangerous for decentralisation security, as an
>> interventionist subsidy to save them having to do basic integration
>> work.  Otherwise I think whichever any kind of kick the can some 2-5
>> years down the road we consider, we risk the whole saga repeating in a
>> few years, when no algorithmic progress has been made and even more
>> protocol inertia has set in.
>>
>> Adam
>>
>> [1] original proposal comments on reddit
>>
>> https://www.reddit.com/r/Bitcoin/comments/39kzyt/draft_bip_100_soft_fork_block_size_increase/
>>
>> [2] flexcap propoal by Greg Maxwell see post by Mark Freidenbach
>>
>> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07599.html
>>
>> [3] growth limited proposal for flexcap by Greg Maxwell
>>
>> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07620.html
>>
>>
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
>
> --
> Jeff Garzik
> Bitcoin core developer and open source evangelist
> BitPay, Inc.      https://bitpay.com/
>



-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/c24608ef/attachment.html>

From mark at friedenbach.org  Mon Jun 15 02:47:15 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Sun, 14 Jun 2015 19:47:15 -0700
Subject: [Bitcoin-development] [RFC] Canonical input and output ordering
 in transactions
In-Reply-To: <CAAS2fgTY5cqwj5XuKtkD8Z8N1vF=PZMba8EtGkbWnEackOcN8Q@mail.gmail.com>
References: <87k2vhfnx9.fsf@rustcorp.com.au>
	<CAAS2fgRgWZX_O_2O1bgdFd_04xVp5Lnpw4hf=v6RSTXmsbdzPQ@mail.gmail.com>
	<87r3pdembs.fsf@rustcorp.com.au>
	<CAAS2fgTY5cqwj5XuKtkD8Z8N1vF=PZMba8EtGkbWnEackOcN8Q@mail.gmail.com>
Message-ID: <CAOG=w-tJjzrR_REJOShULfSO=T3ueHko-oQHdhqMCdZD0G_BDA@mail.gmail.com>

There's another important use case which you mentioned Greg, that also
requires special exemption: compact commitments via mid-state compression.

The use case is an OP_RETURN output sorted last, whose last N bytes are a
commitment of some kind. A proof of the commitment can then use mid state
compression to elide the beginning of the transaction.

How do you make a special exemption for this category of outputs? I can't
think of a very clean way of doing so that doesn't require an ugly
advertising of sort-order exemptions.

The fact that we have two different existing use cases which conflict with
soft-fork enforcement, I'm quiet concerned that there are either other
things we aren't thinking of or haven't invented yet which would be
affected.

On Sun, Jun 14, 2015 at 7:33 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> On Mon, Jun 15, 2015 at 2:29 AM, Rusty Russell <rusty at rustcorp.com.au>
> wrote:
> > The softfork argument I find the most compelling, though it's tempting
> > to argue that every ordering use (including SIGHASH_SINGLE) is likely
> > a mistake.
>
> Oh.
>
> Hm.
>
> It is the case that the generalized sighash flag design I was thinking
> about was actually completely neutral about ordering, and yet still
> replaced SINGLE.
>
> I need to think a bit on that.
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/cd07104d/attachment.html>

From wtogami at gmail.com  Mon Jun 15 03:19:09 2015
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Sun, 14 Jun 2015 17:19:09 -1000
Subject: [Bitcoin-development] Proposal: Move Bitcoin Dev List to a
 Neutral Competent Entity
In-Reply-To: <CAJHLa0OOnYMuA-8qfHafw5D0zGw_U06PZaAKS2j=Av_KUhgt-A@mail.gmail.com>
References: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>
	<CAJHLa0OOnYMuA-8qfHafw5D0zGw_U06PZaAKS2j=Av_KUhgt-A@mail.gmail.com>
Message-ID: <CAEz79PrjoD3fvwqmr2+O+8myeQCV_4ZuX4q9zCkQdN=i=ovuMA@mail.gmail.com>

On Sun, Jun 14, 2015 at 5:15 AM, Jeff Garzik <jgarzik at bitpay.com> wrote:

> * ACK on moving away from SourceForge mailing lists - though only once a
> community-welcomed replacement is up and running
>
> * ACK on using LF as a mailing infrastructure provider
>
> * Research secure mailing list models, for bitcoin-security.  The list is
> not ultra high security - we all use PGP for that - but it would perhaps be
> nice to find some spiffy cryptosystem where mailing list participants
> individually hold keys & therefore access.
>
>
While I agree this is a good idea, this should not be a precondition for
moving the public bitcoin-dev list.  The security team needs to separately
research/write tools needed for this.

<jgarzik> warren, wanna just go ahead and create bitcoin-development @ LF?


*More Feedback?*  As for going ahead, perhaps we should wait to hear from
more of the other technical leaders?

*More Questions*

*List Name?*  Would people prefer "bitcoin-development" for he new list
name instead of a shorter name like "bitcoin-dev"?  I personally like the
shorter name, but either is fine.
https://lists.linuxfoundation.org/mailman/listinfo currently has
"sidechains-dev", and "lightning-dev" is moving there sometime soon.

*Proposed Cut-Off Date?*  Then we also need to agree on a date to cut off
the old list.  Their sysadmin said we could have the new list auto-post
from the old list for a short while.  I wonder how well that works ... if
that will result in double posting if people write to the new and CC the
old list.  Needs a little research how well it would behave to have both
lists operating during a transition period.  I think we should announce a
cut-off date when posts to the old list is shut off, July 15th, one month
from now.  Thoughts?

*Moderators?*  Mailman on the new server allows having separate logins for
admins and moderators.  I think the admins of the old SF project are gavin,
jgarzik and sipa... they are kind of busy.  Perhaps we should identify
known trusted community members who can help with moderation.  Usually this
is dealing with "held" messages that are flagged by the spam filter

Warren Togami
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/2768e0e1/attachment.html>

From elombrozo at gmail.com  Mon Jun 15 03:59:05 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 14 Jun 2015 20:59:05 -0700
Subject: [Bitcoin-development] User vote in blocksize through fees
In-Reply-To: <CAJHLa0NrNqECvqhJWNX=rt3-h4U3jwFWoMCrcbyC6hUT5EqWbw@mail.gmail.com>
References: <20150612181153.GB19199@muck>
	<CAJN5wHVj=KfQ3_KYOKee9uq4LNPwQ7x5nGuKDHEMUqGF4LSDLg@mail.gmail.com>
	<CAFzgq-y5xBSXexVi0mJw_w89R2_AHJCgmj=gLN4CK_-YaO4-eg@mail.gmail.com>
	<3BB36FC7-9212-42A1-A756-A66929C15D4F@gmail.com>
	<CAJHLa0Oh0wm_1SynFdCu+WkVD-gTGk0ZUNgQV0GVj0-3zL=zzw@mail.gmail.com>
	<04527D50-0118-4E74-8226-3E29B29CC7D8@gmail.com>
	<CAJHLa0NrNqECvqhJWNX=rt3-h4U3jwFWoMCrcbyC6hUT5EqWbw@mail.gmail.com>
Message-ID: <B90484CB-ECB7-4E71-B085-F914124B17D0@gmail.com>

> On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo <elombrozo at gmail.com <mailto:elombrozo at gmail.com>> wrote:
> 2) BIP100 has direct economic consequences?and particularly for miners. It lends itself to much greater corruptibility.
> 
> 
> What is the alternative?  Have a Chief Scientist or Technical Advisory Board choose what is a proper fee, what is a proper level of decentralization, a proper growth factor?


> On Jun 13, 2015, at 10:36 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:
> 
> The choice is very real and on-point.  What should the block size limit be?  Why?
> 
> There is a large consensus that it needs increasing.  To what?  By what factor?

To be clear, Jeff, I am 100% in agreement with you that a mechanism like what you?re proposing is a million times better than having high priests that ram hard forks without proper consensus. And perhaps given the present circumstances it seems like the only alternative. However, in my mind this block size limit controversy is actually a fairly superficial aspect - a mere symptom, a manifestation of the real problem...

What I find somewhat irksome is that we?ve had six years to figure out a mechanism to enable hard forks (which we knew from the start would be inevitable) - and more to the point, we?ve known about this block size issue from the start as well?and only suddenly it becomes an issue of major urgency that we must bump up this parameter 20x?

- Eric Lombrozo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/012fa37c/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/012fa37c/attachment.sig>

From kristovatlas.lists at gmail.com  Mon Jun 15 04:01:36 2015
From: kristovatlas.lists at gmail.com (Kristov Atlas)
Date: Mon, 15 Jun 2015 00:01:36 -0400
Subject: [Bitcoin-development] [RFC] Canonical input and output ordering
 in transactions
In-Reply-To: <CAAS2fgRgWZX_O_2O1bgdFd_04xVp5Lnpw4hf=v6RSTXmsbdzPQ@mail.gmail.com>
References: <87k2vhfnx9.fsf@rustcorp.com.au>
	<CAAS2fgRgWZX_O_2O1bgdFd_04xVp5Lnpw4hf=v6RSTXmsbdzPQ@mail.gmail.com>
Message-ID: <CAGH37S+674cAVC7=WvST_SPkXjfNkzbj7Y_me_M6C+ieHX6EAA@mail.gmail.com>

On Sun, Jun 14, 2015 at 7:02 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> I'm not a great fan of this proposal for two reasons: The first is
> that the strict ordering requirements is incompatible with future
> soft-forks that may expose additional ordering constraints. Today we
> have _SINGLE, which as noted this interacts with poorly, but there
> have been other constraints proposed that this would also interact
> with poorly.
>

I'm not clear on why this is a problem, so long as the canonical ordering
BIP is *optional*. Unless there is a specific plan to soft fork a change
that would break the BIP and it is fairly imminent, I see this only as a
reason not to integrate it into isStandard().


> The second is that even absent consensus rules there may be invisible
> constraints in systems-- e.g. hardware wallets that sign top down, or
> future transaction covenants that have constraints about ordering,  or
> proof systems that use (yuck) midstate compression for efficiency. Right
> now, with random ordering these applications are fairly
> indistinguishable from other random uses (since their imposed order
> could come about by chance) but if everyone else was ordered, even if
> wasn't enforced.. these would be highly distinguishable. Which would
> be unfortunate.


Maybe they shouldn't be doing that. :-P


> I think perhaps the motivations here are understated. We have not seen
> any massive deployments of accidentally broken ordering that I'm aware
> of-- and an implementation that got this wrong in a harmful way would
> likely make far more fatal mistakes (e.g. non random private keys).
>

In my reading of various wallet client sources, it is common that wallet
clients will use cryptographically weak sources of randomness to sort
outputs -- that is, the ones that actually bother to randomly sort. I can
hunt down some examples if this would substantially contribute to the
discussion.

As an alternative to this proposal the ordering can be privately
> derandomized in the same way DSA is, to avoid the need for an actual
> number source.  If getting the randomness right were really the only
> motivation, I'd suggest we propose a simple derandomized randomization
> algorithm--- e.g. take the order from (H(input ids||client secret)).
>

This sounds similar to an idea that Sergio pitched to me privately, which
was for wallets to have a private sorting key that they can use to sort
inputs and outputs. However, I suspect that adding yet another key which
will necessarily require special key rotation rules and maybe special
backup procedures will mean that this standard will not be widely adopted
any time soon. Ideally, I'd like to see someone write a different BIP with
the sorting key idea and let them compete in the wallet client market
rather than trying to anticipate what is best for all clients and
distilling two good ideas into one artificially.

-Kristov
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/004fad7d/attachment.html>

From pete at petertodd.org  Mon Jun 15 04:11:49 2015
From: pete at petertodd.org (Peter Todd)
Date: Mon, 15 Jun 2015 05:11:49 +0100
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <674CED15-3F4C-4E24-BCA2-3C474CC01708@gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
	<CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com>
	<674CED15-3F4C-4E24-BCA2-3C474CC01708@gmail.com>
Message-ID: <20150615041149.GA13286@muck>

On Sun, Jun 14, 2015 at 05:53:05PM -0700, Eric Lombrozo wrote:
> I think the whole complexity talk is missing the bigger issue.
> 
> Sure, per block validation scales linearly (or quasilinearly?there?s an O(log n) term in there somewhere but it?s probably dominated by linear factors at current levels?asymptotic limits don?t always apply very well to finite systems). And there?s an O(n^2) bandwidth issue.
> 
> The real issue, though, is validation cost. The n in O(n) here does not represent block size - it represents the size of the entire block chain for every new validator that must be synchronized! It means we have no way to construct short proofs (or at least arguments that are computationally *hard* to forge) without requiring the validator to maintain the complete system state. And currently, there is no mechanism for directly compensating validators.

...and can there be? The goal of validation after all is finding if a
mistake has been made, and current production cryptography doesn't have
any way to prove you have done that honestly. You need "moon math" like
recursive SNARKS to do that, and it's unknown when they'll be available
for production usage.

When we say "compensating validators", if we're being honest with
outselves what we really mean is the much more boring task of
compensating servers who are giving us blockchain data. That has nothing
to do with validation.

A useful task would be to make an SPV archival node implementation that
did no validation at all, while distributing the blockchain data linked
to the longest chain. Such an implementation can and should serve SPV
clients, as this is what their actual security model usually is given
the lack of authentication of the identity of the server they're
connecting too. Actually implementing this would be a simple matter of
patching Bitcoin Core to turn off block validation.

> A full validator that goes offline even for a short period of time takes a while to fully catch up to the rest of the network - and starting up a new validator from scratch will continue to be painful?even for those of us who?ve turned this into routine by now, let alone new nontechnical users.

Concretely, 20MB blocks lead to 20GB/week of blocks. On my 1MB/second
down internet, turning on my node after a week away would take five
hours; starting up a new node after two years of 20MB blocks would take
23 days - likely longer in practice.

There's serious unsolved and undiscussed devops and development issues
with this. For instance, after changes to the validation code, it's
routine to resync/reindex Bitcoin Core to ensure starting up a new node
actually works. Even now we haven't really come to grips with what
consistent 1MB blocks looks like from this point of view after a few
years of usage, let another order of magnitude longer sync times.

> Satoshi?s SPV is not a real solution - it?s a mere suggestion that wasn?t fully thought out at the time of the Bitcoin white paper. Besides lacking a good validation security model, practical implementations of it weaken privacy and complicate client implementations substantially?and the worst part, it still doesn?t scale all that well. The validator still has to query every single block (even if filtered) back to the first transaction (which cannot be determined without doing a blockchain scan anyway).

Note how with 20MB blocks it would take up to 1TB of IO per year-synced
for a bloom-filter-using wallet to sync the blockchain. We already have
a bloom IO DoS attack issue - what are the consequences of making that
issue 20x worse? Nobody has analysed it yet.

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/f00945d7/attachment.sig>

From elombrozo at gmail.com  Mon Jun 15 04:43:09 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 14 Jun 2015 21:43:09 -0700
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <20150615041149.GA13286@muck>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
	<CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com>
	<674CED15-3F4C-4E24-BCA2-3C474CC01708@gmail.com>
	<20150615041149.GA13286@muck>
Message-ID: <B0D24D77-EAF8-4EB4-9E1B-0A3539C0AAA9@gmail.com>


> On Jun 14, 2015, at 9:11 PM, Peter Todd <pete at petertodd.org> wrote:
> 
> On Sun, Jun 14, 2015 at 05:53:05PM -0700, Eric Lombrozo wrote:
>> I think the whole complexity talk is missing the bigger issue.
>> 
>> Sure, per block validation scales linearly (or quasilinearly?there?s an O(log n) term in there somewhere but it?s probably dominated by linear factors at current levels?asymptotic limits don?t always apply very well to finite systems). And there?s an O(n^2) bandwidth issue.
>> 
>> The real issue, though, is validation cost. The n in O(n) here does not represent block size - it represents the size of the entire block chain for every new validator that must be synchronized! It means we have no way to construct short proofs (or at least arguments that are computationally *hard* to forge) without requiring the validator to maintain the complete system state. And currently, there is no mechanism for directly compensating validators.
> 
> ...and can there be? The goal of validation after all is finding if a
> mistake has been made, and current production cryptography doesn't have
> any way to prove you have done that honestly. You need "moon math" like
> recursive SNARKS to do that, and it's unknown when they'll be available
> for production usage.
> 

While things like zero-knowledge and homomorphic encryption would be awesome, they are not really needed to achieve the objective of an efficient proof that is hard to forge with at least a decently thought out security model (i.e. we can make information withholding far more difficult)?and we can dramatically improve search times and local storage requirements by doing some of the things that you?ve actually proposed, Peter, like shifting the responsibility of maintaining and constructing proofs over to transaction senders and committing proof hashes to the global state. At least the incentives would be far better aligned in such a scenario.

How do we deal with things like the discovery of an invalid proof a couple weeks after it?s already been committed? This is a tricky issue I?ve been giving a lot of thought to recently - but we?ll deal with this topic in a separate thread. :)

> When we say "compensating validators", if we're being honest with
> outselves what we really mean is the much more boring task of
> compensating servers who are giving us blockchain data. That has nothing
> to do with validation.

If we were to shift responsibility of constructing proofs over to transaction senders, today's ?validators? would indeed become nothing more than compensated servers. Clients would be able to query for proofs and verify them for themselves efficiently.

> A useful task would be to make an SPV archival node implementation that
> did no validation at all, while distributing the blockchain data linked
> to the longest chain. Such an implementation can and should serve SPV
> clients, as this is what their actual security model usually is given
> the lack of authentication of the identity of the server they're
> connecting too. Actually implementing this would be a simple matter of
> patching Bitcoin Core to turn off block validation.
> 
>> A full validator that goes offline even for a short period of time takes a while to fully catch up to the rest of the network - and starting up a new validator from scratch will continue to be painful?even for those of us who?ve turned this into routine by now, let alone new nontechnical users.
> 
> Concretely, 20MB blocks lead to 20GB/week of blocks. On my 1MB/second
> down internet, turning on my node after a week away would take five
> hours; starting up a new node after two years of 20MB blocks would take
> 23 days - likely longer in practice.
> 
> There's serious unsolved and undiscussed devops and development issues
> with this. For instance, after changes to the validation code, it's
> routine to resync/reindex Bitcoin Core to ensure starting up a new node
> actually works. Even now we haven't really come to grips with what
> consistent 1MB blocks looks like from this point of view after a few
> years of usage, let another order of magnitude longer sync times.
> 

It?s a disaster. Even with 1MB blocks this is already the principal centralization pressure on Bitcoin.

>> Satoshi?s SPV is not a real solution - it?s a mere suggestion that wasn?t fully thought out at the time of the Bitcoin white paper. Besides lacking a good validation security model, practical implementations of it weaken privacy and complicate client implementations substantially?and the worst part, it still doesn?t scale all that well. The validator still has to query every single block (even if filtered) back to the first transaction (which cannot be determined without doing a blockchain scan anyway).
> 
> Note how with 20MB blocks it would take up to 1TB of IO per year-synced
> for a bloom-filter-using wallet to sync the blockchain. We already have
> a bloom IO DoS attack issue - what are the consequences of making that
> issue 20x worse? Nobody has analysed it yet.
> 

We clearly need better data structures and algorithms. This talk of bigger blocks seems so petty by comparison, TBH.

> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/909b7912/attachment.sig>

From pete at petertodd.org  Mon Jun 15 04:43:42 2015
From: pete at petertodd.org (Peter Todd)
Date: Mon, 15 Jun 2015 05:43:42 +0100
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
Message-ID: <20150615044342.GB13286@muck>

On Mon, Jun 15, 2015 at 12:23:44AM +0200, Mike Hearn wrote:
> >
> > One thing that is concerning is that few in industry seem inclined to
> > take any development initiatives or even integrate a library.
> 
> 
> Um, you mean except all the people who have built more scalable wallets
> over the past few years, which is the only reason anyone can even use
> Bitcoin from their phone?
>
> Or maybe you mean initiatives like Lightning ....
> except StrawPay already developed something similar to the Lightning
> network (complete with a working GUI wallet) and were ignored by
> Blockstream as you prefer to write your own from scratch?
>
> Sure, people in the industry take development initiatives. That doesn't
> mean their work will be recognised on this mailing list.

StrawPay hasn't published any details of their work publicly; if they
wanted credit on the mailing list they should have done that.

I couldn't even find any screenshots of that GUI wallet when I learned
what they were doing; I went to the trouble of reaching out to them
recently because I have multiple clients with a need for their
technology. I'm sure we all would have appreciated and welcomed them
taking the time to let us know what they were doing; it would have saved
me personally a lot of time; their lack of recognition on this mailing
list is both unfortunate, and a product of their actions alone.

In any case, StrawPay and Lightning are complementary projects: StrawPay
has limited functionality in exchange for faster deployment; Lightning
has significantly more functionality in exchange for a longer deployment
schedule. Both projects can and should be developed in parallel.
Equally, note efforts like my own CHECKLOCKTIMEVERIFY, which will be
part of StrawPay in due time.

> > But it will be helpful if we expose companies to the back-pressure
> > actually implied by an O(n^2) scaling protocol and don't just immediately
> > increase the block-size to levels that are dangerous for decentralisation
> > security
> 
> 
> Bitcoin does not have n-squared scaling. I really don't get where this idea
> comes from. Computational complexity for the entire network is O(nm) where
> n=transactions and m=fully validating nodes. There is no fixed
> relationships between those two variables.

Note for instance how we're discussing what standards we need in the
CryptoCurrency Security Standard for requirements for compliant
companies to run full nodes for transaction verification; failure to run
a full node will be considered non-compliant in much the same way that
failure to secure your private keys is non-compliance. Pedantically, if
you assume a diverse, decentralized ecosystem, these security standards
by themselves do create fixed linear relationships between those
variables, giving O(n^2) scaling.

https://github.com/CryptoConsortium/CCSS/issues/15

> "Exposing the companies to back-pressure" sounds quite nice and gentle. Let
> me rephrase it to be equivalent but perhaps more direct: you mean "breaking
> the current software ecosystem to force people into a new, fictional system
> that bears little resemblance to the Bitcoin we use today, whether they
> want that or not".

Equally, not running full nodes bears little resemblance to the Bitcoin
we use today. Either way, something must change for the number of
Bitcoin users to grow.

> As nothing that has been proposed so far (Lightning, merge mined chains,
> extension blocks etc) has much chance of actual deployment any time soon,
> that leaves raising the block size limit as the only possible path left.
> Which is why there will soon be a fork that does it.

I'm genuinely looking forward to a concrete fork proposal. Any ETA on
when the blocksize increase code will go in Bitcoin XT?

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/2d082a27/attachment.sig>

From info at AndySchroder.com  Mon Jun 15 05:50:16 2015
From: info at AndySchroder.com (Andy Schroder)
Date: Mon, 15 Jun 2015 01:50:16 -0400
Subject: [Bitcoin-development] Proposal: Move Bitcoin Dev List to a
	Neutral Competent Entity
In-Reply-To: <CAEz79PrjoD3fvwqmr2+O+8myeQCV_4ZuX4q9zCkQdN=i=ovuMA@mail.gmail.com>
References: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>	<CAJHLa0OOnYMuA-8qfHafw5D0zGw_U06PZaAKS2j=Av_KUhgt-A@mail.gmail.com>
	<CAEz79PrjoD3fvwqmr2+O+8myeQCV_4ZuX4q9zCkQdN=i=ovuMA@mail.gmail.com>
Message-ID: <557E6798.5030702@AndySchroder.com>


Andy Schroder

On 06/14/2015 11:19 PM, Warren Togami Jr. wrote:
> On Sun, Jun 14, 2015 at 5:15 AM, Jeff Garzik <jgarzik at bitpay.com 
> <mailto:jgarzik at bitpay.com>> wrote:
>
>     * ACK on moving away from SourceForge mailing lists - though only
>     once a community-welcomed replacement is up and running
>
>     * ACK on using LF as a mailing infrastructure provider
>
>     * Research secure mailing list models, for bitcoin-security.  The
>     list is not ultra high security - we all use PGP for that - but it
>     would perhaps be nice to find some spiffy cryptosystem where
>     mailing list participants individually hold keys & therefore access.
>
>
> While I agree this is a good idea, this should not be a precondition 
> for moving the public bitcoin-dev list.  The security team needs to 
> separately research/write tools needed for this.
>
>     <jgarzik> warren, wanna just go ahead and create
>     bitcoin-development @ LF? 
>
>
> *More Feedback?*  As for going ahead, perhaps we should wait to hear 
> from more of the other technical leaders?

I'd say just move forward with creating the new list. Once the new list 
is created, send an announcement encouraging people to join. The new 
list will be an opt in change, so you can encourage a transition date, 
but why require it? Maybe monitor the subscriber lists for each list and 
provide people regular updates as to what percentage of the people in 
the old list have subscribed to the new list. This will help inform 
people whether the new list will be adopted or not. People may also miss 
a single announcement e-mail. There are too many messages going through 
the list right now, and everyone doesn't read the list regularly.

>
> *_More Questions_*
>
> *List Name?*  Would people prefer "bitcoin-development" for he new 
> list name instead of a shorter name like "bitcoin-dev"?  I personally 
> like the shorter name, but either is fine. 
> https://lists.linuxfoundation.org/mailman/listinfo currently has 
> "sidechains-dev", and "lightning-dev" is moving there sometime soon.

I vote for "bitcoin-dev", only because of the consistency with the other 
projects that you mentioned, as well as the fact that I think there 
should be at least some name change to avoid confusion between the new 
and old lists.


>
> *Proposed Cut-Off Date?*  Then we also need to agree on a date to cut 
> off the old list..  Their sysadmin said we could have the new list 
> auto-post from the old list for a short while.  I wonder how well that 
> works ... if that will result in double posting if people write to the 
> new and CC the old list..  Needs a little research how well it would 
> behave to have both lists operating during a transition period.  I 
> think we should announce a cut-off date when posts to the old list is 
> shut off, July 15th, one month from now.  Thoughts?


I'd say move forward with the new list and subscribe it to the old list. 
That way the new list starts archiving the messages from here forward. 
There may be a little bit of a problem if someone joins the new list but 
not the old list, they may not be able to reply to a message sent to the 
old list? You probably would get a duplicate delivery if doing this, but 
you could encourage users who have joined the new list to turn off 
delivery on the old list (this is an option in the mailman settings page).

Once greater than 50% of the members of the old list are members of the 
new list, send out an announcement that the old list will be turned into 
read only mode in 3 weeks and to use the new list only after that time. 
This way you don't have to force use of the new list and a majority 
agreement is required before doing so and a technical leader is not 
required to enforce a change without a solid commitment from most of the 
members. Right before the old list is shut down, send one final 
announcement e-mail indicating it is closing and link to the new list 
(so that new subscribers will be aware if they are looking at an archive 
of some kind).




>
> *Moderators?*  Mailman on the new server allows having separate logins 
> for admins and moderators.  I think the admins of the old SF project 
> are gavin, jgarzik and sipa... they are kind of busy.  Perhaps we 
> should identify known trusted community members who can help with 
> moderation.  Usually this is dealing with "held" messages that are 
> flagged by the spam filter
>
> Warren Togami
>
>
> ------------------------------------------------------------------------------
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/e4e35a74/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/e4e35a74/attachment.sig>

From mike at plan99.net  Mon Jun 15 09:06:58 2015
From: mike at plan99.net (Mike Hearn)
Date: Mon, 15 Jun 2015 11:06:58 +0200
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <20150615044342.GB13286@muck>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
	<20150615044342.GB13286@muck>
Message-ID: <CANEZrP3_dpaAOOfX3sh+tdD5yb94ozRhYx+WLw4BL7AM1WKr2w@mail.gmail.com>

> StrawPay hasn't published any details of their work publicly; if they
> wanted credit on the mailing list they should have done that.
>

There's a brief discussion here:


https://www.reddit.com/r/Bitcoin/comments/2r3ri7/strawpay_cheap_and_secure_micropayments/

But yes, they are developing it before publishing more details that may be
subject to change post-implementation experience anyway.


> I'm genuinely looking forward to a concrete fork proposal. Any ETA on
> when the blocksize increase code will go in Bitcoin XT?
>

Great!  I am waiting for Gavin to finish writing the patches. Once he has a
patch and there's been some time for review, I guess it will go in,
assuming no other issues.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/f0a042e3/attachment.html>

From odinn.cyberguerrilla at riseup.net  Mon Jun 15 09:13:03 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Mon, 15 Jun 2015 02:13:03 -0700
Subject: [Bitcoin-development] Proposal: Move Bitcoin Dev List to a
 Neutral Competent Entity
In-Reply-To: <CAEz79PrjoD3fvwqmr2+O+8myeQCV_4ZuX4q9zCkQdN=i=ovuMA@mail.gmail.com>
References: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>	<CAJHLa0OOnYMuA-8qfHafw5D0zGw_U06PZaAKS2j=Av_KUhgt-A@mail.gmail.com>
	<CAEz79PrjoD3fvwqmr2+O+8myeQCV_4ZuX4q9zCkQdN=i=ovuMA@mail.gmail.com>
Message-ID: <557E971F.3010908@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

What about Gittorrent?

http://blog.printf.net/articles/2015/05/29/announcing-gittorrent-a-decen
tralized-github/

On 06/14/2015 08:19 PM, Warren Togami Jr. wrote:
> On Sun, Jun 14, 2015 at 5:15 AM, Jeff Garzik <jgarzik at bitpay.com 
> <mailto:jgarzik at bitpay.com>> wrote:
> 
> * ACK on moving away from SourceForge mailing lists - though only 
> once a community-welcomed replacement is up and running
> 
> * ACK on using LF as a mailing infrastructure provider
> 
> * Research secure mailing list models, for bitcoin-security.  The 
> list is not ultra high security - we all use PGP for that - but it 
> would perhaps be nice to find some spiffy cryptosystem where
> mailing list participants individually hold keys & therefore
> access.
> 
> 
> While I agree this is a good idea, this should not be a
> precondition for moving the public bitcoin-dev list.  The security
> team needs to separately research/write tools needed for this.
> 
> <jgarzik> warren, wanna just go ahead and create
> bitcoin-development @ LF?
> 
> 
> *More Feedback?*  As for going ahead, perhaps we should wait to
> hear from more of the other technical leaders?
> 
> *_More Questions_*
> 
> *List Name?*  Would people prefer "bitcoin-development" for he new
> list name instead of a shorter name like "bitcoin-dev"?  I
> personally like the shorter name, but either is fine. 
> https://lists.linuxfoundation.org/mailman/listinfo currently has 
> "sidechains-dev", and "lightning-dev" is moving there sometime
> soon.
> 
> *Proposed Cut-Off Date?*  Then we also need to agree on a date to
> cut off the old list.  Their sysadmin said we could have the new
> list auto-post from the old list for a short while.  I wonder how
> well that works ... if that will result in double posting if people
> write to the new and CC the old list.  Needs a little research how
> well it would behave to have both lists operating during a
> transition period.  I think we should announce a cut-off date when
> posts to the old list is shut off, July 15th, one month from now.
> Thoughts?
> 
> *Moderators?*  Mailman on the new server allows having separate
> logins for admins and moderators.  I think the admins of the old SF
> project are gavin, jgarzik and sipa... they are kind of busy.
> Perhaps we should identify known trusted community members who can
> help with moderation. Usually this is dealing with "held" messages
> that are flagged by the spam filter
> 
> Warren Togami
> 
> 
> ----------------------------------------------------------------------
- --------
>
> 
> 
> 
> _______________________________________________ Bitcoin-development
> mailing list Bitcoin-development at lists.sourceforge.net 
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVfpcfAAoJEGxwq/inSG8CEdsH+weboFo8SCbwgoe68oZLl6Et
r4JtzZRu8jtw5x6AYcpVMBvUo3CHtbYCWREidBhvSU+TlOUjnxZRU5CjLpjHcc61
QV2hIGD1RUdrcj93PBsnNrvuXkLVHd09sKXCIvldY1d1GqTqy9sVY1skExd7zY2h
LmJhLdmNw7I+gLP/r8Ivl7aDqrpzHXr7pnbFXZZ0hxhthncxXTefi/IV+kAt3ptL
qfSRYGPyyUXWLfXF/XW+/DH+scZm+Iu/SSoSa6xnEo4MgY4HzZM2Uy+9Te9aO6wd
xvdpMetZV5A9Ljr8Ww72DPDkvUprk7u55OMgZZ4Fps53PnqwpNOjt3phIUH4iVE=
=6Fxw
-----END PGP SIGNATURE-----



From kalle at rosenbaum.se  Mon Jun 15 09:21:06 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Mon, 15 Jun 2015 11:21:06 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
Message-ID: <CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>

Hi all!

I have made the discussed changes and updated my implementation (
https://github.com/kallerosenbaum/poppoc) accordingly. These are the
changes:

* There is now only one output, the "pop output", of value 0.
* The sequence number of all inputs of the PoP must be set to 0. I
chose to set it to 0 for all inputs for simplicity.
* The lock_time of the PoP must be set to 499999999 (max block height lock
time).

The comments so far has been mainly positive or neutral. Are there any
major objections against any of the two proposals? If not, I will ask
Gregory Maxwell to assign them BIP numbers.

The two BIP proposals can be found at
https://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP and
https://github.com/kallerosenbaum/poppoc/wiki/btcpop-scheme-BIP. The source
for the Proof of Payment BIP proposal is also in-lined below.

A number of alternative names have been proposed:

* Proof of Potential
* Proof of Control
* Proof of Signature
* Signatory Proof
* Popo: Proof of payment origin
* Pots: Proof of transaction signer
* proof of transaction intent
* Declaration of intent
* Asset-access-and-action-affirmation, AAaAA, or A5
* VeriBit
* CertiBTC
* VBit
* PayID

Given this list, I still think "Proof of Payment" is the most descriptive
to non-technical people.

Regards,
Kalle


#################################################
<pre>
  BIP: <BIP number>
  Title: Proof of Payment
  Author: Kalle Rosenbaum <kalle at rosenbaum.se>
  Status: Draft
  Type: Standards Track
  Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>
</pre>

== Abstract ==

This BIP describes how a wallet can prove to a server that it has the
ability to sign a certain transaction.

== Motivation ==

There are several scenarios in which it would be useful to prove that you
have paid for something. For example:

* A pre-paid hotel room where your PoP functions as a key to the door.
* An online video rental service where you pay for a video and watch it on
any device.
* An ad-sign where you pay in advance for e.g. 2 weeks exclusivity. During
this period you can upload new content to the sign whenever you like using
PoP.
* Log in to a pay site using a PoP.
* A parking lot you pay for monthly and the car authenticates itself using
PoP.
* A lottery where all participants pay to the same address, and the winner
is selected among the transactions to that address. You exchange the prize
for a PoP for the winning transaction.

With Proof of Payment, these use cases can be achieved without any personal
information (user name, password, e-mail address, etc) being involved.

== Rationale ==

Desirable properties:

# A PoP should be generated on demand.
# It should only be usable once to avoid issues due to theft.
# It should be able to create a PoP for any payment, regardless of script
type (P2SH, P2PKH, etc.).
# It should prove that you have enough credentials to unlock all the inputs
of the proven transaction.
# It should be easy to implement by wallets and servers to ease adoption.

Current methods of proving a payment:

* In BIP0070, the PaymentRequest together with the transactions fulfilling
the request makes some sort of proof. However, it does not meet 1, 2 or 4
and it obviously only meets 3 if the payment is made through BIP0070. Also,
there's no standard way to request/provide the proof. If standardized it
would probably meet 5.
* Signing messages, chosen by the server, with the private keys used to
sign the transaction. This could meet 1 and 2 but probably not 3. This is
not standardized either. 4 Could be met if designed so.

If an input script type is P2SH, any satisfying script should do, just as
if it was a payment. For M-of-N multisig scripts, that would mean that any
set of M keys should be sufficient, not neccesarily the same set of M keys
that signed the transaction. This is important because strictly demanding
the same set of M keys would defeat the purpose of a multisig address.

== Specification ==

=== Data structure ===

A proof of payment for a transaction T, here called PoP(T), is used to
prove that one has ownership of the credentials needed to unlock all the
inputs of T. It has the exact same structure as a bitcoin transaction with
the same inputs as T and in the same order as in T, but with each sequence
number set to 0. There is exactly one output, here called the pop output,
with value 0. The pop output must have the following format:

 OP_RETURN <version> <txid> <nonce>

{|
! Field        !! Size [B] !! Description
|-
| &lt;version> || 2        || Version, little endian, currently 0x01 0x00
|-
| &lt;txid>    || 32       || The transaction to prove
|-
| &lt;nonce>   || 6        || Random data
|}

The lock_time of the PoP must be set to 499999999 to prevent the PoP from
being included in a block, should it appear on the bitcoin p2p network.
This is also the reason for setting the sequence numbers to 0, since
sequence number of ffffffff would make lock_time ineffective. This
specification demands that all input sequence numbers are 0, not just one
of them, which would be sufficient to make lock_time effective. This is for
simplicity reasons.

An illustration of the PoP data structure and its original payment is shown
below.

<pre>
  T
 +------------------------------------------------+
 |inputs                | outputs                 |
 |       Value,Sequence | Value,Script            |
 +------------------------------------------------+
 |input0 1,ffffffff     | 0,pay to A              |
 |input1 3,ffffffff     | 2,OP_RETURN <some data> |
 |input2 4,ffffffff     | 1,pay to B              |
 |                      | 4,pay to C              |
 +------------------------------------------------+

  PoP(T)
 +-------------------------------------------------------------+
 | inputs               | outputs                              |
 |       Value,Sequence | Value,Script                         |
 +-------------------------------------------------------------+
 |input0 1,00000000     | 0,OP_RETURN <version> <txid> <nonce> |
 |input1 3,00000000     |                                      |
 |input2 4,00000000     |                                      |
 +-------------------------------------------------------------+
 | lock_time=499999999                                         |
 +-------------------------------------------------------------+
</pre>

The PoP is signed using the same signing process that is used for bitcoin
transactions.

The purpose of the nonce is to make it harder to use a stolen PoP; Once the
PoP has reached the server, that PoP is useless since the server will
generate a new nonce for every PoP request.

=== Process ===

# A proof of payment request is sent from the server to the wallet. The PoP
request contains:
## a random nonce
## a destination where to send the PoP, for example a https URL
## data hinting the wallet which transaction to create a proof for. For
example:
##* txid, if known by the server
##* PaymentRequest.PaymentDetails.merchant_data (in case of a BIP0070
payment)
##* amount, label, message or other information from a BIP0021 URI
# The wallet identifies a transaction T, if possible. Otherwise it asks the
user to select among the ones that match the hints in 1.iii.
# The wallet creates an unsigned PoP (UPoP) for T, and asks the user to
sign it.
# The user confirms
# The UPoP(T) is signed by the wallet, creating PoP(T).
# The PoP is sent to the destination in 1.ii.
# The server receiving the PoP validates it and responds with ?valid? or
?invalid?.
# The wallet displays the response in some way to the user.

'''Remarks:'''

* The method of transferring the PoP request at step 1 is not specified
here. Instead that is specified in separate specifications. See [btcpop
scheme BIP](btcpop scheme BIP).
* The nonce must be randomly generated by the server for every new PoP
request.

=== Validating a PoP ===

The server needs to validate the PoP and reply with "valid" or "invalid".
That process is outlined below. If any step fails, the validation is
aborted and "invalid" is returned:

# Check the format of the PoP. It must pass normal transaction checks,
except that the inputs may already be spent.
# Check that lock_time is 499999999.
# Check that there is exactly one output. This output must have value 0 and
conform to the OP_RETURN output format outlined above.
# Check that the nonce is the same as the one requested.
# Check that the inputs of the PoP are exactly the same as in transaction
T, except that the sequence numbers must all be 0. The ordering of the
inputs must also be the same as in T.
# Run the scripts of all the inputs. All scipts must return true.
# Check that the txid in the PoP output is the transaction you actually
want proof for. If you don?t know exactly what transaction you want proof
for, check that the transaction actually pays for the product/service you
deliver.
# Return "valid".

== Security considerations ==

* Someone can intercept the PoP-request and change any parameter in it.
These can be mitigated by using secure connections. For example:
** Pop destination - Stealing your PoP.
** label - Trick you to sign an unintended pop or set a label that your
wallet doesn't have any record for, resulting in a broken service. Always
check the PoP before signing.
** nonce - Your pop will not validate on server.
* Someone can steal a PoP, for example by tampering with the PoP request,
and try to use the service hoping to get a matching nonce. Probability per
try: 1/(2^48). The server should have a mechanism for detecting a brute
force attack of this kind, or at least slow down the process by delaying
the PoP request by some 100 ms or so.
* Even if a wallet has no funds it might still be valuable as a generator
for PoPs. This makes it important to keep the security of the wallet after
it has been emptied.
* Transaction malleability may cause the server to have another transaction
id for a payment than the client's wallet. In that case the wallet will not
be able to prove the transaction to the server. Wallets should not rely on
the transaction id of the outgoing transaction. Instead it should listen
for the transaction on the network and put that in its list of transactions.

== Reference implementation ==

[https://github.com/kallerosenbaum/poppoc poppoc on GitHub]

[https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]

== References ==

[https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki BIP0021]:
URI Scheme

[https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki BIP0070]:
Payment Protocol

[[btcpop scheme BIP]]

#########################################################

2015-06-06 23:25 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:
> Thank you all for the feedback.
>
> I will change the data structure as follows:
>
> * There will be only one output, the "pop output", and no outputs from
> T will be copied to the PoP.
> * The pop output will have value 0.
> * The sequence number of all inputs of the PoP will be set to 0. I
> chose to set it to 0 for all inputs for simplicity.
> * The lock_time of the PoP is always set to 499999999.
>
> Any comments on this?
>
> /Kalle
>
> 2015-06-06 19:00 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:
>> 2015-06-06 18:10 GMT+02:00 Tom Harding <tomh at thinlink.com>:
>>> On Jun 6, 2015 8:05 AM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:
>>>
>>>> I'm open to changes here.
>>>
>>> I suggest:
>>>
>>> - Don't include any real outputs.   They are redundant because the txid
is
>>> already referenced.
>>
>> with the nLocktime solution, the copied outputs are not needed.
>>
>>>
>>> - Start the proof script, which should be invalid, with a magic
constant and
>>> include space for future expansion.  This makes PoP's easy to identify
and
>>> extend.
>>
>> I did remore the constant (a "PoP" literal ascii encoded string)
>> because it didn't add much. The recipient will expect a pop, so it
>> will simply treat it as one. I did add a 2 byte version field to make
>> it extendable.
>>
>>>
>>> - "Proof of Potential"
>>
>> Noted :-)
>>
>> Thank you
>> /Kalle
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/95a01be8/attachment.html>

From mike at plan99.net  Mon Jun 15 09:27:24 2015
From: mike at plan99.net (Mike Hearn)
Date: Mon, 15 Jun 2015 11:27:24 +0200
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
	<CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com>
Message-ID: <CANEZrP0Z_EOmVgbvVmYDvegm6jfd1cKB52acXHocjRuM-qGEog@mail.gmail.com>

>
> That was probably insufficiently specific, let me rephrase: I am
> referring to the trend that much of the industry is built on web2.0
> technology using bitcoin via a library in a web scripting language


OK, good to hear that. I'm not happy about the use of web technologies in
wallets/services either, but the causes of that trend are nothing to do
with block chain sizes. It's more because there's a generation of
developers who see no alternatives.

With projects like Lighthouse, I'm trying to show people that they can
blend the good bits of the web with the good bits of more traditional
client side development, at a cost they can afford.

Unfortunately, as you know, one of the reasons that developers turn to
outsourced services is that those services actually like developers and
give them the features they need. Whereas any attempt to add protocol
features for app/wallet developers to Bitcoin Core becomes controversial
due to some perceived or real lack of perfection.

I persevered for several months to add a very small "API" I needed for my
app to Bitcoin Core, and it was in the end a waste of time. There are no
actionable items left for the getutxo patch, regardless, I had to fork
Bitcoin to get it out there. It would have been *much* easier to just say,
fuck it, I'll use blockchain.info and in fact some in this community told
me to do exactly that. But, the approach I chose has been working fine for
months now.

Compare this experience to companies like chain.com, blockcypher etc - when
developers say jump, they say "how high?"

So It's unreasonable for the Bitcoin Core developer group to constantly
call developers building apps idiots or "non technical" (as I see so often
in this block size debate), and then complain that people don't write apps
in their preferred way! Just accept that decentralised app dev is already
hard, and the way Core is run makes it much harder still.


As I said I dont think we can expect Bitcoin to scale with no further
> algorithmic improvements.


A big part of the debate around this change is showing that this statement
is wrong. "Scaling" is not some kind of binary yes/no thing. It's a
continuous effort. You write a system that scales a certain amount, and
then if you find you need more capacity, you scale it again. Maybe that
 involves rewriting the existing code or maybe it just means improving what
you've got.

Or maybe (painful truth coming up) your product is not that compelling, or
times change and your users leave, and you discover you never actually need
to scale to the giddy heights originally envisioned.

A big part of the reason modern web dev is so messed up is that lots of
developers starting thinking every app they built needed to be "web scale"
from day one. SQL databases? Pah. Doesn't scale. Think big. We gotta no
NoSQL sharded key/value store from the start! Otherwise we're just showing
lack of confidence in our own product.

Then when they used up all their budget solving consistency bugs a
relational database would have avoided, they notice their competitors
sailing past them on a not-fully-scalable but certainly-scalable-enough
architecture that let them focus on features and making users happy.




> I am referring to global bandwidth O(n^2) with n=users


OK. O() notation normally refers to computational complexity, but ... I
still don't get it - the vast majority of users don't run relaying nodes
that take part in gossiping. They run web or SPV wallets. And the nodes
that do take part don't connect to every other node.




> There can be a case for some increase to create some breathing room to
> work on scaling and decentralising tech, I just mean to say that if we
> do it in isolation, we're not focussing on the big picture.


Alright - let's agree that we disagree on a few areas, like the relative
desirability of alternative non-blockchain designs - but we do seem to
agree that there is a case for an increase in the block size limit. That
seems like progress.

As you agree with that, what sort of schedule and time are you thinking of?
(well, by "you" I really mean blockstream because it's taking forever to
try and negotiate with every single person individually).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/16b45688/attachment.html>

From elombrozo at gmail.com  Mon Jun 15 09:39:37 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Mon, 15 Jun 2015 02:39:37 -0700
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <CANEZrP0Z_EOmVgbvVmYDvegm6jfd1cKB52acXHocjRuM-qGEog@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
	<CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com>
	<CANEZrP0Z_EOmVgbvVmYDvegm6jfd1cKB52acXHocjRuM-qGEog@mail.gmail.com>
Message-ID: <CABr1YTee5B_Q9nqmQVWGXr3r7A8L2kCL_bzSOYmRVyu9nTRt7A@mail.gmail.com>

>OK. O() notation normally refers to computational complexity, but ... I
still don't get it - the vast >majority of users don't run relaying nodes
that take part in gossiping. They run web or SPV >wallets. And the nodes
that do take part don't connect to every other node.

It's a little scary, IMO, that the fact that the majority of nodes don't
relay and only perform the most rudimtentary level of validation if any is
considered an acceptable feature of the protocol.

- Eric Lombrozo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/8cffee00/attachment.html>

From mike at plan99.net  Mon Jun 15 09:56:40 2015
From: mike at plan99.net (Mike Hearn)
Date: Mon, 15 Jun 2015 11:56:40 +0200
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
	non-consensus hard-fork
In-Reply-To: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
Message-ID: <CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>

Hi Adam,

Provisional answers below!

- Are you releasing a BIP for that proposal for review?
>

The work splits like this:

   - Gavin is writing the code and I think a BIP as well

   - I will review both and mostly delegate to Gavin's good taste around
   the details, unless there is some very strong disagreement. But that seems
   unlikely.

   - I have been handling gitian and the patch rebases, the code signing
   and so on, so far. I've also been doing some work to setup the basic
   infrastructure of the project (website etc).


- If the reviewers all say NACK will you take on board their suggestions?
>

Feedback will be read. There are no NACKS in Bitcoin XT. Patch requests
aren't scored in any way. The final decision rests with the maintainer as
in ~all open source projects.



> - On the idea of a non-consensus hard-fork at all, I think we can
> assume you will get a row of NACKs.  Can you explain your rationale
> for going ahead anyway?  The risks are well understood and enormous.
>

Yes, I have been working on an article that explains how we got to this
point from my perspective. It is quite long, but only because I want it to
be readable for people who weren't following the debate.

Anyway, I think I've laid out the gist of it over and over again, but to
summarise:

If Bitcoin runs out of capacity *it will break and many of our users will
leave*. That is not an acceptable outcome for myself or the many other
wallet, service and merchant developers who have worked for years to build
an ecosystem around this protocol.



> - How do you propose to deal with the extra risks that come from
> non-consensus hard-forks?  Hard-forks themselves are quite risky, but
> non-consensus ones are extremely dangerous for consensus.
>

The approach is the same for other forks. Voting via block versions and
then when there's been >X% for Y time units the 1mb limit is
lifted/replaced.




> - If you're going it alone as it were, are you proposing that you will
> personally maintain bitcoin-XT?  Or do you have a plan to later hand
> over maintenance to the bitcoin developers?
>

Good question!  I have various thoughts on this, but let's wait and see
what happens first. Perhaps the new chain won't get the majority on it.

In the event that the >1mb chain does eventually win, I would expect Core
to apply the patch and rejoin the consensus rather than lose all its users.
That would take XT back to being a fairly small patchset to improve the
network protocol.



- Do you have contingency plans for what to do if the non-consensus
> hard-fork goes wrong and $3B is lost as a result?
>

Where did you get the $3B figure from? The fork either doesn't happen, or
it happens after quite a long period of people knowing it's going to happen
- for example because their full node is printing "You need to upgrade"
messages due to seeing the larger block version, or because they read the
news, or because they heard about it via some other mechanisms.

Let me flip the question around. Do you have a contingency plan if Bitcoin
runs out of capacity and significant user disruption occurs that results in
exodus, followed by fall in BTC price? The only one I've seen is "we can
perform an emergency hard fork in a few weeks"!



> As you can probably tell I think a unilateral fork without wide-scale
> consensus from the technical and business communities is a deeply
> inadvisable.


Gavin and I have been polling many key players in the ecosystem. The
consensus you seek does exist. All wallet developers (except Lawrence), all
the major exchanges, all the major payment processors and many of the major
mining pools want to see the limit lifted (I haven't been talking to pools,
Gavin has).

This notion that the change has no consensus is based on you polling the
people directly around you and people who like to spend all day on this
mailing list. It's not an accurate reflection of the wider Bitcoin
community and that is one of the leading reasons there is going to be a
fork. A small number of people have been flatly ignoring LOTS of highly
technical and passionate developers who have written vast amounts of code,
built up the Bitcoin user base, designed hardware and software, and yes
built companies.

How do you think that makes Bitcoin Core look to the rest of the Bitcoin
world? How much confidence does that give people?



Of the overall process, I think you can agree we should not be making
> technical decisions with this level of complexity and consensus risk
> with financial implications of this magnitude under duress of haste?
>

This debate will never end until a fork makes it irrelevant. There is no
process for ending it, despite me begging Wladimir to make one.

And there is no haste. We have been debating the block size limit for
*years*. We have known it must be lifted for *years*. I kicked off this
current round of debates after realising that Wladimir's release timeline
wouldn't allow a block size limit to be released before the end of the
year. The reason we're talking about it now and not next year is exactly to
ensure there is plenty of time.




> I can sincerely assure you everyone does want to scale bitcoin and
> shares your long term objective on that


I really wish you were right, and I definitely feel you are one of the more
reasonable ones Adam. But the overwhelming impression I get from a few
others here is that no, they don't want to scale Bitcoin. They already
decided it's a technological dead end. They want to kick end users out in
order to "incentivise" (force) the creation of some other alternative,
claiming that it's still Bitcoin whilst ignoring basic details ... like the
fact that no existing wallets or services would work.

Scaling Bitcoin can only be achieved by letting it grow, and letting people
tackle each bottleneck as it arises at the right times. Not by convincing
ourselves that success is failure.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/892471da/attachment.html>

From pieter.wuille at gmail.com  Mon Jun 15 10:00:52 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Mon, 15 Jun 2015 12:00:52 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
	<CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>
	<CAPg+sBiWykR6RaHhbyYQbL=A5t1TmHgEmS_sC7jj9d3SUTMO9g@mail.gmail.com>
	<CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>
Message-ID: <CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>

I did misunderstand that. That changes things significantly.

However, having paid is not the same as having had access to the input
coins. What about shared wallets or coinjoin?

Also, if I understand correctly, there is no commitment to anything you're
trying to say about the sender? So once I obtain a proof-of-payment from
you about something you paid, I can go claim that it's mine?

Why does anyone care who paid? This is like walking into a coffeshop,
noticing I don't have money with me, let me friend pay for me, and then
have the shop insist that I can't drink it because I'm not the buyer.

Track payments, don't try to assign identities to payers.
On Jun 15, 2015 11:35 AM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:

> Hi Pieter!
>
> It is intended to be a proof that you *have paid* for something. Not
> that you have the intent to pay for something. You cannot use PoP
> without a transaction to prove.
>
> So, yes, it's just a proof of access to certain coins that you no longer
> have.
>
> Maybe I don't understand you correctly?
>
> /Kalle
>
> 2015-06-15 11:27 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
> > Now that you have removed the outputs, I don't think it's even a intent
> of
> > payment, but just a proof of access to certain coins.
> >
> > On Jun 15, 2015 11:24 AM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:
> >>
> >> Hi all!
> >>
> >> I have made the discussed changes and updated my implementation
> >> (https://github.com/kallerosenbaum/poppoc) accordingly. These are the
> >> changes:
> >>
> >> * There is now only one output, the "pop output", of value 0.
> >> * The sequence number of all inputs of the PoP must be set to 0. I
> >> chose to set it to 0 for all inputs for simplicity.
> >> * The lock_time of the PoP must be set to 499999999 (max block height
> lock
> >> time).
> >>
> >> The comments so far has been mainly positive or neutral. Are there any
> >> major objections against any of the two proposals? If not, I will ask
> >> Gregory Maxwell to assign them BIP numbers.
> >>
> >> The two BIP proposals can be found at
> >> https://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP and
> >> https://github.com/kallerosenbaum/poppoc/wiki/btcpop-scheme-BIP. The
> source
> >> for the Proof of Payment BIP proposal is also in-lined below.
> >>
> >> A number of alternative names have been proposed:
> >>
> >> * Proof of Potential
> >> * Proof of Control
> >> * Proof of Signature
> >> * Signatory Proof
> >> * Popo: Proof of payment origin
> >> * Pots: Proof of transaction signer
> >> * proof of transaction intent
> >> * Declaration of intent
> >> * Asset-access-and-action-affirmation, AAaAA, or A5
> >> * VeriBit
> >> * CertiBTC
> >> * VBit
> >> * PayID
> >>
> >> Given this list, I still think "Proof of Payment" is the most
> descriptive
> >> to non-technical people.
> >>
> >> Regards,
> >> Kalle
> >>
> >>
> >> #################################################
> >> <pre>
> >>   BIP: <BIP number>
> >>   Title: Proof of Payment
> >>   Author: Kalle Rosenbaum <kalle at rosenbaum.se>
> >>   Status: Draft
> >>   Type: Standards Track
> >>   Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>
> >> </pre>
> >>
> >> == Abstract ==
> >>
> >> This BIP describes how a wallet can prove to a server that it has the
> >> ability to sign a certain transaction.
> >>
> >> == Motivation ==
> >>
> >> There are several scenarios in which it would be useful to prove that
> you
> >> have paid for something. For example:
> >>
> >> * A pre-paid hotel room where your PoP functions as a key to the door.
> >> * An online video rental service where you pay for a video and watch it
> on
> >> any device.
> >> * An ad-sign where you pay in advance for e.g. 2 weeks exclusivity.
> During
> >> this period you can upload new content to the sign whenever you like
> using
> >> PoP.
> >> * Log in to a pay site using a PoP.
> >> * A parking lot you pay for monthly and the car authenticates itself
> using
> >> PoP.
> >> * A lottery where all participants pay to the same address, and the
> winner
> >> is selected among the transactions to that address. You exchange the
> prize
> >> for a PoP for the winning transaction.
> >>
> >> With Proof of Payment, these use cases can be achieved without any
> >> personal information (user name, password, e-mail address, etc) being
> >> involved.
> >>
> >> == Rationale ==
> >>
> >> Desirable properties:
> >>
> >> # A PoP should be generated on demand.
> >> # It should only be usable once to avoid issues due to theft.
> >> # It should be able to create a PoP for any payment, regardless of
> script
> >> type (P2SH, P2PKH, etc.).
> >> # It should prove that you have enough credentials to unlock all the
> >> inputs of the proven transaction.
> >> # It should be easy to implement by wallets and servers to ease
> adoption.
> >>
> >> Current methods of proving a payment:
> >>
> >> * In BIP0070, the PaymentRequest together with the transactions
> fulfilling
> >> the request makes some sort of proof. However, it does not meet 1, 2 or
> 4
> >> and it obviously only meets 3 if the payment is made through BIP0070.
> Also,
> >> there's no standard way to request/provide the proof. If standardized it
> >> would probably meet 5.
> >> * Signing messages, chosen by the server, with the private keys used to
> >> sign the transaction. This could meet 1 and 2 but probably not 3. This
> is
> >> not standardized either. 4 Could be met if designed so.
> >>
> >> If an input script type is P2SH, any satisfying script should do, just
> as
> >> if it was a payment. For M-of-N multisig scripts, that would mean that
> any
> >> set of M keys should be sufficient, not neccesarily the same set of M
> keys
> >> that signed the transaction. This is important because strictly
> demanding
> >> the same set of M keys would defeat the purpose of a multisig address.
> >>
> >> == Specification ==
> >>
> >> === Data structure ===
> >>
> >> A proof of payment for a transaction T, here called PoP(T), is used to
> >> prove that one has ownership of the credentials needed to unlock all the
> >> inputs of T. It has the exact same structure as a bitcoin transaction
> with
> >> the same inputs as T and in the same order as in T, but with each
> sequence
> >> number set to 0. There is exactly one output, here called the pop
> output,
> >> with value 0. The pop output must have the following format:
> >>
> >>  OP_RETURN <version> <txid> <nonce>
> >>
> >> {|
> >> ! Field        !! Size [B] !! Description
> >> |-
> >> | &lt;version> || 2        || Version, little endian, currently 0x01
> 0x00
> >> |-
> >> | &lt;txid>    || 32       || The transaction to prove
> >> |-
> >> | &lt;nonce>   || 6        || Random data
> >> |}
> >>
> >> The lock_time of the PoP must be set to 499999999 to prevent the PoP
> from
> >> being included in a block, should it appear on the bitcoin p2p network.
> This
> >> is also the reason for setting the sequence numbers to 0, since sequence
> >> number of ffffffff would make lock_time ineffective. This specification
> >> demands that all input sequence numbers are 0, not just one of them,
> which
> >> would be sufficient to make lock_time effective. This is for simplicity
> >> reasons.
> >>
> >> An illustration of the PoP data structure and its original payment is
> >> shown below.
> >>
> >> <pre>
> >>   T
> >>  +------------------------------------------------+
> >>  |inputs                | outputs                 |
> >>  |       Value,Sequence | Value,Script            |
> >>  +------------------------------------------------+
> >>  |input0 1,ffffffff     | 0,pay to A              |
> >>  |input1 3,ffffffff     | 2,OP_RETURN <some data> |
> >>  |input2 4,ffffffff     | 1,pay to B              |
> >>  |                      | 4,pay to C              |
> >>  +------------------------------------------------+
> >>
> >>   PoP(T)
> >>  +-------------------------------------------------------------+
> >>  | inputs               | outputs                              |
> >>  |       Value,Sequence | Value,Script                         |
> >>  +-------------------------------------------------------------+
> >>  |input0 1,00000000     | 0,OP_RETURN <version> <txid> <nonce> |
> >>  |input1 3,00000000     |                                      |
> >>  |input2 4,00000000     |                                      |
> >>  +-------------------------------------------------------------+
> >>  | lock_time=499999999                                         |
> >>  +-------------------------------------------------------------+
> >> </pre>
> >>
> >> The PoP is signed using the same signing process that is used for
> bitcoin
> >> transactions.
> >>
> >> The purpose of the nonce is to make it harder to use a stolen PoP; Once
> >> the PoP has reached the server, that PoP is useless since the server
> will
> >> generate a new nonce for every PoP request.
> >>
> >> === Process ===
> >>
> >> # A proof of payment request is sent from the server to the wallet. The
> >> PoP request contains:
> >> ## a random nonce
> >> ## a destination where to send the PoP, for example a https URL
> >> ## data hinting the wallet which transaction to create a proof for. For
> >> example:
> >> ##* txid, if known by the server
> >> ##* PaymentRequest.PaymentDetails.merchant_data (in case of a BIP0070
> >> payment)
> >> ##* amount, label, message or other information from a BIP0021 URI
> >> # The wallet identifies a transaction T, if possible. Otherwise it asks
> >> the user to select among the ones that match the hints in 1.iii.
> >> # The wallet creates an unsigned PoP (UPoP) for T, and asks the user to
> >> sign it.
> >> # The user confirms
> >> # The UPoP(T) is signed by the wallet, creating PoP(T).
> >> # The PoP is sent to the destination in 1.ii.
> >> # The server receiving the PoP validates it and responds with ?valid? or
> >> ?invalid?.
> >> # The wallet displays the response in some way to the user.
> >>
> >> '''Remarks:'''
> >>
> >> * The method of transferring the PoP request at step 1 is not specified
> >> here. Instead that is specified in separate specifications. See [btcpop
> >> scheme BIP](btcpop scheme BIP).
> >> * The nonce must be randomly generated by the server for every new PoP
> >> request.
> >>
> >> === Validating a PoP ===
> >>
> >> The server needs to validate the PoP and reply with "valid" or
> "invalid".
> >> That process is outlined below. If any step fails, the validation is
> aborted
> >> and "invalid" is returned:
> >>
> >> # Check the format of the PoP. It must pass normal transaction checks,
> >> except that the inputs may already be spent.
> >> # Check that lock_time is 499999999.
> >> # Check that there is exactly one output. This output must have value 0
> >> and conform to the OP_RETURN output format outlined above.
> >> # Check that the nonce is the same as the one requested.
> >> # Check that the inputs of the PoP are exactly the same as in
> transaction
> >> T, except that the sequence numbers must all be 0. The ordering of the
> >> inputs must also be the same as in T.
> >> # Run the scripts of all the inputs. All scipts must return true.
> >> # Check that the txid in the PoP output is the transaction you actually
> >> want proof for. If you don?t know exactly what transaction you want
> proof
> >> for, check that the transaction actually pays for the product/service
> you
> >> deliver.
> >> # Return "valid".
> >>
> >> == Security considerations ==
> >>
> >> * Someone can intercept the PoP-request and change any parameter in it.
> >> These can be mitigated by using secure connections. For example:
> >> ** Pop destination - Stealing your PoP.
> >> ** label - Trick you to sign an unintended pop or set a label that your
> >> wallet doesn't have any record for, resulting in a broken service.
> Always
> >> check the PoP before signing.
> >> ** nonce - Your pop will not validate on server.
> >> * Someone can steal a PoP, for example by tampering with the PoP
> request,
> >> and try to use the service hoping to get a matching nonce. Probability
> per
> >> try: 1/(2^48). The server should have a mechanism for detecting a brute
> >> force attack of this kind, or at least slow down the process by
> delaying the
> >> PoP request by some 100 ms or so.
> >> * Even if a wallet has no funds it might still be valuable as a
> generator
> >> for PoPs. This makes it important to keep the security of the wallet
> after
> >> it has been emptied.
> >> * Transaction malleability may cause the server to have another
> >> transaction id for a payment than the client's wallet. In that case the
> >> wallet will not be able to prove the transaction to the server. Wallets
> >> should not rely on the transaction id of the outgoing transaction.
> Instead
> >> it should listen for the transaction on the network and put that in its
> list
> >> of transactions.
> >>
> >> == Reference implementation ==
> >>
> >> [https://github.com/kallerosenbaum/poppoc poppoc on GitHub]
> >>
> >> [https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]
> >>
> >> == References ==
> >>
> >> [https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki
> BIP0021]:
> >> URI Scheme
> >>
> >> [https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki
> BIP0070]:
> >> Payment Protocol
> >>
> >> [[btcpop scheme BIP]]
> >>
> >> #########################################################
> >>
> >> 2015-06-06 23:25 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:
> >> > Thank you all for the feedback.
> >> >
> >> > I will change the data structure as follows:
> >> >
> >> > * There will be only one output, the "pop output", and no outputs from
> >> > T will be copied to the PoP.
> >> > * The pop output will have value 0.
> >> > * The sequence number of all inputs of the PoP will be set to 0. I
> >> > chose to set it to 0 for all inputs for simplicity.
> >> > * The lock_time of the PoP is always set to 499999999.
> >> >
> >> > Any comments on this?
> >> >
> >> > /Kalle
> >> >
> >> > 2015-06-06 19:00 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:
> >> >> 2015-06-06 18:10 GMT+02:00 Tom Harding <tomh at thinlink.com>:
> >> >>> On Jun 6, 2015 8:05 AM, "Kalle Rosenbaum" <kalle at rosenbaum.se>
> wrote:
> >> >>>
> >> >>>> I'm open to changes here.
> >> >>>
> >> >>> I suggest:
> >> >>>
> >> >>> - Don't include any real outputs.   They are redundant because the
> >> >>> txid is
> >> >>> already referenced.
> >> >>
> >> >> with the nLocktime solution, the copied outputs are not needed.
> >> >>
> >> >>>
> >> >>> - Start the proof script, which should be invalid, with a magic
> >> >>> constant and
> >> >>> include space for future expansion.  This makes PoP's easy to
> identify
> >> >>> and
> >> >>> extend.
> >> >>
> >> >> I did remore the constant (a "PoP" literal ascii encoded string)
> >> >> because it didn't add much. The recipient will expect a pop, so it
> >> >> will simply treat it as one. I did add a 2 byte version field to make
> >> >> it extendable.
> >> >>
> >> >>>
> >> >>> - "Proof of Potential"
> >> >>
> >> >> Noted :-)
> >> >>
> >> >> Thank you
> >> >> /Kalle
> >>
> >>
> >>
> ------------------------------------------------------------------------------
> >>
> >> _______________________________________________
> >> Bitcoin-development mailing list
> >> Bitcoin-development at lists.sourceforge.net
> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >>
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/eb18f534/attachment.html>

From mike at plan99.net  Mon Jun 15 10:13:32 2015
From: mike at plan99.net (Mike Hearn)
Date: Mon, 15 Jun 2015 12:13:32 +0200
Subject: [Bitcoin-development] Proposal: Move Bitcoin Dev List to a
 Neutral Competent Entity
In-Reply-To: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>
References: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>
Message-ID: <CANEZrP3uF7AfcH__zHjSUt=RWXG4RfPup=zwnLf_G1_1_oMvmA@mail.gmail.com>

Bear in mind the problem that stops Jeff's messages getting through is that
mailman 1.0 doesn't know how to handle DKIM properly. Switching to a
different mailman provider won't fix that.

Does mailman 3.0 even fix this? I found it difficult to tell from their
website. There's a big page on the mailman wiki that suggests they "fixed"
it by simply deleting the signatures entirely, which won't work. DMARC
policies state that mail *must* be signed and unsigned/incorrectly signed
message should be discarded.

The user documentation for mailman 3 doesn't seem to exist? The links on
the website are docs for 2.1, perhaps they released mailman 3 without
refreshing the docs.

Google Groups may be "controversial" but if I recall correctly the main
issue was the question of whether you needed a Google account or not. I'm
pretty sure you can just send an email to
groupname+subscribe at googlegroups.com even if you don't have a Google
account. But of course this is a bizarre standard to hold mailing list
software to: mailman asks users to create an account for each listserv in
order to manage a subscription too!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/1ada10c5/attachment.html>

From pieter.wuille at gmail.com  Mon Jun 15 10:24:45 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Mon, 15 Jun 2015 12:24:45 +0200
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <CANEZrP0Z_EOmVgbvVmYDvegm6jfd1cKB52acXHocjRuM-qGEog@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
	<CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com>
	<CANEZrP0Z_EOmVgbvVmYDvegm6jfd1cKB52acXHocjRuM-qGEog@mail.gmail.com>
Message-ID: <CAPg+sBgc0i-XsN=g0V4Y0bko-Xb1AT5x=UWDa+opL3eFbBmJfA@mail.gmail.com>

On Mon, Jun 15, 2015 at 11:27 AM, Mike Hearn <mike at plan99.net> wrote:

> I persevered for several months to add a very small "API" I needed for my
> app to Bitcoin Core, and it was in the end a waste of time. There are no
> actionable items left for the getutxo patch, regardless, I had to fork
> Bitcoin to get it out there. It would have been *much* easier to just
> say, fuck it, I'll use blockchain.info and in fact some in this community
> told me to do exactly that. But, the approach I chose has been working fine
> for months now.
>

Since you keep bringing this up, I'll try to clarify this once again.

Since your patch was to enable querying spentness of particular outputs,
which is fundamentally unprovable data in Bitcoin as is (even your proposed
protocol that verifies scripts with amounts under sighash only proves
correctness of the txout data, not its spentness), I indeed don't see why
you would want anything else than querying such a service. I wish it were
different, but the choice is between querying a central service, or
trusting something a random peer on the internet tells you. At least with
the central service you can use an authenticated protocol with known keys
to detect MITM, and have someone to point to when they lie.

Not decentralized you say? Absolutely. But why do we want decentralization
in the first place? To remove central points of failure, and to reduce
trust. Bitcoin gets away with decentralization because it can validate (to
more or lesser extent) the data it received from its identityless peers. If
you can't do that, and are just aiming for removing central points of
failure, run a bunch of servers yourself, and let others run their own.
That sounds remarkably close to what you actually did, actually...

Do you want actually trustless querying of spentness in the future? Help
working on one of the several TXO commitment ideas to get them implemented.

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/d1788c2e/attachment.html>

From mike at plan99.net  Mon Jun 15 10:36:35 2015
From: mike at plan99.net (Mike Hearn)
Date: Mon, 15 Jun 2015 12:36:35 +0200
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <CAPg+sBgc0i-XsN=g0V4Y0bko-Xb1AT5x=UWDa+opL3eFbBmJfA@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
	<CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com>
	<CANEZrP0Z_EOmVgbvVmYDvegm6jfd1cKB52acXHocjRuM-qGEog@mail.gmail.com>
	<CAPg+sBgc0i-XsN=g0V4Y0bko-Xb1AT5x=UWDa+opL3eFbBmJfA@mail.gmail.com>
Message-ID: <CANEZrP0eGDTafK+ZUBNcQBOe2JU_PqZVXMt0Ds-b8Ley7kbGrA@mail.gmail.com>

>
> Since you keep bringing this up, I'll try to clarify this once again.
>

I understand the arguments against it. And I think you are agreeing with me
- Adam is bemoaning the way developers outsource stuff to third party
services, and suggesting it is relevant to the block size debate. And we
are saying, no, it's happening because it's easier than doing things in a
decentralised way.


> If you can't do that, and are just aiming for removing central points of
> failure, run a bunch of servers yourself, and let others run their own.
> That sounds remarkably close to what you actually did, actually...
>

Right. There's a deeper issue here. The sort of 'trustless' querying of the
UTXO set that was demanded from me is impossible even with commitments,
because the answer can change the moment you receive it. All it takes is a
new block or new transaction to be broadcast a split second after you
download and use the data, and suddenly what you did is incorrect no matter
how many proofs you verified!

The only way to know this has happened is to be a full node and download
all transactions yourself ... and even then, you are trusting your peers to
actually relay you all transactions and not a subset. So in the end you can
never achieve perfection, only get closer to it.

But that situation is *fine* for many use cases, like showing someone a
snapshot of their crowdfund in a user interface. We just accept that what
we see on the screen may lag behind reality. It happens all the time with
all kinds of non-Bitcoin apps. We accept that there may be cases where the
answer we get is wrong. The software can nevertheless still be useful.

So Lighthouse compromises. It queries multiple peers and cross-references
their answers. If their answers don't match it shows an error on the screen
and won't show the user any status for their crowdfund at all. This error
has never occurred. Maybe one day it will. So the app gets more
decentralisation, more robustness, and accepts that the user interface
might one day show a wrong answer if the P2P network starts lying (or your
internet connection is hacked, but the right fix for that is P2P
encryption).

Unfortunately this sort of balance-of-risks approach is considered a
non-starter in Bitcoin Core. So why would developers even try? The message
sent was clear:  even if you have an approach you think will work, don't
bother.

Much easier to just outsource to a trusted service indeed.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/4fcbdae8/attachment.html>

From pieter.wuille at gmail.com  Mon Jun 15 10:40:51 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Mon, 15 Jun 2015 12:40:51 +0200
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <CANEZrP0eGDTafK+ZUBNcQBOe2JU_PqZVXMt0Ds-b8Ley7kbGrA@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
	<CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com>
	<CANEZrP0Z_EOmVgbvVmYDvegm6jfd1cKB52acXHocjRuM-qGEog@mail.gmail.com>
	<CAPg+sBgc0i-XsN=g0V4Y0bko-Xb1AT5x=UWDa+opL3eFbBmJfA@mail.gmail.com>
	<CANEZrP0eGDTafK+ZUBNcQBOe2JU_PqZVXMt0Ds-b8Ley7kbGrA@mail.gmail.com>
Message-ID: <CAPg+sBiPhhrBh8f3QxJLtoysfywtVFSo2RH0WXVR+vpX9z6+HQ@mail.gmail.com>

On Mon, Jun 15, 2015 at 12:36 PM, Mike Hearn <mike at plan99.net> wrote:

>
> Since you keep bringing this up, I'll try to clarify this once again.
>>
>
> I understand the arguments against it. And I think you are agreeing with
> me - Adam is bemoaning the way developers outsource stuff to third party
> services, and suggesting it is relevant to the block size debate. And we
> are saying, no, it's happening because it's easier than doing things in a
> decentralised way.
>

The fact that using a centralized service is easier isn't a good reason
IMHO. It disregards the long-term, and introduces systemic risk.

But in cases where using a decentralized approach doesn't *add* anything, I
cannot reasonably promote it, and that's why I was against getutxos in the
P2P protocol.

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/7121d0a8/attachment.html>

From mike at plan99.net  Mon Jun 15 10:50:47 2015
From: mike at plan99.net (Mike Hearn)
Date: Mon, 15 Jun 2015 12:50:47 +0200
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <CAPg+sBiPhhrBh8f3QxJLtoysfywtVFSo2RH0WXVR+vpX9z6+HQ@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
	<CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com>
	<CANEZrP0Z_EOmVgbvVmYDvegm6jfd1cKB52acXHocjRuM-qGEog@mail.gmail.com>
	<CAPg+sBgc0i-XsN=g0V4Y0bko-Xb1AT5x=UWDa+opL3eFbBmJfA@mail.gmail.com>
	<CANEZrP0eGDTafK+ZUBNcQBOe2JU_PqZVXMt0Ds-b8Ley7kbGrA@mail.gmail.com>
	<CAPg+sBiPhhrBh8f3QxJLtoysfywtVFSo2RH0WXVR+vpX9z6+HQ@mail.gmail.com>
Message-ID: <CANEZrP10gn+969d-oe-8Em9ipe4DOP9q0WkNtL6u-6V5aphkPQ@mail.gmail.com>

>
> The fact that using a centralized service is easier isn't a good reason
> IMHO. It disregards the long-term, and introduces systemic risk.
>

Well sure, that's easy for you to say, but you have a salary :) Other
developers may find the incremental benefits of decentralisation low vs
adding additional features, for instance, and who is to say they are wrong?


> But in cases where using a decentralized approach doesn't *add* anything,
> I cannot reasonably promote it, and that's why I was against getutxos in
> the P2P protocol.
>

It does add something though! It means, amongst other things, I can switch
of all my servers, walk away for good, discard this Mike Hearn pseudonym I
invented for Bitcoin and the app will still work :) Surely that is an
important part of being decentralised?

It also means that as the underlying protocol evolves over time, getutxos
can evolve along side it. P2P protocol gets encrypted/authenticated? Great,
one more additional bit of security. If one day miners commit to UTXO sets,
great, one more additional bit of security. When we start including input
values in the signature hash, great ... one more step up in security.

Anyway, I didn't really want to reopen this debate. I just point out that
third party services are quite happy to provide whatever developers need to
build great apps, even if doing so fails to meet some kind of perfect
cryptographic ideal. And that's why they're winning devs.

Now back to your regularly scheduled block size debates ...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/ebebaacc/attachment.html>

From rebroad+sourceforge.net at gmail.com  Mon Jun 15 11:16:16 2015
From: rebroad+sourceforge.net at gmail.com (Rebroad (sourceforge))
Date: Mon, 15 Jun 2015 14:16:16 +0300
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <CANEZrP10gn+969d-oe-8Em9ipe4DOP9q0WkNtL6u-6V5aphkPQ@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
	<CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com>
	<CANEZrP0Z_EOmVgbvVmYDvegm6jfd1cKB52acXHocjRuM-qGEog@mail.gmail.com>
	<CAPg+sBgc0i-XsN=g0V4Y0bko-Xb1AT5x=UWDa+opL3eFbBmJfA@mail.gmail.com>
	<CANEZrP0eGDTafK+ZUBNcQBOe2JU_PqZVXMt0Ds-b8Ley7kbGrA@mail.gmail.com>
	<CAPg+sBiPhhrBh8f3QxJLtoysfywtVFSo2RH0WXVR+vpX9z6+HQ@mail.gmail.com>
	<CANEZrP10gn+969d-oe-8Em9ipe4DOP9q0WkNtL6u-6V5aphkPQ@mail.gmail.com>
Message-ID: <CAFBxzAAExA-aE+8o-+HGQtnuwWuWpkt8Lbgxvh7hT64XkMKOPg@mail.gmail.com>

My understanding of this debate is that there are some people who want to
keep Bitcoin at 1MB block limit, and there are some who want to increase it.

I for one am curious to see how 1MB limited bitcoin evolves, and I believe
we can all have a chance to see this AND hard-fork bitcoin to remove the
block size restriction.

To remove the 1MB limit required a hard fork. This is not disputed. It's
what we do with the original (1MB limit) bitcoin that concerns me (and
other's I am sure).

What I would like to see is both being allowed to live. Harry Potter and
Voldermort! (Except neither are evil!)

The solution is to hard-fork and merge-mine. This way, both can live, and
mining power is not divided.

Dogecoin recently hardforked and this hardfork also involved switching to
merge-mining, so it's been done successfully.

So, simply, bitcoin as it is doesn't need to actually fork, but instead, at
a certain block size, a forked bitcoin with the blocksize lmit removed will
start to be merge-mined alongside bitcoin. Miners can be ready for this.
Wallets can be ready for this - in fact, for most wallets and merchants
they will possibly want to default to the bigger blocksize fork since this
caters for more transactions per block.

We still don't know how removing the block limit will pan out and what
other problems with scalability will arise in the future, so by preserving
the original bitcoin, we keep diversity, and people won't feel their
investments in bitcoin are being unnecessarily put at risk (as their
investments will stay in both the new and the old bitcoin).

The bitcoin core developers can implement a patch like the one recently
used for dogecoin, to allow the chain to fork at a set point, where at
which point, bitcoins will be split into the new and the old. Branding will
be an important issue here I think, so that there is as little confusion as
possible. I think this is a small price to pay in return for not killing
the original bitcoin (even if it's true that Satoshi did intend to remove
the 1MB limit at some point).

If I'm missing something obvious please let me know.

On Mon, Jun 15, 2015 at 1:50 PM, Mike Hearn <mike at plan99.net> wrote:

> The fact that using a centralized service is easier isn't a good reason
>> IMHO. It disregards the long-term, and introduces systemic risk.
>>
>
> Well sure, that's easy for you to say, but you have a salary :) Other
> developers may find the incremental benefits of decentralisation low vs
> adding additional features, for instance, and who is to say they are wrong?
>
>
>> But in cases where using a decentralized approach doesn't *add* anything,
>> I cannot reasonably promote it, and that's why I was against getutxos in
>> the P2P protocol.
>>
>
> It does add something though! It means, amongst other things, I can switch
> of all my servers, walk away for good, discard this Mike Hearn pseudonym I
> invented for Bitcoin and the app will still work :) Surely that is an
> important part of being decentralised?
>
> It also means that as the underlying protocol evolves over time, getutxos
> can evolve along side it. P2P protocol gets encrypted/authenticated? Great,
> one more additional bit of security. If one day miners commit to UTXO sets,
> great, one more additional bit of security. When we start including input
> values in the signature hash, great ... one more step up in security.
>
> Anyway, I didn't really want to reopen this debate. I just point out that
> third party services are quite happy to provide whatever developers need to
> build great apps, even if doing so fails to meet some kind of perfect
> cryptographic ideal. And that's why they're winning devs.
>
> Now back to your regularly scheduled block size debates ...
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/d3986cae/attachment.html>

From kalle at rosenbaum.se  Mon Jun 15 11:59:45 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Mon, 15 Jun 2015 13:59:45 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
	<CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>
	<CAPg+sBiWykR6RaHhbyYQbL=A5t1TmHgEmS_sC7jj9d3SUTMO9g@mail.gmail.com>
	<CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>
	<CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>
Message-ID: <CAPswA9yB3wfV1auXR=ggXjh+f1C3Qpkv8qP1miQwkc8R2_aBLg@mail.gmail.com>

2015-06-15 12:00 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
> I did misunderstand that. That changes things significantly.
>
> However, having paid is not the same as having had access to the input
> coins. What about shared wallets or coinjoin?

Wallets will have the same ability to make PoPs as they have in making
payments, see my motivation and rationale sections. CoinJoin is not
compatible with PoP, Luke-Jr brought that up a week ago:

"This appears to be incompatible with CoinJoin at least. Maybe there's some
clean way to avoid that by using
https://github.com/Blockstream/contracthashtool ?"

I'm not sure if we will be able to support PoP with CoinJoin. Maybe
someone with more insight into CoinJoin have some input?

>
> Also, if I understand correctly, there is no commitment to anything you're
> trying to say about the sender? So once I obtain a proof-of-payment from you
> about something you paid, I can go claim that it's mine?

I don't understand this. The pop includes a nonce randomly generated
by the server. If you're very lucky, 1/(2^48) per try, you can reuse a
pop.

>
> Why does anyone care who paid? This is like walking into a coffeshop,
> noticing I don't have money with me, let me friend pay for me, and then have
> the shop insist that I can't drink it because I'm not the buyer.

If you pay as you use the service (ie pay for coffee upfront), there's
no need for PoP. Please see the Motivation section. But you are right
that you must have the wallet(s) that paid at hand when you issue a
PoP.

>
> Track payments, don't try to assign identities to payers.

Please elaborate, I don't understand what you mean here.

Regards,
Kalle

>
> On Jun 15, 2015 11:35 AM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:
>>
>> Hi Pieter!
>>
>> It is intended to be a proof that you *have paid* for something. Not
>> that you have the intent to pay for something. You cannot use PoP
>> without a transaction to prove.
>>
>> So, yes, it's just a proof of access to certain coins that you no longer
>> have.
>>
>> Maybe I don't understand you correctly?
>>
>> /Kalle
>>
>> 2015-06-15 11:27 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
>> > Now that you have removed the outputs, I don't think it's even a intent
>> > of
>> > payment, but just a proof of access to certain coins.
>> >
>> > On Jun 15, 2015 11:24 AM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:
>> >>
>> >> Hi all!
>> >>
>> >> I have made the discussed changes and updated my implementation
>> >> (https://github.com/kallerosenbaum/poppoc) accordingly. These are the
>> >> changes:
>> >>
>> >> * There is now only one output, the "pop output", of value 0.
>> >> * The sequence number of all inputs of the PoP must be set to 0. I
>> >> chose to set it to 0 for all inputs for simplicity.
>> >> * The lock_time of the PoP must be set to 499999999 (max block height
>> >> lock
>> >> time).
>> >>
>> >> The comments so far has been mainly positive or neutral. Are there any
>> >> major objections against any of the two proposals? If not, I will ask
>> >> Gregory Maxwell to assign them BIP numbers.
>> >>
>> >> The two BIP proposals can be found at
>> >> https://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP and
>> >> https://github.com/kallerosenbaum/poppoc/wiki/btcpop-scheme-BIP. The
>> >> source
>> >> for the Proof of Payment BIP proposal is also in-lined below.
>> >>
>> >> A number of alternative names have been proposed:
>> >>
>> >> * Proof of Potential
>> >> * Proof of Control
>> >> * Proof of Signature
>> >> * Signatory Proof
>> >> * Popo: Proof of payment origin
>> >> * Pots: Proof of transaction signer
>> >> * proof of transaction intent
>> >> * Declaration of intent
>> >> * Asset-access-and-action-affirmation, AAaAA, or A5
>> >> * VeriBit
>> >> * CertiBTC
>> >> * VBit
>> >> * PayID
>> >>
>> >> Given this list, I still think "Proof of Payment" is the most
>> >> descriptive
>> >> to non-technical people.
>> >>
>> >> Regards,
>> >> Kalle
>> >>
>> >>
>> >> #################################################
>> >> <pre>
>> >>   BIP: <BIP number>
>> >>   Title: Proof of Payment
>> >>   Author: Kalle Rosenbaum <kalle at rosenbaum.se>
>> >>   Status: Draft
>> >>   Type: Standards Track
>> >>   Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>
>> >> </pre>
>> >>
>> >> == Abstract ==
>> >>
>> >> This BIP describes how a wallet can prove to a server that it has the
>> >> ability to sign a certain transaction.
>> >>
>> >> == Motivation ==
>> >>
>> >> There are several scenarios in which it would be useful to prove that
>> >> you
>> >> have paid for something. For example:
>> >>
>> >> * A pre-paid hotel room where your PoP functions as a key to the door.
>> >> * An online video rental service where you pay for a video and watch it
>> >> on
>> >> any device.
>> >> * An ad-sign where you pay in advance for e.g. 2 weeks exclusivity.
>> >> During
>> >> this period you can upload new content to the sign whenever you like
>> >> using
>> >> PoP.
>> >> * Log in to a pay site using a PoP.
>> >> * A parking lot you pay for monthly and the car authenticates itself
>> >> using
>> >> PoP.
>> >> * A lottery where all participants pay to the same address, and the
>> >> winner
>> >> is selected among the transactions to that address. You exchange the
>> >> prize
>> >> for a PoP for the winning transaction.
>> >>
>> >> With Proof of Payment, these use cases can be achieved without any
>> >> personal information (user name, password, e-mail address, etc) being
>> >> involved.
>> >>
>> >> == Rationale ==
>> >>
>> >> Desirable properties:
>> >>
>> >> # A PoP should be generated on demand.
>> >> # It should only be usable once to avoid issues due to theft.
>> >> # It should be able to create a PoP for any payment, regardless of
>> >> script
>> >> type (P2SH, P2PKH, etc.).
>> >> # It should prove that you have enough credentials to unlock all the
>> >> inputs of the proven transaction.
>> >> # It should be easy to implement by wallets and servers to ease
>> >> adoption.
>> >>
>> >> Current methods of proving a payment:
>> >>
>> >> * In BIP0070, the PaymentRequest together with the transactions
>> >> fulfilling
>> >> the request makes some sort of proof. However, it does not meet 1, 2 or
>> >> 4
>> >> and it obviously only meets 3 if the payment is made through BIP0070.
>> >> Also,
>> >> there's no standard way to request/provide the proof. If standardized
>> >> it
>> >> would probably meet 5.
>> >> * Signing messages, chosen by the server, with the private keys used to
>> >> sign the transaction. This could meet 1 and 2 but probably not 3. This
>> >> is
>> >> not standardized either. 4 Could be met if designed so.
>> >>
>> >> If an input script type is P2SH, any satisfying script should do, just
>> >> as
>> >> if it was a payment. For M-of-N multisig scripts, that would mean that
>> >> any
>> >> set of M keys should be sufficient, not neccesarily the same set of M
>> >> keys
>> >> that signed the transaction. This is important because strictly
>> >> demanding
>> >> the same set of M keys would defeat the purpose of a multisig address.
>> >>
>> >> == Specification ==
>> >>
>> >> === Data structure ===
>> >>
>> >> A proof of payment for a transaction T, here called PoP(T), is used to
>> >> prove that one has ownership of the credentials needed to unlock all
>> >> the
>> >> inputs of T. It has the exact same structure as a bitcoin transaction
>> >> with
>> >> the same inputs as T and in the same order as in T, but with each
>> >> sequence
>> >> number set to 0. There is exactly one output, here called the pop
>> >> output,
>> >> with value 0. The pop output must have the following format:
>> >>
>> >>  OP_RETURN <version> <txid> <nonce>
>> >>
>> >> {|
>> >> ! Field        !! Size [B] !! Description
>> >> |-
>> >> | &lt;version> || 2        || Version, little endian, currently 0x01
>> >> 0x00
>> >> |-
>> >> | &lt;txid>    || 32       || The transaction to prove
>> >> |-
>> >> | &lt;nonce>   || 6        || Random data
>> >> |}
>> >>
>> >> The lock_time of the PoP must be set to 499999999 to prevent the PoP
>> >> from
>> >> being included in a block, should it appear on the bitcoin p2p network.
>> >> This
>> >> is also the reason for setting the sequence numbers to 0, since
>> >> sequence
>> >> number of ffffffff would make lock_time ineffective. This specification
>> >> demands that all input sequence numbers are 0, not just one of them,
>> >> which
>> >> would be sufficient to make lock_time effective. This is for simplicity
>> >> reasons.
>> >>
>> >> An illustration of the PoP data structure and its original payment is
>> >> shown below.
>> >>
>> >> <pre>
>> >>   T
>> >>  +------------------------------------------------+
>> >>  |inputs                | outputs                 |
>> >>  |       Value,Sequence | Value,Script            |
>> >>  +------------------------------------------------+
>> >>  |input0 1,ffffffff     | 0,pay to A              |
>> >>  |input1 3,ffffffff     | 2,OP_RETURN <some data> |
>> >>  |input2 4,ffffffff     | 1,pay to B              |
>> >>  |                      | 4,pay to C              |
>> >>  +------------------------------------------------+
>> >>
>> >>   PoP(T)
>> >>  +-------------------------------------------------------------+
>> >>  | inputs               | outputs                              |
>> >>  |       Value,Sequence | Value,Script                         |
>> >>  +-------------------------------------------------------------+
>> >>  |input0 1,00000000     | 0,OP_RETURN <version> <txid> <nonce> |
>> >>  |input1 3,00000000     |                                      |
>> >>  |input2 4,00000000     |                                      |
>> >>  +-------------------------------------------------------------+
>> >>  | lock_time=499999999                                         |
>> >>  +-------------------------------------------------------------+
>> >> </pre>
>> >>
>> >> The PoP is signed using the same signing process that is used for
>> >> bitcoin
>> >> transactions.
>> >>
>> >> The purpose of the nonce is to make it harder to use a stolen PoP; Once
>> >> the PoP has reached the server, that PoP is useless since the server
>> >> will
>> >> generate a new nonce for every PoP request.
>> >>
>> >> === Process ===
>> >>
>> >> # A proof of payment request is sent from the server to the wallet. The
>> >> PoP request contains:
>> >> ## a random nonce
>> >> ## a destination where to send the PoP, for example a https URL
>> >> ## data hinting the wallet which transaction to create a proof for. For
>> >> example:
>> >> ##* txid, if known by the server
>> >> ##* PaymentRequest.PaymentDetails.merchant_data (in case of a BIP0070
>> >> payment)
>> >> ##* amount, label, message or other information from a BIP0021 URI
>> >> # The wallet identifies a transaction T, if possible. Otherwise it asks
>> >> the user to select among the ones that match the hints in 1.iii.
>> >> # The wallet creates an unsigned PoP (UPoP) for T, and asks the user to
>> >> sign it.
>> >> # The user confirms
>> >> # The UPoP(T) is signed by the wallet, creating PoP(T).
>> >> # The PoP is sent to the destination in 1.ii.
>> >> # The server receiving the PoP validates it and responds with ?valid?
>> >> or
>> >> ?invalid?.
>> >> # The wallet displays the response in some way to the user.
>> >>
>> >> '''Remarks:'''
>> >>
>> >> * The method of transferring the PoP request at step 1 is not specified
>> >> here. Instead that is specified in separate specifications. See [btcpop
>> >> scheme BIP](btcpop scheme BIP).
>> >> * The nonce must be randomly generated by the server for every new PoP
>> >> request.
>> >>
>> >> === Validating a PoP ===
>> >>
>> >> The server needs to validate the PoP and reply with "valid" or
>> >> "invalid".
>> >> That process is outlined below. If any step fails, the validation is
>> >> aborted
>> >> and "invalid" is returned:
>> >>
>> >> # Check the format of the PoP. It must pass normal transaction checks,
>> >> except that the inputs may already be spent.
>> >> # Check that lock_time is 499999999.
>> >> # Check that there is exactly one output. This output must have value 0
>> >> and conform to the OP_RETURN output format outlined above.
>> >> # Check that the nonce is the same as the one requested.
>> >> # Check that the inputs of the PoP are exactly the same as in
>> >> transaction
>> >> T, except that the sequence numbers must all be 0. The ordering of the
>> >> inputs must also be the same as in T.
>> >> # Run the scripts of all the inputs. All scipts must return true.
>> >> # Check that the txid in the PoP output is the transaction you actually
>> >> want proof for. If you don?t know exactly what transaction you want
>> >> proof
>> >> for, check that the transaction actually pays for the product/service
>> >> you
>> >> deliver.
>> >> # Return "valid".
>> >>
>> >> == Security considerations ==
>> >>
>> >> * Someone can intercept the PoP-request and change any parameter in it.
>> >> These can be mitigated by using secure connections. For example:
>> >> ** Pop destination - Stealing your PoP.
>> >> ** label - Trick you to sign an unintended pop or set a label that your
>> >> wallet doesn't have any record for, resulting in a broken service.
>> >> Always
>> >> check the PoP before signing.
>> >> ** nonce - Your pop will not validate on server.
>> >> * Someone can steal a PoP, for example by tampering with the PoP
>> >> request,
>> >> and try to use the service hoping to get a matching nonce. Probability
>> >> per
>> >> try: 1/(2^48). The server should have a mechanism for detecting a brute
>> >> force attack of this kind, or at least slow down the process by
>> >> delaying the
>> >> PoP request by some 100 ms or so.
>> >> * Even if a wallet has no funds it might still be valuable as a
>> >> generator
>> >> for PoPs. This makes it important to keep the security of the wallet
>> >> after
>> >> it has been emptied.
>> >> * Transaction malleability may cause the server to have another
>> >> transaction id for a payment than the client's wallet. In that case the
>> >> wallet will not be able to prove the transaction to the server. Wallets
>> >> should not rely on the transaction id of the outgoing transaction.
>> >> Instead
>> >> it should listen for the transaction on the network and put that in its
>> >> list
>> >> of transactions.
>> >>
>> >> == Reference implementation ==
>> >>
>> >> [https://github.com/kallerosenbaum/poppoc poppoc on GitHub]
>> >>
>> >> [https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]
>> >>
>> >> == References ==
>> >>
>> >> [https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki
>> >> BIP0021]:
>> >> URI Scheme
>> >>
>> >> [https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki
>> >> BIP0070]:
>> >> Payment Protocol
>> >>
>> >> [[btcpop scheme BIP]]
>> >>
>> >> #########################################################
>> >>
>> >> 2015-06-06 23:25 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:
>> >> > Thank you all for the feedback.
>> >> >
>> >> > I will change the data structure as follows:
>> >> >
>> >> > * There will be only one output, the "pop output", and no outputs
>> >> > from
>> >> > T will be copied to the PoP.
>> >> > * The pop output will have value 0.
>> >> > * The sequence number of all inputs of the PoP will be set to 0. I
>> >> > chose to set it to 0 for all inputs for simplicity.
>> >> > * The lock_time of the PoP is always set to 499999999.
>> >> >
>> >> > Any comments on this?
>> >> >
>> >> > /Kalle
>> >> >
>> >> > 2015-06-06 19:00 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:
>> >> >> 2015-06-06 18:10 GMT+02:00 Tom Harding <tomh at thinlink.com>:
>> >> >>> On Jun 6, 2015 8:05 AM, "Kalle Rosenbaum" <kalle at rosenbaum.se>
>> >> >>> wrote:
>> >> >>>
>> >> >>>> I'm open to changes here.
>> >> >>>
>> >> >>> I suggest:
>> >> >>>
>> >> >>> - Don't include any real outputs.   They are redundant because the
>> >> >>> txid is
>> >> >>> already referenced.
>> >> >>
>> >> >> with the nLocktime solution, the copied outputs are not needed.
>> >> >>
>> >> >>>
>> >> >>> - Start the proof script, which should be invalid, with a magic
>> >> >>> constant and
>> >> >>> include space for future expansion.  This makes PoP's easy to
>> >> >>> identify
>> >> >>> and
>> >> >>> extend.
>> >> >>
>> >> >> I did remore the constant (a "PoP" literal ascii encoded string)
>> >> >> because it didn't add much. The recipient will expect a pop, so it
>> >> >> will simply treat it as one. I did add a 2 byte version field to
>> >> >> make
>> >> >> it extendable.
>> >> >>
>> >> >>>
>> >> >>> - "Proof of Potential"
>> >> >>
>> >> >> Noted :-)
>> >> >>
>> >> >> Thank you
>> >> >> /Kalle
>> >>
>> >>
>> >>
>> >> ------------------------------------------------------------------------------
>> >>
>> >> _______________________________________________
>> >> Bitcoin-development mailing list
>> >> Bitcoin-development at lists.sourceforge.net
>> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >>
>> >



From kubikkubikcz01 at gmail.com  Mon Jun 15 12:02:32 2015
From: kubikkubikcz01 at gmail.com (Jakub Lacko)
Date: Mon, 15 Jun 2015 14:02:32 +0200
Subject: [Bitcoin-development] Test
Message-ID: <CAB1PfvDMWz73BkkeQJADbRDTAcif-kJU6nQ3cafOSRo460Q9pQ@mail.gmail.com>

Tets
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/4deab917/attachment.html>

From onelineproof at gmail.com  Mon Jun 15 17:05:05 2015
From: onelineproof at gmail.com (Andrew)
Date: Mon, 15 Jun 2015 17:05:05 +0000
Subject: [Bitcoin-development] Scaling Bitcoin with Subchains
In-Reply-To: <557D2571.601@gmail.com>
References: <CAL8tG==LG=xC_DzOaghbGGKab4=UVpGLQV7781pU4wg+WnFdMg@mail.gmail.com>
	<CAPg+sBjqQ66f1Rmhi9HOBYP5BDjBHvTNPpUN-y3o-KX8dXBMhg@mail.gmail.com>
	<557D2571.601@gmail.com>
Message-ID: <CAL8tG=kEv9AfQM+1Rv+tqBujFEjCp+BsjQ-1s7eJC-usogFFqw@mail.gmail.com>

Hi All,

I talked with Pieter off-list. And I guess the main opposition is that
coins that are coming from chains that you are not directly validating are
not fully validated by you in the sense that you only get an SPV type proof
to prove that miners have accepted those coins. Yes, it's true, but once
blocks have been mined, there is nothing you can really do about it.
Splitting up the transactions into multiple chains doesn't stop someone
from validating all chains, which results in the same validation workload
as a full node with one chain and big blocks that store the same number of
transactions per second. So there is no disadvantage from using this method
compared with having big blocks, and there are clear advantages. The only
excuse is laziness to create a proper system.

Martin: I'm not sure if random independent chains would be so useful since
there are delays with cross chain transfers and you would not be sure if
those chains will be maintained in the future. My idea is more the idea of
extension blocks, i.e. synchronised chains.

Also, some people think that CPU speed and memory size are the only
limitations to running a full node, and they think that it is ok to just
run a heavily pruned node. Pruned nodes (nodes that have less than 10 years
of transactions on their hard drives) are bad for the network. Reasons why
you would want the long term history of transactions on your hard drive:

1) Your computer could have been compromised when you did the initial
validation, so you may want to validate and see all the old transactions
again.

2) You don't have to spend much time to download transactions that you want
to analyze but have already pruned.

3) Risk of denial of service attack from the "archival" nodes.

4) There is less of an inequality between the big data centers and regular
people. We can analyze the history of the transactions that are relevant to
us just as effectively as the data centers. With the pruning model, it will
be more like NSA-style nodes watching our transaction history, while
regular people can only see "snapshots". Remember how the Bitcoin community
was analysing the old Mt Gox transactions using the blockchain? This kind
of stuff will no longer be possible if most people can only run pruned
nodes.

5) The data is more distributed thus more easy for others to download
(think torrent downloads vs downloading from a central server).

6) Again being distributed, more eyes will be looking at the long term
data, thus people can more easily investigate scandals and things like that.

7) Without the full history of blocks people cannot really give a proof to
others that what they noticed with their pruned nodes is actually what
happened (if they spot something interesting).

8) The time for a new user to start fresh and sync a full node with a long
term history of transactions is much more accessible (17 days for 100 years
of transactions with 1 MB blocks on high-end computers). Same with the time
needed to perform any kind of analysis on the old transactions. And
remember, any new transactions likely depend on old transactions, so yes
they are very relevant.

This is not paranoia. These are real security risks. So don't tell me that
you are really running a full node with the same level of security when you
are pruning it. Also, don't tell me that the security of running a full
node remains the same when centralization is increased (like with bigger
block sizes). Centralisation is a security risk.

Some people think that decentralisation means you have to run a possibly
noisy desktop in a possible space restricted home, which can be annoying.
No, you don't have to. You can run a full node (or an almost full node on
the chains you are interested in) in a shack in the middle of nowhere and
you can monitor it remotely with cameras or whatever. The point is that it
is easy for a regular person to run one and they can do so without causing
attention and without anyone's permission. That is decentralisation. Even
10 MB blocks are too much to enable this definition of decentralisation
(according to my calculations).

If there are people who choose to run Gavin/Mike's hard fork of Bitcoin
because they are uniformed or mentally challenged or have bad intentions,
then there is not much I can do (I try to inform but I don't have such a
high popularity level to be effective there), but I will surely not accept
any bitcoin that is only valid on blocks with size greater than 1 million
bytes. Such coins will have 0 or even negative value to me, and I expect
others to do the same.

In the meantime, I will start the development process of my proposed
scaling methods using bitcoin-core and possibly the sidechains code from
Blockstream as a base. I don't have much free time, so progress will likely
be slow, but if I believe in something, I will keep working on it. I'm
still seeking more criticism of my proposal, because you know, I don't want
to waste my time if there's something fundamentally wrong with it.

Cheers

On Sun, Jun 14, 2015 at 6:55 AM, Martin Schwarz <martin.schwarz at gmail.com>
wrote:

> Pieter,
>
> Am 13.06.2015 um 16:39 schrieb Pieter Wuille:
> > We can reasonably assume that different people's wallet will tend to be
> distributed uniformly over several sidechains to hold their transactions
> (if they're not, there is no scaling benefit anyway...). That means that
> for an average transaction, you will need a cross-chain transfer in order
> to get the money to the recipient (as their wallet will usually be
> associated to a chain that is different from your own).
>
> I think we should set the right incentives to invalidate these
> assumptions. If the fees as well as the security guarantees
> on the main chain are highest and fees are dropping with the distance from
> the main chain on each level of side chains,
> wouldn't communities with many internal transactions create their own side
> chain with low fees? I'd expect geographic
> as well as virtual communities to be forming enjoying cheap fees on their
> 'local' chains and expensive but comparabily rare
> 'long distance' fees. One would expect geographic chains (e.g. continents)
> as well as virtual ones (e.g. the Open Bazaar
> users' chain) to form. To save fees, a typical user would maintain a
> wallet in each of her communities which are loaded
> and drained with rare expensive transacations, whereas daily business with
> many transactions is done cheaply within
> each community chain. So, indeed, I would argue that side chains equipped
> with the right cost incentives for cross-chain
> transactions would lead to a scalable and efficiently self-organizing
> network of side chains.
>
> best regards,
> Martin
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



-- 
PGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/4c5bbbb7/attachment.html>

From pieter.wuille at gmail.com  Mon Jun 15 17:09:42 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Mon, 15 Jun 2015 19:09:42 +0200
Subject: [Bitcoin-development] Scaling Bitcoin with Subchains
In-Reply-To: <CAL8tG=kEv9AfQM+1Rv+tqBujFEjCp+BsjQ-1s7eJC-usogFFqw@mail.gmail.com>
References: <CAL8tG==LG=xC_DzOaghbGGKab4=UVpGLQV7781pU4wg+WnFdMg@mail.gmail.com>
	<CAPg+sBjqQ66f1Rmhi9HOBYP5BDjBHvTNPpUN-y3o-KX8dXBMhg@mail.gmail.com>
	<557D2571.601@gmail.com>
	<CAL8tG=kEv9AfQM+1Rv+tqBujFEjCp+BsjQ-1s7eJC-usogFFqw@mail.gmail.com>
Message-ID: <CAPg+sBjrSed4r+8-d2RGBVhbzaXxX+o=qqw2u-2jpF2RUqmEmA@mail.gmail.com>

If you are fine with the SPV security model, you are much better off by
just increasing the Bitcoin block size and using an SPV client, as those do
not care or even see the full block size by only downloading transactions
they care about. Infinite scalability!

The problem with scaling is that ultimately even SPV security relies on
others being able to validate. Both sidechains and larger block sizes make
that harder.

It's simple: either you care about validation, and you must validate
everything, or you don't, and you don't validate anything. Sidechains do
not offer you a useful compromise here, as well as adding huge delays and
conplexity.
On Jun 15, 2015 7:05 PM, "Andrew" <onelineproof at gmail.com> wrote:

> Hi All,
>
> I talked with Pieter off-list. And I guess the main opposition is that
> coins that are coming from chains that you are not directly validating are
> not fully validated by you in the sense that you only get an SPV type proof
> to prove that miners have accepted those coins. Yes, it's true, but once
> blocks have been mined, there is nothing you can really do about it.
> Splitting up the transactions into multiple chains doesn't stop someone
> from validating all chains, which results in the same validation workload
> as a full node with one chain and big blocks that store the same number of
> transactions per second. So there is no disadvantage from using this method
> compared with having big blocks, and there are clear advantages. The only
> excuse is laziness to create a proper system.
>
> Martin: I'm not sure if random independent chains would be so useful since
> there are delays with cross chain transfers and you would not be sure if
> those chains will be maintained in the future. My idea is more the idea of
> extension blocks, i.e. synchronised chains.
>
> Also, some people think that CPU speed and memory size are the only
> limitations to running a full node, and they think that it is ok to just
> run a heavily pruned node. Pruned nodes (nodes that have less than 10 years
> of transactions on their hard drives) are bad for the network. Reasons why
> you would want the long term history of transactions on your hard drive:
>
> 1) Your computer could have been compromised when you did the initial
> validation, so you may want to validate and see all the old transactions
> again.
>
> 2) You don't have to spend much time to download transactions that you
> want to analyze but have already pruned.
>
> 3) Risk of denial of service attack from the "archival" nodes.
>
> 4) There is less of an inequality between the big data centers and regular
> people. We can analyze the history of the transactions that are relevant to
> us just as effectively as the data centers. With the pruning model, it will
> be more like NSA-style nodes watching our transaction history, while
> regular people can only see "snapshots". Remember how the Bitcoin community
> was analysing the old Mt Gox transactions using the blockchain? This kind
> of stuff will no longer be possible if most people can only run pruned
> nodes.
>
> 5) The data is more distributed thus more easy for others to download
> (think torrent downloads vs downloading from a central server).
>
> 6) Again being distributed, more eyes will be looking at the long term
> data, thus people can more easily investigate scandals and things like that.
>
> 7) Without the full history of blocks people cannot really give a proof to
> others that what they noticed with their pruned nodes is actually what
> happened (if they spot something interesting).
>
> 8) The time for a new user to start fresh and sync a full node with a long
> term history of transactions is much more accessible (17 days for 100 years
> of transactions with 1 MB blocks on high-end computers). Same with the time
> needed to perform any kind of analysis on the old transactions. And
> remember, any new transactions likely depend on old transactions, so yes
> they are very relevant.
>
> This is not paranoia. These are real security risks. So don't tell me that
> you are really running a full node with the same level of security when you
> are pruning it. Also, don't tell me that the security of running a full
> node remains the same when centralization is increased (like with bigger
> block sizes). Centralisation is a security risk.
>
> Some people think that decentralisation means you have to run a possibly
> noisy desktop in a possible space restricted home, which can be annoying.
> No, you don't have to. You can run a full node (or an almost full node on
> the chains you are interested in) in a shack in the middle of nowhere and
> you can monitor it remotely with cameras or whatever. The point is that it
> is easy for a regular person to run one and they can do so without causing
> attention and without anyone's permission. That is decentralisation. Even
> 10 MB blocks are too much to enable this definition of decentralisation
> (according to my calculations).
>
> If there are people who choose to run Gavin/Mike's hard fork of Bitcoin
> because they are uniformed or mentally challenged or have bad intentions,
> then there is not much I can do (I try to inform but I don't have such a
> high popularity level to be effective there), but I will surely not accept
> any bitcoin that is only valid on blocks with size greater than 1 million
> bytes. Such coins will have 0 or even negative value to me, and I expect
> others to do the same.
>
> In the meantime, I will start the development process of my proposed
> scaling methods using bitcoin-core and possibly the sidechains code from
> Blockstream as a base. I don't have much free time, so progress will likely
> be slow, but if I believe in something, I will keep working on it. I'm
> still seeking more criticism of my proposal, because you know, I don't want
> to waste my time if there's something fundamentally wrong with it.
>
> Cheers
>
> On Sun, Jun 14, 2015 at 6:55 AM, Martin Schwarz <martin.schwarz at gmail.com>
> wrote:
>
>> Pieter,
>>
>> Am 13.06.2015 um 16:39 schrieb Pieter Wuille:
>> > We can reasonably assume that different people's wallet will tend to be
>> distributed uniformly over several sidechains to hold their transactions
>> (if they're not, there is no scaling benefit anyway...). That means that
>> for an average transaction, you will need a cross-chain transfer in order
>> to get the money to the recipient (as their wallet will usually be
>> associated to a chain that is different from your own).
>>
>> I think we should set the right incentives to invalidate these
>> assumptions. If the fees as well as the security guarantees
>> on the main chain are highest and fees are dropping with the distance
>> from the main chain on each level of side chains,
>> wouldn't communities with many internal transactions create their own
>> side chain with low fees? I'd expect geographic
>> as well as virtual communities to be forming enjoying cheap fees on their
>> 'local' chains and expensive but comparabily rare
>> 'long distance' fees. One would expect geographic chains (e.g.
>> continents) as well as virtual ones (e.g. the Open Bazaar
>> users' chain) to form. To save fees, a typical user would maintain a
>> wallet in each of her communities which are loaded
>> and drained with rare expensive transacations, whereas daily business
>> with many transactions is done cheaply within
>> each community chain. So, indeed, I would argue that side chains equipped
>> with the right cost incentives for cross-chain
>> transactions would lead to a scalable and efficiently self-organizing
>> network of side chains.
>>
>> best regards,
>> Martin
>>
>>
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
>
> --
> PGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/f3b6f291/attachment.html>

From jgarzik at bitpay.com  Mon Jun 15 17:15:14 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Mon, 15 Jun 2015 13:15:14 -0400
Subject: [Bitcoin-development] Scaling Bitcoin with Subchains
In-Reply-To: <CAPg+sBjrSed4r+8-d2RGBVhbzaXxX+o=qqw2u-2jpF2RUqmEmA@mail.gmail.com>
References: <CAL8tG==LG=xC_DzOaghbGGKab4=UVpGLQV7781pU4wg+WnFdMg@mail.gmail.com>
	<CAPg+sBjqQ66f1Rmhi9HOBYP5BDjBHvTNPpUN-y3o-KX8dXBMhg@mail.gmail.com>
	<557D2571.601@gmail.com>
	<CAL8tG=kEv9AfQM+1Rv+tqBujFEjCp+BsjQ-1s7eJC-usogFFqw@mail.gmail.com>
	<CAPg+sBjrSed4r+8-d2RGBVhbzaXxX+o=qqw2u-2jpF2RUqmEmA@mail.gmail.com>
Message-ID: <CAJHLa0OJg2hC4Ab4Yxy3ekH4WXD9hqHore8+sbF9r1r2SwT_zg@mail.gmail.com>

On Mon, Jun 15, 2015 at 1:09 PM, Pieter Wuille <pieter.wuille at gmail.com>
wrote:

> It's simple: either you care about validation, and you must validate
> everything, or you don't, and you don't validate anything. Sidechains do
> not offer you a useful compromise here, as well as adding huge delays and
> conplexity.
>

As noted to Adam last night - although I agree it adds complexity - side
chains are one solution that will indeed help with scaling long term.
Similar to the graph you see with git repos and merges, having aggregation
chains that arbitrarily fork and then rejoin the main chain are both
feasible and useful.

That code & future is a ways away from production, so doesn't help us
here.  Still, let's not dismiss it as a solution either.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/b00a2d75/attachment.html>

From mike at plan99.net  Mon Jun 15 17:18:25 2015
From: mike at plan99.net (Mike Hearn)
Date: Mon, 15 Jun 2015 19:18:25 +0200
Subject: [Bitcoin-development] Scaling Bitcoin with Subchains
In-Reply-To: <CAPg+sBjrSed4r+8-d2RGBVhbzaXxX+o=qqw2u-2jpF2RUqmEmA@mail.gmail.com>
References: <CAL8tG==LG=xC_DzOaghbGGKab4=UVpGLQV7781pU4wg+WnFdMg@mail.gmail.com>
	<CAPg+sBjqQ66f1Rmhi9HOBYP5BDjBHvTNPpUN-y3o-KX8dXBMhg@mail.gmail.com>
	<557D2571.601@gmail.com>
	<CAL8tG=kEv9AfQM+1Rv+tqBujFEjCp+BsjQ-1s7eJC-usogFFqw@mail.gmail.com>
	<CAPg+sBjrSed4r+8-d2RGBVhbzaXxX+o=qqw2u-2jpF2RUqmEmA@mail.gmail.com>
Message-ID: <CANEZrP1D0AN_iRobD2RYXHCCWhU7Vk6yZ35+ytsQ0zonSCG_HQ@mail.gmail.com>

>
> It's simple: either you care about validation, and you must validate
> everything, or you don't, and you don't validate anything.
>
Pedantically: you could validate a random subset of all scripts, to give
yourself probabilistic verification rather than full vs SPV. If enough
people do it with a large enough subset the probability of a problem being
detected goes up a lot. You still pay the cost of the database updates.

But your main point is of course completely right, that side chains are not
a way to scale up.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/887958ae/attachment.html>

From raystonn at hotmail.com  Mon Jun 15 17:53:17 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Mon, 15 Jun 2015 10:53:17 -0700
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <CAFBxzAAExA-aE+8o-+HGQtnuwWuWpkt8Lbgxvh7hT64XkMKOPg@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com><CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com><CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com><CANEZrP0Z_EOmVgbvVmYDvegm6jfd1cKB52acXHocjRuM-qGEog@mail.gmail.com><CAPg+sBgc0i-XsN=g0V4Y0bko-Xb1AT5x=UWDa+opL3eFbBmJfA@mail.gmail.com><CANEZrP0eGDTafK+ZUBNcQBOe2JU_PqZVXMt0Ds-b8Ley7kbGrA@mail.gmail.com><CAPg+sBiPhhrBh8f3QxJLtoysfywtVFSo2RH0WXVR+vpX9z6+HQ@mail.gmail.com><CANEZrP10gn+969d-oe-8Em9ipe4DOP9q0WkNtL6u-6V5aphkPQ@mail.gmail.com>
	<CAFBxzAAExA-aE+8o-+HGQtnuwWuWpkt8Lbgxvh7hT64XkMKOPg@mail.gmail.com>
Message-ID: <COL131-DS5331AE0C03A2BF6E0553ECDB80@phx.gbl>

> The solution is to hard-fork and merge-mine. This way, both can live, and mining power is not divided.

No, this would essentially be blessing an increase to 42M bitcoins, half on each chain.  You could expect a severe market price correction if this were to happen.

From: Rebroad (sourceforge) 
Sent: Monday, June 15, 2015 4:16 AM
Cc: Bitcoin Dev 
Subject: Re: [Bitcoin-development] comments on BIP 100

My understanding of this debate is that there are some people who want to keep Bitcoin at 1MB block limit, and there are some who want to increase it. 

I for one am curious to see how 1MB limited bitcoin evolves, and I believe we can all have a chance to see this AND hard-fork bitcoin to remove the block size restriction.

To remove the 1MB limit required a hard fork. This is not disputed. It's what we do with the original (1MB limit) bitcoin that concerns me (and other's I am sure).

What I would like to see is both being allowed to live. Harry Potter and Voldermort! (Except neither are evil!)

The solution is to hard-fork and merge-mine. This way, both can live, and mining power is not divided.

Dogecoin recently hardforked and this hardfork also involved switching to merge-mining, so it's been done successfully.

So, simply, bitcoin as it is doesn't need to actually fork, but instead, at a certain block size, a forked bitcoin with the blocksize lmit removed will start to be merge-mined alongside bitcoin. Miners can be ready for this. Wallets can be ready for this - in fact, for most wallets and merchants they will possibly want to default to the bigger blocksize fork since this caters for more transactions per block.

We still don't know how removing the block limit will pan out and what other problems with scalability will arise in the future, so by preserving the original bitcoin, we keep diversity, and people won't feel their investments in bitcoin are being unnecessarily put at risk (as their investments will stay in both the new and the old bitcoin).

The bitcoin core developers can implement a patch like the one recently used for dogecoin, to allow the chain to fork at a set point, where at which point, bitcoins will be split into the new and the old. Branding will be an important issue here I think, so that there is as little confusion as possible. I think this is a small price to pay in return for not killing the original bitcoin (even if it's true that Satoshi did intend to remove the 1MB limit at some point).

If I'm missing something obvious please let me know.

On Mon, Jun 15, 2015 at 1:50 PM, Mike Hearn <mike at plan99.net> wrote:

    The fact that using a centralized service is easier isn't a good reason IMHO. It disregards the long-term, and introduces systemic risk.


  Well sure, that's easy for you to say, but you have a salary :) Other developers may find the incremental benefits of decentralisation low vs adding additional features, for instance, and who is to say they are wrong?

    But in cases where using a decentralized approach doesn't *add* anything, I cannot reasonably promote it, and that's why I was against getutxos in the P2P protocol.


  It does add something though! It means, amongst other things, I can switch of all my servers, walk away for good, discard this Mike Hearn pseudonym I invented for Bitcoin and the app will still work :) Surely that is an important part of being decentralised?

  It also means that as the underlying protocol evolves over time, getutxos can evolve along side it. P2P protocol gets encrypted/authenticated? Great, one more additional bit of security. If one day miners commit to UTXO sets, great, one more additional bit of security. When we start including input values in the signature hash, great ... one more step up in security.

  Anyway, I didn't really want to reopen this debate. I just point out that third party services are quite happy to provide whatever developers need to build great apps, even if doing so fails to meet some kind of perfect cryptographic ideal. And that's why they're winning devs.

  Now back to your regularly scheduled block size debates ... 

  ------------------------------------------------------------------------------

  _______________________________________________
  Bitcoin-development mailing list
  Bitcoin-development at lists.sourceforge.net
  https://lists.sourceforge.net/lists/listinfo/bitcoin-development





--------------------------------------------------------------------------------
------------------------------------------------------------------------------



--------------------------------------------------------------------------------
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/aa747543/attachment.html>

From onelineproof at gmail.com  Mon Jun 15 18:00:17 2015
From: onelineproof at gmail.com (Andrew)
Date: Mon, 15 Jun 2015 18:00:17 +0000
Subject: [Bitcoin-development] Scaling Bitcoin with Subchains
In-Reply-To: <CANEZrP1D0AN_iRobD2RYXHCCWhU7Vk6yZ35+ytsQ0zonSCG_HQ@mail.gmail.com>
References: <CAL8tG==LG=xC_DzOaghbGGKab4=UVpGLQV7781pU4wg+WnFdMg@mail.gmail.com>
	<CAPg+sBjqQ66f1Rmhi9HOBYP5BDjBHvTNPpUN-y3o-KX8dXBMhg@mail.gmail.com>
	<557D2571.601@gmail.com>
	<CAL8tG=kEv9AfQM+1Rv+tqBujFEjCp+BsjQ-1s7eJC-usogFFqw@mail.gmail.com>
	<CAPg+sBjrSed4r+8-d2RGBVhbzaXxX+o=qqw2u-2jpF2RUqmEmA@mail.gmail.com>
	<CANEZrP1D0AN_iRobD2RYXHCCWhU7Vk6yZ35+ytsQ0zonSCG_HQ@mail.gmail.com>
Message-ID: <CAL8tG=k90nzt9w99QjSx5R=+LeBxkfVvcEvcNAyVkJHkaQZAgg@mail.gmail.com>

Pieter: I kind of see your point (but I think you're missing some key
points). You mean just download all the headers and then just verify the
transactions you filter out by using their corresponding merkle trees,
right? But still, I don't think that would scale as well as with the tree
structure I propose. Because, firstly, you don't really need the headers of
the sibling chains. You just need the headers of the parent chains since
the parent verifies all the siblings. All you really need in a typical
(non-mining) situation is the headers or full blocks in one path going down
the tree starting from the root chain. So that means O(log n) needs to be
stored (headers or blocks) (n the number of transaction on the network).
With big blocks, you still need O(n) headers. I know headers are small, but
still they take up space and verification time. Also, since you are storing
the full blocks on the chains you want, you are validating the headers of
those blocks and you are sure that you are seeing all transactions on those
blocks. And if certain addresses must stay on those blocks, you will know
that you are catching all of the transactions corresponding to those
blocks. If you just filter out based on addresses or other criteria, you
can be denied some of those transactions by full nodes, and you may not
know about it. Say for example, your government representative publishes on
of his public addresses that is used for paying for expenses. Then with my
system, you can be sure to catch every transaction being spent from that
address (or UTXO or whatever you want to call it). If you just filter on
any transaction that includes that address, you may not catch all of those
transactions. Same with incoming funds.

There are also advantages for mining decentralization as I have explained
in my previous posts. So still not sure you are right here...

Thanks

On Mon, Jun 15, 2015 at 5:18 PM, Mike Hearn <mike at plan99.net> wrote:

> It's simple: either you care about validation, and you must validate
>> everything, or you don't, and you don't validate anything.
>>
> Pedantically: you could validate a random subset of all scripts, to give
> yourself probabilistic verification rather than full vs SPV. If enough
> people do it with a large enough subset the probability of a problem being
> detected goes up a lot. You still pay the cost of the database updates.
>
> But your main point is of course completely right, that side chains are
> not a way to scale up.
>



-- 
PGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/65ead89b/attachment.html>

From jgarzik at bitpay.com  Mon Jun 15 18:01:55 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Mon, 15 Jun 2015 14:01:55 -0400
Subject: [Bitcoin-development] Scaling Bitcoin with Subchains
In-Reply-To: <CANEZrP1D0AN_iRobD2RYXHCCWhU7Vk6yZ35+ytsQ0zonSCG_HQ@mail.gmail.com>
References: <CAL8tG==LG=xC_DzOaghbGGKab4=UVpGLQV7781pU4wg+WnFdMg@mail.gmail.com>
	<CAPg+sBjqQ66f1Rmhi9HOBYP5BDjBHvTNPpUN-y3o-KX8dXBMhg@mail.gmail.com>
	<557D2571.601@gmail.com>
	<CAL8tG=kEv9AfQM+1Rv+tqBujFEjCp+BsjQ-1s7eJC-usogFFqw@mail.gmail.com>
	<CAPg+sBjrSed4r+8-d2RGBVhbzaXxX+o=qqw2u-2jpF2RUqmEmA@mail.gmail.com>
	<CANEZrP1D0AN_iRobD2RYXHCCWhU7Vk6yZ35+ytsQ0zonSCG_HQ@mail.gmail.com>
Message-ID: <CAJHLa0PNbYST4R-5LJcVxmN=85bf0f3DLw5qgGmGQwvsExzseg@mail.gmail.com>

Side chains are a way to scale and shard horizontally while still retaining
primary security parameters of the main chain.

The future is an Internet of chains, a forest of chains with bitcoin as the
root chain for: factom / proofofexistence, ChainDB, Blockstream side
chains, merge mined side chains, and more.  A multi-chain design is much
more scalable in general.




On Mon, Jun 15, 2015 at 1:18 PM, Mike Hearn <mike at plan99.net> wrote:

> It's simple: either you care about validation, and you must validate
>> everything, or you don't, and you don't validate anything.
>>
> Pedantically: you could validate a random subset of all scripts, to give
> yourself probabilistic verification rather than full vs SPV. If enough
> people do it with a large enough subset the probability of a problem being
> detected goes up a lot. You still pay the cost of the database updates.
>
> But your main point is of course completely right, that side chains are
> not a way to scale up.
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>


-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/87dd41c9/attachment.html>

From adam at cypherspace.org  Mon Jun 15 18:03:25 2015
From: adam at cypherspace.org (Adam Back)
Date: Mon, 15 Jun 2015 20:03:25 +0200
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
	non-consensus hard-fork
In-Reply-To: <CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
Message-ID: <CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>

Hi Mike

Well thank you for replying openly on this topic, its helpful.

I apologise in advance if this gets quite to the point and at times
blunt, but transparency is important, and we owe it to the users who
see Bitcoin as the start of a new future and the$3b of invested funds
and $600m of VC funds invested in companies, we owe it to them that we
be open and transparent here.

I would really prefer on a personal nor professional basis to be
having this conversation period, never mind in public, but Mike - your
and Gavin's decision to promote a unilateral hard-fork and code fork
are extremely high risk for bitcoin and so there remains little
choice.  So I apologise again that we have to have this kind of
conversation on a technical discussion list.  This whole thing is
hugely stressful and worrying for developers, companies and investors.

I strongly urge that we return to the existing collaborative
constructive review process that has been used for the last 4 years
which is a consensus by design to prevent one rogue person from
inserting a backdoor, or lobbying for a favoured change on behalf of a
special interest group, or working for bad actor (without accusing you
of any of those - I understand you personally just want to scale
bitcoin, but are inclined to knock heads and try to force an issue you
see, rather than work collaboratively).

For you (and everyone)

- Should there be a summit of some kind, that is open attendance, and
video recorded so that people who are unable to attend can participate
too, so that people can present the technical proposals and risks in
an unbiased way?

(It is not theoretical question, I may have a sponsor and host - not
Blockstream, an independent, its a question for everyone, developers,
users, CTOs, CEOs.)



So here I come back to more frank questions:

Governance

The rest of the developers are wise to realise that they do not want
exclusive control, to avoid governance centralising into the hands of
one person, and this is why they have shared it with a consensus
process over the last 4 years.  No offence but I dont think you
personally are thinking far enough ahead to think you want personal
control of this industry.  Maybe some factions dont trust your
motives, or they dont mind, but feel more assured if a dozen other
people are closely reviewing and have collective review authority.

- Do you understand that attempting to break this process by
unilateral hard-fork is extremely weakening of Bitcoin's change
governance model?

- Do you understand that change governance is important, and that it
is important that there be multiple reviewers and sign-off to avoid
someone being blackmailed or influenced by an external party - which
could potentially result in massive theft of funds if something were
missed?

- Secondarily do you understand that even if you succeed in a
unilateral fork (and the level of lost coins and market cap and damage
to confidence is recoverable), that it sets a precedent that others
may try to follow in the future to introduce coercive features that
break the assurances of bitcoin, like fungibility reducing features
say (topically I hear you once proposed on a private forum the concept
of red-lists, other such proposals have been made and quickly
abandoned), or ultimately if there is a political process to obtain
unpopular changes by unilateral threat, the sky is the limit - rewrite
the social contract at that point without consensus, but by
calculation that people will value Bitcoin enough that they will
follow a lead to avoid risk to the system?


Security

As you probably know some extremely subtle bugs in Bitcoin have at
times slipped past even the most rigorous testings, often with
innocuous but unexpected behaviours, but some security issues  Some
extremely intricate and time-sensitive security defect and incident
response happens from time to time which is not necessarily publicly
disclosed until after the issue has been rolled out and fixed, which
can take some time due to the nature of protocol upgrades,
work-arounds, software upgrade via contacting key miners etc.  We
could take an example of the openSSL bug.

- How do you plan to deal with security & incident response for the
duration you describe where you will have control while you are
deploying the unilateral hard-fork and being in sole maintainership
control?

- Are you a member of the bitcoin security reporting list?

On 15 June 2015 at 11:56, Mike Hearn <mike at plan99.net> wrote:
> I will review both and mostly delegate to Gavin's good taste around the
> details, unless there is some very strong disagreement. But that seems
> unlikely.
> ...
> Feedback will be read. There are no NACKS in Bitcoin XT. Patch requests
> aren't scored in any way. The final decision rests with the maintainer as in
> ~all open source projects.

As you know the people who have written 95% of the code (and reviewed,
and tested, and formally proved segments etc) are strenuously advising
not to push any consensus code into public use without listening to
and addressing review questions which span beyond rigorous code &
automated guided fuzz testers, simulation and sometimes formal proofs,
but also economics, game-theory and critically very subtle
determinism/consensus safety that they have collectively 4-5 years
experience of each.

- Will you pause your release plans if all of the other developers
insist that the code or algorithm is defective?

- Please don't take this the wrong way, and I know your bitcoinj work
was a significant engineering project which required porting bitcoin
logic.  But If the answer to the above question is no, as you seemed
to indicate in your response, as you not have not written much bitcoin
core code yourself (I think 3 PRs in total), do you find yourself more
qualified than the combination of peer review of the group of people
who have written 95% of it, and maintained it and refactored most of
it over the last 4-5 years?

I presume from your security background you are quite familiar with
the need for review of crypto protocol changes & rigorous code review.
That is even more the case with Bitcoin given the consensus
criticality.

>> - On the idea of a non-consensus hard-fork at all, I think we can
>> assume you will get a row of NACKs.  Can you explain your rationale
>> for going ahead anyway?  The risks are well understood and enormous.
>
> If Bitcoin runs out of capacity it will break and many of our users will
> leave. That is not an acceptable outcome for myself or the many other
> wallet, service and merchant developers who have worked for years to build
> an ecosystem around this protocol.

That you are frustrated, is not a sufficient answer as to why you are
proposing to go ahead with a universally acknowledged extreme network
divergence danger unilateral hard-fork, lacking wide-spread consensus.
People are quite concerned about this.  Patience, caution and prudence
is necessary in a software system with such high assurance
requirements.

So I ask again:

- On the idea of a non-consensus hard-fork at all, I think we can
assume you will get a row of NACKs.  Can you explain your rationale
for going ahead anyway?  The risks are well understood and enormous.

Note the key point is that you are working on a unilateral hard-fork,
where there is a clear 4 year established process for proposing
improvements and an extremely well thought out and important change
management governance process.  While there has been much discussion,
you nor Gavin, have not actually posted a BIP for review.  Nor
actually was much of the discussion even conducted in the open: it was
only when Matt felt the need to clear the air and steer this
conversation into the open that discussion arose here.  During that
period of private discussion you and Gavin were largely unknown to
most of us lobbying companies with your representation of a method
that concerns everyone of the Bitcoin users.  Now that the technical
community aware aware they are strenuously discouraging you on the
basis of risks.


Openness

- Do you agree that bitcoin technical discussions should happen in the open?

- As this is a FOSS project, do you agree that companies should also
be open, about their requirements and trade-offs they would prefer?

- Can you disclose the list of companies you have lobbied in private
whether they have spoken publicly or not, and whether they have
indicated approval or not?

- Did you share a specific plan, like a BIP or white paper with these
companies, and if so can we see it?

- If you didnt submit a plan, could you summarise what you asked them
and what you proposed, and if you discussed also the risks?  (If you
asked them if they would like Bitcoin to scale, I expect almost
everyone does, including every member of the technical community, so
that for example would not fairly indicate approval for a unilateral
hard-fork)

I and others will be happy to talk with the CTO and CEOs of companies
you have lobbied in private, for balance to assure ourselves and the
rest of the community that their support was given - and with full
understanding of the risks of doing it unilaterally, without peer
review, benefit of maintenance and security inidence management, and
what exactly they are being quoting as having signed up for.

(This maybe more efficiently and openly achieved by the open process,
on a mailing list, maybe a different one even special purpose to this
topic, with additional option of the open public meeting I proposed at
the top).

- Do you agree that it would be appropriate, that companies be aware
of both the scaling opportunities (of course, great everyone wants
scalability) as well as the technical limits and risks with various
approaches?  And that these be presented by parties from a range of
views to ensure balance?

- Do you consider your expression of issues to hold true to the ideal
of representing balanced nuanced view of all sides of a technical
debate, even when under pressure or feeling impatient about the
process?

You may want to review the opening few minutes of your epicenter 82
bitcoin for example where you claimed and I quote "[the rest of the
technical community] dont want capacity to ever increase and want it
to stay where it is and when it fills up people move to other
systems".

- Do you think that is an accurate depiction of the complex trade-offs
we have been discussing on this list?

(For the record I am not aware of a single person who has said they do
not agree with scaling Bitcoin.  Changing a constant is not the
hard-part.  The hard part is validating a plan and the other factors
that go into it.  It's not a free choice it is a security/scalability
tradeoff.  No one will thank us if we "scale" bitcoin but break it in
hard to recover ways at the same time.)

- Were you similarly balanced in your explanations when talking to
companies in private discussions?

- Do you understand that if we do not work from balanced technical
discussion, that we may end up with some biased criteria?

Authority

Neither you nor Gavin have any particular authority here to speak on
behalf of Bitcoin (eg you acknowledge in your podcast that Wladimir is
dev lead, and you and Gavin are both well aware of the 4 year
established change management consensus decision making model where
all of the technical reviewers have to come to agreement before
changes go in for security reasons explained above).  I know Gavin has
a "Chief Scientist" title from the Bitcoin Foundation, but sadly that
organisation is not held in as much regard as it once was, due to
various irregularities and controversies, and as I understand it no
longer employs any developers, due to lack of funds.  Gavin is now
employed by MIT's DCI project as a researcher in some capacity.  As
you know Wladimir is doing the development lead role now, and it seems
part of your personal frustration you said was because he did not
agree with your views.  Neither you nor Gavin have been particularly
involved in bitcoin lately, even Gavin, for 1.5 years or so.

- Do you agree that if you presume to speak where you do not have
authority you may confuse companies?

> If Bitcoin runs out of capacity it will break and many of our users will
> leave. That is not an acceptable outcome for myself or the many other
> wallet, service and merchant developers who have worked for years to build
> an ecosystem around this protocol.

But I think this is a false dichotomy.  As I said in previous mail I
understand people are frustrated that it has taken so long, but it is
not the case that no progress has been made on scalability.

I itemised a long list of scalability work which you acknowledged as
impressive work (CPU, memory, network bandwidth/latency) and RBF, CPFP
fee work, fee-estimation, and so on, which you acknowledged and are
aware of.

There are multiple proposals and BIPs under consideration on the list right now.

- what is the reason that you (or Gavin) would not post your BIP along
side the others to see if it would win based on technical merit?

- why would you feel uniquely qualified to override the expert opinion
of the rest of the technical community if your proposal were not
considered to have most technical merit? (Given that this is not a
simple market competition thing where multiple hard-forks can be
considered - it is a one only decision, and if it is done in a
divisive unilateral way there are extreme risks of the ledger
diverging.)

Network Divergence Risk

>> - How do you propose to deal with the extra risks that come from
>> non-consensus hard-forks?  Hard-forks themselves are quite risky, but
>> non-consensus ones are extremely dangerous for consensus.
>
> The approach is the same for other forks. Voting via block versions and then
> when there's been >X% for Y time units the 1mb limit is lifted/replaced.

But this is not a soft-fork, it is a hard-fork.  Miner voting is only
peripherally related.  Even if in the extremis 75% of miners tried a
unilateral hard-fork but 100% of the users stayed on the maintained
original code, no change would occur other than those miners losing
reward (mining fork-coins with no resale value) and the difficulty
would adjust.  The miners who made an error in choice would lose money
and go out of business or rejoin the chain.

However if something in that direction happens with actual users and
companies on both sides of it users will lose money, the ledger will
diverge as soon as a single double-spend happens, and never share a
block again, companies will go instantly insolvent, and chaos will
break out.  This is the dangerous scenario we are concerned about.

So the same question again:

- How do you propose to deal with the extra risks that come from
non-consensus hard-forks?  Hard-forks themselves are quite risky, but
non-consensus ones are extremely dangerous for consensus.


Being sensitive to alarming the market

It is something akin to Greece or Portugal or Italy exiting the euro
currency in a disorderly way.  Economists and central bank policy
makers are extremely worried about such an eventuality and talk about
related factors in careful, measured terms, watch Mario Draghi when he
speaks.

Imagine that bitcoin is 10x or 100x bigger.  Bitcoin cant have people
taking unilateral actions such as you have been proposing.  It is not
following the consensus governance process, and not good policy and it
is probably affecting bitcoin confidence and price at this moment.

>> - Do you have contingency plans for what to do if the non-consensus
>> hard-fork goes wrong and $3B is lost as a result?
>
> Where did you get the $3B figure from? The fork either doesn't happen, or it
> happens after quite a long period of people knowing it's going to happen -
> for example because their full node is printing "You need to upgrade"
> messages due to seeing the larger block version, or because they read the
> news, or because they heard about it via some other mechanisms.

This is not a soft-fork, and the community will not want to take the
risks once they understand them, and they have months in which to
understand them and at this point you've motivated and wasted 100s of
developer man hours such that we will feel impelled to make sure that
no one opts into a unilateral hard-fork without understanding the
risks.  It would be negligent to allow people to do that.  Before this
gets very far FAQs will be on bitcoin.org etc explaining this risk I
would imagine.  Its just starting not finished.

What makes you think the rest of the community may not instead prefer
Jeff Garzik's BIP after revisions that he is making now with review
comments from others?

Or another proposal.  Taken together with a deployment plan that sees
work on decentralisation tying into that plan.

- If you persisted anyway, what makes you think bitcoin could not make
code changes defensively relating to your unilateral fork?
(I am sure creative minds can find some ways to harden bitcoin against
a unilateral fork, with a soft-fork or non-consensus update can be
deployed much faster than a hard-fork).

I tried to warn Gavin privately that I thought he was under-estimating
the risk of failure to his fork proposal due to it being unilateral.
Ie as you both seem sincere in your wish to have your proposal
succeed, then obviously the best way to do that is to release a BIP in
the open collaborative process and submit it to review like everyone
else.  Doing it unilaterally only increases its chance of failure.

The only sensible thing to do here is submit a BIP and stop the
unilateral fork threat.

Scalability Plans

> Let me flip the question around. Do you have a contingency plan if Bitcoin
> runs out of capacity and significant user disruption occurs that results in
> exodus, followed by fall in BTC price? The only one I've seen is "we can
> perform an emergency hard fork in a few weeks"!

Yes people have proposed other plans.  Bryan Bishop posted a list of them.

Jeff Garzik has a proposal, BIP-100 which seems already better than
Gavin's having benefit of peer review which he has been incorporating.

I proposed several soft-fork models which can be deployed safely and
immediately, which do not have ledger risk.

I have another proposal relating to simplified soft-fork one-way pegs
which I'll write up in a bit.

I think there are still issues in Jeff's proposal but he is very open
and collaborating and there maybe related but different proposals
presently.

>> As you can probably tell I think a unilateral fork without wide-scale
>> consensus from the technical and business communities is a deeply
>> inadvisable.
>
> Gavin and I have been polling many key players in the ecosystem. The
> consensus you seek does exist. All wallet developers (except Lawrence), all
> the major exchanges, all the major payment processors and many of the major
> mining pools want to see the limit lifted (I haven't been talking to pools,
> Gavin has).

It does not seem to me that you understand the issue.  Of course they
want to increase the scalability of bitcoin.  So does everyone else on
this mailing list.

That they would support that is obvious.  If you presented your
unilateral action plan without explaining the risks too.

I think I covered this further above.  If you would like to share the
company list, or we can invite them to the proposed public physical
meeting, I think it would be useful for them to have a balanced view
of the ledger divergence risks, and alternative in-consensus proposals
underway, as well as the governance risks, maintenance risks, security
incident risks.

Note that other people talk to companies too, as part of their day to
day jobs, or from contacts from being in the industry.  You have no
special authority or unique ability to talk with business people.  Its
just that the technical community did not know you were busy doing
that.

I can not believe that any company that would listen to their CTO, CSO
or failing that board would be ok with the risks implied by what you
are proposing on full examination.

> This notion that the change has no consensus is based on you polling the
> people directly around you and people who like to spend all day on this
> mailing list. It's not an accurate reflection of the wider Bitcoin community
> and that is one of the leading reasons there is going to be a fork. A small
> number of people have been flatly ignoring LOTS of highly technical and
> passionate developers who have written vast amounts of code, built up the
> Bitcoin user base, designed hardware and software, and yes built companies.

I know you want scale bitcoin, as I said everyone here does. I think
what you're experiencing is that you've had more luck explaining your
pragmatic unilateral plan to non-technical people without peer review,
and so not experienced the kind of huge pushback you are getting from
the technical community.  The whole of bitcoin is immensely
complicated such that it takes an uber-geek CS genius years to
catchup, this is not a slight of any of the business people who are
working hard to deploy Bitcoin into the world, its just complicated
and therefore not easy to understand the game-theory, security,
governance and distributed system thinking.  I have a comp sci PhD in
distributed systems, implemented p2p network systems and have 2
decades of applied crypto experience with a major interest in
electronic cash crypto protocols, and it took me a several years to
catchup and even I have a few hazy spots on low-level details, and I
addictively into read everything I could find.  Realistically all of
us are still learning, as bitcoin combines so many fields that it
opens new possibilities.

What I am expecting that yourself and Gavin are thinking is that
you'll knock heads and force the issue and get to consensus.

However I think you have seriously misjudged the risks and have not
adequately explained them to companies you are talking with.  Indeed
you do not fully seem to acknowledge the risks, nor to have a well
thought out plan here of how you would actually manage it, nor the
moral hazards of having a lone developer in hugely divisive
circumstances in sole control of bitcoins running code.  Those are
exactly the reasons for the code change governance process!

Even though you are trying to help, the full result is you are not
helping achieve anything by changing a constant and starting a
unilateral hard-fork (not to trivialise the work of making a patch to
do that).

The work to even make the constant change be feasible was a result of
1000s of hours of work by others in the development community, that is
emphatically and unilaterally telling you that hard-forks are hugely
inadvisable.

You are trying to break the code change governance security procedure
that were put in place for good reason for the security of $3b of
other peoples money, even if you have a pragmatic intent to help, this
is flat out unacceptable.

There are also security implications to what you are proposing, which
I have heard you attempting to trivialise, that are core to Bitcoins
security and core functionality.

>  the overwhelming impression I get from a few
> others here is that no, they don't want to scale Bitcoin. They already
> decided it's a technological dead end.

I think this is a significant mischaracterisation, and I think almost
everybody is on board with a combination plan:

1. work to improve decentralisation (specific technical work already
underway, and education)
2. create a plan to increase block-size in a slow fashion to not cause
system shocks (eg like Jeff is proposing or some better variant)
3. work on actual algorithmic scaling

In this way we can have throughput needed for scalability and security
work to continue.

As I said you can not scale a O(n^2) broadcast network by changing
constants, you need algorithmic improvements.

People are working on them already.  All of those 3 things are being
actively worked on RIGHT NOW, and in the case of algorithmic scaling
and improve decentralisation have been worked on for months.

You may have done one useful thing which is to remind people that
blocks are only 3x-4x below capacity such that we should look at it.

But we can not work under duress of haste, nor unilateral ultimatums,
this is the realm of human action that leads to moral hazard, and
ironically reminds us of why Satoshi put the quote in the genesis
block.

Bitcoin is too complex a system with too much at stake to be making
political hasty decisions, it would be negligent to act in such a way.

Again please consider that you did your job, caused people to pay
attention, but return to the process, submit a BIP, retract the
unilateral hard-fork which is so dangerous and lets have things be
calm, civil and collaborative in the technical zone of Bitcoin and not
further alarm companies and investors.

Adam



From adam at cypherspace.org  Mon Jun 15 18:14:56 2015
From: adam at cypherspace.org (Adam Back)
Date: Mon, 15 Jun 2015 20:14:56 +0200
Subject: [Bitcoin-development] comments on BIP 100
In-Reply-To: <COL131-DS5331AE0C03A2BF6E0553ECDB80@phx.gbl>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
	<CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com>
	<CANEZrP0Z_EOmVgbvVmYDvegm6jfd1cKB52acXHocjRuM-qGEog@mail.gmail.com>
	<CAPg+sBgc0i-XsN=g0V4Y0bko-Xb1AT5x=UWDa+opL3eFbBmJfA@mail.gmail.com>
	<CANEZrP0eGDTafK+ZUBNcQBOe2JU_PqZVXMt0Ds-b8Ley7kbGrA@mail.gmail.com>
	<CAPg+sBiPhhrBh8f3QxJLtoysfywtVFSo2RH0WXVR+vpX9z6+HQ@mail.gmail.com>
	<CANEZrP10gn+969d-oe-8Em9ipe4DOP9q0WkNtL6u-6V5aphkPQ@mail.gmail.com>
	<CAFBxzAAExA-aE+8o-+HGQtnuwWuWpkt8Lbgxvh7hT64XkMKOPg@mail.gmail.com>
	<COL131-DS5331AE0C03A2BF6E0553ECDB80@phx.gbl>
Message-ID: <CALqxMTF2T0Wgt15bmjkpMK199vhwH+ufYw+LJU7AEzx4X7dykQ@mail.gmail.com>

I think he's more talking about like extension-blocks, however they
are actually soft-forkable even (and keep the 21m coins obviously)

See  See https://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07937.html

and Tier Nolan tech detail
https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07927.html

Discussion / claimed properties on

https://www.reddit.com/r/Bitcoin/comments/39kqzs/how_about_a_softfork_optin_blocksize_increase/

Adam

On 15 June 2015 at 19:53, Raystonn . <raystonn at hotmail.com> wrote:
>> The solution is to hard-fork and merge-mine. This way, both can live, and
>> mining power is not divided.
>
> No, this would essentially be blessing an increase to 42M bitcoins, half on
> each chain.  You could expect a severe market price correction if this were
> to happen.
>
> From: Rebroad (sourceforge)
> Sent: Monday, June 15, 2015 4:16 AM
> Cc: Bitcoin Dev
> Subject: Re: [Bitcoin-development] comments on BIP 100
>
> My understanding of this debate is that there are some people who want to
> keep Bitcoin at 1MB block limit, and there are some who want to increase it.
>
> I for one am curious to see how 1MB limited bitcoin evolves, and I believe
> we can all have a chance to see this AND hard-fork bitcoin to remove the
> block size restriction.
>
> To remove the 1MB limit required a hard fork. This is not disputed. It's
> what we do with the original (1MB limit) bitcoin that concerns me (and
> other's I am sure).
>
> What I would like to see is both being allowed to live. Harry Potter and
> Voldermort! (Except neither are evil!)
>
> The solution is to hard-fork and merge-mine. This way, both can live, and
> mining power is not divided.
>
> Dogecoin recently hardforked and this hardfork also involved switching to
> merge-mining, so it's been done successfully.
>
> So, simply, bitcoin as it is doesn't need to actually fork, but instead, at
> a certain block size, a forked bitcoin with the blocksize lmit removed will
> start to be merge-mined alongside bitcoin. Miners can be ready for this.
> Wallets can be ready for this - in fact, for most wallets and merchants they
> will possibly want to default to the bigger blocksize fork since this caters
> for more transactions per block.
>
> We still don't know how removing the block limit will pan out and what other
> problems with scalability will arise in the future, so by preserving the
> original bitcoin, we keep diversity, and people won't feel their investments
> in bitcoin are being unnecessarily put at risk (as their investments will
> stay in both the new and the old bitcoin).
>
> The bitcoin core developers can implement a patch like the one recently used
> for dogecoin, to allow the chain to fork at a set point, where at which
> point, bitcoins will be split into the new and the old. Branding will be an
> important issue here I think, so that there is as little confusion as
> possible. I think this is a small price to pay in return for not killing the
> original bitcoin (even if it's true that Satoshi did intend to remove the
> 1MB limit at some point).
>
> If I'm missing something obvious please let me know.
>
> On Mon, Jun 15, 2015 at 1:50 PM, Mike Hearn <mike at plan99.net> wrote:
>>>
>>> The fact that using a centralized service is easier isn't a good reason
>>> IMHO. It disregards the long-term, and introduces systemic risk.
>>
>>
>> Well sure, that's easy for you to say, but you have a salary :) Other
>> developers may find the incremental benefits of decentralisation low vs
>> adding additional features, for instance, and who is to say they are wrong?
>>
>>>
>>> But in cases where using a decentralized approach doesn't *add* anything,
>>> I cannot reasonably promote it, and that's why I was against getutxos in the
>>> P2P protocol.
>>
>>
>> It does add something though! It means, amongst other things, I can switch
>> of all my servers, walk away for good, discard this Mike Hearn pseudonym I
>> invented for Bitcoin and the app will still work :) Surely that is an
>> important part of being decentralised?
>>
>> It also means that as the underlying protocol evolves over time, getutxos
>> can evolve along side it. P2P protocol gets encrypted/authenticated? Great,
>> one more additional bit of security. If one day miners commit to UTXO sets,
>> great, one more additional bit of security. When we start including input
>> values in the signature hash, great ... one more step up in security.
>>
>> Anyway, I didn't really want to reopen this debate. I just point out that
>> third party services are quite happy to provide whatever developers need to
>> build great apps, even if doing so fails to meet some kind of perfect
>> cryptographic ideal. And that's why they're winning devs.
>>
>> Now back to your regularly scheduled block size debates ...
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
> ________________________________
> ------------------------------------------------------------------------------
>
> ________________________________
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From raystonn at hotmail.com  Mon Jun 15 18:57:02 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Mon, 15 Jun 2015 11:57:02 -0700
Subject: [Bitcoin-development]  The Bitcoin Node Market
In-Reply-To: <CALqxMTF2T0Wgt15bmjkpMK199vhwH+ufYw+LJU7AEzx4X7dykQ@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com><CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com><CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com><CANEZrP0Z_EOmVgbvVmYDvegm6jfd1cKB52acXHocjRuM-qGEog@mail.gmail.com><CAPg+sBgc0i-XsN=g0V4Y0bko-Xb1AT5x=UWDa+opL3eFbBmJfA@mail.gmail.com><CANEZrP0eGDTafK+ZUBNcQBOe2JU_PqZVXMt0Ds-b8Ley7kbGrA@mail.gmail.com><CAPg+sBiPhhrBh8f3QxJLtoysfywtVFSo2RH0WXVR+vpX9z6+HQ@mail.gmail.com><CANEZrP10gn+969d-oe-8Em9ipe4DOP9q0WkNtL6u-6V5aphkPQ@mail.gmail.com><CAFBxzAAExA-aE+8o-+HGQtnuwWuWpkt8Lbgxvh7hT64XkMKOPg@mail.gmail.com><COL131-DS5331AE0C03A2BF6E0553ECDB80@phx.gbl>
	<CALqxMTF2T0Wgt15bmjkpMK199vhwH+ufYw+LJU7AEzx4X7dykQ@mail.gmail.com>
Message-ID: <COL131-DS1BD3015F98131D224B0D6CDB80@phx.gbl>

I have been toying with an idea and figured I'd run it by everyone here 
before investing further time in it.  The goal here is to make it 
sustainable, and perhaps profitable, to run full nodes on the Bitcoin 
Network in the long term.

- Nodes can participate in a market wherein they are paid by nodes, wallets, 
and other services to supply Bitcoin Network data.  Payment should be based 
on the cost imposed on the Node to do the work and send the data, but can be 
set in any way the node operator desires.  It's a free market.
- Nodes that are mostly leeching data from the Bitcoin Network, such as 
those that do not receive inbound connections to port 8333, will send 
payments to the nodes they connect to, but will likely receive no payments 
from other nodes, wallets, and other services.
- Nodes that are providing balanced full service to the Bitcoin Network will 
tend to have a balance of payments coming in and going out with regards to 
other balanced full service nodes, leaving them revenue neutral there.  But 
they will receive payments from leech nodes, wallets, and other services.

The net effect here is that the cost to run nodes will be shared by those 
who are using the Bitcoin network but not contributing by running a full 
node.  A market will develop for fees to connect to the Bitcoin Network 
which should help cover the cost of running the Network.  It's still 
possible to continue offering access to your node for free as there is 
nothing forcing you to charge a fee.  But this isn't very sustainable 
long-run.  Market efficiencies should eventually mean nodes take in only 
what is required to keep the Network operational.

Raystonn




From sickpig at gmail.com  Mon Jun 15 19:18:49 2015
From: sickpig at gmail.com (sickpig at gmail.com)
Date: Mon, 15 Jun 2015 21:18:49 +0200
Subject: [Bitcoin-development] The Bitcoin Node Market
In-Reply-To: <COL131-DS1BD3015F98131D224B0D6CDB80@phx.gbl>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
	<CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com>
	<CANEZrP0Z_EOmVgbvVmYDvegm6jfd1cKB52acXHocjRuM-qGEog@mail.gmail.com>
	<CAPg+sBgc0i-XsN=g0V4Y0bko-Xb1AT5x=UWDa+opL3eFbBmJfA@mail.gmail.com>
	<CANEZrP0eGDTafK+ZUBNcQBOe2JU_PqZVXMt0Ds-b8Ley7kbGrA@mail.gmail.com>
	<CAPg+sBiPhhrBh8f3QxJLtoysfywtVFSo2RH0WXVR+vpX9z6+HQ@mail.gmail.com>
	<CANEZrP10gn+969d-oe-8Em9ipe4DOP9q0WkNtL6u-6V5aphkPQ@mail.gmail.com>
	<CAFBxzAAExA-aE+8o-+HGQtnuwWuWpkt8Lbgxvh7hT64XkMKOPg@mail.gmail.com>
	<COL131-DS5331AE0C03A2BF6E0553ECDB80@phx.gbl>
	<CALqxMTF2T0Wgt15bmjkpMK199vhwH+ufYw+LJU7AEzx4X7dykQ@mail.gmail.com>
	<COL131-DS1BD3015F98131D224B0D6CDB80@phx.gbl>
Message-ID: <CA+c4ZoyjmfFO+3+Zqvjabk1KuezuV42pvPNa57JPzJCAePJ5hw@mail.gmail.com>

Sorry for top posting and the brevity but I'm typing from my phone

You shoud be interested in this post by Justus Ranvier then:

https://bitcoinism.liberty.me/economic-fallacies-and-the-block-size-limit-part-2-price-discovery/
On Jun 15, 2015 8:57 PM, "Raystonn ." <raystonn at hotmail.com> wrote:

> I have been toying with an idea and figured I'd run it by everyone here
> before investing further time in it.  The goal here is to make it
> sustainable, and perhaps profitable, to run full nodes on the Bitcoin
> Network in the long term.
>
> - Nodes can participate in a market wherein they are paid by nodes,
> wallets,
> and other services to supply Bitcoin Network data.  Payment should be based
> on the cost imposed on the Node to do the work and send the data, but can
> be
> set in any way the node operator desires.  It's a free market.
> - Nodes that are mostly leeching data from the Bitcoin Network, such as
> those that do not receive inbound connections to port 8333, will send
> payments to the nodes they connect to, but will likely receive no payments
> from other nodes, wallets, and other services.
> - Nodes that are providing balanced full service to the Bitcoin Network
> will
> tend to have a balance of payments coming in and going out with regards to
> other balanced full service nodes, leaving them revenue neutral there.  But
> they will receive payments from leech nodes, wallets, and other services.
>
> The net effect here is that the cost to run nodes will be shared by those
> who are using the Bitcoin network but not contributing by running a full
> node.  A market will develop for fees to connect to the Bitcoin Network
> which should help cover the cost of running the Network.  It's still
> possible to continue offering access to your node for free as there is
> nothing forcing you to charge a fee.  But this isn't very sustainable
> long-run.  Market efficiencies should eventually mean nodes take in only
> what is required to keep the Network operational.
>
> Raystonn
>
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/d624c8b0/attachment.html>

From raystonn at hotmail.com  Mon Jun 15 19:36:32 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Mon, 15 Jun 2015 12:36:32 -0700
Subject: [Bitcoin-development] The Bitcoin Node Market
In-Reply-To: <CA+c4ZoyjmfFO+3+Zqvjabk1KuezuV42pvPNa57JPzJCAePJ5hw@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com><CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com><CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com><CANEZrP0Z_EOmVgbvVmYDvegm6jfd1cKB52acXHocjRuM-qGEog@mail.gmail.com><CAPg+sBgc0i-XsN=g0V4Y0bko-Xb1AT5x=UWDa+opL3eFbBmJfA@mail.gmail.com><CANEZrP0eGDTafK+ZUBNcQBOe2JU_PqZVXMt0Ds-b8Ley7kbGrA@mail.gmail.com><CAPg+sBiPhhrBh8f3QxJLtoysfywtVFSo2RH0WXVR+vpX9z6+HQ@mail.gmail.com><CANEZrP10gn+969d-oe-8Em9ipe4DOP9q0WkNtL6u-6V5aphkPQ@mail.gmail.com><CAFBxzAAExA-aE+8o-+HGQtnuwWuWpkt8Lbgxvh7hT64XkMKOPg@mail.gmail.com><COL131-DS5331AE0C03A2BF6E0553ECDB80@phx.gbl><CALqxMTF2T0Wgt15bmjkpMK199vhwH+ufYw+LJU7AEzx4X7dykQ@mail.gmail.com><COL131-DS1BD3015F98131D224B0D6CDB80@phx.gbl>
	<CA+c4ZoyjmfFO+3+Zqvjabk1KuezuV42pvPNa57JPzJCAePJ5hw@mail.gmail.com>
Message-ID: <COL131-DS97146D8FC6E7EC7D3F5D9CDB80@phx.gbl>

I am only partially through the content at the below link, and I am very impressed.  Has Justus Ranvier began work on implementation of the ideas contained therein?


From: sickpig at gmail.com 
Sent: Monday, June 15, 2015 12:18 PM
To: Raystonn . 
Cc: Bitcoin Dev 
Subject: Re: [Bitcoin-development] The Bitcoin Node Market

Sorry for top posting and the brevity but I'm typing from my phone

You shoud be interested in this post by Justus Ranvier then:

https://bitcoinism.liberty.me/economic-fallacies-and-the-block-size-limit-part-2-price-discovery/

On Jun 15, 2015 8:57 PM, "Raystonn ." <raystonn at hotmail.com> wrote:

  I have been toying with an idea and figured I'd run it by everyone here
  before investing further time in it.  The goal here is to make it
  sustainable, and perhaps profitable, to run full nodes on the Bitcoin
  Network in the long term.

  - Nodes can participate in a market wherein they are paid by nodes, wallets,
  and other services to supply Bitcoin Network data.  Payment should be based
  on the cost imposed on the Node to do the work and send the data, but can be
  set in any way the node operator desires.  It's a free market.
  - Nodes that are mostly leeching data from the Bitcoin Network, such as
  those that do not receive inbound connections to port 8333, will send
  payments to the nodes they connect to, but will likely receive no payments
  from other nodes, wallets, and other services.
  - Nodes that are providing balanced full service to the Bitcoin Network will
  tend to have a balance of payments coming in and going out with regards to
  other balanced full service nodes, leaving them revenue neutral there.  But
  they will receive payments from leech nodes, wallets, and other services.

  The net effect here is that the cost to run nodes will be shared by those
  who are using the Bitcoin network but not contributing by running a full
  node.  A market will develop for fees to connect to the Bitcoin Network
  which should help cover the cost of running the Network.  It's still
  possible to continue offering access to your node for free as there is
  nothing forcing you to charge a fee.  But this isn't very sustainable
  long-run.  Market efficiencies should eventually mean nodes take in only
  what is required to keep the Network operational.

  Raystonn


  ------------------------------------------------------------------------------
  _______________________________________________
  Bitcoin-development mailing list
  Bitcoin-development at lists.sourceforge.net
  https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/9cdea836/attachment.html>

From adam at signal11.com  Mon Jun 15 19:45:38 2015
From: adam at signal11.com (Adam Weiss)
Date: Mon, 15 Jun 2015 15:45:38 -0400
Subject: [Bitcoin-development] Proposal: Move Bitcoin Dev List to a
 Neutral Competent Entity
In-Reply-To: <CANEZrP3uF7AfcH__zHjSUt=RWXG4RfPup=zwnLf_G1_1_oMvmA@mail.gmail.com>
References: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>
	<CANEZrP3uF7AfcH__zHjSUt=RWXG4RfPup=zwnLf_G1_1_oMvmA@mail.gmail.com>
Message-ID: <CAFVoEQQvs2e8qNDudNb_10UAHfkMEN5JDhG4HaD4Q-CvCKncHg@mail.gmail.com>

Recent versions of mailman strip DKIM signatures, rewrite the envelope-from
to use an address at the list's domain and set reply-to to the original
authors address to resolve the DMARC issue.  I'm on several lists that do
this and it works just fine.

+1 on moving the list.  Given the fact that the mails are archived in
public, it's not really a huge deal how it takes place.  One month sounds
reasonable (although I think it could be done on a shorter timescale).  I'd
setup the new list to allow subscriptions, but keep it moderated to keep
discussion from moving until the cut, send lots of warnings and then on the
big day unmoderate one and moderate the other.

It's a great opportunity to hardfork something in Bitcoin without risk of
breakage, losses or entertaining melodrama. : )

--adam

ps. I think SF will let project admins download mbox archives of the list,
the new admins should be able to import them to keep archive consistency in
one place.


On Mon, Jun 15, 2015 at 6:13 AM, Mike Hearn <mike at plan99.net> wrote:

> Bear in mind the problem that stops Jeff's messages getting through is
> that mailman 1.0 doesn't know how to handle DKIM properly. Switching to a
> different mailman provider won't fix that.
>
> Does mailman 3.0 even fix this? I found it difficult to tell from their
> website. There's a big page on the mailman wiki that suggests they "fixed"
> it by simply deleting the signatures entirely, which won't work. DMARC
> policies state that mail *must* be signed and unsigned/incorrectly signed
> message should be discarded.
>
> The user documentation for mailman 3 doesn't seem to exist? The links on
> the website are docs for 2.1, perhaps they released mailman 3 without
> refreshing the docs.
>
> Google Groups may be "controversial" but if I recall correctly the main
> issue was the question of whether you needed a Google account or not. I'm
> pretty sure you can just send an email to
> groupname+subscribe at googlegroups.com even if you don't have a Google
> account. But of course this is a bizarre standard to hold mailing list
> software to: mailman asks users to create an account for each listserv in
> order to manage a subscription too!
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/3f3331c5/attachment.html>

From sickpig at gmail.com  Mon Jun 15 20:12:53 2015
From: sickpig at gmail.com (sickpig at gmail.com)
Date: Mon, 15 Jun 2015 22:12:53 +0200
Subject: [Bitcoin-development] The Bitcoin Node Market
In-Reply-To: <COL131-DS97146D8FC6E7EC7D3F5D9CDB80@phx.gbl>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
	<CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com>
	<CANEZrP0Z_EOmVgbvVmYDvegm6jfd1cKB52acXHocjRuM-qGEog@mail.gmail.com>
	<CAPg+sBgc0i-XsN=g0V4Y0bko-Xb1AT5x=UWDa+opL3eFbBmJfA@mail.gmail.com>
	<CANEZrP0eGDTafK+ZUBNcQBOe2JU_PqZVXMt0Ds-b8Ley7kbGrA@mail.gmail.com>
	<CAPg+sBiPhhrBh8f3QxJLtoysfywtVFSo2RH0WXVR+vpX9z6+HQ@mail.gmail.com>
	<CANEZrP10gn+969d-oe-8Em9ipe4DOP9q0WkNtL6u-6V5aphkPQ@mail.gmail.com>
	<CAFBxzAAExA-aE+8o-+HGQtnuwWuWpkt8Lbgxvh7hT64XkMKOPg@mail.gmail.com>
	<COL131-DS5331AE0C03A2BF6E0553ECDB80@phx.gbl>
	<CALqxMTF2T0Wgt15bmjkpMK199vhwH+ufYw+LJU7AEzx4X7dykQ@mail.gmail.com>
	<COL131-DS1BD3015F98131D224B0D6CDB80@phx.gbl>
	<CA+c4ZoyjmfFO+3+Zqvjabk1KuezuV42pvPNa57JPzJCAePJ5hw@mail.gmail.com>
	<COL131-DS97146D8FC6E7EC7D3F5D9CDB80@phx.gbl>
Message-ID: <CA+c4Zoy6U9RXH3Qw15sXXnaeYL-9PFbnTp=VLAJsvpC_zoAK_A@mail.gmail.com>

Hi Raystonn

On Mon, Jun 15, 2015 at 9:36 PM, Raystonn . <raystonn at hotmail.com> wrote:
>
> I am only partially through the content at the below link, and I am very impressed.  Has Justus Ranvier began work on implementation of the ideas contained therein?

I don't know if he or someone else has begun writing code to implement
what was described in the liked post, but I'm sure he will reply to
you since he's subscribed to this mailing list.


>
>
>
> From: sickpig at gmail.com
> Sent: Monday, June 15, 2015 12:18 PM
> To: Raystonn .
> Cc: Bitcoin Dev
> Subject: Re: [Bitcoin-development] The Bitcoin Node Market
>
>
> Sorry for top posting and the brevity but I'm typing from my phone
>
> You shoud be interested in this post by Justus Ranvier then:
>
> https://bitcoinism.liberty.me/economic-fallacies-and-the-block-size-limit-part-2-price-discovery/
>
> On Jun 15, 2015 8:57 PM, "Raystonn ." <raystonn at hotmail.com> wrote:
>>
>> I have been toying with an idea and figured I'd run it by everyone here
>> before investing further time in it.  The goal here is to make it
>> sustainable, and perhaps profitable, to run full nodes on the Bitcoin
>> Network in the long term.
>>
>> - Nodes can participate in a market wherein they are paid by nodes, wallets,
>> and other services to supply Bitcoin Network data.  Payment should be based
>> on the cost imposed on the Node to do the work and send the data, but can be
>> set in any way the node operator desires.  It's a free market.
>> - Nodes that are mostly leeching data from the Bitcoin Network, such as
>> those that do not receive inbound connections to port 8333, will send
>> payments to the nodes they connect to, but will likely receive no payments
>> from other nodes, wallets, and other services.
>> - Nodes that are providing balanced full service to the Bitcoin Network will
>> tend to have a balance of payments coming in and going out with regards to
>> other balanced full service nodes, leaving them revenue neutral there.  But
>> they will receive payments from leech nodes, wallets, and other services.
>>
>> The net effect here is that the cost to run nodes will be shared by those
>> who are using the Bitcoin network but not contributing by running a full
>> node.  A market will develop for fees to connect to the Bitcoin Network
>> which should help cover the cost of running the Network.  It's still
>> possible to continue offering access to your node for free as there is
>> nothing forcing you to charge a fee.  But this isn't very sustainable
>> long-run.  Market efficiencies should eventually mean nodes take in only
>> what is required to keep the Network operational.
>>
>> Raystonn
>>
>>
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From pieter.wuille at gmail.com  Mon Jun 15 20:50:36 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Mon, 15 Jun 2015 22:50:36 +0200
Subject: [Bitcoin-development] Proposal: Move Bitcoin Dev List to a
 Neutral Competent Entity
In-Reply-To: <CAFVoEQQvs2e8qNDudNb_10UAHfkMEN5JDhG4HaD4Q-CvCKncHg@mail.gmail.com>
References: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>
	<CANEZrP3uF7AfcH__zHjSUt=RWXG4RfPup=zwnLf_G1_1_oMvmA@mail.gmail.com>
	<CAFVoEQQvs2e8qNDudNb_10UAHfkMEN5JDhG4HaD4Q-CvCKncHg@mail.gmail.com>
Message-ID: <CAPg+sBg_mS3yxV7xQPM15wBTsKkK7oFO7AK_WUoXqQCyeh8oBg@mail.gmail.com>

On Mon, Jun 15, 2015 at 9:45 PM, Adam Weiss <adam at signal11.com> wrote:

> ps. I think SF will let project admins download mbox archives of the list,
> the new admins should be able to import them to keep archive consistency in
> one place.
>

That seems to be right. I just downloaded the entire archive of this list
(64 Mbyte, took a few seconds).

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/7df40d22/attachment.html>

From mike at plan99.net  Mon Jun 15 20:55:07 2015
From: mike at plan99.net (Mike Hearn)
Date: Mon, 15 Jun 2015 22:55:07 +0200
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
	non-consensus hard-fork
In-Reply-To: <CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
Message-ID: <CANEZrP148U0V7bU-u0tOTk2xWwq5wy-yU-jk805DcU_3cBHtnw@mail.gmail.com>

Hi Adam,

I replied publicly because your questions were sent to the mailing list.
I'd have been happy to reply in private if so asked.

I started to write up a much longer reply, but I'm tired - we've long since
been going in circles. I feel like I've written down answers to almost all
your questions before, including some in the email above.

Still, there are a few new ones. Let me work through them now.


Yes, I am on the bitcoin-security list. I have always been on it. I have
taken part in many threads there and started one or two myself. I guess
you're not though, otherwise you'd know that. You can ask, I'm sure Gavin
will add you if you like.


Re: BIP. Gavin is working on a BIP to go along with his patch. I hope that
will satisfy. I do not expect the resulting discussion to differ much from
the discussion so far, though.


Re: summit. No, I would not attend. I have been to several Bitcoin
conferences over the years where the block size issue was discussed. No
progress was ever made at these events.



Re: if some flaw or bug was found in the patch. Yes, of course if there was
some specific problem with the code then we would fix it. There will be
time to review Gavin's patches for these reasons.



Re: anyone who agrees with noted non-programmers Mike&Gavin must be
non-technical, stupid, uninformed, etc .... OK, go ahead and show them the
error of their ways. Anyone can write blogs.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/89e2f0ee/attachment.html>

From rusty at rustcorp.com.au  Mon Jun 15 21:01:04 2015
From: rusty at rustcorp.com.au (Rusty Russell)
Date: Tue, 16 Jun 2015 06:31:04 +0930
Subject: [Bitcoin-development] [RFC] Canonical input and output ordering
	in transactions
In-Reply-To: <CAOG=w-tJjzrR_REJOShULfSO=T3ueHko-oQHdhqMCdZD0G_BDA@mail.gmail.com>
References: <87k2vhfnx9.fsf@rustcorp.com.au>
	<CAAS2fgRgWZX_O_2O1bgdFd_04xVp5Lnpw4hf=v6RSTXmsbdzPQ@mail.gmail.com>
	<87r3pdembs.fsf@rustcorp.com.au>
	<CAAS2fgTY5cqwj5XuKtkD8Z8N1vF=PZMba8EtGkbWnEackOcN8Q@mail.gmail.com>
	<CAOG=w-tJjzrR_REJOShULfSO=T3ueHko-oQHdhqMCdZD0G_BDA@mail.gmail.com>
Message-ID: <87eglcelf3.fsf@rustcorp.com.au>

Mark Friedenbach <mark at friedenbach.org> writes:
> There's another important use case which you mentioned Greg, that also
> requires special exemption: compact commitments via mid-state compression.
>
> The use case is an OP_RETURN output sorted last, whose last N bytes are a
> commitment of some kind. A proof of the commitment can then use mid state
> compression to elide the beginning of the transaction.
>
> How do you make a special exemption for this category of outputs? I can't
> think of a very clean way of doing so that doesn't require an ugly
> advertising of sort-order exemptions.

Yes, we can suit any one use case, but not all of them.

For example, outputs shall be sorted by:
        1.  First byte (or 0 if script is zero length) minus 107.
        2.  The remainder of the script in lexographical order.

This would put OP_RETURN outputs last.

Though Peter Todd's more general best-effort language might make more
sense.  It's not like you can hide an OP_RETURN transaction to make it
look like something else, so that transaction not going to be
distinguished by non-canonical ordering.

Cheers,
Rusty.



From rusty at rustcorp.com.au  Mon Jun 15 21:42:14 2015
From: rusty at rustcorp.com.au (Rusty Russell)
Date: Tue, 16 Jun 2015 07:12:14 +0930
Subject: [Bitcoin-development] Lexicographical Indexing of Transaction
	Inputs and Outputs
In-Reply-To: <CAGH37SK0k1YUvadetyHcBGjzW+OHNFRmRwqsUDeHBGejUacigQ@mail.gmail.com>
References: <CAGH37SK0k1YUvadetyHcBGjzW+OHNFRmRwqsUDeHBGejUacigQ@mail.gmail.com>
Message-ID: <877fr4ejih.fsf@rustcorp.com.au>

Kristov Atlas <kristovatlas.lists at gmail.com> writes:
> Hello all,
>
> I have written a draft of a BIP to standardize the sorting of tx inputs and
> outputs for privacy and security reasons. A few colleagues have reviewed
> this and provided feedback privately, but now it's ready for feedback from
> a wider audience.
>
> If there is positive sentiment about the proposal after feedback is
> integrated, I aim for a bip number to be assigned and have it accepted into
> https://github.com/bitcoin/bips

OK, I've modified my implementation to match your proposal:

        https://github.com/rustyrussell/bitcoin/tree/bip-69

It compiles, and is fairly trivial, but will need some testing.

Cheers,
Rusty.



From kanzure at gmail.com  Mon Jun 15 21:56:05 2015
From: kanzure at gmail.com (Bryan Bishop)
Date: Mon, 15 Jun 2015 16:56:05 -0500
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <CANEZrP148U0V7bU-u0tOTk2xWwq5wy-yU-jk805DcU_3cBHtnw@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
	<CANEZrP148U0V7bU-u0tOTk2xWwq5wy-yU-jk805DcU_3cBHtnw@mail.gmail.com>
Message-ID: <CABaSBawXZDcyR96g4hBNAiFRDpTcUJX+bMXyqGeuY5wVm4k1KQ@mail.gmail.com>

On Mon, Jun 15, 2015 at 3:55 PM, Mike Hearn <mike at plan99.net> wrote:

> Re: anyone who agrees with noted non-programmers Mike&Gavin must be
> non-technical, stupid, uninformed, etc .... OK, go ahead and show them the
> error of their ways. Anyone can write blogs.
>

I worry that if this is the level of care you take with reading and
(mis)interpreting Adam's messages, that you might not be taking extreme
care with evaluating consensus changes, even while tired or sleeping. I
encourage you to evaluate both messages and source code more carefully,
especially in the world of bitcoin. However, this goes for everyone and not
just you. Specifically, when Adam mentioned your conversations with
non-technical people, he did not mean "Mike has talked with people who have
possibly not made pull requests to Bitcoin Core, so therefore Mike is a
non-programmer". Communication is difficult and I can understand that, but
we really have to be more careful when evaluating each other's messages;
technical miscommunication can be catastrophic in this context. On the
topic of whether you are a programmer, I suspect that ever since you built
CIA.vc we have all known you're a programmer, Mike.

- Bryan
http://heybryan.org/
1 512 203 0507
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/f4ffeedf/attachment.html>

From faizkhan00 at gmail.com  Mon Jun 15 22:17:20 2015
From: faizkhan00 at gmail.com (Faiz Khan)
Date: Mon, 15 Jun 2015 17:17:20 -0500
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <CABaSBawXZDcyR96g4hBNAiFRDpTcUJX+bMXyqGeuY5wVm4k1KQ@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
	<CANEZrP148U0V7bU-u0tOTk2xWwq5wy-yU-jk805DcU_3cBHtnw@mail.gmail.com>
	<CABaSBawXZDcyR96g4hBNAiFRDpTcUJX+bMXyqGeuY5wVm4k1KQ@mail.gmail.com>
Message-ID: <CALx=ga7axVzUvpUd5Fvr=UruzUZWhXqJ7ibCEzjrRC-58gSWjw@mail.gmail.com>

I'm quite puzzled by the response myself, it doesn't seem to address some
of the (more serious) concerns that Adam put out, the most important
question that was asked being the one regarding personal ownership of the
proposed fork:

"How do you plan to deal with security & incident response for the duration
you describe where you will have control while you are deploying the
unilateral hard-fork and being in sole maintainership control?"

I do genuinely hope that whomever (now and future) wishes to fork the
protocol reconsider first whether they are truly ready to test/flex their
reputation/skills/resources in this way... Intuitively, to me it seems
counterproductive, and I don't fully believe it is within a single
developer's talents to manage the process start-to-finish (as it is
non-trivial to hard-fork successfully, others have rehashed this in other
threads)...

That being said I think it appropriate if Adam's questions were responded
in-line when Mike is feeling up to it. I think that the answers are
important for the community to hear when such a drastic change is being
espoused.

Faiz

On Mon, Jun 15, 2015 at 4:56 PM, Bryan Bishop <kanzure at gmail.com> wrote:

> On Mon, Jun 15, 2015 at 3:55 PM, Mike Hearn <mike at plan99.net> wrote:
>
>> Re: anyone who agrees with noted non-programmers Mike&Gavin must be
>> non-technical, stupid, uninformed, etc .... OK, go ahead and show them the
>> error of their ways. Anyone can write blogs.
>>
>
> I worry that if this is the level of care you take with reading and
> (mis)interpreting Adam's messages, that you might not be taking extreme
> care with evaluating consensus changes, even while tired or sleeping. I
> encourage you to evaluate both messages and source code more carefully,
> especially in the world of bitcoin. However, this goes for everyone and not
> just you. Specifically, when Adam mentioned your conversations with
> non-technical people, he did not mean "Mike has talked with people who have
> possibly not made pull requests to Bitcoin Core, so therefore Mike is a
> non-programmer". Communication is difficult and I can understand that, but
> we really have to be more careful when evaluating each other's messages;
> technical miscommunication can be catastrophic in this context. On the
> topic of whether you are a programmer, I suspect that ever since you built
> CIA.vc we have all known you're a programmer, Mike.
>
> - Bryan
> http://heybryan.org/
> 1 512 203 0507
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
> --
>
> My regards,
>
> Faiz Khan
>
>  <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/4978e818/attachment.html>

From odinn.cyberguerrilla at riseup.net  Mon Jun 15 22:54:47 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Mon, 15 Jun 2015 15:54:47 -0700
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
Message-ID: <557F57B7.4050809@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Mike,

To sum it up, you are saying "bitcoin will break and many of our users
will leave therefore OMG WTF so we have to do what GAVIN AND ME want
to do to hardfork to XT which is the ONLY WAY, so GTFO!"

And so, no.  We don't have to accept that attitude.

There are other proposals that actually would work here.

Cameron Garnham's dynamic block size adjustment (needing soft fork
only) mentioned here http://www.twitlonger.com/show/n_1smkanp

Jeff Garzik's proposals (rewritten and published as a BIP)
http://bitcoin-development.narkive.com/f5FMeA4D/comments-on-bip-100

and more.

I also disagree with the notion that everybody's just ok with what
Mike and Gavin are doing.... specifically, this statement by Mike

> The consensus you seek does exist. All wallet developers (except 
> Lawrence), all the major exchanges, all the major payment
> processors and many of the major mining pools want to see the limit
> lifted

was kind of twisting things, because it made it sound like everybody
supports Gavin's proposal to hard fork to XT, which these folks don't.

Example:

1)
http://cointelegraph.com/news/114481/chinese-exchanges-reject-gavin-andr
esens-20-mb-block-size-increase

2) https://twitter.com/GreenAddress/status/605037073725313024

This isn't to say they don't want to see a limit adjusted but not in
the way that Gavin (and you, Mike) are proposing - not through this
hard fork to XT.

So go roll out your code for whatever it is you are going to put into
XT and make a BIP, but stop saying that everyone supports it when
obviously they don't and you don't even have something yet and there
are already superior alternatives that don't involve Gavin's hard fork
and your blessed XT.


On 06/15/2015 02:56 AM, Mike Hearn wrote:
> Hi Adam,
> 
> Provisional answers below!
> 
> - Are you releasing a BIP for that proposal for review?
> 
> 
> The work splits like this:
> 
> * Gavin is writing the code and I think a BIP as well
> 
> * I will review both and mostly delegate to Gavin's good taste
> around the details, unless there is some very strong disagreement.
> But that seems unlikely.
> 
> * I have been handling gitian and the patch rebases, the code
> signing and so on, so far. I've also been doing some work to setup
> the basic infrastructure of the project (website etc).
> 
> 
> - If the reviewers all say NACK will you take on board their 
> suggestions?
> 
> 
> Feedback will be read. There are no NACKS in Bitcoin XT. Patch
> requests aren't scored in any way. The final decision rests with
> the maintainer as in ~all open source projects.
> 
> 
> 
> - On the idea of a non-consensus hard-fork at all, I think we can 
> assume you will get a row of NACKs.  Can you explain your
> rationale for going ahead anyway?  The risks are well understood
> and enormous.
> 
> 
> Yes, I have been working on an article that explains how we got to
> this point from my perspective. It is quite long, but only because
> I want it to be readable for people who weren't following the
> debate.
> 
> Anyway, I think I've laid out the gist of it over and over again,
> but to summarise:
> 
> If Bitcoin runs out of capacity *it will break and many of our
> users will leave*. That is not an acceptable outcome for myself or
> the many other wallet, service and merchant developers who have
> worked for years to build an ecosystem around this protocol.
> 
> 
> 
> - How do you propose to deal with the extra risks that come from 
> non-consensus hard-forks?  Hard-forks themselves are quite risky,
> but non-consensus ones are extremely dangerous for consensus.
> 
> 
> The approach is the same for other forks. Voting via block versions
> and then when there's been >X% for Y time units the 1mb limit is 
> lifted/replaced.
> 
> 
> 
> 
> - If you're going it alone as it were, are you proposing that you
> will personally maintain bitcoin-XT?  Or do you have a plan to
> later hand over maintenance to the bitcoin developers?
> 
> 
> Good question!  I have various thoughts on this, but let's wait and
> see what happens first. Perhaps the new chain won't get the
> majority on it.
> 
> In the event that the >1mb chain does eventually win, I would
> expect Core to apply the patch and rejoin the consensus rather than
> lose all its users. That would take XT back to being a fairly small
> patchset to improve the network protocol.
> 
> 
> 
> - Do you have contingency plans for what to do if the
> non-consensus hard-fork goes wrong and $3B is lost as a result?
> 
> 
> Where did you get the $3B figure from? The fork either doesn't
> happen, or it happens after quite a long period of people knowing
> it's going to happen - for example because their full node is
> printing "You need to upgrade" messages due to seeing the larger
> block version, or because they read the news, or because they heard
> about it via some other mechanisms.
> 
> Let me flip the question around. Do you have a contingency plan if 
> Bitcoin runs out of capacity and significant user disruption occurs
> that results in exodus, followed by fall in BTC price? The only one
> I've seen is "we can perform an emergency hard fork in a few
> weeks"!
> 
> 
> 
> As you can probably tell I think a unilateral fork without
> wide-scale consensus from the technical and business communities is
> a deeply inadvisable.
> 
> 
> Gavin and I have been polling many key players in the ecosystem.
> The consensus you seek does exist. All wallet developers (except
> Lawrence), all the major exchanges, all the major payment
> processors and many of the major mining pools want to see the limit
> lifted (I haven't been talking to pools, Gavin has).
> 
> This notion that the change has no consensus is based on you
> polling the people directly around you and people who like to spend
> all day on this mailing list. It's not an accurate reflection of
> the wider Bitcoin community and that is one of the leading reasons
> there is going to be a fork. A small number of people have been
> flatly ignoring LOTS of highly technical and passionate developers
> who have written vast amounts of code, built up the Bitcoin user
> base, designed hardware and software, and yes built companies.
> 
> How do you think that makes Bitcoin Core look to the rest of the
> Bitcoin world? How much confidence does that give people?
> 
> 
> 
> Of the overall process, I think you can agree we should not be
> making technical decisions with this level of complexity and
> consensus risk with financial implications of this magnitude under
> duress of haste?
> 
> 
> This debate will never end until a fork makes it irrelevant. There
> is no process for ending it, despite me begging Wladimir to make
> one.
> 
> And there is no haste. We have been debating the block size limit
> for _years_. We have known it must be lifted for _years_. I kicked
> off this current round of debates after realising that Wladimir's
> release timeline wouldn't allow a block size limit to be released
> before the end of the year. The reason we're talking about it now
> and not next year is exactly to ensure there is plenty of time.
> 
> 
> 
> 
> I can sincerely assure you everyone does want to scale bitcoin and 
> shares your long term objective on that
> 
> 
> I really wish you were right, and I definitely feel you are one of
> the more reasonable ones Adam. But the overwhelming impression I
> get from a few others here is that no, they don't want to scale
> Bitcoin. They already decided it's a technological dead end. They
> want to kick end users out in order to "incentivise" (force) the
> creation of some other alternative, claiming that it's still
> Bitcoin whilst ignoring basic details ... like the fact that no
> existing wallets or services would work.
> 
> Scaling Bitcoin can only be achieved by letting it grow, and
> letting people tackle each bottleneck as it arises at the right
> times. Not by convincing ourselves that success is failure.
> 
> 
> 
> ----------------------------------------------------------------------
- --------
>
> 
> 
> 
> _______________________________________________ Bitcoin-development
> mailing list Bitcoin-development at lists.sourceforge.net 
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVf1e3AAoJEGxwq/inSG8C7NwIAIah+HzWKB+aydCgarJB1Tuv
4wK6ffaWP3pzT/D1jNPMoMwL6bp+hi/ixyrV2y9a841Oc/9vgf75ws1l8QH2YtEE
TM5cLnRtScXnbaHKAAQZyewURbmGKTUxhNLMIRlVMMq2uHwbUEqRrDaaBGhwC1HO
+v3u5zK13H1UMKBuUY7yANWvOamjs17FmwZ6MURYdX8qBFVqMoTorhPHTebDGusS
NxDm4uqphW7ylXISOm53v7i3/CPjW63YGB2fyk9J+BqxhOM7yAJSH0Ln/xtu/COa
uXudO+SbMco+x+cKrFLf/5ItxR65aOnWvWPKw0o55f96uSabngs/QozDhaU2BJk=
=gof9
-----END PGP SIGNATURE-----



From brianchoffman at gmail.com  Mon Jun 15 22:56:02 2015
From: brianchoffman at gmail.com (Brian Hoffman)
Date: Mon, 15 Jun 2015 18:56:02 -0400
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
	non-consensus hard-fork
In-Reply-To: <CALx=ga7axVzUvpUd5Fvr=UruzUZWhXqJ7ibCEzjrRC-58gSWjw@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
	<CANEZrP148U0V7bU-u0tOTk2xWwq5wy-yU-jk805DcU_3cBHtnw@mail.gmail.com>
	<CABaSBawXZDcyR96g4hBNAiFRDpTcUJX+bMXyqGeuY5wVm4k1KQ@mail.gmail.com>
	<CALx=ga7axVzUvpUd5Fvr=UruzUZWhXqJ7ibCEzjrRC-58gSWjw@mail.gmail.com>
Message-ID: <9834E283-727C-47F7-A3D0-667951727E5F@gmail.com>

Who is actually planning to move to Bitcoin-XT if this happens? 

Just Gavin and Mike?



> On Jun 15, 2015, at 6:17 PM, Faiz Khan <faizkhan00 at gmail.com> wrote:
> 
> I'm quite puzzled by the response myself, it doesn't seem to address some of the (more serious) concerns that Adam put out, the most important question that was asked being the one regarding personal ownership of the proposed fork:
> 
> "How do you plan to deal with security & incident response for the duration you describe where you will have control while you are deploying the unilateral hard-fork and being in sole maintainership control?"
> 
> I do genuinely hope that whomever (now and future) wishes to fork the protocol reconsider first whether they are truly ready to test/flex their reputation/skills/resources in this way... Intuitively, to me it seems counterproductive, and I don't fully believe it is within a single developer's talents to manage the process start-to-finish (as it is non-trivial to hard-fork successfully, others have rehashed this in other threads)... 
> 
> That being said I think it appropriate if Adam's questions were responded in-line when Mike is feeling up to it. I think that the answers are important for the community to hear when such a drastic change is being espoused. 
> 
> Faiz
> 
>> On Mon, Jun 15, 2015 at 4:56 PM, Bryan Bishop <kanzure at gmail.com> wrote:
>>> On Mon, Jun 15, 2015 at 3:55 PM, Mike Hearn <mike at plan99.net> wrote:
>>> Re: anyone who agrees with noted non-programmers Mike&Gavin must be non-technical, stupid, uninformed, etc .... OK, go ahead and show them the error of their ways. Anyone can write blogs.
>> 
>> I worry that if this is the level of care you take with reading and (mis)interpreting Adam's messages, that you might not be taking extreme care with evaluating consensus changes, even while tired or sleeping. I encourage you to evaluate both messages and source code more carefully, especially in the world of bitcoin. However, this goes for everyone and not just you. Specifically, when Adam mentioned your conversations with non-technical people, he did not mean "Mike has talked with people who have possibly not made pull requests to Bitcoin Core, so therefore Mike is a non-programmer". Communication is difficult and I can understand that, but we really have to be more careful when evaluating each other's messages; technical miscommunication can be catastrophic in this context. On the topic of whether you are a programmer, I suspect that ever since you built CIA.vc we have all known you're a programmer, Mike.
>> 
>> - Bryan
>> http://heybryan.org/
>> 1 512 203 0507
>> 
>> ------------------------------------------------------------------------------
>> 
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
>> -- 
>> 
>> My regards,
>> 
>> Faiz Khan
> 
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/6de7b490/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image1.JPG
Type: image/jpeg
Size: 22107 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/6de7b490/attachment.jpe>

From raystonn at hotmail.com  Mon Jun 15 23:05:04 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Mon, 15 Jun 2015 16:05:04 -0700
Subject: [Bitcoin-development] questions about bitcoin-XT code fork
	&non-consensus hard-fork
In-Reply-To: <9834E283-727C-47F7-A3D0-667951727E5F@gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com><CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com><CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com><CANEZrP148U0V7bU-u0tOTk2xWwq5wy-yU-jk805DcU_3cBHtnw@mail.gmail.com><CABaSBawXZDcyR96g4hBNAiFRDpTcUJX+bMXyqGeuY5wVm4k1KQ@mail.gmail.com><CALx=ga7axVzUvpUd5Fvr=UruzUZWhXqJ7ibCEzjrRC-58gSWjw@mail.gmail.com>
	<9834E283-727C-47F7-A3D0-667951727E5F@gmail.com>
Message-ID: <COL131-DS234578F08A63967768C107CDB80@phx.gbl>

http://xtnodes.com/
From: Brian Hoffman 
Sent: Monday, June 15, 2015 3:56 PM
To: Faiz Khan 
Cc: Bitcoin Dev 
Subject: Re: [Bitcoin-development] questions about bitcoin-XT code fork &non-consensus hard-fork

Who is actually planning to move to Bitcoin-XT if this happens? 

Just Gavin and Mike?




On Jun 15, 2015, at 6:17 PM, Faiz Khan <faizkhan00 at gmail.com> wrote:


  I'm quite puzzled by the response myself, it doesn't seem to address some of the (more serious) concerns that Adam put out, the most important question that was asked being the one regarding personal ownership of the proposed fork: 

  "How do you plan to deal with security & incident response for the duration you describe where you will have control while you are deploying the unilateral hard-fork and being in sole maintainership control?"

  I do genuinely hope that whomever (now and future) wishes to fork the protocol reconsider first whether they are truly ready to test/flex their reputation/skills/resources in this way... Intuitively, to me it seems counterproductive, and I don't fully believe it is within a single developer's talents to manage the process start-to-finish (as it is non-trivial to hard-fork successfully, others have rehashed this in other threads)... 

  That being said I think it appropriate if Adam's questions were responded in-line when Mike is feeling up to it. I think that the answers are important for the community to hear when such a drastic change is being espoused. 

  Faiz

  On Mon, Jun 15, 2015 at 4:56 PM, Bryan Bishop <kanzure at gmail.com> wrote:

    On Mon, Jun 15, 2015 at 3:55 PM, Mike Hearn <mike at plan99.net> wrote:

      Re: anyone who agrees with noted non-programmers Mike&Gavin must be non-technical, stupid, uninformed, etc .... OK, go ahead and show them the error of their ways. Anyone can write blogs.

    I worry that if this is the level of care you take with reading and (mis)interpreting Adam's messages, that you might not be taking extreme care with evaluating consensus changes, even while tired or sleeping. I encourage you to evaluate both messages and source code more carefully, especially in the world of bitcoin. However, this goes for everyone and not just you. Specifically, when Adam mentioned your conversations with non-technical people, he did not mean "Mike has talked with people who have possibly not made pull requests to Bitcoin Core, so therefore Mike is a non-programmer". Communication is difficult and I can understand that, but we really have to be more careful when evaluating each other's messages; technical miscommunication can be catastrophic in this context. On the topic of whether you are a programmer, I suspect that ever since you built CIA.vc we have all known you're a programmer, Mike.


    - Bryan
    http://heybryan.org/
    1 512 203 0507

    ------------------------------------------------------------------------------

    _______________________________________________
    Bitcoin-development mailing list
    Bitcoin-development at lists.sourceforge.net
    https://lists.sourceforge.net/lists/listinfo/bitcoin-development


    -- 


    My regards,

    Faiz Khan


  ------------------------------------------------------------------------------

  _______________________________________________
  Bitcoin-development mailing list
  Bitcoin-development at lists.sourceforge.net
  https://lists.sourceforge.net/lists/listinfo/bitcoin-development



--------------------------------------------------------------------------------
------------------------------------------------------------------------------



--------------------------------------------------------------------------------
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/5fad1561/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image1.JPG
Type: image/jpeg
Size: 22107 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/5fad1561/attachment.jpe>

From voisine at gmail.com  Tue Jun 16 00:08:11 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Mon, 15 Jun 2015 17:08:11 -0700
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <9834E283-727C-47F7-A3D0-667951727E5F@gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
	<CANEZrP148U0V7bU-u0tOTk2xWwq5wy-yU-jk805DcU_3cBHtnw@mail.gmail.com>
	<CABaSBawXZDcyR96g4hBNAiFRDpTcUJX+bMXyqGeuY5wVm4k1KQ@mail.gmail.com>
	<CALx=ga7axVzUvpUd5Fvr=UruzUZWhXqJ7ibCEzjrRC-58gSWjw@mail.gmail.com>
	<9834E283-727C-47F7-A3D0-667951727E5F@gmail.com>
Message-ID: <CACq0ZD5TTJ=dvz+o-ex6vUWAnOtMfD=VE7JaZWXYM1Lo2L_9wA@mail.gmail.com>

Wasn't the XT hard fork proposed as a last resort, should the bitcoin-core
maintainers simply refuse to lift the 1Mb limit? No one wants to go that
route. An alternate hard-fork proposal like BIP100 that gets consensus, or
a modified version of gavin's that ups the limit to 8Mb instead of 20Mb, or
hell even some major changes to the non-consunsus code to make it
adequately handle the situation when blocks fill up, and allow wallet
software to continue working with a send-and-forget use pattern, any of
these would be enough to avoid the need for an XT only hard-fork.

So far BIP100 is the only one that seems to actually be getting any sort of
momentum toward consensus, and it was proposed... 2 days ago? When the XT
fork was proposed as a last resort, it was when the opponents were (to my
understanding) suggesting we just let blocks fill up, and hopefully things
would just work out on their own.



Aaron Voisine
co-founder and CEO
breadwallet.com

On Mon, Jun 15, 2015 at 3:56 PM, Brian Hoffman <brianchoffman at gmail.com>
wrote:

> Who is actually planning to move to Bitcoin-XT if this happens?
>
> Just Gavin and Mike?
>
> [image: image1.JPG]
>
> On Jun 15, 2015, at 6:17 PM, Faiz Khan <faizkhan00 at gmail.com> wrote:
>
> I'm quite puzzled by the response myself, it doesn't seem to address some
> of the (more serious) concerns that Adam put out, the most important
> question that was asked being the one regarding personal ownership of the
> proposed fork:
>
> "How do you plan to deal with security & incident response for the
> duration you describe where you will have control while you are deploying
> the unilateral hard-fork and being in sole maintainership control?"
>
> I do genuinely hope that whomever (now and future) wishes to fork the
> protocol reconsider first whether they are truly ready to test/flex their
> reputation/skills/resources in this way... Intuitively, to me it seems
> counterproductive, and I don't fully believe it is within a single
> developer's talents to manage the process start-to-finish (as it is
> non-trivial to hard-fork successfully, others have rehashed this in other
> threads)...
>
> That being said I think it appropriate if Adam's questions were responded
> in-line when Mike is feeling up to it. I think that the answers are
> important for the community to hear when such a drastic change is being
> espoused.
>
> Faiz
>
> On Mon, Jun 15, 2015 at 4:56 PM, Bryan Bishop <kanzure at gmail.com> wrote:
>
>> On Mon, Jun 15, 2015 at 3:55 PM, Mike Hearn <mike at plan99.net> wrote:
>>
>>> Re: anyone who agrees with noted non-programmers Mike&Gavin must be
>>> non-technical, stupid, uninformed, etc .... OK, go ahead and show them the
>>> error of their ways. Anyone can write blogs.
>>>
>>
>> I worry that if this is the level of care you take with reading and
>> (mis)interpreting Adam's messages, that you might not be taking extreme
>> care with evaluating consensus changes, even while tired or sleeping. I
>> encourage you to evaluate both messages and source code more carefully,
>> especially in the world of bitcoin. However, this goes for everyone and not
>> just you. Specifically, when Adam mentioned your conversations with
>> non-technical people, he did not mean "Mike has talked with people who have
>> possibly not made pull requests to Bitcoin Core, so therefore Mike is a
>> non-programmer". Communication is difficult and I can understand that, but
>> we really have to be more careful when evaluating each other's messages;
>> technical miscommunication can be catastrophic in this context. On the
>> topic of whether you are a programmer, I suspect that ever since you built
>> CIA.vc we have all known you're a programmer, Mike.
>>
>> - Bryan
>> http://heybryan.org/
>> 1 512 203 0507
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>> --
>>
>> My regards,
>>
>> Faiz Khan
>>
>>  <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/8b369aeb/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image1.JPG
Type: image/jpeg
Size: 22107 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/8b369aeb/attachment.jpe>

From mark at friedenbach.org  Tue Jun 16 00:41:00 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Mon, 15 Jun 2015 17:41:00 -0700
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <CACq0ZD5TTJ=dvz+o-ex6vUWAnOtMfD=VE7JaZWXYM1Lo2L_9wA@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
	<CANEZrP148U0V7bU-u0tOTk2xWwq5wy-yU-jk805DcU_3cBHtnw@mail.gmail.com>
	<CABaSBawXZDcyR96g4hBNAiFRDpTcUJX+bMXyqGeuY5wVm4k1KQ@mail.gmail.com>
	<CALx=ga7axVzUvpUd5Fvr=UruzUZWhXqJ7ibCEzjrRC-58gSWjw@mail.gmail.com>
	<9834E283-727C-47F7-A3D0-667951727E5F@gmail.com>
	<CACq0ZD5TTJ=dvz+o-ex6vUWAnOtMfD=VE7JaZWXYM1Lo2L_9wA@mail.gmail.com>
Message-ID: <CAOG=w-vFMczkSx+Dv06sX6tLp1vn3a-4g1B8JaGDFs_BDgbc8g@mail.gmail.com>

On Mon, Jun 15, 2015 at 5:08 PM, Aaron Voisine <voisine at gmail.com> wrote:

> Wasn't the XT hard fork proposed as a last resort, should the bitcoin-core
> maintainers simply refuse to lift the 1Mb limit? No one wants to go that
> route. An alternate hard-fork proposal like BIP100 that gets consensus, or
> a modified version of gavin's that ups the limit to 8Mb instead of 20Mb, or
> hell even some major changes to the non-consunsus code to make it
> adequately handle the situation when blocks fill up, and allow wallet
> software to continue working with a send-and-forget use pattern, any of
> these would be enough to avoid the need for an XT only hard-fork.
>
> So far BIP100 is the only one that seems to actually be getting any sort
> of momentum toward consensus, and it was proposed... 2 days ago? When the
> XT fork was proposed as a last resort, it was when the opponents were (to
> my understanding) suggesting we just let blocks fill up, and hopefully
> things would just work out on their own.
>

We are not reaching consensus about any proposal, Garzik's or otherwise.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/8ccbaeef/attachment.html>

From morcos at gmail.com  Tue Jun 16 01:17:56 2015
From: morcos at gmail.com (Alex Morcos)
Date: Mon, 15 Jun 2015 21:17:56 -0400
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <CACq0ZD5TTJ=dvz+o-ex6vUWAnOtMfD=VE7JaZWXYM1Lo2L_9wA@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
	<CANEZrP148U0V7bU-u0tOTk2xWwq5wy-yU-jk805DcU_3cBHtnw@mail.gmail.com>
	<CABaSBawXZDcyR96g4hBNAiFRDpTcUJX+bMXyqGeuY5wVm4k1KQ@mail.gmail.com>
	<CALx=ga7axVzUvpUd5Fvr=UruzUZWhXqJ7ibCEzjrRC-58gSWjw@mail.gmail.com>
	<9834E283-727C-47F7-A3D0-667951727E5F@gmail.com>
	<CACq0ZD5TTJ=dvz+o-ex6vUWAnOtMfD=VE7JaZWXYM1Lo2L_9wA@mail.gmail.com>
Message-ID: <CAPWm=eWTnVCoRCGSycUGsYjx8M3NFdqEXAU1ykm08_FdJQCP5Q@mail.gmail.com>

Aaron,

My understanding is that Gavin and Mike are proceeding with the XT fork, I
hope that understanding is wrong.

As for improving the non-consensus code to handle full blocks more
gracefully.  This is something I'm very interested in, block size increase
or not. Perhaps I shouldn't hijack this thread, but maybe there are others
who also believe this would ameliorate some of the time pressure for
deciding on a block size increase.

What is it that you would like to see improved?
The fee estimation code that is included for 0.11 will give much more
accurate fee estimates, which should allow adding the correct fee to a
transaction to see it likely to be confirmed in a reasonable time.  For
further improvements:
- There has recently been attention to overhauling the block creation and
mempool limiting code in such a way that actual outstanding queues to be
included in a block could also be incorporated in fee estimation.  See
https://github.com/bitcoin/bitcoin/pull/6281.
- CPFP and RBF are candidates for inclusion in core soon, both of which
could be integrated into transaction processing to handle the edge cases
where a priori fee estimation fails. See
https://github.com/bitcoin/bitcoin/pull/1647 and
https://github.com/bitcoin/bitcoin/pull/6176

I know there has been much discussion of fee estimation not working for SPV
clients, but I believe several independent servers which were serving the
estimates from full nodes would go a long way towards allowing that
information to be used by SPV clients even if its not a completely
decentralized solution.  See for example
http://core2.bitcoincore.org/smartfee/latest.json



On Mon, Jun 15, 2015 at 8:08 PM, Aaron Voisine <voisine at gmail.com> wrote:

> Wasn't the XT hard fork proposed as a last resort, should the bitcoin-core
> maintainers simply refuse to lift the 1Mb limit? No one wants to go that
> route. An alternate hard-fork proposal like BIP100 that gets consensus, or
> a modified version of gavin's that ups the limit to 8Mb instead of 20Mb, or
> hell even some major changes to the non-consunsus code to make it
> adequately handle the situation when blocks fill up, and allow wallet
> software to continue working with a send-and-forget use pattern, any of
> these would be enough to avoid the need for an XT only hard-fork.
>
> So far BIP100 is the only one that seems to actually be getting any sort
> of momentum toward consensus, and it was proposed... 2 days ago? When the
> XT fork was proposed as a last resort, it was when the opponents were (to
> my understanding) suggesting we just let blocks fill up, and hopefully
> things would just work out on their own.
>
>
>
> Aaron Voisine
> co-founder and CEO
> breadwallet.com
>
> On Mon, Jun 15, 2015 at 3:56 PM, Brian Hoffman <brianchoffman at gmail.com>
> wrote:
>
>> Who is actually planning to move to Bitcoin-XT if this happens?
>>
>> Just Gavin and Mike?
>>
>> [image: image1.JPG]
>>
>> On Jun 15, 2015, at 6:17 PM, Faiz Khan <faizkhan00 at gmail.com> wrote:
>>
>> I'm quite puzzled by the response myself, it doesn't seem to address some
>> of the (more serious) concerns that Adam put out, the most important
>> question that was asked being the one regarding personal ownership of the
>> proposed fork:
>>
>> "How do you plan to deal with security & incident response for the
>> duration you describe where you will have control while you are deploying
>> the unilateral hard-fork and being in sole maintainership control?"
>>
>> I do genuinely hope that whomever (now and future) wishes to fork the
>> protocol reconsider first whether they are truly ready to test/flex their
>> reputation/skills/resources in this way... Intuitively, to me it seems
>> counterproductive, and I don't fully believe it is within a single
>> developer's talents to manage the process start-to-finish (as it is
>> non-trivial to hard-fork successfully, others have rehashed this in other
>> threads)...
>>
>> That being said I think it appropriate if Adam's questions were responded
>> in-line when Mike is feeling up to it. I think that the answers are
>> important for the community to hear when such a drastic change is being
>> espoused.
>>
>> Faiz
>>
>> On Mon, Jun 15, 2015 at 4:56 PM, Bryan Bishop <kanzure at gmail.com> wrote:
>>
>>> On Mon, Jun 15, 2015 at 3:55 PM, Mike Hearn <mike at plan99.net> wrote:
>>>
>>>> Re: anyone who agrees with noted non-programmers Mike&Gavin must be
>>>> non-technical, stupid, uninformed, etc .... OK, go ahead and show them the
>>>> error of their ways. Anyone can write blogs.
>>>>
>>>
>>> I worry that if this is the level of care you take with reading and
>>> (mis)interpreting Adam's messages, that you might not be taking extreme
>>> care with evaluating consensus changes, even while tired or sleeping. I
>>> encourage you to evaluate both messages and source code more carefully,
>>> especially in the world of bitcoin. However, this goes for everyone and not
>>> just you. Specifically, when Adam mentioned your conversations with
>>> non-technical people, he did not mean "Mike has talked with people who have
>>> possibly not made pull requests to Bitcoin Core, so therefore Mike is a
>>> non-programmer". Communication is difficult and I can understand that, but
>>> we really have to be more careful when evaluating each other's messages;
>>> technical miscommunication can be catastrophic in this context. On the
>>> topic of whether you are a programmer, I suspect that ever since you built
>>> CIA.vc we have all known you're a programmer, Mike.
>>>
>>> - Bryan
>>> http://heybryan.org/
>>> 1 512 203 0507
>>>
>>>
>>> ------------------------------------------------------------------------------
>>>
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>> --
>>>
>>> My regards,
>>>
>>> Faiz Khan
>>>
>>>  <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>
>>
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/66911ee3/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image1.JPG
Type: image/jpeg
Size: 22107 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/66911ee3/attachment.jpe>

From elombrozo at gmail.com  Tue Jun 16 01:20:28 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Mon, 15 Jun 2015 18:20:28 -0700
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
	non-consensus hard-fork
In-Reply-To: <557F57B7.4050809@riseup.net>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<557F57B7.4050809@riseup.net>
Message-ID: <CF631FA3-03AB-419D-8945-D7E1D4BF53EF@gmail.com>


> On Jun 15, 2015, at 3:54 PM, odinn <odinn.cyberguerrilla at riseup.net> wrote:
> 
> I also disagree with the notion that everybody's just ok with what
> Mike and Gavin are doing.... specifically, this statement by Mike
> 
> > The consensus you seek does exist. All wallet developers (except
> > Lawrence), all the major exchanges, all the major payment
> > processors and many of the major mining pools want to see the limit
> > lifted


This is certainly twisting words!

We all agree that the limit needs to eventually be lifted - but some of us certainly disagree with the means being used to do so by Mike and Gavin.

Most news publications keep the discussion rather shallow and like to keep the controversy pretty black and white - some of us have far more nuanced views!

- Eric Lombrozo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/3aa4de8b/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/3aa4de8b/attachment.sig>

From kgreenek at gmail.com  Tue Jun 16 03:30:44 2015
From: kgreenek at gmail.com (Kevin Greene)
Date: Mon, 15 Jun 2015 20:30:44 -0700
Subject: [Bitcoin-development] The Bitcoin Node Market
In-Reply-To: <CA+c4Zoy6U9RXH3Qw15sXXnaeYL-9PFbnTp=VLAJsvpC_zoAK_A@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CANEZrP1nx9rNf1q-nubP77U8RMABuLtmEB_P7UpY2zyFf-Ns-w@mail.gmail.com>
	<CALqxMTENbj+E7ypJASrM1r04eW3kYe+afwy+Rt3i9ubeT-=2mA@mail.gmail.com>
	<CANEZrP0Z_EOmVgbvVmYDvegm6jfd1cKB52acXHocjRuM-qGEog@mail.gmail.com>
	<CAPg+sBgc0i-XsN=g0V4Y0bko-Xb1AT5x=UWDa+opL3eFbBmJfA@mail.gmail.com>
	<CANEZrP0eGDTafK+ZUBNcQBOe2JU_PqZVXMt0Ds-b8Ley7kbGrA@mail.gmail.com>
	<CAPg+sBiPhhrBh8f3QxJLtoysfywtVFSo2RH0WXVR+vpX9z6+HQ@mail.gmail.com>
	<CANEZrP10gn+969d-oe-8Em9ipe4DOP9q0WkNtL6u-6V5aphkPQ@mail.gmail.com>
	<CAFBxzAAExA-aE+8o-+HGQtnuwWuWpkt8Lbgxvh7hT64XkMKOPg@mail.gmail.com>
	<COL131-DS5331AE0C03A2BF6E0553ECDB80@phx.gbl>
	<CALqxMTF2T0Wgt15bmjkpMK199vhwH+ufYw+LJU7AEzx4X7dykQ@mail.gmail.com>
	<COL131-DS1BD3015F98131D224B0D6CDB80@phx.gbl>
	<CA+c4ZoyjmfFO+3+Zqvjabk1KuezuV42pvPNa57JPzJCAePJ5hw@mail.gmail.com>
	<COL131-DS97146D8FC6E7EC7D3F5D9CDB80@phx.gbl>
	<CA+c4Zoy6U9RXH3Qw15sXXnaeYL-9PFbnTp=VLAJsvpC_zoAK_A@mail.gmail.com>
Message-ID: <CAEY8wq41ftFA1ObyUWiRGOgebwqDCAw_j+hU6_wfcXv5GSZaJw@mail.gmail.com>

Would SPV wallets have to pay to connect to the network too? From the
user's perspective, it would be somewhat upsetting (and confusing) to see
your balance slowly draining every time you open your wallet app. It would
also tie up outputs every time you open up your wallet. You may go to pay
for something in a coffee shop, only to find that you can't spend your
bitcoin because the wallet had to create a transaction to pay to sync with
the network.

Also, users of centralized wallet services like Coinbase would not have to
pay that fee; but users of native wallets like breadwallet would have no
such option. This incentivizes users to use centralized wallets.

So this is kind of imposing a worse user experience on users who want to
use bitcoin the "right" way. That doesn't seem like a good thing to me :/

On Mon, Jun 15, 2015 at 1:12 PM, sickpig at gmail.com <sickpig at gmail.com>
wrote:

> Hi Raystonn
>
> On Mon, Jun 15, 2015 at 9:36 PM, Raystonn . <raystonn at hotmail.com> wrote:
> >
> > I am only partially through the content at the below link, and I am very
> impressed.  Has Justus Ranvier began work on implementation of the ideas
> contained therein?
>
> I don't know if he or someone else has begun writing code to implement
> what was described in the liked post, but I'm sure he will reply to
> you since he's subscribed to this mailing list.
>
>
> >
> >
> >
> > From: sickpig at gmail.com
> > Sent: Monday, June 15, 2015 12:18 PM
> > To: Raystonn .
> > Cc: Bitcoin Dev
> > Subject: Re: [Bitcoin-development] The Bitcoin Node Market
> >
> >
> > Sorry for top posting and the brevity but I'm typing from my phone
> >
> > You shoud be interested in this post by Justus Ranvier then:
> >
> >
> https://bitcoinism.liberty.me/economic-fallacies-and-the-block-size-limit-part-2-price-discovery/
> >
> > On Jun 15, 2015 8:57 PM, "Raystonn ." <raystonn at hotmail.com> wrote:
> >>
> >> I have been toying with an idea and figured I'd run it by everyone here
> >> before investing further time in it.  The goal here is to make it
> >> sustainable, and perhaps profitable, to run full nodes on the Bitcoin
> >> Network in the long term.
> >>
> >> - Nodes can participate in a market wherein they are paid by nodes,
> wallets,
> >> and other services to supply Bitcoin Network data.  Payment should be
> based
> >> on the cost imposed on the Node to do the work and send the data, but
> can be
> >> set in any way the node operator desires.  It's a free market.
> >> - Nodes that are mostly leeching data from the Bitcoin Network, such as
> >> those that do not receive inbound connections to port 8333, will send
> >> payments to the nodes they connect to, but will likely receive no
> payments
> >> from other nodes, wallets, and other services.
> >> - Nodes that are providing balanced full service to the Bitcoin Network
> will
> >> tend to have a balance of payments coming in and going out with regards
> to
> >> other balanced full service nodes, leaving them revenue neutral there.
> But
> >> they will receive payments from leech nodes, wallets, and other
> services.
> >>
> >> The net effect here is that the cost to run nodes will be shared by
> those
> >> who are using the Bitcoin network but not contributing by running a full
> >> node.  A market will develop for fees to connect to the Bitcoin Network
> >> which should help cover the cost of running the Network.  It's still
> >> possible to continue offering access to your node for free as there is
> >> nothing forcing you to charge a fee.  But this isn't very sustainable
> >> long-run.  Market efficiencies should eventually mean nodes take in only
> >> what is required to keep the Network operational.
> >>
> >> Raystonn
> >>
> >>
> >>
> ------------------------------------------------------------------------------
> >> _______________________________________________
> >> Bitcoin-development mailing list
> >> Bitcoin-development at lists.sourceforge.net
> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/3915b397/attachment.html>

From kgreenek at gmail.com  Tue Jun 16 03:49:43 2015
From: kgreenek at gmail.com (Kevin Greene)
Date: Mon, 15 Jun 2015 20:49:43 -0700
Subject: [Bitcoin-development] The Bitcoin Node Market
In-Reply-To: <201506160341.10994.luke@dashjr.org>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CA+c4Zoy6U9RXH3Qw15sXXnaeYL-9PFbnTp=VLAJsvpC_zoAK_A@mail.gmail.com>
	<CAEY8wq41ftFA1ObyUWiRGOgebwqDCAw_j+hU6_wfcXv5GSZaJw@mail.gmail.com>
	<201506160341.10994.luke@dashjr.org>
Message-ID: <CAEY8wq4SOddGUJNqkrdhhfQEn4tXehCWiifk-P=PYUdfFcXFTQ@mail.gmail.com>

On Mon, Jun 15, 2015 at 8:41 PM, Luke Dashjr <luke at dashjr.org> wrote:

> On Tuesday, June 16, 2015 3:30:44 AM Kevin Greene wrote:
> > Would SPV wallets have to pay to connect to the network too? From the
> > user's perspective, it would be somewhat upsetting (and confusing) to see
> > your balance slowly draining every time you open your wallet app. It
> would
> > also tie up outputs every time you open up your wallet. You may go to pay
> > for something in a coffee shop, only to find that you can't spend your
> > bitcoin because the wallet had to create a transaction to pay to sync
> with
> > the network.
> >
> > Also, users of centralized wallet services like Coinbase would not have
> to
> > pay that fee; but users of native wallets like breadwallet would have no
> > such option. This incentivizes users to use centralized wallets.
> >
> > So this is kind of imposing a worse user experience on users who want to
> > use bitcoin the "right" way. That doesn't seem like a good thing to me :/
>
> SPV isn't the "right" way either ;)
>

?Hah, fair enough, there is no such thing as the "right" way to do
anything. But I still think punishing users who use SPV wallets is ?a
less-than-ideal way to incentive people to run full nodes. Right now SPV is
the best way that exists for mobile phones to participate in the network in
a decentralized way. This proposal makes the user experience for mobile
wallets a little more confusing and annoying.


>
> If you're running a full node (the real "right way"), you should be able to
> earn more bitcoins than you pay out.
>
> Luke
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/08c20ffe/attachment.html>

From voisine at gmail.com  Tue Jun 16 04:00:19 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Mon, 15 Jun 2015 21:00:19 -0700
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <CAPWm=eWTnVCoRCGSycUGsYjx8M3NFdqEXAU1ykm08_FdJQCP5Q@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
	<CANEZrP148U0V7bU-u0tOTk2xWwq5wy-yU-jk805DcU_3cBHtnw@mail.gmail.com>
	<CABaSBawXZDcyR96g4hBNAiFRDpTcUJX+bMXyqGeuY5wVm4k1KQ@mail.gmail.com>
	<CALx=ga7axVzUvpUd5Fvr=UruzUZWhXqJ7ibCEzjrRC-58gSWjw@mail.gmail.com>
	<9834E283-727C-47F7-A3D0-667951727E5F@gmail.com>
	<CACq0ZD5TTJ=dvz+o-ex6vUWAnOtMfD=VE7JaZWXYM1Lo2L_9wA@mail.gmail.com>
	<CAPWm=eWTnVCoRCGSycUGsYjx8M3NFdqEXAU1ykm08_FdJQCP5Q@mail.gmail.com>
Message-ID: <CACq0ZD6M5Rv_iaB8=7_XgG-QX21CvxCf_Wm5ciRALgRYPt=eYw@mail.gmail.com>

Thanks Alex, the work you've pointed out is helpful. Limiting mempool size
should at least prevent nodes from crashing. When I looked a few days ago I
only found a few old PRs that seemed to have fallen by the wayside, so this
new one is encouraging.

I can respond in the PR comments if it's more appropriate there, but I
believe ejecting tx from mempools rather than preemptively refusing them
according to standard network wide propagation rules will result in spotty,
inconsistent tx propagation, and possibly a large increase in tx
re-broadcasts, so if those haven't been addressed they will need to be. It
would also be prudent to run some simulations to see what other issues are
going to pop-up.

We're currently using CPFP already in breadwallet when spending unconfirmed
non-change inputs. A small percentage of hashing power is using it, but
enough to get a transaction unstuck assuming breadwallet's fee calculation
is better than the sender's.

The problem with RBF is that there's currently no way to tell if your tx
has been picked up by miners or not in order to know if you need to replace
it. Miners broadcasting partial block solutions would be helpful in this
regard, but only for tx in the currently-being-worked-on block, not for tx
that won't be picked up until the block after. If miners were to eject tx
that were previously being worked on in favor of higher fee tx, then that
causes another set of problems for wallets that thought their tx was going
to get in but then it doesn't. The other problem with RBF is that users
don't know up front what fee they're actually going to pay which is a big
blow to real world usability. Also mobile wallets will have to sign lots of
tx up front and rely on a service to replace as necessary. And this is all
just on the send side. On the receive side it's much worse since you can't
rely on the sender to do the replacing. The real problem seems to be the
fact that RBF is an interactive iterative process rather than a
send-and-forget one.

What you really need is some way to tell up-front, is a transaction going
to get mined with a high probability? That problem seems really difficult
to solve with fixed-size blocks that are full. If the goal is simply to
reduce or limit the growth of the blockchain, then there are much simpler
solutions, which is why I've advocated for the blocksize increase, followed
by tx selection and propagation rule changes to create fee pressure.

Aaron Voisine
co-founder and CEO
breadwallet.com

On Mon, Jun 15, 2015 at 6:17 PM, Alex Morcos <morcos at gmail.com> wrote:

> Aaron,
>
> My understanding is that Gavin and Mike are proceeding with the XT fork, I
> hope that understanding is wrong.
>
> As for improving the non-consensus code to handle full blocks more
> gracefully.  This is something I'm very interested in, block size increase
> or not. Perhaps I shouldn't hijack this thread, but maybe there are others
> who also believe this would ameliorate some of the time pressure for
> deciding on a block size increase.
>
> What is it that you would like to see improved?
> The fee estimation code that is included for 0.11 will give much more
> accurate fee estimates, which should allow adding the correct fee to a
> transaction to see it likely to be confirmed in a reasonable time.  For
> further improvements:
> - There has recently been attention to overhauling the block creation and
> mempool limiting code in such a way that actual outstanding queues to be
> included in a block could also be incorporated in fee estimation.  See
> https://github.com/bitcoin/bitcoin/pull/6281.
> - CPFP and RBF are candidates for inclusion in core soon, both of which
> could be integrated into transaction processing to handle the edge cases
> where a priori fee estimation fails. See
> https://github.com/bitcoin/bitcoin/pull/1647 and
> https://github.com/bitcoin/bitcoin/pull/6176
>
> I know there has been much discussion of fee estimation not working for
> SPV clients, but I believe several independent servers which were serving
> the estimates from full nodes would go a long way towards allowing that
> information to be used by SPV clients even if its not a completely
> decentralized solution.  See for example
> http://core2.bitcoincore.org/smartfee/latest.json
>
>
>
> On Mon, Jun 15, 2015 at 8:08 PM, Aaron Voisine <voisine at gmail.com> wrote:
>
>> Wasn't the XT hard fork proposed as a last resort, should the
>> bitcoin-core maintainers simply refuse to lift the 1Mb limit? No one wants
>> to go that route. An alternate hard-fork proposal like BIP100 that gets
>> consensus, or a modified version of gavin's that ups the limit to 8Mb
>> instead of 20Mb, or hell even some major changes to the non-consunsus code
>> to make it adequately handle the situation when blocks fill up, and allow
>> wallet software to continue working with a send-and-forget use pattern, any
>> of these would be enough to avoid the need for an XT only hard-fork.
>>
>> So far BIP100 is the only one that seems to actually be getting any sort
>> of momentum toward consensus, and it was proposed... 2 days ago? When the
>> XT fork was proposed as a last resort, it was when the opponents were (to
>> my understanding) suggesting we just let blocks fill up, and hopefully
>> things would just work out on their own.
>>
>>
>>
>> Aaron Voisine
>> co-founder and CEO
>> breadwallet.com
>>
>> On Mon, Jun 15, 2015 at 3:56 PM, Brian Hoffman <brianchoffman at gmail.com>
>> wrote:
>>
>>> Who is actually planning to move to Bitcoin-XT if this happens?
>>>
>>> Just Gavin and Mike?
>>>
>>> [image: image1.JPG]
>>>
>>> On Jun 15, 2015, at 6:17 PM, Faiz Khan <faizkhan00 at gmail.com> wrote:
>>>
>>> I'm quite puzzled by the response myself, it doesn't seem to address
>>> some of the (more serious) concerns that Adam put out, the most important
>>> question that was asked being the one regarding personal ownership of the
>>> proposed fork:
>>>
>>> "How do you plan to deal with security & incident response for the
>>> duration you describe where you will have control while you are deploying
>>> the unilateral hard-fork and being in sole maintainership control?"
>>>
>>> I do genuinely hope that whomever (now and future) wishes to fork the
>>> protocol reconsider first whether they are truly ready to test/flex their
>>> reputation/skills/resources in this way... Intuitively, to me it seems
>>> counterproductive, and I don't fully believe it is within a single
>>> developer's talents to manage the process start-to-finish (as it is
>>> non-trivial to hard-fork successfully, others have rehashed this in other
>>> threads)...
>>>
>>> That being said I think it appropriate if Adam's questions were
>>> responded in-line when Mike is feeling up to it. I think that the answers
>>> are important for the community to hear when such a drastic change is being
>>> espoused.
>>>
>>> Faiz
>>>
>>> On Mon, Jun 15, 2015 at 4:56 PM, Bryan Bishop <kanzure at gmail.com> wrote:
>>>
>>>> On Mon, Jun 15, 2015 at 3:55 PM, Mike Hearn <mike at plan99.net> wrote:
>>>>
>>>>> Re: anyone who agrees with noted non-programmers Mike&Gavin must be
>>>>> non-technical, stupid, uninformed, etc .... OK, go ahead and show them the
>>>>> error of their ways. Anyone can write blogs.
>>>>>
>>>>
>>>> I worry that if this is the level of care you take with reading and
>>>> (mis)interpreting Adam's messages, that you might not be taking extreme
>>>> care with evaluating consensus changes, even while tired or sleeping. I
>>>> encourage you to evaluate both messages and source code more carefully,
>>>> especially in the world of bitcoin. However, this goes for everyone and not
>>>> just you. Specifically, when Adam mentioned your conversations with
>>>> non-technical people, he did not mean "Mike has talked with people who have
>>>> possibly not made pull requests to Bitcoin Core, so therefore Mike is a
>>>> non-programmer". Communication is difficult and I can understand that, but
>>>> we really have to be more careful when evaluating each other's messages;
>>>> technical miscommunication can be catastrophic in this context. On the
>>>> topic of whether you are a programmer, I suspect that ever since you built
>>>> CIA.vc we have all known you're a programmer, Mike.
>>>>
>>>> - Bryan
>>>> http://heybryan.org/
>>>> 1 512 203 0507
>>>>
>>>>
>>>> ------------------------------------------------------------------------------
>>>>
>>>> _______________________________________________
>>>> Bitcoin-development mailing list
>>>> Bitcoin-development at lists.sourceforge.net
>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>
>>>> --
>>>>
>>>> My regards,
>>>>
>>>> Faiz Khan
>>>>
>>>>  <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>
>>>
>>>
>>>
>>> ------------------------------------------------------------------------------
>>>
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>>
>>>
>>> ------------------------------------------------------------------------------
>>>
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>>
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/cb4817fe/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image1.JPG
Type: image/jpeg
Size: 22107 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/cb4817fe/attachment.jpe>

From luke at dashjr.org  Tue Jun 16 03:41:09 2015
From: luke at dashjr.org (Luke Dashjr)
Date: Tue, 16 Jun 2015 03:41:09 +0000
Subject: [Bitcoin-development] The Bitcoin Node Market
In-Reply-To: <CAEY8wq41ftFA1ObyUWiRGOgebwqDCAw_j+hU6_wfcXv5GSZaJw@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CA+c4Zoy6U9RXH3Qw15sXXnaeYL-9PFbnTp=VLAJsvpC_zoAK_A@mail.gmail.com>
	<CAEY8wq41ftFA1ObyUWiRGOgebwqDCAw_j+hU6_wfcXv5GSZaJw@mail.gmail.com>
Message-ID: <201506160341.10994.luke@dashjr.org>

On Tuesday, June 16, 2015 3:30:44 AM Kevin Greene wrote:
> Would SPV wallets have to pay to connect to the network too? From the
> user's perspective, it would be somewhat upsetting (and confusing) to see
> your balance slowly draining every time you open your wallet app. It would
> also tie up outputs every time you open up your wallet. You may go to pay
> for something in a coffee shop, only to find that you can't spend your
> bitcoin because the wallet had to create a transaction to pay to sync with
> the network.
> 
> Also, users of centralized wallet services like Coinbase would not have to
> pay that fee; but users of native wallets like breadwallet would have no
> such option. This incentivizes users to use centralized wallets.
> 
> So this is kind of imposing a worse user experience on users who want to
> use bitcoin the "right" way. That doesn't seem like a good thing to me :/

SPV isn't the "right" way either ;)

If you're running a full node (the real "right way"), you should be able to 
earn more bitcoins than you pay out.

Luke



From kgreenek at gmail.com  Tue Jun 16 04:05:46 2015
From: kgreenek at gmail.com (Kevin Greene)
Date: Mon, 15 Jun 2015 21:05:46 -0700
Subject: [Bitcoin-development] The Bitcoin Node Market
In-Reply-To: <CAEY8wq4SOddGUJNqkrdhhfQEn4tXehCWiifk-P=PYUdfFcXFTQ@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CA+c4Zoy6U9RXH3Qw15sXXnaeYL-9PFbnTp=VLAJsvpC_zoAK_A@mail.gmail.com>
	<CAEY8wq41ftFA1ObyUWiRGOgebwqDCAw_j+hU6_wfcXv5GSZaJw@mail.gmail.com>
	<201506160341.10994.luke@dashjr.org>
	<CAEY8wq4SOddGUJNqkrdhhfQEn4tXehCWiifk-P=PYUdfFcXFTQ@mail.gmail.com>
Message-ID: <CAEY8wq4bQFqNBSkpSi5b1ZnvU57xb73F8xRVRyWUp1n1mbfADA@mail.gmail.com>

Just thinking off the top of my head here:

What if SPV wallets were exempt from the fee? Only full nodes would pay
other full nodes when initially sync'ing the blockchain. Then as long as
you keep your full node running for a long period of time, you'll
eventually make back the cost you paid to sync initially. This at least
incentives full node operators to keep their node running for as long as
possible once started.

This still imposes a worse UX on casual users who want full node security,
but don't want to run a server 24/7 (or perhaps simply aren't aware that
they have to). These users will watch their balance wither away each time
they open their wallet, but it would be very difficult to explain to them
why that is happening. It would just be frustrating and confusing.

Also, what happens when a user runs Bitcoin-QT for the first time after
downloading it to try it out? They wouldn't be able to sync the blockchain.
Even if the wallet has a balance, how would the wallet be able to see that
it has UTXO's without the ability to sync with the network for free?


On Mon, Jun 15, 2015 at 8:49 PM, Kevin Greene <kgreenek at gmail.com> wrote:

>
>
> On Mon, Jun 15, 2015 at 8:41 PM, Luke Dashjr <luke at dashjr.org> wrote:
>
>> On Tuesday, June 16, 2015 3:30:44 AM Kevin Greene wrote:
>> > Would SPV wallets have to pay to connect to the network too? From the
>> > user's perspective, it would be somewhat upsetting (and confusing) to
>> see
>> > your balance slowly draining every time you open your wallet app. It
>> would
>> > also tie up outputs every time you open up your wallet. You may go to
>> pay
>> > for something in a coffee shop, only to find that you can't spend your
>> > bitcoin because the wallet had to create a transaction to pay to sync
>> with
>> > the network.
>> >
>> > Also, users of centralized wallet services like Coinbase would not have
>> to
>> > pay that fee; but users of native wallets like breadwallet would have no
>> > such option. This incentivizes users to use centralized wallets.
>> >
>> > So this is kind of imposing a worse user experience on users who want to
>> > use bitcoin the "right" way. That doesn't seem like a good thing to me
>> :/
>>
>> SPV isn't the "right" way either ;)
>>
>
> ?Hah, fair enough, there is no such thing as the "right" way to do
> anything. But I still think punishing users who use SPV wallets is ?a
> less-than-ideal way to incentive people to run full nodes. Right now SPV is
> the best way that exists for mobile phones to participate in the network in
> a decentralized way. This proposal makes the user experience for mobile
> wallets a little more confusing and annoying.
>
>
>>
>> If you're running a full node (the real "right way"), you should be able
>> to
>> earn more bitcoins than you pay out.
>>
>> Luke
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/6dfa5428/attachment.html>

From voisine at gmail.com  Tue Jun 16 04:12:14 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Mon, 15 Jun 2015 21:12:14 -0700
Subject: [Bitcoin-development] The Bitcoin Node Market
In-Reply-To: <CAEY8wq4SOddGUJNqkrdhhfQEn4tXehCWiifk-P=PYUdfFcXFTQ@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CA+c4Zoy6U9RXH3Qw15sXXnaeYL-9PFbnTp=VLAJsvpC_zoAK_A@mail.gmail.com>
	<CAEY8wq41ftFA1ObyUWiRGOgebwqDCAw_j+hU6_wfcXv5GSZaJw@mail.gmail.com>
	<201506160341.10994.luke@dashjr.org>
	<CAEY8wq4SOddGUJNqkrdhhfQEn4tXehCWiifk-P=PYUdfFcXFTQ@mail.gmail.com>
Message-ID: <CACq0ZD69egjyaBBUeuvVX9LZUkX7hT7xokHn=SumppRbzA1kUQ@mail.gmail.com>

We're planning to run our own full nodes to take load off the volunteer
network as breadwallet use increases, and also contribute any SPV serving
performance optimizations we can make to bitcoin-core. Just want to let
people know we share these concerns and have plans to mitigate any negative
impact on the network.


Aaron Voisine
co-founder and CEO
breadwallet.com

On Mon, Jun 15, 2015 at 8:49 PM, Kevin Greene <kgreenek at gmail.com> wrote:

>
>
> On Mon, Jun 15, 2015 at 8:41 PM, Luke Dashjr <luke at dashjr.org> wrote:
>
>> On Tuesday, June 16, 2015 3:30:44 AM Kevin Greene wrote:
>> > Would SPV wallets have to pay to connect to the network too? From the
>> > user's perspective, it would be somewhat upsetting (and confusing) to
>> see
>> > your balance slowly draining every time you open your wallet app. It
>> would
>> > also tie up outputs every time you open up your wallet. You may go to
>> pay
>> > for something in a coffee shop, only to find that you can't spend your
>> > bitcoin because the wallet had to create a transaction to pay to sync
>> with
>> > the network.
>> >
>> > Also, users of centralized wallet services like Coinbase would not have
>> to
>> > pay that fee; but users of native wallets like breadwallet would have no
>> > such option. This incentivizes users to use centralized wallets.
>> >
>> > So this is kind of imposing a worse user experience on users who want to
>> > use bitcoin the "right" way. That doesn't seem like a good thing to me
>> :/
>>
>> SPV isn't the "right" way either ;)
>>
>
> ?Hah, fair enough, there is no such thing as the "right" way to do
> anything. But I still think punishing users who use SPV wallets is ?a
> less-than-ideal way to incentive people to run full nodes. Right now SPV is
> the best way that exists for mobile phones to participate in the network in
> a decentralized way. This proposal makes the user experience for mobile
> wallets a little more confusing and annoying.
>
>
>>
>> If you're running a full node (the real "right way"), you should be able
>> to
>> earn more bitcoins than you pay out.
>>
>> Luke
>>
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/79706241/attachment.html>

From raystonn at hotmail.com  Tue Jun 16 04:38:48 2015
From: raystonn at hotmail.com (Raystonn)
Date: Mon, 15 Jun 2015 21:38:48 -0700
Subject: [Bitcoin-development] The Bitcoin Node Market
Message-ID: <COL402-EAS742485EDFC6B8322F21B23CDA70@phx.gbl>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/28f61064/attachment.html>

From tomh at thinlink.com  Tue Jun 16 05:26:03 2015
From: tomh at thinlink.com (Tom Harding)
Date: Mon, 15 Jun 2015 22:26:03 -0700
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>	<CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>	<CAPg+sBiWykR6RaHhbyYQbL=A5t1TmHgEmS_sC7jj9d3SUTMO9g@mail.gmail.com>	<CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>
	<CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>
Message-ID: <557FB36B.1030902@thinlink.com>


Shared wallets were discussed earlier as a feature.  If you pay a for
dry cleaning with a shared wallet, a different 1-of-N signer can pick up
the clothes with no physical transfer of a claim check, by proving the
money that paid for the cleaning was his.

Many kinds of vouchers can be eliminated, because the money itself can
be vouched for, wirelessly, with ECDSA security.  A PoP would be much
more difficult to forge as a valet claim check, to steal a car.

Something like your coffee gift example was also mentioned.  The buyer
could export the private keys to your (the beneficiary's) wallet after
the purchase, by using an 'export gift claim check' function on the
spent transaction.  Then you pick up the coffee (car, concert seats...)
just as if you had paid.

Kalle goes to some trouble to describe how merchants need to ensure that
they only accept a PoP provided as a response to their challenge.

Coinjoin or simulfunding transactions wouldn't be PoP-able (nor should
they be) since no one signer has all the private keys.



On 6/15/2015 3:00 AM, Pieter Wuille wrote:
>
> I did misunderstand that. That changes things significantly.
>
> However, having paid is not the same as having had access to the input
> coins. What about shared wallets or coinjoin?
>
> Also, if I understand correctly, there is no commitment to anything
> you're trying to say about the sender? So once I obtain a
> proof-of-payment from you about something you paid, I can go claim
> that it's mine?
>
> Why does anyone care who paid? This is like walking into a coffeshop,
> noticing I don't have money with me, let me friend pay for me, and
> then have the shop insist that I can't drink it because I'm not the buyer.
>
> Track payments, don't try to assign identities to payers.
>
> On Jun 15, 2015 11:35 AM, "Kalle Rosenbaum" <kalle at rosenbaum.se
> <mailto:kalle at rosenbaum.se>> wrote:
>
>     Hi Pieter!
>
>     It is intended to be a proof that you *have paid* for something. Not
>     that you have the intent to pay for something. You cannot use PoP
>     without a transaction to prove.
>
>     So, yes, it's just a proof of access to certain coins that you no
>     longer have.
>
>     Maybe I don't understand you correctly?
>
>     /Kalle
>
>     2015-06-15 11:27 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com
>     <mailto:pieter.wuille at gmail.com>>:
>     > Now that you have removed the outputs, I don't think it's even a
>     intent of
>     > payment, but just a proof of access to certain coins.
>     >
>     > On Jun 15, 2015 11:24 AM, "Kalle Rosenbaum" <kalle at rosenbaum.se
>     <mailto:kalle at rosenbaum.se>> wrote:
>     >>
>     >> Hi all!
>     >>
>     >> I have made the discussed changes and updated my implementation
>     >> (https://github.com/kallerosenbaum/poppoc) accordingly. These
>     are the
>     >> changes:
>     >>
>     >> * There is now only one output, the "pop output", of value 0.
>     >> * The sequence number of all inputs of the PoP must be set to 0. I
>     >> chose to set it to 0 for all inputs for simplicity.
>     >> * The lock_time of the PoP must be set to 499999999 (max block
>     height lock
>     >> time).
>     >>
>     >> The comments so far has been mainly positive or neutral. Are
>     there any
>     >> major objections against any of the two proposals? If not, I
>     will ask
>     >> Gregory Maxwell to assign them BIP numbers.
>     >>
>     >> The two BIP proposals can be found at
>     >>
>     https://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP and
>     >>
>     https://github.com/kallerosenbaum/poppoc/wiki/btcpop-scheme-BIP.
>     The source
>     >> for the Proof of Payment BIP proposal is also in-lined below.
>     >>
>     >> A number of alternative names have been proposed:
>     >>
>     >> * Proof of Potential
>     >> * Proof of Control
>     >> * Proof of Signature
>     >> * Signatory Proof
>     >> * Popo: Proof of payment origin
>     >> * Pots: Proof of transaction signer
>     >> * proof of transaction intent
>     >> * Declaration of intent
>     >> * Asset-access-and-action-affirmation, AAaAA, or A5
>     >> * VeriBit
>     >> * CertiBTC
>     >> * VBit
>     >> * PayID
>     >>
>     >> Given this list, I still think "Proof of Payment" is the most
>     descriptive
>     >> to non-technical people.
>     >>
>     >> Regards,
>     >> Kalle
>     >>
>     >>
>     >> #################################################
>     >> <pre>
>     >>   BIP: <BIP number>
>     >>   Title: Proof of Payment
>     >>   Author: Kalle Rosenbaum <kalle at rosenbaum.se
>     <mailto:kalle at rosenbaum.se>>
>     >>   Status: Draft
>     >>   Type: Standards Track
>     >>   Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>
>     >> </pre>
>     >>
>     >> == Abstract ==
>     >>
>     >> This BIP describes how a wallet can prove to a server that it
>     has the
>     >> ability to sign a certain transaction.
>     >>
>     >> == Motivation ==
>     >>
>     >> There are several scenarios in which it would be useful to
>     prove that you
>     >> have paid for something. For example:
>     >>
>     >> * A pre-paid hotel room where your PoP functions as a key to
>     the door.
>     >> * An online video rental service where you pay for a video and
>     watch it on
>     >> any device.
>     >> * An ad-sign where you pay in advance for e.g. 2 weeks
>     exclusivity. During
>     >> this period you can upload new content to the sign whenever you
>     like using
>     >> PoP.
>     >> * Log in to a pay site using a PoP.
>     >> * A parking lot you pay for monthly and the car authenticates
>     itself using
>     >> PoP.
>     >> * A lottery where all participants pay to the same address, and
>     the winner
>     >> is selected among the transactions to that address. You
>     exchange the prize
>     >> for a PoP for the winning transaction.
>     >>
>     >> With Proof of Payment, these use cases can be achieved without any
>     >> personal information (user name, password, e-mail address, etc)
>     being
>     >> involved.
>     >>
>     >> == Rationale ==
>     >>
>     >> Desirable properties:
>     >>
>     >> # A PoP should be generated on demand.
>     >> # It should only be usable once to avoid issues due to theft.
>     >> # It should be able to create a PoP for any payment, regardless
>     of script
>     >> type (P2SH, P2PKH, etc.).
>     >> # It should prove that you have enough credentials to unlock
>     all the
>     >> inputs of the proven transaction.
>     >> # It should be easy to implement by wallets and servers to ease
>     adoption.
>     >>
>     >> Current methods of proving a payment:
>     >>
>     >> * In BIP0070, the PaymentRequest together with the transactions
>     fulfilling
>     >> the request makes some sort of proof. However, it does not meet
>     1, 2 or 4
>     >> and it obviously only meets 3 if the payment is made through
>     BIP0070. Also,
>     >> there's no standard way to request/provide the proof. If
>     standardized it
>     >> would probably meet 5.
>     >> * Signing messages, chosen by the server, with the private keys
>     used to
>     >> sign the transaction. This could meet 1 and 2 but probably not
>     3. This is
>     >> not standardized either. 4 Could be met if designed so.
>     >>
>     >> If an input script type is P2SH, any satisfying script should
>     do, just as
>     >> if it was a payment. For M-of-N multisig scripts, that would
>     mean that any
>     >> set of M keys should be sufficient, not neccesarily the same
>     set of M keys
>     >> that signed the transaction. This is important because strictly
>     demanding
>     >> the same set of M keys would defeat the purpose of a multisig
>     address.
>     >>
>     >> == Specification ==
>     >>
>     >> === Data structure ===
>     >>
>     >> A proof of payment for a transaction T, here called PoP(T), is
>     used to
>     >> prove that one has ownership of the credentials needed to
>     unlock all the
>     >> inputs of T. It has the exact same structure as a bitcoin
>     transaction with
>     >> the same inputs as T and in the same order as in T, but with
>     each sequence
>     >> number set to 0. There is exactly one output, here called the
>     pop output,
>     >> with value 0. The pop output must have the following format:
>     >>
>     >>  OP_RETURN <version> <txid> <nonce>
>     >>
>     >> {|
>     >> ! Field        !! Size [B] !! Description
>     >> |-
>     >> | &lt;version> || 2        || Version, little endian, currently
>     0x01 0x00
>     >> |-
>     >> | &lt;txid>    || 32       || The transaction to prove
>     >> |-
>     >> | &lt;nonce>   || 6        || Random data
>     >> |}
>     >>
>     >> The lock_time of the PoP must be set to 499999999 to prevent
>     the PoP from
>     >> being included in a block, should it appear on the bitcoin p2p
>     network. This
>     >> is also the reason for setting the sequence numbers to 0, since
>     sequence
>     >> number of ffffffff would make lock_time ineffective. This
>     specification
>     >> demands that all input sequence numbers are 0, not just one of
>     them, which
>     >> would be sufficient to make lock_time effective. This is for
>     simplicity
>     >> reasons.
>     >>
>     >> An illustration of the PoP data structure and its original
>     payment is
>     >> shown below.
>     >>
>     >> <pre>
>     >>   T
>     >>  +------------------------------------------------+
>     >>  |inputs                | outputs                 |
>     >>  |       Value,Sequence | Value,Script            |
>     >>  +------------------------------------------------+
>     >>  |input0 1,ffffffff     | 0,pay to A              |
>     >>  |input1 3,ffffffff     | 2,OP_RETURN <some data> |
>     >>  |input2 4,ffffffff     | 1,pay to B              |
>     >>  |                      | 4,pay to C              |
>     >>  +------------------------------------------------+
>     >>
>     >>   PoP(T)
>     >>  +-------------------------------------------------------------+
>     >>  | inputs               | outputs                              |
>     >>  |       Value,Sequence | Value,Script                         |
>     >>  +-------------------------------------------------------------+
>     >>  |input0 1,00000000     | 0,OP_RETURN <version> <txid> <nonce> |
>     >>  |input1 3,00000000     |                                      |
>     >>  |input2 4,00000000     |                                      |
>     >>  +-------------------------------------------------------------+
>     >>  | lock_time=499999999                                         |
>     >>  +-------------------------------------------------------------+
>     >> </pre>
>     >>
>     >> The PoP is signed using the same signing process that is used
>     for bitcoin
>     >> transactions.
>     >>
>     >> The purpose of the nonce is to make it harder to use a stolen
>     PoP; Once
>     >> the PoP has reached the server, that PoP is useless since the
>     server will
>     >> generate a new nonce for every PoP request.
>     >>
>     >> === Process ===
>     >>
>     >> # A proof of payment request is sent from the server to the
>     wallet. The
>     >> PoP request contains:
>     >> ## a random nonce
>     >> ## a destination where to send the PoP, for example a https URL
>     >> ## data hinting the wallet which transaction to create a proof
>     for. For
>     >> example:
>     >> ##* txid, if known by the server
>     >> ##* PaymentRequest.PaymentDetails.merchant_data (in case of a
>     BIP0070
>     >> payment)
>     >> ##* amount, label, message or other information from a BIP0021 URI
>     >> # The wallet identifies a transaction T, if possible. Otherwise
>     it asks
>     >> the user to select among the ones that match the hints in 1.iii.
>     >> # The wallet creates an unsigned PoP (UPoP) for T, and asks the
>     user to
>     >> sign it.
>     >> # The user confirms
>     >> # The UPoP(T) is signed by the wallet, creating PoP(T).
>     >> # The PoP is sent to the destination in 1.ii.
>     >> # The server receiving the PoP validates it and responds with
>     ?valid? or
>     >> ?invalid?.
>     >> # The wallet displays the response in some way to the user.
>     >>
>     >> '''Remarks:'''
>     >>
>     >> * The method of transferring the PoP request at step 1 is not
>     specified
>     >> here. Instead that is specified in separate specifications. See
>     [btcpop
>     >> scheme BIP](btcpop scheme BIP).
>     >> * The nonce must be randomly generated by the server for every
>     new PoP
>     >> request.
>     >>
>     >> === Validating a PoP ===
>     >>
>     >> The server needs to validate the PoP and reply with "valid" or
>     "invalid".
>     >> That process is outlined below. If any step fails, the
>     validation is aborted
>     >> and "invalid" is returned:
>     >>
>     >> # Check the format of the PoP. It must pass normal transaction
>     checks,
>     >> except that the inputs may already be spent.
>     >> # Check that lock_time is 499999999.
>     >> # Check that there is exactly one output. This output must have
>     value 0
>     >> and conform to the OP_RETURN output format outlined above.
>     >> # Check that the nonce is the same as the one requested.
>     >> # Check that the inputs of the PoP are exactly the same as in
>     transaction
>     >> T, except that the sequence numbers must all be 0. The ordering
>     of the
>     >> inputs must also be the same as in T.
>     >> # Run the scripts of all the inputs. All scipts must return true.
>     >> # Check that the txid in the PoP output is the transaction you
>     actually
>     >> want proof for. If you don?t know exactly what transaction you
>     want proof
>     >> for, check that the transaction actually pays for the
>     product/service you
>     >> deliver.
>     >> # Return "valid".
>     >>
>     >> == Security considerations ==
>     >>
>     >> * Someone can intercept the PoP-request and change any
>     parameter in it.
>     >> These can be mitigated by using secure connections. For example:
>     >> ** Pop destination - Stealing your PoP.
>     >> ** label - Trick you to sign an unintended pop or set a label
>     that your
>     >> wallet doesn't have any record for, resulting in a broken
>     service. Always
>     >> check the PoP before signing.
>     >> ** nonce - Your pop will not validate on server.
>     >> * Someone can steal a PoP, for example by tampering with the
>     PoP request,
>     >> and try to use the service hoping to get a matching nonce.
>     Probability per
>     >> try: 1/(2^48). The server should have a mechanism for detecting
>     a brute
>     >> force attack of this kind, or at least slow down the process by
>     delaying the
>     >> PoP request by some 100 ms or so.
>     >> * Even if a wallet has no funds it might still be valuable as a
>     generator
>     >> for PoPs. This makes it important to keep the security of the
>     wallet after
>     >> it has been emptied.
>     >> * Transaction malleability may cause the server to have another
>     >> transaction id for a payment than the client's wallet. In that
>     case the
>     >> wallet will not be able to prove the transaction to the server.
>     Wallets
>     >> should not rely on the transaction id of the outgoing
>     transaction. Instead
>     >> it should listen for the transaction on the network and put
>     that in its list
>     >> of transactions.
>     >>
>     >> == Reference implementation ==
>     >>
>     >> [https://github.com/kallerosenbaum/poppoc poppoc on GitHub]
>     >>
>     >> [https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]
>     >>
>     >> == References ==
>     >>
>     >> [https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki
>     BIP0021]:
>     >> URI Scheme
>     >>
>     >> [https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki
>     BIP0070]:
>     >> Payment Protocol
>     >>
>     >> [[btcpop scheme BIP]]
>     >>
>     >> #########################################################
>     >>
>     >> 2015-06-06 23:25 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se
>     <mailto:kalle at rosenbaum.se>>:
>     >> > Thank you all for the feedback.
>     >> >
>     >> > I will change the data structure as follows:
>     >> >
>     >> > * There will be only one output, the "pop output", and no
>     outputs from
>     >> > T will be copied to the PoP.
>     >> > * The pop output will have value 0.
>     >> > * The sequence number of all inputs of the PoP will be set to
>     0. I
>     >> > chose to set it to 0 for all inputs for simplicity.
>     >> > * The lock_time of the PoP is always set to 499999999.
>     >> >
>     >> > Any comments on this?
>     >> >
>     >> > /Kalle
>     >> >
>     >> > 2015-06-06 19:00 GMT+02:00 Kalle Rosenbaum
>     <kalle at rosenbaum.se <mailto:kalle at rosenbaum.se>>:
>     >> >> 2015-06-06 18:10 GMT+02:00 Tom Harding <tomh at thinlink.com
>     <mailto:tomh at thinlink.com>>:
>     >> >>> On Jun 6, 2015 8:05 AM, "Kalle Rosenbaum"
>     <kalle at rosenbaum.se <mailto:kalle at rosenbaum.se>> wrote:
>     >> >>>
>     >> >>>> I'm open to changes here.
>     >> >>>
>     >> >>> I suggest:
>     >> >>>
>     >> >>> - Don't include any real outputs.   They are redundant
>     because the
>     >> >>> txid is
>     >> >>> already referenced.
>     >> >>
>     >> >> with the nLocktime solution, the copied outputs are not needed.
>     >> >>
>     >> >>>
>     >> >>> - Start the proof script, which should be invalid, with a magic
>     >> >>> constant and
>     >> >>> include space for future expansion.  This makes PoP's easy
>     to identify
>     >> >>> and
>     >> >>> extend.
>     >> >>
>     >> >> I did remore the constant (a "PoP" literal ascii encoded string)
>     >> >> because it didn't add much. The recipient will expect a pop,
>     so it
>     >> >> will simply treat it as one. I did add a 2 byte version
>     field to make
>     >> >> it extendable.
>     >> >>
>     >> >>>
>     >> >>> - "Proof of Potential"
>     >> >>
>     >> >> Noted :-)
>     >> >>
>     >> >> Thank you
>     >> >> /Kalle
>     >>
>     >>
>     >>
>     ------------------------------------------------------------------------------
>     >>
>     >> _______________________________________________
>     >> Bitcoin-development mailing list
>     >> Bitcoin-development at lists.sourceforge.net
>     <mailto:Bitcoin-development at lists.sourceforge.net>
>     >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>     >>
>     >
>
>
>
> ------------------------------------------------------------------------------
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/c8479397/attachment.html>

From justusranvier at riseup.net  Tue Jun 16 05:28:32 2015
From: justusranvier at riseup.net (justusranvier at riseup.net)
Date: Tue, 16 Jun 2015 05:28:32 +0000
Subject: [Bitcoin-development] The Bitcoin Node Market
In-Reply-To: <CAEY8wq4SOddGUJNqkrdhhfQEn4tXehCWiifk-P=PYUdfFcXFTQ@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CA+c4Zoy6U9RXH3Qw15sXXnaeYL-9PFbnTp=VLAJsvpC_zoAK_A@mail.gmail.com>
	<CAEY8wq41ftFA1ObyUWiRGOgebwqDCAw_j+hU6_wfcXv5GSZaJw@mail.gmail.com>
	<201506160341.10994.luke@dashjr.org>
	<CAEY8wq4SOddGUJNqkrdhhfQEn4tXehCWiifk-P=PYUdfFcXFTQ@mail.gmail.com>
Message-ID: <a9e2e033c786fb7f99bcf7505ad45f21@riseup.net>

On 2015-06-16 03:49, Kevin Greene wrote:
> ?Hah, fair enough, there is no such thing as the "right" way to do
> anything. But I still think punishing users who use SPV wallets is ?a
> less-than-ideal way to incentive people to run full nodes. Right now 
> SPV is
> the best way that exists for mobile phones to participate in the 
> network in
> a decentralized way. This proposal makes the user experience for mobile
> wallets a little more confusing and annoying.

Suppose a billion mobile phones wanted to run SPV wallets tomorrow. Who 
would provide the nodes they would need connect to? The decentralization 
fairy?

There's absolutely no reason that paying for connectivity would be any 
more confusing or annoying than transaction fees are.

If some full nodes in the network started offering paid connection 
slots, that would just mean that users who checked the "pay subscription 
fee" box in their wallet configuration would have an easier time 
connecting than the users who did't, just like how your transaction 
might eventually get mined without a fee but paying one makes it faster 
and more probable.



From venzen at mail.bihthai.net  Tue Jun 16 05:18:16 2015
From: venzen at mail.bihthai.net (Venzen)
Date: Tue, 16 Jun 2015 12:18:16 +0700
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
Message-ID: <557FB198.7080905@mail.bihthai.net>

Mike Hearn,

In the light of your responses to Adam Back's questions, below, I feel
it is time to speak up because what I now understand, and is implied,
is that Mike Hearn and Gavin Andresen have planned and deployed the
infrastructure for a Bitcoin hard-fork and intend to action it despite
majority opposition.  http://xtnodes.com/

I'll try to keep it brief:

Mike Hearn, you should cease your activity of a unilateral hard-fork
immediately. You are doing untold damage by breaking FOSS governance
protocol requiring methodical collaborative work and due process of
change implementation by consensus. Your actions are bad for the
Bitcoin project and its ideals, disrespectful of your peers and years
of their passionate hard work, and dangerous for Bitcoin in the
marketplace and bitcoin in peoples' wallets.

Mike Hearn and Gavin Andresen do not own Bitcoin and, emphatically,
you cannot have it. Your hard-fork is tantamount to theft and you and
your collaborators will effectively ex-communicate yourselves from
this project and community. It appears that you are consciously trying
to usurp ownership and maintenance of Bitcoin. As if it is that easy!
You clearly do not comprehend the array of risks - especially the
unanticipated ones. As the market saying goes: "If you think
speculation is easy, it is because you are ignorant about the risks".
If you take the risks with Mike&GavCoin, that would be fine, but you
are about to take them with community-owned Bitcoin and Other People's
Money!

You are causing a lot of stress, unnecessarily, and grave concern
surrounds your proposed renegade action. You can dissolve the threat:
those players to whom you have made promises can be appeased and
eventually get most of what they need from this FOSS project. The
developers whom you are railroading to get your way, and the way in
which you are doing it, is about to cause a schism that will expand
outward from this community.

You may accuse the community for being antagonistic to you, and
therefore uncooperative, but it is plain to see that your bullheaded
manner eventually generates antagonism wherever you go. Taking Bitcoin
away from this community, in anger, won't solve the problem and will
be like killing the goose that lays the golden eggs.

If an individual in an objectively agreed-to FOSS-modelled
collaborative project has the audacity to threaten his peers and the
world with a unilateral hard-fork despite majority objection and a
probability distribution that includes terminal risks and unintended
consequences, then what would an impartial outsider think? Some of
their thoughts would include that the antagonist could be acting in
self-interest, or may be a paid actor, or worse, a saboteur. What
would they advise? Stop that individual, at once!

Bitcoin is a Free and Open Source Software project that serves as
flagship for the blockchain. It has a payment network but the key
benefits are censorship resistance and trustless decentralization.
There is protocol for how change is effected in a FOSS project. For
the sake of everything that is good and useful in Bitcoin, reconsider
your dangerous plan and its intended and unintended consequences. Put
your feet back on the ground, return to the fold and let the
collaborative FOSS model, and the skills available here, gradually
scale Bitcoin to your (and all our) grand vision.

Venzen Khaosan


On 06/15/2015 04:56 PM, Mike Hearn wrote:
> Hi Adam,
> 
> Provisional answers below!
> 
> - Are you releasing a BIP for that proposal for review?
> 
> 
> The work splits like this:
> 
> * Gavin is writing the code and I think a BIP as well
> 
> * I will review both and mostly delegate to Gavin's good taste
> around the details, unless there is some very strong disagreement.
> But that seems unlikely.
> 
> * I have been handling gitian and the patch rebases, the code
> signing and so on, so far. I've also been doing some work to setup
> the basic infrastructure of the project (website etc).
> 
> 
> - If the reviewers all say NACK will you take on board their 
> suggestions?
> 
> 
> Feedback will be read. There are no NACKS in Bitcoin XT. Patch
> requests aren't scored in any way. The final decision rests with
> the maintainer as in ~all open source projects.
> 
> 
> 
> - On the idea of a non-consensus hard-fork at all, I think we can 
> assume you will get a row of NACKs.  Can you explain your
> rationale for going ahead anyway?  The risks are well understood
> and enormous.
> 
> 
> Yes, I have been working on an article that explains how we got to
> this point from my perspective. It is quite long, but only because
> I want it to be readable for people who weren't following the
> debate.
> 
> Anyway, I think I've laid out the gist of it over and over again,
> but to summarise:
> 
> If Bitcoin runs out of capacity *it will break and many of our
> users will leave*. That is not an acceptable outcome for myself or
> the many other wallet, service and merchant developers who have
> worked for years to build an ecosystem around this protocol.
> 
> 
> 
> - How do you propose to deal with the extra risks that come from 
> non-consensus hard-forks?  Hard-forks themselves are quite risky,
> but non-consensus ones are extremely dangerous for consensus.
> 
> 
> The approach is the same for other forks. Voting via block versions
> and then when there's been >X% for Y time units the 1mb limit is 
> lifted/replaced.
> 
> 
> 
> 
> - If you're going it alone as it were, are you proposing that you
> will personally maintain bitcoin-XT?  Or do you have a plan to
> later hand over maintenance to the bitcoin developers?
> 
> 
> Good question!  I have various thoughts on this, but let's wait and
> see what happens first. Perhaps the new chain won't get the
> majority on it.
> 
> In the event that the >1mb chain does eventually win, I would
> expect Core to apply the patch and rejoin the consensus rather than
> lose all its users. That would take XT back to being a fairly small
> patchset to improve the network protocol.
> 
> 
> 
> - Do you have contingency plans for what to do if the
> non-consensus hard-fork goes wrong and $3B is lost as a result?
> 
> 
> Where did you get the $3B figure from? The fork either doesn't
> happen, or it happens after quite a long period of people knowing
> it's going to happen - for example because their full node is
> printing "You need to upgrade" messages due to seeing the larger
> block version, or because they read the news, or because they heard
> about it via some other mechanisms.
> 
> Let me flip the question around. Do you have a contingency plan if 
> Bitcoin runs out of capacity and significant user disruption occurs
> that results in exodus, followed by fall in BTC price? The only one
> I've seen is "we can perform an emergency hard fork in a few
> weeks"!
> 
> 
> 
> As you can probably tell I think a unilateral fork without
> wide-scale consensus from the technical and business communities is
> a deeply inadvisable.
> 
> 
> Gavin and I have been polling many key players in the ecosystem.
> The consensus you seek does exist. All wallet developers (except
> Lawrence), all the major exchanges, all the major payment
> processors and many of the major mining pools want to see the limit
> lifted (I haven't been talking to pools, Gavin has).
> 
> This notion that the change has no consensus is based on you
> polling the people directly around you and people who like to spend
> all day on this mailing list. It's not an accurate reflection of
> the wider Bitcoin community and that is one of the leading reasons
> there is going to be a fork. A small number of people have been
> flatly ignoring LOTS of highly technical and passionate developers
> who have written vast amounts of code, built up the Bitcoin user
> base, designed hardware and software, and yes built companies.
> 
> How do you think that makes Bitcoin Core look to the rest of the
> Bitcoin world? How much confidence does that give people?
> 
> 
> 
> Of the overall process, I think you can agree we should not be
> making technical decisions with this level of complexity and
> consensus risk with financial implications of this magnitude under
> duress of haste?
> 
> 
> This debate will never end until a fork makes it irrelevant. There
> is no process for ending it, despite me begging Wladimir to make
> one.
> 
> And there is no haste. We have been debating the block size limit
> for _years_. We have known it must be lifted for _years_. I kicked
> off this current round of debates after realising that Wladimir's
> release timeline wouldn't allow a block size limit to be released
> before the end of the year. The reason we're talking about it now
> and not next year is exactly to ensure there is plenty of time.
> 
> 
> 
> 
> I can sincerely assure you everyone does want to scale bitcoin and 
> shares your long term objective on that
> 
> 
> I really wish you were right, and I definitely feel you are one of
> the more reasonable ones Adam. But the overwhelming impression I
> get from a few others here is that no, they don't want to scale
> Bitcoin. They already decided it's a technological dead end. They
> want to kick end users out in order to "incentivise" (force) the
> creation of some other alternative, claiming that it's still
> Bitcoin whilst ignoring basic details ... like the fact that no
> existing wallets or services would work.
> 
> Scaling Bitcoin can only be achieved by letting it grow, and
> letting people tackle each bottleneck as it arises at the right
> times. Not by convincing ourselves that success is failure.
> 
> 
> 
> ------------------------------------------------------------------------------
>
> 
> 
> 
> _______________________________________________ Bitcoin-development
> mailing list Bitcoin-development at lists.sourceforge.net 
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From 165318903 at qq.com  Tue Jun 16 05:30:05 2015
From: 165318903 at qq.com (Potter QQ)
Date: Tue, 16 Jun 2015 13:30:05 +0800
Subject: [Bitcoin-development] The Bitcoin Node Market
In-Reply-To: <a9e2e033c786fb7f99bcf7505ad45f21@riseup.net>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CA+c4Zoy6U9RXH3Qw15sXXnaeYL-9PFbnTp=VLAJsvpC_zoAK_A@mail.gmail.com>
	<CAEY8wq41ftFA1ObyUWiRGOgebwqDCAw_j+hU6_wfcXv5GSZaJw@mail.gmail.com>
	<201506160341.10994.luke@dashjr.org>
	<CAEY8wq4SOddGUJNqkrdhhfQEn4tXehCWiifk-P=PYUdfFcXFTQ@mail.gmail.com>
	<a9e2e033c786fb7f99bcf7505ad45f21@riseup.net>
Message-ID: <93C95467-E3A6-4247-9284-699A99B34904@qq.com>

No,Bitcoin 


???? iPhone

> ? 2015?6?16??13:28?justusranvier at riseup.net ???
> 
>> On 2015-06-16 03:49, Kevin Greene wrote:
>> ?Hah, fair enough, there is no such thing as the "right" way to do
>> anything. But I still think punishing users who use SPV wallets is ?a
>> less-than-ideal way to incentive people to run full nodes. Right now 
>> SPV is
>> the best way that exists for mobile phones to participate in the 
>> network in
>> a decentralized way. This proposal makes the user experience for mobile
>> wallets a little more confusing and annoying.
> 
> Suppose a billion mobile phones wanted to run SPV wallets tomorrow. Who 
> would provide the nodes they would need connect to? The decentralization 
> fairy?
> 
> There's absolutely no reason that paying for connectivity would be any 
> more confusing or annoying than transaction fees are.
> 
> If some full nodes in the network started offering paid connection 
> slots, that would just mean that users who checked the "pay subscription 
> fee" box in their wallet configuration would have an easier time 
> connecting than the users who did't, just like how your transaction 
> might eventually get mined without a fee but paying one makes it faster 
> and more probable.
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinf



From marcel at jamin.net  Tue Jun 16 06:09:39 2015
From: marcel at jamin.net (Marcel Jamin)
Date: Tue, 16 Jun 2015 08:09:39 +0200
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <557FB198.7080905@mail.bihthai.net>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<557FB198.7080905@mail.bihthai.net>
Message-ID: <CAAUq486pFWJaOK0NOSmV41ofu=a7_kzM-c0SCgtnvXfHwx6F5w@mail.gmail.com>

> Mike Hearn and Gavin Andresen do not own Bitcoin and, emphatically,
you cannot have it.

Neither do you or anyone else.

> There is protocol for how change is effected in a FOSS project.

And it allows the minority to hold the majority hostage.

> If you take the risks with Mike&GavCoin, that would be fine, but you are
about to take them with community-owned Bitcoin and Other People's Money!

The same can be said about the other camp.

BitcoinXT is not going to fork the chain on a specific date no matter what.
People will be able to vote via block versions and once a sufficient
majority supports the extensions, everyone else will have a grace period to
upgrade. Only after that is a very small minority at risk of losing money.

That being said, I'd rather see a solution that everyone agrees on. My
personal opinion/hope is that Mike and Gavin are just applying pressure
where it's needed. But in the end, they can do whatever they want if they
have the necessary support. Permissionless innovation is one of bitcoins
virtues. In the end, only adoption will decide what bitcoin is and isn't.

2015-06-16 7:18 GMT+02:00 Venzen <venzen at mail.bihthai.net>:

> Mike Hearn,
>
> In the light of your responses to Adam Back's questions, below, I feel
> it is time to speak up because what I now understand, and is implied,
> is that Mike Hearn and Gavin Andresen have planned and deployed the
> infrastructure for a Bitcoin hard-fork and intend to action it despite
> majority opposition.  http://xtnodes.com/
>
> I'll try to keep it brief:
>
> Mike Hearn, you should cease your activity of a unilateral hard-fork
> immediately. You are doing untold damage by breaking FOSS governance
> protocol requiring methodical collaborative work and due process of
> change implementation by consensus. Your actions are bad for the
> Bitcoin project and its ideals, disrespectful of your peers and years
> of their passionate hard work, and dangerous for Bitcoin in the
> marketplace and bitcoin in peoples' wallets.
>
> Mike Hearn and Gavin Andresen do not own Bitcoin and, emphatically,
> you cannot have it. Your hard-fork is tantamount to theft and you and
> your collaborators will effectively ex-communicate yourselves from
> this project and community. It appears that you are consciously trying
> to usurp ownership and maintenance of Bitcoin. As if it is that easy!
> You clearly do not comprehend the array of risks - especially the
> unanticipated ones. As the market saying goes: "If you think
> speculation is easy, it is because you are ignorant about the risks".
> If you take the risks with Mike&GavCoin, that would be fine, but you
> are about to take them with community-owned Bitcoin and Other People's
> Money!
>
> You are causing a lot of stress, unnecessarily, and grave concern
> surrounds your proposed renegade action. You can dissolve the threat:
> those players to whom you have made promises can be appeased and
> eventually get most of what they need from this FOSS project. The
> developers whom you are railroading to get your way, and the way in
> which you are doing it, is about to cause a schism that will expand
> outward from this community.
>
> You may accuse the community for being antagonistic to you, and
> therefore uncooperative, but it is plain to see that your bullheaded
> manner eventually generates antagonism wherever you go. Taking Bitcoin
> away from this community, in anger, won't solve the problem and will
> be like killing the goose that lays the golden eggs.
>
> If an individual in an objectively agreed-to FOSS-modelled
> collaborative project has the audacity to threaten his peers and the
> world with a unilateral hard-fork despite majority objection and a
> probability distribution that includes terminal risks and unintended
> consequences, then what would an impartial outsider think? Some of
> their thoughts would include that the antagonist could be acting in
> self-interest, or may be a paid actor, or worse, a saboteur. What
> would they advise? Stop that individual, at once!
>
> Bitcoin is a Free and Open Source Software project that serves as
> flagship for the blockchain. It has a payment network but the key
> benefits are censorship resistance and trustless decentralization.
> There is protocol for how change is effected in a FOSS project. For
> the sake of everything that is good and useful in Bitcoin, reconsider
> your dangerous plan and its intended and unintended consequences. Put
> your feet back on the ground, return to the fold and let the
> collaborative FOSS model, and the skills available here, gradually
> scale Bitcoin to your (and all our) grand vision.
>
> Venzen Khaosan
>
>
> On 06/15/2015 04:56 PM, Mike Hearn wrote:
> > Hi Adam,
> >
> > Provisional answers below!
> >
> > - Are you releasing a BIP for that proposal for review?
> >
> >
> > The work splits like this:
> >
> > * Gavin is writing the code and I think a BIP as well
> >
> > * I will review both and mostly delegate to Gavin's good taste
> > around the details, unless there is some very strong disagreement.
> > But that seems unlikely.
> >
> > * I have been handling gitian and the patch rebases, the code
> > signing and so on, so far. I've also been doing some work to setup
> > the basic infrastructure of the project (website etc).
> >
> >
> > - If the reviewers all say NACK will you take on board their
> > suggestions?
> >
> >
> > Feedback will be read. There are no NACKS in Bitcoin XT. Patch
> > requests aren't scored in any way. The final decision rests with
> > the maintainer as in ~all open source projects.
> >
> >
> >
> > - On the idea of a non-consensus hard-fork at all, I think we can
> > assume you will get a row of NACKs.  Can you explain your
> > rationale for going ahead anyway?  The risks are well understood
> > and enormous.
> >
> >
> > Yes, I have been working on an article that explains how we got to
> > this point from my perspective. It is quite long, but only because
> > I want it to be readable for people who weren't following the
> > debate.
> >
> > Anyway, I think I've laid out the gist of it over and over again,
> > but to summarise:
> >
> > If Bitcoin runs out of capacity *it will break and many of our
> > users will leave*. That is not an acceptable outcome for myself or
> > the many other wallet, service and merchant developers who have
> > worked for years to build an ecosystem around this protocol.
> >
> >
> >
> > - How do you propose to deal with the extra risks that come from
> > non-consensus hard-forks?  Hard-forks themselves are quite risky,
> > but non-consensus ones are extremely dangerous for consensus.
> >
> >
> > The approach is the same for other forks. Voting via block versions
> > and then when there's been >X% for Y time units the 1mb limit is
> > lifted/replaced.
> >
> >
> >
> >
> > - If you're going it alone as it were, are you proposing that you
> > will personally maintain bitcoin-XT?  Or do you have a plan to
> > later hand over maintenance to the bitcoin developers?
> >
> >
> > Good question!  I have various thoughts on this, but let's wait and
> > see what happens first. Perhaps the new chain won't get the
> > majority on it.
> >
> > In the event that the >1mb chain does eventually win, I would
> > expect Core to apply the patch and rejoin the consensus rather than
> > lose all its users. That would take XT back to being a fairly small
> > patchset to improve the network protocol.
> >
> >
> >
> > - Do you have contingency plans for what to do if the
> > non-consensus hard-fork goes wrong and $3B is lost as a result?
> >
> >
> > Where did you get the $3B figure from? The fork either doesn't
> > happen, or it happens after quite a long period of people knowing
> > it's going to happen - for example because their full node is
> > printing "You need to upgrade" messages due to seeing the larger
> > block version, or because they read the news, or because they heard
> > about it via some other mechanisms.
> >
> > Let me flip the question around. Do you have a contingency plan if
> > Bitcoin runs out of capacity and significant user disruption occurs
> > that results in exodus, followed by fall in BTC price? The only one
> > I've seen is "we can perform an emergency hard fork in a few
> > weeks"!
> >
> >
> >
> > As you can probably tell I think a unilateral fork without
> > wide-scale consensus from the technical and business communities is
> > a deeply inadvisable.
> >
> >
> > Gavin and I have been polling many key players in the ecosystem.
> > The consensus you seek does exist. All wallet developers (except
> > Lawrence), all the major exchanges, all the major payment
> > processors and many of the major mining pools want to see the limit
> > lifted (I haven't been talking to pools, Gavin has).
> >
> > This notion that the change has no consensus is based on you
> > polling the people directly around you and people who like to spend
> > all day on this mailing list. It's not an accurate reflection of
> > the wider Bitcoin community and that is one of the leading reasons
> > there is going to be a fork. A small number of people have been
> > flatly ignoring LOTS of highly technical and passionate developers
> > who have written vast amounts of code, built up the Bitcoin user
> > base, designed hardware and software, and yes built companies.
> >
> > How do you think that makes Bitcoin Core look to the rest of the
> > Bitcoin world? How much confidence does that give people?
> >
> >
> >
> > Of the overall process, I think you can agree we should not be
> > making technical decisions with this level of complexity and
> > consensus risk with financial implications of this magnitude under
> > duress of haste?
> >
> >
> > This debate will never end until a fork makes it irrelevant. There
> > is no process for ending it, despite me begging Wladimir to make
> > one.
> >
> > And there is no haste. We have been debating the block size limit
> > for _years_. We have known it must be lifted for _years_. I kicked
> > off this current round of debates after realising that Wladimir's
> > release timeline wouldn't allow a block size limit to be released
> > before the end of the year. The reason we're talking about it now
> > and not next year is exactly to ensure there is plenty of time.
> >
> >
> >
> >
> > I can sincerely assure you everyone does want to scale bitcoin and
> > shares your long term objective on that
> >
> >
> > I really wish you were right, and I definitely feel you are one of
> > the more reasonable ones Adam. But the overwhelming impression I
> > get from a few others here is that no, they don't want to scale
> > Bitcoin. They already decided it's a technological dead end. They
> > want to kick end users out in order to "incentivise" (force) the
> > creation of some other alternative, claiming that it's still
> > Bitcoin whilst ignoring basic details ... like the fact that no
> > existing wallets or services would work.
> >
> > Scaling Bitcoin can only be achieved by letting it grow, and
> > letting people tackle each bottleneck as it arises at the right
> > times. Not by convincing ourselves that success is failure.
> >
> >
> >
> >
> ------------------------------------------------------------------------------
> >
> >
> >
> >
> > _______________________________________________ Bitcoin-development
> > mailing list Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/5f789e97/attachment.html>

From jtimon at jtimon.cc  Tue Jun 16 07:10:17 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Tue, 16 Jun 2015 09:10:17 +0200
Subject: [Bitcoin-development] [RFC] Canonical input and output ordering
 in transactions
In-Reply-To: <87eglcelf3.fsf@rustcorp.com.au>
References: <87k2vhfnx9.fsf@rustcorp.com.au>
	<CAAS2fgRgWZX_O_2O1bgdFd_04xVp5Lnpw4hf=v6RSTXmsbdzPQ@mail.gmail.com>
	<87r3pdembs.fsf@rustcorp.com.au>
	<CAAS2fgTY5cqwj5XuKtkD8Z8N1vF=PZMba8EtGkbWnEackOcN8Q@mail.gmail.com>
	<CAOG=w-tJjzrR_REJOShULfSO=T3ueHko-oQHdhqMCdZD0G_BDA@mail.gmail.com>
	<87eglcelf3.fsf@rustcorp.com.au>
Message-ID: <CABm2gDpBn744G0AbWDYj5aXQ6XbRzfnLpS=3z6NoWosaseFAWQ@mail.gmail.com>

On Jun 15, 2015 11:43 PM, "Rusty Russell" <rusty at rustcorp.com.au> wrote:

> Though Peter Todd's more general best-effort language might make more
> sense.  It's not like you can hide an OP_RETURN transaction to make it
> look like something else, so that transaction not going to be
> distinguished by non-canonical ordering.

What about commitments that don't use op_return (ie pay2contract
commitments)?

In any case, if the motivation is ordering in multi-party transactions
there should be ways to do it without any consequences for other
transaction types' privacy. For example you could have a deterministic
method that depends on a random seed all parties in the transaction
previously share. That way the ordering is deterministic for all parties
involved in the transaction (which can use whatever channel they're using
to send the parts to also send this random seed) while at the same time the
order looks random (or at least not cannonical in a recognisable way) to
everyone else.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/0ce9341e/attachment.html>

From voisine at gmail.com  Tue Jun 16 07:55:35 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Tue, 16 Jun 2015 00:55:35 -0700
Subject: [Bitcoin-development] The Bitcoin Node Market
In-Reply-To: <a9e2e033c786fb7f99bcf7505ad45f21@riseup.net>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CA+c4Zoy6U9RXH3Qw15sXXnaeYL-9PFbnTp=VLAJsvpC_zoAK_A@mail.gmail.com>
	<CAEY8wq41ftFA1ObyUWiRGOgebwqDCAw_j+hU6_wfcXv5GSZaJw@mail.gmail.com>
	<201506160341.10994.luke@dashjr.org>
	<CAEY8wq4SOddGUJNqkrdhhfQEn4tXehCWiifk-P=PYUdfFcXFTQ@mail.gmail.com>
	<a9e2e033c786fb7f99bcf7505ad45f21@riseup.net>
Message-ID: <CACq0ZD5uYikAfVuep8XCgEs-53NbF-SYhvm4qneZsEQdgd=6rw@mail.gmail.com>

> Suppose a billion mobile phones wanted to run SPV wallets tomorrow. Who
> would provide the nodes they would need connect to?

The SPV wallet author would if they wanted their wallet to function.


Aaron Voisine
co-founder and CEO
breadwallet.com

On Mon, Jun 15, 2015 at 10:28 PM, <justusranvier at riseup.net> wrote:

> On 2015-06-16 03:49, Kevin Greene wrote:
> > ?Hah, fair enough, there is no such thing as the "right" way to do
> > anything. But I still think punishing users who use SPV wallets is ?a
> > less-than-ideal way to incentive people to run full nodes. Right now
> > SPV is
> > the best way that exists for mobile phones to participate in the
> > network in
> > a decentralized way. This proposal makes the user experience for mobile
> > wallets a little more confusing and annoying.
>
> Suppose a billion mobile phones wanted to run SPV wallets tomorrow. Who
> would provide the nodes they would need connect to? The decentralization
> fairy?
>
> There's absolutely no reason that paying for connectivity would be any
> more confusing or annoying than transaction fees are.
>
> If some full nodes in the network started offering paid connection
> slots, that would just mean that users who checked the "pay subscription
> fee" box in their wallet configuration would have an easier time
> connecting than the users who did't, just like how your transaction
> might eventually get mined without a fee but paying one makes it faster
> and more probable.
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/1f849091/attachment.html>

From benjamin.l.cordes at gmail.com  Tue Jun 16 09:21:11 2015
From: benjamin.l.cordes at gmail.com (Benjamin)
Date: Tue, 16 Jun 2015 11:21:11 +0200
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <CAAUq486pFWJaOK0NOSmV41ofu=a7_kzM-c0SCgtnvXfHwx6F5w@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<557FB198.7080905@mail.bihthai.net>
	<CAAUq486pFWJaOK0NOSmV41ofu=a7_kzM-c0SCgtnvXfHwx6F5w@mail.gmail.com>
Message-ID: <CAOoPuRanV+416LpKbiX_PhCF3zcZt+acFM0+u-W3+LkkZFk8KQ@mail.gmail.com>

"And it allows the minority to hold the majority hostage"

The Bitcoin protocol has no definitions about developer consensus .
The reference to FOSS is quite arbitrary. The alternative of lobbying
companies is equally indeterminate and arbitrary. One of the core
problem is that you can't poll users about features, and even if one
could users are unlikely to be able to make design decisions about the
system. Voting is a quite imperfect mechanism. IF there would be a
hardfork vote of this kind, at least each party should lay out a
longterm plan and proposal. Mike and Gavin don't have any plans to
implement new scaling facilities and Lightening is not a coherent
proposal. In effect this fork battle would not be part of a BIP
process, but a vote on a longterm plan/architecture.

On Tue, Jun 16, 2015 at 8:09 AM, Marcel Jamin <marcel at jamin.net> wrote:
>> Mike Hearn and Gavin Andresen do not own Bitcoin and, emphatically,
> you cannot have it.
>
> Neither do you or anyone else.
>
>> There is protocol for how change is effected in a FOSS project.
>
> And it allows the minority to hold the majority hostage.
>
>> If you take the risks with Mike&GavCoin, that would be fine, but you are
>> about to take them with community-owned Bitcoin and Other People's Money!
>
> The same can be said about the other camp.
>
> BitcoinXT is not going to fork the chain on a specific date no matter what.
> People will be able to vote via block versions and once a sufficient
> majority supports the extensions, everyone else will have a grace period to
> upgrade. Only after that is a very small minority at risk of losing money.
>
> That being said, I'd rather see a solution that everyone agrees on. My
> personal opinion/hope is that Mike and Gavin are just applying pressure
> where it's needed. But in the end, they can do whatever they want if they
> have the necessary support. Permissionless innovation is one of bitcoins
> virtues. In the end, only adoption will decide what bitcoin is and isn't.
>
> 2015-06-16 7:18 GMT+02:00 Venzen <venzen at mail.bihthai.net>:
>>
>> Mike Hearn,
>>
>> In the light of your responses to Adam Back's questions, below, I feel
>> it is time to speak up because what I now understand, and is implied,
>> is that Mike Hearn and Gavin Andresen have planned and deployed the
>> infrastructure for a Bitcoin hard-fork and intend to action it despite
>> majority opposition.  http://xtnodes.com/
>>
>> I'll try to keep it brief:
>>
>> Mike Hearn, you should cease your activity of a unilateral hard-fork
>> immediately. You are doing untold damage by breaking FOSS governance
>> protocol requiring methodical collaborative work and due process of
>> change implementation by consensus. Your actions are bad for the
>> Bitcoin project and its ideals, disrespectful of your peers and years
>> of their passionate hard work, and dangerous for Bitcoin in the
>> marketplace and bitcoin in peoples' wallets.
>>
>> Mike Hearn and Gavin Andresen do not own Bitcoin and, emphatically,
>> you cannot have it. Your hard-fork is tantamount to theft and you and
>> your collaborators will effectively ex-communicate yourselves from
>> this project and community. It appears that you are consciously trying
>> to usurp ownership and maintenance of Bitcoin. As if it is that easy!
>> You clearly do not comprehend the array of risks - especially the
>> unanticipated ones. As the market saying goes: "If you think
>> speculation is easy, it is because you are ignorant about the risks".
>> If you take the risks with Mike&GavCoin, that would be fine, but you
>> are about to take them with community-owned Bitcoin and Other People's
>> Money!
>>
>> You are causing a lot of stress, unnecessarily, and grave concern
>> surrounds your proposed renegade action. You can dissolve the threat:
>> those players to whom you have made promises can be appeased and
>> eventually get most of what they need from this FOSS project. The
>> developers whom you are railroading to get your way, and the way in
>> which you are doing it, is about to cause a schism that will expand
>> outward from this community.
>>
>> You may accuse the community for being antagonistic to you, and
>> therefore uncooperative, but it is plain to see that your bullheaded
>> manner eventually generates antagonism wherever you go. Taking Bitcoin
>> away from this community, in anger, won't solve the problem and will
>> be like killing the goose that lays the golden eggs.
>>
>> If an individual in an objectively agreed-to FOSS-modelled
>> collaborative project has the audacity to threaten his peers and the
>> world with a unilateral hard-fork despite majority objection and a
>> probability distribution that includes terminal risks and unintended
>> consequences, then what would an impartial outsider think? Some of
>> their thoughts would include that the antagonist could be acting in
>> self-interest, or may be a paid actor, or worse, a saboteur. What
>> would they advise? Stop that individual, at once!
>>
>> Bitcoin is a Free and Open Source Software project that serves as
>> flagship for the blockchain. It has a payment network but the key
>> benefits are censorship resistance and trustless decentralization.
>> There is protocol for how change is effected in a FOSS project. For
>> the sake of everything that is good and useful in Bitcoin, reconsider
>> your dangerous plan and its intended and unintended consequences. Put
>> your feet back on the ground, return to the fold and let the
>> collaborative FOSS model, and the skills available here, gradually
>> scale Bitcoin to your (and all our) grand vision.
>>
>> Venzen Khaosan
>>
>>
>> On 06/15/2015 04:56 PM, Mike Hearn wrote:
>> > Hi Adam,
>> >
>> > Provisional answers below!
>> >
>> > - Are you releasing a BIP for that proposal for review?
>> >
>> >
>> > The work splits like this:
>> >
>> > * Gavin is writing the code and I think a BIP as well
>> >
>> > * I will review both and mostly delegate to Gavin's good taste
>> > around the details, unless there is some very strong disagreement.
>> > But that seems unlikely.
>> >
>> > * I have been handling gitian and the patch rebases, the code
>> > signing and so on, so far. I've also been doing some work to setup
>> > the basic infrastructure of the project (website etc).
>> >
>> >
>> > - If the reviewers all say NACK will you take on board their
>> > suggestions?
>> >
>> >
>> > Feedback will be read. There are no NACKS in Bitcoin XT. Patch
>> > requests aren't scored in any way. The final decision rests with
>> > the maintainer as in ~all open source projects.
>> >
>> >
>> >
>> > - On the idea of a non-consensus hard-fork at all, I think we can
>> > assume you will get a row of NACKs.  Can you explain your
>> > rationale for going ahead anyway?  The risks are well understood
>> > and enormous.
>> >
>> >
>> > Yes, I have been working on an article that explains how we got to
>> > this point from my perspective. It is quite long, but only because
>> > I want it to be readable for people who weren't following the
>> > debate.
>> >
>> > Anyway, I think I've laid out the gist of it over and over again,
>> > but to summarise:
>> >
>> > If Bitcoin runs out of capacity *it will break and many of our
>> > users will leave*. That is not an acceptable outcome for myself or
>> > the many other wallet, service and merchant developers who have
>> > worked for years to build an ecosystem around this protocol.
>> >
>> >
>> >
>> > - How do you propose to deal with the extra risks that come from
>> > non-consensus hard-forks?  Hard-forks themselves are quite risky,
>> > but non-consensus ones are extremely dangerous for consensus.
>> >
>> >
>> > The approach is the same for other forks. Voting via block versions
>> > and then when there's been >X% for Y time units the 1mb limit is
>> > lifted/replaced.
>> >
>> >
>> >
>> >
>> > - If you're going it alone as it were, are you proposing that you
>> > will personally maintain bitcoin-XT?  Or do you have a plan to
>> > later hand over maintenance to the bitcoin developers?
>> >
>> >
>> > Good question!  I have various thoughts on this, but let's wait and
>> > see what happens first. Perhaps the new chain won't get the
>> > majority on it.
>> >
>> > In the event that the >1mb chain does eventually win, I would
>> > expect Core to apply the patch and rejoin the consensus rather than
>> > lose all its users. That would take XT back to being a fairly small
>> > patchset to improve the network protocol.
>> >
>> >
>> >
>> > - Do you have contingency plans for what to do if the
>> > non-consensus hard-fork goes wrong and $3B is lost as a result?
>> >
>> >
>> > Where did you get the $3B figure from? The fork either doesn't
>> > happen, or it happens after quite a long period of people knowing
>> > it's going to happen - for example because their full node is
>> > printing "You need to upgrade" messages due to seeing the larger
>> > block version, or because they read the news, or because they heard
>> > about it via some other mechanisms.
>> >
>> > Let me flip the question around. Do you have a contingency plan if
>> > Bitcoin runs out of capacity and significant user disruption occurs
>> > that results in exodus, followed by fall in BTC price? The only one
>> > I've seen is "we can perform an emergency hard fork in a few
>> > weeks"!
>> >
>> >
>> >
>> > As you can probably tell I think a unilateral fork without
>> > wide-scale consensus from the technical and business communities is
>> > a deeply inadvisable.
>> >
>> >
>> > Gavin and I have been polling many key players in the ecosystem.
>> > The consensus you seek does exist. All wallet developers (except
>> > Lawrence), all the major exchanges, all the major payment
>> > processors and many of the major mining pools want to see the limit
>> > lifted (I haven't been talking to pools, Gavin has).
>> >
>> > This notion that the change has no consensus is based on you
>> > polling the people directly around you and people who like to spend
>> > all day on this mailing list. It's not an accurate reflection of
>> > the wider Bitcoin community and that is one of the leading reasons
>> > there is going to be a fork. A small number of people have been
>> > flatly ignoring LOTS of highly technical and passionate developers
>> > who have written vast amounts of code, built up the Bitcoin user
>> > base, designed hardware and software, and yes built companies.
>> >
>> > How do you think that makes Bitcoin Core look to the rest of the
>> > Bitcoin world? How much confidence does that give people?
>> >
>> >
>> >
>> > Of the overall process, I think you can agree we should not be
>> > making technical decisions with this level of complexity and
>> > consensus risk with financial implications of this magnitude under
>> > duress of haste?
>> >
>> >
>> > This debate will never end until a fork makes it irrelevant. There
>> > is no process for ending it, despite me begging Wladimir to make
>> > one.
>> >
>> > And there is no haste. We have been debating the block size limit
>> > for _years_. We have known it must be lifted for _years_. I kicked
>> > off this current round of debates after realising that Wladimir's
>> > release timeline wouldn't allow a block size limit to be released
>> > before the end of the year. The reason we're talking about it now
>> > and not next year is exactly to ensure there is plenty of time.
>> >
>> >
>> >
>> >
>> > I can sincerely assure you everyone does want to scale bitcoin and
>> > shares your long term objective on that
>> >
>> >
>> > I really wish you were right, and I definitely feel you are one of
>> > the more reasonable ones Adam. But the overwhelming impression I
>> > get from a few others here is that no, they don't want to scale
>> > Bitcoin. They already decided it's a technological dead end. They
>> > want to kick end users out in order to "incentivise" (force) the
>> > creation of some other alternative, claiming that it's still
>> > Bitcoin whilst ignoring basic details ... like the fact that no
>> > existing wallets or services would work.
>> >
>> > Scaling Bitcoin can only be achieved by letting it grow, and
>> > letting people tackle each bottleneck as it arises at the right
>> > times. Not by convincing ourselves that success is failure.
>> >
>> >
>> >
>> >
>> > ------------------------------------------------------------------------------
>> >
>> >
>> >
>> >
>> > _______________________________________________ Bitcoin-development
>> > mailing list Bitcoin-development at lists.sourceforge.net
>> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >
>>
>>
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From tier.nolan at gmail.com  Tue Jun 16 11:01:21 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Tue, 16 Jun 2015 12:01:21 +0100
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <557FB198.7080905@mail.bihthai.net>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<557FB198.7080905@mail.bihthai.net>
Message-ID: <CAE-z3OVGYmXJa3crAPX=PtJdmrCqq3T5akkxHbvMm2nCE4968w@mail.gmail.com>

On Tue, Jun 16, 2015 at 6:18 AM, Venzen <venzen at mail.bihthai.net> wrote:

> Mike Hearn, you should cease your activity of a unilateral hard-fork
> immediately. You are doing untold damage by breaking FOSS governance
> protocol requiring methodical collaborative work and due process of
> change implementation by consensus.


The main principle of open source software is that anyone can fork the code
if they wish.  They don't do it very often, but they can.

This means that if a project dies, someone can take it over.  If some of
the devs want to take things in a different direction, they can.  Users can
decide which version they prefer.

The software itself is what is valuable.

In the case of bitcoin, the blockchain is also (very) valuable.  Simply
splitting into two projects is not possible for bitcoin.

Otherwise, the discussion would have ended already, those who want a larger
block would simply create a fork of the software and create an alt chain.

The fundamental problem is that there is no clear way to make this decision
once and for all.

An agreed set of rules for a hard fork would be a nice thing to have, but
it is hard to have rules about how to change fundamental rules.

I think using the soft fork rules (maybe with a higher threshold than 95%)
plus a delay is a reasonable compromise on hard fork rules.

Even then, it would be nice to include users of the software too.  Peter
Todd's suggestion of encoding a vote in transactions is a step in that
direction (YES transactions in YES blocks and NO transactions in NO blocks).


> Mike Hearn and Gavin Andresen do not own Bitcoin and, emphatically,
> you cannot have it.


Nobody owns it, so there is no court of final appeal.

If miners vote >95% for the fork, users could still refuse to accept the
change.

Maybe the sequence could be

version 3 blocks means no opinion
version 4 blocks means NO to fork
version 5 blocks means YES to fork & YES transactions
version 6 blocks means YES to fork & NO transactions

Transaction matching rule:

version 1, 2, 3 transactions means no opinion (can be in any block)
version 4 transactions means YES to fork (cannot be in version 6 blocks)
version 5 transactions means NO to fork (cannot be in version 5 blocks)

Rules
0) if 750 of the last 1000 blocks are version 5 or 6 blocks, tx matching
rule activates for version 5 & 6 blocks
1) if 950 of the last 1000 blocks are version 5 or 6 blocks, then version 4
blocks are rejected
2) if 750 of the last 1000 blocks are version 4 blocks, then version 5 & 6
blocks are rejected
3) if 750 of the last 1000 blocks are version 5 transactions and 950 of the
last 1000 are version 5 or 6, then the fork is accepted
4) 25,000 blocks after 3 is accepted, hard fork actually takes effect

Once miner acceptance is achieved, then only version 5 and 6 blocks are
allowed.  The split between version 5 and 6 blocks should be roughly in
proportion to the number of transactions of each kind produced.

75% of miners can kill the fork by producing version 4 blocks, but 95% is
needed for acceptance.  Even then, transaction volume needs to support the
fork.  I think 75% is reasonable here.  (95% of miners and 75% of
merchants/users is a pretty strong majority).


> You may accuse the community for being antagonistic to you, and
> therefore uncooperative, but it is plain to see that your bullheaded
> manner eventually generates antagonism wherever you go. Taking Bitcoin
> away from this community, in anger, won't solve the problem and will
> be like killing the goose that lays the golden eggs.
>

They are still suggesting some kind of fork threshold process (or at least
that is what is being suggested)

If their system requires 95% miner approval, they aren't taking unilateral
action.  Miners are though if they vote in favour.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/382e07b0/attachment.html>

From mike at plan99.net  Tue Jun 16 11:20:34 2015
From: mike at plan99.net (Mike Hearn)
Date: Tue, 16 Jun 2015 13:20:34 +0200
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <CABaSBawXZDcyR96g4hBNAiFRDpTcUJX+bMXyqGeuY5wVm4k1KQ@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
	<CANEZrP148U0V7bU-u0tOTk2xWwq5wy-yU-jk805DcU_3cBHtnw@mail.gmail.com>
	<CABaSBawXZDcyR96g4hBNAiFRDpTcUJX+bMXyqGeuY5wVm4k1KQ@mail.gmail.com>
Message-ID: <CANEZrP2USM4pT1qFV28O2usPaBbOF6NiaXpEdACztCi1ZTwx7A@mail.gmail.com>

Hi Bryan,

Specifically, when Adam mentioned your conversations with non-technical
> people, he did not mean "Mike has talked with people who have possibly not
> made pull requests to Bitcoin Core, so therefore Mike is a non-programmer".
>

Yes, my comment was prickly and grumpy. No surprises, I did not sleep well
last night.

I am upset about this constant insistence from Adam, Gregory and others
that the "technical community" or "technical majority" agree with them and
anyone who doesn't is "non technical" or "not a contributor" or not an
expert or not had things properly explained to them.

This is not true and needs to stop. Gavin and I have both been working on
Bitcoin in substantial ways for longer than Gregory and Adam have been in
the community at all. We are extremely technical, as are many of the people
who want us to release XT+larger blocks. We cannot make progress in any
kind of negotiation if one side constantly blows off the other and refuses
to take anything they say seriously, which has been a feature of this
"debate" from the start.

In contrast Gavin and I have written vast amounts of analysis on the
concerns raised by larger blocks. So many hours were spent, we could
probably fill a small book by now. We have carefully read and addressed
*dozens* of points raised by the 1mb camp. We have also done our best to
open this debate to the whole community.

So it would be nice if the people who are so keen on 1mb blocks show the
same respect to us.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/15732844/attachment.html>

From mike at plan99.net  Tue Jun 16 11:29:31 2015
From: mike at plan99.net (Mike Hearn)
Date: Tue, 16 Jun 2015 13:29:31 +0200
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <CALx=ga7axVzUvpUd5Fvr=UruzUZWhXqJ7ibCEzjrRC-58gSWjw@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
	<CANEZrP148U0V7bU-u0tOTk2xWwq5wy-yU-jk805DcU_3cBHtnw@mail.gmail.com>
	<CABaSBawXZDcyR96g4hBNAiFRDpTcUJX+bMXyqGeuY5wVm4k1KQ@mail.gmail.com>
	<CALx=ga7axVzUvpUd5Fvr=UruzUZWhXqJ7ibCEzjrRC-58gSWjw@mail.gmail.com>
Message-ID: <CANEZrP1c9LHcEOpBPjBhRY06vHn_6oQ4ndydS1gV109FhKLF4g@mail.gmail.com>

>
> "How do you plan to deal with security & incident response for the
> duration you describe where you will have control while you are deploying
> the unilateral hard-fork and being in sole maintainership control?"
>

How do we plan to deal with security & incident response - exactly the same
way as before. Remember that XT is basically Core plus a few patches.

Gavin and myself are both on the bitcoin-security mailing list and have
been for years. Both of us have experience of responding to very serious
and tight-deadline security incidents, for example, the accidental bdb hard
fork and (in my case) when we discovered that Android phones had so little
entropy in them that different devices were actually generating the same
keys!

That one required co-ordinated crash rollouts of multiple wallets across
the Bitcoin ecosystem because there was a parallel investigation into key
collisions taking place in an open forum and they were not far from
discovering the truth about how badly the Android RNG was broken   (I knew
because at the time I had access to the Google internal Android bug
tracker). I organised the whole thing.

So I think we'll manage. But I don't expect things to exist in a state of
disjointness for very long. XT will rebase on top of Core and follow it's
releases for as long as there seems to be interest in bigger blocks and as
long as I have the time/energy/interest. If the >1mb chain wins then Core
will have to adopt the new ruleset or simply stop being relevant, as it
will have no users. That wouldn't make much sense.

Now, there have been concerns raised that a hard fork is unbelievably
risky, the sky will fall, the value of Bitcoin will drop to zero, etc. I
don't believe it's anywhere near that risky. The patch Gavin is working on
requires both a miner majority *and* also has a date trigger in it. Much
like previous forks, in fact. So nobody should be taken by surprise if/when
bigger blocks appear, because it will have been known for a long time
beforehand that there was sufficiently strong consensus, there will have
been messages printed to the node logs, announcements in various places and
so on.

Does that help clear things up?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/abf446cc/attachment.html>

From kalle at rosenbaum.se  Tue Jun 16 12:12:49 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Tue, 16 Jun 2015 14:12:49 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <557FB36B.1030902@thinlink.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
	<CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>
	<CAPg+sBiWykR6RaHhbyYQbL=A5t1TmHgEmS_sC7jj9d3SUTMO9g@mail.gmail.com>
	<CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>
	<CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>
	<557FB36B.1030902@thinlink.com>
Message-ID: <CAPswA9xYoNCW8wRMC9cVDQ5Ww-L5J+pCqom5YC5-hzu9ggW8pw@mail.gmail.com>

2015-06-16 7:26 GMT+02:00 Tom Harding <tomh at thinlink.com>:
>
> Kalle goes to some trouble to describe how merchants need to ensure that
> they only accept a PoP provided as a response to their challenge.
>

Do you mean that it will be hard to explain to merchants that they
must check the nonce in the PoP so that it matches the nonce in the
pop request? I think not, this is a commonly used pattern that anyone
should be able to grasp. Anyway, merchants will probably use a library
(though yet non-existing) for PoP, that will hide the gory details. I
also think that payment providers may want to add PoP to their
offering to customers (merchants).

Regards,
/Kalle

>
>
> On 6/15/2015 3:00 AM, Pieter Wuille wrote:
>
> I did misunderstand that. That changes things significantly.
>
> However, having paid is not the same as having had access to the input
> coins. What about shared wallets or coinjoin?
>
> Also, if I understand correctly, there is no commitment to anything you're
> trying to say about the sender? So once I obtain a proof-of-payment from you
> about something you paid, I can go claim that it's mine?
>
> Why does anyone care who paid? This is like walking into a coffeshop,
> noticing I don't have money with me, let me friend pay for me, and then have
> the shop insist that I can't drink it because I'm not the buyer.
>
> Track payments, don't try to assign identities to payers.
>
> On Jun 15, 2015 11:35 AM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:
>>
>> Hi Pieter!
>>
>> It is intended to be a proof that you *have paid* for something. Not
>> that you have the intent to pay for something. You cannot use PoP
>> without a transaction to prove.
>>
>> So, yes, it's just a proof of access to certain coins that you no longer
>> have.
>>
>> Maybe I don't understand you correctly?
>>
>> /Kalle
>>
>> 2015-06-15 11:27 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
>> > Now that you have removed the outputs, I don't think it's even a intent
>> > of
>> > payment, but just a proof of access to certain coins.
>> >
>> > On Jun 15, 2015 11:24 AM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:
>> >>
>> >> Hi all!
>> >>
>> >> I have made the discussed changes and updated my implementation
>> >> (https://github.com/kallerosenbaum/poppoc) accordingly. These are the
>> >> changes:
>> >>
>> >> * There is now only one output, the "pop output", of value 0.
>> >> * The sequence number of all inputs of the PoP must be set to 0. I
>> >> chose to set it to 0 for all inputs for simplicity.
>> >> * The lock_time of the PoP must be set to 499999999 (max block height
>> >> lock
>> >> time).
>> >>
>> >> The comments so far has been mainly positive or neutral. Are there any
>> >> major objections against any of the two proposals? If not, I will ask
>> >> Gregory Maxwell to assign them BIP numbers.
>> >>
>> >> The two BIP proposals can be found at
>> >> https://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP and
>> >> https://github.com/kallerosenbaum/poppoc/wiki/btcpop-scheme-BIP. The
>> >> source
>> >> for the Proof of Payment BIP proposal is also in-lined below.
>> >>
>> >> A number of alternative names have been proposed:
>> >>
>> >> * Proof of Potential
>> >> * Proof of Control
>> >> * Proof of Signature
>> >> * Signatory Proof
>> >> * Popo: Proof of payment origin
>> >> * Pots: Proof of transaction signer
>> >> * proof of transaction intent
>> >> * Declaration of intent
>> >> * Asset-access-and-action-affirmation, AAaAA, or A5
>> >> * VeriBit
>> >> * CertiBTC
>> >> * VBit
>> >> * PayID
>> >>
>> >> Given this list, I still think "Proof of Payment" is the most
>> >> descriptive
>> >> to non-technical people.
>> >>
>> >> Regards,
>> >> Kalle
>> >>
>> >>
>> >> #################################################
>> >> <pre>
>> >>   BIP: <BIP number>
>> >>   Title: Proof of Payment
>> >>   Author: Kalle Rosenbaum <kalle at rosenbaum.se>
>> >>   Status: Draft
>> >>   Type: Standards Track
>> >>   Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>
>> >> </pre>
>> >>
>> >> == Abstract ==
>> >>
>> >> This BIP describes how a wallet can prove to a server that it has the
>> >> ability to sign a certain transaction.
>> >>
>> >> == Motivation ==
>> >>
>> >> There are several scenarios in which it would be useful to prove that
>> >> you
>> >> have paid for something. For example:
>> >>
>> >> * A pre-paid hotel room where your PoP functions as a key to the door.
>> >> * An online video rental service where you pay for a video and watch it
>> >> on
>> >> any device.
>> >> * An ad-sign where you pay in advance for e.g. 2 weeks exclusivity.
>> >> During
>> >> this period you can upload new content to the sign whenever you like
>> >> using
>> >> PoP.
>> >> * Log in to a pay site using a PoP.
>> >> * A parking lot you pay for monthly and the car authenticates itself
>> >> using
>> >> PoP.
>> >> * A lottery where all participants pay to the same address, and the
>> >> winner
>> >> is selected among the transactions to that address. You exchange the
>> >> prize
>> >> for a PoP for the winning transaction.
>> >>
>> >> With Proof of Payment, these use cases can be achieved without any
>> >> personal information (user name, password, e-mail address, etc) being
>> >> involved.
>> >>
>> >> == Rationale ==
>> >>
>> >> Desirable properties:
>> >>
>> >> # A PoP should be generated on demand.
>> >> # It should only be usable once to avoid issues due to theft.
>> >> # It should be able to create a PoP for any payment, regardless of
>> >> script
>> >> type (P2SH, P2PKH, etc.).
>> >> # It should prove that you have enough credentials to unlock all the
>> >> inputs of the proven transaction.
>> >> # It should be easy to implement by wallets and servers to ease
>> >> adoption.
>> >>
>> >> Current methods of proving a payment:
>> >>
>> >> * In BIP0070, the PaymentRequest together with the transactions
>> >> fulfilling
>> >> the request makes some sort of proof. However, it does not meet 1, 2 or
>> >> 4
>> >> and it obviously only meets 3 if the payment is made through BIP0070.
>> >> Also,
>> >> there's no standard way to request/provide the proof. If standardized
>> >> it
>> >> would probably meet 5.
>> >> * Signing messages, chosen by the server, with the private keys used to
>> >> sign the transaction. This could meet 1 and 2 but probably not 3. This
>> >> is
>> >> not standardized either. 4 Could be met if designed so.
>> >>
>> >> If an input script type is P2SH, any satisfying script should do, just
>> >> as
>> >> if it was a payment. For M-of-N multisig scripts, that would mean that
>> >> any
>> >> set of M keys should be sufficient, not neccesarily the same set of M
>> >> keys
>> >> that signed the transaction. This is important because strictly
>> >> demanding
>> >> the same set of M keys would defeat the purpose of a multisig address.
>> >>
>> >> == Specification ==
>> >>
>> >> === Data structure ===
>> >>
>> >> A proof of payment for a transaction T, here called PoP(T), is used to
>> >> prove that one has ownership of the credentials needed to unlock all
>> >> the
>> >> inputs of T. It has the exact same structure as a bitcoin transaction
>> >> with
>> >> the same inputs as T and in the same order as in T, but with each
>> >> sequence
>> >> number set to 0. There is exactly one output, here called the pop
>> >> output,
>> >> with value 0. The pop output must have the following format:
>> >>
>> >>  OP_RETURN <version> <txid> <nonce>
>> >>
>> >> {|
>> >> ! Field        !! Size [B] !! Description
>> >> |-
>> >> | &lt;version> || 2        || Version, little endian, currently 0x01
>> >> 0x00
>> >> |-
>> >> | &lt;txid>    || 32       || The transaction to prove
>> >> |-
>> >> | &lt;nonce>   || 6        || Random data
>> >> |}
>> >>
>> >> The lock_time of the PoP must be set to 499999999 to prevent the PoP
>> >> from
>> >> being included in a block, should it appear on the bitcoin p2p network.
>> >> This
>> >> is also the reason for setting the sequence numbers to 0, since
>> >> sequence
>> >> number of ffffffff would make lock_time ineffective. This specification
>> >> demands that all input sequence numbers are 0, not just one of them,
>> >> which
>> >> would be sufficient to make lock_time effective. This is for simplicity
>> >> reasons.
>> >>
>> >> An illustration of the PoP data structure and its original payment is
>> >> shown below.
>> >>
>> >> <pre>
>> >>   T
>> >>  +------------------------------------------------+
>> >>  |inputs                | outputs                 |
>> >>  |       Value,Sequence | Value,Script            |
>> >>  +------------------------------------------------+
>> >>  |input0 1,ffffffff     | 0,pay to A              |
>> >>  |input1 3,ffffffff     | 2,OP_RETURN <some data> |
>> >>  |input2 4,ffffffff     | 1,pay to B              |
>> >>  |                      | 4,pay to C              |
>> >>  +------------------------------------------------+
>> >>
>> >>   PoP(T)
>> >>  +-------------------------------------------------------------+
>> >>  | inputs               | outputs                              |
>> >>  |       Value,Sequence | Value,Script                         |
>> >>  +-------------------------------------------------------------+
>> >>  |input0 1,00000000     | 0,OP_RETURN <version> <txid> <nonce> |
>> >>  |input1 3,00000000     |                                      |
>> >>  |input2 4,00000000     |                                      |
>> >>  +-------------------------------------------------------------+
>> >>  | lock_time=499999999                                         |
>> >>  +-------------------------------------------------------------+
>> >> </pre>
>> >>
>> >> The PoP is signed using the same signing process that is used for
>> >> bitcoin
>> >> transactions.
>> >>
>> >> The purpose of the nonce is to make it harder to use a stolen PoP; Once
>> >> the PoP has reached the server, that PoP is useless since the server
>> >> will
>> >> generate a new nonce for every PoP request.
>> >>
>> >> === Process ===
>> >>
>> >> # A proof of payment request is sent from the server to the wallet. The
>> >> PoP request contains:
>> >> ## a random nonce
>> >> ## a destination where to send the PoP, for example a https URL
>> >> ## data hinting the wallet which transaction to create a proof for. For
>> >> example:
>> >> ##* txid, if known by the server
>> >> ##* PaymentRequest.PaymentDetails.merchant_data (in case of a BIP0070
>> >> payment)
>> >> ##* amount, label, message or other information from a BIP0021 URI
>> >> # The wallet identifies a transaction T, if possible. Otherwise it asks
>> >> the user to select among the ones that match the hints in 1.iii.
>> >> # The wallet creates an unsigned PoP (UPoP) for T, and asks the user to
>> >> sign it.
>> >> # The user confirms
>> >> # The UPoP(T) is signed by the wallet, creating PoP(T).
>> >> # The PoP is sent to the destination in 1.ii.
>> >> # The server receiving the PoP validates it and responds with ?valid?
>> >> or
>> >> ?invalid?.
>> >> # The wallet displays the response in some way to the user.
>> >>
>> >> '''Remarks:'''
>> >>
>> >> * The method of transferring the PoP request at step 1 is not specified
>> >> here. Instead that is specified in separate specifications. See [btcpop
>> >> scheme BIP](btcpop scheme BIP).
>> >> * The nonce must be randomly generated by the server for every new PoP
>> >> request.
>> >>
>> >> === Validating a PoP ===
>> >>
>> >> The server needs to validate the PoP and reply with "valid" or
>> >> "invalid".
>> >> That process is outlined below. If any step fails, the validation is
>> >> aborted
>> >> and "invalid" is returned:
>> >>
>> >> # Check the format of the PoP. It must pass normal transaction checks,
>> >> except that the inputs may already be spent.
>> >> # Check that lock_time is 499999999.
>> >> # Check that there is exactly one output. This output must have value 0
>> >> and conform to the OP_RETURN output format outlined above.
>> >> # Check that the nonce is the same as the one requested.
>> >> # Check that the inputs of the PoP are exactly the same as in
>> >> transaction
>> >> T, except that the sequence numbers must all be 0. The ordering of the
>> >> inputs must also be the same as in T.
>> >> # Run the scripts of all the inputs. All scipts must return true.
>> >> # Check that the txid in the PoP output is the transaction you actually
>> >> want proof for. If you don?t know exactly what transaction you want
>> >> proof
>> >> for, check that the transaction actually pays for the product/service
>> >> you
>> >> deliver.
>> >> # Return "valid".
>> >>
>> >> == Security considerations ==
>> >>
>> >> * Someone can intercept the PoP-request and change any parameter in it.
>> >> These can be mitigated by using secure connections. For example:
>> >> ** Pop destination - Stealing your PoP.
>> >> ** label - Trick you to sign an unintended pop or set a label that your
>> >> wallet doesn't have any record for, resulting in a broken service.
>> >> Always
>> >> check the PoP before signing.
>> >> ** nonce - Your pop will not validate on server.
>> >> * Someone can steal a PoP, for example by tampering with the PoP
>> >> request,
>> >> and try to use the service hoping to get a matching nonce. Probability
>> >> per
>> >> try: 1/(2^48). The server should have a mechanism for detecting a brute
>> >> force attack of this kind, or at least slow down the process by
>> >> delaying the
>> >> PoP request by some 100 ms or so.
>> >> * Even if a wallet has no funds it might still be valuable as a
>> >> generator
>> >> for PoPs. This makes it important to keep the security of the wallet
>> >> after
>> >> it has been emptied.
>> >> * Transaction malleability may cause the server to have another
>> >> transaction id for a payment than the client's wallet. In that case the
>> >> wallet will not be able to prove the transaction to the server. Wallets
>> >> should not rely on the transaction id of the outgoing transaction.
>> >> Instead
>> >> it should listen for the transaction on the network and put that in its
>> >> list
>> >> of transactions.
>> >>
>> >> == Reference implementation ==
>> >>
>> >> [https://github.com/kallerosenbaum/poppoc poppoc on GitHub]
>> >>
>> >> [https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]
>> >>
>> >> == References ==
>> >>
>> >> [https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki
>> >> BIP0021]:
>> >> URI Scheme
>> >>
>> >> [https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki
>> >> BIP0070]:
>> >> Payment Protocol
>> >>
>> >> [[btcpop scheme BIP]]
>> >>
>> >> #########################################################
>> >>
>> >> 2015-06-06 23:25 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:
>> >> > Thank you all for the feedback.
>> >> >
>> >> > I will change the data structure as follows:
>> >> >
>> >> > * There will be only one output, the "pop output", and no outputs
>> >> > from
>> >> > T will be copied to the PoP.
>> >> > * The pop output will have value 0.
>> >> > * The sequence number of all inputs of the PoP will be set to 0. I
>> >> > chose to set it to 0 for all inputs for simplicity.
>> >> > * The lock_time of the PoP is always set to 499999999.
>> >> >
>> >> > Any comments on this?
>> >> >
>> >> > /Kalle
>> >> >
>> >> > 2015-06-06 19:00 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:
>> >> >> 2015-06-06 18:10 GMT+02:00 Tom Harding <tomh at thinlink.com>:
>> >> >>> On Jun 6, 2015 8:05 AM, "Kalle Rosenbaum" <kalle at rosenbaum.se>
>> >> >>> wrote:
>> >> >>>
>> >> >>>> I'm open to changes here.
>> >> >>>
>> >> >>> I suggest:
>> >> >>>
>> >> >>> - Don't include any real outputs.   They are redundant because the
>> >> >>> txid is
>> >> >>> already referenced.
>> >> >>
>> >> >> with the nLocktime solution, the copied outputs are not needed.
>> >> >>
>> >> >>>
>> >> >>> - Start the proof script, which should be invalid, with a magic
>> >> >>> constant and
>> >> >>> include space for future expansion.  This makes PoP's easy to
>> >> >>> identify
>> >> >>> and
>> >> >>> extend.
>> >> >>
>> >> >> I did remore the constant (a "PoP" literal ascii encoded string)
>> >> >> because it didn't add much. The recipient will expect a pop, so it
>> >> >> will simply treat it as one. I did add a 2 byte version field to
>> >> >> make
>> >> >> it extendable.
>> >> >>
>> >> >>>
>> >> >>> - "Proof of Potential"
>> >> >>
>> >> >> Noted :-)
>> >> >>
>> >> >> Thank you
>> >> >> /Kalle
>> >>
>> >>
>> >>
>> >> ------------------------------------------------------------------------------
>> >>
>> >> _______________________________________________
>> >> Bitcoin-development mailing list
>> >> Bitcoin-development at lists.sourceforge.net
>> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >>
>> >
>
>
>
> ------------------------------------------------------------------------------
>
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From kalle at rosenbaum.se  Tue Jun 16 12:31:19 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Tue, 16 Jun 2015 14:31:19 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPswA9xYoNCW8wRMC9cVDQ5Ww-L5J+pCqom5YC5-hzu9ggW8pw@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
	<CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>
	<CAPg+sBiWykR6RaHhbyYQbL=A5t1TmHgEmS_sC7jj9d3SUTMO9g@mail.gmail.com>
	<CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>
	<CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>
	<557FB36B.1030902@thinlink.com>
	<CAPswA9xYoNCW8wRMC9cVDQ5Ww-L5J+pCqom5YC5-hzu9ggW8pw@mail.gmail.com>
Message-ID: <CAPswA9xq4pHpeJTuRzGUD+Ab8ocSPj603HBm5ns=J6zuiHFrLg@mail.gmail.com>

Another thing worth mentioning is that an SPV wallet cannot validate a
PoP without fetching the input transactions of the PoP from an
external (not bitcoin network) source, for example chain.com or some
other trusted full node's API.

The validation of the PoP depends on the external source(s) being
honest. It can make a valid pop look invalid, but it cannot make an
invalid pop look valid.

/Kalle



2015-06-16 14:12 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:
> 2015-06-16 7:26 GMT+02:00 Tom Harding <tomh at thinlink.com>:
>>
>> Kalle goes to some trouble to describe how merchants need to ensure that
>> they only accept a PoP provided as a response to their challenge.
>>
>
> Do you mean that it will be hard to explain to merchants that they
> must check the nonce in the PoP so that it matches the nonce in the
> pop request? I think not, this is a commonly used pattern that anyone
> should be able to grasp. Anyway, merchants will probably use a library
> (though yet non-existing) for PoP, that will hide the gory details. I
> also think that payment providers may want to add PoP to their
> offering to customers (merchants).
>
> Regards,
> /Kalle
>
>>
>>
>> On 6/15/2015 3:00 AM, Pieter Wuille wrote:
>>
>> I did misunderstand that. That changes things significantly.
>>
>> However, having paid is not the same as having had access to the input
>> coins. What about shared wallets or coinjoin?
>>
>> Also, if I understand correctly, there is no commitment to anything you're
>> trying to say about the sender? So once I obtain a proof-of-payment from you
>> about something you paid, I can go claim that it's mine?
>>
>> Why does anyone care who paid? This is like walking into a coffeshop,
>> noticing I don't have money with me, let me friend pay for me, and then have
>> the shop insist that I can't drink it because I'm not the buyer.
>>
>> Track payments, don't try to assign identities to payers.
>>
>> On Jun 15, 2015 11:35 AM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:
>>>
>>> Hi Pieter!
>>>
>>> It is intended to be a proof that you *have paid* for something. Not
>>> that you have the intent to pay for something. You cannot use PoP
>>> without a transaction to prove.
>>>
>>> So, yes, it's just a proof of access to certain coins that you no longer
>>> have.
>>>
>>> Maybe I don't understand you correctly?
>>>
>>> /Kalle
>>>
>>> 2015-06-15 11:27 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
>>> > Now that you have removed the outputs, I don't think it's even a intent
>>> > of
>>> > payment, but just a proof of access to certain coins.
>>> >
>>> > On Jun 15, 2015 11:24 AM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:
>>> >>
>>> >> Hi all!
>>> >>
>>> >> I have made the discussed changes and updated my implementation
>>> >> (https://github.com/kallerosenbaum/poppoc) accordingly. These are the
>>> >> changes:
>>> >>
>>> >> * There is now only one output, the "pop output", of value 0.
>>> >> * The sequence number of all inputs of the PoP must be set to 0. I
>>> >> chose to set it to 0 for all inputs for simplicity.
>>> >> * The lock_time of the PoP must be set to 499999999 (max block height
>>> >> lock
>>> >> time).
>>> >>
>>> >> The comments so far has been mainly positive or neutral. Are there any
>>> >> major objections against any of the two proposals? If not, I will ask
>>> >> Gregory Maxwell to assign them BIP numbers.
>>> >>
>>> >> The two BIP proposals can be found at
>>> >> https://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP and
>>> >> https://github.com/kallerosenbaum/poppoc/wiki/btcpop-scheme-BIP. The
>>> >> source
>>> >> for the Proof of Payment BIP proposal is also in-lined below.
>>> >>
>>> >> A number of alternative names have been proposed:
>>> >>
>>> >> * Proof of Potential
>>> >> * Proof of Control
>>> >> * Proof of Signature
>>> >> * Signatory Proof
>>> >> * Popo: Proof of payment origin
>>> >> * Pots: Proof of transaction signer
>>> >> * proof of transaction intent
>>> >> * Declaration of intent
>>> >> * Asset-access-and-action-affirmation, AAaAA, or A5
>>> >> * VeriBit
>>> >> * CertiBTC
>>> >> * VBit
>>> >> * PayID
>>> >>
>>> >> Given this list, I still think "Proof of Payment" is the most
>>> >> descriptive
>>> >> to non-technical people.
>>> >>
>>> >> Regards,
>>> >> Kalle
>>> >>
>>> >>
>>> >> #################################################
>>> >> <pre>
>>> >>   BIP: <BIP number>
>>> >>   Title: Proof of Payment
>>> >>   Author: Kalle Rosenbaum <kalle at rosenbaum.se>
>>> >>   Status: Draft
>>> >>   Type: Standards Track
>>> >>   Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>
>>> >> </pre>
>>> >>
>>> >> == Abstract ==
>>> >>
>>> >> This BIP describes how a wallet can prove to a server that it has the
>>> >> ability to sign a certain transaction.
>>> >>
>>> >> == Motivation ==
>>> >>
>>> >> There are several scenarios in which it would be useful to prove that
>>> >> you
>>> >> have paid for something. For example:
>>> >>
>>> >> * A pre-paid hotel room where your PoP functions as a key to the door.
>>> >> * An online video rental service where you pay for a video and watch it
>>> >> on
>>> >> any device.
>>> >> * An ad-sign where you pay in advance for e.g. 2 weeks exclusivity.
>>> >> During
>>> >> this period you can upload new content to the sign whenever you like
>>> >> using
>>> >> PoP.
>>> >> * Log in to a pay site using a PoP.
>>> >> * A parking lot you pay for monthly and the car authenticates itself
>>> >> using
>>> >> PoP.
>>> >> * A lottery where all participants pay to the same address, and the
>>> >> winner
>>> >> is selected among the transactions to that address. You exchange the
>>> >> prize
>>> >> for a PoP for the winning transaction.
>>> >>
>>> >> With Proof of Payment, these use cases can be achieved without any
>>> >> personal information (user name, password, e-mail address, etc) being
>>> >> involved.
>>> >>
>>> >> == Rationale ==
>>> >>
>>> >> Desirable properties:
>>> >>
>>> >> # A PoP should be generated on demand.
>>> >> # It should only be usable once to avoid issues due to theft.
>>> >> # It should be able to create a PoP for any payment, regardless of
>>> >> script
>>> >> type (P2SH, P2PKH, etc.).
>>> >> # It should prove that you have enough credentials to unlock all the
>>> >> inputs of the proven transaction.
>>> >> # It should be easy to implement by wallets and servers to ease
>>> >> adoption.
>>> >>
>>> >> Current methods of proving a payment:
>>> >>
>>> >> * In BIP0070, the PaymentRequest together with the transactions
>>> >> fulfilling
>>> >> the request makes some sort of proof. However, it does not meet 1, 2 or
>>> >> 4
>>> >> and it obviously only meets 3 if the payment is made through BIP0070.
>>> >> Also,
>>> >> there's no standard way to request/provide the proof. If standardized
>>> >> it
>>> >> would probably meet 5.
>>> >> * Signing messages, chosen by the server, with the private keys used to
>>> >> sign the transaction. This could meet 1 and 2 but probably not 3. This
>>> >> is
>>> >> not standardized either. 4 Could be met if designed so.
>>> >>
>>> >> If an input script type is P2SH, any satisfying script should do, just
>>> >> as
>>> >> if it was a payment. For M-of-N multisig scripts, that would mean that
>>> >> any
>>> >> set of M keys should be sufficient, not neccesarily the same set of M
>>> >> keys
>>> >> that signed the transaction. This is important because strictly
>>> >> demanding
>>> >> the same set of M keys would defeat the purpose of a multisig address.
>>> >>
>>> >> == Specification ==
>>> >>
>>> >> === Data structure ===
>>> >>
>>> >> A proof of payment for a transaction T, here called PoP(T), is used to
>>> >> prove that one has ownership of the credentials needed to unlock all
>>> >> the
>>> >> inputs of T. It has the exact same structure as a bitcoin transaction
>>> >> with
>>> >> the same inputs as T and in the same order as in T, but with each
>>> >> sequence
>>> >> number set to 0. There is exactly one output, here called the pop
>>> >> output,
>>> >> with value 0. The pop output must have the following format:
>>> >>
>>> >>  OP_RETURN <version> <txid> <nonce>
>>> >>
>>> >> {|
>>> >> ! Field        !! Size [B] !! Description
>>> >> |-
>>> >> | &lt;version> || 2        || Version, little endian, currently 0x01
>>> >> 0x00
>>> >> |-
>>> >> | &lt;txid>    || 32       || The transaction to prove
>>> >> |-
>>> >> | &lt;nonce>   || 6        || Random data
>>> >> |}
>>> >>
>>> >> The lock_time of the PoP must be set to 499999999 to prevent the PoP
>>> >> from
>>> >> being included in a block, should it appear on the bitcoin p2p network.
>>> >> This
>>> >> is also the reason for setting the sequence numbers to 0, since
>>> >> sequence
>>> >> number of ffffffff would make lock_time ineffective. This specification
>>> >> demands that all input sequence numbers are 0, not just one of them,
>>> >> which
>>> >> would be sufficient to make lock_time effective. This is for simplicity
>>> >> reasons.
>>> >>
>>> >> An illustration of the PoP data structure and its original payment is
>>> >> shown below.
>>> >>
>>> >> <pre>
>>> >>   T
>>> >>  +------------------------------------------------+
>>> >>  |inputs                | outputs                 |
>>> >>  |       Value,Sequence | Value,Script            |
>>> >>  +------------------------------------------------+
>>> >>  |input0 1,ffffffff     | 0,pay to A              |
>>> >>  |input1 3,ffffffff     | 2,OP_RETURN <some data> |
>>> >>  |input2 4,ffffffff     | 1,pay to B              |
>>> >>  |                      | 4,pay to C              |
>>> >>  +------------------------------------------------+
>>> >>
>>> >>   PoP(T)
>>> >>  +-------------------------------------------------------------+
>>> >>  | inputs               | outputs                              |
>>> >>  |       Value,Sequence | Value,Script                         |
>>> >>  +-------------------------------------------------------------+
>>> >>  |input0 1,00000000     | 0,OP_RETURN <version> <txid> <nonce> |
>>> >>  |input1 3,00000000     |                                      |
>>> >>  |input2 4,00000000     |                                      |
>>> >>  +-------------------------------------------------------------+
>>> >>  | lock_time=499999999                                         |
>>> >>  +-------------------------------------------------------------+
>>> >> </pre>
>>> >>
>>> >> The PoP is signed using the same signing process that is used for
>>> >> bitcoin
>>> >> transactions.
>>> >>
>>> >> The purpose of the nonce is to make it harder to use a stolen PoP; Once
>>> >> the PoP has reached the server, that PoP is useless since the server
>>> >> will
>>> >> generate a new nonce for every PoP request.
>>> >>
>>> >> === Process ===
>>> >>
>>> >> # A proof of payment request is sent from the server to the wallet. The
>>> >> PoP request contains:
>>> >> ## a random nonce
>>> >> ## a destination where to send the PoP, for example a https URL
>>> >> ## data hinting the wallet which transaction to create a proof for. For
>>> >> example:
>>> >> ##* txid, if known by the server
>>> >> ##* PaymentRequest.PaymentDetails.merchant_data (in case of a BIP0070
>>> >> payment)
>>> >> ##* amount, label, message or other information from a BIP0021 URI
>>> >> # The wallet identifies a transaction T, if possible. Otherwise it asks
>>> >> the user to select among the ones that match the hints in 1.iii.
>>> >> # The wallet creates an unsigned PoP (UPoP) for T, and asks the user to
>>> >> sign it.
>>> >> # The user confirms
>>> >> # The UPoP(T) is signed by the wallet, creating PoP(T).
>>> >> # The PoP is sent to the destination in 1.ii.
>>> >> # The server receiving the PoP validates it and responds with ?valid?
>>> >> or
>>> >> ?invalid?.
>>> >> # The wallet displays the response in some way to the user.
>>> >>
>>> >> '''Remarks:'''
>>> >>
>>> >> * The method of transferring the PoP request at step 1 is not specified
>>> >> here. Instead that is specified in separate specifications. See [btcpop
>>> >> scheme BIP](btcpop scheme BIP).
>>> >> * The nonce must be randomly generated by the server for every new PoP
>>> >> request.
>>> >>
>>> >> === Validating a PoP ===
>>> >>
>>> >> The server needs to validate the PoP and reply with "valid" or
>>> >> "invalid".
>>> >> That process is outlined below. If any step fails, the validation is
>>> >> aborted
>>> >> and "invalid" is returned:
>>> >>
>>> >> # Check the format of the PoP. It must pass normal transaction checks,
>>> >> except that the inputs may already be spent.
>>> >> # Check that lock_time is 499999999.
>>> >> # Check that there is exactly one output. This output must have value 0
>>> >> and conform to the OP_RETURN output format outlined above.
>>> >> # Check that the nonce is the same as the one requested.
>>> >> # Check that the inputs of the PoP are exactly the same as in
>>> >> transaction
>>> >> T, except that the sequence numbers must all be 0. The ordering of the
>>> >> inputs must also be the same as in T.
>>> >> # Run the scripts of all the inputs. All scipts must return true.
>>> >> # Check that the txid in the PoP output is the transaction you actually
>>> >> want proof for. If you don?t know exactly what transaction you want
>>> >> proof
>>> >> for, check that the transaction actually pays for the product/service
>>> >> you
>>> >> deliver.
>>> >> # Return "valid".
>>> >>
>>> >> == Security considerations ==
>>> >>
>>> >> * Someone can intercept the PoP-request and change any parameter in it.
>>> >> These can be mitigated by using secure connections. For example:
>>> >> ** Pop destination - Stealing your PoP.
>>> >> ** label - Trick you to sign an unintended pop or set a label that your
>>> >> wallet doesn't have any record for, resulting in a broken service.
>>> >> Always
>>> >> check the PoP before signing.
>>> >> ** nonce - Your pop will not validate on server.
>>> >> * Someone can steal a PoP, for example by tampering with the PoP
>>> >> request,
>>> >> and try to use the service hoping to get a matching nonce. Probability
>>> >> per
>>> >> try: 1/(2^48). The server should have a mechanism for detecting a brute
>>> >> force attack of this kind, or at least slow down the process by
>>> >> delaying the
>>> >> PoP request by some 100 ms or so.
>>> >> * Even if a wallet has no funds it might still be valuable as a
>>> >> generator
>>> >> for PoPs. This makes it important to keep the security of the wallet
>>> >> after
>>> >> it has been emptied.
>>> >> * Transaction malleability may cause the server to have another
>>> >> transaction id for a payment than the client's wallet. In that case the
>>> >> wallet will not be able to prove the transaction to the server. Wallets
>>> >> should not rely on the transaction id of the outgoing transaction.
>>> >> Instead
>>> >> it should listen for the transaction on the network and put that in its
>>> >> list
>>> >> of transactions.
>>> >>
>>> >> == Reference implementation ==
>>> >>
>>> >> [https://github.com/kallerosenbaum/poppoc poppoc on GitHub]
>>> >>
>>> >> [https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]
>>> >>
>>> >> == References ==
>>> >>
>>> >> [https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki
>>> >> BIP0021]:
>>> >> URI Scheme
>>> >>
>>> >> [https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki
>>> >> BIP0070]:
>>> >> Payment Protocol
>>> >>
>>> >> [[btcpop scheme BIP]]
>>> >>
>>> >> #########################################################
>>> >>
>>> >> 2015-06-06 23:25 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:
>>> >> > Thank you all for the feedback.
>>> >> >
>>> >> > I will change the data structure as follows:
>>> >> >
>>> >> > * There will be only one output, the "pop output", and no outputs
>>> >> > from
>>> >> > T will be copied to the PoP.
>>> >> > * The pop output will have value 0.
>>> >> > * The sequence number of all inputs of the PoP will be set to 0. I
>>> >> > chose to set it to 0 for all inputs for simplicity.
>>> >> > * The lock_time of the PoP is always set to 499999999.
>>> >> >
>>> >> > Any comments on this?
>>> >> >
>>> >> > /Kalle
>>> >> >
>>> >> > 2015-06-06 19:00 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:
>>> >> >> 2015-06-06 18:10 GMT+02:00 Tom Harding <tomh at thinlink.com>:
>>> >> >>> On Jun 6, 2015 8:05 AM, "Kalle Rosenbaum" <kalle at rosenbaum.se>
>>> >> >>> wrote:
>>> >> >>>
>>> >> >>>> I'm open to changes here.
>>> >> >>>
>>> >> >>> I suggest:
>>> >> >>>
>>> >> >>> - Don't include any real outputs.   They are redundant because the
>>> >> >>> txid is
>>> >> >>> already referenced.
>>> >> >>
>>> >> >> with the nLocktime solution, the copied outputs are not needed.
>>> >> >>
>>> >> >>>
>>> >> >>> - Start the proof script, which should be invalid, with a magic
>>> >> >>> constant and
>>> >> >>> include space for future expansion.  This makes PoP's easy to
>>> >> >>> identify
>>> >> >>> and
>>> >> >>> extend.
>>> >> >>
>>> >> >> I did remore the constant (a "PoP" literal ascii encoded string)
>>> >> >> because it didn't add much. The recipient will expect a pop, so it
>>> >> >> will simply treat it as one. I did add a 2 byte version field to
>>> >> >> make
>>> >> >> it extendable.
>>> >> >>
>>> >> >>>
>>> >> >>> - "Proof of Potential"
>>> >> >>
>>> >> >> Noted :-)
>>> >> >>
>>> >> >> Thank you
>>> >> >> /Kalle
>>> >>
>>> >>
>>> >>
>>> >> ------------------------------------------------------------------------------
>>> >>
>>> >> _______________________________________________
>>> >> Bitcoin-development mailing list
>>> >> Bitcoin-development at lists.sourceforge.net
>>> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>> >>
>>> >
>>
>>
>>
>> ------------------------------------------------------------------------------
>>
>>
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>



From pindar.wong at gmail.com  Tue Jun 16 12:33:31 2015
From: pindar.wong at gmail.com (Pindar Wong)
Date: Tue, 16 Jun 2015 20:33:31 +0800
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
Message-ID: <CAM7BtUoNJ3vPqW9esCBo8XSN=yRjC3oheP_hd_kcgzs0_0De6w@mail.gmail.com>

On Tue, Jun 16, 2015 at 2:03 AM, Adam Back <adam at cypherspace.org> wrote:

> Hi Mike
>
> Well thank you for replying openly on this topic, its helpful.
>
> I apologise in advance if this gets quite to the point and at times
> blunt, but transparency is important, and we owe it to the users who
> see Bitcoin as the start of a new future and the$3b of invested funds
> and $600m of VC funds invested in companies, we owe it to them that we
> be open and transparent here.
>
> I would really prefer on a personal nor professional basis to be
> having this conversation period, never mind in public, but Mike - your
> and Gavin's decision to promote a unilateral hard-fork and code fork
> are extremely high risk for bitcoin and so there remains little
> choice.  So I apologise again that we have to have this kind of
> conversation on a technical discussion list.  This whole thing is
> hugely stressful and worrying for developers, companies and investors.
>
> I strongly urge that we return to the existing collaborative
> constructive review process that has been used for the last 4 years
> which is a consensus by design to prevent one rogue person from
> inserting a backdoor, or lobbying for a favoured change on behalf of a
> special interest group, or working for bad actor (without accusing you
> of any of those - I understand you personally just want to scale
> bitcoin, but are inclined to knock heads and try to force an issue you
> see, rather than work collaboratively).
>
> For you (and everyone)
>
> - Should there be a summit of some kind, that is open attendance, and
> video recorded so that people who are unable to attend can participate
> too, so that people can present the technical proposals and risks in
> an unbiased way?
>
>
Dear Adam, All:

At the community's convenience, it would be an honour to arrange an initial
open summit to meet with representatives of the Chinese miners in Hong Kong
(UTC+8) to facilitate a better understand between the different
stakeholders of the Bitcoin ecosystem on this important issue.   This could
be arranged for this October, or earlier, if deemed necessary.

Remote online participation would be welcome from those who might not be
able to attend in person.

However,  it is hoped that such a meeting would be primarily document
driven to facilitate orderly translation, discussion and decision.

p.



> (It is not theoretical question, I may have a sponsor and host - not
> Blockstream, an independent, its a question for everyone, developers,
> users, CTOs, CEOs.)
>
>
>
> So here I come back to more frank questions:
>
> Governance
>
> The rest of the developers are wise to realise that they do not want
> exclusive control, to avoid governance centralising into the hands of
> one person, and this is why they have shared it with a consensus
> process over the last 4 years.  No offence but I dont think you
> personally are thinking far enough ahead to think you want personal
> control of this industry.  Maybe some factions dont trust your
> motives, or they dont mind, but feel more assured if a dozen other
> people are closely reviewing and have collective review authority.
>
> - Do you understand that attempting to break this process by
> unilateral hard-fork is extremely weakening of Bitcoin's change
> governance model?
>
> - Do you understand that change governance is important, and that it
> is important that there be multiple reviewers and sign-off to avoid
> someone being blackmailed or influenced by an external party - which
> could potentially result in massive theft of funds if something were
> missed?
>
> - Secondarily do you understand that even if you succeed in a
> unilateral fork (and the level of lost coins and market cap and damage
> to confidence is recoverable), that it sets a precedent that others
> may try to follow in the future to introduce coercive features that
> break the assurances of bitcoin, like fungibility reducing features
> say (topically I hear you once proposed on a private forum the concept
> of red-lists, other such proposals have been made and quickly
> abandoned), or ultimately if there is a political process to obtain
> unpopular changes by unilateral threat, the sky is the limit - rewrite
> the social contract at that point without consensus, but by
> calculation that people will value Bitcoin enough that they will
> follow a lead to avoid risk to the system?
>
>
> Security
>
> As you probably know some extremely subtle bugs in Bitcoin have at
> times slipped past even the most rigorous testings, often with
> innocuous but unexpected behaviours, but some security issues  Some
> extremely intricate and time-sensitive security defect and incident
> response happens from time to time which is not necessarily publicly
> disclosed until after the issue has been rolled out and fixed, which
> can take some time due to the nature of protocol upgrades,
> work-arounds, software upgrade via contacting key miners etc.  We
> could take an example of the openSSL bug.
>
> - How do you plan to deal with security & incident response for the
> duration you describe where you will have control while you are
> deploying the unilateral hard-fork and being in sole maintainership
> control?
>
> - Are you a member of the bitcoin security reporting list?
>
> On 15 June 2015 at 11:56, Mike Hearn <mike at plan99.net> wrote:
> > I will review both and mostly delegate to Gavin's good taste around the
> > details, unless there is some very strong disagreement. But that seems
> > unlikely.
> > ...
> > Feedback will be read. There are no NACKS in Bitcoin XT. Patch requests
> > aren't scored in any way. The final decision rests with the maintainer
> as in
> > ~all open source projects.
>
> As you know the people who have written 95% of the code (and reviewed,
> and tested, and formally proved segments etc) are strenuously advising
> not to push any consensus code into public use without listening to
> and addressing review questions which span beyond rigorous code &
> automated guided fuzz testers, simulation and sometimes formal proofs,
> but also economics, game-theory and critically very subtle
> determinism/consensus safety that they have collectively 4-5 years
> experience of each.
>
> - Will you pause your release plans if all of the other developers
> insist that the code or algorithm is defective?
>
> - Please don't take this the wrong way, and I know your bitcoinj work
> was a significant engineering project which required porting bitcoin
> logic.  But If the answer to the above question is no, as you seemed
> to indicate in your response, as you not have not written much bitcoin
> core code yourself (I think 3 PRs in total), do you find yourself more
> qualified than the combination of peer review of the group of people
> who have written 95% of it, and maintained it and refactored most of
> it over the last 4-5 years?
>
> I presume from your security background you are quite familiar with
> the need for review of crypto protocol changes & rigorous code review.
> That is even more the case with Bitcoin given the consensus
> criticality.
>
> >> - On the idea of a non-consensus hard-fork at all, I think we can
> >> assume you will get a row of NACKs.  Can you explain your rationale
> >> for going ahead anyway?  The risks are well understood and enormous.
> >
> > If Bitcoin runs out of capacity it will break and many of our users will
> > leave. That is not an acceptable outcome for myself or the many other
> > wallet, service and merchant developers who have worked for years to
> build
> > an ecosystem around this protocol.
>
> That you are frustrated, is not a sufficient answer as to why you are
> proposing to go ahead with a universally acknowledged extreme network
> divergence danger unilateral hard-fork, lacking wide-spread consensus.
> People are quite concerned about this.  Patience, caution and prudence
> is necessary in a software system with such high assurance
> requirements.
>
> So I ask again:
>
> - On the idea of a non-consensus hard-fork at all, I think we can
> assume you will get a row of NACKs.  Can you explain your rationale
> for going ahead anyway?  The risks are well understood and enormous.
>
> Note the key point is that you are working on a unilateral hard-fork,
> where there is a clear 4 year established process for proposing
> improvements and an extremely well thought out and important change
> management governance process.  While there has been much discussion,
> you nor Gavin, have not actually posted a BIP for review.  Nor
> actually was much of the discussion even conducted in the open: it was
> only when Matt felt the need to clear the air and steer this
> conversation into the open that discussion arose here.  During that
> period of private discussion you and Gavin were largely unknown to
> most of us lobbying companies with your representation of a method
> that concerns everyone of the Bitcoin users.  Now that the technical
> community aware aware they are strenuously discouraging you on the
> basis of risks.
>
>
> Openness
>
> - Do you agree that bitcoin technical discussions should happen in the
> open?
>
> - As this is a FOSS project, do you agree that companies should also
> be open, about their requirements and trade-offs they would prefer?
>
> - Can you disclose the list of companies you have lobbied in private
> whether they have spoken publicly or not, and whether they have
> indicated approval or not?
>
> - Did you share a specific plan, like a BIP or white paper with these
> companies, and if so can we see it?
>
> - If you didnt submit a plan, could you summarise what you asked them
> and what you proposed, and if you discussed also the risks?  (If you
> asked them if they would like Bitcoin to scale, I expect almost
> everyone does, including every member of the technical community, so
> that for example would not fairly indicate approval for a unilateral
> hard-fork)
>
> I and others will be happy to talk with the CTO and CEOs of companies
> you have lobbied in private, for balance to assure ourselves and the
> rest of the community that their support was given - and with full
> understanding of the risks of doing it unilaterally, without peer
> review, benefit of maintenance and security inidence management, and
> what exactly they are being quoting as having signed up for.
>
> (This maybe more efficiently and openly achieved by the open process,
> on a mailing list, maybe a different one even special purpose to this
> topic, with additional option of the open public meeting I proposed at
> the top).
>
> - Do you agree that it would be appropriate, that companies be aware
> of both the scaling opportunities (of course, great everyone wants
> scalability) as well as the technical limits and risks with various
> approaches?  And that these be presented by parties from a range of
> views to ensure balance?
>
> - Do you consider your expression of issues to hold true to the ideal
> of representing balanced nuanced view of all sides of a technical
> debate, even when under pressure or feeling impatient about the
> process?
>
> You may want to review the opening few minutes of your epicenter 82
> bitcoin for example where you claimed and I quote "[the rest of the
> technical community] dont want capacity to ever increase and want it
> to stay where it is and when it fills up people move to other
> systems".
>
> - Do you think that is an accurate depiction of the complex trade-offs
> we have been discussing on this list?
>
> (For the record I am not aware of a single person who has said they do
> not agree with scaling Bitcoin.  Changing a constant is not the
> hard-part.  The hard part is validating a plan and the other factors
> that go into it.  It's not a free choice it is a security/scalability
> tradeoff.  No one will thank us if we "scale" bitcoin but break it in
> hard to recover ways at the same time.)
>
> - Were you similarly balanced in your explanations when talking to
> companies in private discussions?
>
> - Do you understand that if we do not work from balanced technical
> discussion, that we may end up with some biased criteria?
>
> Authority
>
> Neither you nor Gavin have any particular authority here to speak on
> behalf of Bitcoin (eg you acknowledge in your podcast that Wladimir is
> dev lead, and you and Gavin are both well aware of the 4 year
> established change management consensus decision making model where
> all of the technical reviewers have to come to agreement before
> changes go in for security reasons explained above).  I know Gavin has
> a "Chief Scientist" title from the Bitcoin Foundation, but sadly that
> organisation is not held in as much regard as it once was, due to
> various irregularities and controversies, and as I understand it no
> longer employs any developers, due to lack of funds.  Gavin is now
> employed by MIT's DCI project as a researcher in some capacity.  As
> you know Wladimir is doing the development lead role now, and it seems
> part of your personal frustration you said was because he did not
> agree with your views.  Neither you nor Gavin have been particularly
> involved in bitcoin lately, even Gavin, for 1.5 years or so.
>
> - Do you agree that if you presume to speak where you do not have
> authority you may confuse companies?
>
> > If Bitcoin runs out of capacity it will break and many of our users will
> > leave. That is not an acceptable outcome for myself or the many other
> > wallet, service and merchant developers who have worked for years to
> build
> > an ecosystem around this protocol.
>
> But I think this is a false dichotomy.  As I said in previous mail I
> understand people are frustrated that it has taken so long, but it is
> not the case that no progress has been made on scalability.
>
> I itemised a long list of scalability work which you acknowledged as
> impressive work (CPU, memory, network bandwidth/latency) and RBF, CPFP
> fee work, fee-estimation, and so on, which you acknowledged and are
> aware of.
>
> There are multiple proposals and BIPs under consideration on the list
> right now.
>
> - what is the reason that you (or Gavin) would not post your BIP along
> side the others to see if it would win based on technical merit?
>
> - why would you feel uniquely qualified to override the expert opinion
> of the rest of the technical community if your proposal were not
> considered to have most technical merit? (Given that this is not a
> simple market competition thing where multiple hard-forks can be
> considered - it is a one only decision, and if it is done in a
> divisive unilateral way there are extreme risks of the ledger
> diverging.)
>
> Network Divergence Risk
>
> >> - How do you propose to deal with the extra risks that come from
> >> non-consensus hard-forks?  Hard-forks themselves are quite risky, but
> >> non-consensus ones are extremely dangerous for consensus.
> >
> > The approach is the same for other forks. Voting via block versions and
> then
> > when there's been >X% for Y time units the 1mb limit is lifted/replaced.
>
> But this is not a soft-fork, it is a hard-fork.  Miner voting is only
> peripherally related.  Even if in the extremis 75% of miners tried a
> unilateral hard-fork but 100% of the users stayed on the maintained
> original code, no change would occur other than those miners losing
> reward (mining fork-coins with no resale value) and the difficulty
> would adjust.  The miners who made an error in choice would lose money
> and go out of business or rejoin the chain.
>
> However if something in that direction happens with actual users and
> companies on both sides of it users will lose money, the ledger will
> diverge as soon as a single double-spend happens, and never share a
> block again, companies will go instantly insolvent, and chaos will
> break out.  This is the dangerous scenario we are concerned about.
>
> So the same question again:
>
> - How do you propose to deal with the extra risks that come from
> non-consensus hard-forks?  Hard-forks themselves are quite risky, but
> non-consensus ones are extremely dangerous for consensus.
>
>
> Being sensitive to alarming the market
>
> It is something akin to Greece or Portugal or Italy exiting the euro
> currency in a disorderly way.  Economists and central bank policy
> makers are extremely worried about such an eventuality and talk about
> related factors in careful, measured terms, watch Mario Draghi when he
> speaks.
>
> Imagine that bitcoin is 10x or 100x bigger.  Bitcoin cant have people
> taking unilateral actions such as you have been proposing.  It is not
> following the consensus governance process, and not good policy and it
> is probably affecting bitcoin confidence and price at this moment.
>
> >> - Do you have contingency plans for what to do if the non-consensus
> >> hard-fork goes wrong and $3B is lost as a result?
> >
> > Where did you get the $3B figure from? The fork either doesn't happen,
> or it
> > happens after quite a long period of people knowing it's going to happen
> -
> > for example because their full node is printing "You need to upgrade"
> > messages due to seeing the larger block version, or because they read the
> > news, or because they heard about it via some other mechanisms.
>
> This is not a soft-fork, and the community will not want to take the
> risks once they understand them, and they have months in which to
> understand them and at this point you've motivated and wasted 100s of
> developer man hours such that we will feel impelled to make sure that
> no one opts into a unilateral hard-fork without understanding the
> risks.  It would be negligent to allow people to do that.  Before this
> gets very far FAQs will be on bitcoin.org etc explaining this risk I
> would imagine.  Its just starting not finished.
>
> What makes you think the rest of the community may not instead prefer
> Jeff Garzik's BIP after revisions that he is making now with review
> comments from others?
>
> Or another proposal.  Taken together with a deployment plan that sees
> work on decentralisation tying into that plan.
>
> - If you persisted anyway, what makes you think bitcoin could not make
> code changes defensively relating to your unilateral fork?
> (I am sure creative minds can find some ways to harden bitcoin against
> a unilateral fork, with a soft-fork or non-consensus update can be
> deployed much faster than a hard-fork).
>
> I tried to warn Gavin privately that I thought he was under-estimating
> the risk of failure to his fork proposal due to it being unilateral.
> Ie as you both seem sincere in your wish to have your proposal
> succeed, then obviously the best way to do that is to release a BIP in
> the open collaborative process and submit it to review like everyone
> else.  Doing it unilaterally only increases its chance of failure.
>
> The only sensible thing to do here is submit a BIP and stop the
> unilateral fork threat.
>
> Scalability Plans
>
> > Let me flip the question around. Do you have a contingency plan if
> Bitcoin
> > runs out of capacity and significant user disruption occurs that results
> in
> > exodus, followed by fall in BTC price? The only one I've seen is "we can
> > perform an emergency hard fork in a few weeks"!
>
> Yes people have proposed other plans.  Bryan Bishop posted a list of them.
>
> Jeff Garzik has a proposal, BIP-100 which seems already better than
> Gavin's having benefit of peer review which he has been incorporating.
>
> I proposed several soft-fork models which can be deployed safely and
> immediately, which do not have ledger risk.
>
> I have another proposal relating to simplified soft-fork one-way pegs
> which I'll write up in a bit.
>
> I think there are still issues in Jeff's proposal but he is very open
> and collaborating and there maybe related but different proposals
> presently.
>
> >> As you can probably tell I think a unilateral fork without wide-scale
> >> consensus from the technical and business communities is a deeply
> >> inadvisable.
> >
> > Gavin and I have been polling many key players in the ecosystem. The
> > consensus you seek does exist. All wallet developers (except Lawrence),
> all
> > the major exchanges, all the major payment processors and many of the
> major
> > mining pools want to see the limit lifted (I haven't been talking to
> pools,
> > Gavin has).
>
> It does not seem to me that you understand the issue.  Of course they
> want to increase the scalability of bitcoin.  So does everyone else on
> this mailing list.
>
> That they would support that is obvious.  If you presented your
> unilateral action plan without explaining the risks too.
>
> I think I covered this further above.  If you would like to share the
> company list, or we can invite them to the proposed public physical
> meeting, I think it would be useful for them to have a balanced view
> of the ledger divergence risks, and alternative in-consensus proposals
> underway, as well as the governance risks, maintenance risks, security
> incident risks.
>
> Note that other people talk to companies too, as part of their day to
> day jobs, or from contacts from being in the industry.  You have no
> special authority or unique ability to talk with business people.  Its
> just that the technical community did not know you were busy doing
> that.
>
> I can not believe that any company that would listen to their CTO, CSO
> or failing that board would be ok with the risks implied by what you
> are proposing on full examination.
>
> > This notion that the change has no consensus is based on you polling the
> > people directly around you and people who like to spend all day on this
> > mailing list. It's not an accurate reflection of the wider Bitcoin
> community
> > and that is one of the leading reasons there is going to be a fork. A
> small
> > number of people have been flatly ignoring LOTS of highly technical and
> > passionate developers who have written vast amounts of code, built up the
> > Bitcoin user base, designed hardware and software, and yes built
> companies.
>
> I know you want scale bitcoin, as I said everyone here does. I think
> what you're experiencing is that you've had more luck explaining your
> pragmatic unilateral plan to non-technical people without peer review,
> and so not experienced the kind of huge pushback you are getting from
> the technical community.  The whole of bitcoin is immensely
> complicated such that it takes an uber-geek CS genius years to
> catchup, this is not a slight of any of the business people who are
> working hard to deploy Bitcoin into the world, its just complicated
> and therefore not easy to understand the game-theory, security,
> governance and distributed system thinking.  I have a comp sci PhD in
> distributed systems, implemented p2p network systems and have 2
> decades of applied crypto experience with a major interest in
> electronic cash crypto protocols, and it took me a several years to
> catchup and even I have a few hazy spots on low-level details, and I
> addictively into read everything I could find.  Realistically all of
> us are still learning, as bitcoin combines so many fields that it
> opens new possibilities.
>
> What I am expecting that yourself and Gavin are thinking is that
> you'll knock heads and force the issue and get to consensus.
>
> However I think you have seriously misjudged the risks and have not
> adequately explained them to companies you are talking with.  Indeed
> you do not fully seem to acknowledge the risks, nor to have a well
> thought out plan here of how you would actually manage it, nor the
> moral hazards of having a lone developer in hugely divisive
> circumstances in sole control of bitcoins running code.  Those are
> exactly the reasons for the code change governance process!
>
> Even though you are trying to help, the full result is you are not
> helping achieve anything by changing a constant and starting a
> unilateral hard-fork (not to trivialise the work of making a patch to
> do that).
>
> The work to even make the constant change be feasible was a result of
> 1000s of hours of work by others in the development community, that is
> emphatically and unilaterally telling you that hard-forks are hugely
> inadvisable.
>
> You are trying to break the code change governance security procedure
> that were put in place for good reason for the security of $3b of
> other peoples money, even if you have a pragmatic intent to help, this
> is flat out unacceptable.
>
> There are also security implications to what you are proposing, which
> I have heard you attempting to trivialise, that are core to Bitcoins
> security and core functionality.
>
> >  the overwhelming impression I get from a few
> > others here is that no, they don't want to scale Bitcoin. They already
> > decided it's a technological dead end.
>
> I think this is a significant mischaracterisation, and I think almost
> everybody is on board with a combination plan:
>
> 1. work to improve decentralisation (specific technical work already
> underway, and education)
> 2. create a plan to increase block-size in a slow fashion to not cause
> system shocks (eg like Jeff is proposing or some better variant)
> 3. work on actual algorithmic scaling
>
> In this way we can have throughput needed for scalability and security
> work to continue.
>
> As I said you can not scale a O(n^2) broadcast network by changing
> constants, you need algorithmic improvements.
>
> People are working on them already.  All of those 3 things are being
> actively worked on RIGHT NOW, and in the case of algorithmic scaling
> and improve decentralisation have been worked on for months.
>
> You may have done one useful thing which is to remind people that
> blocks are only 3x-4x below capacity such that we should look at it.
>
> But we can not work under duress of haste, nor unilateral ultimatums,
> this is the realm of human action that leads to moral hazard, and
> ironically reminds us of why Satoshi put the quote in the genesis
> block.
>
> Bitcoin is too complex a system with too much at stake to be making
> political hasty decisions, it would be negligent to act in such a way.
>
> Again please consider that you did your job, caused people to pay
> attention, but return to the process, submit a BIP, retract the
> unilateral hard-fork which is so dangerous and lets have things be
> calm, civil and collaborative in the technical zone of Bitcoin and not
> further alarm companies and investors.
>
> Adam
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/0d9b09eb/attachment.html>

From justusranvier at riseup.net  Tue Jun 16 13:32:39 2015
From: justusranvier at riseup.net (justusranvier at riseup.net)
Date: Tue, 16 Jun 2015 13:32:39 +0000
Subject: [Bitcoin-development] The Bitcoin Node Market
In-Reply-To: <CACq0ZD5uYikAfVuep8XCgEs-53NbF-SYhvm4qneZsEQdgd=6rw@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CA+c4Zoy6U9RXH3Qw15sXXnaeYL-9PFbnTp=VLAJsvpC_zoAK_A@mail.gmail.com>
	<CAEY8wq41ftFA1ObyUWiRGOgebwqDCAw_j+hU6_wfcXv5GSZaJw@mail.gmail.com>
	<201506160341.10994.luke@dashjr.org>
	<CAEY8wq4SOddGUJNqkrdhhfQEn4tXehCWiifk-P=PYUdfFcXFTQ@mail.gmail.com>
	<a9e2e033c786fb7f99bcf7505ad45f21@riseup.net>
	<CACq0ZD5uYikAfVuep8XCgEs-53NbF-SYhvm4qneZsEQdgd=6rw@mail.gmail.com>
Message-ID: <e471f72fdba349d0a6d66f1c8772f6e8@riseup.net>

On 2015-06-16 07:55, Aaron Voisine wrote:
>> Suppose a billion mobile phones wanted to run SPV wallets tomorrow. 
>> Who
>> would provide the nodes they would need connect to?
> 
> The SPV wallet author would if they wanted their wallet to function.

How will the SPV wallet users pay for this service? With their money, or 
with their privacy?



From pete at petertodd.org  Tue Jun 16 13:33:05 2015
From: pete at petertodd.org (Peter Todd)
Date: Tue, 16 Jun 2015 14:33:05 +0100
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <CAM7BtUoNJ3vPqW9esCBo8XSN=yRjC3oheP_hd_kcgzs0_0De6w@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
	<CAM7BtUoNJ3vPqW9esCBo8XSN=yRjC3oheP_hd_kcgzs0_0De6w@mail.gmail.com>
Message-ID: <20150616133305.GA30988@muck>

On Tue, Jun 16, 2015 at 08:33:31PM +0800, Pindar Wong wrote:
> On Tue, Jun 16, 2015 at 2:03 AM, Adam Back <adam at cypherspace.org> wrote:
> Dear Adam, All:
> 
> At the community's convenience, it would be an honour to arrange an initial
> open summit to meet with representatives of the Chinese miners in Hong Kong
> (UTC+8) to facilitate a better understand between the different
> stakeholders of the Bitcoin ecosystem on this important issue.   This could
> be arranged for this October, or earlier, if deemed necessary.

Great!

FWIW there Constance Choi and Primavera De Filippi (CC'd) are holding a
blockchain-tech conference October 14th-15th in Hong Kong as well;
coordinating your summit with that conference could be useful.

http://blockchainworkshops.org/

This workshop series has been attracting audiences of people looking to
use blockchain tech in general; many of these use-cases will likely
involve the Bitcoin blockchain in unpredictable ways. Importantly, these
ways can drive demand significantly beyond our current assumptions based
on most demand being consumer-merchant transactions.

In addition, many of the attendees have significant experience with
regulatory issues and interacting with governments on regulation of
blockchain tech. Bitcoin faces existential risks to its existence by
these regulation efforts, which include things like efforts to setup
industry wide Anti-Money-Laundering/Know-Your-Customer programs,
including programs that would tie on-chain transactions to identity
information. Any blocksize discussion needs to be informed by these
potential threats to usage of the technology, as well as challenges to
using scaling solutions.

> Remote online participation would be welcome from those who might not be
> able to attend in person.
> 
> However,  it is hoped that such a meeting would be primarily document
> driven to facilitate orderly translation, discussion and decision.

Agreed. Pieter Wuille's recent work is a great example of the kind of
science-driven investigations that need to be done - and haven't been
done very much - to get us some hard data to make decisions on.

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/6117a770/attachment.sig>

From pindar.wong at gmail.com  Tue Jun 16 13:55:13 2015
From: pindar.wong at gmail.com (Pindar Wong)
Date: Tue, 16 Jun 2015 21:55:13 +0800
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <20150616133305.GA30988@muck>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
	<CAM7BtUoNJ3vPqW9esCBo8XSN=yRjC3oheP_hd_kcgzs0_0De6w@mail.gmail.com>
	<20150616133305.GA30988@muck>
Message-ID: <CAM7BtUr1zmw_Jmyn8ULZ=Jb-pkAwUwvBK68UWmzeJH3kAmYEhA@mail.gmail.com>

On Tue, Jun 16, 2015 at 9:33 PM, Peter Todd <pete at petertodd.org> wrote:

> On Tue, Jun 16, 2015 at 08:33:31PM +0800, Pindar Wong wrote:
> > On Tue, Jun 16, 2015 at 2:03 AM, Adam Back <adam at cypherspace.org> wrote:
> > Dear Adam, All:
> >
> > At the community's convenience, it would be an honour to arrange an
> initial
> > open summit to meet with representatives of the Chinese miners in Hong
> Kong
> > (UTC+8) to facilitate a better understand between the different
> > stakeholders of the Bitcoin ecosystem on this important issue.   This
> could
> > be arranged for this October, or earlier, if deemed necessary.
>
> Great!
>
> FWIW there Constance Choi and Primavera De Filippi (CC'd) are holding a
> blockchain-tech conference October 14th-15th in Hong Kong as well;
> coordinating your summit with that conference could be useful.
>
> http://blockchainworkshops.org/
>
> This workshop series has been attracting audiences of people looking to
> use blockchain tech in general; many of these use-cases will likely
> involve the Bitcoin blockchain in unpredictable ways. Importantly, these
> ways can drive demand significantly beyond our current assumptions based
> on most demand being consumer-merchant transactions.
>
> In addition, many of the attendees have significant experience with
> regulatory issues and interacting with governments on regulation of
> blockchain tech. Bitcoin faces existential risks to its existence by
> these regulation efforts, which include things like efforts to setup
> industry wide Anti-Money-Laundering/Know-Your-Customer programs,
> including programs that would tie on-chain transactions to identity
> information. Any blocksize discussion needs to be informed by these
> potential threats to usage of the technology, as well as challenges to
> using scaling solutions.
>
> > Remote online participation would be welcome from those who might not be
> > able to attend in person.
> >
> > However,  it is hoped that such a meeting would be primarily document
> > driven to facilitate orderly translation, discussion and decision.
>
> Agreed. Pieter Wuille's recent work is a great example of the kind of
> science-driven investigations that need to be done - and haven't been
> done very much - to get us some hard data to make decisions on.
>

Thank you very much Peter for pointing this out! That is very kind of you.

It would be great to work with Constance Choi, Primavera De Filippi, your
goodself and others to make this happen.

As you may know, the Hong Kong Monetary Authority considers bitcoin a
virtual 'commodity' and not a currency per se.

Regards,

p.


>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/2bb69fb3/attachment.html>

From tomh at thinlink.com  Tue Jun 16 14:05:01 2015
From: tomh at thinlink.com (Tom Harding)
Date: Tue, 16 Jun 2015 07:05:01 -0700
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPswA9xYoNCW8wRMC9cVDQ5Ww-L5J+pCqom5YC5-hzu9ggW8pw@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>	<CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>	<CAPg+sBiWykR6RaHhbyYQbL=A5t1TmHgEmS_sC7jj9d3SUTMO9g@mail.gmail.com>	<CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>	<CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>	<557FB36B.1030902@thinlink.com>
	<CAPswA9xYoNCW8wRMC9cVDQ5Ww-L5J+pCqom5YC5-hzu9ggW8pw@mail.gmail.com>
Message-ID: <55802D0D.4090506@thinlink.com>

On 6/16/2015 5:12 AM, Kalle Rosenbaum wrote:
> 2015-06-16 7:26 GMT+02:00 Tom Harding <tomh at thinlink.com>:
>> Kalle goes to some trouble to describe how merchants need to ensure that
>> they only accept a PoP provided as a response to their challenge.
>>
> Do you mean that it will be hard to explain to merchants that they
> must check the nonce in the PoP so that it matches the nonce in the
> pop request?

Sorry for the idiomatic language.  No, I just meant that you have
thought it out in detail!  You standardize a latent capability of the
cryptosystem.  It seems very powerful for some classes of users.





From pieter.wuille at gmail.com  Tue Jun 16 14:31:34 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Tue, 16 Jun 2015 16:31:34 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPswA9yB3wfV1auXR=ggXjh+f1C3Qpkv8qP1miQwkc8R2_aBLg@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
	<CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>
	<CAPg+sBiWykR6RaHhbyYQbL=A5t1TmHgEmS_sC7jj9d3SUTMO9g@mail.gmail.com>
	<CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>
	<CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>
	<CAPswA9yB3wfV1auXR=ggXjh+f1C3Qpkv8qP1miQwkc8R2_aBLg@mail.gmail.com>
Message-ID: <CAPg+sBjp-BmSXhanOuKE0DN1wdfVwCtFwiAbPse1GLxy3+L3nA@mail.gmail.com>

On Mon, Jun 15, 2015 at 1:59 PM, Kalle Rosenbaum <kalle at rosenbaum.se> wrote:

> 2015-06-15 12:00 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
> I'm not sure if we will be able to support PoP with CoinJoin. Maybe
> someone with more insight into CoinJoin have some input?
>

Not really. The problem is that you assume a transaction corresponds to a
single payment. This is true for simple wallet use cases, but not
compatible with CoinJoin, or with systems that for example would want to
combine multiple payments in a single transaction.


> > Also, if I understand correctly, there is no commitment to anything
> you're
> > trying to say about the sender? So once I obtain a proof-of-payment from
> you
> > about something you paid, I can go claim that it's mine?
>
> I don't understand this. The pop includes a nonce randomly generated
> by the server. If you're very lucky, 1/(2^48) per try, you can reuse a
> pop.
>
>
I owe you an apology here, for judging based on the summary you posted
rather than reading the actual text.

48 bits seems low to me, but it does indeed solve the problem. Why not 128
or 256 bits?

> Why does anyone care who paid? This is like walking into a coffeshop,
> > noticing I don't have money with me, let me friend pay for me, and then
> have
> > the shop insist that I can't drink it because I'm not the buyer.
>
> If you pay as you use the service (ie pay for coffee upfront), there's
> no need for PoP. Please see the Motivation section. But you are right
> that you must have the wallet(s) that paid at hand when you issue a
> PoP.
>
> >
> > Track payments, don't try to assign identities to payers.
>
> Please elaborate, I don't understand what you mean here.
>

I think that is a mistake. You should not assume that the wallet who held
the coins is the payer/buyer. That's what I said earlier; you're implicitly
creating an identity (the one who holds these keys) based on the
transaction. This seems fundamentally wrong to me, and not necessary. The
receiver should not care who paid or how, he should care what was payed for.

The easiest solution to this IMHO would be an extension to the payment
protocol that gives you (or your wallet) a token in return for paying, and
that knowledge of that token is used to gain access to the services you
provide.

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/75813f1f/attachment.html>

From onelineproof at gmail.com  Tue Jun 16 15:23:33 2015
From: onelineproof at gmail.com (Andrew)
Date: Tue, 16 Jun 2015 15:23:33 +0000
Subject: [Bitcoin-development] Scaling Bitcoin with Subchains
In-Reply-To: <CAL8tG=k90nzt9w99QjSx5R=+LeBxkfVvcEvcNAyVkJHkaQZAgg@mail.gmail.com>
References: <CAL8tG==LG=xC_DzOaghbGGKab4=UVpGLQV7781pU4wg+WnFdMg@mail.gmail.com>
	<CAPg+sBjqQ66f1Rmhi9HOBYP5BDjBHvTNPpUN-y3o-KX8dXBMhg@mail.gmail.com>
	<557D2571.601@gmail.com>
	<CAL8tG=kEv9AfQM+1Rv+tqBujFEjCp+BsjQ-1s7eJC-usogFFqw@mail.gmail.com>
	<CAPg+sBjrSed4r+8-d2RGBVhbzaXxX+o=qqw2u-2jpF2RUqmEmA@mail.gmail.com>
	<CANEZrP1D0AN_iRobD2RYXHCCWhU7Vk6yZ35+ytsQ0zonSCG_HQ@mail.gmail.com>
	<CAL8tG=k90nzt9w99QjSx5R=+LeBxkfVvcEvcNAyVkJHkaQZAgg@mail.gmail.com>
Message-ID: <CAL8tG=mVJk3or0C5RbmJWiA=9+sh+Dgje7fkCZRhO3nYK1KOhA@mail.gmail.com>

Let me ask a simpler question. How do you prove the state of the UTXO
database corresponding to your wallet? With my subchain method, all the
addresses in a wallet can be constrained to a path of subchains, so the
proof is O(log n). Yes, I know some people will say that it is not really a
proof because I didn't verify the transactions involving sibling chains
outside my path of chains. But the protocol is "parent chain always decides
in case of conflict". And the parent chains will have an incentive to be
careful with what child blocks they commit to as they will be merge mining
the (direct) child chains. Yes, the parents can make a mistake with some
really deep children chain transactions, but the deeper you go, the less
value the transactions, and the less important. Also, the children of the
parents are parents themselves so they will have incentive to be careful
with what child chains they commit to. So recursively, the system takes
care of itself.

I challenge anyone to come up with a <= O(log n) proof that each address
(output) they have in their wallet really has the balance they think it
has. If someone can do this, then maybe I will drop this idea. Actually,
rusty asked this on #bitcoin-wizards last night and no one was able to
answer it.

On Mon, Jun 15, 2015 at 6:00 PM, Andrew <onelineproof at gmail.com> wrote:

> Pieter: I kind of see your point (but I think you're missing some key
> points). You mean just download all the headers and then just verify the
> transactions you filter out by using their corresponding merkle trees,
> right? But still, I don't think that would scale as well as with the tree
> structure I propose. Because, firstly, you don't really need the headers of
> the sibling chains. You just need the headers of the parent chains since
> the parent verifies all the siblings. All you really need in a typical
> (non-mining) situation is the headers or full blocks in one path going down
> the tree starting from the root chain. So that means O(log n) needs to be
> stored (headers or blocks) (n the number of transaction on the network).
> With big blocks, you still need O(n) headers. I know headers are small, but
> still they take up space and verification time. Also, since you are storing
> the full blocks on the chains you want, you are validating the headers of
> those blocks and you are sure that you are seeing all transactions on those
> blocks. And if certain addresses must stay on those blocks, you will know
> that you are catching all of the transactions corresponding to those
> blocks. If you just filter out based on addresses or other criteria, you
> can be denied some of those transactions by full nodes, and you may not
> know about it. Say for example, your government representative publishes on
> of his public addresses that is used for paying for expenses. Then with my
> system, you can be sure to catch every transaction being spent from that
> address (or UTXO or whatever you want to call it). If you just filter on
> any transaction that includes that address, you may not catch all of those
> transactions. Same with incoming funds.
>
> There are also advantages for mining decentralization as I have explained
> in my previous posts. So still not sure you are right here...
>
> Thanks
>
> On Mon, Jun 15, 2015 at 5:18 PM, Mike Hearn <mike at plan99.net> wrote:
>
>> It's simple: either you care about validation, and you must validate
>>> everything, or you don't, and you don't validate anything.
>>>
>> Pedantically: you could validate a random subset of all scripts, to give
>> yourself probabilistic verification rather than full vs SPV. If enough
>> people do it with a large enough subset the probability of a problem being
>> detected goes up a lot. You still pay the cost of the database updates.
>>
>> But your main point is of course completely right, that side chains are
>> not a way to scale up.
>>
>
>
>
> --
> PGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647
>



-- 
PGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/7e65cca0/attachment.html>

From c1.sf-bitcoin at niftybox.net  Tue Jun 16 15:52:45 2015
From: c1.sf-bitcoin at niftybox.net (devrandom)
Date: Tue, 16 Jun 2015 08:52:45 -0700
Subject: [Bitcoin-development] The Bitcoin Node Market
In-Reply-To: <CACq0ZD5uYikAfVuep8XCgEs-53NbF-SYhvm4qneZsEQdgd=6rw@mail.gmail.com>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>	<CA+c4Zoy6U9RXH3Qw15sXXnaeYL-9PFbnTp=VLAJsvpC_zoAK_A@mail.gmail.com>	<CAEY8wq41ftFA1ObyUWiRGOgebwqDCAw_j+hU6_wfcXv5GSZaJw@mail.gmail.com>	<201506160341.10994.luke@dashjr.org>	<CAEY8wq4SOddGUJNqkrdhhfQEn4tXehCWiifk-P=PYUdfFcXFTQ@mail.gmail.com>	<a9e2e033c786fb7f99bcf7505ad45f21@riseup.net>
	<CACq0ZD5uYikAfVuep8XCgEs-53NbF-SYhvm4qneZsEQdgd=6rw@mail.gmail.com>
Message-ID: <5580464D.6020904@niftybox.net>

On 2015-06-16 12:55 AM, Aaron Voisine wrote:
>> Suppose a billion mobile phones wanted to run SPV wallets tomorrow. Who
>> would provide the nodes they would need connect to? 
> 
> The SPV wallet author would if they wanted their wallet to function.

I would also guess that the cost to provide service to SPV wallets is
less than $0.01/mo per wallet and in any case less than long-term
transaction fees.  This can either be taken up by the wallet author or
transparently through a payment channel by the user.

> 
> 
> Aaron Voisine
> co-founder and CEO
> breadwallet.com <http://breadwallet.com>

-- 
devrandom / Miron



From kalle at rosenbaum.se  Tue Jun 16 16:22:40 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Tue, 16 Jun 2015 18:22:40 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <55802D0D.4090506@thinlink.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
	<CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>
	<CAPg+sBiWykR6RaHhbyYQbL=A5t1TmHgEmS_sC7jj9d3SUTMO9g@mail.gmail.com>
	<CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>
	<CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>
	<557FB36B.1030902@thinlink.com>
	<CAPswA9xYoNCW8wRMC9cVDQ5Ww-L5J+pCqom5YC5-hzu9ggW8pw@mail.gmail.com>
	<55802D0D.4090506@thinlink.com>
Message-ID: <CAPswA9yw8=tRep2o94ztRYp+K+sWvubYMDvS+usx+rpk6CrxAA@mail.gmail.com>

Thank you for the clarification Tom!

/Kalle

2015-06-16 16:05 GMT+02:00 Tom Harding <tomh at thinlink.com>:
> On 6/16/2015 5:12 AM, Kalle Rosenbaum wrote:
>> 2015-06-16 7:26 GMT+02:00 Tom Harding <tomh at thinlink.com>:
>>> Kalle goes to some trouble to describe how merchants need to ensure that
>>> they only accept a PoP provided as a response to their challenge.
>>>
>> Do you mean that it will be hard to explain to merchants that they
>> must check the nonce in the PoP so that it matches the nonce in the
>> pop request?
>
> Sorry for the idiomatic language.  No, I just meant that you have
> thought it out in detail!  You standardize a latent capability of the
> cryptosystem.  It seems very powerful for some classes of users.
>
>



From odinn.cyberguerrilla at riseup.net  Tue Jun 16 16:26:07 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Tue, 16 Jun 2015 09:26:07 -0700
Subject: [Bitcoin-development] Reusable payment codes
In-Reply-To: <CAHabJ+Mn0=vfLvTJ+z3tx8cFAAuLD1pLp4rOe3pM6MtCrCxjwg@mail.gmail.com>
References: <CAHabJ+Mn0=vfLvTJ+z3tx8cFAAuLD1pLp4rOe3pM6MtCrCxjwg@mail.gmail.com>
Message-ID: <55804E1F.7000104@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

This is very well done.

Have you seen this discussion that I started regarding BIP 63?

https://bitcointalk.org/index.php?topic=1083961.0

I have no response from Peter Todd back on it other than "my time is
better spent focusing on more fundemental issues" and "I've also got
no-one interested in funding stealth address development right now,"
when several people (myself included) offered to send donations to see
the BIP (63) advance, no donation address was posted, so... waiting
for him to act on that.

I'm definitely supportive of seeing what you've written up here as
Reusable payment codes move to draft in https://github.com/bitcoin/bips
When you can, please write up something on bitcointalk as well.


On 04/24/2015 01:00 PM, Justus Ranvier wrote:
> Hash: SHA1
> 
> 
> https://github.com/justusranvier/rfc/blob/payment_code/bips/bip-pc01.m
ediawiki
>
> 
> 
> This link contains an RFC for a new type of Bitcoin address called
> a "payment code"
> 
> 
> Payment codes are SPV-friendly alternatives to DarkWallet-style
> stealth addresses which provide useful features such as positively
> identifying senders to recipients and automatically providing for
> transaction refunds.
> 
> 
> Payment codes can be publicly advertised and associated with a
> real-life identity without causing a loss of financial privacy.
> 
> 
> Compared to stealth addresses, payment codes require less
> blockchain data storage.
> 
> 
> Payment codes require 65 bytes of OP_RETURN data per
> sender-recipient pair, while stealth addresses require 40 bytes per
> transaction.
> 
> 
> 
> 
> 
> ----------------------------------------------------------------------
- --------
>
> 
One dashboard for servers and applications across Physical-Virtual-Cloud
> Widest out-of-the-box monitoring support with 50+ applications 
> Performance metrics, stats and reports that give you Actionable
> Insights Deep dive visibility with transaction tracing using APM
> Insight. http://ad.doubleclick.net/ddm/clk/290420510;117567292;y
> 
> 
> 
> _______________________________________________ Bitcoin-development
> mailing list Bitcoin-development at lists.sourceforge.net 
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVgE4fAAoJEGxwq/inSG8CjgkH/i0aX4aJaOjrbI2xzWbPeL1T
/APSvSqV0D610ljbw/MuRRFVagnK3lCs73fYolKw9uFG0cnwhIWJ53mCqPWhM5nL
kIejDTHr9jQ2tbXrU2L481Oat1Z6vtdQj7LolXFfD3Ktqz+sqp//gBaC9EEZ5nOq
4oz71Am58pf8+XGhtJk0+4XDXzFNd71bKKY+nMf9f3bwqNX93jHiF48hXwijFPC4
MOZmYRh3Sf5LAVP5p1JY3aJRQv4M/W0L2RDC+GW8Ol997etQSGGLhESihNNPw1m8
GEqJLBmUBkavzsRpZ009czfzL7EiCwsMbOrVw918o2Y9NnVpY9a9cBNB+UJgCmk=
=wAGz
-----END PGP SIGNATURE-----



From voisine at gmail.com  Tue Jun 16 17:04:30 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Tue, 16 Jun 2015 10:04:30 -0700
Subject: [Bitcoin-development] The Bitcoin Node Market
In-Reply-To: <e471f72fdba349d0a6d66f1c8772f6e8@riseup.net>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CA+c4Zoy6U9RXH3Qw15sXXnaeYL-9PFbnTp=VLAJsvpC_zoAK_A@mail.gmail.com>
	<CAEY8wq41ftFA1ObyUWiRGOgebwqDCAw_j+hU6_wfcXv5GSZaJw@mail.gmail.com>
	<201506160341.10994.luke@dashjr.org>
	<CAEY8wq4SOddGUJNqkrdhhfQEn4tXehCWiifk-P=PYUdfFcXFTQ@mail.gmail.com>
	<a9e2e033c786fb7f99bcf7505ad45f21@riseup.net>
	<CACq0ZD5uYikAfVuep8XCgEs-53NbF-SYhvm4qneZsEQdgd=6rw@mail.gmail.com>
	<e471f72fdba349d0a6d66f1c8772f6e8@riseup.net>
Message-ID: <CACq0ZD5y-yeiqqTu4sq0MZ2Ta=Xd_t0eOHg9PTfyg=XgVoF-Ag@mail.gmail.com>

With their money, if they were to take advantage of optional additional
financial services, like, as one example, comsumer protection insurance.

Aaron

On Tuesday, June 16, 2015, <justusranvier at riseup.net> wrote:

> On 2015-06-16 07:55, Aaron Voisine wrote:
>
>> Suppose a billion mobile phones wanted to run SPV wallets tomorrow. Who
>>> would provide the nodes they would need connect to?
>>>
>>
>> The SPV wallet author would if they wanted their wallet to function.
>>
>
> How will the SPV wallet users pay for this service? With their money, or
> with their privacy?
>


-- 

Aaron Voisine
co-founder and CEO
breadwallet.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/cc05c161/attachment.html>

From voisine at gmail.com  Tue Jun 16 17:22:54 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Tue, 16 Jun 2015 10:22:54 -0700
Subject: [Bitcoin-development] The Bitcoin Node Market
In-Reply-To: <e471f72fdba349d0a6d66f1c8772f6e8@riseup.net>
References: <CALqxMTHrnSS9MGgKO-5+=fVhiOOvk12Recs11S0PcSUxQT1wdQ@mail.gmail.com>
	<CA+c4Zoy6U9RXH3Qw15sXXnaeYL-9PFbnTp=VLAJsvpC_zoAK_A@mail.gmail.com>
	<CAEY8wq41ftFA1ObyUWiRGOgebwqDCAw_j+hU6_wfcXv5GSZaJw@mail.gmail.com>
	<201506160341.10994.luke@dashjr.org>
	<CAEY8wq4SOddGUJNqkrdhhfQEn4tXehCWiifk-P=PYUdfFcXFTQ@mail.gmail.com>
	<a9e2e033c786fb7f99bcf7505ad45f21@riseup.net>
	<CACq0ZD5uYikAfVuep8XCgEs-53NbF-SYhvm4qneZsEQdgd=6rw@mail.gmail.com>
	<e471f72fdba349d0a6d66f1c8772f6e8@riseup.net>
Message-ID: <CACq0ZD71c8WTvioW=X5GdTKg-57jsF6OxzPm9GFJje6yWz7afA@mail.gmail.com>

Alternate funding strategy: With 1billion users, mr roger ver is now among
the worlds first $trillionaires, and he generously donates to the
non-profit organization responsible for both the wildly popular wallet, and
his new found largess.

On Tuesday, June 16, 2015, justusranvier at riseup.net <
justusranvier at riseup.net> wrote:

> On 2015-06-16 07:55, Aaron Voisine wrote:
>
>> Suppose a billion mobile phones wanted to run SPV wallets tomorrow. Who
>>> would provide the nodes they would need connect to?
>>>
>>
>> The SPV wallet author would if they wanted their wallet to function.
>>
>
> How will the SPV wallet users pay for this service? With their money, or
> with their privacy?
>


-- 

Aaron Voisine
co-founder and CEO
breadwallet.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/12b54e37/attachment.html>

From pete at petertodd.org  Tue Jun 16 17:46:41 2015
From: pete at petertodd.org (Peter Todd)
Date: Tue, 16 Jun 2015 18:46:41 +0100
Subject: [Bitcoin-development] Reusable payment codes
In-Reply-To: <55804E1F.7000104@riseup.net>
References: <CAHabJ+Mn0=vfLvTJ+z3tx8cFAAuLD1pLp4rOe3pM6MtCrCxjwg@mail.gmail.com>
	<55804E1F.7000104@riseup.net>
Message-ID: <20150616174641.GA29819@muck>

On Tue, Jun 16, 2015 at 09:26:07AM -0700, odinn wrote:
> This is very well done.
> 
> Have you seen this discussion that I started regarding BIP 63?
> 
> https://bitcointalk.org/index.php?topic=1083961.0
> 
> I have no response from Peter Todd back on it other than "my time is
> better spent focusing on more fundemental issues" and "I've also got
> no-one interested in funding stealth address development right now,"
> when several people (myself included) offered to send donations to see
> the BIP (63) advance, no donation address was posted, so... waiting
> for him to act on that.

Sorry, but I'm looking at the huge amount of work that I'll likely have
responding to the blocksize issue, so I think I'm inclined to shelve
work on BIP63 for now.

Feel free to take it up; a (>=2)-part standard describing the resuable
codes aspect, and separately how the ephemeral key is transmitted to the
recipient makes sense to me.

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/534697e6/attachment.sig>

From pete at petertodd.org  Tue Jun 16 18:17:24 2015
From: pete at petertodd.org (Peter Todd)
Date: Tue, 16 Jun 2015 19:17:24 +0100
Subject: [Bitcoin-development] Scaling Bitcoin with Subchains
In-Reply-To: <CAJHLa0OJg2hC4Ab4Yxy3ekH4WXD9hqHore8+sbF9r1r2SwT_zg@mail.gmail.com>
References: <CAL8tG==LG=xC_DzOaghbGGKab4=UVpGLQV7781pU4wg+WnFdMg@mail.gmail.com>
	<CAPg+sBjqQ66f1Rmhi9HOBYP5BDjBHvTNPpUN-y3o-KX8dXBMhg@mail.gmail.com>
	<557D2571.601@gmail.com>
	<CAL8tG=kEv9AfQM+1Rv+tqBujFEjCp+BsjQ-1s7eJC-usogFFqw@mail.gmail.com>
	<CAPg+sBjrSed4r+8-d2RGBVhbzaXxX+o=qqw2u-2jpF2RUqmEmA@mail.gmail.com>
	<CAJHLa0OJg2hC4Ab4Yxy3ekH4WXD9hqHore8+sbF9r1r2SwT_zg@mail.gmail.com>
Message-ID: <20150616181724.GA4055@muck>

On Mon, Jun 15, 2015 at 01:15:14PM -0400, Jeff Garzik wrote:
> On Mon, Jun 15, 2015 at 1:09 PM, Pieter Wuille <pieter.wuille at gmail.com>
> wrote:
> 
> > It's simple: either you care about validation, and you must validate
> > everything, or you don't, and you don't validate anything. Sidechains do
> > not offer you a useful compromise here, as well as adding huge delays and
> > conplexity.
> >
> 
> As noted to Adam last night - although I agree it adds complexity - side
> chains are one solution that will indeed help with scaling long term.
> Similar to the graph you see with git repos and merges, having aggregation
> chains that arbitrarily fork and then rejoin the main chain are both
> feasible and useful.
> 
> That code & future is a ways away from production, so doesn't help us
> here.  Still, let's not dismiss it as a solution either.

To be clear, it depends on what kind of sidechain.

My off-chain transaction notions are federated sidechains with an
economic incentive to not commit fraud using fidelity bonds; they were
definitely proposed as a scaling solution.

Merge-mined sidechains are not a scaling solution any more than SPV is a
scaling solution because they don't solve the scaling problem for
miners.

Some kind of treechain like sidechain / subchains where what part of the
tree miners can mine is constrained to preserve fairness could be both a
scaling solution, and decentralized, but no-one has come up with a solid
design yet that's ready for production. (my treechains don't qualify for
transactions yet; maybe for other proof-of-publication uses)

Keep in mind that other than preserving mining
decentralization/resisting censorship, we've known how to scale up
blockchains for ages w/ things like (U)TXO commitments and fraud proofs.

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/3fa76edc/attachment.sig>

From onelineproof at gmail.com  Tue Jun 16 18:43:25 2015
From: onelineproof at gmail.com (Andrew)
Date: Tue, 16 Jun 2015 18:43:25 +0000
Subject: [Bitcoin-development] Scaling Bitcoin with Subchains
In-Reply-To: <20150616181724.GA4055@muck>
References: <CAL8tG==LG=xC_DzOaghbGGKab4=UVpGLQV7781pU4wg+WnFdMg@mail.gmail.com>
	<CAPg+sBjqQ66f1Rmhi9HOBYP5BDjBHvTNPpUN-y3o-KX8dXBMhg@mail.gmail.com>
	<557D2571.601@gmail.com>
	<CAL8tG=kEv9AfQM+1Rv+tqBujFEjCp+BsjQ-1s7eJC-usogFFqw@mail.gmail.com>
	<CAPg+sBjrSed4r+8-d2RGBVhbzaXxX+o=qqw2u-2jpF2RUqmEmA@mail.gmail.com>
	<CAJHLa0OJg2hC4Ab4Yxy3ekH4WXD9hqHore8+sbF9r1r2SwT_zg@mail.gmail.com>
	<20150616181724.GA4055@muck>
Message-ID: <CAL8tG==iJwqPBVTDap=8TC9eCUz4ExfxtGz6p75FXbQJXaByMQ@mail.gmail.com>

On Tue, Jun 16, 2015 at 6:17 PM, Peter Todd <pete at petertodd.org> wrote:

> Merge-mined sidechains are not a scaling solution any more than SPV is a
> scaling solution because they don't solve the scaling problem for
> miners.
>
> Some kind of treechain like sidechain / subchains where what part of the
> tree miners can mine is constrained to preserve fairness could be both a
> scaling solution, and decentralized, but no-one has come up with a solid
> design yet that's ready for production. (my treechains don't qualify for
> transactions yet; maybe for other proof-of-publication uses)
>
>
Well doesn't my proposal solve the miner decentralization problem. Only the
direct parent and children chains are merge mined. To be more clear, let
the top chain to have level 1. Each chain that is a child of a chain of
level n has level n+1. For any chain C, a block is accepted if the hash of
its header has an appropriate number of trailing zeros (as usual). It can
also be accepted with special transactions as I will explain. Let C be a
chain of level n. Let C0,C1,....,C9 be its children (each of level n+1).
For any i in {0,1,...,9}, any solution to the mining problem of C can be
inserted as a special transaction inside Ci and this enables the block to
be accepted in Ci (so C and C0,C1,...,C9 are merge mined. But, for any i in
{0,1,...,9} and any j in {0,1,...,9}, any solution to the mining problem of
C cannot be inserted as a special transaction inside of child Cij of Ci. So
that means all of the chains are not merge mined, only localised parts,
right?

By the way, we can eventually get rid of the block size 1 MB limit by
requiring more than just the header to be hashed, but that can be done in
the future as soft fork with sidechains, and is a side topic.


-- 
PGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/f1e0d73a/attachment.html>

From onelineproof at gmail.com  Tue Jun 16 19:04:44 2015
From: onelineproof at gmail.com (Andrew)
Date: Tue, 16 Jun 2015 19:04:44 +0000
Subject: [Bitcoin-development] Scaling Bitcoin with Subchains
In-Reply-To: <CAL8tG==iJwqPBVTDap=8TC9eCUz4ExfxtGz6p75FXbQJXaByMQ@mail.gmail.com>
References: <CAL8tG==LG=xC_DzOaghbGGKab4=UVpGLQV7781pU4wg+WnFdMg@mail.gmail.com>
	<CAPg+sBjqQ66f1Rmhi9HOBYP5BDjBHvTNPpUN-y3o-KX8dXBMhg@mail.gmail.com>
	<557D2571.601@gmail.com>
	<CAL8tG=kEv9AfQM+1Rv+tqBujFEjCp+BsjQ-1s7eJC-usogFFqw@mail.gmail.com>
	<CAPg+sBjrSed4r+8-d2RGBVhbzaXxX+o=qqw2u-2jpF2RUqmEmA@mail.gmail.com>
	<CAJHLa0OJg2hC4Ab4Yxy3ekH4WXD9hqHore8+sbF9r1r2SwT_zg@mail.gmail.com>
	<20150616181724.GA4055@muck>
	<CAL8tG==iJwqPBVTDap=8TC9eCUz4ExfxtGz6p75FXbQJXaByMQ@mail.gmail.com>
Message-ID: <CAL8tG=m6qgANCunZAnm8m_r_tBYq9Kw3XgA7s_ZzKkyCyCEd8w@mail.gmail.com>

Actually, I have to think about this merge-mining thing a bit more. I'm
starting to think it's better to do without merge-mining at all. As I
explained in the forum post, the parent will put the hashes of its children
headers as transactions inside its blocks. Thus parents will have an
incentive to validate the children not by merge mining, but by collecting
fees from the children for putting those transactions inside (fees that can
be spent at the children chains). So, ya no merge mining needed for my
proposal. But I will think about it a bit more :)

On Tue, Jun 16, 2015 at 6:43 PM, Andrew <onelineproof at gmail.com> wrote:

>
>
> On Tue, Jun 16, 2015 at 6:17 PM, Peter Todd <pete at petertodd.org> wrote:
>
>> Merge-mined sidechains are not a scaling solution any more than SPV is a
>> scaling solution because they don't solve the scaling problem for
>> miners.
>>
>> Some kind of treechain like sidechain / subchains where what part of the
>> tree miners can mine is constrained to preserve fairness could be both a
>> scaling solution, and decentralized, but no-one has come up with a solid
>> design yet that's ready for production. (my treechains don't qualify for
>> transactions yet; maybe for other proof-of-publication uses)
>>
>>
> Well doesn't my proposal solve the miner decentralization problem. Only
> the direct parent and children chains are merge mined. To be more clear,
> let the top chain to have level 1. Each chain that is a child of a chain of
> level n has level n+1. For any chain C, a block is accepted if the hash of
> its header has an appropriate number of trailing zeros (as usual). It can
> also be accepted with special transactions as I will explain. Let C be a
> chain of level n. Let C0,C1,....,C9 be its children (each of level n+1).
> For any i in {0,1,...,9}, any solution to the mining problem of C can be
> inserted as a special transaction inside Ci and this enables the block to
> be accepted in Ci (so C and C0,C1,...,C9 are merge mined. But, for any i in
> {0,1,...,9} and any j in {0,1,...,9}, any solution to the mining problem of
> C cannot be inserted as a special transaction inside of child Cij of Ci. So
> that means all of the chains are not merge mined, only localised parts,
> right?
>
> By the way, we can eventually get rid of the block size 1 MB limit by
> requiring more than just the header to be hashed, but that can be done in
> the future as soft fork with sidechains, and is a side topic.
>
>
> --
> PGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647
>



-- 
PGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/539d8088/attachment.html>

From kalle at rosenbaum.se  Tue Jun 16 19:22:54 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Tue, 16 Jun 2015 21:22:54 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPg+sBjp-BmSXhanOuKE0DN1wdfVwCtFwiAbPse1GLxy3+L3nA@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
	<CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>
	<CAPg+sBiWykR6RaHhbyYQbL=A5t1TmHgEmS_sC7jj9d3SUTMO9g@mail.gmail.com>
	<CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>
	<CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>
	<CAPswA9yB3wfV1auXR=ggXjh+f1C3Qpkv8qP1miQwkc8R2_aBLg@mail.gmail.com>
	<CAPg+sBjp-BmSXhanOuKE0DN1wdfVwCtFwiAbPse1GLxy3+L3nA@mail.gmail.com>
Message-ID: <CAPswA9zzKvh6G+NqzTmhrNXMSWOPtZ2DGW2t_2Jrisy8x9m2qw@mail.gmail.com>

Thank you for your comments Pieter! Please find my answers below.

2015-06-16 16:31 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
> On Mon, Jun 15, 2015 at 1:59 PM, Kalle Rosenbaum <kalle at rosenbaum.se> wrote:
>>
>> 2015-06-15 12:00 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
>> I'm not sure if we will be able to support PoP with CoinJoin. Maybe
>> someone with more insight into CoinJoin have some input?
>
>
> Not really. The problem is that you assume a transaction corresponds to a
> single payment. This is true for simple wallet use cases, but not compatible
> with CoinJoin, or with systems that for example would want to combine
> multiple payments in a single transaction.
>

Yes, you are right. It's not compatible with CoinJoin and the likes.

>
> 48 bits seems low to me, but it does indeed solve the problem. Why not 128
> or 256 bits?

The nonce is limited because of the OP_RETURN output being limited to
40 bytes of data: 2 bytes version, 32 bytes txid, 6 bytes nonce.

>
>> > Why does anyone care who paid? This is like walking into a coffeshop,
>> > noticing I don't have money with me, let me friend pay for me, and then
>> > have
>> > the shop insist that I can't drink it because I'm not the buyer.
>>
>> If you pay as you use the service (ie pay for coffee upfront), there's
>> no need for PoP. Please see the Motivation section. But you are right
>> that you must have the wallet(s) that paid at hand when you issue a
>> PoP.
>>
>> >
>> > Track payments, don't try to assign identities to payers.
>>
>> Please elaborate, I don't understand what you mean here.
>
>
> I think that is a mistake. You should not assume that the wallet who held
> the coins is the payer/buyer. That's what I said earlier; you're implicitly
> creating an identity (the one who holds these keys) based on the
> transaction. This seems fundamentally wrong to me, and not necessary. The
> receiver should not care who paid or how, he should care what was payed for.

You are saying that it's a problem that the wallet used to pay, must
also be used to issue the PoP? That may very well be a problem in some
cases. People using PoP should of course be aware of it's limitations
and act accordingly, i.e. don't pay for concert tickets for a friend
and expect your friend to be able to enter the arena with her wallet.
As Tom Harding noted, it is possible to transfer keys to your friend's
wallet, but that might not be desirable if those keys are also used
for other payments. Also that would weaken the security of an HD
wallet, since a chain code along with a private key would reveal all
keys in that tree. Another solution is that your friend forwards the
PoP request to your wallet, through twitter or SMS, and you send the
PoP for her. Maybe that forwarding mechanism can be built into wallets
and automated so that the wallet automatically suggests to sign the
PoP for your friend. This is probably something to investigate
further, but not within the scope of this BIP.

Of course the simplest solution would be to send money to your friend
first so that she can pay for the ticket from her own wallet, but
that's not always feasible.

>
> The easiest solution to this IMHO would be an extension to the payment
> protocol that gives you (or your wallet) a token in return for paying, and
> that knowledge of that token is used to gain access to the services you
> provide.
>

That token would then be reusable. Someone stealing it would be able
to use it as much as she wants. That is what I want to avoid with PoP.
The BIP proposal briefly mentions something like this in the
rationale. I also had a discussion about this with Mike Hearn on this
list on Mars 13 that I think covers most pros and cons of the
different approaches.

While your suggestion does indeed separate the transaction from the
proof of payment, it also assumes that the token is held in the wallet
that pays. Otherwise you would need to keep it in another safe place,
remember it's reusable. Where would that be? How would you transfer
that token to your friend?

Thank you again for your comments. I appreciate it.

Best regards,
Kalle

> --
> Pieter
>



From pieter.wuille at gmail.com  Tue Jun 16 19:25:12 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Tue, 16 Jun 2015 21:25:12 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPswA9zzKvh6G+NqzTmhrNXMSWOPtZ2DGW2t_2Jrisy8x9m2qw@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
	<CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>
	<CAPg+sBiWykR6RaHhbyYQbL=A5t1TmHgEmS_sC7jj9d3SUTMO9g@mail.gmail.com>
	<CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>
	<CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>
	<CAPswA9yB3wfV1auXR=ggXjh+f1C3Qpkv8qP1miQwkc8R2_aBLg@mail.gmail.com>
	<CAPg+sBjp-BmSXhanOuKE0DN1wdfVwCtFwiAbPse1GLxy3+L3nA@mail.gmail.com>
	<CAPswA9zzKvh6G+NqzTmhrNXMSWOPtZ2DGW2t_2Jrisy8x9m2qw@mail.gmail.com>
Message-ID: <CAPg+sBhZCayaxNg_thO=nzxvuo-xZ-ZeZMXEVWb6Mw2POreOZQ@mail.gmail.com>

You can't avoid sharing the token, and you can't avoid sharing the private
keys used for signing either. If they are single use, you don't lose
anything by sharing them.

Also you are not creating a real transaction. Why does the OP_RETURN
limitation matter?
On Jun 16, 2015 9:22 PM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:

> Thank you for your comments Pieter! Please find my answers below.
>
> 2015-06-16 16:31 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
> > On Mon, Jun 15, 2015 at 1:59 PM, Kalle Rosenbaum <kalle at rosenbaum.se>
> wrote:
> >>
> >> 2015-06-15 12:00 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
> >> I'm not sure if we will be able to support PoP with CoinJoin. Maybe
> >> someone with more insight into CoinJoin have some input?
> >
> >
> > Not really. The problem is that you assume a transaction corresponds to a
> > single payment. This is true for simple wallet use cases, but not
> compatible
> > with CoinJoin, or with systems that for example would want to combine
> > multiple payments in a single transaction.
> >
>
> Yes, you are right. It's not compatible with CoinJoin and the likes.
>
> >
> > 48 bits seems low to me, but it does indeed solve the problem. Why not
> 128
> > or 256 bits?
>
> The nonce is limited because of the OP_RETURN output being limited to
> 40 bytes of data: 2 bytes version, 32 bytes txid, 6 bytes nonce.
>
> >
> >> > Why does anyone care who paid? This is like walking into a coffeshop,
> >> > noticing I don't have money with me, let me friend pay for me, and
> then
> >> > have
> >> > the shop insist that I can't drink it because I'm not the buyer.
> >>
> >> If you pay as you use the service (ie pay for coffee upfront), there's
> >> no need for PoP. Please see the Motivation section. But you are right
> >> that you must have the wallet(s) that paid at hand when you issue a
> >> PoP.
> >>
> >> >
> >> > Track payments, don't try to assign identities to payers.
> >>
> >> Please elaborate, I don't understand what you mean here.
> >
> >
> > I think that is a mistake. You should not assume that the wallet who held
> > the coins is the payer/buyer. That's what I said earlier; you're
> implicitly
> > creating an identity (the one who holds these keys) based on the
> > transaction. This seems fundamentally wrong to me, and not necessary. The
> > receiver should not care who paid or how, he should care what was payed
> for.
>
> You are saying that it's a problem that the wallet used to pay, must
> also be used to issue the PoP? That may very well be a problem in some
> cases. People using PoP should of course be aware of it's limitations
> and act accordingly, i.e. don't pay for concert tickets for a friend
> and expect your friend to be able to enter the arena with her wallet.
> As Tom Harding noted, it is possible to transfer keys to your friend's
> wallet, but that might not be desirable if those keys are also used
> for other payments. Also that would weaken the security of an HD
> wallet, since a chain code along with a private key would reveal all
> keys in that tree. Another solution is that your friend forwards the
> PoP request to your wallet, through twitter or SMS, and you send the
> PoP for her. Maybe that forwarding mechanism can be built into wallets
> and automated so that the wallet automatically suggests to sign the
> PoP for your friend. This is probably something to investigate
> further, but not within the scope of this BIP.
>
> Of course the simplest solution would be to send money to your friend
> first so that she can pay for the ticket from her own wallet, but
> that's not always feasible.
>
> >
> > The easiest solution to this IMHO would be an extension to the payment
> > protocol that gives you (or your wallet) a token in return for paying,
> and
> > that knowledge of that token is used to gain access to the services you
> > provide.
> >
>
> That token would then be reusable. Someone stealing it would be able
> to use it as much as she wants. That is what I want to avoid with PoP.
> The BIP proposal briefly mentions something like this in the
> rationale. I also had a discussion about this with Mike Hearn on this
> list on Mars 13 that I think covers most pros and cons of the
> different approaches.
>
> While your suggestion does indeed separate the transaction from the
> proof of payment, it also assumes that the token is held in the wallet
> that pays. Otherwise you would need to keep it in another safe place,
> remember it's reusable. Where would that be? How would you transfer
> that token to your friend?
>
> Thank you again for your comments. I appreciate it.
>
> Best regards,
> Kalle
>
> > --
> > Pieter
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/e854b9db/attachment.html>

From pieter.wuille at gmail.com  Tue Jun 16 19:48:54 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Tue, 16 Jun 2015 21:48:54 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPswA9yFUAqFyNBFBnnwpT=B9RcdNssdjz-_KWbX5GuLM5Uyxw@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
	<CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>
	<CAPg+sBiWykR6RaHhbyYQbL=A5t1TmHgEmS_sC7jj9d3SUTMO9g@mail.gmail.com>
	<CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>
	<CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>
	<CAPswA9yB3wfV1auXR=ggXjh+f1C3Qpkv8qP1miQwkc8R2_aBLg@mail.gmail.com>
	<CAPg+sBjp-BmSXhanOuKE0DN1wdfVwCtFwiAbPse1GLxy3+L3nA@mail.gmail.com>
	<CAPswA9zzKvh6G+NqzTmhrNXMSWOPtZ2DGW2t_2Jrisy8x9m2qw@mail.gmail.com>
	<CAPg+sBhZCayaxNg_thO=nzxvuo-xZ-ZeZMXEVWb6Mw2POreOZQ@mail.gmail.com>
	<CAPswA9yFUAqFyNBFBnnwpT=B9RcdNssdjz-_KWbX5GuLM5Uyxw@mail.gmail.com>
Message-ID: <CAPg+sBigK7K2YVnhcU5Ysf0d0Gbp+GaNdGoKZCco5zvYLKDxFw@mail.gmail.com>

I don't see why existing software could create a 40-byte OP_RETURN but not
larger? The limitation comes from a relay policy in full nodes, not a
limitation is wallet software... and PoPs are not relayed on the network.

Regarding sharing, I think you're talking about a different use case. Say
you want to pay for 1-week valid entrance to some venue. I thought the
purpose of the PoP was to be sure that only the person who paid for it, and
not anyone else can use it during that week.

My argument against that is that the original payer can also hand the
private keys in his wallet to someone else, who would then become able to
create PoPs for the service. He does not lose anything by this, assuming
the address is not reused.

So, using a token does not change anything, except it can be provided to
the payer - instead of relying on creating an implicit identity based on
who seems to have held particular private keys in the past.
On Jun 16, 2015 9:41 PM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:

> 2015-06-16 21:25 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
> > You can't avoid sharing the token, and you can't avoid sharing the
> private
> > keys used for signing either. If they are single use, you don't lose
> > anything by sharing them.
>
> Forwarding the PoP request would be a way to avoid sharing keys, as
> suggested above.
>
> >
> > Also you are not creating a real transaction. Why does the OP_RETURN
> > limitation matter?
>
> This was discussed in the beginning of this thread: "The idea is to
> simplify implementation. Existing software can be used as is to sign
> and validate PoPs"
>
> Regards,
> Kalle
>
> >
> > On Jun 16, 2015 9:22 PM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:
> >>
> >> Thank you for your comments Pieter! Please find my answers below.
> >>
> >> 2015-06-16 16:31 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
> >> > On Mon, Jun 15, 2015 at 1:59 PM, Kalle Rosenbaum <kalle at rosenbaum.se>
> >> > wrote:
> >> >>
> >> >> 2015-06-15 12:00 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
> >> >> I'm not sure if we will be able to support PoP with CoinJoin. Maybe
> >> >> someone with more insight into CoinJoin have some input?
> >> >
> >> >
> >> > Not really. The problem is that you assume a transaction corresponds
> to
> >> > a
> >> > single payment. This is true for simple wallet use cases, but not
> >> > compatible
> >> > with CoinJoin, or with systems that for example would want to combine
> >> > multiple payments in a single transaction.
> >> >
> >>
> >> Yes, you are right. It's not compatible with CoinJoin and the likes.
> >>
> >> >
> >> > 48 bits seems low to me, but it does indeed solve the problem. Why not
> >> > 128
> >> > or 256 bits?
> >>
> >> The nonce is limited because of the OP_RETURN output being limited to
> >> 40 bytes of data: 2 bytes version, 32 bytes txid, 6 bytes nonce.
> >>
> >> >
> >> >> > Why does anyone care who paid? This is like walking into a
> coffeshop,
> >> >> > noticing I don't have money with me, let me friend pay for me, and
> >> >> > then
> >> >> > have
> >> >> > the shop insist that I can't drink it because I'm not the buyer.
> >> >>
> >> >> If you pay as you use the service (ie pay for coffee upfront),
> there's
> >> >> no need for PoP. Please see the Motivation section. But you are right
> >> >> that you must have the wallet(s) that paid at hand when you issue a
> >> >> PoP.
> >> >>
> >> >> >
> >> >> > Track payments, don't try to assign identities to payers.
> >> >>
> >> >> Please elaborate, I don't understand what you mean here.
> >> >
> >> >
> >> > I think that is a mistake. You should not assume that the wallet who
> >> > held
> >> > the coins is the payer/buyer. That's what I said earlier; you're
> >> > implicitly
> >> > creating an identity (the one who holds these keys) based on the
> >> > transaction. This seems fundamentally wrong to me, and not necessary.
> >> > The
> >> > receiver should not care who paid or how, he should care what was
> payed
> >> > for.
> >>
> >> You are saying that it's a problem that the wallet used to pay, must
> >> also be used to issue the PoP? That may very well be a problem in some
> >> cases. People using PoP should of course be aware of it's limitations
> >> and act accordingly, i.e. don't pay for concert tickets for a friend
> >> and expect your friend to be able to enter the arena with her wallet.
> >> As Tom Harding noted, it is possible to transfer keys to your friend's
> >> wallet, but that might not be desirable if those keys are also used
> >> for other payments. Also that would weaken the security of an HD
> >> wallet, since a chain code along with a private key would reveal all
> >> keys in that tree. Another solution is that your friend forwards the
> >> PoP request to your wallet, through twitter or SMS, and you send the
> >> PoP for her. Maybe that forwarding mechanism can be built into wallets
> >> and automated so that the wallet automatically suggests to sign the
> >> PoP for your friend. This is probably something to investigate
> >> further, but not within the scope of this BIP.
> >>
> >> Of course the simplest solution would be to send money to your friend
> >> first so that she can pay for the ticket from her own wallet, but
> >> that's not always feasible.
> >>
> >> >
> >> > The easiest solution to this IMHO would be an extension to the payment
> >> > protocol that gives you (or your wallet) a token in return for paying,
> >> > and
> >> > that knowledge of that token is used to gain access to the services
> you
> >> > provide.
> >> >
> >>
> >> That token would then be reusable. Someone stealing it would be able
> >> to use it as much as she wants. That is what I want to avoid with PoP.
> >> The BIP proposal briefly mentions something like this in the
> >> rationale. I also had a discussion about this with Mike Hearn on this
> >> list on Mars 13 that I think covers most pros and cons of the
> >> different approaches.
> >>
> >> While your suggestion does indeed separate the transaction from the
> >> proof of payment, it also assumes that the token is held in the wallet
> >> that pays. Otherwise you would need to keep it in another safe place,
> >> remember it's reusable. Where would that be? How would you transfer
> >> that token to your friend?
> >>
> >> Thank you again for your comments. I appreciate it.
> >>
> >> Best regards,
> >> Kalle
> >>
> >> > --
> >> > Pieter
> >> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/25631cfb/attachment.html>

From rusty at rustcorp.com.au  Tue Jun 16 08:06:38 2015
From: rusty at rustcorp.com.au (Rusty Russell)
Date: Tue, 16 Jun 2015 17:36:38 +0930
Subject: [Bitcoin-development] [RFC] Canonical input and output ordering
	in transactions
In-Reply-To: <CABm2gDpBn744G0AbWDYj5aXQ6XbRzfnLpS=3z6NoWosaseFAWQ@mail.gmail.com>
References: <87k2vhfnx9.fsf@rustcorp.com.au>
	<CAAS2fgRgWZX_O_2O1bgdFd_04xVp5Lnpw4hf=v6RSTXmsbdzPQ@mail.gmail.com>
	<87r3pdembs.fsf@rustcorp.com.au>
	<CAAS2fgTY5cqwj5XuKtkD8Z8N1vF=PZMba8EtGkbWnEackOcN8Q@mail.gmail.com>
	<CAOG=w-tJjzrR_REJOShULfSO=T3ueHko-oQHdhqMCdZD0G_BDA@mail.gmail.com>
	<87eglcelf3.fsf@rustcorp.com.au>
	<CABm2gDpBn744G0AbWDYj5aXQ6XbRzfnLpS=3z6NoWosaseFAWQ@mail.gmail.com>
Message-ID: <87zj40cc1d.fsf@rustcorp.com.au>

Jorge Tim?n <jtimon at jtimon.cc> writes:
> On Jun 15, 2015 11:43 PM, "Rusty Russell" <rusty at rustcorp.com.au> wrote:
>
>> Though Peter Todd's more general best-effort language might make more
>> sense.  It's not like you can hide an OP_RETURN transaction to make it
>> look like something else, so that transaction not going to be
>> distinguished by non-canonical ordering.
>
> What about commitments that don't use op_return (ie pay2contract
> commitments)?

I have no idea what they are? :)

> In any case, if the motivation is ordering in multi-party transactions
> there should be ways to do it without any consequences for other
> transaction types' privacy. For example you could have a deterministic
> method that depends on a random seed all parties in the transaction
> previously share. That way the ordering is deterministic for all parties
> involved in the transaction (which can use whatever channel they're using
> to send the parts to also send this random seed) while at the same time the
> order looks random (or at least not cannonical in a recognisable way) to
> everyone else.

Yes, my plan B would be an informational bip with simple code,
suggesting a way to permute a transaction based on some secret.  No
point everyone reinventing the wheel, badly.

Cheers,
Rusty.



From gmaxwell at gmail.com  Tue Jun 16 23:32:43 2015
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 16 Jun 2015 23:32:43 +0000
Subject: [Bitcoin-development] Lost proposals from FellowTraveler/Monetas
Message-ID: <CAAS2fgRKFTVu-rzr9spQZtMBrV0oGYmWVbiAOOhxkW4NnuzjHg@mail.gmail.com>

Is there any discussion thats been had relating to the BIP-drafts at:

https://github.com/Open-Transactions/rfc/tree/master/bips

Fellow Traveler has apparently been waiting 9 months for progress on
these proposals and I'm trying to find out where the breakdown
happened. While do not doubt that I am somehow at fault, I can't
figure out how.

Searching my email and this list archive for "Base58 Serialization for
Transaction-Based Color Descriptors" or "Order-based Smart Property
Coloring" or the draft names bip-ccids, etc. turn up no hits at all.
I've asked several other people and there list archives show nothing.

Has anyone else taken part in discussions related to these proposals
(or seen them all before)? If so, please point me to the discussion.

Otherwise I'll just go ahead and create threads for each under the
assumption that there is yet another mailing list screwup. :(



From justus.ranvier at monetas.net  Tue Jun 16 23:44:45 2015
From: justus.ranvier at monetas.net (Justus Ranvier)
Date: Tue, 16 Jun 2015 23:44:45 +0000
Subject: [Bitcoin-development] Lost proposals from FellowTraveler/Monetas
Message-ID: <CAHabJ+Pqh_QDycWF4qjwy2duWntU7t2Z5FTw9sOTmx_BvhG7_A@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----

Hash: SHA512


On 2015-06-16 23:32, Gregory Maxwell wrote:

> Is there any discussion thats been had relating to the BIP-drafts at:

>

> https://github.com/Open-Transactions/rfc/tree/master/bips

>

> Fellow Traveler has apparently been waiting 9 months for progress on

> these proposals and I'm trying to find out where the breakdown

> happened. While do not doubt that I am somehow at fault, I can't

> figure out how.

>

> Searching my email and this list archive for "Base58 Serialization for

> Transaction-Based Color Descriptors" or "Order-based Smart Property

> Coloring" or the draft names bip-ccids, etc. turn up no hits at all.

> I've asked several other people and there list archives show nothing.


The only two proposals we sent to the mailing list were attached to this
post:


http://sourceforge.net/p/bitcoin/mailman/message/32736455/


The rest of the proposals in that respository, as well as those the fork
here:


https://github.com/Monetas/rfc/tree/master/bips


were never submitted because we decided to use alternative identifiers in
leiu of BIP numbers to serve as the purpose code in the HD path.

-----BEGIN PGP SIGNATURE-----

Version: GnuPG v2


iQIcBAEBCgAGBQJVgLRaAAoJECpf2nDq2eYjw7YQAJYrciEZZeasEJRR7XwZ5AWQ

9e/pz1SV2hoRs7TqHgHoXGINLbG9LwlXFmnoG14z+vwKvheJxlC6gOQCRIRwPfrR

zwuQWyoONHn82XL44ABqjnu0fmeh7egx3FIzsgDUxUgiP5dA0BuQvrT1+DptfJ+p

5sM7ZvRqfZJbek4AHk9Y4kERQYsP4HKgC1W3Acr1In9WPSj5TRtYz7tUK+SFcO+m

A3Ny5dUiAmmf5mfLZiWrEmCG34n+cCJZEU2hlQqH5ZuAHPmeTLuar91MLj/1Xltf

OFlMGhmUPy1alTx8o39nwRjfXIVQLk7/D5YB3gB2CUuXd+sWbY+6LUyniOKtQK3C

EmEDOUFSNm4JV1AmM+ea1HUufCJfkg1VHko4hsIyc1e7ztdECIzPQKAy7DAcu1YS

BhbkxNyaUqoF+J/ggrXhT/r5oVpWsifdj4IEzaMvmOxu+p+hTkzzwitLuyknEBZE

b2KWRMWNOheVpDp7RmrcTPqa4S1N8XcfJazDyigIhl0E/Bjk+pC1SHo7IIEMZMQ+

Fz7JaALd8XK0l7HBvvJnZmYwVLnQyB01B6n7z8eTTAneHhSXxa7Z1aFTkYU8Wp9o

L5nb1K7gJtjBFqhLi3PMLRhARao1Q/CK5bDt9Mb3VMy9jAIr9X9/NcL473cbHtQH

/h91bhkL9bvvkeCl5yQk

=NgfK

-----END PGP SIGNATURE-----
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/c69bd9f5/attachment.html>

From wtogami at gmail.com  Wed Jun 17 00:19:04 2015
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Tue, 16 Jun 2015 14:19:04 -1000
Subject: [Bitcoin-development] Proposal: Move Bitcoin Dev List to a
 Neutral Competent Entity
In-Reply-To: <CAEz79PrjoD3fvwqmr2+O+8myeQCV_4ZuX4q9zCkQdN=i=ovuMA@mail.gmail.com>
References: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>
	<CAJHLa0OOnYMuA-8qfHafw5D0zGw_U06PZaAKS2j=Av_KUhgt-A@mail.gmail.com>
	<CAEz79PrjoD3fvwqmr2+O+8myeQCV_4ZuX4q9zCkQdN=i=ovuMA@mail.gmail.com>
Message-ID: <CAEz79PphLdxOSVrL0r45mYF+XLFzWwB=-KAT-rb=GLb+tMp6+w@mail.gmail.com>

On Sun, Jun 14, 2015 at 5:19 PM, Warren Togami Jr. <wtogami at gmail.com>
wrote:

>
> *List Name?*  Would people prefer "bitcoin-development" for he new list
> name instead of a shorter name like "bitcoin-dev"?  I personally like the
> shorter name, but either is fine.
> https://lists.linuxfoundation.org/mailman/listinfo currently has
> "sidechains-dev", and "lightning-dev" is moving there sometime soon.
>

We're going ahead with "bitcoin-dev".  A request for creation is now
pending.


>
> *Proposed Cut-Off Date?*  Then we also need to agree on a date to cut off
> the old list.  Their sysadmin said we could have the new list auto-post
> from the old list for a short while.  I wonder how well that works ... if
> that will result in double posting if people write to the new and CC the
> old list.  Needs a little research how well it would behave to have both
> lists operating during a transition period.  I think we should announce a
> cut-off date when posts to the old list is shut off, July 15th, one month
> from now.  Thoughts?
>

Off-list I heard a suggestion to make the cut-off date as short as one week
after the new list is announced and people are given the option to
subscribe.  Could people please post feelings about this?

It seems most everyone agreed not to auto-subscribe everyone onto the new
list as that tends to be upsetting.

There is clarity if subscribing the old list to the new list is a good
idea.  Is anyone familiar with Mailman, is it smart enough to somehow
prevent double-posts if someone writes to both the old and new address?

Warren Togami
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/541319f9/attachment.html>

From mark at friedenbach.org  Wed Jun 17 01:00:45 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Tue, 16 Jun 2015 18:00:45 -0700
Subject: [Bitcoin-development] [BIP draft] Consensus-enforced
 transaction replacement signalled via sequence numbers
In-Reply-To: <CAOG=w-uufDPkQSEi1K_L82j4OXObGmESnfYyxi1z99fcBCotcg@mail.gmail.com>
References: <CAOG=w-uufDPkQSEi1K_L82j4OXObGmESnfYyxi1z99fcBCotcg@mail.gmail.com>
Message-ID: <CAOG=w-s5D2eaF0biPEEeFgLKLNpA3ho1Sk4mCPQNpVOeNBgr-A@mail.gmail.com>

Given that we have had more than two weeks of public discussion, code is
available and reviewed, and several community identified issues resolved, I
would like to formally request a BIP number be assigned for this work. Will
the BIP editor be so kind as to do so to allow the BIP consensus process to
proceed?

Thank you,
Mark Friedenbach

On Mon, Jun 1, 2015 at 6:49 PM, Mark Friedenbach <mark at friedenbach.org>
wrote:

> I have written a reference implementation and BIP draft for a soft-fork
> change to the consensus-enforced behaviour of sequence numbers for the
> purpose of supporting transaction replacement via per-input relative
> lock-times. This proposal was previously discussed on the mailing list in
> the following thread:
>
> http://sourceforge.net/p/bitcoin/mailman/message/34146752/
>
> In short summary, this proposal seeks to enable safe transaction
> replacement by re-purposing the nSequence field of a transaction input to
> be a consensus-enforced relative lock-time.
>
> The advantages of this approach is that it makes use of the full range of
> the 32-bit sequence number which until now has rarely been used for
> anything other than a boolean control over absolute nLockTime, and it does
> so in a way that is semantically compatible with the originally envisioned
> use of sequence numbers for fast mempool transaction replacement.
>
> The disadvantages are that external constraints often prevent the full
> range of sequence numbers from being used when interpreted as a relative
> lock-time, and re-purposing nSequence as a relative lock-time precludes its
> use in other contexts. The latter point has been partially addressed by
> having the relative lock-time semantics be enforced only if the
> most-significant bit of nSequence is set. This preserves 31 bits for
> alternative use when relative lock-times are not required.
>
> The BIP draft can be found at the following gist:
>
> https://gist.github.com/maaku/be15629fe64618b14f5a
>
> The reference implementation is available at the following git repository:
>
> https://github.com/maaku/bitcoin/tree/sequencenumbers
>
> I request that the BIP editor please assign a BIP number for this work.
>
> Sincerely,
> Mark Friedenbach
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/f58c91ad/attachment.html>

From gmaxwell at gmail.com  Wed Jun 17 01:20:25 2015
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 17 Jun 2015 01:20:25 +0000
Subject: [Bitcoin-development] [BIP draft] Consensus-enforced
 transaction replacement signalled via sequence numbers
In-Reply-To: <CAOG=w-s5D2eaF0biPEEeFgLKLNpA3ho1Sk4mCPQNpVOeNBgr-A@mail.gmail.com>
References: <CAOG=w-uufDPkQSEi1K_L82j4OXObGmESnfYyxi1z99fcBCotcg@mail.gmail.com>
	<CAOG=w-s5D2eaF0biPEEeFgLKLNpA3ho1Sk4mCPQNpVOeNBgr-A@mail.gmail.com>
Message-ID: <CAAS2fgSj3=Pzo0emtdBBdYxny7BDf1ENzHxY+Ahm0Eiry9dDGw@mail.gmail.com>

On Wed, Jun 17, 2015 at 1:00 AM, Mark Friedenbach <mark at friedenbach.org> wrote:
> Given that we have had more than two weeks of public discussion, code is
> available and reviewed, and several community identified issues resolved, I
> would like to formally request a BIP number be assigned for this work. Will
> the BIP editor be so kind as to do so to allow the BIP consensus process to
> proceed?

BIP 68, unless you have objections.



From grarpamp at gmail.com  Wed Jun 17 01:59:47 2015
From: grarpamp at gmail.com (grarpamp)
Date: Tue, 16 Jun 2015 21:59:47 -0400
Subject: [Bitcoin-development] Proposal: Move Bitcoin Dev List to a
 Neutral Competent Entity
In-Reply-To: <CAEz79PphLdxOSVrL0r45mYF+XLFzWwB=-KAT-rb=GLb+tMp6+w@mail.gmail.com>
References: <CAEz79Pp_6FhDjtR6emBcXf_WT14MbDaTxMbeAo=QAfhS-ihFCQ@mail.gmail.com>
	<CAJHLa0OOnYMuA-8qfHafw5D0zGw_U06PZaAKS2j=Av_KUhgt-A@mail.gmail.com>
	<CAEz79PrjoD3fvwqmr2+O+8myeQCV_4ZuX4q9zCkQdN=i=ovuMA@mail.gmail.com>
	<CAEz79PphLdxOSVrL0r45mYF+XLFzWwB=-KAT-rb=GLb+tMp6+w@mail.gmail.com>
Message-ID: <CAD2Ti2_EO_K+829_jd5vkgTHxq6fJ47u_6st-pbKCZth=046ww@mail.gmail.com>

Please no GoogleGroups. Stick with mailman or some other open
source thing you can move around from place to place as needed.

Also, online third party archives die, their web interfaces suck
ass, they're bloated, don't export, aren't offline capable or
authoritative, etc.

You need to make the raw archives (past and future) downloadable
in mbox format and updated daily, with full unobfuscated headers
for threading and replying, with signatures and attachments.
Commonly for newcomers wishing to seed their own MUA's and archives,
mirrors, search, and so on.

One such breakage of archives by mailman defaults was discussed and
corrected here:
https://cpunks.org/pipermail/cypherpunks/

You also need to get rid of the tag in the subject, it wastes
valuable space and mail filters work just the same without it.

Please no "forums" (see suck above). Unless they have bidirectional
realtime message copying between list and forum. Or at least make
available exports of their message database.

Further, when will the crypto P2P communities develop and use
distributed messaging systems... bitmessage, blockchain, etc as
rough examples... to avoid old centralized issues. At some point you
have to start eating your own dog food and make people run the
clients and come to you instead. Disruptive tech is the new good.



From hozer at hozed.org  Wed Jun 17 03:52:42 2015
From: hozer at hozed.org (Troy Benjegerdes)
Date: Tue, 16 Jun 2015 22:52:42 -0500
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
Message-ID: <20150617035242.GV27932@nl.grid.coop>

> - How do you propose to deal with the extra risks that come from
> non-consensus hard-forks?  Hard-forks themselves are quite risky, but
> non-consensus ones are extremely dangerous for consensus.

This is a non-issue.

If the hard-fork is not a consensus, then those of us that don't consent
ignore the fool that tried to hard-fork.

If a fool attempting a non-consensus hard-fork actually breaks something,
then you have a fragile system that needs some serious re-thinking.

I think a non-consensus hard-fork would be the best thing that could 
happen to the bitcoin ecosystem long-term, because it would force some
re-examination of some very bad assumptions.

-- 
----------------------------------------------------------------------------
Troy Benjegerdes                 'da hozer'                  hozer at hozed.org
7 elements      earth::water::air::fire::mind::spirit::soul        grid.coop

      Never pick a fight with someone who buys ink by the barrel,
         nor try buy a hacker who makes money by the megahash




From pete at petertodd.org  Wed Jun 17 03:54:45 2015
From: pete at petertodd.org (Peter Todd)
Date: Wed, 17 Jun 2015 04:54:45 +0100
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <CACq0ZD6M5Rv_iaB8=7_XgG-QX21CvxCf_Wm5ciRALgRYPt=eYw@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
	<CANEZrP148U0V7bU-u0tOTk2xWwq5wy-yU-jk805DcU_3cBHtnw@mail.gmail.com>
	<CABaSBawXZDcyR96g4hBNAiFRDpTcUJX+bMXyqGeuY5wVm4k1KQ@mail.gmail.com>
	<CALx=ga7axVzUvpUd5Fvr=UruzUZWhXqJ7ibCEzjrRC-58gSWjw@mail.gmail.com>
	<9834E283-727C-47F7-A3D0-667951727E5F@gmail.com>
	<CACq0ZD5TTJ=dvz+o-ex6vUWAnOtMfD=VE7JaZWXYM1Lo2L_9wA@mail.gmail.com>
	<CAPWm=eWTnVCoRCGSycUGsYjx8M3NFdqEXAU1ykm08_FdJQCP5Q@mail.gmail.com>
	<CACq0ZD6M5Rv_iaB8=7_XgG-QX21CvxCf_Wm5ciRALgRYPt=eYw@mail.gmail.com>
Message-ID: <20150617035445.GA23826@muck>

On Mon, Jun 15, 2015 at 09:00:19PM -0700, Aaron Voisine wrote:
> Thanks Alex, the work you've pointed out is helpful. Limiting mempool size
> should at least prevent nodes from crashing. When I looked a few days ago I
> only found a few old PRs that seemed to have fallen by the wayside, so this
> new one is encouraging.

BTW it's worth working out how many $ in fees you need for a given
amount of MB worth of mempool.

At the current 10uBTC/KB minimim relay fee 1MB of txs requires just $2.5
worth of fees - kinda ridiculous when a block earns a miner $6250 in
revenue. Pretty much all txs pay significantly higher rates - more like
100uBTC/KB, or $25/MB. At that rate the 288MB max mempool size proposed
by Patrick Strateman's pull-req requires at least $7.2k worth of BTC to
fill to pay the fees, and in practice will probably quickly get higher.

https://github.com/bitcoin/bitcoin/pull/6281

> I can respond in the PR comments if it's more appropriate there, but I
> believe ejecting tx from mempools rather than preemptively refusing them
> according to standard network wide propagation rules will result in spotty,
> inconsistent tx propagation, and possibly a large increase in tx
> re-broadcasts, so if those haven't been addressed they will need to be. It
> would also be prudent to run some simulations to see what other issues are
> going to pop-up.

See above - filling the mempool like that will be both a slow process,
and require lots of funds. Equally, once full, the sensible thing to do
is raise the minimum relay fee appropriately, so those transactions that
pay too low a fee will simply be rejected.

It'd be reasonable to tell peers that, and what the minimum fee needed
for acceptance would be for that particular node.

> We're currently using CPFP already in breadwallet when spending unconfirmed
> non-change inputs. A small percentage of hashing power is using it, but
> enough to get a transaction unstuck assuming breadwallet's fee calculation
> is better than the sender's.

> The problem with RBF is that there's currently no way to tell if your tx
> has been picked up by miners or not in order to know if you need to replace
> it. Miners broadcasting partial block solutions would be helpful in this
> regard, but only for tx in the currently-being-worked-on block, not for tx
> that won't be picked up until the block after. If miners were to eject tx
> that were previously being worked on in favor of higher fee tx, then that
> causes another set of problems for wallets that thought their tx was going
> to get in but then it doesn't. The other problem with RBF is that users
> don't know up front what fee they're actually going to pay which is a big
> blow to real world usability. Also mobile wallets will have to sign lots of
> tx up front and rely on a service to replace as necessary. And this is all
> just on the send side.

For an interactive, mobile wallet, the best thing to do is estimate the
fee correctly the first time, using RBF as a follow up mechanism only if
needed. For other users - e.g. exchanges handling customer withdrawals -
using RBF more agressively to get the minimum possible fee may make
sense.

> On the receive side it's much worse since you can't
> rely on the sender to do the replacing. The real problem seems to be the
> fact that RBF is an interactive iterative process rather than a
> send-and-forget one.

In any case, the *existance* of RBF makes no difference to any of these
problems; RBF does make solving the easier. You can always choose to not
use it after all, resulting in the same "send-and-forget" process.
Having it available allows mistakes to be fixed after the fact, always
an improved user experience over not being able to re-bid for block
space.


Incidentally, if my FSS-RBF bug bounty isn't collected in the next week
or two, we'll likely have a major double-digits % of hashing power
mining FSS-RBF soon after.

http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg08122.html

> What you really need is some way to tell up-front, is a transaction going
> to get mined with a high probability? That problem seems really difficult
> to solve with fixed-size blocks that are full.

Have you looked at the fee estimation code in Bitcoin Core? I have no
reason to think it doesn't basically speaking work. Of course, SPV
wallets will need a semi-trusted third party to securely get that data,
but this seems to be a fundemental problem in a decentralized network -
the purpose of the blockchain itself is to prove that some data was
published to some audience, an analogous problem to proving to the SPV
wallet that their transaction actually reached miners and they actually
are considering it for inclusion.

Guaranteed reliable transaction processing is only possible in
centralized environments that can make service guarantees.

> If the goal is simply to
> reduce or limit the growth of the blockchain, then there are much simpler
> solutions, which is why I've advocated for the blocksize increase, followed
> by tx selection and propagation rule changes to create fee pressure.

Few if any of those mechanisms can be deployed in a consensus-critical
way that is resistant to attack; the blocksize limit is needed to -
among other things - resist attacks by one miner on another to reduce
the competitors profitability. Without an explicit limit tx selection
and propagation rule changes can be gamed.

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150617/46d63a0f/attachment.sig>

From pete at petertodd.org  Wed Jun 17 03:59:59 2015
From: pete at petertodd.org (Peter Todd)
Date: Wed, 17 Jun 2015 04:59:59 +0100
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <CAM7BtUr1zmw_Jmyn8ULZ=Jb-pkAwUwvBK68UWmzeJH3kAmYEhA@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
	<CAM7BtUoNJ3vPqW9esCBo8XSN=yRjC3oheP_hd_kcgzs0_0De6w@mail.gmail.com>
	<20150616133305.GA30988@muck>
	<CAM7BtUr1zmw_Jmyn8ULZ=Jb-pkAwUwvBK68UWmzeJH3kAmYEhA@mail.gmail.com>
Message-ID: <20150617035959.GB23826@muck>

On Tue, Jun 16, 2015 at 09:55:13PM +0800, Pindar Wong wrote:
> > Agreed. Pieter Wuille's recent work is a great example of the kind of
> > science-driven investigations that need to be done - and haven't been
> > done very much - to get us some hard data to make decisions on.
> >
> 
> Thank you very much Peter for pointing this out! That is very kind of you.
> 
> It would be great to work with Constance Choi, Primavera De Filippi, your
> goodself and others to make this happen.

Great! They're excited to see this happen. I'm in London right now
actually for the conference they were holding this week; the blocksize
issue was being discussed a fair bit there among attendees. (notably,
with rather different views than seen on reddit!)

> As you may know, the Hong Kong Monetary Authority considers bitcoin a
> virtual 'commodity' and not a currency per se.

Yup, though keep in mind the regulatory question is more than just how
your local jurisdiction views Bitcoin, but rather how your customers'
jurisdictions view Bitcoin.

Of course, when I say "customers" above, I mean the entire Bitcoin
community that is ultimately buying the new coins produced by miners and
paying fees to them!

-- 
'peter'[:-1]@petertodd.org
0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150617/1c73ff3a/attachment.sig>

From odinn.cyberguerrilla at riseup.net  Wed Jun 17 05:34:04 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Tue, 16 Jun 2015 22:34:04 -0700
Subject: [Bitcoin-development] Reusable payment codes
In-Reply-To: <20150616174641.GA29819@muck>
References: <CAHabJ+Mn0=vfLvTJ+z3tx8cFAAuLD1pLp4rOe3pM6MtCrCxjwg@mail.gmail.com>
	<55804E1F.7000104@riseup.net> <20150616174641.GA29819@muck>
Message-ID: <558106CC.10203@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Peter, my response below

On 06/16/2015 10:46 AM, Peter Todd wrote:
> On Tue, Jun 16, 2015 at 09:26:07AM -0700, odinn wrote:
>> This is very well done.
>>
>> Have you seen this discussion that I started regarding BIP 63?
>>
>> https://bitcointalk.org/index.php?topic=1083961.0
>>
>> I have no response from Peter Todd back on it other than "my time is
>> better spent focusing on more fundemental issues" and "I've also got
>> no-one interested in funding stealth address development right now,"
>> when several people (myself included) offered to send donations to se
e
>> the BIP (63) advance, no donation address was posted, so... waiting
>> for him to act on that.
> 
> Sorry, but I'm looking at the huge amount of work that I'll likely hav
e
> responding to the blocksize issue, so I think I'm inclined to shelve
> work on BIP63 for now.


I seriously find this pretty sad... you said that paying rent was an
issue and your time was better spent on "more fundamental issues..." but
the very least you could do is post a donation address... Is there
someone who was working with you closely on the concept who could take
it up since you are not going to be working on it?

> 
> Feel free to take it up; a (>=2)-part standard describing the resuable
> codes aspect, and separately how the ephemeral key is transmitted to t
he
> recipient makes sense to me.
> 

I don't want to camp on Justus's thread on reusable payment codes ~ but
on the subject of BIP 63, it just did make sense to mention... so if
someone does have interest in working on it... please go to
https://bitcointalk.org/index.php?topic=1083961.0
and reply there.


- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVgQbMAAoJEGxwq/inSG8CD8gH/3jV+mLO9qv3t6JFxIvLMPtr
slGbymQtuqfAC09b6ybx3p6u9I1o1Nb3IgK1riu/Z3AzHxlnuYVUxN3N5ns0zGnx
F2WXs2suEa20YJkQ6dxZWLdNBjnUIEGGgXAit8X21LqVsqPfeZcocOWSeRDlePhk
/HRFLVtMehqfqjbuFAaAewVZUyT4Bn+3IU74krqR3e3YA00/ym1C5xCE3/kHvKIL
UF8EW9GgVYKuoyQdH3ICDwjiudwPOwIC4Ry0huaJgla43122RkwqYB+5kVr1583u
dx3VW8vW8HyQZJF+vb8d3F57R6FC6zYtFhCe0IzDIh+6xQxStk5zosMNIrtPKp4=
=h8Ib
-----END PGP SIGNATURE-----



From kalle at rosenbaum.se  Wed Jun 17 09:51:54 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Wed, 17 Jun 2015 11:51:54 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPg+sBigK7K2YVnhcU5Ysf0d0Gbp+GaNdGoKZCco5zvYLKDxFw@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
	<CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>
	<CAPg+sBiWykR6RaHhbyYQbL=A5t1TmHgEmS_sC7jj9d3SUTMO9g@mail.gmail.com>
	<CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>
	<CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>
	<CAPswA9yB3wfV1auXR=ggXjh+f1C3Qpkv8qP1miQwkc8R2_aBLg@mail.gmail.com>
	<CAPg+sBjp-BmSXhanOuKE0DN1wdfVwCtFwiAbPse1GLxy3+L3nA@mail.gmail.com>
	<CAPswA9zzKvh6G+NqzTmhrNXMSWOPtZ2DGW2t_2Jrisy8x9m2qw@mail.gmail.com>
	<CAPg+sBhZCayaxNg_thO=nzxvuo-xZ-ZeZMXEVWb6Mw2POreOZQ@mail.gmail.com>
	<CAPswA9yFUAqFyNBFBnnwpT=B9RcdNssdjz-_KWbX5GuLM5Uyxw@mail.gmail.com>
	<CAPg+sBigK7K2YVnhcU5Ysf0d0Gbp+GaNdGoKZCco5zvYLKDxFw@mail.gmail.com>
Message-ID: <CAPswA9wLDpf0Q3aL=a+uaqkFecPgC4ASj73XVfj=MOrof-yh1g@mail.gmail.com>

2015-06-16 21:48 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
> I don't see why existing software could create a 40-byte OP_RETURN but not
> larger? The limitation comes from a relay policy in full nodes, not a
> limitation is wallet software... and PoPs are not relayed on the network.

You are probably right here. The thing is that I don't know how *all*
wallet signing and validating software is written, so I figure it's
better to stick to a "valid" output. Since I don't *need* more data
than 40 bytes, why bother. There's another constraint to this as well:
The other BIP proposal, "Proof of Payment URI scheme", includes a
nonce parameter in the URI. If the nonce is very long, the QR code
will be unnecessarily big. The server should try to detect a brute
force of the 48 bit nonce, or at least delay the pop requests by some
100 ms or so.

Do you think this is an actual problem, and why? Is your suggestion to
use a bigger nonce, given the above?

>
> Regarding sharing, I think you're talking about a different use case. Say
> you want to pay for 1-week valid entrance to some venue. I thought the
> purpose of the PoP was to be sure that only the person who paid for it, and
> not anyone else can use it during that week.
>

That's right. That's one use case. You pay for the 1-week entrance and
then you use your wallet to sign PoPs when you enter the venue.

> My argument against that is that the original payer can also hand the
> private keys in his wallet to someone else, who would then become able to
> create PoPs for the service. He does not lose anything by this, assuming the
> address is not reused.
>

Yes, that is possible. It's about the same as giving out a
username/password for a service that you have paid for. In the case of
a concert ticket, it's simple. Just allow one entrance per payment.
But in the example you gave, it's a bit more complicated. You could
for example give all guests a bracelet upon first entry or upon first
exit. Or you can put a stamp on people leaving the venue, and demand
that all re-entries show the stamp, possibly along with a new PoP.
Pretty much as is done already. Different use cases will need
different protection. In this example, the value added by PoP is that
the venue does not have to distribute tickets in advance. This in turn
allows for better privacy for the customer, who don't have to give out
personal information such as an email-address.

> So, using a token does not change anything, except it can be provided to the
> payer - instead of relying on creating an implicit identity based on who
> seems to have held particular private keys in the past.
>

Yes, that's a difference, but it comes at the cost of security. The
stolen token can be used over and over. In the case of PoP it's only
usable once, and it's only created when it's actually needed,
minimizing the window of opportunity for the thief.

Regards,
Kalle

> On Jun 16, 2015 9:41 PM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:
>>
>> 2015-06-16 21:25 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
>> > You can't avoid sharing the token, and you can't avoid sharing the
>> > private
>> > keys used for signing either. If they are single use, you don't lose
>> > anything by sharing them.
>>
>> Forwarding the PoP request would be a way to avoid sharing keys, as
>> suggested above.
>>
>> >
>> > Also you are not creating a real transaction. Why does the OP_RETURN
>> > limitation matter?
>>
>> This was discussed in the beginning of this thread: "The idea is to
>> simplify implementation. Existing software can be used as is to sign
>> and validate PoPs"
>>
>> Regards,
>> Kalle
>>
>> >
>> > On Jun 16, 2015 9:22 PM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:
>> >>
>> >> Thank you for your comments Pieter! Please find my answers below.
>> >>
>> >> 2015-06-16 16:31 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
>> >> > On Mon, Jun 15, 2015 at 1:59 PM, Kalle Rosenbaum <kalle at rosenbaum.se>
>> >> > wrote:
>> >> >>
>> >> >> 2015-06-15 12:00 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
>> >> >> I'm not sure if we will be able to support PoP with CoinJoin. Maybe
>> >> >> someone with more insight into CoinJoin have some input?
>> >> >
>> >> >
>> >> > Not really. The problem is that you assume a transaction corresponds
>> >> > to
>> >> > a
>> >> > single payment. This is true for simple wallet use cases, but not
>> >> > compatible
>> >> > with CoinJoin, or with systems that for example would want to combine
>> >> > multiple payments in a single transaction.
>> >> >
>> >>
>> >> Yes, you are right. It's not compatible with CoinJoin and the likes.
>> >>
>> >> >
>> >> > 48 bits seems low to me, but it does indeed solve the problem. Why
>> >> > not
>> >> > 128
>> >> > or 256 bits?
>> >>
>> >> The nonce is limited because of the OP_RETURN output being limited to
>> >> 40 bytes of data: 2 bytes version, 32 bytes txid, 6 bytes nonce.
>> >>
>> >> >
>> >> >> > Why does anyone care who paid? This is like walking into a
>> >> >> > coffeshop,
>> >> >> > noticing I don't have money with me, let me friend pay for me, and
>> >> >> > then
>> >> >> > have
>> >> >> > the shop insist that I can't drink it because I'm not the buyer.
>> >> >>
>> >> >> If you pay as you use the service (ie pay for coffee upfront),
>> >> >> there's
>> >> >> no need for PoP. Please see the Motivation section. But you are
>> >> >> right
>> >> >> that you must have the wallet(s) that paid at hand when you issue a
>> >> >> PoP.
>> >> >>
>> >> >> >
>> >> >> > Track payments, don't try to assign identities to payers.
>> >> >>
>> >> >> Please elaborate, I don't understand what you mean here.
>> >> >
>> >> >
>> >> > I think that is a mistake. You should not assume that the wallet who
>> >> > held
>> >> > the coins is the payer/buyer. That's what I said earlier; you're
>> >> > implicitly
>> >> > creating an identity (the one who holds these keys) based on the
>> >> > transaction. This seems fundamentally wrong to me, and not necessary.
>> >> > The
>> >> > receiver should not care who paid or how, he should care what was
>> >> > payed
>> >> > for.
>> >>
>> >> You are saying that it's a problem that the wallet used to pay, must
>> >> also be used to issue the PoP? That may very well be a problem in some
>> >> cases. People using PoP should of course be aware of it's limitations
>> >> and act accordingly, i.e. don't pay for concert tickets for a friend
>> >> and expect your friend to be able to enter the arena with her wallet.
>> >> As Tom Harding noted, it is possible to transfer keys to your friend's
>> >> wallet, but that might not be desirable if those keys are also used
>> >> for other payments. Also that would weaken the security of an HD
>> >> wallet, since a chain code along with a private key would reveal all
>> >> keys in that tree. Another solution is that your friend forwards the
>> >> PoP request to your wallet, through twitter or SMS, and you send the
>> >> PoP for her. Maybe that forwarding mechanism can be built into wallets
>> >> and automated so that the wallet automatically suggests to sign the
>> >> PoP for your friend. This is probably something to investigate
>> >> further, but not within the scope of this BIP.
>> >>
>> >> Of course the simplest solution would be to send money to your friend
>> >> first so that she can pay for the ticket from her own wallet, but
>> >> that's not always feasible.
>> >>
>> >> >
>> >> > The easiest solution to this IMHO would be an extension to the
>> >> > payment
>> >> > protocol that gives you (or your wallet) a token in return for
>> >> > paying,
>> >> > and
>> >> > that knowledge of that token is used to gain access to the services
>> >> > you
>> >> > provide.
>> >> >
>> >>
>> >> That token would then be reusable. Someone stealing it would be able
>> >> to use it as much as she wants. That is what I want to avoid with PoP.
>> >> The BIP proposal briefly mentions something like this in the
>> >> rationale. I also had a discussion about this with Mike Hearn on this
>> >> list on Mars 13 that I think covers most pros and cons of the
>> >> different approaches.
>> >>
>> >> While your suggestion does indeed separate the transaction from the
>> >> proof of payment, it also assumes that the token is held in the wallet
>> >> that pays. Otherwise you would need to keep it in another safe place,
>> >> remember it's reusable. Where would that be? How would you transfer
>> >> that token to your friend?
>> >>
>> >> Thank you again for your comments. I appreciate it.
>> >>
>> >> Best regards,
>> >> Kalle
>> >>
>> >> > --
>> >> > Pieter
>> >> >



From raystonn at hotmail.com  Mon Jun  1 19:02:44 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Mon, 01 Jun 2015 19:02:44 -0000
Subject: [Bitcoin-development] soft-fork block size increase
	(extensionblocks)
Message-ID: <COL131-DS3380A8C27DE6CBC0D98A4CDB60@phx.gbl>

I also need to argue for increasing the default block limit to the full 1MB in the next release.  We?re already hitting that limit in bursts of transactions, which puts pressure on the average displayed in the below graphs.

From: raystonn at hotmail.com 
Sent: Monday, June 01, 2015 11:39 AM
To: Mike Hearn ; Adam Back 
Cc: Bitcoin Dev 
Subject: Re: [Bitcoin-development] soft-fork block size increase (extensionblocks)

> And we're not going to get to VISA scale any time soon

No, not at these block size limits.  The closer we get to the maximum block size, the slower we grow the average block size toward it.  Number of transactions per day is of course highly correlated with average block size.  Based on these graphs we can expect that hitting 1 million transactions per day will be impossible without raising the maximum block size.


https://blockchain.info/charts/avg-block-size?showDataPoints=false&show_header=true&daysAverageString=7&timespan=all&scale=1&address=



https://blockchain.info/charts/n-transactions?showDataPoints=false&timespan=all&show_header=true&daysAverageString=7&scale=1&address= 



From: Mike Hearn 
Sent: Monday, June 01, 2015 11:01 AM
To: Adam Back 
Cc: Bitcoin Dev 
Subject: Re: [Bitcoin-development] soft-fork block size increase (extensionblocks)

  (at reduced security if it has software that doesnt understand it) 

Well, yes. Isn't that rather key to the issue?  Whereas by simply increasing the block size, SPV wallets don't care (same security and protocol as before) and fully validating wallets can be updated with a very small code change.

  A 1MB client wont even understand the difference between a 1MB and 8MB
  out payment. 

Let's say an old client makes a payment that only gets confirmed in an extension block. The wallet will think the payment is unconfirmed and show that to the user forever, no?

Can you walk through the UX for each case?

  If I am not misremembering, I think you've sided typically
  with the huge block, big data center only end of the spectrum.  

It would be Satoshi, that argued that.

I think there must be a communication issue here somewhere. I'm not sure how this meme has taken hold amongst you guys, as I am the guy who wrote the scalability page back in 2011:

https://en.bitcoin.it/wiki/Scalability


It says:

  The core Bitcoin network can scale to much higher transaction rates than are seen today, assuming that nodes in the network are primarily running on high end servers rather than desktops. 


By "much higher rates" I meant VISA scale and by "high end server" I meant high end by today's standards not tomorrows. There's a big difference between a datacenter and a single server! By definition a single server is not a datacenter, although it would be conventional to place it in one. But even with the most wildly optimistic growth imaginable, I couldn't foresee a time when you needed more than a single machine to keep up with the transaction stream. 


And we're not going to get to VISA scale any time soon: I don't think I've ever argued we will. If it does happen it would presumably be decades away. Again, short of some currently unimagined killer app.


So I don't believe I've ever argued this, and honestly I kinda feel people are putting words in my mouth.


--------------------------------------------------------------------------------
------------------------------------------------------------------------------



--------------------------------------------------------------------------------
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/555a8150/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image[2].png
Type: image/png
Size: 53618 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/555a8150/attachment.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image[12].png
Type: image/png
Size: 50593 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/555a8150/attachment-0001.png>

From raystonn at hotmail.com  Wed Jun 17 15:28:07 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Wed, 17 Jun 2015 08:28:07 -0700
Subject: [Bitcoin-development] soft-fork block size
	increase(extensionblocks)
In-Reply-To: <COL131-DS3380A8C27DE6CBC0D98A4CDB60@phx.gbl>
References: <COL131-DS3380A8C27DE6CBC0D98A4CDB60@phx.gbl>
Message-ID: <COL131-DS14939FCAB6DB494743B545CDA60@phx.gbl>

Wow.  That email was delayed by the list for quite some time.  It was sent on 6/1.
From: Raystonn . 
Sent: Monday, June 01, 2015 12:02 PM
To: Mike Hearn ; Adam Back 
Cc: Bitcoin Dev 
Subject: Re: [Bitcoin-development] soft-fork block size increase(extensionblocks)

I also need to argue for increasing the default block limit to the full 1MB in the next release.  We?re already hitting that limit in bursts of transactions, which puts pressure on the average displayed in the below graphs.

From: raystonn at hotmail.com 
Sent: Monday, June 01, 2015 11:39 AM
To: Mike Hearn ; Adam Back 
Cc: Bitcoin Dev 
Subject: Re: [Bitcoin-development] soft-fork block size increase (extensionblocks)

> And we're not going to get to VISA scale any time soon

No, not at these block size limits.  The closer we get to the maximum block size, the slower we grow the average block size toward it.  Number of transactions per day is of course highly correlated with average block size.  Based on these graphs we can expect that hitting 1 million transactions per day will be impossible without raising the maximum block size.


https://blockchain.info/charts/avg-block-size?showDataPoints=false&show_header=true&daysAverageString=7&timespan=all&scale=1&address=



https://blockchain.info/charts/n-transactions?showDataPoints=false&timespan=all&show_header=true&daysAverageString=7&scale=1&address= 



From: Mike Hearn 
Sent: Monday, June 01, 2015 11:01 AM
To: Adam Back 
Cc: Bitcoin Dev 
Subject: Re: [Bitcoin-development] soft-fork block size increase (extensionblocks)

  (at reduced security if it has software that doesnt understand it) 

Well, yes. Isn't that rather key to the issue?  Whereas by simply increasing the block size, SPV wallets don't care (same security and protocol as before) and fully validating wallets can be updated with a very small code change.

  A 1MB client wont even understand the difference between a 1MB and 8MB
  out payment. 

Let's say an old client makes a payment that only gets confirmed in an extension block. The wallet will think the payment is unconfirmed and show that to the user forever, no?

Can you walk through the UX for each case?

  If I am not misremembering, I think you've sided typically
  with the huge block, big data center only end of the spectrum.  

It would be Satoshi, that argued that.

I think there must be a communication issue here somewhere. I'm not sure how this meme has taken hold amongst you guys, as I am the guy who wrote the scalability page back in 2011:

https://en.bitcoin.it/wiki/Scalability


It says:

  The core Bitcoin network can scale to much higher transaction rates than are seen today, assuming that nodes in the network are primarily running on high end servers rather than desktops. 


By "much higher rates" I meant VISA scale and by "high end server" I meant high end by today's standards not tomorrows. There's a big difference between a datacenter and a single server! By definition a single server is not a datacenter, although it would be conventional to place it in one. But even with the most wildly optimistic growth imaginable, I couldn't foresee a time when you needed more than a single machine to keep up with the transaction stream. 


And we're not going to get to VISA scale any time soon: I don't think I've ever argued we will. If it does happen it would presumably be decades away. Again, short of some currently unimagined killer app.


So I don't believe I've ever argued this, and honestly I kinda feel people are putting words in my mouth.


--------------------------------------------------------------------------------
------------------------------------------------------------------------------



--------------------------------------------------------------------------------
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development



--------------------------------------------------------------------------------
------------------------------------------------------------------------------



--------------------------------------------------------------------------------
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150617/ad3b151f/attachment.html>

From me at ricmoo.com  Wed Jun 17 16:17:22 2015
From: me at ricmoo.com (Richard Moore)
Date: Wed, 17 Jun 2015 12:17:22 -0400
Subject: [Bitcoin-development] soft-fork block size increase (extension
	blocks)
In-Reply-To: <556CFC01.9030309@thinlink.com>
References: <CALqxMTHfU5+1ezP-Jnn5obpd621EHwpstseFzTjAvOdhDkfj=g@mail.gmail.com>
	<CANEZrP3SGdpSkpi-1eBiUMD74NPnAr7sW=eZ8WCz7PU6FVQaBA@mail.gmail.com>
	<CALqxMTE57mEiG7VuEDSfBDswCeYPWRoa1DEY9iL=P0xLFu8YCA@mail.gmail.com>
	<556CFC01.9030309@thinlink.com>
Message-ID: <3FBD7273-9A22-49EA-902C-0EE1F1F5940E@ricmoo.com>

Awesome graph!

It would be interesting if you could use your Excel voodoo (or whatever graph app you use) to add density as a heat map, making areas with more blocks red and regions with less blocks blue?


> On Jun 1, 2015, at 8:42 PM, Tom Harding <tomh at thinlink.com> wrote:
> 
> On 6/1/2015 10:21 AM, Adam Back wrote:
>> if it stays as is for a year, in a wait and see, reduce spam, see
>> fee-pressure take effect as it has before, work on improving improve
>> decentralisation metrics, relay latency, and do a blocksize increment
>> to kick the can if-and-when it becomes necessary and in the mean-time
>> try to do something more long-term ambitious about scale rather than
>> volume.
> 
> What's your estimate of the lead time required to kick the can,
> if-and-when it becomes necessary?
> 
> The other time-series I've seen all plot an average block size.  That's
> misleading, because there's a distribution of block sizes.  If you bin
> by retarget interval and plot every single block, you get this
> 
> http://i.imgur.com/5Gfh9CW.png
> 
> The max block size has clearly been in play for 8 months already.
> 
> 
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

.???`?.??.???`?.??.???`?.??.???`?.??.???`?.?><(((?>

Richard Moore ~ Founder
Genetic Mistakes Software inc.
phone: (778) 882-6125
email: ricmoo at geneticmistakes.com <mailto:ricmoo at geneticmistakes.com>
www: http://GeneticMistakes.com <http://geneticmistakes.com/>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150617/2b106d0e/attachment.html>

From tomh at thinlink.com  Thu Jun 18 00:04:38 2015
From: tomh at thinlink.com (Tom Harding)
Date: Wed, 17 Jun 2015 17:04:38 -0700
Subject: [Bitcoin-development] soft-fork block size
	increase(extensionblocks)
In-Reply-To: <COL131-DS14939FCAB6DB494743B545CDA60@phx.gbl>
References: <COL131-DS3380A8C27DE6CBC0D98A4CDB60@phx.gbl>
	<COL131-DS14939FCAB6DB494743B545CDA60@phx.gbl>
Message-ID: <55820B16.5060806@thinlink.com>


"Increase DEFAULT_BLOCK_MAX_SIZE to 1MB"
https://github.com/bitcoin/bitcoin/pull/6231

On 6/17/2015 8:28 AM, Raystonn . wrote:
> Wow.  That email was delayed by the list for quite some time.  It was 
> sent on 6/1.
>
>> I also need to argue for increasing the default block limit to the 
>> full 1MB in the next release. We?re already hitting that limit in 
>> bursts of transactions, which puts pressure on the average displayed 
>> in the below graphs.
>
>




From odinn.cyberguerrilla at riseup.net  Thu Jun 18 07:27:42 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Thu, 18 Jun 2015 00:27:42 -0700
Subject: [Bitcoin-development] Scope narrowing for proposals to address
 block size limit debate, an inquiry
Message-ID: <558272EE.9040305@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

The purpose of this post is to present an inquiry related to the
possible narrowing of scope of what sort of proposals are likely to
"bear fruit" at this stage.  The inquiry or question is, "Are there
some proposals that are more likely to succeed, in addressing the
whole block size limit debate meaningfully?"

The flip side of this inquiry, is that if you think that an attempt to
do such "scope narrowing" _at this time_ is foolhardy, inappropriate,
wrong, or otherwise flawed, please say so and explain.  I'm not
religious about this notion.  I throw out proposals below which I
think would be likely to advance further ~ and thus I ask the question
again, and rephrase, "Are there some proposals (some shown below as
examples, not all-inclusive) that are more likely to succeed, in
addressing the whole block size limit debate meaningfully?"

~ Jeff Garzik, with respect to his BIP 100 (note Evan Mo, CEO of
Huobi's mining project Digcoin, clarified that the big Chinese mining
pools consider further adjustments to the protocol beyond the
suggested 8 MB block size limit adjustment ? such as the Bitcoin core
developer Jeff Garzik's BIP-100 draft ? to be feasible)
   ~ Adam Back, with a simplified soft-fork one-way peg
   ~ Gavin Andresen, developing an 8 MB block size limit adjustment in
the context of Core (as an example) with one or more of the above
authors rather than focusing on XT. (This is a big assumption but,
roll with it)

All of this assumes that developer(s) are willing to abandon
intentionally contentious proposals such as the "hard fork to XT w/ 20
MB," remain within the context of Core and be reasonable.

Here I am being aware of the fact that "Pushing a hard fork in the
face of such controversy is a folly, a danger to the network, and that
deserves to be said." - Wladimir J. van der Laan
https://github.com/bitcoin/bitcoin.org/pull/894#issuecomment-112113917

And if I'm lucky, this thread may get comments from DumbFruit, who
writes stuff like this:
https://bitcointalk.org/index.php?topic=1085436.msg11643203#msg11643203

So now... your thoughts?


- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVgnLuAAoJEGxwq/inSG8CchMH/0zm+A7Uqp8SpU+CsJr3lF2+
0re+5Ql4qVVmOI560918BtkdFjcq33jsKU9cYUDXqZ4wHfJTAGLGDqNgUZGpGkmJ
bqGgSvdF64P52Vb9PVnz1I9+aClas8Mjvl8XUYoD0yEA14XVBakYDRbVqZ5yPM8n
hBi6EpWLUnkFvvEj2dkgwddvPCvrnhVL/aRfmhet1pfOELfIrXtXI7hs2F1RyaqK
sbR/Qg3SFlyHzbxSzRVcZQ0G81exq/fxHqxc5kSLMiR7TODIJxCl6cJDCjf8LbeS
n6tL/I8vWN2zraYfb0cWu5uIjz5XnXpsitu951109zoS8IYle3uTfCF+6xdG3tY=
=HQ9R
-----END PGP SIGNATURE-----



From odinn.cyberguerrilla at riseup.net  Thu Jun 18 08:54:15 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Thu, 18 Jun 2015 01:54:15 -0700
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer to
 Remove Commit Access from Other Developers
Message-ID: <55828737.6000007@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Recently I saw the following video:

https://www.youtube.com/watch?v=8JmvkyQyD8w&t=47m58s

Hadn't seen it until just today, although it was done on June 8, 2015.
So this is a bit dated, but to me it was a bit of a stunner to see the
extreme nature of (some) of the views presented in this video.

Let me be blunt, I have serious concerns regarding threats issued by a
developer in this video, and I think that it is entirely possible that
those of you who are core developers have already seen this and have
been discussing it.  But I am interested in seeing this resolved here
on this list openly and having it resolved.  It's sad and unfortunate
to me, but I feel that it's necessary to do this.  Identify what's
happening, address it squarely, have the person who is threatening
others explain his/her behavior, deal with the problem and move on.
This seems to be very important.  Please tell me if I am wrong about
this or totally flawed in my perspective here.  Go right ahead.

In this video, a particular developer makes the following statement,
stating in part:

"My preferred solution is that Gavin revokes commit access from
everyone else in the project, and then... makes the change himself"

Regardless of how you look at this, and even if we believe that Gavin
will not respond to that developer's request for a so-called
"solution," such a statement (by any developer) is indeed both a
threat and an act of sabotage against the larger bitcoin community.
We should certainly be thankful therefore, for the recent policy
change at bitcoin.org which can be seen here:
https://cloud.githubusercontent.com/assets/61096/8173297/578483f8-1399-1
1e5-8f48-96f33d12b996.png

I firmly believe that any developer who made a statement suggesting
that commit access of others in the project be revoked so that they
can proceed with their personal plan, needs to answer for having made
such a suggestion with a formal apology to this list, followed by an
explanation for why they themselves should not have their commit
access removed.

Overall, however, this sort of bombastic, nuclear suggestion makes me
seriously concerned for the future of bitcoin (as well as any
cryptocurrency which has repositories on Github).

So, you know who you are:  Apologize for your statement ("preferred
solution") and explain to the community why you should still have
commit access in light of the threat you have made to all the other
developers (and indeed to all participants of the bitcoin community).
 These "nuclear options" are unacceptable to us all.

Respectfully,

- -O


- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVgoc3AAoJEGxwq/inSG8C6QYH/1Ag+4ESTSUPkP8PCTj1AJds
J4MmBz4cX7IYsSttTAjyiwd6oTHCU+wAcXtgZYpzr8rWF62bG5/+kAFUfjKwNsGM
WqcdNOR6h8fQulx8niuro8kZF/xOsG5eHtRK2FMCorxj0t6qn4pH5WAQL73J3hXQ
xI831Nt/L7VTa0jlKbr2/VGlqh6CtGrZ9mXp6aV1MBNwHbFryNBJW9ubvUv/IRxZ
GyJ+c3+Br2KKAQTMsyNn3VXMlXJL6kt0pwwk2od3j/+dKE4pAetHvZ5OgIO+qUWd
6R0/AaoW5jk343TaQ5BHaSpNW+OM9Yc1ycZyqE/YV8JwWeA6G/QdmRVYeoLMCZQ=
=zJeO
-----END PGP SIGNATURE-----



From laanwj at gmail.com  Thu Jun 18 08:56:37 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Thu, 18 Jun 2015 10:56:37 +0200
Subject: [Bitcoin-development] Bitcoin core 0.11.0 release candidate 2
	available
Message-ID: <20150618085636.GC21275@amethyst.visucore.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Hello,

I've just uploaded Bitcoin Core 0.11.0rc2 executables to:

https://bitcoin.org/bin/bitcoin-core-0.11.0/test/

The source code can be found in the source tarball or in git under the tag 'v0.11.0rc2'

Preliminary release notes can be found here:

https://github.com/bitcoin/bitcoin/blob/0.11/doc/release-notes.md

Changes since rc1:
- - #6274 `4d9c7fe` Add option `-alerts` to opt out of alert system
- - #5985 `37b4e42` Fix removing of orphan transactions
- - #6221 `6cb70ca` Prune: Support noncontiguous block files
- - #6256 `fce474c` Use best header chain timestamps to detect partitioning
- - #6244 `0401aa2` configure: Detect (and reject) LibreSSL
- - #6269 `95aca44` gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures
- - #6285 `ef1d506` Fix scheduler build with some boost versions.
- - #6280 `25c2216` depends: fix Boost 1.55 build on GCC 5
- - #6276 `c9fd907` Fix getbalance * 0
- - #6264 `94cd705` Remove translation for -help-debug options
- - #6286 `3902c15` Remove berkeley-db4 workaround in MacOSX build docs

Thanks to everyone that participated in development, translation or in the gitian build process,

Wladimir
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBCgAGBQJVgoeFAAoJEHSBCwEjRsmmkggH/3jyzuPXDpUpCpfzyDZDW4CO
GRqIZwCa8vY9Gv9T0mX5jLXOfXpPAMyzWnCz2Eqh0hRLHK8WzObPqdX+3KLaaoO/
rOroDCG7AUZB4GaodSZURqJm8RmnNtWNckK7GBwXbZ7qNZrkpRNUh1z2JsatZdum
bUTBHX6Z9jW4HCmMZNn5lv5hRwu3XzFSi1uu9VyleVnIvdSbyjMhfjKn1VG0Rcnw
kTrCUgJccMP0htNGpIPni14PTak16ULs7KXMPNtpgB/lo/4LhDLGTivXL5ntjQXX
gQarGdh9eCqazHyIMSHTj4eO3GvLNUCHp3wM6YTiEhABkkWL3wRwn8yqMRf0EWE=
=GCM7
-----END PGP SIGNATURE-----



From mike at plan99.net  Thu Jun 18 10:00:17 2015
From: mike at plan99.net (Mike Hearn)
Date: Thu, 18 Jun 2015 12:00:17 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <55828737.6000007@riseup.net>
References: <55828737.6000007@riseup.net>
Message-ID: <CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>

Dude, calm down. I don't have commit access to Bitcoin Core and Gavin
already said long ago he wouldn't just commit something, even though he has
the ability to do so.

So why did I say it? Because it's consistent with what I've always said:
 you cannot run a codebase like Wikipedia. Maintainers have to take part in
debates, and then make a decision, and anyone else who was delegated commit
access for robustness or convenience must then respect that decision. It's
the only way to keep a project making progress at a reasonable pace.

This is not a radical position. That's how nearly all coding projects work.
I have been involved with open source for 15 years and the 'single
maintainer who makes decisions' model is normal, even if in some large
codebases  subsystems have delegated submaintainers.

This is also how all my own projects are run. Bitcoinj has multiple people
with commit access. Regardless, if there were to be some design dispute or
whatever, I wouldn't tolerate the others with commit access starting some
kind of Wiki-style edit war in the code if they disagreed. Nor would I ever
expect to get my own way in other people's projects by threatening to
revert the maintainers changes.

Core is in the weird position where there's no decision making ability at
all, because anyone who shows up and shouts enough can generate
'controversy', then Wladimir sees there is disagreement and won't touch the
issue in question. So it just runs and runs and *anyone* with commit access
can then block any change.

I realise some people think this anti-process leads to better decision
making. I disagree. It leads to no decision making, which is not the same
thing at all.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/8e40d538/attachment.html>

From laanwj at gmail.com  Thu Jun 18 11:14:09 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Thu, 18 Jun 2015 13:14:09 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
Message-ID: <20150618111407.GA6690@amethyst.visucore.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

On Thu, Jun 18, 2015 at 12:00:17PM +0200, Mike Hearn wrote:

> Core is in the weird position where there's no decision making ability at
> all, because anyone who shows up and shouts enough can generate
> 'controversy', then Wladimir sees there is disagreement and won't touch the
> issue in question. So it just runs and runs and *anyone* with commit access
> can then block any change.

Bitcoin Core is completely different from your average open source project in one aspect: where it concerns consensus.

Like in any open source project there is lots of decision making ability for code changes. I'd say look at the changelog for e.g. 0.11 https://github.com/bitcoin/bitcoin/blob/0.11/doc/release-notes.md#0110-change-log, or follow pull requests for a while, to see how many decisions about changes are made from day to day. No, I'm not sitting on my hands, and so is none of the other contributors that you'd like to get rid of.

Consensus changes are *much* more difficult, on the other hand. Even relatively straightforward softforks come with a long discussion process (see BIP62, BIP66). A hardfork is hard to do at the best of times (everyone needs to upgrade their software!), and simply not possible if almost the entire technical community disagrees with you.

Bitcoin is supposed to be a robust, global, decentralized network beyond anyone's control. It makes *no sense* to try to run it as a dictatorship. This would create a handy central position where power can be applied, pushing through changes to the behavior of the system, either by force or other ways of motivation. I refuse to take part in that.

Hence, anything that is controversial needs to be considered really carefully. If I suddenly start making changes to the consensus code without full agreement, by all means take away my commit privileges.

(a major reason for the ongoing libconsensus work is to separate "Bitcoin Core, the node software" and "The Bitcoin Consensus" along clear lines, to avoid this kind of nasty confusion)

Wladimir
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBCgAGBQJVgqfOAAoJEHSBCwEjRsmmFT8H/Rkm29AhLhT8R1Vx8oKUIzID
+NB7tOps3lIilkDQIC5zHSknx5iugrrAdRf1w7qPj/o8+xhCZw9ruu8eIq+djkRQ
tvzbHil2pqgT3VHriRlY4lvlmu2NmBcYrAuX9sDhUHBo6cwGajfKMJPfE0haK3K4
7EmfdGXJYJmiBnhE6ikOiU687M2WgsmIGrBDIxeA5wYwVK9Ph8hfcbuj7AHvIMI9
ZNU/V6uhcTjn5wT+6DHGIOxHipYHyAwKb7jKho0XkM6Yi4ORe1mxF5HDtqA0ztta
mZPNjNrt/ngK20xRbqkb0GtxoyZq38ZF3Bq1gaWl2v9MBBMD5ZxQAvgCNUQFEo0=
=W26K
-----END PGP SIGNATURE-----



From grarpamp at gmail.com  Thu Jun 18 11:36:57 2015
From: grarpamp at gmail.com (grarpamp)
Date: Thu, 18 Jun 2015 07:36:57 -0400
Subject: [Bitcoin-development] Video summarizations of blocksize issues?
Message-ID: <CAD2Ti29KNZO8tJwDbBZrXmYAv6nArd1OxKnNiHaWC_UG4e3Rdg@mail.gmail.com>

On Thu, Jun 18, 2015 at 4:54 AM, odinn <odinn.cyberguerrilla at riseup.net> wrote:
> Recently I saw the following video:
> https://www.youtube.com/watch?v=8JmvkyQyD8w&t=47m58s

For those loosely following the technical issues from outside development
circles, but who may be pressed into a voting/adoption type position (miners,
users, investors)... is there a parallel presentation of the concepts and
arguments from the other side (both, or the various, sides) that they
can refer to?
Someplace where they are collated and presented? A wiki perhaps?
Are these even valid or necessary questions?



From lawrence at greenaddress.it  Thu Jun 18 11:41:01 2015
From: lawrence at greenaddress.it (Lawrence Nahum)
Date: Thu, 18 Jun 2015 11:41:01 +0000 (UTC)
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
	to Remove Commit Access from Other Developers
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
Message-ID: <loom.20150618T133032-801@post.gmane.org>

Mike Hearn <mike <at> plan99.net> writes:

> It's the only way to keep a project making progress at a reasonable pace.
[SNIP]

If Bitcoin is managed with a linux kernel style dictator it would be 
centralized (yet unlike linux, where people can fork without impacting others 
in Bitcoin a hard fork puts at risks everyone's bitcoins) - I hope we all 
agree there is no point in a centralized Bitcoin?

In addition and more importantly, it would put Gavin in tremendous dangers, 
both from violent threats/blackmailing prospective as well as regulatory 
prospective - how can you not see that?

I hope all this confrontation will be worth something in the end: to show 
that Bitcoin can't be changed centrally and that it can't be changed without 
consensus




From laanwj at gmail.com  Thu Jun 18 11:47:59 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Thu, 18 Jun 2015 13:47:59 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <20150618111407.GA6690@amethyst.visucore.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
Message-ID: <20150618114757.GB6690@amethyst.visucore.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

On Thu, Jun 18, 2015 at 01:14:09PM +0200, Wladimir J. van der Laan wrote:

> On Thu, Jun 18, 2015 at 12:00:17PM +0200, Mike Hearn wrote:
> 
> > Core is in the weird position where there's no decision making ability at
> > all, because anyone who shows up and shouts enough can generate
> > 'controversy', then Wladimir sees there is disagreement and won't touch the
> > issue in question. So it just runs and runs and *anyone* with commit access
> > can then block any change.

And allegations that the project is "run like wikipedia" or "an edit war" are verifyably untrue.
Check the commit history.
How many reverts do you see? How many of those do you see that are not simply to get rid of unexpected bugs, to be re-merged later?

Not much more than two, in ~5500 commit over six years. I feel sorry for you that `getutxos` was rejected in a messy way, still you are so held up about it and keep repeating it as if it is a daily occurence. Disingenuous, at the least.

Wladimir
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBCgAGBQJVgq/WAAoJEHSBCwEjRsmm8NUIAI/csucOmfF9e+BtSH+uruhl
ox32stQfD3hwcKropLEPFfKvmOcRU1nXBy6lcvhG+axw+WqpC48EvpD73P/BuSv7
RvlLayqP+D6oiNsH+7S7C0/ndy+Pne04D+srSSBhXKfZMqruBqmUSontziJZTeLR
C6CCFwFSAvSXGV873I3i4M4U5QqIrE5PyuK75wjl2SFisd2LjBgfzZh4HDbz85Qr
gApLpdTxu4gDkGx4B9txCkfyb5W2z8nawWYb7+O7y/NbFL1Qlb36MzGuVKL6Zj1z
B8kJrOLVW9ItduVRY/03wLsqBuGC9fjuhWexjKenvMpxfO//VvOxIBA7sCDrxjU=
=lisE
-----END PGP SIGNATURE-----



From pieter.wuille at gmail.com  Thu Jun 18 12:29:42 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Thu, 18 Jun 2015 14:29:42 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <20150618111407.GA6690@amethyst.visucore.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
Message-ID: <CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>

On Thu, Jun 18, 2015 at 1:14 PM, Wladimir J. van der Laan <laanwj at gmail.com>
wrote:

> Like in any open source project there is lots of decision making ability
> for code changes. I'd say look at the changelog for e.g. 0.11
> https://github.com/bitcoin/bitcoin/blob/0.11/doc/release-notes.md#0110-change-log,
> or follow pull requests for a while, to see how many decisions about
> changes are made from day to day. No, I'm not sitting on my hands, and so
> is none of the other contributors that you'd like to get rid of.
>

The analogy goes further even. Even though I disagree with some of the
changes you're making, I respect Mike's (and anyone's) right to make a fork
of Bitcoin Core. That's how open source works: if people disagree with
changes made or not made, they can maintain their own version. However:


> Consensus changes are *much* more difficult, on the other hand. Even
> relatively straightforward softforks come with a long discussion process
> (see BIP62, BIP66). A hardfork is hard to do at the best of times (everyone
> needs to upgrade their software!), and simply not possible if almost the
> entire technical community disagrees with you.
>

Consensus changes - in particular hardforks - are not about making a change
to the software. You are effectively asking users of the system to migrate
to a new system. Perhaps one which is a philosophical successor to the old
one, but a different system, with new rules that are incompatible with the
old one.

I believe this is something that can only be done if there is no
controversy about the change, for different reasons:

* Risk: no matter how you determine the switchover date, there is no way of
knowing when (and whether at all) everyone changes their full nodes (and
perhaps other software), and even very high hash power votes cannot prevent
an actual fork from appearing afterwards. At best, people lose the
guarantee that their confirmations are meaningful (because at some point it
becomes clear that the other side will get adopted, and they need to
switch). At worst, a fork persists, and two partitions appear, in each of
which you can spend every pre-existing coin. This defeats the primary
purpose Bitcoin was designed for: double spend protection.

* Philosophy: Bitcoin is not a democracy. The full node security model is
designed to minimize trust in other parties in the system. This works by
validating as much as possible according to the consensus rules. In
particular, there is no "majority vote" that can override things (contrary
to what some people think, it is not "longest chain wins, and a majority of
miners decide"; even a majority of miners cannot steal your coins or
produce more than the allowed subsidy, unless they convince others to
change their software). Changing the rules should be possible if there is
wide consensus, but nobody should feel forced to change their code against
their will.

* Governance: being able to push for a controversial change to the system
sets an incredibly dangerous precedent about who is in charge of the
system's rules. What if next time it is a change demanded by parties with
less good intentions (and yes, I believe people in this discussions all
have good intentions to improve the system in a way they think is most
useful)? I can promise you that I will say anything in mail to this list if
someone points a gun at me, and I think you should make the same assumption
about other people here. By avoiding controversial changes, you avoid
external and potentially invisible manipulation.

Of course, sometimes changes to the consensus rules may be wanted. The
presence of a bug is a good reason, and widespread agreement about one of
the system's limitation is too. As I said before, I think technological
growth in network bandwidth, processing power, and storage, are a good
reason why the system should be able to scale proportionally. I think there
are good technical and economic reasons why we should be cautious about
this, but the primary requirement is consensus, and aligning people's
expectation about what they can expect from network's evolution.

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/306edc65/attachment.html>

From laanwj at gmail.com  Thu Jun 18 12:50:17 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Thu, 18 Jun 2015 14:50:17 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
Message-ID: <20150618125016.GA7611@amethyst.visucore.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

On Thu, Jun 18, 2015 at 02:29:42PM +0200, Pieter Wuille wrote:
> On Thu, Jun 18, 2015 at 1:14 PM, Wladimir J. van der Laan <laanwj at gmail.com>
> wrote:
> 
> > Like in any open source project there is lots of decision making ability
> > for code changes. I'd say look at the changelog for e.g. 0.11
> > https://github.com/bitcoin/bitcoin/blob/0.11/doc/release-notes.md#0110-change-log,
> > or follow pull requests for a while, to see how many decisions about
> > changes are made from day to day. No, I'm not sitting on my hands, and so
> > is none of the other contributors that you'd like to get rid of.
> >
> 
> The analogy goes further even. Even though I disagree with some of the
> changes you're making, I respect Mike's (and anyone's) right to make a fork
> of Bitcoin Core. That's how open source works: if people disagree with
> changes made or not made, they can maintain their own version. However:

Sure. According to github, there exist 4890 forks of the bitcoin/bitcoin repository.

Forking the code is perfectly fine in itself, that doesn't even need to be said, it's how open source works. Make your changes, run your own version, contribute back the changes (or not).

And I never had a problem with Bitcoin-XT while it was just a patch-set with no consensus changes. But a controversial hard fork of the chain is something else completely.

Wladimir
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBCgAGBQJVgr5LAAoJEHSBCwEjRsmm5mMH/0yLGGQQefRVdmM/nJZ60b/z
iTCUUzY4eLL67FRC6pqGA18RdUt4Etl4wEqvgXH/B9mWIAM2yQD/jnxutYrEIoBT
8Jyd1OhmmKF8MN5/uE7JNPivIuHs0ioF+qTxlbdElpVZ2NodVotznbTvuqJgXUFb
c9Et5L5n7g55uPzDt+MSV5iBDJaMiBAnZA00aTLGmYmNXxcy7xBwCFX3dDij8krv
0+zdpNNAKm85k1rG2jHCM+0onu+TOIur03pPd5OZktgr18P6UvAQ6A59yAkGgFai
4l6VVNJ40g3PzItGQ7wsKZ8s/qG5LlcEppxMlG6CX1dIDpxbrwx2aJmeNjwSLKQ=
=LbA3
-----END PGP SIGNATURE-----



From benjamin.l.cordes at gmail.com  Thu Jun 18 12:56:32 2015
From: benjamin.l.cordes at gmail.com (Benjamin)
Date: Thu, 18 Jun 2015 14:56:32 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <20150618125016.GA7611@amethyst.visucore.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
	<20150618125016.GA7611@amethyst.visucore.com>
Message-ID: <CAOoPuRZSCG5fgJepEn4dubND7a63gCEXubYECQVk-ZeiXvhKPA@mail.gmail.com>

"And I never had a problem with Bitcoin-XT while it was just a
patch-set with no consensus changes. But a controversial hard fork of
the chain is something else completely."

How is that different? The only difference is in who makes the fork
and if that group has a chance of actually splitting/overriding the
network. So Mike and Gavin are using the trust and relationship they
have garnered through Bitcoin for their purposes (malicious or not).
There are only 20-30 people with the same kind of recognition who
would be able to do that. M&G already wanted to make a fork in 2014
for entirely different reasons (http://pastebin.com/3kt5Reeh).

On Thu, Jun 18, 2015 at 2:50 PM, Wladimir J. van der Laan
<laanwj at gmail.com> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA512
>
> On Thu, Jun 18, 2015 at 02:29:42PM +0200, Pieter Wuille wrote:
>> On Thu, Jun 18, 2015 at 1:14 PM, Wladimir J. van der Laan <laanwj at gmail.com>
>> wrote:
>>
>> > Like in any open source project there is lots of decision making ability
>> > for code changes. I'd say look at the changelog for e.g. 0.11
>> > https://github.com/bitcoin/bitcoin/blob/0.11/doc/release-notes.md#0110-change-log,
>> > or follow pull requests for a while, to see how many decisions about
>> > changes are made from day to day. No, I'm not sitting on my hands, and so
>> > is none of the other contributors that you'd like to get rid of.
>> >
>>
>> The analogy goes further even. Even though I disagree with some of the
>> changes you're making, I respect Mike's (and anyone's) right to make a fork
>> of Bitcoin Core. That's how open source works: if people disagree with
>> changes made or not made, they can maintain their own version. However:
>
> Sure. According to github, there exist 4890 forks of the bitcoin/bitcoin repository.
>
> Forking the code is perfectly fine in itself, that doesn't even need to be said, it's how open source works. Make your changes, run your own version, contribute back the changes (or not).
>
> And I never had a problem with Bitcoin-XT while it was just a patch-set with no consensus changes. But a controversial hard fork of the chain is something else completely.
>
> Wladimir
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1
>
> iQEcBAEBCgAGBQJVgr5LAAoJEHSBCwEjRsmm5mMH/0yLGGQQefRVdmM/nJZ60b/z
> iTCUUzY4eLL67FRC6pqGA18RdUt4Etl4wEqvgXH/B9mWIAM2yQD/jnxutYrEIoBT
> 8Jyd1OhmmKF8MN5/uE7JNPivIuHs0ioF+qTxlbdElpVZ2NodVotznbTvuqJgXUFb
> c9Et5L5n7g55uPzDt+MSV5iBDJaMiBAnZA00aTLGmYmNXxcy7xBwCFX3dDij8krv
> 0+zdpNNAKm85k1rG2jHCM+0onu+TOIur03pPd5OZktgr18P6UvAQ6A59yAkGgFai
> 4l6VVNJ40g3PzItGQ7wsKZ8s/qG5LlcEppxMlG6CX1dIDpxbrwx2aJmeNjwSLKQ=
> =LbA3
> -----END PGP SIGNATURE-----
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From admin at ninkip2p.com  Thu Jun 18 13:14:01 2015
From: admin at ninkip2p.com (Team Ninki)
Date: Thu, 18 Jun 2015 22:14:01 +0900
Subject: [Bitcoin-development] Ninki Wallet view on blocksize debate
Message-ID: <CAMmvJxGioDZ7WbwyeLgh9+PNgvKmrxjrqTFjgT0WJ7LCO+0QOQ@mail.gmail.com>

Hi,

I am the developer for Ninki Wallet which has recently been listed on
bitcoin.org.

FWIW I support the approach of the existing bitcoin core dev team having
observed their work for the last year and their attitude towards consensus,
a clear process for change and discussion of changes.

I think, like everyone else, that the block size limit will have to be
increased in the future, but I don't like to see this done in a gung-ho way
without an established consensus on how bitcoin will scale *with*
decentralization and maintain it's key value property.

I would not support any group that attempts to fork the blockchain in the
manner proposed using XT. I strongly urge Gavin to withdraw from this
standoff and work with the bitcoin core devs via the existing and
successful bip process.

Thanks

Ben
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/a54e8d57/attachment.html>

From mike at plan99.net  Thu Jun 18 13:31:54 2015
From: mike at plan99.net (Mike Hearn)
Date: Thu, 18 Jun 2015 15:31:54 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <20150618111407.GA6690@amethyst.visucore.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
Message-ID: <CANEZrP2iMXeL-5zyE2cvoyNRakhZbQfLXORZ2AhqEATQE-KjAQ@mail.gmail.com>

OK, let's agree to unpack the two things.

The first issue is how are decisions made in Bitcoin Core? I struggle to
explain this to others because I don't understand it myself. Is it a vote
of people with commit access? Is it a 100% agreement of "core developers"
and if so, who are these people? Is it "whoever reverts the change last"?
Could I write down in a document a precise description of how decisions are
made? No, and that's been a fairly frustrating problem for a long time.

But let's leave it to one side for a moment.

Let's focus on the other issue:   what happens if the Bitcoin Core decision
making process goes wrong?

For the sake of argument let's pretend we're discussing a different change,
let's imagine there is a proposal to change the block format to include a
Widget, where a Widget is some potentially desirable thing. And this change
means a hard fork. Let's put the block size to one side for a second to
avoid getting distracted.

Imagine that 90% of people in Bitcoin want their Widgets, but one of your
committers refuses to accept it.  I am not saying the block size debate has
such proportions but pretend Widgets do.

What is the process for resolving this problem?

Gavin and I say - there is a process, and that process is a hard fork of
the block chain.

What you're saying is - there is no process because a contentious hard fork
must never happen. Such a change is simply impossible.

Now which is a better description of this situation? Is the "it must never
happen end of story" really the cuddly warm democracy that you seem to
suggest? Or is it more like a dictatorship where the opinions of one or two
people can override all the others?

The typical answer I'm seeing to this is that Bitcoin Core's own decision
making process is so fantastic that it never goes wrong, even though
"consensus" is not defined and "technical majority" is not defined and we
have serious long time contributors on this mailing list (such as wallet
developers) disagreeing with this consensus yet our feedback is being
ignored.

You guys *must* accept that your preferred process for resolving disputes
is, itself, in dispute. That leaves the block chain itself as the only
remaining method for bringing this saga to a close.

So this is why we keep disagreeing:

   - If Bitcoin Core has reached a formal decision made by the maintainer
   via whatever mechanism he likes to not accept the block size increase, then
   alright, technical disputes will happen. But ....

   - You should agree that the next step is a fork of both the software and
   the block chain. And you should welcome such a thing because it is the ONLY
   check on your own power. It's the one thing that allows the community to
   reject the decision making process you are using in case it goes wrong.

I keep reading that Bitcoin cannot survive a hard fork. Well, we've
survived an accidental fork that happened without anyone being prepared,
and even with a planned soft fork "never upgrade" isn't really an option
for either miners or businesses, so ultimately node operators must know
about upgrades and make them. Both myself and Gavin think this process can
work out OK.

Do you at least understand where we're coming from here, even if you
disagree? And if you disagree, is it because you think a hard fork to
resolve a dispute can't work technically, or is it some other reason?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/de57a58c/attachment.html>

From mike at plan99.net  Thu Jun 18 13:36:53 2015
From: mike at plan99.net (Mike Hearn)
Date: Thu, 18 Jun 2015 15:36:53 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <20150618114757.GB6690@amethyst.visucore.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<20150618114757.GB6690@amethyst.visucore.com>
Message-ID: <CANEZrP0Y5T2_e=TEeYr1R-Gke15_6dJBN+vgFG5Z34YfY4AKmw@mail.gmail.com>

>
> And allegations that the project is "run like wikipedia" or "an edit war"
> are verifyably untrue.
> Check the commit history.
>

This was a reference to a post by Gregory on Reddit where he said if Gavin
were to do a pull request for the block size change and then merge it, he
would revert it. And I fully believe he would do so!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/78f96bc5/attachment.html>

From milly at bitcoins.info  Thu Jun 18 12:38:30 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Thu, 18 Jun 2015 08:38:30 -0400
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <20150618111407.GA6690@amethyst.visucore.com>
References: <55828737.6000007@riseup.net>	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
Message-ID: <5582BBC6.9070105@bitcoins.info>

What is immediately clear to anyone who looks at Bitcoin software 
development is that there is no clear process or method to make 
changes/updates to the software.  When I have questioned this in the 
past the response is usually some cultish answer about how some kind of 
technical consensus is reached yet nobody can point to an actual 
process.  If companies are expected to dedicate resources to adopt 
Bitcoin there needs to be some type of process spelled out that can give 
these entities at least minimal assurance that there is some type of 
process in place.  I think the whole process is based on how certain 
personalities handle issues but as those personalities change the system 
changes in unknown ways which equates to risk.

The other thing that is immediately clear is that there is no systems 
engineering process in place to make changes.  A "risk study" was done 
by the Bitcoin Foundation but that is only the first baby step in the 
process.  It works by defining a set of risks, likelihood, mitigations, 
etc.  and a risk matrix and maintaining those as living documents.   
When changes are proposed alternative scenarios are created and they are 
measured against the baseline of what there is now.  Standard test plans 
are created to measure the changes against defined metrics.  It is a lot 
of work to define those risks to the level of detail needed for work 
like this.  However, the amount of time/energy saved in the end is 
tremendous.   Right now the process is haphazard at best with people 
posting random tweets, Reddit posts, blog posts, etc.  All this drama 
makes Bitcoin look somewhat amateurish and rather risky.

http://www.dtic.mil/ndia/2004cmmi/CMMIT1Mon/Track1IntrotoSystemsEngineering/KISE09RiskManagementv2.pdf

https://bitcoinfoundation.org/wp-content/uploads/2014/04/Bitcoin-Risk-Management-Study-Spring-2014.pdf

Some people also seems to conflates the notion of decentralization of 
the state of the ledger by mining/nodes with that of decentralization of 
open source software by forking the software. These are very different 
problems and I don't think it is possible (or even desirable) to achieve 
the same level of decentralization for both things.  In any case 
"decentralization" for the state of the blockchain is only an 
approximation anyway since there are things like 51% attacks and 
checkpoints.

Russ




On 6/18/2015 7:14 AM, Wladimir J. van der Laan wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA512
>
> On Thu, Jun 18, 2015 at 12:00:17PM +0200, Mike Hearn wrote:
>
>> Core is in the weird position where there's no decision making ability at
>> all, because anyone who shows up and shouts enough can generate
>> 'controversy', then Wladimir sees there is disagreement and won't touch the
>> issue in question. So it just runs and runs and *anyone* with commit access
>> can then block any change.
> Bitcoin Core is completely different from your average open source project in one aspect: where it concerns consensus.
>
> Like in any open source project there is lots of decision making ability for code changes. I'd say look at the changelog for e.g. 0.11 https://github.com/bitcoin/bitcoin/blob/0.11/doc/release-notes.md#0110-change-log, or follow pull requests for a while, to see how many decisions about changes are made from day to day. No, I'm not sitting on my hands, and so is none of the other contributors that you'd like to get rid of.
>
> Consensus changes are *much* more difficult, on the other hand. Even relatively straightforward softforks come with a long discussion process (see BIP62, BIP66). A hardfork is hard to do at the best of times (everyone needs to upgrade their software!), and simply not possible if almost the entire technical community disagrees with you.
>
> Bitcoin is supposed to be a robust, global, decentralized network beyond anyone's control. It makes *no sense* to try to run it as a dictatorship. This would create a handy central position where power can be applied, pushing through changes to the behavior of the system, either by force or other ways of motivation. I refuse to take part in that.
>
> Hence, anything that is controversial needs to be considered really carefully. If I suddenly start making changes to the consensus code without full agreement, by all means take away my commit privileges.
>
> (a major reason for the ongoing libconsensus work is to separate "Bitcoin Core, the node software" and "The Bitcoin Consensus" along clear lines, to avoid this kind of nasty confusion)
>
> Wladimir
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1
>
> iQEcBAEBCgAGBQJVgqfOAAoJEHSBCwEjRsmmFT8H/Rkm29AhLhT8R1Vx8oKUIzID
> +NB7tOps3lIilkDQIC5zHSknx5iugrrAdRf1w7qPj/o8+xhCZw9ruu8eIq+djkRQ
> tvzbHil2pqgT3VHriRlY4lvlmu2NmBcYrAuX9sDhUHBo6cwGajfKMJPfE0haK3K4
> 7EmfdGXJYJmiBnhE6ikOiU687M2WgsmIGrBDIxeA5wYwVK9Ph8hfcbuj7AHvIMI9
> ZNU/V6uhcTjn5wT+6DHGIOxHipYHyAwKb7jKho0XkM6Yi4ORe1mxF5HDtqA0ztta
> mZPNjNrt/ngK20xRbqkb0GtxoyZq38ZF3Bq1gaWl2v9MBBMD5ZxQAvgCNUQFEo0=
> =W26K
> -----END PGP SIGNATURE-----
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>





From mike at plan99.net  Thu Jun 18 13:49:06 2015
From: mike at plan99.net (Mike Hearn)
Date: Thu, 18 Jun 2015 15:49:06 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
Message-ID: <CANEZrP04SUHShoqUkA3aSs3yEP3GSsZ_3ZOGFXyJfNve5KTPfA@mail.gmail.com>

Hi Pieter,

I believe Gavin plans to write a blog post about the hard fork process, but
I'd like to debate this with you now, if only to give him material to work
with :)

Your points look to me like the hard/soft fork debate in different clothes.

For example, we all agree that the rules of Bitcoin *can* be changed, and
have been before (e.g. P2SH), with software upgrades.

When such a fork happens, any user who does not upgrade their node isn't
fully verifying the block chain anymore. Their software might *think* it
is, but it's running NOPs that don't mean NOP to other nodes. So there is a
divergence in the consensus, it's merely been done in such a way that the
node won't stop and print "hard fork detected" to the logs. It'll happily
accept a block that violates the new rules, then wait to be corrected by
miners.

So with any fork, hard or soft, there is risk to those who don't upgrade.
They may accept a block, or even two blocks, that they believe are valid
according to their old rule set, but which other miners would reject. The
effect on double spending is much the same.

Now let's talk philosophy.

* Philosophy: Bitcoin is not a democracy.
>

This appears to be a key point of dispute. Bitcoin is a democracy, though
the analogy is not perfect. You can certainly believe whatever you like
about the true state of the ledger, but rubber hits the road the moment you
go and trade with other people.

If 90% of the people you trade with believe a coin exists, and you don't,
you're gonna discover you keep getting paid with that coin and its
descendents. You may hate it, you may feel your rights are being violated,
you may refuse to trade with those people but it will keep happening.

Money is about trade, and trade inherently involves the decisions of other
people. No man is an island.

With Bitcoin we have a great way to quickly find out what other people
believe about the ledger. If the vast majority of people are on ledger A
and you're on ledger B, then you've got a strong incentive to come into
line with the majority in order to keep trading.


> Changing the rules should be possible if there is wide consensus, but
> nobody should feel forced to change their code against their will.
>

Nobody, not even after a hard fork, is *forced* to change their code
against their will. It may be something that *other people require* as part
of trading with them though. Whether one considers this "forced" or not I
guess can be argued either way. Are you "forced" to buy oranges from the
single orange seller in town if the other goes bankrupt, or could you just
avoid oranges? Where does economic freedom begin and end?


> * Governance: being able to push for a controversial change to the system
> sets an incredibly dangerous precedent about who is in charge of the
> system's rules.
>

I think it's surely the opposite - *not* being able to push for
controversial changes sets an incredibly dangerous precedent. Namely,
whoever gets to decide that a change is controversial gets to veto anything
they like!


> I can promise you that I will say anything in mail to this list if someone
> points a gun at me
>

Indeed, me too! But it's worse than that: what if someone sockpuppets a
discussion to make it look like a change does or does not have consensus?

One reason I keep banging on about *process* and how Wladimir needs to be
The Decider is that the current attempt at "process" is so vague, not only
is it unexplainable, but it's wide open to manipulation.

Good thing we have a way to resolve this problem:  the block chain. Now it
doesn't matter if someone points a gun at you or me. We can object to
whatever we like and that wouldn't bring Bitcoin to a halt, thus removing
the incentive to try and pressure individuals.

But if we don't have that ability to vote through choice of software and
rulesets, then us poor developers really are in charge and that's not a
place any of us should want to go. There must be a mechanism for people to
disagree with the consensus, even in major, controversial ways, and that
mechanism must have real force to it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/9f95c39c/attachment.html>

From pieter.wuille at gmail.com  Thu Jun 18 13:50:07 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Thu, 18 Jun 2015 15:50:07 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CANEZrP2iMXeL-5zyE2cvoyNRakhZbQfLXORZ2AhqEATQE-KjAQ@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CANEZrP2iMXeL-5zyE2cvoyNRakhZbQfLXORZ2AhqEATQE-KjAQ@mail.gmail.com>
Message-ID: <CAPg+sBg4Du++h4p2jf4Trrx5OW8v13VEdmiwtWn71bynOs+UFw@mail.gmail.com>

On Thu, Jun 18, 2015 at 3:31 PM, Mike Hearn <mike at plan99.net> wrote:

> OK, let's agree to unpack the two things.
>
> The first issue is how are decisions made in Bitcoin Core? I struggle to
> explain this to others because I don't understand it myself. Is it a vote
> of people with commit access? Is it a 100% agreement of "core developers"
> and if so, who are these people? Is it "whoever reverts the change last"?
> Could I write down in a document a precise description of how decisions are
> made? No, and that's been a fairly frustrating problem for a long time.
>
> But let's leave it to one side for a moment.
>
> Let's focus on the other issue:   what happens if the Bitcoin Core
> decision making process goes wrong?
>

Why do you keep talking about Bitcoin Core maintainers? The means for doing
a hard fork is convincing the network to run modified code, whether that is
a new version of Bitcoin Core or a fork of it, or something else entirely.

If I see consensus about a proposed network change, I will be in favor of
implementing it in Bitcoin Core. But we're not at that point. There is no
network change proposed with consensus. There is not even a patch to be
discussed. There are working proposals, and people are talking about them.
This is good.

I think maintainers of particular software should not be, and are not those
who decide the network's rules. People running the code are. Of course
maintainers have a large influence, but so do other people - like you.

> This was a reference to a post by Gregory on Reddit where he said if
Gavin were to do a pull request for the block size change and then merge
it, he would revert it. And I fully believe he would do so!

I believe so too, and I would do the same. Because I believe implementing a
consensus rule change without having very good expectations that the
network will adopt it, is reckless from the point of view of maintainers,
for all reasons I have mentioned before.

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/d8c40122/attachment.html>

From laanwj at gmail.com  Thu Jun 18 14:05:45 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Thu, 18 Jun 2015 16:05:45 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CANEZrP04SUHShoqUkA3aSs3yEP3GSsZ_3ZOGFXyJfNve5KTPfA@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
	<CANEZrP04SUHShoqUkA3aSs3yEP3GSsZ_3ZOGFXyJfNve5KTPfA@mail.gmail.com>
Message-ID: <20150618140544.GA7674@amethyst.visucore.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

On Thu, Jun 18, 2015 at 03:49:06PM +0200, Mike Hearn wrote:
> One reason I keep banging on about *process* and how Wladimir needs to be
> The Decider is that the current attempt at "process" is so vague, not only
> is it unexplainable, but it's wide open to manipulation.

It looks as if you entirely missed my point. I'm The Decider for *code issues* regarding Bitcoin Core. Consensus issues should not be considered part of that, they span multiple implementations.

So I'm *not* the decider for anything that concerns the behavior of the global consensus, and I cannot be, as I have explained in the previous post, and as Sipa explained in his.

Speaking of process, let me remind you that there is a BIP processs: https://github.com/bitcoin/bips/blob/master/bip-0001.mediawiki 

If you think it's not clear enough, which may explain why you did not even attempt to follow it for your block size increase, feel free to make improvements.

Wladimir
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBCgAGBQJVgtAOAAoJEHSBCwEjRsmmLPUH/1ug5pvLz6ptIhvuROclV7Jh
z0Szk5FOqfg4ejT3nYV5LRV5WNHUGDdFnHZJRFsKYH9B0LFgOlnkc488Qg6hBb+1
rf5zEF/D2X4MhPIx6GqI++gvhDzdBH2t9yxbU7LVZALo7+wtW+ms5eHHFs8WrU0z
m7NgiZRen4cpQUiBWHlt0PojmXBVZQNU0CD6ErcOpQXhN8J0sb0l0DuFswQgUqxk
rrNe3LvKp89xT0kDxyzQts/CeIG/8kQYLwIJ1QQDXvYayj2aHHYMkSEWfDlew3IC
zQkFgHCTGihGHPFeow+dnuW1DI1l92yPYNDLbxivSam3X+qCAGzUTOWTFE+iprk=
=tE4K
-----END PGP SIGNATURE-----



From mike at plan99.net  Thu Jun 18 14:16:51 2015
From: mike at plan99.net (Mike Hearn)
Date: Thu, 18 Jun 2015 16:16:51 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <20150618140544.GA7674@amethyst.visucore.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
	<CANEZrP04SUHShoqUkA3aSs3yEP3GSsZ_3ZOGFXyJfNve5KTPfA@mail.gmail.com>
	<20150618140544.GA7674@amethyst.visucore.com>
Message-ID: <CANEZrP0zxfK_SqveYyaPxAxVn_kM2347VrjstmkbHkXJC9suZw@mail.gmail.com>

>
> If you think it's not clear enough, which may explain why you did not even
> attempt to follow it for your block size increase, feel free to make
> improvements.
>

As the outcome of a block size BIP would be a code change to Bitcoin Core,
I cannot make improvements, only ask for them. Which is what I'm doing.

I agree that BIP 1 is not clear enough. Gavin is writing a BIP to accompany
his patch, because BIPs are best when they describe working code, and BIP 1
*is* at least clear about that. Otherwise it can turn out during
implementation that something was different to what was anticipated. I'm
sure you agree with this.

So a BIP is coming. However, BIP 1 also says this:

Vetting an idea publicly before going as far as writing a BIP is meant to
> save the potential author time


and

BIP authors are responsible for collecting community feedback on a BIP
> before submitting it for review


OK. Gavin has been vetting the idea publicly and collecting community
feedback. Note that the entire Bitcoin community is not on this list, so he
published a series of blog posts to get wider feedback, and then was
criticised for not doing it all here instead.

But anyway - so far, so good.  The procedure is being followed.

What happens once a BIP is written? The process says:

For a BIP to be accepted it must meet certain minimum criteria. It must be
> a clear and complete description of the proposed enhancement. The
> enhancement must represent a net improvement. The proposed implementation,
> if applicable, must be solid and must not complicate the protocol unduly.



>  Once a BIP has been accepted, the reference implementation must be
> completed.


This is where the problem starts.

The BIP process you refer to *does not state how acceptance will happen*.
It merely sets out a few minimum requirements like making some sort of
sense, having code. It's also full of extremely vague descriptions like
"must represent a net improvement". Improvement according to who? That's
left unexplained.

And then it says what happens once a BIP is accepted.

The middle bit is missing. When there is disagreement over a consensus BIP,
how are decisions made?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/c0cc0fed/attachment.html>

From kanzure at gmail.com  Thu Jun 18 14:33:24 2015
From: kanzure at gmail.com (Bryan Bishop)
Date: Thu, 18 Jun 2015 09:33:24 -0500
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
Message-ID: <CABaSBaxN+tUV0zoPLoJJ-ooBVsT1cg9U+9ge4Xw78d+3Be6LJA@mail.gmail.com>

On Thu, Jun 18, 2015 at 5:00 AM, Mike Hearn <mike at plan99.net> wrote:

> Dude, calm down.
>

Well hold on, his concerns are real and he seems perfectly calm to me and
others apparently.


> and Gavin already said long ago he wouldn't just commit something, even
> though he has the ability to do so.
>

Nobody is worried about Gavin or anyone else making commits to git
repositories. You'll notice that this wasn't even mentioned in the original
email you were replying to. Instead, the email was talking about commit
access, which is a property of GitHub's repositories.

So why did I say it? Because it's consistent with what I've always said:
>

(That's not a good reason.)

you cannot run a codebase like Wikipedia
>

Wikipedia is a top-down centralized authority-based hierarchy. That's
pretty close to what you're proposing. That's what everyone else is
disagreeing with. You seem to have switched your position mid-flight...?

This is not a radical position. That's how nearly all coding projects work.
> I have been involved with open source for 15 years and the 'single
> maintainer who makes decisions' model is normal, even if in some large
> codebases  subsystems have delegated submaintainers.


There are a number of reasons why that perspective is broken; throughout
our conversations others have repeatedly reminded you (such as in -wizards)
that forking an open-source repository is not at all like a hard-fork of
the blockchain. Anyone can be glorious leader of any repository they want,
that's how open-source works. However, it's critical that bitcoin users are
never convinced to trust BDFLs or anything else that can be compromised.
Should all bitcoin users suddenly start using software with BDFLs, even
multiple implementations with separate BDFLs, then those users can be
trivially compromised through their trust in those individuals and projects.

The alternative is that every developer and every user is personally
responsible for self-validation of the rules, checking for correctness and
validity. Happy coincidence that this seems to match the strategy of
operating the bitcoin network itself, which is to run a node that sees
everything and validates all the transactions. Anyone is able to find an
error in logic or flaw in the system rules, and they should make it known
as widely as possible so that others may evaluate the evidence and consider
which solutions preserve the important properties of the system. This is
not a matter of majorities or minorities; these arguments should be true
for anyone independent of who or what they are, or what level of
unpopularity they may have.

Anything other than this is somewhat radical, and I am confused as to why
others have been talking about "developer consensus". I suspect that the
reason why they have been saying developer consensus is because they are
talking about the Bitcoin Core project on GitHub at the moment. But the
topic switched to contentious hard-forks already, which is not a topic of
repositories but a topic of the blockchain and network; and in the context
of contentious hard-forks it is clear why everyone individually must
evaluate the rules and decide whether they the software is correct, or
whether changes can trivially cause catastrophic broken hard-forks. These
lines of reasoning should be true for everyone, and not merely true for one
person but not another. Users, companies and developers must be aware of
this, even though it's different from their usual expectations of how
systems operate and are maintained. And it is important to be careful to
not misconstrue this to others because it is entirely possible to
unintentionally convince others that traditional and centralized models are
safely applicable here.

I realise some people think this anti-process leads to better decision
> making. I disagree. It leads to no decision making, which is not the same
> thing at all.
>

Well, if you're talking about the recent disputes regarding a certain patch
to hard-fork the blockchain, a decision to not include such a patch seems
like the very definition of a decision.

Gavin and I say - there is a process, and that process is a hard fork of
> the block chain.


I doubt that other bitcoin software maintainers would agree with that sort
of toxic reasoning; contentious hard-forks are basically a weapon of war
that you can use against any other collaborator on any bitcoin project. Why
would anyone want to collaborate on such a hostile project? How would they
even trust each other?

- Bryan
http://heybryan.org/
1 512 203 0507
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/94f2df5c/attachment.html>

From milly at bitcoins.info  Thu Jun 18 14:53:22 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Thu, 18 Jun 2015 10:53:22 -0400
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <20150618140544.GA7674@amethyst.visucore.com>
References: <55828737.6000007@riseup.net>	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>	<20150618111407.GA6690@amethyst.visucore.com>	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>	<CANEZrP04SUHShoqUkA3aSs3yEP3GSsZ_3ZOGFXyJfNve5KTPfA@mail.gmail.com>
	<20150618140544.GA7674@amethyst.visucore.com>
Message-ID: <5582DB62.8000700@bitcoins.info>

 >So I'm *not* the decider for anything that concerns the behavior of 
the global consensus, and I cannot be, as I have explained in the 
previous post.

The person who decides if a pull request is accepted is a decider and 
significantly affects the behavior of the global consensus.  The only 
option for someone who doesn't agree is to hard fork.  There is no way 
around that and you should just accept that fact and move on.

Russ




From jgarzik at bitpay.com  Thu Jun 18 14:53:24 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Thu, 18 Jun 2015 10:53:24 -0400
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
Message-ID: <CAJHLa0OKXaUD6MnN4N6RGbNwrXx43jBm9MiELQK6BRw1OL3HNA@mail.gmail.com>

On Thu, Jun 18, 2015 at 8:29 AM, Pieter Wuille <pieter.wuille at gmail.com>
wrote:

> On Thu, Jun 18, 2015 at 1:14 PM, Wladimir J. van der Laan <
> laanwj at gmail.com> wrote:
>
>> Like in any open source project there is lots of decision making ability
>> for code changes. I'd say look at the changelog for e.g. 0.11
>> https://github.com/bitcoin/bitcoin/blob/0.11/doc/release-notes.md#0110-change-log,
>> or follow pull requests for a while, to see how many decisions about
>> changes are made from day to day. No, I'm not sitting on my hands, and so
>> is none of the other contributors that you'd like to get rid of.
>>
>
> The analogy goes further even. Even though I disagree with some of the
> changes you're making, I respect Mike's (and anyone's) right to make a fork
> of Bitcoin Core. That's how open source works: if people disagree with
> changes made or not made, they can maintain their own version. However:
>
>
>> Consensus changes are *much* more difficult, on the other hand. Even
>> relatively straightforward softforks come with a long discussion process
>> (see BIP62, BIP66). A hardfork is hard to do at the best of times (everyone
>> needs to upgrade their software!), and simply not possible if almost the
>> entire technical community disagrees with you.
>>
>
> Consensus changes - in particular hardforks - are not about making a
> change to the software. You are effectively asking users of the system to
> migrate to a new system. Perhaps one which is a philosophical successor to
> the old one, but a different system, with new rules that are incompatible
> with the old one.
>

Indeed.  I think Mike is glossing over this major facet.

Consensus changes - worded another way - change Bitcoin's Constitution -
The Rules that everyone in the system is -forced- to follow, or be ignored
by the system.

Changing bitcoin's rules IS IN NO WAY like Wikipedia or other open source
software.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/4eec5ab0/attachment.html>

From stephencalebmorse at gmail.com  Thu Jun 18 14:53:46 2015
From: stephencalebmorse at gmail.com (Stephen Morse)
Date: Thu, 18 Jun 2015 10:53:46 -0400
Subject: [Bitcoin-development] Ninki Wallet view on blocksize debate
In-Reply-To: <CAMmvJxGioDZ7WbwyeLgh9+PNgvKmrxjrqTFjgT0WJ7LCO+0QOQ@mail.gmail.com>
References: <CAMmvJxGioDZ7WbwyeLgh9+PNgvKmrxjrqTFjgT0WJ7LCO+0QOQ@mail.gmail.com>
Message-ID: <CABHVRKSc_bzxhu57P3BmYPON+LrTmeKMruAup78eGuvecrGjfQ@mail.gmail.com>

Ben,

How does your wallet calculate the fee that should be paid to miners? Do
they automatically adjust when transactions take a long time to be
confirmed? And how does it respond when transactions are not mined
successfully, such as when blocks are full?

I strongly urge Gavin to withdraw from this standoff and work with the
> bitcoin core devs via the existing and successful bip process.
>

The BIP process has not resulted in any hard forks, so this is a little
different. While I don't like M&G's proposed solution of convincing miners
and services to switch to Bitcoin-XT, I recognize that it is done out of a
sense of urgency. These types of changes take a long time to roll out, and
we should start them before it is too late.

This whole debate comes down to: what is more risky, a consensus hard fork
or letting bitcoin exceed its imposed capacity limits? The former could
result in many services not being compatible and even loss of funds. The
latter could result in software failures, instability, and inability to
transact: essentially, what bitcoin is supposed to be good at. Both are
dangerous and could result in a significant loss of public confidence.

Something needs to be done, that's for sure. In the short term, I think we
need to do one of two things:

   1. All miners and wallet developers need to upgrade to support
   first-safe RBF, to allow for double spending one's own transactions when
   they lack sufficient fees to merit confirmations. Wallets also need to
   randomly request transactions from blocks to see what kind of fees are
   being paid to get confirmations, so that fees can be paid dynamically
   instead of with hard-coded values.
   2. We can implement either Gavin's or Jeff Garzik's proposal to change
   the consensus parameters around the block size limit.

So Ben, if really don't think that going with #2 is the right way to go
(even though everyone agrees that we will need to increase the block size
limit eventually anyway, why not now?), then I hope you start to work hard
on implementing #1 so that your wallet software can handle hitting capacity
limits gracefully.

Best,
Stephen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/d7170921/attachment.html>

From jgarzik at bitpay.com  Thu Jun 18 14:56:33 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Thu, 18 Jun 2015 10:56:33 -0400
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <5582DB62.8000700@bitcoins.info>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
	<CANEZrP04SUHShoqUkA3aSs3yEP3GSsZ_3ZOGFXyJfNve5KTPfA@mail.gmail.com>
	<20150618140544.GA7674@amethyst.visucore.com>
	<5582DB62.8000700@bitcoins.info>
Message-ID: <CAJHLa0NuUXbf=-4wRKQH3GMzSttLnGiWJA79dGSgN8zywY8mUA@mail.gmail.com>

On Thu, Jun 18, 2015 at 10:53 AM, Milly Bitcoin <milly at bitcoins.info> wrote:

>  >So I'm *not* the decider for anything that concerns the behavior of
> the global consensus, and I cannot be, as I have explained in the
> previous post.
>
> The person who decides if a pull request is accepted is a decider and
> significantly affects the behavior of the global consensus.  The only
> option for someone who doesn't agree is to hard fork.  There is no way
> around that and you should just accept that fact and move on.
>

Impacts, yes, decider, no.  Multiple ACKs are required from developers who
will not act if the community will disagree with the change.

The users ultimately choose by deciding which software to download, and
that dictates the range of choices available.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/71ad12e5/attachment.html>

From mark at friedenbach.org  Thu Jun 18 15:03:01 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Thu, 18 Jun 2015 08:03:01 -0700
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CANEZrP2iMXeL-5zyE2cvoyNRakhZbQfLXORZ2AhqEATQE-KjAQ@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CANEZrP2iMXeL-5zyE2cvoyNRakhZbQfLXORZ2AhqEATQE-KjAQ@mail.gmail.com>
Message-ID: <CAOG=w-sWimZTJe=4gCvC5R7SAEK+Nvo-hZtM7xC-bBQd0pG3mw@mail.gmail.com>

On Thu, Jun 18, 2015 at 6:31 AM, Mike Hearn <mike at plan99.net> wrote:

> The first issue is how are decisions made in Bitcoin Core? I struggle to
> explain this to others because I don't understand it myself. Is it a vote
> of people with commit access? Is it a 100% agreement of "core developers"
> and if so, who are these people? Is it "whoever reverts the change last"?
> Could I write down in a document a precise description of how decisions are
> made? No, and that's been a fairly frustrating problem for a long time.
>

There is a quote from United States Supreme Court Justice Potter Stewart to
describe his threshold test for obscenity which is relevant here: "I know
it when I see it."

It is hard certainly, and perhaps even impossible to write down a system of
rules that is used to resolve every dispute among core developers. But that
doesn't mean it isn't obvious to all the participants what is going on. If
a contentious change is proposed, and if after sufficient debate there are
still members of the technical community with reasoned, comprehensible
objections who are not merely being obstinate in the views -- a neutral
observer would agree that their concerns have not been met -- then there is
a lack of consensus.

If there was some sort of formal process however, the system wouldn't work.
Rules can be gamed, and if you add rules to a process then that process can
be gamed. Instead we all have a reasonable understanding of what "technical
consensus" is, and we all know it when we see it. Where we do not see it,
we do not proceed.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/1adcf256/attachment.html>

From milly at bitcoins.info  Thu Jun 18 15:13:41 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Thu, 18 Jun 2015 11:13:41 -0400
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CAJHLa0NuUXbf=-4wRKQH3GMzSttLnGiWJA79dGSgN8zywY8mUA@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
	<CANEZrP04SUHShoqUkA3aSs3yEP3GSsZ_3ZOGFXyJfNve5KTPfA@mail.gmail.com>
	<20150618140544.GA7674@amethyst.visucore.com>
	<5582DB62.8000700@bitcoins.info>
	<CAJHLa0NuUXbf=-4wRKQH3GMzSttLnGiWJA79dGSgN8zywY8mUA@mail.gmail.com>
Message-ID: <5582E025.7000704@bitcoins.info>

 >Impacts, yes, decider, no.  Multiple ACKs are required from developers 
who will not act if the community will disagree with the change.

 >The users ultimately choose by deciding which software to download, 
and that dictates the range of choices available.

That is what I mean by a cultish reply.  Just saying the users 
ultimately decide is not an adequate explanation of the situation. You 
are talking hard fork if someone doesn't like it.  If 10% of the users 
don't like there is nothing they can do unless they want to operate an 
altcoin.  You are not going to resolve anything by repeating these types 
of replies that really have no applicability in the real world.  The 
person who approves the pull request (no matter what the process is 
beforehand) is effectively the decider.

Also, as pointed out, there is no real process in place.   Making 
offhand statements that "multiple ACKs are required" without describing 
a real process just sends people down a rat hole like this block size 
debate.  Providing these (non) answers instead of developing a real 
process is why there is so much contention now.

Russ




From jtimon at jtimon.cc  Thu Jun 18 15:23:16 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 18 Jun 2015 17:23:16 +0200
Subject: [Bitcoin-development] questions about bitcoin-XT code fork &
 non-consensus hard-fork
In-Reply-To: <CACq0ZD5TTJ=dvz+o-ex6vUWAnOtMfD=VE7JaZWXYM1Lo2L_9wA@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
	<CANEZrP148U0V7bU-u0tOTk2xWwq5wy-yU-jk805DcU_3cBHtnw@mail.gmail.com>
	<CABaSBawXZDcyR96g4hBNAiFRDpTcUJX+bMXyqGeuY5wVm4k1KQ@mail.gmail.com>
	<CALx=ga7axVzUvpUd5Fvr=UruzUZWhXqJ7ibCEzjrRC-58gSWjw@mail.gmail.com>
	<9834E283-727C-47F7-A3D0-667951727E5F@gmail.com>
	<CACq0ZD5TTJ=dvz+o-ex6vUWAnOtMfD=VE7JaZWXYM1Lo2L_9wA@mail.gmail.com>
Message-ID: <CABm2gDocK9RgTtbcO8WE62=9uaEKMVmRz4QCB-dTD1E2ZymmDQ@mail.gmail.com>

On Tue, Jun 16, 2015 at 2:08 AM, Aaron Voisine <voisine at gmail.com> wrote:
>
> hell even some major changes to the non-consunsus code to make it
adequately handle the situation when blocks fill up


This will have to eventually be done in addition to any other "alternative"
unless the plan is to keep rising the limit until it is removed or
irrelevant.

Maybe this should be the priority? Maybe this is the "alternative" that
some no-block-size-limit proponents (meaning people who think that
centralization is not a concern when deciding the block size limit) claim
nobody was putting forward?

Anyway, it's sad that we're always mixing 2 different topics: hardfork
deployment and blocksize limit. I wish we talked more about the former, I
wish we would have talked about it it long before the block size debate
became "urgent" (or at least before it was being perceived as urgent).
We've had plenty of time to deploy non-emergency hardforks but apparently
no one was interested (say, for fixing miner but known bugs like the
timetravel attack).
In fact, I plan to eventually propose such a fork, I agree with gavin that
"hardforks aren't possible" is not an answer, though finding opposition to
a concrete hardfork in a concrete point in time doesn't mean that
"hardforks aren't possible". I believe I have proposed many more hardforks
than Gavin, all of them rejected and I still hope some of them will
eventually make it into bitcoin main.
When it was clear that wouldn't be the case I'm afraid the only answer is
creating an altcoin (like Mark and I did with Freicoin and "xtcoin" could
become [hopefully not destroying bitcoin main in the process]).

On Tue, Jun 16, 2015 at 2:08 AM, Aaron Voisine <voisine at gmail.com> wrote:

> Wasn't the XT hard fork proposed as a last resort, should the bitcoin-core
> maintainers simply refuse to lift the 1Mb limit? No one wants to go that
> route. An alternate hard-fork proposal like BIP100 that gets consensus, or
> a modified version of gavin's that ups the limit to 8Mb instead of 20Mb, or
> hell even some major changes to the non-consunsus code to make it
> adequately handle the situation when blocks fill up, and allow wallet
> software to continue working with a send-and-forget use pattern, any of
> these would be enough to avoid the need for an XT only hard-fork.
>
> So far BIP100 is the only one that seems to actually be getting any sort
> of momentum toward consensus, and it was proposed... 2 days ago? When the
> XT fork was proposed as a last resort, it was when the opponents were (to
> my understanding) suggesting we just let blocks fill up, and hopefully
> things would just work out on their own.
>
>
>
> Aaron Voisine
> co-founder and CEO
> breadwallet.com
>
> On Mon, Jun 15, 2015 at 3:56 PM, Brian Hoffman <brianchoffman at gmail.com>
> wrote:
>
>> Who is actually planning to move to Bitcoin-XT if this happens?
>>
>> Just Gavin and Mike?
>>
>> [image: image1.JPG]
>>
>> On Jun 15, 2015, at 6:17 PM, Faiz Khan <faizkhan00 at gmail.com> wrote:
>>
>> I'm quite puzzled by the response myself, it doesn't seem to address some
>> of the (more serious) concerns that Adam put out, the most important
>> question that was asked being the one regarding personal ownership of the
>> proposed fork:
>>
>> "How do you plan to deal with security & incident response for the
>> duration you describe where you will have control while you are deploying
>> the unilateral hard-fork and being in sole maintainership control?"
>>
>> I do genuinely hope that whomever (now and future) wishes to fork the
>> protocol reconsider first whether they are truly ready to test/flex their
>> reputation/skills/resources in this way... Intuitively, to me it seems
>> counterproductive, and I don't fully believe it is within a single
>> developer's talents to manage the process start-to-finish (as it is
>> non-trivial to hard-fork successfully, others have rehashed this in other
>> threads)...
>>
>> That being said I think it appropriate if Adam's questions were responded
>> in-line when Mike is feeling up to it. I think that the answers are
>> important for the community to hear when such a drastic change is being
>> espoused.
>>
>> Faiz
>>
>> On Mon, Jun 15, 2015 at 4:56 PM, Bryan Bishop <kanzure at gmail.com> wrote:
>>
>>> On Mon, Jun 15, 2015 at 3:55 PM, Mike Hearn <mike at plan99.net> wrote:
>>>
>>>> Re: anyone who agrees with noted non-programmers Mike&Gavin must be
>>>> non-technical, stupid, uninformed, etc .... OK, go ahead and show them the
>>>> error of their ways. Anyone can write blogs.
>>>>
>>>
>>> I worry that if this is the level of care you take with reading and
>>> (mis)interpreting Adam's messages, that you might not be taking extreme
>>> care with evaluating consensus changes, even while tired or sleeping. I
>>> encourage you to evaluate both messages and source code more carefully,
>>> especially in the world of bitcoin. However, this goes for everyone and not
>>> just you. Specifically, when Adam mentioned your conversations with
>>> non-technical people, he did not mean "Mike has talked with people who have
>>> possibly not made pull requests to Bitcoin Core, so therefore Mike is a
>>> non-programmer". Communication is difficult and I can understand that, but
>>> we really have to be more careful when evaluating each other's messages;
>>> technical miscommunication can be catastrophic in this context. On the
>>> topic of whether you are a programmer, I suspect that ever since you built
>>> CIA.vc we have all known you're a programmer, Mike.
>>>
>>> - Bryan
>>> http://heybryan.org/
>>> 1 512 203 0507
>>>
>>>
>>> ------------------------------------------------------------------------------
>>>
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>> --
>>>
>>> My regards,
>>>
>>> Faiz Khan
>>>
>>>  <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>
>>
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/5df84554/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image1.JPG
Type: image/jpeg
Size: 22107 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/5df84554/attachment.jpe>

From milly at bitcoins.info  Thu Jun 18 15:30:06 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Thu, 18 Jun 2015 11:30:06 -0400
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CAOG=w-sWimZTJe=4gCvC5R7SAEK+Nvo-hZtM7xC-bBQd0pG3mw@mail.gmail.com>
References: <55828737.6000007@riseup.net>	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>	<20150618111407.GA6690@amethyst.visucore.com>	<CANEZrP2iMXeL-5zyE2cvoyNRakhZbQfLXORZ2AhqEATQE-KjAQ@mail.gmail.com>
	<CAOG=w-sWimZTJe=4gCvC5R7SAEK+Nvo-hZtM7xC-bBQd0pG3mw@mail.gmail.com>
Message-ID: <5582E3FE.7010206@bitcoins.info>

On 6/18/2015 11:03 AM, Mark Friedenbach wrote:
> On Thu, Jun 18, 2015 at 6:31 AM, Mike Hearn <mike at plan99.net 
> <mailto:mike at plan99.net>> wrote:
>
>     The first issue is how are decisions made in Bitcoin Core? I
>     struggle to explain this to others because I don't understand it
>     myself. Is it a vote of people with commit access? Is it a 100%
>     agreement of "core developers" and if so, who are these people? Is
>     it "whoever reverts the change last"?  Could I write down in a
>     document a precise description of how decisions are made? No, and
>     that's been a fairly frustrating problem for a long time.
>
>
> There is a quote from United States Supreme Court Justice Potter 
> Stewart to describe his threshold test for obscenity which is relevant 
> here: "I know it when I see it."
>
> It is hard certainly, and perhaps even impossible to write down a 
> system of rules that is used to resolve every dispute among core 
> developers. But that doesn't mean it isn't obvious to all the 
> participants what is going on. If a contentious change is proposed, 
> and if after sufficient debate there are still members of the 
> technical community with reasoned, comprehensible objections who are 
> not merely being obstinate in the views -- a neutral observer would 
> agree that their concerns have not been met -- then there is a lack of 
> consensus.
>
> If there was some sort of formal process however, the system wouldn't 
> work. Rules can be gamed, and if you add rules to a process then that 
> process can be gamed. Instead we all have a reasonable understanding 
> of what "technical consensus" is, and we all know it when we see it. 
> Where we do not see it, we do not proceed.
>

There is always a process.  Right now the process is haphazard, unclear, 
and constantly changing without being written down so people don't 
actually know what it is.  In fact you do not all have a reasonable 
understanding of "technical consensus" because if you did then you could 
write it down ... but you can't.   The current process is being gamed by 
people making tweets, reddit posts, videos, and blog posts.  A more 
formalized process would channel that activity into a a more usable format.

This kind of thing always happens as projects become larger and more 
diverse.  Something that was once a small group turns into a big group 
of diverse stakeholders.  When it gets too big for the informal 
processes then some people get upset and defensive. Happens all the time 
but it is not really a good excuse to keep doing things in an 
inefficient manner.  The old ways just don't scale and if you ever 
worked on massive projects then you know these formal processes work better.

Russ


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/84bd5100/attachment.html>

From laanwj at gmail.com  Thu Jun 18 15:46:42 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Thu, 18 Jun 2015 17:46:42 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <5582E3FE.7010206@bitcoins.info>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CANEZrP2iMXeL-5zyE2cvoyNRakhZbQfLXORZ2AhqEATQE-KjAQ@mail.gmail.com>
	<CAOG=w-sWimZTJe=4gCvC5R7SAEK+Nvo-hZtM7xC-bBQd0pG3mw@mail.gmail.com>
	<5582E3FE.7010206@bitcoins.info>
Message-ID: <20150618154640.GA7840@amethyst.visucore.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512


> This kind of thing always happens as projects become larger and more
> diverse.  Something that was once a small group turns into a big
> group of diverse stakeholders.  When it gets too big for the
> informal processes then some people get upset and defensive. Happens
> all the time but it is not really a good excuse to keep doing things
> in an inefficient manner.  The old ways just don't scale and if you
> ever worked on massive projects then you know these formal processes
> work better.

So then: make a proposal for a better process, post it to this list.

In practice there has been zero interest in improving the BIP process.

E.g. the BIP process was adapted from the Python Enhancement Proposals by Amir Taaki (in 2009 or so?). It hasn't really changed since then, apart from some spelling and grammar corrections. It is not specifically adapted to Bitcoin, and doesn't make a distinction between for example, consensus changes and non-consensus changes.

So that's up to someone to do. You seem to be enthousiastic about it, so go ahead.

Wladimir
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBCgAGBQJVgufFAAoJEHSBCwEjRsmmAmYIAI9ndrMoqEuoaP5t+7W42UuH
sh5qR7hojCCoZZl1N+rQ63UXcPBO/V4NUkUG97S3qpEFDzuoYSbOX2Eh+TRfK+s+
U+BpLhWteSexJ3N9aiFuR0q5jgesAzLZ9wtq1gCPI/Zu5/fgYBP4AVTiQGdXCZtv
m6ZDKCf+aB/fW/59/AiY44NkMDjVQieEVRiT1IPFJULWesOOdtv7UoqIpz0vDa/5
Jplm41j8IpTPioJKSwUi5qzSDrF7O39PC9LMXNRx/0FIuYfwqJpvF0Frc+vtPpjQ
llKE7945uMXz3FLSV0Orx26XPal/MuF5AYOPNk6pJfwYw7q91AUvQxVFepBa9vw=
=dMO9
-----END PGP SIGNATURE-----



From gmaxwell at gmail.com  Thu Jun 18 15:58:31 2015
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Thu, 18 Jun 2015 15:58:31 +0000
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CANEZrP0Y5T2_e=TEeYr1R-Gke15_6dJBN+vgFG5Z34YfY4AKmw@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<20150618114757.GB6690@amethyst.visucore.com>
	<CANEZrP0Y5T2_e=TEeYr1R-Gke15_6dJBN+vgFG5Z34YfY4AKmw@mail.gmail.com>
Message-ID: <CAAS2fgT0aiLtmOKzbSfp0KgUMz-Tcg1gD=tjgSH7iPJ_OJo3Bg@mail.gmail.com>

On Thu, Jun 18, 2015 at 1:36 PM, Mike Hearn <mike at plan99.net> wrote:
>> And allegations that the project is "run like wikipedia" or "an edit war"
>> are verifyably untrue.
>> Check the commit history.
>
> This was a reference to a post by Gregory on Reddit where he said if Gavin
> were to do a pull request for the block size change and then merge it, he
> would revert it. And I fully believe he would do so!

http://www.reddit.com/r/Bitcoin/comments/37pv74/gavin_andresen_moves_ahead_with_push_for_bigger/croxw9o?context=1

This is the only reddit comment I've made using the word revert in
recent memory, so I know you couldn't be referring to another.

>> I was recently in a situation similar to what Gavin is in insofar as a design dispute that could improperly solved by a git push. I'm pretty impressed he hasn't given in and done a midnight push. It's cool to see him back channeling support.
> Such a change would be immediately reverted.

And, I probably should have continued "and resulted with an immediate
revocation of commit rights on the assumption that his account had
been compromised."

There is nothing controversial about that.



From mike at plan99.net  Thu Jun 18 16:05:58 2015
From: mike at plan99.net (Mike Hearn)
Date: Thu, 18 Jun 2015 18:05:58 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <20150618154640.GA7840@amethyst.visucore.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CANEZrP2iMXeL-5zyE2cvoyNRakhZbQfLXORZ2AhqEATQE-KjAQ@mail.gmail.com>
	<CAOG=w-sWimZTJe=4gCvC5R7SAEK+Nvo-hZtM7xC-bBQd0pG3mw@mail.gmail.com>
	<5582E3FE.7010206@bitcoins.info>
	<20150618154640.GA7840@amethyst.visucore.com>
Message-ID: <CANEZrP016FjDZx9cNMbPR5nV0BRVxBCf-GEfD+59JseJcNWjvA@mail.gmail.com>

>
> So then: make a proposal for a better process, post it to this list.
>

Alright. Here is a first cut of my proposal. It can be inserted into an
amended BIP 1 after "What belongs in a successful BIP?". Let me know what
you think.



The following section applies to BIPs that affect the block chain consensus
rules or the peer to peer protocol and thus require changes to Bitcoin
Core.

Once a draft BIP has been submitted to bitcoin-development for
consideration, the Bitcoin Core maintainer will deliver a preliminary
yes/no verdict within three weeks. This verdict may be informed by the
debate that has taken part in the previous three weeks. If more time is
required, the maintainer is required to request an extension from the BIP
author, who may then elect to force an immediate decision (risking a no),
or choosing to allow more time.

The verdict will meet the following criteria:

   - It will address the latest version of the BIP at the time the verdict
   is rendered.

   - In case of a rejection, it will spell out and describe the technical
   rationale for this decision. Opinions held by other people are not
   considered technical rationales: if the maintainer agrees with a technical
   point made during discussion, he must own that opinion for himself.
   Therefore no BIP will be rejected on grounds of controversy, disagreement,
   lack of consensus or otherwise.

   - In case of rejection, the maintainer will provide a clear, specific
   list of actionable steps the BIP author can take next. For example, a list
   of what changes would address the technical objections raised. In case the
   maintainer believes no change could ever make the BIP acceptable, the list
   must consist of instructions for how to create a patch set and, in the case
   of changes to the consensus rules, how to initiate a hard fork.

A BIP, even once rejected, may live on in the BIPS repository, though its
entry in the index may be sorted below others. The BIP author may update
the BIP with a summary of any resulting discussion. As such a summary may
be inherently contentious in case of a dispute, the authors wording of that
summary is final and may not be subject to meta-debate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/d9c01029/attachment.html>

From justusranvier at riseup.net  Thu Jun 18 16:07:44 2015
From: justusranvier at riseup.net (justusranvier at riseup.net)
Date: Thu, 18 Jun 2015 16:07:44 +0000
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CAJHLa0OKXaUD6MnN4N6RGbNwrXx43jBm9MiELQK6BRw1OL3HNA@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
	<CAJHLa0OKXaUD6MnN4N6RGbNwrXx43jBm9MiELQK6BRw1OL3HNA@mail.gmail.com>
Message-ID: <0ede5c200ce70e4d92541dd91749b4ea@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

On 2015-06-18 14:53, Jeff Garzik wrote:
> Consensus changes - worded another way - change Bitcoin's Constitution 
> -
> The Rules that everyone in the system is -forced- to follow, or be 
> ignored
> by the system.

Force is not a helpful or accurate way to describe the situation.

The purpose of Bitcoin to let people trade with each other, and trade 
requires mutual agreement.

If some people choose not to trade under certain terms, they aren't 
"forcing" anybody to do anything. They are simply refraining from 
proposed interactions. Not granting them the right to do this would 
actually be forcing them to engage in interactions against their will.

It's an unavoidable reality that Bitcoin's usefulness is related to the 
size (really: economic output) of the group of people who can be 
convinced that it's in their best interest to agree on a common trade 
protocol.

Conversations that feature untrue claims about someone forcing someone 
else to do something is the opposite of a viable strategy for growing 
the size of that group.

Arguments about who violated what Bitcoin Core internal governance 
procedures are not interesting to most Bitcoin users, who generally 
don't know or care who has commit access to the repository.

Getting angry at Gavin and Mike for providing Bitcoin users with an 
alternative which they can freely choose or reject is not helpful in 
persuading users to stay with Bitcoin Core. Making the case why the 
changes in Bitcoin XT are not beneficial to Bitcoin users could be.

For better or for worse, Bitcoin coin users are going to run the 
software they perceive to be in their best interests.  Nobody can stop 
them from making that choice and any effort directed at that end is 
wasted.

It's more productive to expend effort making sure the current and future 
Bitcoin users are as informed as possible about the long term and short 
term consequences of their choices.

Circling back to the original quote:

On 2015-06-18 14:53, Jeff Garzik wrote:
> Consensus changes - worded another way - change Bitcoin's Constitution 
> -
> The Rules that everyone in the system is -forced- to follow, or be 
> ignored
> by the system.

Bitcoin does not and can not function as a set of rules imposed by some 
people onto other people. Bitcoin is a negotiation about the best way 
for money to function in the future. The only way we get people to use 
Bitcoin is to convince them that the benefits they gain from agreeing to 
its protocol outweigh the downsides they encounter.

I'm confident that this case can be made successfully but a prerequisite 
to a successful negotiation is recognizing that it is, in fact, a 
negotiation, and that the other parties have full agency and the right 
to walk away if mutual agreement is not reached.

My suggestion is to spend less time talking about procedural violations 
and more time convincing Bitcoin users that Bitcoin Core is the best 
client for them to use, especially if the process of convincing them 
involves making improvements which the users are asking for (or making a 
very compelling case about why the users should reconsider).

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCgAGBQJVguyLAAoJECpf2nDq2eYjTPgP/A16QGWSWkh50OhSjHx7hdY5
v0ZqNvfKSm6a94o22yTQF8VZm7NEJJcNY0Vvu1ro95v27Bm37VodGGOXh4ao9gYQ
ETdzX35OLWUua1e9kfEwgo2Uu2l9AdALOLK5IHyLZdtxJQwUhcdeIhaSMzlZqgEk
n+gbAZXV7JdnK+oejh5s8zgfOY3MqhZC3TQBVWHWx0K0CE75rm0j4ZShYL2eKOua
CmWkcEkfeugrnQQv/BB+oe1TAJoHY4bZAr+amYLZMiC8wRcGGeVBOOFykLNd4rSV
DE+iiGHmgi/wrZjy/xT5kflX55GE8NNVjM2MMNOyD+gWbBn5INahya+DkDWupeQB
iy71NQQVnB/5U5Yhm/oVUax+Cjj/7001cf1q2rXPcjE+4ntw5ad9oCuRW3kSUpzq
C0LqEN2lbagrmk/xHSv/GQl+iWulD1mXJl63y3LdXYWno67eVYqzvRK0UB7ZSVww
3P7p8h2yuvtPtAUDyoOPn7Ghyd1U1lJWGsyffRzd2hWhEYs44cfAv6S2QWIBWbm5
j8C2ao7m6j2mirRZem+bGrN8idR/fOUIjnwqQmNIObsviMrvgXlHvORjsBcdHoKO
9Ir8CvqGWftIG5lLCJvjsnP8E3MRToo6pOsD/Ii9223Pn6DxsMvXF+IkZzUJfWDR
W+t/BYV6XtsAUKI+dAly
=3KeB
-----END PGP SIGNATURE-----




From milly at bitcoins.info  Thu Jun 18 16:11:24 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Thu, 18 Jun 2015 12:11:24 -0400
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <20150618154640.GA7840@amethyst.visucore.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CANEZrP2iMXeL-5zyE2cvoyNRakhZbQfLXORZ2AhqEATQE-KjAQ@mail.gmail.com>
	<CAOG=w-sWimZTJe=4gCvC5R7SAEK+Nvo-hZtM7xC-bBQd0pG3mw@mail.gmail.com>
	<5582E3FE.7010206@bitcoins.info>
	<20150618154640.GA7840@amethyst.visucore.com>
Message-ID: <5582EDAC.2070609@bitcoins.info>

You misunderstand what I am saying.  I am not saying I have a specific 
process that should be followed, I am saying that whatever the process 
is then it should be formalized or at least written down.  That way the 
stakeholders have something to work with and keeps people on track.  
Since some people are saying they don't really know what the process is 
the first step would be to describe the current process.  I don't fully 
understand the current process but I can see it is not formalized and 
nobody can even give me a clear description of what it is.  Once you 
have it written down then changes/improvements can be proposed.

The first baby step was already done by the Foundation in developing 
that risk study.   A NIST guide for developing such a document is at 
http://csrc.nist.gov/publications/nistpubs/800-30-rev1/sp800_30_r1.pdf. 
No one person can come up with this and it would take buy in from 
several different people who have expertise in specific technical areas 
as well as experts in coming up with test plans.  I recently suggested 
to the people running the MIT lab that they look into developing a 
program along those lines.  Gavin also recently suggested that list of 
Bitcoin metrics be developed to help resolve the current disputes.  I 
can help develop this process if there is interest.

Russ




On 6/18/2015 11:46 AM, Wladimir J. van der Laan wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA512
>
>
>> This kind of thing always happens as projects become larger and more
>> diverse.  Something that was once a small group turns into a big
>> group of diverse stakeholders.  When it gets too big for the
>> informal processes then some people get upset and defensive. Happens
>> all the time but it is not really a good excuse to keep doing things
>> in an inefficient manner.  The old ways just don't scale and if you
>> ever worked on massive projects then you know these formal processes
>> work better.
> So then: make a proposal for a better process, post it to this list.
>
> In practice there has been zero interest in improving the BIP process.
>
> E.g. the BIP process was adapted from the Python Enhancement Proposals by Amir Taaki (in 2009 or so?). It hasn't really changed since then, apart from some spelling and grammar corrections. It is not specifically adapted to Bitcoin, and doesn't make a distinction between for example, consensus changes and non-consensus changes.
>
> So that's up to someone to do. You seem to be enthousiastic about it, so go ahead.
>
> Wladimir
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1
>
> iQEcBAEBCgAGBQJVgufFAAoJEHSBCwEjRsmmAmYIAI9ndrMoqEuoaP5t+7W42UuH
> sh5qR7hojCCoZZl1N+rQ63UXcPBO/V4NUkUG97S3qpEFDzuoYSbOX2Eh+TRfK+s+
> U+BpLhWteSexJ3N9aiFuR0q5jgesAzLZ9wtq1gCPI/Zu5/fgYBP4AVTiQGdXCZtv
> m6ZDKCf+aB/fW/59/AiY44NkMDjVQieEVRiT1IPFJULWesOOdtv7UoqIpz0vDa/5
> Jplm41j8IpTPioJKSwUi5qzSDrF7O39PC9LMXNRx/0FIuYfwqJpvF0Frc+vtPpjQ
> llKE7945uMXz3FLSV0Orx26XPal/MuF5AYOPNk6pJfwYw7q91AUvQxVFepBa9vw=
> =dMO9
> -----END PGP SIGNATURE-----
>





From laanwj at gmail.com  Thu Jun 18 16:20:58 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Thu, 18 Jun 2015 18:20:58 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CANEZrP016FjDZx9cNMbPR5nV0BRVxBCf-GEfD+59JseJcNWjvA@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CANEZrP2iMXeL-5zyE2cvoyNRakhZbQfLXORZ2AhqEATQE-KjAQ@mail.gmail.com>
	<CAOG=w-sWimZTJe=4gCvC5R7SAEK+Nvo-hZtM7xC-bBQd0pG3mw@mail.gmail.com>
	<5582E3FE.7010206@bitcoins.info>
	<20150618154640.GA7840@amethyst.visucore.com>
	<CANEZrP016FjDZx9cNMbPR5nV0BRVxBCf-GEfD+59JseJcNWjvA@mail.gmail.com>
Message-ID: <20150618162057.GA11901@amethyst.visucore.com>

On Thu, Jun 18, 2015 at 06:05:58PM +0200, Mike Hearn wrote:

> Once a draft BIP has been submitted to bitcoin-development for
> consideration, the Bitcoin Core maintainer will deliver a preliminary
> yes/no verdict within three weeks. This verdict may be informed by the
> debate that has taken part in the previous three weeks. If more time is
> required, the maintainer is required to request an extension from the BIP
> author, who may then elect to force an immediate decision (risking a no),
> or choosing to allow more time.

Again, for the last time: Bitcoin Core maintainer does not decide about protocol or consensus level changes.

This is not a role for me. Find someone else, if you think you need an arbiter. There was an idea about a Bitcoin Standards Body once, but as far as I know that's not actively being worked on.

BTW: for more exposure a proposal is better posted as a new thread, not as a deep reply to an existing topic.

Wladimir




From jgarzik at bitpay.com  Thu Jun 18 16:28:43 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Thu, 18 Jun 2015 09:28:43 -0700
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <0ede5c200ce70e4d92541dd91749b4ea@riseup.net>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
	<CAJHLa0OKXaUD6MnN4N6RGbNwrXx43jBm9MiELQK6BRw1OL3HNA@mail.gmail.com>
	<0ede5c200ce70e4d92541dd91749b4ea@riseup.net>
Message-ID: <CAJHLa0NiDamkrbW2TMoTLqMPhzw0LBboNp1+_atBGDYMa135uw@mail.gmail.com>

On Thu, Jun 18, 2015 at 9:07 AM, <justusranvier at riseup.net> wrote:

> On 2015-06-18 14:53, Jeff Garzik wrote:
>
>> Consensus changes - worded another way - change Bitcoin's Constitution -
>> The Rules that everyone in the system is -forced- to follow, or be ignored
>> by the system.
>>
>
> Bitcoin does not and can not function as a set of rules imposed by some
> people onto other people.


This is an engineering list.  The quote precisely describes how the bitcoin
consensus system functions.

Users' choice is largely binary:  Follow the rules, or bitcoin software
ignores you.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/1e4ba4be/attachment.html>

From justusranvier at riseup.net  Thu Jun 18 17:04:54 2015
From: justusranvier at riseup.net (justusranvier at riseup.net)
Date: Thu, 18 Jun 2015 17:04:54 +0000
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CAJHLa0NiDamkrbW2TMoTLqMPhzw0LBboNp1+_atBGDYMa135uw@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
	<CAJHLa0OKXaUD6MnN4N6RGbNwrXx43jBm9MiELQK6BRw1OL3HNA@mail.gmail.com>
	<0ede5c200ce70e4d92541dd91749b4ea@riseup.net>
	<CAJHLa0NiDamkrbW2TMoTLqMPhzw0LBboNp1+_atBGDYMa135uw@mail.gmail.com>
Message-ID: <e6da277c39b0354cdf24361e20a1fce2@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

On 2015-06-18 16:28, Jeff Garzik wrote:
> This is an engineering list.  The quote precisely describes how the 
> bitcoin
> consensus system functions.
> 
> Users' choice is largely binary:  Follow the rules, or bitcoin software
> ignores you.


Software engineers should understand that they have a binary choice: 
produce the software that your customers want, or the world will ignore 
your software.

There is *no inherent value* to Bitcoin's software rules. The only value 
that is exists is that produced by the individuals who voluntarily 
choose to run the software.

Failing to account for all design requirements is bad engineering. 
Nobody cares about the design features of a bridge to nowhere.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCgAGBQJVgvoDAAoJECpf2nDq2eYj0h4P/0YaTsS963qpb63zvB6WlIPS
2lhCJ9FtAd3II5Et+5c/cisfJ9YI2OnM0y8nQpyB9NEOeueN1L1sLFcayE5aHASd
EgF7F81AhQD2iSIVwQNs2qAzrZNC2/Nx+nBzBDcrgZ6gRiPpQdsNLy2p0OuZdOgX
yG4xl6tKADB2kNi6tVPtZqUC300uQHvggtm+pexYilT0ojEbeVHCoDV40MNDZC2h
1kcdTnGU2SHJJqeZN2vChJCOMfhmK4JwKgoz7JRXe/GHkUUJKriE6Kb7SVczii9e
9qfcosbnR3gjATMoHFYuJX/nsUx52Q1LM9eQgvE8Ml+6Mim5bj2KCJFh7YISxSq9
FhDujfZFCRRQLPJCSkEUePxU/LS7lmoTZXYl3Zz1j9zbq4ncpRHpIFy9QX6iIqK6
Dursnge9ELQwB+H6HoosWRzxOZyo+oiGj17OngJvZYcvzrc2wjHbpZfVqSkmZepU
SfJZ64O7yjjXjITwhOc4XF2drzvhsjTsHH5BIwdbCn82SoCkJIwXraj7sxIundli
LUJBPiAE0csdmsvW/2kkxLsd9JwTw9lJ9Pf8fiqH3itgrkPkO5mf10DPPnay1SNk
Wnm1bAJ05WnKXSo0m0SzaFgZkdfFuhWR4fieSzhLpa+s/HHj18NZvJCmCBR6ic9G
0A+51wwSZnAdMIw7lwIb
=r4Co
-----END PGP SIGNATURE-----




From morcos at gmail.com  Thu Jun 18 17:42:10 2015
From: morcos at gmail.com (Alex Morcos)
Date: Thu, 18 Jun 2015 13:42:10 -0400
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <e6da277c39b0354cdf24361e20a1fce2@riseup.net>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
	<CAJHLa0OKXaUD6MnN4N6RGbNwrXx43jBm9MiELQK6BRw1OL3HNA@mail.gmail.com>
	<0ede5c200ce70e4d92541dd91749b4ea@riseup.net>
	<CAJHLa0NiDamkrbW2TMoTLqMPhzw0LBboNp1+_atBGDYMa135uw@mail.gmail.com>
	<e6da277c39b0354cdf24361e20a1fce2@riseup.net>
Message-ID: <CAPWm=eX5Oc4QXkp3H5thPBPzJ-t7JGzF5pVaP+eSd0=h52ku=A@mail.gmail.com>

Let me take a pass at explaining how I see this.

1) Code changes to Bitcoin Core that don't change consensus:  Wladimir is
the decider but he works under a process that is well understood by
developers on the project in which he takes under reasonable consideration
other technical opinions and prefers to have clear agreement among them.

2) Changes to the consensus rules: As others have said, this isn't anyone's
decision for anyone else.  It's up to each individual user as to what code
they run and what rules they enforce.  So then why is everyone so up in
arms about what Mike and Gavin are proposing if everyone is free to decide
for themselves?  I believe that each individual user should adhere to the
principle that there should be no changes to the consensus rules unless
there is near complete agreement among the entire community, users,
developers, businesses miners etc.  It is not necessary to define complete
agreement exactly because every individual person decides for themselves.
I believe that this is what gives Bitcoin, or really any money, its value
and what makes it work, that we all agree on exactly what it is.  So I
believe that it is misleading and bad for Bitcoin to tell users and
business that you can just choose without concern for everyone else which
code you'll run and we'll see which one wins out.  No.  You should run the
old consensus rules (on any codebase you want) until you believe that
pretty much everyone has consented to a change in the rules.  It is your
choice, but I think a lot of people that have spent time thinking about the
philosophy of consensus systems believe that when the users of the system
have this principle in mind, it's what will make the system work best.

3) Code changes to Core that do change consensus: I think that Wladimir,
all the other committers besides Gavin, and almost all of the other
developers on Core would defer to #2 above and wait for its outcome to be
clear before considering such a code change.

I'm sure my description of point 2 is not the most eloquent or clear, but
maybe someone else can try to elucidate this principle if they've grasped
what I'm trying to say.





On Thu, Jun 18, 2015 at 1:04 PM, <justusranvier at riseup.net> wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA512
>
> On 2015-06-18 16:28, Jeff Garzik wrote:
> > This is an engineering list.  The quote precisely describes how the
> > bitcoin
> > consensus system functions.
> >
> > Users' choice is largely binary:  Follow the rules, or bitcoin software
> > ignores you.
>
>
> Software engineers should understand that they have a binary choice:
> produce the software that your customers want, or the world will ignore
> your software.
>
> There is *no inherent value* to Bitcoin's software rules. The only value
> that is exists is that produced by the individuals who voluntarily
> choose to run the software.
>
> Failing to account for all design requirements is bad engineering.
> Nobody cares about the design features of a bridge to nowhere.
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v2
>
> iQIcBAEBCgAGBQJVgvoDAAoJECpf2nDq2eYj0h4P/0YaTsS963qpb63zvB6WlIPS
> 2lhCJ9FtAd3II5Et+5c/cisfJ9YI2OnM0y8nQpyB9NEOeueN1L1sLFcayE5aHASd
> EgF7F81AhQD2iSIVwQNs2qAzrZNC2/Nx+nBzBDcrgZ6gRiPpQdsNLy2p0OuZdOgX
> yG4xl6tKADB2kNi6tVPtZqUC300uQHvggtm+pexYilT0ojEbeVHCoDV40MNDZC2h
> 1kcdTnGU2SHJJqeZN2vChJCOMfhmK4JwKgoz7JRXe/GHkUUJKriE6Kb7SVczii9e
> 9qfcosbnR3gjATMoHFYuJX/nsUx52Q1LM9eQgvE8Ml+6Mim5bj2KCJFh7YISxSq9
> FhDujfZFCRRQLPJCSkEUePxU/LS7lmoTZXYl3Zz1j9zbq4ncpRHpIFy9QX6iIqK6
> Dursnge9ELQwB+H6HoosWRzxOZyo+oiGj17OngJvZYcvzrc2wjHbpZfVqSkmZepU
> SfJZ64O7yjjXjITwhOc4XF2drzvhsjTsHH5BIwdbCn82SoCkJIwXraj7sxIundli
> LUJBPiAE0csdmsvW/2kkxLsd9JwTw9lJ9Pf8fiqH3itgrkPkO5mf10DPPnay1SNk
> Wnm1bAJ05WnKXSo0m0SzaFgZkdfFuhWR4fieSzhLpa+s/HHj18NZvJCmCBR6ic9G
> 0A+51wwSZnAdMIw7lwIb
> =r4Co
> -----END PGP SIGNATURE-----
>
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/bb6ae32f/attachment.html>

From milly at bitcoins.info  Thu Jun 18 18:01:01 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Thu, 18 Jun 2015 14:01:01 -0400
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CAPWm=eX5Oc4QXkp3H5thPBPzJ-t7JGzF5pVaP+eSd0=h52ku=A@mail.gmail.com>
References: <55828737.6000007@riseup.net>	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>	<20150618111407.GA6690@amethyst.visucore.com>	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>	<CAJHLa0OKXaUD6MnN4N6RGbNwrXx43jBm9MiELQK6BRw1OL3HNA@mail.gmail.com>	<0ede5c200ce70e4d92541dd91749b4ea@riseup.net>	<CAJHLa0NiDamkrbW2TMoTLqMPhzw0LBboNp1+_atBGDYMa135uw@mail.gmail.com>	<e6da277c39b0354cdf24361e20a1fce2@riseup.net>
	<CAPWm=eX5Oc4QXkp3H5thPBPzJ-t7JGzF5pVaP+eSd0=h52ku=A@mail.gmail.com>
Message-ID: <5583075D.8060800@bitcoins.info>

 >2) Changes to the consensus rules: As others have said, this isn't 
anyone's decision for anyone else.  It's up to each individual user as 
to what code they run and what rules they enforce.  So then why is 
everyone so up in arms about what Mike and Gavin are proposing if 
everyone is free to decide for themselves?

Because the notion that people are free to decide for themselves is just 
a rough approximation of the real world situation.  If your software 
does not agree with merchants and exchanges you can't pay your bills and 
if Bitcoin splits the exchange rate could plummet and damage the 
ecosystem.   People are free to decide within the constraints of the 
Bitcoin system.

Russ




From melvincarvalho at gmail.com  Thu Jun 18 18:09:18 2015
From: melvincarvalho at gmail.com (Melvin Carvalho)
Date: Thu, 18 Jun 2015 20:09:18 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
Message-ID: <CAKaEYh+FyDmN0aXNJY18yhiwRPtSVGiZiO+cMS1fRs1VnyTc2A@mail.gmail.com>

On 18 June 2015 at 12:00, Mike Hearn <mike at plan99.net> wrote:

> Dude, calm down. I don't have commit access to Bitcoin Core and Gavin
> already said long ago he wouldn't just commit something, even though he has
> the ability to do so.
>
> So why did I say it? Because it's consistent with what I've always said:
>  you cannot run a codebase like Wikipedia. Maintainers have to take part in
> debates, and then make a decision, and anyone else who was delegated commit
> access for robustness or convenience must then respect that decision. It's
> the only way to keep a project making progress at a reasonable pace.
>
> This is not a radical position. That's how nearly all coding projects
> work. I have been involved with open source for 15 years and the 'single
> maintainer who makes decisions' model is normal, even if in some large
> codebases  subsystems have delegated submaintainers.
>
> This is also how all my own projects are run. Bitcoinj has multiple people
> with commit access. Regardless, if there were to be some design dispute or
> whatever, I wouldn't tolerate the others with commit access starting some
> kind of Wiki-style edit war in the code if they disagreed. Nor would I ever
> expect to get my own way in other people's projects by threatening to
> revert the maintainers changes.
>
> Core is in the weird position where there's no decision making ability at
> all, because anyone who shows up and shouts enough can generate
> 'controversy', then Wladimir sees there is disagreement and won't touch the
> issue in question. So it just runs and runs and *anyone* with commit
> access can then block any change.
>
> I realise some people think this anti-process leads to better decision
> making. I disagree. It leads to no decision making, which is not the same
> thing at all.
>

Bicoin is not like other projects.  There are large financial stakes
involved.  I was at a standards convention once and the head of standards
at a large company joked to me:

"We know there are 6 people in the standards world that we can never buy.
So we just buy everyone else".

You have to luck out in a huge way to get a person like that running your
project.  Linux has done.  Id say bitcoin has been lucky there too.  But
have a look at other projects, have a look at the alts, the *last* thing
you want is a dictator in may cases.

Ultimately bitcoin is a ledger based on consensus.  There are 3 branches,
the miners, the protocol and the market.  They all play a role in
regulating bitcoin and generally on the conservative side (which I think is
a good thing).  Whatever your view on the 20MB change, it's not a
*conservative* approach, which is the approach that has served bitcoin very
well so far.

So bitcoin is not like other open source projects, and that's probably
quite a good thing.


>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/80179ef4/attachment.html>

From gavinandresen at gmail.com  Thu Jun 18 18:23:33 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Thu, 18 Jun 2015 14:23:33 -0400
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CAPWm=eX5Oc4QXkp3H5thPBPzJ-t7JGzF5pVaP+eSd0=h52ku=A@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
	<CAJHLa0OKXaUD6MnN4N6RGbNwrXx43jBm9MiELQK6BRw1OL3HNA@mail.gmail.com>
	<0ede5c200ce70e4d92541dd91749b4ea@riseup.net>
	<CAJHLa0NiDamkrbW2TMoTLqMPhzw0LBboNp1+_atBGDYMa135uw@mail.gmail.com>
	<e6da277c39b0354cdf24361e20a1fce2@riseup.net>
	<CAPWm=eX5Oc4QXkp3H5thPBPzJ-t7JGzF5pVaP+eSd0=h52ku=A@mail.gmail.com>
Message-ID: <CABsx9T1ENeoZ968PDGUgBPdZLmkwRCDtBvZ2BwT0HaFdWxSL3g@mail.gmail.com>

On Thu, Jun 18, 2015 at 1:42 PM, Alex Morcos <morcos at gmail.com> wrote:

> Let me take a pass at explaining how I see this.
>
> 1) Code changes to Bitcoin Core that don't change consensus:  Wladimir is
> the decider but he works under a process that is well understood by
> developers on the project in which he takes under reasonable consideration
> other technical opinions and prefers to have clear agreement among them.
>

Yes.

2) Changes to the consensus rules: As others have said, this isn't anyone's
> decision for anyone else.
>

Yes.


> It's up to each individual user as to what code they run and what rules
> they enforce.  So then why is everyone so up in arms about what Mike and
> Gavin are proposing if everyone is free to decide for themselves?  I
> believe that each individual user should adhere to the principle that there
> should be no changes to the consensus rules unless there is near complete
> agreement among the entire community, users, developers, businesses miners
> etc. It is not necessary to define complete agreement exactly because every
> individual person decides for themselves.  I believe that this is what
> gives Bitcoin, or really any money, its value and what makes it work, that
> we all agree on exactly what it is.  So I believe that it is misleading and
> bad for Bitcoin to tell users and business that you can just choose without
> concern for everyone else which code you'll run and we'll see which one
> wins out.  No.  You should run the old consensus rules (on any codebase you
> want) until you believe that pretty much everyone has consented to a change
> in the rules.  It is your choice, but I think a lot of people that have
> spent time thinking about the philosophy of consensus systems believe that
> when the users of the system have this principle in mind, it's what will
> make the system work best.
>

I don't think I agree with "pretty much everybody", because status-quo bias
is a very powerful thing. Any change that disrupts the way they've been
doing things will generate significant resistance -- there will be 10 or
20% of any population that will take a position of "too busy to think about
this, everything seems to be working great, I don't like change, NO to any
change."

For example, I think some of the resistance for bigger blocks is coming
from contributors who are worried they, personally, won't be able to keep
up with a bigger blockchain. They might not be able to run full nodes from
their home network connections (or might not be able to run a full node AND
stream Game of Thrones), on their old raspberry pi machines.

The criteria for me is "clear super-majority of the people and businesses
who are using Bitcoin the most," and I think that criteria is met.



> 3) Code changes to Core that do change consensus: I think that Wladimir,
> all the other committers besides Gavin, and almost all of the other
> developers on Core would defer to #2 above and wait for its outcome to be
> clear before considering such a code change.
>

Yes, that's the way it has mostly been working. But even before stepping
down as Lead I was starting to wonder if there are ANY successful open
source projects that didn't have either a Benevolent Dictator or some clear
voting process to resolve disputes that cannot be settled with "rough
consensus."


-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/cadd74c6/attachment.html>

From morcos at gmail.com  Thu Jun 18 18:44:14 2015
From: morcos at gmail.com (Alex Morcos)
Date: Thu, 18 Jun 2015 14:44:14 -0400
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CABsx9T1ENeoZ968PDGUgBPdZLmkwRCDtBvZ2BwT0HaFdWxSL3g@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
	<CAJHLa0OKXaUD6MnN4N6RGbNwrXx43jBm9MiELQK6BRw1OL3HNA@mail.gmail.com>
	<0ede5c200ce70e4d92541dd91749b4ea@riseup.net>
	<CAJHLa0NiDamkrbW2TMoTLqMPhzw0LBboNp1+_atBGDYMa135uw@mail.gmail.com>
	<e6da277c39b0354cdf24361e20a1fce2@riseup.net>
	<CAPWm=eX5Oc4QXkp3H5thPBPzJ-t7JGzF5pVaP+eSd0=h52ku=A@mail.gmail.com>
	<CABsx9T1ENeoZ968PDGUgBPdZLmkwRCDtBvZ2BwT0HaFdWxSL3g@mail.gmail.com>
Message-ID: <CAPWm=eVuCJVcw4ZU6x9SxASVLm4cE8_pRLNAZBzak8TqO43HWQ@mail.gmail.com>

Not that I know how to do this, but would you be willing to attempt some
other method of measuring just how much of a "super-majority" we have
before deploying code?  Maybe that information would be helpful for
everyone.  Obviously such a poll couldn't be perfect, but maybe better than
the information we have now.

A) I don't believe we should consider changing the 1 MB limit now
B) I conceptually believe in increasing block size, but would like to
follow a more conservative process and wait to see if a stronger technical
consensus on a plan to do so can develop.
C) I'd like to go along with Gavin and Mike's 8MB proposal (maybe we wait
til this is fully specified, but again not deployed)

Perhaps there can even be 4 polls:
Miners can vote in coinbases
Known corporate entities can announce their vote
Does the Bitcoin Foundation infrastructure still exist to represent some
authenticated (I think) set of individuals
A reddit poll

I don't even know if I think this is a good idea, but just trying to find a
way to move forward where more of us are on the same page.






On Thu, Jun 18, 2015 at 2:23 PM, Gavin Andresen <gavinandresen at gmail.com>
wrote:

> On Thu, Jun 18, 2015 at 1:42 PM, Alex Morcos <morcos at gmail.com> wrote:
>
>> Let me take a pass at explaining how I see this.
>>
>> 1) Code changes to Bitcoin Core that don't change consensus:  Wladimir is
>> the decider but he works under a process that is well understood by
>> developers on the project in which he takes under reasonable consideration
>> other technical opinions and prefers to have clear agreement among them.
>>
>
> Yes.
>
> 2) Changes to the consensus rules: As others have said, this isn't
>> anyone's decision for anyone else.
>>
>
> Yes.
>
>
>> It's up to each individual user as to what code they run and what rules
>> they enforce.  So then why is everyone so up in arms about what Mike and
>> Gavin are proposing if everyone is free to decide for themselves?  I
>> believe that each individual user should adhere to the principle that there
>> should be no changes to the consensus rules unless there is near complete
>> agreement among the entire community, users, developers, businesses miners
>> etc. It is not necessary to define complete agreement exactly because every
>> individual person decides for themselves.  I believe that this is what
>> gives Bitcoin, or really any money, its value and what makes it work, that
>> we all agree on exactly what it is.  So I believe that it is misleading and
>> bad for Bitcoin to tell users and business that you can just choose without
>> concern for everyone else which code you'll run and we'll see which one
>> wins out.  No.  You should run the old consensus rules (on any codebase you
>> want) until you believe that pretty much everyone has consented to a change
>> in the rules.  It is your choice, but I think a lot of people that have
>> spent time thinking about the philosophy of consensus systems believe that
>> when the users of the system have this principle in mind, it's what will
>> make the system work best.
>>
>
> I don't think I agree with "pretty much everybody", because status-quo
> bias is a very powerful thing. Any change that disrupts the way they've
> been doing things will generate significant resistance -- there will be 10
> or 20% of any population that will take a position of "too busy to think
> about this, everything seems to be working great, I don't like change, NO
> to any change."
>
> For example, I think some of the resistance for bigger blocks is coming
> from contributors who are worried they, personally, won't be able to keep
> up with a bigger blockchain. They might not be able to run full nodes from
> their home network connections (or might not be able to run a full node AND
> stream Game of Thrones), on their old raspberry pi machines.
>
> The criteria for me is "clear super-majority of the people and businesses
> who are using Bitcoin the most," and I think that criteria is met.
>
>
>
>> 3) Code changes to Core that do change consensus: I think that Wladimir,
>> all the other committers besides Gavin, and almost all of the other
>> developers on Core would defer to #2 above and wait for its outcome to be
>> clear before considering such a code change.
>>
>
> Yes, that's the way it has mostly been working. But even before stepping
> down as Lead I was starting to wonder if there are ANY successful open
> source projects that didn't have either a Benevolent Dictator or some clear
> voting process to resolve disputes that cannot be settled with "rough
> consensus."
>
>
> --
> --
> Gavin Andresen
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/a6d09f1f/attachment.html>

From jtimon at jtimon.cc  Thu Jun 18 18:49:35 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 18 Jun 2015 20:49:35 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CABsx9T1ENeoZ968PDGUgBPdZLmkwRCDtBvZ2BwT0HaFdWxSL3g@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
	<CAJHLa0OKXaUD6MnN4N6RGbNwrXx43jBm9MiELQK6BRw1OL3HNA@mail.gmail.com>
	<0ede5c200ce70e4d92541dd91749b4ea@riseup.net>
	<CAJHLa0NiDamkrbW2TMoTLqMPhzw0LBboNp1+_atBGDYMa135uw@mail.gmail.com>
	<e6da277c39b0354cdf24361e20a1fce2@riseup.net>
	<CAPWm=eX5Oc4QXkp3H5thPBPzJ-t7JGzF5pVaP+eSd0=h52ku=A@mail.gmail.com>
	<CABsx9T1ENeoZ968PDGUgBPdZLmkwRCDtBvZ2BwT0HaFdWxSL3g@mail.gmail.com>
Message-ID: <CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>

On Thu, Jun 18, 2015 at 8:23 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:
> On Thu, Jun 18, 2015 at 1:42 PM, Alex Morcos <morcos at gmail.com> wrote:
>>
>> Let me take a pass at explaining how I see this.
>>
>> 1) Code changes to Bitcoin Core that don't change consensus:  Wladimir is
>> the decider but he works under a process that is well understood by
>> developers on the project in which he takes under reasonable consideration
>> other technical opinions and prefers to have clear agreement among them.
>
>
> Yes.
>
>> 2) Changes to the consensus rules: As others have said, this isn't
>> anyone's decision for anyone else.
>
>
> Yes.
>
> [...]
>
> I don't think I agree with "pretty much everybody", because status-quo bias
> is a very powerful thing. Any change that disrupts the way they've been
> doing things will generate significant resistance -- there will be 10 or 20%
> of any population that will take a position of "too busy to think about
> this, everything seems to be working great, I don't like change, NO to any
> change."

But according to Alex's explanation (which I think is very good
leaving asides some cases like change of the pow hashing function, for
example) there's no individual that can force or veto a change. It is
the decision of each individual user and their own "pretty much
everybody" may vary. But this "pretty much everybody" is what Mark
referred to with the "I know it when I see it."

> The criteria for me is "clear super-majority of the people and businesses
> who are using Bitcoin the most," and I think that criteria is met.

If you recommend users to apply changes when this criterion is met but
you know there's still many users who don't agree with the change,
then you're acting irresponsibly by promoting a chaotic consensus fork
where coins can be spent in both chains at once.
Well...unless you're promoting it as an altcoin that simply happens to
distribute part of the initial monetary based to bitcoin holders at
block X and whose genesis block is equal to bitcoin's genesis block at
block X. I guess in that case you wouldn't necessarily be
irresponsible.
"Miner's vote" is irrelevant here since it cannot tell you anything
about users adoption (besides miner's adoption of course).

>> 3) Code changes to Core that do change consensus: I think that Wladimir,
>> all the other committers besides Gavin, and almost all of the other
>> developers on Core would defer to #2 above and wait for its outcome to be
>> clear before considering such a code change.
>
>
> Yes, that's the way it has mostly been working. But even before stepping
> down as Lead I was starting to wonder if there are ANY successful open
> source projects that didn't have either a Benevolent Dictator or some clear
> voting process to resolve disputes that cannot be settled with "rough
> consensus."

But this is only relevant for the point 1. Software projects can have
dictators, forks and everything else other free software projects
have. But consensus-based p2p blockchains cannot change their rules in
the same way, otherwise they're centralized.

THERE CANNOT BE A VOTING PROCESS FOR CONSENSUS CHANGES.
If anybody can vote, hod do you prevent the sibyls from outvoting everyone?
If not everybody can vote, how is the voters' list determined without
centralizing the system?
If we had a technical solution to this problem we wouldn't need proof
of work in the first place!!



From bitcoin-list at bluematt.me  Thu Jun 18 19:24:14 2015
From: bitcoin-list at bluematt.me (Matt Corallo)
Date: Thu, 18 Jun 2015 12:24:14 -0700
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
	to Remove Commit Access from Other Developers
In-Reply-To: <CABsx9T1ENeoZ968PDGUgBPdZLmkwRCDtBvZ2BwT0HaFdWxSL3g@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
	<CAJHLa0OKXaUD6MnN4N6RGbNwrXx43jBm9MiELQK6BRw1OL3HNA@mail.gmail.com>
	<0ede5c200ce70e4d92541dd91749b4ea@riseup.net>
	<CAJHLa0NiDamkrbW2TMoTLqMPhzw0LBboNp1+_atBGDYMa135uw@mail.gmail.com>
	<e6da277c39b0354cdf24361e20a1fce2@riseup.net>
	<CAPWm=eX5Oc4QXkp3H5thPBPzJ-t7JGzF5pVaP+eSd0=h52ku=A@mail.gmail.com>
	<CABsx9T1ENeoZ968PDGUgBPdZLmkwRCDtBvZ2BwT0HaFdWxSL3g@mail.gmail.com>
Message-ID: <9BD8D5D8-3A4B-4361-BF4C-25E1019CA428@bluematt.me>

>For example, I think some of the resistance for bigger blocks is coming
>from contributors who are worried they, personally, won't be able to
>keep
>up with a bigger blockchain. They might not be able to run full nodes
>from
>their home network connections (or might not be able to run a full node
>AND
>stream Game of Thrones), on their old raspberry pi machines.

Ive been trying to stay out of these increasingly useless shit-throwing contests, but I wanted to take objection to this... I highly, highly doubt any seriously technical person is making any kind of decision on block size issues based on their own personal network. If you're assuming this is a serious motivating factor for anyone, then I'm not sure you've even been reading your email or listening to the conversations you've had with people over the last year or more.

On June 18, 2015 11:23:33 AM PDT, Gavin Andresen <gavinandresen at gmail.com> wrote:
>On Thu, Jun 18, 2015 at 1:42 PM, Alex Morcos <morcos at gmail.com> wrote:
>
>> Let me take a pass at explaining how I see this.
>>
>> 1) Code changes to Bitcoin Core that don't change consensus: 
>Wladimir is
>> the decider but he works under a process that is well understood by
>> developers on the project in which he takes under reasonable
>consideration
>> other technical opinions and prefers to have clear agreement among
>them.
>>
>
>Yes.
>
>2) Changes to the consensus rules: As others have said, this isn't
>anyone's
>> decision for anyone else.
>>
>
>Yes.
>
>
>> It's up to each individual user as to what code they run and what
>rules
>> they enforce.  So then why is everyone so up in arms about what Mike
>and
>> Gavin are proposing if everyone is free to decide for themselves?  I
>> believe that each individual user should adhere to the principle that
>there
>> should be no changes to the consensus rules unless there is near
>complete
>> agreement among the entire community, users, developers, businesses
>miners
>> etc. It is not necessary to define complete agreement exactly because
>every
>> individual person decides for themselves.  I believe that this is
>what
>> gives Bitcoin, or really any money, its value and what makes it work,
>that
>> we all agree on exactly what it is.  So I believe that it is
>misleading and
>> bad for Bitcoin to tell users and business that you can just choose
>without
>> concern for everyone else which code you'll run and we'll see which
>one
>> wins out.  No.  You should run the old consensus rules (on any
>codebase you
>> want) until you believe that pretty much everyone has consented to a
>change
>> in the rules.  It is your choice, but I think a lot of people that
>have
>> spent time thinking about the philosophy of consensus systems believe
>that
>> when the users of the system have this principle in mind, it's what
>will
>> make the system work best.
>>
>
>I don't think I agree with "pretty much everybody", because status-quo
>bias
>is a very powerful thing. Any change that disrupts the way they've been
>doing things will generate significant resistance -- there will be 10
>or
>20% of any population that will take a position of "too busy to think
>about
>this, everything seems to be working great, I don't like change, NO to
>any
>change."
>
>For example, I think some of the resistance for bigger blocks is coming
>from contributors who are worried they, personally, won't be able to
>keep
>up with a bigger blockchain. They might not be able to run full nodes
>from
>their home network connections (or might not be able to run a full node
>AND
>stream Game of Thrones), on their old raspberry pi machines.
>
>The criteria for me is "clear super-majority of the people and
>businesses
>who are using Bitcoin the most," and I think that criteria is met.
>
>
>
>> 3) Code changes to Core that do change consensus: I think that
>Wladimir,
>> all the other committers besides Gavin, and almost all of the other
>> developers on Core would defer to #2 above and wait for its outcome
>to be
>> clear before considering such a code change.
>>
>
>Yes, that's the way it has mostly been working. But even before
>stepping
>down as Lead I was starting to wonder if there are ANY successful open
>source projects that didn't have either a Benevolent Dictator or some
>clear
>voting process to resolve disputes that cannot be settled with "rough
>consensus."




From gmaxwell at gmail.com  Thu Jun 18 19:32:43 2015
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Thu, 18 Jun 2015 19:32:43 +0000
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <9BD8D5D8-3A4B-4361-BF4C-25E1019CA428@bluematt.me>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
	<20150618111407.GA6690@amethyst.visucore.com>
	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>
	<CAJHLa0OKXaUD6MnN4N6RGbNwrXx43jBm9MiELQK6BRw1OL3HNA@mail.gmail.com>
	<0ede5c200ce70e4d92541dd91749b4ea@riseup.net>
	<CAJHLa0NiDamkrbW2TMoTLqMPhzw0LBboNp1+_atBGDYMa135uw@mail.gmail.com>
	<e6da277c39b0354cdf24361e20a1fce2@riseup.net>
	<CAPWm=eX5Oc4QXkp3H5thPBPzJ-t7JGzF5pVaP+eSd0=h52ku=A@mail.gmail.com>
	<CABsx9T1ENeoZ968PDGUgBPdZLmkwRCDtBvZ2BwT0HaFdWxSL3g@mail.gmail.com>
	<9BD8D5D8-3A4B-4361-BF4C-25E1019CA428@bluematt.me>
Message-ID: <CAAS2fgSaoHic3Qm0KVrrbD0cU6G=qAJXQAKHv+m2zwnrgSfhpg@mail.gmail.com>

On Thu, Jun 18, 2015 at 7:24 PM, Matt Corallo <bitcoin-list at bluematt.me> wrote:
> Ive been trying to stay out of these increasingly useless shit-throwing contests, but I wanted to take objection to this... I highly, highly doubt any seriously technical person is making any kind of decision on block size issues based on their own personal network. If you're assuming this is a serious motivating factor for anyone, then I'm not sure you've even been reading your email or listening to the conversations you've had with people over the last year or more.

It's probably due to me: When I point to trends and broadband
_distribution_ in the US (much less the less developed parts of the
world), I'm being "hypothetical", and when I point to my _own_
connectivity as a concrete example it's "personal". It's no joke that
communication is _hard_ but it's a shared responsibility however, and
no need to assume anyone isn't reading.,



From jrn at jrn.me.uk  Thu Jun 18 19:31:55 2015
From: jrn at jrn.me.uk (Ross Nicoll)
Date: Thu, 18 Jun 2015 20:31:55 +0100
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>
References: <55828737.6000007@riseup.net>	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>	<20150618111407.GA6690@amethyst.visucore.com>	<CAPg+sBj_go==m6-++sA53imYdz4OLH4bkyiuAyEM8YR8CaTd=w@mail.gmail.com>	<CAJHLa0OKXaUD6MnN4N6RGbNwrXx43jBm9MiELQK6BRw1OL3HNA@mail.gmail.com>	<0ede5c200ce70e4d92541dd91749b4ea@riseup.net>	<CAJHLa0NiDamkrbW2TMoTLqMPhzw0LBboNp1+_atBGDYMa135uw@mail.gmail.com>	<e6da277c39b0354cdf24361e20a1fce2@riseup.net>	<CAPWm=eX5Oc4QXkp3H5thPBPzJ-t7JGzF5pVaP+eSd0=h52ku=A@mail.gmail.com>	<CABsx9T1ENeoZ968PDGUgBPdZLmkwRCDtBvZ2BwT0HaFdWxSL3g@mail.gmail.com>
	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>
Message-ID: <55831CAB.2080303@jrn.me.uk>

I've got a few thoughts on this, but they don't really attach well to a 
single message, so starting a fresh message in the same thread. I'm 
going to try being brief.

There's a lot of talk about not forking. Sorry, but they're going to 
happen, planned and unplanned. Even if no intentional forks occur from 
here on, I hope it's obvious that there will be further accidental forks 
(at least unless and until someone prepares a formal proof of a Bitcoin 
wallet). We need to be more comfortable with that, and plan ahead. 
Education is key here, a lot of people don't understand what a fork is, 
how it will affect them, how to recognise a fork or how to recover. I'll 
dig out what materials I've written already and try making them more 
widely available, as a start.

On whether code forks are a solution to disagreements - I'm not quite 
sure what people expect will happen where a group believes there is an 
existential threat to Bitcoin and they cannot get Bitcoin Core updated. 
I may disagree with Mike & Gavin on timescale, but I do believe there's 
a likelihood inaction will kill Bitcoin, and in that context I see the 
rational choice as taking the perceived smaller risk of a fork killing 
Bitcoin. BIP100 appears to be making progress, however, right now I 
think the best option is pursuing it towards something that can be 
agreed on by all. I would also happily go with an 8MB block size even if 
just to buy us (IMHO a lot) more time.

Lastly, there seems to be a number of people who believe inaction 
through apathy is fine. I respect those who form considered opinions and 
tell me why they believe 1MB is fine, but I do ask that people either 
put the effort in to help make decisions, or delegate to someone else. 
Decentralised does not mean there's no decision making, it means we're 
all decision makers, and frankly I think there's effectively negligence 
in that capacity right now. I'd also point out this ongoing discussion 
is a huge time sink to a number of people who could be making much more 
useful contributions, and that again going in circles endlessly 
discussing in the name of decentralisation isn't positive.

I have failed at being brief, apologies.

Ross




From bip at mattwhitlock.name  Thu Jun 18 21:42:51 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Thu, 18 Jun 2015 17:42:51 -0400
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
	to Remove Commit Access from Other Developers
In-Reply-To: <55831CAB.2080303@jrn.me.uk>
References: <55828737.6000007@riseup.net>
	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>
	<55831CAB.2080303@jrn.me.uk>
Message-ID: <1867667.WXWC1C9quc@crushinator>

On Thursday, 18 June 2015, at 8:31 pm, Ross Nicoll wrote:
> I may disagree with Mike & Gavin on timescale, but I do believe there's 
> a likelihood inaction will kill Bitcoin

An honest question: who is proposing inaction? I haven't seen anyone in this whole, agonizing debate arguing that 1MB blocks are adequate. The debate has been about *how* to increase the block-size limit and whether to take action ASAP (at the risk of fracturing Bitcoin) or to delay action for further debate (at the risk of overloading Bitcoin). Even those who are arguing for further debate are not arguing for *inaction*.



From mark at friedenbach.org  Thu Jun 18 21:49:51 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Thu, 18 Jun 2015 14:49:51 -0700
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <1867667.WXWC1C9quc@crushinator>
References: <55828737.6000007@riseup.net>
	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>
	<55831CAB.2080303@jrn.me.uk> <1867667.WXWC1C9quc@crushinator>
Message-ID: <CAOG=w-scXm-46sp2NgR2UUp20R5ujuaAzW-jU_Owh20C4Xc=9A@mail.gmail.com>

Matt, I for one do not think that the block size limit should be raised at
this time. Matt Corallo also started the public conversation over this
issue on the mailing list by stating that he was not in favor of acting now
to raise the block size limit. I find it a reasonable position to take that
even if you feel the block size limit should be raised at some time in the
future, there are reasons why now is not the best time to do it.

On Thu, Jun 18, 2015 at 2:42 PM, Matt Whitlock <bip at mattwhitlock.name>
wrote:

> On Thursday, 18 June 2015, at 8:31 pm, Ross Nicoll wrote:
> > I may disagree with Mike & Gavin on timescale, but I do believe there's
> > a likelihood inaction will kill Bitcoin
>
> An honest question: who is proposing inaction? I haven't seen anyone in
> this whole, agonizing debate arguing that 1MB blocks are adequate. The
> debate has been about *how* to increase the block-size limit and whether to
> take action ASAP (at the risk of fracturing Bitcoin) or to delay action for
> further debate (at the risk of overloading Bitcoin). Even those who are
> arguing for further debate are not arguing for *inaction*.
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/9989f38c/attachment.html>

From jrn at jrn.me.uk  Thu Jun 18 21:55:36 2015
From: jrn at jrn.me.uk (Ross Nicoll)
Date: Thu, 18 Jun 2015 22:55:36 +0100
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <1867667.WXWC1C9quc@crushinator>
References: <55828737.6000007@riseup.net>
	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>
	<55831CAB.2080303@jrn.me.uk> <1867667.WXWC1C9quc@crushinator>
Message-ID: <55833E58.4080106@jrn.me.uk>

There's some actually proposing inaction as an outright decision, but I 
more meant that at times it has felt like we would end up with inaction 
through momentum, combined with adoption rate making any hard fork more 
complex if it continues to be delayed.

On 18/06/2015 22:42, Matt Whitlock wrote:
> On Thursday, 18 June 2015, at 8:31 pm, Ross Nicoll wrote:
>> I may disagree with Mike & Gavin on timescale, but I do believe there's
>> a likelihood inaction will kill Bitcoin
> An honest question: who is proposing inaction? I haven't seen anyone in this whole, agonizing debate arguing that 1MB blocks are adequate. The debate has been about *how* to increase the block-size limit and whether to take action ASAP (at the risk of fracturing Bitcoin) or to delay action for further debate (at the risk of overloading Bitcoin). Even those who are arguing for further debate are not arguing for *inaction*.




From jgarzik at bitpay.com  Thu Jun 18 21:58:06 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Thu, 18 Jun 2015 14:58:06 -0700
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CAOG=w-scXm-46sp2NgR2UUp20R5ujuaAzW-jU_Owh20C4Xc=9A@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>
	<55831CAB.2080303@jrn.me.uk> <1867667.WXWC1C9quc@crushinator>
	<CAOG=w-scXm-46sp2NgR2UUp20R5ujuaAzW-jU_Owh20C4Xc=9A@mail.gmail.com>
Message-ID: <CAJHLa0Mhnma8_ys2ckEA+dLT-EWnqO4j8YKMSaf3Tvv_K14czQ@mail.gmail.com>

Is that a forward-looking position?  It does not seem so.

The whole point is getting out in front of the need, to prevent significant
negative impact to users when blocks are consistently full.

To do that, you need to (a) plan forward, in order to (b) set a hard fork
date in the future.

"We don't see a need today" is therefore useless, because when you do reach
X day when need is apparent, the best solution then becomes an immediate
fork for which the network and markets are not prepared.

Failing to resolve the block size issue soon will simply result in most
businesses assuming relevant Bitcoin Core standards process is failing, and
proceed with the Bitcoin-XT fork.

As I've said on IRC, the "do nothing, for now" position is untenable.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/9e4db165/attachment.html>

From tomh at thinlink.com  Thu Jun 18 22:00:39 2015
From: tomh at thinlink.com (Tom Harding)
Date: Thu, 18 Jun 2015 15:00:39 -0700
Subject: [Bitcoin-development] Mining centralization pressure from
 non-uniform propagation speed
In-Reply-To: <557DBDCC.5040106@student.ethz.ch>
References: <CAPg+sBi5fYHGLv4wtWbWE7jov8CX=q9UX=vhxDVepG6JfX30+g@mail.gmail.com>
	<557DBDCC.5040106@student.ethz.ch>
Message-ID: <55833F87.3090408@thinlink.com>

On 06/12/2015 06:51 PM, Pieter Wuille wrote:
>> However, it does very clearly show the effects of
>> larger blocks on centralization pressure of the system.

On 6/14/2015 10:45 AM, Jonas Nick wrote:
> This means that your scenario is not the result of a cartel but the result of a long-term network partition.
>

Pieter, to Jonas' point, in your scenario the big miners are all part of 
the majority partition, so "centralization pressure" (pressure to merge 
with a big miner) cannot be separated from "pressure to be connected to 
the majority partition".

I ran your simulation with a large (20%) miner in a 20% minority 
partition, and 16 small (5%) miners in a majority 80% partition, well 
connected.  The starting point was your recent update, which had a more 
realistic "slow link" speed of 100 Mbit/s (making all of the effects 
smaller).

To summarize the results across both your run and mine:

** Making small blocks when others are making big ones -> BAD
** As above, and fees are enormous -> VERY BAD

** Being separated by a slow link from majority hash power -> BAD

** Being a small miner with blocksize=20MB -> *NOT BAD*


Configuration:
   * Miner group 0: 20.000000% hashrate, blocksize 20000000.000000
   * Miner group 1: 80.000000% hashrate, blocksize 1000000.000000
   * Expected average block size: 4800000.000000
   * Average fee per block: 0.250000
   * Fee per byte: 0.0000000521
Result:
   * Miner group 0: 20.404704% income (factor 1.020235 with hashrate)
   * Miner group 1: 79.595296% income (factor 0.994941 with hashrate)

Configuration:
   * Miner group 0: 20.000000% hashrate, blocksize 20000000.000000
   * Miner group 1: 80.000000% hashrate, blocksize 20000000.000000
   * Expected average block size: 20000000.000000
   * Average fee per block: 0.250000
   * Fee per byte: 0.0000000125
Result:
   * Miner group 0: 19.864232% income (factor 0.993212 with hashrate)
   * Miner group 1: 80.135768% income (factor 1.001697 with hashrate)

Configuration:
   * Miner group 0: 20.000000% hashrate, blocksize 20000000.000000
   * Miner group 1: 80.000000% hashrate, blocksize 1000000.000000
   * Expected average block size: 4800000.000000
   * Average fee per block: 25.000000
   * Fee per byte: 0.0000052083
Result:
   * Miner group 0: 51.316895% income (factor 2.565845 with hashrate)
   * Miner group 1: 48.683105% income (factor 0.608539 with hashrate)

Configuration:
   * Miner group 0: 20.000000% hashrate, blocksize 20000000.000000
   * Miner group 1: 80.000000% hashrate, blocksize 20000000.000000
   * Expected average block size: 20000000.000000
   * Average fee per block: 25.000000
   * Fee per byte: 0.0000012500
Result:
   * Miner group 0: 19.865943% income (factor 0.993297 with hashrate)
   * Miner group 1: 80.134057% income (factor 1.001676 with hashrate)




From odinn.cyberguerrilla at riseup.net  Thu Jun 18 22:10:42 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Thu, 18 Jun 2015 15:10:42 -0700
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>
Message-ID: <558341E2.4010403@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I maintain that you should apologize to those who traverse this list.
 What you are saying is digging yourself a deeper hole and is not
merely embarrassing but is crossing a threshold in which you have used
words, albeit subtly, to attack a community.

If you refuse to apologize, I get it.  You have not apologized thus
far, and pressing for an apology is unlikely to get an (authentic)
one.  But then, you should voluntarily step back and let others do the
hard work of coming to the consensus that you seem to think is
impossible to accomplish based on how bitcoin is run.

I believe this matter will be resolved, but not with the "help" of
those who make threatening statements (and who are unable to apologize
for having made them).

- -O

On 06/18/2015 03:00 AM, Mike Hearn wrote:
> Dude, calm down. I don't have commit access to Bitcoin Core and
> Gavin already said long ago he wouldn't just commit something, even
> though he has the ability to do so.
> 
> So why did I say it? Because it's consistent with what I've always
> said: you cannot run a codebase like Wikipedia. Maintainers have to
> take part in debates, and then make a decision, and anyone else who
> was delegated commit access for robustness or convenience must then
> respect that decision. It's the only way to keep a project making
> progress at a reasonable pace.
> 
> This is not a radical position. That's how nearly all coding
> projects work. I have been involved with open source for 15 years
> and the 'single maintainer who makes decisions' model is normal,
> even if in some large codebases  subsystems have delegated
> submaintainers.
> 
> This is also how all my own projects are run. Bitcoinj has
> multiple people with commit access. Regardless, if there were to be
> some design dispute or whatever, I wouldn't tolerate the others
> with commit access starting some kind of Wiki-style edit war in the
> code if they disagreed. Nor would I ever expect to get my own way
> in other people's projects by threatening to revert the maintainers
> changes.
> 
> Core is in the weird position where there's no decision making
> ability at all, because anyone who shows up and shouts enough can
> generate 'controversy', then Wladimir sees there is disagreement
> and won't touch the issue in question. So it just runs and runs and
> /anyone/ with commit access can then block any change.
> 
> I realise some people think this anti-process leads to better
> decision making. I disagree. It leads to no decision making, which
> is not the same thing at all.

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVg0HiAAoJEGxwq/inSG8CXOwIAKSGRJPtSx+untgMERwE7lW7
9p0gWz4jvKhyO+RrGPXlofckvp4Fp/7Yxa+TDLcXbzGi6OesX9yIyN7e06LJW4DP
h7V2PwzS49ZyB/krd03HjvWMFnhoGy7zB7M1okq5myIvx+h1htX9TirNbDl7PU9Z
SWyNNw+GXPsIV/xuPu81LP5GrR3gIxwwhhopOq2qcm08AUiuIJ8EA31mT2ZgwMWB
RxrnktFRzMbW2fD7Z7njTz1gjw1duPyGApJ+xpqtcjjS2idPNuw1nESZTCE3+TwG
Dk1AKmYt8TvZzFWyo/0ly7vYFFW27Yh7SC3oeDJBoWkvySuIFrevux7ekfKxPOc=
=wc2m
-----END PGP SIGNATURE-----



From mark at friedenbach.org  Thu Jun 18 22:33:00 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Thu, 18 Jun 2015 15:33:00 -0700
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CAJHLa0Mhnma8_ys2ckEA+dLT-EWnqO4j8YKMSaf3Tvv_K14czQ@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>
	<55831CAB.2080303@jrn.me.uk> <1867667.WXWC1C9quc@crushinator>
	<CAOG=w-scXm-46sp2NgR2UUp20R5ujuaAzW-jU_Owh20C4Xc=9A@mail.gmail.com>
	<CAJHLa0Mhnma8_ys2ckEA+dLT-EWnqO4j8YKMSaf3Tvv_K14czQ@mail.gmail.com>
Message-ID: <CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>

On Thu, Jun 18, 2015 at 2:58 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:

>
> The whole point is getting out in front of the need, to prevent
> significant negative impact to users when blocks are consistently full.
>
> To do that, you need to (a) plan forward, in order to (b) set a hard fork
> date in the future.
>

Or alternatively, fix the reasons why users would have negative experiences
with full blocks, chiefly:

  * Get safe forms of replace-by-fee and child-pays-for-parent finished and
in 0.12.
  * Develop cross-platform libraries for managing micropayment channels,
and get wallet authors to adopt
  * Use fidelity bonds, solvency proofs, and other tricks to minimize the
risk of already deployed off-chain solutions as an interim measure until:
  * Deploy soft-fork changes for truly scalable solutions like Lightning
Network.

Not raising the block size limit does not mean doing nothing to solve the
problem.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/b7699ac6/attachment.html>

From odinn.cyberguerrilla at riseup.net  Thu Jun 18 22:49:43 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Thu, 18 Jun 2015 15:49:43 -0700
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CANEZrP016FjDZx9cNMbPR5nV0BRVxBCf-GEfD+59JseJcNWjvA@mail.gmail.com>
References: <55828737.6000007@riseup.net>	<CANEZrP3M7+BsZKLFZV-0A_fC7NmMGbTDxsx3ywru3dSW78ZskQ@mail.gmail.com>	<20150618111407.GA6690@amethyst.visucore.com>	<CANEZrP2iMXeL-5zyE2cvoyNRakhZbQfLXORZ2AhqEATQE-KjAQ@mail.gmail.com>	<CAOG=w-sWimZTJe=4gCvC5R7SAEK+Nvo-hZtM7xC-bBQd0pG3mw@mail.gmail.com>	<5582E3FE.7010206@bitcoins.info>	<20150618154640.GA7840@amethyst.visucore.com>
	<CANEZrP016FjDZx9cNMbPR5nV0BRVxBCf-GEfD+59JseJcNWjvA@mail.gmail.com>
Message-ID: <55834B07.9000806@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Regarding this proposal from Mike Hearn to remove consensus process
from the BIP, which I think is unsound philosophy.  I will address
this briefly below.

On 06/18/2015 09:05 AM, Mike Hearn wrote:
> So then: make a proposal for a better process, post it to this
> list.
> 
> 
> Alright. Here is a first cut of my proposal. It can be inserted
> into an amended BIP 1 after "What belongs in a successful BIP?".
> Let me know what you think.
> 
> 
> 
> The following section applies to BIPs that affect the block chain 
> consensus rules or the peer to peer protocol and thus require
> changes to Bitcoin Core.
> 
> Once a draft BIP has been submitted to bitcoin-development for 
> consideration, the Bitcoin Core maintainer will deliver a
> preliminary yes/no verdict within three weeks.

For many things, that will simply be too fast. It is better to allow
the primary maintainer to collaborate with other people who normally
work on the code and determine what the schedule will be based on
life, volume of work, and so on.


> This verdict may be informed by the debate that has taken part in
> the previous three weeks. If more time is required, the maintainer
> is required to request an extension from the BIP author, who may
> then elect to force an immediate decision (risking a no), or
> choosing to allow more time.

Again, this three week thing doesn't work.  But assume for a moment
that there is a certain amount of time that is such and so and it is
set by the maintainer.  The notion that the maintainer would be
"required" to request an extension from the BIP author is sheer
lunacy.  There is no need to codify the actions of the project
maintainer such that he/she would be needing to be subject to the
whims of whatever BIP author.  In like manner, a BIP author should not
have to be subject to forever delay of a BIP due to inaction of a
maintainer, but should have an answer regarding whether it can be
assigned a number, published as draft and so forth after a reasonable
time.  To me, a "reasonable time" is something that should be
discussed amongst the maintainer, those who work regularly on code,
and the BIP author.

> 
> The verdict will meet the following criteria:
> 
> * It will address the latest version of the BIP at the time the 
> verdict is rendered.
> 
> * In case of a rejection, it will spell out and describe the
> technical rationale for this decision. Opinions held by other
> people are not considered technical rationales: if the maintainer
> agrees with a technical point made during discussion, he must own
> that opinion for himself. Therefore no BIP will be rejected on
> grounds of controversy, disagreement, lack of consensus or
> otherwise.

No, this is ridiculous, because the notion that "no BIP will be
rejected on grounds of controversy, disagreement, lack of consensus,
or otherwise," is clearly an attempt to do away with consensus models
of business, and it is also not a very logical statement because
controversy and disagreement are a natural part of... coming to what
eventually is an agreement.

> 
> * In case of rejection, the maintainer will provide a clear,
> specific list of actionable steps the BIP author can take next. For
> example, a list of what changes would address the technical
> objections raised.

This above section I agree with.


 In case the maintainer believes no change could ever make
> the BIP acceptable, the list must consist of instructions for how
> to create a patch set and, in the case of changes to the consensus 
> rules, how to initiate a hard fork.

This above section I do not agree with because of the obvious bias in
favor of the hard fork.  Everything here seems to be aligned to push
for hard fork, hard fork, hard fork.  It's like the author can't tear
his mind off it.

> 
> A BIP, even once rejected, may live on in the BIPS repository,
> though its entry in the index may be sorted below others. The BIP
> author may update the BIP with a summary of any resulting
> discussion. As such a summary may be inherently contentious in case
> of a dispute, the authors wording of that summary is final and may
> not be subject to meta-debate.
> 
> 
This doesn't seem right at all.

> 
> 
> ----------------------------------------------------------------------
- --------
>
> 
> 
> 
> _______________________________________________ Bitcoin-development
> mailing list Bitcoin-development at lists.sourceforge.net 
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVg0sHAAoJEGxwq/inSG8CuFcH/0tzRWWyy3wmDegNx463xoaq
EhG/dNqoIvavMlyJrKfKWPK6Mndgo9BtxkYbvOlO40Y51SW4SaisWGzHRg4HyIbJ
0Orp+C0jXhvnrJ7hRwKhrdZQUIRAI19NLVthSb9W6mHnXWJC8ilhlK9Ei9ILRjGl
tM5pZ28SkyJ/b+CnltnYW8t6AvE4zlggC4QsCuUwA2cFoFWjQeESpqjy4kJNv464
yKlsrqoIzs2vNnoLIx1B0aLX9mNTQUwB1yMXtu8IVcAQe/G1LEEnNO56LGf8O0yJ
KcBTSpDAtCxvfkwtr3DS6LtCzXcej974NW068n/92zZIKzsdcZk/o3O5ZxEO7Wg=
=YwvU
-----END PGP SIGNATURE-----



From jgarzik at bitpay.com  Thu Jun 18 22:52:48 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Thu, 18 Jun 2015 15:52:48 -0700
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>
	<55831CAB.2080303@jrn.me.uk> <1867667.WXWC1C9quc@crushinator>
	<CAOG=w-scXm-46sp2NgR2UUp20R5ujuaAzW-jU_Owh20C4Xc=9A@mail.gmail.com>
	<CAJHLa0Mhnma8_ys2ckEA+dLT-EWnqO4j8YKMSaf3Tvv_K14czQ@mail.gmail.com>
	<CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>
Message-ID: <CAJHLa0PG8C3LShqjY_sTiFw5K+j_vA1Bger2d8QnUVe07gTDDA@mail.gmail.com>

On Thu, Jun 18, 2015 at 3:33 PM, Mark Friedenbach <mark at friedenbach.org>
wrote:

> On Thu, Jun 18, 2015 at 2:58 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:
>
>>
>> The whole point is getting out in front of the need, to prevent
>> significant negative impact to users when blocks are consistently full.
>>
>> To do that, you need to (a) plan forward, in order to (b) set a hard fork
>> date in the future.
>>
>
> Or alternatively, fix the reasons why users would have negative
> experiences with full blocks, chiefly:
>
>   * Get safe forms of replace-by-fee and child-pays-for-parent finished
> and in 0.12.
>   * Develop cross-platform libraries for managing micropayment channels,
> and get wallet authors to adopt
>   * Use fidelity bonds, solvency proofs, and other tricks to minimize the
> risk of already deployed off-chain solutions as an interim measure until:
>   * Deploy soft-fork changes for truly scalable solutions like Lightning
> Network.
>
> Not raising the block size limit does not mean doing nothing to solve the
> problem.
>

This is a long, unreasonable list of work.  None of this exists and it
equates to "upgrade all wallets and websites everywhere"  It requires all
exchanges, payment processors, merchants, etc. to  - basically everybody
but miners - to update.

It is a far, far larger amount of work to write, test and deploy than
simply increasing the block size limit.

Think through roll-out of these ambitious suggestions, before suggesting as
an alternative!

Not a realistic alternative except in an alternate universe where (a)
developer work at all companies is cost free, plus (b) we can pause the
business universe while we wait for The Perfect Solution.










-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/6a902283/attachment.html>

From jrn at jrn.me.uk  Thu Jun 18 23:16:46 2015
From: jrn at jrn.me.uk (Ross Nicoll)
Date: Fri, 19 Jun 2015 00:16:46 +0100
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>
References: <55828737.6000007@riseup.net>	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>	<55831CAB.2080303@jrn.me.uk>
	<1867667.WXWC1C9quc@crushinator>	<CAOG=w-scXm-46sp2NgR2UUp20R5ujuaAzW-jU_Owh20C4Xc=9A@mail.gmail.com>	<CAJHLa0Mhnma8_ys2ckEA+dLT-EWnqO4j8YKMSaf3Tvv_K14czQ@mail.gmail.com>
	<CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>
Message-ID: <5583515E.9080304@jrn.me.uk>

I'm struggling to illustrate how incredibly low 7 transactions per 
second is, not just for a payment network, but even just for a clearance 
network (i.e. to balance transactions between institutions and/or 
chains). As an example, the Clearing House Interbank Payments System 
(CHIPS) is a US-only, inter-bank only clearance network, which handled 
about 3.5 transactions per second (average) in 2014 
(https://www.theclearinghouse.org/~/media/tch/pay%20co/chips/reports%20and%20guides/chips%20volume%20through%20may%202015.pdf?la=en).

While it seems likely the US population of 300 million makes more 
transactions individually than many other countries, and therefore we 
can't simply multiply that by 20 to estimate what a global clearance 
network might require, hopefully it's clear that if Bitcoin is to scale 
globally, it needs substantially more transaction throughput even if 
main chain transactions become something for banks and the super rich. I 
don't know how much more, but I can't look at the 8MB reportedly backed 
by a number of mining pools and say it's clearly insufficient, at least.

I should emphasise that I don't think we need to jump straight to 8MB 
(or otherwise), if a scaling protocol can be decided upon that would be 
ideal, but we should be planning ahead while it's still relatively easy 
to make these changes.

Ross

On 18/06/2015 23:33, Mark Friedenbach wrote:
> On Thu, Jun 18, 2015 at 2:58 PM, Jeff Garzik <jgarzik at bitpay.com 
> <mailto:jgarzik at bitpay.com>> wrote:
>
>
>     The whole point is getting out in front of the need, to prevent
>     significant negative impact to users when blocks are consistently
>     full.
>
>     To do that, you need to (a) plan forward, in order to (b) set a
>     hard fork date in the future.
>
>
> Or alternatively, fix the reasons why users would have negative 
> experiences with full blocks, chiefly:
>
>   * Get safe forms of replace-by-fee and child-pays-for-parent 
> finished and in 0.12.
>   * Develop cross-platform libraries for managing micropayment 
> channels, and get wallet authors to adopt
>   * Use fidelity bonds, solvency proofs, and other tricks to minimize 
> the risk of already deployed off-chain solutions as an interim measure 
> until:
>   * Deploy soft-fork changes for truly scalable solutions like 
> Lightning Network.
>
> Not raising the block size limit does not mean doing nothing to solve 
> the problem.
>
>
>
> ------------------------------------------------------------------------------
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/bdee73d5/attachment.html>

From odinn.cyberguerrilla at riseup.net  Thu Jun 18 23:25:57 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Thu, 18 Jun 2015 16:25:57 -0700
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CAJHLa0PG8C3LShqjY_sTiFw5K+j_vA1Bger2d8QnUVe07gTDDA@mail.gmail.com>
References: <55828737.6000007@riseup.net>	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>	<55831CAB.2080303@jrn.me.uk>
	<1867667.WXWC1C9quc@crushinator>	<CAOG=w-scXm-46sp2NgR2UUp20R5ujuaAzW-jU_Owh20C4Xc=9A@mail.gmail.com>	<CAJHLa0Mhnma8_ys2ckEA+dLT-EWnqO4j8YKMSaf3Tvv_K14czQ@mail.gmail.com>	<CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>
	<CAJHLa0PG8C3LShqjY_sTiFw5K+j_vA1Bger2d8QnUVe07gTDDA@mail.gmail.com>
Message-ID: <55835385.60908@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Regarding the bit on "getting out in front of the need, to prevent
significant negative impacts to users" I had suggested the following:

On 06/18/2015 03:52 PM, Jeff Garzik wrote:
> On Thu, Jun 18, 2015 at 3:33 PM, Mark Friedenbach
> <mark at friedenbach.org <mailto:mark at friedenbach.org>> wrote:
> 
> On Thu, Jun 18, 2015 at 2:58 PM, Jeff Garzik <jgarzik at bitpay.com 
> <mailto:jgarzik at bitpay.com>> wrote:
> 
> 
> The whole point is getting out in front of the need, to prevent 
> significant negative impact to users when blocks are consistently
> full.


My thoughts on that:

Possible scope narrowing to one of the following concepts (but please,
someone tell me if this "scope narrowing" is unwise, not timely, or if
there is some other factors that would make it just stupid right now
because other things are in the works or whatever:

~ Jeff Garzik, with respect to his BIP 100 (note Evan Mo, CEO of
Huobi's mining project Digcoin, clarified that the big Chinese mining
pools consider further adjustments to the protocol beyond the
suggested 8 MB block size limit adjustment ? such as the Bitcoin core
developer Jeff Garzik's BIP-100 draft ? to be feasible)
   ~ Adam Back, with a simplified soft-fork one-way peg
   ~ Gavin Andresen, developing an 8 MB block size limit adjustment in
the context of Core (as an example) with one or more of the above
authors rather than focusing on XT. (This is a big assumption but,
roll with it)

All of this assumes that developer(s) are willing to abandon
intentionally contentious proposals such as the "hard fork to XT w/ 20
MB," remain within the context of Core and be reasonable.

Here I am being aware of the fact that "Pushing a hard fork in the
face of such controversy is a folly, a danger to the network, and that
deserves to be said." - Wladimir J. van der Laan
https://github.com/bitcoin/bitcoin.org/pull/894#issuecomment-112113917


> 
> To do that, you need to (a) plan forward, in order to (b) set a 
> hard fork date in the future.
> 
> 
> Or alternatively, fix the reasons why users would have negative 
> experiences with full blocks, chiefly:
> 
> * Get safe forms of replace-by-fee and child-pays-for-parent 
> finished and in 0.12. * Develop cross-platform libraries for
> managing micropayment channels, and get wallet authors to adopt *
> Use fidelity bonds, solvency proofs, and other tricks to minimize
> the risk of already deployed off-chain solutions as an interim
> measure until: * Deploy soft-fork changes for truly scalable
> solutions like Lightning Network.
> 
> Not raising the block size limit does not mean doing nothing to 
> solve the problem.
> 
> 
> This is a long, unreasonable list of work.  None of this exists and
> it equates to "upgrade all wallets and websites everywhere"  It
> requires all exchanges, payment processors, merchants, etc. to  -
> basically everybody but miners - to update.
> 
> It is a far, far larger amount of work to write, test and deploy
> than simply increasing the block size limit.
> 
> Think through roll-out of these ambitious suggestions, before
> suggesting as an alternative!
> 
> Not a realistic alternative except in an alternate universe where
> (a) developer work at all companies is cost free, plus (b) we can
> pause the business universe while we wait for The Perfect
> Solution.
> 
> 
> 


Something else I wanted to point out here in this thread is the
subject of the problem of "developers going off the deep end" which is
what started this thread:

Suppose you have a developer with full commit access who happens to
start threatening to revoking the other developers' commit access on
the repository, or that person doesn't even threaten, one day it just
happens.

What do you have then?  Peter Todd has stated that all one "would
achieve by that sabotage is setting a key-value pair in a centralised
registry."  But is that what we want?

The answer, obviously, is no.

This leads to other questions. What technical mechanisms exist to keep
developers from (in some dubious emotional or psycho state) to just
going off the deep and doing exactly what has been described above, if
they have full commit access?  Is there a process whereby that can't
actually happen unless another developer provides a signature (e.g. a
multisignature type of process)?  What keeps bitcoin safe from "The
Hearn Threat?"

If nothing does, then how would you change that?

And go ahead and tell me if these are dumb questions and I should just
be quiet, but if they are, please do explain why they are such dumb
questions.

> 
> 
> 
> 
> 
> 
> 
> -- Jeff Garzik Bitcoin core developer and open source evangelist 
> BitPay, Inc.      https://bitpay.com/
> 
> 
> ----------------------------------------------------------------------
- --------
>
> 
> 
> 
> _______________________________________________ Bitcoin-development
> mailing list Bitcoin-development at lists.sourceforge.net 
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVg1OFAAoJEGxwq/inSG8COpAIAJrH9Uj9bcKr+UUR7ePV6/Yj
MmNTY2VKAtiQhwHM+Mqk2VvQANs7/uRBdZjzGnw1NRcca/m8Q0yZUHQiP8avCUOE
3MHqGviYjfeJdu1pcf+PO2pAImM5FCFdrfbbiWUt+ZoOKTxZjsLtF4RE+mc13AXJ
dktvy6SFdvQUgEx8pdXEDpmaUSYUr7syFP4sgHZmyMlhvCsXyE/8dC3sZTzEpVnC
xy1dyBmXHPW3W4FfBSblwwWgJWMcIcGJn8OLQKK5pni/iSVL6IMoRI/MLwOJdRr4
lr83g9FR/qxMqAT9UIZtATnePlkkWPU1szvak/tU/49fGioyYOF4b4KPg/bHYSc=
=hBcE
-----END PGP SIGNATURE-----



From ctpacia at gmail.com  Fri Jun 19 00:57:58 2015
From: ctpacia at gmail.com (Chris Pacia)
Date: Thu, 18 Jun 2015 20:57:58 -0400
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>
References: <55828737.6000007@riseup.net>	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>	<55831CAB.2080303@jrn.me.uk>
	<1867667.WXWC1C9quc@crushinator>	<CAOG=w-scXm-46sp2NgR2UUp20R5ujuaAzW-jU_Owh20C4Xc=9A@mail.gmail.com>	<CAJHLa0Mhnma8_ys2ckEA+dLT-EWnqO4j8YKMSaf3Tvv_K14czQ@mail.gmail.com>
	<CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>
Message-ID: <55836916.6040002@gmail.com>

On 06/18/2015 06:33 PM, Mark Friedenbach wrote:
>
>   * Get safe forms of replace-by-fee and child-pays-for-parent
> finished and in 0.12.
>   * Develop cross-platform libraries for managing micropayment
> channels, and get wallet authors to adopt
>   * Use fidelity bonds, solvency proofs, and other tricks to minimize
> the risk of already deployed off-chain solutions as an interim measure
> until:
>   * Deploy soft-fork changes for truly scalable solutions like
> Lightning Network.

One of my biggest concerns is that these solutions (lightning network in
particular) could end up being worse, in terms of decentralization, than
would be a bitcoin network using larger blocks. We don't exactly know
what the economies of scale are for pay hubs and could very well end up
with far fewer hubs than nodes at any conceivable block size.

Of course, it could also turn out to be fantastic, but it seems like an
enormous gamble to basically force everyone in the ecosystem to
collectively spend millions of dollars upgrading to Lightning /and then/
see whether it's actually an improvement in terms of decentralization.

To me, a much more sane approach would be to allow people to voluntarily
opt in to those other solutions after we've had an opportunity to
experiment with them and see how they actually function in practice, but
that can't happen if the network runs out of capacity first.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/68c14c0e/attachment.html>

From yifu at coinapex.com  Fri Jun 19 01:31:00 2015
From: yifu at coinapex.com (Yifu Guo)
Date: Thu, 18 Jun 2015 21:31:00 -0400
Subject: [Bitcoin-development] Mining centralization pressure from
 non-uniform propagation speed
In-Reply-To: <55833F87.3090408@thinlink.com>
References: <CAPg+sBi5fYHGLv4wtWbWE7jov8CX=q9UX=vhxDVepG6JfX30+g@mail.gmail.com>
	<557DBDCC.5040106@student.ethz.ch> <55833F87.3090408@thinlink.com>
Message-ID: <CAHcfU-WQAqz_tEUSho3TVBdaF8qW=uLZ+eVXb4eiGDDZy9w9ZA@mail.gmail.com>

Nice insight Peter,

This further confirms the real problem, which doesn't have much to do with
blocksize but rather the connectivity of nodes in countries with
not-so-friendly internet policies and deceptive connectivity.


On Thu, Jun 18, 2015 at 6:00 PM, Tom Harding <tomh at thinlink.com> wrote:

> On 06/12/2015 06:51 PM, Pieter Wuille wrote:
> >> However, it does very clearly show the effects of
> >> larger blocks on centralization pressure of the system.
>
> On 6/14/2015 10:45 AM, Jonas Nick wrote:
> > This means that your scenario is not the result of a cartel but the
> result of a long-term network partition.
> >
>
> Pieter, to Jonas' point, in your scenario the big miners are all part of
> the majority partition, so "centralization pressure" (pressure to merge
> with a big miner) cannot be separated from "pressure to be connected to
> the majority partition".
>
> I ran your simulation with a large (20%) miner in a 20% minority
> partition, and 16 small (5%) miners in a majority 80% partition, well
> connected.  The starting point was your recent update, which had a more
> realistic "slow link" speed of 100 Mbit/s (making all of the effects
> smaller).
>
> To summarize the results across both your run and mine:
>
> ** Making small blocks when others are making big ones -> BAD
> ** As above, and fees are enormous -> VERY BAD
>
> ** Being separated by a slow link from majority hash power -> BAD
>
> ** Being a small miner with blocksize=20MB -> *NOT BAD*
>
>
> Configuration:
>    * Miner group 0: 20.000000% hashrate, blocksize 20000000.000000
>    * Miner group 1: 80.000000% hashrate, blocksize 1000000.000000
>    * Expected average block size: 4800000.000000
>    * Average fee per block: 0.250000
>    * Fee per byte: 0.0000000521
> Result:
>    * Miner group 0: 20.404704% income (factor 1.020235 with hashrate)
>    * Miner group 1: 79.595296% income (factor 0.994941 with hashrate)
>
> Configuration:
>    * Miner group 0: 20.000000% hashrate, blocksize 20000000.000000
>    * Miner group 1: 80.000000% hashrate, blocksize 20000000.000000
>    * Expected average block size: 20000000.000000
>    * Average fee per block: 0.250000
>    * Fee per byte: 0.0000000125
> Result:
>    * Miner group 0: 19.864232% income (factor 0.993212 with hashrate)
>    * Miner group 1: 80.135768% income (factor 1.001697 with hashrate)
>
> Configuration:
>    * Miner group 0: 20.000000% hashrate, blocksize 20000000.000000
>    * Miner group 1: 80.000000% hashrate, blocksize 1000000.000000
>    * Expected average block size: 4800000.000000
>    * Average fee per block: 25.000000
>    * Fee per byte: 0.0000052083
> Result:
>    * Miner group 0: 51.316895% income (factor 2.565845 with hashrate)
>    * Miner group 1: 48.683105% income (factor 0.608539 with hashrate)
>
> Configuration:
>    * Miner group 0: 20.000000% hashrate, blocksize 20000000.000000
>    * Miner group 1: 80.000000% hashrate, blocksize 20000000.000000
>    * Expected average block size: 20000000.000000
>    * Average fee per block: 25.000000
>    * Fee per byte: 0.0000012500
> Result:
>    * Miner group 0: 19.865943% income (factor 0.993297 with hashrate)
>    * Miner group 1: 80.134057% income (factor 1.001676 with hashrate)
>
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



-- 
*Yifu Guo*
*"Life is an everlasting self-improvement."*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/ef7b5861/attachment.html>

From wtogami at gmail.com  Fri Jun 19 04:57:08 2015
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Thu, 18 Jun 2015 18:57:08 -1000
Subject: [Bitcoin-development] FYI - Mailing List Move Preparations
Message-ID: <CAEz79PqwfOCvZ-JKsx0pvvqR_hTdBo1xp-JN-VrLEb3He5U3Kg@mail.gmail.com>

After discussions in #bitcoin-dev in the past day we decided it would be a
bad idea to link the old and new lists in some way during a transition
period.  We decided we are better off announcing the switchover very soon,
and after that point all posts to the old list will be rejected with a
message telling them where to find the new list.

The proposed switchover will be on Tuesday, June 23rd, 2015.  We will know
an exact scheduled time for the move probably tomorrow.  At the time of the
switchover, the old list will reject all messages, archives will be
exported and imported into the new list server, then the new list will be
opened.

https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
Please subscribe now and feel free to make test posts.  We are testing
configuration options to fix some long standing spam filter-related
issues.  Any posts to the new list prior to the final switchover will be
wiped from the archives.

If you have opinions on this, please join us in Freenode #bitcoin-dev and
talk to warren.

Warren Togami
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/b15b48b3/attachment.html>

From wtogami at gmail.com  Fri Jun 19 05:02:35 2015
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Thu, 18 Jun 2015 19:02:35 -1000
Subject: [Bitcoin-development] FYI - Mailing List Move Preparations
In-Reply-To: <CAEz79PqwfOCvZ-JKsx0pvvqR_hTdBo1xp-JN-VrLEb3He5U3Kg@mail.gmail.com>
References: <CAEz79PqwfOCvZ-JKsx0pvvqR_hTdBo1xp-JN-VrLEb3He5U3Kg@mail.gmail.com>
Message-ID: <CAEz79PpopH2D-JLpkVP_jhX3T87fyrbLn+HphTEmczuMQ-G_ng@mail.gmail.com>

BTW, if you are posting from a less popular mail server your initial post
to the new list may be delayed by 5+ minutes due to greylisting.  If your
sending SMTP server is behaving properly then posts after the first should
go through without delay.

Warren

On Thu, Jun 18, 2015 at 6:57 PM, Warren Togami Jr. <wtogami at gmail.com>
wrote:

> After discussions in #bitcoin-dev in the past day we decided it would be a
> bad idea to link the old and new lists in some way during a transition
> period.  We decided we are better off announcing the switchover very soon,
> and after that point all posts to the old list will be rejected with a
> message telling them where to find the new list.
>
> The proposed switchover will be on Tuesday, June 23rd, 2015.  We will know
> an exact scheduled time for the move probably tomorrow.  At the time of the
> switchover, the old list will reject all messages, archives will be
> exported and imported into the new list server, then the new list will be
> opened.
>
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> Please subscribe now and feel free to make test posts.  We are testing
> configuration options to fix some long standing spam filter-related
> issues.  Any posts to the new list prior to the final switchover will be
> wiped from the archives.
>
> If you have opinions on this, please join us in Freenode #bitcoin-dev and
> talk to warren.
>
> Warren Togami
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/413e1001/attachment.html>

From jgarzik at bitpay.com  Fri Jun 19 05:28:44 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Thu, 18 Jun 2015 22:28:44 -0700
Subject: [Bitcoin-development] FYI - Mailing List Move Preparations
In-Reply-To: <CAEz79PqwfOCvZ-JKsx0pvvqR_hTdBo1xp-JN-VrLEb3He5U3Kg@mail.gmail.com>
References: <CAEz79PqwfOCvZ-JKsx0pvvqR_hTdBo1xp-JN-VrLEb3He5U3Kg@mail.gmail.com>
Message-ID: <CAJHLa0MZDYU=o5CDs4Q2Grpo-Fg4mT5qxBdd1YtoEkjV4nf+yg@mail.gmail.com>

Thanks for setting this up, Warren!


On Thu, Jun 18, 2015 at 9:57 PM, Warren Togami Jr. <wtogami at gmail.com>
wrote:

> After discussions in #bitcoin-dev in the past day we decided it would be a
> bad idea to link the old and new lists in some way during a transition
> period.  We decided we are better off announcing the switchover very soon,
> and after that point all posts to the old list will be rejected with a
> message telling them where to find the new list.
>
> The proposed switchover will be on Tuesday, June 23rd, 2015.  We will know
> an exact scheduled time for the move probably tomorrow.  At the time of the
> switchover, the old list will reject all messages, archives will be
> exported and imported into the new list server, then the new list will be
> opened.
>
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> Please subscribe now and feel free to make test posts.  We are testing
> configuration options to fix some long standing spam filter-related
> issues.  Any posts to the new list prior to the final switchover will be
> wiped from the archives.
>
> If you have opinions on this, please join us in Freenode #bitcoin-dev and
> talk to warren.
>
> Warren Togami
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>


-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/28a6908f/attachment.html>

From elombrozo at gmail.com  Fri Jun 19 05:59:38 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 18 Jun 2015 22:59:38 -0700
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
	to Remove Commit Access from Other Developers
In-Reply-To: <55836916.6040002@gmail.com>
References: <55828737.6000007@riseup.net>
	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>
	<55831CAB.2080303@jrn.me.uk> <1867667.WXWC1C9quc@crushinator>
	<CAOG=w-scXm-46sp2NgR2UUp20R5ujuaAzW-jU_Owh20C4Xc=9A@mail.gmail.com>
	<CAJHLa0Mhnma8_ys2ckEA+dLT-EWnqO4j8YKMSaf3Tvv_K14czQ@mail.gmail.com>
	<CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>
	<55836916.6040002@gmail.com>
Message-ID: <CC9CB30F-EA9A-49F9-AA24-92C588F8A3F3@gmail.com>

I don?t think the issue is between larger blocks on the one hand and things like lightning on the other - these two ideas are quite orthogonal.

Larger blocks aren?t really about addressing basic scalability concerns - for that we?ll clearly need architectural and algorithmic improvements?and will likely need to move to a model where it isn?t necessary for everyone to validate everyone else?s latte purchases. Larger blocks might, at best, keep the current system chugging along temporarily - although I?m not sure that?s necessarily such a great thing?we need to create a fee market sooner or later, and until we do this, block size issues will continue to crop up again and again and economic incentives will continue to be misplaced. It would be nice to have more time to really develop a good infrastructure for this?but without real market pressures, I?m not sure it will happen at all. Necessity is the mother of invention, after all. The question is how to introduce a fee market smoothly and with the overwhelming consensus of the community - and that's where it starts to get tricky.

??

On a separate note, as several others have pointed out in this thread (but I wanted to add my voice to this as well), maintenance of source code repositories is NOT the real issue here. The bitcoin/bitcoin project on github is a reference implementation of the Satoshi protocol?but it is NOT the only implementation?and it wasn?t really meant to be. Anyone is free to fork it, extend it, improve upon it, or create an entirely new network with its own genesis block?a separate cryptoledger.

The real issue regarding XT is NOT the forking of source code nor issues surrounding commit access to repositories. The real issue is the *forking of a cryptoledger*.

Open source repositories are meant to be forked - in fact, it is often encouraged. It is also encouraged that improvements be submitted for review and possibly merged back into the parent repository?although this doesn?t always happen.

However, we currently have no mechanisms in place to support merging of forked cryptoledgers. Software, and most other forms of digital content, generally increases in value with more copies made. However, money is scarce?by design. The entire value of the assets of a decentralized cryptoledger rests on the assumption that nobody can just unilaterally fork it and change the rules. Yes, convincing other people to do things a certain way is HARD?yes, it can be frustratingly slow?I?ve tried to push for many changes to the Bitcoin network?and have only succeeded a very small number of times. And yes, it?s often been quite frustrating. But trying to unilaterally impose a change of consensus rules for an existing cryptoledger sets a horrendous precedent?this isn?t just about things like block size limits, which is a relatively petty issue by comparison.

It would be very nice to have a similar workflow with consensus rule evolution as we do with most other open source projects. You create a fork, demonstrate that your ideas are sound by implementing them and giving others something that works so they can review them, and then merge your contributions back in. However, the way Bitcoin is currently designed, this is unfortunately impossible to do this with consensus rules. Once a fork, always a fork - a.k.a. altcoins. Say what you will about how most altcoins are crap - at least most of them have the decency of starting with a clean ledger.


- Eric Lombrozo


> On Jun 18, 2015, at 5:57 PM, Chris Pacia <ctpacia at gmail.com> wrote:
> 
> On 06/18/2015 06:33 PM, Mark Friedenbach wrote:
>> 
>>   * Get safe forms of replace-by-fee and child-pays-for-parent finished and in 0.12.
>>   * Develop cross-platform libraries for managing micropayment channels, and get wallet authors to adopt
>>   * Use fidelity bonds, solvency proofs, and other tricks to minimize the risk of already deployed off-chain solutions as an interim measure until:
>>   * Deploy soft-fork changes for truly scalable solutions like Lightning Network.
> 
> One of my biggest concerns is that these solutions (lightning network in particular) could end up being worse, in terms of decentralization, than would be a bitcoin network using larger blocks. We don't exactly know what the economies of scale are for pay hubs and could very well end up with far fewer hubs than nodes at any conceivable block size.
> 
> Of course, it could also turn out to be fantastic, but it seems like an enormous gamble to basically force everyone in the ecosystem to collectively spend millions of dollars upgrading to Lightning and then see whether it's actually an improvement in terms of decentralization.
> 
> To me, a much more sane approach would be to allow people to voluntarily opt in to those other solutions after we've had an opportunity to experiment with them and see how they actually function in practice, but that can't happen if the network runs out of capacity first.
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/b98d2d71/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/b98d2d71/attachment.sig>

From adam at cypherspace.org  Fri Jun 19 09:22:35 2015
From: adam at cypherspace.org (Dr Adam Back)
Date: Fri, 19 Jun 2015 11:22:35 +0200
Subject: [Bitcoin-development] improving development model (Re: Concerns
 Regarding Threats by a Developer to Remove Commit Access from Other
 Developers
Message-ID: <CALqxMTGCkTZAs74bXk57L6JWK29Xzbn1ZUkWN_NuBp+EufjEQg@mail.gmail.com>

Nicely put Eric.  Relatedly my initial experience with Bitcoin in
trying to improve bitcoin in fungibility, privacy & decentralisation,
I found some interesting things, like Confidential Transactions (that
Greg Maxwell has now optimised via a new generalisation of the
hash-ring signature construct he invented and with Pieter made part of
the alpha side-chain release) and a few other things.

As I went then to discuss and learn: a) what are the characteristics
needed for inclusion (clearly things need to fit in with how things
work, not demand massive rewrites to accommodate and to not conflict
with existing important design considerations), so that I could make
proposals in a practically deployable way, and then b) the
practicality of getting a proposed change that say people found
clearly useful.  Then I bumped into the realisation that this is
actually really high risk to change, and consensus critical coding
security is very complex and there are some billion $ resting on
getting this rigidly correct under live conditions, so that deployment
must be cautious and incremental and rigorously tested.

So then I focussed instead on question of whether we could improve
bitcoins development model: how could we allow bitcoin to more rapidly
and agilely test beta features or try novel things to see how they
would work (as someone might do in a feature branch of a normal FOSS
project, to code and test a proposal for later addition), but with
criteria we want real bticoins so there is economic incentive as that
is actually part of the bitcoin protocol so you've not validated
something unless you're run it in a real network with money.  I was
hypothesising therefore we need a way to run bitcoin beta network.
There's a thread about this here stretching back to may 2013.

Or similarly to run in parallel kind of subnets with different
trade-offs or features that are not easy to merge or high risk to
apply all at once to bitcoin with the inflight billions in capital and
transactions on it.

Anyway I thought that was a productive line of thinking, and generally
people seemed to agree and problem statement of 2wp: then 1wp
mechanism was proposed and then Greg extracted a concept from his
SNARK witness idea (which encapsulates a snark variant of a 2wp) but
now without snarks, then 2wp a conservative crypto 2wp proposal was
made.  This was dec 2013 I think on wizards channel.  The sidechain
alpha release now makes this a (alpha quality and so testnet coin, and
without DMMS peg) reality.  I could imagine others who have a desire
to try things could elect to do so and copy that patch-set and make
more side-chains.

This is inherently non-coercive because you largely do not directly
change bitcoin by doing this, people elect to use which ever chain
suits them best given their usecase.  If the sidechain is really early
stage it should have test-net coins in it not bitcoins in it, but
still its caveat emptor kind of beta chain, with good testing but
non-trivial to soft-fork on bitcoin but managable refactor a sidechain
to integrate something novel or try some existing feature (like the
segregated witness which robustly addresses malleability for example)

So I dont want to say side-chains are some magical solution to
everything, but its a direction that others may like to consider for
how to test or even run alternative trade-offs bitcoin side-chains in
parallel.  For example it could hypothetically allow 10MB blocks on
one chain and 100kB blocks on the main chain.  People say complexity,
scary.  Sure I am talking longer term, but we have to also make
concrete forward progress to the future or we'll be stuck here talking
about perilously large constant changes in 5 years time!

This approach also avoids the one-size fits all problem.

Extension-blocks are an in-chain sub-net type of thing that has a
security boost by being soft-fork enforced (relative to side-chains
which are looser coupled and so more flexible relative to the simplest
form of extension-blocks)

Adam

On 19 June 2015 at 07:59, Eric Lombrozo <elombrozo at gmail.com> wrote:
> I don?t think the issue is between larger blocks on the one hand and things
> like lightning on the other - these two ideas are quite orthogonal.
>
> Larger blocks aren?t really about addressing basic scalability concerns -
> for that we?ll clearly need architectural and algorithmic improvements?and
> will likely need to move to a model where it isn?t necessary for everyone to
> validate everyone else?s latte purchases. Larger blocks might, at best, keep
> the current system chugging along temporarily - although I?m not sure that?s
> necessarily such a great thing?we need to create a fee market sooner or
> later, and until we do this, block size issues will continue to crop up
> again and again and economic incentives will continue to be misplaced. It
> would be nice to have more time to really develop a good infrastructure for
> this?but without real market pressures, I?m not sure it will happen at all.
> Necessity is the mother of invention, after all. The question is how to
> introduce a fee market smoothly and with the overwhelming consensus of the
> community - and that's where it starts to get tricky.
>
> ??
>
> On a separate note, as several others have pointed out in this thread (but I
> wanted to add my voice to this as well), maintenance of source code
> repositories is NOT the real issue here. The bitcoin/bitcoin project on
> github is a reference implementation of the Satoshi protocol?but it is NOT
> the only implementation?and it wasn?t really meant to be. Anyone is free to
> fork it, extend it, improve upon it, or create an entirely new network with
> its own genesis block?a separate cryptoledger.
>
> The real issue regarding XT is NOT the forking of source code nor issues
> surrounding commit access to repositories. The real issue is the *forking of
> a cryptoledger*.
>
> Open source repositories are meant to be forked - in fact, it is often
> encouraged. It is also encouraged that improvements be submitted for review
> and possibly merged back into the parent repository?although this doesn?t
> always happen.
>
> However, we currently have no mechanisms in place to support merging of
> forked cryptoledgers. Software, and most other forms of digital content,
> generally increases in value with more copies made. However, money is
> scarce?by design. The entire value of the assets of a decentralized
> cryptoledger rests on the assumption that nobody can just unilaterally fork
> it and change the rules. Yes, convincing other people to do things a certain
> way is HARD?yes, it can be frustratingly slow?I?ve tried to push for many
> changes to the Bitcoin network?and have only succeeded a very small number
> of times. And yes, it?s often been quite frustrating. But trying to
> unilaterally impose a change of consensus rules for an existing cryptoledger
> sets a horrendous precedent?this isn?t just about things like block size
> limits, which is a relatively petty issue by comparison.
>
> It would be very nice to have a similar workflow with consensus rule
> evolution as we do with most other open source projects. You create a fork,
> demonstrate that your ideas are sound by implementing them and giving others
> something that works so they can review them, and then merge your
> contributions back in. However, the way Bitcoin is currently designed, this
> is unfortunately impossible to do this with consensus rules. Once a fork,
> always a fork - a.k.a. altcoins. Say what you will about how most altcoins
> are crap - at least most of them have the decency of starting with a clean
> ledger.



From mike at plan99.net  Fri Jun 19 09:37:34 2015
From: mike at plan99.net (Mike Hearn)
Date: Fri, 19 Jun 2015 11:37:34 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>
	<55831CAB.2080303@jrn.me.uk> <1867667.WXWC1C9quc@crushinator>
	<CAOG=w-scXm-46sp2NgR2UUp20R5ujuaAzW-jU_Owh20C4Xc=9A@mail.gmail.com>
	<CAJHLa0Mhnma8_ys2ckEA+dLT-EWnqO4j8YKMSaf3Tvv_K14czQ@mail.gmail.com>
	<CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>
Message-ID: <CANEZrP33GCiZHK1GV2Qt_R_AHK6SEjybGPtmORjqgvQ9MiYVZQ@mail.gmail.com>

>
> Or alternatively, fix the reasons why users would have negative
> experiences with full blocks
>

It's impossible, Mark. *By definition* if Bitcoin does not have sufficient
capacity for everyone's transactions, some users who were using it will be
kicked out to make way for the others. Whether that happens in some kind of
stable organised way or (as with the current code) a fairly chaotic way
doesn't change the fundamental truth: *some users will find their bitcoin
savings have become uneconomic to spend*.

Here's a recent user complaint that provides a preview of coming
attractions:

https://www.reddit.com/r/Bitcoin/comments/39r3bi/breadwallet_asking_me_to_pay_over_10_network_fee/

Hello, I'm just trying to send my small Sarutobi-tips stash (12,159 bits)
> onto a paper wallet. When I try to send it, a window pops up stating
> "insufficient funds for bitcoin network fee, reduce payment amount by 1,389
> bits?" This would be a fee of $0.32 to send my $2.82, leaving me with $2.50.


These sorts of complaints will get more frequent and more extreme in the
coming months. I realise that nobody at Blockstream is  in the position of
running an end user facing service, but many of us are .... and we will be
the ones that face the full anger of ordinary users as Bitcoin hits the
wall.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/94ba867c/attachment.html>

From wtogami at gmail.com  Fri Jun 19 09:51:50 2015
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Thu, 18 Jun 2015 23:51:50 -1000
Subject: [Bitcoin-development] Mailman incompatibility with DKIM ...
Message-ID: <CAEz79PoDn+-aDkqSfPeQFUjYDEDEhSrJ2mFYcbitHBf4oADBSg@mail.gmail.com>

Both you and jgarzik experienced mail getting tossed into gmail's spam
folder thanks to DKIM... I am concerned that DKIM is too fragile and not
very compatible with mailing lists.

We already removed the footer because it was incompatible with DKIM
signing.  Keeping the "[Bitcoin-dev] " prepend tag in subject is compatible
with DKIM header signing only if the poster manually prepends it in their
subject header.

I am already concerned that the lack of the Mailman footer will make it
hard to identify where exactly subscribers need to go to unsubscribe or
look at archives.  Removing the subject tag might make DKIM enforcement
work a lot better, but I can easily see our obtuse subscribers as being
extra confused by this.

Opinions?

Warren

On Thu, Jun 18, 2015 at 11:38 PM, Arthur <arthur at powaaa.com> wrote:

> warren | bad_duck: try manually adding "[Bitcoin-dev] " to the beginning
> of the subject
>
> --
> Arthur
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/3878c132/attachment.html>

From benjamin.l.cordes at gmail.com  Fri Jun 19 09:53:01 2015
From: benjamin.l.cordes at gmail.com (Benjamin)
Date: Fri, 19 Jun 2015 11:53:01 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CANEZrP33GCiZHK1GV2Qt_R_AHK6SEjybGPtmORjqgvQ9MiYVZQ@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>
	<55831CAB.2080303@jrn.me.uk> <1867667.WXWC1C9quc@crushinator>
	<CAOG=w-scXm-46sp2NgR2UUp20R5ujuaAzW-jU_Owh20C4Xc=9A@mail.gmail.com>
	<CAJHLa0Mhnma8_ys2ckEA+dLT-EWnqO4j8YKMSaf3Tvv_K14czQ@mail.gmail.com>
	<CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>
	<CANEZrP33GCiZHK1GV2Qt_R_AHK6SEjybGPtmORjqgvQ9MiYVZQ@mail.gmail.com>
Message-ID: <CAOoPuRa2RRELMN4-1coe3ZDOHuxyp1YyX3t6aW+APhXJM8GpDw@mail.gmail.com>

Yeah, but increasing block-size is not a longterm solution. Necessary
higher fees are a logical consequence of lower subsidies. Bitcoin was
basically free to use at the beginning because miners got paid with
new coins at  the expense of those who already hold coins. Eventually
there needs to be a mechanism which matches supply and demand.

On Fri, Jun 19, 2015 at 11:37 AM, Mike Hearn <mike at plan99.net> wrote:
>> Or alternatively, fix the reasons why users would have negative
>> experiences with full blocks
>
>
> It's impossible, Mark. By definition if Bitcoin does not have sufficient
> capacity for everyone's transactions, some users who were using it will be
> kicked out to make way for the others. Whether that happens in some kind of
> stable organised way or (as with the current code) a fairly chaotic way
> doesn't change the fundamental truth: some users will find their bitcoin
> savings have become uneconomic to spend.
>
> Here's a recent user complaint that provides a preview of coming
> attractions:
>
> https://www.reddit.com/r/Bitcoin/comments/39r3bi/breadwallet_asking_me_to_pay_over_10_network_fee/
>
>> Hello, I'm just trying to send my small Sarutobi-tips stash (12,159 bits)
>> onto a paper wallet. When I try to send it, a window pops up stating
>> "insufficient funds for bitcoin network fee, reduce payment amount by 1,389
>> bits?" This would be a fee of $0.32 to send my $2.82, leaving me with $2.50.
>
>
> These sorts of complaints will get more frequent and more extreme in the
> coming months. I realise that nobody at Blockstream is  in the position of
> running an end user facing service, but many of us are .... and we will be
> the ones that face the full anger of ordinary users as Bitcoin hits the
> wall.
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From mike at plan99.net  Fri Jun 19 09:56:16 2015
From: mike at plan99.net (Mike Hearn)
Date: Fri, 19 Jun 2015 11:56:16 +0200
Subject: [Bitcoin-development] Mailman incompatibility with DKIM ...
In-Reply-To: <CAEz79PoDn+-aDkqSfPeQFUjYDEDEhSrJ2mFYcbitHBf4oADBSg@mail.gmail.com>
References: <CAEz79PoDn+-aDkqSfPeQFUjYDEDEhSrJ2mFYcbitHBf4oADBSg@mail.gmail.com>
Message-ID: <CANEZrP3vut8uYWeeynLdwvSM56eXZZdgidaEgcvg1FNMye6P9w@mail.gmail.com>

>
> We already removed the footer because it was incompatible with DKIM
> signing.  Keeping the "[Bitcoin-dev] " prepend tag in subject is compatible
> with DKIM header signing only if the poster manually prepends it in their
> subject header.
>

I still see footers being added to this list by SourceForge?


> Opinions?
>

I've asked Jeff to not use his @bitpay.com account for now.

The only real fix is to use a mailing list operator that is designed to
operate correctly with DKIM/DMARC, either by not modifying messages in
transit, or by re-sending (and ideally re-signing) under their own identity.

Though I'm sure this won't be an issue for the Linux Foundation, the latter
approach is dangerous because it means the list operator takes full
responsibility for any spamming that occurs from that domain. If the mail
server is ever hacked or spammers start posting to the lists themselves,
all that spam will be seen as originating from the listserv itself and the
reputation will be degraded. It can end with everyone's mail going to the
spam folder.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/14c0cfe4/attachment.html>

From slashdevnull at hotmail.com  Fri Jun 19 10:08:19 2015
From: slashdevnull at hotmail.com (GC)
Date: Fri, 19 Jun 2015 17:08:19 +0700
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CAOoPuRa2RRELMN4-1coe3ZDOHuxyp1YyX3t6aW+APhXJM8GpDw@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>
	<55831CAB.2080303@jrn.me.uk> <1867667.WXWC1C9quc@crushinator>
	<CAOG=w-scXm-46sp2NgR2UUp20R5ujuaAzW-jU_Owh20C4Xc=9A@mail.gmail.com>
	<CAJHLa0Mhnma8_ys2ckEA+dLT-EWnqO4j8YKMSaf3Tvv_K14czQ@mail.gmail.com>
	<CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>
	<CANEZrP33GCiZHK1GV2Qt_R_AHK6SEjybGPtmORjqgvQ9MiYVZQ@mail.gmail.com>
	<CAOoPuRa2RRELMN4-1coe3ZDOHuxyp1YyX3t6aW+APhXJM8GpDw@mail.gmail.com>
Message-ID: <BLU436-SMTP59149F6EB242230C2DA453C6A40@phx.gbl>

Benjamin,

Timeframe for network congestion and users experiencing service
degradation => between now and middle of next year.

Timeframe for transaction fees topping block reward fees => many years in
the future, based on current ratio of block reward to fees.

What is the more pressing requirement now? A working ?fee market? or a
reliable, useful payment network that scales without falling over in the
next 2-3 years.

On 19/6/15 4:53 pm, "Benjamin" <benjamin.l.cordes at gmail.com> wrote:

>Yeah, but increasing block-size is not a longterm solution. Necessary
>higher fees are a logical consequence of lower subsidies. Bitcoin was
>basically free to use at the beginning because miners got paid with
>new coins at  the expense of those who already hold coins. Eventually
>there needs to be a mechanism which matches supply and demand.
>
>On Fri, Jun 19, 2015 at 11:37 AM, Mike Hearn <mike at plan99.net> wrote:
>>> Or alternatively, fix the reasons why users would have negative
>>> experiences with full blocks
>>
>>
>> It's impossible, Mark. By definition if Bitcoin does not have sufficient
>> capacity for everyone's transactions, some users who were using it will
>>be
>> kicked out to make way for the others. Whether that happens in some
>>kind of
>> stable organised way or (as with the current code) a fairly chaotic way
>> doesn't change the fundamental truth: some users will find their bitcoin
>> savings have become uneconomic to spend.
>>
>> Here's a recent user complaint that provides a preview of coming
>> attractions:
>>
>> 
>>https://www.reddit.com/r/Bitcoin/comments/39r3bi/breadwallet_asking_me_to
>>_pay_over_10_network_fee/
>>
>>> Hello, I'm just trying to send my small Sarutobi-tips stash (12,159
>>>bits)
>>> onto a paper wallet. When I try to send it, a window pops up stating
>>> "insufficient funds for bitcoin network fee, reduce payment amount by
>>>1,389
>>> bits?" This would be a fee of $0.32 to send my $2.82, leaving me with
>>>$2.50.
>>
>>
>> These sorts of complaints will get more frequent and more extreme in the
>> coming months. I realise that nobody at Blockstream is  in the position
>>of
>> running an end user facing service, but many of us are .... and we will
>>be
>> the ones that face the full anger of ordinary users as Bitcoin hits the
>> wall.
>>
>> 
>>-------------------------------------------------------------------------
>>-----
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>--------------------------------------------------------------------------
>----
>_______________________________________________
>Bitcoin-development mailing list
>Bitcoin-development at lists.sourceforge.net
>https://lists.sourceforge.net/lists/listinfo/bitcoin-development





From wtogami at gmail.com  Fri Jun 19 10:10:25 2015
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Fri, 19 Jun 2015 00:10:25 -1000
Subject: [Bitcoin-development] Mailman incompatibility with DKIM ...
In-Reply-To: <CANEZrP3vut8uYWeeynLdwvSM56eXZZdgidaEgcvg1FNMye6P9w@mail.gmail.com>
References: <CAEz79PoDn+-aDkqSfPeQFUjYDEDEhSrJ2mFYcbitHBf4oADBSg@mail.gmail.com>
	<CANEZrP3vut8uYWeeynLdwvSM56eXZZdgidaEgcvg1FNMye6P9w@mail.gmail.com>
Message-ID: <CAEz79Pr4ug8zyJ5bibCG3m0YD8gkBiXysWJsZDThTiwXsgd7YQ@mail.gmail.com>

On Thu, Jun 18, 2015 at 11:56 PM, Mike Hearn <mike at plan99.net> wrote:

> We already removed the footer because it was incompatible with DKIM
>> signing.  Keeping the "[Bitcoin-dev] " prepend tag in subject is compatible
>> with DKIM header signing only if the poster manually prepends it in their
>> subject header.
>>
>
> I still see footers being added to this list by SourceForge?
>

The new list currently has footers removed during testing.  I am not
pleased with the need to remove the subject tag and footer to be more
compatible with DKIM users.


>
>
>> Opinions?
>>
>
> I've asked Jeff to not use his @bitpay.com account for now.
>
>
I'm guessing DKIM enforcement is not very common because of issues like
this?

It seems that Sourceforge silently drops DKIM enforced mail like
jgarzik's.  LF seems to pass along their mail but mangles the header/body
and makes DKIM verification fail, which causes gmail to toss it into the
spam folder.  I think this behavior is slightly worse than Sourceforge
because it makes the poster think their message was successfully sent (it
is in the archive), but many subscribers never see it due to the spam
binning.

I don't see any good solution to this except an auto-reject for DKIM
enforced domain postings.  Yes this is rather terrible, but the instant
rejection is vastly better than Sourceforge silently dropping the post or
LF getting stuck in spam filters.

We should also auto-reject any other reason for mail getting stuck in the
moderation queue like including non-subscribers.  I considered
auto-rejecting spam too, but that could go horribly wrong as a false From
address could make the Mailman server into a spammer itself.  We may have
no choice but to silently drop spam for that reason.

Warren
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/f9fad649/attachment.html>

From mike at plan99.net  Fri Jun 19 10:19:17 2015
From: mike at plan99.net (Mike Hearn)
Date: Fri, 19 Jun 2015 12:19:17 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CAOoPuRa2RRELMN4-1coe3ZDOHuxyp1YyX3t6aW+APhXJM8GpDw@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>
	<55831CAB.2080303@jrn.me.uk> <1867667.WXWC1C9quc@crushinator>
	<CAOG=w-scXm-46sp2NgR2UUp20R5ujuaAzW-jU_Owh20C4Xc=9A@mail.gmail.com>
	<CAJHLa0Mhnma8_ys2ckEA+dLT-EWnqO4j8YKMSaf3Tvv_K14czQ@mail.gmail.com>
	<CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>
	<CANEZrP33GCiZHK1GV2Qt_R_AHK6SEjybGPtmORjqgvQ9MiYVZQ@mail.gmail.com>
	<CAOoPuRa2RRELMN4-1coe3ZDOHuxyp1YyX3t6aW+APhXJM8GpDw@mail.gmail.com>
Message-ID: <CANEZrP0EHb_Nc+oYp4zTGPG9Cbjo5OcF59ZpS80iZQozqRhaxA@mail.gmail.com>

>
> Yeah, but increasing block-size is not a longterm solution.


Are you sure? That sort of statement is hard to answer because it doesn't
say what you think long term is, or how much you expect Bitcoin to grow.

Satoshi thought it was a perfectly fine long term solution because he
thought hardware would get cheaper as fast or faster than Bitcoin would
grow. You may disagree with him, but as we're talking about the future are
you 100% certain he was wrong? I did calculations a long time ago that
suggested even with today's hardware (+some software optimisations) it
would be feasible to keep up with Visa.

Hardware improvements can be unintuitive. There's a spreadsheet here that
lets you play with various parameters.

https://docs.google.com/spreadsheets/d/1PJvrAAOVYVszfRRLhKqd1R9lRiOAImzAfdeb6ajATEY/edit#gid=1451669128

(note: the spreadsheet says avg txn size is 250 bytes, but if you check the
formula for the middle column, it does actually use 500 bytes as the
multiplier hard coded).


> Necessary higher fees are a logical consequence of lower subsidies.
> Bitcoin was basically free to use at the beginning because miners got paid
> with new coins at  the expense of those who already hold coins.
> Eventually there needs to be a mechanism which matches supply and demand.
>

That's not clear either, I'm afraid.

Remember that there's an upper limit on how high Bitcoin fees can go. When
fees become higher than what the banking system charges, many users won't
use Bitcoin for moving money around anymore. Fees cannot really go much
higher than that even if you assume the currency is still attractive for
other reasons, because people would just sell their coins for fiat, move
the fiat, and buy back the coins the other side.

The way mining will be funded in future is an open question. There are
differing proposals. Still, even with a higher hard block size limit,
miners can always refuse to mine transactions that don't include a
particular fee. So if you're worried about this, miners aren't being forced
into any particular policy.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/e6f72ab6/attachment.html>

From mike at plan99.net  Fri Jun 19 10:24:01 2015
From: mike at plan99.net (Mike Hearn)
Date: Fri, 19 Jun 2015 12:24:01 +0200
Subject: [Bitcoin-development] Mailman incompatibility with DKIM ...
In-Reply-To: <CAEz79Pr4ug8zyJ5bibCG3m0YD8gkBiXysWJsZDThTiwXsgd7YQ@mail.gmail.com>
References: <CAEz79PoDn+-aDkqSfPeQFUjYDEDEhSrJ2mFYcbitHBf4oADBSg@mail.gmail.com>
	<CANEZrP3vut8uYWeeynLdwvSM56eXZZdgidaEgcvg1FNMye6P9w@mail.gmail.com>
	<CAEz79Pr4ug8zyJ5bibCG3m0YD8gkBiXysWJsZDThTiwXsgd7YQ@mail.gmail.com>
Message-ID: <CANEZrP1T3r=VDRBTM_jrm_g0BkQy_NZA40BPcZtVDq_0au6TKw@mail.gmail.com>

>
> The new list currently has footers removed during testing.  I am not
> pleased with the need to remove the subject tag and footer to be more
> compatible with DKIM users.
>

Lists can do what are effectively MITM attacks on people's messages in any
way they like, if they resign for the messages themselves. That seems fair
to me!  :)


>  I'm guessing DKIM enforcement is not very common because of issues like
> this?
>

DKIM is used by most mail on the internet. DMARC rules that publish in DNS
statements like "All mail from bitpay.com is signed correctly so trash any
that isn't" are used on some of the worlds most heavily phished domains
like google.com, PayPal, eBay, and indeed BitPay.

These rules are understood and enforced by all major webmail providers
including Gmail. It's actually only rusty geek infrastructure that has
problems with this, I've never heard of DKIM/DMARC users having issues
outside of dealing with mailman. The vast majority of email users who never
post to technical mailing lists benefit from it significantly.

Really everyone should use them. Adding cryptographic integrity to email is
hardly a crazy idea :)


> It seems that Sourceforge silently drops DKIM enforced mail like jgarzik's.
>

It's not SourceForge, it's your spam filter. His mail gets through to me
but it's all in the spam folder.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/3aababa5/attachment.html>

From wtogami at gmail.com  Fri Jun 19 10:38:30 2015
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Fri, 19 Jun 2015 00:38:30 -1000
Subject: [Bitcoin-development] Mailman incompatibility with DKIM ...
In-Reply-To: <CANEZrP1T3r=VDRBTM_jrm_g0BkQy_NZA40BPcZtVDq_0au6TKw@mail.gmail.com>
References: <CAEz79PoDn+-aDkqSfPeQFUjYDEDEhSrJ2mFYcbitHBf4oADBSg@mail.gmail.com>
	<CANEZrP3vut8uYWeeynLdwvSM56eXZZdgidaEgcvg1FNMye6P9w@mail.gmail.com>
	<CAEz79Pr4ug8zyJ5bibCG3m0YD8gkBiXysWJsZDThTiwXsgd7YQ@mail.gmail.com>
	<CANEZrP1T3r=VDRBTM_jrm_g0BkQy_NZA40BPcZtVDq_0au6TKw@mail.gmail.com>
Message-ID: <CAEz79PriNzD18Es60=2Nkz5U6G=Ocrm9ezJmK0P1DirdP-vPkw@mail.gmail.com>

On Fri, Jun 19, 2015 at 12:24 AM, Mike Hearn <mike at plan99.net> wrote:

> The new list currently has footers removed during testing.  I am not
>> pleased with the need to remove the subject tag and footer to be more
>> compatible with DKIM users.
>>
>
> Lists can do what are effectively MITM attacks on people's messages in any
> way they like, if they resign for the messages themselves. That seems fair
> to me!  :)
>

Mailman isn't resigning it.  Should it be?  Does other mailing list
software?


>
>
>>  I'm guessing DKIM enforcement is not very common because of issues like
>> this?
>>
>
> DKIM is used by most mail on the internet. DMARC rules that publish in DNS
> statements like "All mail from bitpay.com is signed correctly so trash
> any that isn't" are used on some of the worlds most heavily phished domains
> like google.com, PayPal, eBay, and indeed BitPay.
>
> These rules are understood and enforced by all major webmail providers
> including Gmail. It's actually only rusty geek infrastructure that has
> problems with this, I've never heard of DKIM/DMARC users having issues
> outside of dealing with mailman. The vast majority of email users who never
> post to technical mailing lists benefit from it significantly.
>
> Really everyone should use them. Adding cryptographic integrity to email
> is hardly a crazy idea :)
>

I understand the reason to protect the "heavily phished" domains.  I heard
that LKML does not modify the subject or add a footer, perhaps because it
would make it incompatible with DKIM of the several big corporate domains
who participate.

I suppose it is somewhat acceptable for us to remove subject tags and
footers if we have no choice...

Warren
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/bce0b675/attachment.html>

From pete at petertodd.org  Fri Jun 19 10:39:59 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 19 Jun 2015 06:39:59 -0400
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
Message-ID: <20150619103959.GA32315@savin.petertodd.org>

Yesterday F2Pool, currently the largest pool with 21% of the hashing
power, enabled full replace-by-fee (RBF) support after discussions with
me. This means that transactions that F2Pool has will be replaced if a
conflicting transaction pays a higher fee. There are no requirements for
the replacement transaction to pay addresses that were paid by the
previous transaction.


I'm a user. What does this mean for me?
---------------------------------------

In the short term, very little. Wallet software aimed at average users
has no ability to reliably detect conditions where an unconfirmed
transaction may be double-spent by the sender. For example, Schildbach's
Bitcoin Wallet for Android doesn't even detect double-spends of
unconfirmed transactions when connected to a RBF or Bitcoin XT nodes
that propagate them. The least sophisticated double-spend attack
possibly - simply broadcasting two conflicting transactions at the same
time - has about 50% probability of success against these wallets.

Additionally, SPV wallets based on bitcoinj can't even detect invalid
transactions reliably, instead trusting the full node(s) it is connected
too over the unauthenticated, unencrypted, P2P protocol to do validation
for them. For instance due to a unfixed bug? Bitcoin XT nodes will relay
double-spends that spend the output of the conflicting transaction. I've
personally tested this with Schildbach's Bitcoin Wallet for Android,
which shows such invalid transactions as standard, unconfirmed,
transactions.

Users should continue to assume that unconfirmed transactions could be
trivially reversed by the sender until the first confirmation. In
general, only the sender can reverse a transaction, so if you do trust
the sender feel free to assume an unconfirmed transaction will
eventually confirm. However, if you do not trust the sender and/or have
no other recourse if they double-spend you, wait until at least the
first confirmation before assuming the transaction will go through.

In the long term, miner support of full RBF has a number of advantages
to users, allowing you to more efficiently make transactions, paying
lower fees. However you'll need a wallet supporting these features; none
exist yet.


I'm a business. What does this mean for me?
-------------------------------------------

If you use your own node to verify transactions, you probably are in a
similar situation as average users, so again, this means very little to
you.

If you use a payment processor/transaction API such as BitPay, Coinbase,
BlockCypher, etc. you may or may not be accepting unconfirmed
transactions, and they may or may not be "guaranteed" by your payment
processor even if double-spent. If like most merchants you're using the
API such that confirmations are required prior to accepting orders (e.g.
taking a meaningful loss such as shipping a product if the tx is
reversed) nothing changes for you. If not I recommend you contact your
payment processor.


I'm a miner. Why should I support replace-by-fee?
-------------------------------------------------

Whether full or first-seen-safe? RBF support (along with
child-pays-for-parent) is an important step towards a fully functioning
transaction fee market that doesn't lead to users' transactions getting
mysteriously "stuck", particularly during network flooding
events/attacks. A better functioning fee market will help reduce
pressure to increase the blocksize, particularly from the users creating
the most valuable transactions.

Full RBF also helps make use of the limited blockchain space more
efficiently, with up to 90%+ transaction size savings possible in some
transaction patterns. (e.g. long payment chains?) More users in less
blockchain space will lead to higher overall fees per block.

Finally as we'll discuss below full RBF prevents a number of serious
threats to the existing level playing field that miners operate in.


Why can't we make accepting unconfirmed txs from untrusted people safe?
-----------------------------------------------------------------------

For a decentralized wallet, the situation is pretty bleak. These wallets
only have a handful of connections to the network, with no way of
knowing if those connections give an accurate view of what transactions
miners actually know about.

The only serious attempt to fix this problem for decentralized wallets
that has been actually deployed is Andresen/Harding's double-spend
relaying, implemented in Bitcoin XT. It relays up to one double-spend
transaction per double-spent txout, with the intended effect to warn
recipients. In practice however this functionality makes it easier to
double-spend rather than harder, by giving an efficient and easy way to
get double-spends to miners after the fact. Notably my RBF
implementation even connects to Bitcoin XT nodes, reserving a % of all
incoming and outgoing connection slots for them.

Additionally Bitcoin XT's double-spend relaying is subject to attacks
include bandwidth exhaustion, sybil attacks, and Gervais's non-sybil
interactive attacks? among many others.


What about centralised wallets?
-------------------------------

Here the solutions being deployed, planned, and proposed are harmful,
and even represent serious threats to Bitcoin's decentralization.


Confidence factors
------------------

Many services such as BlockCypher? have attempted to predict the
probability that unconfirmed transactions will be mined, often
guaranteeing merchants payment? even in the event of a double-spend. The
key component of these predictions is to sybil attack the P2P network as
a whole, connecting to as many nodes as possible to measure transaction
propagation. Additionally these services connect to pools directly via
the getblocktemplate protocol, repeatedly downloading via GBT the lists
of transactions in the to-be-mined blocks to determine what transactions
miners are attempting to mine.

None of these measures scale, wasting significant network and miner
resources; in one instance a sybil attack by Chainalysis even completely
blocked the users of the SPV wallet Breadwallet? from accessing the
network. These measures also don't work very well, giving double-spend
attackers incentives to sybil attack miners themselves.


Transaction processing contracts with miners
--------------------------------------------

The next step after measuring propagation fails is to contract with
miners directly, signing contracts with as much of the hashing power as
possible to get the transactions they want mined and double-spends
rejected. The miners/pools would then provide an authenticated API
endpoint for exclusive use of this service that would allow the service
to add and remove specific transactions to the mempool on demand.

There's a number of serious problems with this:

1) Mining contracts can be used to double-spend

...even when they're being used "honestly".

Suppose Alice is a merchant using CoinPayCypher, who has contracts with
75% of the hashing power. Bob, another merchant, meanwhile uses a
decentralized Bitcoin Core backend for payments to his website.

Mallory wants to double-spend Bob's to buy his expensive products. He
can do this by creating a transaction, tx1, that pays Alice, followed by
a second transaction, tx2, that pays Bob. In any circumstance when
Mallory can convince Bob to accept tx2, but prevent Bob from seeing tx1,
the chance of Malory's double-spend succeeding becomes ~75% because
CoinPayCypher's contracts with mining ensure the transaction paying
Alice will get mined.

Of course, dishonest use and/or compromise makes double-spending
trivial: Malory can use the API credentials to ask miners to reject
Bob's payment at any time.


2) They still don't work, without 51% attacking other miners

Even if CoinPayCypher has 75% of the hashing power on contract, that's
still a potentially 75% chance of being double-spent. The 25% of miners
who haven't signed contracts have no _decentralized_ way of ensuring
they don't create blocks with double-spends, let alone at low cost. If
those miners won't or can't sign contracts with CoinPayCypher the only
next step available is to reject their blocks entirely.


3) Legal contracts give the advantage to non-anonymous miners in
   Western jurisdictions

Suppose CoinPayCypher is a US company, and you're a miner with 1%
hashing power located in northern China. The barriers to you succesfully
negotiating a contract with CoinPayCypher are significant. You don't
speak the same langauge, you're in a completely different jurisdiction
so enforcing the legal contract is difficult, and being just 1%,
CoinPayCypher sees you as insignificant.

Who's going to get the profitable hashing power contracts first, if at
all? Your English speaking competitors in the west. This is inherently a
pressure towards centralization of mining.


Why isn't this being announced on the bitcoin-security list first?
------------------------------------------------------------------

I've had repeated discussions with services vulnerable to double-spends;
they have been made well aware of the risk they're taking. If they've
followed my own and others' advice they'll at minimum have constant
monitoring of the rate of double-spends both on their own services and
on the P2P network in general.

If you choose to take a risk you should accept the consequences.


How do I actually use full RBF?
-------------------------------

First get the full-RBF patch to v0.10.2:

    https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.10.2

The above implementation of RBF includes additional code to find and
preferentially connect to other RBF nodes, as well as Bitcoin XT nodes.
Secondly, try out my replace-by-fee-tools at:

    https://github.com/petertodd/replace-by-fee-tools

You can watch double-spends on the network here:

    http://respends.thinlink.com/


References
----------

1) "Replace-by-fee v0.10.2 - Serious DoS attack fixed! - Also novel
    variants of existing attacks w/ Bitcoin XT and Android Bitcoin Wallet",
   Peter Todd, May 23rd 2015, Bitcoin-development mailing list,
   http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07795.html

2) "From Zero to Hero: Bitcoin Transactions in 8 Seconds",
   June 2nd, 2014, Erik Voorhees,
   https://medium.com/blockcypher-blog/from-zero-to-hero-bitcoin-transactions-in-8-seconds-7c9edcb3b734

3) Coinbase Merchant API, Accessed Jun 19th 2015,
   https://developers.coinbase.com/docs/merchants/callbacks#confirmations

4) "Chainalysis CEO Denies 'Sybil Attack' on Bitcoin's Network",
   March 14th 2015, Grace Caffyn, Coindesk,
   http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-on-bitcoin-network/

5) "First-Seen-Safe Replace-by-Fee",
   May 25th 2015, Peter Todd, Bitcoin-development mailing list,
   http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07829.html

6) "Cost savings by using replace-by-fee, 30-90%",
   May 25th 2015, Peter Todd, Bitcoin-development mailing list,
   http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07813.html

7) "Tampering with the Delivery of Blocks and Transactions in Bitcoin",
    Arthur Gervais and Hubert Ritzdorf and Ghassan O. Karame and Srdjan Capkun,
    Cryptology ePrint Archive: Report 2015/578, Jun 10th 2015,
    http://eprint.iacr.org/2015/578

-- 
'peter'[:-1]@petertodd.org
0000000000000000070a2bb3b92c20d5c2c971e6e1a7abe55cdbbe6a2dd9a5ad
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/fa3a7c7a/attachment.sig>

From adam at cypherspace.org  Fri Jun 19 10:45:57 2015
From: adam at cypherspace.org (Dr Adam Back)
Date: Fri, 19 Jun 2015 12:45:57 +0200
Subject: [Bitcoin-development] improving development model (Re: Concerns
 Regarding Threats by a Developer to Remove Commit Access from Other
 Developers
In-Reply-To: <CALqxMTGCkTZAs74bXk57L6JWK29Xzbn1ZUkWN_NuBp+EufjEQg@mail.gmail.com>
References: <CALqxMTGCkTZAs74bXk57L6JWK29Xzbn1ZUkWN_NuBp+EufjEQg@mail.gmail.com>
Message-ID: <CALqxMTFx6DF0Re+pCwB1AjYo6eYuKtX1cqUpo=wXmHSOsN74dQ@mail.gmail.com>

A lot of people think a layer2 is needed, that has a higher
(algorithmic) scale in use of layer1 block-space but preserves
functionality and uplifts security from layer1.  An example would be
lightning or similar.

But there are many things that could be done.  Pure offchain is a weak
form of layer2.  Its running today and maybe its handling 90-99% range
of all transactions right now (mostly in exchanges for example).  This
layer can be incrementally hardened.  It can also have standardised
APIs across vendors of custodians, and opt-in support of those APIs in
wallets.  This would provide a convenience choice.  Greenaddress also
for low-mid assurances solves the unconfirmed transactions. It's
probably not reasonable to expect bitcoin directly solve fast
unconfirmed transactions.   Probably intermediate configurations in
complexity somewhere between greenaddress (2 of 2 + timelocked 1 sig)
and lightning may exist also.  The internet doesnt stop at layer1.

(Which would then leave people who are uninterested in changing client
software to handle layer2, as "layer1 will always be enough die-hards"
(in the refusing the future and facing the O(n^2) scaling wall or
centralisation death with perplexing optimism :)  Ok, not so
constructive but maybe a gentle reminder that it is not constructive
in the reverse direction either to throw around often false
characterisations.  We're here now to improve bitcoin so lets do that.

What I said here seemed like it maybe subject to misinterpretation so
to clarify:

On 19 June 2015 at 11:22, Dr Adam Back <adam at cypherspace.org> wrote:
> For example it could hypothetically allow 10MB blocks on
> one chain and 100kB blocks on the main chain.  People say complexity,
> scary.  Sure I am talking longer term, but we have to also make
> concrete forward progress to the future or we'll be stuck here talking
> about perilously large constant changes in 5 years time!

I should clarify that I meant there I was assuming we do one increase
within the next 12 months frame that gives buffer for 5 years r&d to
improve things and build layer2.

But if we do no R&D on layer2, and insist that clients can never
change to become layer2 aware, and layer2 is too hard etc then our
risk would be we'd be back in the discussion of kicking the can afresh
again in some years with some even more centralising size change.

Sure we should make the transition and introduction to layer2 and an
intermediate crunch smoother, but "20MB now or else" isn't really
helping.  It did help get the conversation revived, but at this point
its a hindrance.  Seriously a big hindrance.  No offence but please
find a way to gracefully stop and rejoin the constructive process.
You can disagree on factors and points and be collaborative others
disagree frequently and have done productive work cordially for years
under the BIP process.


About scaling again:

Here is what I said before in my TL;DR post about my thoughts on how
we would start on throughput short-term to have space to do layer2
development.

> I think almost everybody is on board with a combination plan:
>
> 1. work to improve decentralisation (specific technical work already
> underway, and education)
> 2. create a plan to increase block-size in a slow fashion to not cause
> system shocks (eg like Jeff is proposing or some better variant)
> 3. work on actual algorithmic scaling
>
> In this way we can have throughput needed for scalability and security
> work to continue.
>
> As I said you can not scale a O(n^2) broadcast network by changing
> constants, you need algorithmic improvements.
>
> People are working on them already.  All of those 3 things are being
> actively worked on right now, and in the case of algorithmic scaling
> and improve decentralisation have been worked on for months.


Btw I wonder if Gavin or Mike would be willing to answer another
question I forgot from my TL;DR post which was:

- Did you accept payment from companies to lobby for 20MB blocks?  Do
you consider that something appropriate to publicly disclose if so?
Do you consider that user rights should come above or below company
interests in Bitcoin?


FWIW on pondering that last question "should user rights come above or
below company interests" I think my view of the guiding principle is
starkly clear to me: that user rights should be the primary thing to
optimise for.  Businesses are providing service to users, their
interests are secondary in so far as if they are enabled to provide
better service thats good.

Bitcoin is a user p2p currency, with a social contract and a strong
user ethos.  Importing and forcing company interests would likely be
the start of a slippery slope towards an end to Bitcoin.   If we allow
business rights to be paramount it seems likely that we will end back
at the status quo as bitcoin payment processors grow, conglomerate and
become paypal/bank like or actual banks and then their interests and
exposures are the same as the banks and they'll want to import their
business models into Bitcoin and erode the user ethos features that
are actually what gives Bitcoin any meaning and value in the majority.

That wont be good for the companies either, but they may not see that
until they've killed it, many companies operate on a1 or 2 year
time-horizon.  They may say screw layer2, I have a runway and I need
micropayments to the wazoo and I dont have the dev resources for that.
Thats a conflict and the resolution isn't to override bitcoin's
meaning, but rather that they should do it at layer2 (eg changeTip
does this.. simple trustme layer2 which is OK given the amounts).  The
world needs a neutral social contract enforcing layer1.  Layer1 must
be neutral and free from policy and dispute resolution otherwise
dispute resolution costs are imported and you lose viral open
innovation growth vector the internet benefitted from.  Jurisdiction
and regulation related things belong at the interfaces and at the
payment protocol layer in my view.  (If thats not obvious to some
lurkers I elaborate on that argument  amongst other things here:
https://www.youtube.com/watch?v=3dAdI3Gzodo )

Adam

ps the O(n^2) misunderstanding of varying assumptions was explored at
length on reddit
http://www.reddit.com/r/Bitcoin/comments/3a5f1v/mike_hearn_on_those_who_want_all_scaling_to_be/csboslb
if people are interested in that topic.  I do not think O( t*n ) is a
useful metric because its predictive but only of the obvious and
internal, the useful predictive thing is resources vs users (for
nodes/users or whole-system).



From mike at plan99.net  Fri Jun 19 10:49:40 2015
From: mike at plan99.net (Mike Hearn)
Date: Fri, 19 Jun 2015 12:49:40 +0200
Subject: [Bitcoin-development] Mailman incompatibility with DKIM ...
In-Reply-To: <CAEz79PriNzD18Es60=2Nkz5U6G=Ocrm9ezJmK0P1DirdP-vPkw@mail.gmail.com>
References: <CAEz79PoDn+-aDkqSfPeQFUjYDEDEhSrJ2mFYcbitHBf4oADBSg@mail.gmail.com>
	<CANEZrP3vut8uYWeeynLdwvSM56eXZZdgidaEgcvg1FNMye6P9w@mail.gmail.com>
	<CAEz79Pr4ug8zyJ5bibCG3m0YD8gkBiXysWJsZDThTiwXsgd7YQ@mail.gmail.com>
	<CANEZrP1T3r=VDRBTM_jrm_g0BkQy_NZA40BPcZtVDq_0au6TKw@mail.gmail.com>
	<CAEz79PriNzD18Es60=2Nkz5U6G=Ocrm9ezJmK0P1DirdP-vPkw@mail.gmail.com>
Message-ID: <CANEZrP30FfSawHFwpf4v1Eg2bHKT7q=hFAaxQhPcMY_eJtCZMQ@mail.gmail.com>

>
> Mailman isn't resigning it.  Should it be?  Does other mailing list
> software?
>

Mailman must take responsibility for the mail itself. It doesn't have to
actually sign with DKIM to do so: for backwards compatibility, spam filters
fall back to other heuristics to try and figure out the 'owner' of the mail
if it doesn't use DKIM. Those heuristics can go wrong of course. Ideally
all mail would be DKIM signed. There's no reason not to do it, really.

Yes mailing lists that edit people's emails resign. For example, from a
recent message to the bitcoinj list

DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        *d=googlegroups.com <http://googlegroups.com>*; s=20120806;
        h=to:from:subject:date:lines:message-id:references:mime-version
         :content-type:user-agent:in-reply-to:x-original-sender
         :x-original-authentication-results:reply-to:precedence:mailing-list
         :list-id:list-post:list-help:list-archive:sender:list-subscribe
         :list-unsubscribe;



> I suppose it is somewhat acceptable for us to remove subject tags and
> footers if we have no choice...
>

Good email clients can extract the same information from the headers
anyway. I filter all my mail based on them, and the headers also contain
unsubscribe instructions. Gmail is capable of using them programmatically.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/fd13cc68/attachment.html>

From elombrozo at gmail.com  Fri Jun 19 10:52:48 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Fri, 19 Jun 2015 03:52:48 -0700
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
	to Remove Commit Access from Other Developers
In-Reply-To: <CANEZrP33GCiZHK1GV2Qt_R_AHK6SEjybGPtmORjqgvQ9MiYVZQ@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>
	<55831CAB.2080303@jrn.me.uk> <1867667.WXWC1C9quc@crushinator>
	<CAOG=w-scXm-46sp2NgR2UUp20R5ujuaAzW-jU_Owh20C4Xc=9A@mail.gmail.com>
	<CAJHLa0Mhnma8_ys2ckEA+dLT-EWnqO4j8YKMSaf3Tvv_K14czQ@mail.gmail.com>
	<CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>
	<CANEZrP33GCiZHK1GV2Qt_R_AHK6SEjybGPtmORjqgvQ9MiYVZQ@mail.gmail.com>
Message-ID: <5E49FE9F-CC70-4DFD-8055-68E9372923DF@gmail.com>


> On Jun 19, 2015, at 2:37 AM, Mike Hearn <mike at plan99.net> wrote:
> 
> Or alternatively, fix the reasons why users would have negative experiences with full blocks
> 
> It's impossible, Mark. By definition if Bitcoin does not have sufficient capacity for everyone's transactions, some users who were using it will be kicked out to make way for the others. Whether that happens in some kind of stable organised way or (as with the current code) a fairly chaotic way doesn't change the fundamental truth: some users will find their bitcoin savings have become uneconomic to spend.
> 
> Here's a recent user complaint that provides a preview of coming attractions:
> 
> https://www.reddit.com/r/Bitcoin/comments/39r3bi/breadwallet_asking_me_to_pay_over_10_network_fee/ <https://www.reddit.com/r/Bitcoin/comments/39r3bi/breadwallet_asking_me_to_pay_over_10_network_fee/>
> 
> Hello, I'm just trying to send my small Sarutobi-tips stash (12,159 bits) onto a paper wallet. When I try to send it, a window pops up stating "insufficient funds for bitcoin network fee, reduce payment amount by 1,389 bits?" This would be a fee of $0.32 to send my $2.82, leaving me with $2.50.
> 
> These sorts of complaints will get more frequent and more extreme in the coming months. I realise that nobody at Blockstream is  in the position of running an end user facing service, but many of us are .... and we will be the ones that face the full anger of ordinary users as Bitcoin hits the wall.

Mike,

With all due respect, many of us DO run end user facing services?and would rather see a fundamental problem *fixed* rather than merely covered up temporarily?hoping nobody notices.

The user experience of Bitcoin is already horrendous?unless you use a centralized validator web wallet. Even SPV is fundamentally broken (and I would have pegged you for being one of the people most directly aware of this fact). If we?re going for centralized validation, why even use a blockchain in the first place? We already have much faster, more efficient technology that can do that kind of stuff at a fraction of the cost. If you have well-established entities running banking services, we have other mechanisms in place that can help keep them honest?other far more efficient protocols. We?re basically defeating the very purpose of this invention.

Then there are a bunch of other ?inconveniences? about the way Bitcoin currently works. For instance, have you ever received a bunch of small payments (i.e. a crowdsale) and then found yourself in the position of having to suddenly move a big chunk of that on the blockchain?only to discover all the txouts you were spending added up to hundreds of kB or more? Or have you ever had to send a small payment but only had one large output in your wallet?which meant that the entirety of those funds were tied up until the first transaction got signed and propagated? Yes, the protocol has MANY serious issues?of which the ?send and forget? fee model as opposed to the ?send and bid model? is just one.

Bitcoin was designed from the beginning with the idea that sooner or later fees would be a significant component of the network. The problem was never really fully addressed and solved - I?m glad to see that finally some good people in this space are starting to seriously think about solutions.

Mike, are you telling us you?d rather avoid user complaints at all costs even if that means building something shitty for them that doesn?t really serve its stated purpose? If those are your standards then no thanks, I don?t want to be part of your fork. And I don?t think I?m alone in this sentiment.


- Eric Lombrozo


> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/cf25a90e/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/cf25a90e/attachment.sig>

From jtimon at jtimon.cc  Fri Jun 19 11:31:26 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Fri, 19 Jun 2015 13:31:26 +0200
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CANEZrP33GCiZHK1GV2Qt_R_AHK6SEjybGPtmORjqgvQ9MiYVZQ@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>
	<55831CAB.2080303@jrn.me.uk> <1867667.WXWC1C9quc@crushinator>
	<CAOG=w-scXm-46sp2NgR2UUp20R5ujuaAzW-jU_Owh20C4Xc=9A@mail.gmail.com>
	<CAJHLa0Mhnma8_ys2ckEA+dLT-EWnqO4j8YKMSaf3Tvv_K14czQ@mail.gmail.com>
	<CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>
	<CANEZrP33GCiZHK1GV2Qt_R_AHK6SEjybGPtmORjqgvQ9MiYVZQ@mail.gmail.com>
Message-ID: <CABm2gDq4vRYEaJ+JdCOAhwF9UnFESdzMraM2ChNQmMDyQ6hqMA@mail.gmail.com>

On Fri, Jun 19, 2015 at 11:37 AM, Mike Hearn <mike at plan99.net> wrote:
>> Or alternatively, fix the reasons why users would have negative
>> experiences with full blocks
>
>
> It's impossible, Mark. By definition if Bitcoin does not have sufficient
> capacity for everyone's transactions, some users who were using it will be
> kicked out to make way for the others. Whether that happens in some kind of
> stable organised way or (as with the current code) a fairly chaotic way
> doesn't change the fundamental truth: some users will find their bitcoin
> savings have become uneconomic to spend.

He doesn't mean that: he means solving the mempool and crashes and
hitting the limit would have.
If the chain has limited size it is a scarce resource and people have
to bid for it: nothing unexpected or wrong about that.
Of course, people that believe the limit should be completely removed
eventually because they don't care about mining being decentralized
(or fail to see the relation between the two) may have a very
different view about this.

On Fri, Jun 19, 2015 at 12:08 PM, GC <slashdevnull at hotmail.com> wrote:
> Timeframe for transaction fees topping block reward fees => many years in
> the future, based on current ratio of block reward to fees.

Do you think that this ratio is unrelated to an abundant (non-scarce)
block size?
When is the right time to allow space pressure to rise that ratio?
When the subsidy is at 1.5625, for example, it may be too late to
start a non-catastrophic transition from subsidies to fees.
I don't claim to know that, but it's something that worries me.
No matter how many people say "that's too far away in the future to
worry about it", I still worry about it and I'm sure more people do.
What if "when it's time to care about it" we discover that we should
have started to do things about it long ago to minimize the risks of
this transition?



From kanzure at gmail.com  Fri Jun 19 11:35:28 2015
From: kanzure at gmail.com (Bryan Bishop)
Date: Fri, 19 Jun 2015 06:35:28 -0500
Subject: [Bitcoin-development] improving development model (Re: Concerns
 Regarding Threats by a Developer to Remove Commit Access from Other
 Developers
In-Reply-To: <CALqxMTFx6DF0Re+pCwB1AjYo6eYuKtX1cqUpo=wXmHSOsN74dQ@mail.gmail.com>
References: <CALqxMTGCkTZAs74bXk57L6JWK29Xzbn1ZUkWN_NuBp+EufjEQg@mail.gmail.com>
	<CALqxMTFx6DF0Re+pCwB1AjYo6eYuKtX1cqUpo=wXmHSOsN74dQ@mail.gmail.com>
Message-ID: <CABaSBax92vJkz6Zu_4qBo00bt1TRXWJ3Z+8ic7FCDn2HLLd=0g@mail.gmail.com>

On Fri, Jun 19, 2015 at 5:45 AM, Dr Adam Back <adam at cypherspace.org> wrote:

> payment protocol layer in my view.  (If thats not obvious to some
> lurkers I elaborate on that argument  amongst other things here:
> https://www.youtube.com/watch?v=3dAdI3Gzodo )
>

Someone might find it more convenient to consume that in the form of text
instead:
http://diyhpl.us/wiki/transcripts/bitcoin-adam3us-fungibility-privacy/

- Bryan
http://heybryan.org/
1 512 203 0507
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/5f0d158d/attachment.html>

From elombrozo at gmail.com  Fri Jun 19 12:02:40 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Fri, 19 Jun 2015 05:02:40 -0700
Subject: [Bitcoin-development] improving development model (Re: Concerns
	Regarding Threats by a Developer to Remove Commit Access from
	Other Developers
In-Reply-To: <CALqxMTFx6DF0Re+pCwB1AjYo6eYuKtX1cqUpo=wXmHSOsN74dQ@mail.gmail.com>
References: <CALqxMTGCkTZAs74bXk57L6JWK29Xzbn1ZUkWN_NuBp+EufjEQg@mail.gmail.com>
	<CALqxMTFx6DF0Re+pCwB1AjYo6eYuKtX1cqUpo=wXmHSOsN74dQ@mail.gmail.com>
Message-ID: <378F00E0-9F14-45E7-9395-B5C1324A81F2@gmail.com>


> On Jun 19, 2015, at 3:45 AM, Dr Adam Back <adam at cypherspace.org> wrote:
> 
> That wont be good for the companies either, but they may not see that
> until they've killed it, many companies operate on a1 or 2 year
> time-horizon.  They may say screw layer2, I have a runway and I need
> micropayments to the wazoo and I dont have the dev resources for that.

Exactly, Adam.

Except, I think the genie is out of the bottle - these ideas are too powerful for them to be killed forever. They will probably survive even if this scenario comes to pass?but in a different network under a different name?and Bitcoin will be relegated to the history books and walls of museums.

Most of the potential brainpower available on this Earth to make serious, profound contributions to this movement haven?t even begun to touch it. Just because you happen to run a Bitcoin startup right now?even if you?ve received millions of dollars in funding?don?t think that the whole world has low standards and is lazy! Someone WILL eventually build something better than we can presently imagine.

First mover advantage and the network effect are vastly overrated. At the risk of stating cliches, the Mac came before the Windows PC?Yahoo! came before Google?MySpace came before Facebook?Bitcoin came before <we don?t know yet>.


- Eric Lombrozo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/f58c5233/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/f58c5233/attachment.sig>

From elombrozo at gmail.com  Fri Jun 19 12:02:40 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Fri, 19 Jun 2015 05:02:40 -0700
Subject: [Bitcoin-development] improving development model (Re: Concerns
	Regarding Threats by a Developer to Remove Commit Access from
	Other Developers
In-Reply-To: <CALqxMTFx6DF0Re+pCwB1AjYo6eYuKtX1cqUpo=wXmHSOsN74dQ@mail.gmail.com>
References: <CALqxMTGCkTZAs74bXk57L6JWK29Xzbn1ZUkWN_NuBp+EufjEQg@mail.gmail.com>
	<CALqxMTFx6DF0Re+pCwB1AjYo6eYuKtX1cqUpo=wXmHSOsN74dQ@mail.gmail.com>
Message-ID: <5A5E5791-2FD4-4544-90C2-4269050C5649@gmail.com>


> On Jun 19, 2015, at 3:45 AM, Dr Adam Back <adam at cypherspace.org <mailto:adam at cypherspace.org>> wrote:
> 
> That wont be good for the companies either, but they may not see that
> until they've killed it, many companies operate on a1 or 2 year
> time-horizon.  They may say screw layer2, I have a runway and I need
> micropayments to the wazoo and I dont have the dev resources for that.

Exactly, Adam.

Except, I think the genie is out of the bottle - these ideas are too powerful for them to be killed forever. They will probably survive even if this scenario comes to pass?but in a different network under a different name?and Bitcoin will be relegated to the history books and walls of museums.

Most of the potential brainpower available on this Earth to make serious, profound contributions to this movement haven?t even begun to touch it. Just because you happen to run a Bitcoin startup right now?even if you?ve received millions of dollars in funding?don?t think that the whole world has low standards and is lazy! Someone WILL eventually build something better than we can presently imagine.

First mover advantage and the network effect are vastly overrated. At the risk of stating cliches, the Mac came before the Windows PC?Yahoo! came before Google?MySpace came before Facebook?Bitcoin came before <we don?t know yet>.


- Eric Lombrozo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/bf5873c0/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/bf5873c0/attachment.sig>

From timbowitters at gmail.com  Fri Jun 19 12:03:48 2015
From: timbowitters at gmail.com (Tim Witters)
Date: Fri, 19 Jun 2015 12:03:48 +0000 (UTC)
Subject: [Bitcoin-development] Fee Market Effects
Message-ID: <loom.20150619T132410-975@post.gmane.org>

A lot of standpoints for keeping the current block size are focused on 
creating a healthy fee market. I have some open questions for this list 
in regards to the user incentives of using bitcoin, when such a strong 
fee market is in place.
In my scenario the average fee for a normal transactions will be around 
1$ to put in on the blockchain with a reasonable confirmation time.
    
1. How will we get user adoptions if the fees on bitcoin transactions 
our not competitive with other services like PayPal and the like. (from 
a payment solution viewpoint) It is one of the main ?pitch lines? to get 
people to adopt bitcoin. ?Send value to the other side of the world for 
almost 0 fees?

    2. Many suggest the use of a level 2 layer will facilitate the 
scalability for bitcoin with technologies like the lightning network. 
But to my knowledge, all these solutions still need to publish to the 
actual blockchain when they need to settle. Meaning you will have to pay 
the fees at least once. In case of lightning this will be when the 
channel is closed. 

This means moves more to a monthly payed service, where you open a 
payment channel each month and pay the fee at the end. But a system like 
this keeps money locked for the duration of the channel. And one of the 
main ?pitch? point of the bitcoin economy was you get your money 
instantly, not at the end of the month when the payment channel is 
closed. 

    3. The idea of the fee market is people will start using the layer 2 
systems. When this happens, what are the incentives to keep running a 
node? The incentives today are already quite small, the only real one is 
to support the network or make payments through your own trusted node. 
If you are only using a layer 2 solution, are there any reasons left to 
run my own bitcoin node, resulting in less decentralization.

    4. Do we need a fee market right now? It seems to me the current 
block reward is still high enough for miners to be able to make money 
and secure the network. No real fee market is therefore needed to help 
these miners. 

Regardless of our opinion, why don?t we let the miners decide? The 
BIP100 proposal seems to do this. If the majority of miners decide they 
want bigger blocks they just vote for this. If they want a fee market 
because their return is enough, they can keep the limit and let the 
demand for more blockspace result in a higher fee market. 
Just some of my thoughts about the results of full blocks and the 
resulting fee market. It seems to me a strong fee market might hurt the 
young ecosystem more, then it might help it (miners are currently 
compensated enough). The same goes for decentralization, when people 
more their resources to the level 2 solution or stop using bitcoin due 
to the higher fees compared to comparable services.
Cheers,
Tim Witters 

From boydb at midnightdesign.ws  Fri Jun 19 11:48:54 2015
From: boydb at midnightdesign.ws (Brooks Boyd)
Date: Fri, 19 Jun 2015 06:48:54 -0500
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CANEZrP33GCiZHK1GV2Qt_R_AHK6SEjybGPtmORjqgvQ9MiYVZQ@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>
	<55831CAB.2080303@jrn.me.uk> <1867667.WXWC1C9quc@crushinator>
	<CAOG=w-scXm-46sp2NgR2UUp20R5ujuaAzW-jU_Owh20C4Xc=9A@mail.gmail.com>
	<CAJHLa0Mhnma8_ys2ckEA+dLT-EWnqO4j8YKMSaf3Tvv_K14czQ@mail.gmail.com>
	<CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>
	<CANEZrP33GCiZHK1GV2Qt_R_AHK6SEjybGPtmORjqgvQ9MiYVZQ@mail.gmail.com>
Message-ID: <CANg-TZBL-d4L6+kP7CGi89QkYtFEk4kGZZqB-5jp5K5Cm8nEZQ@mail.gmail.com>

On Fri, Jun 19, 2015 at 4:37 AM, Mike Hearn <mike at plan99.net> wrote:

> Or alternatively, fix the reasons why users would have negative
>> experiences with full blocks
>>
>
> It's impossible, Mark. *By definition* if Bitcoin does not have
> sufficient capacity for everyone's transactions, some users who were using
> it will be kicked out to make way for the others. Whether that happens in
> some kind of stable organised way or (as with the current code) a fairly
> chaotic way doesn't change the fundamental truth: *some users will find
> their bitcoin savings have become uneconomic to spend*.
>
> Here's a recent user complaint that provides a preview of coming
> attractions:
>
>
> https://www.reddit.com/r/Bitcoin/comments/39r3bi/breadwallet_asking_me_to_pay_over_10_network_fee/
>
> Hello, I'm just trying to send my small Sarutobi-tips stash (12,159 bits)
>> onto a paper wallet. When I try to send it, a window pops up stating
>> "insufficient funds for bitcoin network fee, reduce payment amount by 1,389
>> bits?" This would be a fee of $0.32 to send my $2.82, leaving me with $2.50.
>
>
>
Has there been any talk about reducing the time between blocks? If blocks
were allowed to come twice as fast, they would be able to clear pending
transactions in the mempool the same as if the block size doubled, but
would allow mining to stay more decentralized since miners wouldn't be
working on such large-scale blocks? It would still take more storage space
to store the blockchain, though.

Brooks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/6f2397c3/attachment.html>

From slashdevnull at hotmail.com  Fri Jun 19 12:26:45 2015
From: slashdevnull at hotmail.com (GC)
Date: Fri, 19 Jun 2015 19:26:45 +0700
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CABm2gDq4vRYEaJ+JdCOAhwF9UnFESdzMraM2ChNQmMDyQ6hqMA@mail.gmail.com>
References: <55828737.6000007@riseup.net>
	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>
	<55831CAB.2080303@jrn.me.uk> <1867667.WXWC1C9quc@crushinator>
	<CAOG=w-scXm-46sp2NgR2UUp20R5ujuaAzW-jU_Owh20C4Xc=9A@mail.gmail.com>
	<CAJHLa0Mhnma8_ys2ckEA+dLT-EWnqO4j8YKMSaf3Tvv_K14czQ@mail.gmail.com>
	<CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>
	<CANEZrP33GCiZHK1GV2Qt_R_AHK6SEjybGPtmORjqgvQ9MiYVZQ@mail.gmail.com>
	<CABm2gDq4vRYEaJ+JdCOAhwF9UnFESdzMraM2ChNQmMDyQ6hqMA@mail.gmail.com>
Message-ID: <BLU437-SMTP99848FCD5F3BA01BC433D3C6A40@phx.gbl>


>When is the right time to allow space pressure to rise that ratio?
>When the subsidy is at 1.5625, for example, it may be too late to

I don?t believe we have to decide, the miners will do that and are doing
that already.

>start a non-catastrophic transition from subsidies to fees.
>I don't claim to know that, but it's something that worries me.
>No matter how many people say "that's too far away in the future to
>worry about it", I still worry about it and I'm sure more people do.
>What if "when it's time to care about it" we discover that we should
>have started to do things about it long ago to minimize the risks of
>this transition?

Hmmm. What should be the price of an email? How much should DARPA have
charged for using TCP/IP?

I see a lot of well-paid, first-world technologists arguing for commercial
returns on a nacent protocol which could could offer benefits to the
unbanked.
Is that really the vision: to (re)build a de-centralized Paypal with
slightly cheaper fees and cool hooks into off-chain commercial systems
providing profits for the already rich?

>--------------------------------------------------------------------------
>----
>_______________________________________________
>Bitcoin-development mailing list
>Bitcoin-development at lists.sourceforge.net
>https://lists.sourceforge.net/lists/listinfo/bitcoin-development





From elombrozo at gmail.com  Fri Jun 19 12:49:51 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Fri, 19 Jun 2015 05:49:51 -0700
Subject: [Bitcoin-development] improving development model (Re: Concerns
	Regarding Threats by a Developer to Remove Commit Access from
	Other Developers
In-Reply-To: <CAAUq484+QTZvvd6xEw-wNdvZ+LNSi0Ug5xc0q=tD6nBP8V3=Qw@mail.gmail.com>
References: <CALqxMTGCkTZAs74bXk57L6JWK29Xzbn1ZUkWN_NuBp+EufjEQg@mail.gmail.com>
	<CALqxMTFx6DF0Re+pCwB1AjYo6eYuKtX1cqUpo=wXmHSOsN74dQ@mail.gmail.com>
	<378F00E0-9F14-45E7-9395-B5C1324A81F2@gmail.com>
	<CAAUq484+QTZvvd6xEw-wNdvZ+LNSi0Ug5xc0q=tD6nBP8V3=Qw@mail.gmail.com>
Message-ID: <7E481937-9936-40FA-9BE5-E9FD73A3ECE5@gmail.com>

IPv4 came before IPv6?you pick up on things quickly :)

> On Jun 19, 2015, at 5:48 AM, Marcel Jamin <marcel at jamin.net> wrote:
> 
> > At the risk of stating cliches, the Mac came before the Windows PC?Yahoo! came before Google?MySpace came before Facebook?
> 
> And TCP/IP came before... oh wait...
> 
> 2015-06-19 14:02 GMT+02:00 Eric Lombrozo <elombrozo at gmail.com <mailto:elombrozo at gmail.com>>:
> 
>> On Jun 19, 2015, at 3:45 AM, Dr Adam Back <adam at cypherspace.org <mailto:adam at cypherspace.org>> wrote:
>> 
>> That wont be good for the companies either, but they may not see that
>> until they've killed it, many companies operate on a1 or 2 year
>> time-horizon.  They may say screw layer2, I have a runway and I need
>> micropayments to the wazoo and I dont have the dev resources for that.
> 
> Exactly, Adam.
> 
> Except, I think the genie is out of the bottle - these ideas are too powerful for them to be killed forever. They will probably survive even if this scenario comes to pass?but in a different network under a different name?and Bitcoin will be relegated to the history books and walls of museums.
> 
> Most of the potential brainpower available on this Earth to make serious, profound contributions to this movement haven?t even begun to touch it. Just because you happen to run a Bitcoin startup right now?even if you?ve received millions of dollars in funding?don?t think that the whole world has low standards and is lazy! Someone WILL eventually build something better than we can presently imagine.
> 
> First mover advantage and the network effect are vastly overrated. At the risk of stating cliches, the Mac came before the Windows PC?Yahoo! came before Google?MySpace came before Facebook?Bitcoin came before <we don?t know yet>.
> 
> 
> - Eric Lombrozo
> 
> ------------------------------------------------------------------------------
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net <mailto:Bitcoin-development at lists.sourceforge.net>
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/bef3478d/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/bef3478d/attachment.sig>

From marcel at jamin.net  Fri Jun 19 12:48:00 2015
From: marcel at jamin.net (Marcel Jamin)
Date: Fri, 19 Jun 2015 14:48:00 +0200
Subject: [Bitcoin-development] improving development model (Re: Concerns
 Regarding Threats by a Developer to Remove Commit Access from Other
 Developers
In-Reply-To: <378F00E0-9F14-45E7-9395-B5C1324A81F2@gmail.com>
References: <CALqxMTGCkTZAs74bXk57L6JWK29Xzbn1ZUkWN_NuBp+EufjEQg@mail.gmail.com>
	<CALqxMTFx6DF0Re+pCwB1AjYo6eYuKtX1cqUpo=wXmHSOsN74dQ@mail.gmail.com>
	<378F00E0-9F14-45E7-9395-B5C1324A81F2@gmail.com>
Message-ID: <CAAUq484+QTZvvd6xEw-wNdvZ+LNSi0Ug5xc0q=tD6nBP8V3=Qw@mail.gmail.com>

> At the risk of stating cliches, the Mac came before the Windows PC?Yahoo!
came before Google?MySpace came before Facebook?

And TCP/IP came before... oh wait...

2015-06-19 14:02 GMT+02:00 Eric Lombrozo <elombrozo at gmail.com>:

>
> On Jun 19, 2015, at 3:45 AM, Dr Adam Back <adam at cypherspace.org> wrote:
>
> That wont be good for the companies either, but they may not see that
> until they've killed it, many companies operate on a1 or 2 year
> time-horizon.  They may say screw layer2, I have a runway and I need
> micropayments to the wazoo and I dont have the dev resources for that.
>
>
> Exactly, Adam.
>
> Except, I think the genie is out of the bottle - these ideas are too
> powerful for them to be killed forever. They will probably survive even if
> this scenario comes to pass?but in a different network under a different
> name?and Bitcoin will be relegated to the history books and walls of
> museums.
>
> Most of the potential brainpower available on this Earth to make serious,
> profound contributions to this movement haven?t even begun to touch it.
> Just because you happen to run a Bitcoin startup right now?even if you?ve
> received millions of dollars in funding?don?t think that the whole world
> has low standards and is lazy! Someone WILL eventually build something
> better than we can presently imagine.
>
> First mover advantage and the network effect are vastly overrated. At the
> risk of stating cliches, the Mac came before the Windows PC?Yahoo! came
> before Google?MySpace came before Facebook?Bitcoin came before <we don?t
> know yet>.
>
>
> - Eric Lombrozo
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/78d7b5cf/attachment.html>

From gavinandresen at gmail.com  Fri Jun 19 13:33:03 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Fri, 19 Jun 2015 09:33:03 -0400
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <20150619103959.GA32315@savin.petertodd.org>
References: <20150619103959.GA32315@savin.petertodd.org>
Message-ID: <CABsx9T1pnT=Tty3+tg+EUphLwQrWXf9EEwUOGuyNcdu=4wAqTg@mail.gmail.com>

I just sent the following email to F2Pool:


I was disappointed to see Peter Todd claiming that you have (or will?) run
his replace-by-fee patch.

I strongly encourage you to wait until most wallet software supports
replace-by-fee before doing that, because until that happens replace-by-fee
just makes it easier to steal from bitcoin-accepting merchants.

I will tell you the same thing about 8MB blocks: until most merchants
support bigger blocks I will strongly encourage you keep creating
less-than-1MB blocks. If we want Bitcoin to succeed more quickly, we should
all be thinking about what is good for the whole system: users, merchants,
exchanges and miners.

As always, if you have questions or concerns feel free to email me.


-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/230672e9/attachment.html>

From stephencalebmorse at gmail.com  Fri Jun 19 13:33:05 2015
From: stephencalebmorse at gmail.com (Stephen Morse)
Date: Fri, 19 Jun 2015 09:33:05 -0400
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <20150619103959.GA32315@savin.petertodd.org>
References: <20150619103959.GA32315@savin.petertodd.org>
Message-ID: <CABHVRKR7bXfDX0_frAv_Ph4Saz3SXwXeZae1DEokorvekPeinw@mail.gmail.com>

It is disappointing that F2Pool would enable full RBF when the safe
alternative, first-seen-safe RBF, is also available, especially since the
fees they would gain by supporting full RBF over FSS RBF would likely be
negligible. Did they consider using FSS RBF instead?

Best,
Stephen

On Fri, Jun 19, 2015 at 6:39 AM, Peter Todd <pete at petertodd.org> wrote:

> Yesterday F2Pool, currently the largest pool with 21% of the hashing
> power, enabled full replace-by-fee (RBF) support after discussions with
> me. This means that transactions that F2Pool has will be replaced if a
> conflicting transaction pays a higher fee. There are no requirements for
> the replacement transaction to pay addresses that were paid by the
> previous transaction.
>
>
> I'm a user. What does this mean for me?
> ---------------------------------------
>
> In the short term, very little. Wallet software aimed at average users
> has no ability to reliably detect conditions where an unconfirmed
> transaction may be double-spent by the sender. For example, Schildbach's
> Bitcoin Wallet for Android doesn't even detect double-spends of
> unconfirmed transactions when connected to a RBF or Bitcoin XT nodes
> that propagate them. The least sophisticated double-spend attack
> possibly - simply broadcasting two conflicting transactions at the same
> time - has about 50% probability of success against these wallets.
>
> Additionally, SPV wallets based on bitcoinj can't even detect invalid
> transactions reliably, instead trusting the full node(s) it is connected
> too over the unauthenticated, unencrypted, P2P protocol to do validation
> for them. For instance due to a unfixed bug? Bitcoin XT nodes will relay
> double-spends that spend the output of the conflicting transaction. I've
> personally tested this with Schildbach's Bitcoin Wallet for Android,
> which shows such invalid transactions as standard, unconfirmed,
> transactions.
>
> Users should continue to assume that unconfirmed transactions could be
> trivially reversed by the sender until the first confirmation. In
> general, only the sender can reverse a transaction, so if you do trust
> the sender feel free to assume an unconfirmed transaction will
> eventually confirm. However, if you do not trust the sender and/or have
> no other recourse if they double-spend you, wait until at least the
> first confirmation before assuming the transaction will go through.
>
> In the long term, miner support of full RBF has a number of advantages
> to users, allowing you to more efficiently make transactions, paying
> lower fees. However you'll need a wallet supporting these features; none
> exist yet.
>
>
> I'm a business. What does this mean for me?
> -------------------------------------------
>
> If you use your own node to verify transactions, you probably are in a
> similar situation as average users, so again, this means very little to
> you.
>
> If you use a payment processor/transaction API such as BitPay, Coinbase,
> BlockCypher, etc. you may or may not be accepting unconfirmed
> transactions, and they may or may not be "guaranteed" by your payment
> processor even if double-spent. If like most merchants you're using the
> API such that confirmations are required prior to accepting orders (e.g.
> taking a meaningful loss such as shipping a product if the tx is
> reversed) nothing changes for you. If not I recommend you contact your
> payment processor.
>
>
> I'm a miner. Why should I support replace-by-fee?
> -------------------------------------------------
>
> Whether full or first-seen-safe? RBF support (along with
> child-pays-for-parent) is an important step towards a fully functioning
> transaction fee market that doesn't lead to users' transactions getting
> mysteriously "stuck", particularly during network flooding
> events/attacks. A better functioning fee market will help reduce
> pressure to increase the blocksize, particularly from the users creating
> the most valuable transactions.
>
> Full RBF also helps make use of the limited blockchain space more
> efficiently, with up to 90%+ transaction size savings possible in some
> transaction patterns. (e.g. long payment chains?) More users in less
> blockchain space will lead to higher overall fees per block.
>
> Finally as we'll discuss below full RBF prevents a number of serious
> threats to the existing level playing field that miners operate in.
>
>
> Why can't we make accepting unconfirmed txs from untrusted people safe?
> -----------------------------------------------------------------------
>
> For a decentralized wallet, the situation is pretty bleak. These wallets
> only have a handful of connections to the network, with no way of
> knowing if those connections give an accurate view of what transactions
> miners actually know about.
>
> The only serious attempt to fix this problem for decentralized wallets
> that has been actually deployed is Andresen/Harding's double-spend
> relaying, implemented in Bitcoin XT. It relays up to one double-spend
> transaction per double-spent txout, with the intended effect to warn
> recipients. In practice however this functionality makes it easier to
> double-spend rather than harder, by giving an efficient and easy way to
> get double-spends to miners after the fact. Notably my RBF
> implementation even connects to Bitcoin XT nodes, reserving a % of all
> incoming and outgoing connection slots for them.
>
> Additionally Bitcoin XT's double-spend relaying is subject to attacks
> include bandwidth exhaustion, sybil attacks, and Gervais's non-sybil
> interactive attacks? among many others.
>
>
> What about centralised wallets?
> -------------------------------
>
> Here the solutions being deployed, planned, and proposed are harmful,
> and even represent serious threats to Bitcoin's decentralization.
>
>
> Confidence factors
> ------------------
>
> Many services such as BlockCypher? have attempted to predict the
> probability that unconfirmed transactions will be mined, often
> guaranteeing merchants payment? even in the event of a double-spend. The
> key component of these predictions is to sybil attack the P2P network as
> a whole, connecting to as many nodes as possible to measure transaction
> propagation. Additionally these services connect to pools directly via
> the getblocktemplate protocol, repeatedly downloading via GBT the lists
> of transactions in the to-be-mined blocks to determine what transactions
> miners are attempting to mine.
>
> None of these measures scale, wasting significant network and miner
> resources; in one instance a sybil attack by Chainalysis even completely
> blocked the users of the SPV wallet Breadwallet? from accessing the
> network. These measures also don't work very well, giving double-spend
> attackers incentives to sybil attack miners themselves.
>
>
> Transaction processing contracts with miners
> --------------------------------------------
>
> The next step after measuring propagation fails is to contract with
> miners directly, signing contracts with as much of the hashing power as
> possible to get the transactions they want mined and double-spends
> rejected. The miners/pools would then provide an authenticated API
> endpoint for exclusive use of this service that would allow the service
> to add and remove specific transactions to the mempool on demand.
>
> There's a number of serious problems with this:
>
> 1) Mining contracts can be used to double-spend
>
> ...even when they're being used "honestly".
>
> Suppose Alice is a merchant using CoinPayCypher, who has contracts with
> 75% of the hashing power. Bob, another merchant, meanwhile uses a
> decentralized Bitcoin Core backend for payments to his website.
>
> Mallory wants to double-spend Bob's to buy his expensive products. He
> can do this by creating a transaction, tx1, that pays Alice, followed by
> a second transaction, tx2, that pays Bob. In any circumstance when
> Mallory can convince Bob to accept tx2, but prevent Bob from seeing tx1,
> the chance of Malory's double-spend succeeding becomes ~75% because
> CoinPayCypher's contracts with mining ensure the transaction paying
> Alice will get mined.
>
> Of course, dishonest use and/or compromise makes double-spending
> trivial: Malory can use the API credentials to ask miners to reject
> Bob's payment at any time.
>
>
> 2) They still don't work, without 51% attacking other miners
>
> Even if CoinPayCypher has 75% of the hashing power on contract, that's
> still a potentially 75% chance of being double-spent. The 25% of miners
> who haven't signed contracts have no _decentralized_ way of ensuring
> they don't create blocks with double-spends, let alone at low cost. If
> those miners won't or can't sign contracts with CoinPayCypher the only
> next step available is to reject their blocks entirely.
>
>
> 3) Legal contracts give the advantage to non-anonymous miners in
>    Western jurisdictions
>
> Suppose CoinPayCypher is a US company, and you're a miner with 1%
> hashing power located in northern China. The barriers to you succesfully
> negotiating a contract with CoinPayCypher are significant. You don't
> speak the same langauge, you're in a completely different jurisdiction
> so enforcing the legal contract is difficult, and being just 1%,
> CoinPayCypher sees you as insignificant.
>
> Who's going to get the profitable hashing power contracts first, if at
> all? Your English speaking competitors in the west. This is inherently a
> pressure towards centralization of mining.
>
>
> Why isn't this being announced on the bitcoin-security list first?
> ------------------------------------------------------------------
>
> I've had repeated discussions with services vulnerable to double-spends;
> they have been made well aware of the risk they're taking. If they've
> followed my own and others' advice they'll at minimum have constant
> monitoring of the rate of double-spends both on their own services and
> on the P2P network in general.
>
> If you choose to take a risk you should accept the consequences.
>
>
> How do I actually use full RBF?
> -------------------------------
>
> First get the full-RBF patch to v0.10.2:
>
>     https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.10.2
>
> The above implementation of RBF includes additional code to find and
> preferentially connect to other RBF nodes, as well as Bitcoin XT nodes.
> Secondly, try out my replace-by-fee-tools at:
>
>     https://github.com/petertodd/replace-by-fee-tools
>
> You can watch double-spends on the network here:
>
>     http://respends.thinlink.com/
>
>
> References
> ----------
>
> 1) "Replace-by-fee v0.10.2 - Serious DoS attack fixed! - Also novel
>     variants of existing attacks w/ Bitcoin XT and Android Bitcoin Wallet",
>    Peter Todd, May 23rd 2015, Bitcoin-development mailing list,
>
> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07795.html
>
> 2) "From Zero to Hero: Bitcoin Transactions in 8 Seconds",
>    June 2nd, 2014, Erik Voorhees,
>
> https://medium.com/blockcypher-blog/from-zero-to-hero-bitcoin-transactions-in-8-seconds-7c9edcb3b734
>
> 3) Coinbase Merchant API, Accessed Jun 19th 2015,
>    https://developers.coinbase.com/docs/merchants/callbacks#confirmations
>
> 4) "Chainalysis CEO Denies 'Sybil Attack' on Bitcoin's Network",
>    March 14th 2015, Grace Caffyn, Coindesk,
>
> http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-on-bitcoin-network/
>
> 5) "First-Seen-Safe Replace-by-Fee",
>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,
>
> http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07829.html
>
> 6) "Cost savings by using replace-by-fee, 30-90%",
>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,
>
> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07813.html
>
> 7) "Tampering with the Delivery of Blocks and Transactions in Bitcoin",
>     Arthur Gervais and Hubert Ritzdorf and Ghassan O. Karame and Srdjan
> Capkun,
>     Cryptology ePrint Archive: Report 2015/578, Jun 10th 2015,
>     http://eprint.iacr.org/2015/578
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000070a2bb3b92c20d5c2c971e6e1a7abe55cdbbe6a2dd9a5ad
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/331698c4/attachment.html>

From 1240902 at gmail.com  Fri Jun 19 13:37:49 2015
From: 1240902 at gmail.com (Chun Wang)
Date: Fri, 19 Jun 2015 21:37:49 +0800
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CABHVRKR7bXfDX0_frAv_Ph4Saz3SXwXeZae1DEokorvekPeinw@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABHVRKR7bXfDX0_frAv_Ph4Saz3SXwXeZae1DEokorvekPeinw@mail.gmail.com>
Message-ID: <CAFzgq-wgHAdPnW5omvcP6OfYbCAh3op+mAYtuzwk188AOZr2QA@mail.gmail.com>

Hello. We recognize the problem. We will switch to FSS RBF soon. Thanks.

On Fri, Jun 19, 2015 at 9:33 PM, Stephen Morse
<stephencalebmorse at gmail.com> wrote:
> It is disappointing that F2Pool would enable full RBF when the safe
> alternative, first-seen-safe RBF, is also available, especially since the
> fees they would gain by supporting full RBF over FSS RBF would likely be
> negligible. Did they consider using FSS RBF instead?
>
> Best,
> Stephen
>
> On Fri, Jun 19, 2015 at 6:39 AM, Peter Todd <pete at petertodd.org> wrote:
>>
>> Yesterday F2Pool, currently the largest pool with 21% of the hashing
>> power, enabled full replace-by-fee (RBF) support after discussions with
>> me. This means that transactions that F2Pool has will be replaced if a
>> conflicting transaction pays a higher fee. There are no requirements for
>> the replacement transaction to pay addresses that were paid by the
>> previous transaction.
>>
>>
>> I'm a user. What does this mean for me?
>> ---------------------------------------
>>
>> In the short term, very little. Wallet software aimed at average users
>> has no ability to reliably detect conditions where an unconfirmed
>> transaction may be double-spent by the sender. For example, Schildbach's
>> Bitcoin Wallet for Android doesn't even detect double-spends of
>> unconfirmed transactions when connected to a RBF or Bitcoin XT nodes
>> that propagate them. The least sophisticated double-spend attack
>> possibly - simply broadcasting two conflicting transactions at the same
>> time - has about 50% probability of success against these wallets.
>>
>> Additionally, SPV wallets based on bitcoinj can't even detect invalid
>> transactions reliably, instead trusting the full node(s) it is connected
>> too over the unauthenticated, unencrypted, P2P protocol to do validation
>> for them. For instance due to a unfixed bug? Bitcoin XT nodes will relay
>> double-spends that spend the output of the conflicting transaction. I've
>> personally tested this with Schildbach's Bitcoin Wallet for Android,
>> which shows such invalid transactions as standard, unconfirmed,
>> transactions.
>>
>> Users should continue to assume that unconfirmed transactions could be
>> trivially reversed by the sender until the first confirmation. In
>> general, only the sender can reverse a transaction, so if you do trust
>> the sender feel free to assume an unconfirmed transaction will
>> eventually confirm. However, if you do not trust the sender and/or have
>> no other recourse if they double-spend you, wait until at least the
>> first confirmation before assuming the transaction will go through.
>>
>> In the long term, miner support of full RBF has a number of advantages
>> to users, allowing you to more efficiently make transactions, paying
>> lower fees. However you'll need a wallet supporting these features; none
>> exist yet.
>>
>>
>> I'm a business. What does this mean for me?
>> -------------------------------------------
>>
>> If you use your own node to verify transactions, you probably are in a
>> similar situation as average users, so again, this means very little to
>> you.
>>
>> If you use a payment processor/transaction API such as BitPay, Coinbase,
>> BlockCypher, etc. you may or may not be accepting unconfirmed
>> transactions, and they may or may not be "guaranteed" by your payment
>> processor even if double-spent. If like most merchants you're using the
>> API such that confirmations are required prior to accepting orders (e.g.
>> taking a meaningful loss such as shipping a product if the tx is
>> reversed) nothing changes for you. If not I recommend you contact your
>> payment processor.
>>
>>
>> I'm a miner. Why should I support replace-by-fee?
>> -------------------------------------------------
>>
>> Whether full or first-seen-safe? RBF support (along with
>> child-pays-for-parent) is an important step towards a fully functioning
>> transaction fee market that doesn't lead to users' transactions getting
>> mysteriously "stuck", particularly during network flooding
>> events/attacks. A better functioning fee market will help reduce
>> pressure to increase the blocksize, particularly from the users creating
>> the most valuable transactions.
>>
>> Full RBF also helps make use of the limited blockchain space more
>> efficiently, with up to 90%+ transaction size savings possible in some
>> transaction patterns. (e.g. long payment chains?) More users in less
>> blockchain space will lead to higher overall fees per block.
>>
>> Finally as we'll discuss below full RBF prevents a number of serious
>> threats to the existing level playing field that miners operate in.
>>
>>
>> Why can't we make accepting unconfirmed txs from untrusted people safe?
>> -----------------------------------------------------------------------
>>
>> For a decentralized wallet, the situation is pretty bleak. These wallets
>> only have a handful of connections to the network, with no way of
>> knowing if those connections give an accurate view of what transactions
>> miners actually know about.
>>
>> The only serious attempt to fix this problem for decentralized wallets
>> that has been actually deployed is Andresen/Harding's double-spend
>> relaying, implemented in Bitcoin XT. It relays up to one double-spend
>> transaction per double-spent txout, with the intended effect to warn
>> recipients. In practice however this functionality makes it easier to
>> double-spend rather than harder, by giving an efficient and easy way to
>> get double-spends to miners after the fact. Notably my RBF
>> implementation even connects to Bitcoin XT nodes, reserving a % of all
>> incoming and outgoing connection slots for them.
>>
>> Additionally Bitcoin XT's double-spend relaying is subject to attacks
>> include bandwidth exhaustion, sybil attacks, and Gervais's non-sybil
>> interactive attacks? among many others.
>>
>>
>> What about centralised wallets?
>> -------------------------------
>>
>> Here the solutions being deployed, planned, and proposed are harmful,
>> and even represent serious threats to Bitcoin's decentralization.
>>
>>
>> Confidence factors
>> ------------------
>>
>> Many services such as BlockCypher? have attempted to predict the
>> probability that unconfirmed transactions will be mined, often
>> guaranteeing merchants payment? even in the event of a double-spend. The
>> key component of these predictions is to sybil attack the P2P network as
>> a whole, connecting to as many nodes as possible to measure transaction
>> propagation. Additionally these services connect to pools directly via
>> the getblocktemplate protocol, repeatedly downloading via GBT the lists
>> of transactions in the to-be-mined blocks to determine what transactions
>> miners are attempting to mine.
>>
>> None of these measures scale, wasting significant network and miner
>> resources; in one instance a sybil attack by Chainalysis even completely
>> blocked the users of the SPV wallet Breadwallet? from accessing the
>> network. These measures also don't work very well, giving double-spend
>> attackers incentives to sybil attack miners themselves.
>>
>>
>> Transaction processing contracts with miners
>> --------------------------------------------
>>
>> The next step after measuring propagation fails is to contract with
>> miners directly, signing contracts with as much of the hashing power as
>> possible to get the transactions they want mined and double-spends
>> rejected. The miners/pools would then provide an authenticated API
>> endpoint for exclusive use of this service that would allow the service
>> to add and remove specific transactions to the mempool on demand.
>>
>> There's a number of serious problems with this:
>>
>> 1) Mining contracts can be used to double-spend
>>
>> ...even when they're being used "honestly".
>>
>> Suppose Alice is a merchant using CoinPayCypher, who has contracts with
>> 75% of the hashing power. Bob, another merchant, meanwhile uses a
>> decentralized Bitcoin Core backend for payments to his website.
>>
>> Mallory wants to double-spend Bob's to buy his expensive products. He
>> can do this by creating a transaction, tx1, that pays Alice, followed by
>> a second transaction, tx2, that pays Bob. In any circumstance when
>> Mallory can convince Bob to accept tx2, but prevent Bob from seeing tx1,
>> the chance of Malory's double-spend succeeding becomes ~75% because
>> CoinPayCypher's contracts with mining ensure the transaction paying
>> Alice will get mined.
>>
>> Of course, dishonest use and/or compromise makes double-spending
>> trivial: Malory can use the API credentials to ask miners to reject
>> Bob's payment at any time.
>>
>>
>> 2) They still don't work, without 51% attacking other miners
>>
>> Even if CoinPayCypher has 75% of the hashing power on contract, that's
>> still a potentially 75% chance of being double-spent. The 25% of miners
>> who haven't signed contracts have no _decentralized_ way of ensuring
>> they don't create blocks with double-spends, let alone at low cost. If
>> those miners won't or can't sign contracts with CoinPayCypher the only
>> next step available is to reject their blocks entirely.
>>
>>
>> 3) Legal contracts give the advantage to non-anonymous miners in
>>    Western jurisdictions
>>
>> Suppose CoinPayCypher is a US company, and you're a miner with 1%
>> hashing power located in northern China. The barriers to you succesfully
>> negotiating a contract with CoinPayCypher are significant. You don't
>> speak the same langauge, you're in a completely different jurisdiction
>> so enforcing the legal contract is difficult, and being just 1%,
>> CoinPayCypher sees you as insignificant.
>>
>> Who's going to get the profitable hashing power contracts first, if at
>> all? Your English speaking competitors in the west. This is inherently a
>> pressure towards centralization of mining.
>>
>>
>> Why isn't this being announced on the bitcoin-security list first?
>> ------------------------------------------------------------------
>>
>> I've had repeated discussions with services vulnerable to double-spends;
>> they have been made well aware of the risk they're taking. If they've
>> followed my own and others' advice they'll at minimum have constant
>> monitoring of the rate of double-spends both on their own services and
>> on the P2P network in general.
>>
>> If you choose to take a risk you should accept the consequences.
>>
>>
>> How do I actually use full RBF?
>> -------------------------------
>>
>> First get the full-RBF patch to v0.10.2:
>>
>>     https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.10.2
>>
>> The above implementation of RBF includes additional code to find and
>> preferentially connect to other RBF nodes, as well as Bitcoin XT nodes.
>> Secondly, try out my replace-by-fee-tools at:
>>
>>     https://github.com/petertodd/replace-by-fee-tools
>>
>> You can watch double-spends on the network here:
>>
>>     http://respends.thinlink.com/
>>
>>
>> References
>> ----------
>>
>> 1) "Replace-by-fee v0.10.2 - Serious DoS attack fixed! - Also novel
>>     variants of existing attacks w/ Bitcoin XT and Android Bitcoin
>> Wallet",
>>    Peter Todd, May 23rd 2015, Bitcoin-development mailing list,
>>
>> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07795.html
>>
>> 2) "From Zero to Hero: Bitcoin Transactions in 8 Seconds",
>>    June 2nd, 2014, Erik Voorhees,
>>
>> https://medium.com/blockcypher-blog/from-zero-to-hero-bitcoin-transactions-in-8-seconds-7c9edcb3b734
>>
>> 3) Coinbase Merchant API, Accessed Jun 19th 2015,
>>    https://developers.coinbase.com/docs/merchants/callbacks#confirmations
>>
>> 4) "Chainalysis CEO Denies 'Sybil Attack' on Bitcoin's Network",
>>    March 14th 2015, Grace Caffyn, Coindesk,
>>
>> http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-on-bitcoin-network/
>>
>> 5) "First-Seen-Safe Replace-by-Fee",
>>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,
>>
>> http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07829.html
>>
>> 6) "Cost savings by using replace-by-fee, 30-90%",
>>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,
>>
>> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07813.html
>>
>> 7) "Tampering with the Delivery of Blocks and Transactions in Bitcoin",
>>     Arthur Gervais and Hubert Ritzdorf and Ghassan O. Karame and Srdjan
>> Capkun,
>>     Cryptology ePrint Archive: Report 2015/578, Jun 10th 2015,
>>     http://eprint.iacr.org/2015/578
>>
>> --
>> 'peter'[:-1]@petertodd.org
>> 0000000000000000070a2bb3b92c20d5c2c971e6e1a7abe55cdbbe6a2dd9a5ad
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From mike at plan99.net  Fri Jun 19 13:43:14 2015
From: mike at plan99.net (Mike Hearn)
Date: Fri, 19 Jun 2015 15:43:14 +0200
Subject: [Bitcoin-development] improving development model (Re: Concerns
 Regarding Threats by a Developer to Remove Commit Access from Other
 Developers
In-Reply-To: <CALqxMTFx6DF0Re+pCwB1AjYo6eYuKtX1cqUpo=wXmHSOsN74dQ@mail.gmail.com>
References: <CALqxMTGCkTZAs74bXk57L6JWK29Xzbn1ZUkWN_NuBp+EufjEQg@mail.gmail.com>
	<CALqxMTFx6DF0Re+pCwB1AjYo6eYuKtX1cqUpo=wXmHSOsN74dQ@mail.gmail.com>
Message-ID: <CANEZrP2iGUnU+BKzYOzNZJUPNOU_5d4oU8JRgGLS1iPtz-uRWA@mail.gmail.com>

Hi Adam,

I am still confused about whether you actually support an increase in the
block size limit to happen right now. As you agree that this "layer 2" you
speak of doesn't exist yet, and won't within the next 10-12 months (do you
agree that actually?), can you please state clearly that you will support
Gavin's patch once posted? As Gavin's work takes some ideas from BIP100 but
does/soon will have some code associated with it.

But if we do no R&D on layer2, and insist that clients can never
> change to become layer2 aware, and layer2 is too hard etc
>

I think there's been some confusion here.

I, at least, have never argued that other systems can *never* happen. Never
is a long time, and I myself maintain a payment channels implementation.
These things have their place.

The argument is solely around the need to raise the block size *now* and
not allow the existing layer 1 to gum up and fall over.

If Stroem or Lightning or other block chains or Coinbase or secure hardware
tokens or whatever take off and people start moving bitcoins around that
way - fine. If they're choosing it of their own free will I have no issue
with that, nor does anyone else, I suspect.

However you don't seem fully confident that people actually will choose
whatever is being cooked up as "layer 2", if left to their own devices.
Indeed it's impossible for anyone to know that, as no "layer 2" actually
exists. Any such implementation could have all sorts of flaws that lead to
it not gaining traction.


> No offence but please find a way to gracefully stop and rejoin the
> constructive process. You can disagree on factors and points and be
> collaborative others disagree frequently and have done productive work
> cordially for years  under the BIP process.


As you know from the discussion with myself and Gavin a few days ago on
IRC, neither of us believe any such constructive process exists. There is
another thread to discuss the lack of such a process.


> - Did you accept payment from companies to lobby for 20MB blocks?


Oh please. Conspiracy theories, now, Adam? My position has been consistent
for years. I don't care whether the figure is 20 or something else (looks
like it'll be lucky 8 instead), but I have always been clear that the limit
must rise.

But for the avoidance of doubt: the answer is no.

Gavin is paid by MIT. The MIT deal gives Gavin complete independence.

I am currently self employed and most of income comes from a client that is
actually interested in Lighthouse. Luckily they have given me some leeway
to do general Bitcoin development as well, which this business falls under.
I would *much* rather be working on Lighthouse than this, and so would they.

But seeing as you've gone there - let me flip this around. Blockstream has
a very serious conflict of interest in this situation. I am by no means the
first to observe this. You are building two major products:

   1. Sidechains, a very complex approach to avoid changing the Bitcoin
   consensus rules to add new features.
   2. Lightning, a so-called "layer two" system for transaction routing

No surprise, the position of Blockstream employees is that hard forks must
never happen and that everyone's ordinary transactions should go via some
new network that doesn't yet exist.

The problem is that rather than letting the market decide between ordinary
Bitcoin and Lightning, you are attempting to strangle the regular Bitcoin
protocol because you don't trust people to spontaneously realise that they
should be using your companies products.

I know that many of you guys had these views before joining Blockstream. I
am not saying you are being paid to have views you didn't previously have.
I realise that birds of a feather flock together.

Regardless, that conflict of interest DOES exist, whether you like it or
not, because if you succeed in running Bitcoin out of capacity your own
company stands to benefit from selling consulting and services around your
preferred solutions.

With respect to user rights: all the polling done so far suggests users who
are paying attention strongly support increasing the block size. For
example:

Q: "Should the bitcoin block size be raised in the next two years"
A: 92% yes

http://www.poll-maker.com/results329839xee274Cb0-12#tab-2

Additionally, many Bitcoin users have explicitly delegated handling the
technical details to someone else, like a payment processor or their wallet
developers. Those people are nearly all sure that the block size limit
should rise too.

So please don't engage in idle speculation about "users vs companies". They
aren't some kind of opposing forces. Companies live for their users, and
many of those companies were formed by long time Bitcoin users.

And finally, the Bitcoin social contract is not defined by whatever random
state the code was in at the time Gavin decided to focus on research. Both
Gavin and I have been working on Bitcoin longer than you, Gregory or Peter
Todd. The social contract was and still is defined by the project's
founding vision - written down in words.

Heck, if Satoshi had spent another hour or two on his original size limiter
patch this entire dispute would never have happened. He'd have put in some
kind of automatic timeout or limit riser because the plan was to remove it
all along, and then it'd be you guys arguing for putting a limit in place,
Gavin would object, it'd be controversial and nothing would happen. But
Satoshi never anticipated this bizarre attempt to turn the project into
something else and so figured he'd just remove it himself later. Too bad.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/9daed28f/attachment.html>

From pete at petertodd.org  Fri Jun 19 13:44:08 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 19 Jun 2015 09:44:08 -0400
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CABHVRKR7bXfDX0_frAv_Ph4Saz3SXwXeZae1DEokorvekPeinw@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABHVRKR7bXfDX0_frAv_Ph4Saz3SXwXeZae1DEokorvekPeinw@mail.gmail.com>
Message-ID: <20150619134408.GB27280@savin.petertodd.org>

On Fri, Jun 19, 2015 at 09:33:05AM -0400, Stephen Morse wrote:
> It is disappointing that F2Pool would enable full RBF when the safe
> alternative, first-seen-safe RBF, is also available, especially since the
> fees they would gain by supporting full RBF over FSS RBF would likely be
> negligible. Did they consider using FSS RBF instead?

Specifically the following is what I told them:

> We are
> interested in the replace-by-fee patch, but I am not following the
> development closely, more background info is needed, like what the
> difference between standard and zeroconf versions? Thanks.

Great!

Basically both let you replace one transaction with another that pays a
higher fee. First-seen-safe replace-by-fee adds the additional criteria
that all outputs of the old transaction still need to be paid by the new
transaction, with >= as many Bitcoins. Basically, it makes sure that if
someone was paid by tx1, then tx2 will still pay them.

I've written about how wallets can use RBF and FSS-RBF to more
efficiently use the blockchain on the bitcoin-development mailing list:

http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07813.html
http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07829.html

Basically, for the purpose of increasing fees, RBF is something like %50
cheaper than CPFP, and FSS-RBF is something like %25 cheaper.

In addition, for ease of implementation, my new FSS-RBF has a number of
other restrictions. For instance, you can't replace multiple
transactions with one, you can't replace a transaction whose outputs
have already been spent, you can't replace a transaction with one that
spends additional unconfirmed inputs, etc. These restrictions aren't
"set in stone", but they do make the code simpler and less likely to
have bugs.

In comparison my previous standard RBF patch can replace multiple
transactions with one, can replace long chains of transactions, etc.
It's willing to do more computation before deciding if a transaction
should be replaced, with more complex logic; it probably has a higher
chance of having a bug or DoS attack.

You've probably seen the huge controversy around zeroconf with regard to
standard replace-by-fee. While FSS RBF doesn't make zeroconf any safer,
it also doesn't make it any more dangerous, so politically with regard
to zeroconf it makes no difference. You *can* still use it doublespend
by taking advantage of how different transactions are accepted
differently, but that's true of *every* change we've ever made to
Bitcoin Core - by upgrading to v0.10 from v0.9 you've also "broken"
zeroconf in the same way.


Having said that... honestly, zeroconf is pretty broken already. Only
with pretty heroic measures like connecting to a significant fraction of
the Bitcoin network at once, as well as connecting to getblocktemplate
supporting miners to figure out what transactions are being mined, are
services having any hope of avoiding getting ripped off. For the average
user their wallets do a terrible job of showing whether or not an
unconfirmed transaction will go through. For example, Schildbach's
Bitcoin wallet for Android has no code at all to detect double-spends
until they get mined, and I've been able to trick it into showing
completely invalid transactions. In fact, currently Bitcoin XT will
relay invalid transactions that are doublepsends, and Schildbach's
wallet displays them as valid, unconfirmed, payments. It's really no
surprise to me that nearly no-one in the Bitcoin ecosystem accepts
unconfirmed transactions without some kind of protection that doesn't
rely on first-seen-safe mempool behavior. For instance, many ATM's these
days know who their customers are due to AML requirements, so while you
can deposit Bitcoins and get your funds instantly, the protection for
the ATM operator is that they can go to the police if you rip them off;
I've spoken to ATM operators who didn't do this who've lost hundreds or
even thousands of dollars before giving up on zeroconf.

My big worry with zeroconf is a service like Coinbase or Shapeshift
coming to rely on it, and then attempting to secure it by gaining
control of a majority of hashing power. For instance, if Coinbase had
contracts with 80% of the Bitcoin hashing power to guarantee their
transactions would get mined, but 20% of the hashing power didn't sign
up, then the only way to guarantee their transactions could be for the
80% to not build on blocks containing doublespends by the 20%. There's
no way in a decentralized network to come to consensus about what
transactions are or are not valid without mining itself, so you could
end up in a situation where unless you're part of one of the big pools
you can't reliably mine at all because your blocks may get rejected for
containing doublespends.

One of my goal with standard replace-by-fee is to prevent this scenario
by forcing merchants and others to implement ways of accepting zeroconf
transactions safely that work in a decentralized environment regardless
of what miners do; we have a stronger and safer Bitcoin ecosystem if
we're relying on math rather than trust to secure our zeroconf
transactions. We're also being more honest to users, who right now often
have the very wrong impression that unconfirmed transactions are safe to
accept - this does get people ripped off all too often!


Anyway, sorry for the rant! FWIW I updated my FSS-RBF patch and am
waiting to get some feedback:

    https://github.com/bitcoin/bitcoin/pull/6176

Suhas Daftuar did find a pretty serious bug in it, now fixed. I'm
working on porting it to v0.10.2, and once that's done I'm going to put
up a bounty for anyone who can find a DoS attack in the patch. If no-one
claims the bounty after a week or two I think I'll start feeling
confident about using it in production.


-- 
'peter'[:-1]@petertodd.org
000000000000000003188926be14e5fbe2f8f9c63c9fb8e2ba4b14ab04f1c9ab
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/0ea5bf90/attachment.sig>

From pete at petertodd.org  Fri Jun 19 13:48:21 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 19 Jun 2015 09:48:21 -0400
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CAFzgq-wgHAdPnW5omvcP6OfYbCAh3op+mAYtuzwk188AOZr2QA@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABHVRKR7bXfDX0_frAv_Ph4Saz3SXwXeZae1DEokorvekPeinw@mail.gmail.com>
	<CAFzgq-wgHAdPnW5omvcP6OfYbCAh3op+mAYtuzwk188AOZr2QA@mail.gmail.com>
Message-ID: <20150619134821.GA28875@savin.petertodd.org>

On Fri, Jun 19, 2015 at 09:37:49PM +0800, Chun Wang wrote:
> Hello. We recognize the problem. We will switch to FSS RBF soon. Thanks.

No worries, let me know if you have any issues. You have my phone
number.

While my own preference - and a number of other devs - is full-RBF,
either one is a good step forward for Bitcoin.

-- 
'peter'[:-1]@petertodd.org
000000000000000003188926be14e5fbe2f8f9c63c9fb8e2ba4b14ab04f1c9ab
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/801d33e3/attachment.sig>

From 1240902 at gmail.com  Fri Jun 19 13:52:40 2015
From: 1240902 at gmail.com (Chun Wang)
Date: Fri, 19 Jun 2015 21:52:40 +0800
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <20150619134408.GB27280@savin.petertodd.org>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABHVRKR7bXfDX0_frAv_Ph4Saz3SXwXeZae1DEokorvekPeinw@mail.gmail.com>
	<20150619134408.GB27280@savin.petertodd.org>
Message-ID: <CAFzgq-zbcARe4ePj_3wA9mEzKE3PsGQ3Kb0-ALyTk054uzrrTA@mail.gmail.com>

Before F2Pool's launch, I performed probably the only successful
bitcoin double spend in the March 2013 fork without any mining power.
[ https://bitcointalk.org/index.php?topic=152348.0 ] I know how bad
the full RBF is. We are going to switch to FSS RBF in a few hours.
Sorry.

On Fri, Jun 19, 2015 at 9:44 PM, Peter Todd <pete at petertodd.org> wrote:
> On Fri, Jun 19, 2015 at 09:33:05AM -0400, Stephen Morse wrote:
>> It is disappointing that F2Pool would enable full RBF when the safe
>> alternative, first-seen-safe RBF, is also available, especially since the
>> fees they would gain by supporting full RBF over FSS RBF would likely be
>> negligible. Did they consider using FSS RBF instead?
>
> Specifically the following is what I told them:
>
>> We are
>> interested in the replace-by-fee patch, but I am not following the
>> development closely, more background info is needed, like what the
>> difference between standard and zeroconf versions? Thanks.
>
> Great!
>
> Basically both let you replace one transaction with another that pays a
> higher fee. First-seen-safe replace-by-fee adds the additional criteria
> that all outputs of the old transaction still need to be paid by the new
> transaction, with >= as many Bitcoins. Basically, it makes sure that if
> someone was paid by tx1, then tx2 will still pay them.
>
> I've written about how wallets can use RBF and FSS-RBF to more
> efficiently use the blockchain on the bitcoin-development mailing list:
>
> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07813.html
> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07829.html
>
> Basically, for the purpose of increasing fees, RBF is something like %50
> cheaper than CPFP, and FSS-RBF is something like %25 cheaper.
>
> In addition, for ease of implementation, my new FSS-RBF has a number of
> other restrictions. For instance, you can't replace multiple
> transactions with one, you can't replace a transaction whose outputs
> have already been spent, you can't replace a transaction with one that
> spends additional unconfirmed inputs, etc. These restrictions aren't
> "set in stone", but they do make the code simpler and less likely to
> have bugs.
>
> In comparison my previous standard RBF patch can replace multiple
> transactions with one, can replace long chains of transactions, etc.
> It's willing to do more computation before deciding if a transaction
> should be replaced, with more complex logic; it probably has a higher
> chance of having a bug or DoS attack.
>
> You've probably seen the huge controversy around zeroconf with regard to
> standard replace-by-fee. While FSS RBF doesn't make zeroconf any safer,
> it also doesn't make it any more dangerous, so politically with regard
> to zeroconf it makes no difference. You *can* still use it doublespend
> by taking advantage of how different transactions are accepted
> differently, but that's true of *every* change we've ever made to
> Bitcoin Core - by upgrading to v0.10 from v0.9 you've also "broken"
> zeroconf in the same way.
>
>
> Having said that... honestly, zeroconf is pretty broken already. Only
> with pretty heroic measures like connecting to a significant fraction of
> the Bitcoin network at once, as well as connecting to getblocktemplate
> supporting miners to figure out what transactions are being mined, are
> services having any hope of avoiding getting ripped off. For the average
> user their wallets do a terrible job of showing whether or not an
> unconfirmed transaction will go through. For example, Schildbach's
> Bitcoin wallet for Android has no code at all to detect double-spends
> until they get mined, and I've been able to trick it into showing
> completely invalid transactions. In fact, currently Bitcoin XT will
> relay invalid transactions that are doublepsends, and Schildbach's
> wallet displays them as valid, unconfirmed, payments. It's really no
> surprise to me that nearly no-one in the Bitcoin ecosystem accepts
> unconfirmed transactions without some kind of protection that doesn't
> rely on first-seen-safe mempool behavior. For instance, many ATM's these
> days know who their customers are due to AML requirements, so while you
> can deposit Bitcoins and get your funds instantly, the protection for
> the ATM operator is that they can go to the police if you rip them off;
> I've spoken to ATM operators who didn't do this who've lost hundreds or
> even thousands of dollars before giving up on zeroconf.
>
> My big worry with zeroconf is a service like Coinbase or Shapeshift
> coming to rely on it, and then attempting to secure it by gaining
> control of a majority of hashing power. For instance, if Coinbase had
> contracts with 80% of the Bitcoin hashing power to guarantee their
> transactions would get mined, but 20% of the hashing power didn't sign
> up, then the only way to guarantee their transactions could be for the
> 80% to not build on blocks containing doublespends by the 20%. There's
> no way in a decentralized network to come to consensus about what
> transactions are or are not valid without mining itself, so you could
> end up in a situation where unless you're part of one of the big pools
> you can't reliably mine at all because your blocks may get rejected for
> containing doublespends.
>
> One of my goal with standard replace-by-fee is to prevent this scenario
> by forcing merchants and others to implement ways of accepting zeroconf
> transactions safely that work in a decentralized environment regardless
> of what miners do; we have a stronger and safer Bitcoin ecosystem if
> we're relying on math rather than trust to secure our zeroconf
> transactions. We're also being more honest to users, who right now often
> have the very wrong impression that unconfirmed transactions are safe to
> accept - this does get people ripped off all too often!
>
>
> Anyway, sorry for the rant! FWIW I updated my FSS-RBF patch and am
> waiting to get some feedback:
>
>     https://github.com/bitcoin/bitcoin/pull/6176
>
> Suhas Daftuar did find a pretty serious bug in it, now fixed. I'm
> working on porting it to v0.10.2, and once that's done I'm going to put
> up a bounty for anyone who can find a DoS attack in the patch. If no-one
> claims the bounty after a week or two I think I'll start feeling
> confident about using it in production.
>
>
> --
> 'peter'[:-1]@petertodd.org
> 000000000000000003188926be14e5fbe2f8f9c63c9fb8e2ba4b14ab04f1c9ab
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From pete at petertodd.org  Fri Jun 19 13:52:46 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 19 Jun 2015 09:52:46 -0400
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CABsx9T1pnT=Tty3+tg+EUphLwQrWXf9EEwUOGuyNcdu=4wAqTg@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABsx9T1pnT=Tty3+tg+EUphLwQrWXf9EEwUOGuyNcdu=4wAqTg@mail.gmail.com>
Message-ID: <20150619135245.GB28875@savin.petertodd.org>

On Fri, Jun 19, 2015 at 09:33:03AM -0400, Gavin Andresen wrote:
> I just sent the following email to F2Pool:
> 
> 
> I was disappointed to see Peter Todd claiming that you have (or will?) run
> his replace-by-fee patch.
> 
> I strongly encourage you to wait until most wallet software supports
> replace-by-fee before doing that, because until that happens replace-by-fee
> just makes it easier to steal from bitcoin-accepting merchants.

Do you mean just full-RBF, or FSS-RBF as well?


Speaking of, could we get a confirmation that Coinbase is, or is not,
one of the merchant service providers trying to get hashing power
contracts with mining pools for guaranteed transaction acceptance? IIRC
you are still an advisor to them. This is a serious concern for the
reasons I outlined in my post.

Equally if anyone else from Coinbase would like to chime in that'd be
great.

-- 
'peter'[:-1]@petertodd.org
00000000000000000d7110f3a176228445ed710afd332291384992ed89c5c1a7
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/59a7a058/attachment.sig>

From adrian at coinbase.com  Fri Jun 19 14:00:56 2015
From: adrian at coinbase.com (Adrian Macneil)
Date: Fri, 19 Jun 2015 07:00:56 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <20150619135245.GB28875@savin.petertodd.org>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABsx9T1pnT=Tty3+tg+EUphLwQrWXf9EEwUOGuyNcdu=4wAqTg@mail.gmail.com>
	<20150619135245.GB28875@savin.petertodd.org>
Message-ID: <CAMK47c_kCgb6hEUf_JePAC_tBK8aCF1W4f1guiAah-Gj_cFfSw@mail.gmail.com>

>
> For instance, if Coinbase had
> contracts with 80% of the Bitcoin hashing power to guarantee their
> transactions would get mined, but 20% of the hashing power didn't sign
> up, then the only way to guarantee their transactions could be for the
> 80% to not build on blocks containing doublespends by the 20%.
>

This seems to be more of a problem with centralized mining than zeroconf
transactions.

Speaking of, could we get a confirmation that Coinbase is, or is not,
> one of the merchant service providers trying to get hashing power
> contracts with mining pools for guaranteed transaction acceptance? IIRC
> you are still an advisor to them. This is a serious concern for the
> reasons I outlined in my post.
>

We have no contracts in place or plans to do this that I am aware of.

However, we do rely pretty heavily on zeroconf transactions for merchant
processing, so if any significant portion of the mining pools started
running your unsafe RBF patch, then we would probably need to look into
this as a way to prevent fraud.

In the long term, I would love to see a safe, decentralized solution for
accepting zeroconf transactions. However, right now there is no such
solution supported by any wallets in use, and I don't think breaking the
current bitcoin behavior for everyone is the best way to achieve this.

Adrian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/f769ac6f/attachment.html>

From adrian at coinbase.com  Fri Jun 19 13:40:23 2015
From: adrian at coinbase.com (Adrian Macneil)
Date: Fri, 19 Jun 2015 06:40:23 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CABHVRKR7bXfDX0_frAv_Ph4Saz3SXwXeZae1DEokorvekPeinw@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABHVRKR7bXfDX0_frAv_Ph4Saz3SXwXeZae1DEokorvekPeinw@mail.gmail.com>
Message-ID: <CAMK47c-=zVgLOxFFJuM489CepGSmJJfqrLemnhcHbN-oC9Titw@mail.gmail.com>

Extremely disappointed to hear this. This change turns double spending from
a calculable (and affordable) risk for merchant payment processors into
certain profit for scammers, and provides no useful benefit for consumers.

I sincerely hope that F2Pool reconsider, given that RBF will decrease the
overall utility of bitcoin and reduce the number of people using it for
online purchases.

Adrian




On Fri, Jun 19, 2015 at 6:33 AM, Stephen Morse <stephencalebmorse at gmail.com>
wrote:

> It is disappointing that F2Pool would enable full RBF when the safe
> alternative, first-seen-safe RBF, is also available, especially since the
> fees they would gain by supporting full RBF over FSS RBF would likely be
> negligible. Did they consider using FSS RBF instead?
>
> Best,
> Stephen
>
> On Fri, Jun 19, 2015 at 6:39 AM, Peter Todd <pete at petertodd.org> wrote:
>
>> Yesterday F2Pool, currently the largest pool with 21% of the hashing
>> power, enabled full replace-by-fee (RBF) support after discussions with
>> me. This means that transactions that F2Pool has will be replaced if a
>> conflicting transaction pays a higher fee. There are no requirements for
>> the replacement transaction to pay addresses that were paid by the
>> previous transaction.
>>
>>
>> I'm a user. What does this mean for me?
>> ---------------------------------------
>>
>> In the short term, very little. Wallet software aimed at average users
>> has no ability to reliably detect conditions where an unconfirmed
>> transaction may be double-spent by the sender. For example, Schildbach's
>> Bitcoin Wallet for Android doesn't even detect double-spends of
>> unconfirmed transactions when connected to a RBF or Bitcoin XT nodes
>> that propagate them. The least sophisticated double-spend attack
>> possibly - simply broadcasting two conflicting transactions at the same
>> time - has about 50% probability of success against these wallets.
>>
>> Additionally, SPV wallets based on bitcoinj can't even detect invalid
>> transactions reliably, instead trusting the full node(s) it is connected
>> too over the unauthenticated, unencrypted, P2P protocol to do validation
>> for them. For instance due to a unfixed bug? Bitcoin XT nodes will relay
>> double-spends that spend the output of the conflicting transaction. I've
>> personally tested this with Schildbach's Bitcoin Wallet for Android,
>> which shows such invalid transactions as standard, unconfirmed,
>> transactions.
>>
>> Users should continue to assume that unconfirmed transactions could be
>> trivially reversed by the sender until the first confirmation. In
>> general, only the sender can reverse a transaction, so if you do trust
>> the sender feel free to assume an unconfirmed transaction will
>> eventually confirm. However, if you do not trust the sender and/or have
>> no other recourse if they double-spend you, wait until at least the
>> first confirmation before assuming the transaction will go through.
>>
>> In the long term, miner support of full RBF has a number of advantages
>> to users, allowing you to more efficiently make transactions, paying
>> lower fees. However you'll need a wallet supporting these features; none
>> exist yet.
>>
>>
>> I'm a business. What does this mean for me?
>> -------------------------------------------
>>
>> If you use your own node to verify transactions, you probably are in a
>> similar situation as average users, so again, this means very little to
>> you.
>>
>> If you use a payment processor/transaction API such as BitPay, Coinbase,
>> BlockCypher, etc. you may or may not be accepting unconfirmed
>> transactions, and they may or may not be "guaranteed" by your payment
>> processor even if double-spent. If like most merchants you're using the
>> API such that confirmations are required prior to accepting orders (e.g.
>> taking a meaningful loss such as shipping a product if the tx is
>> reversed) nothing changes for you. If not I recommend you contact your
>> payment processor.
>>
>>
>> I'm a miner. Why should I support replace-by-fee?
>> -------------------------------------------------
>>
>> Whether full or first-seen-safe? RBF support (along with
>> child-pays-for-parent) is an important step towards a fully functioning
>> transaction fee market that doesn't lead to users' transactions getting
>> mysteriously "stuck", particularly during network flooding
>> events/attacks. A better functioning fee market will help reduce
>> pressure to increase the blocksize, particularly from the users creating
>> the most valuable transactions.
>>
>> Full RBF also helps make use of the limited blockchain space more
>> efficiently, with up to 90%+ transaction size savings possible in some
>> transaction patterns. (e.g. long payment chains?) More users in less
>> blockchain space will lead to higher overall fees per block.
>>
>> Finally as we'll discuss below full RBF prevents a number of serious
>> threats to the existing level playing field that miners operate in.
>>
>>
>> Why can't we make accepting unconfirmed txs from untrusted people safe?
>> -----------------------------------------------------------------------
>>
>> For a decentralized wallet, the situation is pretty bleak. These wallets
>> only have a handful of connections to the network, with no way of
>> knowing if those connections give an accurate view of what transactions
>> miners actually know about.
>>
>> The only serious attempt to fix this problem for decentralized wallets
>> that has been actually deployed is Andresen/Harding's double-spend
>> relaying, implemented in Bitcoin XT. It relays up to one double-spend
>> transaction per double-spent txout, with the intended effect to warn
>> recipients. In practice however this functionality makes it easier to
>> double-spend rather than harder, by giving an efficient and easy way to
>> get double-spends to miners after the fact. Notably my RBF
>> implementation even connects to Bitcoin XT nodes, reserving a % of all
>> incoming and outgoing connection slots for them.
>>
>> Additionally Bitcoin XT's double-spend relaying is subject to attacks
>> include bandwidth exhaustion, sybil attacks, and Gervais's non-sybil
>> interactive attacks? among many others.
>>
>>
>> What about centralised wallets?
>> -------------------------------
>>
>> Here the solutions being deployed, planned, and proposed are harmful,
>> and even represent serious threats to Bitcoin's decentralization.
>>
>>
>> Confidence factors
>> ------------------
>>
>> Many services such as BlockCypher? have attempted to predict the
>> probability that unconfirmed transactions will be mined, often
>> guaranteeing merchants payment? even in the event of a double-spend. The
>> key component of these predictions is to sybil attack the P2P network as
>> a whole, connecting to as many nodes as possible to measure transaction
>> propagation. Additionally these services connect to pools directly via
>> the getblocktemplate protocol, repeatedly downloading via GBT the lists
>> of transactions in the to-be-mined blocks to determine what transactions
>> miners are attempting to mine.
>>
>> None of these measures scale, wasting significant network and miner
>> resources; in one instance a sybil attack by Chainalysis even completely
>> blocked the users of the SPV wallet Breadwallet? from accessing the
>> network. These measures also don't work very well, giving double-spend
>> attackers incentives to sybil attack miners themselves.
>>
>>
>> Transaction processing contracts with miners
>> --------------------------------------------
>>
>> The next step after measuring propagation fails is to contract with
>> miners directly, signing contracts with as much of the hashing power as
>> possible to get the transactions they want mined and double-spends
>> rejected. The miners/pools would then provide an authenticated API
>> endpoint for exclusive use of this service that would allow the service
>> to add and remove specific transactions to the mempool on demand.
>>
>> There's a number of serious problems with this:
>>
>> 1) Mining contracts can be used to double-spend
>>
>> ...even when they're being used "honestly".
>>
>> Suppose Alice is a merchant using CoinPayCypher, who has contracts with
>> 75% of the hashing power. Bob, another merchant, meanwhile uses a
>> decentralized Bitcoin Core backend for payments to his website.
>>
>> Mallory wants to double-spend Bob's to buy his expensive products. He
>> can do this by creating a transaction, tx1, that pays Alice, followed by
>> a second transaction, tx2, that pays Bob. In any circumstance when
>> Mallory can convince Bob to accept tx2, but prevent Bob from seeing tx1,
>> the chance of Malory's double-spend succeeding becomes ~75% because
>> CoinPayCypher's contracts with mining ensure the transaction paying
>> Alice will get mined.
>>
>> Of course, dishonest use and/or compromise makes double-spending
>> trivial: Malory can use the API credentials to ask miners to reject
>> Bob's payment at any time.
>>
>>
>> 2) They still don't work, without 51% attacking other miners
>>
>> Even if CoinPayCypher has 75% of the hashing power on contract, that's
>> still a potentially 75% chance of being double-spent. The 25% of miners
>> who haven't signed contracts have no _decentralized_ way of ensuring
>> they don't create blocks with double-spends, let alone at low cost. If
>> those miners won't or can't sign contracts with CoinPayCypher the only
>> next step available is to reject their blocks entirely.
>>
>>
>> 3) Legal contracts give the advantage to non-anonymous miners in
>>    Western jurisdictions
>>
>> Suppose CoinPayCypher is a US company, and you're a miner with 1%
>> hashing power located in northern China. The barriers to you succesfully
>> negotiating a contract with CoinPayCypher are significant. You don't
>> speak the same langauge, you're in a completely different jurisdiction
>> so enforcing the legal contract is difficult, and being just 1%,
>> CoinPayCypher sees you as insignificant.
>>
>> Who's going to get the profitable hashing power contracts first, if at
>> all? Your English speaking competitors in the west. This is inherently a
>> pressure towards centralization of mining.
>>
>>
>> Why isn't this being announced on the bitcoin-security list first?
>> ------------------------------------------------------------------
>>
>> I've had repeated discussions with services vulnerable to double-spends;
>> they have been made well aware of the risk they're taking. If they've
>> followed my own and others' advice they'll at minimum have constant
>> monitoring of the rate of double-spends both on their own services and
>> on the P2P network in general.
>>
>> If you choose to take a risk you should accept the consequences.
>>
>>
>> How do I actually use full RBF?
>> -------------------------------
>>
>> First get the full-RBF patch to v0.10.2:
>>
>>     https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.10.2
>>
>> The above implementation of RBF includes additional code to find and
>> preferentially connect to other RBF nodes, as well as Bitcoin XT nodes.
>> Secondly, try out my replace-by-fee-tools at:
>>
>>     https://github.com/petertodd/replace-by-fee-tools
>>
>> You can watch double-spends on the network here:
>>
>>     http://respends.thinlink.com/
>>
>>
>> References
>> ----------
>>
>> 1) "Replace-by-fee v0.10.2 - Serious DoS attack fixed! - Also novel
>>     variants of existing attacks w/ Bitcoin XT and Android Bitcoin
>> Wallet",
>>    Peter Todd, May 23rd 2015, Bitcoin-development mailing list,
>>
>> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07795.html
>>
>> 2) "From Zero to Hero: Bitcoin Transactions in 8 Seconds",
>>    June 2nd, 2014, Erik Voorhees,
>>
>> https://medium.com/blockcypher-blog/from-zero-to-hero-bitcoin-transactions-in-8-seconds-7c9edcb3b734
>>
>> 3) Coinbase Merchant API, Accessed Jun 19th 2015,
>>    https://developers.coinbase.com/docs/merchants/callbacks#confirmations
>>
>> 4) "Chainalysis CEO Denies 'Sybil Attack' on Bitcoin's Network",
>>    March 14th 2015, Grace Caffyn, Coindesk,
>>
>> http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-on-bitcoin-network/
>>
>> 5) "First-Seen-Safe Replace-by-Fee",
>>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,
>>
>> http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07829.html
>>
>> 6) "Cost savings by using replace-by-fee, 30-90%",
>>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,
>>
>> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07813.html
>>
>> 7) "Tampering with the Delivery of Blocks and Transactions in Bitcoin",
>>     Arthur Gervais and Hubert Ritzdorf and Ghassan O. Karame and Srdjan
>> Capkun,
>>     Cryptology ePrint Archive: Report 2015/578, Jun 10th 2015,
>>     http://eprint.iacr.org/2015/578
>>
>> --
>> 'peter'[:-1]@petertodd.org
>> 0000000000000000070a2bb3b92c20d5c2c971e6e1a7abe55cdbbe6a2dd9a5ad
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/54877f1f/attachment.html>

From pete at petertodd.org  Fri Jun 19 14:08:15 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 19 Jun 2015 10:08:15 -0400
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CAMK47c_kCgb6hEUf_JePAC_tBK8aCF1W4f1guiAah-Gj_cFfSw@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABsx9T1pnT=Tty3+tg+EUphLwQrWXf9EEwUOGuyNcdu=4wAqTg@mail.gmail.com>
	<20150619135245.GB28875@savin.petertodd.org>
	<CAMK47c_kCgb6hEUf_JePAC_tBK8aCF1W4f1guiAah-Gj_cFfSw@mail.gmail.com>
Message-ID: <20150619140815.GA32470@savin.petertodd.org>

On Fri, Jun 19, 2015 at 07:00:56AM -0700, Adrian Macneil wrote:
> >
> > For instance, if Coinbase had
> > contracts with 80% of the Bitcoin hashing power to guarantee their
> > transactions would get mined, but 20% of the hashing power didn't sign
> > up, then the only way to guarantee their transactions could be for the
> > 80% to not build on blocks containing doublespends by the 20%.
> >
> 
> This seems to be more of a problem with centralized mining than zeroconf
> transactions.

You're mistaking cause and effect: the contracts will drive
centralization of mining, as only the larger, non-anonymous, players
have the ability to enter into such contracts.

> Speaking of, could we get a confirmation that Coinbase is, or is not,
> > one of the merchant service providers trying to get hashing power
> > contracts with mining pools for guaranteed transaction acceptance? IIRC
> > you are still an advisor to them. This is a serious concern for the
> > reasons I outlined in my post.
> >
> 
> We have no contracts in place or plans to do this that I am aware of.
> 
> However, we do rely pretty heavily on zeroconf transactions for merchant
> processing, so if any significant portion of the mining pools started
> running your unsafe RBF patch, then we would probably need to look into
> this as a way to prevent fraud.

What happens if the mining pools who are mining double-spends aren't
doing it delibrately? Sybil attacking pools appears to have been done
before to get double-spends though, equally there are many other changes
the reduce the reliability of transaction confirmations. For instance
the higher demands on bandwidth of a higher blocksize will inevitably
reduce the syncronicity of mempools, resulting in double-spend
opportunities. Similarly many proposals to limit mempool size allow
zeroconf double-spends.

In that case would you enter into such contracts?

-- 
'peter'[:-1]@petertodd.org
000000000000000005a4c76d0bf088ef3e059914d6fc0335683a92b5be01b7dc
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/7536be71/attachment.sig>

From lawrence at greenaddress.it  Fri Jun 19 14:16:23 2015
From: lawrence at greenaddress.it (Lawrence Nahum)
Date: Fri, 19 Jun 2015 14:16:23 +0000 (UTC)
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABHVRKR7bXfDX0_frAv_Ph4Saz3SXwXeZae1DEokorvekPeinw@mail.gmail.com>
	<CAFzgq-wgHAdPnW5omvcP6OfYbCAh3op+mAYtuzwk188AOZr2QA@mail.gmail.com>
Message-ID: <loom.20150619T155400-734@post.gmane.org>

Chun Wang <1240902 <at> gmail.com> writes:

> Hello. We recognize the problem. We will switch to FSS RBF soon. Thanks.

FSS RBF is better than no RBF but we think it is better to use full RBF.

We think Full RBF is better for a number of reasons:

-user experience
-efficiency
-cost
-code complexity

We think FSS RBF is  great progress but ultimately less efficient and more 
complicated to keep alive something that never worked properly.

And why would miner pick the option paying less when other miners run the 
option paying more? It may be soon more than 1-5% of block reward.

A lot of users don't have multiple UTXO handy.

Full RBF is the best, second FSS RBF and we'd be looking into supporting 
them both separately so that miners and users can pick whichever they 
prefer.

If users only had one UTXO it makes sense to use Full RBF since there are no 
other options.

Disclosure: GreenAddress always believed zero conf transactions are not 
secure and that miners have the incentive to run FBF; this bias doesn't make 
the above less true 





From adrian at coinbase.com  Fri Jun 19 14:30:17 2015
From: adrian at coinbase.com (Adrian Macneil)
Date: Fri, 19 Jun 2015 07:30:17 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <20150619140815.GA32470@savin.petertodd.org>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABsx9T1pnT=Tty3+tg+EUphLwQrWXf9EEwUOGuyNcdu=4wAqTg@mail.gmail.com>
	<20150619135245.GB28875@savin.petertodd.org>
	<CAMK47c_kCgb6hEUf_JePAC_tBK8aCF1W4f1guiAah-Gj_cFfSw@mail.gmail.com>
	<20150619140815.GA32470@savin.petertodd.org>
Message-ID: <CAMK47c9NhX2gzCioTycEPXqyYeKRM9XgXuW9MGyj=OdGsKVbFg@mail.gmail.com>

>
> > We have no contracts in place or plans to do this that I am aware of.
> >
> > However, we do rely pretty heavily on zeroconf transactions for merchant
> > processing, so if any significant portion of the mining pools started
> > running your unsafe RBF patch, then we would probably need to look into
> > this as a way to prevent fraud.
>
> What happens if the mining pools who are mining double-spends aren't
> doing it delibrately? Sybil attacking pools appears to have been done
> before to get double-spends though, equally there are many other changes
> the reduce the reliability of transaction confirmations. For instance
> the higher demands on bandwidth of a higher blocksize will inevitably
> reduce the syncronicity of mempools, resulting in double-spend
> opportunities. Similarly many proposals to limit mempool size allow
> zeroconf double-spends.
>
> In that case would you enter into such contracts?
>

We take it as it comes.

Currently, it's perfectly possible to accept zeroconf transactions with
only a very small chance of double spend. As long as it's only possible to
double spend a small fraction of the time, it's an acceptable cost to us in
exchange for being able to provide a fast checkout experience to customers
and merchants.

If the status quo changes, then we will need to investigate alternatives
(which realistically would include mining contracts, or only accepting
instant payments from other trusted hosted wallets, which would be a net
loss for decentralization).

Long term we would prefer to see an open, decentralized solution, such as
payment channels / green addresses / lightening networks. However, I think
as a community we are a long way away from choosing a standard here and
implementing it across all popular wallet software and merchant processors.

Adrian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/e0ee9118/attachment.html>

From 1240902 at gmail.com  Fri Jun 19 14:40:59 2015
From: 1240902 at gmail.com (Chun Wang)
Date: Fri, 19 Jun 2015 22:40:59 +0800
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CAMK47c_kCgb6hEUf_JePAC_tBK8aCF1W4f1guiAah-Gj_cFfSw@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABsx9T1pnT=Tty3+tg+EUphLwQrWXf9EEwUOGuyNcdu=4wAqTg@mail.gmail.com>
	<20150619135245.GB28875@savin.petertodd.org>
	<CAMK47c_kCgb6hEUf_JePAC_tBK8aCF1W4f1guiAah-Gj_cFfSw@mail.gmail.com>
Message-ID: <CAFzgq-wS6-grST9NL63zKQSpjw9GgJydZGAELV_=ToLS54k5Ug@mail.gmail.com>

On Fri, Jun 19, 2015 at 10:00 PM, Adrian Macneil <adrian at coinbase.com> wrote:
> However, we do rely pretty heavily on zeroconf transactions for merchant
> processing, so if any significant portion of the mining pools started
> running your unsafe RBF patch, then we would probably need to look into this
> as a way to prevent fraud.

This might be useful to you: https://www.f2pool.com/api/mempool



From pete at petertodd.org  Fri Jun 19 14:59:41 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 19 Jun 2015 10:59:41 -0400
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CAMK47c9NhX2gzCioTycEPXqyYeKRM9XgXuW9MGyj=OdGsKVbFg@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABsx9T1pnT=Tty3+tg+EUphLwQrWXf9EEwUOGuyNcdu=4wAqTg@mail.gmail.com>
	<20150619135245.GB28875@savin.petertodd.org>
	<CAMK47c_kCgb6hEUf_JePAC_tBK8aCF1W4f1guiAah-Gj_cFfSw@mail.gmail.com>
	<20150619140815.GA32470@savin.petertodd.org>
	<CAMK47c9NhX2gzCioTycEPXqyYeKRM9XgXuW9MGyj=OdGsKVbFg@mail.gmail.com>
Message-ID: <20150619145940.GB5695@savin.petertodd.org>

On Fri, Jun 19, 2015 at 07:30:17AM -0700, Adrian Macneil wrote:
> > In that case would you enter into such contracts?
> >
> 
> We take it as it comes.
> 
> Currently, it's perfectly possible to accept zeroconf transactions with
> only a very small chance of double spend. As long as it's only possible to
> double spend a small fraction of the time, it's an acceptable cost to us in
> exchange for being able to provide a fast checkout experience to customers
> and merchants.

Unless you're sybil attacking the network and miners, consuming valuable
resources and creating systemic risks of failure like we saw with
Chainalysis, I don't see how you're getting "very small" double-spend
probabilities.

You realise how the fact that F2Pool is using full-RBF right now does
strongly suggest that the chances of a double-spend are not only low,
but more importantly, vary greatly? Any small change in relaying policy
or even network conditions creates opportunities to double-spend.

> If the status quo changes, then we will need to investigate alternatives
> (which realistically would include mining contracts, or only accepting
> instant payments from other trusted hosted wallets, which would be a net
> loss for decentralization).

You know, you're creating an interesting bit of game theory here: if I'm
a miner who doesn't already have a mining contract, why not implement
full-RBF to force Coinbase to offer me one? One reason might be because
other miners with such a contract - a majority - are going to be asked
by Coinbase to reorg you out of the blockchain, but then we have a
situation where a single entity has control of the blockchain.

For the good of Bitcoin, and your own company, you'd do well to firmly
state that under no condition will Coinbase ever enter into mining
contracts.

-- 
'peter'[:-1]@petertodd.org
00000000000000000fe727215265d9ddacb2930ad2d45920b71920b7aed687f1
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/8c3576b9/attachment.sig>

From justusranvier at riseup.net  Fri Jun 19 15:00:57 2015
From: justusranvier at riseup.net (justusranvier at riseup.net)
Date: Fri, 19 Jun 2015 15:00:57 +0000
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <20150619103959.GA32315@savin.petertodd.org>
References: <20150619103959.GA32315@savin.petertodd.org>
Message-ID: <c2a392703d02e1d674a029c60deb6d94@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

On 2015-06-19 10:39, Peter Todd wrote:

     Yesterday F2Pool, currently the largest pool with 21% of the hashing
     power, enabled full replace-by-fee (RBF) support after discussions 
with
     me. This means that transactions that F2Pool has will be replaced if 
a
     conflicting transaction pays a higher fee. There are no requirements 
for
     the replacement transaction to pay addresses that were paid by the
     previous transaction.


Intentional fraud is a bad thing to add to a financial protocol.

A user who creates conflicting transactions, one that pays someone else 
and another which does not pay them, and broadcasts both of them, has 
just self-incriminated themselves by producing prima facie evidence of 
fraud.

It may be the case that since Bitcoin spans multiple legal jurisdictions 
and can be use anonymously that the victims of such fraud can not rely 
on legal recourse, and it may also be the case that proof of work is how 
Bitcoin deals with the aforementioned factors, but regardless 
un-prosecutable fraud is still fraud and anyone who encourages it should 
be recognied as a bad actors.

Committing vandalism and encouraging fraud to prove a point may be 
something the network can't stop on a technical level, but there's no 
reason not to call it out for what it is.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCgAGBQJVhCsXAAoJECpf2nDq2eYjA08P/ApDFcIGws55TsgDFxPhDpN+
Iq9a06mPbXVjUfRxP5ZwmJuiM+XzHQ4QL3C2BH0OETatIV+bh7GP2mGHPcUAISYt
1j4TKhurnC+mqN+YAsiI5hQsws8DvPYXBTYYn0savaJTbq6/Q77+xvfRgNxofcPW
EHpnl/5wcmYGgp3mVyStGJ+qIP17yywzCLnSA3WEPaZG/9/FPrIq3Ptw2+RHod79
nzDiFBiKLK8E5NPbdbXS+gkjkkBA/QeCzZObpMOeWMriu/PIifVi8KssLSznnEwx
r7hiv6ISW47BTzkRbjxmXmGep3wfl8MjH7BZq3g0uyiApMdmjohIJ2lyuvOXdh7s
47+4r2xA8gG+z0aQTmCx5TS75T0Hnj3I78ZtCVr31Ip2OLbNI1mQ2gPR2zaoZkUZ
atp2XCssHDlY2s30k5hAnIHxuN6CkyGkZCECSuv46Z3ok6ll/nIP80qB7BBzVlP1
xfSOPZh57J31U8PxZBZcwgdRg+HBiExvg484grE+h18izxcrjNfPRSWP4+7nEZtK
LN7JL7YcmhVfhqKTSd6+C4bD2LsKsrcMiUhH1xHkD/hzAxc7egL6lgYTHJjU+yPu
BTIh0VHJxBgroHB45Vq6loa4B3l4ZCl4Ykw8Opm7NJIfueJ0l0ySyJXi6ix4bjVf
ZRF0Ot9RP0M0fHEwOpT6
=s0w/
-----END PGP SIGNATURE-----




From pete at petertodd.org  Fri Jun 19 15:11:27 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 19 Jun 2015 11:11:27 -0400
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <c2a392703d02e1d674a029c60deb6d94@riseup.net>
References: <20150619103959.GA32315@savin.petertodd.org>
	<c2a392703d02e1d674a029c60deb6d94@riseup.net>
Message-ID: <20150619151127.GA11263@savin.petertodd.org>

On Fri, Jun 19, 2015 at 03:00:57PM +0000, justusranvier at riseup.net wrote:
> On 2015-06-19 10:39, Peter Todd wrote:
> 
>      Yesterday F2Pool, currently the largest pool with 21% of the hashing
>      power, enabled full replace-by-fee (RBF) support after discussions 
> with
>      me. This means that transactions that F2Pool has will be replaced if 
> a
>      conflicting transaction pays a higher fee. There are no requirements 
> for
>      the replacement transaction to pay addresses that were paid by the
>      previous transaction.
> 
> 
> Intentional fraud is a bad thing to add to a financial protocol.
> 
> A user who creates conflicting transactions, one that pays someone else 
> and another which does not pay them, and broadcasts both of them, has 
> just self-incriminated themselves by producing prima facie evidence of 
> fraud.

Depends.

If you ask me to pay you 1BTC at address A and I create tx1 that pays
1BTC to A1 and 2BTC of chain to C, what's wrong with me creating tx2
that still pays 1BTC to A, but now only pays 1.999BTC to C? I'm not
defrauding you, I'm just reducing the value of my change address to pay
a higher fee. Similarly if I now need to pay Bob 0.5BTC, I can create
tx3 paying 1BTC to A, 0.5BTC to B, and 1.498BTC to C.

Yet from the point of view of an external observer they have no idea why
the transaction outputs reduced in size, nor any way of knowing if fraud
did or did not occur.

Equally, maybe you tell me "Actually, just give me 0.5BTC to cancel out
that debt", in which case I'm not breaking any contract at all by giving
you less money than I first promised - the contract has changed.

Again, none of this can or should be observable to anyone other than the
parties directly involved.

> It may be the case that since Bitcoin spans multiple legal jurisdictions 
> and can be use anonymously that the victims of such fraud can not rely 
> on legal recourse, and it may also be the case that proof of work is how 
> Bitcoin deals with the aforementioned factors, but regardless 
> un-prosecutable fraud is still fraud and anyone who encourages it should 
> be recognied as a bad actors.
> 
> Committing vandalism and encouraging fraud to prove a point may be 
> something the network can't stop on a technical level, but there's no 
> reason not to call it out for what it is.

What do you think of Bitcoin XT then? It relays double-spends, which
makes it much easier to get double-spends to miners than before. In
particular you see a lot of zero-fee transactions being replaced by
fee-paying transactions, relayed through Bitcoin XT nodes and then
mined. Is that encouraging fraud?

-- 
'peter'[:-1]@petertodd.org
000000000000000003932458055c68d4ee2b6d68441c4764efbdf6b0b1683717
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/8664ea09/attachment.sig>

From adrian at coinbase.com  Fri Jun 19 15:20:52 2015
From: adrian at coinbase.com (Adrian Macneil)
Date: Fri, 19 Jun 2015 08:20:52 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <20150619145940.GB5695@savin.petertodd.org>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABsx9T1pnT=Tty3+tg+EUphLwQrWXf9EEwUOGuyNcdu=4wAqTg@mail.gmail.com>
	<20150619135245.GB28875@savin.petertodd.org>
	<CAMK47c_kCgb6hEUf_JePAC_tBK8aCF1W4f1guiAah-Gj_cFfSw@mail.gmail.com>
	<20150619140815.GA32470@savin.petertodd.org>
	<CAMK47c9NhX2gzCioTycEPXqyYeKRM9XgXuW9MGyj=OdGsKVbFg@mail.gmail.com>
	<20150619145940.GB5695@savin.petertodd.org>
Message-ID: <CAMK47c8Mc8v2C4aG=7GdAQ7ZCR2qXhfq-dktNS7bDa00RdKThw@mail.gmail.com>

>
> Unless you're sybil attacking the network and miners, consuming valuable
> resources and creating systemic risks of failure like we saw with
> Chainalysis, I don't see how you're getting "very small" double-spend
> probabilities.
>

So connecting to many nodes just because we can and it's not technically
prevented is bad for the network and creating systemic risks of failure,
but relaying harmful double spend transactions just because you can and
it's not technically prevented, is good for everyone?


> You know, you're creating an interesting bit of game theory here: if I'm
> a miner who doesn't already have a mining contract, why not implement
> full-RBF to force Coinbase to offer me one? One reason might be because
> other miners with such a contract - a majority - are going to be asked
> by Coinbase to reorg you out of the blockchain, but then we have a
> situation where a single entity has control of the blockchain.
>

If someone did enter into contracts with miners to mine certain
transactions, and had a guarantee that the miners would not build on
previous blocks which included double spends, then they would only need
contracts with 51% of the network anyway. So it wouldn't really matter if
you were a small time miner and wanted to run full-RBF.


> For the good of Bitcoin, and your own company, you'd do well to firmly
> state that under no condition will Coinbase ever enter into mining
> contracts.
>

I don't personally see what good this does for bitcoin. Now you are
suggesting that we should prevent a 51% attack by using policy and
promises, rather than a technical solution. How is this any better than us
relying on existing double spend rules which are based on policy and
promises?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/ad6b6736/attachment.html>

From adrian at coinbase.com  Fri Jun 19 15:22:28 2015
From: adrian at coinbase.com (Adrian Macneil)
Date: Fri, 19 Jun 2015 08:22:28 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CAFzgq-wS6-grST9NL63zKQSpjw9GgJydZGAELV_=ToLS54k5Ug@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABsx9T1pnT=Tty3+tg+EUphLwQrWXf9EEwUOGuyNcdu=4wAqTg@mail.gmail.com>
	<20150619135245.GB28875@savin.petertodd.org>
	<CAMK47c_kCgb6hEUf_JePAC_tBK8aCF1W4f1guiAah-Gj_cFfSw@mail.gmail.com>
	<CAFzgq-wS6-grST9NL63zKQSpjw9GgJydZGAELV_=ToLS54k5Ug@mail.gmail.com>
Message-ID: <CAMK47c-R2TM=Fg-5doL=paZKTydgut91=e0w1LBXModQWQQ2jw@mail.gmail.com>

Great. Thank you for this!

Adrian

On Fri, Jun 19, 2015 at 7:40 AM, Chun Wang <1240902 at gmail.com> wrote:

> On Fri, Jun 19, 2015 at 10:00 PM, Adrian Macneil <adrian at coinbase.com>
> wrote:
> > However, we do rely pretty heavily on zeroconf transactions for merchant
> > processing, so if any significant portion of the mining pools started
> > running your unsafe RBF patch, then we would probably need to look into
> this
> > as a way to prevent fraud.
>
> This might be useful to you: https://www.f2pool.com/api/mempool
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/d962d207/attachment.html>

From elombrozo at gmail.com  Fri Jun 19 15:37:10 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Fri, 19 Jun 2015 08:37:10 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <20150619151127.GA11263@savin.petertodd.org>
References: <20150619103959.GA32315@savin.petertodd.org>
	<c2a392703d02e1d674a029c60deb6d94@riseup.net>
	<20150619151127.GA11263@savin.petertodd.org>
Message-ID: <04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>

OK, a few things here:

The Bitcoin network was designed (or should be designed) with the requirement that it can withstand deliberate double-spend attacks that can come from anywhere at any time?and relaxing this assumption without adequately assessing the risk (i.e. I?ve never been hacked before so I can assume it?s safe) is extremely dangerous at best and just horrid security practice at worst. Your users might not thank you for not getting hacked - but they surely will not like it when you DO get hacked?and lack a proper recovery plan.

Furthermore, the protocol itself makes no assumptions regarding the intentions behind someone signing two conflicting transactions. There are many potential use cases where doing so could make a lot of sense. Had the protocol been designed along the lines of, say, tendermint?where signing multiple conflicting blocks results in loss of one?s funds?then the protocol itself disincentivizes the behavior without requiring any sort of altruistic, moralistic assumptions. That would also mean we?d need a different mechanism for the use cases that things like RBF address.

Thirdly, taken to the extreme, the viewpoint of ?signing a conflicting transaction is fraud and vandalism? means that if for whatever reason you attempt to propagate a transaction and nobody mines it for a very long time, you?re not entitled to immediately reclaim those funds?they must remain in limbo forever.


- Eric Lombrozo


> On Jun 19, 2015, at 8:11 AM, Peter Todd <pete at petertodd.org> wrote:
> 
> On Fri, Jun 19, 2015 at 03:00:57PM +0000, justusranvier at riseup.net wrote:
>> On 2015-06-19 10:39, Peter Todd wrote:
>> 
>>     Yesterday F2Pool, currently the largest pool with 21% of the hashing
>>     power, enabled full replace-by-fee (RBF) support after discussions
>> with
>>     me. This means that transactions that F2Pool has will be replaced if
>> a
>>     conflicting transaction pays a higher fee. There are no requirements
>> for
>>     the replacement transaction to pay addresses that were paid by the
>>     previous transaction.
>> 
>> 
>> Intentional fraud is a bad thing to add to a financial protocol.
>> 
>> A user who creates conflicting transactions, one that pays someone else
>> and another which does not pay them, and broadcasts both of them, has
>> just self-incriminated themselves by producing prima facie evidence of
>> fraud.
> 
> Depends.
> 
> If you ask me to pay you 1BTC at address A and I create tx1 that pays
> 1BTC to A1 and 2BTC of chain to C, what's wrong with me creating tx2
> that still pays 1BTC to A, but now only pays 1.999BTC to C? I'm not
> defrauding you, I'm just reducing the value of my change address to pay
> a higher fee. Similarly if I now need to pay Bob 0.5BTC, I can create
> tx3 paying 1BTC to A, 0.5BTC to B, and 1.498BTC to C.
> 
> Yet from the point of view of an external observer they have no idea why
> the transaction outputs reduced in size, nor any way of knowing if fraud
> did or did not occur.
> 
> Equally, maybe you tell me "Actually, just give me 0.5BTC to cancel out
> that debt", in which case I'm not breaking any contract at all by giving
> you less money than I first promised - the contract has changed.
> 
> Again, none of this can or should be observable to anyone other than the
> parties directly involved.
> 
>> It may be the case that since Bitcoin spans multiple legal jurisdictions
>> and can be use anonymously that the victims of such fraud can not rely
>> on legal recourse, and it may also be the case that proof of work is how
>> Bitcoin deals with the aforementioned factors, but regardless
>> un-prosecutable fraud is still fraud and anyone who encourages it should
>> be recognied as a bad actors.
>> 
>> Committing vandalism and encouraging fraud to prove a point may be
>> something the network can't stop on a technical level, but there's no
>> reason not to call it out for what it is.
> 
> What do you think of Bitcoin XT then? It relays double-spends, which
> makes it much easier to get double-spends to miners than before. In
> particular you see a lot of zero-fee transactions being replaced by
> fee-paying transactions, relayed through Bitcoin XT nodes and then
> mined. Is that encouraging fraud?
> 
> --
> 'peter'[:-1]@petertodd.org
> 000000000000000003932458055c68d4ee2b6d68441c4764efbdf6b0b1683717
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/7b6748ec/attachment.sig>

From justusranvier at riseup.net  Fri Jun 19 15:39:15 2015
From: justusranvier at riseup.net (justusranvier at riseup.net)
Date: Fri, 19 Jun 2015 15:39:15 +0000
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <20150619151127.GA11263@savin.petertodd.org>
References: <20150619103959.GA32315@savin.petertodd.org>
	<c2a392703d02e1d674a029c60deb6d94@riseup.net>
	<20150619151127.GA11263@savin.petertodd.org>
Message-ID: <47d8e5c4a1d55a1763f1aade1993fece@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

On 2015-06-19 15:11, Peter Todd wrote:
> If you ask me to pay you 1BTC at address A and I create tx1 that pays
> 1BTC to A1 and 2BTC of chain to C, what's wrong with me creating tx2
> that still pays 1BTC to A, but now only pays 1.999BTC to C? I'm not
> defrauding you, I'm just reducing the value of my change address to pay
> a higher fee. Similarly if I now need to pay Bob 0.5BTC, I can create
> tx3 paying 1BTC to A, 0.5BTC to B, and 1.498BTC to C.
> 
> Yet from the point of view of an external observer they have no idea 
> why
> the transaction outputs reduced in size, nor any way of knowing if 
> fraud
> did or did not occur.

If there are two transactions which spend the same inputs, and each 
transaction has completely different output scripts, then this is prima 
facie fraudulent. https://en.wikipedia.org/wiki/Prima_facie

If the two transactions have identical output scripts, and one output is 
reduced in value to increase the transaction fee, that has the 
appearance of honest dealing. There is a possibility that the payer has 
chose to under-pay their payee in order to over-pay the miner, but 
that's not what a reasonable observer would assume at first glance.

Adding outputs to a transaction, while keeping all the existing outputs 
exactly how they are is another way of increasing the transaction fee of 
a transaction and is prima facie non-fraudulent.

Note that child-pays-for-parent has none of this ambiguity.

> What do you think of Bitcoin XT then? It relays double-spends, which
> makes it much easier to get double-spends to miners than before. In
> particular you see a lot of zero-fee transactions being replaced by
> fee-paying transactions, relayed through Bitcoin XT nodes and then
> mined. Is that encouraging fraud?

I haven't closely looked into the features of Bitcoin XT because I'm 
hoping that it never becomes relevant. I do want to see a heterogenous 
implementation network develop, but Bitcoin XT doesn't really count 
since it's a derivative of the Bitcoin Core codebase.

In general, I think every signed Bitcoin transaction sent between 
different parties is part of a valid, enforceable contract (using common 
law definitions which predate any particular legal jurisdiction). 
Handling contracts and money is Serious Business and so the decision of 
how software should respond to double spends should not be made 
frivolously.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCgAGBQJVhDcpAAoJECpf2nDq2eYj23gP/ja9zqWZBoI/EfTJM0ZDVVY1
7lNwPJrAhO7oKQOKDrqhimA0TPRkoU0rCoYXSUEWn5X8ZIFlz9SQnGwXjIxt7PfG
yZTxF+vJbFCDifNcUlF7DRs07cavEFM9AOutYi8PyVg0LoV5+0VMhhWT4Kc5vnlZ
4Tw91r1lvtI9MCif+KFpida/PnPlhvIfjASEuaK+vYx3ro1ovSUesh558xZmCZ9A
Jfs+EwXBrxDO0zC0fatnaoRMkYQN7i/Dq1PFis7OHcZYBaQwgQTUoF8/wASvr8fQ
dPXJNzhgpYYXeu4IsYH/Of9HkEw+N+/0DEW07asJJ5OIgQmcyoGn+ph8QzrPqG5m
Rgb9BAmpqfCX+KrG6VDxU7xHLebwPhrPoYMIppvf77xhB2mV8c7Xky16Y/1tmxcH
NLOL/WQelNBqCvx2+6c9yDJsJoY12Z0n1tdbIfp3m65xcFzqHPFPtTpsNl0p/gX7
xOMSEUdSVyjvsJjXxWOG3B06+dVRqjS0Pr9ERjjviqx40XVpg4Q0b6y+LL0ZVweE
vs8ECN4y3vB7Qg2swYryVA7kNBh6GwCs7pMCh0DFw1mynGKndCKD+cPh8r3taP1u
8SlrKaD33schk4x70kxbtUzU+C7Yb5187Ct4U5kmsXhz1sypu4ebFPuWbJYG/Sjl
uEW4Vcn+HxlNI/rhxBw4
=odRL
-----END PGP SIGNATURE-----




From jgarzik at bitpay.com  Fri Jun 19 15:39:20 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Fri, 19 Jun 2015 08:39:20 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <20150619103959.GA32315@savin.petertodd.org>
References: <20150619103959.GA32315@savin.petertodd.org>
Message-ID: <CAJHLa0PHT6SPi9u4o59TMy1XTpqM+2QQYAD4YXg=izDU=vet6A@mail.gmail.com>

This is very disappointing.  "scorched earth" replace-by-fee implemented
first at a pool, without updating wallets and merchants, is very
anti-social and increases the ability to perform Finney attacks and
double-spends.

The community is progressing more towards a safer replace-by-fee model, as
indicated by the following code change:
https://github.com/bitcoin/bitcoin/pull/6176


On Fri, Jun 19, 2015 at 3:39 AM, Peter Todd <pete at petertodd.org> wrote:

> Yesterday F2Pool, currently the largest pool with 21% of the hashing
> power, enabled full replace-by-fee (RBF) support after discussions with
> me. This means that transactions that F2Pool has will be replaced if a
> conflicting transaction pays a higher fee. There are no requirements for
> the replacement transaction to pay addresses that were paid by the
> previous transaction.
>
>
> I'm a user. What does this mean for me?
> ---------------------------------------
>
> In the short term, very little. Wallet software aimed at average users
> has no ability to reliably detect conditions where an unconfirmed
> transaction may be double-spent by the sender. For example, Schildbach's
> Bitcoin Wallet for Android doesn't even detect double-spends of
> unconfirmed transactions when connected to a RBF or Bitcoin XT nodes
> that propagate them. The least sophisticated double-spend attack
> possibly - simply broadcasting two conflicting transactions at the same
> time - has about 50% probability of success against these wallets.
>
> Additionally, SPV wallets based on bitcoinj can't even detect invalid
> transactions reliably, instead trusting the full node(s) it is connected
> too over the unauthenticated, unencrypted, P2P protocol to do validation
> for them. For instance due to a unfixed bug? Bitcoin XT nodes will relay
> double-spends that spend the output of the conflicting transaction. I've
> personally tested this with Schildbach's Bitcoin Wallet for Android,
> which shows such invalid transactions as standard, unconfirmed,
> transactions.
>
> Users should continue to assume that unconfirmed transactions could be
> trivially reversed by the sender until the first confirmation. In
> general, only the sender can reverse a transaction, so if you do trust
> the sender feel free to assume an unconfirmed transaction will
> eventually confirm. However, if you do not trust the sender and/or have
> no other recourse if they double-spend you, wait until at least the
> first confirmation before assuming the transaction will go through.
>
> In the long term, miner support of full RBF has a number of advantages
> to users, allowing you to more efficiently make transactions, paying
> lower fees. However you'll need a wallet supporting these features; none
> exist yet.
>
>
> I'm a business. What does this mean for me?
> -------------------------------------------
>
> If you use your own node to verify transactions, you probably are in a
> similar situation as average users, so again, this means very little to
> you.
>
> If you use a payment processor/transaction API such as BitPay, Coinbase,
> BlockCypher, etc. you may or may not be accepting unconfirmed
> transactions, and they may or may not be "guaranteed" by your payment
> processor even if double-spent. If like most merchants you're using the
> API such that confirmations are required prior to accepting orders (e.g.
> taking a meaningful loss such as shipping a product if the tx is
> reversed) nothing changes for you. If not I recommend you contact your
> payment processor.
>
>
> I'm a miner. Why should I support replace-by-fee?
> -------------------------------------------------
>
> Whether full or first-seen-safe? RBF support (along with
> child-pays-for-parent) is an important step towards a fully functioning
> transaction fee market that doesn't lead to users' transactions getting
> mysteriously "stuck", particularly during network flooding
> events/attacks. A better functioning fee market will help reduce
> pressure to increase the blocksize, particularly from the users creating
> the most valuable transactions.
>
> Full RBF also helps make use of the limited blockchain space more
> efficiently, with up to 90%+ transaction size savings possible in some
> transaction patterns. (e.g. long payment chains?) More users in less
> blockchain space will lead to higher overall fees per block.
>
> Finally as we'll discuss below full RBF prevents a number of serious
> threats to the existing level playing field that miners operate in.
>
>
> Why can't we make accepting unconfirmed txs from untrusted people safe?
> -----------------------------------------------------------------------
>
> For a decentralized wallet, the situation is pretty bleak. These wallets
> only have a handful of connections to the network, with no way of
> knowing if those connections give an accurate view of what transactions
> miners actually know about.
>
> The only serious attempt to fix this problem for decentralized wallets
> that has been actually deployed is Andresen/Harding's double-spend
> relaying, implemented in Bitcoin XT. It relays up to one double-spend
> transaction per double-spent txout, with the intended effect to warn
> recipients. In practice however this functionality makes it easier to
> double-spend rather than harder, by giving an efficient and easy way to
> get double-spends to miners after the fact. Notably my RBF
> implementation even connects to Bitcoin XT nodes, reserving a % of all
> incoming and outgoing connection slots for them.
>
> Additionally Bitcoin XT's double-spend relaying is subject to attacks
> include bandwidth exhaustion, sybil attacks, and Gervais's non-sybil
> interactive attacks? among many others.
>
>
> What about centralised wallets?
> -------------------------------
>
> Here the solutions being deployed, planned, and proposed are harmful,
> and even represent serious threats to Bitcoin's decentralization.
>
>
> Confidence factors
> ------------------
>
> Many services such as BlockCypher? have attempted to predict the
> probability that unconfirmed transactions will be mined, often
> guaranteeing merchants payment? even in the event of a double-spend. The
> key component of these predictions is to sybil attack the P2P network as
> a whole, connecting to as many nodes as possible to measure transaction
> propagation. Additionally these services connect to pools directly via
> the getblocktemplate protocol, repeatedly downloading via GBT the lists
> of transactions in the to-be-mined blocks to determine what transactions
> miners are attempting to mine.
>
> None of these measures scale, wasting significant network and miner
> resources; in one instance a sybil attack by Chainalysis even completely
> blocked the users of the SPV wallet Breadwallet? from accessing the
> network. These measures also don't work very well, giving double-spend
> attackers incentives to sybil attack miners themselves.
>
>
> Transaction processing contracts with miners
> --------------------------------------------
>
> The next step after measuring propagation fails is to contract with
> miners directly, signing contracts with as much of the hashing power as
> possible to get the transactions they want mined and double-spends
> rejected. The miners/pools would then provide an authenticated API
> endpoint for exclusive use of this service that would allow the service
> to add and remove specific transactions to the mempool on demand.
>
> There's a number of serious problems with this:
>
> 1) Mining contracts can be used to double-spend
>
> ...even when they're being used "honestly".
>
> Suppose Alice is a merchant using CoinPayCypher, who has contracts with
> 75% of the hashing power. Bob, another merchant, meanwhile uses a
> decentralized Bitcoin Core backend for payments to his website.
>
> Mallory wants to double-spend Bob's to buy his expensive products. He
> can do this by creating a transaction, tx1, that pays Alice, followed by
> a second transaction, tx2, that pays Bob. In any circumstance when
> Mallory can convince Bob to accept tx2, but prevent Bob from seeing tx1,
> the chance of Malory's double-spend succeeding becomes ~75% because
> CoinPayCypher's contracts with mining ensure the transaction paying
> Alice will get mined.
>
> Of course, dishonest use and/or compromise makes double-spending
> trivial: Malory can use the API credentials to ask miners to reject
> Bob's payment at any time.
>
>
> 2) They still don't work, without 51% attacking other miners
>
> Even if CoinPayCypher has 75% of the hashing power on contract, that's
> still a potentially 75% chance of being double-spent. The 25% of miners
> who haven't signed contracts have no _decentralized_ way of ensuring
> they don't create blocks with double-spends, let alone at low cost. If
> those miners won't or can't sign contracts with CoinPayCypher the only
> next step available is to reject their blocks entirely.
>
>
> 3) Legal contracts give the advantage to non-anonymous miners in
>    Western jurisdictions
>
> Suppose CoinPayCypher is a US company, and you're a miner with 1%
> hashing power located in northern China. The barriers to you succesfully
> negotiating a contract with CoinPayCypher are significant. You don't
> speak the same langauge, you're in a completely different jurisdiction
> so enforcing the legal contract is difficult, and being just 1%,
> CoinPayCypher sees you as insignificant.
>
> Who's going to get the profitable hashing power contracts first, if at
> all? Your English speaking competitors in the west. This is inherently a
> pressure towards centralization of mining.
>
>
> Why isn't this being announced on the bitcoin-security list first?
> ------------------------------------------------------------------
>
> I've had repeated discussions with services vulnerable to double-spends;
> they have been made well aware of the risk they're taking. If they've
> followed my own and others' advice they'll at minimum have constant
> monitoring of the rate of double-spends both on their own services and
> on the P2P network in general.
>
> If you choose to take a risk you should accept the consequences.
>
>
> How do I actually use full RBF?
> -------------------------------
>
> First get the full-RBF patch to v0.10.2:
>
>     https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.10.2
>
> The above implementation of RBF includes additional code to find and
> preferentially connect to other RBF nodes, as well as Bitcoin XT nodes.
> Secondly, try out my replace-by-fee-tools at:
>
>     https://github.com/petertodd/replace-by-fee-tools
>
> You can watch double-spends on the network here:
>
>     http://respends.thinlink.com/
>
>
> References
> ----------
>
> 1) "Replace-by-fee v0.10.2 - Serious DoS attack fixed! - Also novel
>     variants of existing attacks w/ Bitcoin XT and Android Bitcoin Wallet",
>    Peter Todd, May 23rd 2015, Bitcoin-development mailing list,
>
> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07795.html
>
> 2) "From Zero to Hero: Bitcoin Transactions in 8 Seconds",
>    June 2nd, 2014, Erik Voorhees,
>
> https://medium.com/blockcypher-blog/from-zero-to-hero-bitcoin-transactions-in-8-seconds-7c9edcb3b734
>
> 3) Coinbase Merchant API, Accessed Jun 19th 2015,
>    https://developers.coinbase.com/docs/merchants/callbacks#confirmations
>
> 4) "Chainalysis CEO Denies 'Sybil Attack' on Bitcoin's Network",
>    March 14th 2015, Grace Caffyn, Coindesk,
>
> http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-on-bitcoin-network/
>
> 5) "First-Seen-Safe Replace-by-Fee",
>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,
>
> http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07829.html
>
> 6) "Cost savings by using replace-by-fee, 30-90%",
>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,
>
> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07813.html
>
> 7) "Tampering with the Delivery of Blocks and Transactions in Bitcoin",
>     Arthur Gervais and Hubert Ritzdorf and Ghassan O. Karame and Srdjan
> Capkun,
>     Cryptology ePrint Archive: Report 2015/578, Jun 10th 2015,
>     http://eprint.iacr.org/2015/578
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000070a2bb3b92c20d5c2c971e6e1a7abe55cdbbe6a2dd9a5ad
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>


-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/f1279cf6/attachment.html>

From pete at petertodd.org  Fri Jun 19 15:40:54 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 19 Jun 2015 11:40:54 -0400
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CAMK47c8Mc8v2C4aG=7GdAQ7ZCR2qXhfq-dktNS7bDa00RdKThw@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABsx9T1pnT=Tty3+tg+EUphLwQrWXf9EEwUOGuyNcdu=4wAqTg@mail.gmail.com>
	<20150619135245.GB28875@savin.petertodd.org>
	<CAMK47c_kCgb6hEUf_JePAC_tBK8aCF1W4f1guiAah-Gj_cFfSw@mail.gmail.com>
	<20150619140815.GA32470@savin.petertodd.org>
	<CAMK47c9NhX2gzCioTycEPXqyYeKRM9XgXuW9MGyj=OdGsKVbFg@mail.gmail.com>
	<20150619145940.GB5695@savin.petertodd.org>
	<CAMK47c8Mc8v2C4aG=7GdAQ7ZCR2qXhfq-dktNS7bDa00RdKThw@mail.gmail.com>
Message-ID: <20150619154054.GA13498@savin.petertodd.org>

On Fri, Jun 19, 2015 at 08:20:52AM -0700, Adrian Macneil wrote:
> >
> > Unless you're sybil attacking the network and miners, consuming valuable
> > resources and creating systemic risks of failure like we saw with
> > Chainalysis, I don't see how you're getting "very small" double-spend
> > probabilities.
> >
> 
> So connecting to many nodes just because we can and it's not technically
> prevented is bad for the network and creating systemic risks of failure,

Well it is actually; that's why myself, Wladimir van der Laan, and
Gregory Maxwell all specifically? called Chainalysis's actions a sybil
attack.

The Bitcoin P2P network is resilliant to failure when the chance of any
one node going down is uncorrelated with others. For instance if you
accidentally introduced a bug in your nodes that failed to relay
transactions/blocks properly, you'd simultaneously be disrupting a large
portion of the network all at once.

How many nodes is Coinbase connecting too? What software are they
running? What subnets are they using? In particular, are they all on one
subnet or multiple?

> but relaying harmful double spend transactions just because you can and
> it's not technically prevented, is good for everyone?

You realise that Hearn/Andresen/Harding's double-spend-relaying patch,
included in Bitcoin XT, relays double-spend transactions right? Do you
consider that harmful?

> > You know, you're creating an interesting bit of game theory here: if I'm
> > a miner who doesn't already have a mining contract, why not implement
> > full-RBF to force Coinbase to offer me one? One reason might be because
> > other miners with such a contract - a majority - are going to be asked
> > by Coinbase to reorg you out of the blockchain, but then we have a
> > situation where a single entity has control of the blockchain.
> >
> 
> If someone did enter into contracts with miners to mine certain
> transactions, and had a guarantee that the miners would not build on
> previous blocks which included double spends, then they would only need
> contracts with 51% of the network anyway. So it wouldn't really matter if
> you were a small time miner and wanted to run full-RBF.

But of course, you'd never 51% the network right? After all it's not
possible to guarantee that your miner won't mine double-spends, as there
is no single consensus definition of which transaction came first, nor
can there be.

Or do you see things differently? If I'm a small miner should I be
worried my blocks might be rejected by the majority with hashing power
contracts because I'm unable to predict which transactions Coinbase
believes should go in the blockchain?

> > For the good of Bitcoin, and your own company, you'd do well to firmly
> > state that under no condition will Coinbase ever enter into mining
> > contracts.
> >
> 
> I don't personally see what good this does for bitcoin. Now you are
> suggesting that we should prevent a 51% attack by using policy and
> promises, rather than a technical solution. How is this any better than us
> relying on existing double spend rules which are based on policy and
> promises?

Well, I think I've shown how dangerous mining contracts can be to the
overall health of the Bitcoin ecosystem; I'm simply asking you to
promise not to make use of this dangerous option regardless of what
happens. Like I said, if for whatever reason the first-seen mempool
behavior proves to be insufficient at preventing double-spends from your
perspective, you did suggest you might use mining contracts to ensure
txs you want mined get mined, over others.


1) "Chainalysis CEO Denies 'Sybil Attack' on Bitcoin's Network",
   March 14th 2015, Grace Caffyn, Coindesk,
   http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-on-bitcoin-network/

-- 
'peter'[:-1]@petertodd.org
00000000000000000e806870e7e9cf4d507af6b78fc709e6839a8d34b52ea334
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/7559ea0b/attachment.sig>

From jgarzik at bitpay.com  Fri Jun 19 15:42:53 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Fri, 19 Jun 2015 08:42:53 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <20150619134408.GB27280@savin.petertodd.org>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABHVRKR7bXfDX0_frAv_Ph4Saz3SXwXeZae1DEokorvekPeinw@mail.gmail.com>
	<20150619134408.GB27280@savin.petertodd.org>
Message-ID: <CAJHLa0PYQc1o-rwwqXRERWtAZ3ueuN5wPHT0RMKkVE42HEXXwA@mail.gmail.com>

On Fri, Jun 19, 2015 at 6:44 AM, Peter Todd <pete at petertodd.org> wrote:

> Having said that... honestly, zeroconf is pretty broken already. Only
> with pretty heroic measures like connecting to a significant fraction of
> the Bitcoin network at once, as well as connecting to getblocktemplate
> supporting miners to figure out what transactions are being mined, are
> services having any hope of avoiding getting ripped off. For the average
> user their wallets do a terrible job of showing whether or not an
>

This is no excuse for further degrading the overall network security.

There are many issues to address in the bitcoin ecosystem.  It negatively
impacts users to roll out "scorched earth" replace-by-fee given today's
ecosystem.

Yes, zero conf security is poor.  An outright attack on zero conf degrades
user security even more.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/5bb9893d/attachment.html>

From jgarzik at bitpay.com  Fri Jun 19 15:43:25 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Fri, 19 Jun 2015 08:43:25 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CAFzgq-zbcARe4ePj_3wA9mEzKE3PsGQ3Kb0-ALyTk054uzrrTA@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABHVRKR7bXfDX0_frAv_Ph4Saz3SXwXeZae1DEokorvekPeinw@mail.gmail.com>
	<20150619134408.GB27280@savin.petertodd.org>
	<CAFzgq-zbcARe4ePj_3wA9mEzKE3PsGQ3Kb0-ALyTk054uzrrTA@mail.gmail.com>
Message-ID: <CAJHLa0M-u=x-TN-1G8PPzDy=uSxGwhbgMEzK_DCfAfOkfsA-AQ@mail.gmail.com>

Yes, FSS RBF is far better.


On Fri, Jun 19, 2015 at 6:52 AM, Chun Wang <1240902 at gmail.com> wrote:

> Before F2Pool's launch, I performed probably the only successful
> bitcoin double spend in the March 2013 fork without any mining power.
> [ https://bitcointalk.org/index.php?topic=152348.0 ] I know how bad
> the full RBF is. We are going to switch to FSS RBF in a few hours.
> Sorry.
>
> On Fri, Jun 19, 2015 at 9:44 PM, Peter Todd <pete at petertodd.org> wrote:
> > On Fri, Jun 19, 2015 at 09:33:05AM -0400, Stephen Morse wrote:
> >> It is disappointing that F2Pool would enable full RBF when the safe
> >> alternative, first-seen-safe RBF, is also available, especially since
> the
> >> fees they would gain by supporting full RBF over FSS RBF would likely be
> >> negligible. Did they consider using FSS RBF instead?
> >
> > Specifically the following is what I told them:
> >
> >> We are
> >> interested in the replace-by-fee patch, but I am not following the
> >> development closely, more background info is needed, like what the
> >> difference between standard and zeroconf versions? Thanks.
> >
> > Great!
> >
> > Basically both let you replace one transaction with another that pays a
> > higher fee. First-seen-safe replace-by-fee adds the additional criteria
> > that all outputs of the old transaction still need to be paid by the new
> > transaction, with >= as many Bitcoins. Basically, it makes sure that if
> > someone was paid by tx1, then tx2 will still pay them.
> >
> > I've written about how wallets can use RBF and FSS-RBF to more
> > efficiently use the blockchain on the bitcoin-development mailing list:
> >
> >
> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07813.html
> >
> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07829.html
> >
> > Basically, for the purpose of increasing fees, RBF is something like %50
> > cheaper than CPFP, and FSS-RBF is something like %25 cheaper.
> >
> > In addition, for ease of implementation, my new FSS-RBF has a number of
> > other restrictions. For instance, you can't replace multiple
> > transactions with one, you can't replace a transaction whose outputs
> > have already been spent, you can't replace a transaction with one that
> > spends additional unconfirmed inputs, etc. These restrictions aren't
> > "set in stone", but they do make the code simpler and less likely to
> > have bugs.
> >
> > In comparison my previous standard RBF patch can replace multiple
> > transactions with one, can replace long chains of transactions, etc.
> > It's willing to do more computation before deciding if a transaction
> > should be replaced, with more complex logic; it probably has a higher
> > chance of having a bug or DoS attack.
> >
> > You've probably seen the huge controversy around zeroconf with regard to
> > standard replace-by-fee. While FSS RBF doesn't make zeroconf any safer,
> > it also doesn't make it any more dangerous, so politically with regard
> > to zeroconf it makes no difference. You *can* still use it doublespend
> > by taking advantage of how different transactions are accepted
> > differently, but that's true of *every* change we've ever made to
> > Bitcoin Core - by upgrading to v0.10 from v0.9 you've also "broken"
> > zeroconf in the same way.
> >
> >
> > Having said that... honestly, zeroconf is pretty broken already. Only
> > with pretty heroic measures like connecting to a significant fraction of
> > the Bitcoin network at once, as well as connecting to getblocktemplate
> > supporting miners to figure out what transactions are being mined, are
> > services having any hope of avoiding getting ripped off. For the average
> > user their wallets do a terrible job of showing whether or not an
> > unconfirmed transaction will go through. For example, Schildbach's
> > Bitcoin wallet for Android has no code at all to detect double-spends
> > until they get mined, and I've been able to trick it into showing
> > completely invalid transactions. In fact, currently Bitcoin XT will
> > relay invalid transactions that are doublepsends, and Schildbach's
> > wallet displays them as valid, unconfirmed, payments. It's really no
> > surprise to me that nearly no-one in the Bitcoin ecosystem accepts
> > unconfirmed transactions without some kind of protection that doesn't
> > rely on first-seen-safe mempool behavior. For instance, many ATM's these
> > days know who their customers are due to AML requirements, so while you
> > can deposit Bitcoins and get your funds instantly, the protection for
> > the ATM operator is that they can go to the police if you rip them off;
> > I've spoken to ATM operators who didn't do this who've lost hundreds or
> > even thousands of dollars before giving up on zeroconf.
> >
> > My big worry with zeroconf is a service like Coinbase or Shapeshift
> > coming to rely on it, and then attempting to secure it by gaining
> > control of a majority of hashing power. For instance, if Coinbase had
> > contracts with 80% of the Bitcoin hashing power to guarantee their
> > transactions would get mined, but 20% of the hashing power didn't sign
> > up, then the only way to guarantee their transactions could be for the
> > 80% to not build on blocks containing doublespends by the 20%. There's
> > no way in a decentralized network to come to consensus about what
> > transactions are or are not valid without mining itself, so you could
> > end up in a situation where unless you're part of one of the big pools
> > you can't reliably mine at all because your blocks may get rejected for
> > containing doublespends.
> >
> > One of my goal with standard replace-by-fee is to prevent this scenario
> > by forcing merchants and others to implement ways of accepting zeroconf
> > transactions safely that work in a decentralized environment regardless
> > of what miners do; we have a stronger and safer Bitcoin ecosystem if
> > we're relying on math rather than trust to secure our zeroconf
> > transactions. We're also being more honest to users, who right now often
> > have the very wrong impression that unconfirmed transactions are safe to
> > accept - this does get people ripped off all too often!
> >
> >
> > Anyway, sorry for the rant! FWIW I updated my FSS-RBF patch and am
> > waiting to get some feedback:
> >
> >     https://github.com/bitcoin/bitcoin/pull/6176
> >
> > Suhas Daftuar did find a pretty serious bug in it, now fixed. I'm
> > working on porting it to v0.10.2, and once that's done I'm going to put
> > up a bounty for anyone who can find a DoS attack in the patch. If no-one
> > claims the bounty after a week or two I think I'll start feeling
> > confident about using it in production.
> >
> >
> > --
> > 'peter'[:-1]@petertodd.org
> > 000000000000000003188926be14e5fbe2f8f9c63c9fb8e2ba4b14ab04f1c9ab
> >
> >
> ------------------------------------------------------------------------------
> >
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/2897fe9a/attachment.html>

From justusranvier at riseup.net  Fri Jun 19 15:53:01 2015
From: justusranvier at riseup.net (justusranvier at riseup.net)
Date: Fri, 19 Jun 2015 15:53:01 +0000
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<c2a392703d02e1d674a029c60deb6d94@riseup.net>
	<20150619151127.GA11263@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
Message-ID: <812d8353e66637ec182da31bc0a9aac1@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

On 2015-06-19 15:37, Eric Lombrozo wrote:
> OK, a few things here:
> 
> The Bitcoin network was designed (or should be designed) with the
> requirement that it can withstand deliberate double-spend attacks that
> can come from anywhere at any time?and relaxing this assumption
> without adequately assessing the risk (i.e. I?ve never been hacked
> before so I can assume it?s safe) is extremely dangerous at best and
> just horrid security practice at worst. Your users might not thank you
> for not getting hacked - but they surely will not like it when you DO
> get hacked?and lack a proper recovery plan.
> 
> Furthermore, the protocol itself makes no assumptions regarding the
> intentions behind someone signing two conflicting transactions. There
> are many potential use cases where doing so could make a lot of sense.
> Had the protocol been designed along the lines of, say,
> tendermint?where signing multiple conflicting blocks results in loss
> of one?s funds?then the protocol itself disincentivizes the behavior
> without requiring any sort of altruistic, moralistic assumptions. That
> would also mean we?d need a different mechanism for the use cases that
> things like RBF address.
> 
> Thirdly, taken to the extreme, the viewpoint of ?signing a conflicting
> transaction is fraud and vandalism? means that if for whatever reason
> you attempt to propagate a transaction and nobody mines it for a very
> long time, you?re not entitled to immediately reclaim those funds?they
> must remain in limbo forever.

I'm not talking about changing the protocol - I'm talking about the 
business relationships between users of Bitcoin.

I would expect a payment processor to inform the merchants of relevant 
double spends that it observes on the network, even if the payment is 
actually successful, so that the merchant can decide for themselves 
whether or not to pursue it out of band.

Mining is a kind of technical fallback that allows the network to 
resolve human misbehavior without human intervention. If nobody ever 
attempted to make a fraudulent payment, we wouldn't need mining at all 
because the signed transaction itself is proof of intention to pay. That 
it exists doesn't suddenly make fraud less fraudulent and mean that 
users who are in a position to pursue out of band recourse shouldn't do 
so.

I agree that there are valid reasons for replacing transactions in the 
mempool, I just think they should be implemented in a way that doesn't 
facilitate fraud.

I'd also like to note that "prima facie" doesn't mean "always", it means 
that "the default assumption, unless proven otherwise."

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCgAGBQJVhDqcAAoJECpf2nDq2eYjX/UP/RlVIGqzwvdKftFW8kRW1+Dk
3befE2vEIEWFAShNt0pk7/Isqk7prRWQDKP+VNZSJfaoyE3akOe7s3OPWuevVRqM
Y1N658hYnG6NPebkyp5zUQkjT3mXVxOo9Fw9k7JyHgkWaDcwx330z2n6yztleodq
7hlKdW6sZrgqHw+DoF0Zal3QPN0WYm0XAno3uy71RXOs5cAoUxViuVzWHY0oReTQ
uggTggT1A5acmyOM7v65h9Cb2AKcLvHKfSEIwVQbHxYMOT+3GIJOXPKAluh8MjB3
oWg8ERy5dEEHu5kF/MLPQMg5yVQACuQmO2dlmtRoOs3mUQQj+q7dEil/dZMIp0f+
unDKIwLhXMa0sZ+63123UOgaKGZkF7afed3ueniJWQM80VS0WoZvZYhQadT/sCED
Ntfxifi1ZqCiKFeshyN9z7jDC8QEJ3N176Kr/wX76h/vvnPYicMEcfRgSE8EGd10
+oRQQpYzb69WPSFRhhrR3yG9Dev1JfzNPEaIKKYerDk9Vo3OnQ3VaaqBNZwBDo46
4r3O5orFES/ZxMdzWE1cWp99n4T4L6KxdZXmfQSYHehUJBnt62vKuEk9X/Li2ZWo
i3dr3yxx8xhKGGjsSjG03arz70bkXE7SvrICPOs9OEAdGlJI2liLrSWzYU9BbTle
eWvElyVQJsJHgAU8ygvn
=77NP
-----END PGP SIGNATURE-----




From milly at bitcoins.info  Fri Jun 19 16:05:38 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Fri, 19 Jun 2015 12:05:38 -0400
Subject: [Bitcoin-development] improving development model (Re: Concerns
 Regarding Threats by a Developer to Remove Commit Access from Other
 Developers
In-Reply-To: <CALqxMTFx6DF0Re+pCwB1AjYo6eYuKtX1cqUpo=wXmHSOsN74dQ@mail.gmail.com>
References: <CALqxMTGCkTZAs74bXk57L6JWK29Xzbn1ZUkWN_NuBp+EufjEQg@mail.gmail.com>
	<CALqxMTFx6DF0Re+pCwB1AjYo6eYuKtX1cqUpo=wXmHSOsN74dQ@mail.gmail.com>
Message-ID: <55843DD2.3080006@bitcoins.info>

 >- Did you accept payment from companies to lobby for 20MB blocks? Do 
you consider that something appropriate to publicly disclose if so? Do 
you consider that user rights should come above or below company 
interests in Bitcoin? FWIW on pondering that last question "should user 
rights come above or below company interests" I think my view of the 
guiding principle is starkly clear to me: that user rights should be the 
primary thing to optimise for. Businesses are providing service to 
users, their interests are secondary in so far as if they are enabled to 
provide better service thats good. Bitcoin is a user p2p currency, with 
a social contract and a strong user ethos. Importing and forcing company 
interests would likely be the start of a slippery slope towards an end 
to Bitcoin.

I always thought is was the exact opposite.  I thought it was expected 
that the only incentive for developers (other than increasing the value 
of coins they hold) is to lobby for changes that will benefit the 
companies that fund them.  That is the only way you are going to get 
more full time developers on board.  It focuses their efforts on  
products and services people want rather than some sort philosophical 
agenda that may be unrealistic.  The notion that large numbers of 
volunteers will do all this work at little or no pay to improve user 
experience is not a realistic long term plan.  I also think it is 
incorrect to assume some kind of "social contract" and "strong user 
ethos."  While many early users are like that I think most potential 
users of Bitcoin don't think that way.

Russ






From pete at petertodd.org  Fri Jun 19 16:15:53 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 19 Jun 2015 12:15:53 -0400
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <20150619134408.GB27280@savin.petertodd.org>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABHVRKR7bXfDX0_frAv_Ph4Saz3SXwXeZae1DEokorvekPeinw@mail.gmail.com>
	<20150619134408.GB27280@savin.petertodd.org>
Message-ID: <20150619161553.GA20730@savin.petertodd.org>

On Fri, Jun 19, 2015 at 09:44:08AM -0400, Peter Todd wrote:
> On Fri, Jun 19, 2015 at 09:33:05AM -0400, Stephen Morse wrote:
> > It is disappointing that F2Pool would enable full RBF when the safe
> > alternative, first-seen-safe RBF, is also available, especially since the
> > fees they would gain by supporting full RBF over FSS RBF would likely be
> > negligible. Did they consider using FSS RBF instead?
> 
> Specifically the following is what I told them:

Incidentally, because someone asked that message was sent two weeks ago.


Also, a shout-out to Marshal Long of FinalHash for his help with
(FSS)-RBF deployment and for getting F2Pool and myself in touch, as well
as his work in talking getting pools on board with BIP66.

-- 
'peter'[:-1]@petertodd.org
00000000000000000bb4abd88c6b023e9f19a1c1deaac120467279c330a803cf
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/8f8feff6/attachment.sig>

From adrian at coinbase.com  Fri Jun 19 16:18:54 2015
From: adrian at coinbase.com (Adrian Macneil)
Date: Fri, 19 Jun 2015 09:18:54 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <20150619154054.GA13498@savin.petertodd.org>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABsx9T1pnT=Tty3+tg+EUphLwQrWXf9EEwUOGuyNcdu=4wAqTg@mail.gmail.com>
	<20150619135245.GB28875@savin.petertodd.org>
	<CAMK47c_kCgb6hEUf_JePAC_tBK8aCF1W4f1guiAah-Gj_cFfSw@mail.gmail.com>
	<20150619140815.GA32470@savin.petertodd.org>
	<CAMK47c9NhX2gzCioTycEPXqyYeKRM9XgXuW9MGyj=OdGsKVbFg@mail.gmail.com>
	<20150619145940.GB5695@savin.petertodd.org>
	<CAMK47c8Mc8v2C4aG=7GdAQ7ZCR2qXhfq-dktNS7bDa00RdKThw@mail.gmail.com>
	<20150619154054.GA13498@savin.petertodd.org>
Message-ID: <CAMK47c84w=2c9y8MKHTzFf05DmKXz74a=iFViA-oZ1uRDZCAWg@mail.gmail.com>

>
> > So connecting to many nodes just because we can and it's not technically
> > prevented is bad for the network and creating systemic risks of failure,
>
> Well it is actually; that's why myself, Wladimir van der Laan, and
> Gregory Maxwell all specifically? called Chainalysis's actions a sybil
> attack.
>
> The Bitcoin P2P network is resilliant to failure when the chance of any
> one node going down is uncorrelated with others. For instance if you
> accidentally introduced a bug in your nodes that failed to relay
> transactions/blocks properly, you'd simultaneously be disrupting a large
> portion of the network all at once.
>

This is exactly what your RBF patch is doing. By your own logic, nodes on
the network should be allowed to relay (or not relay) whatever they wish.


> How many nodes is Coinbase connecting too? What software are they
> running? What subnets are they using? In particular, are they all on one
> subnet or multiple?
>

We're running about a dozen nodes running regular Bitcoin Core in various
subnets. We aren't doing anything particularly out of the ordinary here.
Nothing that would fall under your definition of a sybil attack or harmful
to the network.

> > You know, you're creating an interesting bit of game theory here: if I'm
> > > a miner who doesn't already have a mining contract, why not implement
> > > full-RBF to force Coinbase to offer me one? One reason might be because
> > > other miners with such a contract - a majority - are going to be asked
> > > by Coinbase to reorg you out of the blockchain, but then we have a
> > > situation where a single entity has control of the blockchain.
> > >
> >
> > If someone did enter into contracts with miners to mine certain
> > transactions, and had a guarantee that the miners would not build on
> > previous blocks which included double spends, then they would only need
> > contracts with 51% of the network anyway. So it wouldn't really matter if
> > you were a small time miner and wanted to run full-RBF.
>
> But of course, you'd never 51% the network right? After all it's not
> possible to guarantee that your miner won't mine double-spends, as there
> is no single consensus definition of which transaction came first, nor
> can there be.
>
> Or do you see things differently? If I'm a small miner should I be
> worried my blocks might be rejected by the majority with hashing power
> contracts because I'm unable to predict which transactions Coinbase
> believes should go in the blockchain?
>

You seem so concerned that we are actively trying to harm or control the
network. We're simply trying to drive bitcoin adoption by making it easy
for people to spend their bitcoin with merchants online. The problems we
face are no different from other merchant processors, or small independent
merchants accepting online or point-of-sale payments.

We've historically had relatively little interest in what miners were doing
(until RBF came out) - for the most part it didn't affect our business.
However, most large merchants would be simply uninterested in accepting
bitcoin if we forced their customers to wait 10-60 minutes for their
payments to confirm. Many have inventory management systems which can not
even place items on hold that long.

If full-RBF sees any significant adoption by miners, then it will actively
harm bitcoin adoption by reducing or removing the ability for online or POS
merchants to accept bitcoin payments at all. I do not see a single benefit
to running full-RBF.

FWIW, I'm fine with the first-seen-safe RBF, that seems like a sensible
addition and a good way to allow fees to be added or increased on existing
transactions, without harming existing applications of bitcoin.

Adrian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/67e0dce0/attachment.html>

From bip at mattwhitlock.name  Fri Jun 19 16:36:11 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Fri, 19 Jun 2015 12:36:11 -0400
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <812d8353e66637ec182da31bc0a9aac1@riseup.net>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
Message-ID: <1727885.UUNByX4Jyd@crushinator>

On Friday, 19 June 2015, at 3:53 pm, justusranvier at riseup.net wrote:
> I'd also like to note that "prima facie" doesn't mean "always", it means
> that "the default assumption, unless proven otherwise."

Why would you automatically assume fraud by default? Shouldn't the null hypothesis be the default? Without any information one way or another, you ought to make *no assumption* about the fraudulence or non-fraudulence of any given double-spend.



From pete at petertodd.org  Fri Jun 19 16:37:46 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 19 Jun 2015 12:37:46 -0400
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CAMK47c84w=2c9y8MKHTzFf05DmKXz74a=iFViA-oZ1uRDZCAWg@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABsx9T1pnT=Tty3+tg+EUphLwQrWXf9EEwUOGuyNcdu=4wAqTg@mail.gmail.com>
	<20150619135245.GB28875@savin.petertodd.org>
	<CAMK47c_kCgb6hEUf_JePAC_tBK8aCF1W4f1guiAah-Gj_cFfSw@mail.gmail.com>
	<20150619140815.GA32470@savin.petertodd.org>
	<CAMK47c9NhX2gzCioTycEPXqyYeKRM9XgXuW9MGyj=OdGsKVbFg@mail.gmail.com>
	<20150619145940.GB5695@savin.petertodd.org>
	<CAMK47c8Mc8v2C4aG=7GdAQ7ZCR2qXhfq-dktNS7bDa00RdKThw@mail.gmail.com>
	<20150619154054.GA13498@savin.petertodd.org>
	<CAMK47c84w=2c9y8MKHTzFf05DmKXz74a=iFViA-oZ1uRDZCAWg@mail.gmail.com>
Message-ID: <20150619163745.GA26347@savin.petertodd.org>

On Fri, Jun 19, 2015 at 09:18:54AM -0700, Adrian Macneil wrote:
> >
> > > So connecting to many nodes just because we can and it's not technically
> > > prevented is bad for the network and creating systemic risks of failure,
> >
> > Well it is actually; that's why myself, Wladimir van der Laan, and
> > Gregory Maxwell all specifically? called Chainalysis's actions a sybil
> > attack.
> >
> > The Bitcoin P2P network is resilliant to failure when the chance of any
> > one node going down is uncorrelated with others. For instance if you
> > accidentally introduced a bug in your nodes that failed to relay
> > transactions/blocks properly, you'd simultaneously be disrupting a large
> > portion of the network all at once.
> >
> 
> This is exactly what your RBF patch is doing. By your own logic, nodes on
> the network should be allowed to relay (or not relay) whatever they wish.

Ah, seems you misunderstand the problem.

By properly we're concerned that things do get relayed, not that they do
not. In particularl with blocks a fairly to relay valid blocks will
quickly lead to a loss of consensus.

> > How many nodes is Coinbase connecting too? What software are they
> > running? What subnets are they using? In particular, are they all on one
> > subnet or multiple?
> >
> 
> We're running about a dozen nodes running regular Bitcoin Core in various
> subnets. We aren't doing anything particularly out of the ordinary here.
> Nothing that would fall under your definition of a sybil attack or harmful
> to the network.

Right, so those dozen nodes, how many outgoing connections are they
making?

> > But of course, you'd never 51% the network right? After all it's not
> > possible to guarantee that your miner won't mine double-spends, as there
> > is no single consensus definition of which transaction came first, nor
> > can there be.
> >
> > Or do you see things differently? If I'm a small miner should I be
> > worried my blocks might be rejected by the majority with hashing power
> > contracts because I'm unable to predict which transactions Coinbase
> > believes should go in the blockchain?
> >
> 
> You seem so concerned that we are actively trying to harm or control the
> network. We're simply trying to drive bitcoin adoption by making it easy
> for people to spend their bitcoin with merchants online. The problems we
> face are no different from other merchant processors, or small independent
> merchants accepting online or point-of-sale payments.
>
> We've historically had relatively little interest in what miners were doing
> (until RBF came out) - for the most part it didn't affect our business.
> However, most large merchants would be simply uninterested in accepting
> bitcoin if we forced their customers to wait 10-60 minutes for their
> payments to confirm. Many have inventory management systems which can not
> even place items on hold that long.

While your goals may be reasonable, again, the question is how are you
going to achieve them? Do you accept that you may be in a position where
you can't guarantee confirmations? Again, what's your plan to deal with
this? For instance, I know Coinbase is contractually obliged to accept
zeroconf payments with at least some of your customers - how strong are
those agreements?

What we're worried about is your plan appears to include nothing
concrete beyond the possibility of getting contracts with hashing power,
maybe even just a majority of hashing power. This is something that
should concern everyone in the Bitcoin ecosystem, and it'd help if you
clearly stated what your intentions are.

-- 
'peter'[:-1]@petertodd.org
00000000000000001128683847671e0ca022f9c74df90a3dc718545379101b72
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/654f5968/attachment.sig>

From elombrozo at gmail.com  Fri Jun 19 16:42:33 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Fri, 19 Jun 2015 09:42:33 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <1727885.UUNByX4Jyd@crushinator>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
Message-ID: <83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>

If we want a non-repudiation mechanism in the protocol, we should explicitly define one rather than relying on ?prima facie? assumptions. Otherwise, I would recommend not relying on the existence of a signed transaction as proof of intent to pay?


> On Jun 19, 2015, at 9:36 AM, Matt Whitlock <bip at mattwhitlock.name> wrote:
> 
> On Friday, 19 June 2015, at 3:53 pm, justusranvier at riseup.net wrote:
>> I'd also like to note that "prima facie" doesn't mean "always", it means
>> that "the default assumption, unless proven otherwise."
> 
> Why would you automatically assume fraud by default? Shouldn't the null hypothesis be the default? Without any information one way or another, you ought to make *no assumption* about the fraudulence or non-fraudulence of any given double-spend.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/d461c2f9/attachment.sig>

From justusranvier at riseup.net  Fri Jun 19 16:44:08 2015
From: justusranvier at riseup.net (justusranvier at riseup.net)
Date: Fri, 19 Jun 2015 16:44:08 +0000
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <1727885.UUNByX4Jyd@crushinator>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
Message-ID: <15ea02cb53046dbe363d5d4876becb6d@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

On 2015-06-19 16:36, Matt Whitlock wrote:
> On Friday, 19 June 2015, at 3:53 pm, justusranvier at riseup.net wrote:
>> I'd also like to note that "prima facie" doesn't mean "always", it 
>> means
>> that "the default assumption, unless proven otherwise."
> 
> Why would you automatically assume fraud by default? Shouldn't the
> null hypothesis be the default? Without any information one way or
> another, you ought to make *no assumption* about the fraudulence or
> non-fraudulence of any given double-spend.

If we have ECDSA proof that an entity intentionally made and publicly 
announced incompatible promises regarding the disposition of particular 
Bitcoins under their control, then why shouldn't that be assumed to be a 
fraud attempt unless shown otherwise?

There are ways of achiving transaction fee adjustment after broadcast 
that do not present the appearance of, or opportunity for, fraud. If 
those options are available and the user chooses not to use them in 
favor of the option that does, that makes bad intentions even more 
probable.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCgAGBQJVhEasAAoJECpf2nDq2eYjcwIP/25yoRpNvZkkdFfYiBKaiL/g
XRH8iFAyM5q3/75sA23vD/fzCNGIRRWYyp8PWk+23NF1gdsgVU6gFNNCUmDbjANv
nWTt2Bd926St24jcU+OxMewSGlxpenDSFDNQVtxhNFKst6hoPatwK1Zfa0Eq7/Qw
+r0H2Pse1ulrN4P1n5xnrYMq2w/GF3zinNZbrn2KOZCnsDa8lKlP8y9eNFHBJ//Z
wDrOcfZ1WLhf5/5xlV1NiH0tdxzABilH0ITimm2LCKbj3JcSJayZlyu4n3NypE0E
cVFeYpBaVZW9wuKUv/va5fzcyWDFPAo+OrR2B3siAb8nfY1jONXNhuV3yZ76pzMr
j39lvuSpoTbLobnEWMCJQ5bI/ngbhatT57gqMfF92sO0YjMe/gi/iU6urR9fi5Gz
3Ov6QA78vxzy/YduFjkc/1FV2dNdbGJtq6b0stmz5TtM1uljeGUoj6JZ8kOJ0EXn
857KFAqEd3hG9eYtBdFQcYeV2ShndALBQE0k3cqQvV6XYdHwHuTY15i1nq+u91MZ
VwsR1M69PrDX5Ps6qo1F6QYJA/fA4fyOZ9dwIvh+cgtu4wBptr/NOpL3XH0kE2+G
b2FRGOwdb2KlejIXSL9p4mfJTX9lmk4twbZe2Spjiy4FinOUyzxEobNoUTMcFCU7
Zu2i5yjMlJzrDB8yXz/N
=xtXD
-----END PGP SIGNATURE-----




From bip at mattwhitlock.name  Fri Jun 19 16:46:35 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Fri, 19 Jun 2015 12:46:35 -0400
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<1727885.UUNByX4Jyd@crushinator>
	<83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
Message-ID: <2285442.evbbAUJO17@crushinator>

Even if you could prove "intent to pay," this would be almost useless. I can sincerely intend to do a lot of things, but this doesn't mean I'll ever actually do them.

I am in favor of more zero-confirmation transactions being reversed / double-spent. Bitcoin users largely still believe that accepting zero-conf transactions is safe, and evidently it's going to take some harsh lessons in reality to correct this belief.


On Friday, 19 June 2015, at 9:42 am, Eric Lombrozo wrote:
> If we want a non-repudiation mechanism in the protocol, we should explicitly define one rather than relying on ?prima facie? assumptions. Otherwise, I would recommend not relying on the existence of a signed transaction as proof of intent to pay?
> 
> 
> > On Jun 19, 2015, at 9:36 AM, Matt Whitlock <bip at mattwhitlock.name> wrote:
> > 
> > On Friday, 19 June 2015, at 3:53 pm, justusranvier at riseup.net wrote:
> >> I'd also like to note that "prima facie" doesn't mean "always", it means
> >> that "the default assumption, unless proven otherwise."
> > 
> > Why would you automatically assume fraud by default? Shouldn't the null hypothesis be the default? Without any information one way or another, you ought to make *no assumption* about the fraudulence or non-fraudulence of any given double-spend.
> 



From milly at bitcoins.info  Fri Jun 19 16:50:53 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Fri, 19 Jun 2015 12:50:53 -0400
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <1727885.UUNByX4Jyd@crushinator>
References: <20150619103959.GA32315@savin.petertodd.org>	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
Message-ID: <5584486D.6020309@bitcoins.info>

"prima facie" generally means that in a court case the burden of proof 
shifts from one party to another. For instance, if you have a federal 
trademark registration that is prima fascia evidence of those rights 
even though they could still be challenged.  To say a prosecutor would 
have prima fascia evidence of a crime because double spend was detected 
is quite a stretch.



On 6/19/2015 12:36 PM, Matt Whitlock wrote:
> On Friday, 19 June 2015, at 3:53 pm, justusranvier at riseup.net wrote:
>> I'd also like to note that "prima facie" doesn't mean "always", it means
>> that "the default assumption, unless proven otherwise."
> Why would you automatically assume fraud by default? Shouldn't the null hypothesis be the default? Without any information one way or another, you ought to make *no assumption* about the fraudulence or non-fraudulence of any given double-spend.
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>





From pete at petertodd.org  Fri Jun 19 16:53:19 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 19 Jun 2015 12:53:19 -0400
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
Message-ID: <20150619165319.GA30295@savin.petertodd.org>

On Fri, Jun 19, 2015 at 09:42:33AM -0700, Eric Lombrozo wrote:
> If we want a non-repudiation mechanism in the protocol, we should explicitly define one rather than relying on ?prima facie? assumptions. Otherwise, I would recommend not relying on the existence of a signed transaction as proof of intent to pay?

Indeed.

For instance, one of the ideas behind my Proofchains work is that you
could hind all details of a smartcontract-whatchamacallit protocol
behind single-use-seals in a consensus blockchain. Closing those seals,
that is spending the appropriate txouts, represents things in the
protocol which are absolutely unobservable to anyone without the data
behind those hashes, an extreme version of the above.


Incidentally, some patent prior-art exposure:

https://github.com/proofchains/python-proofchains

:)

-- 
'peter'[:-1]@petertodd.org
00000000000000000a203bd78c8536399f67275064107def6c7afea29c4e3a7b
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/82e55b95/attachment.sig>

From justusranvier at riseup.net  Fri Jun 19 16:54:42 2015
From: justusranvier at riseup.net (justusranvier at riseup.net)
Date: Fri, 19 Jun 2015 16:54:42 +0000
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
Message-ID: <380151fa41180b7501c4207009de6565@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

On 2015-06-19 16:42, Eric Lombrozo wrote:
> If we want a non-repudiation mechanism in the protocol, we should
> explicitly define one rather than relying on ?prima facie?
> assumptions. Otherwise, I would recommend not relying on the existence
> of a signed transaction as proof of intent to pay?

Again, I'm not talking about any changes to the protocol. The mining 
mechanism in the Bitcoin protocol is the fallback method of resolving 
fraud that isn't prevented or resolved via other mechanisms.

There are plenty of other ways economic actors resolve their 
disagreements other than blockchain adjudication. Sometimes when both 
parties are identified and reside in the same legal jurisdiction, 
contract violations and fraud can be adjudicated in courts. In some 
situations, the parties involved may have access to private dispute 
resolution techniques.

Sometimes the stakeholders in the network act to preserve the long term 
value of their investments, even if it means passing short-term profits. 
The more of those stakeholders there are in Bitcoin, the more effective 
it is to make the case for choices that are long-term beneficial.

The degree to which anyone should rely on a signed transaction as 
assurance of future payment is not a question with a universal answer. 
It depends on the particular details of the situation, and the parties 
involved, and their own risk tolerances and time preferences. There's no 
right answer for everyone, which is why "let's break zeroconf because 
*I* don't think it's safe enough" is a kind of vandalism.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCgAGBQJVhEkhAAoJECpf2nDq2eYj8qAP/0qYP7FJDjke1qNARGkySjC5
8fSuefu8bus/O2fNYsvPf0OcHeqepLUtQ/hgTml5AHaF1Fa9iZopVr8nZv0NFMuF
sv9RfkBKvnnrLWre3e/kQIdKzdMXompEsDwGfIeM3qvVV9AD3mKrz/YNmjs60+hU
rEdLCX8xw3ZvF3CGOzE1KnOMbADEd7i3E/Pm1n7pLVdRAg2CIU+w6mjErgucSdvB
kQ9SNAVQngjhMJyVbxsQh/+/xgecdqeZ07aaGsLhiw6zML2Tz8KMhrjJ9xw9+7h0
Gze+JdqxpgH4QrvD8KMDnlZjM+cWDUGyoVfsRvrVvPdW6kejU1r1B5Pf6dJg9TwZ
kK48RJFdd2rpAkz/kAbvQtoNMxSxhm2gKKFLEMi7g8MZUiGa/Rxj0tWL7OL9SA1U
VfpUzgAovoat9lBQM92T5vcS6kfhiNgAmF24ULGGYIhts77Ae6h8Fl3TECtnR0dM
1U1yio4Im1TfUDfjqNSK+ZjVpzkQli0R057y6XzI9HWkSYo94WyjNVoUlUozuAam
/2+tUMTrMYPeApRv+1nv13InYO8RZiFqs0E4w4TmB5V4Xt6uGUz4Olioyuo0NqMO
lBZwa1ZWKw4fLgHHDu9FhTEOXsOcX5W0gEgcoqMlzTzyoapekk9Esd0pAFLYxYMY
YQyAWtWUA4JBbgLxlB8Y
=x8eh
-----END PGP SIGNATURE-----




From tier.nolan at gmail.com  Fri Jun 19 17:00:55 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Fri, 19 Jun 2015 18:00:55 +0100
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
Message-ID: <CAE-z3OVQ3kwRVTKmTn8spYRmsSpnUB7=5MJBJsKAyKgKDD4KpQ@mail.gmail.com>

On Fri, Jun 19, 2015 at 5:42 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:

> If we want a non-repudiation mechanism in the protocol, we should
> explicitly define one rather than relying on ?prima facie? assumptions.
> Otherwise, I would recommend not relying on the existence of a signed
> transaction as proof of intent to pay?
>

Outputs could be marked as "locked".  If you are performing a zero
confirmation spend, then the recipient could insist that you flag the
output for them as non-reducible.

This reduces privacy since it would be obvious which output was change.  If
both are locked, then the fee can't be increased.

This would be information that miners could ignore though.

Creating the right incentives is hard though.  Blocks could be
"discouraged" if they have a double spend that is known about for a while
which reduces payment for a locked output.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/f5cec10d/attachment.html>

From jgarzik at bitpay.com  Fri Jun 19 17:40:00 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Fri, 19 Jun 2015 10:40:00 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <15ea02cb53046dbe363d5d4876becb6d@riseup.net>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<15ea02cb53046dbe363d5d4876becb6d@riseup.net>
Message-ID: <CAJHLa0PXrtVAo4g2HnqzU+nYK_Eo6waUvryZ9-pbDdvU5LOyNQ@mail.gmail.com>

On Fri, Jun 19, 2015 at 9:44 AM, <justusranvier at riseup.net> wrote:

> If we have ECDSA proof that an entity intentionally made and publicly
> announced incompatible promises regarding the disposition of particular
> Bitcoins under their control, then why shouldn't that be assumed to be a
> fraud attempt unless shown otherwise?
>

Making multiple incompatible versions of a spend is a -requirement- of
various refund contract protocols.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/a49350a3/attachment.html>

From justusranvier at riseup.net  Fri Jun 19 17:48:25 2015
From: justusranvier at riseup.net (justusranvier at riseup.net)
Date: Fri, 19 Jun 2015 17:48:25 +0000
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CAJHLa0PXrtVAo4g2HnqzU+nYK_Eo6waUvryZ9-pbDdvU5LOyNQ@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<15ea02cb53046dbe363d5d4876becb6d@riseup.net>
	<CAJHLa0PXrtVAo4g2HnqzU+nYK_Eo6waUvryZ9-pbDdvU5LOyNQ@mail.gmail.com>
Message-ID: <ce3968063ee51172883eb88dcb7a9bba@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

On 2015-06-19 17:40, Jeff Garzik wrote:
> Making multiple incompatible versions of a spend is a -requirement- of
> various refund contract protocols.

Is there not a dedicated field in a transaction (nSequence) for express 
purpose of indicating when a protocol like this is in use?

As far as I know, transactions which are using those protocols can be 
easily differentiated from those that aren't (which is probably good 
from a payment assurance standpoint and bad from a privacy standpoint).

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCgAGBQJVhFW3AAoJECpf2nDq2eYjkegQAINcnzIPbO/bKqNv14TOonb8
9g/pfvMSQyZjUiu4rB6Iwtn+h1hyLkPc3cdSFV4diQSWeG7Q27ZJzH1T1kYdKp4W
DDH8DwD8PtOu+dgRK9eBsy9h72OncA4JTFhnAXMgfLVBY9eRqXk/DWlzwV/WOn/j
3G5xKKOOeHmKJCaKFwdpZghraLouS72AKSdxCNvleRc4zllV+zqWyHHssNDg7sGH
b/62O3DBZXdlzIEzK8/IeaNMY+UXd984/yQ8KCrHCKjc9uiUjNUCCw4JPo4rB/ZA
Itoc8b6pexRs8h40FdXGYAwvN5xQgcaOL7SsN2nNx/DQWYf+1krBO8Iy4kYw2KGl
8JctcHBOI2gLCxTpB2cWeGPwBQbKJhPsmxTxaTNw5fC6ycAnjoJ2bO1Uz0KfwdnI
2jmwxccB9KauC9zNthxGbvdsHOxE8foZ6AnSDI/qbYQK6MqtSnsa7BUn8vc/y4Uf
bVCsxiywVlHttCJqPh5v16rejCcH2el5Rd5PVCkEagxYFfLA3681ZJKD22UV742l
n8ii7RUJXeps6zjRAc35Ccj5qjhB4SP4qYvKmyEoltYbw1EwXbm93UCsFpuxmQ9g
GbQ/jZXsB1cmHBC+c+3X6SaU6eZdy2jDHsICP7sMx2CrZpcZZO058bqRbmdk8JE6
JI17MYG0ofTLfdCfkgEG
=en1q
-----END PGP SIGNATURE-----




From jgarzik at bitpay.com  Fri Jun 19 17:50:15 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Fri, 19 Jun 2015 10:50:15 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <ce3968063ee51172883eb88dcb7a9bba@riseup.net>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<15ea02cb53046dbe363d5d4876becb6d@riseup.net>
	<CAJHLa0PXrtVAo4g2HnqzU+nYK_Eo6waUvryZ9-pbDdvU5LOyNQ@mail.gmail.com>
	<ce3968063ee51172883eb88dcb7a9bba@riseup.net>
Message-ID: <CAJHLa0Ne9TxXwKRE0x2xoX9TUZV3WNPNbM3noXrDvFg-0zJ3vg@mail.gmail.com>

On Fri, Jun 19, 2015 at 10:48 AM, <justusranvier at riseup.net> wrote:

> On 2015-06-19 17:40, Jeff Garzik wrote:
>
>> Making multiple incompatible versions of a spend is a -requirement- of
>> various refund contract protocols.
>>
>
> Is there not a dedicated field in a transaction (nSequence) for express
> purpose of indicating when a protocol like this is in use?
>

No.  You cannot know which is the 'right' or wrong transaction.  One tx has
obvious nSequence adjustments, the other - the refund transaction - may not.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/260466f9/attachment.html>

From justusranvier at riseup.net  Fri Jun 19 18:00:05 2015
From: justusranvier at riseup.net (justusranvier at riseup.net)
Date: Fri, 19 Jun 2015 18:00:05 +0000
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CAJHLa0Ne9TxXwKRE0x2xoX9TUZV3WNPNbM3noXrDvFg-0zJ3vg@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<15ea02cb53046dbe363d5d4876becb6d@riseup.net>
	<CAJHLa0PXrtVAo4g2HnqzU+nYK_Eo6waUvryZ9-pbDdvU5LOyNQ@mail.gmail.com>
	<ce3968063ee51172883eb88dcb7a9bba@riseup.net>
	<CAJHLa0Ne9TxXwKRE0x2xoX9TUZV3WNPNbM3noXrDvFg-0zJ3vg@mail.gmail.com>
Message-ID: <9dd2572a188a3be1fd9cf29315fe4d2f@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

On 2015-06-19 17:50, Jeff Garzik wrote:
> No.  You cannot know which is the 'right' or wrong transaction.  One tx 
> has
> obvious nSequence adjustments, the other - the refund transaction - may 
> not.

I'm still not seeing a case where a node could see conflicting 
transactions on the network as part of a micropayment channel, and not 
know it was observing the resolution of a channel rather than a likely 
retail double spend.

If both transactions have been broadcast, then one of the conflicting 
members of the set will have nSequence adjustments.

Maybe a clever griefer could try to make their retail double spend look 
like a micropayment channel, but it seems like they'd be missing the 
other identifiable markers of that protocol.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCgAGBQJVhFhqAAoJECpf2nDq2eYjWtgP/2ir11TUfxoIIzK9t0groKY3
yMR32HP3caDLKdc5ML41jf0l0cp7a54sFPuRE+Am8rkg9ogcf6fho/hCwLnhhNb4
YYBqJ2pzqCU1uN8jwPYSwSw3AO+F+hPE8gcm7lKD297a1k9xpYayAFjChJowoyNT
Wuq9YDkakQeSjV1aCiRHuXNxqnnbymf9xHEiB0buVnSgnyXrgZNCnefAo8DeXYqi
FTSceakNwdkklddK5ObNNK9ZoLpjHhX6hZwRiXsOoG+WUzXhLQ+BsyIFzsCKxQk1
cXjTvLn+Ub9FasRCK5KXMBkkPa1U5JLs1nTn6eTbPyroTs10WLkXWjIpZHrkf7ZW
9RsxoKIRaJur8gbYd6BMvV5rgkfGdb6j24pVNxFF2t89SLo44H0NvqE6koNzgubG
4DyXZ+UlzxzwRVBNDeF4pdlKZGsz2ycvQPuNHRoaZY2IsieMBN/5HEqGNOmXsvKf
tCg1SInO/FkE4njCxSW0R31s2KXCpgVCuq3qmoIKZobDdx7AC8GnpY1rdxUGpVoy
USJwZ2IOgtNfl/rBtOpkp/BaUCmCYOiUj13/ycDrqWvnM4TmiDdzJNEZNfez5UQp
Uvgvstoo88sewv9hGsuBWX0nC+ze/m43ZRReFhQDsypEaOw6pL2LSG9dD3tzulax
TrbPXPlN55NarQ3nmPIW
=Hj0x
-----END PGP SIGNATURE-----




From corporate at gigasgaming.com  Fri Jun 19 16:41:23 2015
From: corporate at gigasgaming.com (Gigas Gaming Inc.)
Date: Fri, 19 Jun 2015 11:41:23 -0500
Subject: [Bitcoin-development] Remove Us Please
In-Reply-To: <812d8353e66637ec182da31bc0a9aac1@riseup.net>
References: <20150619103959.GA32315@savin.petertodd.org>
	<c2a392703d02e1d674a029c60deb6d94@riseup.net>
	<20150619151127.GA11263@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
Message-ID: <92bde4fa2adf0cf5b62fbbbd6c526990@gigasgaming.com>

This is no longer a mailing list, this is a chatroom.
Please remove this email from your list, you are now interfering with 
official company business.

Thanks



From jameson.lopp at gmail.com  Fri Jun 19 18:34:21 2015
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Fri, 19 Jun 2015 14:34:21 -0400
Subject: [Bitcoin-development] Remove Us Please
In-Reply-To: <92bde4fa2adf0cf5b62fbbbd6c526990@gigasgaming.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<c2a392703d02e1d674a029c60deb6d94@riseup.net>
	<20150619151127.GA11263@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<92bde4fa2adf0cf5b62fbbbd6c526990@gigasgaming.com>
Message-ID: <CADL_X_cH=j_U-K2zgr9j-HFyHTE4MabBC7QzraBfwwOCLuD85w@mail.gmail.com>

You are free to remove yourself; the URL is at the bottom of every email:
https://lists.sourceforge.net/lists/listinfo/bitcoin-development

On Fri, Jun 19, 2015 at 12:41 PM, Gigas Gaming Inc. <
corporate at gigasgaming.com> wrote:

> This is no longer a mailing list, this is a chatroom.
> Please remove this email from your list, you are now interfering with
> official company business.
>
> Thanks
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/39901652/attachment.html>

From john-bodeen at uiowa.edu  Fri Jun 19 19:55:43 2015
From: john-bodeen at uiowa.edu (John Bodeen)
Date: Fri, 19 Jun 2015 11:55:43 -0800
Subject: [Bitcoin-development] Remove Us Please
In-Reply-To: <CADL_X_cH=j_U-K2zgr9j-HFyHTE4MabBC7QzraBfwwOCLuD85w@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<c2a392703d02e1d674a029c60deb6d94@riseup.net>
	<20150619151127.GA11263@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<92bde4fa2adf0cf5b62fbbbd6c526990@gigasgaming.com>
	<CADL_X_cH=j_U-K2zgr9j-HFyHTE4MabBC7QzraBfwwOCLuD85w@mail.gmail.com>
Message-ID: <CANVz8+9hUCuTfrKZN_VHXkLNwtYVN02OBofcvLONx=9LyTRvjw@mail.gmail.com>

from their website, humorous bits highlighted


> *October 14, 2014 *In latest Hiatus new, the company has taken on yet
> another crazy project but this one is going to benefit the world in which
> it entered not long ago.  The company had done a lot of research on crypto
> currencies, built one for itself, for testing purposes (GigasCorpCoin) and
> found the underlaying problem of Bitcoin and was poised to solve it.
> Company execs decided it would be a good investment to launch its own coin
> and back it itself.
> The company is currently in motion and will hire an expert to do some of
> the coding by October 14, 2015.  Company President refused to be
> interviewed due to too much work that needs done for this secret and
> upcoming project.


On Fri, Jun 19, 2015 at 10:34 AM, Jameson Lopp <jameson.lopp at gmail.com>
wrote:

> You are free to remove yourself; the URL is at the bottom of every email:
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
> On Fri, Jun 19, 2015 at 12:41 PM, Gigas Gaming Inc. <
> corporate at gigasgaming.com> wrote:
>
>> This is no longer a mailing list, this is a chatroom.
>> Please remove this email from your list, you are now interfering with
>> official company business.
>>
>> Thanks
>>
>>
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/3f457deb/attachment.html>

From brianchoffman at gmail.com  Fri Jun 19 20:01:08 2015
From: brianchoffman at gmail.com (Brian Hoffman)
Date: Fri, 19 Jun 2015 16:01:08 -0400
Subject: [Bitcoin-development] Remove Us Please
In-Reply-To: <CANVz8+9hUCuTfrKZN_VHXkLNwtYVN02OBofcvLONx=9LyTRvjw@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<c2a392703d02e1d674a029c60deb6d94@riseup.net>
	<20150619151127.GA11263@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<92bde4fa2adf0cf5b62fbbbd6c526990@gigasgaming.com>
	<CADL_X_cH=j_U-K2zgr9j-HFyHTE4MabBC7QzraBfwwOCLuD85w@mail.gmail.com>
	<CANVz8+9hUCuTfrKZN_VHXkLNwtYVN02OBofcvLONx=9LyTRvjw@mail.gmail.com>
Message-ID: <7A1D2401-1E17-4323-AAC6-DA02F7055A7A@gmail.com>

damn he was just on the verge of solving the underlaying problem with Bitcoin and you interrupted his focus.

> On Jun 19, 2015, at 3:55 PM, John Bodeen <john-bodeen at uiowa.edu> wrote:
> 
> from their website, humorous bits highlighted
> 
> October 14, 2014 
> In latest Hiatus new, the company has taken on yet another crazy project but this one is going to benefit the world in which it entered not long ago.  The company had done a lot of research on crypto currencies, built one for itself, for testing purposes (GigasCorpCoin) and found the underlaying problem of Bitcoin and was poised to solve it.  Company execs decided it would be a good investment to launch its own coin and back it itself.
> The company is currently in motion and will hire an expert to do some of the coding by October 14, 2015.  Company President refused to be interviewed due to too much work that needs done for this secret and upcoming project.
> 
> On Fri, Jun 19, 2015 at 10:34 AM, Jameson Lopp <jameson.lopp at gmail.com <mailto:jameson.lopp at gmail.com>> wrote:
> You are free to remove yourself; the URL is at the bottom of every email: https://lists.sourceforge.net/lists/listinfo/bitcoin-development <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>
> 
> On Fri, Jun 19, 2015 at 12:41 PM, Gigas Gaming Inc. <corporate at gigasgaming.com <mailto:corporate at gigasgaming.com>> wrote:
> This is no longer a mailing list, this is a chatroom.
> Please remove this email from your list, you are now interfering with
> official company business.
> 
> Thanks
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net <mailto:Bitcoin-development at lists.sourceforge.net>
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>
> 
> 
> ------------------------------------------------------------------------------
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net <mailto:Bitcoin-development at lists.sourceforge.net>
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>
> 
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/aee1cdb9/attachment.html>

From adam at signal11.com  Fri Jun 19 19:47:56 2015
From: adam at signal11.com (Adam Weiss)
Date: Fri, 19 Jun 2015 15:47:56 -0400
Subject: [Bitcoin-development] Mailman incompatibility with DKIM ...
In-Reply-To: <CAEz79PriNzD18Es60=2Nkz5U6G=Ocrm9ezJmK0P1DirdP-vPkw@mail.gmail.com>
References: <CAEz79PoDn+-aDkqSfPeQFUjYDEDEhSrJ2mFYcbitHBf4oADBSg@mail.gmail.com>
	<CANEZrP3vut8uYWeeynLdwvSM56eXZZdgidaEgcvg1FNMye6P9w@mail.gmail.com>
	<CAEz79Pr4ug8zyJ5bibCG3m0YD8gkBiXysWJsZDThTiwXsgd7YQ@mail.gmail.com>
	<CANEZrP1T3r=VDRBTM_jrm_g0BkQy_NZA40BPcZtVDq_0au6TKw@mail.gmail.com>
	<CAEz79PriNzD18Es60=2Nkz5U6G=Ocrm9ezJmK0P1DirdP-vPkw@mail.gmail.com>
Message-ID: <CAFVoEQQF2TLTMpm0DvdXJV-mG3OA6ZU0=vbX1jZdKQ53=xwuOg@mail.gmail.com>

Hi Warren,

If you set dmarc_moderation_action to "Munge from", the list will detect
when someone posts from a domain that publishes a request for strict
signature checking for all mails originating from it (in DNS) and rewrite
the envelope-from to the list's address.  Reply-to will be added and set to
the original sender.

I think that this is probably a better way to workaround the issue (rather
than playing with getting the list to not break the signature) until these
things mature further.

Thoughts?

--adam




On Fri, Jun 19, 2015 at 6:38 AM, Warren Togami Jr. <wtogami at gmail.com>
wrote:

> On Fri, Jun 19, 2015 at 12:24 AM, Mike Hearn <mike at plan99.net> wrote:
>
>> The new list currently has footers removed during testing.  I am not
>>> pleased with the need to remove the subject tag and footer to be more
>>> compatible with DKIM users.
>>>
>>
>> Lists can do what are effectively MITM attacks on people's messages in
>> any way they like, if they resign for the messages themselves. That seems
>> fair to me!  :)
>>
>
> Mailman isn't resigning it.  Should it be?  Does other mailing list
> software?
>
>
>>
>>
>>>  I'm guessing DKIM enforcement is not very common because of issues like
>>> this?
>>>
>>
>> DKIM is used by most mail on the internet. DMARC rules that publish in
>> DNS statements like "All mail from bitpay.com is signed correctly so
>> trash any that isn't" are used on some of the worlds most heavily phished
>> domains like google.com, PayPal, eBay, and indeed BitPay.
>>
>> These rules are understood and enforced by all major webmail providers
>> including Gmail. It's actually only rusty geek infrastructure that has
>> problems with this, I've never heard of DKIM/DMARC users having issues
>> outside of dealing with mailman. The vast majority of email users who never
>> post to technical mailing lists benefit from it significantly.
>>
>> Really everyone should use them. Adding cryptographic integrity to email
>> is hardly a crazy idea :)
>>
>
> I understand the reason to protect the "heavily phished" domains.  I heard
> that LKML does not modify the subject or add a footer, perhaps because it
> would make it incompatible with DKIM of the several big corporate domains
> who participate.
>
> I suppose it is somewhat acceptable for us to remove subject tags and
> footers if we have no choice...
>
> Warren
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/77f92e86/attachment.html>

From jp at eeqj.com  Fri Jun 19 19:49:23 2015
From: jp at eeqj.com (Jeffrey Paul)
Date: Fri, 19 Jun 2015 21:49:23 +0200
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CAFzgq-zbcARe4ePj_3wA9mEzKE3PsGQ3Kb0-ALyTk054uzrrTA@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CABHVRKR7bXfDX0_frAv_Ph4Saz3SXwXeZae1DEokorvekPeinw@mail.gmail.com>
	<20150619134408.GB27280@savin.petertodd.org>
	<CAFzgq-zbcARe4ePj_3wA9mEzKE3PsGQ3Kb0-ALyTk054uzrrTA@mail.gmail.com>
Message-ID: <104A5F27-D4CE-47F1-B569-37A22CA2D05C@eeqj.com>

It seems to me that FSS RBF must enforce identical OP_RETURN data on the output scripts as the first seen transaction, as well, to safely continue support for various other applications built atop the blockchain.

Is there a canonical implementation of FSS RBF around somewhere I can review?

Best,
-jp

-- 
Jeffrey Paul   +1 (312) 361-0355
5539 AD00 DE4C 42F3 AFE1 1575 0524 43F4 DF2A 55C2

> On 19.06.2015, at 15:52, Chun Wang <1240902 at gmail.com> wrote:
> 
> Before F2Pool's launch, I performed probably the only successful
> bitcoin double spend in the March 2013 fork without any mining power.
> [ https://bitcointalk.org/index.php?topic=152348.0 ] I know how bad
> the full RBF is. We are going to switch to FSS RBF in a few hours.
> Sorry.
> 
>> On Fri, Jun 19, 2015 at 9:44 PM, Peter Todd <pete at petertodd.org> wrote:
>>> On Fri, Jun 19, 2015 at 09:33:05AM -0400, Stephen Morse wrote:
>>> It is disappointing that F2Pool would enable full RBF when the safe
>>> alternative, first-seen-safe RBF, is also available, especially since the
>>> fees they would gain by supporting full RBF over FSS RBF would likely be
>>> negligible. Did they consider using FSS RBF instead?
>> 
>> Specifically the following is what I told them:
>> 
>>> We are
>>> interested in the replace-by-fee patch, but I am not following the
>>> development closely, more background info is needed, like what the
>>> difference between standard and zeroconf versions? Thanks.
>> 
>> Great!
>> 
>> Basically both let you replace one transaction with another that pays a
>> higher fee. First-seen-safe replace-by-fee adds the additional criteria
>> that all outputs of the old transaction still need to be paid by the new
>> transaction, with >= as many Bitcoins. Basically, it makes sure that if
>> someone was paid by tx1, then tx2 will still pay them.
>> 
>> I've written about how wallets can use RBF and FSS-RBF to more
>> efficiently use the blockchain on the bitcoin-development mailing list:
>> 
>> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07813.html
>> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07829.html
>> 
>> Basically, for the purpose of increasing fees, RBF is something like %50
>> cheaper than CPFP, and FSS-RBF is something like %25 cheaper.
>> 
>> In addition, for ease of implementation, my new FSS-RBF has a number of
>> other restrictions. For instance, you can't replace multiple
>> transactions with one, you can't replace a transaction whose outputs
>> have already been spent, you can't replace a transaction with one that
>> spends additional unconfirmed inputs, etc. These restrictions aren't
>> "set in stone", but they do make the code simpler and less likely to
>> have bugs.
>> 
>> In comparison my previous standard RBF patch can replace multiple
>> transactions with one, can replace long chains of transactions, etc.
>> It's willing to do more computation before deciding if a transaction
>> should be replaced, with more complex logic; it probably has a higher
>> chance of having a bug or DoS attack.
>> 
>> You've probably seen the huge controversy around zeroconf with regard to
>> standard replace-by-fee. While FSS RBF doesn't make zeroconf any safer,
>> it also doesn't make it any more dangerous, so politically with regard
>> to zeroconf it makes no difference. You *can* still use it doublespend
>> by taking advantage of how different transactions are accepted
>> differently, but that's true of *every* change we've ever made to
>> Bitcoin Core - by upgrading to v0.10 from v0.9 you've also "broken"
>> zeroconf in the same way.
>> 
>> 
>> Having said that... honestly, zeroconf is pretty broken already. Only
>> with pretty heroic measures like connecting to a significant fraction of
>> the Bitcoin network at once, as well as connecting to getblocktemplate
>> supporting miners to figure out what transactions are being mined, are
>> services having any hope of avoiding getting ripped off. For the average
>> user their wallets do a terrible job of showing whether or not an
>> unconfirmed transaction will go through. For example, Schildbach's
>> Bitcoin wallet for Android has no code at all to detect double-spends
>> until they get mined, and I've been able to trick it into showing
>> completely invalid transactions. In fact, currently Bitcoin XT will
>> relay invalid transactions that are doublepsends, and Schildbach's
>> wallet displays them as valid, unconfirmed, payments. It's really no
>> surprise to me that nearly no-one in the Bitcoin ecosystem accepts
>> unconfirmed transactions without some kind of protection that doesn't
>> rely on first-seen-safe mempool behavior. For instance, many ATM's these
>> days know who their customers are due to AML requirements, so while you
>> can deposit Bitcoins and get your funds instantly, the protection for
>> the ATM operator is that they can go to the police if you rip them off;
>> I've spoken to ATM operators who didn't do this who've lost hundreds or
>> even thousands of dollars before giving up on zeroconf.
>> 
>> My big worry with zeroconf is a service like Coinbase or Shapeshift
>> coming to rely on it, and then attempting to secure it by gaining
>> control of a majority of hashing power. For instance, if Coinbase had
>> contracts with 80% of the Bitcoin hashing power to guarantee their
>> transactions would get mined, but 20% of the hashing power didn't sign
>> up, then the only way to guarantee their transactions could be for the
>> 80% to not build on blocks containing doublespends by the 20%. There's
>> no way in a decentralized network to come to consensus about what
>> transactions are or are not valid without mining itself, so you could
>> end up in a situation where unless you're part of one of the big pools
>> you can't reliably mine at all because your blocks may get rejected for
>> containing doublespends.
>> 
>> One of my goal with standard replace-by-fee is to prevent this scenario
>> by forcing merchants and others to implement ways of accepting zeroconf
>> transactions safely that work in a decentralized environment regardless
>> of what miners do; we have a stronger and safer Bitcoin ecosystem if
>> we're relying on math rather than trust to secure our zeroconf
>> transactions. We're also being more honest to users, who right now often
>> have the very wrong impression that unconfirmed transactions are safe to
>> accept - this does get people ripped off all too often!
>> 
>> 
>> Anyway, sorry for the rant! FWIW I updated my FSS-RBF patch and am
>> waiting to get some feedback:
>> 
>>    https://github.com/bitcoin/bitcoin/pull/6176
>> 
>> Suhas Daftuar did find a pretty serious bug in it, now fixed. I'm
>> working on porting it to v0.10.2, and once that's done I'm going to put
>> up a bounty for anyone who can find a DoS attack in the patch. If no-one
>> claims the bounty after a week or two I think I'll start feeling
>> confident about using it in production.
>> 
>> 
>> --
>> 'peter'[:-1]@petertodd.org
>> 000000000000000003188926be14e5fbe2f8f9c63c9fb8e2ba4b14ab04f1c9ab
>> 
>> ------------------------------------------------------------------------------
>> 
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From jameson.lopp at gmail.com  Fri Jun 19 20:27:05 2015
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Fri, 19 Jun 2015 16:27:05 -0400
Subject: [Bitcoin-development] Remove Us Please
In-Reply-To: <7A1D2401-1E17-4323-AAC6-DA02F7055A7A@gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<c2a392703d02e1d674a029c60deb6d94@riseup.net>
	<20150619151127.GA11263@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<92bde4fa2adf0cf5b62fbbbd6c526990@gigasgaming.com>
	<CADL_X_cH=j_U-K2zgr9j-HFyHTE4MabBC7QzraBfwwOCLuD85w@mail.gmail.com>
	<CANVz8+9hUCuTfrKZN_VHXkLNwtYVN02OBofcvLONx=9LyTRvjw@mail.gmail.com>
	<7A1D2401-1E17-4323-AAC6-DA02F7055A7A@gmail.com>
Message-ID: <CADL_X_fiRHfg1EfeF6fHxgmRQOWM=O-pg8m=OyphoVn-1bsvoQ@mail.gmail.com>

You're only strengthening Gigas' point about the mailing list by posting
derisive emails. Take your nonconstructive comments elsewhere.

- Jameson

On Fri, Jun 19, 2015 at 4:01 PM, Brian Hoffman <brianchoffman at gmail.com>
wrote:

> damn he was just on the verge of solving the underlaying problem with
> Bitcoin and you interrupted his focus.
>
> On Jun 19, 2015, at 3:55 PM, John Bodeen <john-bodeen at uiowa.edu> wrote:
>
> from their website, humorous bits highlighted
>
>
>> *October 14, 2014 *In latest Hiatus new, the company has taken on yet
>> another crazy project but this one is going to benefit the world in which
>> it entered not long ago.  The company had done a lot of research on crypto
>> currencies, built one for itself, for testing purposes (GigasCorpCoin) and
>> found the underlaying problem of Bitcoin and was poised to solve it.
>> Company execs decided it would be a good investment to launch its own coin
>> and back it itself.
>> The company is currently in motion and will hire an expert to do some of
>> the coding by October 14, 2015.  Company President refused to be
>> interviewed due to too much work that needs done for this secret and
>> upcoming project.
>
>
> On Fri, Jun 19, 2015 at 10:34 AM, Jameson Lopp <jameson.lopp at gmail.com>
> wrote:
>
>> You are free to remove yourself; the URL is at the bottom of every email:
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>> On Fri, Jun 19, 2015 at 12:41 PM, Gigas Gaming Inc. <
>> corporate at gigasgaming.com> wrote:
>>
>>> This is no longer a mailing list, this is a chatroom.
>>> Please remove this email from your list, you are now interfering with
>>> official company business.
>>>
>>> Thanks
>>>
>>>
>>> ------------------------------------------------------------------------------
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/818916e2/attachment.html>

From bip at mattwhitlock.name  Fri Jun 19 20:39:41 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Fri, 19 Jun 2015 16:39:41 -0400
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CAMK47c84w=2c9y8MKHTzFf05DmKXz74a=iFViA-oZ1uRDZCAWg@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<20150619154054.GA13498@savin.petertodd.org>
	<CAMK47c84w=2c9y8MKHTzFf05DmKXz74a=iFViA-oZ1uRDZCAWg@mail.gmail.com>
Message-ID: <6716121.uS5ifrNBZv@crushinator>

On Friday, 19 June 2015, at 9:18 am, Adrian Macneil wrote:
> If full-RBF sees any significant adoption by miners, then it will actively
> harm bitcoin adoption by reducing or removing the ability for online or POS
> merchants to accept bitcoin payments at all.

Retail POS merchants probably should not be accepting vanilla Bitcoin payments, as Bitcoin alone does not (and cannot) guarantee the irreversibility of a transaction until it has been buried several blocks deep in the chain. Retail merchants should be requiring a co-signature from a mutually trusted co-signer that vows never to sign a double-spend. The reason we don't yet see such technology permeating the ecosystem is because, to date, zero-conf transactions have been irreversible "enough," but this has only been a happy accident; it was never promised, and it should not be relied upon.



From jgarzik at bitpay.com  Fri Jun 19 20:44:52 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Fri, 19 Jun 2015 13:44:52 -0700
Subject: [Bitcoin-development] Mailman incompatibility with DKIM ...
In-Reply-To: <CAFVoEQQF2TLTMpm0DvdXJV-mG3OA6ZU0=vbX1jZdKQ53=xwuOg@mail.gmail.com>
References: <CAEz79PoDn+-aDkqSfPeQFUjYDEDEhSrJ2mFYcbitHBf4oADBSg@mail.gmail.com>
	<CANEZrP3vut8uYWeeynLdwvSM56eXZZdgidaEgcvg1FNMye6P9w@mail.gmail.com>
	<CAEz79Pr4ug8zyJ5bibCG3m0YD8gkBiXysWJsZDThTiwXsgd7YQ@mail.gmail.com>
	<CANEZrP1T3r=VDRBTM_jrm_g0BkQy_NZA40BPcZtVDq_0au6TKw@mail.gmail.com>
	<CAEz79PriNzD18Es60=2Nkz5U6G=Ocrm9ezJmK0P1DirdP-vPkw@mail.gmail.com>
	<CAFVoEQQF2TLTMpm0DvdXJV-mG3OA6ZU0=vbX1jZdKQ53=xwuOg@mail.gmail.com>
Message-ID: <CAJHLa0OSNh3pJV6q7zkaiG=0Vg8qacvo1x8tdpXXnk5Je=9fyQ@mail.gmail.com>

On Fri, Jun 19, 2015 at 12:47 PM, Adam Weiss <adam at signal11.com> wrote:

> Hi Warren,
>
> If you set dmarc_moderation_action to "Munge from", the list will detect
> when someone posts from a domain that publishes a request for strict
> signature checking for all mails originating from it (in DNS) and rewrite
> the envelope-from to the list's address.  Reply-to will be added and set to
> the original sender.
>

That seems to change Reply behavior for those recipients?  It would seem to
accidentally direct mail intended to DKIM-user + list to DKIM-user.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/4c741ccb/attachment.html>

From frankf44 at gmail.com  Fri Jun 19 21:05:56 2015
From: frankf44 at gmail.com (Frank Flores)
Date: Fri, 19 Jun 2015 16:05:56 -0500
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <6716121.uS5ifrNBZv@crushinator>
References: <20150619103959.GA32315@savin.petertodd.org>
	<20150619154054.GA13498@savin.petertodd.org>
	<CAMK47c84w=2c9y8MKHTzFf05DmKXz74a=iFViA-oZ1uRDZCAWg@mail.gmail.com>
	<6716121.uS5ifrNBZv@crushinator>
Message-ID: <CALxyHsVKUJtskOtnqS4_R0U=vwLhVzC+0i6Ya0QyT8T644dYHA@mail.gmail.com>

Has anyone from Mycelium weighed in on this? Is their doublespend attack
detection broken with this kind of irresponsible behavior?

On Fri, Jun 19, 2015 at 3:39 PM, Matt Whitlock <bip at mattwhitlock.name>
wrote:

> On Friday, 19 June 2015, at 9:18 am, Adrian Macneil wrote:
> > If full-RBF sees any significant adoption by miners, then it will
> actively
> > harm bitcoin adoption by reducing or removing the ability for online or
> POS
> > merchants to accept bitcoin payments at all.
>
> Retail POS merchants probably should not be accepting vanilla Bitcoin
> payments, as Bitcoin alone does not (and cannot) guarantee the
> irreversibility of a transaction until it has been buried several blocks
> deep in the chain. Retail merchants should be requiring a co-signature from
> a mutually trusted co-signer that vows never to sign a double-spend. The
> reason we don't yet see such technology permeating the ecosystem is
> because, to date, zero-conf transactions have been irreversible "enough,"
> but this has only been a happy accident; it was never promised, and it
> should not be relied upon.
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



-- 
*MONEY IS OVER!*
                                IF YOU WANT IT
<http://www.zeitgeistmovie.com/>
=====================================================
The causes of my servitude can be traced to the tyranny of money.
-Serj Tankian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/4829df69/attachment.html>

From matt at gem.co  Fri Jun 19 20:42:00 2015
From: matt at gem.co (Matt Smith)
Date: Fri, 19 Jun 2015 13:42:00 -0700
Subject: [Bitcoin-development] Alternate HD path structure: BIP, blog,
	or wat?
Message-ID: <55847E98.3050307@gem.co>

Hey guys,

The crew at Gem is considering a new HD wallet path structure for our
wallets, which are coin-agnostic, that separates the coin_type field
into two fields as such:

m / purpose' / network' / asset_type' / account' / change / index

where network refers to the blockchain (0 - bitcoin, 1 - testnet3, 2 -
litecoin, etc) and the new asset_type refers to the kind of asset to be
held in accounts below that path (Open Assets, Omni, Counterparty).

The intent is to allow us to validate the address format, select the
appropriate daemon to scan for tokenized assets, and choose multiple
blockchain data sources (that may not know anything about token systems
running on the blockchain they expose) relevant to an HDNode in the
wallet using only information in the HDNode's path -- without having to
maintain an explicit mapping of coin_type -> network.

For example, we already have the issue of mapping network identifiers
because of the lack of standardization across cryptocurrency libraries
which ends up being ugly and obnoxious to maintain, i.e.

netcode_map = {
  testnet: testnet3,
  bitcoin_testnet: testnet3,
  testnet3: testnet3,
  XTN: testnet3, ...
}
netcode_i_want = netcode_map[netcode_returned_by_libwhatever]

We want to avoid maintaining a similar asset_type_to_blockchain mapping.
Additionally, it would be helpful for utxo selection to exclude utxos
tied to assets based on path.

BIP43 seems to suggest that we request a BIP number and publish an
informational BIP specifying the new purpose. If that's not appropriate,
then maybe we just need to publish the information in a blog post to
allow any wallet developers who want to to implement
import_from_gem_structure.

I was also wondering if anyone had previously suggested something
similar that I missed when cruising the mailing list archives on the
subject.

Thanks,
?
Matt Smith | Gem
https://gem.co | GH: @thedoctor
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x63331857.asc
Type: application/pgp-keys
Size: 2164 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/33922f4c/attachment.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/33922f4c/attachment.sig>

From jgarzik at bitpay.com  Fri Jun 19 21:15:21 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Fri, 19 Jun 2015 14:15:21 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CALxyHsVKUJtskOtnqS4_R0U=vwLhVzC+0i6Ya0QyT8T644dYHA@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<20150619154054.GA13498@savin.petertodd.org>
	<CAMK47c84w=2c9y8MKHTzFf05DmKXz74a=iFViA-oZ1uRDZCAWg@mail.gmail.com>
	<6716121.uS5ifrNBZv@crushinator>
	<CALxyHsVKUJtskOtnqS4_R0U=vwLhVzC+0i6Ya0QyT8T644dYHA@mail.gmail.com>
Message-ID: <CAJHLa0NAwCodhWvbFCtejVZiwiUsC5BKd7iZzAggqYgH-CxZTA@mail.gmail.com>

Double spend detection is by definition best-effort.

The purpose of bitcoin is to provide security (confirmations) to otherwise
insecure, possibly double spent transactions.




On Fri, Jun 19, 2015 at 2:05 PM, Frank Flores <frankf44 at gmail.com> wrote:

> Has anyone from Mycelium weighed in on this? Is their doublespend attack
> detection broken with this kind of irresponsible behavior?
>
> On Fri, Jun 19, 2015 at 3:39 PM, Matt Whitlock <bip at mattwhitlock.name>
> wrote:
>
>> On Friday, 19 June 2015, at 9:18 am, Adrian Macneil wrote:
>> > If full-RBF sees any significant adoption by miners, then it will
>> actively
>> > harm bitcoin adoption by reducing or removing the ability for online or
>> POS
>> > merchants to accept bitcoin payments at all.
>>
>> Retail POS merchants probably should not be accepting vanilla Bitcoin
>> payments, as Bitcoin alone does not (and cannot) guarantee the
>> irreversibility of a transaction until it has been buried several blocks
>> deep in the chain. Retail merchants should be requiring a co-signature from
>> a mutually trusted co-signer that vows never to sign a double-spend. The
>> reason we don't yet see such technology permeating the ecosystem is
>> because, to date, zero-conf transactions have been irreversible "enough,"
>> but this has only been a happy accident; it was never promised, and it
>> should not be relied upon.
>>
>>
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
>
> --
> *MONEY IS OVER!*
>                                 IF YOU WANT IT
> <http://www.zeitgeistmovie.com/>
> =====================================================
> The causes of my servitude can be traced to the tyranny of money.
> -Serj Tankian
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>


-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/a36b7617/attachment.html>

From matt at envrin.com  Fri Jun 19 21:25:36 2015
From: matt at envrin.com (Matt @ Envrin Group)
Date: Sat, 20 Jun 2015 04:25:36 +0700
Subject: [Bitcoin-development] Alternate HD path structure: BIP, blog,
 or wat?
In-Reply-To: <55847E98.3050307@gem.co>
References: <55847E98.3050307@gem.co>
Message-ID: <558488D0.50904@envrin.com>


Hi Matt,

I think your best bet is probably just push it out privately via blog 
post / Github, and see if it gains any traction with other developers.

I'm a little uncertain as to the relevance though.  All those variables 
(purpose, network, asset_type, account, change, index) need to be stored 
internally within the wallet database, as there's no way to retrieve the 
path used from just the address, correct?  In that case, what's the 
meaning of that exact path structure when a) it can't be retrieved from 
just the address, and b) the values will be stored internally within the 
wallet when you lookup the address.

Matt



On 06/20/2015 03:42 AM, Matt Smith wrote:
> Hey guys,
>
> The crew at Gem is considering a new HD wallet path structure for our
> wallets, which are coin-agnostic, that separates the coin_type field
> into two fields as such:
>
> m / purpose' / network' / asset_type' / account' / change / index
>
> where network refers to the blockchain (0 - bitcoin, 1 - testnet3, 2 -
> litecoin, etc) and the new asset_type refers to the kind of asset to be
> held in accounts below that path (Open Assets, Omni, Counterparty).
>
> The intent is to allow us to validate the address format, select the
> appropriate daemon to scan for tokenized assets, and choose multiple
> blockchain data sources (that may not know anything about token systems
> running on the blockchain they expose) relevant to an HDNode in the
> wallet using only information in the HDNode's path -- without having to
> maintain an explicit mapping of coin_type -> network.
>
> For example, we already have the issue of mapping network identifiers
> because of the lack of standardization across cryptocurrency libraries
> which ends up being ugly and obnoxious to maintain, i.e.
>
> netcode_map = {
>    testnet: testnet3,
>    bitcoin_testnet: testnet3,
>    testnet3: testnet3,
>    XTN: testnet3, ...
> }
> netcode_i_want = netcode_map[netcode_returned_by_libwhatever]
>
> We want to avoid maintaining a similar asset_type_to_blockchain mapping.
> Additionally, it would be helpful for utxo selection to exclude utxos
> tied to assets based on path.
>
> BIP43 seems to suggest that we request a BIP number and publish an
> informational BIP specifying the new purpose. If that's not appropriate,
> then maybe we just need to publish the information in a blog post to
> allow any wallet developers who want to to implement
> import_from_gem_structure.
>
> I was also wondering if anyone had previously suggested something
> similar that I missed when cruising the mailing list archives on the
> subject.
>
> Thanks,
> --
> Matt Smith | Gem
> https://gem.co | GH: @thedoctor
>
>
> ------------------------------------------------------------------------------
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/a83d828a/attachment.html>

From matt at gem.co  Fri Jun 19 23:31:51 2015
From: matt at gem.co (Matt Smith)
Date: Fri, 19 Jun 2015 16:31:51 -0700
Subject: [Bitcoin-development] Alternate HD path structure: BIP, blog,
 or wat?
In-Reply-To: <558488D0.50904@envrin.com>
References: <55847E98.3050307@gem.co> <558488D0.50904@envrin.com>
Message-ID: <5584A667.2050205@gem.co>

I'm not sure I understand your question about the need to store paths in
the wallet database -- there's no way to infer the path of an address
inside an HD wallet from the address alone (short of an exhaustive
search), and HD wallets need to store either the paths, addresses, or
both that have been previously derived/used to monitor the blockchain
usefully, but those facts aren't new or specific to this path format.

The motivation for this path structure over standard bip44 is that it
separates the concept of network (or which blockchain I'm using) and
coin_type (or what kind of thing I'm sending over that blockchain).

This is useful, for example, if I want to import a wallet into my
application and I know that an account was in use at

m/##'/0'/99'/0'

where 99 is the identifier for, say, counterparty - I only need to check
the addresses derived below that path for balances against
counterpartyd. It may be worth pointing out that I expect multisig HD
wallet imports to require master keys and a list of account paths ? not
a list of addresses, as it's very possible that a new address could be
derived between the time when the wallet data was exported and when it
will be imported.

This use case might be very specific to our model, but the reason I
figured we should request a BIP # for this is that to start using it, we
need to pick a number for the purpose field and don't want to do it
arbitrarily (and risk having to change it later) or overload 44 (which
would be misleading).

Did I either  a) answer  or  b) misunderstand  your questions?
--
Matt Smith | Gem
https://gem.co | GH: @thedoctor



On 6/19/15 2:25 PM, Matt @ Envrin Group wrote:
> 
> Hi Matt,
> 
> I think your best bet is probably just push it out privately via blog
> post / Github, and see if it gains any traction with other developers.
> 
> I'm a little uncertain as to the relevance though.  All those variables
> (purpose, network, asset_type, account, change, index) need to be stored
> internally within the wallet database, as there's no way to retrieve the
> path used from just the address, correct?  In that case, what's the
> meaning of that exact path structure when a) it can't be retrieved from
> just the address, and b) the values will be stored internally within the
> wallet when you lookup the address.
> 
> Matt

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/ef0aa3d0/attachment.sig>

From andreas at petersson.at  Sat Jun 20 00:57:41 2015
From: andreas at petersson.at (Andreas Petersson)
Date: Sat, 20 Jun 2015 02:57:41 +0200
Subject: [Bitcoin-development] Alternate HD path structure: BIP, blog,
 or wat?
In-Reply-To: <5584A667.2050205@gem.co>
References: <55847E98.3050307@gem.co> <558488D0.50904@envrin.com>
	<5584A667.2050205@gem.co>
Message-ID: <5584BA85.3050008@petersson.at>

>m/##'/0'/99'/0'
>
>where 99 is the identifier for, say, counterparty


What is stopping you from using m/44'/9'/a'/c/i as descibed here:
http://doc.satoshilabs.com/slips/slip-0044.html

to avoid having an internal mapping from 9'-> 0' to find out what
blockchain to query, this sounds like it should be trivial for any wallet.




From andreas at petersson.at  Sat Jun 20 00:47:06 2015
From: andreas at petersson.at (Andreas Petersson)
Date: Sat, 20 Jun 2015 02:47:06 +0200
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <6716121.uS5ifrNBZv@crushinator>
References: <20150619103959.GA32315@savin.petertodd.org>	<20150619154054.GA13498@savin.petertodd.org>	<CAMK47c84w=2c9y8MKHTzFf05DmKXz74a=iFViA-oZ1uRDZCAWg@mail.gmail.com>
	<6716121.uS5ifrNBZv@crushinator>
Message-ID: <5584B80A.7000403@petersson.at>

I have some experience here. If you are seriously suggesting these
measures, you might as well kill retail transactions altogether.

In practice, if a retail place starts to accept bitcoin they have a
similar situation as with cash, only that the fraud potential is much
lower. (e.g. 100-dollar bill for a sandwich might turn out fake later)
and the fraud frequency is also much lower.

0-conf concerns were never a problem in practice. except for 2-way atms
i have never heard of a problem that was caused by double spends.
while adding these measures is generally positive, requiring them means
excluding 99.9% of the potential users. so you might as well not do it.

RBF as implemented by F2Pool just flat out lowers Bitcoins utility
value. So it's a bad thing.

for any online or automated system, waiting for a handful of
confirmations was always recommended practice.

Am 19.06.2015 um 22:39 schrieb Matt Whitlock:
> Retail POS merchants probably should not be accepting vanilla Bitcoin
> payments, as Bitcoin alone does not (and cannot) guarantee the
> irreversibility of a transaction until it has been buried several
> blocks deep in the chain. Retail merchants should be requiring a
> co-signature from a mutually trusted co-signer that vows never to sign
> a double-spend.  

-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0xAA4EDEEF.asc
Type: application/pgp-keys
Size: 998 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/84f25498/attachment.bin>

From mark at friedenbach.org  Sat Jun 20 01:09:53 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Fri, 19 Jun 2015 18:09:53 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <5584B80A.7000403@petersson.at>
References: <20150619103959.GA32315@savin.petertodd.org>
	<20150619154054.GA13498@savin.petertodd.org>
	<CAMK47c84w=2c9y8MKHTzFf05DmKXz74a=iFViA-oZ1uRDZCAWg@mail.gmail.com>
	<6716121.uS5ifrNBZv@crushinator> <5584B80A.7000403@petersson.at>
Message-ID: <CAOG=w-u6fmpnojpQmrFEMRK56WDsfhZgm406C3tVax5hsX2sOA@mail.gmail.com>

What retail needs is escrowed microchannel hubs (what lightning provides,
for example), which enable untrusted instant payments. Not reliance on
single-signer zeroconf transactions that can never be made safe.

On Fri, Jun 19, 2015 at 5:47 PM, Andreas Petersson <andreas at petersson.at>
wrote:

> I have some experience here. If you are seriously suggesting these
> measures, you might as well kill retail transactions altogether.
>
> In practice, if a retail place starts to accept bitcoin they have a
> similar situation as with cash, only that the fraud potential is much
> lower. (e.g. 100-dollar bill for a sandwich might turn out fake later)
> and the fraud frequency is also much lower.
>
> 0-conf concerns were never a problem in practice. except for 2-way atms
> i have never heard of a problem that was caused by double spends.
> while adding these measures is generally positive, requiring them means
> excluding 99.9% of the potential users. so you might as well not do it.
>
> RBF as implemented by F2Pool just flat out lowers Bitcoins utility
> value. So it's a bad thing.
>
> for any online or automated system, waiting for a handful of
> confirmations was always recommended practice.
>
> Am 19.06.2015 um 22:39 schrieb Matt Whitlock:
> > Retail POS merchants probably should not be accepting vanilla Bitcoin
> > payments, as Bitcoin alone does not (and cannot) guarantee the
> > irreversibility of a transaction until it has been buried several
> > blocks deep in the chain. Retail merchants should be requiring a
> > co-signature from a mutually trusted co-signer that vows never to sign
> > a double-spend.
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/c2719e0f/attachment.html>

From voisine at gmail.com  Sat Jun 20 01:23:03 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Fri, 19 Jun 2015 18:23:03 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CAOG=w-u6fmpnojpQmrFEMRK56WDsfhZgm406C3tVax5hsX2sOA@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<20150619154054.GA13498@savin.petertodd.org>
	<CAMK47c84w=2c9y8MKHTzFf05DmKXz74a=iFViA-oZ1uRDZCAWg@mail.gmail.com>
	<6716121.uS5ifrNBZv@crushinator> <5584B80A.7000403@petersson.at>
	<CAOG=w-u6fmpnojpQmrFEMRK56WDsfhZgm406C3tVax5hsX2sOA@mail.gmail.com>
Message-ID: <CACq0ZD5VDJRuKiq2NaPyoJdDVMPd+9YWtEr3pauS5ZNzxXXEig@mail.gmail.com>

> What retail needs is escrowed microchannel hubs (what lightning provides,
for example), which enable untrusted instant payments. Not reliance on
single-signer zeroconf transactions that can never be made safe.

They don't need to be made cryptographically safe, they just have to be
safer than, for instance, credit card payments that can be charged back. As
long as it's reasonably good in practice, that's fine.


Aaron Voisine
co-founder and CEO
breadwallet.com

On Fri, Jun 19, 2015 at 6:09 PM, Mark Friedenbach <mark at friedenbach.org>
wrote:

> What retail needs is escrowed microchannel hubs (what lightning provides,
> for example), which enable untrusted instant payments. Not reliance on
> single-signer zeroconf transactions that can never be made safe.
>
> On Fri, Jun 19, 2015 at 5:47 PM, Andreas Petersson <andreas at petersson.at>
> wrote:
>
>> I have some experience here. If you are seriously suggesting these
>> measures, you might as well kill retail transactions altogether.
>>
>> In practice, if a retail place starts to accept bitcoin they have a
>> similar situation as with cash, only that the fraud potential is much
>> lower. (e.g. 100-dollar bill for a sandwich might turn out fake later)
>> and the fraud frequency is also much lower.
>>
>> 0-conf concerns were never a problem in practice. except for 2-way atms
>> i have never heard of a problem that was caused by double spends.
>> while adding these measures is generally positive, requiring them means
>> excluding 99.9% of the potential users. so you might as well not do it.
>>
>> RBF as implemented by F2Pool just flat out lowers Bitcoins utility
>> value. So it's a bad thing.
>>
>> for any online or automated system, waiting for a handful of
>> confirmations was always recommended practice.
>>
>> Am 19.06.2015 um 22:39 schrieb Matt Whitlock:
>> > Retail POS merchants probably should not be accepting vanilla Bitcoin
>> > payments, as Bitcoin alone does not (and cannot) guarantee the
>> > irreversibility of a transaction until it has been buried several
>> > blocks deep in the chain. Retail merchants should be requiring a
>> > co-signature from a mutually trusted co-signer that vows never to sign
>> > a double-spend.
>>
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/8f05595a/attachment.html>

From matt at envrin.com  Sat Jun 20 01:58:46 2015
From: matt at envrin.com (Matt @ Envrin Group)
Date: Sat, 20 Jun 2015 08:58:46 +0700
Subject: [Bitcoin-development] Alternate HD path structure: BIP, blog,
 or wat?
In-Reply-To: <5584A667.2050205@gem.co>
References: <55847E98.3050307@gem.co> <558488D0.50904@envrin.com>
	<5584A667.2050205@gem.co>
Message-ID: <5584C8D6.1050401@envrin.com>


Say you generate a child key using the path m/6'/4'/7'/99'/0/196, which 
is what your proposed path structure would be, and it results in the 
address 1DpY7PtPVURvjrGsdAjbZAZ7cL9GD8tc5w.

When the wallet notices a transaction in the blockchain that has 
1DpY7PtPVURvjrGsdAjbZAZ7cL9GD8tc5w as an output, it's going to have to 
lookup the address within its database to get the values 6/4/7/99/0/196, 
as there's no way to retrieve them from just the address.  So 
technically, you might as well just use m/account'/change/index if using 
hardened child keys, or m/change/index if not, as recommended, because 
the wallet will still function the exact same way.

Matt



On 06/20/2015 06:31 AM, Matt Smith wrote:
> I'm not sure I understand your question about the need to store paths in
> the wallet database -- there's no way to infer the path of an address
> inside an HD wallet from the address alone (short of an exhaustive
> search), and HD wallets need to store either the paths, addresses, or
> both that have been previously derived/used to monitor the blockchain
> usefully, but those facts aren't new or specific to this path format.
>
> The motivation for this path structure over standard bip44 is that it
> separates the concept of network (or which blockchain I'm using) and
> coin_type (or what kind of thing I'm sending over that blockchain).
>
> This is useful, for example, if I want to import a wallet into my
> application and I know that an account was in use at
>
> m/##'/0'/99'/0'
>
> where 99 is the identifier for, say, counterparty - I only need to check
> the addresses derived below that path for balances against
> counterpartyd. It may be worth pointing out that I expect multisig HD
> wallet imports to require master keys and a list of account paths ? not
> a list of addresses, as it's very possible that a new address could be
> derived between the time when the wallet data was exported and when it
> will be imported.
>
> This use case might be very specific to our model, but the reason I
> figured we should request a BIP # for this is that to start using it, we
> need to pick a number for the purpose field and don't want to do it
> arbitrarily (and risk having to change it later) or overload 44 (which
> would be misleading).
>
> Did I either  a) answer  or  b) misunderstand  your questions?
> --
> Matt Smith | Gem
> https://gem.co | GH: @thedoctor
>
>
>
> On 6/19/15 2:25 PM, Matt @ Envrin Group wrote:
>> Hi Matt,
>>
>> I think your best bet is probably just push it out privately via blog
>> post / Github, and see if it gains any traction with other developers.
>>
>> I'm a little uncertain as to the relevance though.  All those variables
>> (purpose, network, asset_type, account, change, index) need to be stored
>> internally within the wallet database, as there's no way to retrieve the
>> path used from just the address, correct?  In that case, what's the
>> meaning of that exact path structure when a) it can't be retrieved from
>> just the address, and b) the values will be stored internally within the
>> wallet when you lookup the address.
>>
>> Matt




From matt at gem.co  Sat Jun 20 02:40:52 2015
From: matt at gem.co (Matt Smith)
Date: Fri, 19 Jun 2015 19:40:52 -0700
Subject: [Bitcoin-development] Alternate HD path structure: BIP, blog,
 or wat?
In-Reply-To: <5584BA85.3050008@petersson.at>
References: <55847E98.3050307@gem.co>
	<558488D0.50904@envrin.com>	<5584A667.2050205@gem.co>
	<5584BA85.3050008@petersson.at>
Message-ID: <5584D2B4.6040501@gem.co>

> to avoid having an internal mapping from 9'-> 0' to find out what
> blockchain to query, this sounds like it should be trivial for any wallet.

Trivial to implement, a headache to *maintain*

But if a new platform is released on an existing blockchain, my wallet
doesn't need to know about the new magic number it claims in order to
handle it correctly.

Say I make a new token layer, BobCoin, which runs on bitcoin and say I
use an HD wallet and always generate new BobCoin token addresses as
m/##'/0'/808'/*'/*/*. If I import that wallet into older HD wallet
software that doesn't know anything about BobCoin, it will still:

- understand what blockchain to query for utxos on the addresses below
that path
- be able to generate valid BobCoin addresses without any updates

I think this is particularly valuable if you're developing against a
platform where updates can't be forced on clients.

To be clear: I am not suggesting this as a general-purpose successor to
BIP44.

?
Matt Smith | Gem
https://gem.co | GH: @thedoctor


On 6/19/15 5:57 PM, Andreas Petersson wrote:
>> m/##'/0'/99'/0'
>>
>> where 99 is the identifier for, say, counterparty
> 
> 
> What is stopping you from using m/44'/9'/a'/c/i as descibed here:
> http://doc.satoshilabs.com/slips/slip-0044.html
> 
> to avoid having an internal mapping from 9'-> 0' to find out what
> blockchain to query, this sounds like it should be trivial for any wallet.
> 
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/f45c283e/attachment.sig>

From tomh at thinlink.com  Sat Jun 20 02:59:25 2015
From: tomh at thinlink.com (Tom Harding)
Date: Fri, 19 Jun 2015 19:59:25 -0700
Subject: [Bitcoin-development] improving development model (Re: Concerns
 Regarding Threats by a Developer to Remove Commit Access from Other
 Developers
In-Reply-To: <CANEZrP2iGUnU+BKzYOzNZJUPNOU_5d4oU8JRgGLS1iPtz-uRWA@mail.gmail.com>
References: <CALqxMTGCkTZAs74bXk57L6JWK29Xzbn1ZUkWN_NuBp+EufjEQg@mail.gmail.com>	<CALqxMTFx6DF0Re+pCwB1AjYo6eYuKtX1cqUpo=wXmHSOsN74dQ@mail.gmail.com>
	<CANEZrP2iGUnU+BKzYOzNZJUPNOU_5d4oU8JRgGLS1iPtz-uRWA@mail.gmail.com>
Message-ID: <5584D70D.2030104@thinlink.com>

On 6/19/2015 6:43 AM, Mike Hearn wrote:
> No surprise, the position of Blockstream employees is that hard forks
> must never happen and that everyone's ordinary transactions should go
> via some new network that doesn't yet exist.

If my company were working on spiffy new ideas that required a hard fork
to implement, I'd be rather dismayed to see the blocksize hard fork
happen *before those ideas were ready*.

Because then I'd eventually have to convince people that those ideas
were worth a hard fork all on their own.  It would be much easier to
convince people to roll them in with the already necessary blocksize
hard fork, if that event could be delayed.

As far as I know, Blockstream representatives have never said that
waiting for other changes to be ready is a reason to delay the blocksize
hard fork.  So if this were the real reason, it would suggest they have
been hiding their true motives for making such a fuss about the
blocksize issue.

I've got no evidence at all to support thoughts like this... just the
paranoid mindset that seems to infect a person who gets involved in
bitcoin.  But the question is every bit as valid as Adam's query into
your motives.





From elombrozo at gmail.com  Sat Jun 20 03:07:02 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Fri, 19 Jun 2015 20:07:02 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CACq0ZD5VDJRuKiq2NaPyoJdDVMPd+9YWtEr3pauS5ZNzxXXEig@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<20150619154054.GA13498@savin.petertodd.org>
	<CAMK47c84w=2c9y8MKHTzFf05DmKXz74a=iFViA-oZ1uRDZCAWg@mail.gmail.com>
	<6716121.uS5ifrNBZv@crushinator> <5584B80A.7000403@petersson.at>
	<CAOG=w-u6fmpnojpQmrFEMRK56WDsfhZgm406C3tVax5hsX2sOA@mail.gmail.com>
	<CACq0ZD5VDJRuKiq2NaPyoJdDVMPd+9YWtEr3pauS5ZNzxXXEig@mail.gmail.com>
Message-ID: <C8121F43-0A2A-4882-B98A-90AB77962550@gmail.com>

It all comes down to managing risk. If you?ve got a decent risk model with capped losses and safe recovery mechanisms?and it?s still profitable?it?s fine. But most payment processors and merchants right now probably don?t have particularly good risk models and are making many dangerous assumptions?and probably would not be able to gracefully handle very many risk scenarios.

- Eric Lombrozo


> On Jun 19, 2015, at 6:23 PM, Aaron Voisine <voisine at gmail.com> wrote:
> 
> > What retail needs is escrowed microchannel hubs (what lightning provides, for example), which enable untrusted instant payments. Not reliance on single-signer zeroconf transactions that can never be made safe.
> 
> They don't need to be made cryptographically safe, they just have to be safer than, for instance, credit card payments that can be charged back. As long as it's reasonably good in practice, that's fine.
> 
> 
> Aaron Voisine
> co-founder and CEO
> breadwallet.com <http://breadwallet.com/>
> On Fri, Jun 19, 2015 at 6:09 PM, Mark Friedenbach <mark at friedenbach.org <mailto:mark at friedenbach.org>> wrote:
> What retail needs is escrowed microchannel hubs (what lightning provides, for example), which enable untrusted instant payments. Not reliance on single-signer zeroconf transactions that can never be made safe.
> 
> On Fri, Jun 19, 2015 at 5:47 PM, Andreas Petersson <andreas at petersson.at <mailto:andreas at petersson.at>> wrote:
> I have some experience here. If you are seriously suggesting these
> measures, you might as well kill retail transactions altogether.
> 
> In practice, if a retail place starts to accept bitcoin they have a
> similar situation as with cash, only that the fraud potential is much
> lower. (e.g. 100-dollar bill for a sandwich might turn out fake later)
> and the fraud frequency is also much lower.
> 
> 0-conf concerns were never a problem in practice. except for 2-way atms
> i have never heard of a problem that was caused by double spends.
> while adding these measures is generally positive, requiring them means
> excluding 99.9% of the potential users. so you might as well not do it.
> 
> RBF as implemented by F2Pool just flat out lowers Bitcoins utility
> value. So it's a bad thing.
> 
> for any online or automated system, waiting for a handful of
> confirmations was always recommended practice.
> 
> Am 19.06.2015 um 22:39 schrieb Matt Whitlock:
> > Retail POS merchants probably should not be accepting vanilla Bitcoin
> > payments, as Bitcoin alone does not (and cannot) guarantee the
> > irreversibility of a transaction until it has been buried several
> > blocks deep in the chain. Retail merchants should be requiring a
> > co-signature from a mutually trusted co-signer that vows never to sign
> > a double-spend.
> 
> 
> ------------------------------------------------------------------------------
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net <mailto:Bitcoin-development at lists.sourceforge.net>
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>
> 
> 
> 
> ------------------------------------------------------------------------------
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net <mailto:Bitcoin-development at lists.sourceforge.net>
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>
> 
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/21052728/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/21052728/attachment.sig>

From luke at dashjr.org  Sat Jun 20 03:48:05 2015
From: luke at dashjr.org (Luke Dashjr)
Date: Sat, 20 Jun 2015 03:48:05 +0000
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CACq0ZD5VDJRuKiq2NaPyoJdDVMPd+9YWtEr3pauS5ZNzxXXEig@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CAOG=w-u6fmpnojpQmrFEMRK56WDsfhZgm406C3tVax5hsX2sOA@mail.gmail.com>
	<CACq0ZD5VDJRuKiq2NaPyoJdDVMPd+9YWtEr3pauS5ZNzxXXEig@mail.gmail.com>
Message-ID: <201506200348.06564.luke@dashjr.org>

On Saturday, June 20, 2015 1:23:03 AM Aaron Voisine wrote:
> They don't need to be made cryptographically safe, they just have to be
> safer than, for instance, credit card payments that can be charged back. As
> long as it's reasonably good in practice, that's fine.

They never will be. You can get a decent rate of success merely by making one 
transaction propagate fast (eg, 1 input, 1 output) and the other slow (eg, 
1000 inputs, 1000 outputs) and choosing your peers carefully. The only reason 
unconfirmed transactions aren't double spent today is because nobody is 
seriously *trying*.

Luke



From david.vorick at gmail.com  Sat Jun 20 03:49:28 2015
From: david.vorick at gmail.com (David Vorick)
Date: Fri, 19 Jun 2015 23:49:28 -0400
Subject: [Bitcoin-development] New attack identified and potential
 solution described: Dropped-transaction spam attack against the block size
 limit
In-Reply-To: <COL131-DS897EBDD5B5E7BD300318CCDBE0@phx.gbl>
References: <5574E39C.3090904@thinlink.com>
	<COL131-DS25374BEFA76744E26EB8CBCDBF0@phx.gbl>
	<CAJmQggBcAw1u+Pha+67S4bG5FuKx0xi_dTffmEOUHPbwyJU1aA@mail.gmail.com>
	<CABsx9T3tuBZePfS4_LCo4rp3aU6HFtrLbSDR28DktJyLQz2L-A@mail.gmail.com>
	<COL131-DS259B1E7F076282CE9BBF96CDBE0@phx.gbl>
	<CABsx9T0TzRCr7DRzALymWiNJ2oA_MuZZQ8jFD+z4-cUaiSsE1A@mail.gmail.com>
	<COL131-DS897EBDD5B5E7BD300318CCDBE0@phx.gbl>
Message-ID: <CAFVRnyrDJCUo1VUsfK5mXZYMCc6iaWhho9-1ks0a-pE+1SGRng@mail.gmail.com>

I disagree that 11 is a reasonable value. That's less than 2 hours, which
probably wouldn't even last peak trading hours. You want the mempool to be
big enough that low-fee transactions introduced during peak hours are still
around when there's much less activity (it maximizes miner profit and
prevents people/wallets from needing to resubmit after activity has died
down).

I think you'd want something closer to 72. At 1mb or even 8mb blocks, the
memory requirements are pretty reasonable. 20mb blocks and you may have to
reconsider that limit.

On Tue, Jun 9, 2015 at 3:03 PM, Raystonn . <raystonn at hotmail.com> wrote:

>   You are right of course.  This will work.  I like this idea more than
> my own proposed fix, as it doesn?t make any big changes to the economics of
> the system in the way that burning would have.
>
>  *From:* Gavin Andresen <gavinandresen at gmail.com>
> *Sent:* Tuesday, June 09, 2015 11:25 AM
> *To:* Raystonn . <raystonn at hotmail.com>
> *Cc:* Loi Luu <loi.luuthe at gmail.com> ; Bitcoin Dev
> <bitcoin-development at lists.sourceforge.net>
> *Subject:* Re: [Bitcoin-development] New attack identified and potential
> solution described: Dropped-transaction spam attack against the block size
> limit
>
>   On Tue, Jun 9, 2015 at 1:52 PM, Raystonn . <raystonn at hotmail.com> wrote:
>
>>   That does sound good on the surface, but how do we enforce #1 and #2?
>> They seem to be unenforceable, as a miner can adjust the size of the memory
>> pool in his local source.
>>
>
> It doesn't have to be enforced. As long as a reasonable percentage of hash
> rate is following that policy an attacker that tries to flood the network
> will fail to prevent normal transaction traffic from going through and will
> just end up transferring some wealth to the miners.
>
> Although the existing default mining policy (which it seems about 70% of
> hashpower follows) of setting aside some space for high-priority
> transactions regardless of fee might also be enough to cause this attack to
> fail in practice.
>
> --
> --
> Gavin Andresen
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/792f2553/attachment.html>

From elombrozo at gmail.com  Sat Jun 20 04:02:06 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Fri, 19 Jun 2015 21:02:06 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <201506200348.06564.luke@dashjr.org>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CAOG=w-u6fmpnojpQmrFEMRK56WDsfhZgm406C3tVax5hsX2sOA@mail.gmail.com>
	<CACq0ZD5VDJRuKiq2NaPyoJdDVMPd+9YWtEr3pauS5ZNzxXXEig@mail.gmail.com>
	<201506200348.06564.luke@dashjr.org>
Message-ID: <B7B38239-8EF5-4D12-B3E7-40AE152CF5A3@gmail.com>


> On Jun 19, 2015, at 8:48 PM, Luke Dashjr <luke at dashjr.org> wrote:
> 
> On Saturday, June 20, 2015 1:23:03 AM Aaron Voisine wrote:
>> They don't need to be made cryptographically safe, they just have to be
>> safer than, for instance, credit card payments that can be charged back. As
>> long as it's reasonably good in practice, that's fine.
> 
> They never will be. You can get a decent rate of success merely by making one
> transaction propagate fast (eg, 1 input, 1 output) and the other slow (eg,
> 1000 inputs, 1000 outputs) and choosing your peers carefully. The only reason
> unconfirmed transactions aren't double spent today is because nobody is
> seriously *trying*.
> 
> Luke
> 


Newspapers are often sold in vending machines that make it possible for anyone to just pay the price of one and take them all?and most of the time they are not that carefully monitored. Why? Because most people have better things to do than try to steal a few newspapers. They probably were much more closely monitored earlier in their history?but once it became clear that despite the obvious attack vector very few people actually try to game it, vendors figured it wasn?t really that big a risk. Same thing applies to people trying to steal a piece of bubble gum at the cash register at a convenience store by double-spending.

- Eric Lombrozo

> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/82936006/attachment.sig>

From wtogami at gmail.com  Sat Jun 20 07:48:16 2015
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Fri, 19 Jun 2015 21:48:16 -1000
Subject: [Bitcoin-development] IMPORTANT - Bitcoin Dev List Move Tuesday,
	June 23rd 8pm UTC
Message-ID: <CAEz79PpQoRM=fJ1DF=ZV4ZjDh51GWaXQA1F8+nHLuX4YU1gwcg@mail.gmail.com>

This is an important notice to all members of the Bitcoin Dev List.


*Tuesday, June 23rd 8pm UTC (1pm PDT) the following will happen.*

   - The current list at bitcoin-development at lists.sourceforge.net will
   reject all posts.
   - The current archives at
   http://sourceforge.net/p/bitcoin/mailman/bitcoin-development/ will be
   exported.
   - The test archives at the new list will be wiped and replaced with an
   import from the old list.
   - The new list
   https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev will be
   open to posts after the archive import is complete.

https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
Everyone may to subscribe at the new list now.  Feel free to make test
posts.   Anything posted prior to the switchover on Tuesday will be wiped
from the archives.

*DMARC Status*
A current issue with this list is posts from domains that require DKIM
signature verification will end up in the spam folder at popular providers
like gmail.  Initially the new list will have that exact same problem as we
will continue to have the subject tag and footer.  Within a few weeks LF
will upgrade Mailman to do automatic Munge From
<http://wiki.list.org/DEV/DMARC> which will solve this problem.

Warren Togami
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/01b23a5a/attachment.html>

From dev at jonasschnelli.ch  Sat Jun 20 10:11:41 2015
From: dev at jonasschnelli.ch (Jonas Schnelli)
Date: Sat, 20 Jun 2015 12:11:41 +0200
Subject: [Bitcoin-development] Alternate HD path structure: BIP, blog,
 or wat?
In-Reply-To: <55847E98.3050307@gem.co>
References: <55847E98.3050307@gem.co>
Message-ID: <55853C5D.5020202@jonasschnelli.ch>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

 > m / purpose' / network' / asset_type' / account' / change / index
> 
> ...
> 
> I was also wondering if anyone had previously suggested something 
> similar that I missed when cruising the mailing list archives on
> the subject.


Hi Matt

a)
In my opinion, HD chain standards like Bip43/44 are there to allow
users to use different wallets with the same seed/wordlist (switch
over or use in parallel).
In practice, wallet re-importing / re-creating is not trivial and has
risks of missing out spent or spendable coins.
Take the current landscape. Electrum doesn?t follow the Bip39 standard
[1]. Breadwallet does not support Bip44 [2].
If users start to think, as long as they keep the Bip39 wordlist save,
nothing can happen, is a material fallacy (and i see a trend into this
direction).
A hd seed will not recover your non-blockchain-metadata. HD seed
recovery is a disaster recovery method.

Because of that I am unsure if standards of hd chainstructurs does lead
users and developers into the right directions.
In my opinion, reimporting a hd seed is a experts feature that requires
manual configuration.


b)
Creating deep level chains like m/a/b/c/d/e/f/g/h requires more cpu
power to derive private key with a given seed or wordlist.
If you are using hardware wallets like Trezor or Digitalbitbox, you
probably feel the required time when signing/deriving.

[1] https://bitcointalk.org/index.php?topic=1082586.0
[2] https://github.com/voisine/breadwallet/issues/131

</jonas>
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQIcBAEBAgAGBQJVhTxdAAoJECnUvLZBb1Ps7HIP/00wqG9uEDGE77S6QsSmWWWm
OHYSlWzSeFURnkWyH4B1pcyGL9JxkHJMqmiHr5aBGIt0WGM8S1xwFImg7aFeWe8B
s5tjT80QwH6/RrGnrIFwdJp4QdAriVq7G0lfexika8O8LxW45LzP7BTQ1SoFVZ5o
mQuEzLG3A+NaKREqUMXBiSWAAuM9m08GBcRGsqd9tpvUUxqiJFHAbKqn2yVtuR3h
f+wJeQyjUf6ZqkIDor73lyjay6YpDyYveHaIxP9WfKJGvEVCVisuOXx0C3C7u5ps
SF1p2xCQUEC1xRVHySBgr0VdTYQlMpSVg7XOWSPRPXjfyBBwGW9aLZyGuDDTe0ca
Wa+u3CNRg3wIwsp3gG15wWK/M2eFPMKNwlE0DqSP9Siin0QlLRcuRe39D5BSjcsQ
xfQXNEf2gA0C7rMGA47K5fmxnB4qukkM8UqrOSqtczUO2AP1vdhhwJRi+/Cq9l1r
i1isL4cncwtf3/z965eN9vvou+a1dgU9L2gONmHp5eHwOtPh83u8BXEUof+VMUrN
B+vLHJMRRMucyASlehmzGe8EJiJ3Hlo4NjVpTNg/V8bnHY59lpm6GylvCa7YjR/d
xWB6jmG/7nqyRrJ0byIdZRGLtr/LuleIoFCwPUAO1jR4x626h0iVo82wPBPQXAJ1
IhkX/FW90s9i8vErMjwf
=To1w
-----END PGP SIGNATURE-----



From ibrightly at gmail.com  Sat Jun 20 16:43:02 2015
From: ibrightly at gmail.com (Ivan Brightly)
Date: Sat, 20 Jun 2015 12:43:02 -0400
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <B7B38239-8EF5-4D12-B3E7-40AE152CF5A3@gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CAOG=w-u6fmpnojpQmrFEMRK56WDsfhZgm406C3tVax5hsX2sOA@mail.gmail.com>
	<CACq0ZD5VDJRuKiq2NaPyoJdDVMPd+9YWtEr3pauS5ZNzxXXEig@mail.gmail.com>
	<201506200348.06564.luke@dashjr.org>
	<B7B38239-8EF5-4D12-B3E7-40AE152CF5A3@gmail.com>
Message-ID: <CAAre=yTHLgH=DCVTBZ78MkFVYSTJ3YyV9yZL46nkX1x2RDiQRA@mail.gmail.com>

Yep - similarly: you live in a neighborhood with a local coffee store. Sure
you could use a stolen credit card or a fake $5 bill, but it's not worth
the risk of being caught for a $3 coffee. And on the other side, the store
can deal with 1% of transactions getting reversed or having a fake bill so
they don't change their procedures.

Perfection is not necessary in all situations.

On Sat, Jun 20, 2015 at 12:02 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:

>
> > On Jun 19, 2015, at 8:48 PM, Luke Dashjr <luke at dashjr.org> wrote:
> >
> > On Saturday, June 20, 2015 1:23:03 AM Aaron Voisine wrote:
> >> They don't need to be made cryptographically safe, they just have to be
> >> safer than, for instance, credit card payments that can be charged
> back. As
> >> long as it's reasonably good in practice, that's fine.
> >
> > They never will be. You can get a decent rate of success merely by
> making one
> > transaction propagate fast (eg, 1 input, 1 output) and the other slow
> (eg,
> > 1000 inputs, 1000 outputs) and choosing your peers carefully. The only
> reason
> > unconfirmed transactions aren't double spent today is because nobody is
> > seriously *trying*.
> >
> > Luke
> >
>
>
> Newspapers are often sold in vending machines that make it possible for
> anyone to just pay the price of one and take them all?and most of the time
> they are not that carefully monitored. Why? Because most people have better
> things to do than try to steal a few newspapers. They probably were much
> more closely monitored earlier in their history?but once it became clear
> that despite the obvious attack vector very few people actually try to game
> it, vendors figured it wasn?t really that big a risk. Same thing applies to
> people trying to steal a piece of bubble gum at the cash register at a
> convenience store by double-spending.
>
> - Eric Lombrozo
>
> >
> ------------------------------------------------------------------------------
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/5b12e445/attachment.html>

From pieter.wuille at gmail.com  Sat Jun 20 17:13:06 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Sat, 20 Jun 2015 19:13:06 +0200
Subject: [Bitcoin-development] Hard fork via miner vote
In-Reply-To: <CAPg+sBijQ0Q9U00hUaotYujqW8M+v1ED+PV+ap2g7b0Z4=RNSA@mail.gmail.com>
References: <CAPg+sBijQ0Q9U00hUaotYujqW8M+v1ED+PV+ap2g7b0Z4=RNSA@mail.gmail.com>
Message-ID: <CAPg+sBhb6TyS=Bz4chLixw4Qc0Q1w6VdW-YTHZ-O_fyfvCJ+6Q@mail.gmail.com>

Hello all,

I've seen ideas around hard fork proposals that involve a block version
vote (a la BIP34, BIP66, or my more recent versionbits BIP draft). I
believe this is a bad idea, independent of what the hard fork itself is.

Ultimately, the purpose of a hard fork is asking the whole community to
change their full nodes to new code. The purpose of the trigger mechanism
is to establish when that has happened.

Using a 95% threshold, implies the fork can happen when at least 5% of
miners have not upgraded, which implies some full nodes have not (as miners
are nodes), and in addition, means the old chain can keep growing too,
confusing old non-miner nodes as well.

Ideally, the fork should be scheduled when one is certain nodes will have
upgraded, and the risk for a fork will be gone. If everyone has upgraded,
no vote is necessary, and if nodes have not, it remains risky to fork them
off.

I understand that, in order to keep humans in the loop, you want an
observable trigger mechanism, and a hashrate vote is an easy way to do
this. But at least, use a minimum timestamp you believe to be reasonable
for upgrade, and a 100% threshold afterwards. Anything else guarantees that
your forking change happens *knowingly* before the risk is gone.

You may argue that miners would be asked to - and have it in their best
interest - to not actually make blocks that violate the changed rule before
they are reasonably sure that everyone has upgraded. That is possible, but
it does not gain you anything over just using a 100% threshold, as how
would they be reasonably sure everyone has upgraded, while blocks creater
by non-upgraded miners are still being created?

TL;DR: use a timestamp switchover for a hard fork, or add a block voting
threshold as a means to keep humans in the loop, but if you do, use 100% as
threshold.

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/97364dc3/attachment.html>

From david.vorick at gmail.com  Sat Jun 20 17:26:29 2015
From: david.vorick at gmail.com (David Vorick)
Date: Sat, 20 Jun 2015 13:26:29 -0400
Subject: [Bitcoin-development] Hard fork via miner vote
In-Reply-To: <CAPg+sBhb6TyS=Bz4chLixw4Qc0Q1w6VdW-YTHZ-O_fyfvCJ+6Q@mail.gmail.com>
References: <CAPg+sBijQ0Q9U00hUaotYujqW8M+v1ED+PV+ap2g7b0Z4=RNSA@mail.gmail.com>
	<CAPg+sBhb6TyS=Bz4chLixw4Qc0Q1w6VdW-YTHZ-O_fyfvCJ+6Q@mail.gmail.com>
Message-ID: <CAFVRnyoqdbhGB1LVcawMqviq4ExvoOMM7CfFKSAtDgcZBc1TKw@mail.gmail.com>

I see it as unreasonable to expect all nodes to upgrade during a hardfork.
If you are intentionally waiting for that to happen, it's possible for an
extreme minority of nodes to hold the rest of the network hostage by simply
refusing to upgrade. However you want nodes to be able to protest until it
is clear that they have lost the battle without being at risk of getting
hardforked out of the network unexpectedly.

I think it makes sense to add a second fuse. After the 95% barrier has been
crossed, a 6 week timer starts that gives the remaining 5% time to upgrade.
If they still don't upgrade, they have intentionally forked themselves from
the network and it is not something that the remaining 95% need to be
concerned with.

On Sat, Jun 20, 2015 at 1:13 PM, Pieter Wuille <pieter.wuille at gmail.com>
wrote:

> Hello all,
>
> I've seen ideas around hard fork proposals that involve a block version
> vote (a la BIP34, BIP66, or my more recent versionbits BIP draft). I
> believe this is a bad idea, independent of what the hard fork itself is.
>
> Ultimately, the purpose of a hard fork is asking the whole community to
> change their full nodes to new code. The purpose of the trigger mechanism
> is to establish when that has happened.
>
> Using a 95% threshold, implies the fork can happen when at least 5% of
> miners have not upgraded, which implies some full nodes have not (as miners
> are nodes), and in addition, means the old chain can keep growing too,
> confusing old non-miner nodes as well.
>
> Ideally, the fork should be scheduled when one is certain nodes will have
> upgraded, and the risk for a fork will be gone. If everyone has upgraded,
> no vote is necessary, and if nodes have not, it remains risky to fork them
> off.
>
> I understand that, in order to keep humans in the loop, you want an
> observable trigger mechanism, and a hashrate vote is an easy way to do
> this. But at least, use a minimum timestamp you believe to be reasonable
> for upgrade, and a 100% threshold afterwards. Anything else guarantees that
> your forking change happens *knowingly* before the risk is gone.
>
> You may argue that miners would be asked to - and have it in their best
> interest - to not actually make blocks that violate the changed rule before
> they are reasonably sure that everyone has upgraded. That is possible, but
> it does not gain you anything over just using a 100% threshold, as how
> would they be reasonably sure everyone has upgraded, while blocks creater
> by non-upgraded miners are still being created?
>
> TL;DR: use a timestamp switchover for a hard fork, or add a block voting
> threshold as a means to keep humans in the loop, but if you do, use 100% as
> threshold.
>
> --
> Pieter
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/fe7f5f4e/attachment.html>

From kompreni at gmail.com  Sat Jun 20 17:38:50 2015
From: kompreni at gmail.com (Cameron Hejazi)
Date: Sat, 20 Jun 2015 10:38:50 -0700
Subject: [Bitcoin-development]  F2Pool has enabled full replace-by-fee
In-Reply-To: <CAAre=yTHLgH=DCVTBZ78MkFVYSTJ3YyV9yZL46nkX1x2RDiQRA@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CAOG=w-u6fmpnojpQmrFEMRK56WDsfhZgm406C3tVax5hsX2sOA@mail.gmail.com>
	<CACq0ZD5VDJRuKiq2NaPyoJdDVMPd+9YWtEr3pauS5ZNzxXXEig@mail.gmail.com>
	<201506200348.06564.luke@dashjr.org>
	<B7B38239-8EF5-4D12-B3E7-40AE152CF5A3@gmail.com>
	<CAAre=yTHLgH=DCVTBZ78MkFVYSTJ3YyV9yZL46nkX1x2RDiQRA@mail.gmail.com>
Message-ID: <CAKdn4uo=RK+PTUDk7x69yK9RoTUG4sU1TPf7rpJqjkfXS5k_kQ@mail.gmail.com>

On Saturday, June 20, 2015, Ivan Brightly <ibrightly at gmail.com
<javascript:_e(%7B%7D,'cvml','ibrightly at gmail.com');>> wrote:

> Yep - similarly: you live in a neighborhood with a local coffee store.
> Sure you could use a stolen credit card or a fake $5 bill, but it's not
> worth the risk of being caught for a $3 coffee. And on the other side, the
> store can deal with 1% of transactions getting reversed or having a fake
> bill so they don't change their procedures.
>

These analogies being brought are based on the goal of quick
payments, which is different from the goal of Bitcoin:
cryptographically sound, distributed consensus.



> Perfection is not necessary in all situations.
>

If you want zeroconf transactions, first realize that this goal currently
has no sound solution in Bitcoin and until it does, supporting it should
not be a part of the agenda. There are two paths going forward, not
independent of one another, that would achieve the goal of quick payments
for your coffee etc:
- Research/implement a solution that is consistent with the goal of Bitcoin
- Rely on a cosigning central authority

If you think the latter option is nasty, remember that people,
like corporations, can be nasty as well. Do not rely on the good faith of
people.

Cameron
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/744fcd89/attachment.html>

From tier.nolan at gmail.com  Sat Jun 20 17:46:52 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Sat, 20 Jun 2015 18:46:52 +0100
Subject: [Bitcoin-development] Hard fork via miner vote
In-Reply-To: <CAPg+sBhb6TyS=Bz4chLixw4Qc0Q1w6VdW-YTHZ-O_fyfvCJ+6Q@mail.gmail.com>
References: <CAPg+sBijQ0Q9U00hUaotYujqW8M+v1ED+PV+ap2g7b0Z4=RNSA@mail.gmail.com>
	<CAPg+sBhb6TyS=Bz4chLixw4Qc0Q1w6VdW-YTHZ-O_fyfvCJ+6Q@mail.gmail.com>
Message-ID: <CAE-z3OVJbJ=qq3OZvuxWW=17r32aAZf9fRLWd9pHdSw60k7Ftw@mail.gmail.com>

I agree giving notice that the change is going to happen is critical for a
hard fork.  If miners vote in favor, they need to give people time to
upgrade (or to decide to reject the fork).

The BIP 100 proposal is that no change will happen until a timestamp is
reached.  It isn't clear exactly how it would work.

Testnet: Sep 1st 2015
Mainnet: Jan 11th 2016

It suggests 90% of 12000 blocks (~83 days).

This means that if 10800 of the last 12000 blocks are the updated version,
then the change is considered locked in.

I think having an earlier "fail" threshold would be a good idea too.  This
guarantees notice.

Assuming 3 is <old rule> and 4 is <new rule>

If the median of 11 timestamp is after 1st Sep 2015 and less than 10800 of
the last 12000 blocks are version 4+, then reject version 4 blocks
If the median of 11 timestamp is after 1st Nov 2015 and at least 10800 of
the last 12000 blocks are version 4+, then reject version 3 blocks
(lock-in)
If the median of 11 timestamp is after 1st Jan 2016 and at least 10800 of
the last 12000 blocks are version 4+, the allow <new rule>

This means that if the 90% threshold is lost at any time between 1st Sep
and 1st Nov, then the fork is rejected.  Otherwise, after the 1st Nov, it
is locked in, but the new rules don't activate until 1st Jan.

For block size, miners could still soft fork back to 1MB after 1st Nov, it
there is a user/merchant revolt (maybe that would be version 5 blocks).


On Sat, Jun 20, 2015 at 6:13 PM, Pieter Wuille <pieter.wuille at gmail.com>
wrote:

> Hello all,
>
> I've seen ideas around hard fork proposals that involve a block version
> vote (a la BIP34, BIP66, or my more recent versionbits BIP draft). I
> believe this is a bad idea, independent of what the hard fork itself is.
>
> Ultimately, the purpose of a hard fork is asking the whole community to
> change their full nodes to new code. The purpose of the trigger mechanism
> is to establish when that has happened.
>
> Using a 95% threshold, implies the fork can happen when at least 5% of
> miners have not upgraded, which implies some full nodes have not (as miners
> are nodes), and in addition, means the old chain can keep growing too,
> confusing old non-miner nodes as well.
>
> Ideally, the fork should be scheduled when one is certain nodes will have
> upgraded, and the risk for a fork will be gone. If everyone has upgraded,
> no vote is necessary, and if nodes have not, it remains risky to fork them
> off.
>
> I understand that, in order to keep humans in the loop, you want an
> observable trigger mechanism, and a hashrate vote is an easy way to do
> this. But at least, use a minimum timestamp you believe to be reasonable
> for upgrade, and a 100% threshold afterwards. Anything else guarantees that
> your forking change happens *knowingly* before the risk is gone.
>
> You may argue that miners would be asked to - and have it in their best
> interest - to not actually make blocks that violate the changed rule before
> they are reasonably sure that everyone has upgraded. That is possible, but
> it does not gain you anything over just using a 100% threshold, as how
> would they be reasonably sure everyone has upgraded, while blocks creater
> by non-upgraded miners are still being created?
>
> TL;DR: use a timestamp switchover for a hard fork, or add a block voting
> threshold as a means to keep humans in the loop, but if you do, use 100% as
> threshold.
>
> --
> Pieter
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/564e4909/attachment.html>

From pieter.wuille at gmail.com  Sat Jun 20 18:11:53 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Sat, 20 Jun 2015 20:11:53 +0200
Subject: [Bitcoin-development] Hard fork via miner vote
In-Reply-To: <CAFVRnyoqdbhGB1LVcawMqviq4ExvoOMM7CfFKSAtDgcZBc1TKw@mail.gmail.com>
References: <CAPg+sBijQ0Q9U00hUaotYujqW8M+v1ED+PV+ap2g7b0Z4=RNSA@mail.gmail.com>
	<CAPg+sBhb6TyS=Bz4chLixw4Qc0Q1w6VdW-YTHZ-O_fyfvCJ+6Q@mail.gmail.com>
	<CAFVRnyoqdbhGB1LVcawMqviq4ExvoOMM7CfFKSAtDgcZBc1TKw@mail.gmail.com>
Message-ID: <CAPg+sBgmGcWF6YHg0rrq8AK3V323fw9mvms3u=RzuP=5j5v6hw@mail.gmail.com>

On Sat, Jun 20, 2015 at 7:26 PM, David Vorick <david.vorick at gmail.com>
wrote:

> I see it as unreasonable to expect all nodes to upgrade during a hardfork.
> If you are intentionally waiting for that to happen, it's possible for an
> extreme minority of nodes to hold the rest of the network hostage by simply
> refusing to upgrade. However you want nodes to be able to protest until it
> is clear that they have lost the battle without being at risk of getting
> hardforked out of the network unexpectedly.
>

You can't observe the majority of nodes, only miners, and weighed by
hashrate. If you need a mechanism for protest, that should happen before
the hard fork change code is rolled out. I am assuming a completely
uncontroversial change, in order to not confuse this discussion with the
debate about what hard forks should be done.

So I am not talking about protest, just about deploying a change. And yes,
it is unreasonable to expect that every single node will upgrade. But there
is a difference between ignoring old unmaintained nodes that do not
influence anyone's behaviour, and ignoring the nodes that power miners
producing actual blocks. In addition, having no blocks on the old chain is
safer than producing a small number, as you want full nodes that have not
noticed the fork to fail rather than see a slow but otherwise functional
chain.

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/9b72f78e/attachment.html>

From bip at mattwhitlock.name  Sat Jun 20 18:17:18 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Sat, 20 Jun 2015 14:17:18 -0400
Subject: [Bitcoin-development] Hard fork via miner vote
In-Reply-To: <CAPg+sBgmGcWF6YHg0rrq8AK3V323fw9mvms3u=RzuP=5j5v6hw@mail.gmail.com>
References: <CAPg+sBijQ0Q9U00hUaotYujqW8M+v1ED+PV+ap2g7b0Z4=RNSA@mail.gmail.com>
	<CAFVRnyoqdbhGB1LVcawMqviq4ExvoOMM7CfFKSAtDgcZBc1TKw@mail.gmail.com>
	<CAPg+sBgmGcWF6YHg0rrq8AK3V323fw9mvms3u=RzuP=5j5v6hw@mail.gmail.com>
Message-ID: <3848127.0flgkf9F4i@crushinator>

On Saturday, 20 June 2015, at 8:11 pm, Pieter Wuille wrote:
> you want full nodes that have not noticed the fork to fail rather than see a slow but otherwise functional chain.

Isn't that what the Alert mechanism is for? If these nodes continue running despite an alert telling them they're outdated, then it must be intentional.



From roy at gnomon.org.uk  Sat Jun 20 18:42:51 2015
From: roy at gnomon.org.uk (Roy Badami)
Date: Sat, 20 Jun 2015 19:42:51 +0100
Subject: [Bitcoin-development] Hard fork via miner vote
In-Reply-To: <CAPg+sBhb6TyS=Bz4chLixw4Qc0Q1w6VdW-YTHZ-O_fyfvCJ+6Q@mail.gmail.com>
References: <CAPg+sBijQ0Q9U00hUaotYujqW8M+v1ED+PV+ap2g7b0Z4=RNSA@mail.gmail.com>
	<CAPg+sBhb6TyS=Bz4chLixw4Qc0Q1w6VdW-YTHZ-O_fyfvCJ+6Q@mail.gmail.com>
Message-ID: <20150620184250.GV13473@giles.gnomon.org.uk>

As I've observed before, Gavin originally advocated either a 99% or
100% buy in by miners for a hard fork to trigger.

https://gist.github.com/gavinandresen/2355445

I don't understand why people (Gavin included) now seem to favour a
much more modest supermajority except perhaps that they believe that
that level of consensus is unachievable.

FWIW I'm in favour of a block size increase.  I just wish that half as
much energy had gone into discussing whether we want a 100%
supermajority or a 99% supermajority or an 80% supermajority, as has
gone into discussing whether we want 1MB blocks or 8MB blocks or 20MB
blocks.  (So thank you, Pieter, for raising this.)

roy

On Sat, Jun 20, 2015 at 07:13:06PM +0200, Pieter Wuille wrote:
> Hello all,
> 
> I've seen ideas around hard fork proposals that involve a block version
> vote (a la BIP34, BIP66, or my more recent versionbits BIP draft). I
> believe this is a bad idea, independent of what the hard fork itself is.
> 
> Ultimately, the purpose of a hard fork is asking the whole community to
> change their full nodes to new code. The purpose of the trigger mechanism
> is to establish when that has happened.
> 
> Using a 95% threshold, implies the fork can happen when at least 5% of
> miners have not upgraded, which implies some full nodes have not (as miners
> are nodes), and in addition, means the old chain can keep growing too,
> confusing old non-miner nodes as well.
> 
> Ideally, the fork should be scheduled when one is certain nodes will have
> upgraded, and the risk for a fork will be gone. If everyone has upgraded,
> no vote is necessary, and if nodes have not, it remains risky to fork them
> off.
> 
> I understand that, in order to keep humans in the loop, you want an
> observable trigger mechanism, and a hashrate vote is an easy way to do
> this. But at least, use a minimum timestamp you believe to be reasonable
> for upgrade, and a 100% threshold afterwards. Anything else guarantees that
> your forking change happens *knowingly* before the risk is gone.
> 
> You may argue that miners would be asked to - and have it in their best
> interest - to not actually make blocks that violate the changed rule before
> they are reasonably sure that everyone has upgraded. That is possible, but
> it does not gain you anything over just using a 100% threshold, as how
> would they be reasonably sure everyone has upgraded, while blocks creater
> by non-upgraded miners are still being created?
> 
> TL;DR: use a timestamp switchover for a hard fork, or add a block voting
> threshold as a means to keep humans in the loop, but if you do, use 100% as
> threshold.
> 
> -- 
> Pieter

> ------------------------------------------------------------------------------

> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From adam at signal11.com  Sat Jun 20 18:43:31 2015
From: adam at signal11.com (Adam Weiss)
Date: Sat, 20 Jun 2015 14:43:31 -0400
Subject: [Bitcoin-development] Mailman incompatibility with DKIM ...
In-Reply-To: <CAJHLa0OSNh3pJV6q7zkaiG=0Vg8qacvo1x8tdpXXnk5Je=9fyQ@mail.gmail.com>
References: <CAEz79PoDn+-aDkqSfPeQFUjYDEDEhSrJ2mFYcbitHBf4oADBSg@mail.gmail.com>
	<CANEZrP3vut8uYWeeynLdwvSM56eXZZdgidaEgcvg1FNMye6P9w@mail.gmail.com>
	<CAEz79Pr4ug8zyJ5bibCG3m0YD8gkBiXysWJsZDThTiwXsgd7YQ@mail.gmail.com>
	<CANEZrP1T3r=VDRBTM_jrm_g0BkQy_NZA40BPcZtVDq_0au6TKw@mail.gmail.com>
	<CAEz79PriNzD18Es60=2Nkz5U6G=Ocrm9ezJmK0P1DirdP-vPkw@mail.gmail.com>
	<CAFVoEQQF2TLTMpm0DvdXJV-mG3OA6ZU0=vbX1jZdKQ53=xwuOg@mail.gmail.com>
	<CAJHLa0OSNh3pJV6q7zkaiG=0Vg8qacvo1x8tdpXXnk5Je=9fyQ@mail.gmail.com>
Message-ID: <CAFVoEQRtSSUYROxTHCBXam08D5rTUW-mrtrr7L4jx4rMQSOLGw@mail.gmail.com>

It changes the mechanics at least.  A quick glance at RFC(2)822 makes it
clear that this is a pretty weakly specified behavior and is somewhat of an
edge case.  However, rewriting the envelopes has become somewhat prevalent
since strict DMARC has been adopted and I suspect that most recent MUAs
will handle it well.  I know that at least with gmail it works as I would
expect.  (Makes sense considering that this is how Google Groups handles
the problem.)

In any event, I really think it's worth a shot since having the subject and
footer tags is valuable. If it turns out to be problematic, it's not the
end of the world and things could be easily switched to go the lkml route...

--adam


On Fri, Jun 19, 2015 at 4:44 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:

> On Fri, Jun 19, 2015 at 12:47 PM, Adam Weiss <adam at signal11.com> wrote:
>
>> Hi Warren,
>>
>> If you set dmarc_moderation_action to "Munge from", the list will detect
>> when someone posts from a domain that publishes a request for strict
>> signature checking for all mails originating from it (in DNS) and rewrite
>> the envelope-from to the list's address.  Reply-to will be added and set to
>> the original sender.
>>
>
> That seems to change Reply behavior for those recipients?  It would seem
> to accidentally direct mail intended to DKIM-user + list to DKIM-user.
>
> --
> Jeff Garzik
> Bitcoin core developer and open source evangelist
> BitPay, Inc.      https://bitpay.com/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/b744a6d1/attachment.html>

From odinn.cyberguerrilla at riseup.net  Sat Jun 20 20:04:48 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Sat, 20 Jun 2015 13:04:48 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <20150619103959.GA32315@savin.petertodd.org>
References: <20150619103959.GA32315@savin.petertodd.org>
Message-ID: <5585C760.5010304@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Peter,

Recently there was a brouhaha over Coinbase censoring the ability of
firearms businesses to accept bitcoins via Coinbase
https://www.reddit.com/r/Bitcoin/comments/3agbs7/coinbase_shuts_down_bit
coin_biz_for_firearms/

The question and relevance here to this is that for people who are
going for the alternate route (e.g., bailing on Coinbase / Bitpay /
similar web wallets, in favor of setting up with something like
Electrum and using Gear https://gear.mycelium.com/ as payment
processor or Straight
https://github.com/snitko/straight-server,
what would be the answer to "What does this mean for me?" for this topic
?

On 06/19/2015 03:39 AM, Peter Todd wrote:
> Yesterday F2Pool, currently the largest pool with 21% of the
> hashing power, enabled full replace-by-fee (RBF) support after
> discussions with me. This means that transactions that F2Pool has
> will be replaced if a conflicting transaction pays a higher fee.
> There are no requirements for the replacement transaction to pay
> addresses that were paid by the previous transaction.
> 
> 
> I'm a user. What does this mean for me? 
> ---------------------------------------
> 
> In the short term, very little. Wallet software aimed at average
> users has no ability to reliably detect conditions where an
> unconfirmed transaction may be double-spent by the sender. For
> example, Schildbach's Bitcoin Wallet for Android doesn't even
> detect double-spends of unconfirmed transactions when connected to
> a RBF or Bitcoin XT nodes that propagate them. The least
> sophisticated double-spend attack possibly - simply broadcasting
> two conflicting transactions at the same time - has about 50%
> probability of success against these wallets.
> 
> Additionally, SPV wallets based on bitcoinj can't even detect
> invalid transactions reliably, instead trusting the full node(s) it
> is connected too over the unauthenticated, unencrypted, P2P
> protocol to do validation for them. For instance due to a unfixed
> bug? Bitcoin XT nodes will relay double-spends that spend the
> output of the conflicting transaction. I've personally tested this
> with Schildbach's Bitcoin Wallet for Android, which shows such
> invalid transactions as standard, unconfirmed, transactions.
> 
> Users should continue to assume that unconfirmed transactions could
> be trivially reversed by the sender until the first confirmation.
> In general, only the sender can reverse a transaction, so if you do
> trust the sender feel free to assume an unconfirmed transaction
> will eventually confirm. However, if you do not trust the sender
> and/or have no other recourse if they double-spend you, wait until
> at least the first confirmation before assuming the transaction
> will go through.
> 
> In the long term, miner support of full RBF has a number of
> advantages to users, allowing you to more efficiently make
> transactions, paying lower fees. However you'll need a wallet
> supporting these features; none exist yet.
> 
> 
> I'm a business. What does this mean for me? 
> -------------------------------------------
> 
> If you use your own node to verify transactions, you probably are
> in a similar situation as average users, so again, this means very
> little to you.
> 
> If you use a payment processor/transaction API such as BitPay,
> Coinbase, BlockCypher, etc. you may or may not be accepting
> unconfirmed transactions, and they may or may not be "guaranteed"
> by your payment processor even if double-spent. If like most
> merchants you're using the API such that confirmations are required
> prior to accepting orders (e.g. taking a meaningful loss such as
> shipping a product if the tx is reversed) nothing changes for you.
> If not I recommend you contact your payment processor.
> 
> 
> I'm a miner. Why should I support replace-by-fee? 
> -------------------------------------------------
> 
> Whether full or first-seen-safe? RBF support (along with 
> child-pays-for-parent) is an important step towards a fully
> functioning transaction fee market that doesn't lead to users'
> transactions getting mysteriously "stuck", particularly during
> network flooding events/attacks. A better functioning fee market
> will help reduce pressure to increase the blocksize, particularly
> from the users creating the most valuable transactions.
> 
> Full RBF also helps make use of the limited blockchain space more 
> efficiently, with up to 90%+ transaction size savings possible in
> some transaction patterns. (e.g. long payment chains?) More users
> in less blockchain space will lead to higher overall fees per
> block.
> 
> Finally as we'll discuss below full RBF prevents a number of
> serious threats to the existing level playing field that miners
> operate in.
> 
> 
> Why can't we make accepting unconfirmed txs from untrusted people
> safe? 
> ----------------------------------------------------------------------
- -
>
>  For a decentralized wallet, the situation is pretty bleak. These
> wallets only have a handful of connections to the network, with no
> way of knowing if those connections give an accurate view of what
> transactions miners actually know about.
> 
> The only serious attempt to fix this problem for decentralized
> wallets that has been actually deployed is Andresen/Harding's
> double-spend relaying, implemented in Bitcoin XT. It relays up to
> one double-spend transaction per double-spent txout, with the
> intended effect to warn recipients. In practice however this
> functionality makes it easier to double-spend rather than harder,
> by giving an efficient and easy way to get double-spends to miners
> after the fact. Notably my RBF implementation even connects to
> Bitcoin XT nodes, reserving a % of all incoming and outgoing
> connection slots for them.
> 
> Additionally Bitcoin XT's double-spend relaying is subject to
> attacks include bandwidth exhaustion, sybil attacks, and Gervais's
> non-sybil interactive attacks? among many others.
> 
> 
> What about centralised wallets? -------------------------------
> 
> Here the solutions being deployed, planned, and proposed are
> harmful, and even represent serious threats to Bitcoin's
> decentralization.
> 
> 
> Confidence factors ------------------
> 
> Many services such as BlockCypher? have attempted to predict the 
> probability that unconfirmed transactions will be mined, often 
> guaranteeing merchants payment? even in the event of a
> double-spend. The key component of these predictions is to sybil
> attack the P2P network as a whole, connecting to as many nodes as
> possible to measure transaction propagation. Additionally these
> services connect to pools directly via the getblocktemplate
> protocol, repeatedly downloading via GBT the lists of transactions
> in the to-be-mined blocks to determine what transactions miners are
> attempting to mine.
> 
> None of these measures scale, wasting significant network and
> miner resources; in one instance a sybil attack by Chainalysis even
> completely blocked the users of the SPV wallet Breadwallet? from
> accessing the network. These measures also don't work very well,
> giving double-spend attackers incentives to sybil attack miners
> themselves.
> 
> 
> Transaction processing contracts with miners 
> --------------------------------------------
> 
> The next step after measuring propagation fails is to contract
> with miners directly, signing contracts with as much of the hashing
> power as possible to get the transactions they want mined and
> double-spends rejected. The miners/pools would then provide an
> authenticated API endpoint for exclusive use of this service that
> would allow the service to add and remove specific transactions to
> the mempool on demand.
> 
> There's a number of serious problems with this:
> 
> 1) Mining contracts can be used to double-spend
> 
> ...even when they're being used "honestly".
> 
> Suppose Alice is a merchant using CoinPayCypher, who has contracts
> with 75% of the hashing power. Bob, another merchant, meanwhile
> uses a decentralized Bitcoin Core backend for payments to his
> website.
> 
> Mallory wants to double-spend Bob's to buy his expensive products.
> He can do this by creating a transaction, tx1, that pays Alice,
> followed by a second transaction, tx2, that pays Bob. In any
> circumstance when Mallory can convince Bob to accept tx2, but
> prevent Bob from seeing tx1, the chance of Malory's double-spend
> succeeding becomes ~75% because CoinPayCypher's contracts with
> mining ensure the transaction paying Alice will get mined.
> 
> Of course, dishonest use and/or compromise makes double-spending 
> trivial: Malory can use the API credentials to ask miners to
> reject Bob's payment at any time.
> 
> 
> 2) They still don't work, without 51% attacking other miners
> 
> Even if CoinPayCypher has 75% of the hashing power on contract,
> that's still a potentially 75% chance of being double-spent. The
> 25% of miners who haven't signed contracts have no _decentralized_
> way of ensuring they don't create blocks with double-spends, let
> alone at low cost. If those miners won't or can't sign contracts
> with CoinPayCypher the only next step available is to reject their
> blocks entirely.
> 
> 
> 3) Legal contracts give the advantage to non-anonymous miners in 
> Western jurisdictions
> 
> Suppose CoinPayCypher is a US company, and you're a miner with 1% 
> hashing power located in northern China. The barriers to you
> succesfully negotiating a contract with CoinPayCypher are
> significant. You don't speak the same langauge, you're in a
> completely different jurisdiction so enforcing the legal contract
> is difficult, and being just 1%, CoinPayCypher sees you as
> insignificant.
> 
> Who's going to get the profitable hashing power contracts first, if
> at all? Your English speaking competitors in the west. This is
> inherently a pressure towards centralization of mining.
> 
> 
> Why isn't this being announced on the bitcoin-security list first? 
> ------------------------------------------------------------------
> 
> I've had repeated discussions with services vulnerable to
> double-spends; they have been made well aware of the risk they're
> taking. If they've followed my own and others' advice they'll at
> minimum have constant monitoring of the rate of double-spends both
> on their own services and on the P2P network in general.
> 
> If you choose to take a risk you should accept the consequences.
> 
> 
> How do I actually use full RBF? -------------------------------
> 
> First get the full-RBF patch to v0.10.2:
> 
> https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.10.2
> 
> The above implementation of RBF includes additional code to find
> and preferentially connect to other RBF nodes, as well as Bitcoin
> XT nodes. Secondly, try out my replace-by-fee-tools at:
> 
> https://github.com/petertodd/replace-by-fee-tools
> 
> You can watch double-spends on the network here:
> 
> http://respends.thinlink.com/
> 
> 
> References ----------
> 
> 1) "Replace-by-fee v0.10.2 - Serious DoS attack fixed! - Also
> novel variants of existing attacks w/ Bitcoin XT and Android
> Bitcoin Wallet", Peter Todd, May 23rd 2015, Bitcoin-development
> mailing list, 
> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/
msg07795.html
>
>  2) "From Zero to Hero: Bitcoin Transactions in 8 Seconds", June
> 2nd, 2014, Erik Voorhees, 
> https://medium.com/blockcypher-blog/from-zero-to-hero-bitcoin-transact
ions-in-8-seconds-7c9edcb3b734
>
>  3) Coinbase Merchant API, Accessed Jun 19th 2015, 
> https://developers.coinbase.com/docs/merchants/callbacks#confirmations
>
>  4) "Chainalysis CEO Denies 'Sybil Attack' on Bitcoin's Network", 
> March 14th 2015, Grace Caffyn, Coindesk, 
> http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-
on-bitcoin-network/
>
>  5) "First-Seen-Safe Replace-by-Fee", May 25th 2015, Peter Todd,
> Bitcoin-development mailing list, 
> http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.ne
t/msg07829.html
>
>  6) "Cost savings by using replace-by-fee, 30-90%", May 25th 2015,
> Peter Todd, Bitcoin-development mailing list, 
> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/
msg07813.html
>
>  7) "Tampering with the Delivery of Blocks and Transactions in
> Bitcoin", Arthur Gervais and Hubert Ritzdorf and Ghassan O. Karame
> and Srdjan Capkun, Cryptology ePrint Archive: Report 2015/578, Jun
> 10th 2015, http://eprint.iacr.org/2015/578
> 
> 
> 
> ----------------------------------------------------------------------
- --------
>
> 
> 
> 
> _______________________________________________ Bitcoin-development
> mailing list Bitcoin-development at lists.sourceforge.net 
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVhcdfAAoJEGxwq/inSG8CVxUH/1E7P/fuAaDaVMGexaW8MVRT
wEPx/sI1IU7S7UC5wXdcm9EufSK4smPLyPuW97LAPRIGnSvTF8BEYW+EW1hLtt0V
p9Vbj7+Ii5CJtarLebjeYKjiNSXF8h2p8oH+eeCjUygnzHt5Hsbc8R0aMRyPDJkT
lNQmzWGxN1rBTjTQZ+FDA2E2AA1Dkv7UXL15MwudxLOCUONTMh3uwUKC5dz9HE+5
dz3iZWx879VLuaQscDz65FBf5axSKFjL+RGkIuPLF8B1ybsSl0ZYEctmPIv5Ld4V
w0bw+oABCFvCKbINdUY+VOdXogDXJDVmCaY/Bbu6sPoZcr0FmHrvHd9KfngjkR4=
=7W68
-----END PGP SIGNATURE-----



From roy at gnomon.org.uk  Sat Jun 20 20:07:53 2015
From: roy at gnomon.org.uk (Roy Badami)
Date: Sat, 20 Jun 2015 21:07:53 +0100
Subject: [Bitcoin-development] Hard fork via miner vote
In-Reply-To: <20150620184250.GV13473@giles.gnomon.org.uk>
References: <CAPg+sBijQ0Q9U00hUaotYujqW8M+v1ED+PV+ap2g7b0Z4=RNSA@mail.gmail.com>
	<CAPg+sBhb6TyS=Bz4chLixw4Qc0Q1w6VdW-YTHZ-O_fyfvCJ+6Q@mail.gmail.com>
	<20150620184250.GV13473@giles.gnomon.org.uk>
Message-ID: <20150620200751.GW13473@giles.gnomon.org.uk>

> I just wish that half as much energy had gone into discussing
> whether we want a 100% supermajority or a 99% supermajority or an
> 80% supermajority, as has gone into discussing whether we want 1MB
> blocks or 8MB blocks or 20MB blocks.

And I understand that Gavin is now proposing that a 75% supermajority
should be enough.  This constantly reducing threshold worries me
greatly.

There is a risk that we get a situation where a stable amount of
hashing power somewhat over 75% (say 80%) accepts the fork - and
therefore triggers it - but both a significant minority (say 20%) of
hashrate rejects it *and* the economic majority rejects it.

I'm not saying this is a likely outcome - indeed I hope it's not - but
it is a _possible_ outcome.  Ok, the chain that the economic marjority
is using will have a bit of a temporary crisis due to 50 minute block
times, but it will recover in a few weeks as difficulty adjusts.  And,
in the worst case, you end up with two competing semi-stable
ecosystems both claiming to be 'the real Bitcoin'.

My fear is that in that situation it could take an extended period -
perhaps many months - for one fork to clearly win and the other fork
to lose support (or at least lose sufficient support to be relegated
to altcoin status).  I think such an extended period of uncertainty
would be the ultimate worst case scenario for Bitcoin.  It _probably_
wouldn't be fatal to Bitcoin, but it would certainly be far worse for
Bitcoin than getting the blocksize wrong even by an order of magnitude
(in either direction).  Therefore if we can design the hardfork
mechanism to make such an outcome impossible, I believe we really need
to.

roy



From jtimon at jtimon.cc  Sat Jun 20 21:22:41 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sat, 20 Jun 2015 23:22:41 +0200
Subject: [Bitcoin-development] [BIP draft] Motivation and deployment of
	consensus rules changes ([soft/hard]forks)
Message-ID: <CABm2gDqPBPiDG1BUAipEsLfyE1VFyvdqdoxtYjkKvGDvBQ8qMg@mail.gmail.com>

This is an attempt to unify views on why and how hardforks can be
deployed. I would like to turn this into an informational BIP later
after gathering some feedback.

Please, do not discuss block size issues here: there's plenty of
threads to do so. The scope of this one is only hardforks and
softforks in a more abstract way. Sometimes block size changes are
used as examples because no other example came to mind
(non-blocksize-related examples for the same cases [or others] are
a user should be just ignored. But what if the welcomed), and
if we go into too much detail they stop being useful as examples. So
please, try to avoid going into too much detail about the concrete
examples when possible.

https://github.com/jtimon/bips/blob/bip-forks/bip-forks.org

Please, feel free to make suggestions or bike-shed some of the terms.



From tier.nolan at gmail.com  Sat Jun 20 22:08:19 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Sat, 20 Jun 2015 23:08:19 +0100
Subject: [Bitcoin-development] [BIP draft] Motivation and deployment of
 consensus rules changes ([soft/hard]forks)
In-Reply-To: <CABm2gDqPBPiDG1BUAipEsLfyE1VFyvdqdoxtYjkKvGDvBQ8qMg@mail.gmail.com>
References: <CABm2gDqPBPiDG1BUAipEsLfyE1VFyvdqdoxtYjkKvGDvBQ8qMg@mail.gmail.com>
Message-ID: <CAE-z3OVM8vwjo_-FOggSoOWR78w=Rmm+GS7Xv9uSK0jdx1_zdw@mail.gmail.com>

The off by 1 bug could be fixed by a soft fork.  Since the point is to show
how a non-controversial hard fork works, it doesn't matter much.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/5151bb9a/attachment.html>

From jtimon at jtimon.cc  Sat Jun 20 23:16:20 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sun, 21 Jun 2015 01:16:20 +0200
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<c2a392703d02e1d674a029c60deb6d94@riseup.net>
	<20150619151127.GA11263@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
Message-ID: <CABm2gDqsMtUdDZ+fWPZVUnoLTv-ziVM0hPs10L=9f3ZnRXD0fQ@mail.gmail.com>

On Fri, Jun 19, 2015 at 5:37 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> The Bitcoin network was designed (or should be designed) with the requirement that it can withstand deliberate double-spend attacks that can come from anywhere at any time?

I disagree with this premise. Please, don't take this as an argument
from authority fallacy, but I will cite Satoshi to express what I
think the assumptions while using the system should be:

"As long as a majority of CPU power is controlled by nodes that are
not cooperating to attack the network, they'll generate the longest
chain and outpace attackers."

I can't say for sure what was meant by "attacking the network" in this
context but I personally mean trying to rewrite valid and
proof-of-work-timestamped history.
Unconfirmed transactions are simply not part of history yet. Ordering
unconfirmed transactions in a consensus compatible way without a
universal clock is impossible, that's why we're using proof of work in
the first place.

Alternative policies are NOT attacks on the network.



From jtimon at jtimon.cc  Sat Jun 20 23:20:26 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sun, 21 Jun 2015 01:20:26 +0200
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
Message-ID: <CABm2gDrHFB_XtQXVvoFeEH5TUfWSc3JLcNuo-oSXNJaExB+Vdg@mail.gmail.com>

On Fri, Jun 19, 2015 at 6:42 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> If we want a non-repudiation mechanism in the protocol, we should explicitly define one rather than relying on ?prima facie? assumptions. Otherwise, I would recommend not relying on the existence of a signed transaction as proof of intent to pay?

Non-repudiation can be built on top of the payment protocol layer.



From justusranvier at riseup.net  Sat Jun 20 23:37:22 2015
From: justusranvier at riseup.net (justusranvier at riseup.net)
Date: Sat, 20 Jun 2015 18:37:22 -0500
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CABm2gDrHFB_XtQXVvoFeEH5TUfWSc3JLcNuo-oSXNJaExB+Vdg@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
	<CABm2gDrHFB_XtQXVvoFeEH5TUfWSc3JLcNuo-oSXNJaExB+Vdg@mail.gmail.com>
Message-ID: <8a49c53a032503eeca4f51cdef725fe1@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 2015-06-20 18:20, Jorge Tim?n wrote:
> On Fri, Jun 19, 2015 at 6:42 PM, Eric Lombrozo <elombrozo at gmail.com> 
> wrote:
>> If we want a non-repudiation mechanism in the protocol, we should 
>> explicitly define one rather than relying on ?prima facie? 
>> assumptions. Otherwise, I would recommend not relying on the existence 
>> of a signed transaction as proof of intent to pay?
> 
> Non-repudiation can be built on top of the payment protocol layer.


Non-repudiation is an intrinsic property of the ECDSA signatures which 
Bitcoin uses - it's not a feature that needs to be built.

There's no way to accidentally sign a transaction and accidentally 
announce it publicly. There is no form of third-party error that can 
result in a payee receiving an erroneous contract.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQIcBAEBAgAGBQJVhfkXAAoJECpf2nDq2eYjTwIP/ApsURTKJgAsSYb4/lvoujAE
EhOUBfmb+WkrEceASWGgmXFfQBQW7c99sT46cA1HdCPLZMtYhZYPubtYRouSupfF
vOfeKLsZsUXCadeLuzxP7av3PJhmvB1CO1Rv8CLBQptKUFkzyM3CypBviNTy33X6
KL2zyAMERpCVOejg7MSP3IUXIjgG1ayEm+mzwqi4j2Ms0h+oT6I/krAKV0J9SwJC
PtLq/JRRriVtb2FE+biEqYRYfeOcZDYNbr+/y0HPtqqMxg6azNwx1z2aG5A+ziCd
EvVqVJXU3TAINQdIvVS4ACF1J+ttMJ99r8VW0yN7o3fEckuRr3pyymx4I+XExSX5
ujflqadRGUS8ZenUPTPUbLfhARnmBwLM94L+xiQvIwiinxxtOKn3WW1oDv9FNp0l
99fkv9mbV5RnYlkMfWMn2AcwcBv7TSgpFGsZY4wBn/mgFh1PotGc2tA5kU79cz8R
+F/k49+GwfgTPML7UhIGtjQjPreeqDyHNtv9XHtyp8LF5vO1na4oHSO6SeU4rIXH
4oIjw+Q6X/2L/fp8QNLB+onmKWobcl1Ec+0H+ZfQBujtew5BHFwcPwFmlC4tofiJ
7r8QjoPsRhJmaxm+MJOK/BIzhZErkMz26AQ/tfY4jtJCuLbEDdMLtC9hYVuiDHIb
HBxxif83dALjX1Sgid66
=o9dG
-----END PGP SIGNATURE-----




From elombrozo at gmail.com  Sat Jun 20 23:47:53 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sat, 20 Jun 2015 16:47:53 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CABm2gDqsMtUdDZ+fWPZVUnoLTv-ziVM0hPs10L=9f3ZnRXD0fQ@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<c2a392703d02e1d674a029c60deb6d94@riseup.net>
	<20150619151127.GA11263@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<CABm2gDqsMtUdDZ+fWPZVUnoLTv-ziVM0hPs10L=9f3ZnRXD0fQ@mail.gmail.com>
Message-ID: <17636B68-7A3A-4412-96D7-38CCA7C44E27@gmail.com>


> On Jun 20, 2015, at 4:16 PM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
> 
> On Fri, Jun 19, 2015 at 5:37 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>> The Bitcoin network was designed (or should be designed) with the requirement that it can withstand deliberate double-spend attacks that can come from anywhere at any time?
> 
> I disagree with this premise. Please, don't take this as an argument
> from authority fallacy, but I will cite Satoshi to express what I
> think the assumptions while using the system should be:
> 
> "As long as a majority of CPU power is controlled by nodes that are
> not cooperating to attack the network, they'll generate the longest
> chain and outpace attackers."
> 
> I can't say for sure what was meant by "attacking the network" in this
> context but I personally mean trying to rewrite valid and
> proof-of-work-timestamped history.
> Unconfirmed transactions are simply not part of history yet. Ordering
> unconfirmed transactions in a consensus compatible way without a
> universal clock is impossible, that's why we're using proof of work in
> the first place.
> 
> Alternative policies are NOT attacks on the network.

Just to be clear, Jorge, I wasn?t suggesting that unconfirmed transactions are part of any sort of global consensus. In fact, they very much AREN?T. Which is exactly why it is extremely dangerous to accept unconfirmed transactions as final unless you clearly have assessed the risks and it makes sense for the particular business use case.

- Eric Lombrozo
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/a7c74859/attachment.sig>

From elombrozo at gmail.com  Sat Jun 20 23:52:26 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sat, 20 Jun 2015 16:52:26 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <17636B68-7A3A-4412-96D7-38CCA7C44E27@gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<c2a392703d02e1d674a029c60deb6d94@riseup.net>
	<20150619151127.GA11263@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<CABm2gDqsMtUdDZ+fWPZVUnoLTv-ziVM0hPs10L=9f3ZnRXD0fQ@mail.gmail.com>
	<17636B68-7A3A-4412-96D7-38CCA7C44E27@gmail.com>
Message-ID: <3A30BB58-0234-4C2D-80CA-3CD540EAECA1@gmail.com>

I should also add that I think many in this space believe they have assessed the risk as acceptable but haven?t really considered how to cap potential losses nor made contingency plans for when the inevitable attacks *do* come.

- Eric Lombrozo

> On Jun 20, 2015, at 4:47 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> 
> 
>> On Jun 20, 2015, at 4:16 PM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
>> 
>> On Fri, Jun 19, 2015 at 5:37 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>>> The Bitcoin network was designed (or should be designed) with the requirement that it can withstand deliberate double-spend attacks that can come from anywhere at any time?
>> 
>> I disagree with this premise. Please, don't take this as an argument
>> from authority fallacy, but I will cite Satoshi to express what I
>> think the assumptions while using the system should be:
>> 
>> "As long as a majority of CPU power is controlled by nodes that are
>> not cooperating to attack the network, they'll generate the longest
>> chain and outpace attackers."
>> 
>> I can't say for sure what was meant by "attacking the network" in this
>> context but I personally mean trying to rewrite valid and
>> proof-of-work-timestamped history.
>> Unconfirmed transactions are simply not part of history yet. Ordering
>> unconfirmed transactions in a consensus compatible way without a
>> universal clock is impossible, that's why we're using proof of work in
>> the first place.
>> 
>> Alternative policies are NOT attacks on the network.
> 
> Just to be clear, Jorge, I wasn?t suggesting that unconfirmed transactions are part of any sort of global consensus. In fact, they very much AREN?T. Which is exactly why it is extremely dangerous to accept unconfirmed transactions as final unless you clearly have assessed the risks and it makes sense for the particular business use case.
> 
> - Eric Lombrozo

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/bb11155c/attachment.sig>

From elombrozo at gmail.com  Sat Jun 20 23:56:14 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sat, 20 Jun 2015 16:56:14 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <17636B68-7A3A-4412-96D7-38CCA7C44E27@gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<c2a392703d02e1d674a029c60deb6d94@riseup.net>
	<20150619151127.GA11263@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<CABm2gDqsMtUdDZ+fWPZVUnoLTv-ziVM0hPs10L=9f3ZnRXD0fQ@mail.gmail.com>
	<17636B68-7A3A-4412-96D7-38CCA7C44E27@gmail.com>
Message-ID: <8C9DD3A9-05EF-4F92-89D3-4F72B39B7D8D@gmail.com>


> On Jun 20, 2015, at 4:47 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> 
> 
>> On Jun 20, 2015, at 4:16 PM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
>> 
>> On Fri, Jun 19, 2015 at 5:37 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>>> The Bitcoin network was designed (or should be designed) with the requirement that it can withstand deliberate double-spend attacks that can come from anywhere at any time?
>> 
>> I disagree with this premise. Please, don't take this as an argument
>> from authority fallacy, but I will cite Satoshi to express what I
>> think the assumptions while using the system should be:
>> 
>> "As long as a majority of CPU power is controlled by nodes that are
>> not cooperating to attack the network, they'll generate the longest
>> chain and outpace attackers."
>> 
>> I can't say for sure what was meant by "attacking the network" in this
>> context but I personally mean trying to rewrite valid and
>> proof-of-work-timestamped history.
>> Unconfirmed transactions are simply not part of history yet. Ordering
>> unconfirmed transactions in a consensus compatible way without a
>> universal clock is impossible, that's why we're using proof of work in
>> the first place.
>> 
>> Alternative policies are NOT attacks on the network.
> 
> Just to be clear, Jorge, I wasn?t suggesting that unconfirmed transactions are part of any sort of global consensus. In fact, they very much AREN?T. Which is exactly why it is extremely dangerous to accept unconfirmed transactions as final unless you clearly have assessed the risks and it makes sense for the particular business use case.
> 
> - Eric Lombrozo

I think the misunderstanding was in perhaps my earlier statement seemed like I was suggesting that it?s the protocol?s responsibility to protect merchants from double-spends. On the contrary - I think we agree - the protocol CANNOT make any guarantees to ANYONE until we do converge on a history. The ?design? I speak of here is more on the merchant side.

- Eric Lombrozo
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/1ecc0abe/attachment.sig>

From elombrozo at gmail.com  Sun Jun 21 00:19:08 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sat, 20 Jun 2015 17:19:08 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <8a49c53a032503eeca4f51cdef725fe1@riseup.net>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
	<CABm2gDrHFB_XtQXVvoFeEH5TUfWSc3JLcNuo-oSXNJaExB+Vdg@mail.gmail.com>
	<8a49c53a032503eeca4f51cdef725fe1@riseup.net>
Message-ID: <B4B8DB86-C03A-4C79-BD94-3E073D5E7003@gmail.com>


> On Jun 20, 2015, at 4:37 PM, justusranvier at riseup.net wrote:
> 
> Signed PGP part
> On 2015-06-20 18:20, Jorge Tim?n wrote:
> > On Fri, Jun 19, 2015 at 6:42 PM, Eric Lombrozo <elombrozo at gmail.com>
> > wrote:
> >> If we want a non-repudiation mechanism in the protocol, we should
> >> explicitly define one rather than relying on ?prima facie?
> >> assumptions. Otherwise, I would recommend not relying on the existence
> >> of a signed transaction as proof of intent to pay?
> >
> > Non-repudiation can be built on top of the payment protocol layer.
> 
> 
> Non-repudiation is an intrinsic property of the ECDSA signatures which
> Bitcoin uses - it's not a feature that needs to be built.
> 
> There's no way to accidentally sign a transaction and accidentally
> announce it publicly. There is no form of third-party error that can
> result in a payee receiving an erroneous contract.
> 
> 

Justus,

We don?t even have a concept of identity in the Bitcoin protocol, let alone non-repudiation. What good is non-repudiation if there?s no way to even associate a signature with a legal entity?

Sure, we could use the ECDSA signatures in transactions as part of a non-repudiation scheme - but the recipient would have to also have a means to establish the identity of the sender and associate it with the the transaction.


Furthermore, in light of the fact that there *are* fully legitimate use cases for sending conflicting transactions?and the fact that determination of intent isn?t always entirely clear?we should refrain from attaching any further significance transaction signatures other than that ?the sender was willing to have it included in the blockchain if a miner were to have seen it and accepted it?but perhaps the sender would have changed their mind before it actually did get accepted.?

- Eric Lombrozo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/9dd48b8f/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/9dd48b8f/attachment.sig>

From justusranvier at riseup.net  Sun Jun 21 00:27:40 2015
From: justusranvier at riseup.net (justusranvier at riseup.net)
Date: Sat, 20 Jun 2015 19:27:40 -0500
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <B4B8DB86-C03A-4C79-BD94-3E073D5E7003@gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
	<CABm2gDrHFB_XtQXVvoFeEH5TUfWSc3JLcNuo-oSXNJaExB+Vdg@mail.gmail.com>
	<8a49c53a032503eeca4f51cdef725fe1@riseup.net>
	<B4B8DB86-C03A-4C79-BD94-3E073D5E7003@gmail.com>
Message-ID: <6d025db96e7aec4e6e47a76883a9a1e3@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 2015-06-20 19:19, Eric Lombrozo wrote:
>> On Jun 20, 2015, at 4:37 PM, justusranvier at riseup.net wrote:
>> 
>> Signed PGP part
>> On 2015-06-20 18:20, Jorge Tim?n wrote:
>> > On Fri, Jun 19, 2015 at 6:42 PM, Eric Lombrozo <elombrozo at gmail.com>
>> > wrote:
>> >> If we want a non-repudiation mechanism in the protocol, we should
>> >> explicitly define one rather than relying on ?prima facie?
>> >> assumptions. Otherwise, I would recommend not relying on the existence
>> >> of a signed transaction as proof of intent to pay?
>> >
>> > Non-repudiation can be built on top of the payment protocol layer.
>> 
>> 
>> Non-repudiation is an intrinsic property of the ECDSA signatures which
>> Bitcoin uses - it's not a feature that needs to be built.
>> 
>> There's no way to accidentally sign a transaction and accidentally
>> announce it publicly. There is no form of third-party error that can
>> result in a payee receiving an erroneous contract.
>> 
>> 
> 
> Justus,
> 
> We don?t even have a concept of identity in the Bitcoin protocol, let
> alone non-repudiation. What good is non-repudiation if there?s no way
> to even associate a signature with a legal entity?
> 
> Sure, we could use the ECDSA signatures in transactions as part of a
> non-repudiation scheme - but the recipient would have to also have a
> means to establish the identity of the sender and associate it with
> the the transaction.
> 
> 
> Furthermore, in light of the fact that there *are* fully legitimate
> use cases for sending conflicting transactions?and the fact that
> determination of intent isn?t always entirely clear?we should refrain
> from attaching any further significance transaction signatures other
> than that ?the sender was willing to have it included in the
> blockchain if a miner were to have seen it and accepted it?but perhaps
> the sender would have changed their mind before it actually did get
> accepted.?

Bitcoin has no concept of identity, but in any type of commercial 
transaction the parties involved must know some minimal amount of 
identity information in order to transact at all.

Except for some identifiable special cases, I think a payee is perfectly 
justified in treating a double spend of a payment sent to them as part 
of a commercial transaction as a fraud attempt and employing whatever 
non-Bitcoin recourse mechanisms, if any, they have access to.

- From the perspective of the network, the obviously correct action for 
any node or miner is to relay the first version of any transaction they 
see. The primary purpose of mining is to resolve this 
otherwise-unresolvable problem of determining which transaction among a 
set of conflicting transactions happened first.

If a node or miner wants to deviate from the obviously correct 
behaviour, and if they want to avoid harming the value of the network, 
they should be particularly careful to make sure their deviation from 
"first seen" doesn't introduce harmful unintended side effects, like 
making fraud easier.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQIcBAEBAgAGBQJVhgTgAAoJECpf2nDq2eYjkksQAJyRVhT2vNQUqlOfH9Z/9EeT
LkUm8eg3f1i3xhJVxtLGVJkRmMYmuNtH0lIsH/B3iED732oZSzhwM1F5ky948Mw7
FFG65iUTrXVup9eKZuD7T3/FaQHfC5YME36F4UvEtSUcRDUKmongRGuuw7sNv617
APl3MDwZ8tVWaDb7yZ251is6Fx1l3b6tR4tHUzyIWPyIOuXOsyUaoS1cYJ00YcI5
WIzIXIlRDNpvpIXv4NFtr0BH6BmTCCZOJH3X9Hmtxqrg/dlnfnmc1pZgAyqRXj1d
5of7dYwb+bhHpU9TvcDYprN55Kmida2gTZewfr33rTXcVyjhs5N3bmIRIRrPltMA
fFqlKJ7Fo4ldyJ4OEK6upuFHwmQRNL7qr/ODmYg83rJj3BdTzXsJ1l3BRAUBS+cm
gc8Q3urxmVyspht+U64GO+ieLA9xb9izFMa+GL8nag0VuHc5J7XDjfzXBT8VK5be
646AZ0tFULNLOBWEJuBRbCRUs90YK2ePpGnAwiZ7HuwHMAC333FYiBuRxgwgn+xv
hHMlQWTtrl0zJrxD+pcb5axC7zQdVHVeyNJDi4RF1Wau2NX/itHcUqRr75N8/Si+
GPF8JSnvLlplEsEMBAtbKvg4dn1AOEuJpXtDYrWrzZDs+/wwz5PfQ2oCZ3YRHNx2
po6di9uOSlLq0BJJfSrM
=HbNG
-----END PGP SIGNATURE-----



From elombrozo at gmail.com  Sun Jun 21 00:36:47 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sat, 20 Jun 2015 17:36:47 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <6d025db96e7aec4e6e47a76883a9a1e3@riseup.net>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
	<CABm2gDrHFB_XtQXVvoFeEH5TUfWSc3JLcNuo-oSXNJaExB+Vdg@mail.gmail.com>
	<8a49c53a032503eeca4f51cdef725fe1@riseup.net>
	<B4B8DB86-C03A-4C79-BD94-3E073D5E7003@gmail.com>
	<6d025db96e7aec4e6e47a76883a9a1e3@riseup.net>
Message-ID: <BDEEE2FF-7B42-46B6-9071-E753A594F93E@gmail.com>


> On Jun 20, 2015, at 5:27 PM, justusranvier at riseup.net wrote:
> 
> Signed PGP part
> On 2015-06-20 19:19, Eric Lombrozo wrote:
> >> On Jun 20, 2015, at 4:37 PM, justusranvier at riseup.net wrote:
> >>
> >> Signed PGP part
> >> On 2015-06-20 18:20, Jorge Tim?n wrote:
> >> > On Fri, Jun 19, 2015 at 6:42 PM, Eric Lombrozo <elombrozo at gmail.com>
> >> > wrote:
> >> >> If we want a non-repudiation mechanism in the protocol, we should
> >> >> explicitly define one rather than relying on ?prima facie?
> >> >> assumptions. Otherwise, I would recommend not relying on the existence
> >> >> of a signed transaction as proof of intent to pay?
> >> >
> >> > Non-repudiation can be built on top of the payment protocol layer.
> >>
> >>
> >> Non-repudiation is an intrinsic property of the ECDSA signatures which
> >> Bitcoin uses - it's not a feature that needs to be built.
> >>
> >> There's no way to accidentally sign a transaction and accidentally
> >> announce it publicly. There is no form of third-party error that can
> >> result in a payee receiving an erroneous contract.
> >>
> >>
> >
> > Justus,
> >
> > We don?t even have a concept of identity in the Bitcoin protocol, let
> > alone non-repudiation. What good is non-repudiation if there?s no way
> > to even associate a signature with a legal entity?
> >
> > Sure, we could use the ECDSA signatures in transactions as part of a
> > non-repudiation scheme - but the recipient would have to also have a
> > means to establish the identity of the sender and associate it with
> > the the transaction.
> >
> >
> > Furthermore, in light of the fact that there *are* fully legitimate
> > use cases for sending conflicting transactions?and the fact that
> > determination of intent isn?t always entirely clear?we should refrain
> > from attaching any further significance transaction signatures other
> > than that ?the sender was willing to have it included in the
> > blockchain if a miner were to have seen it and accepted it?but perhaps
> > the sender would have changed their mind before it actually did get
> > accepted.?
> 
> Bitcoin has no concept of identity, but in any type of commercial
> transaction the parties involved must know some minimal amount of
> identity information in order to transact at all.
> 
> Except for some identifiable special cases, I think a payee is perfectly
> justified in treating a double spend of a payment sent to them as part
> of a commercial transaction as a fraud attempt and employing whatever
> non-Bitcoin recourse mechanisms, if any, they have access to.
> 
> From the perspective of the network, the obviously correct action for
> any node or miner is to relay the first version of any transaction they
> see. The primary purpose of mining is to resolve this
> otherwise-unresolvable problem of determining which transaction among a
> set of conflicting transactions happened first.
> 
> If a node or miner wants to deviate from the obviously correct
> behaviour, and if they want to avoid harming the value of the network,
> they should be particularly careful to make sure their deviation from
> "first seen" doesn't introduce harmful unintended side effects, like
> making fraud easier.
> 

The contract between the buyer and seller is actually outside the Bitcoin network. Yes, a merchant that gets cheated could seek some other recourse in such an event?but the behavior you?re claiming as ?obviously correct? is NOT obviously correct.  In fact, there are arguments against this ?obviously correct? way even if we were to accept the premise that the signature implies a promise to pay (which I think many reasonable individuals would also dispute). For instance, by relaying conflicting transactions it makes it potentially easier for others to discover the double-spend attempt (of course, this requires wallets to not be lazy about this?perhaps such relays could be flagged or placed in a special message type).

- Eric Lombrozo



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/ccb0176e/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/ccb0176e/attachment.sig>

From elombrozo at gmail.com  Sun Jun 21 00:54:39 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sat, 20 Jun 2015 17:54:39 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <6d025db96e7aec4e6e47a76883a9a1e3@riseup.net>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
	<CABm2gDrHFB_XtQXVvoFeEH5TUfWSc3JLcNuo-oSXNJaExB+Vdg@mail.gmail.com>
	<8a49c53a032503eeca4f51cdef725fe1@riseup.net>
	<B4B8DB86-C03A-4C79-BD94-3E073D5E7003@gmail.com>
	<6d025db96e7aec4e6e47a76883a9a1e3@riseup.net>
Message-ID: <70534C5D-8834-42B5-B495-FD9975E8FCF4@gmail.com>

One more thing I would like to add to this thread: I want to make it unequivocally clear that I believe what is making double-spends easier has relatively little to do with the protocol and almost everything to do with poor software and poor security policy on the merchant end. Perhaps it isn?t prudent to push out changes to the relay policy that make these exploits even easier right now - but we NEED to be applying some kind of pressure on the merchant end to upgrade their stuff to be more resilient so that we have more room for changes on things like relay policy without significant disruption to the network.

- Eric Lombrozo
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/2a4ae83e/attachment.sig>

From dariosn at gmail.com  Sun Jun 21 02:11:49 2015
From: dariosn at gmail.com (Dario Sneidermanis)
Date: Sat, 20 Jun 2015 23:11:49 -0300
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <20150619103959.GA32315@savin.petertodd.org>
References: <20150619103959.GA32315@savin.petertodd.org>
Message-ID: <CAHBM8UjC_qMvrpweEDuZxMqACu=xtvsDzd2BMB_B+PAS3Y8aaA@mail.gmail.com>

se, lo re putearon a Peter Todd en reddit por esto
On Jun 19, 2015 7:42 AM, "Peter Todd" <pete at petertodd.org> wrote:

> Yesterday F2Pool, currently the largest pool with 21% of the hashing
> power, enabled full replace-by-fee (RBF) support after discussions with
> me. This means that transactions that F2Pool has will be replaced if a
> conflicting transaction pays a higher fee. There are no requirements for
> the replacement transaction to pay addresses that were paid by the
> previous transaction.
>
>
> I'm a user. What does this mean for me?
> ---------------------------------------
>
> In the short term, very little. Wallet software aimed at average users
> has no ability to reliably detect conditions where an unconfirmed
> transaction may be double-spent by the sender. For example, Schildbach's
> Bitcoin Wallet for Android doesn't even detect double-spends of
> unconfirmed transactions when connected to a RBF or Bitcoin XT nodes
> that propagate them. The least sophisticated double-spend attack
> possibly - simply broadcasting two conflicting transactions at the same
> time - has about 50% probability of success against these wallets.
>
> Additionally, SPV wallets based on bitcoinj can't even detect invalid
> transactions reliably, instead trusting the full node(s) it is connected
> too over the unauthenticated, unencrypted, P2P protocol to do validation
> for them. For instance due to a unfixed bug? Bitcoin XT nodes will relay
> double-spends that spend the output of the conflicting transaction. I've
> personally tested this with Schildbach's Bitcoin Wallet for Android,
> which shows such invalid transactions as standard, unconfirmed,
> transactions.
>
> Users should continue to assume that unconfirmed transactions could be
> trivially reversed by the sender until the first confirmation. In
> general, only the sender can reverse a transaction, so if you do trust
> the sender feel free to assume an unconfirmed transaction will
> eventually confirm. However, if you do not trust the sender and/or have
> no other recourse if they double-spend you, wait until at least the
> first confirmation before assuming the transaction will go through.
>
> In the long term, miner support of full RBF has a number of advantages
> to users, allowing you to more efficiently make transactions, paying
> lower fees. However you'll need a wallet supporting these features; none
> exist yet.
>
>
> I'm a business. What does this mean for me?
> -------------------------------------------
>
> If you use your own node to verify transactions, you probably are in a
> similar situation as average users, so again, this means very little to
> you.
>
> If you use a payment processor/transaction API such as BitPay, Coinbase,
> BlockCypher, etc. you may or may not be accepting unconfirmed
> transactions, and they may or may not be "guaranteed" by your payment
> processor even if double-spent. If like most merchants you're using the
> API such that confirmations are required prior to accepting orders (e.g.
> taking a meaningful loss such as shipping a product if the tx is
> reversed) nothing changes for you. If not I recommend you contact your
> payment processor.
>
>
> I'm a miner. Why should I support replace-by-fee?
> -------------------------------------------------
>
> Whether full or first-seen-safe? RBF support (along with
> child-pays-for-parent) is an important step towards a fully functioning
> transaction fee market that doesn't lead to users' transactions getting
> mysteriously "stuck", particularly during network flooding
> events/attacks. A better functioning fee market will help reduce
> pressure to increase the blocksize, particularly from the users creating
> the most valuable transactions.
>
> Full RBF also helps make use of the limited blockchain space more
> efficiently, with up to 90%+ transaction size savings possible in some
> transaction patterns. (e.g. long payment chains?) More users in less
> blockchain space will lead to higher overall fees per block.
>
> Finally as we'll discuss below full RBF prevents a number of serious
> threats to the existing level playing field that miners operate in.
>
>
> Why can't we make accepting unconfirmed txs from untrusted people safe?
> -----------------------------------------------------------------------
>
> For a decentralized wallet, the situation is pretty bleak. These wallets
> only have a handful of connections to the network, with no way of
> knowing if those connections give an accurate view of what transactions
> miners actually know about.
>
> The only serious attempt to fix this problem for decentralized wallets
> that has been actually deployed is Andresen/Harding's double-spend
> relaying, implemented in Bitcoin XT. It relays up to one double-spend
> transaction per double-spent txout, with the intended effect to warn
> recipients. In practice however this functionality makes it easier to
> double-spend rather than harder, by giving an efficient and easy way to
> get double-spends to miners after the fact. Notably my RBF
> implementation even connects to Bitcoin XT nodes, reserving a % of all
> incoming and outgoing connection slots for them.
>
> Additionally Bitcoin XT's double-spend relaying is subject to attacks
> include bandwidth exhaustion, sybil attacks, and Gervais's non-sybil
> interactive attacks? among many others.
>
>
> What about centralised wallets?
> -------------------------------
>
> Here the solutions being deployed, planned, and proposed are harmful,
> and even represent serious threats to Bitcoin's decentralization.
>
>
> Confidence factors
> ------------------
>
> Many services such as BlockCypher? have attempted to predict the
> probability that unconfirmed transactions will be mined, often
> guaranteeing merchants payment? even in the event of a double-spend. The
> key component of these predictions is to sybil attack the P2P network as
> a whole, connecting to as many nodes as possible to measure transaction
> propagation. Additionally these services connect to pools directly via
> the getblocktemplate protocol, repeatedly downloading via GBT the lists
> of transactions in the to-be-mined blocks to determine what transactions
> miners are attempting to mine.
>
> None of these measures scale, wasting significant network and miner
> resources; in one instance a sybil attack by Chainalysis even completely
> blocked the users of the SPV wallet Breadwallet? from accessing the
> network. These measures also don't work very well, giving double-spend
> attackers incentives to sybil attack miners themselves.
>
>
> Transaction processing contracts with miners
> --------------------------------------------
>
> The next step after measuring propagation fails is to contract with
> miners directly, signing contracts with as much of the hashing power as
> possible to get the transactions they want mined and double-spends
> rejected. The miners/pools would then provide an authenticated API
> endpoint for exclusive use of this service that would allow the service
> to add and remove specific transactions to the mempool on demand.
>
> There's a number of serious problems with this:
>
> 1) Mining contracts can be used to double-spend
>
> ...even when they're being used "honestly".
>
> Suppose Alice is a merchant using CoinPayCypher, who has contracts with
> 75% of the hashing power. Bob, another merchant, meanwhile uses a
> decentralized Bitcoin Core backend for payments to his website.
>
> Mallory wants to double-spend Bob's to buy his expensive products. He
> can do this by creating a transaction, tx1, that pays Alice, followed by
> a second transaction, tx2, that pays Bob. In any circumstance when
> Mallory can convince Bob to accept tx2, but prevent Bob from seeing tx1,
> the chance of Malory's double-spend succeeding becomes ~75% because
> CoinPayCypher's contracts with mining ensure the transaction paying
> Alice will get mined.
>
> Of course, dishonest use and/or compromise makes double-spending
> trivial: Malory can use the API credentials to ask miners to reject
> Bob's payment at any time.
>
>
> 2) They still don't work, without 51% attacking other miners
>
> Even if CoinPayCypher has 75% of the hashing power on contract, that's
> still a potentially 75% chance of being double-spent. The 25% of miners
> who haven't signed contracts have no _decentralized_ way of ensuring
> they don't create blocks with double-spends, let alone at low cost. If
> those miners won't or can't sign contracts with CoinPayCypher the only
> next step available is to reject their blocks entirely.
>
>
> 3) Legal contracts give the advantage to non-anonymous miners in
>    Western jurisdictions
>
> Suppose CoinPayCypher is a US company, and you're a miner with 1%
> hashing power located in northern China. The barriers to you succesfully
> negotiating a contract with CoinPayCypher are significant. You don't
> speak the same langauge, you're in a completely different jurisdiction
> so enforcing the legal contract is difficult, and being just 1%,
> CoinPayCypher sees you as insignificant.
>
> Who's going to get the profitable hashing power contracts first, if at
> all? Your English speaking competitors in the west. This is inherently a
> pressure towards centralization of mining.
>
>
> Why isn't this being announced on the bitcoin-security list first?
> ------------------------------------------------------------------
>
> I've had repeated discussions with services vulnerable to double-spends;
> they have been made well aware of the risk they're taking. If they've
> followed my own and others' advice they'll at minimum have constant
> monitoring of the rate of double-spends both on their own services and
> on the P2P network in general.
>
> If you choose to take a risk you should accept the consequences.
>
>
> How do I actually use full RBF?
> -------------------------------
>
> First get the full-RBF patch to v0.10.2:
>
>     https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.10.2
>
> The above implementation of RBF includes additional code to find and
> preferentially connect to other RBF nodes, as well as Bitcoin XT nodes.
> Secondly, try out my replace-by-fee-tools at:
>
>     https://github.com/petertodd/replace-by-fee-tools
>
> You can watch double-spends on the network here:
>
>     http://respends.thinlink.com/
>
>
> References
> ----------
>
> 1) "Replace-by-fee v0.10.2 - Serious DoS attack fixed! - Also novel
>     variants of existing attacks w/ Bitcoin XT and Android Bitcoin Wallet",
>    Peter Todd, May 23rd 2015, Bitcoin-development mailing list,
>
> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07795.html
>
> 2) "From Zero to Hero: Bitcoin Transactions in 8 Seconds",
>    June 2nd, 2014, Erik Voorhees,
>
> https://medium.com/blockcypher-blog/from-zero-to-hero-bitcoin-transactions-in-8-seconds-7c9edcb3b734
>
> 3) Coinbase Merchant API, Accessed Jun 19th 2015,
>    https://developers.coinbase.com/docs/merchants/callbacks#confirmations
>
> 4) "Chainalysis CEO Denies 'Sybil Attack' on Bitcoin's Network",
>    March 14th 2015, Grace Caffyn, Coindesk,
>
> http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-on-bitcoin-network/
>
> 5) "First-Seen-Safe Replace-by-Fee",
>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,
>
> http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07829.html
>
> 6) "Cost savings by using replace-by-fee, 30-90%",
>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,
>
> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07813.html
>
> 7) "Tampering with the Delivery of Blocks and Transactions in Bitcoin",
>     Arthur Gervais and Hubert Ritzdorf and Ghassan O. Karame and Srdjan
> Capkun,
>     Cryptology ePrint Archive: Report 2015/578, Jun 10th 2015,
>     http://eprint.iacr.org/2015/578
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000070a2bb3b92c20d5c2c971e6e1a7abe55cdbbe6a2dd9a5ad
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/2c858ddf/attachment.html>

From dariosn at gmail.com  Sun Jun 21 02:23:27 2015
From: dariosn at gmail.com (Dario Sneidermanis)
Date: Sat, 20 Jun 2015 23:23:27 -0300
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CAHBM8UjC_qMvrpweEDuZxMqACu=xtvsDzd2BMB_B+PAS3Y8aaA@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<CAHBM8UjC_qMvrpweEDuZxMqACu=xtvsDzd2BMB_B+PAS3Y8aaA@mail.gmail.com>
Message-ID: <CAHBM8Ui=Ahkw-x_B5UeemJduDbBMyzwSQPSzU-+RKekmsbqB=A@mail.gmail.com>

Sorry about that, ignore me
On Jun 20, 2015 11:11 PM, "Dario Sneidermanis" <dariosn at gmail.com> wrote:

> se, lo re putearon a Peter Todd en reddit por esto
> On Jun 19, 2015 7:42 AM, "Peter Todd" <pete at petertodd.org> wrote:
>
>> Yesterday F2Pool, currently the largest pool with 21% of the hashing
>> power, enabled full replace-by-fee (RBF) support after discussions with
>> me. This means that transactions that F2Pool has will be replaced if a
>> conflicting transaction pays a higher fee. There are no requirements for
>> the replacement transaction to pay addresses that were paid by the
>> previous transaction.
>>
>>
>> I'm a user. What does this mean for me?
>> ---------------------------------------
>>
>> In the short term, very little. Wallet software aimed at average users
>> has no ability to reliably detect conditions where an unconfirmed
>> transaction may be double-spent by the sender. For example, Schildbach's
>> Bitcoin Wallet for Android doesn't even detect double-spends of
>> unconfirmed transactions when connected to a RBF or Bitcoin XT nodes
>> that propagate them. The least sophisticated double-spend attack
>> possibly - simply broadcasting two conflicting transactions at the same
>> time - has about 50% probability of success against these wallets.
>>
>> Additionally, SPV wallets based on bitcoinj can't even detect invalid
>> transactions reliably, instead trusting the full node(s) it is connected
>> too over the unauthenticated, unencrypted, P2P protocol to do validation
>> for them. For instance due to a unfixed bug? Bitcoin XT nodes will relay
>> double-spends that spend the output of the conflicting transaction. I've
>> personally tested this with Schildbach's Bitcoin Wallet for Android,
>> which shows such invalid transactions as standard, unconfirmed,
>> transactions.
>>
>> Users should continue to assume that unconfirmed transactions could be
>> trivially reversed by the sender until the first confirmation. In
>> general, only the sender can reverse a transaction, so if you do trust
>> the sender feel free to assume an unconfirmed transaction will
>> eventually confirm. However, if you do not trust the sender and/or have
>> no other recourse if they double-spend you, wait until at least the
>> first confirmation before assuming the transaction will go through.
>>
>> In the long term, miner support of full RBF has a number of advantages
>> to users, allowing you to more efficiently make transactions, paying
>> lower fees. However you'll need a wallet supporting these features; none
>> exist yet.
>>
>>
>> I'm a business. What does this mean for me?
>> -------------------------------------------
>>
>> If you use your own node to verify transactions, you probably are in a
>> similar situation as average users, so again, this means very little to
>> you.
>>
>> If you use a payment processor/transaction API such as BitPay, Coinbase,
>> BlockCypher, etc. you may or may not be accepting unconfirmed
>> transactions, and they may or may not be "guaranteed" by your payment
>> processor even if double-spent. If like most merchants you're using the
>> API such that confirmations are required prior to accepting orders (e.g.
>> taking a meaningful loss such as shipping a product if the tx is
>> reversed) nothing changes for you. If not I recommend you contact your
>> payment processor.
>>
>>
>> I'm a miner. Why should I support replace-by-fee?
>> -------------------------------------------------
>>
>> Whether full or first-seen-safe? RBF support (along with
>> child-pays-for-parent) is an important step towards a fully functioning
>> transaction fee market that doesn't lead to users' transactions getting
>> mysteriously "stuck", particularly during network flooding
>> events/attacks. A better functioning fee market will help reduce
>> pressure to increase the blocksize, particularly from the users creating
>> the most valuable transactions.
>>
>> Full RBF also helps make use of the limited blockchain space more
>> efficiently, with up to 90%+ transaction size savings possible in some
>> transaction patterns. (e.g. long payment chains?) More users in less
>> blockchain space will lead to higher overall fees per block.
>>
>> Finally as we'll discuss below full RBF prevents a number of serious
>> threats to the existing level playing field that miners operate in.
>>
>>
>> Why can't we make accepting unconfirmed txs from untrusted people safe?
>> -----------------------------------------------------------------------
>>
>> For a decentralized wallet, the situation is pretty bleak. These wallets
>> only have a handful of connections to the network, with no way of
>> knowing if those connections give an accurate view of what transactions
>> miners actually know about.
>>
>> The only serious attempt to fix this problem for decentralized wallets
>> that has been actually deployed is Andresen/Harding's double-spend
>> relaying, implemented in Bitcoin XT. It relays up to one double-spend
>> transaction per double-spent txout, with the intended effect to warn
>> recipients. In practice however this functionality makes it easier to
>> double-spend rather than harder, by giving an efficient and easy way to
>> get double-spends to miners after the fact. Notably my RBF
>> implementation even connects to Bitcoin XT nodes, reserving a % of all
>> incoming and outgoing connection slots for them.
>>
>> Additionally Bitcoin XT's double-spend relaying is subject to attacks
>> include bandwidth exhaustion, sybil attacks, and Gervais's non-sybil
>> interactive attacks? among many others.
>>
>>
>> What about centralised wallets?
>> -------------------------------
>>
>> Here the solutions being deployed, planned, and proposed are harmful,
>> and even represent serious threats to Bitcoin's decentralization.
>>
>>
>> Confidence factors
>> ------------------
>>
>> Many services such as BlockCypher? have attempted to predict the
>> probability that unconfirmed transactions will be mined, often
>> guaranteeing merchants payment? even in the event of a double-spend. The
>> key component of these predictions is to sybil attack the P2P network as
>> a whole, connecting to as many nodes as possible to measure transaction
>> propagation. Additionally these services connect to pools directly via
>> the getblocktemplate protocol, repeatedly downloading via GBT the lists
>> of transactions in the to-be-mined blocks to determine what transactions
>> miners are attempting to mine.
>>
>> None of these measures scale, wasting significant network and miner
>> resources; in one instance a sybil attack by Chainalysis even completely
>> blocked the users of the SPV wallet Breadwallet? from accessing the
>> network. These measures also don't work very well, giving double-spend
>> attackers incentives to sybil attack miners themselves.
>>
>>
>> Transaction processing contracts with miners
>> --------------------------------------------
>>
>> The next step after measuring propagation fails is to contract with
>> miners directly, signing contracts with as much of the hashing power as
>> possible to get the transactions they want mined and double-spends
>> rejected. The miners/pools would then provide an authenticated API
>> endpoint for exclusive use of this service that would allow the service
>> to add and remove specific transactions to the mempool on demand.
>>
>> There's a number of serious problems with this:
>>
>> 1) Mining contracts can be used to double-spend
>>
>> ...even when they're being used "honestly".
>>
>> Suppose Alice is a merchant using CoinPayCypher, who has contracts with
>> 75% of the hashing power. Bob, another merchant, meanwhile uses a
>> decentralized Bitcoin Core backend for payments to his website.
>>
>> Mallory wants to double-spend Bob's to buy his expensive products. He
>> can do this by creating a transaction, tx1, that pays Alice, followed by
>> a second transaction, tx2, that pays Bob. In any circumstance when
>> Mallory can convince Bob to accept tx2, but prevent Bob from seeing tx1,
>> the chance of Malory's double-spend succeeding becomes ~75% because
>> CoinPayCypher's contracts with mining ensure the transaction paying
>> Alice will get mined.
>>
>> Of course, dishonest use and/or compromise makes double-spending
>> trivial: Malory can use the API credentials to ask miners to reject
>> Bob's payment at any time.
>>
>>
>> 2) They still don't work, without 51% attacking other miners
>>
>> Even if CoinPayCypher has 75% of the hashing power on contract, that's
>> still a potentially 75% chance of being double-spent. The 25% of miners
>> who haven't signed contracts have no _decentralized_ way of ensuring
>> they don't create blocks with double-spends, let alone at low cost. If
>> those miners won't or can't sign contracts with CoinPayCypher the only
>> next step available is to reject their blocks entirely.
>>
>>
>> 3) Legal contracts give the advantage to non-anonymous miners in
>>    Western jurisdictions
>>
>> Suppose CoinPayCypher is a US company, and you're a miner with 1%
>> hashing power located in northern China. The barriers to you succesfully
>> negotiating a contract with CoinPayCypher are significant. You don't
>> speak the same langauge, you're in a completely different jurisdiction
>> so enforcing the legal contract is difficult, and being just 1%,
>> CoinPayCypher sees you as insignificant.
>>
>> Who's going to get the profitable hashing power contracts first, if at
>> all? Your English speaking competitors in the west. This is inherently a
>> pressure towards centralization of mining.
>>
>>
>> Why isn't this being announced on the bitcoin-security list first?
>> ------------------------------------------------------------------
>>
>> I've had repeated discussions with services vulnerable to double-spends;
>> they have been made well aware of the risk they're taking. If they've
>> followed my own and others' advice they'll at minimum have constant
>> monitoring of the rate of double-spends both on their own services and
>> on the P2P network in general.
>>
>> If you choose to take a risk you should accept the consequences.
>>
>>
>> How do I actually use full RBF?
>> -------------------------------
>>
>> First get the full-RBF patch to v0.10.2:
>>
>>     https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.10.2
>>
>> The above implementation of RBF includes additional code to find and
>> preferentially connect to other RBF nodes, as well as Bitcoin XT nodes.
>> Secondly, try out my replace-by-fee-tools at:
>>
>>     https://github.com/petertodd/replace-by-fee-tools
>>
>> You can watch double-spends on the network here:
>>
>>     http://respends.thinlink.com/
>>
>>
>> References
>> ----------
>>
>> 1) "Replace-by-fee v0.10.2 - Serious DoS attack fixed! - Also novel
>>     variants of existing attacks w/ Bitcoin XT and Android Bitcoin
>> Wallet",
>>    Peter Todd, May 23rd 2015, Bitcoin-development mailing list,
>>
>> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07795.html
>>
>> 2) "From Zero to Hero: Bitcoin Transactions in 8 Seconds",
>>    June 2nd, 2014, Erik Voorhees,
>>
>> https://medium.com/blockcypher-blog/from-zero-to-hero-bitcoin-transactions-in-8-seconds-7c9edcb3b734
>>
>> 3) Coinbase Merchant API, Accessed Jun 19th 2015,
>>    https://developers.coinbase.com/docs/merchants/callbacks#confirmations
>>
>> 4) "Chainalysis CEO Denies 'Sybil Attack' on Bitcoin's Network",
>>    March 14th 2015, Grace Caffyn, Coindesk,
>>
>> http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-on-bitcoin-network/
>>
>> 5) "First-Seen-Safe Replace-by-Fee",
>>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,
>>
>> http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07829.html
>>
>> 6) "Cost savings by using replace-by-fee, 30-90%",
>>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,
>>
>> http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07813.html
>>
>> 7) "Tampering with the Delivery of Blocks and Transactions in Bitcoin",
>>     Arthur Gervais and Hubert Ritzdorf and Ghassan O. Karame and Srdjan
>> Capkun,
>>     Cryptology ePrint Archive: Report 2015/578, Jun 10th 2015,
>>     http://eprint.iacr.org/2015/578
>>
>> --
>> 'peter'[:-1]@petertodd.org
>> 0000000000000000070a2bb3b92c20d5c2c971e6e1a7abe55cdbbe6a2dd9a5ad
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/74d91624/attachment.html>

From tomh at thinlink.com  Sun Jun 21 05:56:13 2015
From: tomh at thinlink.com (Tom Harding)
Date: Sat, 20 Jun 2015 22:56:13 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <70534C5D-8834-42B5-B495-FD9975E8FCF4@gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>	<812d8353e66637ec182da31bc0a9aac1@riseup.net>	<1727885.UUNByX4Jyd@crushinator>	<83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>	<CABm2gDrHFB_XtQXVvoFeEH5TUfWSc3JLcNuo-oSXNJaExB+Vdg@mail.gmail.com>	<8a49c53a032503eeca4f51cdef725fe1@riseup.net>	<B4B8DB86-C03A-4C79-BD94-3E073D5E7003@gmail.com>	<6d025db96e7aec4e6e47a76883a9a1e3@riseup.net>
	<70534C5D-8834-42B5-B495-FD9975E8FCF4@gmail.com>
Message-ID: <558651FD.1010308@thinlink.com>

On 6/20/2015 5:54 PM, Eric Lombrozo wrote:
> Perhaps it isn?t prudent to push out changes to the relay policy that make these exploits even easier right now - but we NEED to be applying some kind of pressure on the merchant end to upgrade their stuff to be more resilient so that we have more room for changes on things like relay policy without significant disruption to the network.
>

There's no need to worry about causing more problems by relaying
double-spends.  After a year of watching, it's clear that already only
20% of hash power strictly obeys first-seen.

http://i.imgur.com/0bYXrjn.png

It may be surprising that
 - The period of ambiguity is very short - just 2 seconds
   (this makes sense, given the .5s median propagation time)
 - Fast double-spends between 2 and 15 seconds are less successful
 - The steady-state 80% respend success rate is reached after just 15
seconds

The >30s data point includes txes that were respent after a long time,
sometimes months.  Those longer-term respends are to be expected, as
people reclaim stuck txes.

Paying attention to double-spends is an opportunity for wallets and
merchants .  With 140 Bitcoin XT nodes online, you're probably already
receiving them.  Most wallets, including vanilla core, don't even alert
when a double-spend of a wallet transaction appears in a block - even
though there may still be time to withhold delivery of the goods/services.

If FSS RBF gains miner share, fewer successful zero-conf double-spends
will occur.  Only radical twisted logic finds that to be an undesirable
result.





From jgarzik at bitpay.com  Sun Jun 21 06:45:34 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Sat, 20 Jun 2015 23:45:34 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <70534C5D-8834-42B5-B495-FD9975E8FCF4@gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
	<CABm2gDrHFB_XtQXVvoFeEH5TUfWSc3JLcNuo-oSXNJaExB+Vdg@mail.gmail.com>
	<8a49c53a032503eeca4f51cdef725fe1@riseup.net>
	<B4B8DB86-C03A-4C79-BD94-3E073D5E7003@gmail.com>
	<6d025db96e7aec4e6e47a76883a9a1e3@riseup.net>
	<70534C5D-8834-42B5-B495-FD9975E8FCF4@gmail.com>
Message-ID: <CAJHLa0NkQqypvU=yANCScs3hKhTyM53rt3aNW=QRh-HmBT4-Hg@mail.gmail.com>

On Sat, Jun 20, 2015 at 5:54 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:

>  but we NEED to be applying some kind of pressure on the merchant end to
> upgrade their stuff to be more resilient
>

Can you be specific?  What precise technical steps would you have BitPay
and Coinbase do?  We upgrade our stuff to... what exactly?

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/97d71b05/attachment.html>

From bbrelin at gmail.com  Sun Jun 21 07:06:45 2015
From: bbrelin at gmail.com (Braun Brelin)
Date: Sun, 21 Jun 2015 09:06:45 +0200
Subject: [Bitcoin-development] Membership disabled due to bounces
Message-ID: <CAJ2OvpjqmVDamKsUvunOkSoLutk3i2TqXwVUJs_zfxWYgCz+2A@mail.gmail.com>

Hi all,

I got a message saying that my membership in the list was disabled due to
excessive bounces.  As far as I can remember,  I've only ever sent out one
e-mail on the list (not including this one) and that was a few weeks ago.
Has anyone else seen this problem?  Could this be related in some way to
the issues regarding source forge and the mail list hosting issue?

Braun Brelin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/b317aa7c/attachment.html>

From bbrelin at gmail.com  Sun Jun 21 07:10:20 2015
From: bbrelin at gmail.com (Braun Brelin)
Date: Sun, 21 Jun 2015 09:10:20 +0200
Subject: [Bitcoin-development] Question regarding transactions with
	NLOCKTIME > 0
Message-ID: <CAJ2Ovpi_qYFqXZ9hWdobVj1Km04soXVm7GwN+M3Ay8yhZCHhGg@mail.gmail.com>

Hi all,

When a transaction with N_LOCKTIME>0 is created, does that transaction get
stored in a block on the blockchain or is it stored in the mempool until
the actual time (or block number) exceeds the current value?  If it is
stored on the blockchain, how does that affect the concept of pruning that
is supposed to be going in to version 0.11?  I.e. if I create a transaction
that doesn't take effect for 10 years, and that transaction is stored in a
block, does that block stay on the active list for that period of time?

Thanks,

Braun Brelin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/e85f1939/attachment.html>

From jtimon at jtimon.cc  Sun Jun 21 07:27:33 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sun, 21 Jun 2015 09:27:33 +0200
Subject: [Bitcoin-development] Fwd: Re: [RFC] Canonical input and output
 ordering in transactions
In-Reply-To: <CABm2gDpkwHvrsB8Dh-hsO6H9trcweEX9XGB5Jh5KLPsPY5Z1Sw@mail.gmail.com>
References: <87k2vhfnx9.fsf@rustcorp.com.au>
	<CAAS2fgRgWZX_O_2O1bgdFd_04xVp5Lnpw4hf=v6RSTXmsbdzPQ@mail.gmail.com>
	<87r3pdembs.fsf@rustcorp.com.au>
	<CAAS2fgTY5cqwj5XuKtkD8Z8N1vF=PZMba8EtGkbWnEackOcN8Q@mail.gmail.com>
	<CAOG=w-tJjzrR_REJOShULfSO=T3ueHko-oQHdhqMCdZD0G_BDA@mail.gmail.com>
	<87eglcelf3.fsf@rustcorp.com.au>
	<CABm2gDpBn744G0AbWDYj5aXQ6XbRzfnLpS=3z6NoWosaseFAWQ@mail.gmail.com>
	<87zj40cc1d.fsf@rustcorp.com.au>
	<CABm2gDpkwHvrsB8Dh-hsO6H9trcweEX9XGB5Jh5KLPsPY5Z1Sw@mail.gmail.com>
Message-ID: <CABm2gDoq-nxqGYkYVh0YJQ8p5noLMKrEGuvJmRXU9FYs42ma2g@mail.gmail.com>

---------- Forwarded message ----------
From: "Jorge Tim?n" <jtimon at jtimon.cc>
Date: Jun 17, 2015 6:59 PM
Subject: Re: [Bitcoin-development] [RFC] Canonical input and output
ordering in transactions
To: "Rusty Russell" <rusty at rustcorp.com.au>
Cc:

On Tue, Jun 16, 2015 at 10:06 AM, Rusty Russell <rusty at rustcorp.com.au>
wrote:
> Jorge Tim?n <jtimon at jtimon.cc> writes:
>> On Jun 15, 2015 11:43 PM, "Rusty Russell" <rusty at rustcorp.com.au> wrote:
>>
>>> Though Peter Todd's more general best-effort language might make more
>>> sense.  It's not like you can hide an OP_RETURN transaction to make it
>>> look like something else, so that transaction not going to be
>>> distinguished by non-canonical ordering.
>>
>> What about commitments that don't use op_return (ie pay2contract
>> commitments)?
>
> I have no idea what they are? :)

Here's a short explanation and the code:

https://github.com/Blockstream/contracthashtool

Here's a longer explanation with a concrete use case (the contract is
the invoice):

https://www.youtube.com/watch?v=qwyALGlG33Q

> Yes, my plan B would be an informational bip with simple code,
> suggesting a way to permute a transaction based on some secret.  No
> point everyone reinventing the wheel, badly.

Great. Well, then all I'm saying is that I like this as plan A.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/d20ce7e1/attachment.html>

From elombrozo at gmail.com  Sun Jun 21 07:42:43 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 21 Jun 2015 00:42:43 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CAJHLa0NkQqypvU=yANCScs3hKhTyM53rt3aNW=QRh-HmBT4-Hg@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
	<CABm2gDrHFB_XtQXVvoFeEH5TUfWSc3JLcNuo-oSXNJaExB+Vdg@mail.gmail.com>
	<8a49c53a032503eeca4f51cdef725fe1@riseup.net>
	<B4B8DB86-C03A-4C79-BD94-3E073D5E7003@gmail.com>
	<6d025db96e7aec4e6e47a76883a9a1e3@riseup.net>
	<70534C5D-8834-42B5-B495-FD9975E8FCF4@gmail.com>
	<CAJHLa0NkQqypvU=yANCScs3hKhTyM53rt3aNW=QRh-HmBT4-Hg@mail.gmail.com>
Message-ID: <30AF043D-A1F8-4502-8280-EBED6063B6B6@gmail.com>


> On Jun 20, 2015, at 11:45 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:
> 
> On Sat, Jun 20, 2015 at 5:54 PM, Eric Lombrozo <elombrozo at gmail.com <mailto:elombrozo at gmail.com>> wrote:
>  but we NEED to be applying some kind of pressure on the merchant end to upgrade their stuff to be more resilient
> 
> Can you be specific?  What precise technical steps would you have BitPay and Coinbase do?  We upgrade our stuff to... what exactly?
> 
> --
> Jeff Garzik
> Bitcoin core developer and open source evangelist
> BitPay, Inc.      https://bitpay.com/ <https://bitpay.com/>
Thanks for asking *the* question, Jeff. We often get caught up in these philosophical debates?but at the end of the day we need something concrete.

Even more important than the specific software you?re using is the security policy.

If you must accept zero confirmation transactions, there are a few concrete things you can do to reduce your exposure:

1) limit the transaction amounts for zero confirmation transactions - do not accept them for very high priced goods?especially if they require physical shipping.
2) limit the total amount of unconfirmed revenue you?ll tolerate at any given moment - if the amount is exceeded, require confirmations.
3) give merchants of subscription services (i.e. servers, hosting, etc?) the ability to shut the user out if a double-spend is detected.
4) collect legal information on purchasers (or have the merchants collect this information) so you have someone to go after if they try to screw you
5) create a risk profile for users?and flag suspicious behavior (i.e. someone trying to purchase a bunch of stuff that totally doesn?t fit into their purchasing habits).
6) get insurance (although right now reasonably-priced insurance is probably pretty hard to obtain since statistics are generally of little use?we?re entering uncharted territory).
7) set up a warning system and a ?panic? button so that if you start to see an attack you can immediately disable all zero confirmation transactions system-wide.
8) independently verify all inbound transactions and connect to multiple network nodes?check them against one another.


As for software tools to accomplish these things, we can talk about that offline :)


- Eric Lombrozo




-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/95ab06d4/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/95ab06d4/attachment.sig>

From elombrozo at gmail.com  Sun Jun 21 08:35:50 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 21 Jun 2015 01:35:50 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <30AF043D-A1F8-4502-8280-EBED6063B6B6@gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
	<CABm2gDrHFB_XtQXVvoFeEH5TUfWSc3JLcNuo-oSXNJaExB+Vdg@mail.gmail.com>
	<8a49c53a032503eeca4f51cdef725fe1@riseup.net>
	<B4B8DB86-C03A-4C79-BD94-3E073D5E7003@gmail.com>
	<6d025db96e7aec4e6e47a76883a9a1e3@riseup.net>
	<70534C5D-8834-42B5-B495-FD9975E8FCF4@gmail.com>
	<CAJHLa0NkQqypvU=yANCScs3hKhTyM53rt3aNW=QRh-HmBT4-Hg@mail.gmail.com>
	<30AF043D-A1F8-4502-8280-EBED6063B6B6@gmail.com>
Message-ID: <E97A66D4-E62C-498A-9FF8-27F70FD4EBA5@gmail.com>


> On Jun 21, 2015, at 12:42 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> 
> 
>> On Jun 20, 2015, at 11:45 PM, Jeff Garzik <jgarzik at bitpay.com <mailto:jgarzik at bitpay.com>> wrote:
>> 
>> On Sat, Jun 20, 2015 at 5:54 PM, Eric Lombrozo <elombrozo at gmail.com <mailto:elombrozo at gmail.com>> wrote:
>>  but we NEED to be applying some kind of pressure on the merchant end to upgrade their stuff to be more resilient
>> 
>> Can you be specific?  What precise technical steps would you have BitPay and Coinbase do?  We upgrade our stuff to... what exactly?
>> 
>> --
>> Jeff Garzik
>> Bitcoin core developer and open source evangelist
>> BitPay, Inc.      https://bitpay.com/ <https://bitpay.com/>
> Thanks for asking *the* question, Jeff. We often get caught up in these philosophical debates?but at the end of the day we need something concrete.
> 
> Even more important than the specific software you?re using is the security policy.
> 
> If you must accept zero confirmation transactions, there are a few concrete things you can do to reduce your exposure:
> 
> 1) limit the transaction amounts for zero confirmation transactions - do not accept them for very high priced goods?especially if they require physical shipping.
> 2) limit the total amount of unconfirmed revenue you?ll tolerate at any given moment - if the amount is exceeded, require confirmations.
> 3) give merchants of subscription services (i.e. servers, hosting, etc?) the ability to shut the user out if a double-spend is detected.
> 4) collect legal information on purchasers (or have the merchants collect this information) so you have someone to go after if they try to screw you
> 5) create a risk profile for users?and flag suspicious behavior (i.e. someone trying to purchase a bunch of stuff that totally doesn?t fit into their purchasing habits).
> 6) get insurance (although right now reasonably-priced insurance is probably pretty hard to obtain since statistics are generally of little use?we?re entering uncharted territory).
> 7) set up a warning system and a ?panic? button so that if you start to see an attack you can immediately disable all zero confirmation transactions system-wide.
> 8) independently verify all inbound transactions and connect to multiple network nodes?check them against one another.
> 
> 
> As for software tools to accomplish these things, we can talk about that offline :)
> 
> 
> - Eric Lombrozo
> 
> 
> 
> 

I should also point out that pretty much all of these suggestions (except for maybe 8) would apply to ANY payment system?they are NOT specific to Bitcoin whatsoever. Any serious payment processor should have these sorts of policies engrained as part of company culture?or else one day (probably not too long from now) you?ll be out of business. The mere suggestion that changing relay policy would pose significant threats to the bottom line of a payment processor is about the height of amateurishness, IMHO.


- Eric Lombrozo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/02d84c3a/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/02d84c3a/attachment.sig>

From btcdrak at gmail.com  Sun Jun 21 08:41:44 2015
From: btcdrak at gmail.com (Btc Drak)
Date: Sun, 21 Jun 2015 09:41:44 +0100
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <30AF043D-A1F8-4502-8280-EBED6063B6B6@gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
	<CABm2gDrHFB_XtQXVvoFeEH5TUfWSc3JLcNuo-oSXNJaExB+Vdg@mail.gmail.com>
	<8a49c53a032503eeca4f51cdef725fe1@riseup.net>
	<B4B8DB86-C03A-4C79-BD94-3E073D5E7003@gmail.com>
	<6d025db96e7aec4e6e47a76883a9a1e3@riseup.net>
	<70534C5D-8834-42B5-B495-FD9975E8FCF4@gmail.com>
	<CAJHLa0NkQqypvU=yANCScs3hKhTyM53rt3aNW=QRh-HmBT4-Hg@mail.gmail.com>
	<30AF043D-A1F8-4502-8280-EBED6063B6B6@gmail.com>
Message-ID: <CADJgMztdPEQP+J0wc06i=abvu-2ewBqps1-Vfr9UKMtpbv0BCA@mail.gmail.com>

Eric,

BitPay clearly do understand the risks of 0-conf. In case you were not
aware BitPay does not particularly "accept zero confirm transactions". When
a payment is seen on the network the payment screen reports the invoice has
been paid, but that's front-end user facing. On the back end it's marked as
paid but the API exposes the the confirmation status allowing the merchant
to make business decisions about when to progress to fulfilment. A good
example of this is Neteller (a sort of paypal variant) which allows one to
fund the account with fiat using Bitcoin, via Bitpay. When you pay the
bitpay invoice, your account is marked as payment pending until there are
some confirmations.

Coinbase does not expose the confirmation status and from what I understand
(not checked myself) they guarantee payment to merchants for 0-confirm,
regardless of whether they confirm or not.

I want to address something stated by Justus, that signing a payment
message and broadcasting somehow solidifies intent and going back on that
would be fraud. This seriously conflates cryptographic certainty with human
behaviour. For one, humans make mistakes all the time. We get tired, we get
distracted, we make copy paste errors. It's entirely possible on sends a
payment only to find it's been sent to the wrong address or the wrong
amount has been sent or the fee is wrong. Software may also misbehave
(Electrum for example has a weird UI glitch with fees where the specified
fee can be overwritten). r/bitcoin it littered with sad examples. What
ECDSA signing tells is that it was signed by your private key, but nothing
else. It does not say if *you* signed it, or that the message you signed
was correct.


On Sun, Jun 21, 2015 at 8:42 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:

>
> On Jun 20, 2015, at 11:45 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:
>
> On Sat, Jun 20, 2015 at 5:54 PM, Eric Lombrozo <elombrozo at gmail.com>
> wrote:
>
>>  but we NEED to be applying some kind of pressure on the merchant end to
>> upgrade their stuff to be more resilient
>>
>
> Can you be specific?  What precise technical steps would you have BitPay
> and Coinbase do?  We upgrade our stuff to... what exactly?
>
> --
> Jeff Garzik
> Bitcoin core developer and open source evangelist
> BitPay, Inc.      https://bitpay.com/
>
>
> Thanks for asking *the* question, Jeff. We often get caught up in these
> philosophical debates?but at the end of the day we need something concrete.
>
> Even more important than the specific software you?re using is the
> security policy.
>
> If you must accept zero confirmation transactions, there are a few
> concrete things you can do to reduce your exposure:
>
> 1) limit the transaction amounts for zero confirmation transactions - do
> not accept them for very high priced goods?especially if they require
> physical shipping.
> 2) limit the total amount of unconfirmed revenue you?ll tolerate at any
> given moment - if the amount is exceeded, require confirmations.
> 3) give merchants of subscription services (i.e. servers, hosting, etc?)
> the ability to shut the user out if a double-spend is detected.
> 4) collect legal information on purchasers (or have the merchants collect
> this information) so you have someone to go after if they try to screw you
> 5) create a risk profile for users?and flag suspicious behavior (i.e.
> someone trying to purchase a bunch of stuff that totally doesn?t fit into
> their purchasing habits).
> 6) get insurance (although right now reasonably-priced insurance is
> probably pretty hard to obtain since statistics are generally of little
> use?we?re entering uncharted territory).
> 7) set up a warning system and a ?panic? button so that if you start to
> see an attack you can immediately disable all zero confirmation
> transactions system-wide.
> 8) independently verify all inbound transactions and connect to multiple
> network nodes?check them against one another.
>
>
> As for software tools to accomplish these things, we can talk about that
> offline :)
>
>
> - Eric Lombrozo
>
>
>
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/4abdd8ca/attachment.html>

From s7r at sky-ip.org  Sun Jun 21 08:45:30 2015
From: s7r at sky-ip.org (s7r)
Date: Sun, 21 Jun 2015 11:45:30 +0300
Subject: [Bitcoin-development] Question regarding transactions with
 NLOCKTIME > 0
In-Reply-To: <CAJ2Ovpi_qYFqXZ9hWdobVj1Km04soXVm7GwN+M3Ay8yhZCHhGg@mail.gmail.com>
References: <CAJ2Ovpi_qYFqXZ9hWdobVj1Km04soXVm7GwN+M3Ay8yhZCHhGg@mail.gmail.com>
Message-ID: <558679AA.9010308@sky-ip.org>

Hi

I don't think that a transaction with nLockTime>0 will be accepted by
nodes / relayed in the Bitcoin network, until its time expires (e.g.
nLockTime==now). This means it obviously cannot be stored in a block,
before its locktime expires. nLockTime is designed in a way that you,
need to keep it offline (not broadcast it to the network because it
won't be accepted or relayed by nodes) until the locktime expires, then
you can broadcast it and it will be mined and included in a block, like
a normal tx.

This is exactly why Peter Todd and others are working on
CHECKLOCKTIMEVERIFY and RELATIVE CHECKLOCKTIMEVERIFY - this is an
enhancement to basic nLockTime which tends to offer to users the
guarantee that if you have a transaction with nLockTime, the signer
holding the private keys used to sign it cannot sign another one, with
nLockTime 0 and broadcast it before the locktime for your tx expires.

Cheers!

On 6/21/2015 10:10 AM, Braun Brelin wrote:
> Hi all, 
> 
> When a transaction with N_LOCKTIME>0 is created, does that transaction
> get stored in a block on the blockchain or is it stored in the mempool
> until the actual time (or block number) exceeds the current value?  If
> it is stored on the blockchain, how does that affect the concept of
> pruning that is supposed to be going in to version 0.11?  I.e. if I
> create a transaction that doesn't take effect for 10 years, and that
> transaction is stored in a block, does that block stay on the active
> list for that period of time?
> 
> Thanks,
> 
> Braun Brelin
> 
> 
> 
> ------------------------------------------------------------------------------
> 
> 
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From elombrozo at gmail.com  Sun Jun 21 08:51:51 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 21 Jun 2015 01:51:51 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <CADJgMztdPEQP+J0wc06i=abvu-2ewBqps1-Vfr9UKMtpbv0BCA@mail.gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
	<CABm2gDrHFB_XtQXVvoFeEH5TUfWSc3JLcNuo-oSXNJaExB+Vdg@mail.gmail.com>
	<8a49c53a032503eeca4f51cdef725fe1@riseup.net>
	<B4B8DB86-C03A-4C79-BD94-3E073D5E7003@gmail.com>
	<6d025db96e7aec4e6e47a76883a9a1e3@riseup.net>
	<70534C5D-8834-42B5-B495-FD9975E8FCF4@gmail.com>
	<CAJHLa0NkQqypvU=yANCScs3hKhTyM53rt3aNW=QRh-HmBT4-Hg@mail.gmail.com>
	<30AF043D-A1F8-4502-8280-EBED6063B6B6@gmail.com>
	<CADJgMztdPEQP+J0wc06i=abvu-2ewBqps1-Vfr9UKMtpbv0BCA@mail.gmail.com>
Message-ID: <659CB4B0-3C79-4C69-A9BF-C62A19A8FD9D@gmail.com>


> On Jun 21, 2015, at 1:41 AM, Btc Drak <btcdrak at gmail.com> wrote:
> 
> Eric,
> 
> BitPay clearly do understand the risks of 0-conf. In case you were not aware BitPay does not particularly "accept zero confirm transactions". When a payment is seen on the network the payment screen reports the invoice has been paid, but that's front-end user facing. On the back end it's marked as paid but the API exposes the the confirmation status allowing the merchant to make business decisions about when to progress to fulfilment. A good example of this is Neteller (a sort of paypal variant) which allows one to fund the account with fiat using Bitcoin, via Bitpay. When you pay the bitpay invoice, your account is marked as payment pending until there are some confirmations.
> 

I am glad to hear that. Yes, it absolutely makes sense to let the merchant to make business decisions still pending confirmation (i.e. should I actually ship?)

> Coinbase does not expose the confirmation status and from what I understand (not checked myself) they guarantee payment to merchants for 0-confirm, regardless of whether they confirm or not.

Then Coinbase is essentially taking on the role of an insurer?are they taking the appropriate precautions to limit potential losses? Can they make up for these losses with fees? And if not (or if they don?t really have a quantifiable risk model) could they survive a worst-case scenario with at most a surface wound? (i.e. a systemic attack involving many machines in many different places all attacking at once).

It would be absolutely the height of idiocy to guarantee payment on merchandise that has yet to ship, i.e. So I hope these reports are wrong :)


- Eric Lombrozo
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/e71b8a85/attachment.sig>

From jtimon at jtimon.cc  Sun Jun 21 10:31:34 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sun, 21 Jun 2015 12:31:34 +0200
Subject: [Bitcoin-development] [BIP draft] Motivation and deployment of
 consensus rules changes ([soft/hard]forks)
In-Reply-To: <CAE-z3OVM8vwjo_-FOggSoOWR78w=Rmm+GS7Xv9uSK0jdx1_zdw@mail.gmail.com>
References: <CABm2gDqPBPiDG1BUAipEsLfyE1VFyvdqdoxtYjkKvGDvBQ8qMg@mail.gmail.com>
	<CAE-z3OVM8vwjo_-FOggSoOWR78w=Rmm+GS7Xv9uSK0jdx1_zdw@mail.gmail.com>
Message-ID: <CABm2gDrs6XwG5imH3pFFDB71kx2dSfhR7kjc6Pw8hvDKqGvTPQ@mail.gmail.com>

On Sun, Jun 21, 2015 at 12:08 AM, Tier Nolan <tier.nolan at gmail.com> wrote:
> The off by 1 bug could be fixed by a soft fork.  Since the point is to show
> how a non-controversial hard fork works, it doesn't matter much.

You mean the timewarp fix can be coded as a softfork instead of a
hardfork? How so?
If that's the case, do you have a better candidate?



From tier.nolan at gmail.com  Sun Jun 21 10:54:07 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Sun, 21 Jun 2015 11:54:07 +0100
Subject: [Bitcoin-development] [BIP draft] Motivation and deployment of
 consensus rules changes ([soft/hard]forks)
In-Reply-To: <CABm2gDrs6XwG5imH3pFFDB71kx2dSfhR7kjc6Pw8hvDKqGvTPQ@mail.gmail.com>
References: <CABm2gDqPBPiDG1BUAipEsLfyE1VFyvdqdoxtYjkKvGDvBQ8qMg@mail.gmail.com>
	<CAE-z3OVM8vwjo_-FOggSoOWR78w=Rmm+GS7Xv9uSK0jdx1_zdw@mail.gmail.com>
	<CABm2gDrs6XwG5imH3pFFDB71kx2dSfhR7kjc6Pw8hvDKqGvTPQ@mail.gmail.com>
Message-ID: <CAE-z3OVgQFaFAWUJhDLzyMAE2AXoGHTy0NbUADDAZW9-veX8XA@mail.gmail.com>

On Sun, Jun 21, 2015 at 11:31 AM, Jorge Tim?n <jtimon at jtimon.cc> wrote:

> You mean the timewarp fix can be coded as a softfork instead of a
> hardfork? How so?
>

The easiest would be a rule requiring that all blocks are within 1 day of
the median of the previous 11 blocks.  At the moment, you need to be
greater than that value.  This would add a condition at the other end.

It wouldn't be a total fix, but it would protect against the exploit.

A stricter soft fork would be that the two blocks in question have to have
the same timestamp.  This would force the off by 1 and the correct value to
give the same result.

If that's the case, do you have a better candidate?
>

I think it is fine, since fixing it "right" does require a hard fork,
especially if it is only to show a non controversial hard fork.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/a9aa4739/attachment.html>

From bip at mattwhitlock.name  Sun Jun 21 11:00:36 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Sun, 21 Jun 2015 07:00:36 -0400
Subject: [Bitcoin-development] Membership disabled due to bounces
In-Reply-To: <CAJ2OvpjqmVDamKsUvunOkSoLutk3i2TqXwVUJs_zfxWYgCz+2A@mail.gmail.com>
References: <CAJ2OvpjqmVDamKsUvunOkSoLutk3i2TqXwVUJs_zfxWYgCz+2A@mail.gmail.com>
Message-ID: <2467323.XhrBp4ES7N@crushinator>

I too got this message and had to re-enable my membership on the list. There's no reason why messages sent by the list to my address would be bouncing.


On Sunday, 21 June 2015, at 9:06 am, Braun Brelin wrote:
> Hi all,
> 
> I got a message saying that my membership in the list was disabled due to
> excessive bounces.  As far as I can remember,  I've only ever sent out one
> e-mail on the list (not including this one) and that was a few weeks ago.
> Has anyone else seen this problem?  Could this be related in some way to
> the issues regarding source forge and the mail list hosting issue?
> 
> Braun Brelin



From bbrelin at gmail.com  Sun Jun 21 12:11:36 2015
From: bbrelin at gmail.com (Braun Brelin)
Date: Sun, 21 Jun 2015 14:11:36 +0200
Subject: [Bitcoin-development] Question regarding transactions with
 NLOCKTIME > 0
In-Reply-To: <558679AA.9010308@sky-ip.org>
References: <CAJ2Ovpi_qYFqXZ9hWdobVj1Km04soXVm7GwN+M3Ay8yhZCHhGg@mail.gmail.com>
	<558679AA.9010308@sky-ip.org>
Message-ID: <CAJ2Ovph8ijL8v0r-gK4NNt7zA7G-1eTTsk7ZWqbw3HqD8jbF7A@mail.gmail.com>

So, basically it sounds as though the wallet generating the transaction is
what is responsible for holding on to the transaction and then
only releasing it to the network when the NLOCKTIME value is less than or
equal to the current time.  Does that sound right?

Braun


On Sun, Jun 21, 2015 at 10:45 AM, s7r <s7r at sky-ip.org> wrote:

> Hi
>
> I don't think that a transaction with nLockTime>0 will be accepted by
> nodes / relayed in the Bitcoin network, until its time expires (e.g.
> nLockTime==now). This means it obviously cannot be stored in a block,
> before its locktime expires. nLockTime is designed in a way that you,
> need to keep it offline (not broadcast it to the network because it
> won't be accepted or relayed by nodes) until the locktime expires, then
> you can broadcast it and it will be mined and included in a block, like
> a normal tx.
>
> This is exactly why Peter Todd and others are working on
> CHECKLOCKTIMEVERIFY and RELATIVE CHECKLOCKTIMEVERIFY - this is an
> enhancement to basic nLockTime which tends to offer to users the
> guarantee that if you have a transaction with nLockTime, the signer
> holding the private keys used to sign it cannot sign another one, with
> nLockTime 0 and broadcast it before the locktime for your tx expires.
>
> Cheers!
>
> On 6/21/2015 10:10 AM, Braun Brelin wrote:
> > Hi all,
> >
> > When a transaction with N_LOCKTIME>0 is created, does that transaction
> > get stored in a block on the blockchain or is it stored in the mempool
> > until the actual time (or block number) exceeds the current value?  If
> > it is stored on the blockchain, how does that affect the concept of
> > pruning that is supposed to be going in to version 0.11?  I.e. if I
> > create a transaction that doesn't take effect for 10 years, and that
> > transaction is stored in a block, does that block stay on the active
> > list for that period of time?
> >
> > Thanks,
> >
> > Braun Brelin
> >
> >
> >
> >
> ------------------------------------------------------------------------------
> >
> >
> >
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/62b1a575/attachment.html>

From s7r at sky-ip.org  Sun Jun 21 12:32:29 2015
From: s7r at sky-ip.org (s7r)
Date: Sun, 21 Jun 2015 15:32:29 +0300
Subject: [Bitcoin-development] Question regarding transactions with
 NLOCKTIME > 0
In-Reply-To: <CAJ2Ovph8ijL8v0r-gK4NNt7zA7G-1eTTsk7ZWqbw3HqD8jbF7A@mail.gmail.com>
References: <CAJ2Ovpi_qYFqXZ9hWdobVj1Km04soXVm7GwN+M3Ay8yhZCHhGg@mail.gmail.com>
	<558679AA.9010308@sky-ip.org>
	<CAJ2Ovph8ijL8v0r-gK4NNt7zA7G-1eTTsk7ZWqbw3HqD8jbF7A@mail.gmail.com>
Message-ID: <5586AEDD.9000606@sky-ip.org>

Hi,

Well, depends on your model and what you want to achieve. That would
depend on each wallet, I couldn't confirm nor deny that this is or isn't
true. You have to check with your wallet how it handles transactions
with nLockTime. Maybe you are the one who generates the nLockTime
transaction,  but that needs to be broadcasted by the payee (your
recipient) when the locktime expires?

One way I would use nLockTime is to have the tx generated, and keep it
somewhere not related to my wallet(s) until the nLockTime expires, then
I can broadcast it to the network by /sendrawtransaction and have it
mined and included into a block.


On 6/21/2015 3:11 PM, Braun Brelin wrote:
> So, basically it sounds as though the wallet generating the transaction
> is what is responsible for holding on to the transaction and then
> only releasing it to the network when the NLOCKTIME value is less than
> or equal to the current time.  Does that sound right?  
> 
> Braun
> 
> 
> On Sun, Jun 21, 2015 at 10:45 AM, s7r <s7r at sky-ip.org
> <mailto:s7r at sky-ip.org>> wrote:
> 
>     Hi
> 
>     I don't think that a transaction with nLockTime>0 will be accepted by
>     nodes / relayed in the Bitcoin network, until its time expires (e.g.
>     nLockTime==now). This means it obviously cannot be stored in a block,
>     before its locktime expires. nLockTime is designed in a way that you,
>     need to keep it offline (not broadcast it to the network because it
>     won't be accepted or relayed by nodes) until the locktime expires, then
>     you can broadcast it and it will be mined and included in a block, like
>     a normal tx.
> 
>     This is exactly why Peter Todd and others are working on
>     CHECKLOCKTIMEVERIFY and RELATIVE CHECKLOCKTIMEVERIFY - this is an
>     enhancement to basic nLockTime which tends to offer to users the
>     guarantee that if you have a transaction with nLockTime, the signer
>     holding the private keys used to sign it cannot sign another one, with
>     nLockTime 0 and broadcast it before the locktime for your tx expires.
> 
>     Cheers!
> 
>     On 6/21/2015 10:10 AM, Braun Brelin wrote:
>     > Hi all,
>     >
>     > When a transaction with N_LOCKTIME>0 is created, does that transaction
>     > get stored in a block on the blockchain or is it stored in the mempool
>     > until the actual time (or block number) exceeds the current value?  If
>     > it is stored on the blockchain, how does that affect the concept of
>     > pruning that is supposed to be going in to version 0.11?  I.e. if I
>     > create a transaction that doesn't take effect for 10 years, and that
>     > transaction is stored in a block, does that block stay on the active
>     > list for that period of time?
>     >
>     > Thanks,
>     >
>     > Braun Brelin
>     >
>     >
>     >
>     >
>     ------------------------------------------------------------------------------
>     >
>     >
>     >
>     > _______________________________________________
>     > Bitcoin-development mailing list
>     > Bitcoin-development at lists.sourceforge.net
>     <mailto:Bitcoin-development at lists.sourceforge.net>
>     > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>     >
> 
> 



From wtogami at gmail.com  Sun Jun 21 12:59:05 2015
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Sun, 21 Jun 2015 02:59:05 -1000
Subject: [Bitcoin-development] confirm
	1e595b258d48a8badd07523cbd8a8d74c150803c
In-Reply-To: <mailman.5541.1434869803.18598.bitcoin-development@lists.sourceforge.net>
References: <mailman.5541.1434869803.18598.bitcoin-development@lists.sourceforge.net>
Message-ID: <CAEz79PqjTi7dhVVwFXSNHVbP=sWHbq6cvAsL6xAozNL2HS8G4A@mail.gmail.com>

I just got this mail ... unclear how mail with my gmail account would be
causing bounces with this list.

On Sat, Jun 20, 2015 at 8:56 PM, <
bitcoin-development-request at lists.sourceforge.net> wrote:

> Your membership in the mailing list Bitcoin-development has been
> disabled due to excessive bounces The last bounce received from you
> was dated 21-Jun-2015.  You will not get any more messages from this
> list until you re-enable your membership.  You will receive 3 more
> reminders like this before your membership in the list is deleted.
>
> To re-enable your membership, you can simply respond to this message
> (leaving the Subject: line intact), or visit the confirmation page at
>
>
> https://lists.sourceforge.net/lists/confirm/bitcoin-development/1e595b258d48a8badd07523cbd8a8d74c150803c
>
>
> You can also visit your membership page at
>
>
> https://lists.sourceforge.net/lists/options/bitcoin-development/wtogami%40gmail.com
>
>
> On your membership page, you can change various delivery options such
> as your email address and whether you get digests or not.  As a
> reminder, your membership password is
>
>      GavinIsGreat!
>
> If you have any questions or problems, you can contact the list owner
> at
>
>     bitcoin-development-owner at lists.sourceforge.net
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/2e4d70d2/attachment.html>

From kalle at rosenbaum.se  Sun Jun 21 14:39:24 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Sun, 21 Jun 2015 16:39:24 +0200
Subject: [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPswA9wLDpf0Q3aL=a+uaqkFecPgC4ASj73XVfj=MOrof-yh1g@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
	<CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>
	<CAPg+sBiWykR6RaHhbyYQbL=A5t1TmHgEmS_sC7jj9d3SUTMO9g@mail.gmail.com>
	<CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>
	<CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>
	<CAPswA9yB3wfV1auXR=ggXjh+f1C3Qpkv8qP1miQwkc8R2_aBLg@mail.gmail.com>
	<CAPg+sBjp-BmSXhanOuKE0DN1wdfVwCtFwiAbPse1GLxy3+L3nA@mail.gmail.com>
	<CAPswA9zzKvh6G+NqzTmhrNXMSWOPtZ2DGW2t_2Jrisy8x9m2qw@mail.gmail.com>
	<CAPg+sBhZCayaxNg_thO=nzxvuo-xZ-ZeZMXEVWb6Mw2POreOZQ@mail.gmail.com>
	<CAPswA9yFUAqFyNBFBnnwpT=B9RcdNssdjz-_KWbX5GuLM5Uyxw@mail.gmail.com>
	<CAPg+sBigK7K2YVnhcU5Ysf0d0Gbp+GaNdGoKZCco5zvYLKDxFw@mail.gmail.com>
	<CAPswA9wLDpf0Q3aL=a+uaqkFecPgC4ASj73XVfj=MOrof-yh1g@mail.gmail.com>
Message-ID: <CAPswA9z5fo5Vw_cSoUu1qtgU4kKf+W3FxREPJ5UpvvJUSi+doA@mail.gmail.com>

Hi Greg!

After a lot of constructive discussion, feedback and updating, I'm
requesting that you please assign these proposals BIP numbers. It's both
the "Proof of Payment" proposal and the "Proof of Payment URI scheme"
proposal that I'm referring to.

The wikimedia source is available here:
https://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP and
https://github.com/kallerosenbaum/poppoc/wiki/btcpop-scheme-BIP.

Is this what you need in order to proceed or is there something else you
need from me?

Best regards,
/Kalle

2015-06-17 11:51 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:

> 2015-06-16 21:48 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
> > I don't see why existing software could create a 40-byte OP_RETURN but
> not
> > larger? The limitation comes from a relay policy in full nodes, not a
> > limitation is wallet software... and PoPs are not relayed on the network.
>
> You are probably right here. The thing is that I don't know how *all*
> wallet signing and validating software is written, so I figure it's
> better to stick to a "valid" output. Since I don't *need* more data
> than 40 bytes, why bother. There's another constraint to this as well:
> The other BIP proposal, "Proof of Payment URI scheme", includes a
> nonce parameter in the URI. If the nonce is very long, the QR code
> will be unnecessarily big. The server should try to detect a brute
> force of the 48 bit nonce, or at least delay the pop requests by some
> 100 ms or so.
>
> Do you think this is an actual problem, and why? Is your suggestion to
> use a bigger nonce, given the above?
>
> >
> > Regarding sharing, I think you're talking about a different use case. Say
> > you want to pay for 1-week valid entrance to some venue. I thought the
> > purpose of the PoP was to be sure that only the person who paid for it,
> and
> > not anyone else can use it during that week.
> >
>
> That's right. That's one use case. You pay for the 1-week entrance and
> then you use your wallet to sign PoPs when you enter the venue.
>
> > My argument against that is that the original payer can also hand the
> > private keys in his wallet to someone else, who would then become able to
> > create PoPs for the service. He does not lose anything by this, assuming
> the
> > address is not reused.
> >
>
> Yes, that is possible. It's about the same as giving out a
> username/password for a service that you have paid for. In the case of
> a concert ticket, it's simple. Just allow one entrance per payment.
> But in the example you gave, it's a bit more complicated. You could
> for example give all guests a bracelet upon first entry or upon first
> exit. Or you can put a stamp on people leaving the venue, and demand
> that all re-entries show the stamp, possibly along with a new PoP.
> Pretty much as is done already. Different use cases will need
> different protection. In this example, the value added by PoP is that
> the venue does not have to distribute tickets in advance. This in turn
> allows for better privacy for the customer, who don't have to give out
> personal information such as an email-address.
>
> > So, using a token does not change anything, except it can be provided to
> the
> > payer - instead of relying on creating an implicit identity based on who
> > seems to have held particular private keys in the past.
> >
>
> Yes, that's a difference, but it comes at the cost of security. The
> stolen token can be used over and over. In the case of PoP it's only
> usable once, and it's only created when it's actually needed,
> minimizing the window of opportunity for the thief.
>
> Regards,
> Kalle
>
> > On Jun 16, 2015 9:41 PM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:
> >>
> >> 2015-06-16 21:25 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
> >> > You can't avoid sharing the token, and you can't avoid sharing the
> >> > private
> >> > keys used for signing either. If they are single use, you don't lose
> >> > anything by sharing them.
> >>
> >> Forwarding the PoP request would be a way to avoid sharing keys, as
> >> suggested above.
> >>
> >> >
> >> > Also you are not creating a real transaction. Why does the OP_RETURN
> >> > limitation matter?
> >>
> >> This was discussed in the beginning of this thread: "The idea is to
> >> simplify implementation. Existing software can be used as is to sign
> >> and validate PoPs"
> >>
> >> Regards,
> >> Kalle
> >>
> >> >
> >> > On Jun 16, 2015 9:22 PM, "Kalle Rosenbaum" <kalle at rosenbaum.se>
> wrote:
> >> >>
> >> >> Thank you for your comments Pieter! Please find my answers below.
> >> >>
> >> >> 2015-06-16 16:31 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
> >> >> > On Mon, Jun 15, 2015 at 1:59 PM, Kalle Rosenbaum <
> kalle at rosenbaum.se>
> >> >> > wrote:
> >> >> >>
> >> >> >> 2015-06-15 12:00 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com
> >:
> >> >> >> I'm not sure if we will be able to support PoP with CoinJoin.
> Maybe
> >> >> >> someone with more insight into CoinJoin have some input?
> >> >> >
> >> >> >
> >> >> > Not really. The problem is that you assume a transaction
> corresponds
> >> >> > to
> >> >> > a
> >> >> > single payment. This is true for simple wallet use cases, but not
> >> >> > compatible
> >> >> > with CoinJoin, or with systems that for example would want to
> combine
> >> >> > multiple payments in a single transaction.
> >> >> >
> >> >>
> >> >> Yes, you are right. It's not compatible with CoinJoin and the likes.
> >> >>
> >> >> >
> >> >> > 48 bits seems low to me, but it does indeed solve the problem. Why
> >> >> > not
> >> >> > 128
> >> >> > or 256 bits?
> >> >>
> >> >> The nonce is limited because of the OP_RETURN output being limited to
> >> >> 40 bytes of data: 2 bytes version, 32 bytes txid, 6 bytes nonce.
> >> >>
> >> >> >
> >> >> >> > Why does anyone care who paid? This is like walking into a
> >> >> >> > coffeshop,
> >> >> >> > noticing I don't have money with me, let me friend pay for me,
> and
> >> >> >> > then
> >> >> >> > have
> >> >> >> > the shop insist that I can't drink it because I'm not the buyer.
> >> >> >>
> >> >> >> If you pay as you use the service (ie pay for coffee upfront),
> >> >> >> there's
> >> >> >> no need for PoP. Please see the Motivation section. But you are
> >> >> >> right
> >> >> >> that you must have the wallet(s) that paid at hand when you issue
> a
> >> >> >> PoP.
> >> >> >>
> >> >> >> >
> >> >> >> > Track payments, don't try to assign identities to payers.
> >> >> >>
> >> >> >> Please elaborate, I don't understand what you mean here.
> >> >> >
> >> >> >
> >> >> > I think that is a mistake. You should not assume that the wallet
> who
> >> >> > held
> >> >> > the coins is the payer/buyer. That's what I said earlier; you're
> >> >> > implicitly
> >> >> > creating an identity (the one who holds these keys) based on the
> >> >> > transaction. This seems fundamentally wrong to me, and not
> necessary.
> >> >> > The
> >> >> > receiver should not care who paid or how, he should care what was
> >> >> > payed
> >> >> > for.
> >> >>
> >> >> You are saying that it's a problem that the wallet used to pay, must
> >> >> also be used to issue the PoP? That may very well be a problem in
> some
> >> >> cases. People using PoP should of course be aware of it's limitations
> >> >> and act accordingly, i.e. don't pay for concert tickets for a friend
> >> >> and expect your friend to be able to enter the arena with her wallet.
> >> >> As Tom Harding noted, it is possible to transfer keys to your
> friend's
> >> >> wallet, but that might not be desirable if those keys are also used
> >> >> for other payments. Also that would weaken the security of an HD
> >> >> wallet, since a chain code along with a private key would reveal all
> >> >> keys in that tree. Another solution is that your friend forwards the
> >> >> PoP request to your wallet, through twitter or SMS, and you send the
> >> >> PoP for her. Maybe that forwarding mechanism can be built into
> wallets
> >> >> and automated so that the wallet automatically suggests to sign the
> >> >> PoP for your friend. This is probably something to investigate
> >> >> further, but not within the scope of this BIP.
> >> >>
> >> >> Of course the simplest solution would be to send money to your friend
> >> >> first so that she can pay for the ticket from her own wallet, but
> >> >> that's not always feasible.
> >> >>
> >> >> >
> >> >> > The easiest solution to this IMHO would be an extension to the
> >> >> > payment
> >> >> > protocol that gives you (or your wallet) a token in return for
> >> >> > paying,
> >> >> > and
> >> >> > that knowledge of that token is used to gain access to the services
> >> >> > you
> >> >> > provide.
> >> >> >
> >> >>
> >> >> That token would then be reusable. Someone stealing it would be able
> >> >> to use it as much as she wants. That is what I want to avoid with
> PoP.
> >> >> The BIP proposal briefly mentions something like this in the
> >> >> rationale. I also had a discussion about this with Mike Hearn on this
> >> >> list on Mars 13 that I think covers most pros and cons of the
> >> >> different approaches.
> >> >>
> >> >> While your suggestion does indeed separate the transaction from the
> >> >> proof of payment, it also assumes that the token is held in the
> wallet
> >> >> that pays. Otherwise you would need to keep it in another safe place,
> >> >> remember it's reusable. Where would that be? How would you transfer
> >> >> that token to your friend?
> >> >>
> >> >> Thank you again for your comments. I appreciate it.
> >> >>
> >> >> Best regards,
> >> >> Kalle
> >> >>
> >> >> > --
> >> >> > Pieter
> >> >> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/3247c105/attachment.html>

From ogunden at phauna.org  Sun Jun 21 14:45:30 2015
From: ogunden at phauna.org (Owen Gunden)
Date: Sun, 21 Jun 2015 10:45:30 -0400
Subject: [Bitcoin-development] Concerns Regarding Threats by a Developer
 to Remove Commit Access from Other Developers
In-Reply-To: <CANg-TZBL-d4L6+kP7CGi89QkYtFEk4kGZZqB-5jp5K5Cm8nEZQ@mail.gmail.com>
References: <55828737.6000007@riseup.net>	<CABm2gDoa7KxsgvREo3yiNjfd6AeayqAqkjMe2rvX8yyxR_ddcA@mail.gmail.com>	<55831CAB.2080303@jrn.me.uk>
	<1867667.WXWC1C9quc@crushinator>	<CAOG=w-scXm-46sp2NgR2UUp20R5ujuaAzW-jU_Owh20C4Xc=9A@mail.gmail.com>	<CAJHLa0Mhnma8_ys2ckEA+dLT-EWnqO4j8YKMSaf3Tvv_K14czQ@mail.gmail.com>	<CAOG=w-tf7qz9XSkDg5POKtFLkHWDA==jf2iVxVL8wz1hqcAVOg@mail.gmail.com>	<CANEZrP33GCiZHK1GV2Qt_R_AHK6SEjybGPtmORjqgvQ9MiYVZQ@mail.gmail.com>
	<CANg-TZBL-d4L6+kP7CGi89QkYtFEk4kGZZqB-5jp5K5Cm8nEZQ@mail.gmail.com>
Message-ID: <5586CE0A.2020608@phauna.org>

On 06/19/2015 07:48 AM, Brooks Boyd wrote:
> Has there been any talk about reducing the time between blocks? If
> blocks were allowed to come twice as fast, they would be able to clear
> pending transactions in the mempool the same as if the block size
> doubled, but would allow mining to stay more decentralized since miners
> wouldn't be working on such large-scale blocks? It would still take more
> storage space to store the blockchain, though.

https://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07663.html



From laszlo at heliacal.net  Sun Jun 21 15:14:45 2015
From: laszlo at heliacal.net (Laszlo Hanyecz)
Date: Sun, 21 Jun 2015 15:14:45 +0000
Subject: [Bitcoin-development] Membership disabled due to bounces
In-Reply-To: <2467323.XhrBp4ES7N@crushinator>
References: <CAJ2OvpjqmVDamKsUvunOkSoLutk3i2TqXwVUJs_zfxWYgCz+2A@mail.gmail.com>
	<2467323.XhrBp4ES7N@crushinator>
Message-ID: <F54A86D5-BBF2-402F-8AC9-39FE3CFD3D5D@heliacal.net>

I got ~500 uncaught bounce notifications, so it seems like something broke.

On Jun 21, 2015, at 11:00 AM, Matt Whitlock <bip at mattwhitlock.name> wrote:

> I too got this message and had to re-enable my membership on the list. There's no reason why messages sent by the list to my address would be bouncing.
> 
> 
> On Sunday, 21 June 2015, at 9:06 am, Braun Brelin wrote:
>> Hi all,
>> 
>> I got a message saying that my membership in the list was disabled due to
>> excessive bounces.  As far as I can remember,  I've only ever sent out one
>> e-mail on the list (not including this one) and that was a few weeks ago.
>> Has anyone else seen this problem?  Could this be related in some way to
>> the issues regarding source forge and the mail list hosting issue?
>> 
>> Braun Brelin
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From jgarzik at bitpay.com  Sun Jun 21 16:54:08 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Sun, 21 Jun 2015 09:54:08 -0700
Subject: [Bitcoin-development] Question regarding transactions with
 NLOCKTIME > 0
In-Reply-To: <CAJ2Ovph8ijL8v0r-gK4NNt7zA7G-1eTTsk7ZWqbw3HqD8jbF7A@mail.gmail.com>
References: <CAJ2Ovpi_qYFqXZ9hWdobVj1Km04soXVm7GwN+M3Ay8yhZCHhGg@mail.gmail.com>
	<558679AA.9010308@sky-ip.org>
	<CAJ2Ovph8ijL8v0r-gK4NNt7zA7G-1eTTsk7ZWqbw3HqD8jbF7A@mail.gmail.com>
Message-ID: <CAJHLa0PM8yOw3XxPtRGQaGosurcKi8rOn5Jeh4mm9-Wu+N6MJg@mail.gmail.com>

Yes, that is correct.  The network will not relay until locktime reaches
"maturity", i.e. it can be confirmed into a block.

The wallet holds onto the transaction -- or simply does not generate --
until it can be confirmed.

On Sun, Jun 21, 2015 at 5:11 AM, Braun Brelin <bbrelin at gmail.com> wrote:

> So, basically it sounds as though the wallet generating the transaction is
> what is responsible for holding on to the transaction and then
> only releasing it to the network when the NLOCKTIME value is less than or
> equal to the current time.  Does that sound right?
>
> Braun
>
>
> On Sun, Jun 21, 2015 at 10:45 AM, s7r <s7r at sky-ip.org> wrote:
>
>> Hi
>>
>> I don't think that a transaction with nLockTime>0 will be accepted by
>> nodes / relayed in the Bitcoin network, until its time expires (e.g.
>> nLockTime==now). This means it obviously cannot be stored in a block,
>> before its locktime expires. nLockTime is designed in a way that you,
>> need to keep it offline (not broadcast it to the network because it
>> won't be accepted or relayed by nodes) until the locktime expires, then
>> you can broadcast it and it will be mined and included in a block, like
>> a normal tx.
>>
>> This is exactly why Peter Todd and others are working on
>> CHECKLOCKTIMEVERIFY and RELATIVE CHECKLOCKTIMEVERIFY - this is an
>> enhancement to basic nLockTime which tends to offer to users the
>> guarantee that if you have a transaction with nLockTime, the signer
>> holding the private keys used to sign it cannot sign another one, with
>> nLockTime 0 and broadcast it before the locktime for your tx expires.
>>
>> Cheers!
>>
>> On 6/21/2015 10:10 AM, Braun Brelin wrote:
>> > Hi all,
>> >
>> > When a transaction with N_LOCKTIME>0 is created, does that transaction
>> > get stored in a block on the blockchain or is it stored in the mempool
>> > until the actual time (or block number) exceeds the current value?  If
>> > it is stored on the blockchain, how does that affect the concept of
>> > pruning that is supposed to be going in to version 0.11?  I.e. if I
>> > create a transaction that doesn't take effect for 10 years, and that
>> > transaction is stored in a block, does that block stay on the active
>> > list for that period of time?
>> >
>> > Thanks,
>> >
>> > Braun Brelin
>> >
>> >
>> >
>> >
>> ------------------------------------------------------------------------------
>> >
>> >
>> >
>> > _______________________________________________
>> > Bitcoin-development mailing list
>> > Bitcoin-development at lists.sourceforge.net
>> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >
>>
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>


-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/f0c06aec/attachment.html>

From voisine at gmail.com  Sun Jun 21 18:23:20 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Sun, 21 Jun 2015 11:23:20 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <70534C5D-8834-42B5-B495-FD9975E8FCF4@gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
	<CABm2gDrHFB_XtQXVvoFeEH5TUfWSc3JLcNuo-oSXNJaExB+Vdg@mail.gmail.com>
	<8a49c53a032503eeca4f51cdef725fe1@riseup.net>
	<B4B8DB86-C03A-4C79-BD94-3E073D5E7003@gmail.com>
	<6d025db96e7aec4e6e47a76883a9a1e3@riseup.net>
	<70534C5D-8834-42B5-B495-FD9975E8FCF4@gmail.com>
Message-ID: <CACq0ZD6BLTEL36oO-ywcVB17LMREVN1s9Vwpe8K-P=J++4wHGA@mail.gmail.com>

We should use relay and default tx selection rules to raise the cost of
double spend attacks as far as it is easy and practical to do so. This
increases the value of the bitcoin network by making it practical to use in
more situations for more people. Merchants of course can't rely on them
being cryptographically safe, but the safer they are, the more useful.

The argument that since they can't be made perfectly safe, they should be
as easy as possible to reverse so that merchants learn not to rely on them,
is an incorrect one that reduces the usefulness and value of bitcoin.
Merchants will learn very quickly what the costs of accepting bitcoin
payments are, and the lower they are, the greater bitcoin merchant adoption
will be.


Aaron Voisine
co-founder and CEO
breadwallet.com

On Sat, Jun 20, 2015 at 5:54 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:

> One more thing I would like to add to this thread: I want to make it
> unequivocally clear that I believe what is making double-spends easier has
> relatively little to do with the protocol and almost everything to do with
> poor software and poor security policy on the merchant end. Perhaps it
> isn?t prudent to push out changes to the relay policy that make these
> exploits even easier right now - but we NEED to be applying some kind of
> pressure on the merchant end to upgrade their stuff to be more resilient so
> that we have more room for changes on things like relay policy without
> significant disruption to the network.
>
> - Eric Lombrozo
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/d1b29009/attachment.html>

From wtogami at gmail.com  Sun Jun 21 19:07:59 2015
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Sun, 21 Jun 2015 09:07:59 -1000
Subject: [Bitcoin-development] Membership disabled due to bounces
Message-ID: <CAEz79PprLLpjPopdwesxsg5kO9C=NLbQvHVTxwVfPnXRzZamiA@mail.gmail.com>

I set that password back in 2013 ... shortly after a fun debate that was
largely responsible for my decision to fix up Litecoin.

Thanks Gavin!

On Sun, Jun 21, 2015 at 2:59 AM, Warren Togami Jr. <wtogami at gmail.com>
wrote:

> I just got this mail ... unclear how mail with my gmail account would be
> causing bounces with this list.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/0268ae64/attachment.html>

From wtogami at gmail.com  Sun Jun 21 19:17:09 2015
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Sun, 21 Jun 2015 09:17:09 -1000
Subject: [Bitcoin-development] Membership disabled due to bounces
In-Reply-To: <F54A86D5-BBF2-402F-8AC9-39FE3CFD3D5D@heliacal.net>
References: <CAJ2OvpjqmVDamKsUvunOkSoLutk3i2TqXwVUJs_zfxWYgCz+2A@mail.gmail.com>
	<2467323.XhrBp4ES7N@crushinator>
	<F54A86D5-BBF2-402F-8AC9-39FE3CFD3D5D@heliacal.net>
Message-ID: <CAEz79PqjUouMaRJwHXmX-+a3e99Xs4CPCguGP5nhmRo58Y5T2w@mail.gmail.com>

Was literally *everyone* unsubscribed?  Sigh.

As much as this is good reason to move the list ASAP, we need both the LF
sysadmin and an existing SF list admin to be online simultaneously to
effect an orderly transition.  We have a scheduled time for this on Tuesday
at 8pm UTC.  I can ask if they are both available now...

Please talk in #bitcoin-dev if you have any opinion on moving the list
sooner.

Warren



On Sun, Jun 21, 2015 at 5:14 AM, Laszlo Hanyecz <laszlo at heliacal.net> wrote:

> I got ~500 uncaught bounce notifications, so it seems like something broke.
>
> On Jun 21, 2015, at 11:00 AM, Matt Whitlock <bip at mattwhitlock.name> wrote:
>
> > I too got this message and had to re-enable my membership on the list.
> There's no reason why messages sent by the list to my address would be
> bouncing.
> >
> >
> > On Sunday, 21 June 2015, at 9:06 am, Braun Brelin wrote:
> >> Hi all,
> >>
> >> I got a message saying that my membership in the list was disabled due
> to
> >> excessive bounces.  As far as I can remember,  I've only ever sent out
> one
> >> e-mail on the list (not including this one) and that was a few weeks
> ago.
> >> Has anyone else seen this problem?  Could this be related in some way to
> >> the issues regarding source forge and the mail list hosting issue?
> >>
> >> Braun Brelin
> >
> >
> ------------------------------------------------------------------------------
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/bd54b898/attachment.html>

From trevinhofmann at gmail.com  Sun Jun 21 19:17:37 2015
From: trevinhofmann at gmail.com (Trevin Hofmann)
Date: Sun, 21 Jun 2015 14:17:37 -0500
Subject: [Bitcoin-development] Membership disabled due to bounces
In-Reply-To: <2467323.XhrBp4ES7N@crushinator>
References: <CAJ2OvpjqmVDamKsUvunOkSoLutk3i2TqXwVUJs_zfxWYgCz+2A@mail.gmail.com>
	<2467323.XhrBp4ES7N@crushinator>
Message-ID: <CALd2G5dV_yP1DUtPcdZvWOYWpHjYZYdOKvcndn6Fx-fFfFNwwg@mail.gmail.com>

I also received this message and re-enabled membership.
On Jun 21, 2015 4:06 AM, "Matt Whitlock" <bip at mattwhitlock.name> wrote:

> I too got this message and had to re-enable my membership on the list.
> There's no reason why messages sent by the list to my address would be
> bouncing.
>
>
> On Sunday, 21 June 2015, at 9:06 am, Braun Brelin wrote:
> > Hi all,
> >
> > I got a message saying that my membership in the list was disabled due to
> > excessive bounces.  As far as I can remember,  I've only ever sent out
> one
> > e-mail on the list (not including this one) and that was a few weeks ago.
> > Has anyone else seen this problem?  Could this be related in some way to
> > the issues regarding source forge and the mail list hosting issue?
> >
> > Braun Brelin
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/6ef7668b/attachment.html>

From jgarzik at bitpay.com  Sun Jun 21 19:49:41 2015
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Sun, 21 Jun 2015 12:49:41 -0700
Subject: [Bitcoin-development] F2Pool has enabled full replace-by-fee
In-Reply-To: <30AF043D-A1F8-4502-8280-EBED6063B6B6@gmail.com>
References: <20150619103959.GA32315@savin.petertodd.org>
	<04CE3756-B032-464C-8FBD-7ACDD1A3197D@gmail.com>
	<812d8353e66637ec182da31bc0a9aac1@riseup.net>
	<1727885.UUNByX4Jyd@crushinator>
	<83A7C606-B601-47D2-BE10-2A1412D97514@gmail.com>
	<CABm2gDrHFB_XtQXVvoFeEH5TUfWSc3JLcNuo-oSXNJaExB+Vdg@mail.gmail.com>
	<8a49c53a032503eeca4f51cdef725fe1@riseup.net>
	<B4B8DB86-C03A-4C79-BD94-3E073D5E7003@gmail.com>
	<6d025db96e7aec4e6e47a76883a9a1e3@riseup.net>
	<70534C5D-8834-42B5-B495-FD9975E8FCF4@gmail.com>
	<CAJHLa0NkQqypvU=yANCScs3hKhTyM53rt3aNW=QRh-HmBT4-Hg@mail.gmail.com>
	<30AF043D-A1F8-4502-8280-EBED6063B6B6@gmail.com>
Message-ID: <CAJHLa0NJw2UA68gJq8bqLXr4ptgWC8drvvs8d3AwA+iHcmMvJQ@mail.gmail.com>

On Sun, Jun 21, 2015 at 12:42 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:

> Thanks for asking *the* question, Jeff. We often get caught up in these
> philosophical debates?but at the end of the day we need something concrete.
>
> Even more important than the specific software you?re using is the
> security policy.
>
> If you must accept zero confirmation transactions, there are a few
> concrete things you can do to reduce your exposure:
>
> 1) limit the transaction amounts for zero confirmation transactions - do
> not accept them for very high priced goods?especially if they require
> physical shipping.
> 2) limit the total amount of unconfirmed revenue you?ll tolerate at any
> given moment - if the amount is exceeded, require confirmations.
> 3) give merchants of subscription services (i.e. servers, hosting, etc?)
> the ability to shut the user out if a double-spend is detected.
>

Already done -- BitPay merchants choose their level of transaction
security.  Level of confirmations is directly exposed to merchants, so that
they choose the level of risk for themselves.

Physically shipped orders and subscriptions are actually the easy cases and
are already handled.  These can accept 0-conf for an initial order phase,
then have the luxury of time to wait for confirmations before shipping /
canceling a subscription.

Electronic goods instantly delivered are the toughest use case.  Even
there, merchants choose their level of risk.



> 4) collect legal information on purchasers (or have the merchants collect
> this information) so you have someone to go after if they try to screw you
>

The system requests this information on orders yes.  Merchants also collect
this info as their needs dictate.



> 5) create a risk profile for users?and flag suspicious behavior (i.e.
> someone trying to purchase a bunch of stuff that totally doesn?t fit into
> their purchasing habits).
> 6) get insurance (although right now reasonably-priced insurance is
> probably pretty hard to obtain since statistics are generally of little
> use?we?re entering uncharted territory).
> 7) set up a warning system and a ?panic? button so that if you start to
> see an attack you can immediately disable all zero confirmation
> transactions system-wide.
> 8) independently verify all inbound transactions and connect to multiple
> network nodes?check them against one another.
>

Definitely looking at or have implemented this sort of stuff.  I cannot get
into detail in public...

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/8d925c35/attachment.html>

From wtogami at gmail.com  Sun Jun 21 20:08:32 2015
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Sun, 21 Jun 2015 10:08:32 -1000
Subject: [Bitcoin-development] Emergency List Move: Sunday, June 21st,
	2015 at 9pm UTC
Message-ID: <CAEz79PqV8OPQK7zx7oHkhtX8kS4tQkm9qzOva1KvJb7KO2zQmg@mail.gmail.com>

Given the Sourceforge list server exploded and unsubscribed the majority of
the old list, we decided to move forward with the planned list move in
roughly 50 minutes from now.  9pm UTC or 2pm PDT this list will be
permanently shut down with auto-reject on all posts.

https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
Please subscribe to the new list.  It will be opened for posts shortly
after 9pm UTC after the final archive import.

https://en.wikipedia.org/wiki/Greylisting
Do not panic if your post does not immediately reach the new list.  Your
first post to the new list may be delayed by 5+ minutes due to greylisting.

Please chat in Freenode #bitcoin-dev if you have any questions or concerns.

Warren Togami
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/0d3528dc/attachment.html>

From wtogami at gmail.com  Sun Jun 21 21:29:13 2015
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Sun, 21 Jun 2015 11:29:13 -1000
Subject: [bitcoin-dev] Welcome to the new Bitcoin Dev List
Message-ID: <CAEz79Po7irWrCEfgoRqsLxgwY+R1=cZae5z7NrHJfxM9iBro5g@mail.gmail.com>

Hi folks,

https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
The move is now complete.  The previous archive has been fully imported and
new posts here will now be saved.

*Greylisting Notice*
Your first post to this list may be delayed by 5+ minutes due to Greylisting
<https://en.wikipedia.org/wiki/Greylisting>. Subsequent posts should go
through without delay. Contact Freenode #bitcoin-dev if you have any
questions or concerns.

*TODO*

   - LF will be upgrading Mailman soon to better handle posts from DKIM
   enforced domains.
   - There will be a few more config tweaks like auto-rejecting
   non-subscribed posts.  Nobody has time to moderate this list, and mail
   silently disappearing into the moderation hold blackhole is worse than an
   instant reject message telling people to subscribe.   Unfortunately, it is
   too dangerous to auto-reject spam ... those messages need to go into a
   blackhole to prevent bounce abuse.

Warren Togami
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/719ef682/attachment.html>

From btcdrak at gmail.com  Sun Jun 21 21:31:57 2015
From: btcdrak at gmail.com (Btc Drak)
Date: Sun, 21 Jun 2015 22:31:57 +0100
Subject: [bitcoin-dev] Welcome to the new Bitcoin Dev List
In-Reply-To: <CAEz79Po7irWrCEfgoRqsLxgwY+R1=cZae5z7NrHJfxM9iBro5g@mail.gmail.com>
References: <CAEz79Po7irWrCEfgoRqsLxgwY+R1=cZae5z7NrHJfxM9iBro5g@mail.gmail.com>
Message-ID: <CADJgMzuuPBH7RqSg=BYQt2wM8g5nij6L9_pW9GwgbEwFDed3CQ@mail.gmail.com>

Thanks for all your hard work setting this up, and to everyone else
involved.

Drak

On Sun, Jun 21, 2015 at 10:29 PM, Warren Togami Jr. <wtogami at gmail.com>
wrote:

> Hi folks,
>
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> The move is now complete.  The previous archive has been fully imported
> and new posts here will now be saved.
>
> *Greylisting Notice*
> Your first post to this list may be delayed by 5+ minutes due to
> Greylisting <https://en.wikipedia.org/wiki/Greylisting>. Subsequent posts
> should go through without delay. Contact Freenode #bitcoin-dev if you have
> any questions or concerns.
>
> *TODO*
>
>    - LF will be upgrading Mailman soon to better handle posts from DKIM
>    enforced domains.
>    - There will be a few more config tweaks like auto-rejecting
>    non-subscribed posts.  Nobody has time to moderate this list, and mail
>    silently disappearing into the moderation hold blackhole is worse than an
>    instant reject message telling people to subscribe.   Unfortunately, it is
>    too dangerous to auto-reject spam ... those messages need to go into a
>    blackhole to prevent bounce abuse.
>
> Warren Togami
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/0a8bbc88/attachment.html>

From s7r at sky-ip.org  Sun Jun 21 21:35:30 2015
From: s7r at sky-ip.org (s7r)
Date: Mon, 22 Jun 2015 00:35:30 +0300
Subject: [bitcoin-dev] Welcome to the new Bitcoin Dev List
In-Reply-To: <CAEz79Po7irWrCEfgoRqsLxgwY+R1=cZae5z7NrHJfxM9iBro5g@mail.gmail.com>
References: <CAEz79Po7irWrCEfgoRqsLxgwY+R1=cZae5z7NrHJfxM9iBro5g@mail.gmail.com>
Message-ID: <55872E22.4020104@sky-ip.org>

ACK - all seams fine here.


Do we have all the archives imported? I run several full nodes and
mirrors for open source projects, if you think it's useful, I can
provide a mirror for the mail list archives.

On 6/22/2015 12:29 AM, Warren Togami Jr. wrote:
> Hi folks,
> 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> The move is now complete.  The previous archive has been fully imported
> and new posts here will now be saved.
> 
> *Greylisting Notice* 
> Your first post to this list may be delayed by 5+ minutes due
> to Greylisting <https://en.wikipedia.org/wiki/Greylisting>. Subsequent
> posts should go through without delay. Contact Freenode #bitcoin-dev if
> you have any questions or concerns.
> 
> *TODO*
> 
>   * LF will be upgrading Mailman soon to better handle posts from DKIM
>     enforced domains.
>   * There will be a few more config tweaks like auto-rejecting
>     non-subscribed posts.  Nobody has time to moderate this list, and
>     mail silently disappearing into the moderation hold blackhole is
>     worse than an instant reject message telling people to subscribe.  
>     Unfortunately, it is too dangerous to auto-reject spam ... those
>     messages need to go into a blackhole to prevent bounce abuse.
> 
> Warren Togami 
> 
> 
> 
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

From s7r at sky-ip.org  Sun Jun 21 21:53:34 2015
From: s7r at sky-ip.org (s7r)
Date: Mon, 22 Jun 2015 00:53:34 +0300
Subject: [bitcoin-dev] new thread posting something else
Message-ID: <5587325E.60809@sky-ip.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

This is a new thread posting something else.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (MingW32)

iQEcBAEBCAAGBQJVhzJeAAoJEIN/pSyBJlsRX00IAMKa4w5V5RJjnZ9zPo8gQBQJ
WFnnXQGVx5HlYQuaP/oV4EWeVUP/EZM6QiYV3aE3gJxVJAX99k7Cm9ilZthkhzhq
+LztI6SBeX1y61MueQUcj6eHW376e08HRkwn4OfOTvl6V9LnZ0Gf9etSnJsTPop4
0ebu53HKkOjpfxhX3r6riqty7K+TZberPlJ5ljkKm/Hg+tklNaReTWwZDn2hWwyI
/0uU9TKW5sKF/tjYjWXRsruyrHeDAXMMGsIL5KocYho2SG15aNmVvtvqF7szrapJ
9RYWCwCiWf4hnBe8R6IIN/Wu84Kq4/kqIsJGYficYMHUzLRYf13QfBL1fcfWrBA=
=XHak
-----END PGP SIGNATURE-----

From warren at togami.com  Sun Jun 21 22:10:43 2015
From: warren at togami.com (Warren Togami Jr.)
Date: Sun, 21 Jun 2015 12:10:43 -1000
Subject: [bitcoin-dev] test
Message-ID: <CAEz79PoVWsnd+1c8jJJPka6Jfa4hzbyPmYh2mR-LesXJMk37pQ@mail.gmail.com>

test
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/5cad14b3/attachment.html>

From davidshares at outlook.com  Sun Jun 21 22:13:51 2015
From: davidshares at outlook.com (David Shares)
Date: Sun, 21 Jun 2015 18:13:51 -0400
Subject: [bitcoin-dev] test
In-Reply-To: <CAEz79PoVWsnd+1c8jJJPka6Jfa4hzbyPmYh2mR-LesXJMk37pQ@mail.gmail.com>
References: <CAEz79PoVWsnd+1c8jJJPka6Jfa4hzbyPmYh2mR-LesXJMk37pQ@mail.gmail.com>
Message-ID: <BAY404-EAS112AB7D0FF5853323BDA0F4BCA20@phx.gbl>

Received! 

Sent from my iPhone

> On Jun 21, 2015, at 6:10 PM, Warren Togami Jr. <warren at togami.com> wrote:
> 
> test
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From wtogami at apache.org  Sun Jun 21 22:19:28 2015
From: wtogami at apache.org (Warren Togami Jr.)
Date: Sun, 21 Jun 2015 12:19:28 -1000
Subject: [bitcoin-dev] test #2
Message-ID: <CAEz79PpQ_aVnJ_5SHENet=aOtuAOf4Lbg-PPdgdmp-ghEBKmoQ@mail.gmail.com>

This post from wtogami at apache.org is from an address not subscribed to the
list.  It should be auto-rejected by the server.  If this goes through to
the list then something is wrong with the configuration.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/9af25dcf/attachment-0001.html>

From elombrozo at gmail.com  Sun Jun 21 22:19:29 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 21 Jun 2015 15:19:29 -0700
Subject: [bitcoin-dev] Test
Message-ID: <EC2034BA-F924-4A58-A059-9233954EE8E6@gmail.com>

Blah...
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/3e1a0340/attachment.sig>

From s7r at sky-ip.org  Sun Jun 21 22:21:52 2015
From: s7r at sky-ip.org (s7r)
Date: Mon, 22 Jun 2015 01:21:52 +0300
Subject: [bitcoin-dev] test #2
In-Reply-To: <CAEz79PpQ_aVnJ_5SHENet=aOtuAOf4Lbg-PPdgdmp-ghEBKmoQ@mail.gmail.com>
References: <CAEz79PpQ_aVnJ_5SHENet=aOtuAOf4Lbg-PPdgdmp-ghEBKmoQ@mail.gmail.com>
Message-ID: <55873900.3010305@sky-ip.org>

It did go through the list - I got it like any message from a subscribed
user.

On 6/22/2015 1:19 AM, Warren Togami Jr. wrote:
> This post from wtogami at apache.org <mailto:wtogami at apache.org> is from an
> address not subscribed to the list.  It should be auto-rejected by the
> server.  If this goes through to the list then something is wrong with
> the configuration.
> 
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

From wtogami at apache.org  Sun Jun 21 22:25:03 2015
From: wtogami at apache.org (Warren Togami Jr.)
Date: Sun, 21 Jun 2015 12:25:03 -1000
Subject: [bitcoin-dev] test #3
Message-ID: <CAEz79PqgjHdd_-8uce4e9-N4qB9_R9jXbW3d9Ro6O90RYux_pQ@mail.gmail.com>

This post from wtogami at apache.org is again from an address not subscribed
to the list. It should be auto-rejected by the server. If this goes through
to the list then something is wrong with the configuration.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/22f4a02c/attachment.html>

From ibrightly at gmail.com  Sun Jun 21 22:35:20 2015
From: ibrightly at gmail.com (Ivan Brightly)
Date: Sun, 21 Jun 2015 18:35:20 -0400
Subject: [bitcoin-dev] test #3
In-Reply-To: <CAEz79PqgjHdd_-8uce4e9-N4qB9_R9jXbW3d9Ro6O90RYux_pQ@mail.gmail.com>
References: <CAEz79PqgjHdd_-8uce4e9-N4qB9_R9jXbW3d9Ro6O90RYux_pQ@mail.gmail.com>
Message-ID: <CAAre=yQhY7WcoeAcqtVy0XPhr-KPePUumOZJttD7YjRAhxs+FQ@mail.gmail.com>

Received as any other message from the mailing list.

On Sun, Jun 21, 2015 at 6:25 PM, Warren Togami Jr. <wtogami at apache.org>
wrote:

> This post from wtogami at apache.org is again from an address not subscribed
> to the list. It should be auto-rejected by the server. If this goes through
> to the list then something is wrong with the configuration.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/10e53413/attachment.html>

From elombrozo at gmail.com  Sun Jun 21 22:57:48 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 21 Jun 2015 15:57:48 -0700
Subject: [bitcoin-dev] Test #3
In-Reply-To: <EC2034BA-F924-4A58-A059-9233954EE8E6@gmail.com>
References: <EC2034BA-F924-4A58-A059-9233954EE8E6@gmail.com>
Message-ID: <A9AE99BF-7B75-4A92-BB0E-448CDC8648CC@gmail.com>

Boo!
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/c4785d29/attachment.sig>

From keastes at gmail.com  Sun Jun 21 23:17:40 2015
From: keastes at gmail.com (kendrick eastes)
Date: Sun, 21 Jun 2015 17:17:40 -0600
Subject: [bitcoin-dev] Test #3
In-Reply-To: <A9AE99BF-7B75-4A92-BB0E-448CDC8648CC@gmail.com>
References: <EC2034BA-F924-4A58-A059-9233954EE8E6@gmail.com>
	<A9AE99BF-7B75-4A92-BB0E-448CDC8648CC@gmail.com>
Message-ID: <CAEydrT_A9L6kro7e4Twz2X9_fDcAk7oRjRu=sgsFO4kB2u6k-A@mail.gmail.com>

boo who?

On Sun, Jun 21, 2015 at 4:57 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:

> Boo!
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/ffe97c89/attachment.html>

From elombrozo at gmail.com  Sun Jun 21 23:18:20 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 21 Jun 2015 16:18:20 -0700
Subject: [bitcoin-dev] Test #3
In-Reply-To: <CAEydrT_A9L6kro7e4Twz2X9_fDcAk7oRjRu=sgsFO4kB2u6k-A@mail.gmail.com>
References: <EC2034BA-F924-4A58-A059-9233954EE8E6@gmail.com>
	<A9AE99BF-7B75-4A92-BB0E-448CDC8648CC@gmail.com>
	<CAEydrT_A9L6kro7e4Twz2X9_fDcAk7oRjRu=sgsFO4kB2u6k-A@mail.gmail.com>
Message-ID: <98793D2F-DA57-4BE8-92C1-FC9AF4C2A1D9@gmail.com>

Boo you!

> On Jun 21, 2015, at 4:17 PM, kendrick eastes <keastes at gmail.com> wrote:
> 
> boo who?
> 
> On Sun, Jun 21, 2015 at 4:57 PM, Eric Lombrozo <elombrozo at gmail.com <mailto:elombrozo at gmail.com>> wrote:
> Boo!
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/a1c11508/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/a1c11508/attachment-0001.sig>

From frankf44 at gmail.com  Mon Jun 22 01:14:04 2015
From: frankf44 at gmail.com (Frank Flores)
Date: Sun, 21 Jun 2015 20:14:04 -0500
Subject: [bitcoin-dev] Just FYI
Message-ID: <CALxyHsVWsZOxN3Gwh0_AmjE2nCs=w+FS88fDHRQ7dFfkx_HPAw@mail.gmail.com>

If you're going to go through the trouble of signing your public emails,
please publish your public key on a major key server or at least somewhere
where google can crawl it. Thank you.

-- 
*MONEY IS OVER!*
                                IF YOU WANT IT
<http://www.zeitgeistmovie.com/>
=====================================================
The causes of my servitude can be traced to the tyranny of money.
-Serj Tankian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/10c76ddc/attachment.html>

From pete at petertodd.org  Mon Jun 22 02:06:52 2015
From: pete at petertodd.org (Peter Todd)
Date: Sun, 21 Jun 2015 22:06:52 -0400
Subject: [bitcoin-dev] Just FYI
In-Reply-To: <CALxyHsVWsZOxN3Gwh0_AmjE2nCs=w+FS88fDHRQ7dFfkx_HPAw@mail.gmail.com>
References: <CALxyHsVWsZOxN3Gwh0_AmjE2nCs=w+FS88fDHRQ7dFfkx_HPAw@mail.gmail.com>
Message-ID: <20150622020652.GA21212@savin.petertodd.org>

On Sun, Jun 21, 2015 at 08:14:04PM -0500, Frank Flores wrote:
> If you're going to go through the trouble of signing your public emails,
> please publish your public key on a major key server or at least somewhere
> where google can crawl it. Thank you.

As for how you can do that, on stock gnupg:

    gpg --send-key 934023AE18144354

Or possibly:

    gpg --keyserver hkp://keys.gnupg.net --send-key 934023AE18144354

If your gpg.conf doesn't have a keyserver set.

Note that if you add a new subkey (as well as other changes to your key)
you need to resend your key to the keyservers or people won't be able to
verify your signatures.


Disclaimer: OpenPGP kinda sucks. Deal with it.

-- 
'peter'[:-1]@petertodd.org
000000000000000006e2d86bc8460d5900351f1cf9b2b4e4acdebc1d0a063901
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/0ddfdbf6/attachment.sig>

From dev at jonasschnelli.ch  Mon Jun 22 06:40:15 2015
From: dev at jonasschnelli.ch (Jonas Schnelli)
Date: Mon, 22 Jun 2015 08:40:15 +0200
Subject: [bitcoin-dev] Welcome to the new Bitcoin Dev List
In-Reply-To: <CAEz79Po7irWrCEfgoRqsLxgwY+R1=cZae5z7NrHJfxM9iBro5g@mail.gmail.com>
References: <CAEz79Po7irWrCEfgoRqsLxgwY+R1=cZae5z7NrHJfxM9iBro5g@mail.gmail.com>
Message-ID: <5587ADCF.8070205@jonasschnelli.ch>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev The
> move is now complete.  The previous archive has been fully
> imported and new posts here will now be saved.

Thanks for the work!

What about updating bitcoin.org (https://bitcoin.org/en/development)?
I guess people start looking there...

Same for this...
https://bitcointalk.org/index.php?topic=15527.0

Bip0001 needs also an update...
https://github.com/bitcoin/bips/blob/master/bip-0001.mediawiki

</jonas>
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQIcBAEBAgAGBQJVh63PAAoJECnUvLZBb1PsppEQAJTanEPNxRGZk88rlQP2OpYy
1Giw5LwBHLQ/ybaiUxCzEHJqztvK+kHblXWsh/W1QtHV0Mi1HqfYLFpwN9a02bAh
2uBGmHURsmIM1Gr/5ayj+Sz5YtvqXKIUMYlI4vnbvRYWV/JEuoTjsWtavb5prZZc
g0VwQkNZBpBbgQ2apmdZ9ywa8sn4ShUSZiVnmi63pGijqOU3E1w0vt193cvCm85F
h535XF6j5ZFNbdC1EIMo6QZXTRUhLTJ+XYTbJZckF+Ncm0uQOPlqo046jynSdgcK
nUfoodKPq/fyOtOayVAd+Pwqat15oMmUd+Y7qzmxEBSewcmfwLKI+BUnlb332JTz
zgeB4k4JW5627iOwa7wably/XHRbPeByqMyEVEX8nMbrypAcHVGWdjkJCVUdjcrZ
u0PgSAytnIytQrbhA+woUlYhitqx8EYZXmiCs+pBuGwAnwxLXS9fnuKKns7w3glB
MR6b9Ab25bSdVmIJ93W4tEcmfTHzWc9aNBU2td1/c+YuLnH+OFJuu15ef4dWlNeR
Ed+f+cZuGXS8kgEnE/XB+HUVWfktktpUgKvmtZ5kUP/vErBwA+/B+i1drOp38kfv
iGuUThCiep38w64dkV9KVJNp5z1k3PMoVCvgIhZjiDoL8YSBzlXL1iuGDKxtRhRk
6IuBDtLlegeL0/I0d3UV
=ShCq
-----END PGP SIGNATURE-----

From venzen at mail.bihthai.net  Mon Jun 22 06:49:32 2015
From: venzen at mail.bihthai.net (Venzen Khaosan)
Date: Mon, 22 Jun 2015 13:49:32 +0700
Subject: [bitcoin-dev] Just FYI
In-Reply-To: <20150622020652.GA21212@savin.petertodd.org>
References: <CALxyHsVWsZOxN3Gwh0_AmjE2nCs=w+FS88fDHRQ7dFfkx_HPAw@mail.gmail.com>
	<20150622020652.GA21212@savin.petertodd.org>
Message-ID: <5587AFFC.1010307@mail.bihthai.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Granted this is not the gnuPG support list, it would help me and most
members, here, to know just a little more, following your gpg advice
about publishing keys:

Say, subsequent to publishing a key to a keyserver, I then sign that
key (or someone else signs it)

1) would the key need to be published again?

2) does the key used to sign it need to be published in order to make
signature verification possible?

Venzen


On 06/22/2015 09:06 AM, Peter Todd wrote:
> gpg --keyserver hkp://keys.gnupg.net --send-key
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVh6/4AAoJEGwAhlQc8H1mlL0IAIFZdzyzawOjc43SODLYePo6
NJU+DRKCQLiNhiED/keCFR/t51XarY4dvgG81wr1qskckRarW6s2ZEWU/2l4oaHa
Ys+yO5ASbWOp9jbcBWIMFcAou+ULYx732wqEGTXOgSXljrSsuGa4DO+8vSW1UToc
kY6BhFUa9rjEUQXt+gUqfrXiFlgRFHY4/nd1Tk47VEBipZgcQsJr4j6SYhlXHfbb
CpixpFeIeVFfdHSNQiDMqPkF3xsTLQcqq2LvZpT8TXrA5vQ0wv/gZH49zIIy5QjR
xjmSb1tZl0GZRTZ3CYCsoK4Zq4BdhqdU8XIhlwACC2WXHFDnqQrTXwH4nLeWcG0=
=pYDp
-----END PGP SIGNATURE-----

From laanwj at gmail.com  Mon Jun 22 07:48:39 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Mon, 22 Jun 2015 09:48:39 +0200
Subject: [bitcoin-dev] Welcome to the new Bitcoin Dev List
In-Reply-To: <5587ADCF.8070205@jonasschnelli.ch>
References: <CAEz79Po7irWrCEfgoRqsLxgwY+R1=cZae5z7NrHJfxM9iBro5g@mail.gmail.com>
	<5587ADCF.8070205@jonasschnelli.ch>
Message-ID: <20150622074838.GD4179@amethyst.visucore.com>

On Mon, Jun 22, 2015 at 08:40:15AM +0200, Jonas Schnelli wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev The
> > move is now complete.  The previous archive has been fully
> > imported and new posts here will now be saved.
> 
> Thanks for the work!
> 
> What about updating bitcoin.org (https://bitcoin.org/en/development)?
> I guess people start looking there...
> 
> Same for this...
> https://bitcointalk.org/index.php?topic=15527.0
> 
> Bip0001 needs also an update...
> https://github.com/bitcoin/bips/blob/master/bip-0001.mediawiki

https://github.com/bitcoin/bips/pull/161
https://github.com/bitcoin/bitcoin.org/pull/908
https://github.com/bitcoin/bitcoin/pull/6319

The bitcoin.org one probably still needs some tweaking.

Wladimir

From frankf44 at gmail.com  Mon Jun 22 08:45:13 2015
From: frankf44 at gmail.com (Frank Flores)
Date: Mon, 22 Jun 2015 03:45:13 -0500
Subject: [bitcoin-dev] Just FYI
In-Reply-To: <5587AFFC.1010307@mail.bihthai.net>
References: <CALxyHsVWsZOxN3Gwh0_AmjE2nCs=w+FS88fDHRQ7dFfkx_HPAw@mail.gmail.com>
	<20150622020652.GA21212@savin.petertodd.org>
	<5587AFFC.1010307@mail.bihthai.net>
Message-ID: <CALxyHsXWikF9bccqhQiDr=kCfqF2V2X-62raXOJeGMD4dYqyyw@mail.gmail.com>

Whenever a public key is altered in any way it should be
resubmitted/republished, so yes, please do so.

DO NOT PUBLISH YOUR PRIVATE KEY. That is the data used to sign a document.
You only need to publish your PUBLIC KEY or otherwise share it with
recipients of your signed message so that others can verify it as properly
signed or not.

On Mon, Jun 22, 2015 at 1:49 AM, Venzen Khaosan <venzen at mail.bihthai.net>
wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Granted this is not the gnuPG support list, it would help me and most
> members, here, to know just a little more, following your gpg advice
> about publishing keys:
>
> Say, subsequent to publishing a key to a keyserver, I then sign that
> key (or someone else signs it)
>
> 1) would the key need to be published again?
>
> 2) does the key used to sign it need to be published in order to make
> signature verification possible?
>
> Venzen
>
>
> On 06/22/2015 09:06 AM, Peter Todd wrote:
> > gpg --keyserver hkp://keys.gnupg.net --send-key
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1
>
> iQEcBAEBAgAGBQJVh6/4AAoJEGwAhlQc8H1mlL0IAIFZdzyzawOjc43SODLYePo6
> NJU+DRKCQLiNhiED/keCFR/t51XarY4dvgG81wr1qskckRarW6s2ZEWU/2l4oaHa
> Ys+yO5ASbWOp9jbcBWIMFcAou+ULYx732wqEGTXOgSXljrSsuGa4DO+8vSW1UToc
> kY6BhFUa9rjEUQXt+gUqfrXiFlgRFHY4/nd1Tk47VEBipZgcQsJr4j6SYhlXHfbb
> CpixpFeIeVFfdHSNQiDMqPkF3xsTLQcqq2LvZpT8TXrA5vQ0wv/gZH49zIIy5QjR
> xjmSb1tZl0GZRTZ3CYCsoK4Zq4BdhqdU8XIhlwACC2WXHFDnqQrTXwH4nLeWcG0=
> =pYDp
> -----END PGP SIGNATURE-----
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>



-- 
*MONEY IS OVER!*
                                IF YOU WANT IT
<http://www.zeitgeistmovie.com/>
=====================================================
The causes of my servitude can be traced to the tyranny of money.
-Serj Tankian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/c25d6467/attachment.html>

From nathan at leastauthority.com  Mon Jun 22 16:23:36 2015
From: nathan at leastauthority.com (Nathan Wilcox)
Date: Mon, 22 Jun 2015 10:23:36 -0600
Subject: [bitcoin-dev] test post
Message-ID: <CAFdHNGius6pXxnw_x7G-tWD9-XvBUYhsJYoPE953P3CQYf8_-Q@mail.gmail.com>

hello world.

-- 
Nathan Wilcox
Least Authoritarian

email: nathan at leastauthority.com
twitter: @least_nathan
PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/a928cecb/attachment.html>

From richard at windstone.co.za  Mon Jun 22 16:46:50 2015
From: richard at windstone.co.za (Richard Winder)
Date: Mon, 22 Jun 2015 17:46:50 +0100
Subject: [bitcoin-dev] test post
In-Reply-To: <CAFdHNGius6pXxnw_x7G-tWD9-XvBUYhsJYoPE953P3CQYf8_-Q@mail.gmail.com>
References: <CAFdHNGius6pXxnw_x7G-tWD9-XvBUYhsJYoPE953P3CQYf8_-Q@mail.gmail.com>
Message-ID: <CAJAwWYy+Ddb2=2cShNw6TrHmehoemvQTsnP8akHFafja1GK=vA@mail.gmail.com>

awaiting transmission transmission

On Mon, Jun 22, 2015 at 5:23 PM, Nathan Wilcox <nathan at leastauthority.com>
wrote:

> hello world.
>
> --
> Nathan Wilcox
> Least Authoritarian
>
> email: nathan at leastauthority.com
> twitter: @least_nathan
> PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/ad30754d/attachment.html>

From nathan at leastauthority.com  Mon Jun 22 16:52:19 2015
From: nathan at leastauthority.com (Nathan Wilcox)
Date: Mon, 22 Jun 2015 10:52:19 -0600
Subject: [bitcoin-dev] test post
In-Reply-To: <CAJAwWYy+Ddb2=2cShNw6TrHmehoemvQTsnP8akHFafja1GK=vA@mail.gmail.com>
References: <CAFdHNGius6pXxnw_x7G-tWD9-XvBUYhsJYoPE953P3CQYf8_-Q@mail.gmail.com>
	<CAJAwWYy+Ddb2=2cShNw6TrHmehoemvQTsnP8akHFafja1GK=vA@mail.gmail.com>
Message-ID: <CAFdHNGhGOdAjpdFzPb=ogVpoM3KG3GJPA85XUTKZkcfPkT0xBA@mail.gmail.com>

attack at dawn.

On Mon, Jun 22, 2015 at 10:46 AM, Richard Winder <richard at windstone.co.za>
wrote:

> awaiting transmission transmission
>
> On Mon, Jun 22, 2015 at 5:23 PM, Nathan Wilcox <nathan at leastauthority.com>
> wrote:
>
>> hello world.
>>
>> --
>> Nathan Wilcox
>> Least Authoritarian
>>
>> email: nathan at leastauthority.com
>> twitter: @least_nathan
>> PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>


-- 
Nathan Wilcox
Least Authoritarian

email: nathan at leastauthority.com
twitter: @least_nathan
PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/07928fe3/attachment.html>

From johnathan at corganlabs.com  Mon Jun 22 17:45:44 2015
From: johnathan at corganlabs.com (Johnathan Corgan)
Date: Mon, 22 Jun 2015 10:45:44 -0700
Subject: [bitcoin-dev] Test
Message-ID: <CALOxbZuNbpK_nGiUCyBkp2mnaUq1pH=7vELYgfbmPbdkm+RPAA@mail.gmail.com>

ivan hiding message oak

-- 
Johnathan Corgan
Corgan Labs - SDR Training and Development Services
http://corganlabs.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/4b71c94e/attachment.html>

From gavinandresen at gmail.com  Mon Jun 22 18:18:19 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Mon, 22 Jun 2015 14:18:19 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
Message-ID: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>

I promised to write a BIP after I'd implemented
increase-the-maximum-block-size code, so here it is. It also lives at:
https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki

I don't expect any proposal to please everybody; there are unavoidable
tradeoffs to increasing the maximum block size. I prioritize implementation
simplicity -- it is hard to write consensus-critical code, so simpler is
better.




  BIP: ??
  Title: Increase Maximum Block Size
  Author: Gavin Andresen <gavinandresen at gmail.com>
  Status: Draft
  Type: Standards Track
  Created: 2015-06-22

==Abstract==

This BIP proposes replacing the fixed one megabyte maximum block size with
a maximum size that grows over time at a predictable rate.

==Motivation==

Transaction volume on the Bitcoin network has been growing, and will soon
reach the one-megabyte-every-ten-minutes limit imposed by the one megabyte
maximum block size. Increasing the maximum size reduces the impact of that
limit on Bitcoin adoption and growth.

==Specification==

After deployment on the network (see the Deployment section for details),
the maximum allowed size of a block on the main network shall be calculated
based on the timestamp in the block header.

The maximum size shall be 8,000,000 bytes at a timestamp of 2016-01-11
00:00:00 UTC (timestamp 1452470400), and shall double every 63,072,000
seconds (two years, ignoring leap years), until 2036-01-06 00:00:00 UTC
(timestamp 2083190400). The maximum size of blocks in between doublings
will increase linearly based on the block's timestamp. The maximum size of
blocks after 2036-01-06 00:00:00 UTC shall be 8,192,000,000 bytes.

Expressed in pseudo-code, using integer math:

    function max_block_size(block_timestamp):

        time_start = 1452470400
        time_double = 60*60*24*365*2
        size_start = 8000000
        if block_timestamp >= time_start+time_double*10
            return size_start * 2^10

        // Piecewise-linear-between-doublings growth:
        time_delta = block_timestamp - t_start
        doublings = time_delta / time_double
        remainder = time_delta % time_double
        interpolate = (size_start * 2^doublings * remainder) / time_double
        max_size = size_start * 2^doublings + interpolate

        return max_size

==Deployment==

Deployment shall be controlled by hash-power supermajority vote (similar to
the technique used in BIP34), but the earliest possible activation time is
2016-01-11 00:00:00 UTC.

Activation is achieved when 750 of 1,000 consecutive blocks in the best
chain have a version number with bits 3 and 14 set (0x20000004 in hex). The
activation time will be the timestamp of the 750'th block plus a two week
(1,209,600 second) grace period to give any remaining miners or services
time to upgrade to support larger blocks. If a supermajority is achieved
more than two weeks before 2016-01-11 00:00:00 UTC, the activation time
will be 2016-01-11 00:00:00 UTC.

Block version numbers are used only for activation; once activation is
achieved, the maximum block size shall be as described in the specification
section, regardless of the version number of the block.


==Rationale==

The initial size of 8,000,000 bytes was chosen after testing the current
reference implementation code with larger block sizes and receiving
feedback from miners stuck behind bandwidth-constrained networks (in
particular, Chinese miners behind the Great Firewall of China).

The doubling interval was chosen based on long-term growth trends for CPU
power, storage, and Internet bandwidth. The 20-year limit was chosen
because exponential growth cannot continue forever.

Calculations are based on timestamps and not blockchain height because a
timestamp is part of every block's header. This allows implementations to
know a block's maximum size after they have downloaded it's header, but
before downloading any transactions.

The deployment plan is taken from Jeff Garzik's proposed BIP100 block size
increase, and is designed to give miners, merchants, and
full-node-running-end-users sufficient time to upgrade to software that
supports bigger blocks. A 75% supermajority was chosen so that one large
mining pool does not have effective veto power over a blocksize increase.
The version number scheme is designed to be compatible with Pieter's
Wuille's proposed "Version bits" BIP.

TODO: summarize objections/arguments from
http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.

TODO: describe other proposals and their advantages/disadvantages over this
proposal.


==Compatibility==

This is a hard-forking change to the Bitcoin protocol; anybody running code
that fully validates blocks must upgrade before the activation time or they
will risk rejecting a chain containing larger-than-one-megabyte blocks.

Simplified Payment Verification software is not affected, unless it makes
assumptions about the maximum depth of a transaction's merkle branch based
on the minimum size of a transaction and the maximum block size.

==Implementation==

https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/15ca6d1f/attachment-0001.html>

From tier.nolan at gmail.com  Mon Jun 22 18:33:45 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Mon, 22 Jun 2015 19:33:45 +0100
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
Message-ID: <CAE-z3OVKWfKOxQaAkB1_09f+v1FgkPCZCR-UxfnA008NDjGb5g@mail.gmail.com>

The BIP-100 proposal uses a window of 12000 blocks (83 days) rather than
the standard 1000.  Given that the threshold is lower than is normal for
hard-forks, noise on the measurement could cause an activation even if less
than 75% of miners agree.  It also means that the vote has to be sustained
for longer and inherently gives a longer notice period.

Two weeks seems low for an upgrade warning.  I guess there would be an
alert on the network.

Do old nodes detect an upgrade by version numbers?  If that was headers
only, then they could detect that large blocks have activated.

Have you considered a "fail" condition?  For example, if 750 of the last
1000 blocks set bits 4 and 14, then it counts as a rejection by 75% of the
miners.  Alternatively, if the rule doesn't activate by 11th Jan 2017, then
it is disabled.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/c4698689/attachment.html>

From gavinandresen at gmail.com  Mon Jun 22 18:46:03 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Mon, 22 Jun 2015 14:46:03 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CAE-z3OVKWfKOxQaAkB1_09f+v1FgkPCZCR-UxfnA008NDjGb5g@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<CAE-z3OVKWfKOxQaAkB1_09f+v1FgkPCZCR-UxfnA008NDjGb5g@mail.gmail.com>
Message-ID: <CABsx9T1FOkc0C2EcD4s4XB0D=tpaDs27smeL__P=nRLByr_dfg@mail.gmail.com>

On Mon, Jun 22, 2015 at 2:33 PM, Tier Nolan <tier.nolan at gmail.com> wrote:

> The BIP-100 proposal uses a window of 12000 blocks (83 days) rather than
> the standard 1000.  Given that the threshold is lower than is normal for
> hard-forks, noise on the measurement could cause an activation even if less
> than 75% of miners agree.  It also means that the vote has to be sustained
> for longer and inherently gives a longer notice period.
>

9,000 of last 12,000 blocks is OK with me (I don't think scanning through
the last 12,000 block headers every new block will cause performance
problems, but I'd want to benchmark it to be absolutely sure).


> Two weeks seems low for an upgrade warning.  I guess there would be an
> alert on the network.
>
Do old nodes detect an upgrade by version numbers?  If that was headers
> only, then they could detect that large blocks have activated.
>

Bitcoin Core will alert when automatically when 51% of blocks have a
version it doesn't understand.

It will also alert automatically if it detects a chain with more work that
it doesn't consider valid for some reason. And 0.11 contains code that
alerts if you're on a chain that is being mined really slowly.

Have you considered a "fail" condition?  For example, if 750 of the last
> 1000 blocks set bits 4 and 14, then it counts as a rejection by 75% of the
> miners.  Alternatively, if the rule doesn't activate by 11th Jan 2017, then
> it is disabled.
>

I like the fail-if-not-activated-by idea. Not so crazy about the vote idea
(what if miners set bits 3 AND 4 ?).

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/9cf73348/attachment.html>

From martin.schwarz at gmail.com  Mon Jun 22 19:10:40 2015
From: martin.schwarz at gmail.com (Martin Schwarz)
Date: Mon, 22 Jun 2015 21:10:40 +0200
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
Message-ID: <55885DB0.9040709@gmail.com>

Gavin,

in 2022 your proposal (BIP as well as code) crosses the 32MB maximum
message size limit. In order to avoid deployment of code that deterministically
fails fatally in 2022, I'd propose to stop the doublings at 32MB for now and fix
the message size limit in the mean time. Since the message size fix requires
a 2nd hard fork anyway, your current 8GB limit could be re-instateted in that
2nd fork as well. Even if you disagree, I'd suggest to address the topic in the BIP.

best regards,
Martin


From pete at petertodd.org  Mon Jun 22 19:23:09 2015
From: pete at petertodd.org (Peter Todd)
Date: Mon, 22 Jun 2015 15:23:09 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
Message-ID: <20150622192308.GA23545@savin.petertodd.org>

On Mon, Jun 22, 2015 at 02:18:19PM -0400, Gavin Andresen wrote:
> I promised to write a BIP after I'd implemented
> increase-the-maximum-block-size code, so here it is. It also lives at:
> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki

It's important that we see a wide range of realistic testing of what an
8MB limit could look in the near future. An important part of that
testing is load testing.

As of writing the BIP above has no mention of what switchover rules will
be used for testnet; code floating around has August 1st 2015 as that
date. I propose we use August 1st 2013.

This switch over date should be set in the _past_ to allow for the
creation (via reorg) of a realistic full-load blockchain on testnet to
fully test the real-world behavior of the entire infrastructure
ecosystem, including questions like the scalability of block explorers,
SPV wallets, feasibility of initial syncronization, scalability of the
UTXO set, etc. While this is of course inconvenient - 2 years of 8MB
blocks is 840GB worth of data - the Bitcoin ecosystem can-not afford to
make a change like this blindly.

I'm sure with a $3.5 billion market cap at stake we can scrape together
the resources to voluntarily run a few hundred full-load full-nodes for
testing a change with the potential to destroy that market cap.

-- 
'peter'[:-1]@petertodd.org
00000000000000000b953816d4c31e79b04d5b075bcacb8cf20e54ee3b61c316
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/4f20e897/attachment.sig>

From tier.nolan at gmail.com  Mon Jun 22 19:28:49 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Mon, 22 Jun 2015 20:28:49 +0100
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <55885DB0.9040709@gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<55885DB0.9040709@gmail.com>
Message-ID: <CAE-z3OWqiGPPNVxBVU0mx+TKFuysKrhXpwg6gOFcwGBQx26VtQ@mail.gmail.com>

On Mon, Jun 22, 2015 at 8:10 PM, Martin Schwarz <martin.schwarz at gmail.com>
wrote:

> Gavin,
>
> in 2022 your proposal (BIP as well as code) crosses the 32MB maximum
> message size limit. In order to avoid deployment of code that
> deterministically
> fails fatally in 2022, I'd propose to stop the doublings at 32MB for now
> and fix
> the message size limit in the mean time.


There is an exception in the code for "block" messages.

https://github.com/gavinandresen/bitcoinxt/commit/c81898ec46e4962daf975e352931b848026fdc34#diff-7ec3c68a81efff79b6ca22ac1f1eabbaR3548

This means 2MB limit for all other messages.  "block" messages are limited
to the max block size for 2 hours into the future.

I think setting it to a week into the future might be better, since it is
only a DOS protection.  This would guarantee that message sizes are
reasonable.  The size check would still be done anyway.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/2457767e/attachment.html>

From gavinandresen at gmail.com  Mon Jun 22 19:54:26 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Mon, 22 Jun 2015 15:54:26 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CAE-z3OWqiGPPNVxBVU0mx+TKFuysKrhXpwg6gOFcwGBQx26VtQ@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<55885DB0.9040709@gmail.com>
	<CAE-z3OWqiGPPNVxBVU0mx+TKFuysKrhXpwg6gOFcwGBQx26VtQ@mail.gmail.com>
Message-ID: <CABsx9T0t=o9f6KxVDP01iPRErUCZS8nzO438T_bkLE-4kQV7hw@mail.gmail.com>

As Tier says, the current network message limit is 2MB (reduced from 32MB
in the... uhh, 0.10? release).

I think keeping the consensus rules distinct from limitations of the p2p
network makes sense-- we are already seeing different protocols for
announcing transactions and blocks (Matt's relay network is, essentially, a
separate protocol). I could write a separate BIP describing the change to
the p2p network protocol, but that feels like busy-work to me.

RE: setting the DoS size check farther than 2 hours into the future: the
block, itself, will be rejected if it has a timestamp more than 2 hours in
the future. That is already a consensus rule.

RE: what happens if block timestamps are not in chronological order:
Nothing.

The activation counting happens in block-height-order, so timestamps on all
but the "activating" block are all that matters.

Code that looks for the activation condition must properly handle re-orgs
around the activation block, of course.


RE: testnet parameters:  big blocks can be tested in -regtest mode with
arbitrary timestamps in the past or future. Testing maximum-8MB-blocks
mined "in the past" on testnet will just result in a testnet that is even
more useless for ordinary testing of products or services being developed
-- part of what makes testnet useful for things like testing transaction
creation code is it syncs quickly.

That said, I have thought for a while now somebody should take a fresh look
at the testnet, talk to people who might be customers for a reset testnet
or testnets (we probably want separate testnets for people testing mining
and people testing transaction creation, for example), and implement
testnets designed to make it easy to test what people need testing.

RE: scraping together money to run a few hundred full-load full-nodes:
 hardware is cheap, people are expensive. You seem to expect that companies
will be willing to invest the time of their people testing something that
may never happen (8MB of transactions every ten minutes). Maybe they would,
but most companies are very busy trying to stay in business by attracting
customers to their products or services. Scaling up is a good problem to
have, and, in my experience, the way to be successful scaling up is to
tackle problems as they occur.

Because there's no use spending a bunch of person-hours hyper-optimizing
for 8MB blocks stored in MySQL if a year from now you find out your
customers don't actually want your product or MySQL 5.11 comes out and is
100 times faster....

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/72da223e/attachment-0001.html>

From pete at petertodd.org  Mon Jun 22 20:12:47 2015
From: pete at petertodd.org (Peter Todd)
Date: Mon, 22 Jun 2015 16:12:47 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T0t=o9f6KxVDP01iPRErUCZS8nzO438T_bkLE-4kQV7hw@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<55885DB0.9040709@gmail.com>
	<CAE-z3OWqiGPPNVxBVU0mx+TKFuysKrhXpwg6gOFcwGBQx26VtQ@mail.gmail.com>
	<CABsx9T0t=o9f6KxVDP01iPRErUCZS8nzO438T_bkLE-4kQV7hw@mail.gmail.com>
Message-ID: <20150622201247.GA2919@savin.petertodd.org>

On Mon, Jun 22, 2015 at 03:54:26PM -0400, Gavin Andresen wrote:

It would be useful if you replied directly to the emails in question as
opposed to breaking the flow of conversation and taking replies out of
context for other readers.

> As Tier says, the current network message limit is 2MB (reduced from 32MB
> in the... uhh, 0.10? release).

-- 
'peter'[:-1]@petertodd.org
00000000000000000a58e4b27940e4350a2a11e7c5a45ff2a44401d15998f0e1
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/6a9f655d/attachment.sig>

From kalle at rosenbaum.se  Mon Jun 22 20:27:19 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Mon, 22 Jun 2015 22:27:19 +0200
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
Message-ID: <CAPswA9wVEs6oH8CxafLvLy78bpC937HZccjXHwyq8JVMV7qiQA@mail.gmail.com>

Thank you!

A few questions/comments:

* In the specification, you refer to "t_start". I guess you mean "time_start"?

* Miners can, especially when close to a block doubling or shortly
after activation, to some extent manipulate max block size by
manipulating the time stamp in the block header within valid limits.
According to the pseudo code in the specification, the first and a
handful of subsequent blocks after activation could actually have
negative max block sizes due to this (depending on how you define the
% operator of the pseudo code). I haven't checked the reference
implementation, but I do think that the specification section should
explicitly handle this.

Regards,
Kalle

2015-06-22 20:18 GMT+02:00 Gavin Andresen <gavinandresen at gmail.com>:
> I promised to write a BIP after I'd implemented
> increase-the-maximum-block-size code, so here it is. It also lives at:
> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki
>
> I don't expect any proposal to please everybody; there are unavoidable
> tradeoffs to increasing the maximum block size. I prioritize implementation
> simplicity -- it is hard to write consensus-critical code, so simpler is
> better.
>
>
>
>
>   BIP: ??
>   Title: Increase Maximum Block Size
>   Author: Gavin Andresen <gavinandresen at gmail.com>
>   Status: Draft
>   Type: Standards Track
>   Created: 2015-06-22
>
> ==Abstract==
>
> This BIP proposes replacing the fixed one megabyte maximum block size with a
> maximum size that grows over time at a predictable rate.
>
> ==Motivation==
>
> Transaction volume on the Bitcoin network has been growing, and will soon
> reach the one-megabyte-every-ten-minutes limit imposed by the one megabyte
> maximum block size. Increasing the maximum size reduces the impact of that
> limit on Bitcoin adoption and growth.
>
> ==Specification==
>
> After deployment on the network (see the Deployment section for details),
> the maximum allowed size of a block on the main network shall be calculated
> based on the timestamp in the block header.
>
> The maximum size shall be 8,000,000 bytes at a timestamp of 2016-01-11
> 00:00:00 UTC (timestamp 1452470400), and shall double every 63,072,000
> seconds (two years, ignoring leap years), until 2036-01-06 00:00:00 UTC
> (timestamp 2083190400). The maximum size of blocks in between doublings will
> increase linearly based on the block's timestamp. The maximum size of blocks
> after 2036-01-06 00:00:00 UTC shall be 8,192,000,000 bytes.
>
> Expressed in pseudo-code, using integer math:
>
>     function max_block_size(block_timestamp):
>
>         time_start = 1452470400
>         time_double = 60*60*24*365*2
>         size_start = 8000000
>         if block_timestamp >= time_start+time_double*10
>             return size_start * 2^10
>
>         // Piecewise-linear-between-doublings growth:
>         time_delta = block_timestamp - t_start
>         doublings = time_delta / time_double
>         remainder = time_delta % time_double
>         interpolate = (size_start * 2^doublings * remainder) / time_double
>         max_size = size_start * 2^doublings + interpolate
>
>         return max_size
>
> ==Deployment==
>
> Deployment shall be controlled by hash-power supermajority vote (similar to
> the technique used in BIP34), but the earliest possible activation time is
> 2016-01-11 00:00:00 UTC.
>
> Activation is achieved when 750 of 1,000 consecutive blocks in the best
> chain have a version number with bits 3 and 14 set (0x20000004 in hex). The
> activation time will be the timestamp of the 750'th block plus a two week
> (1,209,600 second) grace period to give any remaining miners or services
> time to upgrade to support larger blocks. If a supermajority is achieved
> more than two weeks before 2016-01-11 00:00:00 UTC, the activation time will
> be 2016-01-11 00:00:00 UTC.
>
> Block version numbers are used only for activation; once activation is
> achieved, the maximum block size shall be as described in the specification
> section, regardless of the version number of the block.
>
>
> ==Rationale==
>
> The initial size of 8,000,000 bytes was chosen after testing the current
> reference implementation code with larger block sizes and receiving feedback
> from miners stuck behind bandwidth-constrained networks (in particular,
> Chinese miners behind the Great Firewall of China).
>
> The doubling interval was chosen based on long-term growth trends for CPU
> power, storage, and Internet bandwidth. The 20-year limit was chosen because
> exponential growth cannot continue forever.
>
> Calculations are based on timestamps and not blockchain height because a
> timestamp is part of every block's header. This allows implementations to
> know a block's maximum size after they have downloaded it's header, but
> before downloading any transactions.
>
> The deployment plan is taken from Jeff Garzik's proposed BIP100 block size
> increase, and is designed to give miners, merchants, and
> full-node-running-end-users sufficient time to upgrade to software that
> supports bigger blocks. A 75% supermajority was chosen so that one large
> mining pool does not have effective veto power over a blocksize increase.
> The version number scheme is designed to be compatible with Pieter's
> Wuille's proposed "Version bits" BIP.
>
> TODO: summarize objections/arguments from
> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.
>
> TODO: describe other proposals and their advantages/disadvantages over this
> proposal.
>
>
> ==Compatibility==
>
> This is a hard-forking change to the Bitcoin protocol; anybody running code
> that fully validates blocks must upgrade before the activation time or they
> will risk rejecting a chain containing larger-than-one-megabyte blocks.
>
> Simplified Payment Verification software is not affected, unless it makes
> assumptions about the maximum depth of a transaction's merkle branch based
> on the minimum size of a transaction and the maximum block size.
>
> ==Implementation==
>
> https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

From jeanpaulkogelman at me.com  Mon Jun 22 19:32:22 2015
From: jeanpaulkogelman at me.com (Jean-Paul Kogelman)
Date: Mon, 22 Jun 2015 19:32:22 +0000 (GMT)
Subject: [bitcoin-dev]
 =?utf-8?q?Draft_BIP_=3A_fixed-schedule_block_size_i?=
 =?utf-8?q?ncrease?=
Message-ID: <dd09d1e5-57fb-46ef-8bc0-0fdccf9e7abb@me.com>



On Jun 22, 2015, at 11:18 AM, Gavin Andresen <gavinandresen at gmail.com> wrote:

The maximum size shall be 8,000,000 bytes at a timestamp of 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double every 63,072,000 seconds (two years, ignoring leap years), until 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of blocks in between doublings will increase linearly based on the block's timestamp. The maximum size of blocks after 2036-01-06 00:00:00 UTC shall be 8,192,000,000 bytes.
?
Since it's possible that block timestamps aren't chronological in order, what would happen if a block following a size increase trigger is back in the past before the size increase? Would that block have a lower size restriction again? Would using block height not be a more stable number to work with?

jp
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/2b279abf/attachment.html>

From tier.nolan at gmail.com  Mon Jun 22 20:43:41 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Mon, 22 Jun 2015 21:43:41 +0100
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <dd09d1e5-57fb-46ef-8bc0-0fdccf9e7abb@me.com>
References: <dd09d1e5-57fb-46ef-8bc0-0fdccf9e7abb@me.com>
Message-ID: <CAE-z3OUE_QS_CXXL5T7CAor82GMxidGPXpwiNvP6nQBi9+dX2w@mail.gmail.com>

On Mon, Jun 22, 2015 at 8:32 PM, Jean-Paul Kogelman <jeanpaulkogelman at me.com
> wrote:

>
> Since it's possible that block timestamps aren't chronological in order,
> what would happen if a block following a size increase trigger is back in
> the past before the size increase? Would that block have a lower size
> restriction again? Would using block height not be a more stable number to
> work with?
>

The activation or not rule is purely timestamp based.  Blocks with a
timestamp less than 1452470400 have a limit of 1MB.  There could be an 8MB
block followed by a block that is limited to 1MB.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/2fbf6432/attachment.html>

From gavinandresen at gmail.com  Mon Jun 22 20:46:51 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Mon, 22 Jun 2015 16:46:51 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CAPswA9wVEs6oH8CxafLvLy78bpC937HZccjXHwyq8JVMV7qiQA@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<CAPswA9wVEs6oH8CxafLvLy78bpC937HZccjXHwyq8JVMV7qiQA@mail.gmail.com>
Message-ID: <CABsx9T1KsOHF2u+Sk0c1d1U11ff-FJH9EjC4XNZP4-puWKE_Lg@mail.gmail.com>

On Mon, Jun 22, 2015 at 4:27 PM, Kalle Rosenbaum <kalle at rosenbaum.se> wrote:

> * In the specification, you refer to "t_start". I guess you mean
> "time_start"?
>

Thanks, I'll fix.


> * Miners can, especially when close to a block doubling or shortly
> after activation, to some extent manipulate max block size by
> manipulating the time stamp in the block header within valid limits.
> According to the pseudo code in the specification, the first and a
> handful of subsequent blocks after activation could actually have
> negative max block sizes due to this (depending on how you define the
> % operator of the pseudo code). I haven't checked the reference
> implementation, but I do think that the specification section should
> explicitly handle this.
>

Excellent point. That could only happen if activation happened on 11 Jan
2016; instead of complicating the code and spec with another condition, I
think it would be better to specify that the activation date is the later
of the miner supermajority and 11 Jan, with the first big block two weeks
later.


-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/adbbace4/attachment-0001.html>

From gavinandresen at gmail.com  Mon Jun 22 20:51:23 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Mon, 22 Jun 2015 16:51:23 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T1KsOHF2u+Sk0c1d1U11ff-FJH9EjC4XNZP4-puWKE_Lg@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<CAPswA9wVEs6oH8CxafLvLy78bpC937HZccjXHwyq8JVMV7qiQA@mail.gmail.com>
	<CABsx9T1KsOHF2u+Sk0c1d1U11ff-FJH9EjC4XNZP4-puWKE_Lg@mail.gmail.com>
Message-ID: <CABsx9T0GqX72YqwSsXdPuWxe_4aAk1z1GJqV6jF+Vue5VWyTPA@mail.gmail.com>

On Mon, Jun 22, 2015 at 4:46 PM, Gavin Andresen <gavinandresen at gmail.com>
wrote:

> Excellent point. That could only happen if activation happened on 11 Jan
> 2016; instead of complicating the code and spec with another condition, I
> think it would be better to specify that the activation date is the later
> of the miner supermajority and 11 Jan, with the first big block two weeks
> later.
>

.... I take that back, I'm wrong and Tier is correct: if activation
happened right at midnight 11 Jan 2016 and the next block's timestamp was
before midnight, that next block would just be limited to 1MB in size.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/385adf94/attachment.html>

From pete at petertodd.org  Mon Jun 22 20:54:21 2015
From: pete at petertodd.org (Peter Todd)
Date: Mon, 22 Jun 2015 16:54:21 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <dd09d1e5-57fb-46ef-8bc0-0fdccf9e7abb@me.com>
References: <dd09d1e5-57fb-46ef-8bc0-0fdccf9e7abb@me.com>
Message-ID: <20150622205420.GA8892@savin.petertodd.org>

On Mon, Jun 22, 2015 at 07:32:22PM +0000, Jean-Paul Kogelman wrote:
> 
> 
> On Jun 22, 2015, at 11:18 AM, Gavin Andresen <gavinandresen at gmail.com> wrote:
> 
> The maximum size shall be 8,000,000 bytes at a timestamp of 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double every 63,072,000 seconds (two years, ignoring leap years), until 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of blocks in between doublings will increase linearly based on the block's timestamp. The maximum size of blocks after 2036-01-06 00:00:00 UTC shall be 8,192,000,000 bytes.
> ?
> Since it's possible that block timestamps aren't chronological in order, what would happen if a block following a size increase trigger is back in the past before the size increase? Would that block have a lower size restriction again? Would using block height not be a more stable number to work with?

In the nVersion bits proposal that I co-authored we solved that issue by
comparing the timestamp against the median time, which is guaranteed by
the protocol rules to monotonically advance.

-- 
'peter'[:-1]@petertodd.org
0000000000000000138b2613c026e0ed1dbf6f8f193f1c3115bdf540dc22fbf6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/0f5603a7/attachment.sig>

From stephencalebmorse at gmail.com  Mon Jun 22 21:04:59 2015
From: stephencalebmorse at gmail.com (Stephen Morse)
Date: Mon, 22 Jun 2015 17:04:59 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <20150622205420.GA8892@savin.petertodd.org>
References: <dd09d1e5-57fb-46ef-8bc0-0fdccf9e7abb@me.com>
	<20150622205420.GA8892@savin.petertodd.org>
Message-ID: <CABHVRKQoHERWSLwF-885jis9PqV07qYEJrScxwxfePwv0C9EoQ@mail.gmail.com>

> In the nVersion bits proposal that I co-authored we solved that issue by
> comparing the timestamp against the median time, which is guaranteed by
> the protocol rules to monotonically advance.
>

I'm also a fan of using the median time to ensure that there is a clear
point where the protocol change starts. Something like "blocks only allow
the larger block size if the associate pindex has pindex->GetMedianTimePast()
after midnight 11 Jan 2016 and where a supermajority showing support for
the fork has previously been reached".
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/98a3b24f/attachment.html>

From gavinandresen at gmail.com  Mon Jun 22 21:21:40 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Mon, 22 Jun 2015 17:21:40 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <20150622205420.GA8892@savin.petertodd.org>
References: <dd09d1e5-57fb-46ef-8bc0-0fdccf9e7abb@me.com>
	<20150622205420.GA8892@savin.petertodd.org>
Message-ID: <CABsx9T2FxNEEUx7_ZRf2NpQk1fdqMKtfzccX-duBjOn-ksS0cg@mail.gmail.com>

On Mon, Jun 22, 2015 at 4:54 PM, Peter Todd <pete at petertodd.org> wrote:

> > Since it's possible that block timestamps aren't chronological in order,
> what would happen if a block following a size increase trigger is back in
> the past before the size increase? Would that block have a lower size
> restriction again? Would using block height not be a more stable number to
> work with?
>
> In the nVersion bits proposal that I co-authored we solved that issue by
> comparing the timestamp against the median time, which is guaranteed by
> the protocol rules to monotonically advance.
>

That complicates the implementation quite a bit.

I mostly implemented a variant that replaced the MAX_BLOCK_SIZE constant
with a function that took both a timestamp and a block height, and there
are several places in the current reference implementation where digging
out the block height (or, worse, calculating the median timestamp for the
block) would involve changing quite a few functions in the call-chain or
acquiring the cs_main lock to consult the current best chain.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/1bd8ad59/attachment.html>

From jrn at jrn.me.uk  Mon Jun 22 21:32:15 2015
From: jrn at jrn.me.uk (Ross Nicoll)
Date: Mon, 22 Jun 2015 22:32:15 +0100
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABHVRKQoHERWSLwF-885jis9PqV07qYEJrScxwxfePwv0C9EoQ@mail.gmail.com>
References: <dd09d1e5-57fb-46ef-8bc0-0fdccf9e7abb@me.com>
	<20150622205420.GA8892@savin.petertodd.org>
	<CABHVRKQoHERWSLwF-885jis9PqV07qYEJrScxwxfePwv0C9EoQ@mail.gmail.com>
Message-ID: <55887EDF.3070505@jrn.me.uk>

Potentially daft question, why not use a minimum height? Yes, it's 
imprecise, but over an extended period of time they're good enough IMHO.

I'd have to do more careful calculations to confirm, but block 388,000 
should be about right as a minimum.

Ross

On 22/06/2015 22:04, Stephen Morse wrote:
>
>     In the nVersion bits proposal that I co-authored we solved that
>     issue by
>     comparing the timestamp against the median time, which is
>     guaranteed by
>     the protocol rules to monotonically advance.
>
>
> I'm also a fan of using the median time to ensure that there is a 
> clear point where the protocol change starts. Something like "blocks 
> only allow the larger block size if the associate pindex has 
> pindex->GetMedianTimePast() after midnight 11 Jan 2016 and where a 
> supermajority showing support for the fork has previously been reached".
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/b29ea6b5/attachment.html>

From patrick.strateman at gmail.com  Mon Jun 22 21:39:07 2015
From: patrick.strateman at gmail.com (Patrick Strateman)
Date: Mon, 22 Jun 2015 14:39:07 -0700
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T2FxNEEUx7_ZRf2NpQk1fdqMKtfzccX-duBjOn-ksS0cg@mail.gmail.com>
References: <dd09d1e5-57fb-46ef-8bc0-0fdccf9e7abb@me.com>	<20150622205420.GA8892@savin.petertodd.org>
	<CABsx9T2FxNEEUx7_ZRf2NpQk1fdqMKtfzccX-duBjOn-ksS0cg@mail.gmail.com>
Message-ID: <5588807B.7030400@gmail.com>

If you truly have a consensus then the rational behavior is to
permanently change the nodes behavior after the trigger.

On 06/22/2015 02:21 PM, Gavin Andresen wrote:
> On Mon, Jun 22, 2015 at 4:54 PM, Peter Todd <pete at petertodd.org
> <mailto:pete at petertodd.org>> wrote:
>
>     > Since it's possible that block timestamps aren't chronological
>     in order, what would happen if a block following a size increase
>     trigger is back in the past before the size increase? Would that
>     block have a lower size restriction again? Would using block
>     height not be a more stable number to work with?
>
>     In the nVersion bits proposal that I co-authored we solved that
>     issue by
>     comparing the timestamp against the median time, which is
>     guaranteed by
>     the protocol rules to monotonically advance.
>
>
> That complicates the implementation quite a bit.
>
> I mostly implemented a variant that replaced the MAX_BLOCK_SIZE
> constant with a function that took both a timestamp and a block
> height, and there are several places in the current reference
> implementation where digging out the block height (or, worse,
> calculating the median timestamp for the block) would involve changing
> quite a few functions in the call-chain or acquiring the cs_main lock
> to consult the current best chain.
>
> -- 
> --
> Gavin Andresen
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/7494ff4d/attachment-0001.html>

From tier.nolan at gmail.com  Mon Jun 22 21:48:01 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Mon, 22 Jun 2015 22:48:01 +0100
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T2FxNEEUx7_ZRf2NpQk1fdqMKtfzccX-duBjOn-ksS0cg@mail.gmail.com>
References: <dd09d1e5-57fb-46ef-8bc0-0fdccf9e7abb@me.com>
	<20150622205420.GA8892@savin.petertodd.org>
	<CABsx9T2FxNEEUx7_ZRf2NpQk1fdqMKtfzccX-duBjOn-ksS0cg@mail.gmail.com>
Message-ID: <CAE-z3OUvuZLvWUVRFLeMA4GXOxEjbwTHBTo903JFhgG_TO0ypQ@mail.gmail.com>

On Mon, Jun 22, 2015 at 10:21 PM, Gavin Andresen <gavinandresen at gmail.com>
wrote:

> That complicates the implementation quite a bit.
>

I think trying to keep the number of rules that require context to a
minimum is a good idea.  As pointed out in the BIP, using only the
timestamp of the block means that the block limit can be determined purely
from the block header.

I don't think there is much issue with having a 1MB block following an 8MB
block during the activation.

This is inherent in using the timestamps.  It occurs for every block that
has a timestamp lower than its parent, but to a lesser degree.

When fees are the main source of income, it does create a slight incentive
to use higher timestamps, but that is probably not massive, since it is 2
hours out of the 2 year doubling time.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/63c8f1df/attachment.html>

From mark at friedenbach.org  Mon Jun 22 21:52:32 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Mon, 22 Jun 2015 14:52:32 -0700
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
Message-ID: <CAOG=w-tYr1pAXUq-2Zf1gEgYS+UEvFOoyBvQUTMBoHuu30s0Pg@mail.gmail.com>

Can you please add a discussion of the tradeoffs of decentralization vs
block size?

On Mon, Jun 22, 2015 at 11:18 AM, Gavin Andresen <gavinandresen at gmail.com>
wrote:

> I promised to write a BIP after I'd implemented
> increase-the-maximum-block-size code, so here it is. It also lives at:
> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki
>
> I don't expect any proposal to please everybody; there are unavoidable
> tradeoffs to increasing the maximum block size. I prioritize implementation
> simplicity -- it is hard to write consensus-critical code, so simpler is
> better.
>
>
>
>
>   BIP: ??
>   Title: Increase Maximum Block Size
>   Author: Gavin Andresen <gavinandresen at gmail.com>
>   Status: Draft
>   Type: Standards Track
>   Created: 2015-06-22
>
> ==Abstract==
>
> This BIP proposes replacing the fixed one megabyte maximum block size with
> a maximum size that grows over time at a predictable rate.
>
> ==Motivation==
>
> Transaction volume on the Bitcoin network has been growing, and will soon
> reach the one-megabyte-every-ten-minutes limit imposed by the one megabyte
> maximum block size. Increasing the maximum size reduces the impact of that
> limit on Bitcoin adoption and growth.
>
> ==Specification==
>
> After deployment on the network (see the Deployment section for details),
> the maximum allowed size of a block on the main network shall be calculated
> based on the timestamp in the block header.
>
> The maximum size shall be 8,000,000 bytes at a timestamp of 2016-01-11
> 00:00:00 UTC (timestamp 1452470400), and shall double every 63,072,000
> seconds (two years, ignoring leap years), until 2036-01-06 00:00:00 UTC
> (timestamp 2083190400). The maximum size of blocks in between doublings
> will increase linearly based on the block's timestamp. The maximum size of
> blocks after 2036-01-06 00:00:00 UTC shall be 8,192,000,000 bytes.
>
> Expressed in pseudo-code, using integer math:
>
>     function max_block_size(block_timestamp):
>
>         time_start = 1452470400
>         time_double = 60*60*24*365*2
>         size_start = 8000000
>         if block_timestamp >= time_start+time_double*10
>             return size_start * 2^10
>
>         // Piecewise-linear-between-doublings growth:
>         time_delta = block_timestamp - t_start
>         doublings = time_delta / time_double
>         remainder = time_delta % time_double
>         interpolate = (size_start * 2^doublings * remainder) / time_double
>         max_size = size_start * 2^doublings + interpolate
>
>         return max_size
>
> ==Deployment==
>
> Deployment shall be controlled by hash-power supermajority vote (similar
> to the technique used in BIP34), but the earliest possible activation time
> is 2016-01-11 00:00:00 UTC.
>
> Activation is achieved when 750 of 1,000 consecutive blocks in the best
> chain have a version number with bits 3 and 14 set (0x20000004 in hex). The
> activation time will be the timestamp of the 750'th block plus a two week
> (1,209,600 second) grace period to give any remaining miners or services
> time to upgrade to support larger blocks. If a supermajority is achieved
> more than two weeks before 2016-01-11 00:00:00 UTC, the activation time
> will be 2016-01-11 00:00:00 UTC.
>
> Block version numbers are used only for activation; once activation is
> achieved, the maximum block size shall be as described in the specification
> section, regardless of the version number of the block.
>
>
> ==Rationale==
>
> The initial size of 8,000,000 bytes was chosen after testing the current
> reference implementation code with larger block sizes and receiving
> feedback from miners stuck behind bandwidth-constrained networks (in
> particular, Chinese miners behind the Great Firewall of China).
>
> The doubling interval was chosen based on long-term growth trends for CPU
> power, storage, and Internet bandwidth. The 20-year limit was chosen
> because exponential growth cannot continue forever.
>
> Calculations are based on timestamps and not blockchain height because a
> timestamp is part of every block's header. This allows implementations to
> know a block's maximum size after they have downloaded it's header, but
> before downloading any transactions.
>
> The deployment plan is taken from Jeff Garzik's proposed BIP100 block size
> increase, and is designed to give miners, merchants, and
> full-node-running-end-users sufficient time to upgrade to software that
> supports bigger blocks. A 75% supermajority was chosen so that one large
> mining pool does not have effective veto power over a blocksize increase.
> The version number scheme is designed to be compatible with Pieter's
> Wuille's proposed "Version bits" BIP.
>
> TODO: summarize objections/arguments from
> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.
>
> TODO: describe other proposals and their advantages/disadvantages over
> this proposal.
>
>
> ==Compatibility==
>
> This is a hard-forking change to the Bitcoin protocol; anybody running
> code that fully validates blocks must upgrade before the activation time or
> they will risk rejecting a chain containing larger-than-one-megabyte blocks.
>
> Simplified Payment Verification software is not affected, unless it makes
> assumptions about the maximum depth of a transaction's merkle branch based
> on the minimum size of a transaction and the maximum block size.
>
> ==Implementation==
>
> https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/fb29411c/attachment.html>

From wilczynski.dan.dw at gmail.com  Tue Jun 23 01:45:13 2015
From: wilczynski.dan.dw at gmail.com (Daniel Wilczynski)
Date: Tue, 23 Jun 2015 11:15:13 +0930
Subject: [bitcoin-dev] test post
Message-ID: <CAOC2iYWA5oc1bXWAZLzAs_4=665BR4NWn4J7XNn2vDLLC3qQfQ@mail.gmail.com>

Hallo.


Daniel W.

From rusty at rustcorp.com.au  Tue Jun 23 05:53:27 2015
From: rusty at rustcorp.com.au (Rusty Russell)
Date: Tue, 23 Jun 2015 15:23:27 +0930
Subject: [bitcoin-dev] [RFC] IBLT block testing implementation
Message-ID: <871th3t1go.fsf@rustcorp.com.au>

Hi all,

        I've come up with a model for using IBLT to communicate blocks
between peers.  The gory details can be found on github: it's a
standalone C++ app for testing not integrated with bitcoin.

        https://github.com/rustyrussell/bitcoin-iblt

Assumptions and details:

1. The base idea comes from Gavin's Block Propagation gist:
        https://gist.github.com/gavinandresen/e20c3b5a1d4b97f79ac2

2. It relies on similarity in mempools, with some selection hints.  This
   is designed to be as flexible as possible to make fewest assumptions
   on tx selection policy.

3. The selection hints are: minimum fee-per-byte (fixed point) and
   bitmaps of included-despite-that and rejected-despite-that.  The
   former covers things like child-pays-for-parent and the priority
   area.  The latter covers other cases like Eligius censoring "spam",
   bitcoin version differences, etc.

4. Cost to represent these exceptional added or excluded transactions is
   (on average) log2(transactions in mempool) bits.

5. At Peiter Wuille's suggestion, it is designed to be reencoded between
   nodes.  It seems fast enough for that, and neighboring nodes should
   have most similar mempools.

6. It performs reasonably well on my 100 block sample in bitcoin-corpus
   (chosen to include a mempool spike):

   Average block range (bytes):                         7988-999829
   Block size mean (bytes):                             401926

   Minimal decodable BLT size range (bytes):            314-386361
   Minimal decodable BLT size mean (bytes):             13265

7. Actual results will have to be worse than these minima, as peers will
   have to oversize the IBLT to have reasonable chance of success.

8. There is more work to do, and more investigation to be done, but I
   don't expect more than a 25% reduction in this "ideal minimum"
   result.

Special thanks to Kalle Rosenbaum for helping investigate IBLTs with me
last year.

Cheers,
Rusty.
PS. I work for Blockstream.  And I'm supposed to be working on
    Lightning, not this.

From jrn at jrn.me.uk  Tue Jun 23 07:35:40 2015
From: jrn at jrn.me.uk (Ross Nicoll)
Date: Tue, 23 Jun 2015 08:35:40 +0100
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <20150622192308.GA23545@savin.petertodd.org>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<20150622192308.GA23545@savin.petertodd.org>
Message-ID: <55890C4C.3070909@jrn.me.uk>

I don't think essentially replacing most of Testnet with a specialised 
test chain is a good idea, but this might be a good time to consider a 
4th test network with very large blocks from genesis onwards.

I do tend to think 2 years of 8mb blocks is excessive as a test, too, 
and while certainly large projects should have or can raise funds for 
test infrastructure, I would worry about the smaller stuff out there. Is 
there anything specific 2 years gives us over, say, 6 months?

Ross

On 22/06/2015 20:23, Peter Todd wrote:
> On Mon, Jun 22, 2015 at 02:18:19PM -0400, Gavin Andresen wrote:
>> I promised to write a BIP after I'd implemented
>> increase-the-maximum-block-size code, so here it is. It also lives at:
>> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki
> It's important that we see a wide range of realistic testing of what an
> 8MB limit could look in the near future. An important part of that
> testing is load testing.
>
> As of writing the BIP above has no mention of what switchover rules will
> be used for testnet; code floating around has August 1st 2015 as that
> date. I propose we use August 1st 2013.
>
> This switch over date should be set in the _past_ to allow for the
> creation (via reorg) of a realistic full-load blockchain on testnet to
> fully test the real-world behavior of the entire infrastructure
> ecosystem, including questions like the scalability of block explorers,
> SPV wallets, feasibility of initial syncronization, scalability of the
> UTXO set, etc. While this is of course inconvenient - 2 years of 8MB
> blocks is 840GB worth of data - the Bitcoin ecosystem can-not afford to
> make a change like this blindly.
>
> I'm sure with a $3.5 billion market cap at stake we can scrape together
> the resources to voluntarily run a few hundred full-load full-nodes for
> testing a change with the potential to destroy that market cap.
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/7a41e361/attachment.html>

From jrn at jrn.me.uk  Tue Jun 23 07:59:42 2015
From: jrn at jrn.me.uk (Ross Nicoll)
Date: Tue, 23 Jun 2015 08:59:42 +0100
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
Message-ID: <20150623081410.226EF59807D@homiemail-a6.g.dreamhost.com>

Also, before that's turned into "8MB blocks are infeasible", my presumption is that blocks are not expected to jump suddenly to 8MB, and that most will have time to ramp up storage and bandwidth.

The point about not outright replacing existing test data is the more critical one, anyway, although in retrospect we could simply add spam transactions on top of existing transactions.

Ross

On 23 Jun 2015 08:35, Ross Nicoll <jrn at jrn.me.uk> wrote:

From info at AndySchroder.com  Tue Jun 23 18:45:01 2015
From: info at AndySchroder.com (Andy Schroder)
Date: Tue, 23 Jun 2015 14:45:01 -0400
Subject: [bitcoin-dev] Welcome to the new Bitcoin Dev List
In-Reply-To: <CAEz79Po7irWrCEfgoRqsLxgwY+R1=cZae5z7NrHJfxM9iBro5g@mail.gmail.com>
References: <CAEz79Po7irWrCEfgoRqsLxgwY+R1=cZae5z7NrHJfxM9iBro5g@mail.gmail.com>
Message-ID: <5589A92D.5050902@AndySchroder.com>

Hello,

I'm not sure if anyone has submitted a request for gmane to monitor and 
archive this new list, but I did. Maybe it's not best for many people to 
re-request that? For those who aren't aware, gmane has a nice HTTP/HTML 
archive as well as a newsgroup proxy that is also very nice for reading 
the archive. They'll also subscribe the list to mail-archive.com for you.

I've also noticed that gmane 
(http://dir.gmane.org/gmane.comp.bitcoin.devel) does not have exactly 
the same archive for the old bitcoin-development list 
(http://sourceforge.net/p/bitcoin/mailman/bitcoin-development/). It's 
missing a few months at the beginning. The new list archive does contain 
the same thing as the old list 
(https://lists.linuxfoundation.org/pipermail/bitcoin-dev/).

gmane has an option to import old archives, so I'm seeing if they can do 
that with the https://lists.linuxfoundation.org/pipermail/bitcoin-dev/ 
list, since it is complete. In order to avoid confusion on what list is 
the most complete, if they can, I may request them delete or rename 
their old, incomplete archive at 
http://dir.gmane.org/gmane.comp.bitcoin.devel . It's possible they could 
even make this new list use that same name after deleting or renaming 
that old archive.


There is also bitcoin-list 
(http://sourceforge.net/p/bitcoin/mailman/bitcoin-list/). I think that 
one may be discontinued? That list appears to be older and contains some 
of Satoshi's original e-mails. On gmane though 
(http://dir.gmane.org/gmane.comp.bitcoin.user), it is missing the first 
few years of archives. Do we want to try and preserve this historical 
correspondence on any way before sourceforce disappears?




Regarding message footers and the subject prefix of [bitcoin-dev], it 
would be cool if mailman allowed people to change this on a per-user basis.

Andy Schroder

On 06/21/2015 05:29 PM, Warren Togami Jr. wrote:
> Hi folks,
>
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> The move is now complete.  The previous archive has been fully 
> imported and new posts here will now be saved.
>
> *Greylisting Notice*
> Your first post to this list may be delayed by 5+ minutes due to 
> Greylisting <https://en.wikipedia.org/wiki/Greylisting>. Subsequent 
> posts should go through without delay. Contact Freenode #bitcoin-dev 
> if you have any questions or concerns.
>
> *TODO*
>
>   * LF will be upgrading Mailman soon to better handle posts from DKIM
>     enforced domains.
>   * There will be a few more config tweaks like auto-rejecting
>     non-subscribed posts.  Nobody has time to moderate this list, and
>     mail silently disappearing into the moderation hold blackhole is
>     worse than an instant reject message telling people to subscribe.
>     Unfortunately, it is too dangerous to auto-reject spam ... those
>     messages need to go into a blackhole to prevent bounce abuse.
>
> Warren Togami
>
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/b38622a0/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/b38622a0/attachment.sig>

From pete at petertodd.org  Tue Jun 23 19:16:59 2015
From: pete at petertodd.org (Peter Todd)
Date: Tue, 23 Jun 2015 15:16:59 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <20150622192308.GA23545@savin.petertodd.org>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<20150622192308.GA23545@savin.petertodd.org>
Message-ID: <20150623191659.GF30235@muck>

On Mon, Jun 22, 2015 at 03:23:09PM -0400, Peter Todd wrote:
> On Mon, Jun 22, 2015 at 02:18:19PM -0400, Gavin Andresen wrote:
> > I promised to write a BIP after I'd implemented
> > increase-the-maximum-block-size code, so here it is. It also lives at:
> > https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki
> 
> It's important that we see a wide range of realistic testing of what an
> 8MB limit could look in the near future. An important part of that
> testing is load testing.
> 
> As of writing the BIP above has no mention of what switchover rules will
> be used for testnet; code floating around has August 1st 2015 as that
> date. I propose we use August 1st 2013.
> 
> This switch over date should be set in the _past_ to allow for the
> creation (via reorg) of a realistic full-load blockchain on testnet to
> fully test the real-world behavior of the entire infrastructure
> ecosystem, including questions like the scalability of block explorers,
> SPV wallets, feasibility of initial syncronization, scalability of the
> UTXO set, etc. While this is of course inconvenient - 2 years of 8MB
> blocks is 840GB worth of data - the Bitcoin ecosystem can-not afford to
> make a change like this blindly.
> 
> I'm sure with a $3.5 billion market cap at stake we can scrape together
> the resources to voluntarily run a few hundred full-load full-nodes for
> testing a change with the potential to destroy that market cap.

Also, as a few people have pointed out to me, the BIP proposal has no
information at all about testing, reproducable or not.

As much of the discussion about the acceptability of this BIP will be
heavily influenced by real world test results we should expect
sufficient information available to understand and reproduce those
tests; the Quality Assurance Test Plan done for BIP16 is a model worth
looking at:

https://github.com/bitcoin/bips/blob/master/bip-0016/qa.mediawiki

-- 
'peter'[:-1]@petertodd.org
000000000000000008c0be16e152f86ab3a271a13c3f41c56228d72990abf7bd
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/f093269b/attachment.sig>

From pete at petertodd.org  Tue Jun 23 19:28:38 2015
From: pete at petertodd.org (Peter Todd)
Date: Tue, 23 Jun 2015 15:28:38 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
Message-ID: <20150623192838.GG30235@muck>

On Mon, Jun 22, 2015 at 02:18:19PM -0400, Gavin Andresen wrote:
> ==Rationale==
> 
> The initial size of 8,000,000 bytes was chosen after testing the current
> reference implementation code with larger block sizes and receiving
> feedback from miners stuck behind bandwidth-constrained networks (in
> particular, Chinese miners behind the Great Firewall of China).
> 
> The doubling interval was chosen based on long-term growth trends for CPU
> power, storage, and Internet bandwidth. The 20-year limit was chosen
> because exponential growth cannot continue forever.

Wladimir noted that 'The original presented intention of block size
increase was a one-time "scaling" to grant time for more decentralizing
solutions to develop'

Comments?

In particular, if bandwidth scaling doesn't go according to your plan,
e.g. the exponential exponent is too large, perhaps due to technological
growth not keeping pace, or the political realities of actual bandwidth
deployment making theoretical technological growth irrelevant, what
mechanism will prevent centralization? (if any)

-- 
'peter'[:-1]@petertodd.org
000000000000000008c0be16e152f86ab3a271a13c3f41c56228d72990abf7bd
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/2c0ea51b/attachment.sig>

From adam at cypherspace.org  Tue Jun 23 19:42:37 2015
From: adam at cypherspace.org (Adam Back)
Date: Tue, 23 Jun 2015 21:42:37 +0200
Subject: [bitcoin-dev] game-theory,
	miner incentive alignment vs current proposals
Message-ID: <CALqxMTFu6DRVMSLsGDa6AgVX1Xamj_X4HhJaTKNTZCAgj6hXNg@mail.gmail.com>

We shouldnt lose track of the aspect that miner's interests are not
directly aligned with user interests.  Users want security,
decentralisation properties and reasonably cheap fees, miners profit
from fees.  Particular miners may profit from centralisation.  Miners
are in competition with each other in a complex game.

We could do with some analysis on Jeff's BIP and Greg Maxwell's
flexcap (or Meni Rosenfeld's somewhat similar pay for size variant) --
and Gavin's proposal of what miner game-theory is anticipated and how
the proposals hold up under those attacks.

In Gavin's proposal why would we assume that 8MB wont be used?  Or the
huge 8GB later. It is free even for a miner to create blocks of any
size up to the cap (zero fees or fees paid to himself).

The stale rate of propagation delay maybe hidden by the relay-network
or by collusion, or advantage of a miner already knowing its own
block.

Will a group of network topology close miners try to create big blocks
that disadvantage other miners?

Or will miners keep blocks small to extract switching-cost fees from
users.  (Regardless of cap).

Jeff's proposal has a cost free miner vote for cap increase with a
25%-ile and 90% threshold.  But in the second attack (keeping blocks
small) it alternatively becomes easy for an advantaged 10% to force
the block to stay small, in order to extract switching cost fees from
users.  Maybe users really love the decentralised features of bitcoin
and are willing to pay a lot!  Of course overlaid as Jeff observes by
meta-incentive that miners need to sell mined bitcoin to pay
electricity bills, and want Bitcoin to be in demand and therefore
indirectly to satisfy user demand.  But that may still result in a
fair bit of switching cost.  Switching cost economics is common in
many networks.

I submit that in terms of robustness of mechanism assuring security,
it be ordered something like:

1. consensus rule
2. aligned economic interest
3. attack requires miner collusion
4. meta-incentive

Then we could evaluate proposals for how robustly they can enforce
user interests vs miner game-theory attack or collusion scenarios.

Adam

On 23 June 2015 at 09:59, Ross Nicoll <jrn at jrn.me.uk> wrote:
> Also, before that's turned into "8MB blocks are infeasible", my presumption is that blocks are not expected to jump suddenly to 8MB, and that most will have time to ramp up storage and bandwidth.
>
> The point about not outright replacing existing test data is the more critical one, anyway, although in retrospect we could simply add spam transactions on top of existing transactions.

From gavinandresen at gmail.com  Tue Jun 23 20:12:17 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Tue, 23 Jun 2015 16:12:17 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <20150623192838.GG30235@muck>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<20150623192838.GG30235@muck>
Message-ID: <CABsx9T2wsc=+seaWs=v5d_kPpC4u-xTnsjuPMO7PYhQN+0-KAQ@mail.gmail.com>

On Tue, Jun 23, 2015 at 3:28 PM, Peter Todd <pete at petertodd.org> wrote:

> On Mon, Jun 22, 2015 at 02:18:19PM -0400, Gavin Andresen wrote:
> > ==Rationale==
> >
> > The initial size of 8,000,000 bytes was chosen after testing the current
> > reference implementation code with larger block sizes and receiving
> > feedback from miners stuck behind bandwidth-constrained networks (in
> > particular, Chinese miners behind the Great Firewall of China).
> >
> > The doubling interval was chosen based on long-term growth trends for CPU
> > power, storage, and Internet bandwidth. The 20-year limit was chosen
> > because exponential growth cannot continue forever.
>
> Wladimir noted that 'The original presented intention of block size
> increase was a one-time "scaling" to grant time for more decentralizing
> solutions to develop'
>
> Comments?
>

Consensus is that this process is too painful to go through once a year.  I
agree.

If you disagree and would like to see a Blocksize Council meet once a year
to issue a decree on what the maximum block size shall be for the next
year, then propose a process for who gets to sit on the Council and how
their decrees are enforced.....


>
> In particular, if bandwidth scaling doesn't go according to your plan,
> e.g. the exponential exponent is too large, perhaps due to technological
> growth not keeping pace, or the political realities of actual bandwidth
> deployment making theoretical technological growth irrelevant, what
> mechanism will prevent centralization? (if any)


Simulations show that:

Latency/bandwidth matter for miners.  Low latency, high bandwidth is
better. However, miners with bad connectivity can simply create smaller
blocks...

... until transaction fees become significant.  But by the time that
happens, protocol optimizations of block propagation will make the block
size an insignificant term in the "how profitable is it to mine in THIS
particular place on the Internet / part of the world" equation.

(Reference:
https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg08224.html
)

So: for the immediate future, there is no problem. And in the long term,
there is no problem.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/2e36743c/attachment.html>

From pieter.wuille at gmail.com  Tue Jun 23 20:26:38 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Tue, 23 Jun 2015 22:26:38 +0200
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T2wsc=+seaWs=v5d_kPpC4u-xTnsjuPMO7PYhQN+0-KAQ@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<20150623192838.GG30235@muck>
	<CABsx9T2wsc=+seaWs=v5d_kPpC4u-xTnsjuPMO7PYhQN+0-KAQ@mail.gmail.com>
Message-ID: <CAPg+sBj0Zk-k7fjams1YWFESDYHHp+r=NeFQAnVgghppNKDGxg@mail.gmail.com>

On Tue, Jun 23, 2015 at 10:12 PM, Gavin Andresen <gavinandresen at gmail.com>
wrote:

> On Tue, Jun 23, 2015 at 3:28 PM, Peter Todd <pete at petertodd.org> wrote:
>
>> Wladimir noted that 'The original presented intention of block size
>> increase was a one-time "scaling" to grant time for more decentralizing
>> solutions to develop'
>>
>> Comments?
>>
>
> Consensus is that this process is too painful to go through once a year.
> I agree.
>

If you believe we will need to go through this process once a year, we are
not talking about a one-time scaling to grant time for more decentralizing
solutions. It means you think we should keep scaling. I don't disagree
there - as long as we're talking about scaling as availability of
bandwidth, storage and processing power increase, there is no reason
Bitcoin's blockchain can't grow proportionally.

However, an initial bump 8 MB and the growth rate afterwards seem more like
a no-effectively-limit-ever to me.

I fear that the wish of not wanting to deal with - admittedly - a very hard
problem, resulted here in throwing away several protections we currently
have. And yes, I know you believe 8 MB won't be created immediately. I
truly, honestly, do not think so either. But I prefer a system where I
don't need to rely on anyone's guesses for the future.

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/a2560dc8/attachment.html>

From pete at petertodd.org  Tue Jun 23 20:46:47 2015
From: pete at petertodd.org (Peter Todd)
Date: Tue, 23 Jun 2015 16:46:47 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T2wsc=+seaWs=v5d_kPpC4u-xTnsjuPMO7PYhQN+0-KAQ@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<20150623192838.GG30235@muck>
	<CABsx9T2wsc=+seaWs=v5d_kPpC4u-xTnsjuPMO7PYhQN+0-KAQ@mail.gmail.com>
Message-ID: <20150623204646.GA18677@muck>

On Tue, Jun 23, 2015 at 04:12:17PM -0400, Gavin Andresen wrote:
> > In particular, if bandwidth scaling doesn't go according to your plan,
> > e.g. the exponential exponent is too large, perhaps due to technological
> > growth not keeping pace, or the political realities of actual bandwidth
> > deployment making theoretical technological growth irrelevant, what
> > mechanism will prevent centralization? (if any)
> 
> 
> Simulations show that:
> 
> Latency/bandwidth matter for miners.  Low latency, high bandwidth is
> better. However, miners with bad connectivity can simply create smaller
> blocks...

Pieter Wuille showed with simulations that miners with bad connectivity
are negatively affected by other miners creating larger blocks.
Similarly I showed that with equation-based analysis. I've seen no
response to either argument, and it's a centralization pressure.

Note how propagation times are important enough to miners that they
already mine on top of unverified headers from other miners to increase
profitability, a grave threat to the security of the Bitcoin network.

> ... until transaction fees become significant.  But by the time that
> happens, protocol optimizations of block propagation will make the block
> size an insignificant term in the "how profitable is it to mine in THIS
> particular place on the Internet / part of the world" equation.

These block propagation improvements are both already implemented (Matt
Corallo's relay network, p2pool) and require co-operation.

For instance, notice the recent full-RBF debate where Coinbase said
they'd consider getting contracts directly with miners to get
transactions they desired mined even when they otherwise would not be
due to double-spends. This is one of many scenarios where block
propagation improvements fail. Thus for a safety engineering
analysis we need to talk about worst-case scenarios.

Equally, I don't see any analysis from anyone of that % of non-optimized
transactions need to fail for what kind of centralizing pressure.


In any case, this ponts to the need for your proposal to explictly talk
about what kind of resources are needed by miners for what kind of
profitability, including the case where other miners are sabotaging
their profitability.

-- 
'peter'[:-1]@petertodd.org
000000000000000008c0be16e152f86ab3a271a13c3f41c56228d72990abf7bd
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/97ccb0af/attachment.sig>

From pete at petertodd.org  Tue Jun 23 20:50:43 2015
From: pete at petertodd.org (Peter Todd)
Date: Tue, 23 Jun 2015 16:50:43 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CAPg+sBj0Zk-k7fjams1YWFESDYHHp+r=NeFQAnVgghppNKDGxg@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<20150623192838.GG30235@muck>
	<CABsx9T2wsc=+seaWs=v5d_kPpC4u-xTnsjuPMO7PYhQN+0-KAQ@mail.gmail.com>
	<CAPg+sBj0Zk-k7fjams1YWFESDYHHp+r=NeFQAnVgghppNKDGxg@mail.gmail.com>
Message-ID: <20150623205042.GB18677@muck>

On Tue, Jun 23, 2015 at 10:26:38PM +0200, Pieter Wuille wrote:
> On Tue, Jun 23, 2015 at 10:12 PM, Gavin Andresen <gavinandresen at gmail.com>
> wrote:
> 
> > On Tue, Jun 23, 2015 at 3:28 PM, Peter Todd <pete at petertodd.org> wrote:
> >
> >> Wladimir noted that 'The original presented intention of block size
> >> increase was a one-time "scaling" to grant time for more decentralizing
> >> solutions to develop'
> >>
> >> Comments?
> >>
> >
> > Consensus is that this process is too painful to go through once a year.
> > I agree.
> >
> 
> If you believe we will need to go through this process once a year, we are
> not talking about a one-time scaling to grant time for more decentralizing
> solutions. It means you think we should keep scaling. I don't disagree
> there - as long as we're talking about scaling as availability of
> bandwidth, storage and processing power increase, there is no reason
> Bitcoin's blockchain can't grow proportionally.
> 
> However, an initial bump 8 MB and the growth rate afterwards seem more like
> a no-effectively-limit-ever to me.

In particular, note how this bump is being proposed at a time when
blockchain space demand is so low that transactions usually cost well
under a penny each, a insignificant amount of money for almost all
use-cases.

> I fear that the wish of not wanting to deal with - admittedly - a very hard
> problem, resulted here in throwing away several protections we currently
> have. And yes, I know you believe 8 MB won't be created immediately. I
> truly, honestly, do not think so either. But I prefer a system where I
> don't need to rely on anyone's guesses for the future.

In that regard Jeff Garzik's proposal of a blocksize increase with a
miner vote feedback mechanism is a huge improvement over Gavin's
proposal.

-- 
'peter'[:-1]@petertodd.org
000000000000000008c0be16e152f86ab3a271a13c3f41c56228d72990abf7bd
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/804e5dbb/attachment.sig>

From roy at gnomon.org.uk  Tue Jun 23 20:55:40 2015
From: roy at gnomon.org.uk (Roy Badami)
Date: Tue, 23 Jun 2015 21:55:40 +0100
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T2wsc=+seaWs=v5d_kPpC4u-xTnsjuPMO7PYhQN+0-KAQ@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<20150623192838.GG30235@muck>
	<CABsx9T2wsc=+seaWs=v5d_kPpC4u-xTnsjuPMO7PYhQN+0-KAQ@mail.gmail.com>
Message-ID: <20150623205539.GB3192@giles.gnomon.org.uk>

> Consensus is that this process is too painful to go through once a year.  I
> agree.
> 
> If you disagree and would like to see a Blocksize Council meet once a year
> to issue a decree on what the maximum block size shall be for the next
> year, then propose a process for who gets to sit on the Council and how
> their decrees are enforced.....

We could just as well say that the increases continue for 20 years, or
until there is concensus to schedule a soft-fork to prevent further
increase - whichever comes first.  That is the case already, of
course, since there is no way to prevent a modest supermajority of
miners from pushing through a soft-fork.  But explicitly accepting the
possibility that the community might choose to cut the process short
might make the BIP more palatable to some.

It is also the reality: halting the blocksize increase before it hits
the final 8GB limit is relatively easy, compared to the task of
setting it in motion, so it does no real harm to set the "20 years"
figure at the upper range of what we think is reasonable - even though
under other circumstances one would probably say that extrapolating
exponentials that far out would be foolhardy...

roy

From gavinandresen at gmail.com  Tue Jun 23 21:24:23 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Tue, 23 Jun 2015 17:24:23 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <20150623204646.GA18677@muck>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<20150623192838.GG30235@muck>
	<CABsx9T2wsc=+seaWs=v5d_kPpC4u-xTnsjuPMO7PYhQN+0-KAQ@mail.gmail.com>
	<20150623204646.GA18677@muck>
Message-ID: <CABsx9T3-CbB0k2aKMqRYseUQ2dfW9ANAuYb2MPAw1S+_bF7_=w@mail.gmail.com>

On Tue, Jun 23, 2015 at 4:46 PM, Peter Todd <pete at petertodd.org> wrote:

> Pieter Wuille showed with simulations that miners with bad connectivity
> are negatively affected by other miners creating larger blocks.
>

... but the effect is only significant if they have an absurdly
low-bandwidth connection and do NOTHING to work around it (like rent a
server on the other side of the bandwidth bottleneck and write some code to
make sure you're creating blocks that will propagate quickly on both sides
of the bottleneck).


Why do you think connectivity is a centralizing effect? It is just one
factor in the profitability-of-mining equation. A location with bad
connectivity (the US, maybe) but 10% cheaper electricity might be just as
good as one with great connectivity but more expensive electricity.

Having lots of variables in the profitability equation is a decentralizing
force, it means there is very likely to be several different places in the
world / on the net where mining is equally profitable.


> ... until transaction fees become significant.  But by the time that
> > happens, protocol optimizations of block propagation will make the block
> > size an insignificant term in the "how profitable is it to mine in THIS
> > particular place on the Internet / part of the world" equation.
>
> These block propagation improvements are both already implemented (Matt
> Corallo's relay network, p2pool) and require co-operation.
>

Long term the p2p protocol will evolve to incorporate those optimizations,
so will require no co-operation.



> For instance, notice the recent full-RBF debate where Coinbase said
> they'd consider getting contracts directly with miners to get
> transactions they desired mined even when they otherwise would not be
> due to double-spends. This is one of many scenarios where block
> propagation improvements fail. Thus for a safety engineering
> analysis we need to talk about worst-case scenarioss



> Equally, I don't see any analysis from anyone of that % of non-optimized
> transactions need to fail for what kind of centralizing pressure.
>
> In any case, this ponts to the need for your proposal to explictly talk
> about what kind of resources are needed by miners for what kind of
> profitability, including the case where other miners are sabotaging
> their profitability.
>

Are you familiar with the terms "Gish Gallop" and "Moving the Goalposts" ?

I have written quite a lot about the kind of resources needed to run a full
node, and have asked you, specifically, several times "how much do you
think is too much" and received no answer.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/a0f02566/attachment.html>

From odinn.cyberguerrilla at riseup.net  Wed Jun 24 01:26:23 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Tue, 23 Jun 2015 18:26:23 -0700
Subject: [bitcoin-dev] test post
In-Reply-To: <CAFdHNGius6pXxnw_x7G-tWD9-XvBUYhsJYoPE953P3CQYf8_-Q@mail.gmail.com>
References: <CAFdHNGius6pXxnw_x7G-tWD9-XvBUYhsJYoPE953P3CQYf8_-Q@mail.gmail.com>
Message-ID: <558A073F.7070705@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

ohai

On 06/22/2015 09:23 AM, Nathan Wilcox wrote:
> hello world.
> 
> -- Nathan Wilcox Least Authoritarian
> 
> email: nathan at leastauthority.com
> <mailto:nathan at leastauthority.com> twitter: @least_nathan PGP:
> 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993
> 
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVigc+AAoJEGxwq/inSG8CJ80H/RCWzbiS1OBi1pPhC/0uRHFS
RAfXqmyvnjHomI4vfEKq0bocEEGW5BPDjD+bVuPlTbi3sBheaHkMJyjSBPcXBoH1
3V8sGVEl5lxt9/pbNMXEAyuCpXllI/EQmwXLkbDXwGclLWe+VUawLXLMj6p3r0w1
Z0JC1oidTZR2khnrLKsnTtymMznr5dOj1WDa7ej5m/xikhcADwJk22R9XmY1mf4L
LqYLnVtrXIhw7A0Xuc/E6v0BjBvlxGhHhkbxRC3DRj6U2eBeOpE610vuX86JGp6D
v6dfNyWnuQ3MPy0A5i7ZpGUIwPHEtV+w4+SHwN2QMrsHtQZnfqJirrhCKPOX3HY=
=zDQL
-----END PGP SIGNATURE-----

From odinn.cyberguerrilla at riseup.net  Wed Jun 24 01:43:38 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Tue, 23 Jun 2015 18:43:38 -0700
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
Message-ID: <558A0B4A.7090205@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

1) Hard fork not (necessarily) needed
2) See Garzik's BIP 100, better (this is not meant to say "superior to
your stuff," but rather simply to say, "Better you should work with
Garzik to implement BIP-100, that would be good")
3) See points 1 and 2 above
4) If still reading... changes should be (as you seem to have been
trying to lean towards)... lean towards gradual change; hence, changes
that would flow from this BIP would be better off oriented in a
process that dies not require the "way you have done it."

You did address that, to be fair - in your TODO, this link:
http://gavinandresen.ninja/time-to-roll-out-bigger-blocks

contained the following link:

http://gavinandresen.ninja/bigger-blocks-another-way

However, in reading that, I didn't see any meaningful statements that
would refute the approach in Garzik's BIP-100.

Maybe a better way to say this is,

Work with Jeff Garzik (which I am sure you are already having such
discussions in private) as well as the list discussions,
Move forward on BIP-100 with Garzik and other developers (not such a
bad plan really) and don't get caught up in XT.  (If you feel you can
develop XT further, that is your thing but it would perhaps make you
lose focus, work together with other developers.)

Relax into the process.  Things will be ok.

Respectfully,

- -O

On 06/22/2015 11:18 AM, Gavin Andresen wrote:
> I promised to write a BIP after I'd implemented 
> increase-the-maximum-block-size code, so here it is. It also lives
> at: 
> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki
>
>  I don't expect any proposal to please everybody; there are
> unavoidable tradeoffs to increasing the maximum block size. I
> prioritize implementation simplicity -- it is hard to write
> consensus-critical code, so simpler is better.
> 
> 
> 
> 
> BIP: ?? Title: Increase Maximum Block Size Author: Gavin Andresen
> <gavinandresen at gmail.com <mailto:gavinandresen at gmail.com>> Status:
> Draft Type: Standards Track Created: 2015-06-22
> 
> ==Abstract==
> 
> This BIP proposes replacing the fixed one megabyte maximum block
> size with a maximum size that grows over time at a predictable
> rate.
> 
> ==Motivation==
> 
> Transaction volume on the Bitcoin network has been growing, and
> will soon reach the one-megabyte-every-ten-minutes limit imposed by
> the one megabyte maximum block size. Increasing the maximum size
> reduces the impact of that limit on Bitcoin adoption and growth.
> 
> ==Specification==
> 
> After deployment on the network (see the Deployment section for 
> details), the maximum allowed size of a block on the main network
> shall be calculated based on the timestamp in the block header.
> 
> The maximum size shall be 8,000,000 bytes at a timestamp of
> 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double
> every 63,072,000 seconds (two years, ignoring leap years), until
> 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of
> blocks in between doublings will increase linearly based on the
> block's timestamp. The maximum size of blocks after 2036-01-06
> 00:00:00 UTC shall be 8,192,000,000 bytes.
> 
> Expressed in pseudo-code, using integer math:
> 
> function max_block_size(block_timestamp):
> 
> time_start = 1452470400 time_double = 60*60*24*365*2 size_start =
> 8000000 if block_timestamp >= time_start+time_double*10 return
> size_start * 2^10
> 
> // Piecewise-linear-between-doublings growth: time_delta =
> block_timestamp - t_start doublings = time_delta / time_double 
> remainder = time_delta % time_double interpolate = (size_start *
> 2^doublings * remainder) / time_double max_size = size_start *
> 2^doublings + interpolate
> 
> return max_size
> 
> ==Deployment==
> 
> Deployment shall be controlled by hash-power supermajority vote
> (similar to the technique used in BIP34), but the earliest possible
> activation time is 2016-01-11 00:00:00 UTC.
> 
> Activation is achieved when 750 of 1,000 consecutive blocks in the
> best chain have a version number with bits 3 and 14 set (0x20000004
> in hex). The activation time will be the timestamp of the 750'th
> block plus a two week (1,209,600 second) grace period to give any
> remaining miners or services time to upgrade to support larger
> blocks. If a supermajority is achieved more than two weeks before
> 2016-01-11 00:00:00 UTC, the activation time will be 2016-01-11
> 00:00:00 UTC.
> 
> Block version numbers are used only for activation; once activation
> is achieved, the maximum block size shall be as described in the 
> specification section, regardless of the version number of the
> block.
> 
> 
> ==Rationale==
> 
> The initial size of 8,000,000 bytes was chosen after testing the
> current reference implementation code with larger block sizes and
> receiving feedback from miners stuck behind bandwidth-constrained
> networks (in particular, Chinese miners behind the Great Firewall
> of China).
> 
> The doubling interval was chosen based on long-term growth trends
> for CPU power, storage, and Internet bandwidth. The 20-year limit
> was chosen because exponential growth cannot continue forever.
> 
> Calculations are based on timestamps and not blockchain height
> because a timestamp is part of every block's header. This allows
> implementations to know a block's maximum size after they have
> downloaded it's header, but before downloading any transactions.
> 
> The deployment plan is taken from Jeff Garzik's proposed BIP100
> block size increase, and is designed to give miners, merchants,
> and full-node-running-end-users sufficient time to upgrade to
> software that supports bigger blocks. A 75% supermajority was
> chosen so that one large mining pool does not have effective veto
> power over a blocksize increase. The version number scheme is
> designed to be compatible with Pieter's Wuille's proposed "Version
> bits" BIP.
> 
> TODO: summarize objections/arguments from 
> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.
> 
> TODO: describe other proposals and their advantages/disadvantages
> over this proposal.
> 
> 
> ==Compatibility==
> 
> This is a hard-forking change to the Bitcoin protocol; anybody
> running code that fully validates blocks must upgrade before the
> activation time or they will risk rejecting a chain containing
> larger-than-one-megabyte blocks.
> 
> Simplified Payment Verification software is not affected, unless
> it makes assumptions about the maximum depth of a transaction's
> merkle branch based on the minimum size of a transaction and the
> maximum block size.
> 
> ==Implementation==
> 
> https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork
> 
> 
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVigtJAAoJEGxwq/inSG8CqZwIAIG3ZQzekfccPxBOMqtim175
Crov6hrO9FaIzbLljECpUi60RKuDM/fs09ZJsKKIaJPkB5dlJjs4huc206veAIO+
K2h3DmAcA6W/Thk0C2cV3ewv+OiELDOhpeoddBBLPadAfaBGr4l9ltqWLdBtMCmw
OtmiWstEuXTao9ApgoFOmybdmCjbfrfhejOOHs/pMiSn5xVE60RK4x2HFTFsHfAN
fZAeLCuwuN2qWMrVrr+cbpCXjEuE1xZG3WEj7ppYoGR+AgF/Y5/U1j7S4PVpk85s
CgMkpcWvLnBMmSCrllnRZy1Gfrwk36Pg0rXD/l/NNd0/KTpmPSvkX/bCyzFwbzo=
=ft62
-----END PGP SIGNATURE-----

From filipe at ktorn.com  Wed Jun 24 02:02:51 2015
From: filipe at ktorn.com (Filipe Farinha)
Date: Wed, 24 Jun 2015 10:02:51 +0800
Subject: [bitcoin-dev] Mempool size consensus + dynamic block size
	re-targetting
Message-ID: <558A0FCB.2040908@ktorn.com>

To my knowledge so far the main proposals regarding block size changes 
are either based on predictions, which traditionally we're not very good 
at, or a voting mechanism by a limited set of stakeholders (miners) 
whose interests may not be aligned with the rest of the community.

Neither strategy takes into account the most important factor: real-time 
changes to the mempool. This is for a valid reason, there is currently 
no consensus on the size of the mempool.

So my question is: has anyone considered the pros and cons of creating 
consensus around the current (approximate) mempool size?

I propose that, at the expense of some transaction overhead (3 or 4 
extra bytes?), each full-node that broadcasts a new transaction can add 
a mempool_size field that represents their current view of the mempool. 
As blocks are mined with this new data (which may or not be aggregated 
in the block header), all nodes can quickly reach consensus on the 
current average/median/etc mempool size, and agree on a suitable 
periodic blocksize "re-targetting" (similarly to mining difficulty).

Since all full-nodes (not just miners) get to vote with their 
transactions the consensus is truly global, and we don't have to change 
blocksize blindly in anticipation of an unpredictable future.

Would this not work, and if not, why?

Filipe Farinha

From mark at friedenbach.org  Wed Jun 24 02:15:55 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Tue, 23 Jun 2015 19:15:55 -0700
Subject: [bitcoin-dev] Mempool size consensus + dynamic block size
	re-targetting
In-Reply-To: <558A0FCB.2040908@ktorn.com>
References: <558A0FCB.2040908@ktorn.com>
Message-ID: <CAOG=w-vj8LQjun0u03nWRz1RV7NMw=ALdQkbiQcrOb=cpfWZZg@mail.gmail.com>

Anyone could lie.
On Jun 23, 2015 7:12 PM, "Filipe Farinha" <filipe at ktorn.com> wrote:

> To my knowledge so far the main proposals regarding block size changes are
> either based on predictions, which traditionally we're not very good at, or
> a voting mechanism by a limited set of stakeholders (miners) whose
> interests may not be aligned with the rest of the community.
>
> Neither strategy takes into account the most important factor: real-time
> changes to the mempool. This is for a valid reason, there is currently no
> consensus on the size of the mempool.
>
> So my question is: has anyone considered the pros and cons of creating
> consensus around the current (approximate) mempool size?
>
> I propose that, at the expense of some transaction overhead (3 or 4 extra
> bytes?), each full-node that broadcasts a new transaction can add a
> mempool_size field that represents their current view of the mempool. As
> blocks are mined with this new data (which may or not be aggregated in the
> block header), all nodes can quickly reach consensus on the current
> average/median/etc mempool size, and agree on a suitable periodic blocksize
> "re-targetting" (similarly to mining difficulty).
>
> Since all full-nodes (not just miners) get to vote with their transactions
> the consensus is truly global, and we don't have to change blocksize
> blindly in anticipation of an unpredictable future.
>
> Would this not work, and if not, why?
>
> Filipe Farinha
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/819e7bde/attachment-0001.html>

From filipe at ktorn.com  Wed Jun 24 02:24:03 2015
From: filipe at ktorn.com (Filipe Farinha)
Date: Wed, 24 Jun 2015 10:24:03 +0800
Subject: [bitcoin-dev] Mempool size consensus + dynamic block size
	re-targetting
In-Reply-To: <CAOG=w-vj8LQjun0u03nWRz1RV7NMw=ALdQkbiQcrOb=cpfWZZg@mail.gmail.com>
References: <558A0FCB.2040908@ktorn.com>
	<CAOG=w-vj8LQjun0u03nWRz1RV7NMw=ALdQkbiQcrOb=cpfWZZg@mail.gmail.com>
Message-ID: <558A14C3.2040908@ktorn.com>

On 24/06/2015 10:15, Mark Friedenbach wrote:
>
> Anyone could lie.
>
True.
What would be the incentive for the majority of transaction broadcasting 
full-nodes to lie about the mempool size?

From pete at petertodd.org  Wed Jun 24 02:43:44 2015
From: pete at petertodd.org (Peter Todd)
Date: Tue, 23 Jun 2015 22:43:44 -0400
Subject: [bitcoin-dev] Mempool size consensus + dynamic block size
 re-targetting
In-Reply-To: <558A14C3.2040908@ktorn.com>
References: <558A0FCB.2040908@ktorn.com>
	<CAOG=w-vj8LQjun0u03nWRz1RV7NMw=ALdQkbiQcrOb=cpfWZZg@mail.gmail.com>
	<558A14C3.2040908@ktorn.com>
Message-ID: <20150624024344.GA3647@savin.petertodd.org>

On Wed, Jun 24, 2015 at 10:24:03AM +0800, Filipe Farinha wrote:
> On 24/06/2015 10:15, Mark Friedenbach wrote:
> >
> >Anyone could lie.
> >
> True.
> What would be the incentive for the majority of transaction
> broadcasting full-nodes to lie about the mempool size?

It might help you to answer the following: If your mempool consensus
idea worked, could you use it to replace proof-of-work? Why? Why not?

-- 
'peter'[:-1]@petertodd.org
00000000000000001256cc4d7dc7b68be627cbbf65f2b7827fb3e2cc41cf2517
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/19817249/attachment.sig>

From filipe at ktorn.com  Wed Jun 24 03:02:37 2015
From: filipe at ktorn.com (Filipe Farinha)
Date: Wed, 24 Jun 2015 11:02:37 +0800
Subject: [bitcoin-dev] Mempool size consensus + dynamic block size
	re-targetting
In-Reply-To: <20150624024344.GA3647@savin.petertodd.org>
References: <558A0FCB.2040908@ktorn.com>
	<CAOG=w-vj8LQjun0u03nWRz1RV7NMw=ALdQkbiQcrOb=cpfWZZg@mail.gmail.com>
	<558A14C3.2040908@ktorn.com>
	<20150624024344.GA3647@savin.petertodd.org>
Message-ID: <558A1DCD.8030702@ktorn.com>

On 24/06/2015 10:43, Peter Todd wrote:
> It might help you to answer the following: If your mempool consensus 
> idea worked, could you use it to replace proof-of-work? Why? Why not? 
I shouldn't have to answer that, but the answer is clearly no.

Please consider this argument when evaluating the pros and cons of BIP 100.

Filipe Farinha

From will.madden at novauri.com  Wed Jun 24 03:05:50 2015
From: will.madden at novauri.com (William Madden)
Date: Tue, 23 Jun 2015 23:05:50 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <558A0B4A.7090205@riseup.net>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<558A0B4A.7090205@riseup.net>
Message-ID: <558A1E8E.30306@novauri.com>

Here are refutations of the approach in BIP-100 here:
http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf

To recap BIP-100:

1) Hard form to remove static 1MB block size limit
2) Add new floating block size limit set to 1MB
3) Historical 32MB message limit remains
4) Hard form on testnet 9/1/2015
5) Hard form on main 1/11/2016
6) 1MB limit changed via one-way lock in upgrade with a 12,000 block
threshold by 90% of blocks
7) Limit increase or decrease may not exceed 2x in any one step
8) Miners vote by encoding 'BV'+BlockSizeRequestValue into coinbase
scriptSig, e.g. "/BV8000000/" to vote for 8M.
9) Votes are evaluated by dropping bottom 20% and top 20%, and then the
most common floor (minimum) is chosen.

8MB limits doubling just under every 2 years makes a static value grow
in a predictable manner.

BIP-100 makes a static value grow (or more importantly potentially
shrink) in an unpredictable manner based on voting mechanics that are
untested in this capacity in the bitcoin network.  Introducing a highly
variable and untested dynamic into an already complex system is
unnecessarily risky.

For example, the largely arbitrary voting rules listed in 9 above can be
gamed.  If I control pools or have affiliates involved in pools that
mine slightly more than 20% of blocks, I could wait until block sizes
are 10MB, and then suddenly vote "/BV5000000/" for 20% of blocks and
"/BV5000001/" for the remaining 10%.  If others don't consistently vote
for the same "/BV#/" value, vote too consistently and have their value
thrown out as the top 20%, I could win the resize to half capacity
"/BV5000001/" because it was the lowest repeated value not in the bottom
20%.

I could use this to force an exodus to my sidechain/alt coin, or to
choke out the bitcoin network.  A first improvement would be to only let
BIP-100 raise the cap and not lower it, but if I can think of a
vulnerability off the top of my head, there will be others on the other
side of the equation that have not been thought of.  Why bother
introducing a rube goldberg machine like voting when a simple 8mb cap
with predictable growth gets the job done, potentially permanently?


On 6/23/2015 9:43 PM, odinn wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> 1) Hard fork not (necessarily) needed
> 2) See Garzik's BIP 100, better (this is not meant to say "superior to
> your stuff," but rather simply to say, "Better you should work with
> Garzik to implement BIP-100, that would be good")
> 3) See points 1 and 2 above
> 4) If still reading... changes should be (as you seem to have been
> trying to lean towards)... lean towards gradual change; hence, changes
> that would flow from this BIP would be better off oriented in a
> process that dies not require the "way you have done it."
> 
> You did address that, to be fair - in your TODO, this link:
> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks
> 
> contained the following link:
> 
> http://gavinandresen.ninja/bigger-blocks-another-way
> 
> However, in reading that, I didn't see any meaningful statements that
> would refute the approach in Garzik's BIP-100.
> 
> Maybe a better way to say this is,
> 
> Work with Jeff Garzik (which I am sure you are already having such
> discussions in private) as well as the list discussions,
> Move forward on BIP-100 with Garzik and other developers (not such a
> bad plan really) and don't get caught up in XT.  (If you feel you can
> develop XT further, that is your thing but it would perhaps make you
> lose focus, work together with other developers.)
> 
> Relax into the process.  Things will be ok.
> 
> Respectfully,
> 
> - -O
> 
> On 06/22/2015 11:18 AM, Gavin Andresen wrote:
>> I promised to write a BIP after I'd implemented 
>> increase-the-maximum-block-size code, so here it is. It also lives
>> at: 
>> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki
>>
>>  I don't expect any proposal to please everybody; there are
>> unavoidable tradeoffs to increasing the maximum block size. I
>> prioritize implementation simplicity -- it is hard to write
>> consensus-critical code, so simpler is better.
>>
>>
>>
>>
>> BIP: ?? Title: Increase Maximum Block Size Author: Gavin Andresen
>> <gavinandresen at gmail.com <mailto:gavinandresen at gmail.com>> Status:
>> Draft Type: Standards Track Created: 2015-06-22
>>
>> ==Abstract==
>>
>> This BIP proposes replacing the fixed one megabyte maximum block
>> size with a maximum size that grows over time at a predictable
>> rate.
>>
>> ==Motivation==
>>
>> Transaction volume on the Bitcoin network has been growing, and
>> will soon reach the one-megabyte-every-ten-minutes limit imposed by
>> the one megabyte maximum block size. Increasing the maximum size
>> reduces the impact of that limit on Bitcoin adoption and growth.
>>
>> ==Specification==
>>
>> After deployment on the network (see the Deployment section for 
>> details), the maximum allowed size of a block on the main network
>> shall be calculated based on the timestamp in the block header.
>>
>> The maximum size shall be 8,000,000 bytes at a timestamp of
>> 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double
>> every 63,072,000 seconds (two years, ignoring leap years), until
>> 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of
>> blocks in between doublings will increase linearly based on the
>> block's timestamp. The maximum size of blocks after 2036-01-06
>> 00:00:00 UTC shall be 8,192,000,000 bytes.
>>
>> Expressed in pseudo-code, using integer math:
>>
>> function max_block_size(block_timestamp):
>>
>> time_start = 1452470400 time_double = 60*60*24*365*2 size_start =
>> 8000000 if block_timestamp >= time_start+time_double*10 return
>> size_start * 2^10
>>
>> // Piecewise-linear-between-doublings growth: time_delta =
>> block_timestamp - t_start doublings = time_delta / time_double 
>> remainder = time_delta % time_double interpolate = (size_start *
>> 2^doublings * remainder) / time_double max_size = size_start *
>> 2^doublings + interpolate
>>
>> return max_size
>>
>> ==Deployment==
>>
>> Deployment shall be controlled by hash-power supermajority vote
>> (similar to the technique used in BIP34), but the earliest possible
>> activation time is 2016-01-11 00:00:00 UTC.
>>
>> Activation is achieved when 750 of 1,000 consecutive blocks in the
>> best chain have a version number with bits 3 and 14 set (0x20000004
>> in hex). The activation time will be the timestamp of the 750'th
>> block plus a two week (1,209,600 second) grace period to give any
>> remaining miners or services time to upgrade to support larger
>> blocks. If a supermajority is achieved more than two weeks before
>> 2016-01-11 00:00:00 UTC, the activation time will be 2016-01-11
>> 00:00:00 UTC.
>>
>> Block version numbers are used only for activation; once activation
>> is achieved, the maximum block size shall be as described in the 
>> specification section, regardless of the version number of the
>> block.
>>
>>
>> ==Rationale==
>>
>> The initial size of 8,000,000 bytes was chosen after testing the
>> current reference implementation code with larger block sizes and
>> receiving feedback from miners stuck behind bandwidth-constrained
>> networks (in particular, Chinese miners behind the Great Firewall
>> of China).
>>
>> The doubling interval was chosen based on long-term growth trends
>> for CPU power, storage, and Internet bandwidth. The 20-year limit
>> was chosen because exponential growth cannot continue forever.
>>
>> Calculations are based on timestamps and not blockchain height
>> because a timestamp is part of every block's header. This allows
>> implementations to know a block's maximum size after they have
>> downloaded it's header, but before downloading any transactions.
>>
>> The deployment plan is taken from Jeff Garzik's proposed BIP100
>> block size increase, and is designed to give miners, merchants,
>> and full-node-running-end-users sufficient time to upgrade to
>> software that supports bigger blocks. A 75% supermajority was
>> chosen so that one large mining pool does not have effective veto
>> power over a blocksize increase. The version number scheme is
>> designed to be compatible with Pieter's Wuille's proposed "Version
>> bits" BIP.
>>
>> TODO: summarize objections/arguments from 
>> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.
>>
>> TODO: describe other proposals and their advantages/disadvantages
>> over this proposal.
>>
>>
>> ==Compatibility==
>>
>> This is a hard-forking change to the Bitcoin protocol; anybody
>> running code that fully validates blocks must upgrade before the
>> activation time or they will risk rejecting a chain containing
>> larger-than-one-megabyte blocks.
>>
>> Simplified Payment Verification software is not affected, unless
>> it makes assumptions about the maximum depth of a transaction's
>> merkle branch based on the minimum size of a transaction and the
>> maximum block size.
>>
>> ==Implementation==
>>
>> https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork
>>
>>
>>
>> _______________________________________________ bitcoin-dev mailing
>> list bitcoin-dev at lists.linuxfoundation.org 
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
> 
> - -- 
> http://abis.io ~
> "a protocol concept to enable decentralization
> and expansion of a giving economy, and a new social good"
> https://keybase.io/odinn
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1
> 
> iQEcBAEBAgAGBQJVigtJAAoJEGxwq/inSG8CqZwIAIG3ZQzekfccPxBOMqtim175
> Crov6hrO9FaIzbLljECpUi60RKuDM/fs09ZJsKKIaJPkB5dlJjs4huc206veAIO+
> K2h3DmAcA6W/Thk0C2cV3ewv+OiELDOhpeoddBBLPadAfaBGr4l9ltqWLdBtMCmw
> OtmiWstEuXTao9ApgoFOmybdmCjbfrfhejOOHs/pMiSn5xVE60RK4x2HFTFsHfAN
> fZAeLCuwuN2qWMrVrr+cbpCXjEuE1xZG3WEj7ppYoGR+AgF/Y5/U1j7S4PVpk85s
> CgMkpcWvLnBMmSCrllnRZy1Gfrwk36Pg0rXD/l/NNd0/KTpmPSvkX/bCyzFwbzo=
> =ft62
> -----END PGP SIGNATURE-----
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

From jgarzik at gmail.com  Wed Jun 24 03:49:51 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Tue, 23 Jun 2015 20:49:51 -0700
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <558A1E8E.30306@novauri.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<558A0B4A.7090205@riseup.net> <558A1E8E.30306@novauri.com>
Message-ID: <CADm_WcZ52_fvNk_rWzu+Nw1CBz2o6t6cMkEfOm3BpdjH7iQKrw@mail.gmail.com>

Miners can collude today to lower the block size limit.

In fact, this largely happens already out of laziness - miners often follow
the "soft" default limit set by Bitcoin Core, to the point where you can
chart when miners upgrade to new software:
http://hashingit.com/analysis/39-the-myth-of-the-megabyte-bitcoin-block



On Tue, Jun 23, 2015 at 8:05 PM, William Madden <will.madden at novauri.com>
wrote:

> Here are refutations of the approach in BIP-100 here:
> http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf
>
> To recap BIP-100:
>
> 1) Hard form to remove static 1MB block size limit
> 2) Add new floating block size limit set to 1MB
> 3) Historical 32MB message limit remains
> 4) Hard form on testnet 9/1/2015
> 5) Hard form on main 1/11/2016
> 6) 1MB limit changed via one-way lock in upgrade with a 12,000 block
> threshold by 90% of blocks
> 7) Limit increase or decrease may not exceed 2x in any one step
> 8) Miners vote by encoding 'BV'+BlockSizeRequestValue into coinbase
> scriptSig, e.g. "/BV8000000/" to vote for 8M.
> 9) Votes are evaluated by dropping bottom 20% and top 20%, and then the
> most common floor (minimum) is chosen.
>
> 8MB limits doubling just under every 2 years makes a static value grow
> in a predictable manner.
>
> BIP-100 makes a static value grow (or more importantly potentially
> shrink) in an unpredictable manner based on voting mechanics that are
> untested in this capacity in the bitcoin network.  Introducing a highly
> variable and untested dynamic into an already complex system is
> unnecessarily risky.
>
> For example, the largely arbitrary voting rules listed in 9 above can be
> gamed.  If I control pools or have affiliates involved in pools that
> mine slightly more than 20% of blocks, I could wait until block sizes
> are 10MB, and then suddenly vote "/BV5000000/" for 20% of blocks and
> "/BV5000001/" for the remaining 10%.  If others don't consistently vote
> for the same "/BV#/" value, vote too consistently and have their value
> thrown out as the top 20%, I could win the resize to half capacity
> "/BV5000001/" because it was the lowest repeated value not in the bottom
> 20%.
>
> I could use this to force an exodus to my sidechain/alt coin, or to
> choke out the bitcoin network.  A first improvement would be to only let
> BIP-100 raise the cap and not lower it, but if I can think of a
> vulnerability off the top of my head, there will be others on the other
> side of the equation that have not been thought of.  Why bother
> introducing a rube goldberg machine like voting when a simple 8mb cap
> with predictable growth gets the job done, potentially permanently?
>
>
> On 6/23/2015 9:43 PM, odinn wrote:
> > -----BEGIN PGP SIGNED MESSAGE-----
> > Hash: SHA1
> >
> > 1) Hard fork not (necessarily) needed
> > 2) See Garzik's BIP 100, better (this is not meant to say "superior to
> > your stuff," but rather simply to say, "Better you should work with
> > Garzik to implement BIP-100, that would be good")
> > 3) See points 1 and 2 above
> > 4) If still reading... changes should be (as you seem to have been
> > trying to lean towards)... lean towards gradual change; hence, changes
> > that would flow from this BIP would be better off oriented in a
> > process that dies not require the "way you have done it."
> >
> > You did address that, to be fair - in your TODO, this link:
> > http://gavinandresen.ninja/time-to-roll-out-bigger-blocks
> >
> > contained the following link:
> >
> > http://gavinandresen.ninja/bigger-blocks-another-way
> >
> > However, in reading that, I didn't see any meaningful statements that
> > would refute the approach in Garzik's BIP-100.
> >
> > Maybe a better way to say this is,
> >
> > Work with Jeff Garzik (which I am sure you are already having such
> > discussions in private) as well as the list discussions,
> > Move forward on BIP-100 with Garzik and other developers (not such a
> > bad plan really) and don't get caught up in XT.  (If you feel you can
> > develop XT further, that is your thing but it would perhaps make you
> > lose focus, work together with other developers.)
> >
> > Relax into the process.  Things will be ok.
> >
> > Respectfully,
> >
> > - -O
> >
> > On 06/22/2015 11:18 AM, Gavin Andresen wrote:
> >> I promised to write a BIP after I'd implemented
> >> increase-the-maximum-block-size code, so here it is. It also lives
> >> at:
> >> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki
> >>
> >>  I don't expect any proposal to please everybody; there are
> >> unavoidable tradeoffs to increasing the maximum block size. I
> >> prioritize implementation simplicity -- it is hard to write
> >> consensus-critical code, so simpler is better.
> >>
> >>
> >>
> >>
> >> BIP: ?? Title: Increase Maximum Block Size Author: Gavin Andresen
> >> <gavinandresen at gmail.com <mailto:gavinandresen at gmail.com>> Status:
> >> Draft Type: Standards Track Created: 2015-06-22
> >>
> >> ==Abstract==
> >>
> >> This BIP proposes replacing the fixed one megabyte maximum block
> >> size with a maximum size that grows over time at a predictable
> >> rate.
> >>
> >> ==Motivation==
> >>
> >> Transaction volume on the Bitcoin network has been growing, and
> >> will soon reach the one-megabyte-every-ten-minutes limit imposed by
> >> the one megabyte maximum block size. Increasing the maximum size
> >> reduces the impact of that limit on Bitcoin adoption and growth.
> >>
> >> ==Specification==
> >>
> >> After deployment on the network (see the Deployment section for
> >> details), the maximum allowed size of a block on the main network
> >> shall be calculated based on the timestamp in the block header.
> >>
> >> The maximum size shall be 8,000,000 bytes at a timestamp of
> >> 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double
> >> every 63,072,000 seconds (two years, ignoring leap years), until
> >> 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of
> >> blocks in between doublings will increase linearly based on the
> >> block's timestamp. The maximum size of blocks after 2036-01-06
> >> 00:00:00 UTC shall be 8,192,000,000 bytes.
> >>
> >> Expressed in pseudo-code, using integer math:
> >>
> >> function max_block_size(block_timestamp):
> >>
> >> time_start = 1452470400 time_double = 60*60*24*365*2 size_start =
> >> 8000000 if block_timestamp >= time_start+time_double*10 return
> >> size_start * 2^10
> >>
> >> // Piecewise-linear-between-doublings growth: time_delta =
> >> block_timestamp - t_start doublings = time_delta / time_double
> >> remainder = time_delta % time_double interpolate = (size_start *
> >> 2^doublings * remainder) / time_double max_size = size_start *
> >> 2^doublings + interpolate
> >>
> >> return max_size
> >>
> >> ==Deployment==
> >>
> >> Deployment shall be controlled by hash-power supermajority vote
> >> (similar to the technique used in BIP34), but the earliest possible
> >> activation time is 2016-01-11 00:00:00 UTC.
> >>
> >> Activation is achieved when 750 of 1,000 consecutive blocks in the
> >> best chain have a version number with bits 3 and 14 set (0x20000004
> >> in hex). The activation time will be the timestamp of the 750'th
> >> block plus a two week (1,209,600 second) grace period to give any
> >> remaining miners or services time to upgrade to support larger
> >> blocks. If a supermajority is achieved more than two weeks before
> >> 2016-01-11 00:00:00 UTC, the activation time will be 2016-01-11
> >> 00:00:00 UTC.
> >>
> >> Block version numbers are used only for activation; once activation
> >> is achieved, the maximum block size shall be as described in the
> >> specification section, regardless of the version number of the
> >> block.
> >>
> >>
> >> ==Rationale==
> >>
> >> The initial size of 8,000,000 bytes was chosen after testing the
> >> current reference implementation code with larger block sizes and
> >> receiving feedback from miners stuck behind bandwidth-constrained
> >> networks (in particular, Chinese miners behind the Great Firewall
> >> of China).
> >>
> >> The doubling interval was chosen based on long-term growth trends
> >> for CPU power, storage, and Internet bandwidth. The 20-year limit
> >> was chosen because exponential growth cannot continue forever.
> >>
> >> Calculations are based on timestamps and not blockchain height
> >> because a timestamp is part of every block's header. This allows
> >> implementations to know a block's maximum size after they have
> >> downloaded it's header, but before downloading any transactions.
> >>
> >> The deployment plan is taken from Jeff Garzik's proposed BIP100
> >> block size increase, and is designed to give miners, merchants,
> >> and full-node-running-end-users sufficient time to upgrade to
> >> software that supports bigger blocks. A 75% supermajority was
> >> chosen so that one large mining pool does not have effective veto
> >> power over a blocksize increase. The version number scheme is
> >> designed to be compatible with Pieter's Wuille's proposed "Version
> >> bits" BIP.
> >>
> >> TODO: summarize objections/arguments from
> >> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.
> >>
> >> TODO: describe other proposals and their advantages/disadvantages
> >> over this proposal.
> >>
> >>
> >> ==Compatibility==
> >>
> >> This is a hard-forking change to the Bitcoin protocol; anybody
> >> running code that fully validates blocks must upgrade before the
> >> activation time or they will risk rejecting a chain containing
> >> larger-than-one-megabyte blocks.
> >>
> >> Simplified Payment Verification software is not affected, unless
> >> it makes assumptions about the maximum depth of a transaction's
> >> merkle branch based on the minimum size of a transaction and the
> >> maximum block size.
> >>
> >> ==Implementation==
> >>
> >> https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork
> >>
> >>
> >>
> >> _______________________________________________ bitcoin-dev mailing
> >> list bitcoin-dev at lists.linuxfoundation.org
> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >>
> >
> > - --
> > http://abis.io ~
> > "a protocol concept to enable decentralization
> > and expansion of a giving economy, and a new social good"
> > https://keybase.io/odinn
> > -----BEGIN PGP SIGNATURE-----
> > Version: GnuPG v1
> >
> > iQEcBAEBAgAGBQJVigtJAAoJEGxwq/inSG8CqZwIAIG3ZQzekfccPxBOMqtim175
> > Crov6hrO9FaIzbLljECpUi60RKuDM/fs09ZJsKKIaJPkB5dlJjs4huc206veAIO+
> > K2h3DmAcA6W/Thk0C2cV3ewv+OiELDOhpeoddBBLPadAfaBGr4l9ltqWLdBtMCmw
> > OtmiWstEuXTao9ApgoFOmybdmCjbfrfhejOOHs/pMiSn5xVE60RK4x2HFTFsHfAN
> > fZAeLCuwuN2qWMrVrr+cbpCXjEuE1xZG3WEj7ppYoGR+AgF/Y5/U1j7S4PVpk85s
> > CgMkpcWvLnBMmSCrllnRZy1Gfrwk36Pg0rXD/l/NNd0/KTpmPSvkX/bCyzFwbzo=
> > =ft62
> > -----END PGP SIGNATURE-----
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/a3e483fb/attachment-0001.html>

From raystonn at hotmail.com  Wed Jun 24 04:31:40 2015
From: raystonn at hotmail.com (Raystonn)
Date: Tue, 23 Jun 2015 21:31:40 -0700
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
Message-ID: <COL402-EAS813C9D07F7367E88D7219CDAF0@phx.gbl>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/218ff5e9/attachment.html>

From grarpamp at gmail.com  Wed Jun 24 06:14:22 2015
From: grarpamp at gmail.com (grarpamp)
Date: Wed, 24 Jun 2015 02:14:22 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <20150623205042.GB18677@muck>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<20150623192838.GG30235@muck>
	<CABsx9T2wsc=+seaWs=v5d_kPpC4u-xTnsjuPMO7PYhQN+0-KAQ@mail.gmail.com>
	<CAPg+sBj0Zk-k7fjams1YWFESDYHHp+r=NeFQAnVgghppNKDGxg@mail.gmail.com>
	<20150623205042.GB18677@muck>
Message-ID: <CAD2Ti2-O-mq2n=TZPTXFiKNfu+2fdUSW294G96efkrisdr=buA@mail.gmail.com>

On Tue, Jun 23, 2015 at 4:50 PM, Peter Todd <pete at petertodd.org> wrote:
> In particular, note how this bump is being proposed at a time when
> blockchain space demand is so low that transactions usually cost well
> under a penny each

Recent averages seem to be offering around $0.04...
https://tradeblock.com/blog/bitcoin-network-capacity-analysis-part-2-macro-transaction-trends
With various stress tests indicate needing 10x more...
http://www.reddit.com/r/Bitcoin/search?restrict_sr=on&q=stress+test+fees

> a insignificant amount of money for almost all
> use-cases.

Penny stocks? Voting? Notarizing?
There's a whole ecosystem of non-purchase cases
for which non-profit-mining fees are enabling.

From laanwj at gmail.com  Wed Jun 24 11:47:28 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Wed, 24 Jun 2015 13:47:28 +0200
Subject: [bitcoin-dev] New GPG signing key for Bitcoin Core binary releases
Message-ID: <20150624114727.GA867@amethyst.visucore.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Hello,

Starting with 0.11.0rc3, SHA256SUMS.asc will be signed with the following key:

    pub   4096R/36C2E964 2015-06-24 Wladimir J. van der Laan (Bitcoin Core binary release signing key) <laanwj at gmail.com>
    Primary key fingerprint: 01EA 5486 DE18 A882 D4C2  6845 90C8 019E 36C2 E964

For gitian and commit signing I will keep using this key.

Wladimir
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBCgAGBQJViphCAAoJEHSBCwEjRsmmtRoIALBzJMGXzoj5t9OQSedxjnjP
sxfHuBwQxeuPYXbRlMjY5UZhmabbt0/mLRfVSdscnCzp0YxbMRwD7I6MdHqXyBtd
oS+TUfMNir5lk7Ti2hRStgvxqsAbHUJ08LlqpJXV5dq3QgeJyJwZM76a6yyaGwxP
SwqvKklQZ/qdrKOgjjn6d5HywgsmybJSDzEDR3k+ogkLsfM1jcpqZhwFeRVpk94m
SgZGLLx5zAIKcLHn4I1FaZ+OAmmS0ukYcmotMOUk6NBEjHTDfjEFBrbrlwvL4G7r
kjd1mRxkaJMxX3nJicXiEQClVoeUrMVyJrrsTGyPixSicdQbItuyLWXm37fAfE0=
=4v49
-----END PGP SIGNATURE-----

From will.madden at novauri.com  Wed Jun 24 13:06:40 2015
From: will.madden at novauri.com (Will)
Date: Wed, 24 Jun 2015 09:06:40 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CADm_WcZ52_fvNk_rWzu+Nw1CBz2o6t6cMkEfOm3BpdjH7iQKrw@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<558A0B4A.7090205@riseup.net> <558A1E8E.30306@novauri.com>
	<CADm_WcZ52_fvNk_rWzu+Nw1CBz2o6t6cMkEfOm3BpdjH7iQKrw@mail.gmail.com>
Message-ID: <2DC61141-96C9-4727-81D6-3CF572BC6BD7@novauri.com>

Yes, but with a key distinction.   Today miners may collude to (or unintentionally) lower the block size limit for blocks they win.  BIP-100 introduces the possibility of lowering the block size limit for everyone over the next 12,000 blocks.

Another gap involves laziness.  What is a far more likely issue is not a conspiracy but that miners will be lazy and hard code their vote values, requiring arm twisting later to change them.  Preventing this headache introduces the need for more complexity, either by making the default a non-vote (which makes it easier to game the system with less voting power), or by making the default vote = MAX_BLOCK_SIZE * 1.09 (which makes the default similar is to Gavin's proposal).

I think with a default vote that is ~9% larger than the previous max block size and no option to lower the max block size then BIP-100 could work without added risk or defeating the intended purpose.  Still, one has to ask if the benefit is there to justify the additional moving parts.

> On Jun 23, 2015, at 11:49 PM, Jeff Garzik <jgarzik at gmail.com> wrote:
> 
> Miners can collude today to lower the block size limit.
> 
> In fact, this largely happens already out of laziness - miners often follow the "soft" default limit set by Bitcoin Core, to the point where you can chart when miners upgrade to new software: http://hashingit.com/analysis/39-the-myth-of-the-megabyte-bitcoin-block
> 
> 
> 
>> On Tue, Jun 23, 2015 at 8:05 PM, William Madden <will.madden at novauri.com> wrote:
>> Here are refutations of the approach in BIP-100 here:
>> http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf
>> 
>> To recap BIP-100:
>> 
>> 1) Hard form to remove static 1MB block size limit
>> 2) Add new floating block size limit set to 1MB
>> 3) Historical 32MB message limit remains
>> 4) Hard form on testnet 9/1/2015
>> 5) Hard form on main 1/11/2016
>> 6) 1MB limit changed via one-way lock in upgrade with a 12,000 block
>> threshold by 90% of blocks
>> 7) Limit increase or decrease may not exceed 2x in any one step
>> 8) Miners vote by encoding 'BV'+BlockSizeRequestValue into coinbase
>> scriptSig, e.g. "/BV8000000/" to vote for 8M.
>> 9) Votes are evaluated by dropping bottom 20% and top 20%, and then the
>> most common floor (minimum) is chosen.
>> 
>> 8MB limits doubling just under every 2 years makes a static value grow
>> in a predictable manner.
>> 
>> BIP-100 makes a static value grow (or more importantly potentially
>> shrink) in an unpredictable manner based on voting mechanics that are
>> untested in this capacity in the bitcoin network.  Introducing a highly
>> variable and untested dynamic into an already complex system is
>> unnecessarily risky.
>> 
>> For example, the largely arbitrary voting rules listed in 9 above can be
>> gamed.  If I control pools or have affiliates involved in pools that
>> mine slightly more than 20% of blocks, I could wait until block sizes
>> are 10MB, and then suddenly vote "/BV5000000/" for 20% of blocks and
>> "/BV5000001/" for the remaining 10%.  If others don't consistently vote
>> for the same "/BV#/" value, vote too consistently and have their value
>> thrown out as the top 20%, I could win the resize to half capacity
>> "/BV5000001/" because it was the lowest repeated value not in the bottom
>> 20%.
>> 
>> I could use this to force an exodus to my sidechain/alt coin, or to
>> choke out the bitcoin network.  A first improvement would be to only let
>> BIP-100 raise the cap and not lower it, but if I can think of a
>> vulnerability off the top of my head, there will be others on the other
>> side of the equation that have not been thought of.  Why bother
>> introducing a rube goldberg machine like voting when a simple 8mb cap
>> with predictable growth gets the job done, potentially permanently?
>> 
>> 
>> On 6/23/2015 9:43 PM, odinn wrote:
>> > -----BEGIN PGP SIGNED MESSAGE-----
>> > Hash: SHA1
>> >
>> > 1) Hard fork not (necessarily) needed
>> > 2) See Garzik's BIP 100, better (this is not meant to say "superior to
>> > your stuff," but rather simply to say, "Better you should work with
>> > Garzik to implement BIP-100, that would be good")
>> > 3) See points 1 and 2 above
>> > 4) If still reading... changes should be (as you seem to have been
>> > trying to lean towards)... lean towards gradual change; hence, changes
>> > that would flow from this BIP would be better off oriented in a
>> > process that dies not require the "way you have done it."
>> >
>> > You did address that, to be fair - in your TODO, this link:
>> > http://gavinandresen.ninja/time-to-roll-out-bigger-blocks
>> >
>> > contained the following link:
>> >
>> > http://gavinandresen.ninja/bigger-blocks-another-way
>> >
>> > However, in reading that, I didn't see any meaningful statements that
>> > would refute the approach in Garzik's BIP-100.
>> >
>> > Maybe a better way to say this is,
>> >
>> > Work with Jeff Garzik (which I am sure you are already having such
>> > discussions in private) as well as the list discussions,
>> > Move forward on BIP-100 with Garzik and other developers (not such a
>> > bad plan really) and don't get caught up in XT.  (If you feel you can
>> > develop XT further, that is your thing but it would perhaps make you
>> > lose focus, work together with other developers.)
>> >
>> > Relax into the process.  Things will be ok.
>> >
>> > Respectfully,
>> >
>> > - -O
>> >
>> > On 06/22/2015 11:18 AM, Gavin Andresen wrote:
>> >> I promised to write a BIP after I'd implemented
>> >> increase-the-maximum-block-size code, so here it is. It also lives
>> >> at:
>> >> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki
>> >>
>> >>  I don't expect any proposal to please everybody; there are
>> >> unavoidable tradeoffs to increasing the maximum block size. I
>> >> prioritize implementation simplicity -- it is hard to write
>> >> consensus-critical code, so simpler is better.
>> >>
>> >>
>> >>
>> >>
>> >> BIP: ?? Title: Increase Maximum Block Size Author: Gavin Andresen
>> >> <gavinandresen at gmail.com <mailto:gavinandresen at gmail.com>> Status:
>> >> Draft Type: Standards Track Created: 2015-06-22
>> >>
>> >> ==Abstract==
>> >>
>> >> This BIP proposes replacing the fixed one megabyte maximum block
>> >> size with a maximum size that grows over time at a predictable
>> >> rate.
>> >>
>> >> ==Motivation==
>> >>
>> >> Transaction volume on the Bitcoin network has been growing, and
>> >> will soon reach the one-megabyte-every-ten-minutes limit imposed by
>> >> the one megabyte maximum block size. Increasing the maximum size
>> >> reduces the impact of that limit on Bitcoin adoption and growth.
>> >>
>> >> ==Specification==
>> >>
>> >> After deployment on the network (see the Deployment section for
>> >> details), the maximum allowed size of a block on the main network
>> >> shall be calculated based on the timestamp in the block header.
>> >>
>> >> The maximum size shall be 8,000,000 bytes at a timestamp of
>> >> 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double
>> >> every 63,072,000 seconds (two years, ignoring leap years), until
>> >> 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of
>> >> blocks in between doublings will increase linearly based on the
>> >> block's timestamp. The maximum size of blocks after 2036-01-06
>> >> 00:00:00 UTC shall be 8,192,000,000 bytes.
>> >>
>> >> Expressed in pseudo-code, using integer math:
>> >>
>> >> function max_block_size(block_timestamp):
>> >>
>> >> time_start = 1452470400 time_double = 60*60*24*365*2 size_start =
>> >> 8000000 if block_timestamp >= time_start+time_double*10 return
>> >> size_start * 2^10
>> >>
>> >> // Piecewise-linear-between-doublings growth: time_delta =
>> >> block_timestamp - t_start doublings = time_delta / time_double
>> >> remainder = time_delta % time_double interpolate = (size_start *
>> >> 2^doublings * remainder) / time_double max_size = size_start *
>> >> 2^doublings + interpolate
>> >>
>> >> return max_size
>> >>
>> >> ==Deployment==
>> >>
>> >> Deployment shall be controlled by hash-power supermajority vote
>> >> (similar to the technique used in BIP34), but the earliest possible
>> >> activation time is 2016-01-11 00:00:00 UTC.
>> >>
>> >> Activation is achieved when 750 of 1,000 consecutive blocks in the
>> >> best chain have a version number with bits 3 and 14 set (0x20000004
>> >> in hex). The activation time will be the timestamp of the 750'th
>> >> block plus a two week (1,209,600 second) grace period to give any
>> >> remaining miners or services time to upgrade to support larger
>> >> blocks. If a supermajority is achieved more than two weeks before
>> >> 2016-01-11 00:00:00 UTC, the activation time will be 2016-01-11
>> >> 00:00:00 UTC.
>> >>
>> >> Block version numbers are used only for activation; once activation
>> >> is achieved, the maximum block size shall be as described in the
>> >> specification section, regardless of the version number of the
>> >> block.
>> >>
>> >>
>> >> ==Rationale==
>> >>
>> >> The initial size of 8,000,000 bytes was chosen after testing the
>> >> current reference implementation code with larger block sizes and
>> >> receiving feedback from miners stuck behind bandwidth-constrained
>> >> networks (in particular, Chinese miners behind the Great Firewall
>> >> of China).
>> >>
>> >> The doubling interval was chosen based on long-term growth trends
>> >> for CPU power, storage, and Internet bandwidth. The 20-year limit
>> >> was chosen because exponential growth cannot continue forever.
>> >>
>> >> Calculations are based on timestamps and not blockchain height
>> >> because a timestamp is part of every block's header. This allows
>> >> implementations to know a block's maximum size after they have
>> >> downloaded it's header, but before downloading any transactions.
>> >>
>> >> The deployment plan is taken from Jeff Garzik's proposed BIP100
>> >> block size increase, and is designed to give miners, merchants,
>> >> and full-node-running-end-users sufficient time to upgrade to
>> >> software that supports bigger blocks. A 75% supermajority was
>> >> chosen so that one large mining pool does not have effective veto
>> >> power over a blocksize increase. The version number scheme is
>> >> designed to be compatible with Pieter's Wuille's proposed "Version
>> >> bits" BIP.
>> >>
>> >> TODO: summarize objections/arguments from
>> >> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.
>> >>
>> >> TODO: describe other proposals and their advantages/disadvantages
>> >> over this proposal.
>> >>
>> >>
>> >> ==Compatibility==
>> >>
>> >> This is a hard-forking change to the Bitcoin protocol; anybody
>> >> running code that fully validates blocks must upgrade before the
>> >> activation time or they will risk rejecting a chain containing
>> >> larger-than-one-megabyte blocks.
>> >>
>> >> Simplified Payment Verification software is not affected, unless
>> >> it makes assumptions about the maximum depth of a transaction's
>> >> merkle branch based on the minimum size of a transaction and the
>> >> maximum block size.
>> >>
>> >> ==Implementation==
>> >>
>> >> https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork
>> >>
>> >>
>> >>
>> >> _______________________________________________ bitcoin-dev mailing
>> >> list bitcoin-dev at lists.linuxfoundation.org
>> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> >>
>> >
>> > - --
>> > http://abis.io ~
>> > "a protocol concept to enable decentralization
>> > and expansion of a giving economy, and a new social good"
>> > https://keybase.io/odinn
>> > -----BEGIN PGP SIGNATURE-----
>> > Version: GnuPG v1
>> >
>> > iQEcBAEBAgAGBQJVigtJAAoJEGxwq/inSG8CqZwIAIG3ZQzekfccPxBOMqtim175
>> > Crov6hrO9FaIzbLljECpUi60RKuDM/fs09ZJsKKIaJPkB5dlJjs4huc206veAIO+
>> > K2h3DmAcA6W/Thk0C2cV3ewv+OiELDOhpeoddBBLPadAfaBGr4l9ltqWLdBtMCmw
>> > OtmiWstEuXTao9ApgoFOmybdmCjbfrfhejOOHs/pMiSn5xVE60RK4x2HFTFsHfAN
>> > fZAeLCuwuN2qWMrVrr+cbpCXjEuE1xZG3WEj7ppYoGR+AgF/Y5/U1j7S4PVpk85s
>> > CgMkpcWvLnBMmSCrllnRZy1Gfrwk36Pg0rXD/l/NNd0/KTpmPSvkX/bCyzFwbzo=
>> > =ft62
>> > -----END PGP SIGNATURE-----
>> > _______________________________________________
>> > bitcoin-dev mailing list
>> > bitcoin-dev at lists.linuxfoundation.org
>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> >
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/cc0ad835/attachment-0001.html>

From gavinandresen at gmail.com  Wed Jun 24 13:44:13 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Wed, 24 Jun 2015 09:44:13 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <2DC61141-96C9-4727-81D6-3CF572BC6BD7@novauri.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<558A0B4A.7090205@riseup.net> <558A1E8E.30306@novauri.com>
	<CADm_WcZ52_fvNk_rWzu+Nw1CBz2o6t6cMkEfOm3BpdjH7iQKrw@mail.gmail.com>
	<2DC61141-96C9-4727-81D6-3CF572BC6BD7@novauri.com>
Message-ID: <CABsx9T0+MYYnea7VaSCu5FC7m1V6Lv_WZz2+G=n9gJe3oFRKXg@mail.gmail.com>

This BIP has been assigned number 101 by the BIP editor. I plan on filling
in the TODOs and will submit it as a pull request to the BIP repository
today.

> Title: Increase Maximum Block Size

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/b7442be1/attachment.html>

From mark at friedenbach.org  Wed Jun 24 17:05:42 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Wed, 24 Jun 2015 10:05:42 -0700
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <COL402-EAS813C9D07F7367E88D7219CDAF0@phx.gbl>
References: <COL402-EAS813C9D07F7367E88D7219CDAF0@phx.gbl>
Message-ID: <CAOG=w-uf3K+vW_zHXUm1utK7tR7osm_1hLMxw8gqkwm0Hn7d_A@mail.gmail.com>

They do so by not building on larger blocks
On Jun 23, 2015 9:31 PM, "Raystonn" <raystonn at hotmail.com> wrote:

> No, they can lower their own block sizes.  But they cannot currently lower
> the sizes of blocks mined by others.  That is not the same thing by any
> stretch of the imagination.
> On 23 Jun 2015 8:50 pm, Jeff Garzik <jgarzik at gmail.com> wrote:
>
> Miners can collude today to lower the block size limit.
>
> In fact, this largely happens already out of laziness - miners often
> follow the "soft" default limit set by Bitcoin Core, to the point where you
> can chart when miners upgrade to new software:
> http://hashingit.com/analysis/39-the-myth-of-the-megabyte-bitcoin-block
>
>
>
> On Tue, Jun 23, 2015 at 8:05 PM, William Madden <will.madden at novauri.com>
> wrote:
>
> Here are refutations of the approach in BIP-100 here:
> http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf
>
> To recap BIP-100:
>
> 1) Hard form to remove static 1MB block size limit
> 2) Add new floating block size limit set to 1MB
> 3) Historical 32MB message limit remains
> 4) Hard form on testnet 9/1/2015
> 5) Hard form on main 1/11/2016
> 6) 1MB limit changed via one-way lock in upgrade with a 12,000 block
> threshold by 90% of blocks
> 7) Limit increase or decrease may not exceed 2x in any one step
> 8) Miners vote by encoding 'BV'+BlockSizeRequestValue into coinbase
> scriptSig, e.g. "/BV8000000/" to vote for 8M.
> 9) Votes are evaluated by dropping bottom 20% and top 20%, and then the
> most common floor (minimum) is chosen.
>
> 8MB limits doubling just under every 2 years makes a static value grow
> in a predictable manner.
>
> BIP-100 makes a static value grow (or more importantly potentially
> shrink) in an unpredictable manner based on voting mechanics that are
> untested in this capacity in the bitcoin network.  Introducing a highly
> variable and untested dynamic into an already complex system is
> unnecessarily risky.
>
> For example, the largely arbitrary voting rules listed in 9 above can be
> gamed.  If I control pools or have affiliates involved in pools that
> mine slightly more than 20% of blocks, I could wait until block sizes
> are 10MB, and then suddenly vote "/BV5000000/" for 20% of blocks and
> "/BV5000001/" for the remaining 10%.  If others don't consistently vote
> for the same "/BV#/" value, vote too consistently and have their value
> thrown out as the top 20%, I could win the resize to half capacity
> "/BV5000001/" because it was the lowest repeated value not in the bottom
> 20%.
>
> I could use this to force an exodus to my sidechain/alt coin, or to
> choke out the bitcoin network.  A first improvement would be to only let
> BIP-100 raise the cap and not lower it, but if I can think of a
> vulnerability off the top of my head, there will be others on the other
> side of the equation that have not been thought of.  Why bother
> introducing a rube goldberg machine like voting when a simple 8mb cap
> with predictable growth gets the job done, potentially permanently?
>
>
> On 6/23/2015 9:43 PM, odinn wrote:
> > -----BEGIN PGP SIGNED MESSAGE-----
> > Hash: SHA1
> >
> > 1) Hard fork not (necessarily) needed
> > 2) See Garzik's BIP 100, better (this is not meant to say "superior to
> > your stuff," but rather simply to say, "Better you should work with
> > Garzik to implement BIP-100, that would be good")
> > 3) See points 1 and 2 above
> > 4) If still reading... changes should be (as you seem to have been
> > trying to lean towards)... lean towards gradual change; hence, changes
> > that would flow from this BIP would be better off oriented in a
> > process that dies not require the "way you have done it."
> >
> > You did address that, to be fair - in your TODO, this link:
> > http://gavinandresen.ninja/time-to-roll-out-bigger-blocks
> >
> > contained the following link:
> >
> > http://gavinandresen.ninja/bigger-blocks-another-way
> >
> > However, in reading that, I didn't see any meaningful statements that
> > would refute the approach in Garzik's BIP-100.
> >
> > Maybe a better way to say this is,
> >
> > Work with Jeff Garzik (which I am sure you are already having such
> > discussions in private) as well as the list discussions,
> > Move forward on BIP-100 with Garzik and other developers (not such a
> > bad plan really) and don't get caught up in XT.  (If you feel you can
> > develop XT further, that is your thing but it would perhaps make you
> > lose focus, work together with other developers.)
> >
> > Relax into the process.  Things will be ok.
> >
> > Respectfully,
> >
> > - -O
> >
> > On 06/22/2015 11:18 AM, Gavin Andresen wrote:
> >> I promised to write a BIP after I'd implemented
> >> increase-the-maximum-block-size code, so here it is. It also lives
> >> at:
> >> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki
> >>
> >>  I don't expect any proposal to please everybody; there are
> >> unavoidable tradeoffs to increasing the maximum block size. I
> >> prioritize implementation simplicity -- it is hard to write
> >> consensus-critical code, so simpler is better.
> >>
> >>
> >>
> >>
> >> BIP: ?? Title: Increase Maximum Block Size Author: Gavin Andresen
> >> <gavinandresen at gmail.com <mailto:gavinandresen at gmail.com>> Status:
> >> Draft Type: Standards Track Created: 2015-06-22
> >>
> >> ==Abstract==
> >>
> >> This BIP proposes replacing the fixed one megabyte maximum block
> >> size with a maximum size that grows over time at a predictable
> >> rate.
> >>
> >> ==Motivation==
> >>
> >> Transaction volume on the Bitcoin network has been growing, and
> >> will soon reach the one-megabyte-every-ten-minutes limit imposed by
> >> the one megabyte maximum block size. Increasing the maximum size
> >> reduces the impact of that limit on Bitcoin adoption and growth.
> >>
> >> ==Specification==
> >>
> >> After deployment on the network (see the Deployment section for
> >> details), the maximum allowed size of a block on the main network
> >> shall be calculated based on the timestamp in the block header.
> >>
> >> The maximum size shall be 8,000,000 bytes at a timestamp of
> >> 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double
> >> every 63,072,000 seconds (two years, ignoring leap years), until
> >> 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of
> >> blocks in between doublings will increase linearly based on the
> >> block's timestamp. The maximum size of blocks after 2036-01-06
> >> 00:00:00 UTC shall be 8,192,000,000 bytes.
> >>
> >> Expressed in pseudo-code, using integer math:
> >>
> >> function max_block_size(block_timestamp):
> >>
> >> time_start = 1452470400 time_double = 60*60*24*365*2 size_start =
> >> 8000000 if block_timestamp >= time_start+time_double*10 return
> >> size_start * 2^10
> >>
> >> // Piecewise-linear-between-doublings growth: time_delta =
> >> block_timestamp - t_start doublings = time_delta / time_double
> >> remainder = time_delta % time_double interpolate = (size_start *
> >> 2^doublings * remainder) / time_double max_size = size_start *
> >> 2^doublings + interpolate
> >>
> >> return max_size
> >>
> >> ==Deployment==
> >>
> >> Deployment shall be controlled by hash-power supermajority vote
> >> (similar to the technique used in BIP34), but the earliest possible
> >> activation time is 2016-01-11 00:00:00 UTC.
> >>
> >> Activation is achieved when 750 of 1,000 consecutive blocks in the
> >> best chain have a version number with bits 3 and 14 set (0x20000004
> >> in hex). The activation time will be the timestamp of the 750'th
> >> block plus a two week (1,209,600 second) grace period to give any
> >> remaining miners or services time to upgrade to support larger
> >> blocks. If a supermajority is achieved more than two weeks before
> >> 2016-01-11 00:00:00 UTC, the activation time will be 2016-01-11
> >> 00:00:00 UTC.
> >>
> >> Block version numbers are used only for activation; once activation
> >> is achieved, the maximum block size shall be as described in the
> >> specification section, regardless of the version number of the
> >> block.
> >>
> >>
> >> ==Rationale==
> >>
> >> The initial size of 8,000,000 bytes was chosen after testing the
> >> current reference implementation code with larger block sizes and
> >> receiving feedback from miners stuck behind bandwidth-constrained
> >> networks (in particular, Chinese miners behind the Great Firewall
> >> of China).
> >>
> >> The doubling interval was chosen based on long-term growth trends
> >> for CPU power, storage, and Internet bandwidth. The 20-year limit
> >> was chosen because exponential growth cannot continue forever.
> >>
> >> Calculations are based on timestamps and not blockchain height
> >> because a timestamp is part of every block's header. This allows
> >> implementations to know a block's maximum size after they have
> >> downloaded it's header, but before downloading any transactions.
> >>
> >> The deployment plan is taken from Jeff Garzik's proposed BIP100
> >> block size increase, and is designed to give miners, merchants,
> >> and full-node-running-end-users sufficient time to upgrade to
> >> software that supports bigger blocks. A 75% supermajority was
> >> chosen so that one large mining pool does not have effective veto
> >> power over a blocksize increase. The version number scheme is
> >> designed to be compatible with Pieter's Wuille's proposed "Version
> >> bits" BIP.
> >>
> >> TODO: summarize objections/arguments from
> >> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.
> >>
> >> TODO: describe other proposals and their advantages/disadvantages
> >> over this proposal.
> >>
> >>
> >> ==Compatibility==
> >>
> >> This is a hard-forking change to the Bitcoin protocol; anybody
> >> running code that fully validates blocks must upgrade before the
> >> activation time or they will risk rejecting a chain containing
> >> larger-than-one-megabyte blocks.
> >>
> >> Simplified Payment Verification software is not affected, unless
> >> it makes assumptions about the maximum depth of a transaction's
> >> merkle branch based on the minimum size of a transaction and the
> >> maximum block size.
> >>
> >> ==Implementation==
> >>
> >> https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork
> >>
> >>
> >>
> >> _______________________________________________ bitcoin-dev mailing
> >> list bitcoin-dev at lists.linuxfoundation.org
> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >>
> >
> > - --
> > http://abis.io ~
> > "a protocol concept to enable decentralization
> > and expansion of a giving economy, and a new social good"
> > https://keybase.io/odinn
> > -----BEGIN PGP SIGNATURE-----
> > Version: GnuPG v1
> >
> > iQEcBAEBAgAGBQJVigtJAAoJEGxwq/inSG8CqZwIAIG3ZQzekfccPxBOMqtim175
> > Crov6hrO9FaIzbLljECpUi60RKuDM/fs09ZJsKKIaJPkB5dlJjs4huc206veAIO+
> > K2h3DmAcA6W/Thk0C2cV3ewv+OiELDOhpeoddBBLPadAfaBGr4l9ltqWLdBtMCmw
> > OtmiWstEuXTao9ApgoFOmybdmCjbfrfhejOOHs/pMiSn5xVE60RK4x2HFTFsHfAN
> > fZAeLCuwuN2qWMrVrr+cbpCXjEuE1xZG3WEj7ppYoGR+AgF/Y5/U1j7S4PVpk85s
> > CgMkpcWvLnBMmSCrllnRZy1Gfrwk36Pg0rXD/l/NNd0/KTpmPSvkX/bCyzFwbzo=
> > =ft62
> > -----END PGP SIGNATURE-----
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/f22ea381/attachment-0001.html>

From raystonn at hotmail.com  Wed Jun 24 17:23:18 2015
From: raystonn at hotmail.com (Raystonn)
Date: Wed, 24 Jun 2015 10:23:18 -0700
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
Message-ID: <COL402-EAS745A879FDD8D3BAB8216D7CDAF0@phx.gbl>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/457d008a/attachment.html>

From allen.piscitello at gmail.com  Wed Jun 24 17:24:32 2015
From: allen.piscitello at gmail.com (Allen Piscitello)
Date: Wed, 24 Jun 2015 12:24:32 -0500
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <COL402-EAS745A879FDD8D3BAB8216D7CDAF0@phx.gbl>
References: <COL402-EAS745A879FDD8D3BAB8216D7CDAF0@phx.gbl>
Message-ID: <CAJfRnm64tomNUL9u-YP2SHSsi=SOx21aVNLNE8N_2EyTez8D1Q@mail.gmail.com>

This is no different than any other soft fork.  Proper communication can
coordinate soft forks easily.

On Wed, Jun 24, 2015 at 12:23 PM, Raystonn <raystonn at hotmail.com> wrote:

> You really believe they would risk getting orphaned by skipping the longer
> chain, just to attempt to reduce average block size? No, that doesn't
> happen today. Laziness in leaving the default size is common. But that is
> not collusion, nor an attempt to manipulate the block sizes of other miners.
>  On 24 Jun 2015 10:05 am, Mark Friedenbach <mark at friedenbach.org> wrote:
>
> They do so by not building on larger blocks
> On Jun 23, 2015 9:31 PM, "Raystonn" <raystonn at hotmail.com> wrote:
>
> No, they can lower their own block sizes.  But they cannot currently lower
> the sizes of blocks mined by others.  That is not the same thing by any
> stretch of the imagination.
> On 23 Jun 2015 8:50 pm, Jeff Garzik <jgarzik at gmail.com> wrote:
>
> Miners can collude today to lower the block size limit.
>
> In fact, this largely happens already out of laziness - miners often
> follow the "soft" default limit set by Bitcoin Core, to the point where you
> can chart when miners upgrade to new software:
> http://hashingit.com/analysis/39-the-myth-of-the-megabyte-bitcoin-block
>
>
>
> On Tue, Jun 23, 2015 at 8:05 PM, William Madden <will.madden at novauri.com>
> wrote:
>
> Here are refutations of the approach in BIP-100 here:
> http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf
>
> To recap BIP-100:
>
> 1) Hard form to remove static 1MB block size limit
> 2) Add new floating block size limit set to 1MB
> 3) Historical 32MB message limit remains
> 4) Hard form on testnet 9/1/2015
> 5) Hard form on main 1/11/2016
> 6) 1MB limit changed via one-way lock in upgrade with a 12,000 block
> threshold by 90% of blocks
> 7) Limit increase or decrease may not exceed 2x in any one step
> 8) Miners vote by encoding 'BV'+BlockSizeRequestValue into coinbase
> scriptSig, e.g. "/BV8000000/" to vote for 8M.
> 9) Votes are evaluated by dropping bottom 20% and top 20%, and then the
> most common floor (minimum) is chosen.
>
> 8MB limits doubling just under every 2 years makes a static value grow
> in a predictable manner.
>
> BIP-100 makes a static value grow (or more importantly potentially
> shrink) in an unpredictable manner based on voting mechanics that are
> untested in this capacity in the bitcoin network.  Introducing a highly
> variable and untested dynamic into an already complex system is
> unnecessarily risky.
>
> For example, the largely arbitrary voting rules listed in 9 above can be
> gamed.  If I control pools or have affiliates involved in pools that
> mine slightly more than 20% of blocks, I could wait until block sizes
> are 10MB, and then suddenly vote "/BV5000000/" for 20% of blocks and
> "/BV5000001/" for the remaining 10%.  If others don't consistently vote
> for the same "/BV#/" value, vote too consistently and have their value
> thrown out as the top 20%, I could win the resize to half capacity
> "/BV5000001/" because it was the lowest repeated value not in the bottom
> 20%.
>
> I could use this to force an exodus to my sidechain/alt coin, or to
> choke out the bitcoin network.  A first improvement would be to only let
> BIP-100 raise the cap and not lower it, but if I can think of a
> vulnerability off the top of my head, there will be others on the other
> side of the equation that have not been thought of.  Why bother
> introducing a rube goldberg machine like voting when a simple 8mb cap
> with predictable growth gets the job done, potentially permanently?
>
>
> On 6/23/2015 9:43 PM, odinn wrote:
> > -----BEGIN PGP SIGNED MESSAGE-----
> > Hash: SHA1
> >
> > 1) Hard fork not (necessarily) needed
> > 2) See Garzik's BIP 100, better (this is not meant to say "superior to
> > your stuff," but rather simply to say, "Better you should work with
> > Garzik to implement BIP-100, that would be good")
> > 3) See points 1 and 2 above
> > 4) If still reading... changes should be (as you seem to have been
> > trying to lean towards)... lean towards gradual change; hence, changes
> > that would flow from this BIP would be better off oriented in a
> > process that dies not require the "way you have done it."
> >
> > You did address that, to be fair - in your TODO, this link:
> > http://gavinandresen.ninja/time-to-roll-out-bigger-blocks
> >
> > contained the following link:
> >
> > http://gavinandresen.ninja/bigger-blocks-another-way
> >
> > However, in reading that, I didn't see any meaningful statements that
> > would refute the approach in Garzik's BIP-100.
> >
> > Maybe a better way to say this is,
> >
> > Work with Jeff Garzik (which I am sure you are already having such
> > discussions in private) as well as the list discussions,
> > Move forward on BIP-100 with Garzik and other developers (not such a
> > bad plan really) and don't get caught up in XT.  (If you feel you can
> > develop XT further, that is your thing but it would perhaps make you
> > lose focus, work together with other developers.)
> >
> > Relax into the process.  Things will be ok.
> >
> > Respectfully,
> >
> > - -O
> >
> > On 06/22/2015 11:18 AM, Gavin Andresen wrote:
> >> I promised to write a BIP after I'd implemented
> >> increase-the-maximum-block-size code, so here it is. It also lives
> >> at:
> >> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki
> >>
> >>  I don't expect any proposal to please everybody; there are
> >> unavoidable tradeoffs to increasing the maximum block size. I
> >> prioritize implementation simplicity -- it is hard to write
> >> consensus-critical code, so simpler is better.
> >>
> >>
> >>
> >>
> >> BIP: ?? Title: Increase Maximum Block Size Author: Gavin Andresen
> >> <gavinandresen at gmail.com <mailto:gavinandresen at gmail.com>> Status:
> >> Draft Type: Standards Track Created: 2015-06-22
> >>
> >> ==Abstract==
> >>
> >> This BIP proposes replacing the fixed one megabyte maximum block
> >> size with a maximum size that grows over time at a predictable
> >> rate.
> >>
> >> ==Motivation==
> >>
> >> Transaction volume on the Bitcoin network has been growing, and
> >> will soon reach the one-megabyte-every-ten-minutes limit imposed by
> >> the one megabyte maximum block size. Increasing the maximum size
> >> reduces the impact of that limit on Bitcoin adoption and growth.
> >>
> >> ==Specification==
> >>
> >> After deployment on the network (see the Deployment section for
> >> details), the maximum allowed size of a block on the main network
> >> shall be calculated based on the timestamp in the block header.
> >>
> >> The maximum size shall be 8,000,000 bytes at a timestamp of
> >> 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double
> >> every 63,072,000 seconds (two years, ignoring leap years), until
> >> 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of
> >> blocks in between doublings will increase linearly based on the
> >> block's timestamp. The maximum size of blocks after 2036-01-06
> >> 00:00:00 UTC shall be 8,192,000,000 bytes.
> >>
> >> Expressed in pseudo-code, using integer math:
> >>
> >> function max_block_size(block_timestamp):
> >>
> >> time_start = 1452470400 time_double = 60*60*24*365*2 size_start =
> >> 8000000 if block_timestamp >= time_start+time_double*10 return
> >> size_start * 2^10
> >>
> >> // Piecewise-linear-between-doublings growth: time_delta =
> >> block_timestamp - t_start doublings = time_delta / time_double
> >> remainder = time_delta % time_double interpolate = (size_start *
> >> 2^doublings * remainder) / time_double max_size = size_start *
> >> 2^doublings + interpolate
> >>
> >> return max_size
> >>
> >> ==Deployment==
> >>
> >> Deployment shall be controlled by hash-power supermajority vote
> >> (similar to the technique used in BIP34), but the earliest possible
> >> activation time is 2016-01-11 00:00:00 UTC.
> >>
> >> Activation is achieved when 750 of 1,000 consecutive blocks in the
> >> best chain have a version number with bits 3 and 14 set (0x20000004
> >> in hex). The activation time will be the timestamp of the 750'th
> >> block plus a two week (1,209,600 second) grace period to give any
> >> remaining miners or services time to upgrade to support larger
> >> blocks. If a supermajority is achieved more than two weeks before
> >> 2016-01-11 00:00:00 UTC, the activation time will be 2016-01-11
> >> 00:00:00 UTC.
> >>
> >> Block version numbers are used only for activation; once activation
> >> is achieved, the maximum block size shall be as described in the
> >> specification section, regardless of the version number of the
> >> block.
> >>
> >>
> >> ==Rationale==
> >>
> >> The initial size of 8,000,000 bytes was chosen after testing the
> >> current reference implementation code with larger block sizes and
> >> receiving feedback from miners stuck behind bandwidth-constrained
> >> networks (in particular, Chinese miners behind the Great Firewall
> >> of China).
> >>
> >> The doubling interval was chosen based on long-term growth trends
> >> for CPU power, storage, and Internet bandwidth. The 20-year limit
> >> was chosen because exponential growth cannot continue forever.
> >>
> >> Calculations are based on timestamps and not blockchain height
> >> because a timestamp is part of every block's header. This allows
> >> implementations to know a block's maximum size after they have
> >> downloaded it's header, but before downloading any transactions.
> >>
> >> The deployment plan is taken from Jeff Garzik's proposed BIP100
> >> block size increase, and is designed to give miners, merchants,
> >> and full-node-running-end-users sufficient time to upgrade to
> >> software that supports bigger blocks. A 75% supermajority was
> >> chosen so that one large mining pool does not have effective veto
> >> power over a blocksize increase. The version number scheme is
> >> designed to be compatible with Pieter's Wuille's proposed "Version
> >> bits" BIP.
> >>
> >> TODO: summarize objections/arguments from
> >> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.
> >>
> >> TODO: describe other proposals and their advantages/disadvantages
> >> over this proposal.
> >>
> >>
> >> ==Compatibility==
> >>
> >> This is a hard-forking change to the Bitcoin protocol; anybody
> >> running code that fully validates blocks must upgrade before the
> >> activation time or they will risk rejecting a chain containing
> >> larger-than-one-megabyte blocks.
> >>
> >> Simplified Payment Verification software is not affected, unless
> >> it makes assumptions about the maximum depth of a transaction's
> >> merkle branch based on the minimum size of a transaction and the
> >> maximum block size.
> >>
> >> ==Implementation==
> >>
> >> https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork
> >>
> >>
> >>
> >> _______________________________________________ bitcoin-dev mailing
> >> list bitcoin-dev at lists.linuxfoundation.org
> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >>
> >
> > - --
> > http://abis.io ~
> > "a protocol concept to enable decentralization
> > and expansion of a giving economy, and a new social good"
> > https://keybase.io/odinn
> > -----BEGIN PGP SIGNATURE-----
> > Version: GnuPG v1
> >
> > iQEcBAEBAgAGBQJVigtJAAoJEGxwq/inSG8CqZwIAIG3ZQzekfccPxBOMqtim175
> > Crov6hrO9FaIzbLljECpUi60RKuDM/fs09ZJsKKIaJPkB5dlJjs4huc206veAIO+
> > K2h3DmAcA6W/Thk0C2cV3ewv+OiELDOhpeoddBBLPadAfaBGr4l9ltqWLdBtMCmw
> > OtmiWstEuXTao9ApgoFOmybdmCjbfrfhejOOHs/pMiSn5xVE60RK4x2HFTFsHfAN
> > fZAeLCuwuN2qWMrVrr+cbpCXjEuE1xZG3WEj7ppYoGR+AgF/Y5/U1j7S4PVpk85s
> > CgMkpcWvLnBMmSCrllnRZy1Gfrwk36Pg0rXD/l/NNd0/KTpmPSvkX/bCyzFwbzo=
> > =ft62
> > -----END PGP SIGNATURE-----
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/cb6e3180/attachment-0001.html>

From roy at gnomon.org.uk  Wed Jun 24 17:24:45 2015
From: roy at gnomon.org.uk (Roy Badami)
Date: Wed, 24 Jun 2015 18:24:45 +0100
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CAOG=w-uf3K+vW_zHXUm1utK7tR7osm_1hLMxw8gqkwm0Hn7d_A@mail.gmail.com>
References: <COL402-EAS813C9D07F7367E88D7219CDAF0@phx.gbl>
	<CAOG=w-uf3K+vW_zHXUm1utK7tR7osm_1hLMxw8gqkwm0Hn7d_A@mail.gmail.com>
Message-ID: <20150624172444.GC3192@giles.gnomon.org.uk>

Or put another way, lowering the block size limit (or cancelling an
increase) is a soft fork.  Like all soft forks, a majority of the hash
power can force the soft fork to take place.

On Wed, Jun 24, 2015 at 10:05:42AM -0700, Mark Friedenbach wrote:
> They do so by not building on larger blocks
> On Jun 23, 2015 9:31 PM, "Raystonn" <raystonn at hotmail.com> wrote:
> 
> > No, they can lower their own block sizes.  But they cannot currently lower
> > the sizes of blocks mined by others.  That is not the same thing by any
> > stretch of the imagination.
> > On 23 Jun 2015 8:50 pm, Jeff Garzik <jgarzik at gmail.com> wrote:
> >
> > Miners can collude today to lower the block size limit.
> >
> > In fact, this largely happens already out of laziness - miners often
> > follow the "soft" default limit set by Bitcoin Core, to the point where you
> > can chart when miners upgrade to new software:
> > http://hashingit.com/analysis/39-the-myth-of-the-megabyte-bitcoin-block
> >
> >
> >
> > On Tue, Jun 23, 2015 at 8:05 PM, William Madden <will.madden at novauri.com>
> > wrote:
> >
> > Here are refutations of the approach in BIP-100 here:
> > http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf
> >
> > To recap BIP-100:
> >
> > 1) Hard form to remove static 1MB block size limit
> > 2) Add new floating block size limit set to 1MB
> > 3) Historical 32MB message limit remains
> > 4) Hard form on testnet 9/1/2015
> > 5) Hard form on main 1/11/2016
> > 6) 1MB limit changed via one-way lock in upgrade with a 12,000 block
> > threshold by 90% of blocks
> > 7) Limit increase or decrease may not exceed 2x in any one step
> > 8) Miners vote by encoding 'BV'+BlockSizeRequestValue into coinbase
> > scriptSig, e.g. "/BV8000000/" to vote for 8M.
> > 9) Votes are evaluated by dropping bottom 20% and top 20%, and then the
> > most common floor (minimum) is chosen.
> >
> > 8MB limits doubling just under every 2 years makes a static value grow
> > in a predictable manner.
> >
> > BIP-100 makes a static value grow (or more importantly potentially
> > shrink) in an unpredictable manner based on voting mechanics that are
> > untested in this capacity in the bitcoin network.  Introducing a highly
> > variable and untested dynamic into an already complex system is
> > unnecessarily risky.
> >
> > For example, the largely arbitrary voting rules listed in 9 above can be
> > gamed.  If I control pools or have affiliates involved in pools that
> > mine slightly more than 20% of blocks, I could wait until block sizes
> > are 10MB, and then suddenly vote "/BV5000000/" for 20% of blocks and
> > "/BV5000001/" for the remaining 10%.  If others don't consistently vote
> > for the same "/BV#/" value, vote too consistently and have their value
> > thrown out as the top 20%, I could win the resize to half capacity
> > "/BV5000001/" because it was the lowest repeated value not in the bottom
> > 20%.
> >
> > I could use this to force an exodus to my sidechain/alt coin, or to
> > choke out the bitcoin network.  A first improvement would be to only let
> > BIP-100 raise the cap and not lower it, but if I can think of a
> > vulnerability off the top of my head, there will be others on the other
> > side of the equation that have not been thought of.  Why bother
> > introducing a rube goldberg machine like voting when a simple 8mb cap
> > with predictable growth gets the job done, potentially permanently?
> >
> >
> > On 6/23/2015 9:43 PM, odinn wrote:
> > > -----BEGIN PGP SIGNED MESSAGE-----
> > > Hash: SHA1
> > >
> > > 1) Hard fork not (necessarily) needed
> > > 2) See Garzik's BIP 100, better (this is not meant to say "superior to
> > > your stuff," but rather simply to say, "Better you should work with
> > > Garzik to implement BIP-100, that would be good")
> > > 3) See points 1 and 2 above
> > > 4) If still reading... changes should be (as you seem to have been
> > > trying to lean towards)... lean towards gradual change; hence, changes
> > > that would flow from this BIP would be better off oriented in a
> > > process that dies not require the "way you have done it."
> > >
> > > You did address that, to be fair - in your TODO, this link:
> > > http://gavinandresen.ninja/time-to-roll-out-bigger-blocks
> > >
> > > contained the following link:
> > >
> > > http://gavinandresen.ninja/bigger-blocks-another-way
> > >
> > > However, in reading that, I didn't see any meaningful statements that
> > > would refute the approach in Garzik's BIP-100.
> > >
> > > Maybe a better way to say this is,
> > >
> > > Work with Jeff Garzik (which I am sure you are already having such
> > > discussions in private) as well as the list discussions,
> > > Move forward on BIP-100 with Garzik and other developers (not such a
> > > bad plan really) and don't get caught up in XT.  (If you feel you can
> > > develop XT further, that is your thing but it would perhaps make you
> > > lose focus, work together with other developers.)
> > >
> > > Relax into the process.  Things will be ok.
> > >
> > > Respectfully,
> > >
> > > - -O
> > >
> > > On 06/22/2015 11:18 AM, Gavin Andresen wrote:
> > >> I promised to write a BIP after I'd implemented
> > >> increase-the-maximum-block-size code, so here it is. It also lives
> > >> at:
> > >> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki
> > >>
> > >>  I don't expect any proposal to please everybody; there are
> > >> unavoidable tradeoffs to increasing the maximum block size. I
> > >> prioritize implementation simplicity -- it is hard to write
> > >> consensus-critical code, so simpler is better.
> > >>
> > >>
> > >>
> > >>
> > >> BIP: ?? Title: Increase Maximum Block Size Author: Gavin Andresen
> > >> <gavinandresen at gmail.com <mailto:gavinandresen at gmail.com>> Status:
> > >> Draft Type: Standards Track Created: 2015-06-22
> > >>
> > >> ==Abstract==
> > >>
> > >> This BIP proposes replacing the fixed one megabyte maximum block
> > >> size with a maximum size that grows over time at a predictable
> > >> rate.
> > >>
> > >> ==Motivation==
> > >>
> > >> Transaction volume on the Bitcoin network has been growing, and
> > >> will soon reach the one-megabyte-every-ten-minutes limit imposed by
> > >> the one megabyte maximum block size. Increasing the maximum size
> > >> reduces the impact of that limit on Bitcoin adoption and growth.
> > >>
> > >> ==Specification==
> > >>
> > >> After deployment on the network (see the Deployment section for
> > >> details), the maximum allowed size of a block on the main network
> > >> shall be calculated based on the timestamp in the block header.
> > >>
> > >> The maximum size shall be 8,000,000 bytes at a timestamp of
> > >> 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double
> > >> every 63,072,000 seconds (two years, ignoring leap years), until
> > >> 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of
> > >> blocks in between doublings will increase linearly based on the
> > >> block's timestamp. The maximum size of blocks after 2036-01-06
> > >> 00:00:00 UTC shall be 8,192,000,000 bytes.
> > >>
> > >> Expressed in pseudo-code, using integer math:
> > >>
> > >> function max_block_size(block_timestamp):
> > >>
> > >> time_start = 1452470400 time_double = 60*60*24*365*2 size_start =
> > >> 8000000 if block_timestamp >= time_start+time_double*10 return
> > >> size_start * 2^10
> > >>
> > >> // Piecewise-linear-between-doublings growth: time_delta =
> > >> block_timestamp - t_start doublings = time_delta / time_double
> > >> remainder = time_delta % time_double interpolate = (size_start *
> > >> 2^doublings * remainder) / time_double max_size = size_start *
> > >> 2^doublings + interpolate
> > >>
> > >> return max_size
> > >>
> > >> ==Deployment==
> > >>
> > >> Deployment shall be controlled by hash-power supermajority vote
> > >> (similar to the technique used in BIP34), but the earliest possible
> > >> activation time is 2016-01-11 00:00:00 UTC.
> > >>
> > >> Activation is achieved when 750 of 1,000 consecutive blocks in the
> > >> best chain have a version number with bits 3 and 14 set (0x20000004
> > >> in hex). The activation time will be the timestamp of the 750'th
> > >> block plus a two week (1,209,600 second) grace period to give any
> > >> remaining miners or services time to upgrade to support larger
> > >> blocks. If a supermajority is achieved more than two weeks before
> > >> 2016-01-11 00:00:00 UTC, the activation time will be 2016-01-11
> > >> 00:00:00 UTC.
> > >>
> > >> Block version numbers are used only for activation; once activation
> > >> is achieved, the maximum block size shall be as described in the
> > >> specification section, regardless of the version number of the
> > >> block.
> > >>
> > >>
> > >> ==Rationale==
> > >>
> > >> The initial size of 8,000,000 bytes was chosen after testing the
> > >> current reference implementation code with larger block sizes and
> > >> receiving feedback from miners stuck behind bandwidth-constrained
> > >> networks (in particular, Chinese miners behind the Great Firewall
> > >> of China).
> > >>
> > >> The doubling interval was chosen based on long-term growth trends
> > >> for CPU power, storage, and Internet bandwidth. The 20-year limit
> > >> was chosen because exponential growth cannot continue forever.
> > >>
> > >> Calculations are based on timestamps and not blockchain height
> > >> because a timestamp is part of every block's header. This allows
> > >> implementations to know a block's maximum size after they have
> > >> downloaded it's header, but before downloading any transactions.
> > >>
> > >> The deployment plan is taken from Jeff Garzik's proposed BIP100
> > >> block size increase, and is designed to give miners, merchants,
> > >> and full-node-running-end-users sufficient time to upgrade to
> > >> software that supports bigger blocks. A 75% supermajority was
> > >> chosen so that one large mining pool does not have effective veto
> > >> power over a blocksize increase. The version number scheme is
> > >> designed to be compatible with Pieter's Wuille's proposed "Version
> > >> bits" BIP.
> > >>
> > >> TODO: summarize objections/arguments from
> > >> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.
> > >>
> > >> TODO: describe other proposals and their advantages/disadvantages
> > >> over this proposal.
> > >>
> > >>
> > >> ==Compatibility==
> > >>
> > >> This is a hard-forking change to the Bitcoin protocol; anybody
> > >> running code that fully validates blocks must upgrade before the
> > >> activation time or they will risk rejecting a chain containing
> > >> larger-than-one-megabyte blocks.
> > >>
> > >> Simplified Payment Verification software is not affected, unless
> > >> it makes assumptions about the maximum depth of a transaction's
> > >> merkle branch based on the minimum size of a transaction and the
> > >> maximum block size.
> > >>
> > >> ==Implementation==
> > >>
> > >> https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork
> > >>
> > >>
> > >>
> > >> _______________________________________________ bitcoin-dev mailing
> > >> list bitcoin-dev at lists.linuxfoundation.org
> > >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > >>
> > >
> > > - --
> > > http://abis.io ~
> > > "a protocol concept to enable decentralization
> > > and expansion of a giving economy, and a new social good"
> > > https://keybase.io/odinn
> > > -----BEGIN PGP SIGNATURE-----
> > > Version: GnuPG v1
> > >
> > > iQEcBAEBAgAGBQJVigtJAAoJEGxwq/inSG8CqZwIAIG3ZQzekfccPxBOMqtim175
> > > Crov6hrO9FaIzbLljECpUi60RKuDM/fs09ZJsKKIaJPkB5dlJjs4huc206veAIO+
> > > K2h3DmAcA6W/Thk0C2cV3ewv+OiELDOhpeoddBBLPadAfaBGr4l9ltqWLdBtMCmw
> > > OtmiWstEuXTao9ApgoFOmybdmCjbfrfhejOOHs/pMiSn5xVE60RK4x2HFTFsHfAN
> > > fZAeLCuwuN2qWMrVrr+cbpCXjEuE1xZG3WEj7ppYoGR+AgF/Y5/U1j7S4PVpk85s
> > > CgMkpcWvLnBMmSCrllnRZy1Gfrwk36Pg0rXD/l/NNd0/KTpmPSvkX/bCyzFwbzo=
> > > =ft62
> > > -----END PGP SIGNATURE-----
> > > _______________________________________________
> > > bitcoin-dev mailing list
> > > bitcoin-dev at lists.linuxfoundation.org
> > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > >
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
> >
> >
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
> >

> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


From roy at gnomon.org.uk  Wed Jun 24 17:28:47 2015
From: roy at gnomon.org.uk (Roy Badami)
Date: Wed, 24 Jun 2015 18:28:47 +0100
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <COL402-EAS745A879FDD8D3BAB8216D7CDAF0@phx.gbl>
References: <COL402-EAS745A879FDD8D3BAB8216D7CDAF0@phx.gbl>
Message-ID: <20150624172847.GD3192@giles.gnomon.org.uk>

60% of the hashrate can easily agree to force a softfork which reduces
the block size.  As soon as the fork occurs, there is a very strong
incentive for all the remaining 40% to go along with it: if they
don't, they're mining worthless blocks.

They can use a BIP-34 style mechanism to trigger the fork so there's
negligible risk to the miners.

On Wed, Jun 24, 2015 at 10:23:18AM -0700, Raystonn wrote:
> <p dir="ltr">You really believe they would risk getting orphaned by skipping the longer chain, just to attempt to reduce average block size? No, that doesn't happen today. Laziness in leaving the default size is common. But that is not collusion, nor an attempt to manipulate the block sizes of other miners.<br>
> </p>
> <div class="gmail_quote">On 24 Jun 2015 10:05 am, Mark Friedenbach &lt;mark at friedenbach.org&gt; wrote:<br type='attribution'><blockquote class="quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><p dir="ltr">They do so by not building on larger blocks</p>
> <div class="elided-text">On Jun 23, 2015 9:31 PM, &#34;Raystonn&#34; &lt;<a href="mailto:raystonn&#64;hotmail.com">raystonn&#64;hotmail.com</a>&gt; wrote:<br /><blockquote style="margin:0 0 0 0.8ex;border-left:1px #ccc solid;padding-left:1ex"><p dir="ltr">No, they can lower their own block sizes.?? But they cannot currently lower the sizes of blocks mined by others.?? That is not the same thing by any stretch of the imagination.</p>
> <div class="elided-text">On 23 Jun 2015 8:50 pm, Jeff Garzik &lt;<a href="mailto:jgarzik&#64;gmail.com">jgarzik&#64;gmail.com</a>&gt; wrote:<br /><blockquote style="margin:0 0 0 0.8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr">Miners can collude today to lower the block size limit.<div><br /></div><div>In fact, this largely happens already out of laziness - miners often follow the &#34;soft&#34; default limit set by Bitcoin Core, to the point where you can chart when miners upgrade to new software:??<a href="http://hashingit.com/analysis/39-the-myth-of-the-megabyte-bitcoin-block">http://hashingit.com/analysis/39-the-myth-of-the-megabyte-bitcoin-block</a></div><div><br /></div><div><br /></div></div><div><br /><div>On Tue, Jun 23, 2015 at 8:05 PM, William Madden <span dir="ltr">&lt;<a href="mailto:will.madden&#64;novauri.com">will.madden&#64;novauri.com</a>&gt;</span> wrote:<br /><blockquote style="margin:0 0 0 0.8ex;border-left:1px #ccc solid;padding-left:1ex">Here are refutations of the approach in BIP-100 here:<br />
> <a href="http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf">http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf</a><br />
> <br />
> To recap BIP-100:<br />
> <br />
> 1) Hard form to remove static 1MB block size limit<br />
> 2) Add new floating block size limit set to 1MB<br />
> 3) Historical 32MB message limit remains<br />
> 4) Hard form on testnet 9/1/2015<br />
> 5) Hard form on main 1/11/2016<br />
> 6) 1MB limit changed via one-way lock in upgrade with a 12,000 block<br />
> threshold by 90% of blocks<br />
> 7) Limit increase or decrease may not exceed 2x in any one step<br />
> 8) Miners vote by encoding &#39;BV&#39;&#43;BlockSizeRequestValue into coinbase<br />
> scriptSig, e.g. &#34;/BV8000000/&#34; to vote for 8M.<br />
> 9) Votes are evaluated by dropping bottom 20% and top 20%, and then the<br />
> most common floor (minimum) is chosen.<br />
> <br />
> 8MB limits doubling just under every 2 years makes a static value grow<br />
> in a predictable manner.<br />
> <br />
> BIP-100 makes a static value grow (or more importantly potentially<br />
> shrink) in an unpredictable manner based on voting mechanics that are<br />
> untested in this capacity in the bitcoin network.?? Introducing a highly<br />
> variable and untested dynamic into an already complex system is<br />
> unnecessarily risky.<br />
> <br />
> For example, the largely arbitrary voting rules listed in 9 above can be<br />
> gamed.?? If I control pools or have affiliates involved in pools that<br />
> mine slightly more than 20% of blocks, I could wait until block sizes<br />
> are 10MB, and then suddenly vote &#34;/BV5000000/&#34; for 20% of blocks and<br />
> &#34;/BV5000001/&#34; for the remaining 10%.?? If others don&#39;t consistently vote<br />
> for the same &#34;/BV#/&#34; value, vote too consistently and have their value<br />
> thrown out as the top 20%, I could win the resize to half capacity<br />
> &#34;/BV5000001/&#34; because it was the lowest repeated value not in the bottom<br />
> 20%.<br />
> <br />
> I could use this to force an exodus to my sidechain/alt coin, or to<br />
> choke out the bitcoin network.?? A first improvement would be to only let<br />
> BIP-100 raise the cap and not lower it, but if I can think of a<br />
> vulnerability off the top of my head, there will be others on the other<br />
> side of the equation that have not been thought of.?? Why bother<br />
> introducing a rube goldberg machine like voting when a simple 8mb cap<br />
> with predictable growth gets the job done, potentially permanently?<br />
> <div><div><br />
> <br />
> On 6/23/2015 9:43 PM, odinn wrote:<br />
> &gt; -----BEGIN PGP SIGNED MESSAGE-----<br />
> &gt; Hash: SHA1<br />
> &gt;<br />
> &gt; 1) Hard fork not (necessarily) needed<br />
> &gt; 2) See Garzik&#39;s BIP 100, better (this is not meant to say &#34;superior to<br />
> &gt; your stuff,&#34; but rather simply to say, &#34;Better you should work with<br />
> &gt; Garzik to implement BIP-100, that would be good&#34;)<br />
> &gt; 3) See points 1 and 2 above<br />
> &gt; 4) If still reading... changes should be (as you seem to have been<br />
> &gt; trying to lean towards)... lean towards gradual change; hence, changes<br />
> &gt; that would flow from this BIP would be better off oriented in a<br />
> &gt; process that dies not require the &#34;way you have done it.&#34;<br />
> &gt;<br />
> &gt; You did address that, to be fair - in your TODO, this link:<br />
> &gt; <a href="http://gavinandresen.ninja/time-to-roll-out-bigger-blocks">http://gavinandresen.ninja/time-to-roll-out-bigger-blocks</a><br />
> &gt;<br />
> &gt; contained the following link:<br />
> &gt;<br />
> &gt; <a href="http://gavinandresen.ninja/bigger-blocks-another-way">http://gavinandresen.ninja/bigger-blocks-another-way</a><br />
> &gt;<br />
> &gt; However, in reading that, I didn&#39;t see any meaningful statements that<br />
> &gt; would refute the approach in Garzik&#39;s BIP-100.<br />
> &gt;<br />
> &gt; Maybe a better way to say this is,<br />
> &gt;<br />
> &gt; Work with Jeff Garzik (which I am sure you are already having such<br />
> &gt; discussions in private) as well as the list discussions,<br />
> &gt; Move forward on BIP-100 with Garzik and other developers (not such a<br />
> &gt; bad plan really) and don&#39;t get caught up in XT.?? (If you feel you can<br />
> &gt; develop XT further, that is your thing but it would perhaps make you<br />
> &gt; lose focus, work together with other developers.)<br />
> &gt;<br />
> &gt; Relax into the process.?? Things will be ok.<br />
> &gt;<br />
> &gt; Respectfully,<br />
> &gt;<br />
> &gt; - -O<br />
> &gt;<br />
> &gt; On 06/22/2015 11:18 AM, Gavin Andresen wrote:<br />
> &gt;&gt; I promised to write a BIP after I&#39;d implemented<br />
> &gt;&gt; increase-the-maximum-block-size code, so here it is. It also lives<br />
> &gt;&gt; at:<br />
> &gt;&gt; <a href="https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki">https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki</a><br />
> &gt;&gt;<br />
> &gt;&gt;?? I don&#39;t expect any proposal to please everybody; there are<br />
> &gt;&gt; unavoidable tradeoffs to increasing the maximum block size. I<br />
> &gt;&gt; prioritize implementation simplicity -- it is hard to write<br />
> &gt;&gt; consensus-critical code, so simpler is better.<br />
> &gt;&gt;<br />
> &gt;&gt;<br />
> &gt;&gt;<br />
> &gt;&gt;<br />
> &gt;&gt; BIP: ?? Title: Increase Maximum Block Size Author: Gavin Andresen<br />
> &gt;&gt; &lt;<a href="mailto:gavinandresen&#64;gmail.com">gavinandresen&#64;gmail.com</a> &lt;mailto:<a href="mailto:gavinandresen&#64;gmail.com">gavinandresen&#64;gmail.com</a>&gt;&gt; Status:<br />
> &gt;&gt; Draft Type: Standards Track Created: 2015-06-22<br />
> &gt;&gt;<br />
> &gt;&gt; &#61;&#61;Abstract&#61;&#61;<br />
> &gt;&gt;<br />
> &gt;&gt; This BIP proposes replacing the fixed one megabyte maximum block<br />
> &gt;&gt; size with a maximum size that grows over time at a predictable<br />
> &gt;&gt; rate.<br />
> &gt;&gt;<br />
> &gt;&gt; &#61;&#61;Motivation&#61;&#61;<br />
> &gt;&gt;<br />
> &gt;&gt; Transaction volume on the Bitcoin network has been growing, and<br />
> &gt;&gt; will soon reach the one-megabyte-every-ten-minutes limit imposed by<br />
> &gt;&gt; the one megabyte maximum block size. Increasing the maximum size<br />
> &gt;&gt; reduces the impact of that limit on Bitcoin adoption and growth.<br />
> &gt;&gt;<br />
> &gt;&gt; &#61;&#61;Specification&#61;&#61;<br />
> &gt;&gt;<br />
> &gt;&gt; After deployment on the network (see the Deployment section for<br />
> &gt;&gt; details), the maximum allowed size of a block on the main network<br />
> &gt;&gt; shall be calculated based on the timestamp in the block header.<br />
> &gt;&gt;<br />
> &gt;&gt; The maximum size shall be 8,000,000 bytes at a timestamp of<br />
> &gt;&gt; 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double<br />
> &gt;&gt; every 63,072,000 seconds (two years, ignoring leap years), until<br />
> &gt;&gt; 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of<br />
> &gt;&gt; blocks in between doublings will increase linearly based on the<br />
> &gt;&gt; block&#39;s timestamp. The maximum size of blocks after 2036-01-06<br />
> &gt;&gt; 00:00:00 UTC shall be 8,192,000,000 bytes.<br />
> &gt;&gt;<br />
> &gt;&gt; Expressed in pseudo-code, using integer math:<br />
> &gt;&gt;<br />
> &gt;&gt; function max_block_size(block_timestamp):<br />
> &gt;&gt;<br />
> &gt;&gt; time_start &#61; 1452470400 time_double &#61; 60*60*24*365*2 size_start &#61;<br />
> &gt;&gt; 8000000 if block_timestamp &gt;&#61; time_start&#43;time_double*10 return<br />
> &gt;&gt; size_start * 2^10<br />
> &gt;&gt;<br />
> &gt;&gt; // Piecewise-linear-between-doublings growth: time_delta &#61;<br />
> &gt;&gt; block_timestamp - t_start doublings &#61; time_delta / time_double<br />
> &gt;&gt; remainder &#61; time_delta % time_double interpolate &#61; (size_start *<br />
> &gt;&gt; 2^doublings * remainder) / time_double max_size &#61; size_start *<br />
> &gt;&gt; 2^doublings &#43; interpolate<br />
> &gt;&gt;<br />
> &gt;&gt; return max_size<br />
> &gt;&gt;<br />
> &gt;&gt; &#61;&#61;Deployment&#61;&#61;<br />
> &gt;&gt;<br />
> &gt;&gt; Deployment shall be controlled by hash-power supermajority vote<br />
> &gt;&gt; (similar to the technique used in BIP34), but the earliest possible<br />
> &gt;&gt; activation time is 2016-01-11 00:00:00 UTC.<br />
> &gt;&gt;<br />
> &gt;&gt; Activation is achieved when 750 of 1,000 consecutive blocks in the<br />
> &gt;&gt; best chain have a version number with bits 3 and 14 set (0x20000004<br />
> &gt;&gt; in hex). The activation time will be the timestamp of the 750&#39;th<br />
> &gt;&gt; block plus a two week (1,209,600 second) grace period to give any<br />
> &gt;&gt; remaining miners or services time to upgrade to support larger<br />
> &gt;&gt; blocks. If a supermajority is achieved more than two weeks before<br />
> &gt;&gt; 2016-01-11 00:00:00 UTC, the activation time will be 2016-01-11<br />
> &gt;&gt; 00:00:00 UTC.<br />
> &gt;&gt;<br />
> &gt;&gt; Block version numbers are used only for activation; once activation<br />
> &gt;&gt; is achieved, the maximum block size shall be as described in the<br />
> &gt;&gt; specification section, regardless of the version number of the<br />
> &gt;&gt; block.<br />
> &gt;&gt;<br />
> &gt;&gt;<br />
> &gt;&gt; &#61;&#61;Rationale&#61;&#61;<br />
> &gt;&gt;<br />
> &gt;&gt; The initial size of 8,000,000 bytes was chosen after testing the<br />
> &gt;&gt; current reference implementation code with larger block sizes and<br />
> &gt;&gt; receiving feedback from miners stuck behind bandwidth-constrained<br />
> &gt;&gt; networks (in particular, Chinese miners behind the Great Firewall<br />
> &gt;&gt; of China).<br />
> &gt;&gt;<br />
> &gt;&gt; The doubling interval was chosen based on long-term growth trends<br />
> &gt;&gt; for CPU power, storage, and Internet bandwidth. The 20-year limit<br />
> &gt;&gt; was chosen because exponential growth cannot continue forever.<br />
> &gt;&gt;<br />
> &gt;&gt; Calculations are based on timestamps and not blockchain height<br />
> &gt;&gt; because a timestamp is part of every block&#39;s header. This allows<br />
> &gt;&gt; implementations to know a block&#39;s maximum size after they have<br />
> &gt;&gt; downloaded it&#39;s header, but before downloading any transactions.<br />
> &gt;&gt;<br />
> &gt;&gt; The deployment plan is taken from Jeff Garzik&#39;s proposed BIP100<br />
> &gt;&gt; block size increase, and is designed to give miners, merchants,<br />
> &gt;&gt; and full-node-running-end-users sufficient time to upgrade to<br />
> &gt;&gt; software that supports bigger blocks. A 75% supermajority was<br />
> &gt;&gt; chosen so that one large mining pool does not have effective veto<br />
> &gt;&gt; power over a blocksize increase. The version number scheme is<br />
> &gt;&gt; designed to be compatible with Pieter&#39;s Wuille&#39;s proposed &#34;Version<br />
> &gt;&gt; bits&#34; BIP.<br />
> &gt;&gt;<br />
> &gt;&gt; TODO: summarize objections/arguments from<br />
> &gt;&gt; <a href="http://gavinandresen.ninja/time-to-roll-out-bigger-blocks">http://gavinandresen.ninja/time-to-roll-out-bigger-blocks</a>.<br />
> &gt;&gt;<br />
> &gt;&gt; TODO: describe other proposals and their advantages/disadvantages<br />
> &gt;&gt; over this proposal.<br />
> &gt;&gt;<br />
> &gt;&gt;<br />
> &gt;&gt; &#61;&#61;Compatibility&#61;&#61;<br />
> &gt;&gt;<br />
> &gt;&gt; This is a hard-forking change to the Bitcoin protocol; anybody<br />
> &gt;&gt; running code that fully validates blocks must upgrade before the<br />
> &gt;&gt; activation time or they will risk rejecting a chain containing<br />
> &gt;&gt; larger-than-one-megabyte blocks.<br />
> &gt;&gt;<br />
> &gt;&gt; Simplified Payment Verification software is not affected, unless<br />
> &gt;&gt; it makes assumptions about the maximum depth of a transaction&#39;s<br />
> &gt;&gt; merkle branch based on the minimum size of a transaction and the<br />
> &gt;&gt; maximum block size.<br />
> &gt;&gt;<br />
> &gt;&gt; &#61;&#61;Implementation&#61;&#61;<br />
> &gt;&gt;<br />
> &gt;&gt; <a href="https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork">https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork</a><br />
> &gt;&gt;<br />
> &gt;&gt;<br />
> &gt;&gt;<br />
> &gt;&gt; _______________________________________________ bitcoin-dev mailing<br />
> &gt;&gt; list <a href="mailto:bitcoin-dev&#64;lists.linuxfoundation.org">bitcoin-dev&#64;lists.linuxfoundation.org</a><br />
> &gt;&gt; <a href="https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev">https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev</a><br />
> &gt;&gt;<br />
> &gt;<br />
> &gt; - --<br />
> &gt; <a href="http://abis.io">http://abis.io</a> ~<br />
> &gt; &#34;a protocol concept to enable decentralization<br />
> &gt; and expansion of a giving economy, and a new social good&#34;<br />
> &gt; <a href="https://keybase.io/odinn">https://keybase.io/odinn</a><br />
> &gt; -----BEGIN PGP SIGNATURE-----<br />
> &gt; Version: GnuPG v1<br />
> &gt;<br />
> &gt; iQEcBAEBAgAGBQJVigtJAAoJEGxwq/inSG8CqZwIAIG3ZQzekfccPxBOMqtim175<br />
> &gt; Crov6hrO9FaIzbLljECpUi60RKuDM/fs09ZJsKKIaJPkB5dlJjs4huc206veAIO&#43;<br />
> &gt; K2h3DmAcA6W/Thk0C2cV3ewv&#43;OiELDOhpeoddBBLPadAfaBGr4l9ltqWLdBtMCmw<br />
> &gt; OtmiWstEuXTao9ApgoFOmybdmCjbfrfhejOOHs/pMiSn5xVE60RK4x2HFTFsHfAN<br />
> &gt; fZAeLCuwuN2qWMrVrr&#43;cbpCXjEuE1xZG3WEj7ppYoGR&#43;AgF/Y5/U1j7S4PVpk85s<br />
> &gt; CgMkpcWvLnBMmSCrllnRZy1Gfrwk36Pg0rXD/l/NNd0/KTpmPSvkX/bCyzFwbzo&#61;<br />
> &gt; &#61;ft62<br />
> &gt; -----END PGP SIGNATURE-----<br />
> &gt; _______________________________________________<br />
> &gt; bitcoin-dev mailing list<br />
> &gt; <a href="mailto:bitcoin-dev&#64;lists.linuxfoundation.org">bitcoin-dev&#64;lists.linuxfoundation.org</a><br />
> &gt; <a href="https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev">https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev</a><br />
> &gt;<br />
> _______________________________________________<br />
> bitcoin-dev mailing list<br />
> <a href="mailto:bitcoin-dev&#64;lists.linuxfoundation.org">bitcoin-dev&#64;lists.linuxfoundation.org</a><br />
> <a href="https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev">https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev</a><br />
> </div></div></blockquote></div><br /></div>
> </blockquote></div><br />_______________________________________________<br />
> bitcoin-dev mailing list<br />
> <a href="mailto:bitcoin-dev&#64;lists.linuxfoundation.org">bitcoin-dev&#64;lists.linuxfoundation.org</a><br />
> <a href="https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev">https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev</a><br />
> <br /></blockquote></div>
> </blockquote></div>

> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


From jameson.lopp at gmail.com  Wed Jun 24 19:36:33 2015
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Wed, 24 Jun 2015 15:36:33 -0400
Subject: [bitcoin-dev] Announcing Individual User Accounts at statoshi.info
Message-ID: <558B06C1.1040409@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I'm pleased to announce support for creating individual accounts on https://statoshi.info so that devs can create, save, and share their own dashboards. If you want to create an account for yourself, follow these instructions: https://medium.com/@lopp/statoshi-info-account-creation-guide-8033b745a5b7

If you're unfamiliar with Statoshi, check out these two posts:

https://medium.com/@lopp/announcing-statoshi-realtime-bitcoin-node-statistics-61457f07ee87

https://medium.com/@lopp/announcing-statoshi-info-5c377997b30c

My goal with Statoshi is to provide insight into the operations of Bitcoin Core nodes. If there are any metrics or instrumentation that you think should be added to Statoshi, please submit an issue or a pull request at https://github.com/jlopp/statoshi

- --
Jameson Lopp
Software Engineer
BitGo, Inc
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJViwbBAAoJEIch3FSFNiDcrs4IAKssrsgi+KoD4mHB3duIbTae
eeQ3G1obCmnz6gK/nuS/1L6ywYSzQ5rhfHpZeN/ZKVPyRrIGpWh8PPD9QYa19NyS
uJFeuvWtbNEkQmKtWQeXFyf265QqehTayAZkW4S9HdlnC8zfQ+E/b6Zs4KA7ZaPa
/psIcgCGWmdbegIB2Cqqg2xqlIori5oEHlLsA449u5i5d5X0pw+COtLxL2LKG5Bd
mDaGBheSbsO1yzg98ey9+mWMEZXs6w9JUGdvoIkDHYnyVy1ws2oa6qyGblXF4nQS
mwD1VnXtOOZmqORT4HwIFSItFEoAagdM5RlhtqGwa4OfUIfEae4fkghZ0JDzC20=
=k/Sc
-----END PGP SIGNATURE-----

From kristovatlas.lists at gmail.com  Wed Jun 24 22:09:32 2015
From: kristovatlas.lists at gmail.com (Kristov Atlas)
Date: Wed, 24 Jun 2015 18:09:32 -0400
Subject: [bitcoin-dev] [Bitcoin-development] [RFC] Canonical input and
 output ordering in transactions
In-Reply-To: <CAGH37S+674cAVC7=WvST_SPkXjfNkzbj7Y_me_M6C+ieHX6EAA@mail.gmail.com>
References: <87k2vhfnx9.fsf@rustcorp.com.au>
	<CAAS2fgRgWZX_O_2O1bgdFd_04xVp5Lnpw4hf=v6RSTXmsbdzPQ@mail.gmail.com>
	<CAGH37S+674cAVC7=WvST_SPkXjfNkzbj7Y_me_M6C+ieHX6EAA@mail.gmail.com>
Message-ID: <CAGH37SJxUsGQU_WjnQE4N3=hPeOtNHUyTStkajeMK6h6OBCjow@mail.gmail.com>

Following up on this topic...

gmaxwell has reserved BIP 69 for my proposal.

It has been implemented by Electrum in v2.3.2:
https://github.com/spesmilo/electrum/blob/master/RELEASE-NOTES

Rusty has kindly tweaked his original canonical ordering proposal
implementation for Bitcoin Core's wallet client to fit my proposal:
https://github.com/rustyrussell/bitcoin/tree/bip-69 (needs testing)

Outstanding objections appear to me to boil down to two points:

1) Some transactions cannot comply with this BIP because there are input
and/or put index dependencies.

My response: No big deal, it's informational. They simply won't be
compliant with the BIP, and that's fine with me.

2) If we set a standard now for transactions that is not apparently random
ordering from the perspective of passive blockchain observers, transactions
that can't comply with this BIP will stand out. Also, if we change our
collective minds in the future about how ordering should be handled, those
future transactions would stand out. Therefore, the "safe" course of action
is to come up with another scheme that appears to be random ordering from
the perspective of a passive blockchain observer.

My response: Apparently-random but owner-verifiable ordering is doable.
Discussion of this has revolved around what I have called a "sorting key"
-- sort lexicographically, and then reorder according to the bits in a
sorting key that is impossible to predict by an attacker. This means
passive observers cannot determine anything meaningful about the
transaction (e.g. which output is change, information leaked based on utxo
selection algorithm for inputs, etc.) but the owner of the funds and the
sorting key can verify that his transaction matches the canonical
specification. Ideally, I think the key should rotate for each transaction
to avoid the possibility that a static key can link multiple transactions
together. The key should be rotated in such a fashion that the next
iteration is not predictable to anyone except the key holder (e.g. put the
key through a secure pseudo-random function for each new iteration). This
could be done by generating a few bytes of entropy upon wallet creation and
keeping track of the current iteration of rotation. HD wallets could derive
the initial state of the sorting key by deriving it from the HD seed. There
are a variety of schemes that could work here.

My main objection to this family of approaches at present is complexity. I
suspect that many wallet clients will not want to implement the BIP if they
have to maintain a sorting key.

A second objection is that no one will be able to detect anomalies in BIP
compliance except for the sorting key holder. Most users probably will not
bother to verify this. For code reviewers, this means that the sorting key
is yet another aspect of the code base that must be scrutinized to ensure
it is not being used as a covert channel or has been underhandedly weakened
in some fashion.

Also, I will mention an ancillary benefit of a non-random canonical
ordering: it makes unit testing of transactions for Bitcoin wallets simpler.

Given all of the above, I will reiterate my preference to keep the proposal
as it is now. The pull request is here:
https://github.com/bitcoin/bips/pull/157

If there is market demand for it, a separate sorting key-based proposal
could be written which can compete with this BIP and over time successfully
deprecate it. I would currently envision that as an HD BIP with a new
purpose code.

-Kristov


On Mon, Jun 15, 2015 at 12:01 AM, Kristov Atlas <
kristovatlas.lists at gmail.com> wrote:

> On Sun, Jun 14, 2015 at 7:02 PM, Gregory Maxwell <gmaxwell at gmail.com>
> wrote:
>
>> I'm not a great fan of this proposal for two reasons: The first is
>> that the strict ordering requirements is incompatible with future
>> soft-forks that may expose additional ordering constraints. Today we
>> have _SINGLE, which as noted this interacts with poorly, but there
>> have been other constraints proposed that this would also interact
>> with poorly.
>>
>
> I'm not clear on why this is a problem, so long as the canonical ordering
> BIP is *optional*. Unless there is a specific plan to soft fork a change
> that would break the BIP and it is fairly imminent, I see this only as a
> reason not to integrate it into isStandard().
>
>
>> The second is that even absent consensus rules there may be invisible
>> constraints in systems-- e.g. hardware wallets that sign top down, or
>> future transaction covenants that have constraints about ordering,  or
>> proof systems that use (yuck) midstate compression for efficiency. Right
>> now, with random ordering these applications are fairly
>> indistinguishable from other random uses (since their imposed order
>> could come about by chance) but if everyone else was ordered, even if
>> wasn't enforced.. these would be highly distinguishable. Which would
>> be unfortunate.
>
>
> Maybe they shouldn't be doing that. :-P
>
>
>> I think perhaps the motivations here are understated. We have not seen
>> any massive deployments of accidentally broken ordering that I'm aware
>> of-- and an implementation that got this wrong in a harmful way would
>> likely make far more fatal mistakes (e.g. non random private keys).
>>
>
> In my reading of various wallet client sources, it is common that wallet
> clients will use cryptographically weak sources of randomness to sort
> outputs -- that is, the ones that actually bother to randomly sort. I can
> hunt down some examples if this would substantially contribute to the
> discussion.
>
> As an alternative to this proposal the ordering can be privately
>> derandomized in the same way DSA is, to avoid the need for an actual
>> number source.  If getting the randomness right were really the only
>> motivation, I'd suggest we propose a simple derandomized randomization
>> algorithm--- e.g. take the order from (H(input ids||client secret)).
>>
>
> This sounds similar to an idea that Sergio pitched to me privately, which
> was for wallets to have a private sorting key that they can use to sort
> inputs and outputs. However, I suspect that adding yet another key which
> will necessarily require special key rotation rules and maybe special
> backup procedures will mean that this standard will not be widely adopted
> any time soon. Ideally, I'd like to see someone write a different BIP with
> the sorting key idea and let them compete in the wallet client market
> rather than trying to anticipate what is best for all clients and
> distilling two good ideas into one artificially.
>
> -Kristov
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/b1579282/attachment.html>

From raystonn at hotmail.com  Wed Jun 24 23:41:10 2015
From: raystonn at hotmail.com (Raystonn)
Date: Wed, 24 Jun 2015 16:41:10 -0700
Subject: [bitcoin-dev]  BIP Process and Votes
Message-ID: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>

I would like to start a civil discussion on an undefined, or at least unwritten, portion of the BIP process.  Who should get to vote on approval to commit a BIP implementation into Bitcoin Core?  Is a simple majority of these voters sufficient for approval?  If not, then what is?

Raystonn

From jgarzik at gmail.com  Wed Jun 24 23:49:25 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Wed, 24 Jun 2015 16:49:25 -0700
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
Message-ID: <CADm_WcYZ-O3fhm5bNCBF_mkAES+vVxsOGFtpovqgt9v9sY4TZA@mail.gmail.com>

BIPs  are accepted into BIP repo with a low "reasonable" threshold.

Code is accepted into the Bitcoin Core repo when it is likely that the
community will accept a change.

There is no voting in the way you think. Devs commit changes the users will
accept and use. Users "fire" developers by choosing different devs or
different software.

Standard open source method.
 On Jun 24, 2015 4:41 PM, "Raystonn" <raystonn at hotmail.com> wrote:

> I would like to start a civil discussion on an undefined, or at least
> unwritten, portion of the BIP process.  Who should get to vote on approval
> to commit a BIP implementation into Bitcoin Core?  Is a simple majority of
> these voters sufficient for approval?  If not, then what is?
>
> Raystonn
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/5eae6595/attachment-0001.html>

From kanzure at gmail.com  Thu Jun 25 00:11:53 2015
From: kanzure at gmail.com (Bryan Bishop)
Date: Wed, 24 Jun 2015 19:11:53 -0500
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CADm_WcYZ-O3fhm5bNCBF_mkAES+vVxsOGFtpovqgt9v9sY4TZA@mail.gmail.com>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<CADm_WcYZ-O3fhm5bNCBF_mkAES+vVxsOGFtpovqgt9v9sY4TZA@mail.gmail.com>
Message-ID: <CABaSBazNkcQZiBAyDRAR=Ux1=hzT+GwXHTCiMgditJ48as-CGg@mail.gmail.com>

On Wed, Jun 24, 2015 at 6:49 PM, Jeff Garzik <jgarzik at gmail.com> wrote:

> There is no voting in the way you think. Devs commit changes the users
> will accept and use. Users "fire" developers by choosing different devs or
> different software.


I think that statement is too weak. Users are all personally responsible
for evaluating all rules for themselves. Many have chosen and will continue
to choose to just keep an ear out for rule changes that they may be
interested in using. Ever user should be educated on this topic...
otherwise there are too many principal agent problems, even with the
ability to "fire" developers (a.k.a "use different software"). It's similar
to the reasons why it's important to see all the transactions on the
network.

- Bryan
http://heybryan.org/
1 512 203 0507
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/92da5acc/attachment.html>

From raystonn at hotmail.com  Thu Jun 25 00:18:22 2015
From: raystonn at hotmail.com (Raystonn)
Date: Wed, 24 Jun 2015 17:18:22 -0700
Subject: [bitcoin-dev] BIP Process and Votes
Message-ID: <COL402-EAS20693E8DC9B97FDE1FD4070CDAE0@phx.gbl>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/f4a52371/attachment.html>

From milly at bitcoins.info  Thu Jun 25 00:21:00 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Wed, 24 Jun 2015 20:21:00 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CADm_WcYZ-O3fhm5bNCBF_mkAES+vVxsOGFtpovqgt9v9sY4TZA@mail.gmail.com>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<CADm_WcYZ-O3fhm5bNCBF_mkAES+vVxsOGFtpovqgt9v9sY4TZA@mail.gmail.com>
Message-ID: <558B496C.2050702@bitcoins.info>

 >There is no voting in the way you think. Devs commit changes the users 
will accept and use. Users "fire" developers by choosing different devs 
or different software.

 >Standard open source method.

Most open source projects do not require 100% user adoption in order for 
other users to be compatible.  Very different than most open source 
projects.  Repeating "stock" answers does nothing to advanced the 
discussion.

Russ


From pindar.wong at gmail.com  Thu Jun 25 00:32:33 2015
From: pindar.wong at gmail.com (Pindar Wong)
Date: Thu, 25 Jun 2015 08:32:33 +0800
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T0+MYYnea7VaSCu5FC7m1V6Lv_WZz2+G=n9gJe3oFRKXg@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<558A0B4A.7090205@riseup.net> <558A1E8E.30306@novauri.com>
	<CADm_WcZ52_fvNk_rWzu+Nw1CBz2o6t6cMkEfOm3BpdjH7iQKrw@mail.gmail.com>
	<2DC61141-96C9-4727-81D6-3CF572BC6BD7@novauri.com>
	<CABsx9T0+MYYnea7VaSCu5FC7m1V6Lv_WZz2+G=n9gJe3oFRKXg@mail.gmail.com>
Message-ID: <CAM7BtUozh=vAL37xKWPwwvvkZ5ZqzqxRKn1QHo23kvugF7YovQ@mail.gmail.com>

Dear Gavin,

Thank you for your kind consideration and for working within the
established BIP process.

http://cointelegraph.com/news/114657/chinese-mining-pools-call-for-consensus-refuse-switch-to-bitcoin-xt

p.


On Wed, Jun 24, 2015 at 9:44 PM, Gavin Andresen <gavinandresen at gmail.com>
wrote:

> This BIP has been assigned number 101 by the BIP editor. I plan on filling
> in the TODOs and will submit it as a pull request to the BIP repository
> today.
>
> > Title: Increase Maximum Block Size
>
> --
> --
> Gavin Andresen
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/74e70804/attachment.html>

From milly at bitcoins.info  Thu Jun 25 00:07:14 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Wed, 24 Jun 2015 20:07:14 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
Message-ID: <558B4632.8080504@bitcoins.info>

I have seen this question asked many times.  Most developers become 
defensive and they usually give a very vague 1-sentence answer when this 
question is asked.  It seems to be it is based on personalities rather 
than any kind of definable process.  To have that discussion the 
personalities must be separated out and answers like "such-and-such 
wouldn't do that" don't really do much to advance the discussion.  Also, 
the incentive for new developers to come in is that they will be paid by 
companies who want to influence the code and this should be considered 
(some developers take this statement as an insult when it is just a 
statement of the incentive process).

The other problem you are having is the lead developer does not want to 
be a "decider" when, in fact, he is a very significant decider.  While 
the users have the ultimate choice in a practical sense the chief 
developer is the "decider."  Now people don't want to get him upset so 
nobody wants to push the issue or fully define the process.  Now you are 
left with a broken, unwritten/unspoken process.  While this type of 
thing may work with a small group of developers businesses/investors 
looking in from the outside will see this as a risk.

Until you get passed all the personality-based arguments you are going 
to have a tough time defining a real process.

Russ





On 6/24/2015 7:41 PM, Raystonn wrote:
> I would like to start a civil discussion on an undefined, or at least unwritten, portion of the BIP process.  Who should get to vote on approval to commit a BIP implementation into Bitcoin Core?  Is a simple majority of these voters sufficient for approval?  If not, then what is?
>
> Raystonn
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>



From mark at friedenbach.org  Thu Jun 25 01:50:59 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Wed, 24 Jun 2015 18:50:59 -0700
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <558B4632.8080504@bitcoins.info>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info>
Message-ID: <CAOG=w-sxovqy0kDyBX=cx4CWWb=cd_F5bO3iH8ZBHsa0D_uK+A@mail.gmail.com>

I'm sorry but this is absolutely not the case, Milly. The reason that
people get defensive is that we have a carefully constructed process that
does work (thank you very much!) and is well documented. We talk about it
quite often in fact as it is a defining characteristic of how bitcoin is
developed which differs in some ways from how other open source software is
developed -- although it remains the same in most other ways.

Changes to the non-consensus sections of Bitcoin Core tend to get merged
when there are a few reviews, tests, and ACKs from recognized developers,
there are no outstanding objections, and the maintainer doing the merge
makes a subjective judgement that the code is ready.

Consensus-changes, on the other hand, get merged into Bitcoin Core only
after the above criteria are met AND an extremely long discussion period
that has given all the relevant stakeholders a chance to comment, and no
significant objections remain. Consensus-code changes are unanimous. They
must be.

The sort of process that exists in standards bodies for example, with
working groups and formal voting procedures, has no place where changes
define the nature and validity of other people's money. Who has the right
to reach into your pocket and define how you can or cannot spend your
coins? The premise of bitcoin is that no one has that right, yet that is
very much what we do when consensus code changes are made. That is why when
we make a change to the rules governing the nature of bitcoin, we must make
sure that everyone is made aware of the change and consents to it.

Everyone. Does this work? Does this scale? So far, it does. Uncontroversial
changes, such as BIP 66, are deployed without issue. Every indication is
that BIP 66 will complete deployment in the very near future, and we intend
to repeat this process for more interesting changes such as BIP65:
CHECKLOCKTIMEVERIFY.

This isn't about no one stepping forward to be the "decider." This is about
no one having the right to decide these things on the behalf of others. If
a contentious change is proposed and not accepted by the process of
consensus, that is because the process is doing its job at rejecting
controversial changes. It has nothing to do with personality, and
everything to do with the nature of bitcoin itself.


On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin <milly at bitcoins.info> wrote:

> I have seen this question asked many times.  Most developers become
> defensive and they usually give a very vague 1-sentence answer when this
> question is asked.  It seems to be it is based on personalities rather than
> any kind of definable process.  To have that discussion the personalities
> must be separated out and answers like "such-and-such wouldn't do that"
> don't really do much to advance the discussion.  Also, the incentive for
> new developers to come in is that they will be paid by companies who want
> to influence the code and this should be considered (some developers take
> this statement as an insult when it is just a statement of the incentive
> process).
>
> The other problem you are having is the lead developer does not want to be
> a "decider" when, in fact, he is a very significant decider.  While the
> users have the ultimate choice in a practical sense the chief developer is
> the "decider."  Now people don't want to get him upset so nobody wants to
> push the issue or fully define the process.  Now you are left with a
> broken, unwritten/unspoken process.  While this type of thing may work with
> a small group of developers businesses/investors looking in from the
> outside will see this as a risk.
>
> Until you get passed all the personality-based arguments you are going to
> have a tough time defining a real process.
>
> Russ
>
>
>
>
>
>
> On 6/24/2015 7:41 PM, Raystonn wrote:
>
>> I would like to start a civil discussion on an undefined, or at least
>> unwritten, portion of the BIP process.  Who should get to vote on approval
>> to commit a BIP implementation into Bitcoin Core?  Is a simple majority of
>> these voters sufficient for approval?  If not, then what is?
>>
>> Raystonn
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/5488f38b/attachment-0001.html>

From morcos at gmail.com  Thu Jun 25 02:30:53 2015
From: morcos at gmail.com (Alex Morcos)
Date: Wed, 24 Jun 2015 22:30:53 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CAOG=w-sxovqy0kDyBX=cx4CWWb=cd_F5bO3iH8ZBHsa0D_uK+A@mail.gmail.com>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info>
	<CAOG=w-sxovqy0kDyBX=cx4CWWb=cd_F5bO3iH8ZBHsa0D_uK+A@mail.gmail.com>
Message-ID: <CAPWm=eWJ+uOWO+x8mAWuQMy4EKZetOJvq6TeCsZ8uypnXEMEBQ@mail.gmail.com>

+1 Mark!


On Wed, Jun 24, 2015 at 9:50 PM, Mark Friedenbach <mark at friedenbach.org>
wrote:

> I'm sorry but this is absolutely not the case, Milly. The reason that
> people get defensive is that we have a carefully constructed process that
> does work (thank you very much!) and is well documented. We talk about it
> quite often in fact as it is a defining characteristic of how bitcoin is
> developed which differs in some ways from how other open source software is
> developed -- although it remains the same in most other ways.
>
> Changes to the non-consensus sections of Bitcoin Core tend to get merged
> when there are a few reviews, tests, and ACKs from recognized developers,
> there are no outstanding objections, and the maintainer doing the merge
> makes a subjective judgement that the code is ready.
>
> Consensus-changes, on the other hand, get merged into Bitcoin Core only
> after the above criteria are met AND an extremely long discussion period
> that has given all the relevant stakeholders a chance to comment, and no
> significant objections remain. Consensus-code changes are unanimous. They
> must be.
>
> The sort of process that exists in standards bodies for example, with
> working groups and formal voting procedures, has no place where changes
> define the nature and validity of other people's money. Who has the right
> to reach into your pocket and define how you can or cannot spend your
> coins? The premise of bitcoin is that no one has that right, yet that is
> very much what we do when consensus code changes are made. That is why when
> we make a change to the rules governing the nature of bitcoin, we must make
> sure that everyone is made aware of the change and consents to it.
>
> Everyone. Does this work? Does this scale? So far, it does.
> Uncontroversial changes, such as BIP 66, are deployed without issue. Every
> indication is that BIP 66 will complete deployment in the very near future,
> and we intend to repeat this process for more interesting changes such as
> BIP65: CHECKLOCKTIMEVERIFY.
>
> This isn't about no one stepping forward to be the "decider." This is
> about no one having the right to decide these things on the behalf of
> others. If a contentious change is proposed and not accepted by the process
> of consensus, that is because the process is doing its job at rejecting
> controversial changes. It has nothing to do with personality, and
> everything to do with the nature of bitcoin itself.
>
>
> On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin <milly at bitcoins.info>
> wrote:
>
>> I have seen this question asked many times.  Most developers become
>> defensive and they usually give a very vague 1-sentence answer when this
>> question is asked.  It seems to be it is based on personalities rather than
>> any kind of definable process.  To have that discussion the personalities
>> must be separated out and answers like "such-and-such wouldn't do that"
>> don't really do much to advance the discussion.  Also, the incentive for
>> new developers to come in is that they will be paid by companies who want
>> to influence the code and this should be considered (some developers take
>> this statement as an insult when it is just a statement of the incentive
>> process).
>>
>> The other problem you are having is the lead developer does not want to
>> be a "decider" when, in fact, he is a very significant decider.  While the
>> users have the ultimate choice in a practical sense the chief developer is
>> the "decider."  Now people don't want to get him upset so nobody wants to
>> push the issue or fully define the process.  Now you are left with a
>> broken, unwritten/unspoken process.  While this type of thing may work with
>> a small group of developers businesses/investors looking in from the
>> outside will see this as a risk.
>>
>> Until you get passed all the personality-based arguments you are going to
>> have a tough time defining a real process.
>>
>> Russ
>>
>>
>>
>>
>>
>>
>> On 6/24/2015 7:41 PM, Raystonn wrote:
>>
>>> I would like to start a civil discussion on an undefined, or at least
>>> unwritten, portion of the BIP process.  Who should get to vote on approval
>>> to commit a BIP implementation into Bitcoin Core?  Is a simple majority of
>>> these voters sufficient for approval?  If not, then what is?
>>>
>>> Raystonn
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/3c10f6ac/attachment.html>

From milly at bitcoins.info  Thu Jun 25 02:34:43 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Wed, 24 Jun 2015 22:34:43 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CAOG=w-sxovqy0kDyBX=cx4CWWb=cd_F5bO3iH8ZBHsa0D_uK+A@mail.gmail.com>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info>
	<CAOG=w-sxovqy0kDyBX=cx4CWWb=cd_F5bO3iH8ZBHsa0D_uK+A@mail.gmail.com>
Message-ID: <558B68C3.9050608@bitcoins.info>

I'm sorry but that is the kind of defensive, cultish response everyone 
gets when they ask that question.  If you had a well constructed 
documented process then you would be able to point to it ... but you 
can't.  While there are a few bits and pieces scattered  about in 
different places there is no coherent plan or process.

It is easy to make statements like "consensus must be unanimous" but the 
issue is that you never have true 100% consensus yet you have to move 
forward in some fashion and everyone has to run software with the same 
consensus rules.  The issue is how you move forward is the question that 
nobody wants to answer because (a) it is a hard question to answer and 
(b) developers see it as a threat to their authority/position.  If 
people just keep shutting down the discussion with a bunch of cultish 
stock answers then you are never going to move forward with developing 
some kind of process.

 From what I can see much of the discussion is personality-driven and 
not based on Computer Science or and defined process.  The issue is that 
a personality has changed so the process is perceived to be different 
and some people want to hard fork. Previously, the cultish answer is 
that Bitcoin development is decentralized because people can fork the 
code.  Now that some developers want to fork the code suddenly it is a 
big problem. Is forking the code part of the consensus process or is it 
the work of the devil?   The fact that there is so much diverse opinion 
on this shows a defined process has never been fully vetted or understood.

I have worked on these processes for many years for projects orders of 
magnitudes larger than Bitcoin.  I can absolutely assure you the current 
mishmash does not scale and huge amounts of time are wasted.  That 
should be readily apparent from the recent discussions and the recent 
concern it has caused from people outside the developer's inner circle.

Lack of defined process = high risk and wasted effort.

Russ




On 6/24/2015 9:50 PM, Mark Friedenbach wrote:
> I'm sorry but this is absolutely not the case, Milly. The reason that 
> people get defensive is that we have a carefully constructed process 
> that does work (thank you very much!) and is well documented. We talk 
> about it quite often in fact as it is a defining characteristic of how 
> bitcoin is developed which differs in some ways from how other open 
> source software is developed -- although it remains the same in most 
> other ways.
>
> Changes to the non-consensus sections of Bitcoin Core tend to get 
> merged when there are a few reviews, tests, and ACKs from recognized 
> developers, there are no outstanding objections, and the maintainer 
> doing the merge makes a subjective judgement that the code is ready.
>
> Consensus-changes, on the other hand, get merged into Bitcoin Core 
> only after the above criteria are met AND an extremely long discussion 
> period that has given all the relevant stakeholders a chance to 
> comment, and no significant objections remain. Consensus-code changes 
> are unanimous. They must be.
>
> The sort of process that exists in standards bodies for example, with 
> working groups and formal voting procedures, has no place where 
> changes define the nature and validity of other people's money. Who 
> has the right to reach into your pocket and define how you can or 
> cannot spend your coins? The premise of bitcoin is that no one has 
> that right, yet that is very much what we do when consensus code 
> changes are made. That is why when we make a change to the rules 
> governing the nature of bitcoin, we must make sure that everyone is 
> made aware of the change and consents to it.
>
> Everyone. Does this work? Does this scale? So far, it does. 
> Uncontroversial changes, such as BIP 66, are deployed without issue. 
> Every indication is that BIP 66 will complete deployment in the very 
> near future, and we intend to repeat this process for more interesting 
> changes such as BIP65: CHECKLOCKTIMEVERIFY.
>
> This isn't about no one stepping forward to be the "decider." This is 
> about no one having the right to decide these things on the behalf of 
> others. If a contentious change is proposed and not accepted by the 
> process of consensus, that is because the process is doing its job at 
> rejecting controversial changes. It has nothing to do with 
> personality, and everything to do with the nature of bitcoin itself.
>
>
> On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin <milly at bitcoins.info 
> <mailto:milly at bitcoins.info>> wrote:
>
>     I have seen this question asked many times.  Most developers
>     become defensive and they usually give a very vague 1-sentence
>     answer when this question is asked.  It seems to be it is based on
>     personalities rather than any kind of definable process.  To have
>     that discussion the personalities must be separated out and
>     answers like "such-and-such wouldn't do that" don't really do much
>     to advance the discussion.  Also, the incentive for new developers
>     to come in is that they will be paid by companies who want to
>     influence the code and this should be considered (some developers
>     take this statement as an insult when it is just a statement of
>     the incentive process).
>
>     The other problem you are having is the lead developer does not
>     want to be a "decider" when, in fact, he is a very significant
>     decider.  While the users have the ultimate choice in a practical
>     sense the chief developer is the "decider."  Now people don't want
>     to get him upset so nobody wants to push the issue or fully define
>     the process. Now you are left with a broken, unwritten/unspoken
>     process.  While this type of thing may work with a small group of
>     developers businesses/investors looking in from the outside will
>     see this as a risk.
>
>     Until you get passed all the personality-based arguments you are
>     going to have a tough time defining a real process.
>
>     Russ
>
>
>
>
>
>
>     On 6/24/2015 7:41 PM, Raystonn wrote:
>
>         I would like to start a civil discussion on an undefined, or
>         at least unwritten, portion of the BIP process.  Who should
>         get to vote on approval to commit a BIP implementation into
>         Bitcoin Core?  Is a simple majority of these voters sufficient
>         for approval?  If not, then what is?
>
>         Raystonn
>         _______________________________________________
>         bitcoin-dev mailing list
>         bitcoin-dev at lists.linuxfoundation.org
>         <mailto:bitcoin-dev at lists.linuxfoundation.org>
>         https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
>     _______________________________________________
>     bitcoin-dev mailing list
>     bitcoin-dev at lists.linuxfoundation.org
>     <mailto:bitcoin-dev at lists.linuxfoundation.org>
>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/a0c7ba21/attachment-0001.html>

From raystonn at hotmail.com  Thu Jun 25 03:00:44 2015
From: raystonn at hotmail.com (Raystonn)
Date: Wed, 24 Jun 2015 20:00:44 -0700
Subject: [bitcoin-dev] BIP Process and Votes
Message-ID: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/ab408f33/attachment.html>

From milly at bitcoins.info  Thu Jun 25 03:19:46 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Wed, 24 Jun 2015 23:19:46 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
Message-ID: <558B7352.90708@bitcoins.info>

The more specific answer (from a user's perspective) is that there is 
unanimous approval within the constraints of the Bitcoin system.  The 
constraint is that your software must be compatible with merchants and 
exchanges for your coins to have value.  Stating "unanimous approval" 
without identifying the constraint is misstating the issue.

As for developers, the consensus on code changes are almost never 100% 
and someone has to make the decision about what is an a acceptable 
consensus.  Most of the cultish answers completely overlook this issue 
even though it is main point of the question.

Russ






On 6/24/2015 11:00 PM, Raystonn wrote:
>
> > Consensus-code changes are unanimous. They must be.
>
> Excellent. Now we are getting to some actual written rules. How about 
> updating the BIP process documentation with this? Everyone should be 
> able to read the rules of the coin they are buying.
>
> One moment though. Can you tell me how this particular rule came to 
> be? The creator of Bitcoin violated this rule many times. So it must 
> have been adopted after his departure. What process was followed to 
> adopt this new rule? Was there consensus for it at the time? A huge 
> portion of the user community is under the impression that Satoshi's 
> written plans, some of which violate this new rule, will be 
> implemented. So there certainly would not be consensus for this rule 
> today.
>
> On 24 Jun 2015 6:51 pm, Mark Friedenbach <mark at friedenbach.org> wrote:
>
>     I'm sorry but this is absolutely not the case, Milly. The reason
>     that people get defensive is that we have a carefully constructed
>     process that does work (thank you very much!) and is well
>     documented. We talk about it quite often in fact as it is a
>     defining characteristic of how bitcoin is developed which differs
>     in some ways from how other open source software is developed --
>     although it remains the same in most other ways.
>
>     Changes to the non-consensus sections of Bitcoin Core tend to get
>     merged when there are a few reviews, tests, and ACKs from
>     recognized developers, there are no outstanding objections, and
>     the maintainer doing the merge makes a subjective judgement that
>     the code is ready.
>
>     Consensus-changes, on the other hand, get merged into Bitcoin Core
>     only after the above criteria are met AND an extremely long
>     discussion period that has given all the relevant stakeholders a
>     chance to comment, and no significant objections remain.
>     Consensus-code changes are unanimous. They must be.
>
>     The sort of process that exists in standards bodies for example,
>     with working groups and formal voting procedures, has no place
>     where changes define the nature and validity of other people's
>     money. Who has the right to reach into your pocket and define how
>     you can or cannot spend your coins? The premise of bitcoin is that
>     no one has that right, yet that is very much what we do when
>     consensus code changes are made. That is why when we make a change
>     to the rules governing the nature of bitcoin, we must make sure
>     that everyone is made aware of the change and consents to it.
>
>     Everyone. Does this work? Does this scale? So far, it does.
>     Uncontroversial changes, such as BIP 66, are deployed without
>     issue. Every indication is that BIP 66 will complete deployment in
>     the very near future, and we intend to repeat this process for
>     more interesting changes such as BIP65: CHECKLOCKTIMEVERIFY.
>
>     This isn't about no one stepping forward to be the "decider." This
>     is about no one having the right to decide these things on the
>     behalf of others. If a contentious change is proposed and not
>     accepted by the process of consensus, that is because the process
>     is doing its job at rejecting controversial changes. It has
>     nothing to do with personality, and everything to do with the
>     nature of bitcoin itself.
>
>
>     On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin
>     <milly at bitcoins.info <mailto:milly at bitcoins.info>> wrote:
>
>         I have seen this question asked many times.  Most developers
>         become defensive and they usually give a very vague 1-sentence
>         answer when this question is asked.  It seems to be it is
>         based on personalities rather than any kind of definable
>         process.  To have that discussion the personalities must be
>         separated out and answers like "such-and-such wouldn't do
>         that" don't really do much to advance the discussion.  Also,
>         the incentive for new developers to come in is that they will
>         be paid by companies who want to influence the code and this
>         should be considered (some developers take this statement as
>         an insult when it is just a statement of the incentive process).
>
>         The other problem you are having is the lead developer does
>         not want to be a "decider" when, in fact, he is a very
>         significant decider.  While the users have the ultimate choice
>         in a practical sense the chief developer is the "decider." 
>         Now people don't want to get him upset so nobody wants to push
>         the issue or fully define the process.  Now you are left with
>         a broken, unwritten/unspoken process.  While this type of
>         thing may work with a small group of developers
>         businesses/investors looking in from the outside will see this
>         as a risk.
>
>         Until you get passed all the personality-based arguments you
>         are going to have a tough time defining a real process.
>
>         Russ
>
>
>
>
>
>
>         On 6/24/2015 7:41 PM, Raystonn wrote:
>
>             I would like to start a civil discussion on an undefined,
>             or at least unwritten, portion of the BIP process.  Who
>             should get to vote on approval to commit a BIP
>             implementation into Bitcoin Core?  Is a simple majority of
>             these voters sufficient for approval?  If not, then what is?
>
>             Raystonn
>             _______________________________________________
>             bitcoin-dev mailing list
>             bitcoin-dev at lists.linuxfoundation.org
>             <mailto:bitcoin-dev at lists.linuxfoundation.org>
>             https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
>         _______________________________________________
>         bitcoin-dev mailing list
>         bitcoin-dev at lists.linuxfoundation.org
>         <mailto:bitcoin-dev at lists.linuxfoundation.org>
>         https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/db6e451a/attachment-0001.html>

From gacrux at gmail.com  Thu Jun 25 03:42:52 2015
From: gacrux at gmail.com (Gareth Williams)
Date: Thu, 25 Jun 2015 13:42:52 +1000
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <558B4632.8080504@bitcoins.info>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info>
Message-ID: <CALohRkj89mgZTYXQxd0a-mB3SVdMjEF6-9jUm75m=D1wLNZSqg@mail.gmail.com>

On Thu, Jun 25, 2015 at 10:07 AM, Milly Bitcoin <milly at bitcoins.info>
wrote:
<snip>
> Also, the incentive for new
> developers to come in is that they will be paid by companies who want to
> influence the code and this should be considered
<snip>
> Now you are left with a broken, unwritten/unspoken process.

Your former statement is a great example of why "rough consensus and
running code" is superior to design by committee.
An argument should be assessed on its technical merit alone, not on
the number of people advancing it -- a process that would be open to
exactly the type of external manipulation you say you are concerned
about.

From raystonn at hotmail.com  Thu Jun 25 03:53:53 2015
From: raystonn at hotmail.com (Raystonn)
Date: Wed, 24 Jun 2015 20:53:53 -0700
Subject: [bitcoin-dev] BIP Process and Votes
Message-ID: <COL402-EAS188B2CA64492921890252F5CDAE0@phx.gbl>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/66e3d82c/attachment.html>

From milly at bitcoins.info  Thu Jun 25 04:10:46 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Thu, 25 Jun 2015 00:10:46 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CALohRkj89mgZTYXQxd0a-mB3SVdMjEF6-9jUm75m=D1wLNZSqg@mail.gmail.com>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info>
	<CALohRkj89mgZTYXQxd0a-mB3SVdMjEF6-9jUm75m=D1wLNZSqg@mail.gmail.com>
Message-ID: <558B7F46.6060106@bitcoins.info>

I am not giving an opinion on the incentive process for developers.  I 
am just saying it exists and it needs to be taken into account when 
developing a process. Pretending it doesn't exist or taking it as some 
kind of personal insult does not do anything to advance the process.  
The developer incentives feeds into the consensus process.

Depending on some kind of "rough consensus" with unstated 
personality-based rules of the game works fine with small projects.  As 
the project gets larger that does not scale as can be seen with the 
recent events.  That is just a taste of what will happen in the future 
as new issue arise.  Developers will end up spending all day tweeting 
and making videos instead of writing code.

The current process does not guarantee changes are approved on technical 
merit alone and that is part of the problem.  Since there is no defined 
process people make claims of all sorts of motives that may or may not 
exist.  The idea is to get a defined process that gives a certain level 
of assurance to outsiders that the process is based on things like 
technical merit.

Russ


On 6/24/2015 11:42 PM, Gareth Williams wrote:
> On Thu, Jun 25, 2015 at 10:07 AM, Milly Bitcoin <milly at bitcoins.info>
> wrote:
> <snip>
>> Also, the incentive for new
>> developers to come in is that they will be paid by companies who want to
>> influence the code and this should be considered
> <snip>
>> Now you are left with a broken, unwritten/unspoken process.
> Your former statement is a great example of why "rough consensus and
> running code" is superior to design by committee.
> An argument should be assessed on its technical merit alone, not on
> the number of people advancing it -- a process that would be open to
> exactly the type of external manipulation you say you are concerned
> about.
>



From jgarzik at gmail.com  Thu Jun 25 05:07:26 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Wed, 24 Jun 2015 22:07:26 -0700
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <558B68C3.9050608@bitcoins.info>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info>
	<CAOG=w-sxovqy0kDyBX=cx4CWWb=cd_F5bO3iH8ZBHsa0D_uK+A@mail.gmail.com>
	<558B68C3.9050608@bitcoins.info>
Message-ID: <CADm_WcZ+5z-7KDsOaNunSWAROoJEsDSEAFZ-d2C6cZBrQTkBcw@mail.gmail.com>

Ladies & gents, please do not feed the troll.  This has been explained to
Milly multiple times in the past, on previous mailing list & github with no
impact.


On Wed, Jun 24, 2015 at 7:34 PM, Milly Bitcoin <milly at bitcoins.info> wrote:

>  I'm sorry but that is the kind of defensive, cultish response everyone
> gets when they ask that question.  If you had a well constructed documented
> process then you would be able to point to it ... but you can't.  While
> there are a few bits and pieces scattered  about in different places there
> is no coherent plan or process.
>
> It is easy to make statements like "consensus must be unanimous" but the
> issue is that you never have true 100% consensus yet you have to move
> forward in some fashion and everyone has to run software with the same
> consensus rules.  The issue is how you move forward is the question that
> nobody wants to answer because (a) it is a hard question to answer and (b)
> developers see it as a threat to their authority/position.  If people just
> keep shutting down the discussion with a bunch of cultish stock answers
> then you are never going to move forward with developing some kind of
> process.
>
> From what I can see much of the discussion is personality-driven and not
> based on Computer Science or and defined process.  The issue is that a
> personality has changed so the process is perceived to be different and
> some people want to hard fork.  Previously, the cultish answer is that
> Bitcoin development is decentralized because people can fork the code.  Now
> that some developers want to fork the code suddenly it is a big problem.
> Is forking the code part of the consensus process or is it the work of the
> devil?   The fact that there is so much diverse opinion on this shows a
> defined process has never been fully vetted or understood.
>
> I have worked on these processes for many years for projects orders of
> magnitudes larger than Bitcoin.  I can absolutely assure you the current
> mishmash does not scale and huge amounts of time are wasted.  That should
> be readily apparent from the recent discussions and the recent concern it
> has caused from people outside the developer's inner circle.
>
> Lack of defined process = high risk and wasted effort.
>
> Russ
>
>
>
>
>
> On 6/24/2015 9:50 PM, Mark Friedenbach wrote:
>
>   I'm sorry but this is absolutely not the case, Milly. The reason that
> people get defensive is that we have a carefully constructed process that
> does work (thank you very much!) and is well documented. We talk about it
> quite often in fact as it is a defining characteristic of how bitcoin is
> developed which differs in some ways from how other open source software is
> developed -- although it remains the same in most other ways.
>
>  Changes to the non-consensus sections of Bitcoin Core tend to get merged
> when there are a few reviews, tests, and ACKs from recognized developers,
> there are no outstanding objections, and the maintainer doing the merge
> makes a subjective judgement that the code is ready.
>
>  Consensus-changes, on the other hand, get merged into Bitcoin Core only
> after the above criteria are met AND an extremely long discussion period
> that has given all the relevant stakeholders a chance to comment, and no
> significant objections remain. Consensus-code changes are unanimous. They
> must be.
>
>  The sort of process that exists in standards bodies for example, with
> working groups and formal voting procedures, has no place where changes
> define the nature and validity of other people's money. Who has the right
> to reach into your pocket and define how you can or cannot spend your
> coins? The premise of bitcoin is that no one has that right, yet that is
> very much what we do when consensus code changes are made. That is why when
> we make a change to the rules governing the nature of bitcoin, we must make
> sure that everyone is made aware of the change and consents to it.
>
>  Everyone. Does this work? Does this scale? So far, it does.
> Uncontroversial changes, such as BIP 66, are deployed without issue. Every
> indication is that BIP 66 will complete deployment in the very near future,
> and we intend to repeat this process for more interesting changes such as
> BIP65: CHECKLOCKTIMEVERIFY.
>
>  This isn't about no one stepping forward to be the "decider." This is
> about no one having the right to decide these things on the behalf of
> others. If a contentious change is proposed and not accepted by the process
> of consensus, that is because the process is doing its job at rejecting
> controversial changes. It has nothing to do with personality, and
> everything to do with the nature of bitcoin itself.
>
>
> On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin < <milly at bitcoins.info>
> milly at bitcoins.info> wrote:
>
>> I have seen this question asked many times.  Most developers become
>> defensive and they usually give a very vague 1-sentence answer when this
>> question is asked.  It seems to be it is based on personalities rather than
>> any kind of definable process.  To have that discussion the personalities
>> must be separated out and answers like "such-and-such wouldn't do that"
>> don't really do much to advance the discussion.  Also, the incentive for
>> new developers to come in is that they will be paid by companies who want
>> to influence the code and this should be considered (some developers take
>> this statement as an insult when it is just a statement of the incentive
>> process).
>>
>> The other problem you are having is the lead developer does not want to
>> be a "decider" when, in fact, he is a very significant decider.  While the
>> users have the ultimate choice in a practical sense the chief developer is
>> the "decider."  Now people don't want to get him upset so nobody wants to
>> push the issue or fully define the process.  Now you are left with a
>> broken, unwritten/unspoken process.  While this type of thing may work with
>> a small group of developers businesses/investors looking in from the
>> outside will see this as a risk.
>>
>> Until you get passed all the personality-based arguments you are going to
>> have a tough time defining a real process.
>>
>> Russ
>>
>>
>>
>>
>>
>>
>> On 6/24/2015 7:41 PM, Raystonn wrote:
>>
>>> I would like to start a civil discussion on an undefined, or at least
>>> unwritten, portion of the BIP process.  Who should get to vote on approval
>>> to commit a BIP implementation into Bitcoin Core?  Is a simple majority of
>>> these voters sufficient for approval?  If not, then what is?
>>>
>>> Raystonn
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/42b42299/attachment-0001.html>

From milly at bitcoins.info  Thu Jun 25 05:41:24 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Thu, 25 Jun 2015 01:41:24 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CADm_WcZ+5z-7KDsOaNunSWAROoJEsDSEAFZ-d2C6cZBrQTkBcw@mail.gmail.com>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info>
	<CAOG=w-sxovqy0kDyBX=cx4CWWb=cd_F5bO3iH8ZBHsa0D_uK+A@mail.gmail.com>
	<558B68C3.9050608@bitcoins.info>
	<CADm_WcZ+5z-7KDsOaNunSWAROoJEsDSEAFZ-d2C6cZBrQTkBcw@mail.gmail.com>
Message-ID: <558B9484.1030803@bitcoins.info>

These are the kind of silly responses you often get when this subject 
comes up.  Mr. Garzik knows how to ignore messages he doesn't want so I 
see no need for him to use the list to attack people he doesn't agree 
with and/or try to interfere with discussions of others on the list.
He turns it into a personality discussion rather than a discussion of 
Systems Engineering.  He also tries to intimate anyone who brings up the 
discussion and "punish" them as a lesson to anyone else who may raise 
the issue.

It is interesting that people like that are attracted to a decentralized 
system.   The reply is simply an attempt at protecting turf which is why 
Mr. Garzik's vague replies are never taken seriously on the subject of 
decision-making process for the software.

Russ


On 6/25/2015 1:07 AM, Jeff Garzik wrote:
> Ladies & gents, please do not feed the troll. This has been explained 
> to Milly multiple times in the past, on previous mailing list & github 
> with no impact.
>
>
> On Wed, Jun 24, 2015 at 7:34 PM, Milly Bitcoin <milly at bitcoins.info 
> <mailto:milly at bitcoins.info>> wrote:
>
>     I'm sorry but that is the kind of defensive, cultish response
>     everyone gets when they ask that question.  If you had a well
>     constructed documented process then you would be able to point to
>     it ... but you can't.  While there are a few bits and pieces
>     scattered  about in different places there is no coherent plan or
>     process.
>
>     It is easy to make statements like "consensus must be unanimous"
>     but the issue is that you never have true 100% consensus yet you
>     have to move forward in some fashion and everyone has to run
>     software with the same consensus rules.  The issue is how you move
>     forward is the question that nobody wants to answer because (a) it
>     is a hard question to answer and (b) developers see it as a threat
>     to their authority/position.  If people just keep shutting down
>     the discussion with a bunch of cultish stock answers then you are
>     never going to move forward with developing some kind of process.
>
>     From what I can see much of the discussion is personality-driven
>     and not based on Computer Science or and defined process.  The
>     issue is that a personality has changed so the process is
>     perceived to be different and some people want to hard fork. 
>     Previously, the cultish answer is that Bitcoin development is
>     decentralized because people can fork the code.  Now that some
>     developers want to fork the code suddenly it is a big problem.  
>     Is forking the code part of the consensus process or is it the
>     work of the devil?   The fact that there is so much diverse
>     opinion on this shows a defined process has never been fully
>     vetted or understood.
>
>     I have worked on these processes for many years for projects
>     orders of magnitudes larger than Bitcoin.  I can absolutely assure
>     you the current mishmash does not scale and huge amounts of time
>     are wasted.  That should be readily apparent from the recent
>     discussions and the recent concern it has caused from people
>     outside the developer's inner circle.
>
>     Lack of defined process = high risk and wasted effort.
>
>     Russ
>
>
>
>
>
>     On 6/24/2015 9:50 PM, Mark Friedenbach wrote:
>>     I'm sorry but this is absolutely not the case, Milly. The reason
>>     that people get defensive is that we have a carefully constructed
>>     process that does work (thank you very much!) and is well
>>     documented. We talk about it quite often in fact as it is a
>>     defining characteristic of how bitcoin is developed which differs
>>     in some ways from how other open source software is developed --
>>     although it remains the same in most other ways.
>>
>>     Changes to the non-consensus sections of Bitcoin Core tend to get
>>     merged when there are a few reviews, tests, and ACKs from
>>     recognized developers, there are no outstanding objections, and
>>     the maintainer doing the merge makes a subjective judgement that
>>     the code is ready.
>>
>>     Consensus-changes, on the other hand, get merged into Bitcoin
>>     Core only after the above criteria are met AND an extremely long
>>     discussion period that has given all the relevant stakeholders a
>>     chance to comment, and no significant objections remain.
>>     Consensus-code changes are unanimous. They must be.
>>
>>     The sort of process that exists in standards bodies for example,
>>     with working groups and formal voting procedures, has no place
>>     where changes define the nature and validity of other people's
>>     money. Who has the right to reach into your pocket and define how
>>     you can or cannot spend your coins? The premise of bitcoin is
>>     that no one has that right, yet that is very much what we do when
>>     consensus code changes are made. That is why when we make a
>>     change to the rules governing the nature of bitcoin, we must make
>>     sure that everyone is made aware of the change and consents to it.
>>
>>     Everyone. Does this work? Does this scale? So far, it does.
>>     Uncontroversial changes, such as BIP 66, are deployed without
>>     issue. Every indication is that BIP 66 will complete deployment
>>     in the very near future, and we intend to repeat this process for
>>     more interesting changes such as BIP65: CHECKLOCKTIMEVERIFY.
>>
>>     This isn't about no one stepping forward to be the "decider."
>>     This is about no one having the right to decide these things on
>>     the behalf of others. If a contentious change is proposed and not
>>     accepted by the process of consensus, that is because the process
>>     is doing its job at rejecting controversial changes. It has
>>     nothing to do with personality, and everything to do with the
>>     nature of bitcoin itself.
>>
>>
>>     On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin
>>     <milly at bitcoins.info <mailto:milly at bitcoins.info>> wrote:
>>
>>         I have seen this question asked many times. Most developers
>>         become defensive and they usually give a very vague
>>         1-sentence answer when this question is asked.  It seems to
>>         be it is based on personalities rather than any kind of
>>         definable process.  To have that discussion the personalities
>>         must be separated out and answers like "such-and-such
>>         wouldn't do that" don't really do much to advance the
>>         discussion. Also, the incentive for new developers to come in
>>         is that they will be paid by companies who want to influence
>>         the code and this should be considered (some developers take
>>         this statement as an insult when it is just a statement of
>>         the incentive process).
>>
>>         The other problem you are having is the lead developer does
>>         not want to be a "decider" when, in fact, he is a very
>>         significant decider.  While the users have the ultimate
>>         choice in a practical sense the chief developer is the
>>         "decider."  Now people don't want to get him upset so nobody
>>         wants to push the issue or fully define the process.  Now you
>>         are left with a broken, unwritten/unspoken process.  While
>>         this type of thing may work with a small group of developers
>>         businesses/investors looking in from the outside will see
>>         this as a risk.
>>
>>         Until you get passed all the personality-based arguments you
>>         are going to have a tough time defining a real process.
>>
>>         Russ
>>
>>
>>
>>
>>
>>
>>         On 6/24/2015 7:41 PM, Raystonn wrote:
>>
>>             I would like to start a civil discussion on an undefined,
>>             or at least unwritten, portion of the BIP process.  Who
>>             should get to vote on approval to commit a BIP
>>             implementation into Bitcoin Core?  Is a simple majority
>>             of these voters sufficient for approval?  If not, then
>>             what is?
>>
>>             Raystonn
>>             _______________________________________________
>>             bitcoin-dev mailing list
>>             bitcoin-dev at lists.linuxfoundation.org
>>             <mailto:bitcoin-dev at lists.linuxfoundation.org>
>>             https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>>
>>         _______________________________________________
>>         bitcoin-dev mailing list
>>         bitcoin-dev at lists.linuxfoundation.org
>>         <mailto:bitcoin-dev at lists.linuxfoundation.org>
>>         https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>
>
>     _______________________________________________
>     bitcoin-dev mailing list
>     bitcoin-dev at lists.linuxfoundation.org
>     <mailto:bitcoin-dev at lists.linuxfoundation.org>
>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/3deb2320/attachment.html>

From pindar.wong at gmail.com  Thu Jun 25 06:06:09 2015
From: pindar.wong at gmail.com (Pindar Wong)
Date: Thu, 25 Jun 2015 14:06:09 +0800
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <558B9484.1030803@bitcoins.info>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info>
	<CAOG=w-sxovqy0kDyBX=cx4CWWb=cd_F5bO3iH8ZBHsa0D_uK+A@mail.gmail.com>
	<558B68C3.9050608@bitcoins.info>
	<CADm_WcZ+5z-7KDsOaNunSWAROoJEsDSEAFZ-d2C6cZBrQTkBcw@mail.gmail.com>
	<558B9484.1030803@bitcoins.info>
Message-ID: <CAM7BtUqpmELVnQh9JycjxK0dOn4hqsg6Csz7za55BgYyw+FG7g@mail.gmail.com>

In the process of 'mining consensus', perhaps before voting there should be
robust system testing and telemetry.

May I ask a questions w.r.t. Process BIPs, what is the process for
establishing a new testnet (e.g. for testing with 8MB blocks)?

p.


On Thu, Jun 25, 2015 at 1:41 PM, Milly Bitcoin <milly at bitcoins.info> wrote:

>  These are the kind of silly responses you often get when this subject
> comes up.  Mr. Garzik knows how to ignore messages he doesn't want so I see
> no need for him to use the list to attack people he doesn't agree with
> and/or try to interfere with discussions of others on the list.
> He turns it into a personality discussion rather than a discussion of
> Systems Engineering.  He also tries to intimate anyone who brings up the
> discussion and "punish" them as a lesson to anyone else who may raise the
> issue.
>
> It is interesting that people like that are attracted to a decentralized
> system.   The reply is simply an attempt at protecting turf which is why
> Mr. Garzik's vague replies are never taken seriously on the subject of
> decision-making process for the software.
>
> Russ
>
>
>
> On 6/25/2015 1:07 AM, Jeff Garzik wrote:
>
> Ladies & gents, please do not feed the troll.  This has been explained to
> Milly multiple times in the past, on previous mailing list & github with no
> impact.
>
>
> On Wed, Jun 24, 2015 at 7:34 PM, Milly Bitcoin <milly at bitcoins.info>
> wrote:
>
>>  I'm sorry but that is the kind of defensive, cultish response everyone
>> gets when they ask that question.  If you had a well constructed documented
>> process then you would be able to point to it ... but you can't.  While
>> there are a few bits and pieces scattered  about in different places there
>> is no coherent plan or process.
>>
>> It is easy to make statements like "consensus must be unanimous" but the
>> issue is that you never have true 100% consensus yet you have to move
>> forward in some fashion and everyone has to run software with the same
>> consensus rules.  The issue is how you move forward is the question that
>> nobody wants to answer because (a) it is a hard question to answer and (b)
>> developers see it as a threat to their authority/position.  If people just
>> keep shutting down the discussion with a bunch of cultish stock answers
>> then you are never going to move forward with developing some kind of
>> process.
>>
>> From what I can see much of the discussion is personality-driven and not
>> based on Computer Science or and defined process.  The issue is that a
>> personality has changed so the process is perceived to be different and
>> some people want to hard fork.  Previously, the cultish answer is that
>> Bitcoin development is decentralized because people can fork the code.  Now
>> that some developers want to fork the code suddenly it is a big problem.
>> Is forking the code part of the consensus process or is it the work of the
>> devil?   The fact that there is so much diverse opinion on this shows a
>> defined process has never been fully vetted or understood.
>>
>> I have worked on these processes for many years for projects orders of
>> magnitudes larger than Bitcoin.  I can absolutely assure you the current
>> mishmash does not scale and huge amounts of time are wasted.  That should
>> be readily apparent from the recent discussions and the recent concern it
>> has caused from people outside the developer's inner circle.
>>
>> Lack of defined process = high risk and wasted effort.
>>
>> Russ
>>
>>
>>
>>
>>
>> On 6/24/2015 9:50 PM, Mark Friedenbach wrote:
>>
>>   I'm sorry but this is absolutely not the case, Milly. The reason that
>> people get defensive is that we have a carefully constructed process that
>> does work (thank you very much!) and is well documented. We talk about it
>> quite often in fact as it is a defining characteristic of how bitcoin is
>> developed which differs in some ways from how other open source software is
>> developed -- although it remains the same in most other ways.
>>
>>  Changes to the non-consensus sections of Bitcoin Core tend to get merged
>> when there are a few reviews, tests, and ACKs from recognized developers,
>> there are no outstanding objections, and the maintainer doing the merge
>> makes a subjective judgement that the code is ready.
>>
>>  Consensus-changes, on the other hand, get merged into Bitcoin Core only
>> after the above criteria are met AND an extremely long discussion period
>> that has given all the relevant stakeholders a chance to comment, and no
>> significant objections remain. Consensus-code changes are unanimous. They
>> must be.
>>
>>  The sort of process that exists in standards bodies for example, with
>> working groups and formal voting procedures, has no place where changes
>> define the nature and validity of other people's money. Who has the right
>> to reach into your pocket and define how you can or cannot spend your
>> coins? The premise of bitcoin is that no one has that right, yet that is
>> very much what we do when consensus code changes are made. That is why when
>> we make a change to the rules governing the nature of bitcoin, we must make
>> sure that everyone is made aware of the change and consents to it.
>>
>>  Everyone. Does this work? Does this scale? So far, it does.
>> Uncontroversial changes, such as BIP 66, are deployed without issue. Every
>> indication is that BIP 66 will complete deployment in the very near future,
>> and we intend to repeat this process for more interesting changes such as
>> BIP65: CHECKLOCKTIMEVERIFY.
>>
>>  This isn't about no one stepping forward to be the "decider." This is
>> about no one having the right to decide these things on the behalf of
>> others. If a contentious change is proposed and not accepted by the process
>> of consensus, that is because the process is doing its job at rejecting
>> controversial changes. It has nothing to do with personality, and
>> everything to do with the nature of bitcoin itself.
>>
>>
>> On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin < <milly at bitcoins.info>
>> milly at bitcoins.info> wrote:
>>
>>> I have seen this question asked many times.  Most developers become
>>> defensive and they usually give a very vague 1-sentence answer when this
>>> question is asked.  It seems to be it is based on personalities rather than
>>> any kind of definable process.  To have that discussion the personalities
>>> must be separated out and answers like "such-and-such wouldn't do that"
>>> don't really do much to advance the discussion.  Also, the incentive for
>>> new developers to come in is that they will be paid by companies who want
>>> to influence the code and this should be considered (some developers take
>>> this statement as an insult when it is just a statement of the incentive
>>> process).
>>>
>>> The other problem you are having is the lead developer does not want to
>>> be a "decider" when, in fact, he is a very significant decider.  While the
>>> users have the ultimate choice in a practical sense the chief developer is
>>> the "decider."  Now people don't want to get him upset so nobody wants to
>>> push the issue or fully define the process.  Now you are left with a
>>> broken, unwritten/unspoken process.  While this type of thing may work with
>>> a small group of developers businesses/investors looking in from the
>>> outside will see this as a risk.
>>>
>>> Until you get passed all the personality-based arguments you are going
>>> to have a tough time defining a real process.
>>>
>>> Russ
>>>
>>>
>>>
>>>
>>>
>>>
>>> On 6/24/2015 7:41 PM, Raystonn wrote:
>>>
>>>> I would like to start a civil discussion on an undefined, or at least
>>>> unwritten, portion of the BIP process.  Who should get to vote on approval
>>>> to commit a BIP implementation into Bitcoin Core?  Is a simple majority of
>>>> these voters sufficient for approval?  If not, then what is?
>>>>
>>>> Raystonn
>>>> _______________________________________________
>>>> bitcoin-dev mailing list
>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>
>>>>
>>>
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>>
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>
>
> _______________________________________________
> bitcoin-dev mailing listbitcoin-dev at lists.linuxfoundation.orghttps://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/1f890e9e/attachment-0001.html>

From mark at friedenbach.org  Thu Jun 25 06:15:38 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Wed, 24 Jun 2015 23:15:38 -0700
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CAM7BtUqpmELVnQh9JycjxK0dOn4hqsg6Csz7za55BgYyw+FG7g@mail.gmail.com>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info>
	<CAOG=w-sxovqy0kDyBX=cx4CWWb=cd_F5bO3iH8ZBHsa0D_uK+A@mail.gmail.com>
	<558B68C3.9050608@bitcoins.info>
	<CADm_WcZ+5z-7KDsOaNunSWAROoJEsDSEAFZ-d2C6cZBrQTkBcw@mail.gmail.com>
	<558B9484.1030803@bitcoins.info>
	<CAM7BtUqpmELVnQh9JycjxK0dOn4hqsg6Csz7za55BgYyw+FG7g@mail.gmail.com>
Message-ID: <CAOG=w-vRSkY_tDHQhwbcSC8P5EJZn4Xpj+dKqV9GL26v-p5DQw@mail.gmail.com>

You don't need to ask permission for testnet. Here is one with 100MB blocks:

https://github.com/pstratem/bitcoin/tree/testnet4
On Jun 24, 2015 11:06 PM, "Pindar Wong" <pindar.wong at gmail.com> wrote:

> In the process of 'mining consensus', perhaps before voting there should
> be robust system testing and telemetry.
>
> May I ask a questions w.r.t. Process BIPs, what is the process for
> establishing a new testnet (e.g. for testing with 8MB blocks)?
>
> p.
>
>
> On Thu, Jun 25, 2015 at 1:41 PM, Milly Bitcoin <milly at bitcoins.info>
> wrote:
>
>>  These are the kind of silly responses you often get when this subject
>> comes up.  Mr. Garzik knows how to ignore messages he doesn't want so I see
>> no need for him to use the list to attack people he doesn't agree with
>> and/or try to interfere with discussions of others on the list.
>> He turns it into a personality discussion rather than a discussion of
>> Systems Engineering.  He also tries to intimate anyone who brings up the
>> discussion and "punish" them as a lesson to anyone else who may raise the
>> issue.
>>
>> It is interesting that people like that are attracted to a decentralized
>> system.   The reply is simply an attempt at protecting turf which is why
>> Mr. Garzik's vague replies are never taken seriously on the subject of
>> decision-making process for the software.
>>
>> Russ
>>
>>
>>
>> On 6/25/2015 1:07 AM, Jeff Garzik wrote:
>>
>> Ladies & gents, please do not feed the troll.  This has been explained to
>> Milly multiple times in the past, on previous mailing list & github with no
>> impact.
>>
>>
>> On Wed, Jun 24, 2015 at 7:34 PM, Milly Bitcoin <milly at bitcoins.info>
>> wrote:
>>
>>>  I'm sorry but that is the kind of defensive, cultish response everyone
>>> gets when they ask that question.  If you had a well constructed documented
>>> process then you would be able to point to it ... but you can't.  While
>>> there are a few bits and pieces scattered  about in different places there
>>> is no coherent plan or process.
>>>
>>> It is easy to make statements like "consensus must be unanimous" but the
>>> issue is that you never have true 100% consensus yet you have to move
>>> forward in some fashion and everyone has to run software with the same
>>> consensus rules.  The issue is how you move forward is the question that
>>> nobody wants to answer because (a) it is a hard question to answer and (b)
>>> developers see it as a threat to their authority/position.  If people just
>>> keep shutting down the discussion with a bunch of cultish stock answers
>>> then you are never going to move forward with developing some kind of
>>> process.
>>>
>>> From what I can see much of the discussion is personality-driven and not
>>> based on Computer Science or and defined process.  The issue is that a
>>> personality has changed so the process is perceived to be different and
>>> some people want to hard fork.  Previously, the cultish answer is that
>>> Bitcoin development is decentralized because people can fork the code.  Now
>>> that some developers want to fork the code suddenly it is a big problem.
>>> Is forking the code part of the consensus process or is it the work of the
>>> devil?   The fact that there is so much diverse opinion on this shows a
>>> defined process has never been fully vetted or understood.
>>>
>>> I have worked on these processes for many years for projects orders of
>>> magnitudes larger than Bitcoin.  I can absolutely assure you the current
>>> mishmash does not scale and huge amounts of time are wasted.  That should
>>> be readily apparent from the recent discussions and the recent concern it
>>> has caused from people outside the developer's inner circle.
>>>
>>> Lack of defined process = high risk and wasted effort.
>>>
>>> Russ
>>>
>>>
>>>
>>>
>>>
>>> On 6/24/2015 9:50 PM, Mark Friedenbach wrote:
>>>
>>>   I'm sorry but this is absolutely not the case, Milly. The reason that
>>> people get defensive is that we have a carefully constructed process that
>>> does work (thank you very much!) and is well documented. We talk about it
>>> quite often in fact as it is a defining characteristic of how bitcoin is
>>> developed which differs in some ways from how other open source software is
>>> developed -- although it remains the same in most other ways.
>>>
>>>  Changes to the non-consensus sections of Bitcoin Core tend to get
>>> merged when there are a few reviews, tests, and ACKs from recognized
>>> developers, there are no outstanding objections, and the maintainer doing
>>> the merge makes a subjective judgement that the code is ready.
>>>
>>>  Consensus-changes, on the other hand, get merged into Bitcoin Core only
>>> after the above criteria are met AND an extremely long discussion period
>>> that has given all the relevant stakeholders a chance to comment, and no
>>> significant objections remain. Consensus-code changes are unanimous. They
>>> must be.
>>>
>>>  The sort of process that exists in standards bodies for example, with
>>> working groups and formal voting procedures, has no place where changes
>>> define the nature and validity of other people's money. Who has the right
>>> to reach into your pocket and define how you can or cannot spend your
>>> coins? The premise of bitcoin is that no one has that right, yet that is
>>> very much what we do when consensus code changes are made. That is why when
>>> we make a change to the rules governing the nature of bitcoin, we must make
>>> sure that everyone is made aware of the change and consents to it.
>>>
>>>  Everyone. Does this work? Does this scale? So far, it does.
>>> Uncontroversial changes, such as BIP 66, are deployed without issue. Every
>>> indication is that BIP 66 will complete deployment in the very near future,
>>> and we intend to repeat this process for more interesting changes such as
>>> BIP65: CHECKLOCKTIMEVERIFY.
>>>
>>>  This isn't about no one stepping forward to be the "decider." This is
>>> about no one having the right to decide these things on the behalf of
>>> others. If a contentious change is proposed and not accepted by the process
>>> of consensus, that is because the process is doing its job at rejecting
>>> controversial changes. It has nothing to do with personality, and
>>> everything to do with the nature of bitcoin itself.
>>>
>>>
>>> On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin < <milly at bitcoins.info>
>>> milly at bitcoins.info> wrote:
>>>
>>>> I have seen this question asked many times.  Most developers become
>>>> defensive and they usually give a very vague 1-sentence answer when this
>>>> question is asked.  It seems to be it is based on personalities rather than
>>>> any kind of definable process.  To have that discussion the personalities
>>>> must be separated out and answers like "such-and-such wouldn't do that"
>>>> don't really do much to advance the discussion.  Also, the incentive for
>>>> new developers to come in is that they will be paid by companies who want
>>>> to influence the code and this should be considered (some developers take
>>>> this statement as an insult when it is just a statement of the incentive
>>>> process).
>>>>
>>>> The other problem you are having is the lead developer does not want to
>>>> be a "decider" when, in fact, he is a very significant decider.  While the
>>>> users have the ultimate choice in a practical sense the chief developer is
>>>> the "decider."  Now people don't want to get him upset so nobody wants to
>>>> push the issue or fully define the process.  Now you are left with a
>>>> broken, unwritten/unspoken process.  While this type of thing may work with
>>>> a small group of developers businesses/investors looking in from the
>>>> outside will see this as a risk.
>>>>
>>>> Until you get passed all the personality-based arguments you are going
>>>> to have a tough time defining a real process.
>>>>
>>>> Russ
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> On 6/24/2015 7:41 PM, Raystonn wrote:
>>>>
>>>>> I would like to start a civil discussion on an undefined, or at least
>>>>> unwritten, portion of the BIP process.  Who should get to vote on approval
>>>>> to commit a BIP implementation into Bitcoin Core?  Is a simple majority of
>>>>> these voters sufficient for approval?  If not, then what is?
>>>>>
>>>>> Raystonn
>>>>> _______________________________________________
>>>>> bitcoin-dev mailing list
>>>>> bitcoin-dev at lists.linuxfoundation.org
>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> bitcoin-dev mailing list
>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>>>
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing listbitcoin-dev at lists.linuxfoundation.orghttps://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/1e70f0ed/attachment-0001.html>

From wtogami at gmail.com  Thu Jun 25 06:16:52 2015
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Wed, 24 Jun 2015 23:16:52 -0700
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CAM7BtUqpmELVnQh9JycjxK0dOn4hqsg6Csz7za55BgYyw+FG7g@mail.gmail.com>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info>
	<CAOG=w-sxovqy0kDyBX=cx4CWWb=cd_F5bO3iH8ZBHsa0D_uK+A@mail.gmail.com>
	<558B68C3.9050608@bitcoins.info>
	<CADm_WcZ+5z-7KDsOaNunSWAROoJEsDSEAFZ-d2C6cZBrQTkBcw@mail.gmail.com>
	<558B9484.1030803@bitcoins.info>
	<CAM7BtUqpmELVnQh9JycjxK0dOn4hqsg6Csz7za55BgYyw+FG7g@mail.gmail.com>
Message-ID: <CAEz79Pqdxc6KUORD9ZBAzctbkLRPfVyQGDeF_dncCVYdJ67jiA@mail.gmail.com>

https://github.com/pstratem/bitcoin/commits/testnet4

See these two commits for an example of changing all the testnet chain
parameters to create an entirely separate testnet network.  This example
"testnet4" changed to different port numbers, pchMessageStart magic, and
with stupid large block sizes.

http://rusty.ozlabs.org/?p=509
Rusty used this to test block propagation latency.

On Wed, Jun 24, 2015 at 11:06 PM, Pindar Wong <pindar.wong at gmail.com> wrote:

> In the process of 'mining consensus', perhaps before voting there should
> be robust system testing and telemetry.
>
> May I ask a questions w.r.t. Process BIPs, what is the process for
> establishing a new testnet (e.g. for testing with 8MB blocks)?
>
> p.
>
>
> On Thu, Jun 25, 2015 at 1:41 PM, Milly Bitcoin <milly at bitcoins.info>
> wrote:
>
>>  These are the kind of silly responses you often get when this subject
>> comes up.  Mr. Garzik knows how to ignore messages he doesn't want so I see
>> no need for him to use the list to attack people he doesn't agree with
>> and/or try to interfere with discussions of others on the list.
>> He turns it into a personality discussion rather than a discussion of
>> Systems Engineering.  He also tries to intimate anyone who brings up the
>> discussion and "punish" them as a lesson to anyone else who may raise the
>> issue.
>>
>> It is interesting that people like that are attracted to a decentralized
>> system.   The reply is simply an attempt at protecting turf which is why
>> Mr. Garzik's vague replies are never taken seriously on the subject of
>> decision-making process for the software.
>>
>> Russ
>>
>>
>>
>> On 6/25/2015 1:07 AM, Jeff Garzik wrote:
>>
>> Ladies & gents, please do not feed the troll.  This has been explained to
>> Milly multiple times in the past, on previous mailing list & github with no
>> impact.
>>
>>
>> On Wed, Jun 24, 2015 at 7:34 PM, Milly Bitcoin <milly at bitcoins.info>
>> wrote:
>>
>>>  I'm sorry but that is the kind of defensive, cultish response everyone
>>> gets when they ask that question.  If you had a well constructed documented
>>> process then you would be able to point to it ... but you can't.  While
>>> there are a few bits and pieces scattered  about in different places there
>>> is no coherent plan or process.
>>>
>>> It is easy to make statements like "consensus must be unanimous" but the
>>> issue is that you never have true 100% consensus yet you have to move
>>> forward in some fashion and everyone has to run software with the same
>>> consensus rules.  The issue is how you move forward is the question that
>>> nobody wants to answer because (a) it is a hard question to answer and (b)
>>> developers see it as a threat to their authority/position.  If people just
>>> keep shutting down the discussion with a bunch of cultish stock answers
>>> then you are never going to move forward with developing some kind of
>>> process.
>>>
>>> From what I can see much of the discussion is personality-driven and not
>>> based on Computer Science or and defined process.  The issue is that a
>>> personality has changed so the process is perceived to be different and
>>> some people want to hard fork.  Previously, the cultish answer is that
>>> Bitcoin development is decentralized because people can fork the code.  Now
>>> that some developers want to fork the code suddenly it is a big problem.
>>> Is forking the code part of the consensus process or is it the work of the
>>> devil?   The fact that there is so much diverse opinion on this shows a
>>> defined process has never been fully vetted or understood.
>>>
>>> I have worked on these processes for many years for projects orders of
>>> magnitudes larger than Bitcoin.  I can absolutely assure you the current
>>> mishmash does not scale and huge amounts of time are wasted.  That should
>>> be readily apparent from the recent discussions and the recent concern it
>>> has caused from people outside the developer's inner circle.
>>>
>>> Lack of defined process = high risk and wasted effort.
>>>
>>> Russ
>>>
>>>
>>>
>>>
>>>
>>> On 6/24/2015 9:50 PM, Mark Friedenbach wrote:
>>>
>>>   I'm sorry but this is absolutely not the case, Milly. The reason that
>>> people get defensive is that we have a carefully constructed process that
>>> does work (thank you very much!) and is well documented. We talk about it
>>> quite often in fact as it is a defining characteristic of how bitcoin is
>>> developed which differs in some ways from how other open source software is
>>> developed -- although it remains the same in most other ways.
>>>
>>>  Changes to the non-consensus sections of Bitcoin Core tend to get
>>> merged when there are a few reviews, tests, and ACKs from recognized
>>> developers, there are no outstanding objections, and the maintainer doing
>>> the merge makes a subjective judgement that the code is ready.
>>>
>>>  Consensus-changes, on the other hand, get merged into Bitcoin Core only
>>> after the above criteria are met AND an extremely long discussion period
>>> that has given all the relevant stakeholders a chance to comment, and no
>>> significant objections remain. Consensus-code changes are unanimous. They
>>> must be.
>>>
>>>  The sort of process that exists in standards bodies for example, with
>>> working groups and formal voting procedures, has no place where changes
>>> define the nature and validity of other people's money. Who has the right
>>> to reach into your pocket and define how you can or cannot spend your
>>> coins? The premise of bitcoin is that no one has that right, yet that is
>>> very much what we do when consensus code changes are made. That is why when
>>> we make a change to the rules governing the nature of bitcoin, we must make
>>> sure that everyone is made aware of the change and consents to it.
>>>
>>>  Everyone. Does this work? Does this scale? So far, it does.
>>> Uncontroversial changes, such as BIP 66, are deployed without issue. Every
>>> indication is that BIP 66 will complete deployment in the very near future,
>>> and we intend to repeat this process for more interesting changes such as
>>> BIP65: CHECKLOCKTIMEVERIFY.
>>>
>>>  This isn't about no one stepping forward to be the "decider." This is
>>> about no one having the right to decide these things on the behalf of
>>> others. If a contentious change is proposed and not accepted by the process
>>> of consensus, that is because the process is doing its job at rejecting
>>> controversial changes. It has nothing to do with personality, and
>>> everything to do with the nature of bitcoin itself.
>>>
>>>
>>> On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin < <milly at bitcoins.info>
>>> milly at bitcoins.info> wrote:
>>>
>>>> I have seen this question asked many times.  Most developers become
>>>> defensive and they usually give a very vague 1-sentence answer when this
>>>> question is asked.  It seems to be it is based on personalities rather than
>>>> any kind of definable process.  To have that discussion the personalities
>>>> must be separated out and answers like "such-and-such wouldn't do that"
>>>> don't really do much to advance the discussion.  Also, the incentive for
>>>> new developers to come in is that they will be paid by companies who want
>>>> to influence the code and this should be considered (some developers take
>>>> this statement as an insult when it is just a statement of the incentive
>>>> process).
>>>>
>>>> The other problem you are having is the lead developer does not want to
>>>> be a "decider" when, in fact, he is a very significant decider.  While the
>>>> users have the ultimate choice in a practical sense the chief developer is
>>>> the "decider."  Now people don't want to get him upset so nobody wants to
>>>> push the issue or fully define the process.  Now you are left with a
>>>> broken, unwritten/unspoken process.  While this type of thing may work with
>>>> a small group of developers businesses/investors looking in from the
>>>> outside will see this as a risk.
>>>>
>>>> Until you get passed all the personality-based arguments you are going
>>>> to have a tough time defining a real process.
>>>>
>>>> Russ
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> On 6/24/2015 7:41 PM, Raystonn wrote:
>>>>
>>>>> I would like to start a civil discussion on an undefined, or at least
>>>>> unwritten, portion of the BIP process.  Who should get to vote on approval
>>>>> to commit a BIP implementation into Bitcoin Core?  Is a simple majority of
>>>>> these voters sufficient for approval?  If not, then what is?
>>>>>
>>>>> Raystonn
>>>>> _______________________________________________
>>>>> bitcoin-dev mailing list
>>>>> bitcoin-dev at lists.linuxfoundation.org
>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> bitcoin-dev mailing list
>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>>>
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing listbitcoin-dev at lists.linuxfoundation.orghttps://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/1482dee3/attachment-0001.html>

From pindar.wong at gmail.com  Thu Jun 25 06:27:37 2015
From: pindar.wong at gmail.com (Pindar Wong)
Date: Thu, 25 Jun 2015 14:27:37 +0800
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CAEz79Pqdxc6KUORD9ZBAzctbkLRPfVyQGDeF_dncCVYdJ67jiA@mail.gmail.com>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info>
	<CAOG=w-sxovqy0kDyBX=cx4CWWb=cd_F5bO3iH8ZBHsa0D_uK+A@mail.gmail.com>
	<558B68C3.9050608@bitcoins.info>
	<CADm_WcZ+5z-7KDsOaNunSWAROoJEsDSEAFZ-d2C6cZBrQTkBcw@mail.gmail.com>
	<558B9484.1030803@bitcoins.info>
	<CAM7BtUqpmELVnQh9JycjxK0dOn4hqsg6Csz7za55BgYyw+FG7g@mail.gmail.com>
	<CAEz79Pqdxc6KUORD9ZBAzctbkLRPfVyQGDeF_dncCVYdJ67jiA@mail.gmail.com>
Message-ID: <CAM7BtUp7nWN0z3xw=SUyNFZByD6B0i+E30wDJRb7LDryKip7zw@mail.gmail.com>

Thank you very much Mark and Warren this is most helpful.

Regards,

p.


On Thu, Jun 25, 2015 at 2:16 PM, Warren Togami Jr. <wtogami at gmail.com>
wrote:

> https://github.com/pstratem/bitcoin/commits/testnet4
>
> See these two commits for an example of changing all the testnet chain
> parameters to create an entirely separate testnet network.  This example
> "testnet4" changed to different port numbers, pchMessageStart magic, and
> with stupid large block sizes.
>
> http://rusty.ozlabs.org/?p=509
> Rusty used this to test block propagation latency.
>
> On Wed, Jun 24, 2015 at 11:06 PM, Pindar Wong <pindar.wong at gmail.com>
> wrote:
>
>> In the process of 'mining consensus', perhaps before voting there should
>> be robust system testing and telemetry.
>>
>> May I ask a questions w.r.t. Process BIPs, what is the process for
>> establishing a new testnet (e.g. for testing with 8MB blocks)?
>>
>> p.
>>
>>
>> On Thu, Jun 25, 2015 at 1:41 PM, Milly Bitcoin <milly at bitcoins.info>
>> wrote:
>>
>>>  These are the kind of silly responses you often get when this subject
>>> comes up.  Mr. Garzik knows how to ignore messages he doesn't want so I see
>>> no need for him to use the list to attack people he doesn't agree with
>>> and/or try to interfere with discussions of others on the list.
>>> He turns it into a personality discussion rather than a discussion of
>>> Systems Engineering.  He also tries to intimate anyone who brings up the
>>> discussion and "punish" them as a lesson to anyone else who may raise the
>>> issue.
>>>
>>> It is interesting that people like that are attracted to a decentralized
>>> system.   The reply is simply an attempt at protecting turf which is why
>>> Mr. Garzik's vague replies are never taken seriously on the subject of
>>> decision-making process for the software.
>>>
>>> Russ
>>>
>>>
>>>
>>> On 6/25/2015 1:07 AM, Jeff Garzik wrote:
>>>
>>> Ladies & gents, please do not feed the troll.  This has been explained
>>> to Milly multiple times in the past, on previous mailing list & github with
>>> no impact.
>>>
>>>
>>> On Wed, Jun 24, 2015 at 7:34 PM, Milly Bitcoin <milly at bitcoins.info>
>>> wrote:
>>>
>>>>  I'm sorry but that is the kind of defensive, cultish response
>>>> everyone gets when they ask that question.  If you had a well constructed
>>>> documented process then you would be able to point to it ... but you
>>>> can't.  While there are a few bits and pieces scattered  about in different
>>>> places there is no coherent plan or process.
>>>>
>>>> It is easy to make statements like "consensus must be unanimous" but
>>>> the issue is that you never have true 100% consensus yet you have to move
>>>> forward in some fashion and everyone has to run software with the same
>>>> consensus rules.  The issue is how you move forward is the question that
>>>> nobody wants to answer because (a) it is a hard question to answer and (b)
>>>> developers see it as a threat to their authority/position.  If people just
>>>> keep shutting down the discussion with a bunch of cultish stock answers
>>>> then you are never going to move forward with developing some kind of
>>>> process.
>>>>
>>>> From what I can see much of the discussion is personality-driven and
>>>> not based on Computer Science or and defined process.  The issue is that a
>>>> personality has changed so the process is perceived to be different and
>>>> some people want to hard fork.  Previously, the cultish answer is that
>>>> Bitcoin development is decentralized because people can fork the code.  Now
>>>> that some developers want to fork the code suddenly it is a big problem.
>>>> Is forking the code part of the consensus process or is it the work of the
>>>> devil?   The fact that there is so much diverse opinion on this shows a
>>>> defined process has never been fully vetted or understood.
>>>>
>>>> I have worked on these processes for many years for projects orders of
>>>> magnitudes larger than Bitcoin.  I can absolutely assure you the current
>>>> mishmash does not scale and huge amounts of time are wasted.  That should
>>>> be readily apparent from the recent discussions and the recent concern it
>>>> has caused from people outside the developer's inner circle.
>>>>
>>>> Lack of defined process = high risk and wasted effort.
>>>>
>>>> Russ
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> On 6/24/2015 9:50 PM, Mark Friedenbach wrote:
>>>>
>>>>   I'm sorry but this is absolutely not the case, Milly. The reason
>>>> that people get defensive is that we have a carefully constructed process
>>>> that does work (thank you very much!) and is well documented. We talk about
>>>> it quite often in fact as it is a defining characteristic of how bitcoin is
>>>> developed which differs in some ways from how other open source software is
>>>> developed -- although it remains the same in most other ways.
>>>>
>>>>  Changes to the non-consensus sections of Bitcoin Core tend to get
>>>> merged when there are a few reviews, tests, and ACKs from recognized
>>>> developers, there are no outstanding objections, and the maintainer doing
>>>> the merge makes a subjective judgement that the code is ready.
>>>>
>>>>  Consensus-changes, on the other hand, get merged into Bitcoin Core
>>>> only after the above criteria are met AND an extremely long discussion
>>>> period that has given all the relevant stakeholders a chance to comment,
>>>> and no significant objections remain. Consensus-code changes are unanimous.
>>>> They must be.
>>>>
>>>>  The sort of process that exists in standards bodies for example, with
>>>> working groups and formal voting procedures, has no place where changes
>>>> define the nature and validity of other people's money. Who has the right
>>>> to reach into your pocket and define how you can or cannot spend your
>>>> coins? The premise of bitcoin is that no one has that right, yet that is
>>>> very much what we do when consensus code changes are made. That is why when
>>>> we make a change to the rules governing the nature of bitcoin, we must make
>>>> sure that everyone is made aware of the change and consents to it.
>>>>
>>>>  Everyone. Does this work? Does this scale? So far, it does.
>>>> Uncontroversial changes, such as BIP 66, are deployed without issue. Every
>>>> indication is that BIP 66 will complete deployment in the very near future,
>>>> and we intend to repeat this process for more interesting changes such as
>>>> BIP65: CHECKLOCKTIMEVERIFY.
>>>>
>>>>  This isn't about no one stepping forward to be the "decider." This is
>>>> about no one having the right to decide these things on the behalf of
>>>> others. If a contentious change is proposed and not accepted by the process
>>>> of consensus, that is because the process is doing its job at rejecting
>>>> controversial changes. It has nothing to do with personality, and
>>>> everything to do with the nature of bitcoin itself.
>>>>
>>>>
>>>> On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin < <milly at bitcoins.info>
>>>> milly at bitcoins.info> wrote:
>>>>
>>>>> I have seen this question asked many times.  Most developers become
>>>>> defensive and they usually give a very vague 1-sentence answer when this
>>>>> question is asked.  It seems to be it is based on personalities rather than
>>>>> any kind of definable process.  To have that discussion the personalities
>>>>> must be separated out and answers like "such-and-such wouldn't do that"
>>>>> don't really do much to advance the discussion.  Also, the incentive for
>>>>> new developers to come in is that they will be paid by companies who want
>>>>> to influence the code and this should be considered (some developers take
>>>>> this statement as an insult when it is just a statement of the incentive
>>>>> process).
>>>>>
>>>>> The other problem you are having is the lead developer does not want
>>>>> to be a "decider" when, in fact, he is a very significant decider.  While
>>>>> the users have the ultimate choice in a practical sense the chief developer
>>>>> is the "decider."  Now people don't want to get him upset so nobody wants
>>>>> to push the issue or fully define the process.  Now you are left with a
>>>>> broken, unwritten/unspoken process.  While this type of thing may work with
>>>>> a small group of developers businesses/investors looking in from the
>>>>> outside will see this as a risk.
>>>>>
>>>>> Until you get passed all the personality-based arguments you are going
>>>>> to have a tough time defining a real process.
>>>>>
>>>>> Russ
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> On 6/24/2015 7:41 PM, Raystonn wrote:
>>>>>
>>>>>> I would like to start a civil discussion on an undefined, or at least
>>>>>> unwritten, portion of the BIP process.  Who should get to vote on approval
>>>>>> to commit a BIP implementation into Bitcoin Core?  Is a simple majority of
>>>>>> these voters sufficient for approval?  If not, then what is?
>>>>>>
>>>>>> Raystonn
>>>>>> _______________________________________________
>>>>>> bitcoin-dev mailing list
>>>>>> bitcoin-dev at lists.linuxfoundation.org
>>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>>>
>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> bitcoin-dev mailing list
>>>>> bitcoin-dev at lists.linuxfoundation.org
>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>>
>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> bitcoin-dev mailing list
>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>
>>>>
>>>
>>>
>>> _______________________________________________
>>> bitcoin-dev mailing listbitcoin-dev at lists.linuxfoundation.orghttps://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>>>
>>>
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/51c533b1/attachment-0001.html>

From pindar.wong at gmail.com  Thu Jun 25 06:43:19 2015
From: pindar.wong at gmail.com (Pindar Wong)
Date: Thu, 25 Jun 2015 14:43:19 +0800
Subject: [bitcoin-dev] [Bitcoin-development] questions about bitcoin-XT
 code fork & non-consensus hard-fork
In-Reply-To: <20150617035959.GB23826@muck>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
	<CAM7BtUoNJ3vPqW9esCBo8XSN=yRjC3oheP_hd_kcgzs0_0De6w@mail.gmail.com>
	<20150616133305.GA30988@muck>
	<CAM7BtUr1zmw_Jmyn8ULZ=Jb-pkAwUwvBK68UWmzeJH3kAmYEhA@mail.gmail.com>
	<20150617035959.GB23826@muck>
Message-ID: <CAM7BtUqCZSGfgF7Xq4g7ZCrB-nrsur8B78myDd+NBsqZ0S_rZw@mail.gmail.com>

On Wed, Jun 17, 2015 at 11:59 AM, Peter Todd <pete at petertodd.org> wrote:

> On Tue, Jun 16, 2015 at 09:55:13PM +0800, Pindar Wong wrote:
> > > Agreed. Pieter Wuille's recent work is a great example of the kind of
> > > science-driven investigations that need to be done - and haven't been
> > > done very much - to get us some hard data to make decisions on.
> > >
> >
> > Thank you very much Peter for pointing this out! That is very kind of
> you.
> >
> > It would be great to work with Constance Choi, Primavera De Filippi, your
> > goodself and others to make this happen.
>
> Great! They're excited to see this happen. I'm in London right now
> actually for the conference they were holding this week; the blocksize
> issue was being discussed a fair bit there among attendees. (notably,
> with rather different views than seen on reddit!)
>
> > As you may know, the Hong Kong Monetary Authority considers bitcoin a
> > virtual 'commodity' and not a currency per se.
>
> Yup, though keep in mind the regulatory question is more than just how
> your local jurisdiction views Bitcoin, but rather how your customers'
> jurisdictions view Bitcoin.
>
> Of course, when I say "customers" above, I mean the entire Bitcoin
> community that is ultimately buying the new coins produced by miners and
> paying fees to them!
>

I'm sorry for the distraction with the mailing list problems.

Taking an ecosystem view, the miners are important, so are all the other
participants who rely on it and  invest time, effort and energy to make
Bitcoin work and work well.

I am in contact with Primavera and it would appear that the Cyberport is
available for use on October 14 and 15 (Wed/Thursday).

Last November, this was where the Global Bitcoin Summit (Hong Kong)
<http://www.cyberport.hk/en/about_cyberport/our_5_centres/collaboration_centre/collaboration_news/2146>
was hosted with the participation of many of China's leading
Bitcoin-related companies. There is a meeting now in Shanghai.

It would be an honour to host a more technical meeting to discuss BIP100,
101 et al. should be interest to do so.

p.


>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/8e8af878/attachment.html>

From cipher.anthem at gmx.com  Thu Jun 25 07:51:20 2015
From: cipher.anthem at gmx.com (cipher anthem)
Date: Thu, 25 Jun 2015 09:51:20 +0200
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CADm_WcZ+5z-7KDsOaNunSWAROoJEsDSEAFZ-d2C6cZBrQTkBcw@mail.gmail.com>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info>
	<CAOG=w-sxovqy0kDyBX=cx4CWWb=cd_F5bO3iH8ZBHsa0D_uK+A@mail.gmail.com>
	<558B68C3.9050608@bitcoins.info>,
	<CADm_WcZ+5z-7KDsOaNunSWAROoJEsDSEAFZ-d2C6cZBrQTkBcw@mail.gmail.com>
Message-ID: <trinity-6b7fb94a-bfe3-4439-825e-59322f1200bb-1435218680169@3capp-mailcom-bs08>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/5383b79c/attachment.html>

From nxtchg at hush.com  Thu Jun 25 10:09:06 2015
From: nxtchg at hush.com (nxtchg at hush.com)
Date: Thu, 25 Jun 2015 13:09:06 +0300
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <trinity-6b7fb94a-bfe3-4439-825e-59322f1200bb-1435218680169@3capp-mailcom-bs08>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info>
	<CAOG=w-sxovqy0kDyBX=cx4CWWb=cd_F5bO3iH8ZBHsa0D_uK+A@mail.gmail.com>
	<558B68C3.9050608@bitcoins.info> ,
	<CADm_WcZ+5z-7KDsOaNunSWAROoJEsDSEAFZ-d2C6cZBrQTkBcw@mail.gmail.com>
	<trinity-6b7fb94a-bfe3-4439-825e-59322f1200bb-1435218680169@3capp-mailcom-bs08>
Message-ID: <20150625100906.85D9E41A42@smtp.hushmail.com>

You just proved his point once again with yet another ad hominem :)

Good job.

On 6/25/2015 at 10:56 AM, "cipher anthem"  wrote:+1 on this!
 I have come across Milly a couple of times on reddit and disqus and
she basically dismisses anyone who doesn't agree with her opinions.
always labeling them "cultish". Please ignore her so you can stay
productive.    
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/ef081ed8/attachment.html>

From milly at bitcoins.info  Thu Jun 25 12:42:40 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Thu, 25 Jun 2015 08:42:40 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <trinity-6b7fb94a-bfe3-4439-825e-59322f1200bb-1435218680169@3capp-mailcom-bs08>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info>
	<CAOG=w-sxovqy0kDyBX=cx4CWWb=cd_F5bO3iH8ZBHsa0D_uK+A@mail.gmail.com>
	<558B68C3.9050608@bitcoins.info>
	<CADm_WcZ+5z-7KDsOaNunSWAROoJEsDSEAFZ-d2C6cZBrQTkBcw@mail.gmail.com>
	<trinity-6b7fb94a-bfe3-4439-825e-59322f1200bb-1435218680169@3capp-mailcom-bs08>
Message-ID: <558BF740.7060003@bitcoins.info>

"Cultish" means making claims without any supporting facts.  Labeling 
Open Source software as being "decentralized" just because people can 
choose which version to run is a "cultish" claim.  Just because Bitcoin 
uses the mining process to come to consensus over the state of the 
ledger that does not mean the software versions have the same level of 
decentralization because users can decide which version to run. I am in 
the USA and I can vote in elections but I would not call the US 
government "decentralized."  It is a very complicated issue and cannot 
be explained in one or two sentences of hand-waiving arguments like you 
often see here.

Russ




On 6/25/2015 3:51 AM, cipher anthem wrote:
> +1 on this!
>
> I have come across Milly a couple of times on reddit and disqus and 
> she basically dismisses anyone who doesn't agree with her opinions. 
> always labeling them "cultish". Please ignore her so you can stay 
> productive.
> *Sent:* Thursday, June 25, 2015 at 5:07 AM
> *From:* "Jeff Garzik" <jgarzik at gmail.com>
> *To:* bitcoin-dev at lists.linuxfoundation.org
> *Subject:* Re: [bitcoin-dev] BIP Process and Votes
> Ladies & gents, please do not feed the troll. This has been explained 
> to Milly multiple times in the past, on previous mailing list & github 
> with no impact.
> On Wed, Jun 24, 2015 at 7:34 PM, Milly Bitcoin <milly at bitcoins.info> 
> wrote:
>
>     I'm sorry but that is the kind of defensive, cultish response
>     everyone gets when they ask that question.  If you had a well
>     constructed documented process then you would be able to point to
>     it ... but you can't. While there are a few bits and pieces
>     scattered  about in different places there is no coherent plan or
>     process.
>
>     It is easy to make statements like "consensus must be unanimous"
>     but the issue is that you never have true 100% consensus yet you
>     have to move forward in some fashion and everyone has to run
>     software with the same consensus rules.  The issue is how you move
>     forward is the question that nobody wants to answer because (a) it
>     is a hard question to answer and (b) developers see it as a threat
>     to their authority/position.  If people just keep shutting down
>     the discussion with a bunch of cultish stock answers then you are
>     never going to move forward with developing some kind of process.
>
>     >From what I can see much of the discussion is personality-driven
>     and not based on Computer Science or and defined process.  The
>     issue is that a personality has changed so the process is
>     perceived to be different and some people want to hard fork. 
>     Previously, the cultish answer is that Bitcoin development is
>     decentralized because people can fork the code.  Now that some
>     developers want to fork the code suddenly it is a big problem.  
>     Is forking the code part of the consensus process or is it the
>     work of the devil?   The fact that there is so much diverse
>     opinion on this shows a defined process has never been fully
>     vetted or understood.
>
>     I have worked on these processes for many years for projects
>     orders of magnitudes larger than Bitcoin.  I can absolutely assure
>     you the current mishmash does not scale and huge amounts of time
>     are wasted.  That should be readily apparent from the recent
>     discussions and the recent concern it has caused from people
>     outside the developer's inner circle.
>
>     Lack of defined process = high risk and wasted effort.
>
>     Russ
>
>
>
>
>
>     On 6/24/2015 9:50 PM, Mark Friedenbach wrote:
>
>         I'm sorry but this is absolutely not the case, Milly. The
>         reason that people get defensive is that we have a carefully
>         constructed process that does work (thank you very much!) and
>         is well documented. We talk about it quite often in fact as it
>         is a defining characteristic of how bitcoin is developed which
>         differs in some ways from how other open source software is
>         developed -- although it remains the same in most other ways.
>         Changes to the non-consensus sections of Bitcoin Core tend to
>         get merged when there are a few reviews, tests, and ACKs from
>         recognized developers, there are no outstanding objections,
>         and the maintainer doing the merge makes a subjective
>         judgement that the code is ready.
>         Consensus-changes, on the other hand, get merged into Bitcoin
>         Core only after the above criteria are met AND an extremely
>         long discussion period that has given all the relevant
>         stakeholders a chance to comment, and no significant
>         objections remain. Consensus-code changes are unanimous. They
>         must be.
>         The sort of process that exists in standards bodies for
>         example, with working groups and formal voting procedures, has
>         no place where changes define the nature and validity of other
>         people's money. Who has the right to reach into your pocket
>         and define how you can or cannot spend your coins? The premise
>         of bitcoin is that no one has that right, yet that is very
>         much what we do when consensus code changes are made. That is
>         why when we make a change to the rules governing the nature of
>         bitcoin, we must make sure that everyone is made aware of the
>         change and consents to it.
>         Everyone. Does this work? Does this scale? So far, it does.
>         Uncontroversial changes, such as BIP 66, are deployed without
>         issue. Every indication is that BIP 66 will complete
>         deployment in the very near future, and we intend to repeat
>         this process for more interesting changes such as BIP65:
>         CHECKLOCKTIMEVERIFY.
>         This isn't about no one stepping forward to be the "decider."
>         This is about no one having the right to decide these things
>         on the behalf of others. If a contentious change is proposed
>         and not accepted by the process of consensus, that is because
>         the process is doing its job at rejecting controversial
>         changes. It has nothing to do with personality, and everything
>         to do with the nature of bitcoin itself.
>         On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin
>         <milly at bitcoins.info> wrote:
>
>             I have seen this question asked many times.  Most
>             developers become defensive and they usually give a very
>             vague 1-sentence answer when this question is asked. It
>             seems to be it is based on personalities rather than any
>             kind of definable process.  To have that discussion the
>             personalities must be separated out and answers like
>             "such-and-such wouldn't do that" don't really do much to
>             advance the discussion.  Also, the incentive for new
>             developers to come in is that they will be paid by
>             companies who want to influence the code and this should
>             be considered (some developers take this statement as an
>             insult when it is just a statement of the incentive process).
>
>             The other problem you are having is the lead developer
>             does not want to be a "decider" when, in fact, he is a
>             very significant decider. While the users have the
>             ultimate choice in a practical sense the chief developer
>             is the "decider."  Now people don't want to get him upset
>             so nobody wants to push the issue or fully define the
>             process.  Now you are left with a broken,
>             unwritten/unspoken process.  While this type of thing may
>             work with a small group of developers businesses/investors
>             looking in from the outside will see this as a risk.
>
>             Until you get passed all the personality-based arguments
>             you are going to have a tough time defining a real process.
>
>             Russ
>
>
>
>
>
>
>             On 6/24/2015 7:41 PM, Raystonn wrote:
>
>                 I would like to start a civil discussion on an
>                 undefined, or at least unwritten, portion of the BIP
>                 process.  Who should get to vote on approval to commit
>                 a BIP implementation into Bitcoin Core? Is a simple
>                 majority of these voters sufficient for approval?  If
>                 not, then what is?
>
>                 Raystonn
>                 _______________________________________________
>                 bitcoin-dev mailing list
>                 bitcoin-dev at lists.linuxfoundation.org
>                 https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
>             _______________________________________________
>             bitcoin-dev mailing list
>             bitcoin-dev at lists.linuxfoundation.org
>             https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>     _______________________________________________
>     bitcoin-dev mailing list
>     bitcoin-dev at lists.linuxfoundation.org
>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
> _______________________________________________ bitcoin-dev mailing 
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/51d968ab/attachment-0001.html>

From s7r at sky-ip.org  Thu Jun 25 13:36:49 2015
From: s7r at sky-ip.org (s7r)
Date: Thu, 25 Jun 2015 16:36:49 +0300
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <558B4632.8080504@bitcoins.info>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info>
Message-ID: <558C03F1.70603@sky-ip.org>

I guess you mean Wladimir here. You are wrong, Wladimir does decide and
if you look at the commit history on github.com for bitcoin core you
will see, that he does actually decide and does it really good.

He just does not want to decide (and he really should not) on CONSENSUS
changes or protocol changes. This is totally different.

Stop the analogy with "other open source projects". This is an open
source project (the code part) but unlike any other open source projects
which can just be forked, without affecting the other users, in bitcoin
we need all the users to trust a single blockchain, so it'll have value.
If some users fork the blockchain and change consensus rules, they are
not just harming themselves, they are affecting ALL the users, since
such a thing would have strong impact over the BTC/FIAT rate, affecting
everyone in the ecosystem. There is economics involved here and human
element, things which are hard to fix via code, even if the code is
developed in open source style.

It's one thing to decide to merge some patches, improve the code, etc.
and another thing to decide for consensus rules when you literary play
with 4 billion united states dollars of other people's money. This
shouldn't be Wladimir's responsibility, it's just unfair for people to
throw this on his shoulders.

I do not under any circumstances suggest that the consensus should
remain as it is now forever. We need to improve it, but this should not
be on the maintainer. I've seen smart suggestions on this mail list
where consensus changes can be made during a long period of time,
through soft forks, where all users/miners/exchangers/merchants get the
chance to choose / take action.

On 6/25/2015 3:07 AM, Milly Bitcoin wrote:
> I have seen this question asked many times.  Most developers become
> defensive and they usually give a very vague 1-sentence answer when this
> question is asked.  It seems to be it is based on personalities rather
> than any kind of definable process.  To have that discussion the
> personalities must be separated out and answers like "such-and-such
> wouldn't do that" don't really do much to advance the discussion.  Also,
> the incentive for new developers to come in is that they will be paid by
> companies who want to influence the code and this should be considered
> (some developers take this statement as an insult when it is just a
> statement of the incentive process).
> 
> The other problem you are having is the lead developer does not want to
> be a "decider" when, in fact, he is a very significant decider.  While
> the users have the ultimate choice in a practical sense the chief
> developer is the "decider."  Now people don't want to get him upset so
> nobody wants to push the issue or fully define the process.  Now you are
> left with a broken, unwritten/unspoken process.  While this type of
> thing may work with a small group of developers businesses/investors
> looking in from the outside will see this as a risk.
> 
> Until you get passed all the personality-based arguments you are going
> to have a tough time defining a real process.
> 
> Russ
> 
> 
> 
> 
> 
> On 6/24/2015 7:41 PM, Raystonn wrote:
>> I would like to start a civil discussion on an undefined, or at least
>> unwritten, portion of the BIP process.  Who should get to vote on
>> approval to commit a BIP implementation into Bitcoin Core?  Is a
>> simple majority of these voters sufficient for approval?  If not, then
>> what is?
>>
>> Raystonn
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
> 
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From elombrozo at gmail.com  Thu Jun 25 13:41:01 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 25 Jun 2015 06:41:01 -0700
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <558C03F1.70603@sky-ip.org>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info> <558C03F1.70603@sky-ip.org>
Message-ID: <53DED62D-6645-464A-998F-C31464FD0C1A@gmail.com>

Wladimir is doing an amazing job under difficult circumstances. Give the guy a break, please.

- Eric Lombrozo

> On Jun 25, 2015, at 6:36 AM, s7r <s7r at sky-ip.org> wrote:
> 
> I guess you mean Wladimir here. You are wrong, Wladimir does decide and
> if you look at the commit history on github.com for bitcoin core you
> will see, that he does actually decide and does it really good.
> 
> He just does not want to decide (and he really should not) on CONSENSUS
> changes or protocol changes. This is totally different.
> 
> Stop the analogy with "other open source projects". This is an open
> source project (the code part) but unlike any other open source projects
> which can just be forked, without affecting the other users, in bitcoin
> we need all the users to trust a single blockchain, so it'll have value.
> If some users fork the blockchain and change consensus rules, they are
> not just harming themselves, they are affecting ALL the users, since
> such a thing would have strong impact over the BTC/FIAT rate, affecting
> everyone in the ecosystem. There is economics involved here and human
> element, things which are hard to fix via code, even if the code is
> developed in open source style.
> 
> It's one thing to decide to merge some patches, improve the code, etc.
> and another thing to decide for consensus rules when you literary play
> with 4 billion united states dollars of other people's money. This
> shouldn't be Wladimir's responsibility, it's just unfair for people to
> throw this on his shoulders.
> 
> I do not under any circumstances suggest that the consensus should
> remain as it is now forever. We need to improve it, but this should not
> be on the maintainer. I've seen smart suggestions on this mail list
> where consensus changes can be made during a long period of time,
> through soft forks, where all users/miners/exchangers/merchants get the
> chance to choose / take action.
> 
> On 6/25/2015 3:07 AM, Milly Bitcoin wrote:
>> I have seen this question asked many times.  Most developers become
>> defensive and they usually give a very vague 1-sentence answer when this
>> question is asked.  It seems to be it is based on personalities rather
>> than any kind of definable process.  To have that discussion the
>> personalities must be separated out and answers like "such-and-such
>> wouldn't do that" don't really do much to advance the discussion.  Also,
>> the incentive for new developers to come in is that they will be paid by
>> companies who want to influence the code and this should be considered
>> (some developers take this statement as an insult when it is just a
>> statement of the incentive process).
>> 
>> The other problem you are having is the lead developer does not want to
>> be a "decider" when, in fact, he is a very significant decider.  While
>> the users have the ultimate choice in a practical sense the chief
>> developer is the "decider."  Now people don't want to get him upset so
>> nobody wants to push the issue or fully define the process.  Now you are
>> left with a broken, unwritten/unspoken process.  While this type of
>> thing may work with a small group of developers businesses/investors
>> looking in from the outside will see this as a risk.
>> 
>> Until you get passed all the personality-based arguments you are going
>> to have a tough time defining a real process.
>> 
>> Russ
>> 
>> 
>> 
>> 
>> 
>> On 6/24/2015 7:41 PM, Raystonn wrote:
>>> I would like to start a civil discussion on an undefined, or at least
>>> unwritten, portion of the BIP process.  Who should get to vote on
>>> approval to commit a BIP implementation into Bitcoin Core?  Is a
>>> simple majority of these voters sufficient for approval?  If not, then
>>> what is?
>>> 
>>> Raystonn
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>> 
>> 
>> 
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/79673426/attachment.sig>

From gacrux at gmail.com  Thu Jun 25 13:50:41 2015
From: gacrux at gmail.com (Gareth Williams)
Date: Thu, 25 Jun 2015 23:50:41 +1000
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CADm_WcZ52_fvNk_rWzu+Nw1CBz2o6t6cMkEfOm3BpdjH7iQKrw@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<558A0B4A.7090205@riseup.net> <558A1E8E.30306@novauri.com>
	<CADm_WcZ52_fvNk_rWzu+Nw1CBz2o6t6cMkEfOm3BpdjH7iQKrw@mail.gmail.com>
Message-ID: <0CAB4453-0C88-4CCB-86C1-DA192D4F77A1@gmail.com>

On 24 June 2015 1:49:51 PM AEST, Jeff Garzik <jgarzik at gmail.com> wrote:
>Miners can collude today to lower the block size limit.

Of course they can. What, then, is the need for BIP100's hard-limit voting mechanism?

You only need consensus rules to enforce block size limits if you're enforcing them _against_ miners. Which may be a perfectly valid thing to do (if your threat model includes, for example, the possibility that large miners deliberately create large blocks to gain an advantage over small miners.) But BIP100 doesn't address that anyway. 

Wouldn't it be safer for consensus to get behind Gavin's simpler 8MB->8GB hard-limit growth curve*, and then encourage miners to enforce a soft limit below that, agreed through a voting mechanism? The later can be implemented at any time without consensus changes -- nobody can prevent miners from coordinating the max block size they'll build on anyway.

* but with a safer "supermajority" than 75% please :)
-- 
Sent from my Android device with K-9 Mail. Please excuse my brevity.

From s7r at sky-ip.org  Thu Jun 25 13:51:33 2015
From: s7r at sky-ip.org (s7r)
Date: Thu, 25 Jun 2015 16:51:33 +0300
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <53DED62D-6645-464A-998F-C31464FD0C1A@gmail.com>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info> <558C03F1.70603@sky-ip.org>
	<53DED62D-6645-464A-998F-C31464FD0C1A@gmail.com>
Message-ID: <558C0765.1070402@sky-ip.org>

+1 for Wladimir, as I said. Anyone who checks the commit history on
github can see that he decides quite well all the time for code changes.
These fake arguments are thrown by people who hope they will force him
into deciding for consensus / protocol changes. This won't happen.

On 6/25/2015 4:41 PM, Eric Lombrozo wrote:
> Wladimir is doing an amazing job under difficult circumstances. Give the guy a break, please.
> 
> - Eric Lombrozo
> 
>> On Jun 25, 2015, at 6:36 AM, s7r <s7r at sky-ip.org> wrote:
>>
>> I guess you mean Wladimir here. You are wrong, Wladimir does decide and
>> if you look at the commit history on github.com for bitcoin core you
>> will see, that he does actually decide and does it really good.
>>
>> He just does not want to decide (and he really should not) on CONSENSUS
>> changes or protocol changes. This is totally different.
>>
>> Stop the analogy with "other open source projects". This is an open
>> source project (the code part) but unlike any other open source projects
>> which can just be forked, without affecting the other users, in bitcoin
>> we need all the users to trust a single blockchain, so it'll have value.
>> If some users fork the blockchain and change consensus rules, they are
>> not just harming themselves, they are affecting ALL the users, since
>> such a thing would have strong impact over the BTC/FIAT rate, affecting
>> everyone in the ecosystem. There is economics involved here and human
>> element, things which are hard to fix via code, even if the code is
>> developed in open source style.
>>
>> It's one thing to decide to merge some patches, improve the code, etc.
>> and another thing to decide for consensus rules when you literary play
>> with 4 billion united states dollars of other people's money. This
>> shouldn't be Wladimir's responsibility, it's just unfair for people to
>> throw this on his shoulders.
>>
>> I do not under any circumstances suggest that the consensus should
>> remain as it is now forever. We need to improve it, but this should not
>> be on the maintainer. I've seen smart suggestions on this mail list
>> where consensus changes can be made during a long period of time,
>> through soft forks, where all users/miners/exchangers/merchants get the
>> chance to choose / take action.
>>
>> On 6/25/2015 3:07 AM, Milly Bitcoin wrote:
>>> I have seen this question asked many times.  Most developers become
>>> defensive and they usually give a very vague 1-sentence answer when this
>>> question is asked.  It seems to be it is based on personalities rather
>>> than any kind of definable process.  To have that discussion the
>>> personalities must be separated out and answers like "such-and-such
>>> wouldn't do that" don't really do much to advance the discussion.  Also,
>>> the incentive for new developers to come in is that they will be paid by
>>> companies who want to influence the code and this should be considered
>>> (some developers take this statement as an insult when it is just a
>>> statement of the incentive process).
>>>
>>> The other problem you are having is the lead developer does not want to
>>> be a "decider" when, in fact, he is a very significant decider.  While
>>> the users have the ultimate choice in a practical sense the chief
>>> developer is the "decider."  Now people don't want to get him upset so
>>> nobody wants to push the issue or fully define the process.  Now you are
>>> left with a broken, unwritten/unspoken process.  While this type of
>>> thing may work with a small group of developers businesses/investors
>>> looking in from the outside will see this as a risk.
>>>
>>> Until you get passed all the personality-based arguments you are going
>>> to have a tough time defining a real process.
>>>
>>> Russ
>>>
>>>
>>>
>>>
>>>
>>> On 6/24/2015 7:41 PM, Raystonn wrote:
>>>> I would like to start a civil discussion on an undefined, or at least
>>>> unwritten, portion of the BIP process.  Who should get to vote on
>>>> approval to commit a BIP implementation into Bitcoin Core?  Is a
>>>> simple majority of these voters sufficient for approval?  If not, then
>>>> what is?
>>>>
>>>> Raystonn
>>>> _______________________________________________
>>>> bitcoin-dev mailing list
>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>
>>>
>>>
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

From adam at cypherspace.org  Thu Jun 25 14:07:59 2015
From: adam at cypherspace.org (Adam Back)
Date: Thu, 25 Jun 2015 16:07:59 +0200
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <0CAB4453-0C88-4CCB-86C1-DA192D4F77A1@gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<558A0B4A.7090205@riseup.net> <558A1E8E.30306@novauri.com>
	<CADm_WcZ52_fvNk_rWzu+Nw1CBz2o6t6cMkEfOm3BpdjH7iQKrw@mail.gmail.com>
	<0CAB4453-0C88-4CCB-86C1-DA192D4F77A1@gmail.com>
Message-ID: <CALqxMTHQCWSg5Px5iLzNisZchuyzWJ2KwtwbWycywDSjF+4GBA@mail.gmail.com>

Note Jeff's proposal and Greg Maxwell's flexcap proposals also have a
growth limiter as a hard-cap and a mechanism for influencing a dynamic
cap within that envelope.

The hard-cap serves the purpose of a safety limit in case our
understanding about the economics, incentives or game-theory is wrong
worst case.

More comments to follow.

Adam


On 25 June 2015 at 15:50, Gareth Williams <gacrux at gmail.com> wrote:
> On 24 June 2015 1:49:51 PM AEST, Jeff Garzik <jgarzik at gmail.com> wrote:
>>Miners can collude today to lower the block size limit.
>
> Of course they can. What, then, is the need for BIP100's hard-limit voting mechanism?
>
> You only need consensus rules to enforce block size limits if you're enforcing them _against_ miners. Which may be a perfectly valid thing to do (if your threat model includes, for example, the possibility that large miners deliberately create large blocks to gain an advantage over small miners.) But BIP100 doesn't address that anyway.
>
> Wouldn't it be safer for consensus to get behind Gavin's simpler 8MB->8GB hard-limit growth curve*, and then encourage miners to enforce a soft limit below that, agreed through a voting mechanism? The later can be implemented at any time without consensus changes -- nobody can prevent miners from coordinating the max block size they'll build on anyway.
>
> * but with a safer "supermajority" than 75% please :)
> --
> Sent from my Android device with K-9 Mail. Please excuse my brevity.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From milly at bitcoins.info  Thu Jun 25 14:08:51 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Thu, 25 Jun 2015 10:08:51 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <53DED62D-6645-464A-998F-C31464FD0C1A@gmail.com>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info> <558C03F1.70603@sky-ip.org>
	<53DED62D-6645-464A-998F-C31464FD0C1A@gmail.com>
Message-ID: <558C0B73.5000601@bitcoins.info>

I agree with all this.  However, as a practical matter the consensus 
rules are not separated out so one person decides whether the "rough 
consensus" has been reached and if the consensus rules should be 
changed.  It really has nothing to do with any personality involved or 
whether they do a good or bad job.  The final decision should probably 
not fall into the lap of one person but it does for now and that is just 
the way it is because there is no better way to do it if you want to get 
things done.

I am also not saying any specific process is good or bad, I am saying 
the lack of a defined process causes wasted time and effort.  Once you 
define the process you have now (the baseline) then you can evaluate 
whether parts of it are good or bad.

As the developer system transitions into a paid system where commercial 
entities hire developers then there is no incentive for them to do that 
if changes can never be made.  A defined process will give more 
assurance for commercial entities to bring more developers on board.

Russ


On 6/25/2015 9:41 AM, Eric Lombrozo wrote:
> Wladimir is doing an amazing job under difficult circumstances. Give the guy a break, please.
>
> - Eric Lombrozo
>
>> On Jun 25, 2015, at 6:36 AM, s7r <s7r at sky-ip.org> wrote:
>>
>> I guess you mean Wladimir here. You are wrong, Wladimir does decide and
>> if you look at the commit history on github.com for bitcoin core you
>> will see, that he does actually decide and does it really good.
>>
>> He just does not want to decide (and he really should not) on CONSENSUS
>> changes or protocol changes. This is totally different.
>>
>> Stop the analogy with "other open source projects". This is an open
>> source project (the code part) but unlike any other open source projects
>> which can just be forked, without affecting the other users, in bitcoin
>> we need all the users to trust a single blockchain, so it'll have value.
>> If some users fork the blockchain and change consensus rules, they are
>> not just harming themselves, they are affecting ALL the users, since
>> such a thing would have strong impact over the BTC/FIAT rate, affecting
>> everyone in the ecosystem. There is economics involved here and human
>> element, things which are hard to fix via code, even if the code is
>> developed in open source style.
>>
>> It's one thing to decide to merge some patches, improve the code, etc.
>> and another thing to decide for consensus rules when you literary play
>> with 4 billion united states dollars of other people's money. This
>> shouldn't be Wladimir's responsibility, it's just unfair for people to
>> throw this on his shoulders.
>>
>> I do not under any circumstances suggest that the consensus should
>> remain as it is now forever. We need to improve it, but this should not
>> be on the maintainer. I've seen smart suggestions on this mail list
>> where consensus changes can be made during a long period of time,
>> through soft forks, where all users/miners/exchangers/merchants get the
>> chance to choose / take action.
>>
>> On 6/25/2015 3:07 AM, Milly Bitcoin wrote:
>>> I have seen this question asked many times.  Most developers become
>>> defensive and they usually give a very vague 1-sentence answer when this
>>> question is asked.  It seems to be it is based on personalities rather
>>> than any kind of definable process.  To have that discussion the
>>> personalities must be separated out and answers like "such-and-such
>>> wouldn't do that" don't really do much to advance the discussion.  Also,
>>> the incentive for new developers to come in is that they will be paid by
>>> companies who want to influence the code and this should be considered
>>> (some developers take this statement as an insult when it is just a
>>> statement of the incentive process).
>>>
>>> The other problem you are having is the lead developer does not want to
>>> be a "decider" when, in fact, he is a very significant decider.  While
>>> the users have the ultimate choice in a practical sense the chief
>>> developer is the "decider."  Now people don't want to get him upset so
>>> nobody wants to push the issue or fully define the process.  Now you are
>>> left with a broken, unwritten/unspoken process.  While this type of
>>> thing may work with a small group of developers businesses/investors
>>> looking in from the outside will see this as a risk.
>>>
>>> Until you get passed all the personality-based arguments you are going
>>> to have a tough time defining a real process.
>>>
>>> Russ
>>>
>>>
>>>
>>>
>>>
>>> On 6/24/2015 7:41 PM, Raystonn wrote:
>>>> I would like to start a civil discussion on an undefined, or at least
>>>> unwritten, portion of the BIP process.  Who should get to vote on
>>>> approval to commit a BIP implementation into Bitcoin Core?  Is a
>>>> simple majority of these voters sufficient for approval?  If not, then
>>>> what is?
>>>>
>>>> Raystonn
>>>> _______________________________________________
>>>> bitcoin-dev mailing list
>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>
>>>
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev



From jgarzik at gmail.com  Thu Jun 25 17:03:47 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Thu, 25 Jun 2015 10:03:47 -0700
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <53DED62D-6645-464A-998F-C31464FD0C1A@gmail.com>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info> <558C03F1.70603@sky-ip.org>
	<53DED62D-6645-464A-998F-C31464FD0C1A@gmail.com>
Message-ID: <CADm_Wcas3BcjrBY-tGF10LU6O9pWxwNv6z60HEAWvWkXborG+Q@mail.gmail.com>

On Thu, Jun 25, 2015 at 6:41 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:

> Wladimir is doing an amazing job under difficult circumstances. Give the
> guy a break, please


A+ agreed.  He is not an elected decider - he is the Bitcoin Core release
manager, and has been doing a damn fine job.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/035d6855/attachment.html>

From milly at bitcoins.info  Thu Jun 25 17:29:43 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Thu, 25 Jun 2015 13:29:43 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CADm_Wcas3BcjrBY-tGF10LU6O9pWxwNv6z60HEAWvWkXborG+Q@mail.gmail.com>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info> <558C03F1.70603@sky-ip.org>
	<53DED62D-6645-464A-998F-C31464FD0C1A@gmail.com>
	<CADm_Wcas3BcjrBY-tGF10LU6O9pWxwNv6z60HEAWvWkXborG+Q@mail.gmail.com>
Message-ID: <558C3A87.4040907@bitcoins.info>

In the context of this discussion the Bitcoin Core release manager is 
the "decider" of what goes into the release.  Nobody said he was 
elected.  The discussion also has nothing to do with any specific person 
and nobody said anyone did anything wrong.  One of the reason why a 
process needs to be developed so issues are not sidetracked into a 
dramatized discussion over personalities which is a big waste of time.  
Some of the developers are now essentially full time drama queens who 
write a little bit of code on the side.

Russ




On 6/25/2015 1:03 PM, Jeff Garzik wrote:
> On Thu, Jun 25, 2015 at 6:41 AM, Eric Lombrozo <elombrozo at gmail.com 
> <mailto:elombrozo at gmail.com>> wrote:
>
>     Wladimir is doing an amazing job under difficult circumstances.
>     Give the guy a break, please
>
>
> A+ agreed.  He is not an elected decider - he is the Bitcoin Core 
> release manager, and has been doing a damn fine job.
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/b0b2a67a/attachment.html>

From tomh at thinlink.com  Thu Jun 25 19:03:57 2015
From: tomh at thinlink.com (Tom Harding)
Date: Thu, 25 Jun 2015 12:03:57 -0700
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
Message-ID: <558C509D.4010804@thinlink.com>

On 6/24/2015 8:00 PM, Raystonn wrote:
>
> > Consensus-code changes are unanimous. They must be.
>
> Excellent. Now we are getting to some actual written rules. How about 
> updating the BIP process documentation with this? Everyone should be 
> able to read the rules of the coin they are buying.
>
> One moment though. Can you tell me how this particular rule came to 
> be? The creator of Bitcoin violated this rule many times. So it must 
> have been adopted after his departure. What process was followed to 
> adopt this new rule? Was there consensus for it at the time? A huge 
> portion of the user community is under the impression that Satoshi's 
> written plans, some of which violate this new rule, will be 
> implemented. So there certainly would not be consensus for this rule 
> today.
>

Great question; very fair.  I, for one, eagerly await Mark's answer.

I hope nobody forgot to tell adversaries totally outside the open source 
ecosystem what the rules for hard forking changes are.

The Chinese miners have it right - we have to work together.  If you 
want to see who's trying, look at who has written a concrete BIP/code 
vs. who hasn't; who has made changes in response to feedback, and who 
hasn't.


From tier.nolan at gmail.com  Thu Jun 25 20:05:40 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Thu, 25 Jun 2015 21:05:40 +0100
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CAOG=w-sxovqy0kDyBX=cx4CWWb=cd_F5bO3iH8ZBHsa0D_uK+A@mail.gmail.com>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info>
	<CAOG=w-sxovqy0kDyBX=cx4CWWb=cd_F5bO3iH8ZBHsa0D_uK+A@mail.gmail.com>
Message-ID: <CAE-z3OVOr=1e=_05Amzb9_JY70Zr+J5_ZTKArUzCFS2jPDAGHA@mail.gmail.com>

On Thu, Jun 25, 2015 at 2:50 AM, Mark Friedenbach <mark at friedenbach.org>
wrote:

> I'm sorry but this is absolutely not the case, Milly. The reason that
> people get defensive is that we have a carefully constructed process that
> does work (thank you very much!) and is well documented.
>

There is no process for handling hard forks, which aren't bug fixes.

Soft forks have a defined process of something like

- BIP proposal + discussion
- Proposed code
- Dev acceptance
- Release
- Miner vote/acceptance

The devs have a weak veto.  If they refuse to move forward with changes,
miners could perform a soft fork on their own.  They don't want to do that,
as it would be controversial and the devs know the software better.

The miner veto is stronger (for soft forks) but not absolute.  The devs
could checkpoint/blacklist a chain if miners implemented a fork that wasn't
acceptable (assuming the community backed them).

When ASICs arrived, it was pointed out by some that the devs could hit back
if ASICs weren't made publicly available.  If they slightly tweaked the
hashing algorithm, then current generation of ASICs would be useless.   The
potential threat may have acted as a disincentive for ASIC manufacturers to
use the ASICs themselves.

Moving forward with agreement between all involved is the recommended and
desirable approach.

Consensus between all parties is the goal but isn't absolutely required.
This escape valve is partly what makes consensus work.  If you dig your
heels in, then the other side can bypass you, but they have an incentive to
try to convince you to compromise first.  The outcome is better if a middle
ground can be found.

Hard forks are different.  The "checks and balances" of weak vetoes are not
present.  This means that things can devolve from consensus to mutual
veto.  Consensus ceases to be a goal and becomes a requirement.

This is partly a reflection of the nature of hard forks.  Everyone needs to
upgrade.  On the other hand, if most of the various groups upgrade, then
users of the legacy software would have to upgrade or get left behind.  If
5% of the users decided not to upgrade, should they be allowed to demand
that nobody else does?

There is clearly some kind of threshold that is reasonable.

The fundamental problem is that there isn't agreement on what the block
size is.  Is it equal in status to the 21 million BTC limit?

If Satoshi had said that 1MB was part of the definition of Bitcoin, then I
think people would accept it to the same extent as they accept the 21
million coin limit.  It might cause people to leave the coin though.

It was intended to be temporary, but people have realized that it might be
a good idea to keep it.  In effect both sides could argue that they should
be considered the status quo.

I wonder if a coin toss would be acceptable :).  "Come to an agreement or
we decide by coin toss"
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/b2ce86a5/attachment-0001.html>

From kalle at rosenbaum.se  Thu Jun 25 21:02:25 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Thu, 25 Jun 2015 23:02:25 +0200
Subject: [bitcoin-dev] [RFC] IBLT block testing implementation
In-Reply-To: <871th3t1go.fsf@rustcorp.com.au>
References: <871th3t1go.fsf@rustcorp.com.au>
Message-ID: <CAPswA9yUUUH7XM_wC=+QXnbEhp49hOyFAtfJztq+r2p0rNmeiQ@mail.gmail.com>

2015-06-23 7:53 GMT+02:00 Rusty Russell <rusty at rustcorp.com.au>:
> Hi all,
>
>         I've come up with a model for using IBLT to communicate blocks
> between peers.  The gory details can be found on github: it's a
> standalone C++ app for testing not integrated with bitcoin.
>
>         https://github.com/rustyrussell/bitcoin-iblt

Good to see that you're working on this. Really exciting!

I want to take the opportunity to link to my previous work on IBLTs, for
those that haven't seen it, where I investigate the behaviour of the IBLT
when changing different parameters, like cell count, hashFunctionCount etc:
https://github.com/kallerosenbaum/bitcoin-iblt/wiki

>From glancing over your implementation, I see that you don't use a
keyHashSum, in fact you don't use a key at all, but only a
concatenatenation of (txid48, fragid, tx-chunk) as value. Here the
txid48+fragid functions as a kind of keyHashSum. I think this might be a
very good idea,

If you have a false positive with count == 1, then you would probably
detect it if fragid is outside reasonable limit from from base_fragid. Did
you implement your idea to remove all the count==1 fagments in ascending
order of (fragid-base_fragid)?

Anyhow, I think we should make some more comparable tests, just as you
proposed last year when I didn't reply, sorry... My code is a more straight
forward implementation of the IBLT paper (http://arxiv.org/pdf/1101.2245.pdf)
and encoding blocks is done pretty much as Gavin proposed in his gist. That
should function as a baseline so that we can validate that your
optimizations actually work. Please contact me directly if you are
interested in that, and we'll figure something out.

More comments/questions inline:

>
> Assumptions and details:
>
> 1. The base idea comes from Gavin's Block Propagation gist:
>         https://gist.github.com/gavinandresen/e20c3b5a1d4b97f79ac2
>
> 2. It relies on similarity in mempools, with some selection hints.  This
>    is designed to be as flexible as possible to make fewest assumptions
>    on tx selection policy.
>
> 3. The selection hints are: minimum fee-per-byte (fixed point) and
>    bitmaps of included-despite-that and rejected-despite-that.  The
>    former covers things like child-pays-for-parent and the priority
>    area.  The latter covers other cases like Eligius censoring "spam",
>    bitcoin version differences, etc.
>

There is a chance that the bit prefix of the added or removed tx is not
unique within the receiver's mempool. In that case the receiver can
probably just use the earliest matching transaction and hope for the best.
If not -> bad luck. Is that how you do it?

> 4. Cost to represent these exceptional added or excluded transactions is
>    (on average) log2(transactions in mempool) bits.

These exceptional tx *could* instead be encoded in the IBLT, just as if
they were unknown differences. Your bitmaps is probably a more compact
representation, but it's also more complex.

>
> 5. At Peiter Wuille's suggestion, it is designed to be reencoded between
>    nodes.  It seems fast enough for that, and neighboring nodes should
>    have most similar mempools.
>

What is the purpose of reencoding when relaying? Is that to improve the
failure probability as new tx may have arrived in the mempool of the
intermediary node?

> 6. It performs reasonably well on my 100 block sample in bitcoin-corpus
>    (chosen to include a mempool spike):
>
>    Average block range (bytes):                         7988-999829
>    Block size mean (bytes):                             401926
>
>    Minimal decodable BLT size range (bytes):            314-386361
>    Minimal decodable BLT size mean (bytes):             13265
>
> 7. Actual results will have to be worse than these minima, as peers will
>    have to oversize the IBLT to have reasonable chance of success.
>

Yes, I have made some analysis on this here:
https://github.com/kallerosenbaum/bitcoin-iblt/wiki/FailureProbability. We
use quite different data structures for encoding blocks in IBLT, but it
might apply to your implementation as well. An interesting result is that
the space saving percentage actually increases as blocks grow.

> 8. There is more work to do, and more investigation to be done, but I
>    don't expect more than a 25% reduction in this "ideal minimum"
>    result.
>
> Special thanks to Kalle Rosenbaum for helping investigate IBLTs with me
> last year.

Thank you too!

Regards,
Kalle

>
> Cheers,
> Rusty.
> PS. I work for Blockstream.  And I'm supposed to be working on
>     Lightning, not this.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/6fd25491/attachment.html>

From pete at petertodd.org  Thu Jun 25 22:33:44 2015
From: pete at petertodd.org (Peter Todd)
Date: Thu, 25 Jun 2015 18:33:44 -0400
Subject: [bitcoin-dev] BIP65 / CHECKLOCKTIMEVERIFY deployment
Message-ID: <20150625223344.GA2406@muck>

BIP66 adoption is quite close to 95% and will likely be enforced for all
blocks in a few more days; now is time to think about how CLTV will be
deployed, particularly given its benefits to much-needed scalability
solutions such as payment channels.

While I'm both a fan and co-author of the Version bits BIP(1) proposal,
it hasn't been implemented yet, and the implementation will be
relatively complex compared to the previous soft-fork mechanism. I think
there is good reason to get CLTV deployed sooner, and I don't think we
have any lack of consensus on it. The CLTV code itself has been
extensively reviewed in the form of the "mempool-only" pull-req, has
been included in the Elements sidechain prototype by Mark Friedenbach,
has been running in production on Viacoin for six months, and has a few
working demos of its functionality implemented. It's also been famously
described as "What you thought nLockTime did until you actually tried to
use it."

To that end I'm proposing that we simply use the existing median block
version mechanism previously used for the nVersion=2 and nVersion=3
soft-forks for CLTV. This mechanism is well-tested and understood, and
would allow CLTV to be easily backported to v0.10.x (even 0.9.x) with
little risk for rapid deployment. In the event that another soft-fork is
proposed prior to BIP65, nVersion=4, enforcement, we do have the option
of setting in motion yet another soft-fork as the median mechanism only
requires forks to be serialized in sequence - it does not prevent
multiple soft-forks from being "in-flight" at the same time.

Thoughts? If there are no objections I'll go ahead and write that code,
using the same thresholds as BIP66.

1) https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07863.html

-- 
'peter'[:-1]@petertodd.org
0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/a25c31da/attachment.sig>

From elombrozo at gmail.com  Thu Jun 25 23:52:12 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 25 Jun 2015 16:52:12 -0700
Subject: [bitcoin-dev] BIP65 / CHECKLOCKTIMEVERIFY deployment
In-Reply-To: <20150625223344.GA2406@muck>
References: <20150625223344.GA2406@muck>
Message-ID: <CABr1YTf20qzXmaLepnsCjAjwMY6x69C_KXcMgdcwqctWY9+_Gg@mail.gmail.com>

Please do it.
On Jun 25, 2015 3:33 PM, "Peter Todd" <pete at petertodd.org> wrote:

> BIP66 adoption is quite close to 95% and will likely be enforced for all
> blocks in a few more days; now is time to think about how CLTV will be
> deployed, particularly given its benefits to much-needed scalability
> solutions such as payment channels.
>
> While I'm both a fan and co-author of the Version bits BIP(1) proposal,
> it hasn't been implemented yet, and the implementation will be
> relatively complex compared to the previous soft-fork mechanism. I think
> there is good reason to get CLTV deployed sooner, and I don't think we
> have any lack of consensus on it. The CLTV code itself has been
> extensively reviewed in the form of the "mempool-only" pull-req, has
> been included in the Elements sidechain prototype by Mark Friedenbach,
> has been running in production on Viacoin for six months, and has a few
> working demos of its functionality implemented. It's also been famously
> described as "What you thought nLockTime did until you actually tried to
> use it."
>
> To that end I'm proposing that we simply use the existing median block
> version mechanism previously used for the nVersion=2 and nVersion=3
> soft-forks for CLTV. This mechanism is well-tested and understood, and
> would allow CLTV to be easily backported to v0.10.x (even 0.9.x) with
> little risk for rapid deployment. In the event that another soft-fork is
> proposed prior to BIP65, nVersion=4, enforcement, we do have the option
> of setting in motion yet another soft-fork as the median mechanism only
> requires forks to be serialized in sequence - it does not prevent
> multiple soft-forks from being "in-flight" at the same time.
>
> Thoughts? If there are no objections I'll go ahead and write that code,
> using the same thresholds as BIP66.
>
> 1)
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07863.html
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/99d7fb36/attachment.html>

From tier.nolan at gmail.com  Fri Jun 26 00:07:48 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Fri, 26 Jun 2015 01:07:48 +0100
Subject: [bitcoin-dev] BIP65 / CHECKLOCKTIMEVERIFY deployment
In-Reply-To: <CABr1YTf20qzXmaLepnsCjAjwMY6x69C_KXcMgdcwqctWY9+_Gg@mail.gmail.com>
References: <20150625223344.GA2406@muck>
	<CABr1YTf20qzXmaLepnsCjAjwMY6x69C_KXcMgdcwqctWY9+_Gg@mail.gmail.com>
Message-ID: <CAE-z3OWq_8r52yy2-FDGtZUZhRCDQRs8-ACSEKZ=HXj5ZRk-5w@mail.gmail.com>

It would be possible to run a simplified version of the bits proposal,
until BIP 66 locks.

It's obviously not worth it at this point though, though it could be 1-2
weeks more.

Version 2 means neither option
Version 3 means BIP 66 only
Version 4 means CLTV only
Version 5 means both

If (Version 3 + version 5) > 95%, reject 2 & 4
If (Version 4 + version 5) > 95%, reject 2 & 3

For 2 options at the same time, this isn't much extra overhead.


On Fri, Jun 26, 2015 at 12:52 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:

> Please do it.
> On Jun 25, 2015 3:33 PM, "Peter Todd" <pete at petertodd.org> wrote:
>
>> BIP66 adoption is quite close to 95% and will likely be enforced for all
>> blocks in a few more days; now is time to think about how CLTV will be
>> deployed, particularly given its benefits to much-needed scalability
>> solutions such as payment channels.
>>
>> While I'm both a fan and co-author of the Version bits BIP(1) proposal,
>> it hasn't been implemented yet, and the implementation will be
>> relatively complex compared to the previous soft-fork mechanism. I think
>> there is good reason to get CLTV deployed sooner, and I don't think we
>> have any lack of consensus on it. The CLTV code itself has been
>> extensively reviewed in the form of the "mempool-only" pull-req, has
>> been included in the Elements sidechain prototype by Mark Friedenbach,
>> has been running in production on Viacoin for six months, and has a few
>> working demos of its functionality implemented. It's also been famously
>> described as "What you thought nLockTime did until you actually tried to
>> use it."
>>
>> To that end I'm proposing that we simply use the existing median block
>> version mechanism previously used for the nVersion=2 and nVersion=3
>> soft-forks for CLTV. This mechanism is well-tested and understood, and
>> would allow CLTV to be easily backported to v0.10.x (even 0.9.x) with
>> little risk for rapid deployment. In the event that another soft-fork is
>> proposed prior to BIP65, nVersion=4, enforcement, we do have the option
>> of setting in motion yet another soft-fork as the median mechanism only
>> requires forks to be serialized in sequence - it does not prevent
>> multiple soft-forks from being "in-flight" at the same time.
>>
>> Thoughts? If there are no objections I'll go ahead and write that code,
>> using the same thresholds as BIP66.
>>
>> 1)
>> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg07863.html
>>
>> --
>> 'peter'[:-1]@petertodd.org
>> 0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/c1658179/attachment-0001.html>

From milly at bitcoins.info  Fri Jun 26 00:42:11 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Thu, 25 Jun 2015 20:42:11 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CAE-z3OVOr=1e=_05Amzb9_JY70Zr+J5_ZTKArUzCFS2jPDAGHA@mail.gmail.com>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>
	<558B4632.8080504@bitcoins.info>
	<CAOG=w-sxovqy0kDyBX=cx4CWWb=cd_F5bO3iH8ZBHsa0D_uK+A@mail.gmail.com>
	<CAE-z3OVOr=1e=_05Amzb9_JY70Zr+J5_ZTKArUzCFS2jPDAGHA@mail.gmail.com>
Message-ID: <558C9FE3.6000804@bitcoins.info>

That description makes sense.  It also makes sense to separate out the 
hard fork from the soft fork process.   Right now some people want to 
use the soft fork procedure for a hard fork simply because there is no 
other way to do it.

I am under the impression that most users expect changes/improvements 
that would require a hard fork so I think some kind of process needs to 
be developed.  Taking the responsibility off the shoulder of the core 
maintainer also makes sense.  The hard fork issue is too much of a 
distraction for people trying to maintain the nuts and bolts of the 
underlying system.

I saw a suggestion that regularly scheduled hard forks should be 
planned.  That seems to make sense so you would have some sort of 
schedule where you would have cut off dates for hard-fork BIP 
submissions.  That way you avoid the debates over whether there should 
be hard forks to what should be contained within the hard fork (if 
needed).  It makes sense to follow the BIP process as close as 
possible.  Possibly adding another step after "Dev acceptance" to 
include input from others such as merchants/exchanges/miners/users.  It 
will only be an approximation of "decentralization" and the process 
won't be perfect but if you want to move forward then you need some way 
to do it.

Russ


On 6/25/2015 4:05 PM, Tier Nolan wrote:
> On Thu, Jun 25, 2015 at 2:50 AM, Mark Friedenbach 
> <mark at friedenbach.org <mailto:mark at friedenbach.org>> wrote:
>
>     I'm sorry but this is absolutely not the case, Milly. The reason
>     that people get defensive is that we have a carefully constructed
>     process that does work (thank you very much!) and is well documented.
>
>
> There is no process for handling hard forks, which aren't bug fixes.
>
> Soft forks have a defined process of something like
>
> - BIP proposal + discussion
> - Proposed code
> - Dev acceptance
> - Release
> - Miner vote/acceptance
>
> The devs have a weak veto.  If they refuse to move forward with 
> changes, miners could perform a soft fork on their own.  They don't 
> want to do that, as it would be controversial and the devs know the 
> software better.
>
> The miner veto is stronger (for soft forks) but not absolute.  The 
> devs could checkpoint/blacklist a chain if miners implemented a fork 
> that wasn't acceptable (assuming the community backed them).
>
> When ASICs arrived, it was pointed out by some that the devs could hit 
> back if ASICs weren't made publicly available.  If they slightly 
> tweaked the hashing algorithm, then current generation of ASICs would 
> be useless.   The potential threat may have acted as a disincentive 
> for ASIC manufacturers to use the ASICs themselves.
>
> Moving forward with agreement between all involved is the recommended 
> and desirable approach.
>
> Consensus between all parties is the goal but isn't absolutely 
> required.  This escape valve is partly what makes consensus work.  If 
> you dig your heels in, then the other side can bypass you, but they 
> have an incentive to try to convince you to compromise first.  The 
> outcome is better if a middle ground can be found.
>
> Hard forks are different.  The "checks and balances" of weak vetoes 
> are not present.  This means that things can devolve from consensus to 
> mutual veto.  Consensus ceases to be a goal and becomes a requirement.
>
> This is partly a reflection of the nature of hard forks.  Everyone 
> needs to upgrade.  On the other hand, if most of the various groups 
> upgrade, then users of the legacy software would have to upgrade or 
> get left behind. If 5% of the users decided not to upgrade, should 
> they be allowed to demand that nobody else does?
>
> There is clearly some kind of threshold that is reasonable.
>
> The fundamental problem is that there isn't agreement on what the 
> block size is.  Is it equal in status to the 21 million BTC limit?
>
> If Satoshi had said that 1MB was part of the definition of Bitcoin, 
> then I think people would accept it to the same extent as they accept 
> the 21 million coin limit.  It might cause people to leave the coin 
> though.
>
> It was intended to be temporary, but people have realized that it 
> might be a good idea to keep it.  In effect both sides could argue 
> that they should be considered the status quo.
>
> I wonder if a coin toss would be acceptable :).  "Come to an agreement 
> or we decide by coin toss"
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/f1c23619/attachment.html>

From jtimon at jtimon.cc  Fri Jun 26 11:13:17 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Fri, 26 Jun 2015 13:13:17 +0200
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <558B7352.90708@bitcoins.info>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
	<558B7352.90708@bitcoins.info>
Message-ID: <CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>

On Thu, Jun 25, 2015 at 2:42 PM, Milly Bitcoin <milly at bitcoins.info> wrote:
> "Cultish" means making claims without any supporting facts.

On Thu, Jun 25, 2015 at 5:19 AM, Milly Bitcoin <milly at bitcoins.info> wrote:
> As for developers, the consensus on code changes are almost never 100% and
> someone has to make the decision about what is an a acceptable consensus.

This statement seems "cultish" by your own definition.
I'm going to make the opposite statement:  the consensus on code
changes is almost always 100%.
Mark has already given a couple examples of changes to consensus rules
(the most risky type of change), here's a few thousand other examples
of changes to the bitcoin core's code that had no opposition:

https://github.com/bitcoin/bitcoin/commits/master

Can you please point us to a few examples were changes were made with
opposition to them?
In those cases (which you assure is what happens almost always), would
you say that the result of letting a decider decide instead of fixing
or addressing all the concerns (either by changing the proposed code
or explaining it) better in restrospective?

From milly at bitcoins.info  Fri Jun 26 12:34:52 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Fri, 26 Jun 2015 08:34:52 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
	<558B7352.90708@bitcoins.info>
	<CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>
Message-ID: <558D46EC.6050300@bitcoins.info>

Without looking up specific links I am confident people like Mircea 
Popescu will oppose just about any change.  Maybe they don't post their 
objection to Github but the point I am making is that no matter what 
change you make someone, somewhere will be against it.  Some of the 
developers think that Github is the only place that matters and that the 
only opinions that matter is a tiny group of insiders.  I don't think 
that way which is the reasoning behind my statement.

I am saying that after all the concerns are addressed as far as 
reasonably possible someone, somewhere has to decide whether or not to 
commit the changes to the official release.  Right now the only person 
who makes that decision if the version manager.  I agree it should not 
fall onto the shoulders of one person who is also very busy doing other 
things.  I am saying there should be some process to move forward and 
make decisions when needed.

Also, you already saw one of the Core developers calling me a "troll" 
and telling others to ignore my messages.  I have heard of several 
people who just drop out of the github discussions because of stuff like 
that.  They also delete message from Gihub discussions so that archive 
is not 100% credible.  I have seen things like a Github discussion 
between 3 or 4 people and then Garzik send out a tweet that there is 
near universal approval for the proposed change as it nobody is allowed 
to question it.  After watching the github process for a couple years I 
simply don't trust it because the developers in charge have a 
dictatorial style and they shut out many stakeholders instead of 
soliciting their opinions.  I view the Github system as the biggest 
centralized choke-point in Bitcoin and probably its biggest threat to 
its continued survival.  Anyone can come in and hire a couple core 
developers and veto any change they don't want.

Russ








On 6/26/2015 7:13 AM, Jorge Tim?n wrote:
> On Thu, Jun 25, 2015 at 2:42 PM, Milly Bitcoin <milly at bitcoins.info> wrote:
>> "Cultish" means making claims without any supporting facts.
> On Thu, Jun 25, 2015 at 5:19 AM, Milly Bitcoin <milly at bitcoins.info> wrote:
>> As for developers, the consensus on code changes are almost never 100% and
>> someone has to make the decision about what is an a acceptable consensus.
> This statement seems "cultish" by your own definition.
> I'm going to make the opposite statement:  the consensus on code
> changes is almost always 100%.
> Mark has already given a couple examples of changes to consensus rules
> (the most risky type of change), here's a few thousand other examples
> of changes to the bitcoin core's code that had no opposition:
>
> https://github.com/bitcoin/bitcoin/commits/master
>
> Can you please point us to a few examples were changes were made with
> opposition to them?
> In those cases (which you assure is what happens almost always), would
> you say that the result of letting a decider decide instead of fixing
> or addressing all the concerns (either by changing the proposed code
> or explaining it) better in restrospective?
>



From tier.nolan at gmail.com  Fri Jun 26 13:47:24 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Fri, 26 Jun 2015 14:47:24 +0100
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CALqxMTHQCWSg5Px5iLzNisZchuyzWJ2KwtwbWycywDSjF+4GBA@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<558A0B4A.7090205@riseup.net> <558A1E8E.30306@novauri.com>
	<CADm_WcZ52_fvNk_rWzu+Nw1CBz2o6t6cMkEfOm3BpdjH7iQKrw@mail.gmail.com>
	<0CAB4453-0C88-4CCB-86C1-DA192D4F77A1@gmail.com>
	<CALqxMTHQCWSg5Px5iLzNisZchuyzWJ2KwtwbWycywDSjF+4GBA@mail.gmail.com>
Message-ID: <CAE-z3OXEUE8b_u9Pf8DbPL4jWTqyR7CDJRqKFKoTGpGxnr1QoA@mail.gmail.com>

On Thu, Jun 25, 2015 at 3:07 PM, Adam Back <adam at cypherspace.org> wrote:

> The hard-cap serves the purpose of a safety limit in case our
> understanding about the economics, incentives or game-theory is wrong
> worst case.
>

True.

BIP 100 and 101 could be combined.  Would that increase consensus?

- Miner vote threshold reached
- Wait notice period or until earliest start time
- Block size default target set to 1 MB
- Soft limit set to 1MB
- Hard limit set to 8MB + double every 2 years
- Miner vote to decide soft limit (lowest size ignoring bottom 20% but 1MB
minimum)

Block size updates could be aligned with the difficulty setting and based
on the last 2016 blocks.

Miners could leave the 1MB limit in place initially.  The vote is to get
the option to increase the block size.

Legacy clients would remain in the network until >80% of miners vote to
raise the limit and a miner produces a >1MB block.

If the growth rate over-estimates hardware improvements, the devs could add
a limit into the core client.  If they give notice and enough users update,
then miners would have to accept it.

The block size becomes min(miner's vote, core devs).  Even if 4 years
notice is given, blocks would only be 4X optimal.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/03a1d7e6/attachment.html>

From pieter.wuille at gmail.com  Fri Jun 26 14:09:18 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Fri, 26 Jun 2015 16:09:18 +0200
Subject: [bitcoin-dev] The need for larger blocks
Message-ID: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>

Hello all,

here I'm going to try to address a part of the block size debate which has
been troubling me since the beginning: the reason why people seem to want
it.

People say that larger blocks are necessary. In the long term, I agree - in
the sense that systems that do not evolve tend to be replaced by other
systems. This evolution can come in terms of layers on top of Bitcoin's
blockchain, in terms of the technology underlying various aspects of the
blockchain itself, and also in the scale that this technology supports.

I do, however, fundamentally disagree that a fear for a change in economics
should be considered to necessitate larger blocks. If it is, and there is
consensus that we should adapt to it, then there is effectively no limit
going forward. This is similar to how Congress voting to increase the
copyright term retroactively from time to time is really no different from
having an infinite copyright term in the first place. This scares me.

Here is how Gavin summarizes the future without increasing block sizes in
PR 6341:

> 1. Transaction confirmation times for transactions with a given fee will
rise; very-low-fee transactions will fail to get confirmed at all.
> 2. Average transaction fee paid will rise
> 3. People or applications unwilling or unable to pay the rising fees will
stop submitting transactions
> 4. People and businesses will shelve plans to use Bitcoin, stunting
growth and adoption

Is it fair to summarize this as "Some use cases won't fit any more, people
will decide to no longer use the blockchain for these purposes, and the
fees will adapt."?

I think that is already happening, and will happen at any scale. I believe
demand for payments in general is nearly infinite, and only a small portion
of it will eventually fit on a block chain (independent of whether its size
is limited by consensus rules or economic or technological means).
Furthermore, systems that compete with Bitcoin in this space already offer
orders of magnitude more capacity than we can reasonably achieve with any
blockchain technology at this point.

I don't know what subset of use cases Bitcoin will cater to in the long
term. They have already changed - you see way less betting transactions
these days than a few years ago for example - and they will keep changing,
independent of what effective block sizes we end up with. I don't think we
should be afraid of this change or try to stop it.

If you look at graphs of block sizes over time (for example,
http://rusty.ozlabs.org/?p=498), it seems to me that there is very little
"organic" growth, and a lot of sudden changes (which could correspond to
changing defaults in miner software, introduction of popular
sites/services, changes in the economy). I think these can be seen as the
economy changing to full up the available space, and I believe these will
keep happening at any size effectively available.

None of this is a reason why the size can't increase. However, in my
opinion, we should do it because we believe it increases utility and
understand the risks; not because we're afraid of what might happen if we
don't hurry up. And from that point of view, it seems silly to make a huge
increase at once...

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/69d0ee83/attachment.html>

From venzen at mail.bihthai.net  Fri Jun 26 14:38:58 2015
From: venzen at mail.bihthai.net (Venzen Khaosan)
Date: Fri, 26 Jun 2015 21:38:58 +0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
Message-ID: <558D6402.20300@mail.bihthai.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Pieter,

Sure. Your thinking is sound. I take things beyond where you have in
your post, so I neither imply that this is your position or that this
is the progression of your stated point.

In one sense, one has to ask the question: is there a reasonable case
for making Bitcoin super-capacitated so it can compete with Visa and
just be the fastest-ever payment network with everyone jizzing in
their pants over its speed and capacity and availability and dividends.

By virtue of the core requirement of decentralization, for Bitcoin to
remain meaningful, it will never compete with Visa or the Fed's new
blockchain-based payment system. So, why attempt the impossible and
expend energy on the futile?

Bitcoin's protocol and payment network has features and benefits that
Visa et all cannot have, so I refute the notion, sometimes expressed
here, that 7tps is a major cap on growth and adoption.

Such thinking takes as its axiom the idea that increased adoption
correlates to increased value. Not true. Look at the price chart for
proof: More businesses accept and more people are using and
transacting via Bitcoin now than ever before and yet the price chart
points *down*, not up.

Why should any explicitly centralized exchange and business venture
have their use of the protocol facilitated? Was the protocol designed
to conform to financial capital demands or was it designed to
fundamentally change the way ordinary users interact with markets?

If those present here, do not realize that the blockchain is a means
of escaping (and destroying through its use and promotion)
centralization, then they have shells over their eyes. Bitcoin is not
meant to fit into the system, it will evolve the system, by the system
coming to it.

Does that mean we shouldn't raise the blocksize? Maybe. But 8GB with
BIP100's protections seems a reasonable change given the sudden
increase in network usage that a global liquidity crisis will impose.

Many scenarios are possible, but there is no onus on developers or on
Bitcoin to "keep up". Like it or not, the global economy will
inevitably be forced to Slow Down as a result of the same thinking
that upholds constant growth without sympathetic contraction.

Venzen Khaosan


On 06/26/2015 09:09 PM, Pieter Wuille wrote:
> Hello all,
> 
> here I'm going to try to address a part of the block size debate
> which has been troubling me since the beginning: the reason why
> people seem to want it.
> 
> People say that larger blocks are necessary. In the long term, I
> agree - in the sense that systems that do not evolve tend to be
> replaced by other systems. This evolution can come in terms of
> layers on top of Bitcoin's blockchain, in terms of the technology
> underlying various aspects of the blockchain itself, and also in
> the scale that this technology supports.
> 
> I do, however, fundamentally disagree that a fear for a change in 
> economics should be considered to necessitate larger blocks. If it
> is, and there is consensus that we should adapt to it, then there
> is effectively no limit going forward. This is similar to how
> Congress voting to increase the copyright term retroactively from
> time to time is really no different from having an infinite
> copyright term in the first place. This scares me.
> 
> Here is how Gavin summarizes the future without increasing block
> sizes in PR 6341:
> 
>> 1. Transaction confirmation times for transactions with a given
>> fee
> will rise; very-low-fee transactions will fail to get confirmed at
> all.
>> 2. Average transaction fee paid will rise 3. People or
>> applications unwilling or unable to pay the rising fees
> will stop submitting transactions
>> 4. People and businesses will shelve plans to use Bitcoin,
>> stunting
> growth and adoption
> 
> Is it fair to summarize this as "Some use cases won't fit any
> more, people will decide to no longer use the blockchain for these
> purposes, and the fees will adapt."?
> 
> I think that is already happening, and will happen at any scale. I 
> believe demand for payments in general is nearly infinite, and only
> a small portion of it will eventually fit on a block chain
> (independent of whether its size is limited by consensus rules or
> economic or technological means). Furthermore, systems that compete
> with Bitcoin in this space already offer orders of magnitude more
> capacity than we can reasonably achieve with any blockchain
> technology at this point.
> 
> I don't know what subset of use cases Bitcoin will cater to in the
> long term. They have already changed - you see way less betting
> transactions these days than a few years ago for example - and they
> will keep changing, independent of what effective block sizes we
> end up with. I don't think we should be afraid of this change or
> try to stop it.
> 
> If you look at graphs of block sizes over time (for example, 
> http://rusty.ozlabs.org/?p=498), it seems to me that there is very 
> little "organic" growth, and a lot of sudden changes (which could 
> correspond to changing defaults in miner software, introduction of 
> popular sites/services, changes in the economy). I think these can
> be seen as the economy changing to full up the available space, and
> I believe these will keep happening at any size effectively
> available.
> 
> None of this is a reason why the size can't increase. However, in
> my opinion, we should do it because we believe it increases utility
> and understand the risks; not because we're afraid of what might
> happen if we don't hurry up. And from that point of view, it seems
> silly to make a huge increase at once...
> 
> -- Pieter
> 
> 
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVjWQAAAoJEGwAhlQc8H1mIRMH/Rr8v+N3XdAL/EeEXuniT+Iu
/TrtieLJKrhmMPkyIX/jAWc4ggUirzWuTMIQZ7qPwOkVrbcWPcKKHOBKTmmUaCc5
GdnA8wiiC6D6ZMamO1NKtkU2QW7Kzuna/Y4EeqBZWsKWPrMvu1vkirDYH8XRvdiC
bMksVCzoRFm7QnTMYfimrSYNxNPdwQZxCfhtJDSBnJs2Mi0J68Xpw5riVbx6S0mD
TOcNlKWosQJEub11TWeh+wD3i901t5GfxFqBNU5XGN85JRn+vAIrrm2io0bbfbIZ
y58XdqcYcWrx8MQNUdHpQT1EK5+4DAkhxrouW60sjk8jfWHGIVIgfYweDQawbOg=
=f9Fg
-----END PGP SIGNATURE-----

From will.madden at novauri.com  Fri Jun 26 15:13:38 2015
From: will.madden at novauri.com (Will)
Date: Fri, 26 Jun 2015 11:13:38 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CAE-z3OXEUE8b_u9Pf8DbPL4jWTqyR7CDJRqKFKoTGpGxnr1QoA@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<558A0B4A.7090205@riseup.net> <558A1E8E.30306@novauri.com>
	<CADm_WcZ52_fvNk_rWzu+Nw1CBz2o6t6cMkEfOm3BpdjH7iQKrw@mail.gmail.com>
	<0CAB4453-0C88-4CCB-86C1-DA192D4F77A1@gmail.com>
	<CALqxMTHQCWSg5Px5iLzNisZchuyzWJ2KwtwbWycywDSjF+4GBA@mail.gmail.com>
	<CAE-z3OXEUE8b_u9Pf8DbPL4jWTqyR7CDJRqKFKoTGpGxnr1QoA@mail.gmail.com>
Message-ID: <19956282-19CC-4150-8865-F211774AF70E@novauri.com>

Make the default soft vote = to previous max block size * 1.09 every 12k (or whatever mirrors the hard cap growth rate) and don't allow voting to lower the soft limit and I think you have something.

You need a default that grows because most miners are lazy and will do squirrelly things like hard code 8000000 as their vote permanently.  

Make the lazy miners' default choice grow at the hard cap growth rate and you should be ok if you want voting.

> On Jun 26, 2015, at 9:47 AM, Tier Nolan <tier.nolan at gmail.com> wrote:
> 
>> On Thu, Jun 25, 2015 at 3:07 PM, Adam Back <adam at cypherspace.org> wrote:
>> The hard-cap serves the purpose of a safety limit in case our
>> understanding about the economics, incentives or game-theory is wrong
>> worst case.
> 
> True.
> 
> BIP 100 and 101 could be combined.  Would that increase consensus?
> 
> - Miner vote threshold reached
> - Wait notice period or until earliest start time
> - Block size default target set to 1 MB
> - Soft limit set to 1MB
> - Hard limit set to 8MB + double every 2 years
> - Miner vote to decide soft limit (lowest size ignoring bottom 20% but 1MB minimum)
> 
> Block size updates could be aligned with the difficulty setting and based on the last 2016 blocks.
> 
> Miners could leave the 1MB limit in place initially.  The vote is to get the option to increase the block size.
> 
> Legacy clients would remain in the network until >80% of miners vote to raise the limit and a miner produces a >1MB block.
> 
> If the growth rate over-estimates hardware improvements, the devs could add a limit into the core client.  If they give notice and enough users update, then miners would have to accept it.
> 
> The block size becomes min(miner's vote, core devs).  Even if 4 years notice is given, blocks would only be 4X optimal.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/14ba600c/attachment.html>

From milly at bitcoins.info  Fri Jun 26 15:22:14 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Fri, 26 Jun 2015 11:22:14 -0400
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
Message-ID: <558D6E26.4000004@bitcoins.info>

 >None of this is a reason why the size can't increase. However, in my 
opinion, we should do it because we believe it increases utility and 
understand the risks; not because we're afraid of what might happen if 
we don't hurry up. And from that point of view, it seems silly to make a 
huge increase at once...

Yes.  I think people/businesses want some kind of assurance that there 
is a path to get things done when needed rather than immediate changes.  
Since there is currently no clear path/schedule to get any changes 
accomplished they gets anxious.

Russ


From pieter.wuille at gmail.com  Fri Jun 26 15:24:21 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Fri, 26 Jun 2015 17:24:21 +0200
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <558D6E26.4000004@bitcoins.info>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<558D6E26.4000004@bitcoins.info>
Message-ID: <CAPg+sBiPH_j+FJRuvBG6yWbPkC8-4gnC3UrJgw15apfB+DBxAw@mail.gmail.com>

On Fri, Jun 26, 2015 at 5:22 PM, Milly Bitcoin <milly at bitcoins.info> wrote:

> >None of this is a reason why the size can't increase. However, in my
> opinion, we should do it because we believe it increases utility and
> understand the risks; not because we're afraid of what might happen if we
> don't hurry up. And from that point of view, it seems silly to make a huge
> increase at once...
>
> Yes.  I think people/businesses want some kind of assurance that there is
> a path to get things done when needed rather than immediate changes.  Since
> there is currently no clear path/schedule to get any changes accomplished
> they gets anxious.
>

I think you just proved my point by saying "when needed".

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/cc04ed8a/attachment.html>

From tomh at thinlink.com  Fri Jun 26 15:38:23 2015
From: tomh at thinlink.com (Tom Harding)
Date: Fri, 26 Jun 2015 08:38:23 -0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
Message-ID: <558D71EF.1060603@thinlink.com>

On 6/26/2015 7:09 AM, Pieter Wuille wrote:
> Furthermore, systems that compete with Bitcoin in this space already
> offer orders of magnitude more capacity than we can reasonably achieve
> with any blockchain technology at this point.

"Reasonably achievable" is a guideline that would keep bitcoin out of
trouble caused by either too little, or too much, declared capacity. 
This matches Gavin's thinking, though you may differ on the numbers.


>  it seems silly to make a huge increase at once...

Unless it is reasonably achievable.  Leave the rest to the free market.




From venzen at mail.bihthai.net  Fri Jun 26 16:22:17 2015
From: venzen at mail.bihthai.net (Venzen Khaosan)
Date: Fri, 26 Jun 2015 23:22:17 +0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <558D71EF.1060603@thinlink.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<558D71EF.1060603@thinlink.com>
Message-ID: <558D7C39.6010603@mail.bihthai.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Apologies in advance for pulling you up on your statement, Tom, I've
noticed you're a regular and well respected poster in this list:

"free market" who?

Are you aware that the Bitcoin rally of 2013 was a result of
speculation by elements in Citi Bank, JPMorgan, and by many other Wall
Street trading desk managers who saw the opportunity of a
free-floating, unregulated commodity?

If the intention is to leave Bitcoin to the "free market" it already
is, and has been there for some time.

As for miners, those are finance capitalist interest too - if not
currently, in their majority, then eventually in China and the rest of
the world, so what does the term "free market" really mean? It must be
defined, because you are speaking to developers here, not visionary
economists or politicized brains, necessarily.

We cannot speak about "the market" without referencing concerns about
centralization, because any centralized business that plays the game
right seeks, by the rules, to corner the market. If they cannot do it
alone, they will seek allies.

"Free market" means as much under capitalism as "open democracy" under
Stalinism. Do you see my point? "Free Market" is a multivariate term
and Bitcoin does not (and should not have to) cater to all its
demands. That's like applying Microsoft standards to FOSS efforts -
becuase that's the "business use-case".

Bitcoin developers have to think about economy in an informed manner
and make provision with protection, else one can just make like Mike
Hearn and jump up and down shouting "faster-faster more-more".
Economics, markets and speculation is more complicated than that.

Venzen


On 06/26/2015 10:38 PM, Tom Harding wrote:
> On 6/26/2015 7:09 AM, Pieter Wuille wrote:
>> Furthermore, systems that compete with Bitcoin in this space
>> already offer orders of magnitude more capacity than we can
>> reasonably achieve with any blockchain technology at this point.
> 
> "Reasonably achievable" is a guideline that would keep bitcoin out
> of trouble caused by either too little, or too much, declared
> capacity. This matches Gavin's thinking, though you may differ on
> the numbers.
> 
> 
>> it seems silly to make a huge increase at once...
> 
> Unless it is reasonably achievable.  Leave the rest to the free
> market.
> 
> 
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVjXw4AAoJEGwAhlQc8H1mX2kIAJCLodhsEhkzxkzZl1hUITkZ
fFZWuiKomsHTHU+6cCr0snt0VDI7+mP8SgyawWrwXNKdGKqpiUAX+B454I9POYBQ
pf/CUq/sWMFN/WRO1EYpVBz3zH/mDgMUZeLvnGYti05+3YzxJxBsy2cmkX5HCfUL
oUErqWEo+OjeQNT+ZgFSbYYLSBLO2fDJglPzXD4eTF6RrK3AsZpHgnVqQzlAC+4G
Q7zRQN/h3voXJ5ed684Hy8bb04KKsEo0EYx2Nz6Hd9mGkSnnqydIa8ieJO3ChYyi
IDyJVXpDOth0TshZARbTFuicYg0ULUmU/l5x38Z3HFp9J1G4GFhnoivBwRozlQ8=
=a+o4
-----END PGP SIGNATURE-----

From tomh at thinlink.com  Fri Jun 26 17:04:22 2015
From: tomh at thinlink.com (Tom Harding)
Date: Fri, 26 Jun 2015 10:04:22 -0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <558D7C39.6010603@mail.bihthai.net>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<558D71EF.1060603@thinlink.com> <558D7C39.6010603@mail.bihthai.net>
Message-ID: <558D8616.7080204@thinlink.com>

Venzen --

The market for block space is not at all the same as the market for bitcoin.

The centralization risk that is discussed in relation to the market for
block space arises from the resources (network, storage, processor...)
required to run a full node.  That is a consideration in determining the
actual (as opposed to declared) capacity of the system.

The 1MB cap was not indexed to increasing resource availability to begin
with, so one way to determine the size of any initial hard cap increase
would be to estimate the change in resource availability since that time.



From gavinandresen at gmail.com  Fri Jun 26 17:39:58 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Fri, 26 Jun 2015 13:39:58 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <19956282-19CC-4150-8865-F211774AF70E@novauri.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<558A0B4A.7090205@riseup.net> <558A1E8E.30306@novauri.com>
	<CADm_WcZ52_fvNk_rWzu+Nw1CBz2o6t6cMkEfOm3BpdjH7iQKrw@mail.gmail.com>
	<0CAB4453-0C88-4CCB-86C1-DA192D4F77A1@gmail.com>
	<CALqxMTHQCWSg5Px5iLzNisZchuyzWJ2KwtwbWycywDSjF+4GBA@mail.gmail.com>
	<CAE-z3OXEUE8b_u9Pf8DbPL4jWTqyR7CDJRqKFKoTGpGxnr1QoA@mail.gmail.com>
	<19956282-19CC-4150-8865-F211774AF70E@novauri.com>
Message-ID: <CABsx9T3Rvgbc8WLnnH96nqK_TaAOj9gn-BBmRy_r2Ci0x72mZQ@mail.gmail.com>

On Fri, Jun 26, 2015 at 11:13 AM, Will <will.madden at novauri.com> wrote:

> Make the lazy miners' default choice grow at the hard cap growth rate and
> you should be ok if you want voting.


I think the default block size is an orthogonal issue to the max block size.

HOWEVER: I think changing the default 'target' block size from the current,
fixed 750K to the average of the size of the last N blocks would have some
nice properties. It is policy-neutral (we should get out of the business of
deciding the right block size and let the miners who care drive block size
up or down) and if there are a significant proportion of lazy miners going
with defaults it gives the system a healthy "fee pressure."

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/03235a77/attachment.html>

From gavinandresen at gmail.com  Fri Jun 26 17:55:28 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Fri, 26 Jun 2015 13:55:28 -0400
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <558D8616.7080204@thinlink.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<558D71EF.1060603@thinlink.com> <558D7C39.6010603@mail.bihthai.net>
	<558D8616.7080204@thinlink.com>
Message-ID: <CABsx9T2ig441mX-1cV5=1eY7+0QtxqMPFXT_=S3onnTSLOM1SQ@mail.gmail.com>

I completely agree with Pieter: usage will grow to fill whatever maximum
block size the miners decide to allow (or whatever maximum block size is
imposed by minimum transaction fees or a hard cap on block size).

I am not scared by increased usage, though: more usage and adoption means
more investment, more smart engineers, and more people with incentives to
solve whatever scaling problems crop up. All of that makes Bitcoin stronger.

And I don't feel like this process has been hurried: I've been working on
this (thinking, testing, simulating, talking, writing code, talking to key
people and companies) almost exclusively since late last year. In my humble
opinion, BIP 101 is a good compromise between "no limit, let the miners
decide" and "lower the max size so a raspberry pi running on a 56K modem
can be a full node."


-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/6143a1be/attachment.html>

From jgarzik at gmail.com  Fri Jun 26 17:57:42 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Fri, 26 Jun 2015 10:57:42 -0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
Message-ID: <CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>

It is not "fear" of fee pressure.

1) Blocks are mostly not-full on average.

2) Absent long blocks and stress tests, there is little fee pressure above
the anti-spam relay fee metric, because of #1.

3) As such, inducing fee pressure is a delta, a change from years-long
bitcoin economic policy.  Each time we approach the soft limit, Bitcoin
Core increases the soft limit to prevent "full" blocks.  Mike Hearn et. al.
lobbies miners to upgrade.

(note - this is not an endorsement of these actions - it is a neutral
observation)

4) Inaction leads to consistent fee pressure as the months tick on and
system volume grows; thus, inaction leads to economic policy change.

5) Economic policy change leads to market and software disruption.  The
market and software - notably wallets - is not prepared for this.

6) If you want to change economic policy, that's fine.  But be honest and
admit you are arguing for a change, a delta from current market
expectations and behavior.

7) It is critical to first deal with what _is_, not what you wish the world
to be.  You want a fee market to develop.  There is nothing wrong with that
desire.  It remains a delta from where we are today, and that is critically
relevant in a $3b+ market.








On Fri, Jun 26, 2015 at 7:09 AM, Pieter Wuille <pieter.wuille at gmail.com>
wrote:

> Hello all,
>
> here I'm going to try to address a part of the block size debate which has
> been troubling me since the beginning: the reason why people seem to want
> it.
>
> People say that larger blocks are necessary. In the long term, I agree -
> in the sense that systems that do not evolve tend to be replaced by other
> systems. This evolution can come in terms of layers on top of Bitcoin's
> blockchain, in terms of the technology underlying various aspects of the
> blockchain itself, and also in the scale that this technology supports.
>
> I do, however, fundamentally disagree that a fear for a change in
> economics should be considered to necessitate larger blocks. If it is, and
> there is consensus that we should adapt to it, then there is effectively no
> limit going forward. This is similar to how Congress voting to increase the
> copyright term retroactively from time to time is really no different from
> having an infinite copyright term in the first place. This scares me.
>
> Here is how Gavin summarizes the future without increasing block sizes in
> PR 6341:
>
> > 1. Transaction confirmation times for transactions with a given fee will
> rise; very-low-fee transactions will fail to get confirmed at all.
> > 2. Average transaction fee paid will rise
> > 3. People or applications unwilling or unable to pay the rising fees
> will stop submitting transactions
> > 4. People and businesses will shelve plans to use Bitcoin, stunting
> growth and adoption
>
> Is it fair to summarize this as "Some use cases won't fit any more, people
> will decide to no longer use the blockchain for these purposes, and the
> fees will adapt."?
>
> I think that is already happening, and will happen at any scale. I believe
> demand for payments in general is nearly infinite, and only a small portion
> of it will eventually fit on a block chain (independent of whether its size
> is limited by consensus rules or economic or technological means).
> Furthermore, systems that compete with Bitcoin in this space already offer
> orders of magnitude more capacity than we can reasonably achieve with any
> blockchain technology at this point.
>
> I don't know what subset of use cases Bitcoin will cater to in the long
> term. They have already changed - you see way less betting transactions
> these days than a few years ago for example - and they will keep changing,
> independent of what effective block sizes we end up with. I don't think we
> should be afraid of this change or try to stop it.
>
> If you look at graphs of block sizes over time (for example,
> http://rusty.ozlabs.org/?p=498), it seems to me that there is very little
> "organic" growth, and a lot of sudden changes (which could correspond to
> changing defaults in miner software, introduction of popular
> sites/services, changes in the economy). I think these can be seen as the
> economy changing to full up the available space, and I believe these will
> keep happening at any size effectively available.
>
> None of this is a reason why the size can't increase. However, in my
> opinion, we should do it because we believe it increases utility and
> understand the risks; not because we're afraid of what might happen if we
> don't hurry up. And from that point of view, it seems silly to make a huge
> increase at once...
>
> --
> Pieter
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/4d6992ee/attachment.html>

From jgarzik at gmail.com  Fri Jun 26 18:05:30 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Fri, 26 Jun 2015 11:05:30 -0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CAPg+sBiPH_j+FJRuvBG6yWbPkC8-4gnC3UrJgw15apfB+DBxAw@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<558D6E26.4000004@bitcoins.info>
	<CAPg+sBiPH_j+FJRuvBG6yWbPkC8-4gnC3UrJgw15apfB+DBxAw@mail.gmail.com>
Message-ID: <CADm_WcYKkrPO-9tiz8d2FFeLk4K7gSgVJG+4PXysi+n8LtXkYw@mail.gmail.com>

On Fri, Jun 26, 2015 at 8:24 AM, Pieter Wuille <pieter.wuille at gmail.com>
wrote:

> On Fri, Jun 26, 2015 at 5:22 PM, Milly Bitcoin <milly at bitcoins.info>
> wrote:
>
>> >None of this is a reason why the size can't increase. However, in my
>> opinion, we should do it because we believe it increases utility and
>> understand the risks; not because we're afraid of what might happen if we
>> don't hurry up. And from that point of view, it seems silly to make a huge
>> increase at once...
>>
>> Yes.  I think people/businesses want some kind of assurance that there is
>> a path to get things done when needed rather than immediate changes.  Since
>> there is currently no clear path/schedule to get any changes accomplished
>> they gets anxious.
>>
>
> I think you just proved my point by saying "when needed".
>

Proposing inaction is not the way you convince people that bitcoin can
scale.

People and businesses cannot perform any capacity planning and future
projections under the proposal of "economic change through inaction."

There will be no growth, by your argument, until there is fee pressure.
And what happens then?

a) Block size limit increases, disrupting and rebooting the fee market.
      or
b) You argue that fees have taken care of the capacity.

Waiting until blocks are full before taking action produces even more
disruption and market-unpredictable behavior than today.

I understand you want a fee market to develop, and increasing the block
size limit retards/prevents that.  The fact remains that that is a _major_
change to economic policy that creates a _more_ unpredictable system.

Who knows when Pieter will agree that a fee market is healthy?  And at that
time, once blocks are full, changing the block size limit then will produce
even more disruption, going from

            little pressure -> lots of pressure -> little pressure

Inaction produces fee pressure produces volatility.  And makes it more
difficult for system users to perform capacity planning.

I see a lot of microscopic fee analysis - economically insignificant for at
least 12 months to come - and very little holistic analysis from people
arguing that inaction is the best course.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/469d8757/attachment-0001.html>

From pieter.wuille at gmail.com  Fri Jun 26 18:12:54 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Fri, 26 Jun 2015 20:12:54 +0200
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>
Message-ID: <CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>

I am not saying that economic change is what we want. Only that it is
inevitable, independent of whether larger blocks happen or not.

I am saying that acting because of fear of economic change is a bad reason.
The reason for increase should be because of the higher utility. We need it
at some point, but there should be no rush.

I do understand that we want to avoid a *sudden* change in economic policy,
but I'm generally not too worried. Either fees increase and they get paid,
and we're good. But more likely is that some uses just move off-chain
because the block chain does not offer what they need. That's sad, but it
is inevitable at any size: some uses fit, some don't.

-- 
Pieter
 On Jun 26, 2015 7:57 PM, "Jeff Garzik" <jgarzik at gmail.com> wrote:

> It is not "fear" of fee pressure.
>
> 1) Blocks are mostly not-full on average.
>
> 2) Absent long blocks and stress tests, there is little fee pressure above
> the anti-spam relay fee metric, because of #1.
>
> 3) As such, inducing fee pressure is a delta, a change from years-long
> bitcoin economic policy.  Each time we approach the soft limit, Bitcoin
> Core increases the soft limit to prevent "full" blocks.  Mike Hearn et. al.
> lobbies miners to upgrade.
>
> (note - this is not an endorsement of these actions - it is a neutral
> observation)
>
> 4) Inaction leads to consistent fee pressure as the months tick on and
> system volume grows; thus, inaction leads to economic policy change.
>
> 5) Economic policy change leads to market and software disruption.  The
> market and software - notably wallets - is not prepared for this.
>
> 6) If you want to change economic policy, that's fine.  But be honest and
> admit you are arguing for a change, a delta from current market
> expectations and behavior.
>
> 7) It is critical to first deal with what _is_, not what you wish the
> world to be.  You want a fee market to develop.  There is nothing wrong
> with that desire.  It remains a delta from where we are today, and that is
> critically relevant in a $3b+ market.
>
>
>
>
>
>
>
>
> On Fri, Jun 26, 2015 at 7:09 AM, Pieter Wuille <pieter.wuille at gmail.com>
> wrote:
>
>> Hello all,
>>
>> here I'm going to try to address a part of the block size debate which
>> has been troubling me since the beginning: the reason why people seem to
>> want it.
>>
>> People say that larger blocks are necessary. In the long term, I agree -
>> in the sense that systems that do not evolve tend to be replaced by other
>> systems. This evolution can come in terms of layers on top of Bitcoin's
>> blockchain, in terms of the technology underlying various aspects of the
>> blockchain itself, and also in the scale that this technology supports.
>>
>> I do, however, fundamentally disagree that a fear for a change in
>> economics should be considered to necessitate larger blocks. If it is, and
>> there is consensus that we should adapt to it, then there is effectively no
>> limit going forward. This is similar to how Congress voting to increase the
>> copyright term retroactively from time to time is really no different from
>> having an infinite copyright term in the first place. This scares me.
>>
>> Here is how Gavin summarizes the future without increasing block sizes in
>> PR 6341:
>>
>> > 1. Transaction confirmation times for transactions with a given fee
>> will rise; very-low-fee transactions will fail to get confirmed at all.
>> > 2. Average transaction fee paid will rise
>> > 3. People or applications unwilling or unable to pay the rising fees
>> will stop submitting transactions
>> > 4. People and businesses will shelve plans to use Bitcoin, stunting
>> growth and adoption
>>
>> Is it fair to summarize this as "Some use cases won't fit any more,
>> people will decide to no longer use the blockchain for these purposes, and
>> the fees will adapt."?
>>
>> I think that is already happening, and will happen at any scale. I
>> believe demand for payments in general is nearly infinite, and only a small
>> portion of it will eventually fit on a block chain (independent of whether
>> its size is limited by consensus rules or economic or technological means).
>> Furthermore, systems that compete with Bitcoin in this space already offer
>> orders of magnitude more capacity than we can reasonably achieve with any
>> blockchain technology at this point.
>>
>> I don't know what subset of use cases Bitcoin will cater to in the long
>> term. They have already changed - you see way less betting transactions
>> these days than a few years ago for example - and they will keep changing,
>> independent of what effective block sizes we end up with. I don't think we
>> should be afraid of this change or try to stop it.
>>
>> If you look at graphs of block sizes over time (for example,
>> http://rusty.ozlabs.org/?p=498), it seems to me that there is very
>> little "organic" growth, and a lot of sudden changes (which could
>> correspond to changing defaults in miner software, introduction of popular
>> sites/services, changes in the economy). I think these can be seen as the
>> economy changing to full up the available space, and I believe these will
>> keep happening at any size effectively available.
>>
>> None of this is a reason why the size can't increase. However, in my
>> opinion, we should do it because we believe it increases utility and
>> understand the risks; not because we're afraid of what might happen if we
>> don't hurry up. And from that point of view, it seems silly to make a huge
>> increase at once...
>>
>> --
>> Pieter
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/f54b9275/attachment.html>

From jgarzik at gmail.com  Fri Jun 26 18:23:18 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Fri, 26 Jun 2015 11:23:18 -0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>
	<CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>
Message-ID: <CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>

Failure to plan now for a hard fork increase 6(?) months in the future
produces that lumpy, unpredictable market behavior.

The market has baked in the years-long behavior of low fees.  From the
market PoV, inaction does lead to precisely that, a sudden change over the
span of a few months.

At a higher level, people look at bitcoin and see people delaying, waiting,
dawdling until the barn is actually on fire before taking action to put out
the fire.

They see a system that is not responsive to higher level externalities of
people & businesses making plans for the future.  Based on current proposal
of change-through-inaction, businesses will simply shelve plans to use
bitcoin and not bother putting those new users on the network.

If you wait until the need to increase block size is acute, it is already
too late.  (1) Businesses have permanently shelved plans to use bitcoin and
(2) change at that point produces _larger_ disruption to the fee market.

Hard forks require planning many months in advance.  Gavin's timing is
sound, even though the Gavin/Hearn Bitcoin-XT antics were sub-optimal.







On Fri, Jun 26, 2015 at 11:12 AM, Pieter Wuille <pieter.wuille at gmail.com>
wrote:

> I am not saying that economic change is what we want. Only that it is
> inevitable, independent of whether larger blocks happen or not.
>
> I am saying that acting because of fear of economic change is a bad
> reason. The reason for increase should be because of the higher utility. We
> need it at some point, but there should be no rush.
>
> I do understand that we want to avoid a *sudden* change in economic
> policy, but I'm generally not too worried. Either fees increase and they
> get paid, and we're good. But more likely is that some uses just move
> off-chain because the block chain does not offer what they need. That's
> sad, but it is inevitable at any size: some uses fit, some don't.
>
> --
> Pieter
>  On Jun 26, 2015 7:57 PM, "Jeff Garzik" <jgarzik at gmail.com> wrote:
>
>> It is not "fear" of fee pressure.
>>
>> 1) Blocks are mostly not-full on average.
>>
>> 2) Absent long blocks and stress tests, there is little fee pressure
>> above the anti-spam relay fee metric, because of #1.
>>
>> 3) As such, inducing fee pressure is a delta, a change from years-long
>> bitcoin economic policy.  Each time we approach the soft limit, Bitcoin
>> Core increases the soft limit to prevent "full" blocks.  Mike Hearn et. al.
>> lobbies miners to upgrade.
>>
>> (note - this is not an endorsement of these actions - it is a neutral
>> observation)
>>
>> 4) Inaction leads to consistent fee pressure as the months tick on and
>> system volume grows; thus, inaction leads to economic policy change.
>>
>> 5) Economic policy change leads to market and software disruption.  The
>> market and software - notably wallets - is not prepared for this.
>>
>> 6) If you want to change economic policy, that's fine.  But be honest and
>> admit you are arguing for a change, a delta from current market
>> expectations and behavior.
>>
>> 7) It is critical to first deal with what _is_, not what you wish the
>> world to be.  You want a fee market to develop.  There is nothing wrong
>> with that desire.  It remains a delta from where we are today, and that is
>> critically relevant in a $3b+ market.
>>
>>
>>
>>
>>
>>
>>
>>
>> On Fri, Jun 26, 2015 at 7:09 AM, Pieter Wuille <pieter.wuille at gmail.com>
>> wrote:
>>
>>> Hello all,
>>>
>>> here I'm going to try to address a part of the block size debate which
>>> has been troubling me since the beginning: the reason why people seem to
>>> want it.
>>>
>>> People say that larger blocks are necessary. In the long term, I agree -
>>> in the sense that systems that do not evolve tend to be replaced by other
>>> systems. This evolution can come in terms of layers on top of Bitcoin's
>>> blockchain, in terms of the technology underlying various aspects of the
>>> blockchain itself, and also in the scale that this technology supports.
>>>
>>> I do, however, fundamentally disagree that a fear for a change in
>>> economics should be considered to necessitate larger blocks. If it is, and
>>> there is consensus that we should adapt to it, then there is effectively no
>>> limit going forward. This is similar to how Congress voting to increase the
>>> copyright term retroactively from time to time is really no different from
>>> having an infinite copyright term in the first place. This scares me.
>>>
>>> Here is how Gavin summarizes the future without increasing block sizes
>>> in PR 6341:
>>>
>>> > 1. Transaction confirmation times for transactions with a given fee
>>> will rise; very-low-fee transactions will fail to get confirmed at all.
>>> > 2. Average transaction fee paid will rise
>>> > 3. People or applications unwilling or unable to pay the rising fees
>>> will stop submitting transactions
>>> > 4. People and businesses will shelve plans to use Bitcoin, stunting
>>> growth and adoption
>>>
>>> Is it fair to summarize this as "Some use cases won't fit any more,
>>> people will decide to no longer use the blockchain for these purposes, and
>>> the fees will adapt."?
>>>
>>> I think that is already happening, and will happen at any scale. I
>>> believe demand for payments in general is nearly infinite, and only a small
>>> portion of it will eventually fit on a block chain (independent of whether
>>> its size is limited by consensus rules or economic or technological means).
>>> Furthermore, systems that compete with Bitcoin in this space already offer
>>> orders of magnitude more capacity than we can reasonably achieve with any
>>> blockchain technology at this point.
>>>
>>> I don't know what subset of use cases Bitcoin will cater to in the long
>>> term. They have already changed - you see way less betting transactions
>>> these days than a few years ago for example - and they will keep changing,
>>> independent of what effective block sizes we end up with. I don't think we
>>> should be afraid of this change or try to stop it.
>>>
>>> If you look at graphs of block sizes over time (for example,
>>> http://rusty.ozlabs.org/?p=498), it seems to me that there is very
>>> little "organic" growth, and a lot of sudden changes (which could
>>> correspond to changing defaults in miner software, introduction of popular
>>> sites/services, changes in the economy). I think these can be seen as the
>>> economy changing to full up the available space, and I believe these will
>>> keep happening at any size effectively available.
>>>
>>> None of this is a reason why the size can't increase. However, in my
>>> opinion, we should do it because we believe it increases utility and
>>> understand the risks; not because we're afraid of what might happen if we
>>> don't hurry up. And from that point of view, it seems silly to make a huge
>>> increase at once...
>>>
>>> --
>>> Pieter
>>>
>>>
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/4980bc88/attachment-0001.html>

From morcos at gmail.com  Fri Jun 26 18:29:51 2015
From: morcos at gmail.com (Alex Morcos)
Date: Fri, 26 Jun 2015 14:29:51 -0400
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>
	<CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>
Message-ID: <CAPWm=eX9HmvMuLVUXO+znA9Ha3FAPCa8oc4BLDFRQY5GNZZcdg@mail.gmail.com>

I think thats the crux of the issue: "some uses fit, some don't".
I don't think anyone can claim to know which fall in which category for
sure.  But its clear that with the existing technology, achieving
decentralization and lack of trusted third parties is expensive, therefore
I think it does the world a disservice to pretend everyone can put their
microtransactions on the block chain.
More importantly, I don't think I'm worried about economic policy or change
at all.  I'm worried about decentralization.  That's the piece we should be
concentrating on.  Sure a bitcoin with giant blocks could probably serve a
bunch more use cases, but what value would it provide if there are 10
centralized miners and processing nodes running the network.  We'll beat
out Apple Pay or Paypal or Google at their game?  Who cares.




On Fri, Jun 26, 2015 at 2:12 PM, Pieter Wuille <pieter.wuille at gmail.com>
wrote:

> I am not saying that economic change is what we want. Only that it is
> inevitable, independent of whether larger blocks happen or not.
>
> I am saying that acting because of fear of economic change is a bad
> reason. The reason for increase should be because of the higher utility. We
> need it at some point, but there should be no rush.
>
> I do understand that we want to avoid a *sudden* change in economic
> policy, but I'm generally not too worried. Either fees increase and they
> get paid, and we're good. But more likely is that some uses just move
> off-chain because the block chain does not offer what they need. That's
> sad, but it is inevitable at any size: some uses fit, some don't.
>
> --
> Pieter
>  On Jun 26, 2015 7:57 PM, "Jeff Garzik" <jgarzik at gmail.com> wrote:
>
>> It is not "fear" of fee pressure.
>>
>> 1) Blocks are mostly not-full on average.
>>
>> 2) Absent long blocks and stress tests, there is little fee pressure
>> above the anti-spam relay fee metric, because of #1.
>>
>> 3) As such, inducing fee pressure is a delta, a change from years-long
>> bitcoin economic policy.  Each time we approach the soft limit, Bitcoin
>> Core increases the soft limit to prevent "full" blocks.  Mike Hearn et. al.
>> lobbies miners to upgrade.
>>
>> (note - this is not an endorsement of these actions - it is a neutral
>> observation)
>>
>> 4) Inaction leads to consistent fee pressure as the months tick on and
>> system volume grows; thus, inaction leads to economic policy change.
>>
>> 5) Economic policy change leads to market and software disruption.  The
>> market and software - notably wallets - is not prepared for this.
>>
>> 6) If you want to change economic policy, that's fine.  But be honest and
>> admit you are arguing for a change, a delta from current market
>> expectations and behavior.
>>
>> 7) It is critical to first deal with what _is_, not what you wish the
>> world to be.  You want a fee market to develop.  There is nothing wrong
>> with that desire.  It remains a delta from where we are today, and that is
>> critically relevant in a $3b+ market.
>>
>>
>>
>>
>>
>>
>>
>>
>> On Fri, Jun 26, 2015 at 7:09 AM, Pieter Wuille <pieter.wuille at gmail.com>
>> wrote:
>>
>>> Hello all,
>>>
>>> here I'm going to try to address a part of the block size debate which
>>> has been troubling me since the beginning: the reason why people seem to
>>> want it.
>>>
>>> People say that larger blocks are necessary. In the long term, I agree -
>>> in the sense that systems that do not evolve tend to be replaced by other
>>> systems. This evolution can come in terms of layers on top of Bitcoin's
>>> blockchain, in terms of the technology underlying various aspects of the
>>> blockchain itself, and also in the scale that this technology supports.
>>>
>>> I do, however, fundamentally disagree that a fear for a change in
>>> economics should be considered to necessitate larger blocks. If it is, and
>>> there is consensus that we should adapt to it, then there is effectively no
>>> limit going forward. This is similar to how Congress voting to increase the
>>> copyright term retroactively from time to time is really no different from
>>> having an infinite copyright term in the first place. This scares me.
>>>
>>> Here is how Gavin summarizes the future without increasing block sizes
>>> in PR 6341:
>>>
>>> > 1. Transaction confirmation times for transactions with a given fee
>>> will rise; very-low-fee transactions will fail to get confirmed at all.
>>> > 2. Average transaction fee paid will rise
>>> > 3. People or applications unwilling or unable to pay the rising fees
>>> will stop submitting transactions
>>> > 4. People and businesses will shelve plans to use Bitcoin, stunting
>>> growth and adoption
>>>
>>> Is it fair to summarize this as "Some use cases won't fit any more,
>>> people will decide to no longer use the blockchain for these purposes, and
>>> the fees will adapt."?
>>>
>>> I think that is already happening, and will happen at any scale. I
>>> believe demand for payments in general is nearly infinite, and only a small
>>> portion of it will eventually fit on a block chain (independent of whether
>>> its size is limited by consensus rules or economic or technological means).
>>> Furthermore, systems that compete with Bitcoin in this space already offer
>>> orders of magnitude more capacity than we can reasonably achieve with any
>>> blockchain technology at this point.
>>>
>>> I don't know what subset of use cases Bitcoin will cater to in the long
>>> term. They have already changed - you see way less betting transactions
>>> these days than a few years ago for example - and they will keep changing,
>>> independent of what effective block sizes we end up with. I don't think we
>>> should be afraid of this change or try to stop it.
>>>
>>> If you look at graphs of block sizes over time (for example,
>>> http://rusty.ozlabs.org/?p=498), it seems to me that there is very
>>> little "organic" growth, and a lot of sudden changes (which could
>>> correspond to changing defaults in miner software, introduction of popular
>>> sites/services, changes in the economy). I think these can be seen as the
>>> economy changing to full up the available space, and I believe these will
>>> keep happening at any size effectively available.
>>>
>>> None of this is a reason why the size can't increase. However, in my
>>> opinion, we should do it because we believe it increases utility and
>>> understand the risks; not because we're afraid of what might happen if we
>>> don't hurry up. And from that point of view, it seems silly to make a huge
>>> increase at once...
>>>
>>> --
>>> Pieter
>>>
>>>
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>>>
>>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/70106007/attachment.html>

From mark at friedenbach.org  Fri Jun 26 18:31:43 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Fri, 26 Jun 2015 11:31:43 -0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>
	<CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>
	<CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>
Message-ID: <CAOG=w-vx60eym7f0dh_j+vE+h_ROx3VAWXXBGX=Vi=82bzVgDQ@mail.gmail.com>

Jeff, block size limits large enough to prevent fee pressure is absolutely,
unequivocally unsustainable. We are already running against technological
limits in the tradeoff between decentralization and utility. Increases of
the block size limit in advance of fee pressure only delay the problem --
it does not and cannot solve it!

We must be careful to use the block size limit now to get infrastructure to
support a world with full blocks -- it's not that hard -- while still
having a little room to grow fast if things unexpectedly break.

On Fri, Jun 26, 2015 at 11:23 AM, Jeff Garzik <jgarzik at gmail.com> wrote:

> Failure to plan now for a hard fork increase 6(?) months in the future
> produces that lumpy, unpredictable market behavior.
>
> The market has baked in the years-long behavior of low fees.  From the
> market PoV, inaction does lead to precisely that, a sudden change over the
> span of a few months.
>
> At a higher level, people look at bitcoin and see people delaying,
> waiting, dawdling until the barn is actually on fire before taking action
> to put out the fire.
>
> They see a system that is not responsive to higher level externalities of
> people & businesses making plans for the future.  Based on current proposal
> of change-through-inaction, businesses will simply shelve plans to use
> bitcoin and not bother putting those new users on the network.
>
> If you wait until the need to increase block size is acute, it is already
> too late.  (1) Businesses have permanently shelved plans to use bitcoin and
> (2) change at that point produces _larger_ disruption to the fee market.
>
> Hard forks require planning many months in advance.  Gavin's timing is
> sound, even though the Gavin/Hearn Bitcoin-XT antics were sub-optimal.
>
>
>
>
>
>
>
> On Fri, Jun 26, 2015 at 11:12 AM, Pieter Wuille <pieter.wuille at gmail.com>
> wrote:
>
>> I am not saying that economic change is what we want. Only that it is
>> inevitable, independent of whether larger blocks happen or not.
>>
>> I am saying that acting because of fear of economic change is a bad
>> reason. The reason for increase should be because of the higher utility. We
>> need it at some point, but there should be no rush.
>>
>> I do understand that we want to avoid a *sudden* change in economic
>> policy, but I'm generally not too worried. Either fees increase and they
>> get paid, and we're good. But more likely is that some uses just move
>> off-chain because the block chain does not offer what they need. That's
>> sad, but it is inevitable at any size: some uses fit, some don't.
>>
>> --
>> Pieter
>>  On Jun 26, 2015 7:57 PM, "Jeff Garzik" <jgarzik at gmail.com> wrote:
>>
>>> It is not "fear" of fee pressure.
>>>
>>> 1) Blocks are mostly not-full on average.
>>>
>>> 2) Absent long blocks and stress tests, there is little fee pressure
>>> above the anti-spam relay fee metric, because of #1.
>>>
>>> 3) As such, inducing fee pressure is a delta, a change from years-long
>>> bitcoin economic policy.  Each time we approach the soft limit, Bitcoin
>>> Core increases the soft limit to prevent "full" blocks.  Mike Hearn et. al.
>>> lobbies miners to upgrade.
>>>
>>> (note - this is not an endorsement of these actions - it is a neutral
>>> observation)
>>>
>>> 4) Inaction leads to consistent fee pressure as the months tick on and
>>> system volume grows; thus, inaction leads to economic policy change.
>>>
>>> 5) Economic policy change leads to market and software disruption.  The
>>> market and software - notably wallets - is not prepared for this.
>>>
>>> 6) If you want to change economic policy, that's fine.  But be honest
>>> and admit you are arguing for a change, a delta from current market
>>> expectations and behavior.
>>>
>>> 7) It is critical to first deal with what _is_, not what you wish the
>>> world to be.  You want a fee market to develop.  There is nothing wrong
>>> with that desire.  It remains a delta from where we are today, and that is
>>> critically relevant in a $3b+ market.
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> On Fri, Jun 26, 2015 at 7:09 AM, Pieter Wuille <pieter.wuille at gmail.com>
>>> wrote:
>>>
>>>> Hello all,
>>>>
>>>> here I'm going to try to address a part of the block size debate which
>>>> has been troubling me since the beginning: the reason why people seem to
>>>> want it.
>>>>
>>>> People say that larger blocks are necessary. In the long term, I agree
>>>> - in the sense that systems that do not evolve tend to be replaced by other
>>>> systems. This evolution can come in terms of layers on top of Bitcoin's
>>>> blockchain, in terms of the technology underlying various aspects of the
>>>> blockchain itself, and also in the scale that this technology supports.
>>>>
>>>> I do, however, fundamentally disagree that a fear for a change in
>>>> economics should be considered to necessitate larger blocks. If it is, and
>>>> there is consensus that we should adapt to it, then there is effectively no
>>>> limit going forward. This is similar to how Congress voting to increase the
>>>> copyright term retroactively from time to time is really no different from
>>>> having an infinite copyright term in the first place. This scares me.
>>>>
>>>> Here is how Gavin summarizes the future without increasing block sizes
>>>> in PR 6341:
>>>>
>>>> > 1. Transaction confirmation times for transactions with a given fee
>>>> will rise; very-low-fee transactions will fail to get confirmed at all.
>>>> > 2. Average transaction fee paid will rise
>>>> > 3. People or applications unwilling or unable to pay the rising fees
>>>> will stop submitting transactions
>>>> > 4. People and businesses will shelve plans to use Bitcoin, stunting
>>>> growth and adoption
>>>>
>>>> Is it fair to summarize this as "Some use cases won't fit any more,
>>>> people will decide to no longer use the blockchain for these purposes, and
>>>> the fees will adapt."?
>>>>
>>>> I think that is already happening, and will happen at any scale. I
>>>> believe demand for payments in general is nearly infinite, and only a small
>>>> portion of it will eventually fit on a block chain (independent of whether
>>>> its size is limited by consensus rules or economic or technological means).
>>>> Furthermore, systems that compete with Bitcoin in this space already offer
>>>> orders of magnitude more capacity than we can reasonably achieve with any
>>>> blockchain technology at this point.
>>>>
>>>> I don't know what subset of use cases Bitcoin will cater to in the long
>>>> term. They have already changed - you see way less betting transactions
>>>> these days than a few years ago for example - and they will keep changing,
>>>> independent of what effective block sizes we end up with. I don't think we
>>>> should be afraid of this change or try to stop it.
>>>>
>>>> If you look at graphs of block sizes over time (for example,
>>>> http://rusty.ozlabs.org/?p=498), it seems to me that there is very
>>>> little "organic" growth, and a lot of sudden changes (which could
>>>> correspond to changing defaults in miner software, introduction of popular
>>>> sites/services, changes in the economy). I think these can be seen as the
>>>> economy changing to full up the available space, and I believe these will
>>>> keep happening at any size effectively available.
>>>>
>>>> None of this is a reason why the size can't increase. However, in my
>>>> opinion, we should do it because we believe it increases utility and
>>>> understand the risks; not because we're afraid of what might happen if we
>>>> don't hurry up. And from that point of view, it seems silly to make a huge
>>>> increase at once...
>>>>
>>>> --
>>>> Pieter
>>>>
>>>>
>>>> _______________________________________________
>>>> bitcoin-dev mailing list
>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>
>>>>
>>>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/2b2df840/attachment-0001.html>

From milly at bitcoins.info  Fri Jun 26 18:32:40 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Fri, 26 Jun 2015 14:32:40 -0400
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CADm_WcYKkrPO-9tiz8d2FFeLk4K7gSgVJG+4PXysi+n8LtXkYw@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<558D6E26.4000004@bitcoins.info>
	<CAPg+sBiPH_j+FJRuvBG6yWbPkC8-4gnC3UrJgw15apfB+DBxAw@mail.gmail.com>
	<CADm_WcYKkrPO-9tiz8d2FFeLk4K7gSgVJG+4PXysi+n8LtXkYw@mail.gmail.com>
Message-ID: <558D9AC8.3020805@bitcoins.info>

> Proposing inaction is not the way you convince people that bitcoin can 
> scale.
>
> People and businesses cannot perform any capacity planning and future 
> projections under the proposal of "economic change through inaction."
>
> There will be no growth, by your argument, until there is fee 
> pressure.  And what happens then?

It is not clear he is proposing "inaction."  I am not sure what he is 
proposing other than being against knee-jerk reactions.  He has also 
said he doesn't want to take on the responsibility of deciding on 
whether to approve hard fork changes which is understandable considering 
all the other things he is doing.  Such a responsibility is probably too 
much of a burden to put on any one individual no matter who it is.  The 
next step is to come up with a process to handle proposed hard-fork 
changes other than just to ask the Core maintainer to do it.

Russ




From pieter.wuille at gmail.com  Fri Jun 26 18:34:31 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Fri, 26 Jun 2015 20:34:31 +0200
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>
	<CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>
	<CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>
Message-ID: <CAPg+sBhrBUSfPdMjbLthLEFD17zBC3LoWf9LvZsOD1Vp0D78BQ@mail.gmail.com>

> If you wait until the need to increase block size

It is this sentence I disagree with. Why would there be a need? Bitcoin
provides utility at any block size, and potentially more with larger blocks.

But no matter what, I believe the economy will adapt to what is available.
And setting a precedent that increasing the size "because of a need" is
reasonable is to me essentially the same as saying the size should forever
scale to whatever people want.

I believe the most important effect of a limit block size - people deciding
not to use (on chain) Bitcoin transactions, is already happening, and it
will keep happening at any scale.

Either the resulting market is one which can live with high variability in
confirmation times, and blocks will end up being nearly full. Or maybe the
current fill level is what is acceptable, and we don't see much growth
beyond this, only a change in what it is used for.

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/d4380514/attachment.html>

From patrick.strateman at gmail.com  Fri Jun 26 18:47:37 2015
From: patrick.strateman at gmail.com (Patrick Strateman)
Date: Fri, 26 Jun 2015 11:47:37 -0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>	<CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>
	<CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>
Message-ID: <558D9E49.7000601@gmail.com>

Planning for a hard forks which change the consensus rules (including
the blocksize limit) is something we can all agree is worthy of time and
effort.

However there is clearly not consensus sufficient today to deploy a hard
fork that changs the blocksize without there being serious and
potentially experiment ending consequences.

For a proposed hard fork to reach a level of consensus necessary to be
safe requires that there be a clear and self evident course of action.

That simply does not exist on the blocksize limit question.

On 06/26/2015 11:23 AM, Jeff Garzik wrote:
> Failure to plan now for a hard fork increase 6(?) months in the future
> produces that lumpy, unpredictable market behavior.
>
> The market has baked in the years-long behavior of low fees.  From the
> market PoV, inaction does lead to precisely that, a sudden change over
> the span of a few months.
>
> At a higher level, people look at bitcoin and see people delaying,
> waiting, dawdling until the barn is actually on fire before taking
> action to put out the fire.
>
> They see a system that is not responsive to higher level externalities
> of people & businesses making plans for the future.  Based on current
> proposal of change-through-inaction, businesses will simply shelve
> plans to use bitcoin and not bother putting those new users on the
> network.
>
> If you wait until the need to increase block size is acute, it is
> already too late.  (1) Businesses have permanently shelved plans to
> use bitcoin and (2) change at that point produces _larger_ disruption
> to the fee market.
>
> Hard forks require planning many months in advance.  Gavin's timing is
> sound, even though the Gavin/Hearn Bitcoin-XT antics were sub-optimal.
>
>
>
>
>
>
>
> On Fri, Jun 26, 2015 at 11:12 AM, Pieter Wuille
> <pieter.wuille at gmail.com <mailto:pieter.wuille at gmail.com>> wrote:
>
>     I am not saying that economic change is what we want. Only that it
>     is inevitable, independent of whether larger blocks happen or not.
>
>     I am saying that acting because of fear of economic change is a
>     bad reason. The reason for increase should be because of the
>     higher utility. We need it at some point, but there should be no rush.
>
>     I do understand that we want to avoid a *sudden* change in
>     economic policy, but I'm generally not too worried. Either fees
>     increase and they get paid, and we're good. But more likely is
>     that some uses just move off-chain because the block chain does
>     not offer what they need. That's sad, but it is inevitable at any
>     size: some uses fit, some don't.
>
>     -- 
>     Pieter
>
>     On Jun 26, 2015 7:57 PM, "Jeff Garzik" <jgarzik at gmail.com
>     <mailto:jgarzik at gmail.com>> wrote:
>
>         It is not "fear" of fee pressure.
>
>         1) Blocks are mostly not-full on average.
>
>         2) Absent long blocks and stress tests, there is little fee
>         pressure above the anti-spam relay fee metric, because of #1.
>
>         3) As such, inducing fee pressure is a delta, a change from
>         years-long bitcoin economic policy.  Each time we approach the
>         soft limit, Bitcoin Core increases the soft limit to prevent
>         "full" blocks.  Mike Hearn et. al. lobbies miners to upgrade.
>
>         (note - this is not an endorsement of these actions - it is a
>         neutral observation)
>
>         4) Inaction leads to consistent fee pressure as the months
>         tick on and system volume grows; thus, inaction leads to
>         economic policy change.
>
>         5) Economic policy change leads to market and software
>         disruption.  The market and software - notably wallets - is
>         not prepared for this.
>
>         6) If you want to change economic policy, that's fine.  But be
>         honest and admit you are arguing for a change, a delta from
>         current market expectations and behavior.
>
>         7) It is critical to first deal with what _is_, not what you
>         wish the world to be.  You want a fee market to develop. 
>         There is nothing wrong with that desire.  It remains a delta
>         from where we are today, and that is critically relevant in a
>         $3b+ market.
>
>
>
>
>
>
>
>
>         On Fri, Jun 26, 2015 at 7:09 AM, Pieter Wuille
>         <pieter.wuille at gmail.com <mailto:pieter.wuille at gmail.com>> wrote:
>
>             Hello all,
>
>             here I'm going to try to address a part of the block size
>             debate which has been troubling me since the beginning:
>             the reason why people seem to want it.
>
>             People say that larger blocks are necessary. In the long
>             term, I agree - in the sense that systems that do not
>             evolve tend to be replaced by other systems. This
>             evolution can come in terms of layers on top of Bitcoin's
>             blockchain, in terms of the technology underlying various
>             aspects of the blockchain itself, and also in the scale
>             that this technology supports.
>
>             I do, however, fundamentally disagree that a fear for a
>             change in economics should be considered to necessitate
>             larger blocks. If it is, and there is consensus that we
>             should adapt to it, then there is effectively no limit
>             going forward. This is similar to how Congress voting to
>             increase the copyright term retroactively from time to
>             time is really no different from having an infinite
>             copyright term in the first place. This scares me.
>
>             Here is how Gavin summarizes the future without increasing
>             block sizes in PR 6341:
>
>             > 1. Transaction confirmation times for transactions with
>             a given fee will rise; very-low-fee transactions will fail
>             to get confirmed at all.
>             > 2. Average transaction fee paid will rise
>             > 3. People or applications unwilling or unable to pay the
>             rising fees will stop submitting transactions
>             > 4. People and businesses will shelve plans to use
>             Bitcoin, stunting growth and adoption
>
>             Is it fair to summarize this as "Some use cases won't fit
>             any more, people will decide to no longer use the
>             blockchain for these purposes, and the fees will adapt."?
>
>             I think that is already happening, and will happen at any
>             scale. I believe demand for payments in general is nearly
>             infinite, and only a small portion of it will eventually
>             fit on a block chain (independent of whether its size is
>             limited by consensus rules or economic or technological
>             means). Furthermore, systems that compete with Bitcoin in
>             this space already offer orders of magnitude more capacity
>             than we can reasonably achieve with any blockchain
>             technology at this point.
>
>             I don't know what subset of use cases Bitcoin will cater
>             to in the long term. They have already changed - you see
>             way less betting transactions these days than a few years
>             ago for example - and they will keep changing, independent
>             of what effective block sizes we end up with. I don't
>             think we should be afraid of this change or try to stop it.
>
>             If you look at graphs of block sizes over time (for
>             example, http://rusty.ozlabs.org/?p=498), it seems to me
>             that there is very little "organic" growth, and a lot of
>             sudden changes (which could correspond to changing
>             defaults in miner software, introduction of popular
>             sites/services, changes in the economy). I think these can
>             be seen as the economy changing to full up the available
>             space, and I believe these will keep happening at any size
>             effectively available.
>
>             None of this is a reason why the size can't increase.
>             However, in my opinion, we should do it because we believe
>             it increases utility and understand the risks; not because
>             we're afraid of what might happen if we don't hurry up.
>             And from that point of view, it seems silly to make a huge
>             increase at once...
>
>             -- 
>             Pieter
>
>
>             _______________________________________________
>             bitcoin-dev mailing list
>             bitcoin-dev at lists.linuxfoundation.org
>             <mailto:bitcoin-dev at lists.linuxfoundation.org>
>             https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/6adbfdb4/attachment-0001.html>

From tier.nolan at gmail.com  Fri Jun 26 19:03:05 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Fri, 26 Jun 2015 20:03:05 +0100
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <558D9E49.7000601@gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>
	<CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>
	<CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>
	<558D9E49.7000601@gmail.com>
Message-ID: <CAE-z3OUZJ2STEMf0yMWTyvcVjFEuh0DfX4mc+XhBsykh7GdOGw@mail.gmail.com>

On Fri, Jun 26, 2015 at 7:47 PM, Patrick Strateman <
patrick.strateman at gmail.com> wrote:

>  For a proposed hard fork to reach a level of consensus necessary to be
> safe requires that there be a clear and self evident course of action.
>

Safety increases with more lead-in time.  If the reference client was
updated so that the hard fork happened in two years, it would be pretty
safe.  Miners would have time to update.

If miners (or the community) objected, it is sort of like a game of chicken.

This is one of the problems with not making decisions in advance, the
resulting hard fork is inherently safer.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/dd5e7ab9/attachment.html>

From voisine at gmail.com  Fri Jun 26 19:05:52 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Fri, 26 Jun 2015 12:05:52 -0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CAOG=w-vx60eym7f0dh_j+vE+h_ROx3VAWXXBGX=Vi=82bzVgDQ@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>
	<CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>
	<CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>
	<CAOG=w-vx60eym7f0dh_j+vE+h_ROx3VAWXXBGX=Vi=82bzVgDQ@mail.gmail.com>
Message-ID: <CACq0ZD6tEitpQB9O0M2bPcBhK1eCaAKFDYj5FQrusc2UA3bcqg@mail.gmail.com>

> Jeff, block size limits large enough to prevent fee pressure is
absolutely, unequivocally unsustainable.

This is demonstrably false. It's clear that having no fee pressure is
unsustainable, of course. But people are paying fees today, so that means
there must be fee pressure. How is this the case then since blocks are
typically below the block size limit? There must be some other mechanism
inducing fee pressure. This mechanism is standard minimum relay rules, and
transaction selection rules for blocks. These are the methods that all
bitcoin software today has been built around, and handles well.


Aaron Voisine
co-founder and CEO
breadwallet.com

On Fri, Jun 26, 2015 at 11:31 AM, Mark Friedenbach <mark at friedenbach.org>
wrote:

> Jeff, block size limits large enough to prevent fee pressure is
> absolutely, unequivocally unsustainable. We are already running against
> technological limits in the tradeoff between decentralization and utility.
> Increases of the block size limit in advance of fee pressure only delay the
> problem -- it does not and cannot solve it!
>
> We must be careful to use the block size limit now to get infrastructure
> to support a world with full blocks -- it's not that hard -- while still
> having a little room to grow fast if things unexpectedly break.
>
>
> On Fri, Jun 26, 2015 at 11:23 AM, Jeff Garzik <jgarzik at gmail.com> wrote:
>
>> Failure to plan now for a hard fork increase 6(?) months in the future
>> produces that lumpy, unpredictable market behavior.
>>
>> The market has baked in the years-long behavior of low fees.  From the
>> market PoV, inaction does lead to precisely that, a sudden change over the
>> span of a few months.
>>
>> At a higher level, people look at bitcoin and see people delaying,
>> waiting, dawdling until the barn is actually on fire before taking action
>> to put out the fire.
>>
>> They see a system that is not responsive to higher level externalities of
>> people & businesses making plans for the future.  Based on current proposal
>> of change-through-inaction, businesses will simply shelve plans to use
>> bitcoin and not bother putting those new users on the network.
>>
>> If you wait until the need to increase block size is acute, it is already
>> too late.  (1) Businesses have permanently shelved plans to use bitcoin and
>> (2) change at that point produces _larger_ disruption to the fee market.
>>
>> Hard forks require planning many months in advance.  Gavin's timing is
>> sound, even though the Gavin/Hearn Bitcoin-XT antics were sub-optimal.
>>
>>
>>
>>
>>
>>
>>
>> On Fri, Jun 26, 2015 at 11:12 AM, Pieter Wuille <pieter.wuille at gmail.com>
>> wrote:
>>
>>> I am not saying that economic change is what we want. Only that it is
>>> inevitable, independent of whether larger blocks happen or not.
>>>
>>> I am saying that acting because of fear of economic change is a bad
>>> reason. The reason for increase should be because of the higher utility. We
>>> need it at some point, but there should be no rush.
>>>
>>> I do understand that we want to avoid a *sudden* change in economic
>>> policy, but I'm generally not too worried. Either fees increase and they
>>> get paid, and we're good. But more likely is that some uses just move
>>> off-chain because the block chain does not offer what they need. That's
>>> sad, but it is inevitable at any size: some uses fit, some don't.
>>>
>>> --
>>> Pieter
>>>  On Jun 26, 2015 7:57 PM, "Jeff Garzik" <jgarzik at gmail.com> wrote:
>>>
>>>> It is not "fear" of fee pressure.
>>>>
>>>> 1) Blocks are mostly not-full on average.
>>>>
>>>> 2) Absent long blocks and stress tests, there is little fee pressure
>>>> above the anti-spam relay fee metric, because of #1.
>>>>
>>>> 3) As such, inducing fee pressure is a delta, a change from years-long
>>>> bitcoin economic policy.  Each time we approach the soft limit, Bitcoin
>>>> Core increases the soft limit to prevent "full" blocks.  Mike Hearn et. al.
>>>> lobbies miners to upgrade.
>>>>
>>>> (note - this is not an endorsement of these actions - it is a neutral
>>>> observation)
>>>>
>>>> 4) Inaction leads to consistent fee pressure as the months tick on and
>>>> system volume grows; thus, inaction leads to economic policy change.
>>>>
>>>> 5) Economic policy change leads to market and software disruption.  The
>>>> market and software - notably wallets - is not prepared for this.
>>>>
>>>> 6) If you want to change economic policy, that's fine.  But be honest
>>>> and admit you are arguing for a change, a delta from current market
>>>> expectations and behavior.
>>>>
>>>> 7) It is critical to first deal with what _is_, not what you wish the
>>>> world to be.  You want a fee market to develop.  There is nothing wrong
>>>> with that desire.  It remains a delta from where we are today, and that is
>>>> critically relevant in a $3b+ market.
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> On Fri, Jun 26, 2015 at 7:09 AM, Pieter Wuille <pieter.wuille at gmail.com
>>>> > wrote:
>>>>
>>>>> Hello all,
>>>>>
>>>>> here I'm going to try to address a part of the block size debate which
>>>>> has been troubling me since the beginning: the reason why people seem to
>>>>> want it.
>>>>>
>>>>> People say that larger blocks are necessary. In the long term, I agree
>>>>> - in the sense that systems that do not evolve tend to be replaced by other
>>>>> systems. This evolution can come in terms of layers on top of Bitcoin's
>>>>> blockchain, in terms of the technology underlying various aspects of the
>>>>> blockchain itself, and also in the scale that this technology supports.
>>>>>
>>>>> I do, however, fundamentally disagree that a fear for a change in
>>>>> economics should be considered to necessitate larger blocks. If it is, and
>>>>> there is consensus that we should adapt to it, then there is effectively no
>>>>> limit going forward. This is similar to how Congress voting to increase the
>>>>> copyright term retroactively from time to time is really no different from
>>>>> having an infinite copyright term in the first place. This scares me.
>>>>>
>>>>> Here is how Gavin summarizes the future without increasing block sizes
>>>>> in PR 6341:
>>>>>
>>>>> > 1. Transaction confirmation times for transactions with a given fee
>>>>> will rise; very-low-fee transactions will fail to get confirmed at all.
>>>>> > 2. Average transaction fee paid will rise
>>>>> > 3. People or applications unwilling or unable to pay the rising fees
>>>>> will stop submitting transactions
>>>>> > 4. People and businesses will shelve plans to use Bitcoin, stunting
>>>>> growth and adoption
>>>>>
>>>>> Is it fair to summarize this as "Some use cases won't fit any more,
>>>>> people will decide to no longer use the blockchain for these purposes, and
>>>>> the fees will adapt."?
>>>>>
>>>>> I think that is already happening, and will happen at any scale. I
>>>>> believe demand for payments in general is nearly infinite, and only a small
>>>>> portion of it will eventually fit on a block chain (independent of whether
>>>>> its size is limited by consensus rules or economic or technological means).
>>>>> Furthermore, systems that compete with Bitcoin in this space already offer
>>>>> orders of magnitude more capacity than we can reasonably achieve with any
>>>>> blockchain technology at this point.
>>>>>
>>>>> I don't know what subset of use cases Bitcoin will cater to in the
>>>>> long term. They have already changed - you see way less betting
>>>>> transactions these days than a few years ago for example - and they will
>>>>> keep changing, independent of what effective block sizes we end up with. I
>>>>> don't think we should be afraid of this change or try to stop it.
>>>>>
>>>>> If you look at graphs of block sizes over time (for example,
>>>>> http://rusty.ozlabs.org/?p=498), it seems to me that there is very
>>>>> little "organic" growth, and a lot of sudden changes (which could
>>>>> correspond to changing defaults in miner software, introduction of popular
>>>>> sites/services, changes in the economy). I think these can be seen as the
>>>>> economy changing to full up the available space, and I believe these will
>>>>> keep happening at any size effectively available.
>>>>>
>>>>> None of this is a reason why the size can't increase. However, in my
>>>>> opinion, we should do it because we believe it increases utility and
>>>>> understand the risks; not because we're afraid of what might happen if we
>>>>> don't hurry up. And from that point of view, it seems silly to make a huge
>>>>> increase at once...
>>>>>
>>>>> --
>>>>> Pieter
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> bitcoin-dev mailing list
>>>>> bitcoin-dev at lists.linuxfoundation.org
>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>>
>>>>>
>>>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/6fd41144/attachment.html>

From will.madden at novauri.com  Fri Jun 26 19:07:30 2015
From: will.madden at novauri.com (Will)
Date: Fri, 26 Jun 2015 15:07:30 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T3Rvgbc8WLnnH96nqK_TaAOj9gn-BBmRy_r2Ci0x72mZQ@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<558A0B4A.7090205@riseup.net> <558A1E8E.30306@novauri.com>
	<CADm_WcZ52_fvNk_rWzu+Nw1CBz2o6t6cMkEfOm3BpdjH7iQKrw@mail.gmail.com>
	<0CAB4453-0C88-4CCB-86C1-DA192D4F77A1@gmail.com>
	<CALqxMTHQCWSg5Px5iLzNisZchuyzWJ2KwtwbWycywDSjF+4GBA@mail.gmail.com>
	<CAE-z3OXEUE8b_u9Pf8DbPL4jWTqyR7CDJRqKFKoTGpGxnr1QoA@mail.gmail.com>
	<19956282-19CC-4150-8865-F211774AF70E@novauri.com>
	<CABsx9T3Rvgbc8WLnnH96nqK_TaAOj9gn-BBmRy_r2Ci0x72mZQ@mail.gmail.com>
Message-ID: <C357721B-5ABC-4B77-92AB-A0735BBDA519@novauri.com>

Moving averages have upsides and downsides vs fixed growth.  Moving averages are backwards looking and don't handle seasonalities or unanticipated increases in demand very well.

Think "Black Friday" or the horribly named "Cyber 
Monday" in retail or market hysteria where millions of noobs jump into or out of bitcoin.

If you want to create fee pressure I think this can be done, but I would keep both of these in mind before choosing a value for N.  Adjustments would need to be frequent and nimble enough to handle seasonalities and other unanticipated outliers.

> On Jun 26, 2015, at 1:39 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:
> 
>> On Fri, Jun 26, 2015 at 11:13 AM, Will <will.madden at novauri.com> wrote:
>> Make the lazy miners' default choice grow at the hard cap growth rate and you should be ok if you want voting.
> 
> I think the default block size is an orthogonal issue to the max block size.
> 
> HOWEVER: I think changing the default 'target' block size from the current, fixed 750K to the average of the size of the last N blocks would have some nice properties. It is policy-neutral (we should get out of the business of deciding the right block size and let the miners who care drive block size up or down) and if there are a significant proportion of lazy miners going with defaults it gives the system a healthy "fee pressure."
> 
> -- 
> --
> Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/7bb2f08e/attachment-0001.html>

From pete at petertodd.org  Fri Jun 26 19:08:07 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 26 Jun 2015 15:08:07 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T3-CbB0k2aKMqRYseUQ2dfW9ANAuYb2MPAw1S+_bF7_=w@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<20150623192838.GG30235@muck>
	<CABsx9T2wsc=+seaWs=v5d_kPpC4u-xTnsjuPMO7PYhQN+0-KAQ@mail.gmail.com>
	<20150623204646.GA18677@muck>
	<CABsx9T3-CbB0k2aKMqRYseUQ2dfW9ANAuYb2MPAw1S+_bF7_=w@mail.gmail.com>
Message-ID: <20150626190739.GB10387@muck>

On Tue, Jun 23, 2015 at 05:24:23PM -0400, Gavin Andresen wrote:
> On Tue, Jun 23, 2015 at 4:46 PM, Peter Todd <pete at petertodd.org> wrote:
> 
> > Pieter Wuille showed with simulations that miners with bad connectivity
> > are negatively affected by other miners creating larger blocks.
> >
> 
> ... but the effect is only significant if they have an absurdly
> low-bandwidth connection and do NOTHING to work around it (like rent a
> server on the other side of the bandwidth bottleneck and write some code to
> make sure you're creating blocks that will propagate quickly on both sides
> of the bottleneck).

"Just rent a server" forces miners into deploying insecure hosted
infrastructure that's vulnerable to hacking and seizure; that we
encourage this already is worrying; requiring it for miners to be
profitable isn't acceptable.

> Why do you think connectivity is a centralizing effect? It is just one
> factor in the profitability-of-mining equation. A location with bad
> connectivity (the US, maybe) but 10% cheaper electricity might be just as
> good as one with great connectivity but more expensive electricity.

See above. The obvious thing to do if connectivity matters is keep your
hashing in the cheapest possible place and sell that hashing power to
centralized miners, an effect we're already seeing. Making this effect
about an order of magnitude worse, then doubling the problem every two
years is dangerous.

> Having lots of variables in the profitability equation is a decentralizing
> force, it means there is very likely to be several different places in the
> world / on the net where mining is equally profitable.

As mining and hashing can be trivially separated that theory just
doesn't work.

Again, what concretely works against centralization of mining control?
A proper proposal would discuss this issue, and explain what the
expected effect will be.

> > These block propagation improvements are both already implemented (Matt
> > Corallo's relay network, p2pool) and require co-operation.
> >
> 
> Long term the p2p protocol will evolve to incorporate those optimizations,
> so will require no co-operation.

The co-operation comes form the fact that mempool policies have to be
syncronized, not the protocol itself.

-- 
'peter'[:-1]@petertodd.org
0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/94de4a1b/attachment.sig>

From mark at friedenbach.org  Fri Jun 26 19:12:00 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Fri, 26 Jun 2015 12:12:00 -0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CAE-z3OUZJ2STEMf0yMWTyvcVjFEuh0DfX4mc+XhBsykh7GdOGw@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>
	<CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>
	<CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>
	<558D9E49.7000601@gmail.com>
	<CAE-z3OUZJ2STEMf0yMWTyvcVjFEuh0DfX4mc+XhBsykh7GdOGw@mail.gmail.com>
Message-ID: <CAOG=w-uxTvKusuJmDGcD76hJtXbdPq1g7hm0-48H1qr7jntN3Q@mail.gmail.com>

This is a hard fork. It is not about miners, at all. 2013 showed that when
there is true consensus mining can be coordinated on the order of hours or
days. This is about pushing through a coercive change to the
decentralization tradeoffs of bitcoin without unanimous consent.
On Jun 26, 2015 12:03 PM, "Tier Nolan" <tier.nolan at gmail.com> wrote:

> On Fri, Jun 26, 2015 at 7:47 PM, Patrick Strateman <
> patrick.strateman at gmail.com> wrote:
>
>>  For a proposed hard fork to reach a level of consensus necessary to be
>> safe requires that there be a clear and self evident course of action.
>>
>
> Safety increases with more lead-in time.  If the reference client was
> updated so that the hard fork happened in two years, it would be pretty
> safe.  Miners would have time to update.
>
> If miners (or the community) objected, it is sort of like a game of
> chicken.
>
> This is one of the problems with not making decisions in advance, the
> resulting hard fork is inherently safer.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/f4b14ff9/attachment.html>

From jrn at jrn.me.uk  Fri Jun 26 19:18:07 2015
From: jrn at jrn.me.uk (Ross Nicoll)
Date: Fri, 26 Jun 2015 20:18:07 +0100
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CAPg+sBhrBUSfPdMjbLthLEFD17zBC3LoWf9LvZsOD1Vp0D78BQ@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>
	<CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>
	<CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>
	<CAPg+sBhrBUSfPdMjbLthLEFD17zBC3LoWf9LvZsOD1Vp0D78BQ@mail.gmail.com>
Message-ID: <558DA56F.3010703@jrn.me.uk>

I'd argue that at the point where there's consistently more transactions 
than the network can handle, there are two significant risks. Firstly, 
that people don't care enough to pay the transaction fees required to 
get their transaction prioritised over another's, and secondly that as 
transactions start outright failing (which will happen with enough 
transactions backlogged) the network is considered unreliable, the 
currency illiquid, and there's a virtual "bank rush" to get into a more 
usable currency.

I understand the desire to use current demand to model future, however I 
feel there's a lack of understanding of just how inadequate the main 
chain is as a global clearance network. My go-to example for this is 
CHIPS (US-only, inter-bank only clearance) which already handles 
slightly over 3 transactions per second on average across a year 
(https://www.theclearinghouse.org/~/media/tch/pay%20co/chips/reports%20and%20guides/chips%20volume%20through%20may%202015.pdf?la=en). 
If Bitcoin is to be used across a wider portion of the world's 
population, and/or beyond clearance between financial institutions, it 
needs larger blocks. This is not about handling the several orders of 
magnitude more transactions that would be required to replace credit 
cards or cash, but simply to enabling other technologies to perform that 
scaling.

Also, and I'm aware most on this list do understand the situation better 
than this, I find it immensely frustrating to see people suggesting that 
Greece or other large groups should adopt Bitcoin, while there's clearly 
inadequate support (on chain or off) to do so.

Ross

On 26/06/2015 19:34, Pieter Wuille wrote:
>
> > If you wait until the need to increase block size
>
> It is this sentence I disagree with. Why would there be a need? 
> Bitcoin provides utility at any block size, and potentially more with 
> larger blocks.
>
> But no matter what, I believe the economy will adapt to what is 
> available. And setting a precedent that increasing the size "because 
> of a need" is reasonable is to me essentially the same as saying the 
> size should forever scale to whatever people want.
>
> I believe the most important effect of a limit block size - people 
> deciding not to use (on chain) Bitcoin transactions, is already 
> happening, and it will keep happening at any scale.
>
> Either the resulting market is one which can live with high 
> variability in confirmation times, and blocks will end up being nearly 
> full. Or maybe the current fill level is what is acceptable, and we 
> don't see much growth beyond this, only a change in what it is used for.
>
> -- 
> Pieter
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/a81ace1f/attachment.html>

From pete at petertodd.org  Fri Jun 26 19:25:28 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 26 Jun 2015 15:25:28 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T3-CbB0k2aKMqRYseUQ2dfW9ANAuYb2MPAw1S+_bF7_=w@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<20150623192838.GG30235@muck>
	<CABsx9T2wsc=+seaWs=v5d_kPpC4u-xTnsjuPMO7PYhQN+0-KAQ@mail.gmail.com>
	<20150623204646.GA18677@muck>
	<CABsx9T3-CbB0k2aKMqRYseUQ2dfW9ANAuYb2MPAw1S+_bF7_=w@mail.gmail.com>
Message-ID: <20150626192528.GC10387@muck>

On Tue, Jun 23, 2015 at 05:24:23PM -0400, Gavin Andresen wrote:
> > In any case, this ponts to the need for your proposal to explictly talk
> > about what kind of resources are needed by miners for what kind of
> > profitability, including the case where other miners are sabotaging
> > their profitability.
> >
> 
> Are you familiar with the terms "Gish Gallop" and "Moving the Goalposts" ?
> 
> I have written quite a lot about the kind of resources needed to run a full
> node, and have asked you, specifically, several times "how much do you
> think is too much" and received no answer.

You're the one proposing a change here; we're evaluating the safety of
that change.

An analogous situation is imagine we have two islands, with a suspension
bridge between them. The bridge has just two lanes in either direction,
so obviously there's a limited amount of traffic that can flow across
it. It used to be used to little that people would joyride back and
forth as the toll booths at either end just charged a hundreth of a
penny per trip, or even not at all, but as demand has been increasing
tolls are going up as well.

You've come along with a bold new plan to add fifteen more lanes to that
bridge by expanding the bridge deck, then hire contractors in advance to
double the number of lanes every two years after that with no clear way
of terminating their contract if anything goes wrong. (in just over a
decade our two lane bridge will be a mile wide!)

Of course, obviously if we add enough lanes the cables holding it up
will snap, so we've better carefully analyse the carrying capacity of
the brdige and the threats it faces. For instance, earthquakes happen
every so often - the last one even snapped a few strands in the main
cables, which people claim were fixed... but we don't really know for
sure as a thick layer of paint was quickly slapped over the fix and
no-one's been able to inspect it.

It's perfectly reasonable to ask what kind of earthquakes you expect the
bridge to withstand, as well as peer-reviewed and peer-reproducable
figures about the strength of the cables and the weight of the traffic.
Similarly, we've got the funds to make a test bridge of the same
dimensions and see if it collapses. Any bridge widening proposal that
doesn't have this data is simply incomplete, end of story.

As for the other side, the worst that happens if nothing changes is
usage of this bridge gets proportioned to the most valuable users by the
supply and demand toll system. Some people might decide to take the bus
across rather than an inefficient individual car, some of the
advertising companies running trucks back and forth with billboards on
the side are going to stop doing that. But traffic is still going to get
across. It's not a politically easy position to be in - there's enormous
pressure to quickly "do something" however dangerous - but the actual
effects of doing nothing are ultimately not a big deal.

In civil engineering we have enough experience with disasters to know
that you can't give into political pressure to do potentially dangerous
things until the consequences are well understood; hopefully we'll learn
that in the consensus cryptography space before a big disaster rather
than after.

-- 
'peter'[:-1]@petertodd.org
0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/14d87e07/attachment-0001.sig>

From pete at petertodd.org  Fri Jun 26 19:30:31 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 26 Jun 2015 15:30:31 -0400
Subject: [bitcoin-dev] [Bitcoin-development] questions about bitcoin-XT
 code fork & non-consensus hard-fork
In-Reply-To: <CAM7BtUqCZSGfgF7Xq4g7ZCrB-nrsur8B78myDd+NBsqZ0S_rZw@mail.gmail.com>
References: <CALqxMTGBt7MNs5YWf8QzKe+4Fr-uKVimf8=VbytBANEDm=s50g@mail.gmail.com>
	<CANEZrP31AEson9DZ=ZU7d4t=DvmGodh1ja6EaZ6xQZ3bFEXeVA@mail.gmail.com>
	<CALqxMTFC7zBN9GvHAZLQj4SbXjzkCAM9meSErd3qn7uCoON98Q@mail.gmail.com>
	<CAM7BtUoNJ3vPqW9esCBo8XSN=yRjC3oheP_hd_kcgzs0_0De6w@mail.gmail.com>
	<20150616133305.GA30988@muck>
	<CAM7BtUr1zmw_Jmyn8ULZ=Jb-pkAwUwvBK68UWmzeJH3kAmYEhA@mail.gmail.com>
	<20150617035959.GB23826@muck>
	<CAM7BtUqCZSGfgF7Xq4g7ZCrB-nrsur8B78myDd+NBsqZ0S_rZw@mail.gmail.com>
Message-ID: <20150626193031.GA17829@muck>

On Thu, Jun 25, 2015 at 02:43:19PM +0800, Pindar Wong wrote:
> > Yup, though keep in mind the regulatory question is more than just how
> > your local jurisdiction views Bitcoin, but rather how your customers'
> > jurisdictions view Bitcoin.
> >
> > Of course, when I say "customers" above, I mean the entire Bitcoin
> > community that is ultimately buying the new coins produced by miners and
> > paying fees to them!
> >
> 
> I'm sorry for the distraction with the mailing list problems.
> 
> Taking an ecosystem view, the miners are important, so are all the other
> participants who rely on it and  invest time, effort and energy to make
> Bitcoin work and work well.

Agreed.

IMO any change to the blocksize needs explicit mechanisms to let all
Bitcoin holders have a say in it.

> I am in contact with Primavera and it would appear that the Cyberport is
> available for use on October 14 and 15 (Wed/Thursday).

Great! Glad to hear.

> Last November, this was where the Global Bitcoin Summit (Hong Kong)
> <http://www.cyberport.hk/en/about_cyberport/our_5_centres/collaboration_centre/collaboration_news/2146>
> was hosted with the participation of many of China's leading
> Bitcoin-related companies. There is a meeting now in Shanghai.
> 
> It would be an honour to host a more technical meeting to discuss BIP100,
> 101 et al. should be interest to do so.

Are you thinking this more technical meeting should be before or after
the October event? Perhaps a better question, is what exactly do you see
being discussed at a technical meeting?

-- 
'peter'[:-1]@petertodd.org
0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/214c07bb/attachment.sig>

From pete at petertodd.org  Fri Jun 26 19:36:30 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 26 Jun 2015 15:36:30 -0400
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <558DA56F.3010703@jrn.me.uk>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>
	<CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>
	<CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>
	<CAPg+sBhrBUSfPdMjbLthLEFD17zBC3LoWf9LvZsOD1Vp0D78BQ@mail.gmail.com>
	<558DA56F.3010703@jrn.me.uk>
Message-ID: <20150626193630.GB17829@muck>

On Fri, Jun 26, 2015 at 08:18:07PM +0100, Ross Nicoll wrote:
> I'd argue that at the point where there's consistently more
> transactions than the network can handle, there are two significant
> risks. Firstly, that people don't care enough to pay the transaction
> fees required to get their transaction prioritised over another's,
> and secondly that as transactions start outright failing (which will
> happen with enough transactions backlogged) the network is
> considered unreliable, the currency illiquid, and there's a virtual
> "bank rush" to get into a more usable currency.

The supply and demand fee market means that there is a range of
reliability levels depending on what fee you pay; regardless of how high
demand is if you pay a sufficiently high fee that outbids less
important/lower fee transactions you'll get reliable transaction
confirmaiton.

The perceived lack of reliability is a function of the poor state of
wallet software, not an inherent problem with the system. Fixing that
software is much easier and much less risky than any hard-fork ever will
be.

From my article on transaction fees during the CoinWallet.eu flood:

What needs to be done
=====================

Transaction fees aren't going away, blocksize increase or not. CoinWallet.eu is
only spending $5k flooding the network; even an 8MB blocksize increase can only
raise the cost of that attack to $40k, which is still very affordable. For
instance an attacker looking to manipulate the Bitcoin price could probably
afford to spend $40k doing it with the right trading strategy; let alone
governments, banks, big businesses, criminal enterprises, etc. to whom $40k is
chump-change. Wallets need to become smarter about fees, as does the rest of
the Bitcoin community.

What we need to do:

* Add fee/KB displays to block explorers.

* Change wallets to calculate and set fees in fee/KB rather than fixed fees regardless of tx size.

* Make websites with easy to understand displays of what the current mempool
  backlog is, and what fee/KB is needed to get to the front of the queue. We've
  done a great job for Bitcoin price charts, let's extend that to transaction
  fees.

* Add the ability to set any fee/KB to wallets, rather than be stuck with
  predefined options that may not be high enough.

* Add support for fee-bumping via (FSS)-RBF to wallets and Bitcoin Core.

Capacity limits are just a fact of life in the design of the Bitcoin protocol,
but that doesn't mean we can't give users the tools to deal with them
intelligently.

-https://gist.github.com/petertodd/8e87c782bdf342ef18fb

-- 
'peter'[:-1]@petertodd.org
0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/60768123/attachment.sig>

From ogunden at phauna.org  Fri Jun 26 20:44:07 2015
From: ogunden at phauna.org (Owen Gunden)
Date: Fri, 26 Jun 2015 16:44:07 -0400
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>	<CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>
	<CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>
Message-ID: <558DB997.4030209@phauna.org>

On 06/26/2015 02:23 PM, Jeff Garzik wrote:
> Failure to plan now for a hard fork increase 6(?) months in the future
> produces that lumpy, unpredictable market behavior.
>
> The market has baked in the years-long behavior of low fees.  From the
> market PoV, inaction does lead to precisely that, a sudden change over
> the span of a few months.

Which market participants are you referring to?

I entered the bitcoin market with open eyes, aware that it faces hard 
scalability challenges by design. I was also aware that because of these 
challenges, eventually transaction fees would have to rise.

Nevertheless, I made the decision to invest because of the utility I 
gain from the anti-censorship, privacy, control, store of value, and 
security aspects of bitcoin -- many of which stem from 
decentralization, which others have demonstrated to be linked to the 
block size.

On the other hand, there are undoubtedly other market participants who 
heard hype about "zero fee transactions to anywhere in the world", 
believed it would scale, and made (mal)investments as a result.

As for how many market participants of each flavor, and how deep their 
respective pockets, who knows? My experience in markets has lead me to 
realize that it's never wise to assume I know what "the market" does and 
doesn't know. If Jeff Garzik is right about what the market has priced 
in, then yes, filled blocks will be rocking the boat. But who's to say 
that the smartest, biggest investors and traders don't already see this 
scaling problem, and have already priced it in? In this case, a sudden 
large increase in the block size is actually rocking the boat. The point 
is, you can't know either way, so trying to pre-empt the market in this 
way is erroneous.

Regarding entrepreneurial investment specifically, why should we favor 
the entrepreneurs who require a more centralized bitcoin over those who 
were more considerate of the possibility of rising transaction fees when 
making their business models?

In my mind, we should favor neither, which is why I'm basically in 
agreement with Pieter that this sense of "emergency" shouldn't really be 
a part of the debate.

Not that I'm taking a stand on the specific block size issue either way. 
I just think this particular line of reasoning (presupposing what 
information the market has and has not already baked in) is unsound.

From carsten.otto at andrena.de  Fri Jun 26 21:07:42 2015
From: carsten.otto at andrena.de (Carsten Otto)
Date: Fri, 26 Jun 2015 23:07:42 +0200
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
Message-ID: <20150626210742.GB5056@home.c-otto.de>

Dear all,

On Mon, Jun 22, 2015 at 02:18:19PM -0400, Gavin Andresen wrote:
> I promised to write a BIP after I'd implemented
> increase-the-maximum-block-size code, so here it is. It also lives at:
> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki

The URL is dead, and the BIP moved here:
https://github.com/gavinandresen/bips/blob/blocksize/bip-0101.mediawiki

Corresponding Pull Request:
https://github.com/bitcoin/bips/pull/163/

Best regards,
Dr. Carsten Otto
-- 
andrena objects ag
B?ro Frankfurt
Clemensstr. 8
60487 Frankfurt

Tel: +49 (0) 69 977 860 38
Fax: +49 (0) 69 977 860 39
http://www.andrena.de

Vorstand: Hagen Buchwald, Matthias Grund, Dr. Dieter Kuhn
Aufsichtsratsvorsitzender: Rolf Hetzelberger

Sitz der Gesellschaft: Karlsruhe
Amtsgericht Mannheim, HRB 109694
USt-IdNr. DE174314824

Bitte beachten Sie auch unsere anstehenden Veranstaltungen:
http://www.andrena.de/events
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 181 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/610fc0e7/attachment.sig>

From ibrightly at gmail.com  Fri Jun 26 22:01:14 2015
From: ibrightly at gmail.com (Ivan Brightly)
Date: Fri, 26 Jun 2015 18:01:14 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <20150626190739.GB10387@muck>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<20150623192838.GG30235@muck>
	<CABsx9T2wsc=+seaWs=v5d_kPpC4u-xTnsjuPMO7PYhQN+0-KAQ@mail.gmail.com>
	<20150623204646.GA18677@muck>
	<CABsx9T3-CbB0k2aKMqRYseUQ2dfW9ANAuYb2MPAw1S+_bF7_=w@mail.gmail.com>
	<20150626190739.GB10387@muck>
Message-ID: <CAAre=yREUeBCrB7=WH2yWsxnCEwKWo_BOMbbavvHfpQeKgDpBA@mail.gmail.com>

On Fri, Jun 26, 2015 at 3:08 PM, Peter Todd <pete at petertodd.org> wrote:

> On Tue, Jun 23, 2015 at 05:24:23PM -0400, Gavin Andresen wrote:
> > On Tue, Jun 23, 2015 at 4:46 PM, Peter Todd <pete at petertodd.org> wrote:
> >
> > > Pieter Wuille showed with simulations that miners with bad connectivity
> > > are negatively affected by other miners creating larger blocks.
> > >
> >
> > ... but the effect is only significant if they have an absurdly
> > low-bandwidth connection and do NOTHING to work around it (like rent a
> > server on the other side of the bandwidth bottleneck and write some code
> to
> > make sure you're creating blocks that will propagate quickly on both
> sides
> > of the bottleneck).
>
> "Just rent a server" forces miners into deploying insecure hosted
> infrastructure that's vulnerable to hacking and seizure; that we
> encourage this already is worrying; requiring it for miners to be
> profitable isn't acceptable.
>

There are a number of factors that contribute to mining vulnerabilities.
For example, presuming a miner is a meaningful contributor to the network,
they'll be using more electricity than their neighbors and will be easily
identifiable in the same way illegal grow-houses are identified by the
local power company working with authorities. A hacked or seized hosted
server is far easier to recover from than seized equipment. Its hard to see
how requiring a reasonably reliable internet connection is a particularly
high barrier to entry when compared to the other mining requirements, such
as funds to purchase ASICs, competitive electricity costs, reasonable
belief that equipment won't be stolen or seized, the technical knowledge
for setting up a p2pool node, etc.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/abe98de7/attachment-0001.html>

From simon at bitcartel.com  Fri Jun 26 22:16:15 2015
From: simon at bitcartel.com (Simon Liu)
Date: Fri, 26 Jun 2015 15:16:15 -0700
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <20150626192528.GC10387@muck>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>	<20150623192838.GG30235@muck>	<CABsx9T2wsc=+seaWs=v5d_kPpC4u-xTnsjuPMO7PYhQN+0-KAQ@mail.gmail.com>	<20150623204646.GA18677@muck>	<CABsx9T3-CbB0k2aKMqRYseUQ2dfW9ANAuYb2MPAw1S+_bF7_=w@mail.gmail.com>
	<20150626192528.GC10387@muck>
Message-ID: <558DCF2F.5080305@bitcartel.com>

If Bitcoin is a $3bn project where stakeholder interests are to be
safeguarded, or if Bitcoin is to be compared to a civil engineering
project where life and death is at stake, it seems only logical that a
well-defined and well-documented process be introduced to properly
evaluate proposed changes.  Although too late for the block size debate,
it seems odd that discussion of such a process is often dismissed out of
hand.

To maintain the current approach of supermajority consensus, based
around ingrained wisdom, personal preference and unwritten rules would
suggest that Bitcoin is still an experiment, in which case perhaps any
decision regarding the block size should be based upon technical merit
alone rather than economic interest.

--Simon

> You're the one proposing a change here; we're evaluating the safety of
that change.

> In civil engineering we have enough experience with disasters to know
> that you can't give into political pressure to do potentially dangerous
> things until the consequences are well understood; hopefully we'll learn
> that in the consensus cryptography space before a big disaster rather
> than after.

From milly at bitcoins.info  Sat Jun 27 02:14:47 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Fri, 26 Jun 2015 22:14:47 -0400
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <558DCF2F.5080305@bitcartel.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>
	<20150623192838.GG30235@muck>
	<CABsx9T2wsc=+seaWs=v5d_kPpC4u-xTnsjuPMO7PYhQN+0-KAQ@mail.gmail.com>
	<20150623204646.GA18677@muck>
	<CABsx9T3-CbB0k2aKMqRYseUQ2dfW9ANAuYb2MPAw1S+_bF7_=w@mail.gmail.com>
	<20150626192528.GC10387@muck> <558DCF2F.5080305@bitcartel.com>
Message-ID: <558E0717.40502@bitcoins.info>

It is actually not odd at all that a formal process is dismissed out of 
hand.  It is all about protecting turf and holding on to power.  If 
there is a well defined process then that takes the power out of the 
hands of the people who have been running the show and making up the 
rules.  In some cases developers see Bitcoin as their "baby" and they 
think they must control it in order to protect it but in doing so they 
can become an "overprotective parent."  Another problem is that some 
people in Bitcoin have disdain for the people they need such as 
financial, economic, security, and legal experts.  Some think they are 
smarter than those people because they discovered Bitcoin first and they 
think their knowledge of Bitcoin means they are also superior in all 
these other areas.  I have seen some discussions of developers who have 
met with people from the financial sector and they come out of the 
meeting with the attitude that all the experts are stupid and that 
Bitcoiners have everything figured out.  One developer tried to tell me 
that you can't do systems engineering in Bitcoin because it involves 
security rather than safety (of course that issue has been well vetted 
and NIST has a whole series of documents to address that very issue 
http://csrc.nist.gov/publications/PubsSPs.html).

Russ




On 6/26/2015 6:16 PM, Simon Liu wrote:
> If Bitcoin is a $3bn project where stakeholder interests are to be
> safeguarded, or if Bitcoin is to be compared to a civil engineering
> project where life and death is at stake, it seems only logical that a
> well-defined and well-documented process be introduced to properly
> evaluate proposed changes.  Although too late for the block size debate,
> it seems odd that discussion of such a process is often dismissed out of
> hand.
>
> To maintain the current approach of supermajority consensus, based
> around ingrained wisdom, personal preference and unwritten rules would
> suggest that Bitcoin is still an experiment, in which case perhaps any
> decision regarding the block size should be based upon technical merit
> alone rather than economic interest.
>
> --Simon
>
>> You're the one proposing a change here; we're evaluating the safety of
> that change.
>
>> In civil engineering we have enough experience with disasters to know
>> that you can't give into political pressure to do potentially dangerous
>> things until the consequences are well understood; hopefully we'll learn
>> that in the consensus cryptography space before a big disaster rather
>> than after.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>



From elombrozo at gmail.com  Sat Jun 27 02:18:20 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Fri, 26 Jun 2015 19:18:20 -0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <558DB997.4030209@phauna.org>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>
	<CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>
	<CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>
	<558DB997.4030209@phauna.org>
Message-ID: <2107342B-1D9E-4575-B7E4-3B69D51B1A17@gmail.com>

I?ve been pondering this whole scale issue considerably?and am left with the conclusion that blockchains are ultimately dispute resolution mechanisms. The vast majority of crypto negotiation will be taking place at levels lesser than global consensus in the future - global consensus is just far too expensive to require for every single cappuccino. There really is little need to take most cases globally?unless the participants disagree. I?ve commented in other places that blockchains are essentially a ?fix? to the prisoner?s dilemma - they make cooperation the equilibrium strategy.

Regardless of whatever linear factor we scale the blockchain by, it is simple math to see that any exponential growth (even if for a short time) in usage will overwhelm the current network. If we ever intend to take bitcoin mainstream, we will most likely experience at least a short time of exponential growth?at least until we either reach an inherent limitation or until we saturate. As Pieter said earlier, FAPP right now the demand for payments might as well be infinite. We?re nowhere near the ability to service it all.

The block size issue is really a usability issue at this point. There are two fundamental things we need to solve:

1) There?s no model for how we?ll introduce a fee market, even though the design of Bitcoin fundamentally depends on fees for its survival (at least in the current form of the design.)

2) There?s no mechanism for how to perform fee bidding and estimation. Most wallets simply have no way to do this without serious usability problems.



If we?re going to talk about block fees, let?s keep it in the context of these relevant issues and not confound it with the scalability issue?these are two very different issues.


- Eric Lombrozo


> On Jun 26, 2015, at 1:44 PM, Owen Gunden <ogunden at phauna.org> wrote:
> 
> On 06/26/2015 02:23 PM, Jeff Garzik wrote:
>> Failure to plan now for a hard fork increase 6(?) months in the future
>> produces that lumpy, unpredictable market behavior.
>> 
>> The market has baked in the years-long behavior of low fees.  From the
>> market PoV, inaction does lead to precisely that, a sudden change over
>> the span of a few months.
> 
> Which market participants are you referring to?
> 
> I entered the bitcoin market with open eyes, aware that it faces hard scalability challenges by design. I was also aware that because of these challenges, eventually transaction fees would have to rise.
> 
> Nevertheless, I made the decision to invest because of the utility I gain from the anti-censorship, privacy, control, store of value, and security aspects of bitcoin -- many of which stem from decentralization, which others have demonstrated to be linked to the block size.
> 
> On the other hand, there are undoubtedly other market participants who heard hype about "zero fee transactions to anywhere in the world", believed it would scale, and made (mal)investments as a result.
> 
> As for how many market participants of each flavor, and how deep their respective pockets, who knows? My experience in markets has lead me to realize that it's never wise to assume I know what "the market" does and doesn't know. If Jeff Garzik is right about what the market has priced in, then yes, filled blocks will be rocking the boat. But who's to say that the smartest, biggest investors and traders don't already see this scaling problem, and have already priced it in? In this case, a sudden large increase in the block size is actually rocking the boat. The point is, you can't know either way, so trying to pre-empt the market in this way is erroneous.
> 
> Regarding entrepreneurial investment specifically, why should we favor the entrepreneurs who require a more centralized bitcoin over those who were more considerate of the possibility of rising transaction fees when making their business models?
> 
> In my mind, we should favor neither, which is why I'm basically in agreement with Pieter that this sense of "emergency" shouldn't really be a part of the debate.
> 
> Not that I'm taking a stand on the specific block size issue either way. I just think this particular line of reasoning (presupposing what information the market has and has not already baked in) is unsound.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/0d541784/attachment.sig>

From elombrozo at gmail.com  Sat Jun 27 02:54:37 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Fri, 26 Jun 2015 19:54:37 -0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <2107342B-1D9E-4575-B7E4-3B69D51B1A17@gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>
	<CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>
	<CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>
	<558DB997.4030209@phauna.org>
	<2107342B-1D9E-4575-B7E4-3B69D51B1A17@gmail.com>
Message-ID: <2C8D5EFF-AB1E-4003-A264-707CAF7CA1F4@gmail.com>

I should add that a strategy of ?let?s avoid fee pressure as much as possible. let?s avoid even thinking about how we?ll transition as much as possible.? strikes me as at least a tad bit myopic.

- Eric Lombrozo

> On Jun 26, 2015, at 7:18 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> 
> I?ve been pondering this whole scale issue considerably?and am left with the conclusion that blockchains are ultimately dispute resolution mechanisms. The vast majority of crypto negotiation will be taking place at levels lesser than global consensus in the future - global consensus is just far too expensive to require for every single cappuccino. There really is little need to take most cases globally?unless the participants disagree. I?ve commented in other places that blockchains are essentially a ?fix? to the prisoner?s dilemma - they make cooperation the equilibrium strategy.
> 
> Regardless of whatever linear factor we scale the blockchain by, it is simple math to see that any exponential growth (even if for a short time) in usage will overwhelm the current network. If we ever intend to take bitcoin mainstream, we will most likely experience at least a short time of exponential growth?at least until we either reach an inherent limitation or until we saturate. As Pieter said earlier, FAPP right now the demand for payments might as well be infinite. We?re nowhere near the ability to service it all.
> 
> The block size issue is really a usability issue at this point. There are two fundamental things we need to solve:
> 
> 1) There?s no model for how we?ll introduce a fee market, even though the design of Bitcoin fundamentally depends on fees for its survival (at least in the current form of the design.)
> 
> 2) There?s no mechanism for how to perform fee bidding and estimation. Most wallets simply have no way to do this without serious usability problems.
> 
> 
> 
> If we?re going to talk about block fees, let?s keep it in the context of these relevant issues and not confound it with the scalability issue?these are two very different issues.
> 
> 
> - Eric Lombrozo
> 
> 
>> On Jun 26, 2015, at 1:44 PM, Owen Gunden <ogunden at phauna.org> wrote:
>> 
>> On 06/26/2015 02:23 PM, Jeff Garzik wrote:
>>> Failure to plan now for a hard fork increase 6(?) months in the future
>>> produces that lumpy, unpredictable market behavior.
>>> 
>>> The market has baked in the years-long behavior of low fees.  From the
>>> market PoV, inaction does lead to precisely that, a sudden change over
>>> the span of a few months.
>> 
>> Which market participants are you referring to?
>> 
>> I entered the bitcoin market with open eyes, aware that it faces hard scalability challenges by design. I was also aware that because of these challenges, eventually transaction fees would have to rise.
>> 
>> Nevertheless, I made the decision to invest because of the utility I gain from the anti-censorship, privacy, control, store of value, and security aspects of bitcoin -- many of which stem from decentralization, which others have demonstrated to be linked to the block size.
>> 
>> On the other hand, there are undoubtedly other market participants who heard hype about "zero fee transactions to anywhere in the world", believed it would scale, and made (mal)investments as a result.
>> 
>> As for how many market participants of each flavor, and how deep their respective pockets, who knows? My experience in markets has lead me to realize that it's never wise to assume I know what "the market" does and doesn't know. If Jeff Garzik is right about what the market has priced in, then yes, filled blocks will be rocking the boat. But who's to say that the smartest, biggest investors and traders don't already see this scaling problem, and have already priced it in? In this case, a sudden large increase in the block size is actually rocking the boat. The point is, you can't know either way, so trying to pre-empt the market in this way is erroneous.
>> 
>> Regarding entrepreneurial investment specifically, why should we favor the entrepreneurs who require a more centralized bitcoin over those who were more considerate of the possibility of rising transaction fees when making their business models?
>> 
>> In my mind, we should favor neither, which is why I'm basically in agreement with Pieter that this sense of "emergency" shouldn't really be a part of the debate.
>> 
>> Not that I'm taking a stand on the specific block size issue either way. I just think this particular line of reasoning (presupposing what information the market has and has not already baked in) is unsound.
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/3e1b7436/attachment.sig>

From rusty at rustcorp.com.au  Sat Jun 27 04:46:35 2015
From: rusty at rustcorp.com.au (Rusty Russell)
Date: Sat, 27 Jun 2015 14:16:35 +0930
Subject: [bitcoin-dev] [RFC] IBLT block testing implementation
In-Reply-To: <CAPswA9yUUUH7XM_wC=+QXnbEhp49hOyFAtfJztq+r2p0rNmeiQ@mail.gmail.com>
References: <871th3t1go.fsf@rustcorp.com.au>
	<CAPswA9yUUUH7XM_wC=+QXnbEhp49hOyFAtfJztq+r2p0rNmeiQ@mail.gmail.com>
Message-ID: <87a8vlvjv8.fsf@rustcorp.com.au>

Kalle Rosenbaum <kalle at rosenbaum.se> writes:
> 2015-06-23 7:53 GMT+02:00 Rusty Russell <rusty at rustcorp.com.au>:
>> Hi all,
>>
>>         I've come up with a model for using IBLT to communicate blocks
>> between peers.  The gory details can be found on github: it's a
>> standalone C++ app for testing not integrated with bitcoin.
>>
>>         https://github.com/rustyrussell/bitcoin-iblt
>
> Good to see that you're working on this. Really exciting!
>
> I want to take the opportunity to link to my previous work on IBLTs, for
> those that haven't seen it, where I investigate the behaviour of the IBLT
> when changing different parameters, like cell count, hashFunctionCount etc:
> https://github.com/kallerosenbaum/bitcoin-iblt/wiki

Yep, I stole the hashFunctionCount = 3 straight from there, same
with 64-byte bucket contents.

>>From glancing over your implementation, I see that you don't use a
> keyHashSum, in fact you don't use a key at all, but only a
> concatenatenation of (txid48, fragid, tx-chunk) as value. Here the
> txid48+fragid functions as a kind of keyHashSum. I think this might be a
> very good idea,
>
> If you have a false positive with count == 1, then you would probably
> detect it if fragid is outside reasonable limit from from base_fragid. Did
> you implement your idea to remove all the count==1 fagments in ascending
> order of (fragid-base_fragid)?

Yep!  I keep records of all the 1 and -1 buckets; separate lists
depending on how far they are off the base.  Lists for 0, 1, 2, ... 7,
then powers of 2.  See todo in iblt.cpp.

> Anyhow, I think we should make some more comparable tests, just as you
> proposed last year when I didn't reply, sorry... My code is a more straight
> forward implementation of the IBLT paper (http://arxiv.org/pdf/1101.2245.pdf)
> and encoding blocks is done pretty much as Gavin proposed in his gist. That
> should function as a baseline so that we can validate that your
> optimizations actually work. Please contact me directly if you are
> interested in that, and we'll figure something out.

Absolutely, will do that offline.

> More comments/questions inline:
>
>>
>> Assumptions and details:
>>
>> 1. The base idea comes from Gavin's Block Propagation gist:
>>         https://gist.github.com/gavinandresen/e20c3b5a1d4b97f79ac2
>>
>> 2. It relies on similarity in mempools, with some selection hints.  This
>>    is designed to be as flexible as possible to make fewest assumptions
>>    on tx selection policy.
>>
>> 3. The selection hints are: minimum fee-per-byte (fixed point) and
>>    bitmaps of included-despite-that and rejected-despite-that.  The
>>    former covers things like child-pays-for-parent and the priority
>>    area.  The latter covers other cases like Eligius censoring "spam",
>>    bitcoin version differences, etc.
>>
>
> There is a chance that the bit prefix of the added or removed tx is not
> unique within the receiver's mempool. In that case the receiver can
> probably just use the earliest matching transaction and hope for the best.
> If not -> bad luck. Is that how you do it?

No; they add or remove all matching.  If they add too many, that's the
easy case, of course.  They can't remove too many (since they know that
bit prefix was unique on the other end).

>> 4. Cost to represent these exceptional added or excluded transactions is
>>    (on average) log2(transactions in mempool) bits.
>
> These exceptional tx *could* instead be encoded in the IBLT, just as if
> they were unknown differences. Your bitmaps is probably a more compact
> representation, but it's also more complex.

It's pretty easy to cut the bitmaps to zero and test this (comment them
out in wire_encode.cpp, for example).

But the overhead of IBLT is some factor greater than txsize (need to
measure that factor, too!); whereas these are a log(#txs-in-mempool) bits.

>> 5. At Peiter Wuille's suggestion, it is designed to be reencoded between
>>    nodes.  It seems fast enough for that, and neighboring nodes should
>>    have most similar mempools.
>
> What is the purpose of reencoding when relaying? Is that to improve the
> failure probability as new tx may have arrived in the mempool of the
> intermediary node?

Yep, and estimation ability.  The theory is that adjacent nodes will
have closer mempools, allowing for smaller IBLTs.  The size of mempool
differences for each block can be fed back, so you have an idea of the
likely delta to peers (ie. add that to the actual difference between
your mempool and the new block, to estimate the amount of IBLT
reconstruction required).

>> 6. It performs reasonably well on my 100 block sample in bitcoin-corpus
>>    (chosen to include a mempool spike):
>>
>>    Average block range (bytes):                         7988-999829
>>    Block size mean (bytes):                             401926
>>
>>    Minimal decodable BLT size range (bytes):            314-386361
>>    Minimal decodable BLT size mean (bytes):             13265
>>
>> 7. Actual results will have to be worse than these minima, as peers will
>>    have to oversize the IBLT to have reasonable chance of success.
>>
>
> Yes, I have made some analysis on this here:
> https://github.com/kallerosenbaum/bitcoin-iblt/wiki/FailureProbability. We
> use quite different data structures for encoding blocks in IBLT, but it
> might apply to your implementation as well. An interesting result is that
> the space saving percentage actually increases as blocks grow.

Let's pick a 5% as our failure target (given most nodes will get blocks
from more than 1 peer, and our other estimates of mempool differences
will be conservative).  Seems like 16/16 transactions takes ~400 cells
for recovery, 64/64 takes ~1400, 128/128 takes ~2480, 256/256 says
~4600.

Using that 128/128 => 198k number, and your txs were about 300B, that
implies an overhead of 2.6, right?

We're probably better estimating in terms of "cells recovered" (ie. sum
of cells for txs which we were missing, plus number of txs we added
erroneously).

Cheers,
Rusty.

From filipe at ktorn.com  Sat Jun 27 06:13:17 2015
From: filipe at ktorn.com (Filipe Farinha)
Date: Sat, 27 Jun 2015 14:13:17 +0800
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <20150626193630.GB17829@muck>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>	<CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>	<CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>	<CAPg+sBhrBUSfPdMjbLthLEFD17zBC3LoWf9LvZsOD1Vp0D78BQ@mail.gmail.com>	<558DA56F.3010703@jrn.me.uk>
	<20150626193630.GB17829@muck>
Message-ID: <558E3EFD.9040602@ktorn.com>

On 27/06/2015 03:36, Peter Todd wrote:
> * Make websites with easy to understand displays of what the current mempool
>    backlog is, and what fee/KB is needed to get to the front of the queue. We've
>    done a great job for Bitcoin price charts, let's extend that to transaction
>    fees.
>
+1

This is especially important if take into account all the projects that 
aim to build upon the bitcoin blockchain and that can have a significant 
impact, both in terms of storage space as well as transaction volume spikes.

Just recently I suggested the need for a BIP to standardize reporting of 
"delay alerts" in wallets, so that users can act accordingly (i.e. 
fee-bump, postpone, cancel) before sending their transactions during 
these periods of increased transaction volume.

https://community.blockstack.org/t/blockstore-footprint-on-blockchain/68/5?u=ktorn

IMHO keeping the users informed of potential issues before committing 
transactions to the network can go a long way towards preventing 
frustration and potential backlashes against blockchain tech.

Filipe Farinha

From gmaxwell at gmail.com  Sat Jun 27 06:21:03 2015
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sat, 27 Jun 2015 06:21:03 +0000
Subject: [bitcoin-dev] Upcoming DOS vulnerability announcements for Bitcoin
	Core
Message-ID: <CAAS2fgR0ak5B1gdSvR7s4YRydbpXb0jC45U3V50D6n=aMLUn7w@mail.gmail.com>

On July 7th I will be making public details of several serious denial of
service vulnerabilities which have fixed in recent versions of Bitcoin Core,
including CVE-2015-3641.

I strongly recommend anyone running production nodes exposed to inbound
connections from the internet upgrade to 0.10.2 as soon as possible.

Upgrading older systems, especially miners, is also important due to the
BIP66 soft-fork which is about to reach enforcing status, see also:
http://sourceforge.net/p/bitcoin/mailman/message/34199290/

From voisine at gmail.com  Sat Jun 27 07:14:41 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Sat, 27 Jun 2015 00:14:41 -0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <558E3EFD.9040602@ktorn.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>
	<CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>
	<CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>
	<CAPg+sBhrBUSfPdMjbLthLEFD17zBC3LoWf9LvZsOD1Vp0D78BQ@mail.gmail.com>
	<558DA56F.3010703@jrn.me.uk> <20150626193630.GB17829@muck>
	<558E3EFD.9040602@ktorn.com>
Message-ID: <CACq0ZD5S6dDcBh9fsHCgbPJXom4vF8VymtHXogODjfD38RDNfA@mail.gmail.com>

Also remember that the sender is not the one who cares about delays or even
getting confirmations at all, it's the receiver who's concerned with these
things. They have to tell the sender up-front what they're willing to
accept in exchange for goods and services.


Aaron Voisine
co-founder and CEO
breadwallet.com

On Fri, Jun 26, 2015 at 11:13 PM, Filipe Farinha <filipe at ktorn.com> wrote:

> On 27/06/2015 03:36, Peter Todd wrote:
>
>> * Make websites with easy to understand displays of what the current
>> mempool
>>    backlog is, and what fee/KB is needed to get to the front of the
>> queue. We've
>>    done a great job for Bitcoin price charts, let's extend that to
>> transaction
>>    fees.
>>
>>  +1
>
> This is especially important if take into account all the projects that
> aim to build upon the bitcoin blockchain and that can have a significant
> impact, both in terms of storage space as well as transaction volume spikes.
>
> Just recently I suggested the need for a BIP to standardize reporting of
> "delay alerts" in wallets, so that users can act accordingly (i.e.
> fee-bump, postpone, cancel) before sending their transactions during these
> periods of increased transaction volume.
>
>
> https://community.blockstack.org/t/blockstore-footprint-on-blockchain/68/5?u=ktorn
>
> IMHO keeping the users informed of potential issues before committing
> transactions to the network can go a long way towards preventing
> frustration and potential backlashes against blockchain tech.
>
> Filipe Farinha
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/f4084b54/attachment.html>

From laanwj at gmail.com  Sat Jun 27 07:43:00 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Sat, 27 Jun 2015 09:43:00 +0200
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
Message-ID: <20150627074259.GA25420@amethyst.visucore.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

On Fri, Jun 26, 2015 at 04:09:18PM +0200, Pieter Wuille wrote:

> People say that larger blocks are necessary. In the long term, I agree - in
> the sense that systems that do not evolve tend to be replaced by other
> systems. This evolution can come in terms of layers on top of Bitcoin's
> blockchain, in terms of the technology underlying various aspects of the
> blockchain itself, and also in the scale that this technology supports.
> 
> I do, however, fundamentally disagree that a fear for a change in economics
> should be considered to necessitate larger blocks. If it is, and there is
> consensus that we should adapt to it, then there is effectively no limit
> going forward. This is similar to how Congress voting to increase the
> copyright term retroactively from time to time is really no different from
> having an infinite copyright term in the first place. This scares me.

Fully agree Pieter. Couldn't have stated it better.

It has been disappointing and scary to see political pressure tactics being used to change a distributed consensus system. 

By using the system everyone agreed on one set of consensus rules, that was the "social contract" of Bitcoin. To me, the consensus rules are more like rules of physics than laws. They cannot be changed willy-nilly according to needs of some groups, much less than lower gravity can be legislated to help the airline industry.

It is shocking to hear wide misunderstanding that it is supposedly 'the developers' that decide on such changes. As if this is merely a private top-down project. No, the point was that this can continue without any kind of central guidance, with expected stability. As a developer I work on improving the technical aspects and fixing bugs, not on 'governing' it.
By expecting a few developers to make controversial decisions you are breaking the expectations, as well as making life dangerous for those developers. I'll jump ship before being forced to merge an even remotely controversial hardfork.

The stressful conditions of last weeks have thus made me hostile toward the idea of hardforks. At least to hardforks that make politically loaded changes. In this case further centralization to well-connected geographic locales by increasing network bandwidth requirements.

Resiliency and decentralization are the key aspects. I would not want to risk breaking the system, or at least wildly changing its properties and applicability out of perceived necessity, and fear.

Wladimir
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBCgAGBQJVjlOMAAoJEHSBCwEjRsmmveAH+wWN6j+0LsLibl2XWs3hxs64
nOT63JMNEIYzSsxZkEkzU4AWsdPG8TWXeaYhaR5rd7pXspFHHFYpPNxyOAWB4nY9
yS9eI4JRkOLtZY+rulFppkvnpggL82MFcT5rMNom+S1+EKE6C1NFqXl+OzZqatWL
pysza7ZHg/d3hKWkm/JtlfTYTOgrxFIX6INghfQiOl2hEyXE5iZF8+CRnZQA4dG7
jr/Jn2H4EzkUF8SDYVkIYsX+hPL5ib9mMm12ZXH8M8lFkdwweJCwbA7tVtNoalG3
dzHb/8rotlqiDTNuLIlB7TE4maivcr2cXVKTfry6HBRJvNf0cD3oP67vCQj6iis=
=pipo
-----END PGP SIGNATURE-----

From laanwj at gmail.com  Sat Jun 27 07:49:47 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Sat, 27 Jun 2015 09:49:47 +0200
Subject: [bitcoin-dev] Upcoming DOS vulnerability announcements for
 Bitcoin Core
In-Reply-To: <CAAS2fgR0ak5B1gdSvR7s4YRydbpXb0jC45U3V50D6n=aMLUn7w@mail.gmail.com>
References: <CAAS2fgR0ak5B1gdSvR7s4YRydbpXb0jC45U3V50D6n=aMLUn7w@mail.gmail.com>
Message-ID: <20150627074946.GB25420@amethyst.visucore.com>

On Sat, Jun 27, 2015 at 06:21:03AM +0000, Gregory Maxwell wrote:

> http://sourceforge.net/p/bitcoin/mailman/message/34199290/

New archive link:
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008578.html

Wladimir

From venzen at mail.bihthai.net  Sat Jun 27 08:16:27 2015
From: venzen at mail.bihthai.net (Venzen Khaosan)
Date: Sat, 27 Jun 2015 15:16:27 +0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <2107342B-1D9E-4575-B7E4-3B69D51B1A17@gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>	<CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>	<CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>	<558DB997.4030209@phauna.org>
	<2107342B-1D9E-4575-B7E4-3B69D51B1A17@gmail.com>
Message-ID: <558E5BDB.90608@mail.bihthai.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Yes, Eric, blockchains are a means of mathematically determining
consensus among those who use them. The application goes beyond value
token into the realm of vote and deterministic politics. Eventually,
blockchains will allows citizens to choose state projects and to
contribute taxes according to their ability, and to benefit according
to their need.

Economic Participants
The dichotomy of the mining operator as an economic class on one hand
and the user as a dependent on the other is based on the current
Keynesian model of economics that views the centralized as inevitable
and the citizen as a consumer to be enlisted into spending at every
opportunity.

Schools of Thought
Although not a definitive answer, the Austrian School of Economics
illustrates that the Keynesian model (which we all harbor to some
degree, thanks to its global hegemony) is fundamentally flawed:
https://www.youtube.com/watch?v=SLfnpwHu4Hw (Of all the resources
available, this speaker is most succinct, although I cannot vouch for
his degree of Frankfurt School compliance or potential Zionist
leanings - the account conforms to academic agreement of what the
Austrian School of Economics stands for).

Developers are, by necessity, making economic decisions
If the developers will seize this moment of having to make economic
decisions about how Bitcoin will be influenced and grow according to
market dynamics, they should make an informed decision (only the
developers can make the decision at this time), they should strive to
make a well-informed decision - not some fumbled
"hurry-the-blocksize-is-running-out" decision. Pieter Wuille argues
the point convincingly in his initial post.

Fulcrum
The fundamental question to be answered here is: Do developers want to
compete with existing payment networks, or do developers want to
define Bitcoin's network in its own right?

If Bitcoin must compete and win, then centralize it and it will soon
beat the competition on every metric.

If Bitcoin is its own beast, then users and finance capital must adapt
to its constraints, for the benefit of all involved.

Developers have a crucial role to play in implementing economic
policy. It's not self-evident: a multinational or government sponsored
entity mining this blockchain with the purpose of dominating it does
not mean you have done your job of surrendering Bitcoin to the "free
market".


The decision rests on your informed understanding of economics (and
myths about economics) and choosing the way that liberates Bitcoin and
its users, and does not co-opt them into a system that seeks to devour
competition. Talk about making Bitcoin more compliant to finance
capital business is counter-Bitcoin and speakers harboring this
opinion have come to dominate discussion here. If increased business
and user adoption truly increased value, you would see it in the price
chart. What has ignorant, fashion-prone mainstreet adoption done for
Bitcoin? Will it really do something else, as some posters claim, or
will it do more of the same?

Venzen Khaosan



On 06/27/2015 09:18 AM, Eric Lombrozo wrote:
> I?ve been pondering this whole scale issue considerably?and am left
> with the conclusion that blockchains are ultimately dispute
> resolution mechanisms. The vast majority of crypto negotiation will
> be taking place at levels lesser than global consensus in the
> future - global consensus is just far too expensive to require for
> every single cappuccino. There really is little need to take most
> cases globally?unless the participants disagree. I?ve commented in
> other places that blockchains are essentially a ?fix? to the
> prisoner?s dilemma - they make cooperation the equilibrium
> strategy.
> 
> Regardless of whatever linear factor we scale the blockchain by, it
> is simple math to see that any exponential growth (even if for a
> short time) in usage will overwhelm the current network. If we ever
> intend to take bitcoin mainstream, we will most likely experience
> at least a short time of exponential growth?at least until we
> either reach an inherent limitation or until we saturate. As Pieter
> said earlier, FAPP right now the demand for payments might as well
> be infinite. We?re nowhere near the ability to service it all.
> 
> The block size issue is really a usability issue at this point.
> There are two fundamental things we need to solve:
> 
> 1) There?s no model for how we?ll introduce a fee market, even
> though the design of Bitcoin fundamentally depends on fees for its
> survival (at least in the current form of the design.)
> 
> 2) There?s no mechanism for how to perform fee bidding and
> estimation. Most wallets simply have no way to do this without
> serious usability problems.
> 
> 
> 
> If we?re going to talk about block fees, let?s keep it in the
> context of these relevant issues and not confound it with the
> scalability issue?these are two very different issues.
> 
> 
> - Eric Lombrozo
> 
> 
>> On Jun 26, 2015, at 1:44 PM, Owen Gunden <ogunden at phauna.org>
>> wrote:
>> 
>> On 06/26/2015 02:23 PM, Jeff Garzik wrote:
>>> Failure to plan now for a hard fork increase 6(?) months in the
>>> future produces that lumpy, unpredictable market behavior.
>>> 
>>> The market has baked in the years-long behavior of low fees.
>>> From the market PoV, inaction does lead to precisely that, a
>>> sudden change over the span of a few months.
>> 
>> Which market participants are you referring to?
>> 
>> I entered the bitcoin market with open eyes, aware that it faces
>> hard scalability challenges by design. I was also aware that
>> because of these challenges, eventually transaction fees would
>> have to rise.
>> 
>> Nevertheless, I made the decision to invest because of the
>> utility I gain from the anti-censorship, privacy, control, store
>> of value, and security aspects of bitcoin -- many of which stem
>> from decentralization, which others have demonstrated to be
>> linked to the block size.
>> 
>> On the other hand, there are undoubtedly other market
>> participants who heard hype about "zero fee transactions to
>> anywhere in the world", believed it would scale, and made
>> (mal)investments as a result.
>> 
>> As for how many market participants of each flavor, and how deep
>> their respective pockets, who knows? My experience in markets has
>> lead me to realize that it's never wise to assume I know what
>> "the market" does and doesn't know. If Jeff Garzik is right about
>> what the market has priced in, then yes, filled blocks will be
>> rocking the boat. But who's to say that the smartest, biggest
>> investors and traders don't already see this scaling problem, and
>> have already priced it in? In this case, a sudden large increase
>> in the block size is actually rocking the boat. The point is, you
>> can't know either way, so trying to pre-empt the market in this
>> way is erroneous.
>> 
>> Regarding entrepreneurial investment specifically, why should we
>> favor the entrepreneurs who require a more centralized bitcoin
>> over those who were more considerate of the possibility of rising
>> transaction fees when making their business models?
>> 
>> In my mind, we should favor neither, which is why I'm basically
>> in agreement with Pieter that this sense of "emergency" shouldn't
>> really be a part of the debate.
>> 
>> Not that I'm taking a stand on the specific block size issue
>> either way. I just think this particular line of reasoning
>> (presupposing what information the market has and has not already
>> baked in) is unsound. 
>> _______________________________________________ bitcoin-dev
>> mailing list bitcoin-dev at lists.linuxfoundation.org 
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
> 
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVjlvYAAoJEGwAhlQc8H1malgH/jKkN27KpNecMQPcSZ+RX/s8
UDIvrqIsNesWUtwnWk1/2WcaoDA8V9ho42VPXmDgGh0GTmYKzKnBUuKPeIBfe1z+
XCtG7OeWRAlo+1Zk+dT8Crv/PEHocpy7q2OFW2iOapWfTEYO/1FTA58RYMYSmKXQ
0snm3QhVIdJA3/3BE12616y0+Oo2aV3H9El6buqQVge/26Z8X8TLIsY5h8dQbTBF
+J9Kq1YdJc8ogANZBpZfZBnURmNRsolyvQ+Sb5SxnpPQz73X3QPGaTyjnNsE0oVX
Occxx6BREN/byoelIS5HMRsEYExmALIisXTiM1kysKzbcYp+ysB6Uzvyp1GzbFg=
=PE+q
-----END PGP SIGNATURE-----

From nxtchg at hush.com  Sat Jun 27 09:55:01 2015
From: nxtchg at hush.com (NxtChg)
Date: Sat, 27 Jun 2015 12:55:01 +0300
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <20150627074259.GA25420@amethyst.visucore.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com> 
Message-ID: <20150627095501.C59B541A40@smtp.hushmail.com>


On 6/27/2015 at 10:43 AM, "Wladimir J. van der Laan" <laanwj at gmail.com> wrote:

> It has been disappointing and scary to see political pressure tactics being used to change a distributed consensus system. 

That's why some people are advocating formalizing the process. Political pressure will happen anyway, whether somebody likes it or not. It's better to deal with it in the open.


> They cannot be changed willy-nilly according to needs of some groups, much less than lower gravity can be legislated to help the airline industry.

Except the block size is not gravity. It's more like an arbitrary decision to limit planes' wingspan to the most typical hangar door of 1940.

And now we have a "controversy" that we can't have modern planes out of the fear they won't fit into some of the old hangars. 

And to continue with this nice example, some people are even arguing that "the demand for flight is, essentially, limitless, so why bother making larger jets at all?"



From laanwj at gmail.com  Sat Jun 27 10:04:01 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Sat, 27 Jun 2015 12:04:01 +0200
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <20150627095501.C59B541A40@smtp.hushmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<20150627095501.C59B541A40@smtp.hushmail.com>
Message-ID: <20150627100400.GC25420@amethyst.visucore.com>

On Sat, Jun 27, 2015 at 12:55:01PM +0300, NxtChg wrote:
> 
> > They cannot be changed willy-nilly according to needs of some groups, much less than lower gravity can be legislated to help the airline industry.
> 
> Except the block size is not gravity. It's more like an arbitrary decision to limit planes' wingspan to the most typical hangar door of 1940.
> 
> And now we have a "controversy" that we can't have modern planes out of the fear they won't fit into some of the old hangars. 
> 
> And to continue with this nice example, some people are even arguing that "the demand for flight is, essentially, limitless, so why bother making larger jets at all?"

At least there's always an 'exit' option. At this point it would be more realistic to create a sidechain, or altcoin with larger blocks, and not experiment with the current one in-flight. Then you won't risk the other 'passengers' who don't consent to it.

It's important to face reality instead of being wishful here. I'd also have preferred to have one happy family, but it is clear that is not the case, and pretending is only going to cause damage by creating false expectations, or eventually even double-spending possibility because of conflicting forks.

Wladimir

From jtimon at jtimon.cc  Sat Jun 27 10:13:49 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sat, 27 Jun 2015 12:13:49 +0200
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <20150627074259.GA25420@amethyst.visucore.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
Message-ID: <CABm2gDr3orTHMN1q8vGmy3NpXWPy5i=zHhGneDGUk=ney3-e+Q@mail.gmail.com>

On Sat, Jun 27, 2015 at 9:43 AM, Wladimir J. van der Laan
<laanwj at gmail.com> wrote:
> By expecting a few developers to make controversial decisions you are breaking the expectations, as well as making life dangerous for those developers. I'll jump ship before being forced to merge an even remotely controversial hardfork.

Obviously those who claim that you or "committers" or "developers" are
in control of the consensus rules are far from understanding this
life-threatening part. If you, Gavin or anyone becomes "the president
of bitcoin" he will likely get killed, or kidnapped, or get his family
kidnapped, or tortured...

> The stressful conditions of last weeks have thus made me hostile toward the idea of hardforks. At least to hardforks that make politically loaded changes.

I fully agree with what you've said but there's an argument I
sympathize with: "hardforks must be possible". Otherwise it seems that
the system is "eventually obsolete by design".
Provided they're also uncontroversial, they don't need to be that
different (in terms of deployment) from softforks. Since they risks
are bigger you just need to give more time for users and alternative
software to upgrade.
I would really like deploying an uncontroversial hardfork to prove
nobody wants them to be impossible, as explained in:
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008936.html

I hear people claiming that "hardforks must be possible" here and
there, see this example:
http://www.reddit.com/r/Bitcoin/comments/3awomg/how_the_bitcoin_experiment_might_fail/csgonlm

> Wladimir
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1
>
> iQEcBAEBCgAGBQJVjlOMAAoJEHSBCwEjRsmmveAH+wWN6j+0LsLibl2XWs3hxs64
> nOT63JMNEIYzSsxZkEkzU4AWsdPG8TWXeaYhaR5rd7pXspFHHFYpPNxyOAWB4nY9
> yS9eI4JRkOLtZY+rulFppkvnpggL82MFcT5rMNom+S1+EKE6C1NFqXl+OzZqatWL
> pysza7ZHg/d3hKWkm/JtlfTYTOgrxFIX6INghfQiOl2hEyXE5iZF8+CRnZQA4dG7
> jr/Jn2H4EzkUF8SDYVkIYsX+hPL5ib9mMm12ZXH8M8lFkdwweJCwbA7tVtNoalG3
> dzHb/8rotlqiDTNuLIlB7TE4maivcr2cXVKTfry6HBRJvNf0cD3oP67vCQj6iis=
> =pipo
> -----END PGP SIGNATURE-----
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From venzen at mail.bihthai.net  Sat Jun 27 10:19:55 2015
From: venzen at mail.bihthai.net (Venzen Khaosan)
Date: Sat, 27 Jun 2015 17:19:55 +0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <20150627095501.C59B541A40@smtp.hushmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>	<20150627074259.GA25420@amethyst.visucore.com>
	<20150627095501.C59B541A40@smtp.hushmail.com>
Message-ID: <558E78CB.7070207@mail.bihthai.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


Advocations of "formalizing the process" may have a good outcome, but
that is not the issue in the current dilemma. The present process is
good enough. And that's as much as we can hope for.

The issue is: does Bitcoin need to scale to business or does business
need to scale to Bitcoin.

Business is not the Holy Spirit that fills Bitcoin with utility.
Bitcoin already has utility and finance capital would like to ride
that utility for its own profit motive. Some posters, here in this
list, would like to accelerate that process and they justify their
argument with the assumption that greater adoption equals greater
utility and value (and price).

That is a false assumption. Given the increased adoption of Bitcoin by
users and businesses during the past year, does the price chart
reflect greater value or price? Of course not, the price chart is at
terminal lows. Fact not fiction.

It is a fiction of common "market wisdom" that greater adoption
increases a commodity's value. Speculation plays with commodity value
even when underlying fundamental value remains unchanged. China has
verifiably been purchasing record amounts of Gold, but there is no
effect in the price chart (or on Gold's objective value).

Bitcoin's price chart will go up and down many times in the coming
years as speculators play their game. It's independent of the
underlying censorship resistance, mathematical consensus and
transaction security of Bitcoin. Once the decentralization is
sacrificed to big business then you can expect the final price chart low.

Until then, let's hold our horses and maintain an even keel: Bitcoin
is not trying to fit into the manic global economy's race toward the
edge of a precipice - Bitcoin is the solution once its all gone wrong
- - for ordinary users, not opportunistic bank-based business models
such as JPMorgan, Pantera Capital or BTC-China.

If you cannot see the inherent centralization problem with most
so-called Bitcoin businesses you just haven't done your homework.




On 06/27/2015 04:55 PM, NxtChg wrote:
> 
> On 6/27/2015 at 10:43 AM, "Wladimir J. van der Laan"
> <laanwj at gmail.com> wrote:
> 
>> It has been disappointing and scary to see political pressure
>> tactics being used to change a distributed consensus system.
> 
> That's why some people are advocating formalizing the process.
> Political pressure will happen anyway, whether somebody likes it or
> not. It's better to deal with it in the open.
> 
> 
>> They cannot be changed willy-nilly according to needs of some
>> groups, much less than lower gravity can be legislated to help
>> the airline industry.
> 
> Except the block size is not gravity. It's more like an arbitrary
> decision to limit planes' wingspan to the most typical hangar door
> of 1940.
> 
> And now we have a "controversy" that we can't have modern planes
> out of the fear they won't fit into some of the old hangars.
> 
> And to continue with this nice example, some people are even
> arguing that "the demand for flight is, essentially, limitless, so
> why bother making larger jets at all?"
> 
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVjnjHAAoJEGwAhlQc8H1m7CMH/273H3C7tnL56jJZ6U9RMbSN
dp2dPLusMJAvjWKiM/P5VjbcXnvARFuA3foIkzlxGdt2mvGlddW+b2x9YVZcDAZz
k9V/IccOmVVEvIpfaP0Awe6H9H8+Gr1PpFWuaFExcem9T9bF6kVGV4o0g6EGzwVe
rGJb0radm2qdWTKvUNvjXAF3kGRtoewFmTZBwyE6R6AxE7tvs/4Zvsf99+EQsD+o
3NZFlXX0gvPmaR7TWK0iOGlgns9MmKMm94xk8lHkESvW0NCMwTw6I0Pz74usPDte
U0lWkZBoKFWkEuf6ChVOOoSdSbYFrOwa0uaiJtPWJB+9TiwZdZbDJumW3uqYG5M=
=4vVg
-----END PGP SIGNATURE-----

From nxtchg at hush.com  Sat Jun 27 10:29:11 2015
From: nxtchg at hush.com (NxtChg)
Date: Sat, 27 Jun 2015 13:29:11 +0300
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <20150627100400.GC25420@amethyst.visucore.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<20150627095501.C59B541A40@smtp.hushmail.com>
	<20150627100400.GC25420@amethyst.visucore.com> 
Message-ID: <20150627102912.06E2641A3E@smtp.hushmail.com>


On 6/27/2015 at 1:04 PM, "Wladimir J. van der Laan" <laanwj at gmail.com> wrote:

> Then you won't risk the other 'passengers' who don't consent to it.

But you can look at it the other way: what about risking the 'passengers' when the plane suddenly doesn't fly anymore? 

Increasing block limit increases the risk of centralization, but it also keeps the current status quo of blocks not being filled, rather then risking an unknown option of hitting the limit hard.
 

>... and pretending is only going to cause damage by creating false expectations, or eventually even double-spending possibility because of conflicting forks.

So you personally see the risks of a hard-fork outweigh the risks of not increasing the block size.

It's a valid opinion, but you probably don't want to decide the fate of Bitcoin single-handedly by denying any change, which is not a technical emergency.

That's why there should be a mechanism where the whole community can vote. Lacking that, that's what Gavin and Mike are doing: creating their own mechanism for consensus changes.


From jtimon at jtimon.cc  Sat Jun 27 11:04:24 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sat, 27 Jun 2015 13:04:24 +0200
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <20150627102912.06E2641A3E@smtp.hushmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<20150627095501.C59B541A40@smtp.hushmail.com>
	<20150627100400.GC25420@amethyst.visucore.com>
	<20150627102912.06E2641A3E@smtp.hushmail.com>
Message-ID: <CABm2gDpnzjph5SKTf+8GWgwe+njS=k2GNm9uL73RC-EV=Y5wug@mail.gmail.com>

On Sat, Jun 27, 2015 at 12:29 PM, NxtChg <nxtchg at hush.com> wrote:
>
> On 6/27/2015 at 1:04 PM, "Wladimir J. van der Laan" <laanwj at gmail.com> wrote:
>
>> Then you won't risk the other 'passengers' who don't consent to it.
>
> But you can look at it the other way: what about risking the 'passengers' when the plane suddenly doesn't fly anymore?
>
> Increasing block limit increases the risk of centralization, but it also keeps the current status quo of blocks not being filled, rather then risking an unknown option of hitting the limit hard.

But that option is not unknown, that's the point of this thread.
"Doing nothing" would require to fix the mempool to scale with the
number of unconfirmed transaction. This is something that we will
eventually have to fix unless the plan is to eventually remove the
blocksize limit.
What will happen with full blocks is that fees will likely rise and
the transactions with bigger fees will get confirmed first. This is
something that will eventually happen unless the blocksize limit is
removed before ever being hit.
What this thread is saying is that this option (the so-called "doing
nothing" option, which actually requires more work than any of the
current proposals for increasing the blocksize) is perfectly valid,
which is in contradiction to a perceived "need to increase the
blocksize limit soon". Increasing the block size is only an option,
not a "need". And changing the consensus rules and forcing everybody
to adapt their software to the changes is certainly not "maintaining
the status quo", I'm getting tired of hearing that absurd notion.

From elombrozo at gmail.com  Sat Jun 27 11:18:33 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sat, 27 Jun 2015 04:18:33 -0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CABm2gDpnzjph5SKTf+8GWgwe+njS=k2GNm9uL73RC-EV=Y5wug@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<20150627095501.C59B541A40@smtp.hushmail.com>
	<20150627100400.GC25420@amethyst.visucore.com>
	<20150627102912.06E2641A3E@smtp.hushmail.com>
	<CABm2gDpnzjph5SKTf+8GWgwe+njS=k2GNm9uL73RC-EV=Y5wug@mail.gmail.com>
Message-ID: <1E68C70C-B33E-4414-B48B-7A497B59C893@gmail.com>

The economic policy?s status quo has been to avoid fee pressure. But the consensus status quo obviously is not to have a hard fork.

There?s clearly a contradiction between these two policies, which is a big part of the reason this issue has come to this point. These two policies are fundamentally at odds.

- Eric Lombrozo

> On Jun 27, 2015, at 4:04 AM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
> 
> On Sat, Jun 27, 2015 at 12:29 PM, NxtChg <nxtchg at hush.com> wrote:
>> 
>> On 6/27/2015 at 1:04 PM, "Wladimir J. van der Laan" <laanwj at gmail.com> wrote:
>> 
>>> Then you won't risk the other 'passengers' who don't consent to it.
>> 
>> But you can look at it the other way: what about risking the 'passengers' when the plane suddenly doesn't fly anymore?
>> 
>> Increasing block limit increases the risk of centralization, but it also keeps the current status quo of blocks not being filled, rather then risking an unknown option of hitting the limit hard.
> 
> But that option is not unknown, that's the point of this thread.
> "Doing nothing" would require to fix the mempool to scale with the
> number of unconfirmed transaction. This is something that we will
> eventually have to fix unless the plan is to eventually remove the
> blocksize limit.
> What will happen with full blocks is that fees will likely rise and
> the transactions with bigger fees will get confirmed first. This is
> something that will eventually happen unless the blocksize limit is
> removed before ever being hit.
> What this thread is saying is that this option (the so-called "doing
> nothing" option, which actually requires more work than any of the
> current proposals for increasing the blocksize) is perfectly valid,
> which is in contradiction to a perceived "need to increase the
> blocksize limit soon". Increasing the block size is only an option,
> not a "need". And changing the consensus rules and forcing everybody
> to adapt their software to the changes is certainly not "maintaining
> the status quo", I'm getting tired of hearing that absurd notion.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/8faed6e6/attachment-0001.sig>

From jtimon at jtimon.cc  Sat Jun 27 11:28:50 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sat, 27 Jun 2015 13:28:50 +0200
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <558D46EC.6050300@bitcoins.info>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
	<558B7352.90708@bitcoins.info>
	<CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>
	<558D46EC.6050300@bitcoins.info>
Message-ID: <CABm2gDojz6PHdRKxRkMZh-gfYLdcekVfeQMz5r_4EYc-j5tn+w@mail.gmail.com>

On Fri, Jun 26, 2015 at 2:34 PM, Milly Bitcoin <milly at bitcoins.info> wrote:
> Without looking up specific links I am confident people like Mircea Popescu
> will oppose just about any change.  Maybe they don't post their objection to
> Github but the point I am making is that no matter what change you make
> someone, somewhere will be against it.  Some of the developers think that
> Github is the only place that matters and that the only opinions that matter
> is a tiny group of insiders.  I don't think that way which is the reasoning
> behind my statement.

Yes, I understand that it may be difficult to define
"uncontroversial", as I explain in
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008936.html

> I have seen things like a Github discussion between 3 or 4 people
> and then Garzik send out a tweet that there is near universal approval for
> the proposed change as it nobody is allowed to question it.  After watching
> the github process for a couple years I simply don't trust it because the
> developers in charge have a dictatorial style and they shut out many
> stakeholders instead of soliciting their opinions.

Can you provide anything to back your claim?
Note that even if that's true, still, Bitcoin core != Bitcoin consensus rules.

> I view the Github system
> as the biggest centralized choke-point in Bitcoin and probably its biggest
> threat to its continued survival.  Anyone can come in and hire a couple core
> developers and veto any change they don't want.

Well, yes, github is centralized and so it is bitcoin core development.
But bitcoin core developers don't decide hardfork changes.
So far, softfork changes have been made because they have been
considered "uncontroversial", not because there's any centralized
negotiating table or voting process to decide when to force every user
to adapt their software to new consensus rules.

From jtimon at jtimon.cc  Sat Jun 27 11:43:55 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sat, 27 Jun 2015 13:43:55 +0200
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <1E68C70C-B33E-4414-B48B-7A497B59C893@gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<20150627095501.C59B541A40@smtp.hushmail.com>
	<20150627100400.GC25420@amethyst.visucore.com>
	<20150627102912.06E2641A3E@smtp.hushmail.com>
	<CABm2gDpnzjph5SKTf+8GWgwe+njS=k2GNm9uL73RC-EV=Y5wug@mail.gmail.com>
	<1E68C70C-B33E-4414-B48B-7A497B59C893@gmail.com>
Message-ID: <CABm2gDqvSCCTgjifpxZAy6wgb_f3yKp9-8P2d=n9fWdWxSGayA@mail.gmail.com>

On Sat, Jun 27, 2015 at 1:18 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> The economic policy?s status quo has been to avoid fee pressure. But the consensus status quo obviously is not to have a hard fork.
>
> There?s clearly a contradiction between these two policies, which is a big part of the reason this issue has come to this point. These two policies are fundamentally at odds.

Ok, so then the decision is to either change a policy or change a
consensus rule and then maintaining the status quo is simply not
possible.
Since per-node and per-wallet policies weren't universal anyway
(nobody can be forced to run the standard policy), making some changes
to the policy code of the different implementations that weren't
prepared for the current consensus rules (that includes bitcoin core)
seems orders of magnitude closer to "maintaining the status quo" than
a hardfork.
It's interesting to note that increasing the blocksize without fixing
the underlying problems that make it a perceived "need" will leave the
implementations unprepared for the new rules too (it is just
unprepared for ANY block size limit, not specifically unprepared for
1MB blocks).
So increasing the block size is actually the "lazy option" regardless
of how the "doing nothing option" is perceived by many uninformed
participants in the discussions.
Then I guess by "maintaining the status quo" some people just mean
"not fixing the known problems we have yet, leave it for later". Not
only some people propose to delay solving this problems: they don't
even want to be forced to fix them in 20 years!
That...or they just want to remove the block size limit entirely
forever, don't fear centralization, and are not being clear about it.

From laanwj at gmail.com  Sat Jun 27 12:09:39 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Sat, 27 Jun 2015 14:09:39 +0200
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CABm2gDr3orTHMN1q8vGmy3NpXWPy5i=zHhGneDGUk=ney3-e+Q@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<CABm2gDr3orTHMN1q8vGmy3NpXWPy5i=zHhGneDGUk=ney3-e+Q@mail.gmail.com>
Message-ID: <20150627120935.GD25420@amethyst.visucore.com>

Jorge,

> Provided they're also uncontroversial, they don't need to be that
> different (in terms of deployment) from softforks. Since they risks
> are bigger you just need to give more time for users and alternative
> software to upgrade.

Sure, most extreme: if secp256k1 or SHA256 starts to show chinks in its armor, or practical quantum computing is getting powerful enough to factor discrete logarithms of those sizes, I don't doubt everyone would go along with a proposal to add new crypto algos.

I do expect there are other possible hardforks that are uncontroversial. Either

- minor issues (maybe solving the time-warp issue with mining) issues planned on the long term
- features that are not politically loaded, on the long term
- major emergencies (anything that is clearly an 'exploit' with regard to coin holders or miners)

Not sure though. The only way to find out is to propose them and see. Maybe wait a bit until things have cooled down...

Note that anything non-critical and non-controversial can be planned and time-locked, say, 5 years ahead, obliviating the need for anyone to quickly upgrade their client.

Wladimir

From nxtchg at hush.com  Sat Jun 27 12:10:15 2015
From: nxtchg at hush.com (NxtChg)
Date: Sat, 27 Jun 2015 15:10:15 +0300
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CABm2gDpnzjph5SKTf+8GWgwe+njS=k2GNm9uL73RC-EV=Y5wug@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<20150627095501.C59B541A40@smtp.hushmail.com>
	<20150627100400.GC25420@amethyst.visucore.com>
	<20150627102912.06E2641A3E@smtp.hushmail.com>
	<CABm2gDpnzjph5SKTf+8GWgwe+njS=k2GNm9uL73RC-EV=Y5wug@mail.gmail.com>
Message-ID: <20150627121016.2360041A3E@smtp.hushmail.com>


On 6/27/2015 at 2:04 PM, "Jorge Tim?n" <jtimon at jtimon.cc> wrote:

>But that option is not unknown...

It is, until it actually happens. Before that, anything is a speculation. That's why risk is attached to both "doing nothing" and "raising the limit".

For example, there's another risk that a lot of people will be disappointed in a system that can't scale (or adapt to any significant changes, for that matter).

Yes, there is the "exit" option, but that path would probably be a lot messier and unwarranted.

Various people perceive these risks differently and there is no clear mechanism currently to somehow gauge what the majority wants. So it's tempting to just give up and say: let's do nothing.

In this situation, doing a "software fork" seems like the only way to actually see how many people/interests are in favor of bigger blocks.

(Whether the majority has a moral right to dictate the minority is a tough philosophical question, which should probably be left out of this discussion :)



From nxtchg at hush.com  Sat Jun 27 12:15:05 2015
From: nxtchg at hush.com (NxtChg)
Date: Sat, 27 Jun 2015 15:15:05 +0300
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <20150627120935.GD25420@amethyst.visucore.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<CABm2gDr3orTHMN1q8vGmy3NpXWPy5i=zHhGneDGUk=ney3-e+Q@mail.gmail.com>
	<20150627120935.GD25420@amethyst.visucore.com> 
Message-ID: <20150627121505.6E857417EC@smtp.hushmail.com>


On 6/27/2015 at 3:09 PM, "Wladimir J. van der Laan" <laanwj at gmail.com> wrote:

>Not sure though. The only way to find out is to propose them and see. Maybe wait a bit until things have cooled down...

And then we are again at the mercy of a single "decider" to judge whether something is controversial or not?

It was pointed several times before that with enough loud minority you can make any change seem controversial.



From gsanders87 at gmail.com  Sat Jun 27 12:17:39 2015
From: gsanders87 at gmail.com (Greg Sanders)
Date: Sat, 27 Jun 2015 08:17:39 -0400
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <20150627121505.6E857417EC@smtp.hushmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<CABm2gDr3orTHMN1q8vGmy3NpXWPy5i=zHhGneDGUk=ney3-e+Q@mail.gmail.com>
	<20150627120935.GD25420@amethyst.visucore.com>
	<20150627121505.6E857417EC@smtp.hushmail.com>
Message-ID: <CAB3F3Ds=_DG0Z75gmMPWJ=YWga61s7zkL+dkhVkuzTqCg6zf_w@mail.gmail.com>

https://en.wikipedia.org/wiki/I_know_it_when_I_see_it

Can we agree n-1 dev Nacks would be a controversial hard fork?

Greg

On Sat, Jun 27, 2015 at 8:15 AM, NxtChg <nxtchg at hush.com> wrote:

>
> On 6/27/2015 at 3:09 PM, "Wladimir J. van der Laan" <laanwj at gmail.com>
> wrote:
>
> >Not sure though. The only way to find out is to propose them and see.
> Maybe wait a bit until things have cooled down...
>
> And then we are again at the mercy of a single "decider" to judge whether
> something is controversial or not?
>
> It was pointed several times before that with enough loud minority you can
> make any change seem controversial.
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/2575fbf2/attachment.html>

From laanwj at gmail.com  Sat Jun 27 12:25:43 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Sat, 27 Jun 2015 14:25:43 +0200
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <20150627121505.6E857417EC@smtp.hushmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<CABm2gDr3orTHMN1q8vGmy3NpXWPy5i=zHhGneDGUk=ney3-e+Q@mail.gmail.com>
	<20150627120935.GD25420@amethyst.visucore.com>
	<20150627121505.6E857417EC@smtp.hushmail.com>
Message-ID: <20150627122543.GE25420@amethyst.visucore.com>


> It was pointed several times before that with enough loud minority you can make any change seem controversial.

Yes, absolutely. Pushing something through despite a loud miniority (certainly a well-informed one with valid reasons) is controversial.

This is not about miniorities and majorities. The *entire network* needs to agree to switch to your new software. If there are months-long heated discussions on every possible forum that is a clear sign that your change is controversial. As Greg Sanders already says, we know one when we see one...

Wladimir

From nxtchg at hush.com  Sat Jun 27 12:25:58 2015
From: nxtchg at hush.com (NxtChg)
Date: Sat, 27 Jun 2015 15:25:58 +0300
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CAB3F3Ds=_DG0Z75gmMPWJ=YWga61s7zkL+dkhVkuzTqCg6zf_w@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<CABm2gDr3orTHMN1q8vGmy3NpXWPy5i=zHhGneDGUk=ney3-e+Q@mail.gmail.com>
	<20150627120935.GD25420@amethyst.visucore.com>
	<20150627121505.6E857417EC@smtp.hushmail.com>
	<CAB3F3Ds=_DG0Z75gmMPWJ=YWga61s7zkL+dkhVkuzTqCg6zf_w@mail.gmail.com>
Message-ID: <20150627122558.A196641A3E@smtp.hushmail.com>


On 6/27/2015 at 3:18 PM, "Greg Sanders" <gsanders87 at gmail.com> wrote:

>Can we agree n-1 dev Nacks would be a controversial hard fork?

That requires an assumption that all developers are perfectly representing the whole community.

And no shady lobbying behind the scenes too.



From gsanders87 at gmail.com  Sat Jun 27 12:35:54 2015
From: gsanders87 at gmail.com (Greg Sanders)
Date: Sat, 27 Jun 2015 08:35:54 -0400
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <20150627122558.A196641A3E@smtp.hushmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<CABm2gDr3orTHMN1q8vGmy3NpXWPy5i=zHhGneDGUk=ney3-e+Q@mail.gmail.com>
	<20150627120935.GD25420@amethyst.visucore.com>
	<20150627121505.6E857417EC@smtp.hushmail.com>
	<CAB3F3Ds=_DG0Z75gmMPWJ=YWga61s7zkL+dkhVkuzTqCg6zf_w@mail.gmail.com>
	<20150627122558.A196641A3E@smtp.hushmail.com>
Message-ID: <CAB3F3DuL11BaVG5cmJWb3BjjcDuMmm=7JPEdmDE5g8es+JKbgA@mail.gmail.com>

>That requires an assumption that all developers are perfectly representing
the whole community.

I'll take that as a "no". But it's a strange bar to set: perfect
representation of entire community. By that token, nobody can say anything
is controversial if a different group is disagreeing.

Greg

On Sat, Jun 27, 2015 at 8:25 AM, NxtChg <nxtchg at hush.com> wrote:

>
> On 6/27/2015 at 3:18 PM, "Greg Sanders" <gsanders87 at gmail.com> wrote:
>
> >Can we agree n-1 dev Nacks would be a controversial hard fork?
>
> That requires an assumption that all developers are perfectly representing
> the whole community.
>
> And no shady lobbying behind the scenes too.
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/a57d0719/attachment.html>

From nxtchg at hush.com  Sat Jun 27 12:50:09 2015
From: nxtchg at hush.com (NxtChg)
Date: Sat, 27 Jun 2015 15:50:09 +0300
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <20150627122543.GE25420@amethyst.visucore.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<CABm2gDr3orTHMN1q8vGmy3NpXWPy5i=zHhGneDGUk=ney3-e+Q@mail.gmail.com>
	<20150627120935.GD25420@amethyst.visucore.com>
	<20150627121505.6E857417EC@smtp.hushmail.com>
	<20150627122543.GE25420@amethyst.visucore.com> 
Message-ID: <20150627125010.2B57E41A3F@smtp.hushmail.com>

Greg,

> But it's a strange bar to set: perfect representation of entire community. By that token, nobody can say anything is controversial if a different group is disagreeing.

Sorry, for not being clear. I am not talking definitions here, of course you can call it "controversial" when you get N-1 NACK's!

I object that it's enough evidence to deny any change (see below). For example, in case the interests of developers became misaligned with the interests of the community (you can't say it can't happen).


Wladimir,

>The *entire network* needs to agree to switch to your new software.

Why the "entire network"? So if, say, 75% of everybody involved want some change and 25% don't, the majority can't have it?

Well, I guess we're down to that philosophical question of whether majority can dictate minority or whether minority can be a roadblock to majority :)

Probably no reason to discuss it further :) A "software fork" seems like an inevitable resolution for this.


From milly at bitcoins.info  Sat Jun 27 12:50:14 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Sat, 27 Jun 2015 08:50:14 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CABm2gDojz6PHdRKxRkMZh-gfYLdcekVfeQMz5r_4EYc-j5tn+w@mail.gmail.com>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
	<558B7352.90708@bitcoins.info>
	<CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>
	<558D46EC.6050300@bitcoins.info>
	<CABm2gDojz6PHdRKxRkMZh-gfYLdcekVfeQMz5r_4EYc-j5tn+w@mail.gmail.com>
Message-ID: <558E9C06.9080901@bitcoins.info>

On 6/27/2015 7:28 AM, Jorge Tim?n wrote:
> On Fri, Jun 26, 2015 at 2:34 PM, Milly Bitcoin <milly at bitcoins.info> wrote:
>> Without looking up specific links I am confident people like Mircea Popescu
>> will oppose just about any change.  Maybe they don't post their objection to
>> Github but the point I am making is that no matter what change you make
>> someone, somewhere will be against it.  Some of the developers think that
>> Github is the only place that matters and that the only opinions that matter
>> is a tiny group of insiders.  I don't think that way which is the reasoning
>> behind my statement.
> Yes, I understand that it may be difficult to define
> "uncontroversial", as I explain in
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008936.html
>
>> I have seen things like a Github discussion between 3 or 4 people
>> and then Garzik send out a tweet that there is near universal approval for
>> the proposed change as it nobody is allowed to question it.  After watching
>> the github process for a couple years I simply don't trust it because the
>> developers in charge have a dictatorial style and they shut out many
>> stakeholders instead of soliciting their opinions.
> Can you provide anything to back your claim?
> Note that even if that's true, still, Bitcoin core != Bitcoin consensus rules.
I saw this problem first hand when Andreas Antonopolis got into a big 
dispute with some of the core developers over the press contacts.  The 
github made up their rules as they went along and simply ignored input 
from anyone outside their inner circle.  Since that time several people 
have told me they dropped out of participating in the github process.  
The maintainers deleted some of my messages and I have been told I am 
banned form github. Further, as you can see on here Jeff Garzik, a guy 
who claims only to hold a few hundred Bitcoin, told people on this list 
to ignore my messages.  There is also the incident where Gavin lambasted 
someone for "hiding behind anonymity" when the whole project is based on 
an anonymous contributor.  I find it interesting that many developers 
who work on a decentralized system.  I don't like the general attitude 
of the developers that they are the protectors of the system and that 
everyone else is trying to exploit or do damage. they often characterize 
different users/businesses/miners as abusers, spammers, people trying to 
game the system, etc. while they characterize the developers as pure and 
good.  When the issue comes up about authority over the code (which 
includes the consensus rules) they spout all kinds of nonsense about how 
they don't have significant control and are not deciders yet they never 
point to who does decide.  If they weren't the deciders then people 
would not be spending all that time lobbying them.  just because there 
are some checks and balances does not mean it is "decentralized" or they 
are not deciders.

As for your proclamation**at Bitcoin core != Bitcoin consensus rules, 
that is simply not true in practice.  There is one piece of software 
with one maintainer.  If you want it changed you have to convince that 
one person to approve the change.

>> I view the Github system
>> as the biggest centralized choke-point in Bitcoin and probably its biggest
>> threat to its continued survival.  Anyone can come in and hire a couple core
>> developers and veto any change they don't want.
> Well, yes, github is centralized and so it is bitcoin core development.
> But bitcoin core developers don't decide hardfork changes.
> So far, softfork changes have been made because they have been
> considered "uncontroversial", not because there's any centralized
> negotiating table or voting process to decide when to force every user
> to adapt their software to new consensus rules.
>
The core developers have the biggest influence by far to decide hard 
fork changes.  There is no other place to go.  While anyone can fork the 
code someone compare it to the river Thames.  if you don't like where 
the river runs you can dig a new one ... here is a spoon.  I can vote in 
elections but that does not mean the US government is "decentralized."  
The core maintainer has decided on a hard fork change, he has decided 
not to do it.

In any case what happened in the past does not matter.  What is going to 
happen now is the question.  If nothing happens and everybody sits 
around saying they are not in charge of the consensus rules and nothing 
ever gets done I see Bitcoin just fading away into oblivion.  I am under 
the impression that at least some of the developers (such as Garzik) 
don't actually hold that many bitcoins and don't have a large stake in 
the system yet they have significant control.  Anyone can attack the 
system by simply hiring a couple core developers and creating the 
gridlock we see now.

Russ
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/9e573a71/attachment.html>

From laanwj at gmail.com  Sat Jun 27 13:01:39 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Sat, 27 Jun 2015 15:01:39 +0200
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <20150627125010.2B57E41A3F@smtp.hushmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<CABm2gDr3orTHMN1q8vGmy3NpXWPy5i=zHhGneDGUk=ney3-e+Q@mail.gmail.com>
	<20150627120935.GD25420@amethyst.visucore.com>
	<20150627121505.6E857417EC@smtp.hushmail.com>
	<20150627122543.GE25420@amethyst.visucore.com>
	<20150627125010.2B57E41A3F@smtp.hushmail.com>
Message-ID: <20150627130138.GA28973@amethyst.visucore.com>

On Sat, Jun 27, 2015 at 03:50:09PM +0300, NxtChg wrote:
> >The *entire network* needs to agree to switch to your new software.
> 
> Why the "entire network"? So if, say, 75% of everybody involved want some change and 25% don't, the majority can't have it?

You can change your client, individually, to anything you want. You can also decide to switch along with a hypothetical percentage of others. Say, 75% of the users wants to confiscate the other 25% their coins. It is not without historical precedent.

No matter what the split is, or what it is about, the overall result will be confusion and have much less value than when there was one consensus. It's not quite Mutually Assured Destruction, but it is a very bad position to be in for everyone. So I'd dare say it shouldn't happen.

But I'm done arguing about this too.

Wladimir


From mickeybob at gmail.com  Sat Jun 27 14:39:51 2015
From: mickeybob at gmail.com (Michael Naber)
Date: Sat, 27 Jun 2015 10:39:51 -0400
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
Message-ID: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>

Demand to participate in a low-fee global consensus network will likely
continue to rise. Technology already exists to meet that rising demand
using a blockchain with sufficient block size. Whether that blockchain is
Bitcoin Core with an increased block size, or whether it is a fork, market
forces make it almost certain that demand will be met by a blockchain with
adequate capacity. These forces ensure that not only today?s block size
will be increased, but also that future increases will occur should the
demand arise.

In order to survive, Bitcoin Core must remain the lowest-fee,
highest-capacity, most secure, distributed, fastest, overall best solution
possible to the global consensus problem. Attempting to artificially
constrain the block size below the limits of technology for any reason is a
conflict with this objective and a threat to the survival of Bitcoin Core.
At the same time, scheduling large future increases or permitting unlimited
dynamic scaling of the block size limit raises concerns over availability
of future computing resources. Instead, we should manually increase the
block size limit as demand occurs, except in the special case that
increasing the limit would cause an undue burden upon users wishing to
validate the integrity of the blockchain.

Compromise: Can we agree that raising the block size to a static 8MB now
with a plan to increase it further should demand necessitate except in the
special case above is a reasonable path forward?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/5e051f1b/attachment.html>

From will at trek.io  Sat Jun 27 15:09:43 2015
From: will at trek.io (will binns)
Date: Sat, 27 Jun 2015 09:09:43 -0600
Subject: [bitcoin-dev] Block Size Debate Analogy / Workaround: Bitcoin is
	Like Windows 3.11
Message-ID: <558EBCB7.9050100@trek.io>

Hello all, I wanted to add another analogy here to this block size
debate, in case helpful. I understand some may not see it this way, so
apologies in advance if it ruffles anyone's feathers. In some ways,
however, to me at least - Bitcoin is like Windows 3.11. Before Bitcoin
everything was DOS - something completely disruptive and good for
society has come into the computing space that exponentially improves
upon almost everything in the space that existed before it. Now there is
a huge debate about if there should ever be a Windows 95, XP, Pro, etc.,
that scales better and makes advances over time, but doesn?t support
facets of older versions as it gets updated.? What will happen to 3.11
users/developers/etc. who don't upgrade that have money and/or important
tech tied into the 3.11 platform? Should it just be Windows 3.11 forever
except with better programs that continue to be built to run on it? Or,
should we agree to only change it if 100% of Windows users or Windows
developers agree on upgrading?

Regardless of what side we all stand on, I just want to point out that
this mailing list is full of incredibly brilliant minds leading the
charge into perhaps one of the greatest technical achievements in recent
decades. Maybe it would be a good idea for each side of the issue here
to democratically appoint a developer representative, and then allow the
representatives to achieve a framework and hammer out the details of the
solution together?

Hope you all have nice weekends,
Will

-- 
// will binns
// gpg fingerprint: 4519 7EB7 66A7 CC5E 4E66 F200 AF5C 2D1C E58E B37C
// threema id: 5YM2J894

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/012c62d9/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/012c62d9/attachment-0001.sig>

From pete at petertodd.org  Sat Jun 27 15:13:54 2015
From: pete at petertodd.org (Peter Todd)
Date: Sat, 27 Jun 2015 15:13:54 +0000
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CACq0ZD5S6dDcBh9fsHCgbPJXom4vF8VymtHXogODjfD38RDNfA@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>
	<CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>
	<CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>
	<CAPg+sBhrBUSfPdMjbLthLEFD17zBC3LoWf9LvZsOD1Vp0D78BQ@mail.gmail.com>
	<558DA56F.3010703@jrn.me.uk> <20150626193630.GB17829@muck>
	<558E3EFD.9040602@ktorn.com>
	<CACq0ZD5S6dDcBh9fsHCgbPJXom4vF8VymtHXogODjfD38RDNfA@mail.gmail.com>
Message-ID: <9BD77EB3-8EC7-4207-8E90-98E48C8365DE@petertodd.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256



On 27 June 2015 03:14:41 GMT-04:00, Aaron Voisine <voisine at gmail.com> wrote:
>Also remember that the sender is not the one who cares about delays or
>even
>getting confirmations at all, it's the receiver who's concerned with
>these
>things. They have to tell the sender up-front what they're willing to
>accept in exchange for goods and services.

You're assuming a receiver who is accepting a zeroconf transaction; most receivers don't.

For instance, when I deposit funds on my exchange they don't credit those funds until 4 confirmations, so I very much cafe about how long it takes to get the first confirmation.
-----BEGIN PGP SIGNATURE-----

iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVjr2g
AAoJEMCF8hzn9Lnc47AIAJBa5O+H+XEqok4j8AEly9rjAMmdcOrqJSoNvtCj897l
R34cN/5SfYIRpvFoyBKXfY+xo0RR/42VM08uju+vvCAvImiwOyrUNPTS2TmDdE3M
PTGgQrYIctQxTcek9VL8TV94bHns+kJxMiOySdsOA+7NLl0oKoNKoHhYbbWPcn/+
13p+su2Xi/ydO6HjHHxR/3kpQE4q8tupGDH0ZaPUijyd04uvB4GK4pPA5P7EeM9b
ixXB8aZnSYhbVnknUFfcTBLHzo70BQbTh0QFTZCOkNSwIoBfyEhd53IZ+BfJGbLo
2K2VcMHeVU91Zbg+rgKNfGuLQvr5hEfZIkqZckXDj6I=
=B/YW
-----END PGP SIGNATURE-----


From pete at petertodd.org  Sat Jun 27 15:21:25 2015
From: pete at petertodd.org (Peter Todd)
Date: Sat, 27 Jun 2015 15:21:25 +0000
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
Message-ID: <1EF70EBC-8BB8-4A93-8591-52B2B0335F6C@petertodd.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256



On 27 June 2015 10:39:51 GMT-04:00, Michael Naber <mickeybob at gmail.com> wrote:
>Compromise: Can we agree that raising the block size to a static 8MB
>now
>with a plan to increase it further should demand necessitate except in
>the
>special case above is a reasonable path forward?

It's not a reasonable path forward right now given the lack of testing done with 8MB+ blocks, among many other problems. A way to help make that appear more reasonable would be to setup a 8MB testnet as I suggested, with two years or so of 8MB blocks in history as well as a large UTXO set to test performance characteristics.

Of course, that'll be a 840GB download - if that's unreasonable you might want to ask why 8MB blocks are reasonable...
-----BEGIN PGP SIGNATURE-----

iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVjr9n
AAoJEMCF8hzn9Lnc47AIAIIwu4maaJs4pAKpK00jQnhPNIQ8LPvijD/8vvyugA1z
OLxlRrn8zs7JPFbxWOAzK2qzT1RksSd0gbXqWm/Saqk9CAG5LBp7Oq0HAVE23XYt
6BvyhjyhYaZjDrv+SZvlSjdl5xfpDNPMIXMi7XblKD9hm1GIUSVIYAOinOSVIy0B
HlKyn/xc4MaO8DuzQcs0vsNMudVQFLMOLjMWz/7iv41NnB/Ujjzv/6845Z1g7Opf
d5AfxhPHZixshqav/lF7ly7xQwSZZpoJCyFdtzCNG47EQmFYY9e22uy1KVzS7Zeo
qYPi3KRx5+vFtHHJMDYG5EIMTwI4l/4+lY/Sd0CFWss=
=0IOS
-----END PGP SIGNATURE-----


From randi at codehalo.com  Sat Jun 27 15:29:07 2015
From: randi at codehalo.com (Randi Joseph)
Date: Sat, 27 Jun 2015 11:29:07 -0400
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <1EF70EBC-8BB8-4A93-8591-52B2B0335F6C@petertodd.org>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
	<1EF70EBC-8BB8-4A93-8591-52B2B0335F6C@petertodd.org>
Message-ID: <558EC143.9000808@codehalo.com>

I wish you were just as prudent when you were recommending full RBF to 
mining pools.

On 6/27/15 11:21 AM, Peter Todd wrote:
> It's not a reasonable path forward right now given the lack of testing done with 8MB+ blocks, among many other problems. A way to help make that appear more reasonable would be to setup a 8MB testnet as I suggested, with two years or so of 8MB blocks in history as well as a large UTXO set to test performance characteristics.


-- 
Randi Joseph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/264e693e/attachment.html>

From pete at petertodd.org  Sat Jun 27 15:32:07 2015
From: pete at petertodd.org (Peter Todd)
Date: Sat, 27 Jun 2015 15:32:07 +0000
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <558EC143.9000808@codehalo.com>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
	<1EF70EBC-8BB8-4A93-8591-52B2B0335F6C@petertodd.org>
	<558EC143.9000808@codehalo.com>
Message-ID: <9865445E-80B9-4623-A42E-9CBAD00FD913@petertodd.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256



On 27 June 2015 11:29:07 GMT-04:00, Randi Joseph <randi at codehalo.com> wrote:
>I wish you were just as prudent when you were recommending full RBF to
>mining pools.

You know, if doing that is imprudent, then people are using Bitcoin in a recklessly dangerous way.

-----BEGIN PGP SIGNATURE-----

iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVjsHq
AAoJEMCF8hzn9Lnc47AH/1Yzl2xJhikeRG7qUmfwIkeuoXWRo9+T30Qj59ii49WU
Nsnpuo6X98p0qz1j8fUKOiY4PQZ6wZYbBg8mTB/EGM8O99Zr8JCPJW0f8l07aXfk
J4NGcgJGzn0CI/E11e4IJICqiLmZgfDa9I1+dNPskQlMu1QsCtju7GQboMpsMv/x
q+Z0dFh9KJnESn8G7ULcrA9ERqu9bGPWLWYOFPcQW0GZQxTLF19Rv0j4njkWbKu6
h2I2LQJcI2uEINRhP6FWFMqCdnaHcox1vtkpeUdVUT3IrjNqhFsXt+M43yUOZ4LU
UsKEj04dfPTjfGpmz/DwTp694VxWCKFGfS4mxGDaxO0=
=DFeN
-----END PGP SIGNATURE-----


From adam at cypherspace.org  Sat Jun 27 15:33:11 2015
From: adam at cypherspace.org (Adam Back)
Date: Sat, 27 Jun 2015 17:33:11 +0200
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
Message-ID: <CALqxMTHjszPcf=S20kquF=5y3zfYb+foP6tL1okOT2jhdrW08A@mail.gmail.com>

Michael Naber wrote:
> Bitcoin Core must remain the lowest-fee, highest-capacity, most secure, distributed, fastest, overall best solution possible to the global consensus problem.

Everyone here is excited about the potential of Bitcoin and would
aspirationally like it to reach its full potential as fast as
possible.  But the block-size is not a free variable, half those
parameters you listed are in conflict with each other.  We're trying
to improve both decentralisation and throughput short-term while
people work on algorithmic improvements mid-term.  If you are
interested you can take a look through the proposals:

http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008603.html

Note that probably 99% of Bitcoin transactions already happen
off-chain in exchanges, tipping services, hosted wallets etc.  Maybe
you're already using them, assuming you are a bitcoin user.
They constitute an early stage layer 2, some of them even have on
chain netting and scale faster than the block-chain.

You can also read about layer 2, the lightning network paper and the
duplex micropayment channel paper:

http://lightning.network/lightning-network-paper-DRAFT-0.5.pdf
http://www.tik.ee.ethz.ch/file/716b955c130e6c703fac336ea17b1670/duplex-micropayment-channels.pdf

and read the development list and look at the code:

http://lists.linuxfoundation.org/pipermail/lightning-dev/
https://github.com/ElementsProject/lightning

Adam


On 27 June 2015 at 16:39, Michael Naber <mickeybob at gmail.com> wrote:
> Demand to participate in a low-fee global consensus network will likely
> continue to rise. Technology already exists to meet that rising demand using
> a blockchain with sufficient block size. Whether that blockchain is Bitcoin
> Core with an increased block size, or whether it is a fork, market forces
> make it almost certain that demand will be met by a blockchain with adequate
> capacity. These forces ensure that not only today?s block size will be
> increased, but also that future increases will occur should the demand
> arise.
>
> In order to survive, Bitcoin Core must remain the lowest-fee,
> highest-capacity, most secure, distributed, fastest, overall best solution
> possible to the global consensus problem. Attempting to artificially
> constrain the block size below the limits of technology for any reason is a
> conflict with this objective and a threat to the survival of Bitcoin Core.
> At the same time, scheduling large future increases or permitting unlimited
> dynamic scaling of the block size limit raises concerns over availability of
> future computing resources. Instead, we should manually increase the block
> size limit as demand occurs, except in the special case that increasing the
> limit would cause an undue burden upon users wishing to validate the
> integrity of the blockchain.
>
> Compromise: Can we agree that raising the block size to a static 8MB now
> with a plan to increase it further should demand necessitate except in the
> special case above is a reasonable path forward?
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

From mickeybob at gmail.com  Sat Jun 27 16:09:16 2015
From: mickeybob at gmail.com (Michael Naber)
Date: Sat, 27 Jun 2015 12:09:16 -0400
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CALqxMTHjszPcf=S20kquF=5y3zfYb+foP6tL1okOT2jhdrW08A@mail.gmail.com>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
	<CALqxMTHjszPcf=S20kquF=5y3zfYb+foP6tL1okOT2jhdrW08A@mail.gmail.com>
Message-ID: <CALgxB7tdFsQXzGRje=suC7Yaym_Whhtn2qrb3ykx2ZOBwwbE7w@mail.gmail.com>

The goal of Bitcoin Core is to meet the demand for global consensus as
effectively as possible. Please let's keep the conversation on how to best
meet that goal.

The off-chain solutions you enumerate are are useful solutions in their
respective domains, but none of them solves the global consensus problem
with any greater efficiency than Bitcoin does.


On Sat, Jun 27, 2015 at 11:33 AM, Adam Back <adam at cypherspace.org> wrote:

> Michael Naber wrote:
> > Bitcoin Core must remain the lowest-fee, highest-capacity, most secure,
> distributed, fastest, overall best solution possible to the global
> consensus problem.
>
> Everyone here is excited about the potential of Bitcoin and would
> aspirationally like it to reach its full potential as fast as
> possible.  But the block-size is not a free variable, half those
> parameters you listed are in conflict with each other.  We're trying
> to improve both decentralisation and throughput short-term while
> people work on algorithmic improvements mid-term.  If you are
> interested you can take a look through the proposals:
>
>
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008603.html
>
> Note that probably 99% of Bitcoin transactions already happen
> off-chain in exchanges, tipping services, hosted wallets etc.  Maybe
> you're already using them, assuming you are a bitcoin user.
> They constitute an early stage layer 2, some of them even have on
> chain netting and scale faster than the block-chain.
>
> You can also read about layer 2, the lightning network paper and the
> duplex micropayment channel paper:
>
> http://lightning.network/lightning-network-paper-DRAFT-0.5.pdf
>
> http://www.tik.ee.ethz.ch/file/716b955c130e6c703fac336ea17b1670/duplex-micropayment-channels.pdf
>
> and read the development list and look at the code:
>
> http://lists.linuxfoundation.org/pipermail/lightning-dev/
> https://github.com/ElementsProject/lightning
>
> Adam
>
>
> On 27 June 2015 at 16:39, Michael Naber <mickeybob at gmail.com> wrote:
> > Demand to participate in a low-fee global consensus network will likely
> > continue to rise. Technology already exists to meet that rising demand
> using
> > a blockchain with sufficient block size. Whether that blockchain is
> Bitcoin
> > Core with an increased block size, or whether it is a fork, market forces
> > make it almost certain that demand will be met by a blockchain with
> adequate
> > capacity. These forces ensure that not only today?s block size will be
> > increased, but also that future increases will occur should the demand
> > arise.
> >
> > In order to survive, Bitcoin Core must remain the lowest-fee,
> > highest-capacity, most secure, distributed, fastest, overall best
> solution
> > possible to the global consensus problem. Attempting to artificially
> > constrain the block size below the limits of technology for any reason
> is a
> > conflict with this objective and a threat to the survival of Bitcoin
> Core.
> > At the same time, scheduling large future increases or permitting
> unlimited
> > dynamic scaling of the block size limit raises concerns over
> availability of
> > future computing resources. Instead, we should manually increase the
> block
> > size limit as demand occurs, except in the special case that increasing
> the
> > limit would cause an undue burden upon users wishing to validate the
> > integrity of the blockchain.
> >
> > Compromise: Can we agree that raising the block size to a static 8MB now
> > with a plan to increase it further should demand necessitate except in
> the
> > special case above is a reasonable path forward?
> >
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/ec2e5cfc/attachment-0001.html>

From mickeybob at gmail.com  Sat Jun 27 16:19:04 2015
From: mickeybob at gmail.com (Michael Naber)
Date: Sat, 27 Jun 2015 12:19:04 -0400
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <1EF70EBC-8BB8-4A93-8591-52B2B0335F6C@petertodd.org>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
	<1EF70EBC-8BB8-4A93-8591-52B2B0335F6C@petertodd.org>
Message-ID: <CALgxB7usetoaNCObhG36TrdYgKuP4TSPPNkGatvim1oWUMxaeQ@mail.gmail.com>

That test seems like a reasonable suggestion; 840GB is not prohibitive
given today's computing costs. What other than the successful result of
that test would you want to see before agreeing to increase the block size
to 8MB?


On Sat, Jun 27, 2015 at 11:21 AM, Peter Todd <pete at petertodd.org> wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA256
>
>
>
> On 27 June 2015 10:39:51 GMT-04:00, Michael Naber <mickeybob at gmail.com>
> wrote:
> >Compromise: Can we agree that raising the block size to a static 8MB
> >now
> >with a plan to increase it further should demand necessitate except in
> >the
> >special case above is a reasonable path forward?
>
> It's not a reasonable path forward right now given the lack of testing
> done with 8MB+ blocks, among many other problems. A way to help make that
> appear more reasonable would be to setup a 8MB testnet as I suggested, with
> two years or so of 8MB blocks in history as well as a large UTXO set to
> test performance characteristics.
>
> Of course, that'll be a 840GB download - if that's unreasonable you might
> want to ask why 8MB blocks are reasonable...
> -----BEGIN PGP SIGNATURE-----
>
> iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVjr9n
> AAoJEMCF8hzn9Lnc47AIAIIwu4maaJs4pAKpK00jQnhPNIQ8LPvijD/8vvyugA1z
> OLxlRrn8zs7JPFbxWOAzK2qzT1RksSd0gbXqWm/Saqk9CAG5LBp7Oq0HAVE23XYt
> 6BvyhjyhYaZjDrv+SZvlSjdl5xfpDNPMIXMi7XblKD9hm1GIUSVIYAOinOSVIy0B
> HlKyn/xc4MaO8DuzQcs0vsNMudVQFLMOLjMWz/7iv41NnB/Ujjzv/6845Z1g7Opf
> d5AfxhPHZixshqav/lF7ly7xQwSZZpoJCyFdtzCNG47EQmFYY9e22uy1KVzS7Zeo
> qYPi3KRx5+vFtHHJMDYG5EIMTwI4l/4+lY/Sd0CFWss=
> =0IOS
> -----END PGP SIGNATURE-----
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/405bf6a8/attachment.html>

From mark at friedenbach.org  Sat Jun 27 16:28:26 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Sat, 27 Jun 2015 09:28:26 -0700
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CALgxB7tdFsQXzGRje=suC7Yaym_Whhtn2qrb3ykx2ZOBwwbE7w@mail.gmail.com>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
	<CALqxMTHjszPcf=S20kquF=5y3zfYb+foP6tL1okOT2jhdrW08A@mail.gmail.com>
	<CALgxB7tdFsQXzGRje=suC7Yaym_Whhtn2qrb3ykx2ZOBwwbE7w@mail.gmail.com>
Message-ID: <CAOG=w-vxvPpkUohtNKE1PjWXFpNzEbm7cn-ka_Ayi_6vokUOKw@mail.gmail.com>

I really suggest you look into the layer2 systems Adam pointed to, as you
appear to be misinformed about their properties. There are many proposals
which really do achieve global consensus using the block chain, just in a
delayed (and cached) fashion that is still 100% safe.

It is possible to go off-chain without losing the trustlessness and
security of the block chain.

On Sat, Jun 27, 2015 at 9:09 AM, Michael Naber <mickeybob at gmail.com> wrote:

> The goal of Bitcoin Core is to meet the demand for global consensus as
> effectively as possible. Please let's keep the conversation on how to best
> meet that goal.
>
> The off-chain solutions you enumerate are are useful solutions in their
> respective domains, but none of them solves the global consensus problem
> with any greater efficiency than Bitcoin does.
>
>
> On Sat, Jun 27, 2015 at 11:33 AM, Adam Back <adam at cypherspace.org> wrote:
>
>> Michael Naber wrote:
>> > Bitcoin Core must remain the lowest-fee, highest-capacity, most secure,
>> distributed, fastest, overall best solution possible to the global
>> consensus problem.
>>
>> Everyone here is excited about the potential of Bitcoin and would
>> aspirationally like it to reach its full potential as fast as
>> possible.  But the block-size is not a free variable, half those
>> parameters you listed are in conflict with each other.  We're trying
>> to improve both decentralisation and throughput short-term while
>> people work on algorithmic improvements mid-term.  If you are
>> interested you can take a look through the proposals:
>>
>>
>> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008603.html
>>
>> Note that probably 99% of Bitcoin transactions already happen
>> off-chain in exchanges, tipping services, hosted wallets etc.  Maybe
>> you're already using them, assuming you are a bitcoin user.
>> They constitute an early stage layer 2, some of them even have on
>> chain netting and scale faster than the block-chain.
>>
>> You can also read about layer 2, the lightning network paper and the
>> duplex micropayment channel paper:
>>
>> http://lightning.network/lightning-network-paper-DRAFT-0.5.pdf
>>
>> http://www.tik.ee.ethz.ch/file/716b955c130e6c703fac336ea17b1670/duplex-micropayment-channels.pdf
>>
>> and read the development list and look at the code:
>>
>> http://lists.linuxfoundation.org/pipermail/lightning-dev/
>> https://github.com/ElementsProject/lightning
>>
>> Adam
>>
>>
>> On 27 June 2015 at 16:39, Michael Naber <mickeybob at gmail.com> wrote:
>> > Demand to participate in a low-fee global consensus network will likely
>> > continue to rise. Technology already exists to meet that rising demand
>> using
>> > a blockchain with sufficient block size. Whether that blockchain is
>> Bitcoin
>> > Core with an increased block size, or whether it is a fork, market
>> forces
>> > make it almost certain that demand will be met by a blockchain with
>> adequate
>> > capacity. These forces ensure that not only today?s block size will be
>> > increased, but also that future increases will occur should the demand
>> > arise.
>> >
>> > In order to survive, Bitcoin Core must remain the lowest-fee,
>> > highest-capacity, most secure, distributed, fastest, overall best
>> solution
>> > possible to the global consensus problem. Attempting to artificially
>> > constrain the block size below the limits of technology for any reason
>> is a
>> > conflict with this objective and a threat to the survival of Bitcoin
>> Core.
>> > At the same time, scheduling large future increases or permitting
>> unlimited
>> > dynamic scaling of the block size limit raises concerns over
>> availability of
>> > future computing resources. Instead, we should manually increase the
>> block
>> > size limit as demand occurs, except in the special case that increasing
>> the
>> > limit would cause an undue burden upon users wishing to validate the
>> > integrity of the blockchain.
>> >
>> > Compromise: Can we agree that raising the block size to a static 8MB now
>> > with a plan to increase it further should demand necessitate except in
>> the
>> > special case above is a reasonable path forward?
>> >
>> > _______________________________________________
>> > bitcoin-dev mailing list
>> > bitcoin-dev at lists.linuxfoundation.org
>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> >
>>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/d47f275d/attachment.html>

From pete at petertodd.org  Sat Jun 27 16:37:31 2015
From: pete at petertodd.org (Peter Todd)
Date: Sat, 27 Jun 2015 12:37:31 -0400
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CALgxB7tdFsQXzGRje=suC7Yaym_Whhtn2qrb3ykx2ZOBwwbE7w@mail.gmail.com>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
	<CALqxMTHjszPcf=S20kquF=5y3zfYb+foP6tL1okOT2jhdrW08A@mail.gmail.com>
	<CALgxB7tdFsQXzGRje=suC7Yaym_Whhtn2qrb3ykx2ZOBwwbE7w@mail.gmail.com>
Message-ID: <20150627163731.GA12820@muck>

On Sat, Jun 27, 2015 at 12:09:16PM -0400, Michael Naber wrote:
> The goal of Bitcoin Core is to meet the demand for global consensus as
> effectively as possible. Please let's keep the conversation on how to best
> meet that goal.

Keep in mind that Andresen and Hearn both propose that the majority of
Bitcoin users, even businesses, abandon the global consensus technology
aspect of Bitcoin - running full nodes - and instead adopt trust
technology instead - running SPV nodes.

We're very much focused on meeting the demand for global consensus
technology, but unfortunately global consensus is also has inherently
O(n^2) scaling with current approaches available. Thus we have a fixed
capacity system where access is mediated by supply and demand
transaction fees.

> The off-chain solutions you enumerate are are useful solutions in their
> respective domains, but none of them solves the global consensus problem
> with any greater efficiency than Bitcoin does.

Solutions like (hub-and-spoke) payment channels, Lightning, etc. allow
users of the global consensus technology in Bitcoin to use that
technology in much more effcient ways, leveraging a relatively small
amount of global consensus to do large numbers of transactions
trustlessly.

-- 
'peter'[:-1]@petertodd.org
0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/f62ccdee/attachment.sig>

From pete at petertodd.org  Sat Jun 27 17:20:11 2015
From: pete at petertodd.org (Peter Todd)
Date: Sat, 27 Jun 2015 13:20:11 -0400
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CALgxB7usetoaNCObhG36TrdYgKuP4TSPPNkGatvim1oWUMxaeQ@mail.gmail.com>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
	<1EF70EBC-8BB8-4A93-8591-52B2B0335F6C@petertodd.org>
	<CALgxB7usetoaNCObhG36TrdYgKuP4TSPPNkGatvim1oWUMxaeQ@mail.gmail.com>
Message-ID: <20150627172011.GB18729@muck>

On Sat, Jun 27, 2015 at 12:19:04PM -0400, Michael Naber wrote:
> That test seems like a reasonable suggestion; 840GB is not prohibitive
> given today's computing costs. What other than the successful result of
> that test would you want to see before agreeing to increase the block size
> to 8MB?

The two main things you need to show is:

1) Small, anonymous, miners remain approximately as profitable as large
miners, regardless of whether they are in the world, and even when
miners are under attack. Remember I'm talking about mining here, not
just hashing - the process of selling your hashpower to someone else who
is actually doing the mining.

As for "approximately as profitable", based on a 10% profit margin, a 5%
profitability difference between a negligable ~0% hashing power miner
and a 50% hashing power miner is a good standard here.

The hard part here is basically keeping orphan rates low, as the %5
profitability different on %10 profit margin implies an orphan rate of
about 0.5% - roughly what we have right now if not actually a bit lower.
That also implies blocks propagate across the network in just a few
seconds in the worst case, where blocks are being generated with
transactions in them that are not already in mempools - circumventing
propagation optimization techniques. As we're talking about small
miners, we can't assume the miners are directly conneted to each other.
(which itself is dangerous from an attack point of view - if they're
directly connected they can be DoS attacked)

2) Medium to long term plan to pay for hashing power. Without scarcity
of blockchain space there is no reason to think that transaction fees
won't fall to the marginal cost of including a transaction, which
doesn't leave anything to pay for proof-of-work security. A proposal
meeting this criteria will have to be clever if you don't keep the
blocksize sufficiently limited that transaction fees are non-negligable.
One possible approach - if probably politically non-viable - would be to
change the inflation schedule so that the currency is inflated
indefinitely.

-- 
'peter'[:-1]@petertodd.org
0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/d8a83d28/attachment-0001.sig>

From mickeybob at gmail.com  Sat Jun 27 17:25:14 2015
From: mickeybob at gmail.com (Michael Naber)
Date: Sat, 27 Jun 2015 13:25:14 -0400
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <20150627163731.GA12820@muck>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
	<CALqxMTHjszPcf=S20kquF=5y3zfYb+foP6tL1okOT2jhdrW08A@mail.gmail.com>
	<CALgxB7tdFsQXzGRje=suC7Yaym_Whhtn2qrb3ykx2ZOBwwbE7w@mail.gmail.com>
	<20150627163731.GA12820@muck>
Message-ID: <CALgxB7tsmHGiGuCmcdNuwjKxNfBpdq6U+x8eK=7sL6NekAfXow@mail.gmail.com>

Global network consensus means that there is global network recognition
that a particular transaction has occurred and is irreversible. The
off-chain solutions you describe, while probably useful for other purposes,
do not exhibit this characteristic and so they are not global network
consensus networks.

Bitcoin Core scales as O(N), where N is the number of transactions. Can we
do better than this while still achieving global consensus?


On Sat, Jun 27, 2015 at 12:37 PM, Peter Todd <pete at petertodd.org> wrote:

> On Sat, Jun 27, 2015 at 12:09:16PM -0400, Michael Naber wrote:
> > The goal of Bitcoin Core is to meet the demand for global consensus as
> > effectively as possible. Please let's keep the conversation on how to
> best
> > meet that goal.
>
> Keep in mind that Andresen and Hearn both propose that the majority of
> Bitcoin users, even businesses, abandon the global consensus technology
> aspect of Bitcoin - running full nodes - and instead adopt trust
> technology instead - running SPV nodes.
>
> We're very much focused on meeting the demand for global consensus
> technology, but unfortunately global consensus is also has inherently
> O(n^2) scaling with current approaches available. Thus we have a fixed
> capacity system where access is mediated by supply and demand
> transaction fees.
>
> > The off-chain solutions you enumerate are are useful solutions in their
> > respective domains, but none of them solves the global consensus problem
> > with any greater efficiency than Bitcoin does.
>
> Solutions like (hub-and-spoke) payment channels, Lightning, etc. allow
> users of the global consensus technology in Bitcoin to use that
> technology in much more effcient ways, leveraging a relatively small
> amount of global consensus to do large numbers of transactions
> trustlessly.
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/4fed3514/attachment.html>

From benjamin.l.cordes at gmail.com  Sat Jun 27 17:26:00 2015
From: benjamin.l.cordes at gmail.com (Benjamin)
Date: Sat, 27 Jun 2015 19:26:00 +0200
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <20150627172011.GB18729@muck>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
	<1EF70EBC-8BB8-4A93-8591-52B2B0335F6C@petertodd.org>
	<CALgxB7usetoaNCObhG36TrdYgKuP4TSPPNkGatvim1oWUMxaeQ@mail.gmail.com>
	<20150627172011.GB18729@muck>
Message-ID: <CAOoPuRZrV_8XJbCbHMEWAfoKYc+OSQQMuhgESgG2JD2nEHoyvQ@mail.gmail.com>

"Thus we have a fixed capacity system where access is mediated by supply
and demand transaction fees."

There is no supply and demand. That would mean users would be able to adapt
fees and get different quality of service depending on current capacity.
For example if peak load is 10x average load, then at those times fees
would be higher and users would delay transactions to smooth out demand.

On Sat, Jun 27, 2015 at 7:20 PM, Peter Todd <pete at petertodd.org> wrote:

> On Sat, Jun 27, 2015 at 12:19:04PM -0400, Michael Naber wrote:
> > That test seems like a reasonable suggestion; 840GB is not prohibitive
> > given today's computing costs. What other than the successful result of
> > that test would you want to see before agreeing to increase the block
> size
> > to 8MB?
>
> The two main things you need to show is:
>
> 1) Small, anonymous, miners remain approximately as profitable as large
> miners, regardless of whether they are in the world, and even when
> miners are under attack. Remember I'm talking about mining here, not
> just hashing - the process of selling your hashpower to someone else who
> is actually doing the mining.
>
> As for "approximately as profitable", based on a 10% profit margin, a 5%
> profitability difference between a negligable ~0% hashing power miner
> and a 50% hashing power miner is a good standard here.
>
> The hard part here is basically keeping orphan rates low, as the %5
> profitability different on %10 profit margin implies an orphan rate of
> about 0.5% - roughly what we have right now if not actually a bit lower.
> That also implies blocks propagate across the network in just a few
> seconds in the worst case, where blocks are being generated with
> transactions in them that are not already in mempools - circumventing
> propagation optimization techniques. As we're talking about small
> miners, we can't assume the miners are directly conneted to each other.
> (which itself is dangerous from an attack point of view - if they're
> directly connected they can be DoS attacked)
>
> 2) Medium to long term plan to pay for hashing power. Without scarcity
> of blockchain space there is no reason to think that transaction fees
> won't fall to the marginal cost of including a transaction, which
> doesn't leave anything to pay for proof-of-work security. A proposal
> meeting this criteria will have to be clever if you don't keep the
> blocksize sufficiently limited that transaction fees are non-negligable.
> One possible approach - if probably politically non-viable - would be to
> change the inflation schedule so that the currency is inflated
> indefinitely.
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/df971066/attachment.html>

From pete at petertodd.org  Sat Jun 27 17:34:51 2015
From: pete at petertodd.org (Peter Todd)
Date: Sat, 27 Jun 2015 13:34:51 -0400
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CALgxB7tsmHGiGuCmcdNuwjKxNfBpdq6U+x8eK=7sL6NekAfXow@mail.gmail.com>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
	<CALqxMTHjszPcf=S20kquF=5y3zfYb+foP6tL1okOT2jhdrW08A@mail.gmail.com>
	<CALgxB7tdFsQXzGRje=suC7Yaym_Whhtn2qrb3ykx2ZOBwwbE7w@mail.gmail.com>
	<20150627163731.GA12820@muck>
	<CALgxB7tsmHGiGuCmcdNuwjKxNfBpdq6U+x8eK=7sL6NekAfXow@mail.gmail.com>
Message-ID: <20150627173451.GA28181@muck>

On Sat, Jun 27, 2015 at 01:25:14PM -0400, Michael Naber wrote:
> Global network consensus means that there is global network recognition
> that a particular transaction has occurred and is irreversible. The
> off-chain solutions you describe, while probably useful for other purposes,
> do not exhibit this characteristic and so they are not global network
> consensus networks.

Hub-and-spoke payment channels and the Lightning network are not
off-chain solutions, they are ways to more efficiently use on-chain
transactions to achive the goal of moving assets from point a to point
b, resulting in more economic transactions being done with fewer - but
not zero! - blockchain transactions.

Off-chain transaction systems such as Changetip allow economic
transactions to happen with no blockchain transactions at all.

> Bitcoin Core scales as O(N), where N is the number of transactions. Can we
> do better than this while still achieving global consensus?

No, Bitcoin the network scales with O(n^2) with your above criteria, as
each node creates k transactions, thus each node has to verify k*n
transactions, resulting in O(n^2) total work.

For Bitcoin to have O(n) scaling you have to assume that the number of
validation nodes doesn't scale with the number of users, thus resulting
in a system where users trust others to do validation for them. That is
not a global consensus system; that's a trust-based system.

There's nothing inherently wrong with that, but why change Bitcoin
itself into a trust-based system, when you can preserve the global
consensus functionality, and built a trust-based system on top of it?

-- 
'peter'[:-1]@petertodd.org
0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/7e726f75/attachment.sig>

From bitcoin at bpj-code.co.za  Sat Jun 27 17:36:50 2015
From: bitcoin at bpj-code.co.za (Bernd Jendrissek)
Date: Sat, 27 Jun 2015 19:36:50 +0200
Subject: [bitcoin-dev] Block Size Debate Analogy / Workaround: Bitcoin
 is Like Windows 3.11
In-Reply-To: <558EBCB7.9050100@trek.io>
References: <558EBCB7.9050100@trek.io>
Message-ID: <CAF7PVPrQxyCE-zPZxwXfEkWMb0u2cS_nmavBM0b7n7iQdMpFtg@mail.gmail.com>

> In some ways, however, to me at
> least - Bitcoin is like Windows 3.11.
[...]
> Now there is a huge debate about if there
> should ever be a Windows 95, XP, Pro, etc., that scales better and makes
> advances over time, but doesn?t support facets of older versions as it gets
> updated.

I like your analogy for how it frames blockchain compatibility in
terms of the backward compatibility that hopefully most
computer-literate people already understand, but there's a key
ingredient missing.

It's as if, if everyone in the world did somehow upgrade to Windows
95, it would become forever impossible to take a program written *on*
Windows 95 but *for* Windows 3.11, and successfully run it on a
Windows 3.11 computer. It would be as if cross-compilers from Windows
95 to Windows 3.11 didn't, and couldn't, exist. Any coins that have
post-hardfork coinbase outputs anywhere in their tree of inputs (a
Windows 3.11 program, that's written on a computer that has ever run a
Windows 95 program) can never be spent on the no-change side of the
fork.

From pete at petertodd.org  Sat Jun 27 17:37:24 2015
From: pete at petertodd.org (Peter Todd)
Date: Sat, 27 Jun 2015 13:37:24 -0400
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CAOoPuRZrV_8XJbCbHMEWAfoKYc+OSQQMuhgESgG2JD2nEHoyvQ@mail.gmail.com>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
	<1EF70EBC-8BB8-4A93-8591-52B2B0335F6C@petertodd.org>
	<CALgxB7usetoaNCObhG36TrdYgKuP4TSPPNkGatvim1oWUMxaeQ@mail.gmail.com>
	<20150627172011.GB18729@muck>
	<CAOoPuRZrV_8XJbCbHMEWAfoKYc+OSQQMuhgESgG2JD2nEHoyvQ@mail.gmail.com>
Message-ID: <20150627173724.GA30546@muck>

On Sat, Jun 27, 2015 at 07:26:00PM +0200, Benjamin wrote:
> "Thus we have a fixed capacity system where access is mediated by supply
> and demand transaction fees."
> 
> There is no supply and demand. That would mean users would be able to adapt
> fees and get different quality of service depending on current capacity.
> For example if peak load is 10x average load, then at those times fees
> would be higher and users would delay transactions to smooth out demand.

That's exactly how Bitcoin works already. See my article on how
transaction fees work for more details:

https://gist.github.com/petertodd/8e87c782bdf342ef18fb

-- 
'peter'[:-1]@petertodd.org
0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/d3b5043c/attachment-0001.sig>

From benjamin.l.cordes at gmail.com  Sat Jun 27 17:46:55 2015
From: benjamin.l.cordes at gmail.com (Benjamin)
Date: Sat, 27 Jun 2015 19:46:55 +0200
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <20150627173724.GA30546@muck>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
	<1EF70EBC-8BB8-4A93-8591-52B2B0335F6C@petertodd.org>
	<CALgxB7usetoaNCObhG36TrdYgKuP4TSPPNkGatvim1oWUMxaeQ@mail.gmail.com>
	<20150627172011.GB18729@muck>
	<CAOoPuRZrV_8XJbCbHMEWAfoKYc+OSQQMuhgESgG2JD2nEHoyvQ@mail.gmail.com>
	<20150627173724.GA30546@muck>
Message-ID: <CAOoPuRbqdWWGRL7mRReMdSct2dsiFw_X9YtNJWquZS=fsCdCDQ@mail.gmail.com>

There is no ensured Quality of service, is there? If you "bid" higher, then
you don't know what you are going to get. Also because you have no way of
knowing what *others* are bidding. Only if you have auctions (increasing
increments) you can establish a feedback loop to settle demand and supply.
And the supply side doesn't adapt. Adapting supply would help resolve parts
of the capacity problem.

On Sat, Jun 27, 2015 at 7:37 PM, Peter Todd <pete at petertodd.org> wrote:

> On Sat, Jun 27, 2015 at 07:26:00PM +0200, Benjamin wrote:
> > "Thus we have a fixed capacity system where access is mediated by supply
> > and demand transaction fees."
> >
> > There is no supply and demand. That would mean users would be able to
> adapt
> > fees and get different quality of service depending on current capacity.
> > For example if peak load is 10x average load, then at those times fees
> > would be higher and users would delay transactions to smooth out demand.
>
> That's exactly how Bitcoin works already. See my article on how
> transaction fees work for more details:
>
> https://gist.github.com/petertodd/8e87c782bdf342ef18fb
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/4f0abdd8/attachment.html>

From pete at petertodd.org  Sat Jun 27 17:54:28 2015
From: pete at petertodd.org (Peter Todd)
Date: Sat, 27 Jun 2015 13:54:28 -0400
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CAOoPuRbqdWWGRL7mRReMdSct2dsiFw_X9YtNJWquZS=fsCdCDQ@mail.gmail.com>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
	<1EF70EBC-8BB8-4A93-8591-52B2B0335F6C@petertodd.org>
	<CALgxB7usetoaNCObhG36TrdYgKuP4TSPPNkGatvim1oWUMxaeQ@mail.gmail.com>
	<20150627172011.GB18729@muck>
	<CAOoPuRZrV_8XJbCbHMEWAfoKYc+OSQQMuhgESgG2JD2nEHoyvQ@mail.gmail.com>
	<20150627173724.GA30546@muck>
	<CAOoPuRbqdWWGRL7mRReMdSct2dsiFw_X9YtNJWquZS=fsCdCDQ@mail.gmail.com>
Message-ID: <20150627175428.GA2259@muck>

On Sat, Jun 27, 2015 at 07:46:55PM +0200, Benjamin wrote:
> There is no ensured Quality of service, is there? If you "bid" higher, then
> you don't know what you are going to get. Also because you have no way of
> knowing what *others* are bidding. Only if you have auctions (increasing
> increments) you can establish a feedback loop to settle demand and supply.
> And the supply side doesn't adapt. Adapting supply would help resolve parts
> of the capacity problem.

There's lots of markets where there is no assured quality of service,
and where the bids others are making aren't known. Most financial
markets work that way - there's only ever probabalistic guarantees that
for a given amount of money you'll be able to buy a certain amount of
gold at any given time for instance. Similarly for nearly all
commodities the infrastructure required to mine those commodities has
very little room for short, medium, or even long-term production
increases, so whatever the production supply is at a given time is
pretty much fixed.

-- 
'peter'[:-1]@petertodd.org
0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/d4bccafb/attachment.sig>

From venzen at mail.bihthai.net  Sat Jun 27 17:58:59 2015
From: venzen at mail.bihthai.net (Venzen Khaosan)
Date: Sun, 28 Jun 2015 00:58:59 +0700
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <20150627175428.GA2259@muck>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>	<1EF70EBC-8BB8-4A93-8591-52B2B0335F6C@petertodd.org>	<CALgxB7usetoaNCObhG36TrdYgKuP4TSPPNkGatvim1oWUMxaeQ@mail.gmail.com>	<20150627172011.GB18729@muck>	<CAOoPuRZrV_8XJbCbHMEWAfoKYc+OSQQMuhgESgG2JD2nEHoyvQ@mail.gmail.com>	<20150627173724.GA30546@muck>	<CAOoPuRbqdWWGRL7mRReMdSct2dsiFw_X9YtNJWquZS=fsCdCDQ@mail.gmail.com>
	<20150627175428.GA2259@muck>
Message-ID: <558EE463.4020601@mail.bihthai.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Very interesting point and comparison. So the fee market is unknown,
similar to a market maker's orderbook - except in the case of Bitcoin
it is not being deliberately hidden from users, its just not knowable
how miners are positioning at any given moment.


On 06/28/2015 12:54 AM, Peter Todd wrote:
> On Sat, Jun 27, 2015 at 07:46:55PM +0200, Benjamin wrote:
>> There is no ensured Quality of service, is there? If you "bid"
>> higher, then you don't know what you are going to get. Also
>> because you have no way of knowing what *others* are bidding.
>> Only if you have auctions (increasing increments) you can
>> establish a feedback loop to settle demand and supply. And the
>> supply side doesn't adapt. Adapting supply would help resolve
>> parts of the capacity problem.
> 
> There's lots of markets where there is no assured quality of
> service, and where the bids others are making aren't known. Most
> financial markets work that way - there's only ever probabalistic
> guarantees that for a given amount of money you'll be able to buy a
> certain amount of gold at any given time for instance. Similarly
> for nearly all commodities the infrastructure required to mine
> those commodities has very little room for short, medium, or even
> long-term production increases, so whatever the production supply
> is at a given time is pretty much fixed.
> 
> 
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVjuRiAAoJEGwAhlQc8H1mjnwIAIiUSPf6agfMXsFgupoihsTV
Pr1mJWHdLjrF5QadmdyooivYGPkY+zmfJ+N3fkr8l++PDGh03u0RgALf/gwJSSAQ
qSeMmjSZb8ZEkyLlZAGVHT8Ph+lRda65CVxYspKu/54TolqEezOHVaon9uWYVjtB
cSd8fWoqJMq05Pz25QPagxFUpXmtFX1KvxUWqeGkRsuqMgeWbCurQKpOhRXu48nH
Si73iOIyDUT9i1WsPvlpOi0pSxDlGnkMQKaEyIN5JJfKo1imRAtKVRLZh43rXpSW
jeZf8LMRwd49K4vnvHXZ0UbKWhpelh6XJari22citZ7yb5w5iENAcoP/cSGhLaY=
=nfF5
-----END PGP SIGNATURE-----

From jameson.lopp at gmail.com  Sat Jun 27 18:02:05 2015
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Sat, 27 Jun 2015 14:02:05 -0400
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <20150627173451.GA28181@muck>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
	<CALqxMTHjszPcf=S20kquF=5y3zfYb+foP6tL1okOT2jhdrW08A@mail.gmail.com>
	<CALgxB7tdFsQXzGRje=suC7Yaym_Whhtn2qrb3ykx2ZOBwwbE7w@mail.gmail.com>
	<20150627163731.GA12820@muck>
	<CALgxB7tsmHGiGuCmcdNuwjKxNfBpdq6U+x8eK=7sL6NekAfXow@mail.gmail.com>
	<20150627173451.GA28181@muck>
Message-ID: <CADL_X_ekJ_agt+94z-9_cQGdTOQym5t+6X+G4+AxvNBRpYBnTg@mail.gmail.com>

On Sat, Jun 27, 2015 at 1:34 PM, Peter Todd <pete at petertodd.org> wrote:

> On Sat, Jun 27, 2015 at 01:25:14PM -0400, Michael Naber wrote:
> > Global network consensus means that there is global network recognition
> > that a particular transaction has occurred and is irreversible. The
> > off-chain solutions you describe, while probably useful for other
> purposes,
> > do not exhibit this characteristic and so they are not global network
> > consensus networks.
>
> Hub-and-spoke payment channels and the Lightning network are not
> off-chain solutions, they are ways to more efficiently use on-chain
> transactions to achive the goal of moving assets from point a to point
> b, resulting in more economic transactions being done with fewer - but
> not zero! - blockchain transactions.
>
> Off-chain transaction systems such as Changetip allow economic
> transactions to happen with no blockchain transactions at all.
>
> > Bitcoin Core scales as O(N), where N is the number of transactions. Can
> we
> > do better than this while still achieving global consensus?
>
> No, Bitcoin the network scales with O(n^2) with your above criteria, as
> each node creates k transactions, thus each node has to verify k*n
> transactions, resulting in O(n^2) total work.
>
> For Bitcoin to have O(n) scaling you have to assume that the number of
> validation nodes doesn't scale with the number of users, thus resulting
> in a system where users trust others to do validation for them. That is
> not a global consensus system; that's a trust-based system.
>
>
Why does it matter what the "total work" of the network is? Anyone who is
participating as a node on the network only cares about the resources
required to run their own node, not the resources everyone else needs to
run their nodes.

Also, no assumption needed, it is quite clear that the number of nodes is
not scaling along with the number of users. If anything it appears to be
inversely proportional.


> There's nothing inherently wrong with that, but why change Bitcoin
> itself into a trust-based system, when you can preserve the global
> consensus functionality, and built a trust-based system on top of it?
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/62915947/attachment.html>

From thomas at pryds.eu  Sat Jun 27 17:55:20 2015
From: thomas at pryds.eu (Thomas Pryds)
Date: Sat, 27 Jun 2015 19:55:20 +0200
Subject: [bitcoin-dev] Upcoming DOS vulnerability announcements for
 Bitcoin Core
In-Reply-To: <CAOC2i373Bg2v_CHDicn74RFsjZDwwDW5cGQ=01o9YNnU8Tr27w@mail.gmail.com>
References: <CAAS2fgR0ak5B1gdSvR7s4YRydbpXb0jC45U3V50D6n=aMLUn7w@mail.gmail.com>
	<CAOC2i373Bg2v_CHDicn74RFsjZDwwDW5cGQ=01o9YNnU8Tr27w@mail.gmail.com>
Message-ID: <CAOC2i37rbSbw3ep-JVsGvCuW-KH=knbq6DbCB5z_Z=ZHEtu53g@mail.gmail.com>

Den 27/06/2015 08.21 skrev "Gregory Maxwell" <gmaxwell at gmail.com>:

> I strongly recommend anyone running production nodes exposed to inbound
> connections from the internet upgrade to 0.10.2 as soon as possible.

Does anybody know when/if 0.10.2 will be available on the Ubuntu PPA?

I could of course just install manually, but I like the convenience of a
PPA.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/714248b1/attachment-0001.html>

From jameson.lopp at gmail.com  Sat Jun 27 18:22:01 2015
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Sat, 27 Jun 2015 14:22:01 -0400
Subject: [bitcoin-dev] Upcoming DOS vulnerability announcements for
 Bitcoin Core
In-Reply-To: <CAOC2i37rbSbw3ep-JVsGvCuW-KH=knbq6DbCB5z_Z=ZHEtu53g@mail.gmail.com>
References: <CAAS2fgR0ak5B1gdSvR7s4YRydbpXb0jC45U3V50D6n=aMLUn7w@mail.gmail.com>
	<CAOC2i373Bg2v_CHDicn74RFsjZDwwDW5cGQ=01o9YNnU8Tr27w@mail.gmail.com>
	<CAOC2i37rbSbw3ep-JVsGvCuW-KH=knbq6DbCB5z_Z=ZHEtu53g@mail.gmail.com>
Message-ID: <CADL_X_ejSs6hHahbVyjBjXJxuJjqW9WcNf1HcPGA__hM5w-h7A@mail.gmail.com>

According to the release notes, the 0.10.2 release only had notable changes
for Windows. https://bitcoin.org/en/release/v0.10.2

It's not clear that there were any vulnerability patches in 0.10.2 itself
that apply to Ubuntu.

- Jameson

On Sat, Jun 27, 2015 at 1:55 PM, Thomas Pryds <thomas at pryds.eu> wrote:

>
> Den 27/06/2015 08.21 skrev "Gregory Maxwell" <gmaxwell at gmail.com>:
>
> > I strongly recommend anyone running production nodes exposed to inbound
> > connections from the internet upgrade to 0.10.2 as soon as possible.
>
> Does anybody know when/if 0.10.2 will be available on the Ubuntu PPA?
>
> I could of course just install manually, but I like the convenience of a
> PPA.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/a155746a/attachment.html>

From pete at petertodd.org  Sat Jun 27 18:47:51 2015
From: pete at petertodd.org (Peter Todd)
Date: Sat, 27 Jun 2015 14:47:51 -0400
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CADL_X_ekJ_agt+94z-9_cQGdTOQym5t+6X+G4+AxvNBRpYBnTg@mail.gmail.com>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
	<CALqxMTHjszPcf=S20kquF=5y3zfYb+foP6tL1okOT2jhdrW08A@mail.gmail.com>
	<CALgxB7tdFsQXzGRje=suC7Yaym_Whhtn2qrb3ykx2ZOBwwbE7w@mail.gmail.com>
	<20150627163731.GA12820@muck>
	<CALgxB7tsmHGiGuCmcdNuwjKxNfBpdq6U+x8eK=7sL6NekAfXow@mail.gmail.com>
	<20150627173451.GA28181@muck>
	<CADL_X_ekJ_agt+94z-9_cQGdTOQym5t+6X+G4+AxvNBRpYBnTg@mail.gmail.com>
Message-ID: <20150627184751.GA16460@muck>

On Sat, Jun 27, 2015 at 02:02:05PM -0400, Jameson Lopp wrote:
> > For Bitcoin to have O(n) scaling you have to assume that the number of
> > validation nodes doesn't scale with the number of users, thus resulting
> > in a system where users trust others to do validation for them. That is
> > not a global consensus system; that's a trust-based system.
> >
> >
> Why does it matter what the "total work" of the network is? Anyone who is
> participating as a node on the network only cares about the resources
> required to run their own node, not the resources everyone else needs to
> run their nodes.
> 
> Also, no assumption needed, it is quite clear that the number of nodes is
> not scaling along with the number of users. If anything it appears to be
> inversely proportional.

Which is a huge problem.

Concretely, what O(n^2) scaling means is that the more Bitcoin is
adopted, the harder it is to use in a decentralized way that doesn't
trust others; the blocksize limit puts a cap on how centralized Bitcoin
can get in a given technological landscape.

-- 
'peter'[:-1]@petertodd.org
0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/958e8351/attachment.sig>

From benjamin.l.cordes at gmail.com  Sat Jun 27 19:34:16 2015
From: benjamin.l.cordes at gmail.com (Benjamin)
Date: Sat, 27 Jun 2015 21:34:16 +0200
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <20150627175428.GA2259@muck>
References: <CALgxB7udA85BWetBGc-RN=72ZtVPK9Q5HW8YRDKA08M38XqJqQ@mail.gmail.com>
	<1EF70EBC-8BB8-4A93-8591-52B2B0335F6C@petertodd.org>
	<CALgxB7usetoaNCObhG36TrdYgKuP4TSPPNkGatvim1oWUMxaeQ@mail.gmail.com>
	<20150627172011.GB18729@muck>
	<CAOoPuRZrV_8XJbCbHMEWAfoKYc+OSQQMuhgESgG2JD2nEHoyvQ@mail.gmail.com>
	<20150627173724.GA30546@muck>
	<CAOoPuRbqdWWGRL7mRReMdSct2dsiFw_X9YtNJWquZS=fsCdCDQ@mail.gmail.com>
	<20150627175428.GA2259@muck>
Message-ID: <CAOoPuRaN0LJQ6_j6h6ShLbvdAnnw1-bg8BQXdOTnjp+vFN59AQ@mail.gmail.com>

On Sat, Jun 27, 2015 at 7:54 PM, Peter Todd <pete at petertodd.org> wrote:

> On Sat, Jun 27, 2015 at 07:46:55PM +0200, Benjamin wrote:
> > There is no ensured Quality of service, is there? If you "bid" higher,
> then
> > you don't know what you are going to get. Also because you have no way of
> > knowing what *others* are bidding. Only if you have auctions (increasing
> > increments) you can establish a feedback loop to settle demand and
> supply.
> > And the supply side doesn't adapt. Adapting supply would help resolve
> parts
> > of the capacity problem.
>
> There's lots of markets where there is no assured quality of service,
> and where the bids others are making aren't known. Most financial
> markets work that way - there's only ever probabalistic guarantees that
> for a given amount of money you'll be able to buy a certain amount of
> gold at any given time for instance. Similarly for nearly all
> commodities the infrastructure required to mine those commodities has
> very little room for short, medium, or even long-term production
> increases, so whatever the production supply is at a given time is
> pretty much fixed.
>


hmm? if the current ask for 1 ounce of gold is 100$, then you need to bid
100$ to get 1 ounce of gold. If tomorrow everyone agree 1ounce of gold
should be worth 200$, then the bid moves accordingly. of course production
changes based on prices. otherwise the economy would not function. if price
of some stuff goes up, more people produce that stuff. in terms of a price
for a transaction and the use of a blockchain, unfortunately there is not a
way to just add computational supply. that's an inherent weakness of how
blockchains are structured. ideally it would be as simple as demanding more
resources as in scaling a webservices with AWS.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/ef46ab91/attachment.html>

From voisine at gmail.com  Sat Jun 27 19:40:33 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Sat, 27 Jun 2015 12:40:33 -0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <9BD77EB3-8EC7-4207-8E90-98E48C8365DE@petertodd.org>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<CADm_Wca+ow4pMzN7SyKjsMdFo0wuUerYYjf5xKs5G_2Q2PzMmA@mail.gmail.com>
	<CAPg+sBg=sn7djO_8H16NDg7S7m7_0eTcrgLVofMWQ2ANz+jw9w@mail.gmail.com>
	<CADm_WcbQog_UCV=JPHyqTRxKbaGY7jedtHE_D8jJSe_thMg05w@mail.gmail.com>
	<CAPg+sBhrBUSfPdMjbLthLEFD17zBC3LoWf9LvZsOD1Vp0D78BQ@mail.gmail.com>
	<558DA56F.3010703@jrn.me.uk> <20150626193630.GB17829@muck>
	<558E3EFD.9040602@ktorn.com>
	<CACq0ZD5S6dDcBh9fsHCgbPJXom4vF8VymtHXogODjfD38RDNfA@mail.gmail.com>
	<9BD77EB3-8EC7-4207-8E90-98E48C8365DE@petertodd.org>
Message-ID: <CACq0ZD4_xfVidPtjqaXbC7XiamAG71z85GPhhu4qv39H3VwKXg@mail.gmail.com>

On Sat, Jun 27, 2015 at 8:13 AM, Peter Todd <pete at petertodd.org> wrote:

> On 27 June 2015 03:14:41 GMT-04:00, Aaron Voisine <voisine at gmail.com>
> wrote:
> >Also remember that the sender is not the one who cares about delays or
> >even
> >getting confirmations at all, it's the receiver who's concerned with
> >these
> >things. They have to tell the sender up-front what they're willing to
> >accept in exchange for goods and services.
>
> You're assuming a receiver who is accepting a zeroconf transaction; most
> receivers don't.
>
> For instance, when I deposit funds on my exchange they don't credit those
> funds until 4 confirmations, so I very much cafe about how long it takes to
> get the first confirmation.
>

Yes, the receiver can tell the sender up-front that they are only willing
accept 4-confirmations, and put that on the sender to figure out, but the
sender then only cares because it's the receiver's requirement. The
receiver is the one who cares.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/37f62e6d/attachment.html>

From voisine at gmail.com  Sat Jun 27 19:55:27 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Sat, 27 Jun 2015 12:55:27 -0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <558E78CB.7070207@mail.bihthai.net>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<20150627095501.C59B541A40@smtp.hushmail.com>
	<558E78CB.7070207@mail.bihthai.net>
Message-ID: <CACq0ZD5WV-J1H7QA0F2wnErXVFJ3MSxWtQidPhVwaxauoHQz_A@mail.gmail.com>

On Sat, Jun 27, 2015 at 3:19 AM, Venzen Khaosan <venzen at mail.bihthai.net>
wrote:

>
> That is a false assumption. Given the increased adoption of Bitcoin by
> users and businesses during the past year, does the price chart
> reflect greater value or price? Of course not, the price chart is at
> terminal lows. Fact not fiction.
>

You're not taking speculative cycles into account. For most of 2013 the
price was in the $100 range. Adoption as a store-of-value is what
determines the price over the long term, as with any monetary commodity.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/5088206e/attachment-0001.html>

From thomas at pryds.eu  Sat Jun 27 20:53:51 2015
From: thomas at pryds.eu (Thomas Pryds)
Date: Sat, 27 Jun 2015 22:53:51 +0200
Subject: [bitcoin-dev] Upcoming DOS vulnerability announcements for
 Bitcoin Core
In-Reply-To: <CADL_X_ejSs6hHahbVyjBjXJxuJjqW9WcNf1HcPGA__hM5w-h7A@mail.gmail.com>
References: <CAAS2fgR0ak5B1gdSvR7s4YRydbpXb0jC45U3V50D6n=aMLUn7w@mail.gmail.com>
	<CAOC2i373Bg2v_CHDicn74RFsjZDwwDW5cGQ=01o9YNnU8Tr27w@mail.gmail.com>
	<CAOC2i37rbSbw3ep-JVsGvCuW-KH=knbq6DbCB5z_Z=ZHEtu53g@mail.gmail.com>
	<CADL_X_ejSs6hHahbVyjBjXJxuJjqW9WcNf1HcPGA__hM5w-h7A@mail.gmail.com>
Message-ID: <CAOC2i34MvNa9QpwDe=8BSY1dpWnPOka7KZ+1OwS1h_Cd8f-7jQ@mail.gmail.com>

Den 27/06/2015 20.22 skrev "Jameson Lopp" <jameson.lopp at gmail.com>:
>
> According to the release notes, the 0.10.2 release only had notable
changes for Windows. https://bitcoin.org/en/release/v0.10.2

Ah, makes sense, then, that the PPA doesn't carry 0.10.2. Thank you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/9fcb4798/attachment.html>

From grarpamp at gmail.com  Sat Jun 27 22:21:34 2015
From: grarpamp at gmail.com (grarpamp)
Date: Sat, 27 Jun 2015 18:21:34 -0400
Subject: [bitcoin-dev] Mailing List Administrivia - GPG, Archives, Breakage,
	TODO, mirrors, etc
Message-ID: <CAD2Ti2-QChRZYZDSH1avit3snCLMws2UNmHQ_aY5O4txCS3AGg@mail.gmail.com>

On Sun, Jun 21, 2015 at 9:14 PM, Frank Flores <frankf44 at gmail.com> wrote:
> If you're going to go through the trouble of signing your public emails ...

... then you should also demand that the official archives of your
favorite lists preserve them and their verifiability in the supposedly
canonical reference "mbox" format that they distribute.

On Wed, Jun 24, 2015 at 7:47 AM, Wladimir J. van der Laan
<laanwj at gmail.com> wrote:
> Subject: [bitcoin-dev] New GPG signing key for Bitcoin Core binary releases

http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009045.html
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June.txt.gz

As you can clearly see, both the HTML archives and the "mbox"
archives have corrupted this message, it will not verify. Do not
try to say this case is trivial, the problem itself is not trivial,
it's gratuitous, and it applies to all matching messages... text,
code, binary inline... that's dangerous.

Do not try to say this corruption prevents spam, it does not.
Spammers simply subscribe to the list and harvest everything
efficiently in realtime... no webcrawling overhead, no stale
addresses. Obfuscation is futile.

This misfeature needs to be disabled.



On Fri, Jun 19, 2015 at 12:57 AM, Warren Togami Jr. <wtogami at gmail.com> wrote:
> archives will be exported
> and imported into the new list server

On Tue, Jun 23, 2015 at 2:45 PM, Andy Schroder <info at andyschroder.com> wrote:
> I'm not sure if anyone has submitted a request for gmane

On Sun, Jun 21, 2015 at 5:35 PM, s7r <s7r at sky-ip.org> wrote:
> Do we have all the archives imported? I run several full nodes and
> mirrors for open source projects, if you think it's useful, I can
> provide a mirror for the mail list archives.

Yes... these other mirrors, archives, analysis, journalism, and
interfaces are useful. However, as it is now, there are no useful
authoritative sources for them to seed from... they're all corrupt.
And any subscribed realtime sources, though nice, are subject to
downtime, administrative and other unrecoverable gaps. Your mirror
project is a fine idea, you should demand that the pristine historical
sources be made publicly available. Not just for you, but for everyone.



On Wed, Jun 17, 2015, grarpamp wrote:
> ...

As before, the current "mbox" archives are broken and not useful...

a) They corrupt message data, messages are unverifiable, another example...
   http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009132.html
   http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June.txt.gz
b) They are missing the minimum set of original headers necessary
   for fully replyable, threadable, sortable, searchable, context
   preserving and direct use by users MUA's in their local environment:
   (Date, From, To, Cc, Subject, Message-ID, In-Reply-To, References)
c) They do not include attachments (patches, signatures, images, crypto,
   data) that are absolutely necessary to the context and archives
   of all lists. Instead they stupidly throw them away to "web links"
   which results not only in uselessness of the so called "mbox"
   version, but in many thousands of needless fetches by archive
   users and indexers. And hours of wasted work attempting to
   postprocess them into usable form.
   Valuable content lost from the "mbox" files this June alone:
    418 attachment.html
    106 attachment.sig
      6 attachment.jpe
      4 attachment.png
      2 attachment.bin
d) There appear to be at least 15 instances of unescaped '^From '
   in the "mbox". Regeneration with current mailman may fix. One such
   case is here:
   http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004245.html
   http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January.txt.gz



Please fix all the above mentioned issues by providing the full raw
archives in regularly updated [gzip/7z] mbox format. The internet
thanks you :)

Example, compare the "Downloadable version"s here:
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/
https://cpunks.org/pipermail/cypherpunks/
https://cpunks.org/pipermail/cypherpunks/2015-February/006820.html



On Tue, Jun 23, 2015 at 2:45 PM, Andy Schroder <info at andyschroder.com> wrote:
> Regarding message footers and the subject prefix

Yes, they're also corruptive and space wasting clutter, for and by
the clueless :( Both of them should be turned off.

From natanael.l at gmail.com  Sat Jun 27 22:53:07 2015
From: natanael.l at gmail.com (Natanael)
Date: Sun, 28 Jun 2015 00:53:07 +0200
Subject: [bitcoin-dev] Outroduction of old non-updated full nodes through
 graceful degradation to SPV mode
In-Reply-To: <CAAt2M1-cRNBr9SAOCDEKm8C8GzOMRtY4JprwYk9y8w4xVqgWYw@mail.gmail.com>
References: <CAAt2M1-cRNBr9SAOCDEKm8C8GzOMRtY4JprwYk9y8w4xVqgWYw@mail.gmail.com>
Message-ID: <CAAt2M1_ijqnARvh5UHhmtCGRKyMY1VwbP=3ms7a8OkfsrQm-EA@mail.gmail.com>

Old versions of software that can't be sandboxed from the world by design
must eventually die. The reason is simple - otherwise it will be abused,
exploited and end up actively countering its own intended purpose. Either
through security holes or other means of abusing the outdated code's
behavior.

Full nodes in Bitcoin validate all new transactions against their own
embedded policies and rules. Eventually the global concensus will agree on
a change of rules, as the current ruleset isn't perfect - this will toss
incompatible old full nodes off the greatest-PoW blockchain. This is
inevitable - not all instances of the software will get updated. Scanning
the Internet for Internet accessible hardware will reveal tons of outdated
software versions.

There is however currently no simple way to tell a node that it is
outdated. Even if you just incremented block versions, it will only lead to
some kind of alert (IIRC) for some versions. I'm suggesting behaviors that
would simplify transition to new versions over time with minimal
disruption.

* Expiration dates. Nodes so old that they are behind by numerous soft
forks and likely are to be deprecated by a hard fork should switch to SPV
mode automatically while also alerting the node owner. This behavior
extends the lifetime while not by itself breaking anything with minimal
disruption. It also allows node owners which look at the status of their
nodes but don't think of updating (maybe it is automatically deployed old
software images) to realize an update is sin necessary. SPV mode also needs
to have an expiration date before complete node shutdown. Expiration dates
also minimize risk for political disagreement regarding how and when to
take any manual action to trigger necessary alerts. 3 years to SPV is a
reasonable default IMHO, with node shutdown after 5 years. Any other
suggestions?

* Explicit declaration of block policy / rules in blocks, including miner
votes for changes, and explicit declaration of incompatibility with old
versions. Having votes visible in the blocks for implementing changes
incompatible with the policy and rules your node runs allows it to alert
the node owner of impending necessity to update. Switching to SPV mode
again provides for minimal disruption. Please take note that even old SPV
nodes may eventually be deprecated through data structure changes, this too
should be declared and then cause alerts and halt / shutdown of those
nodes.

This also protects against another issue - an old abandoned node will not
automatically trust a fresh longer chain (likely malicious) using its own
policy if it remembers an earlier fork voting for change, instead it
prompts for the node owner to either update (or stick to SPV on the
new-policy chain) or to accept this fresh fork. Nodes on a chain with its
own policy seeing a fork with a vote for change should look at the PoW
first. If it is close, alert the user (he might have brought the node
online just after the vote finished, to first see the fork that is on his
old policy), so he can investigate. If the PoW is far behind it may be
ignored, or simply logged.

Seeing a block also explicitly declare being incompatible with the policy a
node follows including for SPV nodes, rather than just using version
numbers, simplifies things too. It ensures the nodes know they can't
validate the blocks with their old code, which simultaneously ensures that
behavior changes that doesn't violate the old validation code but yet
causes incompatibility then will not silently fork the network, instead it
will let the node owners know their nodes are incompatible with the main
chain. This allows them to investigate and update of necessary.

---

The primary reason for me suggesting switching to SPV mode is simple - it
buys time for everybody. Hard forks no longer become a critical deadline
for getting the ENTIRE network upgraded - you just need to worry about the
miners and major players in the short term. Long term you do need
information campaigns to get SPV fallback nodes updated, but it won't need
to be rushed. The information campaigns no longer need to be FULLY
completed BEFORE deployment.

Feedback?

- Sent from my tablet
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/e38a4379/attachment.html>

From jgarzik at gmail.com  Sat Jun 27 23:54:00 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Sat, 27 Jun 2015 16:54:00 -0700
Subject: [bitcoin-dev] Mailing List Administrivia - GPG, Archives,
 Breakage, TODO, mirrors, etc
In-Reply-To: <CAD2Ti2-QChRZYZDSH1avit3snCLMws2UNmHQ_aY5O4txCS3AGg@mail.gmail.com>
References: <CAD2Ti2-QChRZYZDSH1avit3snCLMws2UNmHQ_aY5O4txCS3AGg@mail.gmail.com>
Message-ID: <CADm_WcbjAmrBXJs6s9rvVKccgOA3sDut0o2ALTKqWQrjT=MyxQ@mail.gmail.com>

Generally agreed w/ all this.

To preserve digital signatures now and in the future, and make mbox
archives actually useful, a minimum modification policy is needed.



On Sat, Jun 27, 2015 at 3:21 PM, grarpamp <grarpamp at gmail.com> wrote:

> On Sun, Jun 21, 2015 at 9:14 PM, Frank Flores <frankf44 at gmail.com> wrote:
> > If you're going to go through the trouble of signing your public emails
> ...
>
> ... then you should also demand that the official archives of your
> favorite lists preserve them and their verifiability in the supposedly
> canonical reference "mbox" format that they distribute.
>
> On Wed, Jun 24, 2015 at 7:47 AM, Wladimir J. van der Laan
> <laanwj at gmail.com> wrote:
> > Subject: [bitcoin-dev] New GPG signing key for Bitcoin Core binary
> releases
>
>
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009045.html
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June.txt.gz
>
> As you can clearly see, both the HTML archives and the "mbox"
> archives have corrupted this message, it will not verify. Do not
> try to say this case is trivial, the problem itself is not trivial,
> it's gratuitous, and it applies to all matching messages... text,
> code, binary inline... that's dangerous.
>
> Do not try to say this corruption prevents spam, it does not.
> Spammers simply subscribe to the list and harvest everything
> efficiently in realtime... no webcrawling overhead, no stale
> addresses. Obfuscation is futile.
>
> This misfeature needs to be disabled.
>
>
>
> On Fri, Jun 19, 2015 at 12:57 AM, Warren Togami Jr. <wtogami at gmail.com>
> wrote:
> > archives will be exported
> > and imported into the new list server
>
> On Tue, Jun 23, 2015 at 2:45 PM, Andy Schroder <info at andyschroder.com>
> wrote:
> > I'm not sure if anyone has submitted a request for gmane
>
> On Sun, Jun 21, 2015 at 5:35 PM, s7r <s7r at sky-ip.org> wrote:
> > Do we have all the archives imported? I run several full nodes and
> > mirrors for open source projects, if you think it's useful, I can
> > provide a mirror for the mail list archives.
>
> Yes... these other mirrors, archives, analysis, journalism, and
> interfaces are useful. However, as it is now, there are no useful
> authoritative sources for them to seed from... they're all corrupt.
> And any subscribed realtime sources, though nice, are subject to
> downtime, administrative and other unrecoverable gaps. Your mirror
> project is a fine idea, you should demand that the pristine historical
> sources be made publicly available. Not just for you, but for everyone.
>
>
>
> On Wed, Jun 17, 2015, grarpamp wrote:
> > ...
>
> As before, the current "mbox" archives are broken and not useful...
>
> a) They corrupt message data, messages are unverifiable, another example...
>
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009132.html
>    http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June.txt.gz
> b) They are missing the minimum set of original headers necessary
>    for fully replyable, threadable, sortable, searchable, context
>    preserving and direct use by users MUA's in their local environment:
>    (Date, From, To, Cc, Subject, Message-ID, In-Reply-To, References)
> c) They do not include attachments (patches, signatures, images, crypto,
>    data) that are absolutely necessary to the context and archives
>    of all lists. Instead they stupidly throw them away to "web links"
>    which results not only in uselessness of the so called "mbox"
>    version, but in many thousands of needless fetches by archive
>    users and indexers. And hours of wasted work attempting to
>    postprocess them into usable form.
>    Valuable content lost from the "mbox" files this June alone:
>     418 attachment.html
>     106 attachment.sig
>       6 attachment.jpe
>       4 attachment.png
>       2 attachment.bin
> d) There appear to be at least 15 instances of unescaped '^From '
>    in the "mbox". Regeneration with current mailman may fix. One such
>    case is here:
>
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004245.html
>
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January.txt.gz
>
>
>
> Please fix all the above mentioned issues by providing the full raw
> archives in regularly updated [gzip/7z] mbox format. The internet
> thanks you :)
>
> Example, compare the "Downloadable version"s here:
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/
> https://cpunks.org/pipermail/cypherpunks/
> https://cpunks.org/pipermail/cypherpunks/2015-February/006820.html
>
>
>
> On Tue, Jun 23, 2015 at 2:45 PM, Andy Schroder <info at andyschroder.com>
> wrote:
> > Regarding message footers and the subject prefix
>
> Yes, they're also corruptive and space wasting clutter, for and by
> the clueless :( Both of them should be turned off.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/bfb6410d/attachment-0001.html>

From jgarzik at gmail.com  Sat Jun 27 23:57:00 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Sat, 27 Jun 2015 16:57:00 -0700
Subject: [bitcoin-dev] Outroduction of old non-updated full nodes
 through graceful degradation to SPV mode
In-Reply-To: <CAAt2M1_ijqnARvh5UHhmtCGRKyMY1VwbP=3ms7a8OkfsrQm-EA@mail.gmail.com>
References: <CAAt2M1-cRNBr9SAOCDEKm8C8GzOMRtY4JprwYk9y8w4xVqgWYw@mail.gmail.com>
	<CAAt2M1_ijqnARvh5UHhmtCGRKyMY1VwbP=3ms7a8OkfsrQm-EA@mail.gmail.com>
Message-ID: <CADm_WcYyKHNzgJhZkkn=90Nc863c88UAoQ0LptgOY=a5GiEojQ@mail.gmail.com>

Older nodes have been phased out in the past.  For example, protocol
versions older than 209 were phased out.

Follow the yellow brick git trail starting at
18c0fa97d0408a3ee8e4cb39c08156f7667f99ac


On Sat, Jun 27, 2015 at 3:53 PM, Natanael <natanael.l at gmail.com> wrote:

> Old versions of software that can't be sandboxed from the world by design
> must eventually die. The reason is simple - otherwise it will be abused,
> exploited and end up actively countering its own intended purpose. Either
> through security holes or other means of abusing the outdated code's
> behavior.
>
> Full nodes in Bitcoin validate all new transactions against their own
> embedded policies and rules. Eventually the global concensus will agree on
> a change of rules, as the current ruleset isn't perfect - this will toss
> incompatible old full nodes off the greatest-PoW blockchain. This is
> inevitable - not all instances of the software will get updated. Scanning
> the Internet for Internet accessible hardware will reveal tons of outdated
> software versions.
>
> There is however currently no simple way to tell a node that it is
> outdated. Even if you just incremented block versions, it will only lead to
> some kind of alert (IIRC) for some versions. I'm suggesting behaviors that
> would simplify transition to new versions over time with minimal
> disruption.
>
> * Expiration dates. Nodes so old that they are behind by numerous soft
> forks and likely are to be deprecated by a hard fork should switch to SPV
> mode automatically while also alerting the node owner. This behavior
> extends the lifetime while not by itself breaking anything with minimal
> disruption. It also allows node owners which look at the status of their
> nodes but don't think of updating (maybe it is automatically deployed old
> software images) to realize an update is sin necessary. SPV mode also needs
> to have an expiration date before complete node shutdown. Expiration dates
> also minimize risk for political disagreement regarding how and when to
> take any manual action to trigger necessary alerts. 3 years to SPV is a
> reasonable default IMHO, with node shutdown after 5 years. Any other
> suggestions?
>
> * Explicit declaration of block policy / rules in blocks, including miner
> votes for changes, and explicit declaration of incompatibility with old
> versions. Having votes visible in the blocks for implementing changes
> incompatible with the policy and rules your node runs allows it to alert
> the node owner of impending necessity to update. Switching to SPV mode
> again provides for minimal disruption. Please take note that even old SPV
> nodes may eventually be deprecated through data structure changes, this too
> should be declared and then cause alerts and halt / shutdown of those
> nodes.
>
> This also protects against another issue - an old abandoned node will not
> automatically trust a fresh longer chain (likely malicious) using its own
> policy if it remembers an earlier fork voting for change, instead it
> prompts for the node owner to either update (or stick to SPV on the
> new-policy chain) or to accept this fresh fork. Nodes on a chain with its
> own policy seeing a fork with a vote for change should look at the PoW
> first. If it is close, alert the user (he might have brought the node
> online just after the vote finished, to first see the fork that is on his
> old policy), so he can investigate. If the PoW is far behind it may be
> ignored, or simply logged.
>
> Seeing a block also explicitly declare being incompatible with the policy
> a node follows including for SPV nodes, rather than just using version
> numbers, simplifies things too. It ensures the nodes know they can't
> validate the blocks with their old code, which simultaneously ensures that
> behavior changes that doesn't violate the old validation code but yet
> causes incompatibility then will not silently fork the network, instead it
> will let the node owners know their nodes are incompatible with the main
> chain. This allows them to investigate and update of necessary.
>
> ---
>
> The primary reason for me suggesting switching to SPV mode is simple - it
> buys time for everybody. Hard forks no longer become a critical deadline
> for getting the ENTIRE network upgraded - you just need to worry about the
> miners and major players in the short term. Long term you do need
> information campaigns to get SPV fallback nodes updated, but it won't need
> to be rushed. The information campaigns no longer need to be FULLY
> completed BEFORE deployment.
>
> Feedback?
>
> - Sent from my tablet
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/7af5b0ef/attachment.html>

From santino.napolitano at yandex.com  Sun Jun 28 00:14:08 2015
From: santino.napolitano at yandex.com (Santino Napolitano)
Date: Sun, 28 Jun 2015 03:14:08 +0300
Subject: [bitcoin-dev] Original Vision
Message-ID: <1164261435450448@web14h.yandex.ru>


There is much heated debate going on right now and I know it can be very stressful but I'd like to point out that it is really amazing how passionately so many feel about this once very small project. Let's not forget there is something really special going on here and we're all part of it.

The current debate has little to do with block size or hard-forks, IMO. It's about the nature of Bitcoin and what it means to people and how it will grow. I would like to take a moment to share my interpretation of the original author's intent based on everything I could find and read from this person. This is not to say their original vision is paramount-- or even that I got it completely correct but I think it might do us some good to think about.

It seems as though the incentive conceived of for running a full network node was that it would enable mining. The proceeds from mining (new coins and transaction fees) would be the reward and provide a reason to continue operating these nodes. If fees are ever to be a sufficient reward and still allow for a practical and useful system the size of the blocks must grow significantly as must the user base. I'm not sure that this is really contested but I haven't exhaustively reviewed everyone's opinion so please excuse me if I have marginalized you. If you do contest that I would be interested in hearing it.

Further, it appears clear that the original author intended organizations operating full network nodes would provide connectivity to light clients and these light clients would make up the majority of the user base. This is completely consistent with current trends in Internet consumption, e.g. tablets and phones are becoming more preferred to even owning a traditional computer. Having the system be entirely decentralized and trustless for every client does not appear to me to be the original design goal. Yes, the whitepaper speaks of the design goal as not having a need for a trusted third party but it does not say that some amount of trust won't be preferred by a majority of users. In fact, in the SPV section it implies some amount of localized trust is perhaps a necessary trade-off and maybe businesses should still run their own full network node if they want the stronger completely trustless guarantee. The global decentralized consensus appears meant to make the network resilient to a single government or other adversary's ability to shut the network down. If you really want to trust no one it is your option at a cost and should be possible by design. The author further gives evidence that they believe Moore's observation would keep the idea of running a full network node a practical one at global scale for perpetuity. It does not appear as if they intended for every individual to run one at home nor in their pocket.

If my interpretation seems incorrect please do point it out. I hope this hasn't been too off-topic and distracting. The original author's engineering ingenuity is what gave me any interest in this project so re-visiting their design and scaling intentions might be helpful for us to move forward-- together.


From voisine at gmail.com  Sun Jun 28 01:52:55 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Sat, 27 Jun 2015 18:52:55 -0700
Subject: [bitcoin-dev] Original Vision
In-Reply-To: <1164261435450448@web14h.yandex.ru>
References: <1164261435450448@web14h.yandex.ru>
Message-ID: <CACq0ZD6PUXbfWHABj8TKrQKJpKb3HOENVzaqRMMATk266Hokpw@mail.gmail.com>

This is a reasonable vision, but I think we can do better. We can easily
achieve the goal of letting hobbyists with very limited resources and
connectivity run full nodes. The way to do this is to limit growth of the
blockchain, and the right way to do that is to have fees that reflect the
costs of having large numbers of people validating, storing, and serving
transactions.

I think we're all agreed that decentralization is priority #1. It's what
makes bitcoin unique from everything else. So what then is the best way to
have fees reflect the costs? Having a fixed blocksize (fixed production
quotas) is one very disruptive option that would be a significant departure
from what we have today. The way the network today discourages spam and
other low value uses of the blockchain is with minimum relay fees and
transaction selection rules for blocks. This technique is proven, safe, and
can easily be tuned and experimented with. It's also what all bitcoin
software today is designed to work with.



Aaron Voisine
co-founder and CEO
breadwallet.com

On Sat, Jun 27, 2015 at 5:14 PM, Santino Napolitano <
santino.napolitano at yandex.com> wrote:

>
> There is much heated debate going on right now and I know it can be very
> stressful but I'd like to point out that it is really amazing how
> passionately so many feel about this once very small project. Let's not
> forget there is something really special going on here and we're all part
> of it.
>
> The current debate has little to do with block size or hard-forks, IMO.
> It's about the nature of Bitcoin and what it means to people and how it
> will grow. I would like to take a moment to share my interpretation of the
> original author's intent based on everything I could find and read from
> this person. This is not to say their original vision is paramount-- or
> even that I got it completely correct but I think it might do us some good
> to think about.
>
> It seems as though the incentive conceived of for running a full network
> node was that it would enable mining. The proceeds from mining (new coins
> and transaction fees) would be the reward and provide a reason to continue
> operating these nodes. If fees are ever to be a sufficient reward and still
> allow for a practical and useful system the size of the blocks must grow
> significantly as must the user base. I'm not sure that this is really
> contested but I haven't exhaustively reviewed everyone's opinion so please
> excuse me if I have marginalized you. If you do contest that I would be
> interested in hearing it.
>
> Further, it appears clear that the original author intended organizations
> operating full network nodes would provide connectivity to light clients
> and these light clients would make up the majority of the user base. This
> is completely consistent with current trends in Internet consumption, e.g.
> tablets and phones are becoming more preferred to even owning a traditional
> computer. Having the system be entirely decentralized and trustless for
> every client does not appear to me to be the original design goal. Yes, the
> whitepaper speaks of the design goal as not having a need for a trusted
> third party but it does not say that some amount of trust won't be
> preferred by a majority of users. In fact, in the SPV section it implies
> some amount of localized trust is perhaps a necessary trade-off and maybe
> businesses should still run their own full network node if they want the
> stronger completely trustless guarantee. The global decentralized consensus
> appears meant to make the network r
>  esilient to a single government or other adversary's ability to shut the
> network down. If you really want to trust no one it is your option at a
> cost and should be possible by design. The author further gives evidence
> that they believe Moore's observation would keep the idea of running a full
> network node a practical one at global scale for perpetuity. It does not
> appear as if they intended for every individual to run one at home nor in
> their pocket.
>
> If my interpretation seems incorrect please do point it out. I hope this
> hasn't been too off-topic and distracting. The original author's
> engineering ingenuity is what gave me any interest in this project so
> re-visiting their design and scaling intentions might be helpful for us to
> move forward-- together.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/a5fe2a0f/attachment-0001.html>

From patrick.strateman at gmail.com  Sun Jun 28 02:13:16 2015
From: patrick.strateman at gmail.com (Patrick Strateman)
Date: Sat, 27 Jun 2015 19:13:16 -0700
Subject: [bitcoin-dev] Original Vision
In-Reply-To: <1164261435450448@web14h.yandex.ru>
References: <1164261435450448@web14h.yandex.ru>
Message-ID: <558F583C.1000500@gmail.com>

> Further, it appears clear that the original author intended
organizations operating full network nodes would provide connectivity to
light clients and these light clients would make up the majority of the
user base.

Satoshi also believed that fraud proofs would be widely available and
practical.

If fraud proofs were practical SPV client security would be much closer
to full node security than it is today.

Unfortunately no design for fraud proofs which is both efficient and
secure has been proposed; much less implemented and deployed.

In building a system as new and innovative as bitcoin certain things
will be wrong.

The perception that SPV clients could be made nearly as secure as full
nodes is one example of something that was wrong.

On 06/27/2015 05:14 PM, Santino Napolitano wrote:
> There is much heated debate going on right now and I know it can be very stressful but I'd like to point out that it is really amazing how passionately so many feel about this once very small project. Let's not forget there is something really special going on here and we're all part of it.
>
> The current debate has little to do with block size or hard-forks, IMO. It's about the nature of Bitcoin and what it means to people and how it will grow. I would like to take a moment to share my interpretation of the original author's intent based on everything I could find and read from this person. This is not to say their original vision is paramount-- or even that I got it completely correct but I think it might do us some good to think about.
>
> It seems as though the incentive conceived of for running a full network node was that it would enable mining. The proceeds from mining (new coins and transaction fees) would be the reward and provide a reason to continue operating these nodes. If fees are ever to be a sufficient reward and still allow for a practical and useful system the size of the blocks must grow significantly as must the user base. I'm not sure that this is really contested but I haven't exhaustively reviewed everyone's opinion so please excuse me if I have marginalized you. If you do contest that I would be interested in hearing it.
>
> Further, it appears clear that the original author intended organizations operating full network nodes would provide connectivity to light clients and these light clients would make up the majority of the user base. This is completely consistent with current trends in Internet consumption, e.g. tablets and phones are becoming more preferred to even owning a traditional computer. Having the system be entirely decentralized and trustless for every client does not appear to me to be the original design goal. Yes, the whitepaper speaks of the design goal as not having a need for a trusted third party but it does not say that some amount of trust won't be preferred by a majority of users. In fact, in the SPV section it implies some amount of localized trust is perhaps a necessary trade-off and maybe businesses should still run their own full network node if they want the stronger completely trustless guarantee. The global decentralized consensus appears meant to make the network r
>  esilient to a single government or other adversary's ability to shut the network down. If you really want to trust no one it is your option at a cost and should be possible by design. The author further gives evidence that they believe Moore's observation would keep the idea of running a full network node a practical one at global scale for perpetuity. It does not appear as if they intended for every individual to run one at home nor in their pocket.
>
> If my interpretation seems incorrect please do point it out. I hope this hasn't been too off-topic and distracting. The original author's engineering ingenuity is what gave me any interest in this project so re-visiting their design and scaling intentions might be helpful for us to move forward-- together.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev



From elombrozo at gmail.com  Sun Jun 28 04:54:04 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sat, 27 Jun 2015 21:54:04 -0700
Subject: [bitcoin-dev] Original Vision
In-Reply-To: <558F583C.1000500@gmail.com>
References: <1164261435450448@web14h.yandex.ru> <558F583C.1000500@gmail.com>
Message-ID: <2A94BDF7-F265-4D36-B438-DC4F432E1C67@gmail.com>

Fraud proofs actually don?t need to be made super efficient?but they do need to be secure, of course.

The trick is aligning incentives. In order for fraud proofs to be widely available there needs to be a market for them - there must be a way to buy one (because producing one is not free). What makes such a scheme actually practical is that very few of these fraud proofs ever need to actually be executed - it?s a classical Nimzowischian case of the threat being much stronger than the execution.

- Eric Lombrozo

> On Jun 27, 2015, at 7:13 PM, Patrick Strateman <patrick.strateman at gmail.com> wrote:
> 
>> Further, it appears clear that the original author intended
> organizations operating full network nodes would provide connectivity to
> light clients and these light clients would make up the majority of the
> user base.
> 
> Satoshi also believed that fraud proofs would be widely available and
> practical.
> 
> If fraud proofs were practical SPV client security would be much closer
> to full node security than it is today.
> 
> Unfortunately no design for fraud proofs which is both efficient and
> secure has been proposed; much less implemented and deployed.
> 
> In building a system as new and innovative as bitcoin certain things
> will be wrong.
> 
> The perception that SPV clients could be made nearly as secure as full
> nodes is one example of something that was wrong.
> 
> On 06/27/2015 05:14 PM, Santino Napolitano wrote:
>> There is much heated debate going on right now and I know it can be very stressful but I'd like to point out that it is really amazing how passionately so many feel about this once very small project. Let's not forget there is something really special going on here and we're all part of it.
>> 
>> The current debate has little to do with block size or hard-forks, IMO. It's about the nature of Bitcoin and what it means to people and how it will grow. I would like to take a moment to share my interpretation of the original author's intent based on everything I could find and read from this person. This is not to say their original vision is paramount-- or even that I got it completely correct but I think it might do us some good to think about.
>> 
>> It seems as though the incentive conceived of for running a full network node was that it would enable mining. The proceeds from mining (new coins and transaction fees) would be the reward and provide a reason to continue operating these nodes. If fees are ever to be a sufficient reward and still allow for a practical and useful system the size of the blocks must grow significantly as must the user base. I'm not sure that this is really contested but I haven't exhaustively reviewed everyone's opinion so please excuse me if I have marginalized you. If you do contest that I would be interested in hearing it.
>> 
>> Further, it appears clear that the original author intended organizations operating full network nodes would provide connectivity to light clients and these light clients would make up the majority of the user base. This is completely consistent with current trends in Internet consumption, e.g. tablets and phones are becoming more preferred to even owning a traditional computer. Having the system be entirely decentralized and trustless for every client does not appear to me to be the original design goal. Yes, the whitepaper speaks of the design goal as not having a need for a trusted third party but it does not say that some amount of trust won't be preferred by a majority of users. In fact, in the SPV section it implies some amount of localized trust is perhaps a necessary trade-off and maybe businesses should still run their own full network node if they want the stronger completely trustless guarantee. The global decentralized consensus appears meant to make the network
>  r
>> esilient to a single government or other adversary's ability to shut the network down. If you really want to trust no one it is your option at a cost and should be possible by design. The author further gives evidence that they believe Moore's observation would keep the idea of running a full network node a practical one at global scale for perpetuity. It does not appear as if they intended for every individual to run one at home nor in their pocket.
>> 
>> If my interpretation seems incorrect please do point it out. I hope this hasn't been too off-topic and distracting. The original author's engineering ingenuity is what gave me any interest in this project so re-visiting their design and scaling intentions might be helpful for us to move forward-- together.
>> 
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/f009304a/attachment.sig>

From patrick.strateman at gmail.com  Sun Jun 28 05:29:24 2015
From: patrick.strateman at gmail.com (Patrick Strateman)
Date: Sat, 27 Jun 2015 22:29:24 -0700
Subject: [bitcoin-dev] Original Vision
In-Reply-To: <2A94BDF7-F265-4D36-B438-DC4F432E1C67@gmail.com>
References: <1164261435450448@web14h.yandex.ru> <558F583C.1000500@gmail.com>
	<2A94BDF7-F265-4D36-B438-DC4F432E1C67@gmail.com>
Message-ID: <558F8634.90904@gmail.com>

Fraud proofs need to be at least more efficient than full node validation.

Currently they are not.

On 06/27/2015 09:54 PM, Eric Lombrozo wrote:
> Fraud proofs actually don?t need to be made super efficient?but they do need to be secure, of course.
>
> The trick is aligning incentives. In order for fraud proofs to be widely available there needs to be a market for them - there must be a way to buy one (because producing one is not free). What makes such a scheme actually practical is that very few of these fraud proofs ever need to actually be executed - it?s a classical Nimzowischian case of the threat being much stronger than the execution.
>
> - Eric Lombrozo
>
>> On Jun 27, 2015, at 7:13 PM, Patrick Strateman <patrick.strateman at gmail.com> wrote:
>>
>>> Further, it appears clear that the original author intended
>> organizations operating full network nodes would provide connectivity to
>> light clients and these light clients would make up the majority of the
>> user base.
>>
>> Satoshi also believed that fraud proofs would be widely available and
>> practical.
>>
>> If fraud proofs were practical SPV client security would be much closer
>> to full node security than it is today.
>>
>> Unfortunately no design for fraud proofs which is both efficient and
>> secure has been proposed; much less implemented and deployed.
>>
>> In building a system as new and innovative as bitcoin certain things
>> will be wrong.
>>
>> The perception that SPV clients could be made nearly as secure as full
>> nodes is one example of something that was wrong.
>>
>> On 06/27/2015 05:14 PM, Santino Napolitano wrote:
>>> There is much heated debate going on right now and I know it can be very stressful but I'd like to point out that it is really amazing how passionately so many feel about this once very small project. Let's not forget there is something really special going on here and we're all part of it.
>>>
>>> The current debate has little to do with block size or hard-forks, IMO. It's about the nature of Bitcoin and what it means to people and how it will grow. I would like to take a moment to share my interpretation of the original author's intent based on everything I could find and read from this person. This is not to say their original vision is paramount-- or even that I got it completely correct but I think it might do us some good to think about.
>>>
>>> It seems as though the incentive conceived of for running a full network node was that it would enable mining. The proceeds from mining (new coins and transaction fees) would be the reward and provide a reason to continue operating these nodes. If fees are ever to be a sufficient reward and still allow for a practical and useful system the size of the blocks must grow significantly as must the user base. I'm not sure that this is really contested but I haven't exhaustively reviewed everyone's opinion so please excuse me if I have marginalized you. If you do contest that I would be interested in hearing it.
>>>
>>> Further, it appears clear that the original author intended organizations operating full network nodes would provide connectivity to light clients and these light clients would make up the majority of the user base. This is completely consistent with current trends in Internet consumption, e.g. tablets and phones are becoming more preferred to even owning a traditional computer. Having the system be entirely decentralized and trustless for every client does not appear to me to be the original design goal. Yes, the whitepaper speaks of the design goal as not having a need for a trusted third party but it does not say that some amount of trust won't be preferred by a majority of users. In fact, in the SPV section it implies some amount of localized trust is perhaps a necessary trade-off and maybe businesses should still run their own full network node if they want the stronger completely trustless guarantee. The global decentralized consensus appears meant to make the network
>>  r
>>> esilient to a single government or other adversary's ability to shut the network down. If you really want to trust no one it is your option at a cost and should be possible by design. The author further gives evidence that they believe Moore's observation would keep the idea of running a full network node a practical one at global scale for perpetuity. It does not appear as if they intended for every individual to run one at home nor in their pocket.
>>>
>>> If my interpretation seems incorrect please do point it out. I hope this hasn't been too off-topic and distracting. The original author's engineering ingenuity is what gave me any interest in this project so re-visiting their design and scaling intentions might be helpful for us to move forward-- together.
>>>
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev



From elombrozo at gmail.com  Sun Jun 28 05:32:57 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sat, 27 Jun 2015 22:32:57 -0700
Subject: [bitcoin-dev] Original Vision
In-Reply-To: <558F8634.90904@gmail.com>
References: <1164261435450448@web14h.yandex.ru> <558F583C.1000500@gmail.com>
	<2A94BDF7-F265-4D36-B438-DC4F432E1C67@gmail.com>
	<558F8634.90904@gmail.com>
Message-ID: <38C2E2A1-EB6C-48EB-8FA1-7FAA97B3E911@gmail.com>

Just to clarify, SPV is fundamentally busted as it currently exists. I?m talking about potential optimizations for future protocols.

- Eric Lombrozo

> On Jun 27, 2015, at 10:29 PM, Patrick Strateman <patrick.strateman at gmail.com> wrote:
> 
> Fraud proofs need to be at least more efficient than full node validation.
> 
> Currently they are not.
> 
> On 06/27/2015 09:54 PM, Eric Lombrozo wrote:
>> Fraud proofs actually don?t need to be made super efficient?but they do need to be secure, of course.
>> 
>> The trick is aligning incentives. In order for fraud proofs to be widely available there needs to be a market for them - there must be a way to buy one (because producing one is not free). What makes such a scheme actually practical is that very few of these fraud proofs ever need to actually be executed - it?s a classical Nimzowischian case of the threat being much stronger than the execution.
>> 
>> - Eric Lombrozo
>> 
>>> On Jun 27, 2015, at 7:13 PM, Patrick Strateman <patrick.strateman at gmail.com> wrote:
>>> 
>>>> Further, it appears clear that the original author intended
>>> organizations operating full network nodes would provide connectivity to
>>> light clients and these light clients would make up the majority of the
>>> user base.
>>> 
>>> Satoshi also believed that fraud proofs would be widely available and
>>> practical.
>>> 
>>> If fraud proofs were practical SPV client security would be much closer
>>> to full node security than it is today.
>>> 
>>> Unfortunately no design for fraud proofs which is both efficient and
>>> secure has been proposed; much less implemented and deployed.
>>> 
>>> In building a system as new and innovative as bitcoin certain things
>>> will be wrong.
>>> 
>>> The perception that SPV clients could be made nearly as secure as full
>>> nodes is one example of something that was wrong.
>>> 
>>> On 06/27/2015 05:14 PM, Santino Napolitano wrote:
>>>> There is much heated debate going on right now and I know it can be very stressful but I'd like to point out that it is really amazing how passionately so many feel about this once very small project. Let's not forget there is something really special going on here and we're all part of it.
>>>> 
>>>> The current debate has little to do with block size or hard-forks, IMO. It's about the nature of Bitcoin and what it means to people and how it will grow. I would like to take a moment to share my interpretation of the original author's intent based on everything I could find and read from this person. This is not to say their original vision is paramount-- or even that I got it completely correct but I think it might do us some good to think about.
>>>> 
>>>> It seems as though the incentive conceived of for running a full network node was that it would enable mining. The proceeds from mining (new coins and transaction fees) would be the reward and provide a reason to continue operating these nodes. If fees are ever to be a sufficient reward and still allow for a practical and useful system the size of the blocks must grow significantly as must the user base. I'm not sure that this is really contested but I haven't exhaustively reviewed everyone's opinion so please excuse me if I have marginalized you. If you do contest that I would be interested in hearing it.
>>>> 
>>>> Further, it appears clear that the original author intended organizations operating full network nodes would provide connectivity to light clients and these light clients would make up the majority of the user base. This is completely consistent with current trends in Internet consumption, e.g. tablets and phones are becoming more preferred to even owning a traditional computer. Having the system be entirely decentralized and trustless for every client does not appear to me to be the original design goal. Yes, the whitepaper speaks of the design goal as not having a need for a trusted third party but it does not say that some amount of trust won't be preferred by a majority of users. In fact, in the SPV section it implies some amount of localized trust is perhaps a necessary trade-off and maybe businesses should still run their own full network node if they want the stronger completely trustless guarantee. The global decentralized consensus appears meant to make the network
>>> r
>>>> esilient to a single government or other adversary's ability to shut the network down. If you really want to trust no one it is your option at a cost and should be possible by design. The author further gives evidence that they believe Moore's observation would keep the idea of running a full network node a practical one at global scale for perpetuity. It does not appear as if they intended for every individual to run one at home nor in their pocket.
>>>> 
>>>> If my interpretation seems incorrect please do point it out. I hope this hasn't been too off-topic and distracting. The original author's engineering ingenuity is what gave me any interest in this project so re-visiting their design and scaling intentions might be helpful for us to move forward-- together.
>>>> 
>>>> _______________________________________________
>>>> bitcoin-dev mailing list
>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>> 
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/b1fe9aee/attachment-0001.sig>

From raystonn at hotmail.com  Sun Jun 28 05:34:23 2015
From: raystonn at hotmail.com (Raystonn)
Date: Sat, 27 Jun 2015 22:34:23 -0700
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
Message-ID: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/3f441f1e/attachment.html>

From elombrozo at gmail.com  Sun Jun 28 05:48:04 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sat, 27 Jun 2015 22:48:04 -0700
Subject: [bitcoin-dev] Original Vision
In-Reply-To: <38C2E2A1-EB6C-48EB-8FA1-7FAA97B3E911@gmail.com>
References: <1164261435450448@web14h.yandex.ru> <558F583C.1000500@gmail.com>
	<2A94BDF7-F265-4D36-B438-DC4F432E1C67@gmail.com>
	<558F8634.90904@gmail.com>
	<38C2E2A1-EB6C-48EB-8FA1-7FAA97B3E911@gmail.com>
Message-ID: <951AB6C2-D81E-48F1-8565-CA31D53AE19F@gmail.com>

"Unfortunately no design for fraud proofs which is both efficient and
secure has been proposed?

Also to clarify, there?s no disagreement here, Patrick.


> On Jun 27, 2015, at 10:32 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> 
> Just to clarify, SPV is fundamentally busted as it currently exists. I?m talking about potential optimizations for future protocols.
> 
> - Eric Lombrozo
> 
>> On Jun 27, 2015, at 10:29 PM, Patrick Strateman <patrick.strateman at gmail.com> wrote:
>> 
>> Fraud proofs need to be at least more efficient than full node validation.
>> 
>> Currently they are not.
>> 
>> On 06/27/2015 09:54 PM, Eric Lombrozo wrote:
>>> Fraud proofs actually don?t need to be made super efficient?but they do need to be secure, of course.
>>> 
>>> The trick is aligning incentives. In order for fraud proofs to be widely available there needs to be a market for them - there must be a way to buy one (because producing one is not free). What makes such a scheme actually practical is that very few of these fraud proofs ever need to actually be executed - it?s a classical Nimzowischian case of the threat being much stronger than the execution.
>>> 
>>> - Eric Lombrozo
>>> 
>>>> On Jun 27, 2015, at 7:13 PM, Patrick Strateman <patrick.strateman at gmail.com> wrote:
>>>> 
>>>>> Further, it appears clear that the original author intended
>>>> organizations operating full network nodes would provide connectivity to
>>>> light clients and these light clients would make up the majority of the
>>>> user base.
>>>> 
>>>> Satoshi also believed that fraud proofs would be widely available and
>>>> practical.
>>>> 
>>>> If fraud proofs were practical SPV client security would be much closer
>>>> to full node security than it is today.
>>>> 
>>>> Unfortunately no design for fraud proofs which is both efficient and
>>>> secure has been proposed; much less implemented and deployed.
>>>> 
>>>> In building a system as new and innovative as bitcoin certain things
>>>> will be wrong.
>>>> 
>>>> The perception that SPV clients could be made nearly as secure as full
>>>> nodes is one example of something that was wrong.
>>>> 
>>>> On 06/27/2015 05:14 PM, Santino Napolitano wrote:
>>>>> There is much heated debate going on right now and I know it can be very stressful but I'd like to point out that it is really amazing how passionately so many feel about this once very small project. Let's not forget there is something really special going on here and we're all part of it.
>>>>> 
>>>>> The current debate has little to do with block size or hard-forks, IMO. It's about the nature of Bitcoin and what it means to people and how it will grow. I would like to take a moment to share my interpretation of the original author's intent based on everything I could find and read from this person. This is not to say their original vision is paramount-- or even that I got it completely correct but I think it might do us some good to think about.
>>>>> 
>>>>> It seems as though the incentive conceived of for running a full network node was that it would enable mining. The proceeds from mining (new coins and transaction fees) would be the reward and provide a reason to continue operating these nodes. If fees are ever to be a sufficient reward and still allow for a practical and useful system the size of the blocks must grow significantly as must the user base. I'm not sure that this is really contested but I haven't exhaustively reviewed everyone's opinion so please excuse me if I have marginalized you. If you do contest that I would be interested in hearing it.
>>>>> 
>>>>> Further, it appears clear that the original author intended organizations operating full network nodes would provide connectivity to light clients and these light clients would make up the majority of the user base. This is completely consistent with current trends in Internet consumption, e.g. tablets and phones are becoming more preferred to even owning a traditional computer. Having the system be entirely decentralized and trustless for every client does not appear to me to be the original design goal. Yes, the whitepaper speaks of the design goal as not having a need for a trusted third party but it does not say that some amount of trust won't be preferred by a majority of users. In fact, in the SPV section it implies some amount of localized trust is perhaps a necessary trade-off and maybe businesses should still run their own full network node if they want the stronger completely trustless guarantee. The global decentralized consensus appears meant to make the network
>>>> r
>>>>> esilient to a single government or other adversary's ability to shut the network down. If you really want to trust no one it is your option at a cost and should be possible by design. The author further gives evidence that they believe Moore's observation would keep the idea of running a full network node a practical one at global scale for perpetuity. It does not appear as if they intended for every individual to run one at home nor in their pocket.
>>>>> 
>>>>> If my interpretation seems incorrect please do point it out. I hope this hasn't been too off-topic and distracting. The original author's engineering ingenuity is what gave me any interest in this project so re-visiting their design and scaling intentions might be helpful for us to move forward-- together.
>>>>> 
>>>>> _______________________________________________
>>>>> bitcoin-dev mailing list
>>>>> bitcoin-dev at lists.linuxfoundation.org
>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>> 
>>>> _______________________________________________
>>>> bitcoin-dev mailing list
>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> 
>> 
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/34cc451d/attachment.sig>

From adam at cypherspace.org  Sun Jun 28 10:07:40 2015
From: adam at cypherspace.org (Adam Back)
Date: Sun, 28 Jun 2015 12:07:40 +0200
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>
Message-ID: <CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>

On 28 June 2015 at 07:34, Raystonn <raystonn at hotmail.com> wrote:
> nodes are limited to 133 connections.  This is 8 outgoing connections and
> 125 incoming connections.  [...] Once your full node reaches 133 connections,
> it will see no further increase in load [...] Only transaction rate will affect the
> load on your node.

The total system cost is more relevant, or total cost per user.  I think you
are stuck on the O( t * m ) t = tx, m = nodes thinking.  Total cost per user
is increasing.  That better scaling algorithms need to be found.  That's why
people are working on lightning-like systems.

> fear larger blocks based on an assumption of exponential growth of work, which just
> isn't the case.

People have been explaining quadratic system level increase, which is
not exponential,
wrong assumption.

> Decentralisation is planned to scale down once the 133 connection limit is
> hit. Like it or not, this is the current state of the code.

No people are not assuming decentralisation would decrease.  They are assuming
the number of economically dependent full nodes would increase, that's where the
O( n^2 ) comes from!  If we assume say c= 0.1% of users will run full nodes,
and users make some small-world assumed number of transactions that doesnt
increase greatly as more users are added to the network, then O( t * m
) => O( n^2 ).

Seeing decentralisation failing isn't a useful direction as Bitcoin depends on
decentralisation for most of it's useful security properties.  People running
around saying great lets centralise Bitcoin and scale it, are not working on
Bitcoin.  They may more usefully go work on competing systems without
proof of work as that's where this line of reasoning ends up.  There
are companies working on such things.  Some of them support Bitcoin IOUs.
Some of them have job openings.

We can improve decentralisation, and use bandwidth and relay improvements
to get some increase in throughput.  But starting a direction of simplistic
thinking about an ever increasing block-size mode of thinking is destructive
and not Bitcoin.  If you want to do that, you need to do it in an offchain
system.  You cant build on sand so your offchain system wont be useful
if Bitcoin doesnt have reasonable decentralisation to retain useful meaning.
Hence lightning.  There are existing layer 2 things that have on-chain netting.
Go work on one of those.  But people need to understand the constraints
and stop arguing to break Bitcoin to "scale".  It's too simplistic.

Even Gavin's proposal is not trying to do that, hence reference to
Nielsen's law.
His parameters are too high for too long for basic safety or prudence, but the
general idea to reclaim some throughput from network advances, is reasonable.
Also decentralisation is key, and that is something we can improve with pooling
protocols to phase out the artificial centralisation.  We can also
educate people
to use fullnode they economically depend on to keep the full to SPV ratio
reasonable which is also needed for security.

Adam

From benjamin.l.cordes at gmail.com  Sun Jun 28 10:29:29 2015
From: benjamin.l.cordes at gmail.com (Benjamin)
Date: Sun, 28 Jun 2015 12:29:29 +0200
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>
	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>
Message-ID: <CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>

I agree that naive scaling will likely lead to bad outcomes. They might
have the advantage though, as this would mean not changing Bitcoin.

Level2 and Lightning is not well defined. If you move money to a third
party, even if it is within the constrained of a locked contract, then I
don't think that will solve the issues. Blockchain does not know about
offchain and moving between offchain and onchain requires liquidity and a
pricing mechanism. That is exactly the problem with side-chains. If you
have off-chain transactions on an exchange, they are ID'ed in their system,
subject to KYC/AML.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/489ec17d/attachment.html>

From jtimon at jtimon.cc  Sun Jun 28 12:03:43 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sun, 28 Jun 2015 14:03:43 +0200
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <20150627120935.GD25420@amethyst.visucore.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<CABm2gDr3orTHMN1q8vGmy3NpXWPy5i=zHhGneDGUk=ney3-e+Q@mail.gmail.com>
	<20150627120935.GD25420@amethyst.visucore.com>
Message-ID: <CABm2gDofn0CC1kxJZZ1kU+2vZJ_wcqcn+G4f70Okto-LOvz40w@mail.gmail.com>

On Sat, Jun 27, 2015 at 2:09 PM, Wladimir J. van der Laan
<laanwj at gmail.com> wrote:
> - minor issues (maybe solving the time-warp issue with mining) issues planned on the long term

This.

> Note that anything non-critical and non-controversial can be planned and time-locked, say, 5 years ahead, obliviating the need for anyone to quickly upgrade their client.

Yes, I specificalyl say that here
https://github.com/jtimon/bips/blob/bip-forks/bip-forks.org#code (just
with 4 years instead of 5).

From jtimon at jtimon.cc  Sun Jun 28 12:13:52 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sun, 28 Jun 2015 14:13:52 +0200
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <20150627121016.2360041A3E@smtp.hushmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<20150627095501.C59B541A40@smtp.hushmail.com>
	<20150627100400.GC25420@amethyst.visucore.com>
	<20150627102912.06E2641A3E@smtp.hushmail.com>
	<CABm2gDpnzjph5SKTf+8GWgwe+njS=k2GNm9uL73RC-EV=Y5wug@mail.gmail.com>
	<20150627121016.2360041A3E@smtp.hushmail.com>
Message-ID: <CABm2gDovynxmZmf_voz-19mmb5k0R4Snxcucx-WObt_stkAL9A@mail.gmail.com>

On Sat, Jun 27, 2015 at 2:10 PM, NxtChg <nxtchg at hush.com> wrote:
>
> On 6/27/2015 at 2:04 PM, "Jorge Tim?n" <jtimon at jtimon.cc> wrote:
>
>>But that option is not unknown...
>
> It is, until it actually happens. Before that, anything is a speculation. That's why risk is attached to both "doing nothing" and "raising the limit".

Fortunately we have a lower limit in the standard mining policy to see
if the skies turn purple when we hit that limit like some people
predict.

> Various people perceive these risks differently and there is no clear mechanism currently to somehow gauge what the majority wants. So it's tempting to just give up and say: let's do nothing.
>
> In this situation, doing a "software fork" seems like the only way to actually see how many people/interests are in favor of bigger blocks.

But this is NOT a way to see the majority of anything. I can run 1000
nodes, have you heard of sybil attacks?
There's simply no decentralized way of voting that works. Otherwise we
could vote on each block instead of using proof of work.
Miners voting on size is also ridiculous since big miners have an
incentive to completely remove the limit and make smaller miners
unprofitable.

> (Whether the majority has a moral right to dictate the minority is a tough philosophical question, which should probably be left out of this discussion :)

No, this is very important. The majority has no right to dictate on
the minority.
If the majority of bitcoiners wanted demurrage (and we actually had a
working method for "measuring majorities"), the minority would still
say "these are not the rules we signed up for, go make freicoin as a
separate chain".
And that is very reasonable. If some people want a more centralized
version of Bitcoin they can create an altcoin too. Doesn't dogecoin
already have big blocks?

From jtimon at jtimon.cc  Sun Jun 28 12:30:55 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sun, 28 Jun 2015 14:30:55 +0200
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <558E9C06.9080901@bitcoins.info>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
	<558B7352.90708@bitcoins.info>
	<CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>
	<558D46EC.6050300@bitcoins.info>
	<CABm2gDojz6PHdRKxRkMZh-gfYLdcekVfeQMz5r_4EYc-j5tn+w@mail.gmail.com>
	<558E9C06.9080901@bitcoins.info>
Message-ID: <CABm2gDpTuEoaXZ_M166UEe+z6t-hq39yJaF3K+aL_Ra836jnSg@mail.gmail.com>

On Sat, Jun 27, 2015 at 2:50 PM, Milly Bitcoin <milly at bitcoins.info> wrote:
> On 6/27/2015 7:28 AM, Jorge Tim?n wrote:
> I have seen things like a Github discussion between 3 or 4 people
> and then Garzik send out a tweet that there is near universal approval for
> the proposed change as it nobody is allowed to question it.  After watching
> the github process for a couple years I simply don't trust it because the
> developers in charge have a dictatorial style and they shut out many
> stakeholders instead of soliciting their opinions.
> [...]
>
> I saw this problem first hand when Andreas Antonopolis got into a big
> dispute with some of the core developers over the press contacts.  The
> github made up their rules as they went along and simply ignored input from
> anyone outside their inner circle.  Since that time several people have told
> me they dropped out of participating in the github process.  The maintainers
> deleted some of my messages and I have been told I am banned form github.

I wasn't asking for an example of something that was rejected, there's
plenty of those.
You were saying people were opposing a change and jgarzik unilaterally added it.
When did that happen?

> As for your proclamation at Bitcoin core != Bitcoin consensus rules, that is
> simply not true in practice.  There is one piece of software with one
> maintainer.  If you want it changed you have to convince that one person to
> approve the change.

There are many pieces of software and many maintainers, libbitcoin,
for example, is another full node implementation different from
Bitcoin core.
Also, to change Bitcoin core I don't need to convince anyone, I do it
all the time here https://github.com/jtimon/bitcoin

> The core developers have the biggest influence by far to decide hard fork
> changes.  There is no other place to go.  While anyone can fork the code
> someone compare it to the river Thames.  if you don't like where the river
> runs you can dig a new one ... here is a spoon.  I can vote in elections but
> that does not mean the US government is "decentralized."  The core
> maintainer has decided on a hard fork change, he has decided not to do it.

Maybe Bitcoin core devs have more influence, but still, they don't
have the power to decide for everyone else what the consensus rules
are.
Your analogy is ridiculous, it literally takes seconds to fork bitcoin
and is as simple as clicking a button.
Wladimir has explained many times that he hasn't decided anything
because he can't decide that.
You keep insisting that he has control over consensus rules. Are you
doing it because you want him to be threaten, tortured, kidnapped or
killed?
If you don't, please stop making false claims about powers he doesn't
have because some bad guy could believe you.

> I am under the
> impression that at least some of the developers (such as Garzik) don't
> actually hold that many bitcoins and don't have a large stake in the system
> yet they have significant control.

For the last time, they may have control over Bitcoin core (one
implementation of the Bitcoin protocol), not the consensus rules.
Why are anyone's bitcoin holdings relevant in any technical discussion?
Please, keep this kind of offtopic comments out.

>  Anyone can attack the system by simply
> hiring a couple core developers and creating the gridlock we see now.

As said several times, yes, it is hard to define "uncontroversial"
without giving veto powers to any random guy on the internet.
But this is clearly not what is happening now. Most Bitcoin core devs
are against the current proposals, that cannot be considered
uncontroversial for any sane definition of it.

From milly at bitcoins.info  Sun Jun 28 12:32:52 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Sun, 28 Jun 2015 08:32:52 -0400
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>
	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>
Message-ID: <558FE974.2050206@bitcoins.info>

 >Also decentralisation is key, and that is something we can improve 
with pooling protocols to phase out the artificial centralisation.

So how is the level of decentralization measured?   I see many claims on 
this list that such-and-such action will increase or decrease 
centralization and sometimes people talk in absolutes such as something 
being decentralized or centralized.   Some of the arguments seem to make 
claims without providing any kind of analysis or explanation.

Nothing is truly decentralized and decentralization is just an 
approximation of having a collection of centralized systems interact in 
some way.  I would suggest coming up with some sort of metric so these 
discussions can start from a baseline when discussing changes.

Russ



From adam at cypherspace.org  Sun Jun 28 12:37:57 2015
From: adam at cypherspace.org (Adam Back)
Date: Sun, 28 Jun 2015 14:37:57 +0200
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>
	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>
	<CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>
Message-ID: <CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>

On 28 June 2015 at 12:29, Benjamin <benjamin.l.cordes at gmail.com> wrote:
> I agree that naive scaling will likely lead to bad outcomes. They might have
> the advantage though, as this would mean not changing Bitcoin.

Sure we can work incrementally and carefully, and this is exactly what
Bitcoin has been doing, and *must* do for safety and security for the
last 5 years!
That doesnt mean that useful serious improvements have not been made.

> Level2 and Lightning is not well defined. If you move money to a third
> party, even if it is within the constrained of a locked contract, then I
> don't think that will solve the issues.

I think you misunderstand how lightning works.  Every lightning
transaction *is* a valid bitcoin transaction that could be posted to
the Bitcoin network to reclaim funds if a hub went permanently
offline.  It is just that while the hubs involved remain in service,
there is no need to do so.  This is why it has been described as a
(write coalescing) write cache layer for Bitcoin.>

I believe people expect lightning to be peer 2 peer like bitcoin.

Adam

From milly at bitcoins.info  Sun Jun 28 13:13:43 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Sun, 28 Jun 2015 09:13:43 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CABm2gDpTuEoaXZ_M166UEe+z6t-hq39yJaF3K+aL_Ra836jnSg@mail.gmail.com>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
	<558B7352.90708@bitcoins.info>
	<CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>
	<558D46EC.6050300@bitcoins.info>
	<CABm2gDojz6PHdRKxRkMZh-gfYLdcekVfeQMz5r_4EYc-j5tn+w@mail.gmail.com>
	<558E9C06.9080901@bitcoins.info>
	<CABm2gDpTuEoaXZ_M166UEe+z6t-hq39yJaF3K+aL_Ra836jnSg@mail.gmail.com>
Message-ID: <558FF307.9010606@bitcoins.info>

I never said something was approved by garzik added something after it 
was opposed.  What I said was a proposal was made and 4 people commented 
on the Github.  He then tweeted there was near universal approval before 
most people even heard about the subject.  It was not controversial but 
i was pointing out the arrogance of some of the developers.  He 
considers the entire universe of Bitcoin stakeholders to be a very small 
group of insiders, not the entire universe of Bitcoin users.  Another 
thing I have seen on Github for bitcoin.org is how some the maintainers 
change the rules on the fly.  Sometimes they say a proposal had no 
objections so it is approved.  Other times they say a proposal has no 
support so it is rejected.

You are also trying to say that the core developers actually have little 
influence and are not "deciders" because anyone can fork the code.  That 
has already been discussed at length and such an argument is faulty 
because there is a constraint that your software is incompatible with 
everyone else.  The issue is that there is no way right now to change 
the consensus rules except to go through the core maintainer unless you 
get everybody on the network to switch to your fork.  People who keep 
repeating that the software development is "decentralized because you 
fork the code" without explaining the constraints are just cultists.

The discussion has nothing to do with who has the position now and I 
never said he has "control over the consensus rules."  The maintainer 
has a very large influence way beyond anyone else.  As for your claim 
that I want someone hurt because I am explaining the process, that is 
ridiculous.  If the Core maintainers did not have significant influence 
to change the consensus rules then everybody would not be spending all 
this time lobbying them to have them changed.

The outside influences and stake of the developer is a relevant topic.  
The same types of things are discussed on this list all the time in the 
context of miners, users, merchants, and exchanges.  Again, the 
developers try to place themselves on some kind of pedestal where they 
are the protectors and pure and everyone else (miners, users, merchants) 
are abusers, spammers, attackers, scammers, cheaters, etc.  It is Garzik 
who voluntarily made an issue of how many bitcoins he holds and he made 
that issue in the same place where he announces many of the technical 
issues.  It is very relevant that he has a minimal stake in Bitcoin 
holdings yet he goes around making major decisions about Bitcoin and 
trying to dictate who is allowed to participate in discussions.  If a 
core developer has minimal stake in Bitcoin yet has major veto power 
over code change that is a problem.

You are correct that you cannot give power to any person over the 
Internet which is why some kind of process needs to be developed that 
does not involve trying to convince one person to make the changes or a 
system that depends on unwritten, ever-changing rules maintained by a 
handful of people.

Russ




On 6/28/2015 8:30 AM, Jorge Tim?n wrote:
> On Sat, Jun 27, 2015 at 2:50 PM, Milly Bitcoin <milly at bitcoins.info> wrote:
>> On 6/27/2015 7:28 AM, Jorge Tim?n wrote:
>> I have seen things like a Github discussion between 3 or 4 people
>> and then Garzik send out a tweet that there is near universal approval for
>> the proposed change as it nobody is allowed to question it.  After watching
>> the github process for a couple years I simply don't trust it because the
>> developers in charge have a dictatorial style and they shut out many
>> stakeholders instead of soliciting their opinions.
>> [...]
>>
>> I saw this problem first hand when Andreas Antonopolis got into a big
>> dispute with some of the core developers over the press contacts.  The
>> github made up their rules as they went along and simply ignored input from
>> anyone outside their inner circle.  Since that time several people have told
>> me they dropped out of participating in the github process.  The maintainers
>> deleted some of my messages and I have been told I am banned form github.
> I wasn't asking for an example of something that was rejected, there's
> plenty of those.
> You were saying people were opposing a change and jgarzik unilaterally added it.
> When did that happen?
>
>> As for your proclamation at Bitcoin core != Bitcoin consensus rules, that is
>> simply not true in practice.  There is one piece of software with one
>> maintainer.  If you want it changed you have to convince that one person to
>> approve the change.
> There are many pieces of software and many maintainers, libbitcoin,
> for example, is another full node implementation different from
> Bitcoin core.
> Also, to change Bitcoin core I don't need to convince anyone, I do it
> all the time here https://github.com/jtimon/bitcoin
>
>> The core developers have the biggest influence by far to decide hard fork
>> changes.  There is no other place to go.  While anyone can fork the code
>> someone compare it to the river Thames.  if you don't like where the river
>> runs you can dig a new one ... here is a spoon.  I can vote in elections but
>> that does not mean the US government is "decentralized."  The core
>> maintainer has decided on a hard fork change, he has decided not to do it.
> Maybe Bitcoin core devs have more influence, but still, they don't
> have the power to decide for everyone else what the consensus rules
> are.
> Your analogy is ridiculous, it literally takes seconds to fork bitcoin
> and is as simple as clicking a button.
> Wladimir has explained many times that he hasn't decided anything
> because he can't decide that.
> You keep insisting that he has control over consensus rules. Are you
> doing it because you want him to be threaten, tortured, kidnapped or
> killed?
> If you don't, please stop making false claims about powers he doesn't
> have because some bad guy could believe you.
>
>> I am under the
>> impression that at least some of the developers (such as Garzik) don't
>> actually hold that many bitcoins and don't have a large stake in the system
>> yet they have significant control.
> For the last time, they may have control over Bitcoin core (one
> implementation of the Bitcoin protocol), not the consensus rules.
> Why are anyone's bitcoin holdings relevant in any technical discussion?
> Please, keep this kind of offtopic comments out.
>
>>   Anyone can attack the system by simply
>> hiring a couple core developers and creating the gridlock we see now.
> As said several times, yes, it is hard to define "uncontroversial"
> without giving veto powers to any random guy on the internet.
> But this is clearly not what is happening now. Most Bitcoin core devs
> are against the current proposals, that cannot be considered
> uncontroversial for any sane definition of it.
>



From ibrightly at gmail.com  Sun Jun 28 13:51:48 2015
From: ibrightly at gmail.com (Ivan Brightly)
Date: Sun, 28 Jun 2015 09:51:48 -0400
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CABm2gDovynxmZmf_voz-19mmb5k0R4Snxcucx-WObt_stkAL9A@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<20150627095501.C59B541A40@smtp.hushmail.com>
	<20150627100400.GC25420@amethyst.visucore.com>
	<20150627102912.06E2641A3E@smtp.hushmail.com>
	<CABm2gDpnzjph5SKTf+8GWgwe+njS=k2GNm9uL73RC-EV=Y5wug@mail.gmail.com>
	<20150627121016.2360041A3E@smtp.hushmail.com>
	<CABm2gDovynxmZmf_voz-19mmb5k0R4Snxcucx-WObt_stkAL9A@mail.gmail.com>
Message-ID: <CAAre=ySbA-JaAZoU1AsGHTZoYOwkeiRnfkYPjMV6yEa_r+SYKA@mail.gmail.com>

On Sun, Jun 28, 2015 at 8:13 AM, Jorge Tim?n <jtimon at jtimon.cc> wrote:

>
> No, this is very important. The majority has no right to dictate on
> the minority.
>

While an interesting philosophical question, I don't think that this is
accurate. First off, bitcoin doesn't imbue  any 'rights' on individuals -
it provides the choice of participating or not, nothing more.

Secondly, from a technical perspective, how is it that the majority (or
super-majority) are prevented from imposing their will? The best answer is
that they are incentivized to not override a minority group since that
reduces the inherent value in the system. However, presuming that the
majority calculate that the reward for imposing a change is greater than
the value lost in such disruption, I don't see how there would be any
stopping this change. The longest chain with the greatest number of users
valuing the token on that chain "wins".
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/0d76c58a/attachment.html>

From elombrozo at gmail.com  Sun Jun 28 14:13:13 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 28 Jun 2015 07:13:13 -0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CAAre=ySbA-JaAZoU1AsGHTZoYOwkeiRnfkYPjMV6yEa_r+SYKA@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<20150627095501.C59B541A40@smtp.hushmail.com>
	<20150627100400.GC25420@amethyst.visucore.com>
	<20150627102912.06E2641A3E@smtp.hushmail.com>
	<CABm2gDpnzjph5SKTf+8GWgwe+njS=k2GNm9uL73RC-EV=Y5wug@mail.gmail.com>
	<20150627121016.2360041A3E@smtp.hushmail.com>
	<CABm2gDovynxmZmf_voz-19mmb5k0R4Snxcucx-WObt_stkAL9A@mail.gmail.com>
	<CAAre=ySbA-JaAZoU1AsGHTZoYOwkeiRnfkYPjMV6yEa_r+SYKA@mail.gmail.com>
Message-ID: <504EA5F5-FCC8-4438-BF1D-7908E07D4061@gmail.com>

Either one branch wins overwhelmingly in a relatively short period of time?or both branches lose, I think.

- Eric

> On Jun 28, 2015, at 6:51 AM, Ivan Brightly <ibrightly at gmail.com> wrote:
> 
> On Sun, Jun 28, 2015 at 8:13 AM, Jorge Tim?n <jtimon at jtimon.cc <mailto:jtimon at jtimon.cc>> wrote:
> 
> No, this is very important. The majority has no right to dictate on
> the minority.
> 
> While an interesting philosophical question, I don't think that this is accurate. First off, bitcoin doesn't imbue  any 'rights' on individuals - it provides the choice of participating or not, nothing more.
> 
> Secondly, from a technical perspective, how is it that the majority (or super-majority) are prevented from imposing their will? The best answer is that they are incentivized to not override a minority group since that reduces the inherent value in the system. However, presuming that the majority calculate that the reward for imposing a change is greater than the value lost in such disruption, I don't see how there would be any stopping this change. The longest chain with the greatest number of users valuing the token on that chain "wins".
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/6def6860/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/6def6860/attachment.sig>

From elombrozo at gmail.com  Sun Jun 28 14:16:01 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 28 Jun 2015 07:16:01 -0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CAAre=ySbA-JaAZoU1AsGHTZoYOwkeiRnfkYPjMV6yEa_r+SYKA@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<20150627095501.C59B541A40@smtp.hushmail.com>
	<20150627100400.GC25420@amethyst.visucore.com>
	<20150627102912.06E2641A3E@smtp.hushmail.com>
	<CABm2gDpnzjph5SKTf+8GWgwe+njS=k2GNm9uL73RC-EV=Y5wug@mail.gmail.com>
	<20150627121016.2360041A3E@smtp.hushmail.com>
	<CABm2gDovynxmZmf_voz-19mmb5k0R4Snxcucx-WObt_stkAL9A@mail.gmail.com>
	<CAAre=ySbA-JaAZoU1AsGHTZoYOwkeiRnfkYPjMV6yEa_r+SYKA@mail.gmail.com>
Message-ID: <21CECA63-6993-47F9-B963-A1075C45A268@gmail.com>

Furthermore, the actual way in which the conflict is resolved sets a precedent for how such disagreements are to be ?resolved? in the future.

So the means are also important to consider.

- Eric

> On Jun 28, 2015, at 6:51 AM, Ivan Brightly <ibrightly at gmail.com> wrote:
> 
> On Sun, Jun 28, 2015 at 8:13 AM, Jorge Tim?n <jtimon at jtimon.cc <mailto:jtimon at jtimon.cc>> wrote:
> 
> No, this is very important. The majority has no right to dictate on
> the minority.
> 
> While an interesting philosophical question, I don't think that this is accurate. First off, bitcoin doesn't imbue  any 'rights' on individuals - it provides the choice of participating or not, nothing more.
> 
> Secondly, from a technical perspective, how is it that the majority (or super-majority) are prevented from imposing their will? The best answer is that they are incentivized to not override a minority group since that reduces the inherent value in the system. However, presuming that the majority calculate that the reward for imposing a change is greater than the value lost in such disruption, I don't see how there would be any stopping this change. The longest chain with the greatest number of users valuing the token on that chain "wins".
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/739cefdc/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/739cefdc/attachment.sig>

From ibrightly at gmail.com  Sun Jun 28 14:22:26 2015
From: ibrightly at gmail.com (Ivan Brightly)
Date: Sun, 28 Jun 2015 10:22:26 -0400
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <21CECA63-6993-47F9-B963-A1075C45A268@gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<20150627095501.C59B541A40@smtp.hushmail.com>
	<20150627100400.GC25420@amethyst.visucore.com>
	<20150627102912.06E2641A3E@smtp.hushmail.com>
	<CABm2gDpnzjph5SKTf+8GWgwe+njS=k2GNm9uL73RC-EV=Y5wug@mail.gmail.com>
	<20150627121016.2360041A3E@smtp.hushmail.com>
	<CABm2gDovynxmZmf_voz-19mmb5k0R4Snxcucx-WObt_stkAL9A@mail.gmail.com>
	<CAAre=ySbA-JaAZoU1AsGHTZoYOwkeiRnfkYPjMV6yEa_r+SYKA@mail.gmail.com>
	<21CECA63-6993-47F9-B963-A1075C45A268@gmail.com>
Message-ID: <CAAre=ySNL35TTuxjqkTmEjQi-HxCr35OgvM+sjyG9O3Z9nK_Qw@mail.gmail.com>

Agreed on both accounts. The main point is that there are no inherent
rights built into bitcoin - just aligned economic interests enforced by
agreed upon technical rules. The technical rules allow for a majority to
dictate, while the economic interests may or may not support such a change.

On Sun, Jun 28, 2015 at 10:16 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:

> Furthermore, the actual way in which the conflict is resolved sets a
> precedent for how such disagreements are to be ?resolved? in the future.
>
> So the means are also important to consider.
>
> - Eric
>
> On Jun 28, 2015, at 6:51 AM, Ivan Brightly <ibrightly at gmail.com> wrote:
>
> On Sun, Jun 28, 2015 at 8:13 AM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
>
>>
>> No, this is very important. The majority has no right to dictate on
>> the minority.
>>
>
> While an interesting philosophical question, I don't think that this is
> accurate. First off, bitcoin doesn't imbue  any 'rights' on individuals -
> it provides the choice of participating or not, nothing more.
>
> Secondly, from a technical perspective, how is it that the majority (or
> super-majority) are prevented from imposing their will? The best answer is
> that they are incentivized to not override a minority group since that
> reduces the inherent value in the system. However, presuming that the
> majority calculate that the reward for imposing a change is greater than
> the value lost in such disruption, I don't see how there would be any
> stopping this change. The longest chain with the greatest number of users
> valuing the token on that chain "wins".
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/c4445eb6/attachment-0001.html>

From jtimon at jtimon.cc  Sun Jun 28 15:05:49 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sun, 28 Jun 2015 17:05:49 +0200
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CAAre=ySbA-JaAZoU1AsGHTZoYOwkeiRnfkYPjMV6yEa_r+SYKA@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<20150627095501.C59B541A40@smtp.hushmail.com>
	<20150627100400.GC25420@amethyst.visucore.com>
	<20150627102912.06E2641A3E@smtp.hushmail.com>
	<CABm2gDpnzjph5SKTf+8GWgwe+njS=k2GNm9uL73RC-EV=Y5wug@mail.gmail.com>
	<20150627121016.2360041A3E@smtp.hushmail.com>
	<CABm2gDovynxmZmf_voz-19mmb5k0R4Snxcucx-WObt_stkAL9A@mail.gmail.com>
	<CAAre=ySbA-JaAZoU1AsGHTZoYOwkeiRnfkYPjMV6yEa_r+SYKA@mail.gmail.com>
Message-ID: <CABm2gDo8ZmEO5SHwZVLX0Ajg3vUu2OoJkz2urA61wAoVm_f+zA@mail.gmail.com>

On Sun, Jun 28, 2015 at 3:51 PM, Ivan Brightly <ibrightly at gmail.com> wrote:
> On Sun, Jun 28, 2015 at 8:13 AM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
>>
>>
>> No, this is very important. The majority has no right to dictate on
>> the minority.
>
>
> While an interesting philosophical question, I don't think that this is
> accurate. First off, bitcoin doesn't imbue  any 'rights' on individuals - it
> provides the choice of participating or not, nothing more.

I think you're not contradicting me: ff there's not rights built into
the system, the majority has no "right to dictate" anything.

From mark at friedenbach.org  Sun Jun 28 15:23:49 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Sun, 28 Jun 2015 08:23:49 -0700
Subject: [bitcoin-dev] Original Vision
In-Reply-To: <38C2E2A1-EB6C-48EB-8FA1-7FAA97B3E911@gmail.com>
References: <1164261435450448@web14h.yandex.ru> <558F583C.1000500@gmail.com>
	<2A94BDF7-F265-4D36-B438-DC4F432E1C67@gmail.com>
	<558F8634.90904@gmail.com>
	<38C2E2A1-EB6C-48EB-8FA1-7FAA97B3E911@gmail.com>
Message-ID: <CAOG=w-vQ+bCyT8mLNBvLDhhQzCHXxaRos-3VFDGkCsxvCiX3jA@mail.gmail.com>

There's a couple of things that Patrick could have been referring to when
he said "Fraud proofs need to be at least more efficient than full node
validation. Currently they are not."

One of the issues is that you cannot efficiently encode or validate a proof
of a negative. If a transaction input is a double-spend, you can build a
semi-reasonable sized proof of the prior spend (or very reasonably sized
with block header commitments). However if a transaction spends an output
which never existed in the first place, there is no reasonable way to
assert this other than witnessing the entire block history, as a full node
does.

UTXO commitments are the nominal solution here. You commit the validator
state in each block, and then you can prove things like a negative by
referencing that state commitment. The trouble is this requires maintaining
a hash tree commitment over validator state, which turns out to be insanely
expensive. With the UTXO commitment scheme (the others are not better) that
ends up requiring 15 - 22x more I/O during block validation. And I/O is
presently a limiter to block validation speed. So if you thought 8MB was
what bitcoin today could handle, and you also want this commitment scheme
for fraud proofs, then you should be arguing for a block size limit
decrease (to 500kB), not increase.

On Sat, Jun 27, 2015 at 10:32 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:

> Just to clarify, SPV is fundamentally busted as it currently exists. I?m
> talking about potential optimizations for future protocols.
>
> - Eric Lombrozo
>
> > On Jun 27, 2015, at 10:29 PM, Patrick Strateman <
> patrick.strateman at gmail.com> wrote:
> >
> > Fraud proofs need to be at least more efficient than full node
> validation.
> >
> > Currently they are not.
> >
> > On 06/27/2015 09:54 PM, Eric Lombrozo wrote:
> >> Fraud proofs actually don?t need to be made super efficient?but they do
> need to be secure, of course.
> >>
> >> The trick is aligning incentives. In order for fraud proofs to be
> widely available there needs to be a market for them - there must be a way
> to buy one (because producing one is not free). What makes such a scheme
> actually practical is that very few of these fraud proofs ever need to
> actually be executed - it?s a classical Nimzowischian case of the threat
> being much stronger than the execution.
> >>
> >> - Eric Lombrozo
> >>
> >>> On Jun 27, 2015, at 7:13 PM, Patrick Strateman <
> patrick.strateman at gmail.com> wrote:
> >>>
> >>>> Further, it appears clear that the original author intended
> >>> organizations operating full network nodes would provide connectivity
> to
> >>> light clients and these light clients would make up the majority of the
> >>> user base.
> >>>
> >>> Satoshi also believed that fraud proofs would be widely available and
> >>> practical.
> >>>
> >>> If fraud proofs were practical SPV client security would be much closer
> >>> to full node security than it is today.
> >>>
> >>> Unfortunately no design for fraud proofs which is both efficient and
> >>> secure has been proposed; much less implemented and deployed.
> >>>
> >>> In building a system as new and innovative as bitcoin certain things
> >>> will be wrong.
> >>>
> >>> The perception that SPV clients could be made nearly as secure as full
> >>> nodes is one example of something that was wrong.
> >>>
> >>> On 06/27/2015 05:14 PM, Santino Napolitano wrote:
> >>>> There is much heated debate going on right now and I know it can be
> very stressful but I'd like to point out that it is really amazing how
> passionately so many feel about this once very small project. Let's not
> forget there is something really special going on here and we're all part
> of it.
> >>>>
> >>>> The current debate has little to do with block size or hard-forks,
> IMO. It's about the nature of Bitcoin and what it means to people and how
> it will grow. I would like to take a moment to share my interpretation of
> the original author's intent based on everything I could find and read from
> this person. This is not to say their original vision is paramount-- or
> even that I got it completely correct but I think it might do us some good
> to think about.
> >>>>
> >>>> It seems as though the incentive conceived of for running a full
> network node was that it would enable mining. The proceeds from mining (new
> coins and transaction fees) would be the reward and provide a reason to
> continue operating these nodes. If fees are ever to be a sufficient reward
> and still allow for a practical and useful system the size of the blocks
> must grow significantly as must the user base. I'm not sure that this is
> really contested but I haven't exhaustively reviewed everyone's opinion so
> please excuse me if I have marginalized you. If you do contest that I would
> be interested in hearing it.
> >>>>
> >>>> Further, it appears clear that the original author intended
> organizations operating full network nodes would provide connectivity to
> light clients and these light clients would make up the majority of the
> user base. This is completely consistent with current trends in Internet
> consumption, e.g. tablets and phones are becoming more preferred to even
> owning a traditional computer. Having the system be entirely decentralized
> and trustless for every client does not appear to me to be the original
> design goal. Yes, the whitepaper speaks of the design goal as not having a
> need for a trusted third party but it does not say that some amount of
> trust won't be preferred by a majority of users. In fact, in the SPV
> section it implies some amount of localized trust is perhaps a necessary
> trade-off and maybe businesses should still run their own full network node
> if they want the stronger completely trustless guarantee. The global
> decentralized consensus appears meant to make the network
> >>> r
> >>>> esilient to a single government or other adversary's ability to shut
> the network down. If you really want to trust no one it is your option at a
> cost and should be possible by design. The author further gives evidence
> that they believe Moore's observation would keep the idea of running a full
> network node a practical one at global scale for perpetuity. It does not
> appear as if they intended for every individual to run one at home nor in
> their pocket.
> >>>>
> >>>> If my interpretation seems incorrect please do point it out. I hope
> this hasn't been too off-topic and distracting. The original author's
> engineering ingenuity is what gave me any interest in this project so
> re-visiting their design and scaling intentions might be helpful for us to
> move forward-- together.
> >>>>
> >>>> _______________________________________________
> >>>> bitcoin-dev mailing list
> >>>> bitcoin-dev at lists.linuxfoundation.org
> >>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >>>
> >>> _______________________________________________
> >>> bitcoin-dev mailing list
> >>> bitcoin-dev at lists.linuxfoundation.org
> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
> >
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/4f6678e9/attachment.html>

From s7r at sky-ip.org  Sun Jun 28 15:28:41 2015
From: s7r at sky-ip.org (s7r)
Date: Sun, 28 Jun 2015 18:28:41 +0300
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CABm2gDovynxmZmf_voz-19mmb5k0R4Snxcucx-WObt_stkAL9A@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>	<20150627074259.GA25420@amethyst.visucore.com>	<20150627095501.C59B541A40@smtp.hushmail.com>	<20150627100400.GC25420@amethyst.visucore.com>	<20150627102912.06E2641A3E@smtp.hushmail.com>	<CABm2gDpnzjph5SKTf+8GWgwe+njS=k2GNm9uL73RC-EV=Y5wug@mail.gmail.com>	<20150627121016.2360041A3E@smtp.hushmail.com>
	<CABm2gDovynxmZmf_voz-19mmb5k0R4Snxcucx-WObt_stkAL9A@mail.gmail.com>
Message-ID: <559012A9.3050606@sky-ip.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

+1 for this  Jorge.
Agreed the majority should not be able to enforce rules over the
minority. But if the majority will just leave and create an altcoin or
whatever, this will leave the remaining minority with a less value (or
even 0 value) product or service. By enforcing some rules agreed by
the majority or supermajority, the minority will be dragged along and
even so with rules they haven't signed up for, they will still have a
product or service which is worth something.

That is why we have to be very careful into deciding this.

This debate is good, there are lots of valid points from smart people
and I am happy to see there is so much interest in this project, and
regardless if the blocksize hard cap will be changed or not I do hope,
if a hardfork will happen, it will also include a smart change that
will allow future changes (requiring hardforks) simpler, with less
headache and risks involved.

On 6/28/2015 3:13 PM, Jorge Tim?n wrote:
> On Sat, Jun 27, 2015 at 2:10 PM, NxtChg <nxtchg at hush.com> wrote:
>> 
>> On 6/27/2015 at 2:04 PM, "Jorge Tim?n" <jtimon at jtimon.cc> wrote:
>> 
>>> But that option is not unknown...
>> 
>> It is, until it actually happens. Before that, anything is a
>> speculation. That's why risk is attached to both "doing nothing"
>> and "raising the limit".
> 
> Fortunately we have a lower limit in the standard mining policy to
> see if the skies turn purple when we hit that limit like some
> people predict.
> 
>> Various people perceive these risks differently and there is no
>> clear mechanism currently to somehow gauge what the majority
>> wants. So it's tempting to just give up and say: let's do
>> nothing.
>> 
>> In this situation, doing a "software fork" seems like the only
>> way to actually see how many people/interests are in favor of
>> bigger blocks.
> 
> But this is NOT a way to see the majority of anything. I can run
> 1000 nodes, have you heard of sybil attacks? There's simply no
> decentralized way of voting that works. Otherwise we could vote on
> each block instead of using proof of work. Miners voting on size is
> also ridiculous since big miners have an incentive to completely
> remove the limit and make smaller miners unprofitable.
> 
>> (Whether the majority has a moral right to dictate the minority
>> is a tough philosophical question, which should probably be left
>> out of this discussion :)
> 
> No, this is very important. The majority has no right to dictate
> on the minority. If the majority of bitcoiners wanted demurrage
> (and we actually had a working method for "measuring majorities"),
> the minority would still say "these are not the rules we signed up
> for, go make freicoin as a separate chain". And that is very
> reasonable. If some people want a more centralized version of
> Bitcoin they can create an altcoin too. Doesn't dogecoin already
> have big blocks? _______________________________________________ 
> bitcoin-dev mailing list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (MingW32)

iQEcBAEBCAAGBQJVkBKpAAoJEIN/pSyBJlsR4FMIAITS10rtx4Uw20WjFPkWZRB3
ucRRPncXkKehQlFd9cY6sgPAUk50rM0FSpm69Ra1KnawNLLxkgpzTGZk1iTHbGe8
JlWoTduLOyvInVXCdM8l71TVWoyt8rDZpg1KAsaMmMi9UvstHZPGZp85XScxhYyC
uBHv1Hm7oeszPBkjGsB9B9mF/gH8naCjcNva+XbcgsKNM681xbOeJQ9qW0GOwq+Z
j4ocY77G8AENZkhCy2KKiJrz0ZBVDbnJAos06uKrdxhUPBwliVpyJW96aFsRp/sL
SNqTkpSmvxgSUBHCrRoWiBf/xo06W9QeoEfoROfgFkSTcUlPWqCJHxqwOLk2VrY=
=eUgF
-----END PGP SIGNATURE-----

From jtimon at jtimon.cc  Sun Jun 28 15:35:17 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sun, 28 Jun 2015 17:35:17 +0200
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <558FF307.9010606@bitcoins.info>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
	<558B7352.90708@bitcoins.info>
	<CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>
	<558D46EC.6050300@bitcoins.info>
	<CABm2gDojz6PHdRKxRkMZh-gfYLdcekVfeQMz5r_4EYc-j5tn+w@mail.gmail.com>
	<558E9C06.9080901@bitcoins.info>
	<CABm2gDpTuEoaXZ_M166UEe+z6t-hq39yJaF3K+aL_Ra836jnSg@mail.gmail.com>
	<558FF307.9010606@bitcoins.info>
Message-ID: <CABm2gDpHL3RUXUK_PAiPv49EcxgjBSjPBwf=4VLhW0Y28OE=FQ@mail.gmail.com>

On Sun, Jun 28, 2015 at 3:13 PM, Milly Bitcoin <milly at bitcoins.info> wrote:
> I never said something was approved by garzik added something after it was
> opposed.  What I said was a proposal was made and 4 people commented on the
> Github.  He then tweeted there was near universal approval before most
> people even heard about the subject.  It was not controversial but i was
> pointing out the arrogance of some of the developers.  He considers the
> entire universe of Bitcoin stakeholders to be a very small group of
> insiders, not the entire universe of Bitcoin users.  Another thing I have
> seen on Github for bitcoin.org is how some the maintainers change the rules
> on the fly.  Sometimes they say a proposal had no objections so it is
> approved.  Other times they say a proposal has no support so it is rejected.

Ok, I misunderstood.
Well, the fact is that the number of capable reviewers is quite small.
If more companies hired and trained more developers to become bitcoin
core developers that situation could change, but that's where we are
now.

> You are also trying to say that the core developers actually have little
> influence and are not "deciders" because anyone can fork the code.  That has
> already been discussed at length and such an argument is faulty because
> there is a constraint that your software is incompatible with everyone else.

Only if you change the consensus rules (which are, in fact, a
relatively small part of the code).
Mike mantains Bitcoin XT and that's fine, Peter Todd maintains patches
with the replace by fee policy, libbitcoin also changes many
non-consensus things, there's code written in other languages...
There's multiple counter-examples to your claim of that argument being faulty.
Seriously, forking the project is just one click. You should try it
out like at least 9627 other people have done.
>From there, you can pay your own developers (if you don't know how to
code yourself) and maybe they're also fine being insulted by you as
part of the job.
What you still can't do is unilaterally change the consensus rules of
a running p2p consensus system, because you cannot force the current
users to run any software they don't want to run.

> The issue is that there is no way right now to change the consensus rules
> except to go through the core maintainer unless you get everybody on the
> network to switch to your fork.  People who keep repeating that the software
> development is "decentralized because you fork the code" without explaining
> the constraints are just cultists.

Please, stop the cultist crap. Maybe insulting people like that is how
you got people to call you a troll.
But, yes, you are right: there's no known mechanism for safely
deploying controversial changes to the consensus rules

> The discussion has nothing to do with who has the position now and I never
> said he has "control over the consensus rules."  The maintainer has a very
> large influence way beyond anyone else.  As for your claim that I want
> someone hurt because I am explaining the process, that is ridiculous.  If
> the Core maintainers did not have significant influence to change the
> consensus rules then everybody would not be spending all this time lobbying
> them to have them changed.

Well, if you don't think he has control over the consensus rules we're
advancing.
I think that was implied from some of your previous claims. He is no
"decider" on consensus changes.
Insisting on it can indeed get him hurt, so I'm happy that you're
taking that back (or clarifying that really wasn't your position).
Influence is very relative and not only core devs have "influence".
Maybe Andreas Antonopolous has more "influence" than I have because he
is a more public figure?
Well, that's fine I think. I don't see the point in discussing who has
how much influence.

> The outside influences and stake of the developer is a relevant topic.  The
> same types of things are discussed on this list all the time in the context
> of miners, users, merchants, and exchanges.  Again, the developers try to
> place themselves on some kind of pedestal where they are the protectors and
> pure and everyone else (miners, users, merchants) are abusers, spammers,
> attackers, scammers, cheaters, etc.  It is Garzik who voluntarily made an
> issue of how many bitcoins he holds and he made that issue in the same place
> where he announces many of the technical issues.  It is very relevant that
> he has a minimal stake in Bitcoin holdings yet he goes around making major
> decisions about Bitcoin and trying to dictate who is allowed to participate
> in discussions.  If a core developer has minimal stake in Bitcoin yet has
> major veto power over code change that is a problem.

Please, don't generalize. I don't think I put myself in any kind of pedestal.
That is insulting to me and many others (you may not even know and
you're insulting them).
And I think my Bitcoin holdings are completely irrelevant when judging
my contributions to the software: either they're good or not, and who
I am or how many Bitcoins I have at any given time shouldn't matter.
Again, nobody forces you to use our software, as said there's
alternatives (including forking the project right now).

> You are correct that you cannot give power to any person over the Internet
> which is why some kind of process needs to be developed that does not
> involve trying to convince one person to make the changes or a system that
> depends on unwritten, ever-changing rules maintained by a handful of people.

Well, for now the process we have is seeking consensus, and although
our definition of "uncontroversial" is very vague, I think it is quite
obvious when a proposed change is not "uncontroversial" (like in the
block size debate).
It seems to me that any other "formal process" would imply
centralization in the decision making of the consensus rules (and from
there you only have to corrupt that centralized organization to
destroy Bitcoin).

From jtimon at jtimon.cc  Sun Jun 28 15:45:24 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sun, 28 Jun 2015 17:45:24 +0200
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <559012A9.3050606@sky-ip.org>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<20150627095501.C59B541A40@smtp.hushmail.com>
	<20150627100400.GC25420@amethyst.visucore.com>
	<20150627102912.06E2641A3E@smtp.hushmail.com>
	<CABm2gDpnzjph5SKTf+8GWgwe+njS=k2GNm9uL73RC-EV=Y5wug@mail.gmail.com>
	<20150627121016.2360041A3E@smtp.hushmail.com>
	<CABm2gDovynxmZmf_voz-19mmb5k0R4Snxcucx-WObt_stkAL9A@mail.gmail.com>
	<559012A9.3050606@sky-ip.org>
Message-ID: <CABm2gDrWfJwk3jQCC0+7JWkXAWWSuRaXLwLeUQB23GNPOQkaMA@mail.gmail.com>

On Sun, Jun 28, 2015 at 5:28 PM, s7r <s7r at sky-ip.org> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA256
>
> +1 for this  Jorge.
> Agreed the majority should not be able to enforce rules over the
> minority. But if the majority will just leave and create an altcoin or
> whatever, this will leave the remaining minority with a less value (or
> even 0 value) product or service. By enforcing some rules agreed by
> the majority or supermajority, the minority will be dragged along and
> even so with rules they haven't signed up for, they will still have a
> product or service which is worth something.

If the Schism fork goes wrong (ie 2 chains coexist in parallel for
long) the result may as well be that NOBODY will be left any value.
Both the majority and the minority can lose simultaneusly.
See https://github.com/jtimon/bips/blob/bip-forks/bip-forks.org#schism1-hardforks
That kind of hardfork is basically like forcing the users to go to war
against each other.
Really, I don't think civil war is an exaggerated analogy.

> That is why we have to be very careful into deciding this.
>
> This debate is good, there are lots of valid points from smart people
> and I am happy to see there is so much interest in this project, and
> regardless if the blocksize hard cap will be changed or not I do hope,
> if a hardfork will happen, it will also include a smart change that
> will allow future changes (requiring hardforks) simpler, with less
> headache and risks involved.

That sounds great. Do you have any proposal in mind?
I really want hardforks to be made, I just don't want to kill the
system attempting it.

From jtimon at jtimon.cc  Sun Jun 28 15:51:54 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sun, 28 Jun 2015 17:51:54 +0200
Subject: [bitcoin-dev] Original Vision
In-Reply-To: <CAOG=w-vQ+bCyT8mLNBvLDhhQzCHXxaRos-3VFDGkCsxvCiX3jA@mail.gmail.com>
References: <1164261435450448@web14h.yandex.ru> <558F583C.1000500@gmail.com>
	<2A94BDF7-F265-4D36-B438-DC4F432E1C67@gmail.com>
	<558F8634.90904@gmail.com>
	<38C2E2A1-EB6C-48EB-8FA1-7FAA97B3E911@gmail.com>
	<CAOG=w-vQ+bCyT8mLNBvLDhhQzCHXxaRos-3VFDGkCsxvCiX3jA@mail.gmail.com>
Message-ID: <CABm2gDq31doL62a2HwY8kSuB1zPMhz6OPR0Qa9X7thbZBdNTOQ@mail.gmail.com>

On Sun, Jun 28, 2015 at 5:23 PM, Mark Friedenbach <mark at friedenbach.org> wrote:
> UTXO commitments are the nominal solution here. You commit the validator state in each block, and then you can prove things like a negative by referencing that state commitment. The trouble is this requires maintaining a hash tree commitment over validator state, which turns out to be insanely expensive. With the UTXO commitment scheme (the others are not better) that ends up requiring 15 - 22x more I/O during block validation. And I/O is presently a limiter to block validation speed. So if you thought 8MB was what bitcoin today could handle, and you also want this commitment scheme for fraud proofs, then you should be arguing for a block size limit decrease (to 500kB), not increase.

What about a TXO and a STXO O(1)-append commitment? That shouldn't
cause that much overhead and you can build UTXO from TXO - STXO.
I know it's not so efficient in some respects but it scales better I think.

From ibrightly at gmail.com  Sun Jun 28 16:01:31 2015
From: ibrightly at gmail.com (Ivan Brightly)
Date: Sun, 28 Jun 2015 12:01:31 -0400
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CABm2gDo8ZmEO5SHwZVLX0Ajg3vUu2OoJkz2urA61wAoVm_f+zA@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<20150627095501.C59B541A40@smtp.hushmail.com>
	<20150627100400.GC25420@amethyst.visucore.com>
	<20150627102912.06E2641A3E@smtp.hushmail.com>
	<CABm2gDpnzjph5SKTf+8GWgwe+njS=k2GNm9uL73RC-EV=Y5wug@mail.gmail.com>
	<20150627121016.2360041A3E@smtp.hushmail.com>
	<CABm2gDovynxmZmf_voz-19mmb5k0R4Snxcucx-WObt_stkAL9A@mail.gmail.com>
	<CAAre=ySbA-JaAZoU1AsGHTZoYOwkeiRnfkYPjMV6yEa_r+SYKA@mail.gmail.com>
	<CABm2gDo8ZmEO5SHwZVLX0Ajg3vUu2OoJkz2urA61wAoVm_f+zA@mail.gmail.com>
Message-ID: <CAAre=yQvp68CaWmGfBGhehxAdz2HJGYU0nuxrn+wskyRYFfcSQ@mail.gmail.com>

I don't think that rights are a pillar of how bitcoin works - rather I
would say it's a matter of aligned incentives. The fact is that the
majority technically *can* dictate through PoW and acceptance. The only
reason that the majority would not chose this path is because there is
greater economic value in consensus, whether perceived or realized.

If bitcoin were about "doing the right thing" there wouldn't be a need for
PoW since no individual would be incentivized to double spend.

On Sun, Jun 28, 2015 at 11:05 AM, Jorge Tim?n <jtimon at jtimon.cc> wrote:

> On Sun, Jun 28, 2015 at 3:51 PM, Ivan Brightly <ibrightly at gmail.com>
> wrote:
> > On Sun, Jun 28, 2015 at 8:13 AM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
> >>
> >>
> >> No, this is very important. The majority has no right to dictate on
> >> the minority.
> >
> >
> > While an interesting philosophical question, I don't think that this is
> > accurate. First off, bitcoin doesn't imbue  any 'rights' on individuals
> - it
> > provides the choice of participating or not, nothing more.
>
> I think you're not contradicting me: ff there's not rights built into
> the system, the majority has no "right to dictate" anything.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/a57d5395/attachment.html>

From mark at friedenbach.org  Sun Jun 28 16:15:28 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Sun, 28 Jun 2015 09:15:28 -0700
Subject: [bitcoin-dev] Original Vision
In-Reply-To: <CABm2gDq31doL62a2HwY8kSuB1zPMhz6OPR0Qa9X7thbZBdNTOQ@mail.gmail.com>
References: <1164261435450448@web14h.yandex.ru> <558F583C.1000500@gmail.com>
	<2A94BDF7-F265-4D36-B438-DC4F432E1C67@gmail.com>
	<558F8634.90904@gmail.com>
	<38C2E2A1-EB6C-48EB-8FA1-7FAA97B3E911@gmail.com>
	<CAOG=w-vQ+bCyT8mLNBvLDhhQzCHXxaRos-3VFDGkCsxvCiX3jA@mail.gmail.com>
	<CABm2gDq31doL62a2HwY8kSuB1zPMhz6OPR0Qa9X7thbZBdNTOQ@mail.gmail.com>
Message-ID: <CAOG=w-u4UVuuV=+9-8u+ZHLgf7CCqZ17wosQBit4CZiG738JFQ@mail.gmail.com>

Assuming randomly-picked outputs, it's actually worse. The slowdown factor
has to do with the depth of the tree, and TXO and STXO trees are always
growing. It's still complexity O(log N), but with TXO/STXO N is the size of
the entire block chain history, whereas with UTXO it's just the set of
unspent transaction outputs.

Of course that's not a fair assumption since in an insertion-ordered tree
using the Merkle mountain range data structure would have significantly
shorter paths for recent outputs. But the average case might be about the
same, and it comes with a slew of other tradeoffs that make it hard to
compare head-to-head in the abstract. Ultimately both need to be written
and benchmarked.

But it is not the case that TXO/STXO gives you constant time updates. The
append-only TXO tree might be close to that, but you'd still need the spent
or unspent tree which is not insertion ordered. There are alternatives like
updating the TXO tree and requiring blocks and transactions to carry proofs
with them (so validators can be stateless), but that pushes the same
(worse, actually) problem to whoever generated or assembled the proof. It
may be a tradeoff worth making, but it's not an easy answer...

On Sun, Jun 28, 2015 at 8:51 AM, Jorge Tim?n <jtimon at jtimon.cc> wrote:

> On Sun, Jun 28, 2015 at 5:23 PM, Mark Friedenbach <mark at friedenbach.org>
> wrote:
> > UTXO commitments are the nominal solution here. You commit the validator
> state in each block, and then you can prove things like a negative by
> referencing that state commitment. The trouble is this requires maintaining
> a hash tree commitment over validator state, which turns out to be insanely
> expensive. With the UTXO commitment scheme (the others are not better) that
> ends up requiring 15 - 22x more I/O during block validation. And I/O is
> presently a limiter to block validation speed. So if you thought 8MB was
> what bitcoin today could handle, and you also want this commitment scheme
> for fraud proofs, then you should be arguing for a block size limit
> decrease (to 500kB), not increase.
>
> What about a TXO and a STXO O(1)-append commitment? That shouldn't
> cause that much overhead and you can build UTXO from TXO - STXO.
> I know it's not so efficient in some respects but it scales better I think.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/0d600d01/attachment-0001.html>

From milly at bitcoins.info  Sun Jun 28 16:23:25 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Sun, 28 Jun 2015 12:23:25 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CABm2gDpHL3RUXUK_PAiPv49EcxgjBSjPBwf=4VLhW0Y28OE=FQ@mail.gmail.com>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
	<558B7352.90708@bitcoins.info>
	<CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>
	<558D46EC.6050300@bitcoins.info>
	<CABm2gDojz6PHdRKxRkMZh-gfYLdcekVfeQMz5r_4EYc-j5tn+w@mail.gmail.com>
	<558E9C06.9080901@bitcoins.info>
	<CABm2gDpTuEoaXZ_M166UEe+z6t-hq39yJaF3K+aL_Ra836jnSg@mail.gmail.com>
	<558FF307.9010606@bitcoins.info>
	<CABm2gDpHL3RUXUK_PAiPv49EcxgjBSjPBwf=4VLhW0Y28OE=FQ@mail.gmail.com>
Message-ID: <55901F7D.4000001@bitcoins.info>

The core maintainer has always been in control of the consensus rules.  
Satoshi came up with the rules and put them in there.  Since then any 
changes to any part of the code go through the core maintainer.  It 
looks to me as if people are saying it somehow changed along the way 
because they don't want to hurt people's feeling, upset up, get them to 
quit, etc. Sure there are checks and balances and people don't have to 
use the main code base but if they change the consensus rules they are 
incompatible.

The notion that because people can download different rules and run them 
is interesting from a theoretical perspective but that is constrained by 
the network effect.  I can say the US government is not the "decider" of 
laws because I can vote them out, recall them, challenge things in 
court, or secede and start my own country.  You can also say the 
judge/jury in a criminal court case is not a "decider" because the 
president can always issue a pardon.  But those points are generally not 
useful in a practical sense.

The issue about the developers is the tremendous influence they have to 
veto any changes.  I don't have veto power yet I have more bitcoins than 
garzik says he has.  The whole Bitcoin software development system is 
subject to attack from just a couple of people who have this veto 
power.  With all the crying and moaning about centralization on this 
list I would think that would be a concern.

Russ



On 6/28/2015 11:35 AM, Jorge Tim?n wrote:
> On Sun, Jun 28, 2015 at 3:13 PM, Milly Bitcoin <milly at bitcoins.info> wrote:
>> I never said something was approved by garzik added something after it was
>> opposed.  What I said was a proposal was made and 4 people commented on the
>> Github.  He then tweeted there was near universal approval before most
>> people even heard about the subject.  It was not controversial but i was
>> pointing out the arrogance of some of the developers.  He considers the
>> entire universe of Bitcoin stakeholders to be a very small group of
>> insiders, not the entire universe of Bitcoin users.  Another thing I have
>> seen on Github for bitcoin.org is how some the maintainers change the rules
>> on the fly.  Sometimes they say a proposal had no objections so it is
>> approved.  Other times they say a proposal has no support so it is rejected.
> Ok, I misunderstood.
> Well, the fact is that the number of capable reviewers is quite small.
> If more companies hired and trained more developers to become bitcoin
> core developers that situation could change, but that's where we are
> now.
>
>> You are also trying to say that the core developers actually have little
>> influence and are not "deciders" because anyone can fork the code.  That has
>> already been discussed at length and such an argument is faulty because
>> there is a constraint that your software is incompatible with everyone else.
> Only if you change the consensus rules (which are, in fact, a
> relatively small part of the code).
> Mike mantains Bitcoin XT and that's fine, Peter Todd maintains patches
> with the replace by fee policy, libbitcoin also changes many
> non-consensus things, there's code written in other languages...
> There's multiple counter-examples to your claim of that argument being faulty.
> Seriously, forking the project is just one click. You should try it
> out like at least 9627 other people have done.
> >From there, you can pay your own developers (if you don't know how to
> code yourself) and maybe they're also fine being insulted by you as
> part of the job.
> What you still can't do is unilaterally change the consensus rules of
> a running p2p consensus system, because you cannot force the current
> users to run any software they don't want to run.
>
>> The issue is that there is no way right now to change the consensus rules
>> except to go through the core maintainer unless you get everybody on the
>> network to switch to your fork.  People who keep repeating that the software
>> development is "decentralized because you fork the code" without explaining
>> the constraints are just cultists.
> Please, stop the cultist crap. Maybe insulting people like that is how
> you got people to call you a troll.
> But, yes, you are right: there's no known mechanism for safely
> deploying controversial changes to the consensus rules
>
>> The discussion has nothing to do with who has the position now and I never
>> said he has "control over the consensus rules."  The maintainer has a very
>> large influence way beyond anyone else.  As for your claim that I want
>> someone hurt because I am explaining the process, that is ridiculous.  If
>> the Core maintainers did not have significant influence to change the
>> consensus rules then everybody would not be spending all this time lobbying
>> them to have them changed.
> Well, if you don't think he has control over the consensus rules we're
> advancing.
> I think that was implied from some of your previous claims. He is no
> "decider" on consensus changes.
> Insisting on it can indeed get him hurt, so I'm happy that you're
> taking that back (or clarifying that really wasn't your position).
> Influence is very relative and not only core devs have "influence".
> Maybe Andreas Antonopolous has more "influence" than I have because he
> is a more public figure?
> Well, that's fine I think. I don't see the point in discussing who has
> how much influence.
>
>> The outside influences and stake of the developer is a relevant topic.  The
>> same types of things are discussed on this list all the time in the context
>> of miners, users, merchants, and exchanges.  Again, the developers try to
>> place themselves on some kind of pedestal where they are the protectors and
>> pure and everyone else (miners, users, merchants) are abusers, spammers,
>> attackers, scammers, cheaters, etc.  It is Garzik who voluntarily made an
>> issue of how many bitcoins he holds and he made that issue in the same place
>> where he announces many of the technical issues.  It is very relevant that
>> he has a minimal stake in Bitcoin holdings yet he goes around making major
>> decisions about Bitcoin and trying to dictate who is allowed to participate
>> in discussions.  If a core developer has minimal stake in Bitcoin yet has
>> major veto power over code change that is a problem.
> Please, don't generalize. I don't think I put myself in any kind of pedestal.
> That is insulting to me and many others (you may not even know and
> you're insulting them).
> And I think my Bitcoin holdings are completely irrelevant when judging
> my contributions to the software: either they're good or not, and who
> I am or how many Bitcoins I have at any given time shouldn't matter.
> Again, nobody forces you to use our software, as said there's
> alternatives (including forking the project right now).
>
>> You are correct that you cannot give power to any person over the Internet
>> which is why some kind of process needs to be developed that does not
>> involve trying to convince one person to make the changes or a system that
>> depends on unwritten, ever-changing rules maintained by a handful of people.
> Well, for now the process we have is seeking consensus, and although
> our definition of "uncontroversial" is very vague, I think it is quite
> obvious when a proposed change is not "uncontroversial" (like in the
> block size debate).
> It seems to me that any other "formal process" would imply
> centralization in the decision making of the consensus rules (and from
> there you only have to corrupt that centralized organization to
> destroy Bitcoin).
>



From raystonn at hotmail.com  Sun Jun 28 16:32:05 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Sun, 28 Jun 2015 09:32:05 -0700
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl><CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com><CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>
	<CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>
Message-ID: <COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>

Write coalescing works fine when you have multiple writes headed to the same 
(contiguous) location.  Will lightning be useful when we have more unique 
transactions being sent to different addresses, and not just multiple 
transactions between the same sender and address?  I have doubts.


-----Original Message----- 
From: Adam Back
Sent: Sunday, June 28, 2015 5:37 AM
To: Benjamin
Cc: bitcoin-dev at lists.linuxfoundation.org
Subject: Re: [bitcoin-dev] A Proposed Compromise to the Block Size Limit

On 28 June 2015 at 12:29, Benjamin <benjamin.l.cordes at gmail.com> wrote:
> I agree that naive scaling will likely lead to bad outcomes. They might 
> have
> the advantage though, as this would mean not changing Bitcoin.

Sure we can work incrementally and carefully, and this is exactly what
Bitcoin has been doing, and *must* do for safety and security for the
last 5 years!
That doesnt mean that useful serious improvements have not been made.

> Level2 and Lightning is not well defined. If you move money to a third
> party, even if it is within the constrained of a locked contract, then I
> don't think that will solve the issues.

I think you misunderstand how lightning works.  Every lightning
transaction *is* a valid bitcoin transaction that could be posted to
the Bitcoin network to reclaim funds if a hub went permanently
offline.  It is just that while the hubs involved remain in service,
there is no need to do so.  This is why it has been described as a
(write coalescing) write cache layer for Bitcoin.>

I believe people expect lightning to be peer 2 peer like bitcoin.

Adam
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev 


From venzen at mail.bihthai.net  Sun Jun 28 16:37:18 2015
From: venzen at mail.bihthai.net (Venzen Khaosan)
Date: Sun, 28 Jun 2015 23:37:18 +0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <CACq0ZD5WV-J1H7QA0F2wnErXVFJ3MSxWtQidPhVwaxauoHQz_A@mail.gmail.com>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>	<20150627074259.GA25420@amethyst.visucore.com>	<20150627095501.C59B541A40@smtp.hushmail.com>	<558E78CB.7070207@mail.bihthai.net>
	<CACq0ZD5WV-J1H7QA0F2wnErXVFJ3MSxWtQidPhVwaxauoHQz_A@mail.gmail.com>
Message-ID: <559022BE.2060503@mail.bihthai.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 06/28/2015 02:55 AM, Aaron Voisine wrote:
> On Sat, Jun 27, 2015 at 3:19 AM, Venzen Khaosan
> <venzen at mail.bihthai.net <mailto:venzen at mail.bihthai.net>> wrote:
> 
> 
> That is a false assumption. Given the increased adoption of Bitcoin
> by users and businesses during the past year, does the price chart 
> reflect greater value or price? Of course not, the price chart is
> at terminal lows. Fact not fiction.
> 
> 
> You're not taking speculative cycles into account. For most of 2013
> the price was in the $100 range. Adoption as a store-of-value is
> what determines the price over the long term, as with any monetary
> commodity.

Aaron, I am most definitely taking speculative cycles into account - I
write Bitcoin market analysis reports on a daily basis.

Since discussion is exploring notions of "value" and assumptions about
"what increases value" I will post the following.

You're correct to point to the speculative influence, since Bitcoin
having the fundamentals it does, and being a commodity that floats
freely in the market, without centralized control - plus being
unregulated - it is a speculator's wildest dream come true. In this
case its exchange value (to fiat) is based on social mood and
perception and not on underlying (fundamental) value. I think that is
what you imply, too.

What is specifically relevant to the wider discussion, is your mention
of *Commodity Money*, because the term accurately describes a major
facet of Bitcoin's function and role.

Bitcoin's exchange rate, as a commodity money floating freely in the
market, will go up and down according to speculative cycles and we
should conceptually separate its valuation in fiat terms, from its
fundamental value which is: mathematical consensus, cryptographic
transaction security and censorship resistance, etc. These values are
critically reliant on Bitcoin's *degree of decentralization* for them
to remain true and for Bitcoin to retain its meaning, and, therefore,
its value. That is what I point out when I say "greater adoption has
not reflected in the price chart". And that may remain the case for
evermore because the value is in the protocol, the blockchain and its
utility and degree of decentralization, not in the chart or the size
of the user base (however, I'm by no means proposing that the user
base be limited - only that it be grown with primary reference to the
requirements imposed by decentralization).

I argue that we already know what the value of Bitcoin is. In its
current form Bitcoin most likely fulfills 80% or 90% of its eventual
fully evolved value. Increased adoption will not strengthen the
fundamentals, so let's proceed with scaling that will safeguard
Bitcoin's fundamental value and implement protections that ensure
quality of decentralization.

Given the start of a new speculative cycle for Bitcoin and the
possibility of a global liquidity crisis in the coming months or
years, block utilization may increase more rapidly than suggested by
current trends. Utilization may ramp up in a spike, so I agree with
suggestions made here for starting tests of a larger blocksize
(2-8MB), or for speeding up blocktime (whichever is technically
preferred).

Gavin Andresen has committed (if i recall correctly) to tests of 8MB
blocks, so a different size test can be agreed by Core developers.
Once test data and fork outcomes can be reviewed then decision making
has actual parameters to proceed from.

Venzen Khaosan


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVkCK8AAoJEGwAhlQc8H1m7c0IAKBjj3QHhBh5cqDKrVDpPsfv
GEdmjC4CVC+OCZR5TjJ71fsbx9s/9Yh1sglKPfKmInBbgUFeLuermpTnAC+GAEq9
rTPJgGKIIqax2vU9E8fLYrUC/uNk8wdB7PG50tQG+kOWATZOXWimy3Qi1hxOFLNI
bWhRlwIW4tO9HTz6M1WLNyv6T1G7eaUGskW3xODgmr69/ISbG4f/uv7Yy1leEu+r
64hwrswBkvIWeLvPJ3lkuA862HZxbLRkoehEpH3ULTUQ3bDJ1kUkSzi9Z4rwOfHG
p02hs69FVrfHckTtV7wQ4owHekiUT8hjob4V/3YrN0/qMGs4JmrxfyerfZ9GQ9o=
=hc1s
-----END PGP SIGNATURE-----

From mark at friedenbach.org  Sun Jun 28 17:12:35 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Sun, 28 Jun 2015 10:12:35 -0700
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>
	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>
	<CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>
	<CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>
	<COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>
Message-ID: <CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>

Think in terms of participants, not addresses. A participant in the
lightning network has a couple of connections to various hubs, from which
the participant is able to send or receive coin. The user is able to send
coins to anyone connected to the lightning network by means of an atomic
transaction through any path of the network. But the only payment from them
that ever hits the chain is their settlement with the hub.

Imagine there was a TCP/IP data chain and corresponding lightning network.
Everyone connected to the network has an "IP" channel with their ISP.
Through this channel they can send data to anywhere on the network, and a
traceroute shows what hops the data would take. But when settlement
actually occurs all the network sees is the net amount of data that has
gone through each segment -- without any context. There's no record
preserved on-chain of who sent data to whom, just that X bytes went through
the pipe on the way to somewhere unspecified.

So it is with lightning payment networks. You open a channel with a hub and
through that channel send coins to anyone accessible to the network.
Channels only close when a participant needs the funds for non-lightning
reasons, or when hubs need to rebalance. And when they do, observers on the
chain learn nothing more than how much net coin moved across that single
link. They learn nothing about where that coin eventually ended up.

So back to your original question, each channel can be considered to have a
pseudonymous identity, and each new channel given a new identity. Channel
closures can even be coinjoin'd when the other party is cooperating. But
ultimately, lightning usefully solves a problem where participants have
semi-long lived payment endpoints.

On Sun, Jun 28, 2015 at 9:32 AM, Raystonn . <raystonn at hotmail.com> wrote:

> Write coalescing works fine when you have multiple writes headed to the
> same (contiguous) location.  Will lightning be useful when we have more
> unique transactions being sent to different addresses, and not just
> multiple transactions between the same sender and address?  I have doubts.
>
>
> -----Original Message----- From: Adam Back
> Sent: Sunday, June 28, 2015 5:37 AM
> To: Benjamin
> Cc: bitcoin-dev at lists.linuxfoundation.org
> Subject: Re: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
>
>
> On 28 June 2015 at 12:29, Benjamin <benjamin.l.cordes at gmail.com> wrote:
>
>> I agree that naive scaling will likely lead to bad outcomes. They might
>> have
>> the advantage though, as this would mean not changing Bitcoin.
>>
>
> Sure we can work incrementally and carefully, and this is exactly what
> Bitcoin has been doing, and *must* do for safety and security for the
> last 5 years!
> That doesnt mean that useful serious improvements have not been made.
>
>  Level2 and Lightning is not well defined. If you move money to a third
>> party, even if it is within the constrained of a locked contract, then I
>> don't think that will solve the issues.
>>
>
> I think you misunderstand how lightning works.  Every lightning
> transaction *is* a valid bitcoin transaction that could be posted to
> the Bitcoin network to reclaim funds if a hub went permanently
> offline.  It is just that while the hubs involved remain in service,
> there is no need to do so.  This is why it has been described as a
> (write coalescing) write cache layer for Bitcoin.>
>
> I believe people expect lightning to be peer 2 peer like bitcoin.
>
> Adam
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/166bb4cb/attachment-0001.html>

From benjamin.l.cordes at gmail.com  Sun Jun 28 17:18:03 2015
From: benjamin.l.cordes at gmail.com (Benjamin)
Date: Sun, 28 Jun 2015 19:18:03 +0200
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>
	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>
	<CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>
	<CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>
	<COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>
	<CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>
Message-ID: <CAOoPuRaR_A3ani3d_KVjc4oTfmLYbP52rLsqBEQMZ4gajqoV8A@mail.gmail.com>

"You open a channel with a hub and through that channel send coins to
anyone accessible to the network."

Define hub *precisely* and you will find there are
some significant problems here.
a) does everyone know each other in the network? In Bitcoin transacting
parties exchange keys out of band. How do I know that Alice is owner of a
pubkey? I don't, and if don't know Alice I'm out of luck and can't transact
with here (or trust another PKI).
b) hubs need incentives. There are not going to put up collateral just for
nothing.
c) how is complexity reduced? I would speculate that most transactions are
one-time transactions in the time frame of days.

LT is a very interesting idea, but far from actual implementation.

On Sun, Jun 28, 2015 at 7:12 PM, Mark Friedenbach <mark at friedenbach.org>
wrote:

> Think in terms of participants, not addresses. A participant in the
> lightning network has a couple of connections to various hubs, from which
> the participant is able to send or receive coin. The user is able to send
> coins to anyone connected to the lightning network by means of an atomic
> transaction through any path of the network. But the only payment from them
> that ever hits the chain is their settlement with the hub.
>
> Imagine there was a TCP/IP data chain and corresponding lightning network.
> Everyone connected to the network has an "IP" channel with their ISP.
> Through this channel they can send data to anywhere on the network, and a
> traceroute shows what hops the data would take. But when settlement
> actually occurs all the network sees is the net amount of data that has
> gone through each segment -- without any context. There's no record
> preserved on-chain of who sent data to whom, just that X bytes went through
> the pipe on the way to somewhere unspecified.
>
> So it is with lightning payment networks. You open a channel with a hub
> and through that channel send coins to anyone accessible to the network.
> Channels only close when a participant needs the funds for non-lightning
> reasons, or when hubs need to rebalance. And when they do, observers on the
> chain learn nothing more than how much net coin moved across that single
> link. They learn nothing about where that coin eventually ended up.
>
> So back to your original question, each channel can be considered to have
> a pseudonymous identity, and each new channel given a new identity. Channel
> closures can even be coinjoin'd when the other party is cooperating. But
> ultimately, lightning usefully solves a problem where participants have
> semi-long lived payment endpoints.
>
> On Sun, Jun 28, 2015 at 9:32 AM, Raystonn . <raystonn at hotmail.com> wrote:
>
>> Write coalescing works fine when you have multiple writes headed to the
>> same (contiguous) location.  Will lightning be useful when we have more
>> unique transactions being sent to different addresses, and not just
>> multiple transactions between the same sender and address?  I have doubts.
>>
>>
>> -----Original Message----- From: Adam Back
>> Sent: Sunday, June 28, 2015 5:37 AM
>> To: Benjamin
>> Cc: bitcoin-dev at lists.linuxfoundation.org
>> Subject: Re: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
>>
>>
>> On 28 June 2015 at 12:29, Benjamin <benjamin.l.cordes at gmail.com> wrote:
>>
>>> I agree that naive scaling will likely lead to bad outcomes. They might
>>> have
>>> the advantage though, as this would mean not changing Bitcoin.
>>>
>>
>> Sure we can work incrementally and carefully, and this is exactly what
>> Bitcoin has been doing, and *must* do for safety and security for the
>> last 5 years!
>> That doesnt mean that useful serious improvements have not been made.
>>
>>  Level2 and Lightning is not well defined. If you move money to a third
>>> party, even if it is within the constrained of a locked contract, then I
>>> don't think that will solve the issues.
>>>
>>
>> I think you misunderstand how lightning works.  Every lightning
>> transaction *is* a valid bitcoin transaction that could be posted to
>> the Bitcoin network to reclaim funds if a hub went permanently
>> offline.  It is just that while the hubs involved remain in service,
>> there is no need to do so.  This is why it has been described as a
>> (write coalescing) write cache layer for Bitcoin.>
>>
>> I believe people expect lightning to be peer 2 peer like bitcoin.
>>
>> Adam
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/9b9af297/attachment.html>

From gavinandresen at gmail.com  Sun Jun 28 17:29:10 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Sun, 28 Jun 2015 13:29:10 -0400
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>
	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>
	<CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>
	<CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>
	<COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>
	<CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>
Message-ID: <CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>

On Sun, Jun 28, 2015 at 1:12 PM, Mark Friedenbach <mark at friedenbach.org>
wrote:

> But ultimately, lightning usefully solves a problem where participants
> have semi-long lived payment endpoints.


Very few of my own personal Bitcoin transactions fit that use-case.

In fact, very few of my own personal dollar transactions fit that use-case
(I suppose if I was addicted to Starbucks I'd have one of their payment
cards that I topped up every once in a while, which would map nicely onto a
payment channel). I suppose I could setup a payment channel with the
grocery store I shop at once a week, but that would be inconvenient (I'd
have to pre-fund it) and bad for my privacy.

I can see how payment channels would work between big financial
institutions as a settlement layer, but isn't that exactly the
centralization concern that is making a lot of people worried about
increasing the max block size?

And if there are only a dozen or two popular hubs, that's much worse
centralization-wise compared to a few thousand fully-validating Bitcoin
nodes.

Don't get me wrong, I think the Lightning Network is a fantastic idea and a
great experiment and will likely be used for all sorts of great payment
innovations (micropayments for bandwidth maybe, or maybe paying workers by
the hour instead of at the end of the month). But I don't think it is a
scaling solution for the types of payments the Bitcoin network is handling
today.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/8b400964/attachment.html>

From mark at friedenbach.org  Sun Jun 28 17:45:58 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Sun, 28 Jun 2015 10:45:58 -0700
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>
	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>
	<CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>
	<CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>
	<COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>
	<CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>
	<CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>
Message-ID: <CAOG=w-shLgDmRhOgS6btgUX5hf9jhSrAtms8CkLuuNOtgf6ReQ@mail.gmail.com>

Gavin, do you use a debit card or credit card? Then you do fit that use
case. When you buy a coffee at Starbucks, it is your bank that pays
Starbuck's bank. So it is with micropayment hubs.
On Sun, Jun 28, 2015 at 1:12 PM, Mark Friedenbach <mark at friedenbach.org>
wrote:

> But ultimately, lightning usefully solves a problem where participants
> have semi-long lived payment endpoints.


Very few of my own personal Bitcoin transactions fit that use-case.

In fact, very few of my own personal dollar transactions fit that use-case
(I suppose if I was addicted to Starbucks I'd have one of their payment
cards that I topped up every once in a while, which would map nicely onto a
payment channel). I suppose I could setup a payment channel with the
grocery store I shop at once a week, but that would be inconvenient (I'd
have to pre-fund it) and bad for my privacy.

I can see how payment channels would work between big financial
institutions as a settlement layer, but isn't that exactly the
centralization concern that is making a lot of people worried about
increasing the max block size?

And if there are only a dozen or two popular hubs, that's much worse
centralization-wise compared to a few thousand fully-validating Bitcoin
nodes.

Don't get me wrong, I think the Lightning Network is a fantastic idea and a
great experiment and will likely be used for all sorts of great payment
innovations (micropayments for bandwidth maybe, or maybe paying workers by
the hour instead of at the end of the month). But I don't think it is a
scaling solution for the types of payments the Bitcoin network is handling
today.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/d6602a6c/attachment-0001.html>

From jtimon at jtimon.cc  Sun Jun 28 17:47:22 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sun, 28 Jun 2015 19:47:22 +0200
Subject: [bitcoin-dev] TXO + STXO vs UTXO Re:  Original Vision
Message-ID: <CABm2gDpLDs9WN2E67O_0OuVGiE7HBhtBnhQchpDaoAM7rZjn_w@mail.gmail.com>

On Sun, Jun 28, 2015 at 6:15 PM, Mark Friedenbach <mark at friedenbach.org> wrote:
> Assuming randomly-picked outputs, it's actually worse. The slowdown factor
> has to do with the depth of the tree, and TXO and STXO trees are always
> growing. It's still complexity O(log N), but with TXO/STXO N is the size of
> the entire block chain history, whereas with UTXO it's just the set of
> unspent transaction outputs.

But you can prune them.

> But it is not the case that TXO/STXO gives you constant time updates. The
> append-only TXO tree might be close to that, but you'd still need the spent
> or unspent tree which is not insertion ordered. There are alternatives like
> updating the TXO tree and requiring blocks and transactions to carry proofs
> with them (so validators can be stateless), but that pushes the same (worse,
> actually) problem to whoever generated or assembled the proof. It may be a
> tradeoff worth making, but it's not an easy answer...

No, no.
You don't need a non-constant update of any spent flag (because
there's none), that's the whole point of having 2 separated trees for
everything on one side, and only spent outputs on the other side.
This proposal is not useful for SPV wallets but it lets you build the
UTXO at any height from the committed txo + stxo trees and update it
yourself from there. You could have a fast synchronization mode in
which you're not really a full node from the beginning but you end up
validating the older blocks later, when you have time after
synchronizing to the tip of the chain.

For the SPV use case you would need a committed UTXO (or the TXO with
a fIsSpent bit) but that seems to be more complicated and can be done
separately later.

> On Sun, Jun 28, 2015 at 8:51 AM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
>>
>> On Sun, Jun 28, 2015 at 5:23 PM, Mark Friedenbach <mark at friedenbach.org>
>> wrote:
>> > UTXO commitments are the nominal solution here. You commit the validator
>> > state in each block, and then you can prove things like a negative by
>> > referencing that state commitment. The trouble is this requires maintaining
>> > a hash tree commitment over validator state, which turns out to be insanely
>> > expensive. With the UTXO commitment scheme (the others are not better) that
>> > ends up requiring 15 - 22x more I/O during block validation. And I/O is
>> > presently a limiter to block validation speed. So if you thought 8MB was
>> > what bitcoin today could handle, and you also want this commitment scheme
>> > for fraud proofs, then you should be arguing for a block size limit decrease
>> > (to 500kB), not increase.
>>
>> What about a TXO and a STXO O(1)-append commitment? That shouldn't
>> cause that much overhead and you can build UTXO from TXO - STXO.
>> I know it's not so efficient in some respects but it scales better I
>> think.
>
>

From adam at cypherspace.org  Sun Jun 28 17:51:00 2015
From: adam at cypherspace.org (Adam Back)
Date: Sun, 28 Jun 2015 19:51:00 +0200
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>
	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>
	<CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>
	<CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>
	<COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>
	<CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>
	<CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>
Message-ID: <CALqxMTFv+nLo3phA2HS26F=r5+yGCOh=z8+Kub7GuC_bGVOfXg@mail.gmail.com>

On Sun, Jun 28, 2015 at 1:12 PM, Mark Friedenbach <mark at friedenbach.org> wrote:
> But ultimately, lightning usefully solves a problem where participants have semi-long lived payment endpoints.

Recipients do benefit from keeping connections to hubs because if a
hub goes away or a user abandons a hub that tends to generate new
on-chain traffic for balance reclaim, and new channel establishment,
as we understand the limits so far.

On 28 June 2015 at 19:29, Gavin Andresen <gavinandresen at gmail.com> wrote:
> Very few of my own personal Bitcoin transactions fit that use-case.

I believe Mark is talking about the one hop (direct) connections
benefits from being long-lived; the payment destination is not
restricted in the same way.  It's more like having a static IP address
with your ISP, that doesnt stop you reaching anywhere on the internet.

Say the Lightning Network has an average fan out of 10, now subject to
capital and rebalancing flows in the network you can pay anyone of a
billion people in 9 hops.  Maybe the fanout is lumpy, with some bigger
hubs - that just serves to reduce the number of hops.  Maybe there are
some capitalisation limits, that is dealt with by negative fees and
recirculation (more on that below) or failing that recapitalisation
on-chain. Some people assume that the hub will run out of
capitalisation on a given channel, however if people and hubs retain
redundant channels they can be paid to rebalance channels, and even
users can be paid by other users if there is a net flow from some
users, to a given business eg starbucks, where the users just buy new
BTC for USD and spend and dont earn BTC.  Rebalancing would work
because the exchange where they buy new BTC would be incentivised to
pay starbucks (or whoever has excess coins on a channel) to send the
coins back to the users topping up by paying them negative fees,
because the fees to do that should be less than using on-chain
transactions.

> But I don't think it is a scaling solution for the types of payments the Bitcoin
> network is handling today.

Actually I think it may well be able to do that very well.  We dont
know for sure how it will work until we see the balance and
effectiveness of the network algorithms against usage (eg simulating
from Bitcoin's historic usage say), but there's good reason to see
that BTC can recirculate and rebalance due to the reversible
non-expiring channels and capitalisation requirements can be lower
than simple expectation due higher velocity and redistribution of fees
to anyone with excess liquidity and connectivity heading in the right
direction.

Adam

From jtimon at jtimon.cc  Sun Jun 28 17:53:40 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sun, 28 Jun 2015 19:53:40 +0200
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>
	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>
	<CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>
	<CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>
	<COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>
	<CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>
	<CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>
Message-ID: <CABm2gDr2iftG2D+EF3dCx4Vf0M_J0cVzANRnLuhC1hSp_h8=Yg@mail.gmail.com>

On Sun, Jun 28, 2015 at 7:29 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:
> On Sun, Jun 28, 2015 at 1:12 PM, Mark Friedenbach <mark at friedenbach.org>
> wrote:
>>
>> But ultimately, lightning usefully solves a problem where participants
>> have semi-long lived payment endpoints.
>
>
> Very few of my own personal Bitcoin transactions fit that use-case.
>
> In fact, very few of my own personal dollar transactions fit that use-case
> (I suppose if I was addicted to Starbucks I'd have one of their payment
> cards that I topped up every once in a while, which would map nicely onto a
> payment channel). I suppose I could setup a payment channel with the grocery
> store I shop at once a week, but that would be inconvenient (I'd have to
> pre-fund it) and bad for my privacy.

Unlike other payment channels designs, the lightning payment channel
network allows you to pay to people that you haven't sent a pre-fund
to.
There's must be a path in the network from you to the payee.
That's simpler with only a few hubs although too few hubs is bad for privacy.

> I can see how payment channels would work between big financial institutions
> as a settlement layer, but isn't that exactly the centralization concern
> that is making a lot of people worried about increasing the max block size?

Worried about financial institutions using Bitcoin? No. Who said that?

> And if there are only a dozen or two popular hubs, that's much worse
> centralization-wise compared to a few thousand fully-validating Bitcoin
> nodes.

Remember the hubs cannot steal any coins.

> Don't get me wrong, I think the Lightning Network is a fantastic idea and a
> great experiment and will likely be used for all sorts of great payment
> innovations (micropayments for bandwidth maybe, or maybe paying workers by
> the hour instead of at the end of the month). But I don't think it is a
> scaling solution for the types of payments the Bitcoin network is handling
> today.

I don't see how people could pay coffees with bitcoin in the long term
otherwise.
Bitcoin IOUs from a third party (or federation) maybe, but not with
real p2p btc.

From adam at cypherspace.org  Sun Jun 28 18:58:55 2015
From: adam at cypherspace.org (Adam Back)
Date: Sun, 28 Jun 2015 20:58:55 +0200
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CALqxMTFv+nLo3phA2HS26F=r5+yGCOh=z8+Kub7GuC_bGVOfXg@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>
	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>
	<CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>
	<CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>
	<COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>
	<CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>
	<CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>
	<CALqxMTFv+nLo3phA2HS26F=r5+yGCOh=z8+Kub7GuC_bGVOfXg@mail.gmail.com>
Message-ID: <CALqxMTG7+MMN50VH9-Y++B1_DeBXTBKpkeA5dYT1EbVGZ1aYag@mail.gmail.com>

This is probably going to sound impolite, but I think it's pertinent.

Gavin, on dwelling on the the fact that you appear to not understand
the basics of the lightning network, I am a little alarmed about this,
given your recent proposals to unilaterally push the network into
quite dangerous areas of game theory, to lobby companies etc.

People are super polite and respectful around here, but this is not
looking good, if you don't mind me saying so.  You can't make balanced
or informed trade-offs on block-size schedules stretching into the
future, if you don't understand work that is underway, and has been
for months.  Lightning is a major candidate approach the rest of the
technical community sees for Bitcoin to scale.

Lightning allows Bitcoin to scale even without a block-size increase,
and therefore considerably impacts any calculation of how much
block-size is required.  In this light you appear to have been
attempting to push through a change without even understanding the
alternatives or greater ecosystem.

Adam

On 28 June 2015 at 19:51, Adam Back <adam at cypherspace.org> wrote:
> On Sun, Jun 28, 2015 at 1:12 PM, Mark Friedenbach <mark at friedenbach.org> wrote:
>> But ultimately, lightning usefully solves a problem where participants have semi-long lived payment endpoints.
>
> Recipients do benefit from keeping connections to hubs because if a
> hub goes away or a user abandons a hub that tends to generate new
> on-chain traffic for balance reclaim, and new channel establishment,
> as we understand the limits so far.
>
> On 28 June 2015 at 19:29, Gavin Andresen <gavinandresen at gmail.com> wrote:
>> Very few of my own personal Bitcoin transactions fit that use-case.
>
> I believe Mark is talking about the one hop (direct) connections
> benefits from being long-lived; the payment destination is not
> restricted in the same way.  It's more like having a static IP address
> with your ISP, that doesnt stop you reaching anywhere on the internet.
>
> Say the Lightning Network has an average fan out of 10, now subject to
> capital and rebalancing flows in the network you can pay anyone of a
> billion people in 9 hops.  Maybe the fanout is lumpy, with some bigger
> hubs - that just serves to reduce the number of hops.  Maybe there are
> some capitalisation limits, that is dealt with by negative fees and
> recirculation (more on that below) or failing that recapitalisation
> on-chain. Some people assume that the hub will run out of
> capitalisation on a given channel, however if people and hubs retain
> redundant channels they can be paid to rebalance channels, and even
> users can be paid by other users if there is a net flow from some
> users, to a given business eg starbucks, where the users just buy new
> BTC for USD and spend and dont earn BTC.  Rebalancing would work
> because the exchange where they buy new BTC would be incentivised to
> pay starbucks (or whoever has excess coins on a channel) to send the
> coins back to the users topping up by paying them negative fees,
> because the fees to do that should be less than using on-chain
> transactions.
>
>> But I don't think it is a scaling solution for the types of payments the Bitcoin
>> network is handling today.
>
> Actually I think it may well be able to do that very well.  We dont
> know for sure how it will work until we see the balance and
> effectiveness of the network algorithms against usage (eg simulating
> from Bitcoin's historic usage say), but there's good reason to see
> that BTC can recirculate and rebalance due to the reversible
> non-expiring channels and capitalisation requirements can be lower
> than simple expectation due higher velocity and redistribution of fees
> to anyone with excess liquidity and connectivity heading in the right
> direction.
>
> Adam

From patrick.murck at gmail.com  Sun Jun 28 19:05:04 2015
From: patrick.murck at gmail.com (Patrick Murck)
Date: Sun, 28 Jun 2015 12:05:04 -0700
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <55901F7D.4000001@bitcoins.info>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
	<558B7352.90708@bitcoins.info>
	<CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>
	<558D46EC.6050300@bitcoins.info>
	<CABm2gDojz6PHdRKxRkMZh-gfYLdcekVfeQMz5r_4EYc-j5tn+w@mail.gmail.com>
	<558E9C06.9080901@bitcoins.info>
	<CABm2gDpTuEoaXZ_M166UEe+z6t-hq39yJaF3K+aL_Ra836jnSg@mail.gmail.com>
	<558FF307.9010606@bitcoins.info>
	<CABm2gDpHL3RUXUK_PAiPv49EcxgjBSjPBwf=4VLhW0Y28OE=FQ@mail.gmail.com>
	<55901F7D.4000001@bitcoins.info>
Message-ID: <etPan.5590456f.61df0e2.23f7@Patricks-MacBook-Pro-2.local>

Wladimir has no more or less ?power? to push change to the Bitcoin Core codebase than any other person with commit privileges to the GitHub repo. If I?m not mistaken there are 7 people with commit privileges and five of them are active. If Wladimir committed a change it could be reverted by any of the others. This is by design and ensures that changes will have reached some level of technical consensus before they are merged, among other things.

Furthermore even assuming the Core Maintainer commits a change to Bitcoin Core (that isn?t reverted and that gets packaged up into the next code release) that still doesn?t push a change to the bitcoin network. There is no auto-update on Bitcoin Core so individuals and companies running Bitcoin Core software have to choose to upgrade. Further still, developers that maintain alternative implementations would have to decide to merge those changes to the codebase they are indepently maintaining (and their users would need to update, etc.).

I understand why it might *seem* to be the case that the Core Maintainer is empowered to make changes to "teh Bitcoin" but the reality is that the Core Maintainer role is really about cat herding and project management of Bitcoin Core the open-source software project and not the bitcoin network. We?re lucky Wladimir has agreed to take on so much of the scut work to keep the project moving forward.

The process might get ugly and inefficient but that?s the cost of having no wizard behind the curtain.

-pm

--?
Patrick Murck

On June 28, 2015 at 9:23:47 AM, Milly Bitcoin (milly at bitcoins.info) wrote:

The core maintainer has always been in control of the consensus rules.  
Satoshi came up with the rules and put them in there. Since then any  
changes to any part of the code go through the core maintainer. It  
looks to me as if people are saying it somehow changed along the way  
because they don't want to hurt people's feeling, upset up, get them to  
quit, etc. Sure there are checks and balances and people don't have to  
use the main code base but if they change the consensus rules they are  
incompatible.

The notion that because people can download different rules and run them  
is interesting from a theoretical perspective but that is constrained by  
the network effect. I can say the US government is not the "decider" of  
laws because I can vote them out, recall them, challenge things in  
court, or secede and start my own country. You can also say the  
judge/jury in a criminal court case is not a "decider" because the  
president can always issue a pardon. But those points are generally not  
useful in a practical sense.

The issue about the developers is the tremendous influence they have to  
veto any changes. I don't have veto power yet I have more bitcoins than  
garzik says he has. The whole Bitcoin software development system is  
subject to attack from just a couple of people who have this veto  
power. With all the crying and moaning about centralization on this  
list I would think that would be a concern.

Russ



On 6/28/2015 11:35 AM, Jorge Tim?n wrote:
> On Sun, Jun 28, 2015 at 3:13 PM, Milly Bitcoin <milly at bitcoins.info> wrote:
>> I never said something was approved by garzik added something after it was
>> opposed. What I said was a proposal was made and 4 people commented on the
>> Github. He then tweeted there was near universal approval before most
>> people even heard about the subject. It was not controversial but i was
>> pointing out the arrogance of some of the developers. He considers the
>> entire universe of Bitcoin stakeholders to be a very small group of
>> insiders, not the entire universe of Bitcoin users. Another thing I have
>> seen on Github for bitcoin.org is how some the maintainers change the rules
>> on the fly. Sometimes they say a proposal had no objections so it is
>> approved. Other times they say a proposal has no support so it is rejected.
> Ok, I misunderstood.
> Well, the fact is that the number of capable reviewers is quite small.
> If more companies hired and trained more developers to become bitcoin
> core developers that situation could change, but that's where we are
> now.
>
>> You are also trying to say that the core developers actually have little
>> influence and are not "deciders" because anyone can fork the code. That has
>> already been discussed at length and such an argument is faulty because
>> there is a constraint that your software is incompatible with everyone else.
> Only if you change the consensus rules (which are, in fact, a
> relatively small part of the code).
> Mike mantains Bitcoin XT and that's fine, Peter Todd maintains patches
> with the replace by fee policy, libbitcoin also changes many
> non-consensus things, there's code written in other languages...
> There's multiple counter-examples to your claim of that argument being faulty.
> Seriously, forking the project is just one click. You should try it
> out like at least 9627 other people have done.
> >From there, you can pay your own developers (if you don't know how to
> code yourself) and maybe they're also fine being insulted by you as
> part of the job.
> What you still can't do is unilaterally change the consensus rules of
> a running p2p consensus system, because you cannot force the current
> users to run any software they don't want to run.
>
>> The issue is that there is no way right now to change the consensus rules
>> except to go through the core maintainer unless you get everybody on the
>> network to switch to your fork. People who keep repeating that the software
>> development is "decentralized because you fork the code" without explaining
>> the constraints are just cultists.
> Please, stop the cultist crap. Maybe insulting people like that is how
> you got people to call you a troll.
> But, yes, you are right: there's no known mechanism for safely
> deploying controversial changes to the consensus rules
>
>> The discussion has nothing to do with who has the position now and I never
>> said he has "control over the consensus rules." The maintainer has a very
>> large influence way beyond anyone else. As for your claim that I want
>> someone hurt because I am explaining the process, that is ridiculous. If
>> the Core maintainers did not have significant influence to change the
>> consensus rules then everybody would not be spending all this time lobbying
>> them to have them changed.
> Well, if you don't think he has control over the consensus rules we're
> advancing.
> I think that was implied from some of your previous claims. He is no
> "decider" on consensus changes.
> Insisting on it can indeed get him hurt, so I'm happy that you're
> taking that back (or clarifying that really wasn't your position).
> Influence is very relative and not only core devs have "influence".
> Maybe Andreas Antonopolous has more "influence" than I have because he
> is a more public figure?
> Well, that's fine I think. I don't see the point in discussing who has
> how much influence.
>
>> The outside influences and stake of the developer is a relevant topic. The
>> same types of things are discussed on this list all the time in the context
>> of miners, users, merchants, and exchanges. Again, the developers try to
>> place themselves on some kind of pedestal where they are the protectors and
>> pure and everyone else (miners, users, merchants) are abusers, spammers,
>> attackers, scammers, cheaters, etc. It is Garzik who voluntarily made an
>> issue of how many bitcoins he holds and he made that issue in the same place
>> where he announces many of the technical issues. It is very relevant that
>> he has a minimal stake in Bitcoin holdings yet he goes around making major
>> decisions about Bitcoin and trying to dictate who is allowed to participate
>> in discussions. If a core developer has minimal stake in Bitcoin yet has
>> major veto power over code change that is a problem.
> Please, don't generalize. I don't think I put myself in any kind of pedestal.
> That is insulting to me and many others (you may not even know and
> you're insulting them).
> And I think my Bitcoin holdings are completely irrelevant when judging
> my contributions to the software: either they're good or not, and who
> I am or how many Bitcoins I have at any given time shouldn't matter.
> Again, nobody forces you to use our software, as said there's
> alternatives (including forking the project right now).
>
>> You are correct that you cannot give power to any person over the Internet
>> which is why some kind of process needs to be developed that does not
>> involve trying to convince one person to make the changes or a system that
>> depends on unwritten, ever-changing rules maintained by a handful of people.
> Well, for now the process we have is seeking consensus, and although
> our definition of "uncontroversial" is very vague, I think it is quite
> obvious when a proposed change is not "uncontroversial" (like in the
> block size debate).
> It seems to me that any other "formal process" would imply
> centralization in the decision making of the consensus rules (and from
> there you only have to corrupt that centralized organization to
> destroy Bitcoin).
>


_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/38f1f487/attachment-0001.html>

From lapp0 at purdue.edu  Sun Jun 28 19:22:53 2015
From: lapp0 at purdue.edu (Andrew Lapp)
Date: Sun, 28 Jun 2015 15:22:53 -0400
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>	<CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>	<CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>	<COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>	<CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>
	<CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>
Message-ID: <5590498D.6010406@purdue.edu>

I don't mind a set of central authorities being part of an option IF the 
central authority doesn't need to be trusted. On the blockchain, the 
larger miner is, the more you have to trust them to not collude with 
anyone to reverse your payments or destroy the trust in the system in 
some attack. On the Lightning network, a large hub can't steal my money.

I think most people share the sentiment that trustlessness is what 
matters and decentralization is just a synonym for trustlessness when 
talking about the blockchain and mining, however decentralization isn't 
necessarily synonymous with trustlessness nor is centralization 
synonymous with trust-requiring when you're talking about something else.

-Andrew Lapp

On 06/28/2015 01:29 PM, Gavin Andresen wrote:
> I can see how payment channels would work between big financial 
> institutions as a settlement layer, but isn't that exactly the 
> centralization concern that is making a lot of people worried about 
> increasing the max block size?


From benjamin.l.cordes at gmail.com  Sun Jun 28 19:40:20 2015
From: benjamin.l.cordes at gmail.com (Benjamin)
Date: Sun, 28 Jun 2015 21:40:20 +0200
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <5590498D.6010406@purdue.edu>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>
	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>
	<CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>
	<CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>
	<COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>
	<CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>
	<CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>
	<5590498D.6010406@purdue.edu>
Message-ID: <CAOoPuRY7Tdu2mkZWSt4bJayN1eqvP5AH3vQUcbqzS9O-UPewow@mail.gmail.com>

"On the Lightning network, a large hub can't steal my money." Malicious
hubs could flood the network. The way it is discussed now it's not
resistant to Sybil attack either. It's an interesting idea in a very early
stage. Not at all a drop-in replacement for Bitcoin anytime soon, as some
imply. Blockstream shouldn't make these issues into pitches of their own
tech of their for-profit enterprise.

On Sun, Jun 28, 2015 at 9:22 PM, Andrew Lapp <lapp0 at purdue.edu> wrote:

> I don't mind a set of central authorities being part of an option IF the
> central authority doesn't need to be trusted. On the blockchain, the larger
> miner is, the more you have to trust them to not collude with anyone to
> reverse your payments or destroy the trust in the system in some attack. On
> the Lightning network, a large hub can't steal my money.
>
> I think most people share the sentiment that trustlessness is what matters
> and decentralization is just a synonym for trustlessness when talking about
> the blockchain and mining, however decentralization isn't necessarily
> synonymous with trustlessness nor is centralization synonymous with
> trust-requiring when you're talking about something else.
>
> -Andrew Lapp
>
> On 06/28/2015 01:29 PM, Gavin Andresen wrote:
>
>> I can see how payment channels would work between big financial
>> institutions as a settlement layer, but isn't that exactly the
>> centralization concern that is making a lot of people worried about
>> increasing the max block size?
>>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/6ca0b59b/attachment.html>

From pete at petertodd.org  Sun Jun 28 19:50:54 2015
From: pete at petertodd.org (Peter Todd)
Date: Sun, 28 Jun 2015 15:50:54 -0400
Subject: [bitcoin-dev] BIP65 / CHECKLOCKTIMEVERIFY deployment
In-Reply-To: <20150625223344.GA2406@muck>
References: <20150625223344.GA2406@muck>
Message-ID: <20150628195053.GA9909@muck>

On Thu, Jun 25, 2015 at 06:33:44PM -0400, Peter Todd wrote:
> Thoughts? If there are no objections I'll go ahead and write that code,
> using the same thresholds as BIP66.

I've opened a pull-req to deploy CHECKLOCKTIMEVERIFY via the
IsSuperMajority() mechanism:

    https://github.com/bitcoin/bitcoin/pull/6351

    Final step towards CLTV deployment on mainnet.

    I've copied the logic and tests from the previous BIP66 (DERSIG)
    soft-fork line-by-line for ease of review; any code review applicable to
    BIP66 should be applicable to BIP65.

    Once merged I'll prepare a backport of the soft-fork logic for the
    v0.10.x branch as well.

-- 
'peter'[:-1]@petertodd.org
00000000000000000dbc12bdcb4d0a340272edd649d24849f86a20d075f0dba1
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/de3ca0ec/attachment.sig>

From milly at bitcoins.info  Sun Jun 28 20:10:58 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Sun, 28 Jun 2015 16:10:58 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <etPan.5590456f.61df0e2.23f7@Patricks-MacBook-Pro-2.local>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
	<558B7352.90708@bitcoins.info>
	<CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>
	<558D46EC.6050300@bitcoins.info>
	<CABm2gDojz6PHdRKxRkMZh-gfYLdcekVfeQMz5r_4EYc-j5tn+w@mail.gmail.com>
	<558E9C06.9080901@bitcoins.info>
	<CABm2gDpTuEoaXZ_M166UEe+z6t-hq39yJaF3K+aL_Ra836jnSg@mail.gmail.com>
	<558FF307.9010606@bitcoins.info>
	<CABm2gDpHL3RUXUK_PAiPv49EcxgjBSjPBwf=4VLhW0Y28OE=FQ@mail.gmail.com>
	<55901F7D.4000001@bitcoins.info>
	<etPan.5590456f.61df0e2.23f7@Patricks-MacBook-Pro-2.local>
Message-ID: <559054D2.3050009@bitcoins.info>

I really don't know who has power to do what behind the scenes.  From 
what i understand, if push comes to shove, it is under the ultimate 
control of one person who can revoke commit privileges.  Maybe I am 
wrong about that but the point is most people don't know for sure.

You are correct about the people having the choice to download but the 
influence of the official release is way beyond the influence of any 
forked release.  What that means in the real world is an open question 
and would be different depending upon the specific circumstances and 
difficult to predict.  It is significant power to have control over the 
official release at the present time.  If they did not have significant 
power people would not spend significant efforts lobbying them to make 
changes.  Any new developers hired by companies will do so because they 
can influence over the official release since that is the only incentive.

It seems to me that this block size fork is only the beginning of the 
issues that will arise over the coming years.  Whatever powers the core 
maintainers have it is going to be exploited one way or another as time 
goes on.  Maybe there are enough feedback mechanisms to protect against 
that, I don't really know.

Russ





On 6/28/2015 3:05 PM, Patrick Murck wrote:
> Wladimir has no more or less ?power? to push change to the Bitcoin 
> Core codebase than any other person with commit privileges to the 
> GitHub repo. If I?m not mistaken there are 7 people with commit 
> privileges and five of them are active. If Wladimir committed a change 
> it could be reverted by any of the others. This is by design and 
> ensures that changes will have reached some level of technical 
> consensus before they are merged, among other things.
>
> Furthermore even assuming the Core Maintainer commits a change to 
> Bitcoin Core (that isn?t reverted and that gets packaged up into the 
> next code release) that still doesn?t push a change to the bitcoin 
> network. There is no auto-update on Bitcoin Core so individuals and 
> companies running Bitcoin Core software have to choose to upgrade. 
> Further still, developers that maintain alternative implementations 
> would have to decide to merge those changes to the codebase they are 
> indepently maintaining (and their users would need to update, etc.).
>
> I understand why it might *seem* to be the case that the Core 
> Maintainer is empowered to make changes to "teh Bitcoin" but the 
> reality is that the Core Maintainer role is really about cat herding 
> and project management of Bitcoin Core the open-source software 
> project and not the bitcoin network. We?re lucky Wladimir has agreed 
> to take on so much of the scut work to keep the project moving forward.
>
> The process might get ugly and inefficient but that?s the cost of 
> having no wizard behind the curtain.
>
> -pm
>
> -- 
> Patrick Murck
>
> On June 28, 2015 at 9:23:47 AM, Milly Bitcoin (milly at bitcoins.info 
> <mailto:milly at bitcoins.info>) wrote:
>
>> The core maintainer has always been in control of the consensus rules.
>> Satoshi came up with the rules and put them in there. Since then any
>> changes to any part of the code go through the core maintainer. It
>> looks to me as if people are saying it somehow changed along the way
>> because they don't want to hurt people's feeling, upset up, get them to
>> quit, etc. Sure there are checks and balances and people don't have to
>> use the main code base but if they change the consensus rules they are
>> incompatible.
>>
>> The notion that because people can download different rules and run them
>> is interesting from a theoretical perspective but that is constrained by
>> the network effect. I can say the US government is not the "decider" of
>> laws because I can vote them out, recall them, challenge things in
>> court, or secede and start my own country. You can also say the
>> judge/jury in a criminal court case is not a "decider" because the
>> president can always issue a pardon. But those points are generally not
>> useful in a practical sense.
>>
>> The issue about the developers is the tremendous influence they have to
>> veto any changes. I don't have veto power yet I have more bitcoins than
>> garzik says he has. The whole Bitcoin software development system is
>> subject to attack from just a couple of people who have this veto
>> power. With all the crying and moaning about centralization on this
>> list I would think that would be a concern.
>>
>> Russ
>>
>>
>>
>> On 6/28/2015 11:35 AM, Jorge Tim?n wrote:
>> > On Sun, Jun 28, 2015 at 3:13 PM, Milly Bitcoin 
>> <milly at bitcoins.info> wrote:
>> >> I never said something was approved by garzik added something 
>> after it was
>> >> opposed. What I said was a proposal was made and 4 people 
>> commented on the
>> >> Github. He then tweeted there was near universal approval before most
>> >> people even heard about the subject. It was not controversial but 
>> i was
>> >> pointing out the arrogance of some of the developers. He considers the
>> >> entire universe of Bitcoin stakeholders to be a very small group of
>> >> insiders, not the entire universe of Bitcoin users. Another thing 
>> I have
>> >> seen on Github for bitcoin.org is how some the maintainers change 
>> the rules
>> >> on the fly. Sometimes they say a proposal had no objections so it is
>> >> approved. Other times they say a proposal has no support so it is 
>> rejected.
>> > Ok, I misunderstood.
>> > Well, the fact is that the number of capable reviewers is quite small.
>> > If more companies hired and trained more developers to become bitcoin
>> > core developers that situation could change, but that's where we are
>> > now.
>> >
>> >> You are also trying to say that the core developers actually have 
>> little
>> >> influence and are not "deciders" because anyone can fork the code. 
>> That has
>> >> already been discussed at length and such an argument is faulty 
>> because
>> >> there is a constraint that your software is incompatible with 
>> everyone else.
>> > Only if you change the consensus rules (which are, in fact, a
>> > relatively small part of the code).
>> > Mike mantains Bitcoin XT and that's fine, Peter Todd maintains patches
>> > with the replace by fee policy, libbitcoin also changes many
>> > non-consensus things, there's code written in other languages...
>> > There's multiple counter-examples to your claim of that argument 
>> being faulty.
>> > Seriously, forking the project is just one click. You should try it
>> > out like at least 9627 other people have done.
>> > >From there, you can pay your own developers (if you don't know how to
>> > code yourself) and maybe they're also fine being insulted by you as
>> > part of the job.
>> > What you still can't do is unilaterally change the consensus rules of
>> > a running p2p consensus system, because you cannot force the current
>> > users to run any software they don't want to run.
>> >
>> >> The issue is that there is no way right now to change the 
>> consensus rules
>> >> except to go through the core maintainer unless you get everybody 
>> on the
>> >> network to switch to your fork. People who keep repeating that the 
>> software
>> >> development is "decentralized because you fork the code" without 
>> explaining
>> >> the constraints are just cultists.
>> > Please, stop the cultist crap. Maybe insulting people like that is how
>> > you got people to call you a troll.
>> > But, yes, you are right: there's no known mechanism for safely
>> > deploying controversial changes to the consensus rules
>> >
>> >> The discussion has nothing to do with who has the position now and 
>> I never
>> >> said he has "control over the consensus rules." The maintainer has 
>> a very
>> >> large influence way beyond anyone else. As for your claim that I want
>> >> someone hurt because I am explaining the process, that is 
>> ridiculous. If
>> >> the Core maintainers did not have significant influence to change the
>> >> consensus rules then everybody would not be spending all this time 
>> lobbying
>> >> them to have them changed.
>> > Well, if you don't think he has control over the consensus rules we're
>> > advancing.
>> > I think that was implied from some of your previous claims. He is no
>> > "decider" on consensus changes.
>> > Insisting on it can indeed get him hurt, so I'm happy that you're
>> > taking that back (or clarifying that really wasn't your position).
>> > Influence is very relative and not only core devs have "influence".
>> > Maybe Andreas Antonopolous has more "influence" than I have because he
>> > is a more public figure?
>> > Well, that's fine I think. I don't see the point in discussing who has
>> > how much influence.
>> >
>> >> The outside influences and stake of the developer is a relevant 
>> topic. The
>> >> same types of things are discussed on this list all the time in 
>> the context
>> >> of miners, users, merchants, and exchanges. Again, the developers 
>> try to
>> >> place themselves on some kind of pedestal where they are the 
>> protectors and
>> >> pure and everyone else (miners, users, merchants) are abusers, 
>> spammers,
>> >> attackers, scammers, cheaters, etc. It is Garzik who voluntarily 
>> made an
>> >> issue of how many bitcoins he holds and he made that issue in the 
>> same place
>> >> where he announces many of the technical issues. It is very 
>> relevant that
>> >> he has a minimal stake in Bitcoin holdings yet he goes around 
>> making major
>> >> decisions about Bitcoin and trying to dictate who is allowed to 
>> participate
>> >> in discussions. If a core developer has minimal stake in Bitcoin 
>> yet has
>> >> major veto power over code change that is a problem.
>> > Please, don't generalize. I don't think I put myself in any kind of 
>> pedestal.
>> > That is insulting to me and many others (you may not even know and
>> > you're insulting them).
>> > And I think my Bitcoin holdings are completely irrelevant when judging
>> > my contributions to the software: either they're good or not, and who
>> > I am or how many Bitcoins I have at any given time shouldn't matter.
>> > Again, nobody forces you to use our software, as said there's
>> > alternatives (including forking the project right now).
>> >
>> >> You are correct that you cannot give power to any person over the 
>> Internet
>> >> which is why some kind of process needs to be developed that does not
>> >> involve trying to convince one person to make the changes or a 
>> system that
>> >> depends on unwritten, ever-changing rules maintained by a handful 
>> of people.
>> > Well, for now the process we have is seeking consensus, and although
>> > our definition of "uncontroversial" is very vague, I think it is quite
>> > obvious when a proposed change is not "uncontroversial" (like in the
>> > block size debate).
>> > It seems to me that any other "formal process" would imply
>> > centralization in the decision making of the consensus rules (and from
>> > there you only have to corrupt that centralized organization to
>> > destroy Bitcoin).
>> >
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/a1d2d818/attachment-0001.html>

From mark at friedenbach.org  Sun Jun 28 20:16:18 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Sun, 28 Jun 2015 13:16:18 -0700
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <559054D2.3050009@bitcoins.info>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
	<558B7352.90708@bitcoins.info>
	<CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>
	<558D46EC.6050300@bitcoins.info>
	<CABm2gDojz6PHdRKxRkMZh-gfYLdcekVfeQMz5r_4EYc-j5tn+w@mail.gmail.com>
	<558E9C06.9080901@bitcoins.info>
	<CABm2gDpTuEoaXZ_M166UEe+z6t-hq39yJaF3K+aL_Ra836jnSg@mail.gmail.com>
	<558FF307.9010606@bitcoins.info>
	<CABm2gDpHL3RUXUK_PAiPv49EcxgjBSjPBwf=4VLhW0Y28OE=FQ@mail.gmail.com>
	<55901F7D.4000001@bitcoins.info>
	<etPan.5590456f.61df0e2.23f7@Patricks-MacBook-Pro-2.local>
	<559054D2.3050009@bitcoins.info>
Message-ID: <CAOG=w-tmQtPbbxX-mBOjWoJVQF8aoiog7Y32QVtRfwcNP22YRg@mail.gmail.com>

Milly you are absolutely wrong as has been pointed out by numerous people
numerous times. Your idea of how bitcoin development decision making works
is demonstrably false. Please stop filling our inboxes with trolling
accusations, or else this will have to become a moderated list. And no one
wants that.
On Jun 28, 2015 1:11 PM, "Milly Bitcoin" <milly at bitcoins.info> wrote:

>  I really don't know who has power to do what behind the scenes.  From
> what i understand, if push comes to shove, it is under the ultimate control
> of one person who can revoke commit privileges.  Maybe I am wrong about
> that but the point is most people don't know for sure.
>
> You are correct about the people having the choice to download but the
> influence of the official release is way beyond the influence of any forked
> release.  What that means in the real world is an open question and would
> be different depending upon the specific circumstances and difficult to
> predict.  It is significant power to have control over the official release
> at the present time.  If they did not have significant power people would
> not spend significant efforts lobbying them to make changes.  Any new
> developers hired by companies will do so because they can influence over
> the official release since that is the only incentive.
>
> It seems to me that this block size fork is only the beginning of the
> issues that will arise over the coming years.  Whatever powers the core
> maintainers have it is going to be exploited one way or another as time
> goes on.  Maybe there are enough feedback mechanisms to protect against
> that, I don't really know.
>
> Russ
>
>
>
>
>
> On 6/28/2015 3:05 PM, Patrick Murck wrote:
>
> Wladimir has no more or less ?power? to push change to the Bitcoin Core
> codebase than any other person with commit privileges to the GitHub repo.
> If I?m not mistaken there are 7 people with commit privileges and five of
> them are active. If Wladimir committed a change it could be reverted by any
> of the others. This is by design and ensures that changes will have reached
> some level of technical consensus before they are merged, among other
> things.
>
>  Furthermore even assuming the Core Maintainer commits a change to
> Bitcoin Core (that isn?t reverted and that gets packaged up into the next
> code release) that still doesn?t push a change to the bitcoin network.
> There is no auto-update on Bitcoin Core so individuals and companies
> running Bitcoin Core software have to choose to upgrade. Further still,
> developers that maintain alternative implementations would have to decide
> to merge those changes to the codebase they are indepently maintaining (and
> their users would need to update, etc.).
>
>  I understand why it might *seem* to be the case that the Core Maintainer
> is empowered to make changes to "teh Bitcoin" but the reality is that the
> Core Maintainer role is really about cat herding and project management of
> Bitcoin Core the open-source software project and not the bitcoin network.
> We?re lucky Wladimir has agreed to take on so much of the scut work to keep
> the project moving forward.
>
>  The process might get ugly and inefficient but that?s the cost of having
> no wizard behind the curtain.
>
>  -pm
>
> --
> Patrick Murck
>
> On June 28, 2015 at 9:23:47 AM, Milly Bitcoin (milly at bitcoins.info) wrote:
>
>  The core maintainer has always been in control of the consensus rules.
> Satoshi came up with the rules and put them in there. Since then any
> changes to any part of the code go through the core maintainer. It
> looks to me as if people are saying it somehow changed along the way
> because they don't want to hurt people's feeling, upset up, get them to
> quit, etc. Sure there are checks and balances and people don't have to
> use the main code base but if they change the consensus rules they are
> incompatible.
>
> The notion that because people can download different rules and run them
> is interesting from a theoretical perspective but that is constrained by
> the network effect. I can say the US government is not the "decider" of
> laws because I can vote them out, recall them, challenge things in
> court, or secede and start my own country. You can also say the
> judge/jury in a criminal court case is not a "decider" because the
> president can always issue a pardon. But those points are generally not
> useful in a practical sense.
>
> The issue about the developers is the tremendous influence they have to
> veto any changes. I don't have veto power yet I have more bitcoins than
> garzik says he has. The whole Bitcoin software development system is
> subject to attack from just a couple of people who have this veto
> power. With all the crying and moaning about centralization on this
> list I would think that would be a concern.
>
> Russ
>
>
>
> On 6/28/2015 11:35 AM, Jorge Tim?n wrote:
> > On Sun, Jun 28, 2015 at 3:13 PM, Milly Bitcoin <milly at bitcoins.info>
> <milly at bitcoins.info> wrote:
> >> I never said something was approved by garzik added something after it
> was
> >> opposed. What I said was a proposal was made and 4 people commented on
> the
> >> Github. He then tweeted there was near universal approval before most
> >> people even heard about the subject. It was not controversial but i was
> >> pointing out the arrogance of some of the developers. He considers the
> >> entire universe of Bitcoin stakeholders to be a very small group of
> >> insiders, not the entire universe of Bitcoin users. Another thing I have
> >> seen on Github for bitcoin.org is how some the maintainers change the
> rules
> >> on the fly. Sometimes they say a proposal had no objections so it is
> >> approved. Other times they say a proposal has no support so it is
> rejected.
> > Ok, I misunderstood.
> > Well, the fact is that the number of capable reviewers is quite small.
> > If more companies hired and trained more developers to become bitcoin
> > core developers that situation could change, but that's where we are
> > now.
> >
> >> You are also trying to say that the core developers actually have little
> >> influence and are not "deciders" because anyone can fork the code. That
> has
> >> already been discussed at length and such an argument is faulty because
> >> there is a constraint that your software is incompatible with everyone
> else.
> > Only if you change the consensus rules (which are, in fact, a
> > relatively small part of the code).
> > Mike mantains Bitcoin XT and that's fine, Peter Todd maintains patches
> > with the replace by fee policy, libbitcoin also changes many
> > non-consensus things, there's code written in other languages...
> > There's multiple counter-examples to your claim of that argument being
> faulty.
> > Seriously, forking the project is just one click. You should try it
> > out like at least 9627 other people have done.
> > >From there, you can pay your own developers (if you don't know how to
> > code yourself) and maybe they're also fine being insulted by you as
> > part of the job.
> > What you still can't do is unilaterally change the consensus rules of
> > a running p2p consensus system, because you cannot force the current
> > users to run any software they don't want to run.
> >
> >> The issue is that there is no way right now to change the consensus
> rules
> >> except to go through the core maintainer unless you get everybody on the
> >> network to switch to your fork. People who keep repeating that the
> software
> >> development is "decentralized because you fork the code" without
> explaining
> >> the constraints are just cultists.
> > Please, stop the cultist crap. Maybe insulting people like that is how
> > you got people to call you a troll.
> > But, yes, you are right: there's no known mechanism for safely
> > deploying controversial changes to the consensus rules
> >
> >> The discussion has nothing to do with who has the position now and I
> never
> >> said he has "control over the consensus rules." The maintainer has a
> very
> >> large influence way beyond anyone else. As for your claim that I want
> >> someone hurt because I am explaining the process, that is ridiculous. If
> >> the Core maintainers did not have significant influence to change the
> >> consensus rules then everybody would not be spending all this time
> lobbying
> >> them to have them changed.
> > Well, if you don't think he has control over the consensus rules we're
> > advancing.
> > I think that was implied from some of your previous claims. He is no
> > "decider" on consensus changes.
> > Insisting on it can indeed get him hurt, so I'm happy that you're
> > taking that back (or clarifying that really wasn't your position).
> > Influence is very relative and not only core devs have "influence".
> > Maybe Andreas Antonopolous has more "influence" than I have because he
> > is a more public figure?
> > Well, that's fine I think. I don't see the point in discussing who has
> > how much influence.
> >
> >> The outside influences and stake of the developer is a relevant topic.
> The
> >> same types of things are discussed on this list all the time in the
> context
> >> of miners, users, merchants, and exchanges. Again, the developers try to
> >> place themselves on some kind of pedestal where they are the protectors
> and
> >> pure and everyone else (miners, users, merchants) are abusers, spammers,
> >> attackers, scammers, cheaters, etc. It is Garzik who voluntarily made an
> >> issue of how many bitcoins he holds and he made that issue in the same
> place
> >> where he announces many of the technical issues. It is very relevant
> that
> >> he has a minimal stake in Bitcoin holdings yet he goes around making
> major
> >> decisions about Bitcoin and trying to dictate who is allowed to
> participate
> >> in discussions. If a core developer has minimal stake in Bitcoin yet has
> >> major veto power over code change that is a problem.
> > Please, don't generalize. I don't think I put myself in any kind of
> pedestal.
> > That is insulting to me and many others (you may not even know and
> > you're insulting them).
> > And I think my Bitcoin holdings are completely irrelevant when judging
> > my contributions to the software: either they're good or not, and who
> > I am or how many Bitcoins I have at any given time shouldn't matter.
> > Again, nobody forces you to use our software, as said there's
> > alternatives (including forking the project right now).
> >
> >> You are correct that you cannot give power to any person over the
> Internet
> >> which is why some kind of process needs to be developed that does not
> >> involve trying to convince one person to make the changes or a system
> that
> >> depends on unwritten, ever-changing rules maintained by a handful of
> people.
> > Well, for now the process we have is seeking consensus, and although
> > our definition of "uncontroversial" is very vague, I think it is quite
> > obvious when a proposed change is not "uncontroversial" (like in the
> > block size debate).
> > It seems to me that any other "formal process" would imply
> > centralization in the decision making of the consensus rules (and from
> > there you only have to corrupt that centralized organization to
> > destroy Bitcoin).
> >
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/2b0a55ee/attachment-0001.html>

From nxtchg at hush.com  Sun Jun 28 20:21:26 2015
From: nxtchg at hush.com (NxtChg)
Date: Sun, 28 Jun 2015 23:21:26 +0300
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <etPan.5590456f.61df0e2.23f7@Patricks-MacBook-Pro-2.local>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
	<558B7352.90708@bitcoins.info>
	<CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>
	<558D46EC.6050300@bitcoins.info>
	<CABm2gDojz6PHdRKxRkMZh-gfYLdcekVfeQMz5r_4EYc-j5tn+w@mail.gmail.com>
	<558E9C06.9080901@bitcoins.info>
	<CABm2gDpTuEoaXZ_M166UEe+z6t-hq39yJaF3K+aL_Ra836jnSg@mail.gmail.com>
	<558FF307.9010606@bitcoins.info>
	<CABm2gDpHL3RUXUK_PAiPv49EcxgjBSjPBwf=4VLhW0Y28OE=FQ@mail.gmail.com>
	<55901F7D.4000001@bitcoins.info>
	<etPan.5590456f.61df0e2.23f7@Patricks-MacBook-Pro-2.local> 
Message-ID: <20150628202127.27DCB41A3E@smtp.hushmail.com>

On 6/28/2015 at 10:05 PM, "Patrick Murck" <patrick.murck at gmail.com> wrote:

>Maintainer is empowered to make changes to "teh Bitcoin" but the reality is that the Core Maintainer role is really about cat
>herding and project management of Bitcoin Core the open-source software project and not the bitcoin network.

It's not about pushing a change, it's about refusing a change on the grounds of controversy.

This is _not_ an attack on Wladimir. His position in view of circumstances is perfectly reasonable: to take the safest option.

Even at the risk of stagnation, as he pointed out, at least your funds won't be expropriated. It's a noble position to defend the minority.

Unfortunately (or fortunately), the majority of power usually gets what it wants. Of course, "they will have it their way anyway" is not an appropriate reason to flip-flop on an ethical position, so nobody expects Wladimir to change his mind.

Thus, we are playing a variation of prisoner's dilemma here: the best solution would be an agreement on both sides, if only they could agree.

In reality, there's a good chance that Gavin's fork will win, creating precisely the problems and risks, which Wladimir tries to avoid, only more. And we will end up with lose-lose situation.

But we lack any other mechanism for a scenario where interests of some of those 7 committers become misaligned with interests of the majority (which seems to be the case).

And every time Bitcoin will face similar disagreement in the future we will go through it again...


From ricardojdfilipe at gmail.com  Sun Jun 28 20:26:55 2015
From: ricardojdfilipe at gmail.com (Ricardo Filipe)
Date: Sun, 28 Jun 2015 21:26:55 +0100
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CAOG=w-tmQtPbbxX-mBOjWoJVQF8aoiog7Y32QVtRfwcNP22YRg@mail.gmail.com>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
	<558B7352.90708@bitcoins.info>
	<CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>
	<558D46EC.6050300@bitcoins.info>
	<CABm2gDojz6PHdRKxRkMZh-gfYLdcekVfeQMz5r_4EYc-j5tn+w@mail.gmail.com>
	<558E9C06.9080901@bitcoins.info>
	<CABm2gDpTuEoaXZ_M166UEe+z6t-hq39yJaF3K+aL_Ra836jnSg@mail.gmail.com>
	<558FF307.9010606@bitcoins.info>
	<CABm2gDpHL3RUXUK_PAiPv49EcxgjBSjPBwf=4VLhW0Y28OE=FQ@mail.gmail.com>
	<55901F7D.4000001@bitcoins.info>
	<etPan.5590456f.61df0e2.23f7@Patricks-MacBook-Pro-2.local>
	<559054D2.3050009@bitcoins.info>
	<CAOG=w-tmQtPbbxX-mBOjWoJVQF8aoiog7Y32QVtRfwcNP22YRg@mail.gmail.com>
Message-ID: <CALC81CO1G2ZrTAqT69VPnzffhyDA8aCZgDA-J3p4-nZJiEzEvw@mail.gmail.com>

Then demonstrate it. He has been raising quite valid points over the
maintenance of bitcoin core.

This is the same problem as the changes to consensus rules in bitcoin
core: they aren't explicitly defined for the external audience. Thus
forcing people to lobby for hard forks.

2015-06-28 21:16 GMT+01:00 Mark Friedenbach <mark at friedenbach.org>:
> Milly you are absolutely wrong as has been pointed out by numerous people
> numerous times. Your idea of how bitcoin development decision making works
> is demonstrably false. Please stop filling our inboxes with trolling
> accusations, or else this will have to become a moderated list. And no one
> wants that.
>
> On Jun 28, 2015 1:11 PM, "Milly Bitcoin" <milly at bitcoins.info> wrote:
>>
>> I really don't know who has power to do what behind the scenes.  From what
>> i understand, if push comes to shove, it is under the ultimate control of
>> one person who can revoke commit privileges.  Maybe I am wrong about that
>> but the point is most people don't know for sure.
>>
>> You are correct about the people having the choice to download but the
>> influence of the official release is way beyond the influence of any forked
>> release.  What that means in the real world is an open question and would be
>> different depending upon the specific circumstances and difficult to
>> predict.  It is significant power to have control over the official release
>> at the present time.  If they did not have significant power people would
>> not spend significant efforts lobbying them to make changes.  Any new
>> developers hired by companies will do so because they can influence over the
>> official release since that is the only incentive.
>>
>> It seems to me that this block size fork is only the beginning of the
>> issues that will arise over the coming years.  Whatever powers the core
>> maintainers have it is going to be exploited one way or another as time goes
>> on.  Maybe there are enough feedback mechanisms to protect against that, I
>> don't really know.
>>
>> Russ
>>
>>
>>
>>
>>
>> On 6/28/2015 3:05 PM, Patrick Murck wrote:
>>
>> Wladimir has no more or less ?power? to push change to the Bitcoin Core
>> codebase than any other person with commit privileges to the GitHub repo. If
>> I?m not mistaken there are 7 people with commit privileges and five of them
>> are active. If Wladimir committed a change it could be reverted by any of
>> the others. This is by design and ensures that changes will have reached
>> some level of technical consensus before they are merged, among other
>> things.
>>
>> Furthermore even assuming the Core Maintainer commits a change to Bitcoin
>> Core (that isn?t reverted and that gets packaged up into the next code
>> release) that still doesn?t push a change to the bitcoin network. There is
>> no auto-update on Bitcoin Core so individuals and companies running Bitcoin
>> Core software have to choose to upgrade. Further still, developers that
>> maintain alternative implementations would have to decide to merge those
>> changes to the codebase they are indepently maintaining (and their users
>> would need to update, etc.).
>>
>> I understand why it might *seem* to be the case that the Core Maintainer
>> is empowered to make changes to "teh Bitcoin" but the reality is that the
>> Core Maintainer role is really about cat herding and project management of
>> Bitcoin Core the open-source software project and not the bitcoin network.
>> We?re lucky Wladimir has agreed to take on so much of the scut work to keep
>> the project moving forward.
>>
>> The process might get ugly and inefficient but that?s the cost of having
>> no wizard behind the curtain.
>>
>> -pm
>>
>> --
>> Patrick Murck
>>
>> On June 28, 2015 at 9:23:47 AM, Milly Bitcoin (milly at bitcoins.info) wrote:
>>
>> The core maintainer has always been in control of the consensus rules.
>> Satoshi came up with the rules and put them in there. Since then any
>> changes to any part of the code go through the core maintainer. It
>> looks to me as if people are saying it somehow changed along the way
>> because they don't want to hurt people's feeling, upset up, get them to
>> quit, etc. Sure there are checks and balances and people don't have to
>> use the main code base but if they change the consensus rules they are
>> incompatible.
>>
>> The notion that because people can download different rules and run them
>> is interesting from a theoretical perspective but that is constrained by
>> the network effect. I can say the US government is not the "decider" of
>> laws because I can vote them out, recall them, challenge things in
>> court, or secede and start my own country. You can also say the
>> judge/jury in a criminal court case is not a "decider" because the
>> president can always issue a pardon. But those points are generally not
>> useful in a practical sense.
>>
>> The issue about the developers is the tremendous influence they have to
>> veto any changes. I don't have veto power yet I have more bitcoins than
>> garzik says he has. The whole Bitcoin software development system is
>> subject to attack from just a couple of people who have this veto
>> power. With all the crying and moaning about centralization on this
>> list I would think that would be a concern.
>>
>> Russ
>>
>>
>>
>> On 6/28/2015 11:35 AM, Jorge Tim?n wrote:
>> > On Sun, Jun 28, 2015 at 3:13 PM, Milly Bitcoin <milly at bitcoins.info>
>> > wrote:
>> >> I never said something was approved by garzik added something after it
>> >> was
>> >> opposed. What I said was a proposal was made and 4 people commented on
>> >> the
>> >> Github. He then tweeted there was near universal approval before most
>> >> people even heard about the subject. It was not controversial but i was
>> >> pointing out the arrogance of some of the developers. He considers the
>> >> entire universe of Bitcoin stakeholders to be a very small group of
>> >> insiders, not the entire universe of Bitcoin users. Another thing I
>> >> have
>> >> seen on Github for bitcoin.org is how some the maintainers change the
>> >> rules
>> >> on the fly. Sometimes they say a proposal had no objections so it is
>> >> approved. Other times they say a proposal has no support so it is
>> >> rejected.
>> > Ok, I misunderstood.
>> > Well, the fact is that the number of capable reviewers is quite small.
>> > If more companies hired and trained more developers to become bitcoin
>> > core developers that situation could change, but that's where we are
>> > now.
>> >
>> >> You are also trying to say that the core developers actually have
>> >> little
>> >> influence and are not "deciders" because anyone can fork the code. That
>> >> has
>> >> already been discussed at length and such an argument is faulty because
>> >> there is a constraint that your software is incompatible with everyone
>> >> else.
>> > Only if you change the consensus rules (which are, in fact, a
>> > relatively small part of the code).
>> > Mike mantains Bitcoin XT and that's fine, Peter Todd maintains patches
>> > with the replace by fee policy, libbitcoin also changes many
>> > non-consensus things, there's code written in other languages...
>> > There's multiple counter-examples to your claim of that argument being
>> > faulty.
>> > Seriously, forking the project is just one click. You should try it
>> > out like at least 9627 other people have done.
>> > >From there, you can pay your own developers (if you don't know how to
>> > code yourself) and maybe they're also fine being insulted by you as
>> > part of the job.
>> > What you still can't do is unilaterally change the consensus rules of
>> > a running p2p consensus system, because you cannot force the current
>> > users to run any software they don't want to run.
>> >
>> >> The issue is that there is no way right now to change the consensus
>> >> rules
>> >> except to go through the core maintainer unless you get everybody on
>> >> the
>> >> network to switch to your fork. People who keep repeating that the
>> >> software
>> >> development is "decentralized because you fork the code" without
>> >> explaining
>> >> the constraints are just cultists.
>> > Please, stop the cultist crap. Maybe insulting people like that is how
>> > you got people to call you a troll.
>> > But, yes, you are right: there's no known mechanism for safely
>> > deploying controversial changes to the consensus rules
>> >
>> >> The discussion has nothing to do with who has the position now and I
>> >> never
>> >> said he has "control over the consensus rules." The maintainer has a
>> >> very
>> >> large influence way beyond anyone else. As for your claim that I want
>> >> someone hurt because I am explaining the process, that is ridiculous.
>> >> If
>> >> the Core maintainers did not have significant influence to change the
>> >> consensus rules then everybody would not be spending all this time
>> >> lobbying
>> >> them to have them changed.
>> > Well, if you don't think he has control over the consensus rules we're
>> > advancing.
>> > I think that was implied from some of your previous claims. He is no
>> > "decider" on consensus changes.
>> > Insisting on it can indeed get him hurt, so I'm happy that you're
>> > taking that back (or clarifying that really wasn't your position).
>> > Influence is very relative and not only core devs have "influence".
>> > Maybe Andreas Antonopolous has more "influence" than I have because he
>> > is a more public figure?
>> > Well, that's fine I think. I don't see the point in discussing who has
>> > how much influence.
>> >
>> >> The outside influences and stake of the developer is a relevant topic.
>> >> The
>> >> same types of things are discussed on this list all the time in the
>> >> context
>> >> of miners, users, merchants, and exchanges. Again, the developers try
>> >> to
>> >> place themselves on some kind of pedestal where they are the protectors
>> >> and
>> >> pure and everyone else (miners, users, merchants) are abusers,
>> >> spammers,
>> >> attackers, scammers, cheaters, etc. It is Garzik who voluntarily made
>> >> an
>> >> issue of how many bitcoins he holds and he made that issue in the same
>> >> place
>> >> where he announces many of the technical issues. It is very relevant
>> >> that
>> >> he has a minimal stake in Bitcoin holdings yet he goes around making
>> >> major
>> >> decisions about Bitcoin and trying to dictate who is allowed to
>> >> participate
>> >> in discussions. If a core developer has minimal stake in Bitcoin yet
>> >> has
>> >> major veto power over code change that is a problem.
>> > Please, don't generalize. I don't think I put myself in any kind of
>> > pedestal.
>> > That is insulting to me and many others (you may not even know and
>> > you're insulting them).
>> > And I think my Bitcoin holdings are completely irrelevant when judging
>> > my contributions to the software: either they're good or not, and who
>> > I am or how many Bitcoins I have at any given time shouldn't matter.
>> > Again, nobody forces you to use our software, as said there's
>> > alternatives (including forking the project right now).
>> >
>> >> You are correct that you cannot give power to any person over the
>> >> Internet
>> >> which is why some kind of process needs to be developed that does not
>> >> involve trying to convince one person to make the changes or a system
>> >> that
>> >> depends on unwritten, ever-changing rules maintained by a handful of
>> >> people.
>> > Well, for now the process we have is seeking consensus, and although
>> > our definition of "uncontroversial" is very vague, I think it is quite
>> > obvious when a proposed change is not "uncontroversial" (like in the
>> > block size debate).
>> > It seems to me that any other "formal process" would imply
>> > centralization in the decision making of the consensus rules (and from
>> > there you only have to corrupt that centralized organization to
>> > destroy Bitcoin).
>> >
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

From adam at cypherspace.org  Sun Jun 28 21:00:28 2015
From: adam at cypherspace.org (Adam Back)
Date: Sun, 28 Jun 2015 23:00:28 +0200
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CALC81CO1G2ZrTAqT69VPnzffhyDA8aCZgDA-J3p4-nZJiEzEvw@mail.gmail.com>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
	<558B7352.90708@bitcoins.info>
	<CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>
	<558D46EC.6050300@bitcoins.info>
	<CABm2gDojz6PHdRKxRkMZh-gfYLdcekVfeQMz5r_4EYc-j5tn+w@mail.gmail.com>
	<558E9C06.9080901@bitcoins.info>
	<CABm2gDpTuEoaXZ_M166UEe+z6t-hq39yJaF3K+aL_Ra836jnSg@mail.gmail.com>
	<558FF307.9010606@bitcoins.info>
	<CABm2gDpHL3RUXUK_PAiPv49EcxgjBSjPBwf=4VLhW0Y28OE=FQ@mail.gmail.com>
	<55901F7D.4000001@bitcoins.info>
	<etPan.5590456f.61df0e2.23f7@Patricks-MacBook-Pro-2.local>
	<559054D2.3050009@bitcoins.info>
	<CAOG=w-tmQtPbbxX-mBOjWoJVQF8aoiog7Y32QVtRfwcNP22YRg@mail.gmail.com>
	<CALC81CO1G2ZrTAqT69VPnzffhyDA8aCZgDA-J3p4-nZJiEzEvw@mail.gmail.com>
Message-ID: <CALqxMTG8O_z9c1HnbAsW53J4KL2zGaSiC7SfrFp_Baf-Rfc6EA@mail.gmail.com>

I think we need a second mailing list: bitcoin-process for people to
learn about bitcoin process.

And someone to write a FAQ on it's sign up page so people interested
could at least discuss from a starting point of understanding how and
why it works the way it does!

Adam

From gavinandresen at gmail.com  Sun Jun 28 21:05:10 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Sun, 28 Jun 2015 17:05:10 -0400
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CALqxMTG7+MMN50VH9-Y++B1_DeBXTBKpkeA5dYT1EbVGZ1aYag@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>
	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>
	<CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>
	<CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>
	<COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>
	<CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>
	<CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>
	<CALqxMTFv+nLo3phA2HS26F=r5+yGCOh=z8+Kub7GuC_bGVOfXg@mail.gmail.com>
	<CALqxMTG7+MMN50VH9-Y++B1_DeBXTBKpkeA5dYT1EbVGZ1aYag@mail.gmail.com>
Message-ID: <CABsx9T3Xhu4n3LzjEjanbAnUr5UeG0DzY7HXchfOvEa+BNqakw@mail.gmail.com>

On Sun, Jun 28, 2015 at 2:58 PM, Adam Back <adam at cypherspace.org> wrote:

> This is probably going to sound impolite, but I think it's pertinent.
>
> Gavin, on dwelling on the the fact that you appear to not understand
> the basics of the lightning network, I am a little alarmed about this


If I don't see how switching from using the thousands of fully-validating
bitcoin nodes with (tens? hundreds?) of Lightning Network hubs is better in
terms of decentralization (or security, in terms of Sybil/DoS attacks),
then I doubt other people do, either. You need to do a better job of
explaining it.

But even if you could convince me that it WAS better from a
security/decentralization point of view:

a) Lightning Network is nothing but a whitepaper right now. We are a long
way from a practical implementation supported by even one wallet.

b) The Lightning Network paper itself says bigger blocks will be needed
even if (especially if!) Lightning is wildly successful.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/b1dc1232/attachment-0001.html>

From mickeybob at gmail.com  Sun Jun 28 21:23:51 2015
From: mickeybob at gmail.com (Michael Naber)
Date: Sun, 28 Jun 2015 17:23:51 -0400
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CABsx9T3Xhu4n3LzjEjanbAnUr5UeG0DzY7HXchfOvEa+BNqakw@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>
	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>
	<CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>
	<CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>
	<COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>
	<CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>
	<CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>
	<CALqxMTFv+nLo3phA2HS26F=r5+yGCOh=z8+Kub7GuC_bGVOfXg@mail.gmail.com>
	<CALqxMTG7+MMN50VH9-Y++B1_DeBXTBKpkeA5dYT1EbVGZ1aYag@mail.gmail.com>
	<CABsx9T3Xhu4n3LzjEjanbAnUr5UeG0DzY7HXchfOvEa+BNqakw@mail.gmail.com>
Message-ID: <CALgxB7uuC0NbQnAVLqypF6OdZ-ETJVGn5T6FGMfuB2f=zR0VnA@mail.gmail.com>

Bitcoin Core exists to solve the global consensus problem. Global network
consensus means that there is global network recognition that a particular
transaction has occurred and is irreversible. Systems like hub-and-spoke,
payment channels, Lightning, etc. are useful, but they are not solutions to
the global consensus problem, because they do not meet this definition of
global consensus.

Let us focus our efforts on the goal of making Bitcoin Core the best
solution to the global consensus problem. Let us address Peter Todd?s
requirements to raise the block size limit to 8MB:

1) Run a successful test-net with 8MB blocks and show that the network
works and small miners are not unduly disadvantaged

2) Address Peter Todd's concern: ?without scarcity of blockchain space
there is no reason to think that transaction fees won?t fall to the
marginal cost of including a transaction, which doesn?t leave anything to
pay for proof-of-work security?

Regarding 1: This is not done yet, though it seems reasonable enough to do.

Regarding 2: It is a fallacy to believe that artificially constraining
capacity of Bitcoin Core below the limits of technology will lead to
increased fees and therefore lead to sufficient security in the far-future.
Constraining capacity below the limits of technology will ultimately only
drive users seeking global consensus to solutions other than Bitcoin Core,
perhaps through a fork.

Demand for user access to high-capacity global consensus is real, and the
technology exists to deliver it; if we don't meet that demand in Bitcoin
Core, it's inevitably going to get met through some other product. Let's
not let that happen. Let's keep Bitcoin Core the best solution to the
global consensus problem.

Thoughts? Is there anything else not mentioned above which anyone would
like done in order to raise the block size to a static 8 MB?

On Sun, Jun 28, 2015 at 5:05 PM, Gavin Andresen <gavinandresen at gmail.com>
wrote:

> On Sun, Jun 28, 2015 at 2:58 PM, Adam Back <adam at cypherspace.org> wrote:
>
>> This is probably going to sound impolite, but I think it's pertinent.
>>
>> Gavin, on dwelling on the the fact that you appear to not understand
>> the basics of the lightning network, I am a little alarmed about this
>
>
> If I don't see how switching from using the thousands of fully-validating
> bitcoin nodes with (tens? hundreds?) of Lightning Network hubs is better in
> terms of decentralization (or security, in terms of Sybil/DoS attacks),
> then I doubt other people do, either. You need to do a better job of
> explaining it.
>
> But even if you could convince me that it WAS better from a
> security/decentralization point of view:
>
> a) Lightning Network is nothing but a whitepaper right now. We are a long
> way from a practical implementation supported by even one wallet.
>
> b) The Lightning Network paper itself says bigger blocks will be needed
> even if (especially if!) Lightning is wildly successful.
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/1bff0d26/attachment.html>

From santino.napolitano at yandex.com  Sun Jun 28 21:53:23 2015
From: santino.napolitano at yandex.com (Santino Napolitano)
Date: Mon, 29 Jun 2015 00:53:23 +0300
Subject: [bitcoin-dev] Original Vision
In-Reply-To: <558F583C.1000500@gmail.com>
References: <1164261435450448@web14h.yandex.ru> <558F583C.1000500@gmail.com>
Message-ID: <1086391435528403@web11j.yandex.ru>

Is the security concern that a newly announced block may not actually reflect a valid block (but valid enough to trick the client; i.e. it appears to link to the best-work chain) in an attempt to defraud the light client?

Like I pointed out, I'm not sure the goal was _perfect_ decentralization. The author seemed primarily keen to avoid having a single organization with direct control over the ledger. I think your specific fear could be mitigated by the light client peering with a node the light client somewhat trusts -- or at least one which has no incentive to cooperate in some attack against it which requires non-trivial mining expenditure. The IP would be logged and the fraud could be taken to a court if the light client chooses a node in the proper jurisdiction. I think for many use cases that might be sufficient. If it's a more serious transaction other nodes could be consulted.

If my reasoning is in error please correct. I'm sure many of you are much better at game theory than I.

28.06.2015, 05:13, "Patrick Strateman" <patrick.strateman at gmail.com>:
>> ?Further, it appears clear that the original author intended
>
> organizations operating full network nodes would provide connectivity to
> light clients and these light clients would make up the majority of the
> user base.
>
> Satoshi also believed that fraud proofs would be widely available and
> practical.
>
> If fraud proofs were practical SPV client security would be much closer
> to full node security than it is today.
>
> Unfortunately no design for fraud proofs which is both efficient and
> secure has been proposed; much less implemented and deployed.
>
> In building a system as new and innovative as bitcoin certain things
> will be wrong.
>
> The perception that SPV clients could be made nearly as secure as full
> nodes is one example of something that was wrong.
>
> On 06/27/2015 05:14 PM, Santino Napolitano wrote:
>> ?There is much heated debate going on right now and I know it can be very stressful but I'd like to point out that it is really amazing how passionately so many feel about this once very small project. Let's not forget there is something really special going on here and we're all part of it.
>>
>> ?The current debate has little to do with block size or hard-forks, IMO. It's about the nature of Bitcoin and what it means to people and how it will grow. I would like to take a moment to share my interpretation of the original author's intent based on everything I could find and read from this person. This is not to say their original vision is paramount-- or even that I got it completely correct but I think it might do us some good to think about.
>>
>> ?It seems as though the incentive conceived of for running a full network node was that it would enable mining. The proceeds from mining (new coins and transaction fees) would be the reward and provide a reason to continue operating these nodes. If fees are ever to be a sufficient reward and still allow for a practical and useful system the size of the blocks must grow significantly as must the user base. I'm not sure that this is really contested but I haven't exhaustively reviewed everyone's opinion so please excuse me if I have marginalized you. If you do contest that I would be interested in hearing it.
>>
>> ?Further, it appears clear that the original author intended organizations operating full network nodes would provide connectivity to light clients and these light clients would make up the majority of the user base. This is completely consistent with current trends in Internet consumption, e.g. tablets and phones are becoming more preferred to even owning a traditional computer. Having the system be entirely decentralized and trustless for every client does not appear to me to be the original design goal. Yes, the whitepaper speaks of the design goal as not having a need for a trusted third party but it does not say that some amount of trust won't be preferred by a majority of users. In fact, in the SPV section it implies some amount of localized trust is perhaps a necessary trade-off and maybe businesses should still run their own full network node if they want the stronger completely trustless guarantee. The global decentralized consensus appears meant to make the netwo
 rk
>
> ??r
>> ??esilient to a single government or other adversary's ability to shut the network down. If you really want to trust no one it is your option at a cost and should be possible by design. The author further gives evidence that they believe Moore's observation would keep the idea of running a full network node a practical one at global scale for perpetuity. It does not appear as if they intended for every individual to run one at home nor in their pocket.
>>
>> ?If my interpretation seems incorrect please do point it out. I hope this hasn't been too off-topic and distracting. The original author's engineering ingenuity is what gave me any interest in this project so re-visiting their design and scaling intentions might be helpful for us to move forward-- together.
>>
>> ?_______________________________________________
>> ?bitcoin-dev mailing list
>> ?bitcoin-dev at lists.linuxfoundation.org
>> ?https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From adam at cypherspace.org  Sun Jun 28 22:07:11 2015
From: adam at cypherspace.org (Adam Back)
Date: Mon, 29 Jun 2015 00:07:11 +0200
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CABsx9T3Xhu4n3LzjEjanbAnUr5UeG0DzY7HXchfOvEa+BNqakw@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>
	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>
	<CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>
	<CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>
	<COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>
	<CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>
	<CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>
	<CALqxMTFv+nLo3phA2HS26F=r5+yGCOh=z8+Kub7GuC_bGVOfXg@mail.gmail.com>
	<CALqxMTG7+MMN50VH9-Y++B1_DeBXTBKpkeA5dYT1EbVGZ1aYag@mail.gmail.com>
	<CABsx9T3Xhu4n3LzjEjanbAnUr5UeG0DzY7HXchfOvEa+BNqakw@mail.gmail.com>
Message-ID: <CALqxMTGd1mB4Sra=ORV=d0y1v8KzUQnK8=MX2_MFP1NuMnPm+Q@mail.gmail.com>

On 28 June 2015 at 23:05, Gavin Andresen <gavinandresen at gmail.com> wrote:
> On Sun, Jun 28, 2015 at 2:58 PM, Adam Back <adam at cypherspace.org> wrote:
>>
>> This is probably going to sound impolite, but I think it's pertinent.
>>
>> Gavin, on dwelling on the the fact that you appear to not understand
>> the basics of the lightning network, I am a little alarmed about this
>
> If I don't see how switching from using the thousands of fully-validating
> bitcoin nodes with (tens? hundreds?) of Lightning Network hubs is better in
> terms of decentralization (or security, in terms of Sybil/DoS attacks),

Its a source routed network, not a broadcast network.  Fees are
charged on channels so
DoS is just a way to pay people a multiple of bandwidth cost.

in terms of trustlessness Andrew Lapp explained it pretty well:
> I don't mind a set of central authorities being part of an option IF the central authority
> doesn't need to be trusted. On the blockchain, the larger miner is, the more you have
> to trust them to not collude with anyone to reverse your payments or destroy the trust
> in the system in some attack. On the Lightning network, a large hub can't steal my
> money.
>
> I think most people share the sentiment that trustlessness is what matters and
> decentralization is just a synonym for trustlessness when talking about the blockchain
> and mining, however decentralization isn't necessarily synonymous with trustlessness
> nor is centralization synonymous with trust-requiring when you're talking about
> something else.

Gavin wrote:
> then I doubt other people do, either. You need to do a better job of explaining it.

I gave it a go a couple of posts up.  I didnt realise people here
proposing mega-blocks were not paying attention to the whole lightning
concept and detail.

People said lots of things about how it's better to work on lightning,
to scale algorithmically, rather than increasing block-size to
dangerously centralising proportions.
Did you think we were Gish Galloping you?  We were completely serious.

The paper is on http://lightning.network

though it is not so clearly explained there, however Joseph is working
on improving the paper as I understand it.

Rusty wrote a high-level blog explainer: http://rusty.ozlabs.org/?p=450

though I don't recall that he got into recirculation, negative fees
etc.  A good question
for the lightning-dev mailing list maybe.

http://lists.linuxfoundation.org/pipermail/lightning-dev/

There are a couple of recorded presentation videos / podcasts from Joseph Poon.

sf bitcoin dev presentation:

https://www.youtube.com/watch?v=2QH5EV_Io0E

epicenter bitcoin:

https://www.youtube.com/watch?v=fBS_ieDwQ9k

There's a related paper from Christian Decker "Duplex Micropayment Channels"

http://www.tik.ee.ethz.ch/file/716b955c130e6c703fac336ea17b1670/duplex-micropayment-channels.pdf

> But even if you could convince me that it WAS better from a
> security/decentralization point of view:

We don't need to convince people, we just have to code it and
demonstrate it, which people are working on.

But Lightning does need a decentralised and secure Bitcoin network for
anchor and reclaim transactions, so take it easy with the mega-blocks
in the mean-time.

> a) Lightning Network is nothing but a whitepaper right now. We are a long
> way from a practical implementation supported by even one wallet.

maybe you want to check in on

https://github.com/ElementsProject/lightning

and help code it.

I expect we can get something running inside a year.  Which kind of
obviates the burning "need" for a schedule into the far future rising
to 8GB with unrealistic bandwidth growth assumptions that will surely
cause centralisation problems.

For block-size I think it would be better to have a 2-4 year or one
off size bump with policy limits and then re-evaluate after we've seen
what lightning can do.

I have been saying the same thing ad-nauseam for weeks.

> b) The Lightning Network paper itself says bigger blocks will be needed even
> if (especially if!) Lightning is wildly successful.

Not nearly as big as if you tried to put the transactions it would
enable on the chain, that's for sure!  We dont know what that limit is
but people have been imagining 1,000 or 10,000 transactions per anchor
transaction.  If micro-payments get popular many more.

Basically users would park Bitcoins a on a hub channel instead of the
blockchain.  The channel can stay up indefinitely, and the user has
assurances analogous to greenaddress time-lock mechanism

Flexcap maybe a better solution because that allows bursting
block-size when economically rational.

Note that the time-locks with lightning are assumed to be relative
CTLV eg using the mechanism as Mark Friedenbach described in a post
here, and as implemented in the elements sidechain, so there is not a
huge rush to reclaim funds.  They can be spread out in time.

If you want to scale Bitcoin - like really scale it - work on
lightning.  Lightning + a decentralised and secure Bitcoin, scales
further and is more trustless than Bitcoin forced into centralisation
via premature mega-blocks.

To my mind a shorter, more conservative block-size increase to give a
few years room is enough for now.  We'll be in a better position to
know what the right next step is after lightning is running.

Something to mention is you can elide transactions before reclaiming.
So long as the balancing transaction is correct, someone online can
swap it for you with an equal balance one with less hops of
intermediate payment flows.


It's pretty interesting what you can do already.  I'm fairly confident
we're not finished algorithmically optimising it either.  It's
surprising how much new territory there is just sitting there
unexplored.

Adam

From milly at bitcoins.info  Sun Jun 28 23:52:04 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Sun, 28 Jun 2015 19:52:04 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CAOG=w-tmQtPbbxX-mBOjWoJVQF8aoiog7Y32QVtRfwcNP22YRg@mail.gmail.com>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
	<558B7352.90708@bitcoins.info>
	<CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>
	<558D46EC.6050300@bitcoins.info>
	<CABm2gDojz6PHdRKxRkMZh-gfYLdcekVfeQMz5r_4EYc-j5tn+w@mail.gmail.com>
	<558E9C06.9080901@bitcoins.info>
	<CABm2gDpTuEoaXZ_M166UEe+z6t-hq39yJaF3K+aL_Ra836jnSg@mail.gmail.com>
	<558FF307.9010606@bitcoins.info>
	<CABm2gDpHL3RUXUK_PAiPv49EcxgjBSjPBwf=4VLhW0Y28OE=FQ@mail.gmail.com>
	<55901F7D.4000001@bitcoins.info>
	<etPan.5590456f.61df0e2.23f7@Patricks-MacBook-Pro-2.local>
	<559054D2.3050009@bitcoins.info>
	<CAOG=w-tmQtPbbxX-mBOjWoJVQF8aoiog7Y32QVtRfwcNP22YRg@mail.gmail.com>
Message-ID: <559088A4.9080700@bitcoins.info>

Nobody has pointed out I am "wrong," it is just semantics about the term 
"decider" and I am just essentially repeating things said by others.    
As for the term "troll," that is used primarily used by teenagers to 
deal with people they don't agree with.  Unfortunately the developers 
are often 20-something kids like yourself who have never dealt with a 
large system of diverse stakeholders or anything outside of their 
specific technical areas.

As for your claim that I accused someone of something, I don't know what 
you are talking about.  If you don't like my messages then don't read 
them.  It looks to me like you don't like the idea of the developers 
being questioned about their authority which is understandable as one of 
the people involved in Blocksteam because you want the system to stay 
the way it is.

If you want to moderate the list the go ahead, I can't stop you but I am 
not going to listen to anyone who uses the term "troll."

Russ



On 6/28/2015 4:16 PM, Mark Friedenbach wrote:
>
> Milly you are absolutely wrong as has been pointed out by numerous 
> people numerous times. Your idea of how bitcoin development decision 
> making works is demonstrably false. Please stop filling our inboxes 
> with trolling accusations, or else this will have to become a 
> moderated list. And no one wants that.
>
> On Jun 28, 2015 1:11 PM, "Milly Bitcoin" <milly at bitcoins.info 
> <mailto:milly at bitcoins.info>> wrote:
>
>     I really don't know who has power to do what behind the scenes. 
>     From what i understand, if push comes to shove, it is under the
>     ultimate control of one person who can revoke commit privileges. 
>     Maybe I am wrong about that but the point is most people don't
>     know for sure.
>
>     You are correct about the people having the choice to download but
>     the influence of the official release is way beyond the influence
>     of any forked release.  What that means in the real world is an
>     open question and would be different depending upon the specific
>     circumstances and difficult to predict.  It is significant power
>     to have control over the official release at the present time.  If
>     they did not have significant power people would not spend
>     significant efforts lobbying them to make changes.  Any new
>     developers hired by companies will do so because they can
>     influence over the official release since that is the only incentive.
>
>     It seems to me that this block size fork is only the beginning of
>     the issues that will arise over the coming years.  Whatever powers
>     the core maintainers have it is going to be exploited one way or
>     another as time goes on. Maybe there are enough feedback
>     mechanisms to protect against that, I don't really know.
>
>     Russ
>
>
>
>
>
>     On 6/28/2015 3:05 PM, Patrick Murck wrote:
>>     Wladimir has no more or less ?power? to push change to the
>>     Bitcoin Core codebase than any other person with commit
>>     privileges to the GitHub repo. If I?m not mistaken there are 7
>>     people with commit privileges and five of them are active. If
>>     Wladimir committed a change it could be reverted by any of the
>>     others. This is by design and ensures that changes will have
>>     reached some level of technical consensus before they are merged,
>>     among other things.
>>
>>     Furthermore even assuming the Core Maintainer commits a change to
>>     Bitcoin Core (that isn?t reverted and that gets packaged up into
>>     the next code release) that still doesn?t push a change to the
>>     bitcoin network. There is no auto-update on Bitcoin Core so
>>     individuals and companies running Bitcoin Core software have to
>>     choose to upgrade. Further still, developers that maintain
>>     alternative implementations would have to decide to merge those
>>     changes to the codebase they are indepently maintaining (and
>>     their users would need to update, etc.).
>>
>>     I understand why it might *seem* to be the case that the Core
>>     Maintainer is empowered to make changes to "teh Bitcoin" but the
>>     reality is that the Core Maintainer role is really about cat
>>     herding and project management of Bitcoin Core the open-source
>>     software project and not the bitcoin network. We?re lucky
>>     Wladimir has agreed to take on so much of the scut work to keep
>>     the project moving forward.
>>
>>     The process might get ugly and inefficient but that?s the cost of
>>     having no wizard behind the curtain.
>>
>>     -pm
>>
>>     -- 
>>     Patrick Murck
>>
>>     On June 28, 2015 at 9:23:47 AM, Milly Bitcoin
>>     (milly at bitcoins.info <mailto:milly at bitcoins.info>) wrote:
>>
>>>     The core maintainer has always been in control of the consensus
>>>     rules.
>>>     Satoshi came up with the rules and put them in there. Since then
>>>     any
>>>     changes to any part of the code go through the core maintainer. It
>>>     looks to me as if people are saying it somehow changed along the
>>>     way
>>>     because they don't want to hurt people's feeling, upset up, get
>>>     them to
>>>     quit, etc. Sure there are checks and balances and people don't
>>>     have to
>>>     use the main code base but if they change the consensus rules
>>>     they are
>>>     incompatible.
>>>
>>>     The notion that because people can download different rules and
>>>     run them
>>>     is interesting from a theoretical perspective but that is
>>>     constrained by
>>>     the network effect. I can say the US government is not the
>>>     "decider" of
>>>     laws because I can vote them out, recall them, challenge things in
>>>     court, or secede and start my own country. You can also say the
>>>     judge/jury in a criminal court case is not a "decider" because the
>>>     president can always issue a pardon. But those points are
>>>     generally not
>>>     useful in a practical sense.
>>>
>>>     The issue about the developers is the tremendous influence they
>>>     have to
>>>     veto any changes. I don't have veto power yet I have more
>>>     bitcoins than
>>>     garzik says he has. The whole Bitcoin software development
>>>     system is
>>>     subject to attack from just a couple of people who have this veto
>>>     power. With all the crying and moaning about centralization on this
>>>     list I would think that would be a concern.
>>>
>>>     Russ
>>>
>>>
>>>
>>>     On 6/28/2015 11:35 AM, Jorge Tim?n wrote:
>>>     > On Sun, Jun 28, 2015 at 3:13 PM, Milly Bitcoin
>>>     <milly at bitcoins.info> <mailto:milly at bitcoins.info> wrote:
>>>     >> I never said something was approved by garzik added something
>>>     after it was
>>>     >> opposed. What I said was a proposal was made and 4 people
>>>     commented on the
>>>     >> Github. He then tweeted there was near universal approval
>>>     before most
>>>     >> people even heard about the subject. It was not controversial
>>>     but i was
>>>     >> pointing out the arrogance of some of the developers. He
>>>     considers the
>>>     >> entire universe of Bitcoin stakeholders to be a very small
>>>     group of
>>>     >> insiders, not the entire universe of Bitcoin users. Another
>>>     thing I have
>>>     >> seen on Github for bitcoin.org <http://bitcoin.org> is how
>>>     some the maintainers change the rules
>>>     >> on the fly. Sometimes they say a proposal had no objections
>>>     so it is
>>>     >> approved. Other times they say a proposal has no support so
>>>     it is rejected.
>>>     > Ok, I misunderstood.
>>>     > Well, the fact is that the number of capable reviewers is
>>>     quite small.
>>>     > If more companies hired and trained more developers to become
>>>     bitcoin
>>>     > core developers that situation could change, but that's where
>>>     we are
>>>     > now.
>>>     >
>>>     >> You are also trying to say that the core developers actually
>>>     have little
>>>     >> influence and are not "deciders" because anyone can fork the
>>>     code. That has
>>>     >> already been discussed at length and such an argument is
>>>     faulty because
>>>     >> there is a constraint that your software is incompatible with
>>>     everyone else.
>>>     > Only if you change the consensus rules (which are, in fact, a
>>>     > relatively small part of the code).
>>>     > Mike mantains Bitcoin XT and that's fine, Peter Todd maintains
>>>     patches
>>>     > with the replace by fee policy, libbitcoin also changes many
>>>     > non-consensus things, there's code written in other languages...
>>>     > There's multiple counter-examples to your claim of that
>>>     argument being faulty.
>>>     > Seriously, forking the project is just one click. You should
>>>     try it
>>>     > out like at least 9627 other people have done.
>>>     > >From there, you can pay your own developers (if you don't
>>>     know how to
>>>     > code yourself) and maybe they're also fine being insulted by
>>>     you as
>>>     > part of the job.
>>>     > What you still can't do is unilaterally change the consensus
>>>     rules of
>>>     > a running p2p consensus system, because you cannot force the
>>>     current
>>>     > users to run any software they don't want to run.
>>>     >
>>>     >> The issue is that there is no way right now to change the
>>>     consensus rules
>>>     >> except to go through the core maintainer unless you get
>>>     everybody on the
>>>     >> network to switch to your fork. People who keep repeating
>>>     that the software
>>>     >> development is "decentralized because you fork the code"
>>>     without explaining
>>>     >> the constraints are just cultists.
>>>     > Please, stop the cultist crap. Maybe insulting people like
>>>     that is how
>>>     > you got people to call you a troll.
>>>     > But, yes, you are right: there's no known mechanism for safely
>>>     > deploying controversial changes to the consensus rules
>>>     >
>>>     >> The discussion has nothing to do with who has the position
>>>     now and I never
>>>     >> said he has "control over the consensus rules." The
>>>     maintainer has a very
>>>     >> large influence way beyond anyone else. As for your claim
>>>     that I want
>>>     >> someone hurt because I am explaining the process, that is
>>>     ridiculous. If
>>>     >> the Core maintainers did not have significant influence to
>>>     change the
>>>     >> consensus rules then everybody would not be spending all this
>>>     time lobbying
>>>     >> them to have them changed.
>>>     > Well, if you don't think he has control over the consensus
>>>     rules we're
>>>     > advancing.
>>>     > I think that was implied from some of your previous claims. He
>>>     is no
>>>     > "decider" on consensus changes.
>>>     > Insisting on it can indeed get him hurt, so I'm happy that you're
>>>     > taking that back (or clarifying that really wasn't your position).
>>>     > Influence is very relative and not only core devs have
>>>     "influence".
>>>     > Maybe Andreas Antonopolous has more "influence" than I have
>>>     because he
>>>     > is a more public figure?
>>>     > Well, that's fine I think. I don't see the point in discussing
>>>     who has
>>>     > how much influence.
>>>     >
>>>     >> The outside influences and stake of the developer is a
>>>     relevant topic. The
>>>     >> same types of things are discussed on this list all the time
>>>     in the context
>>>     >> of miners, users, merchants, and exchanges. Again, the
>>>     developers try to
>>>     >> place themselves on some kind of pedestal where they are the
>>>     protectors and
>>>     >> pure and everyone else (miners, users, merchants) are
>>>     abusers, spammers,
>>>     >> attackers, scammers, cheaters, etc. It is Garzik who
>>>     voluntarily made an
>>>     >> issue of how many bitcoins he holds and he made that issue in
>>>     the same place
>>>     >> where he announces many of the technical issues. It is very
>>>     relevant that
>>>     >> he has a minimal stake in Bitcoin holdings yet he goes around
>>>     making major
>>>     >> decisions about Bitcoin and trying to dictate who is allowed
>>>     to participate
>>>     >> in discussions. If a core developer has minimal stake in
>>>     Bitcoin yet has
>>>     >> major veto power over code change that is a problem.
>>>     > Please, don't generalize. I don't think I put myself in any
>>>     kind of pedestal.
>>>     > That is insulting to me and many others (you may not even know and
>>>     > you're insulting them).
>>>     > And I think my Bitcoin holdings are completely irrelevant when
>>>     judging
>>>     > my contributions to the software: either they're good or not,
>>>     and who
>>>     > I am or how many Bitcoins I have at any given time shouldn't
>>>     matter.
>>>     > Again, nobody forces you to use our software, as said there's
>>>     > alternatives (including forking the project right now).
>>>     >
>>>     >> You are correct that you cannot give power to any person over
>>>     the Internet
>>>     >> which is why some kind of process needs to be developed that
>>>     does not
>>>     >> involve trying to convince one person to make the changes or
>>>     a system that
>>>     >> depends on unwritten, ever-changing rules maintained by a
>>>     handful of people.
>>>     > Well, for now the process we have is seeking consensus, and
>>>     although
>>>     > our definition of "uncontroversial" is very vague, I think it
>>>     is quite
>>>     > obvious when a proposed change is not "uncontroversial" (like
>>>     in the
>>>     > block size debate).
>>>     > It seems to me that any other "formal process" would imply
>>>     > centralization in the decision making of the consensus rules
>>>     (and from
>>>     > there you only have to corrupt that centralized organization to
>>>     > destroy Bitcoin).
>>>     >
>>>
>>>
>>>     _______________________________________________
>>>     bitcoin-dev mailing list
>>>     bitcoin-dev at lists.linuxfoundation.org
>>>     <mailto:bitcoin-dev at lists.linuxfoundation.org>
>>>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>     _______________________________________________
>     bitcoin-dev mailing list
>     bitcoin-dev at lists.linuxfoundation.org
>     <mailto:bitcoin-dev at lists.linuxfoundation.org>
>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/a359d593/attachment-0001.html>

From milly at bitcoins.info  Mon Jun 29 00:13:20 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Sun, 28 Jun 2015 20:13:20 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <CALqxMTG8O_z9c1HnbAsW53J4KL2zGaSiC7SfrFp_Baf-Rfc6EA@mail.gmail.com>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
	<558B7352.90708@bitcoins.info>
	<CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>
	<558D46EC.6050300@bitcoins.info>
	<CABm2gDojz6PHdRKxRkMZh-gfYLdcekVfeQMz5r_4EYc-j5tn+w@mail.gmail.com>
	<558E9C06.9080901@bitcoins.info>
	<CABm2gDpTuEoaXZ_M166UEe+z6t-hq39yJaF3K+aL_Ra836jnSg@mail.gmail.com>
	<558FF307.9010606@bitcoins.info>
	<CABm2gDpHL3RUXUK_PAiPv49EcxgjBSjPBwf=4VLhW0Y28OE=FQ@mail.gmail.com>
	<55901F7D.4000001@bitcoins.info>
	<etPan.5590456f.61df0e2.23f7@Patricks-MacBook-Pro-2.local>
	<559054D2.3050009@bitcoins.info>
	<CAOG=w-tmQtPbbxX-mBOjWoJVQF8aoiog7Y32QVtRfwcNP22YRg@mail.gmail.com>
	<CALC81CO1G2ZrTAqT69VPnzffhyDA8aCZgDA-J3p4-nZJiEzEvw@mail.gmail.com>
	<CALqxMTG8O_z9c1HnbAsW53J4KL2zGaSiC7SfrFp_Baf-Rfc6EA@mail.gmail.com>
Message-ID: <55908DA0.5030507@bitcoins.info>

The concern with that is that any FAQ will be developed by the same 
small group that controls the github now so they will spin it in an 
unrealistic way.  You see the problem now with the Bitcoin wiki.  While 
the wiki has some valuable information, it also has a number of 
incorrect and cult-like claims about how Bitcoin works.  Tim Swanson has 
made some good videos that describe some of the misinformation that 
often gets repeated on the Wiki and other places.

I had suggested the info on the Wiki be reevaluated piece-by-piece and 
moved to Bitcoin.org but the developers didn't like that. Attempts to 
edit the Wiki often leads to the articles being defaced by the 
maintainers so that is a waste of time.

Russ



On 6/28/2015 5:00 PM, Adam Back wrote:
> I think we need a second mailing list: bitcoin-process for people to
> learn about bitcoin process.
>
> And someone to write a FAQ on it's sign up page so people interested
> could at least discuss from a starting point of understanding how and
> why it works the way it does!
>
> Adam
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>



From lapp0 at purdue.edu  Mon Jun 29 00:23:38 2015
From: lapp0 at purdue.edu (Andrew Lapp)
Date: Sun, 28 Jun 2015 20:23:38 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <55908DA0.5030507@bitcoins.info>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>	<558B7352.90708@bitcoins.info>	<CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>	<558D46EC.6050300@bitcoins.info>	<CABm2gDojz6PHdRKxRkMZh-gfYLdcekVfeQMz5r_4EYc-j5tn+w@mail.gmail.com>	<558E9C06.9080901@bitcoins.info>	<CABm2gDpTuEoaXZ_M166UEe+z6t-hq39yJaF3K+aL_Ra836jnSg@mail.gmail.com>	<558FF307.9010606@bitcoins.info>	<CABm2gDpHL3RUXUK_PAiPv49EcxgjBSjPBwf=4VLhW0Y28OE=FQ@mail.gmail.com>	<55901F7D.4000001@bitcoins.info>	<etPan.5590456f.61df0e2.23f7@Patricks-MacBook-Pro-2.local>	<559054D2.3050009@bitcoins.info>	<CAOG=w-tmQtPbbxX-mBOjWoJVQF8aoiog7Y32QVtRfwcNP22YRg@mail.gmail.com>	<CALC81CO1G2ZrTAqT69VPnzffhyDA8aCZgDA-J3p4-nZJiEzEvw@mail.gmail.com>	<CALqxMTG8O_z9c1HnbAsW53J4KL2zGaSiC7SfrFp_Baf-Rfc6EA@mail.gmail.com>
	<55908DA0.5030507@bitcoins.info>
Message-ID: <5590900A.9080003@purdue.edu>

Your discussion is taking up a lot of room in my inbox and it doesn't 
seem like either side is getting through to the other. Perhaps you could 
create a document outlining all the failure modes possible due to the 
current system, the current systems security assumptions and possible 
solutions. Now it seems this is just a semantic debate and would 
probably be better solved with you writing a BIP and having that 
reviewed and critiqued.

-Andrew Lapp

On 06/28/2015 08:13 PM, Milly Bitcoin wrote:
> The concern with that is that any FAQ will be developed by the same 
> small group that controls the github now so they will spin it in an 
> unrealistic way.  You see the problem now with the Bitcoin wiki.  
> While the wiki has some valuable information, it also has a number of 
> incorrect and cult-like claims about how Bitcoin works. Tim Swanson 
> has made some good videos that describe some of the misinformation 
> that often gets repeated on the Wiki and other places.
>
> I had suggested the info on the Wiki be reevaluated piece-by-piece and 
> moved to Bitcoin.org but the developers didn't like that. Attempts to 
> edit the Wiki often leads to the articles being defaced by the 
> maintainers so that is a waste of time.
>
> Russ
>
>
>
> On 6/28/2015 5:00 PM, Adam Back wrote:
>> I think we need a second mailing list: bitcoin-process for people to
>> learn about bitcoin process.
>>
>> And someone to write a FAQ on it's sign up page so people interested
>> could at least discuss from a starting point of understanding how and
>> why it works the way it does!
>>
>> Adam
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


From elombrozo at gmail.com  Mon Jun 29 00:59:40 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 28 Jun 2015 17:59:40 -0700
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CALqxMTGd1mB4Sra=ORV=d0y1v8KzUQnK8=MX2_MFP1NuMnPm+Q@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>
	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>
	<CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>
	<CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>
	<COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>
	<CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>
	<CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>
	<CALqxMTFv+nLo3phA2HS26F=r5+yGCOh=z8+Kub7GuC_bGVOfXg@mail.gmail.com>
	<CALqxMTG7+MMN50VH9-Y++B1_DeBXTBKpkeA5dYT1EbVGZ1aYag@mail.gmail.com>
	<CABsx9T3Xhu4n3LzjEjanbAnUr5UeG0DzY7HXchfOvEa+BNqakw@mail.gmail.com>
	<CALqxMTGd1mB4Sra=ORV=d0y1v8KzUQnK8=MX2_MFP1NuMnPm+Q@mail.gmail.com>
Message-ID: <2FEA7608-27D6-44C4-B521-091C061D5498@gmail.com>

There?s no question that a flooding mesh network requiring global consensus for every transactions is not the way. It?s also clear that a routable protocol capable of compensating hubs is basically the holy grail.

So what?s there to discuss?

- Eric

> On Jun 28, 2015, at 3:07 PM, Adam Back <adam at cypherspace.org> wrote:
> 
> On 28 June 2015 at 23:05, Gavin Andresen <gavinandresen at gmail.com> wrote:
>> On Sun, Jun 28, 2015 at 2:58 PM, Adam Back <adam at cypherspace.org> wrote:
>>> 
>>> This is probably going to sound impolite, but I think it's pertinent.
>>> 
>>> Gavin, on dwelling on the the fact that you appear to not understand
>>> the basics of the lightning network, I am a little alarmed about this
>> 
>> If I don't see how switching from using the thousands of fully-validating
>> bitcoin nodes with (tens? hundreds?) of Lightning Network hubs is better in
>> terms of decentralization (or security, in terms of Sybil/DoS attacks),
> 
> Its a source routed network, not a broadcast network.  Fees are
> charged on channels so
> DoS is just a way to pay people a multiple of bandwidth cost.
> 
> in terms of trustlessness Andrew Lapp explained it pretty well:
>> I don't mind a set of central authorities being part of an option IF the central authority
>> doesn't need to be trusted. On the blockchain, the larger miner is, the more you have
>> to trust them to not collude with anyone to reverse your payments or destroy the trust
>> in the system in some attack. On the Lightning network, a large hub can't steal my
>> money.
>> 
>> I think most people share the sentiment that trustlessness is what matters and
>> decentralization is just a synonym for trustlessness when talking about the blockchain
>> and mining, however decentralization isn't necessarily synonymous with trustlessness
>> nor is centralization synonymous with trust-requiring when you're talking about
>> something else.
> 
> Gavin wrote:
>> then I doubt other people do, either. You need to do a better job of explaining it.
> 
> I gave it a go a couple of posts up.  I didnt realise people here
> proposing mega-blocks were not paying attention to the whole lightning
> concept and detail.
> 
> People said lots of things about how it's better to work on lightning,
> to scale algorithmically, rather than increasing block-size to
> dangerously centralising proportions.
> Did you think we were Gish Galloping you?  We were completely serious.
> 
> The paper is on http://lightning.network
> 
> though it is not so clearly explained there, however Joseph is working
> on improving the paper as I understand it.
> 
> Rusty wrote a high-level blog explainer: http://rusty.ozlabs.org/?p=450
> 
> though I don't recall that he got into recirculation, negative fees
> etc.  A good question
> for the lightning-dev mailing list maybe.
> 
> http://lists.linuxfoundation.org/pipermail/lightning-dev/
> 
> There are a couple of recorded presentation videos / podcasts from Joseph Poon.
> 
> sf bitcoin dev presentation:
> 
> https://www.youtube.com/watch?v=2QH5EV_Io0E
> 
> epicenter bitcoin:
> 
> https://www.youtube.com/watch?v=fBS_ieDwQ9k
> 
> There's a related paper from Christian Decker "Duplex Micropayment Channels"
> 
> http://www.tik.ee.ethz.ch/file/716b955c130e6c703fac336ea17b1670/duplex-micropayment-channels.pdf
> 
>> But even if you could convince me that it WAS better from a
>> security/decentralization point of view:
> 
> We don't need to convince people, we just have to code it and
> demonstrate it, which people are working on.
> 
> But Lightning does need a decentralised and secure Bitcoin network for
> anchor and reclaim transactions, so take it easy with the mega-blocks
> in the mean-time.
> 
>> a) Lightning Network is nothing but a whitepaper right now. We are a long
>> way from a practical implementation supported by even one wallet.
> 
> maybe you want to check in on
> 
> https://github.com/ElementsProject/lightning
> 
> and help code it.
> 
> I expect we can get something running inside a year.  Which kind of
> obviates the burning "need" for a schedule into the far future rising
> to 8GB with unrealistic bandwidth growth assumptions that will surely
> cause centralisation problems.
> 
> For block-size I think it would be better to have a 2-4 year or one
> off size bump with policy limits and then re-evaluate after we've seen
> what lightning can do.
> 
> I have been saying the same thing ad-nauseam for weeks.
> 
>> b) The Lightning Network paper itself says bigger blocks will be needed even
>> if (especially if!) Lightning is wildly successful.
> 
> Not nearly as big as if you tried to put the transactions it would
> enable on the chain, that's for sure!  We dont know what that limit is
> but people have been imagining 1,000 or 10,000 transactions per anchor
> transaction.  If micro-payments get popular many more.
> 
> Basically users would park Bitcoins a on a hub channel instead of the
> blockchain.  The channel can stay up indefinitely, and the user has
> assurances analogous to greenaddress time-lock mechanism
> 
> Flexcap maybe a better solution because that allows bursting
> block-size when economically rational.
> 
> Note that the time-locks with lightning are assumed to be relative
> CTLV eg using the mechanism as Mark Friedenbach described in a post
> here, and as implemented in the elements sidechain, so there is not a
> huge rush to reclaim funds.  They can be spread out in time.
> 
> If you want to scale Bitcoin - like really scale it - work on
> lightning.  Lightning + a decentralised and secure Bitcoin, scales
> further and is more trustless than Bitcoin forced into centralisation
> via premature mega-blocks.
> 
> To my mind a shorter, more conservative block-size increase to give a
> few years room is enough for now.  We'll be in a better position to
> know what the right next step is after lightning is running.
> 
> Something to mention is you can elide transactions before reclaiming.
> So long as the balancing transaction is correct, someone online can
> swap it for you with an equal balance one with less hops of
> intermediate payment flows.
> 
> 
> It's pretty interesting what you can do already.  I'm fairly confident
> we're not finished algorithmically optimising it either.  It's
> surprising how much new territory there is just sitting there
> unexplored.
> 
> Adam
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/acaaaf6f/attachment.sig>

From milly at bitcoins.info  Mon Jun 29 01:11:13 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Sun, 28 Jun 2015 21:11:13 -0400
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <5590900A.9080003@purdue.edu>
References: <COL402-EAS127289185B11D0D58E1F5E6CDAE0@phx.gbl>
	<558B7352.90708@bitcoins.info>
	<CABm2gDrCxLyxC=BkgiQOjRczy26kQOZb2+p9xDXOh4HuDG8nRw@mail.gmail.com>
	<558D46EC.6050300@bitcoins.info>
	<CABm2gDojz6PHdRKxRkMZh-gfYLdcekVfeQMz5r_4EYc-j5tn+w@mail.gmail.com>
	<558E9C06.9080901@bitcoins.info>
	<CABm2gDpTuEoaXZ_M166UEe+z6t-hq39yJaF3K+aL_Ra836jnSg@mail.gmail.com>
	<558FF307.9010606@bitcoins.info>
	<CABm2gDpHL3RUXUK_PAiPv49EcxgjBSjPBwf=4VLhW0Y28OE=FQ@mail.gmail.com>
	<55901F7D.4000001@bitcoins.info>
	<etPan.5590456f.61df0e2.23f7@Patricks-MacBook-Pro-2.local>
	<559054D2.3050009@bitcoins.info>
	<CAOG=w-tmQtPbbxX-mBOjWoJVQF8aoiog7Y32QVtRfwcNP22YRg@mail.gmail.com>
	<CALC81CO1G2ZrTAqT69VPnzffhyDA8aCZgDA-J3p4-nZJiEzEvw@mail.gmail.com>
	<CALqxMTG8O_z9c1HnbAsW53J4KL2zGaSiC7SfrFp_Baf-Rfc6EA@mail.gmail.com>
	<55908DA0.5030507@bitcoins.info> <5590900A.9080003@purdue.edu>
Message-ID: <55909B31.9090807@bitcoins.info>

That sounds like a good idea except I have been told by the powers that 
be that I am not allowed to post to Github.  Any Bip proposal is 
supposed to be vetted on the mailing list first.

My suggestion has been to continue development of the risk analysis 
started by the Bitcoin Foundation found at 
https://bitcoinfoundation.org/wp-content/uploads/2014/04/Bitcoin-Risk-Management-Study-Spring-2014.pdf. 
The idea is to create a living document of risks and mitigations as well 
as a decentralization metric.  When a change is proposed it is measured 
against these risks and metrics in a somewhat standard fashion.

If someone wants to post something like that to Github I can work on 
it.  I am familiar with the process as I worked on something similar for 
many years for the US FAA.  I worked in information security for large 
aviation systems in the R&D stage applying the NIST 800-series documents 
to the process (http://csrc.nist.gov/publications/PubsSPs.html).

Russ



On 6/28/2015 8:23 PM, Andrew Lapp wrote:
> Your discussion is taking up a lot of room in my inbox and it doesn't 
> seem like either side is getting through to the other. Perhaps you 
> could create a document outlining all the failure modes possible due 
> to the current system, the current systems security assumptions and 
> possible solutions. Now it seems this is just a semantic debate and 
> would probably be better solved with you writing a BIP and having that 
> reviewed and critiqued.
>
> -Andrew Lapp
>
> On 06/28/2015 08:13 PM, Milly Bitcoin wrote:
>> The concern with that is that any FAQ will be developed by the same 
>> small group that controls the github now so they will spin it in an 
>> unrealistic way.  You see the problem now with the Bitcoin wiki.  
>> While the wiki has some valuable information, it also has a number of 
>> incorrect and cult-like claims about how Bitcoin works. Tim Swanson 
>> has made some good videos that describe some of the misinformation 
>> that often gets repeated on the Wiki and other places.
>>
>> I had suggested the info on the Wiki be reevaluated piece-by-piece 
>> and moved to Bitcoin.org but the developers didn't like that. 
>> Attempts to edit the Wiki often leads to the articles being defaced 
>> by the maintainers so that is a waste of time.
>>
>> Russ
>>
>>
>>
>> On 6/28/2015 5:00 PM, Adam Back wrote:
>>> I think we need a second mailing list: bitcoin-process for people to
>>> learn about bitcoin process.
>>>
>>> And someone to write a FAQ on it's sign up page so people interested
>>> could at least discuss from a starting point of understanding how and
>>> why it works the way it does!
>>>
>>> Adam
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>



From elombrozo at gmail.com  Mon Jun 29 01:13:29 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 28 Jun 2015 18:13:29 -0700
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CALqxMTGd1mB4Sra=ORV=d0y1v8KzUQnK8=MX2_MFP1NuMnPm+Q@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>
	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>
	<CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>
	<CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>
	<COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>
	<CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>
	<CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>
	<CALqxMTFv+nLo3phA2HS26F=r5+yGCOh=z8+Kub7GuC_bGVOfXg@mail.gmail.com>
	<CALqxMTG7+MMN50VH9-Y++B1_DeBXTBKpkeA5dYT1EbVGZ1aYag@mail.gmail.com>
	<CABsx9T3Xhu4n3LzjEjanbAnUr5UeG0DzY7HXchfOvEa+BNqakw@mail.gmail.com>
	<CALqxMTGd1mB4Sra=ORV=d0y1v8KzUQnK8=MX2_MFP1NuMnPm+Q@mail.gmail.com>
Message-ID: <E691526C-F6CD-40F4-9439-9B91A6444E2F@gmail.com>

The Lightning network is essentially a contract negotiation scheme that rewards cooperation. Defection amounts to either broadcasting early or not responding to signature requests. If done right, either of these situations incurs a bigger cost to the uncooperative party than cooperation. This is why I say blockchains are like a fix to the prisoner?s dilemma.

The blockchain becomes essentially a dispute resolution mechanism and a way to anchor stuff. There?s no use case covered by the current method of ?flood the entire network and confirm on blockchain? that can?t be covered by a method of ?participate in a contract which guarantees me payment on the blockchain if anyone is uncooperative but which rarely requires touching the blockchain? methinks.


- Eric Lombrozo


> On Jun 28, 2015, at 3:07 PM, Adam Back <adam at cypherspace.org> wrote:
> 
> On 28 June 2015 at 23:05, Gavin Andresen <gavinandresen at gmail.com> wrote:
>> On Sun, Jun 28, 2015 at 2:58 PM, Adam Back <adam at cypherspace.org> wrote:
>>> 
>>> This is probably going to sound impolite, but I think it's pertinent.
>>> 
>>> Gavin, on dwelling on the the fact that you appear to not understand
>>> the basics of the lightning network, I am a little alarmed about this
>> 
>> If I don't see how switching from using the thousands of fully-validating
>> bitcoin nodes with (tens? hundreds?) of Lightning Network hubs is better in
>> terms of decentralization (or security, in terms of Sybil/DoS attacks),
> 
> Its a source routed network, not a broadcast network.  Fees are
> charged on channels so
> DoS is just a way to pay people a multiple of bandwidth cost.
> 
> in terms of trustlessness Andrew Lapp explained it pretty well:
>> I don't mind a set of central authorities being part of an option IF the central authority
>> doesn't need to be trusted. On the blockchain, the larger miner is, the more you have
>> to trust them to not collude with anyone to reverse your payments or destroy the trust
>> in the system in some attack. On the Lightning network, a large hub can't steal my
>> money.
>> 
>> I think most people share the sentiment that trustlessness is what matters and
>> decentralization is just a synonym for trustlessness when talking about the blockchain
>> and mining, however decentralization isn't necessarily synonymous with trustlessness
>> nor is centralization synonymous with trust-requiring when you're talking about
>> something else.
> 
> Gavin wrote:
>> then I doubt other people do, either. You need to do a better job of explaining it.
> 
> I gave it a go a couple of posts up.  I didnt realise people here
> proposing mega-blocks were not paying attention to the whole lightning
> concept and detail.
> 
> People said lots of things about how it's better to work on lightning,
> to scale algorithmically, rather than increasing block-size to
> dangerously centralising proportions.
> Did you think we were Gish Galloping you?  We were completely serious.
> 
> The paper is on http://lightning.network
> 
> though it is not so clearly explained there, however Joseph is working
> on improving the paper as I understand it.
> 
> Rusty wrote a high-level blog explainer: http://rusty.ozlabs.org/?p=450
> 
> though I don't recall that he got into recirculation, negative fees
> etc.  A good question
> for the lightning-dev mailing list maybe.
> 
> http://lists.linuxfoundation.org/pipermail/lightning-dev/
> 
> There are a couple of recorded presentation videos / podcasts from Joseph Poon.
> 
> sf bitcoin dev presentation:
> 
> https://www.youtube.com/watch?v=2QH5EV_Io0E
> 
> epicenter bitcoin:
> 
> https://www.youtube.com/watch?v=fBS_ieDwQ9k
> 
> There's a related paper from Christian Decker "Duplex Micropayment Channels"
> 
> http://www.tik.ee.ethz.ch/file/716b955c130e6c703fac336ea17b1670/duplex-micropayment-channels.pdf
> 
>> But even if you could convince me that it WAS better from a
>> security/decentralization point of view:
> 
> We don't need to convince people, we just have to code it and
> demonstrate it, which people are working on.
> 
> But Lightning does need a decentralised and secure Bitcoin network for
> anchor and reclaim transactions, so take it easy with the mega-blocks
> in the mean-time.
> 
>> a) Lightning Network is nothing but a whitepaper right now. We are a long
>> way from a practical implementation supported by even one wallet.
> 
> maybe you want to check in on
> 
> https://github.com/ElementsProject/lightning
> 
> and help code it.
> 
> I expect we can get something running inside a year.  Which kind of
> obviates the burning "need" for a schedule into the far future rising
> to 8GB with unrealistic bandwidth growth assumptions that will surely
> cause centralisation problems.
> 
> For block-size I think it would be better to have a 2-4 year or one
> off size bump with policy limits and then re-evaluate after we've seen
> what lightning can do.
> 
> I have been saying the same thing ad-nauseam for weeks.
> 
>> b) The Lightning Network paper itself says bigger blocks will be needed even
>> if (especially if!) Lightning is wildly successful.
> 
> Not nearly as big as if you tried to put the transactions it would
> enable on the chain, that's for sure!  We dont know what that limit is
> but people have been imagining 1,000 or 10,000 transactions per anchor
> transaction.  If micro-payments get popular many more.
> 
> Basically users would park Bitcoins a on a hub channel instead of the
> blockchain.  The channel can stay up indefinitely, and the user has
> assurances analogous to greenaddress time-lock mechanism
> 
> Flexcap maybe a better solution because that allows bursting
> block-size when economically rational.
> 
> Note that the time-locks with lightning are assumed to be relative
> CTLV eg using the mechanism as Mark Friedenbach described in a post
> here, and as implemented in the elements sidechain, so there is not a
> huge rush to reclaim funds.  They can be spread out in time.
> 
> If you want to scale Bitcoin - like really scale it - work on
> lightning.  Lightning + a decentralised and secure Bitcoin, scales
> further and is more trustless than Bitcoin forced into centralisation
> via premature mega-blocks.
> 
> To my mind a shorter, more conservative block-size increase to give a
> few years room is enough for now.  We'll be in a better position to
> know what the right next step is after lightning is running.
> 
> Something to mention is you can elide transactions before reclaiming.
> So long as the balancing transaction is correct, someone online can
> swap it for you with an equal balance one with less hops of
> intermediate payment flows.
> 
> 
> It's pretty interesting what you can do already.  I'm fairly confident
> we're not finished algorithmically optimising it either.  It's
> surprising how much new territory there is just sitting there
> unexplored.
> 
> Adam
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/a8c34cc4/attachment-0001.sig>

From info at AndySchroder.com  Mon Jun 29 01:45:09 2015
From: info at AndySchroder.com (Andy Schroder)
Date: Sun, 28 Jun 2015 21:45:09 -0400
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CALqxMTGd1mB4Sra=ORV=d0y1v8KzUQnK8=MX2_MFP1NuMnPm+Q@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>	<CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>	<CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>	<COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>	<CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>	<CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>	<CALqxMTFv+nLo3phA2HS26F=r5+yGCOh=z8+Kub7GuC_bGVOfXg@mail.gmail.com>	<CALqxMTG7+MMN50VH9-Y++B1_DeBXTBKpkeA5dYT1EbVGZ1aYag@mail.gmail.com>	<CABsx9T3Xhu4n3LzjEjanbAnUr5UeG0DzY7HXchfOvEa+BNqakw@mail.gmail.com>
	<CALqxMTGd1mB4Sra=ORV=d0y1v8KzUQnK8=MX2_MFP1NuMnPm+Q@mail.gmail.com>
Message-ID: <5590A325.800@AndySchroder.com>

Regarding privacy and the lightening network. Has this been well 
addressed? I haven't seen much that leads me to believe there is. Only 
options I see are to have many open payment channels, but that is still 
limiting and inefficient, or require an extensive number of hops in your 
payment route, but this is also limiting.



Andy Schroder

On 06/28/2015 06:07 PM, Adam Back wrote:
> On 28 June 2015 at 23:05, Gavin Andresen <gavinandresen at gmail.com> wrote:
>> On Sun, Jun 28, 2015 at 2:58 PM, Adam Back <adam at cypherspace.org> wrote:
>>> This is probably going to sound impolite, but I think it's pertinent.
>>>
>>> Gavin, on dwelling on the the fact that you appear to not understand
>>> the basics of the lightning network, I am a little alarmed about this
>> If I don't see how switching from using the thousands of fully-validating
>> bitcoin nodes with (tens? hundreds?) of Lightning Network hubs is better in
>> terms of decentralization (or security, in terms of Sybil/DoS attacks),
> Its a source routed network, not a broadcast network.  Fees are
> charged on channels so
> DoS is just a way to pay people a multiple of bandwidth cost.
>
> in terms of trustlessness Andrew Lapp explained it pretty well:
>> I don't mind a set of central authorities being part of an option IF the central authority
>> doesn't need to be trusted. On the blockchain, the larger miner is, the more you have
>> to trust them to not collude with anyone to reverse your payments or destroy the trust
>> in the system in some attack. On the Lightning network, a large hub can't steal my
>> money.
>>
>> I think most people share the sentiment that trustlessness is what matters and
>> decentralization is just a synonym for trustlessness when talking about the blockchain
>> and mining, however decentralization isn't necessarily synonymous with trustlessness
>> nor is centralization synonymous with trust-requiring when you're talking about
>> something else.
> Gavin wrote:
>> then I doubt other people do, either. You need to do a better job of explaining it.
> I gave it a go a couple of posts up.  I didnt realise people here
> proposing mega-blocks were not paying attention to the whole lightning
> concept and detail.
>
> People said lots of things about how it's better to work on lightning,
> to scale algorithmically, rather than increasing block-size to
> dangerously centralising proportions.
> Did you think we were Gish Galloping you?  We were completely serious.
>
> The paper is on http://lightning.network
>
> though it is not so clearly explained there, however Joseph is working
> on improving the paper as I understand it.
>
> Rusty wrote a high-level blog explainer: http://rusty.ozlabs.org/?p=450
>
> though I don't recall that he got into recirculation, negative fees
> etc.  A good question
> for the lightning-dev mailing list maybe.
>
> http://lists.linuxfoundation.org/pipermail/lightning-dev/
>
> There are a couple of recorded presentation videos / podcasts from Joseph Poon.
>
> sf bitcoin dev presentation:
>
> https://www.youtube.com/watch?v=2QH5EV_Io0E
>
> epicenter bitcoin:
>
> https://www.youtube.com/watch?v=fBS_ieDwQ9k
>
> There's a related paper from Christian Decker "Duplex Micropayment Channels"
>
> http://www.tik.ee.ethz.ch/file/716b955c130e6c703fac336ea17b1670/duplex-micropayment-channels.pdf
>
>> But even if you could convince me that it WAS better from a
>> security/decentralization point of view:
> We don't need to convince people, we just have to code it and
> demonstrate it, which people are working on.
>
> But Lightning does need a decentralised and secure Bitcoin network for
> anchor and reclaim transactions, so take it easy with the mega-blocks
> in the mean-time.
>
>> a) Lightning Network is nothing but a whitepaper right now. We are a long
>> way from a practical implementation supported by even one wallet.
> maybe you want to check in on
>
> https://github.com/ElementsProject/lightning
>
> and help code it.
>
> I expect we can get something running inside a year.  Which kind of
> obviates the burning "need" for a schedule into the far future rising
> to 8GB with unrealistic bandwidth growth assumptions that will surely
> cause centralisation problems.
>
> For block-size I think it would be better to have a 2-4 year or one
> off size bump with policy limits and then re-evaluate after we've seen
> what lightning can do.
>
> I have been saying the same thing ad-nauseam for weeks.
>
>> b) The Lightning Network paper itself says bigger blocks will be needed even
>> if (especially if!) Lightning is wildly successful.
> Not nearly as big as if you tried to put the transactions it would
> enable on the chain, that's for sure!  We dont know what that limit is
> but people have been imagining 1,000 or 10,000 transactions per anchor
> transaction.  If micro-payments get popular many more.
>
> Basically users would park Bitcoins a on a hub channel instead of the
> blockchain.  The channel can stay up indefinitely, and the user has
> assurances analogous to greenaddress time-lock mechanism
>
> Flexcap maybe a better solution because that allows bursting
> block-size when economically rational.
>
> Note that the time-locks with lightning are assumed to be relative
> CTLV eg using the mechanism as Mark Friedenbach described in a post
> here, and as implemented in the elements sidechain, so there is not a
> huge rush to reclaim funds.  They can be spread out in time.
>
> If you want to scale Bitcoin - like really scale it - work on
> lightning.  Lightning + a decentralised and secure Bitcoin, scales
> further and is more trustless than Bitcoin forced into centralisation
> via premature mega-blocks.
>
> To my mind a shorter, more conservative block-size increase to give a
> few years room is enough for now.  We'll be in a better position to
> know what the right next step is after lightning is running.
>
> Something to mention is you can elide transactions before reclaiming.
> So long as the balancing transaction is correct, someone online can
> swap it for you with an equal balance one with less hops of
> intermediate payment flows.
>
>
> It's pretty interesting what you can do already.  I'm fairly confident
> we're not finished algorithmically optimising it either.  It's
> surprising how much new territory there is just sitting there
> unexplored.
>
> Adam
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/5a17cd68/attachment.sig>

From info at AndySchroder.com  Mon Jun 29 01:45:57 2015
From: info at AndySchroder.com (Andy Schroder)
Date: Sun, 28 Jun 2015 21:45:57 -0400
Subject: [bitcoin-dev] Tree Chains
Message-ID: <5590A355.4090105@AndySchroder.com>

Hello,

I haven't heard anything about Peter Todd's tree chain idea 
(https://letstalkbitcoin.com/ltb104-tree-chains-with-peter-todd/) in a 
while. Is there some reason it has dropped from discussion? Was there 
some major flaw discovered? It seemed like it would be an additional 
technology actively discussed as an alternative to raising the block size.




-- 
Andy Schroder


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/a0d1f97f/attachment.sig>

From info at AndySchroder.com  Mon Jun 29 01:49:38 2015
From: info at AndySchroder.com (Andy Schroder)
Date: Sun, 28 Jun 2015 21:49:38 -0400
Subject: [bitcoin-dev] Mailing List Administrivia - GPG, Archives,
 Breakage, TODO, mirrors, etc
In-Reply-To: <CAD2Ti2-QChRZYZDSH1avit3snCLMws2UNmHQ_aY5O4txCS3AGg@mail.gmail.com>
References: <CAD2Ti2-QChRZYZDSH1avit3snCLMws2UNmHQ_aY5O4txCS3AGg@mail.gmail.com>
Message-ID: <5590A432.9080102@AndySchroder.com>

Although I'd say your writing style is a bit unfriendly and hard to 
identify/unclear at the specifics of some of your complaints, I do agree 
with many of your points.

I really have no idea what format the .txt.gz files are in that are on 
the current archive. If you unzip them, they are not text tiles.

gmane was able to change the subscription of the previous list to the 
current list. So, anyone who had a newsreader setup, it should be 
working again. There is some gap in their archive at the beginning of 
the archive, as well as last week while the list was transitioned. They 
requested a link to a single mbox file archive that they can use to 
restore the list archive in it's entirety. Anyone know how we can get 
this? The reference to another mailing list below 
(https://cpunks.org/pipermail/cypherpunks/) has such a link on its 
archive page. It looks like the same interface so maybe that feature can 
just be turned on? I'm not sure if it gzips the mbox file on the fly 
whenever an http request is made or if it has some schedule and may be 
missing a few of the most recent messages?


Also, regarding the footer, if it can't be changed on a per user basis, 
I'd vote to get rid of it. Anyone with a reasonably powered brain can go 
to lists.linuxfoundation.org and find a way to get to the bitcoin-dev 
mailing list page. The information provided in the footer is also 
included in the email message headers as well. It's also included in the 
welcome e-mail when someone subscribes to the list.




Andy Schroder

On 06/27/2015 06:21 PM, grarpamp wrote:
> On Sun, Jun 21, 2015 at 9:14 PM, Frank Flores <frankf44 at gmail.com> wrote:
>> If you're going to go through the trouble of signing your public emails ...
> ... then you should also demand that the official archives of your
> favorite lists preserve them and their verifiability in the supposedly
> canonical reference "mbox" format that they distribute.
>
> On Wed, Jun 24, 2015 at 7:47 AM, Wladimir J. van der Laan
> <laanwj at gmail.com> wrote:
>> Subject: [bitcoin-dev] New GPG signing key for Bitcoin Core binary releases
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009045.html
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June.txt.gz
>
> As you can clearly see, both the HTML archives and the "mbox"
> archives have corrupted this message, it will not verify. Do not
> try to say this case is trivial, the problem itself is not trivial,
> it's gratuitous, and it applies to all matching messages... text,
> code, binary inline... that's dangerous.
>
> Do not try to say this corruption prevents spam, it does not.
> Spammers simply subscribe to the list and harvest everything
> efficiently in realtime... no webcrawling overhead, no stale
> addresses. Obfuscation is futile.
>
> This misfeature needs to be disabled.
>
>
>
> On Fri, Jun 19, 2015 at 12:57 AM, Warren Togami Jr. <wtogami at gmail.com> wrote:
>> archives will be exported
>> and imported into the new list server
> On Tue, Jun 23, 2015 at 2:45 PM, Andy Schroder <info at andyschroder.com> wrote:
>> I'm not sure if anyone has submitted a request for gmane
> On Sun, Jun 21, 2015 at 5:35 PM, s7r <s7r at sky-ip.org> wrote:
>> Do we have all the archives imported? I run several full nodes and
>> mirrors for open source projects, if you think it's useful, I can
>> provide a mirror for the mail list archives.
> Yes... these other mirrors, archives, analysis, journalism, and
> interfaces are useful. However, as it is now, there are no useful
> authoritative sources for them to seed from... they're all corrupt.
> And any subscribed realtime sources, though nice, are subject to
> downtime, administrative and other unrecoverable gaps. Your mirror
> project is a fine idea, you should demand that the pristine historical
> sources be made publicly available. Not just for you, but for everyone.
>
>
>
> On Wed, Jun 17, 2015, grarpamp wrote:
>> ...
> As before, the current "mbox" archives are broken and not useful...
>
> a) They corrupt message data, messages are unverifiable, another example...
>     http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009132.html
>     http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June.txt.gz
> b) They are missing the minimum set of original headers necessary
>     for fully replyable, threadable, sortable, searchable, context
>     preserving and direct use by users MUA's in their local environment:
>     (Date, From, To, Cc, Subject, Message-ID, In-Reply-To, References)
> c) They do not include attachments (patches, signatures, images, crypto,
>     data) that are absolutely necessary to the context and archives
>     of all lists. Instead they stupidly throw them away to "web links"
>     which results not only in uselessness of the so called "mbox"
>     version, but in many thousands of needless fetches by archive
>     users and indexers. And hours of wasted work attempting to
>     postprocess them into usable form.
>     Valuable content lost from the "mbox" files this June alone:
>      418 attachment.html
>      106 attachment.sig
>        6 attachment.jpe
>        4 attachment.png
>        2 attachment.bin
> d) There appear to be at least 15 instances of unescaped '^From '
>     in the "mbox". Regeneration with current mailman may fix. One such
>     case is here:
>     http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004245.html
>     http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January.txt.gz
>
>
>
> Please fix all the above mentioned issues by providing the full raw
> archives in regularly updated [gzip/7z] mbox format. The internet
> thanks you :)
>
> Example, compare the "Downloadable version"s here:
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/
> https://cpunks.org/pipermail/cypherpunks/
> https://cpunks.org/pipermail/cypherpunks/2015-February/006820.html
>
>
>
> On Tue, Jun 23, 2015 at 2:45 PM, Andy Schroder <info at andyschroder.com> wrote:
>> Regarding message footers and the subject prefix
> Yes, they're also corruptive and space wasting clutter, for and by
> the clueless :( Both of them should be turned off.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/2d7ea717/attachment.sig>

From wtogami at gmail.com  Mon Jun 29 02:27:06 2015
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Sun, 28 Jun 2015 19:27:06 -0700
Subject: [bitcoin-dev] Mailing List Administrivia - GPG, Archives,
 Breakage, TODO, mirrors, etc
In-Reply-To: <CADm_WcbjAmrBXJs6s9rvVKccgOA3sDut0o2ALTKqWQrjT=MyxQ@mail.gmail.com>
References: <CAD2Ti2-QChRZYZDSH1avit3snCLMws2UNmHQ_aY5O4txCS3AGg@mail.gmail.com>
	<CADm_WcbjAmrBXJs6s9rvVKccgOA3sDut0o2ALTKqWQrjT=MyxQ@mail.gmail.com>
Message-ID: <CAEz79Pp7XyAjdN_e7BnwJfqp=ZaSk7hQSwMJiev-9R5orKyUew@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

June 28th, 2015
Mailman's obscure_addresses option is now disabled.  It has been pretty
useless
as a spam mitigation measure anyway.

This is a test message to see if mailman continues to break --clearsign GPG
signatures for messages that contain an e-mail address like test at example.com
.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQQcBAEBCAAGBQJVkKy7AAoJELEXnrc0fcENmiIf/1Qgb/XFDmGl5RsZnMWh+kCX
EBjT/ouufgURTrOt6XPhwnxJAYMKPtobg4MvjosqKFNKzyz3Io9TxkWXFXFLajLt
uZ/RPck0b6qYPXW02m6on1Zj8VIKrREtm4CEH/2q7iHkjsWIHULo+K6emrJQtIOs
DzhUEniPPVDJVIq2pZJGKHq87ydmnFMYhXjzCu2e0N7CBFw/uxtUEsvkd0uuognm
YVjnrCjS8CLzNgEkx8z6R1WWz7psDQeLr+d8BP/6TVrgEOaeX4pAy9mhqdPjGutV
C6X3SyMlSA/PDJFqzT5Upe4UKwKWGq7AOBz7OpzpYIqJ69NKsIjCgh+t6qCisDZO
O3XFUIidmKZsWE422InFLhUtqzwZHq56J/eKKiYz53BSYtTOPIs4+RPlm1Gzs7gP
cEqoDYobdlT2H1vCvNficcbH5nWmooErUxT06tXjGqfPHlm+OVuOyVTwuin+gD5H
winqtNlkSCbG1MjhUoLEJVxLHP7t6i5e6EKPQrvP0XycKuO2PMlVkYYFBGMKEFF/
sL68wyV/0PzGRA7ggcBmcOGHC7ys2sOroLZCWNDnOrQnRFHvQgDCQpj3uMFMO7yf
8E+0CIKO0vB/Ljxse51+s/NZTX8uTZu525+hSG8cuLY1FTl5Zk3oRH1HGUJ9wbWh
Hjx6827uh543+AHWgBwEpQ/8LkSlc0UN6txNmYn4DJgEksqP80iaPkvXAEesSUJ8
OtAPrWOMZXcSsp7HZkDXuJyMUerGvZcdIVvVNsLOWLWa2c0kyDdxubGflhGN/Hkq
67pJ5J/aeraw7BdfRi78CUWYXpVBlMaQ60jT2LV9XQxsqSnZb3+VgN9vyvQi/gih
enr+l8r4esM7TOsGYHMWbQkHgnm/wOMiMc56xlqeIi/+cRuJF3Mg5LnbqIUU1Ox0
S+luGASWg1R2yU4n0EWQ5sx1dmslgvJe6lDKlQXEX4e4d5F0vhnyFiDVhChMCpGv
ALK8MiUZGD2y9fIPB+Yypq7mH9NiQwQIJtpbVgVd2pBEl0XWkbs6F5GNq90ChE7x
hWiyu2N/iug2r7zKt5KtZob9hIljQ6N/HAk+O1lLPUktX5HBt8X+KHyX22GMLIAu
g4tWk2P7R0Sh2rYSd43S3CMF01eaGI2oWU0rj2KtG1HqQMVOIVjdxYR3tpmC69Tb
MyCq7xe+zOcAiWkAeb1cJjgahrnDBR663zSsqZVnAyG9GQVvPY6fZKxYoY2B+xgP
tEi8FTL3ag0PbdUJF8SQugx+R3HNBS+r1AGgOUEBtrrH9IqBAaOf3N+rMFLUl/HW
ypTs5fj6A49CkncmQQGcyj3BwlEjhr4wF59Bpxn/KTwT5H2Sdu1QEuB2G+gwqYs=
=bOwk
-----END PGP SIGNATURE-----


On Sat, Jun 27, 2015 at 4:54 PM, Jeff Garzik <jgarzik at gmail.com> wrote:

> Generally agreed w/ all this.
>
> To preserve digital signatures now and in the future, and make mbox
> archives actually useful, a minimum modification policy is needed.
>
>
>
> On Sat, Jun 27, 2015 at 3:21 PM, grarpamp <grarpamp at gmail.com> wrote:
>
>> On Sun, Jun 21, 2015 at 9:14 PM, Frank Flores <frankf44 at gmail.com> wrote:
>> > If you're going to go through the trouble of signing your public emails
>> ...
>>
>> ... then you should also demand that the official archives of your
>> favorite lists preserve them and their verifiability in the supposedly
>> canonical reference "mbox" format that they distribute.
>>
>> On Wed, Jun 24, 2015 at 7:47 AM, Wladimir J. van der Laan
>> <laanwj at gmail.com> wrote:
>> > Subject: [bitcoin-dev] New GPG signing key for Bitcoin Core binary
>> releases
>>
>>
>> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009045.html
>> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June.txt.gz
>>
>> As you can clearly see, both the HTML archives and the "mbox"
>> archives have corrupted this message, it will not verify. Do not
>> try to say this case is trivial, the problem itself is not trivial,
>> it's gratuitous, and it applies to all matching messages... text,
>> code, binary inline... that's dangerous.
>>
>> Do not try to say this corruption prevents spam, it does not.
>> Spammers simply subscribe to the list and harvest everything
>> efficiently in realtime... no webcrawling overhead, no stale
>> addresses. Obfuscation is futile.
>>
>> This misfeature needs to be disabled.
>>
>>
>>
>> On Fri, Jun 19, 2015 at 12:57 AM, Warren Togami Jr. <wtogami at gmail.com>
>> wrote:
>> > archives will be exported
>> > and imported into the new list server
>>
>> On Tue, Jun 23, 2015 at 2:45 PM, Andy Schroder <info at andyschroder.com>
>> wrote:
>> > I'm not sure if anyone has submitted a request for gmane
>>
>> On Sun, Jun 21, 2015 at 5:35 PM, s7r <s7r at sky-ip.org> wrote:
>> > Do we have all the archives imported? I run several full nodes and
>> > mirrors for open source projects, if you think it's useful, I can
>> > provide a mirror for the mail list archives.
>>
>> Yes... these other mirrors, archives, analysis, journalism, and
>> interfaces are useful. However, as it is now, there are no useful
>> authoritative sources for them to seed from... they're all corrupt.
>> And any subscribed realtime sources, though nice, are subject to
>> downtime, administrative and other unrecoverable gaps. Your mirror
>> project is a fine idea, you should demand that the pristine historical
>> sources be made publicly available. Not just for you, but for everyone.
>>
>>
>>
>> On Wed, Jun 17, 2015, grarpamp wrote:
>> > ...
>>
>> As before, the current "mbox" archives are broken and not useful...
>>
>> a) They corrupt message data, messages are unverifiable, another
>> example...
>>
>> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009132.html
>>
>> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June.txt.gz
>> b) They are missing the minimum set of original headers necessary
>>    for fully replyable, threadable, sortable, searchable, context
>>    preserving and direct use by users MUA's in their local environment:
>>    (Date, From, To, Cc, Subject, Message-ID, In-Reply-To, References)
>> c) They do not include attachments (patches, signatures, images, crypto,
>>    data) that are absolutely necessary to the context and archives
>>    of all lists. Instead they stupidly throw them away to "web links"
>>    which results not only in uselessness of the so called "mbox"
>>    version, but in many thousands of needless fetches by archive
>>    users and indexers. And hours of wasted work attempting to
>>    postprocess them into usable form.
>>    Valuable content lost from the "mbox" files this June alone:
>>     418 attachment.html
>>     106 attachment.sig
>>       6 attachment.jpe
>>       4 attachment.png
>>       2 attachment.bin
>> d) There appear to be at least 15 instances of unescaped '^From '
>>    in the "mbox". Regeneration with current mailman may fix. One such
>>    case is here:
>>
>> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004245.html
>>
>> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January.txt.gz
>>
>>
>>
>> Please fix all the above mentioned issues by providing the full raw
>> archives in regularly updated [gzip/7z] mbox format. The internet
>> thanks you :)
>>
>> Example, compare the "Downloadable version"s here:
>> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/
>> https://cpunks.org/pipermail/cypherpunks/
>> https://cpunks.org/pipermail/cypherpunks/2015-February/006820.html
>>
>>
>>
>> On Tue, Jun 23, 2015 at 2:45 PM, Andy Schroder <info at andyschroder.com>
>> wrote:
>> > Regarding message footers and the subject prefix
>>
>> Yes, they're also corruptive and space wasting clutter, for and by
>> the clueless :( Both of them should be turned off.
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/4cc5cd58/attachment-0001.html>

From pete at petertodd.org  Mon Jun 29 05:07:26 2015
From: pete at petertodd.org (Peter Todd)
Date: Mon, 29 Jun 2015 01:07:26 -0400
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
Message-ID: <20150629050726.GA502@savin.petertodd.org>

Gregory: Please assign a BIP #

https://github.com/petertodd/bips/blob/bip-full-rbf-deadline/bip-full-rbf-deadline.mediawiki

<pre>
  BIP: ??
  Title: Full Replace-by-Fee Deployment Schedule
  Author: Peter Todd <pete at petertodd.org>
  Status: Draft
  Type: Standards Track
  Created: 2015-06-29
</pre>

==Summary==

This BIP proposes a deployment schedule for full replace-by-fee (full-RBF)
functionality, with an automatic activation of Tuesday April 5th, 2016, at 3pm
UTC upon which supporting relay nodes and miners will enable full-RBF mempool
behavior on mainnet. Prior to the activation deadline supporting nodes and
miners will support first-seen-safe(1) replace-by-fee (FSS-RBF) mempool behavior.


==Motivation==

Full-RBF has significant efficiency advantages(2) over alternatives such as
FSS-RBF and Child-Pays-For-Parent for a wide variety of common transaction
patterns such as fee-bumping and multiple sequential payments, as well as smart
contract protocols such as payment channels and auctions. Miner support would
let the wider Bitcoin community use the blockchain more efficiently, supporting
more transactions per second in less blockchain space.

While full-RBF does allow users to "undo" transactions after they have been
sent, the ability of decentralized wallets to protect users from double-spends
has proven to be near-zero.(3) Centralized services have had some success in
doing so, albeit at the cost of having to sybil attack the network, a strategy
that cannot scale to more than a small handful of payment processing
companies.(3)

Even then success is not assured. Worryingly large payment providers have shown
willingness(4) to consider extreme measures such as entering into legal
contracts directly with large miners to ensure their transactions get mined.
This is a significant centralization risk and it is not practical or even
possible for small miners to enter into these contracts, leading to a situation
where moving your hashing power to a larger pool will result in higher profits
from hashing power contracts; if these payment providers secure a majority of
hashing power with these contracts inevitably there will be a temptation to
kick non-compliant miners off the network entirely with a 51% attack.

It does not make sense for the whole Bitcoin community to incur higher
transaction costs, sybil attacks, and centralization risk for the sake of a
small handful of companies. However an orderly, planned, upgrade is still
desirable.


==Implementation==

As full-RBF usage patterns, unlike first-seen-dependent zeroconf, does not
depend on mempool syncronization this BIP won't specify detailed relay node
behavior. However the following implementation is reasonable and well-tested
with considerations such as DoS attacks taken into account:

    https://github.com/bitcoin/bitcoin/pull/6352

To maximize engineer availability the deadline date was chosen to be towards,
but not at, the start of the week, and away from any public holidays. 3pm UTC
was chosen as a compromise between Pacific West Coast and European timezones;
miners in the Asian timezones may choose to manually set their exact switchover
date a few hours ahead with little risk to themselves. Nine months into the
future was chosen on the basis of allowing time for affected companies to plan
for the upgrade, without pushing the upgrade unnecessarily far into the future.


==Credits==

Thanks goes to Jeff Garzik for suggesting the idea of a full-RBF deployment
deadline.


==References==

1) "First-Seen-Safe Replace-by-Fee",
Peter Todd, Bitcoin-development mailing list, May 25th 2015,
http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07829.html

2) "Cost savings by using replace-by-fee, 30-90%",
Peter Todd, Bitcoin-development mailing list, May 25th 2015,
http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07813.html

3) "F2Pool has enabled full replace-by-fee",
Peter Todd, Bitcoin-development mailing list, June 19th 2015,
http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg08422.html

4) "F2Pool has enabled full replace-by-fee",
Adrian Macneil, Director of Engineering, Coinbase,
Bitcoin-development mailing list, June 19th 2015,
http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg08443.html

==Copyright==

This document is placed in the public domain.

-- 
'peter'[:-1]@petertodd.org
000000000000000002b9facd4d17c9e3f1f494f9336f7dc5dae35d8918852890
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150629/ebb07fc1/attachment.sig>

From luke at dashjr.org  Mon Jun 29 05:40:25 2015
From: luke at dashjr.org (Luke Dashjr)
Date: Mon, 29 Jun 2015 05:40:25 +0000
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <20150629050726.GA502@savin.petertodd.org>
References: <20150629050726.GA502@savin.petertodd.org>
Message-ID: <201506290540.26019.luke@dashjr.org>

On Monday, June 29, 2015 5:07:26 AM Peter Todd wrote:
> Gregory: Please assign a BIP #
> 
> https://github.com/petertodd/bips/blob/bip-full-rbf-deadline/bip-full-rbf-d
> eadline.mediawiki

Policy is node/miner fiat and not the domain of BIPs.

Luke

From gmaxwell at gmail.com  Mon Jun 29 05:43:13 2015
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 29 Jun 2015 05:43:13 +0000
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <201506290540.26019.luke@dashjr.org>
References: <20150629050726.GA502@savin.petertodd.org>
	<201506290540.26019.luke@dashjr.org>
Message-ID: <CAAS2fgRZh=__VGH8aJq4D9G62ostt20YUafJ66mm7BhdBRKe=Q@mail.gmail.com>

On Mon, Jun 29, 2015 at 5:40 AM, Luke Dashjr <luke at dashjr.org> wrote:
> Policy is node/miner fiat and not the domain of BIPs.

Even accepting the premise that policy is pure local fiat, the
conclusion doesn't follow for me. BIPs about best practices or
especially anything where interop or coordination are, I think,
reasonable uses of the process.

E.g. you might want to know what other kinds of policy are in use if
you're to have any hope of authoring transactions that work at all!

From luke at dashjr.org  Mon Jun 29 05:51:55 2015
From: luke at dashjr.org (Luke Dashjr)
Date: Mon, 29 Jun 2015 05:51:55 +0000
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <CAAS2fgRZh=__VGH8aJq4D9G62ostt20YUafJ66mm7BhdBRKe=Q@mail.gmail.com>
References: <20150629050726.GA502@savin.petertodd.org>
	<201506290540.26019.luke@dashjr.org>
	<CAAS2fgRZh=__VGH8aJq4D9G62ostt20YUafJ66mm7BhdBRKe=Q@mail.gmail.com>
Message-ID: <201506290551.56764.luke@dashjr.org>

On Monday, June 29, 2015 5:43:13 AM Gregory Maxwell wrote:
> On Mon, Jun 29, 2015 at 5:40 AM, Luke Dashjr <luke at dashjr.org> wrote:
> > Policy is node/miner fiat and not the domain of BIPs.
> 
> Even accepting the premise that policy is pure local fiat, the
> conclusion doesn't follow for me. BIPs about best practices or
> especially anything where interop or coordination are, I think,
> reasonable uses of the process.
> 
> E.g. you might want to know what other kinds of policy are in use if
> you're to have any hope of authoring transactions that work at all!

Then we are to start issuing a new BIP for every node's policy? This has no 
end - though it might make sense for an independent and updated database. 
Mixing protocol standards with policy suggestions makes a very risky situation 
where one can potentially hold a miner liable for not enforcing the BIP; ie, 
government regulation of Bitcoin itself. I don't think most people want to go 
there...

Luke

From pete at petertodd.org  Mon Jun 29 05:53:15 2015
From: pete at petertodd.org (Peter Todd)
Date: Mon, 29 Jun 2015 01:53:15 -0400
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <CAAS2fgRZh=__VGH8aJq4D9G62ostt20YUafJ66mm7BhdBRKe=Q@mail.gmail.com>
References: <20150629050726.GA502@savin.petertodd.org>
	<201506290540.26019.luke@dashjr.org>
	<CAAS2fgRZh=__VGH8aJq4D9G62ostt20YUafJ66mm7BhdBRKe=Q@mail.gmail.com>
Message-ID: <20150629055314.GB502@savin.petertodd.org>

On Mon, Jun 29, 2015 at 05:43:13AM +0000, Gregory Maxwell wrote:
> On Mon, Jun 29, 2015 at 5:40 AM, Luke Dashjr <luke at dashjr.org> wrote:
> > Policy is node/miner fiat and not the domain of BIPs.
> 
> Even accepting the premise that policy is pure local fiat, the
> conclusion doesn't follow for me. BIPs about best practices or
> especially anything where interop or coordination are, I think,
> reasonable uses of the process.
> 
> E.g. you might want to know what other kinds of policy are in use if
> you're to have any hope of authoring transactions that work at all!

For example, consider Luke-Jr's own BIP19, M-of-N Standard Transactions,
a non-consensus-critical suggested policy change!

    https://github.com/bitcoin/bips/blob/master/bip-0019.mediawiki

Anyway, full-RBF has significant impacts for wallet authors and many
other stakeholders. At minimum it changes how you will want to author
and (re)author transactions, much like BIP19 does.

-- 
'peter'[:-1]@petertodd.org
00000000000000000ffad4a87861689c067f5dd3b98b84d8096572c163aa913a
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150629/c0f09f91/attachment.sig>

From pete at petertodd.org  Mon Jun 29 05:56:59 2015
From: pete at petertodd.org (Peter Todd)
Date: Mon, 29 Jun 2015 01:56:59 -0400
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <201506290551.56764.luke@dashjr.org>
References: <20150629050726.GA502@savin.petertodd.org>
	<201506290540.26019.luke@dashjr.org>
	<CAAS2fgRZh=__VGH8aJq4D9G62ostt20YUafJ66mm7BhdBRKe=Q@mail.gmail.com>
	<201506290551.56764.luke@dashjr.org>
Message-ID: <20150629055659.GC502@savin.petertodd.org>

On Mon, Jun 29, 2015 at 05:51:55AM +0000, Luke Dashjr wrote:
> On Monday, June 29, 2015 5:43:13 AM Gregory Maxwell wrote:
> > On Mon, Jun 29, 2015 at 5:40 AM, Luke Dashjr <luke at dashjr.org> wrote:
> > > Policy is node/miner fiat and not the domain of BIPs.
> > 
> > Even accepting the premise that policy is pure local fiat, the
> > conclusion doesn't follow for me. BIPs about best practices or
> > especially anything where interop or coordination are, I think,
> > reasonable uses of the process.
> > 
> > E.g. you might want to know what other kinds of policy are in use if
> > you're to have any hope of authoring transactions that work at all!
> 
> Then we are to start issuing a new BIP for every node's policy? This has no 
> end - though it might make sense for an independent and updated database. 
> Mixing protocol standards with policy suggestions makes a very risky situation 
> where one can potentially hold a miner liable for not enforcing the BIP; ie, 
> government regulation of Bitcoin itself. I don't think most people want to go 
> there...

Remember that one of the goals of full-RBF is to explicitly reject the
idea that miners should have any obligation with regard to what they're
mining. I perhaps should say that explicitly in my BIP proposal; I say
it implicitly by pointing out how the BIP *doesn't* define an exact
standard, but rather only an suggests an implementation as a starting
point.

-- 
'peter'[:-1]@petertodd.org
00000000000000000ffad4a87861689c067f5dd3b98b84d8096572c163aa913a
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150629/e2feb2ae/attachment.sig>

From luke at dashjr.org  Mon Jun 29 06:00:49 2015
From: luke at dashjr.org (Luke Dashjr)
Date: Mon, 29 Jun 2015 06:00:49 +0000
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <20150629055314.GB502@savin.petertodd.org>
References: <20150629050726.GA502@savin.petertodd.org>
	<CAAS2fgRZh=__VGH8aJq4D9G62ostt20YUafJ66mm7BhdBRKe=Q@mail.gmail.com>
	<20150629055314.GB502@savin.petertodd.org>
Message-ID: <201506290600.50913.luke@dashjr.org>

On Monday, June 29, 2015 5:53:15 AM Peter Todd wrote:
> On Mon, Jun 29, 2015 at 05:43:13AM +0000, Gregory Maxwell wrote:
> > On Mon, Jun 29, 2015 at 5:40 AM, Luke Dashjr <luke at dashjr.org> wrote:
> > > Policy is node/miner fiat and not the domain of BIPs.
> > 
> > Even accepting the premise that policy is pure local fiat, the
> > conclusion doesn't follow for me. BIPs about best practices or
> > especially anything where interop or coordination are, I think,
> > reasonable uses of the process.
> > 
> > E.g. you might want to know what other kinds of policy are in use if
> > you're to have any hope of authoring transactions that work at all!
> 
> For example, consider Luke-Jr's own BIP19, M-of-N Standard Transactions,
> a non-consensus-critical suggested policy change!
> 
>     https://github.com/bitcoin/bips/blob/master/bip-0019.mediawiki

BIP 19 does not explicitly purport to directly change policy. It defines a 
standard way of assembling multisig transactions.

> Anyway, full-RBF has significant impacts for wallet authors and many
> other stakeholders. At minimum it changes how you will want to author
> and (re)author transactions, much like BIP19 does.

This is omitted from the BIP (in fact, it doesn't even have a Specification 
section!). No objections to a BIP specifying standards to use for 
authoring/modifying transactions for RBF, but it should leave out policy (or 
at least constrain it to a strictly non-normative section.

Luke

From sickpig at gmail.com  Mon Jun 29 06:16:41 2015
From: sickpig at gmail.com (sickpig at gmail.com)
Date: Mon, 29 Jun 2015 08:16:41 +0200
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <20150629050726.GA502@savin.petertodd.org>
References: <20150629050726.GA502@savin.petertodd.org>
Message-ID: <CA+c4Zox90sHiiJrm4D0xiDqDLKuC+15EDZY7ZBitMQgROKZwtA@mail.gmail.com>

Hi Peter,

> ==References==
>
> 1) "First-Seen-Safe Replace-by-Fee",
> Peter Todd, Bitcoin-development mailing list, May 25th 2015,
>
http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07829.html
>
> 2) "Cost savings by using replace-by-fee, 30-90%",
> Peter Todd, Bitcoin-development mailing list, May 25th 2015,
>
http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07813.html
>
> 3) "F2Pool has enabled full replace-by-fee",
> Peter Todd, Bitcoin-development mailing list, June 19th 2015,
>
http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg08422.html
>
> 4) "F2Pool has enabled full replace-by-fee",
> Adrian Macneil, Director of Engineering, Coinbase,
> Bitcoin-development mailing list, June 19th 2015,
>
http://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg08443.html

just a minor nit pick, you should update "References" links using the new
mailing list archive.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150629/538a6134/attachment.html>

From mickeybob at gmail.com  Mon Jun 29 08:33:21 2015
From: mickeybob at gmail.com (Michael Naber)
Date: Mon, 29 Jun 2015 04:33:21 -0400
Subject: [bitcoin-dev] Bitcoin Core: The globally aware global consensus
	network
Message-ID: <F46592A0-0431-447B-9EBB-4BD71041037D@gmail.com>

Bitcoin is globally aware global consensus.

It means every node both knows about and agrees on every transaction.

Do we need global awareness of every transaction to run a worldwide payment network? Of course not! In fact the limits of today's technology probably would not even allow it.

Global awareness is a finite resource. That's okay; hub and spoke, or other clever designs are going to ensure we can run worldwide transactions without requiring global awareness. That's great!

But even if we have hub and spoke, we still need a "hub" at the center. Bitcoin Core needs to focus on being that hub. It needs to be the best globally aware global consensus network that we can build. Let's put aside our differences and focus on this goal. 

Part of building the best network means ensuring that network can operate at the highest capacity technology can allow. 

If we run the test-net to show that hardware exists today to safely increase block size to a static 8 MB, then we will have broad developer support to make this happen.

Let's get that done. We can continue to adjust the block size upward in the future as technology permits.

Thoughts?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150629/fbeea316/attachment.html>

From pindar.wong at gmail.com  Mon Jun 29 09:17:00 2015
From: pindar.wong at gmail.com (Pindar Wong)
Date: Mon, 29 Jun 2015 17:17:00 +0800
Subject: [bitcoin-dev] Bitcoin Core: The globally aware global consensus
	network
In-Reply-To: <F46592A0-0431-447B-9EBB-4BD71041037D@gmail.com>
References: <F46592A0-0431-447B-9EBB-4BD71041037D@gmail.com>
Message-ID: <CAM7BtUo9hU3+VV5fBgcG8VSNPCGckNv5wSGfq+sp94uAvGxdAA@mail.gmail.com>

On Mon, Jun 29, 2015 at 4:33 PM, Michael Naber <mickeybob at gmail.com> wrote:

> Bitcoin is globally aware global consensus.
>
> It means every node both knows about and agrees on every transaction.
>
> Do we need global awareness of every transaction to run a worldwide
> payment network? Of course not! In fact the limits of today's technology
> probably would not even allow it.
>
> Global awareness is a finite resource. That's okay; hub and spoke, or
> other clever designs are going to ensure we can run worldwide transactions
> without requiring global awareness. That's great!
>
> But even if we have hub and spoke, we still need a "hub" at the center.
> Bitcoin Core needs to focus on being that hub. It needs to be the best
> globally aware global consensus network that we can build. Let's put
> aside our differences and focus on this goal.
>
> Part of building the best network means ensuring that network can operate
> at the highest capacity technology can allow.
>
> If we run the test-net to show that hardware exists today to safely
> increase block size to a static 8 MB, then we will have broad developer
> support to make this happen.
>


Dear Michael,

I'm very supportive of the idea that there should be thorough and adequate
testing of any proposed change in the maximum block size (e.g. to 8MB). See
Peter Todd's earlier posts on the subject.


>
> Let's get that done. We can continue to adjust the block size upward in
> the future as technology permits.
>

Let's work together to establish a testing process to establish the
necessary data transparency and real-world telemetry to help remove
uncertainty as best we can.


>
> Thoughts?
>

Evan has suggested that Huobi would require in the order of 3 months of
testings, first on a test-net.

http://cointelegraph.com/news/114657/chinese-mining-pools-call-for-consensus-refuse-switch-to-bitcoin-xt

Working back from BIP101's  11 Jan 2016 date, it would appear that such
testing should begin in early-mid October. Hence my offer to host a
face-to-face meeting in Hong Kong October 14-15.

[NOTE: There is a separate, but possibly related blockchainworkshops.org
meeting being planned in HK by Primavera De Filippi and Constance Choi  for
October 12-13. The main meeting room, for 300 people, has been reserved for
this community's use on October 14,15. Cyberport is able to setup IRC,
livestream video etc. and connect with other satellite conference centers
(e.g. one in Shanghai) should that be desired.]

The purpose of such a face-to-face meeting could be discuss the results of
the testing process e.g. the first set of test(s), and engineer any
remaining ones that will be necessary to raise the level of confidence to
help 'mine consensus' for any hard fork.

If anyone is willing to contribute resources to participate in the design,
execution and analysis of such testing, then please post to this thread and
we can take it from there.

Respectfully,

p.






> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150629/3023ca7a/attachment.html>

From tomh at thinlink.com  Tue Jun 30 00:21:35 2015
From: tomh at thinlink.com (Tom Harding)
Date: Mon, 29 Jun 2015 17:21:35 -0700
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <20150629050726.GA502@savin.petertodd.org>
References: <20150629050726.GA502@savin.petertodd.org>
Message-ID: <5591E10F.9000008@thinlink.com>

On 6/28/2015 10:07 PM, Peter Todd wrote:
> Worryingly large payment providers have shown
> willingness(4) to consider extreme measures such as entering into legal
> contracts directly with large miners to ensure their transactions get mined.
> This is a significant centralization risk and it is not practical or even
> possible for small miners to enter into these contracts, leading to a situation
> where moving your hashing power to a larger pool will result in higher profits
> from hashing power contracts; if these payment providers secure a majority of
> hashing power with these contracts inevitably there will be a temptation to
> kick non-compliant miners off the network entirely with a 51% attack.
>

Your incomprehensible meddling with successful usage patterns threatens 
to have unintended consequences directly in opposition to your own 
stated goal of decentralization.  And yet you persist.

As we deliberately break things and turn the P2P network into a 
completely unpredictable hodge-podge of relay policies, we should expect 
many more participants to bypass the P2P network entirely.

Many of the pieces are already in place.

If we wanted the P2P network to have more predicable behavior, it would 
be possible for nodes to provide incentives to their neighbors.  For 
example, if you had a pair of nodes, you could test your peers to see 
that they actually do relay "standard" transactions.  This would have 
emergent usability benefits for the P2P network as a whole.


From tomh at thinlink.com  Tue Jun 30 00:42:36 2015
From: tomh at thinlink.com (Tom Harding)
Date: Mon, 29 Jun 2015 17:42:36 -0700
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CALqxMTGd1mB4Sra=ORV=d0y1v8KzUQnK8=MX2_MFP1NuMnPm+Q@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>	<CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>	<CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>	<COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>	<CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>	<CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>	<CALqxMTFv+nLo3phA2HS26F=r5+yGCOh=z8+Kub7GuC_bGVOfXg@mail.gmail.com>	<CALqxMTG7+MMN50VH9-Y++B1_DeBXTBKpkeA5dYT1EbVGZ1aYag@mail.gmail.com>	<CABsx9T3Xhu4n3LzjEjanbAnUr5UeG0DzY7HXchfOvEa+BNqakw@mail.gmail.com>
	<CALqxMTGd1mB4Sra=ORV=d0y1v8KzUQnK8=MX2_MFP1NuMnPm+Q@mail.gmail.com>
Message-ID: <5591E5FC.4040003@thinlink.com>

On 6/28/2015 3:07 PM, Adam Back wrote:
> We dont know what that limit is but people have been imagining 1,000
> or 10,000 transactions per anchor transaction. Basically users would
> park Bitcoins a on a hub channel instead of the blockchain.

This re-introduces a solved problem (solved by bitcoin better than
anything else)  - worrying whether your "payment hub" actually connects
to whom you wish to pay.

There will be enormous network effects and centralization pressure in
the payment-hub space.  A few entities, maybe single entity, should be
expected to quickly corner the market and own the whole thing.

This concept is far too untested to justify amateur economic meddling in
the bitcoin fee market by setting a restrictive hard cap below technical
feasibility.

I can guess exactly who would want to keep bitcoin from improving: 
*those who hope to be the future payment hub oligarchs*.




From natanael.l at gmail.com  Tue Jun 30 00:51:58 2015
From: natanael.l at gmail.com (Natanael)
Date: Tue, 30 Jun 2015 02:51:58 +0200
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <5591E10F.9000008@thinlink.com>
References: <20150629050726.GA502@savin.petertodd.org>
	<5591E10F.9000008@thinlink.com>
Message-ID: <CAAt2M1_yiN8ouaTdiyx8n8CkaT=e-pdUqqtde-bC32enqLfHog@mail.gmail.com>

Den 30 jun 2015 02:21 skrev "Tom Harding" <tomh at thinlink.com>:
>
> On 6/28/2015 10:07 PM, Peter Todd wrote:
>>
>> Worryingly large payment providers have shown
>> willingness(4) to consider extreme measures such as entering into legal
>> contracts directly with large miners to ensure their transactions get
mined.
>> This is a significant centralization risk and it is not practical or even
>> possible for small miners to enter into these contracts, leading to a
situation
>> where moving your hashing power to a larger pool will result in higher
profits
>> from hashing power contracts; if these payment providers secure a
majority of
>> hashing power with these contracts inevitably there will be a temptation
to
>> kick non-compliant miners off the network entirely with a 51% attack.
>>
>
> Your incomprehensible meddling with successful usage patterns threatens
to have unintended consequences directly in opposition to your own stated
goal of decentralization.  And yet you persist.
>
> As we deliberately break things and turn the P2P network into a
completely unpredictable hodge-podge of relay policies, we should expect
many more participants to bypass the P2P network entirely.

What you are asking for is TSA style reactive security and unverifiable and
fundamentally untrustable security mechanisms, rejecting proactive security
on the grounds that it is inconvenient.

What you ask to see implemented will trivially fall to a sybil attack. It
isn't securable. It is running on the honor system exclusively. It will be
attacked, it will fail, losses will be had, the attackers will walk away
with embarrassingly large sums.

You want verifiable behavior? Incentives to tell the truth? Incentives to
be consistent? Multisignature notaries (Greenaddress.it), payment channel
based hub-and-spokes (LN,  Stroem), etc... Trusting the P2P network is
futile. You need one accountable party that is actually capable of
enforcing the behavior you ask for, one that can build a reputation over
time - the P2P nodes you wish to hold accountable are on the other hand
powerless to stop an actual attack, their reputations are therefore
meaningless and irrelevant. Multisignature notaries aren't, as they can
stop an attack, and they can be sued for breach of contract if they don't -
neither of those applies to P2P nodes.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/725125ab/attachment.html>

From tomh at thinlink.com  Tue Jun 30 01:00:11 2015
From: tomh at thinlink.com (Tom Harding)
Date: Mon, 29 Jun 2015 18:00:11 -0700
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <CAAt2M1_yiN8ouaTdiyx8n8CkaT=e-pdUqqtde-bC32enqLfHog@mail.gmail.com>
References: <20150629050726.GA502@savin.petertodd.org>	<5591E10F.9000008@thinlink.com>
	<CAAt2M1_yiN8ouaTdiyx8n8CkaT=e-pdUqqtde-bC32enqLfHog@mail.gmail.com>
Message-ID: <5591EA1B.1050709@thinlink.com>

On 6/29/2015 5:51 PM, Natanael wrote:
> What you ask to see implemented will trivially fall to a sybil attack. 
> It isn't securable. It is running on the honor system exclusively. It 
> will be attacked, it will fail, losses will be had, the attackers will 
> walk away with embarrassingly large sums. 

Oh please.  Checking that a node does relay something is not much 
different than banning it for relaying garbage.

It just happens to require that you have two nodes and coordinate them 
somehow.  I didn't offer a complete design, don't claim magical 
properties, and certainly didn't mean to imply that nodes passing a test 
could be trusted (as you suggest with your "accountable parties").

From natanael.l at gmail.com  Tue Jun 30 01:10:23 2015
From: natanael.l at gmail.com (Natanael)
Date: Tue, 30 Jun 2015 03:10:23 +0200
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <5591EA1B.1050709@thinlink.com>
References: <20150629050726.GA502@savin.petertodd.org>
	<5591E10F.9000008@thinlink.com>
	<CAAt2M1_yiN8ouaTdiyx8n8CkaT=e-pdUqqtde-bC32enqLfHog@mail.gmail.com>
	<5591EA1B.1050709@thinlink.com>
Message-ID: <CAAt2M18Bbcp8-saF7FbkY1vp9rUihStaTXawB9JjafX=+ZasFw@mail.gmail.com>

Den 30 jun 2015 03:00 skrev "Tom Harding" <tomh at thinlink.com>:
>
> On 6/29/2015 5:51 PM, Natanael wrote:
>>
>> What you ask to see implemented will trivially fall to a sybil attack.
It isn't securable. It is running on the honor system exclusively. It will
be attacked, it will fail, losses will be had, the attackers will walk away
with embarrassingly large sums.
>
>
> Oh please.  Checking that a node does relay something is not much
different than banning it for relaying garbage.
>
> It just happens to require that you have two nodes and coordinate them
somehow.  I didn't offer a complete design, don't claim magical properties,
and certainly didn't mean to imply that nodes passing a test could be
trusted (as you suggest with your "accountable parties").

But the check means nothing at all to you since no information which you
can learn from doing so can be trusted for use in decision making of any
kind, so why do it? Unless you pay for hosting of that particular node
which you test, you have no reason to care for any reason other than simple
statistics.

The claims I made is based on simple economic analysis - if *to be able to
attack* first requires effort and risk that exceed the payoff, you're
unlikely to try. Being legally accountable and identified in advance and
having to build reputation before being trusted with attack-worthy sums is
strongly discouraging.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/4f0ff3aa/attachment.html>

From tomh at thinlink.com  Tue Jun 30 01:18:01 2015
From: tomh at thinlink.com (Tom Harding)
Date: Mon, 29 Jun 2015 18:18:01 -0700
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <CAAt2M18Bbcp8-saF7FbkY1vp9rUihStaTXawB9JjafX=+ZasFw@mail.gmail.com>
References: <20150629050726.GA502@savin.petertodd.org>	<5591E10F.9000008@thinlink.com>	<CAAt2M1_yiN8ouaTdiyx8n8CkaT=e-pdUqqtde-bC32enqLfHog@mail.gmail.com>	<5591EA1B.1050709@thinlink.com>
	<CAAt2M18Bbcp8-saF7FbkY1vp9rUihStaTXawB9JjafX=+ZasFw@mail.gmail.com>
Message-ID: <5591EE49.3010600@thinlink.com>

On 6/29/2015 6:10 PM, Natanael wrote:
> you have no reason to care

Of course I do.  I'll boot them and replace them with somebody who will 
relay the items I send them.  I'm not here to send things into a black 
hole taking up one of my connection slots.


From pete at petertodd.org  Tue Jun 30 01:37:36 2015
From: pete at petertodd.org (Peter Todd)
Date: Mon, 29 Jun 2015 21:37:36 -0400
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <5591E10F.9000008@thinlink.com>
References: <20150629050726.GA502@savin.petertodd.org>
	<5591E10F.9000008@thinlink.com>
Message-ID: <20150630013736.GA11508@savin.petertodd.org>

On Mon, Jun 29, 2015 at 05:21:35PM -0700, Tom Harding wrote:
> On 6/28/2015 10:07 PM, Peter Todd wrote:
> >Worryingly large payment providers have shown
> >willingness(4) to consider extreme measures such as entering into legal
> >contracts directly with large miners to ensure their transactions get mined.
> >This is a significant centralization risk and it is not practical or even
> >possible for small miners to enter into these contracts, leading to a situation
> >where moving your hashing power to a larger pool will result in higher profits
> >from hashing power contracts; if these payment providers secure a majority of
> >hashing power with these contracts inevitably there will be a temptation to
> >kick non-compliant miners off the network entirely with a 51% attack.
> >
> 
> Your incomprehensible meddling with successful usage patterns
> threatens to have unintended consequences directly in opposition to
> your own stated goal of decentralization.  And yet you persist.
> 
> As we deliberately break things and turn the P2P network into a
> completely unpredictable hodge-podge of relay policies, we should
> expect many more participants to bypass the P2P network entirely.
> 
> Many of the pieces are already in place.
> 
> If we wanted the P2P network to have more predicable behavior, it
> would be possible for nodes to provide incentives to their
> neighbors.  For example, if you had a pair of nodes, you could test
> your peers to see that they actually do relay "standard"
> transactions.  This would have emergent usability benefits for the
> P2P network as a whole.

To be clear, full-RBF is a change that broadens what the P2P network
relays - transactions previously not relayed are now relayed. Under no
circumstance will full-RBF result in transactions *not* being relayed
that previously were relayed. This makes the P2P network more useful
rather than less, as it gives a predictable and uniform method to get
transactions to a wider variety of miners with a wider variety of
policies.

Note how even if no miners ever supported full-RBF, supporting full-RBF
on relay nodes would still be useful to users as it provides an easy and
cost-effective mechanism to rebroadcast transactions. In fact,
supporting full-RBF by default and disabling it if getblocktemplate is
called would be reasonable, if more than a bit of a hack!

In any case, my pull-req lets you set -fullrbfactivationtime=0 as a
simple and easy way to disable full-RBF functionality. Miners and relay
nodes who choose not to support it can easily do so, similar to how
OP_RETURN transactions can be disabled with -datacarrier=0

-- 
'peter'[:-1]@petertodd.org
00000000000000000bfe93181a10e2f12a45da877b5026ae26988e936a1322ae
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150629/3702a32a/attachment.sig>

From adam at cypherspace.org  Tue Jun 30 13:12:52 2015
From: adam at cypherspace.org (Adam Back)
Date: Tue, 30 Jun 2015 15:12:52 +0200
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <20150630013736.GA11508@savin.petertodd.org>
References: <20150629050726.GA502@savin.petertodd.org>
	<5591E10F.9000008@thinlink.com>
	<20150630013736.GA11508@savin.petertodd.org>
Message-ID: <CALqxMTH_5rtOs=aSNiVrfsG_sqQDCnTr-8qBH3Qji+8g_dAMcQ@mail.gmail.com>

It is correct to view first-seen miner and relay policy as
honour-based, though it is the current default.

I think it would be better to deploy full-RBF in an opt-in way and
leave the current default miner & relay policies as is.  So for
example a new signature flag or transaction type that is marked as
opting-in waiving the first-seen policy.

In this way we can get a smoother transition for people away from the
first-seen assumption, towards greenaddress (trust based) and
lightning / payment channel solutions.  Mid-term the channel and hub
model can provide fast secure 0-confirm transactions, which are
generically not known to be directly and robustly securable via miner
consensus.

As we've seen abruptly stopping the first-seen miner & relay policy is
risky and unpopular and causes people to seek contracts with miners to
retain first-seen.  This is itself a bad trend for fungibility for
obvious reasons.

We shouldn't prejudge people's and segment's of business weak-reliance
on first-seen.  Some types of payments are generally high trust (known
relationships) or physical stores or very low marginal cost (coffee
marginal cost <10c, sale price > $2 or lower ebook, audio stream etc
as embodied by fremium model).  It is not ours to prejudge and kill
their business.  It our job to help improve network security however,
so that they do not have to eat a fraud cost.  And that is do able
with trust via greenaddress, or without trust (other than
time-preference) via the hub & channel model.

Security maybe incrementally improvable via non-spendable relaying of
proof of double-spent status, and services that try to measure % of
miners by hashrate with assumption of first-seen that have have seen a
given transaction first, though I am not sure such approaches are
robust enough to invest time in vs greenaddress or hub & channel.

Any thoughts on the simplest way to support an opt-in version of full-RBF?

Adam


On 30 June 2015 at 03:37, Peter Todd <pete at petertodd.org> wrote:
> On Mon, Jun 29, 2015 at 05:21:35PM -0700, Tom Harding wrote:
>> On 6/28/2015 10:07 PM, Peter Todd wrote:
>> >Worryingly large payment providers have shown
>> >willingness(4) to consider extreme measures such as entering into legal
>> >contracts directly with large miners to ensure their transactions get mined.
>> >This is a significant centralization risk and it is not practical or even
>> >possible for small miners to enter into these contracts, leading to a situation
>> >where moving your hashing power to a larger pool will result in higher profits
>> >from hashing power contracts; if these payment providers secure a majority of
>> >hashing power with these contracts inevitably there will be a temptation to
>> >kick non-compliant miners off the network entirely with a 51% attack.
>> >
>>
>> Your incomprehensible meddling with successful usage patterns
>> threatens to have unintended consequences directly in opposition to
>> your own stated goal of decentralization.  And yet you persist.
>>
>> As we deliberately break things and turn the P2P network into a
>> completely unpredictable hodge-podge of relay policies, we should
>> expect many more participants to bypass the P2P network entirely.
>>
>> Many of the pieces are already in place.
>>
>> If we wanted the P2P network to have more predicable behavior, it
>> would be possible for nodes to provide incentives to their
>> neighbors.  For example, if you had a pair of nodes, you could test
>> your peers to see that they actually do relay "standard"
>> transactions.  This would have emergent usability benefits for the
>> P2P network as a whole.
>
> To be clear, full-RBF is a change that broadens what the P2P network
> relays - transactions previously not relayed are now relayed. Under no
> circumstance will full-RBF result in transactions *not* being relayed
> that previously were relayed. This makes the P2P network more useful
> rather than less, as it gives a predictable and uniform method to get
> transactions to a wider variety of miners with a wider variety of
> policies.
>
> Note how even if no miners ever supported full-RBF, supporting full-RBF
> on relay nodes would still be useful to users as it provides an easy and
> cost-effective mechanism to rebroadcast transactions. In fact,
> supporting full-RBF by default and disabling it if getblocktemplate is
> called would be reasonable, if more than a bit of a hack!
>
> In any case, my pull-req lets you set -fullrbfactivationtime=0 as a
> simple and easy way to disable full-RBF functionality. Miners and relay
> nodes who choose not to support it can easily do so, similar to how
> OP_RETURN transactions can be disabled with -datacarrier=0
>
> --
> 'peter'[:-1]@petertodd.org
> 00000000000000000bfe93181a10e2f12a45da877b5026ae26988e936a1322ae
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

From ctpacia at gmail.com  Tue Jun 30 13:49:51 2015
From: ctpacia at gmail.com (Chris Pacia)
Date: Tue, 30 Jun 2015 09:49:51 -0400
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <CALqxMTH_5rtOs=aSNiVrfsG_sqQDCnTr-8qBH3Qji+8g_dAMcQ@mail.gmail.com>
References: <20150629050726.GA502@savin.petertodd.org>	<5591E10F.9000008@thinlink.com>	<20150630013736.GA11508@savin.petertodd.org>
	<CALqxMTH_5rtOs=aSNiVrfsG_sqQDCnTr-8qBH3Qji+8g_dAMcQ@mail.gmail.com>
Message-ID: <55929E7F.8020301@gmail.com>



On 06/30/2015 09:12 AM, Adam Back wrote:
> It is correct to view first-seen miner and relay policy as
> honour-based, though it is the current default.
>
>
What would be the effect of IBLT on the first seen policy? It seems that
if a miner has to broadcast extra data with his blocks because he's
using full RBF and everyone else is using first-seen then his blocks are
at a disadvantage in terms of propagation. That wouldn't make first-seen
a hard consensus rule, but rather one rational miners are likely to
follow. Or is this effect likely to be minimal?

From dave at dtrt.org  Tue Jun 30 14:02:13 2015
From: dave at dtrt.org (David A. Harding)
Date: Tue, 30 Jun 2015 10:02:13 -0400
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <CALqxMTH_5rtOs=aSNiVrfsG_sqQDCnTr-8qBH3Qji+8g_dAMcQ@mail.gmail.com>
References: <20150629050726.GA502@savin.petertodd.org>
	<5591E10F.9000008@thinlink.com>
	<20150630013736.GA11508@savin.petertodd.org>
	<CALqxMTH_5rtOs=aSNiVrfsG_sqQDCnTr-8qBH3Qji+8g_dAMcQ@mail.gmail.com>
Message-ID: <20150630140213.GA22557@localhost.localdomain>

On Tue, Jun 30, 2015 at 03:12:52PM +0200, Adam Back wrote:
> Any thoughts on the simplest way to support an opt-in version of full-RBF?

Bundle it in with BIP62 version-2 (or whatever) transactions.

- As you desire for RBF, the BIP62 transactions are already specified to
  be opt-in. Nobody has to use them.

- Although BIP62 transactions only prevent third-party mutation, some
  people might wrongly assume that they prevent all mutation---including
  double spending.

  We need to make it clear that even with BIP62 transactions, signers
  can still mutate their own transactions---and what better way to do
  that than make BIP62 transactions easier to double spend?

The downside I see is possible further delay of full BIP62. Although, I
guess it could go the other way too by having developers who want RBF
help push BIP62 into production.

-Dave
-- 
David A. Harding
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 473 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/c739a130/attachment.sig>

From pete at petertodd.org  Tue Jun 30 14:53:09 2015
From: pete at petertodd.org (Peter Todd)
Date: Tue, 30 Jun 2015 10:53:09 -0400
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <55929E7F.8020301@gmail.com>
References: <20150629050726.GA502@savin.petertodd.org>
	<5591E10F.9000008@thinlink.com>
	<20150630013736.GA11508@savin.petertodd.org>
	<CALqxMTH_5rtOs=aSNiVrfsG_sqQDCnTr-8qBH3Qji+8g_dAMcQ@mail.gmail.com>
	<55929E7F.8020301@gmail.com>
Message-ID: <20150630145309.GC17984@savin.petertodd.org>

On Tue, Jun 30, 2015 at 09:49:51AM -0400, Chris Pacia wrote:
> 
> 
> On 06/30/2015 09:12 AM, Adam Back wrote:
> > It is correct to view first-seen miner and relay policy as
> > honour-based, though it is the current default.
> >
> >
> What would be the effect of IBLT on the first seen policy? It seems that
> if a miner has to broadcast extra data with his blocks because he's
> using full RBF and everyone else is using first-seen then his blocks are
> at a disadvantage in terms of propagation. That wouldn't make first-seen
> a hard consensus rule, but rather one rational miners are likely to
> follow. Or is this effect likely to be minimal?

The disadvantage can be calculated compensated for by higher fees; if
the disadvantage is so large that the higher fees are unaffordable we're
in big trouble as the guarantees that mempools are in sync are pretty
poor. (why doublespending zeroconf txs is easy!) For instance, that'd
imply that sending two simultaneous transactions will cause profit
losses to all but the largest miners - who are unaffected - and that
upgrades that change IsStandard() will cause profit losses, among many
other problems.

Bitcoin just doesn't work if blocks aren't relayed quickly in the worst
case.

-- 
'peter'[:-1]@petertodd.org
00000000000000000c51793e1f2f6b9bd82dd1579b3e4207e70a0aa8fb953c80
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/41ecd7c1/attachment.sig>

From mickeybob at gmail.com  Tue Jun 30 15:34:33 2015
From: mickeybob at gmail.com (Michael Naber)
Date: Tue, 30 Jun 2015 11:34:33 -0400
Subject: [bitcoin-dev] Block size increase oppositionists: please clearly
 define what you need done to increase block size to a static 8MB,
 and help do it
Message-ID: <CALgxB7uvtKCNM-nH+aqqPa4KNf5O6Gx4GmgZY7Oq8=A24wCrfA@mail.gmail.com>

As you know I'm trying to lobby for a block size increase to a static 8MB.

I'm happy to try to get the testing done that people want done for this,
but I think the real crux of this issue is that we need to get consensus
that we intend to continually push the block size upward as bounded only by
technology.

Imagine an engineer (Gavin) at Boeing (Bitcoin Core) said he was going to
build an airplane (block) that was going to move 8x as many people
(transactions) as today?s planes (blocks), all while costing about the same
amount to operate. Imagine he then went on to tell you that he expects to
double the plane?s (block's) capacity every two years!

Without full planes (blocks), will the airlines (miners) go out of
business, since planes (blocks) will never be full and the cost to add
people (transactions) to a plane (block) will approach zero? Probably not.
Airlines (miners) still have to pay for pilots, security screening staff,
fuel, etc (engineers, hash rate, electricity, etc) so even if their
airplanes (blocks) can hold limitless people (transactions), they would
still have to charge sufficient fees to stay in business.

What tests do you need done to move to 8MB? Pitch in and help get those
tests done; agree that we'll run more tests next year or the year after
when technology might allow for 16 MB blocks. Do you really want to be the
guy holding back bigger planes? Do you really want to artificially
constrain block size below what technology allows?

In the face of such strong market demand for increased capacity in globally
aware global consensus, do you really think you can prevent supply from
meeting demand when the technology exists to deliver it? Do you really want
to force a fork because you and others won't agree to a simple raise to a
static 8MB?

Do what's best for Bitcoin and define what needs to get done to agree to a
simple block size increase to a static 8MB.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/aebb2579/attachment.html>

From me at ricmoo.com  Tue Jun 30 16:03:02 2015
From: me at ricmoo.com (Richard Moore)
Date: Tue, 30 Jun 2015 12:03:02 -0400
Subject: [bitcoin-dev] Block size increase oppositionists: please
	clearly define what you need done to increase block size to a
	static 8MB, and help do it
In-Reply-To: <CALgxB7uvtKCNM-nH+aqqPa4KNf5O6Gx4GmgZY7Oq8=A24wCrfA@mail.gmail.com>
References: <CALgxB7uvtKCNM-nH+aqqPa4KNf5O6Gx4GmgZY7Oq8=A24wCrfA@mail.gmail.com>
Message-ID: <8F54D4D6-A2FE-4F20-9927-712187B2B03A@ricmoo.com>

I?m not planning to take a firm stance against or for, but one problem with your analogy is that airplanes [currently] are not elastic (until we get TARDIS technology, or semi-TARDIS-like technology); they take up space and resources proportional to their capacity.

It is not the block size that is increasing, it is the *maximum* block size? So, it?s more like saying the *maximum* airplane size is increasing, which I think may be somewhat true (although, I agree, probably not exponentially). It would be more like an airplane whose capacity was doubling every two years, but would shrink when that extra capacity was not needed and only consume the maintenance, fuel, et cetera needed for its current size.

My semi-firm-ish stance is that kicking the can down the road with a static increase is less better. We can always soft-fork the limit down if the *actual* block size is growing too fast. When (and/or if) we need to. I also think 8MB is a rather large jump, for either static or dynamic.

*shrug*

RicMoo


> On Jun 30, 2015, at 11:34 AM, Michael Naber <mickeybob at gmail.com> wrote:
> 
> As you know I'm trying to lobby for a block size increase to a static 8MB. 
> 
> I'm happy to try to get the testing done that people want done for this, but I think the real crux of this issue is that we need to get consensus that we intend to continually push the block size upward as bounded only by technology.
> 
> Imagine an engineer (Gavin) at Boeing (Bitcoin Core) said he was going to build an airplane (block) that was going to move 8x as many people (transactions) as today?s planes (blocks), all while costing about the same amount to operate. Imagine he then went on to tell you that he expects to double the plane?s (block's) capacity every two years! 
> 
> Without full planes (blocks), will the airlines (miners) go out of business, since planes (blocks) will never be full and the cost to add people (transactions) to a plane (block) will approach zero? Probably not. Airlines (miners) still have to pay for pilots, security screening staff, fuel, etc (engineers, hash rate, electricity, etc) so even if their airplanes (blocks) can hold limitless people (transactions), they would still have to charge sufficient fees to stay in business.
> 
> What tests do you need done to move to 8MB? Pitch in and help get those tests done; agree that we'll run more tests next year or the year after when technology might allow for 16 MB blocks. Do you really want to be the guy holding back bigger planes? Do you really want to artificially constrain block size below what technology allows? 
> 
> In the face of such strong market demand for increased capacity in globally aware global consensus, do you really think you can prevent supply from meeting demand when the technology exists to deliver it? Do you really want to force a fork because you and others won't agree to a simple raise to a static 8MB? 
> 
> Do what's best for Bitcoin and define what needs to get done to agree to a simple block size increase to a static 8MB.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

.???`?.??.???`?.??.???`?.??.???`?.??.???`?.?><(((?>

Richard Moore ~ Founder
Genetic Mistakes Software inc.
phone: (778) 882-6125
email: ricmoo at geneticmistakes.com <mailto:ricmoo at geneticmistakes.com>
www: http://GeneticMistakes.com <http://geneticmistakes.com/>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/7556f050/attachment-0001.html>

From pete at petertodd.org  Tue Jun 30 16:05:24 2015
From: pete at petertodd.org (Peter Todd)
Date: Tue, 30 Jun 2015 12:05:24 -0400
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <CALqxMTH_5rtOs=aSNiVrfsG_sqQDCnTr-8qBH3Qji+8g_dAMcQ@mail.gmail.com>
References: <20150629050726.GA502@savin.petertodd.org>
	<5591E10F.9000008@thinlink.com>
	<20150630013736.GA11508@savin.petertodd.org>
	<CALqxMTH_5rtOs=aSNiVrfsG_sqQDCnTr-8qBH3Qji+8g_dAMcQ@mail.gmail.com>
Message-ID: <20150630160523.GG17984@savin.petertodd.org>

On Tue, Jun 30, 2015 at 03:12:52PM +0200, Adam Back wrote:
> It is correct to view first-seen miner and relay policy as
> honour-based, though it is the current default.
> 
> I think it would be better to deploy full-RBF in an opt-in way and
> leave the current default miner & relay policies as is.  So for
> example a new signature flag or transaction type that is marked as
> opting-in waiving the first-seen policy.
> 
> In this way we can get a smoother transition for people away from the
> first-seen assumption, towards greenaddress (trust based) and
> lightning / payment channel solutions.  Mid-term the channel and hub
> model can provide fast secure 0-confirm transactions, which are
> generically not known to be directly and robustly securable via miner
> consensus.
> 
> As we've seen abruptly stopping the first-seen miner & relay policy is
> risky and unpopular and causes people to seek contracts with miners to
> retain first-seen.  This is itself a bad trend for fungibility for
> obvious reasons.

Well, as you know I have good reason to believe those contracts are
being actively worked on right now. I've been talking about this issue
for something like two years now, and rather than seeing a shift away
from use of zeroconf, we're seeing new services adopting it, always
large, centralized, startups in the payment space. Meanwhile the story
for decentralized wallets is if anything even worse, and most such
wallets don't even have code to detect double-spends at all.

From the point of view of large companies like Coinbase, getting hashing
power contracts and sybil attacking the network is relatively easy. Why
would they invest in genuine improvements when they can take the easy
way out? Especially when the easy way is something their smaller
competitors simply have no access too? Working on those contracts now
only makes sense, especially as the reliability of the P2P network in
providing zeroconf guarantees continues to decline as transaction volume
increases, and uniformity of nodes decreases.

By acting sooner rather than later in adopting full-RBF I think we have
a shot at changing the direction of the industry; if we wait I think we
stand a real chance of that dangerous infrastructure being put into
place. Equally, when you ask who is benefiting from the status quo, it
isn't decentralized wallets, but a small number of centralized startups
who have an advantage that the former can't match.

> We shouldn't prejudge people's and segment's of business weak-reliance
> on first-seen.  Some types of payments are generally high trust (known
> relationships) or physical stores or very low marginal cost (coffee
> marginal cost <10c, sale price > $2 or lower ebook, audio stream etc
> as embodied by fremium model).  It is not ours to prejudge and kill
> their business.  It our job to help improve network security however,
> so that they do not have to eat a fraud cost.  And that is do able
> with trust via greenaddress, or without trust (other than
> time-preference) via the hub & channel model.

You know, if the status quo didn't have the downsides I mention above,
I'd probably agree with you on that point. But the risks outweigh it
IMO.

> Security maybe incrementally improvable via non-spendable relaying of
> proof of double-spent status, and services that try to measure % of
> miners by hashrate with assumption of first-seen that have have seen a
> given transaction first, though I am not sure such approaches are
> robust enough to invest time in vs greenaddress or hub & channel.

Note how relaying proof of double-spent status is only useful if you can
do something about it; the only method available without a scripting
language soft-fork is the scorched earth concept, which ironically
relies on full-RBF.

> Any thoughts on the simplest way to support an opt-in version of full-RBF?

I'd suggest using nSequence for that purpose by defining non-maxint
nSequence as allowing RBF. (as well as non-maxint - 1 for nLockTime
usage to discourage fee sniping) Mark Friedenbach's sequence number BIP
is going to make use of transaction replacement anyway after all, so
doing that would be forward-compatible with it.

-- 
'peter'[:-1]@petertodd.org
0000000000000000129dec64f63611dc737b87331bb165740fb5552a92833a12
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/7f4d77b6/attachment.sig>

From venzen at mail.bihthai.net  Tue Jun 30 16:15:31 2015
From: venzen at mail.bihthai.net (Venzen Khaosan)
Date: Tue, 30 Jun 2015 23:15:31 +0700
Subject: [bitcoin-dev] Block size increase oppositionists: please
 clearly define what you need done to increase block size to a static 8MB,
 and help do it
In-Reply-To: <CALgxB7uvtKCNM-nH+aqqPa4KNf5O6Gx4GmgZY7Oq8=A24wCrfA@mail.gmail.com>
References: <CALgxB7uvtKCNM-nH+aqqPa4KNf5O6Gx4GmgZY7Oq8=A24wCrfA@mail.gmail.com>
Message-ID: <5592C0A3.8050008@mail.bihthai.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Michael, I snipped some of your comparison example to comment. I agree
with your sentiment to lobby for testing the change and your offer to
provide resources, yet it presents some (surmountable) challenges:

On 06/30/2015 10:34 PM, Michael Naber wrote:
> As you know I'm trying to lobby for a block size increase to a
> static 8MB.
> 
> I'm happy to try to get the testing done that people want done for
> this, but I think the real crux of this issue is that we need to
> get consensus that we intend to continually push the block size
> upward as bounded only by technology.

Peter Todd, on 23/06/15, proposed a combined back-test and ongoing
forward test as follows:

"... the creation (via reorg) of a realistic full-load blockchain on
testnet to fully test the real-world behavior of the entire
infrastructure ecosystem, including questions like the scalability of
block explorers, SPV wallets, feasibility of initial syncronization,
scalability of the UTXO set, etc. While this is of course inconvenient
- - 2 years of 8MB blocks is 840GB worth of data..."

So, with a working dataset of that size, jumping to 8MB is excluding a
lot of participants and contributors to the testing - someone like
myself for example.

> Do what's best for Bitcoin and define what needs to get done to
> agree to a simple block size increase to a static 8MB.

And this then leads back to the core issue: if an 8MB blocksize
excludes many on this list from testnet, then the proposed 8MB blocks
will exclude a lot of mainnet participants (miners) and degrade the
quality of diversity and decentralization.

How about testing at double the capacity: 2MB?
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVksCfAAoJEGwAhlQc8H1m3E8H/jbfdoYPN3dvJuWWpaEEU+P4
SbdPHLd08ya7dmZEqmJcGBH29aHCD1roqs5PDA6pwNFb7CTD/6aoRGeQnkU16wMj
FQ5UQkmT96niQhtHE17vdpeMHI+LK8ox1n0R3de+3QRn1HbXEN+Q68jPl16KLd8+
SArZfVUauVGUtoJDVLxXv1q2mx2huTUTX/QNeYcTZ5IjB5huMypjwN7VpL9bM8gT
xoN8pd3tjBGAt1zoRFUWk5ZgCR5iDbRdujq032gIyc5CxtP3w+N/cfDKcEwmUd1j
MTX680NODq3K1ACIz+odEd1O6VFTQjHPZdF2SEtI5eHZRNH3RcccwZUJ7S04Fic=
=CHiQ
-----END PGP SIGNATURE-----

From pete at petertodd.org  Tue Jun 30 16:25:26 2015
From: pete at petertodd.org (Peter Todd)
Date: Tue, 30 Jun 2015 12:25:26 -0400
Subject: [bitcoin-dev] Block size increase oppositionists: please
 clearly define what you need done to increase block size to a static 8MB,
 and help do it
In-Reply-To: <5592C0A3.8050008@mail.bihthai.net>
References: <CALgxB7uvtKCNM-nH+aqqPa4KNf5O6Gx4GmgZY7Oq8=A24wCrfA@mail.gmail.com>
	<5592C0A3.8050008@mail.bihthai.net>
Message-ID: <20150630162526.GA8479@savin.petertodd.org>

On Tue, Jun 30, 2015 at 11:15:31PM +0700, Venzen Khaosan wrote:
> > Do what's best for Bitcoin and define what needs to get done to
> > agree to a simple block size increase to a static 8MB.
> 
> And this then leads back to the core issue: if an 8MB blocksize
> excludes many on this list from testnet, then the proposed 8MB blocks
> will exclude a lot of mainnet participants (miners) and degrade the
> quality of diversity and decentralization.
> 
> How about testing at double the capacity: 2MB?

Which of course raises another issue: if that was the plan, then all you
can do is double capacity, with no clear way to scaling beyond that.
Why bother?

-- 
'peter'[:-1]@petertodd.org
00000000000000001599522de3e8ed28f0189ddccfa1d6db5eb380cacffc79d7
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/f1a2b130/attachment.sig>

From mickeybob at gmail.com  Tue Jun 30 16:35:12 2015
From: mickeybob at gmail.com (Michael Naber)
Date: Tue, 30 Jun 2015 12:35:12 -0400
Subject: [bitcoin-dev] Block size increase oppositionists: please
 clearly define what you need done to increase block size to a static 8MB,
 and help do it
In-Reply-To: <20150630162526.GA8479@savin.petertodd.org>
References: <CALgxB7uvtKCNM-nH+aqqPa4KNf5O6Gx4GmgZY7Oq8=A24wCrfA@mail.gmail.com>
	<5592C0A3.8050008@mail.bihthai.net>
	<20150630162526.GA8479@savin.petertodd.org>
Message-ID: <CALgxB7sPcRT5wgsEb2BkfvPjN98uiea6fe+JehCAW1BJUpUPEA@mail.gmail.com>

Re: Why bother doubling capacity? So that we could have 2x more network
participants of course.

Re: No clear way to scaling beyond that: Computers are getting more capable
aren't they? We'll increase capacity along with hardware.

It's a good thing to scale the network if technology permits it. How can
you argue with that?


On Tue, Jun 30, 2015 at 12:25 PM, Peter Todd <pete at petertodd.org> wrote:

> On Tue, Jun 30, 2015 at 11:15:31PM +0700, Venzen Khaosan wrote:
> > > Do what's best for Bitcoin and define what needs to get done to
> > > agree to a simple block size increase to a static 8MB.
> >
> > And this then leads back to the core issue: if an 8MB blocksize
> > excludes many on this list from testnet, then the proposed 8MB blocks
> > will exclude a lot of mainnet participants (miners) and degrade the
> > quality of diversity and decentralization.
> >
> > How about testing at double the capacity: 2MB?
>
> Which of course raises another issue: if that was the plan, then all you
> can do is double capacity, with no clear way to scaling beyond that.
> Why bother?
>
> --
> 'peter'[:-1]@petertodd.org
> 00000000000000001599522de3e8ed28f0189ddccfa1d6db5eb380cacffc79d7
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/f0f4be16/attachment.html>

From justus.ranvier at monetas.net  Tue Jun 30 17:53:05 2015
From: justus.ranvier at monetas.net (Justus Ranvier)
Date: Tue, 30 Jun 2015 17:53:05 +0000
Subject: [bitcoin-dev] RFC: HD Bitmessage address derivation based on BIP-43
Message-ID: <CAHabJ+N3Tr5FtStH6Msmj3d8EsvjeTEV6FhSEiizLVs=5ZvCfw@mail.gmail.com>

Monetas has developed a Bitmessage address derivation method from an
HD seed based on BIP-43.


https://github.com/monetas/bips/blob/bitmessage/bip-bm01.mediawiki


We're proposing this as a BIP per the BIP-43 recommendation in order
to reserve a purpose code.

From ctpacia at gmail.com  Tue Jun 30 18:23:15 2015
From: ctpacia at gmail.com (Chris Pacia)
Date: Tue, 30 Jun 2015 14:23:15 -0400
Subject: [bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule
In-Reply-To: <20150630160523.GG17984@savin.petertodd.org>
References: <20150629050726.GA502@savin.petertodd.org>	<5591E10F.9000008@thinlink.com>	<20150630013736.GA11508@savin.petertodd.org>	<CALqxMTH_5rtOs=aSNiVrfsG_sqQDCnTr-8qBH3Qji+8g_dAMcQ@mail.gmail.com>
	<20150630160523.GG17984@savin.petertodd.org>
Message-ID: <5592DE93.1070002@gmail.com>

On 06/30/2015 12:05 PM, Peter Todd wrote:
> Well, as you know I have good reason to believe those contracts are
> being actively worked on right now.
Isn't the whole reason they are working on those contracts because a few
miners don't use first-seen in all circumstances as it is? Or as a
corollary, wouldn't full RBF just create that much more incentive for
those type of contracts?

From adam at cypherspace.org  Tue Jun 30 19:54:47 2015
From: adam at cypherspace.org (Adam Back)
Date: Tue, 30 Jun 2015 21:54:47 +0200
Subject: [bitcoin-dev] block-size tradeoffs & hypothetical alternatives (Re:
 Block size increase oppositionists: please clearly define what you need
 done to increase block size to a static 8MB, and help do it)
Message-ID: <CALqxMTG1=+F8DSeRAThtTSmj4F3YhgUiCbqJ1CfBy9Z-LLZvSQ@mail.gmail.com>

Not that I'm arguing against scaling within tech limits - I agree we
can and should - but note block-size is not a free variable.  The
system is a balance of factors, interests and incentives.

As Greg said here
https://www.reddit.com/r/Bitcoin/comments/3b0593/to_fork_or_not_to_fork/cshphic?context=3
there are multiple things we should usefully do with increased
bandwidth:

a) improve decentralisation and hence security/policy
neutrality/fungibility (which is quite weak right now by a number of
measures)
b) improve privacy (privacy features tend to consume bandwidth, eg see
the Confidential Transactions feature) or more incremental features.
c) increase throughput

I think some of the within tech limits bandwidth should be
pre-allocated to decentralisation improvements given a) above.

And I think that we should also see work to improve decentralisation
with better pooling protocols that people are working on, to remove
some of the artificial centralisation in the system.

Secondly on the interests and incentives - miners also play an
important part of the ecosystem and have gone through some lean times,
they may not be overjoyed to hear a plan to just whack the block-size
up to 8MB.  While it's true (within some limits) that miners could
collectively keep blocks smaller, there is the ongoing reality that
someone else can take break ranks and take any fee however de minimis
fee if there is a huge excess of space relative to current demand and
drive fees to zero for a few years.  A major thing even preserving
fees is wallet defaults, which could be overridden(plus protocol
velocity/fee limits).

I think solutions that see growth scale more smoothly - like Jeff
Garzik's and Greg Maxwell's and Gavin Andresen's (though Gavin's
starts with a step) are far less likely to create perverse unforeseen
side-effects.  Well we can foresee this particular effect, but the
market and game theory can surprise you so I think you generally want
the game-theory & market effects to operate within some more smoothly
changing caps, with some user or miner mutual control of the cap.

So to be concrete here's some hypotheticals (unvalidated numbers):

a) X MB cap with miner policy limits (simple, lasts a while)
b) starting at 1MB and growing to 2*X MB cap with 10%/year growth
limiter + policy limits
c) starting at 1MB and growing to 3*X MB cap with 15%/year growth
limiter + Jeff Garzik's miner vote.
d) starting at 1MB and growing to 4*X MB cap with 20%/year growth
limiter + Greg Maxwell's flexcap

I think it would be good to see some tests of achievable network
bandwidth on a range of networks, but as an illustration say X is 2MB.

Rationale being the weaker the signalling mechanism between users and
user demanded size (in most models communicated via miners), the more
risk something will go in an unforeseen direction and hence the lower
the cap and more conservative the growth curve.

15% growth limiter is not Nielsen's law by intent.  Akamai have data
on what they serve, and it's more like 15% per annum, but very
variable by country
http://www.akamai.com/stateoftheinternet/soti-visualizations.html#stoi-graph
CISCO expect home DSL to double in 5 years
(http://www.cisco.com/c/en/us/solutions/collateral/service-provider/visual-networking-index-vni/VNI_Hyperconnectivity_WP.html
), which is about the same number.

(Thanks to Rusty for data sources for 15% number).

This also supports the claim I have made a few times here, that it is
not realistic to support massive growth without algorithmic
improvement from Lightning like or extension-block like opt-in
systems.  People who are proposing that we ramp blocksizes to create
big headroom are I think from what has been said over time, often
without advertising it clearly, actually assuming and being ok with
the idea that full nodes move into data-centers period and small
business/power user validation becomes a thing of the distant past.
Further the aggressive auto-growth risks seeing that trend continuing
into higher tier data-centers with negative implications for
decentralisation.  The odd proponent seems OK with even that too.

Decentralisation is key to Bitcoin's security model, and it's
differentiating properties.  I think those aggressive growth numbers
stray into the zone of losing efficiency.  By which I mean in
scalability or privacy systems if you make a trade-off too far, it
becomes time to re-asses what you're doing.  For example at that level
of centralisation, alternative designs are more network efficient,
while achieving the same effective (weak) decentralisation.  In
Bitcoin I see this as a strong argument not to push things to that
extreme, the core functionality must remain for Lightning and other
scaling approaches to remain secure by using the Bitcoin as a secure
anchor.  If we heavily centralise and weaken the security of the main
Bitcoin chain, there remains nothing secure to build on.

Therefore I think it's more appropriate for high scale to rely on
lightning, or a semi-centralised trade-offs being in the side-chain
model or similar, where the higher risk of centralisation is opt-in
and not exposed back (due to the security firewall) to the Bitcoin
network itself.

People who would like to try the higher tier data-center and
throughput by high bandwidth use route should in my opinion run that
experiment as a layer 2 side-chain or analogous.  There are a few ways
to do that.  And it would be appropriate to my mind that we discuss
them here also.

An experiment like that could run in parallel with lightning, maybe it
could be done faster, or offer different trade-offs, so could be an
interesting and useful thing to see work on.

> On Tue, Jun 30, 2015 at 12:25 PM, Peter Todd <pete at petertodd.org> wrote:
>> Which of course raises another issue: if that was the plan, then all you
>> can do is double capacity, with no clear way to scaling beyond that.
>> Why bother?

A secondary function can be a market signalling - market evidence
throughput can increase, and there is a technical process that is
effectively working on it.  While people may not all understand the
trade-offs and decentralisation work that should happen in parallel,
nor the Lightning protocol's expected properties - they can appreciate
perceived progress and an evidently functioning process.  Kind of a
weak rationale, from a purely technical perspective, but it may some
value, and is certainly less risky than a unilateral fork.

As I recall Gavin has said things about this area before also
(demonstrate throughput progress to the market).

Another factor that people have said, which I think I agree with
fairly much is that if we can chose something conservative, that there
is wide-spread support for, it can be safer to do it with moderate
lead time.  Then if there is an implied 3-6mo lead time we are maybe
projecting ahead a bit further on block-size utilisation.  Of course
the risk is we overshoot demand but there probably should be some
balance between that risk and the risk of doing a more rushed change
that requires system wide upgrade of all non-SPV software, where
stragglers risk losing money.

As well as scaling block-size within tech limits, we should include a
commitment to improve decentralisation, and I think any proposal
should be reasonably well analysed in terms of bandwidth assumptions
and game-theory.  eg In IETF documents they have a security
considerations section, and sometimes a privacy section.  In BIPs
maybe we need a security, privacy and decentralisation/fungibility
section.

Adam

NB some new list participants may not be aware that miners are
imposing local policy limits eg at 750kB and that a 250kB policy
existed in the past and those limits saw utilisation and were
unilaterally increased unevenly.  I'm not sure if anyone has a clear
picture of what limits are imposed by hash-rate even today.  That's
why Pieter posed the question - are we already at the policy limit -
maybe the blocks we're seeing are closely tracking policy limits, if
someone mapped that and asked miners by hash-rate etc.

On 30 June 2015 at 18:35, Michael Naber <mickeybob at gmail.com> wrote:
> Re: Why bother doubling capacity? So that we could have 2x more network
> participants of course.
>
> Re: No clear way to scaling beyond that: Computers are getting more capable
> aren't they? We'll increase capacity along with hardware.
>
> It's a good thing to scale the network if technology permits it. How can you
> argue with that?

From bryan at blockcypher.com  Tue Jun 30 19:59:23 2015
From: bryan at blockcypher.com (Bryan Cheng)
Date: Tue, 30 Jun 2015 12:59:23 -0700
Subject: [bitcoin-dev] Block size increase oppositionists: please
 clearly define what you need done to increase block size to a static 8MB,
 and help do it
In-Reply-To: <CALgxB7sPcRT5wgsEb2BkfvPjN98uiea6fe+JehCAW1BJUpUPEA@mail.gmail.com>
References: <CALgxB7uvtKCNM-nH+aqqPa4KNf5O6Gx4GmgZY7Oq8=A24wCrfA@mail.gmail.com>
	<5592C0A3.8050008@mail.bihthai.net>
	<20150630162526.GA8479@savin.petertodd.org>
	<CALgxB7sPcRT5wgsEb2BkfvPjN98uiea6fe+JehCAW1BJUpUPEA@mail.gmail.com>
Message-ID: <CANeMN=-m=2iRA_G8QSN1cmY7PuhoPjULZAFRNmBWtW63sxrKPw@mail.gmail.com>

One thing that seems to have been forgotten is that the 1MB block size does
not represent any particular rigorous design choice; it is purely arbitrary.

It does not represent any type of technical sweet-spot; it neither falls
under any reasonable MTU to prevent TCP fragmentation, nor does it
guarantee in any unique way ease of transmission or lower latency. Chinese
mining pool operators, noted as one of the more constrained stakeholders in
this decision, have indicated that 8MB is a reasonable compromise in their
situation. Unless individuals with specific, concrete use cases come
forward with exactly how they will be marginalized by blocks in the 1-8MB
range, we should consider 8MB the minimum applicable size for technical
objections to raising the block size from a network propagation point of
view.

It also does not represent any kind of economic sweet spot. If we accept
the arguments on the mailing list that economic incentives for the creation
of the fee market depend entirely on a single variable, the scarcity of
space for transactions in a block, we should be talking about _decreasing_
the block size. In reality, this is clearly laughable. The real economic
analysis would consist of a balance between the space for transactions in a
block, the number of transactions being attempted at any given time, and
the block subsidy, among many other factors. Viewing it in this light, the
chance that 1MB by some divine miracle is the perfect balance of those
economic considerations becomes exceedingly small.

(Personally, I believe that increasing the block size has a greater chance
of creating a fee market after coinbase subsidies decline, as having
competition for space in a block depends not only on the number of
transactions that fit in the block, but also the number of people
attempting to spend; if success rates fall dramatically, significantly
fewer people will attempt to transact bitcoin. However, this is a
discussion for another post).

If we stop considering 1MB to be some magic number, perhaps we can enter
into a real discussion about finding what the right sweet spot is. We very
well may decide that 1MB is _too big_; what should not be acceptable is
conflating pressures to decrease the block size with reasons for inaction
altogether. The end game of this debate should be to decide the new block
size that balances, within reason, the various pressures in every direction.

On Tue, Jun 30, 2015 at 9:35 AM, Michael Naber <mickeybob at gmail.com> wrote:

> Re: Why bother doubling capacity? So that we could have 2x more network
> participants of course.
>
> Re: No clear way to scaling beyond that: Computers are getting more
> capable aren't they? We'll increase capacity along with hardware.
>
> It's a good thing to scale the network if technology permits it. How can
> you argue with that?
>
>
> On Tue, Jun 30, 2015 at 12:25 PM, Peter Todd <pete at petertodd.org> wrote:
>
>> On Tue, Jun 30, 2015 at 11:15:31PM +0700, Venzen Khaosan wrote:
>> > > Do what's best for Bitcoin and define what needs to get done to
>> > > agree to a simple block size increase to a static 8MB.
>> >
>> > And this then leads back to the core issue: if an 8MB blocksize
>> > excludes many on this list from testnet, then the proposed 8MB blocks
>> > will exclude a lot of mainnet participants (miners) and degrade the
>> > quality of diversity and decentralization.
>> >
>> > How about testing at double the capacity: 2MB?
>>
>> Which of course raises another issue: if that was the plan, then all you
>> can do is double capacity, with no clear way to scaling beyond that.
>> Why bother?
>>
>> --
>> 'peter'[:-1]@petertodd.org
>> 00000000000000001599522de3e8ed28f0189ddccfa1d6db5eb380cacffc79d7
>>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/c47ee8e2/attachment.html>

From justus at openbitcoinprivacyproject.org  Tue Jun 30 20:08:46 2015
From: justus at openbitcoinprivacyproject.org (Justus Ranvier)
Date: Tue, 30 Jun 2015 15:08:46 -0500
Subject: [bitcoin-dev] block-size tradeoffs & hypothetical alternatives
 (Re: Block size increase oppositionists: please clearly define what you
 need done to increase block size to a static 8MB, and help do it)
In-Reply-To: <CALqxMTG1=+F8DSeRAThtTSmj4F3YhgUiCbqJ1CfBy9Z-LLZvSQ@mail.gmail.com>
References: <CALqxMTG1=+F8DSeRAThtTSmj4F3YhgUiCbqJ1CfBy9Z-LLZvSQ@mail.gmail.com>
Message-ID: <5592F74E.80200@openbitcoinprivacyproject.org>

On 06/30/2015 02:54 PM, Adam Back wrote:
> Decentralisation is key to Bitcoin's security model, and it's
> differentiating properties.

Continually repeating this statement without defining terms or providing
evidence does not make it true or informative.

"Decentralization" is a popular buzzword these days, but how about
stating the problem description in a way that is more precise and accurate?

One of Bitcoin's differentiating properties is that it prevents double
spending without using a trusted third party.

Now instead of arguing about some nebulous "decentralization" that
nobody can define or measure, we can talk about more helpful questions like:

Under what circumstances will miners and/or nodes behave as a trusted
third party (collusion)?

What incentives exist which increase, and which reduce, any tendencies
that may exist for nodes to collude?

In what ways specifically does MAX_BLOCK_SIZE relate to either of the
following questions?

-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0xEAD9E623.asc
Type: application/pgp-keys
Size: 18381 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/6fb56178/attachment-0001.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/6fb56178/attachment-0001.sig>

From milly at bitcoins.info  Tue Jun 30 20:29:36 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Tue, 30 Jun 2015 16:29:36 -0400
Subject: [bitcoin-dev] block-size tradeoffs & hypothetical alternatives
 (Re: Block size increase oppositionists: please clearly define what you
 need done to increase block size to a static 8MB, and help do it)
In-Reply-To: <5592F74E.80200@openbitcoinprivacyproject.org>
References: <CALqxMTG1=+F8DSeRAThtTSmj4F3YhgUiCbqJ1CfBy9Z-LLZvSQ@mail.gmail.com>
	<5592F74E.80200@openbitcoinprivacyproject.org>
Message-ID: <5592FC30.9090109@bitcoins.info>

 >"Decentralization" is a popular buzzword these days, but how about 
stating the problem description in a way that is more precise and 
accurate? One of Bitcoin's differentiating properties is that it 
prevents double spending without using a trusted third party.

I have been researching how it can be defined and measured (at least up 
to a certain point).  Here is a paper on measuring decentralization of 
government functions: 
http://www.sscnet.ucla.edu/polisci/faculty/treisman/Papers/defin.pdf. 
Not exactly the same thing as being discussed here but the paper gives a 
framework of how decentralization metrics could be defined in a somewhat 
standard way.

Russ




From voisine at gmail.com  Sun Jun 28 20:56:20 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Sun, 28 Jun 2015 13:56:20 -0700
Subject: [bitcoin-dev] The need for larger blocks
In-Reply-To: <559022BE.2060503@mail.bihthai.net>
References: <CAPg+sBjOj9eXiDG0F6G54SVKkStF_1HRu2wzGqtFF5X_NAWy4w@mail.gmail.com>
	<20150627074259.GA25420@amethyst.visucore.com>
	<20150627095501.C59B541A40@smtp.hushmail.com>
	<558E78CB.7070207@mail.bihthai.net>
	<CACq0ZD5WV-J1H7QA0F2wnErXVFJ3MSxWtQidPhVwaxauoHQz_A@mail.gmail.com>
	<559022BE.2060503@mail.bihthai.net>
Message-ID: <CACq0ZD5+4f19MCoiDxu8R7oHVki8VnA_f0TdUNGgnyk5PoJ+Mw@mail.gmail.com>

Moving the list to BCC, since this isn't really a technical discussion.

On Sun, Jun 28, 2015 at 9:37 AM, Venzen Khaosan <venzen at mail.bihthai.net>
wrote:

>
> Bitcoin's exchange rate, as a commodity money floating freely in the
> market, will go up and down according to speculative cycles and we
> should conceptually separate its valuation in fiat terms, from its
> fundamental value which is: mathematical consensus, cryptographic
> transaction security and censorship resistance, etc.


I get the feeling we might be reasoning from different underlying
assumptions, but I don't think you can separate value that way. Those
fundamental properties were chosen to serve the goal of creating a digital
commodity money. They are useful only in as much as they serve ends that
people value. Consensus, security, censorship resistance are valuable
because they are desirable properties for money to have.

If you want to argue that the properties of bitcoin are valuable for other
things besides money, that's fine, but those other uses presumably can be
accomplished with tiny amounts of bitcoin, so don't appreciably increase
demand.


> These values are
> critically reliant on Bitcoin's *degree of decentralization* for them
> to remain true and for Bitcoin to retain its meaning, and, therefore,
> its value. That is what I point out when I say "greater adoption has
> not reflected in the price chart". And that may remain the case for
> evermore because the value is in the protocol, the blockchain and its
> utility and degree of decentralization, not in the chart or the size
> of the user base
>

I think it depends on what you mean by "adoption". Adoption as a
store-of-value must necessarily increase the market price given the
restricted and eventually fixed supply. If we're talking about merchant
adoption as a payment system, or increased transaction volume, the yes,
these things have no direct impact on the price. They only impact the price
indirectly in as much as they encourage further adoption as a
store-of-value.


> I argue that we already know what the value of Bitcoin is. In its
> current form Bitcoin most likely fulfills 80% or 90% of its eventual
> fully evolved value. Increased adoption will not strengthen the
> fundamentals, so let's proceed with scaling that will safeguard
> Bitcoin's fundamental value and implement protections that ensure
> quality of decentralization.
>

Increased adoption does strengthen the fundamentals. The most important
fundamental for money is how many other people standardize on the same
money, and want to hold it. This drives it's price in terms of other
commodities. You want to hold what everyone else wants to hold.

Aaron Voisine
co-founder and CEO
breadwallet.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/1f837fbc/attachment.html>

From simon at bitcartel.com  Tue Jun 30 22:55:06 2015
From: simon at bitcartel.com (Simon Liu)
Date: Tue, 30 Jun 2015 15:55:06 -0700
Subject: [bitcoin-dev] block-size tradeoffs & hypothetical alternatives
 (Re: Block size increase oppositionists: please clearly define what you
 need done to increase block size to a static 8MB, and help do it)
In-Reply-To: <CALqxMTG1=+F8DSeRAThtTSmj4F3YhgUiCbqJ1CfBy9Z-LLZvSQ@mail.gmail.com>
References: <CALqxMTG1=+F8DSeRAThtTSmj4F3YhgUiCbqJ1CfBy9Z-LLZvSQ@mail.gmail.com>
Message-ID: <55931E4A.80402@bitcartel.com>

My understanding is that BIP 101 has working code to raise the block
size and is ready for evaluation today.

When will Lightning and Sidechains be ready so that a fair and
controlled test can be made?

On 06/30/2015 12:54 PM, Adam Back wrote:

> People who would like to try the higher tier data-center and
> throughput by high bandwidth use route should in my opinion run that
> experiment as a layer 2 side-chain or analogous.  There are a few ways
> to do that.  And it would be appropriate to my mind that we discuss
> them here also.
> 
> An experiment like that could run in parallel with lightning, maybe it
> could be done faster, or offer different trade-offs, so could be an
> interesting and useful thing to see work on.
> 

From tomh at thinlink.com  Tue Jun 30 22:56:04 2015
From: tomh at thinlink.com (Tom Harding)
Date: Tue, 30 Jun 2015 15:56:04 -0700
Subject: [bitcoin-dev] block-size tradeoffs & hypothetical alternatives
 (Re: Block size increase oppositionists: please clearly define what you
 need done to increase block size to a static 8MB, and help do it)
In-Reply-To: <CALqxMTG1=+F8DSeRAThtTSmj4F3YhgUiCbqJ1CfBy9Z-LLZvSQ@mail.gmail.com>
References: <CALqxMTG1=+F8DSeRAThtTSmj4F3YhgUiCbqJ1CfBy9Z-LLZvSQ@mail.gmail.com>
Message-ID: <55931E84.3060307@thinlink.com>

On 6/30/2015 12:54 PM, Adam Back wrote:
> Secondly on the interests and incentives - miners also play an
> important part of the ecosystem and have gone through some lean times,
> they may not be overjoyed to hear a plan to just whack the block-size
> up to 8MB.  While it's true (within some limits) that miners could
> collectively keep blocks smaller, there is the ongoing reality that
> someone else can take break ranks and take any fee however de minimis
> fee if there is a huge excess of space relative to current demand and
> drive fees to zero for a few years.  A major thing even preserving
> fees is wallet defaults, which could be overridden(plus protocol
> velocity/fee limits).

Let's pretend it is late 2012.

Nobody has ever violated the soft limit of 500KB/block.
Block reward is about to be cut in half.
Fees are right where they are today.
1 BTC = about $15.

It's a good thing nothing was done in 2012 to try to boost fees out of
concern for miner profits.

Nor should we today.  The 16X rise in the economic value? of the block
reward since that time covers the entire .5X effect of the halving
itself, plus three additional halvings.  There is far less reason today
to worry on miners' behalf about fees than there was in late 2012.

Running out of ways to grow does threaten miner profit, and therefore
security, growth.  So let's hope all the scaling ideas work.


> I'm not sure if anyone has a clear picture of what limits are imposed
> by hash-rate even today.

From the all-blocksizes plot, it's clear visually that the 750K soft
limit, and another less common soft limit at 900K, are being imposed,
but broken more and more frequently as demand outpaces them.

These soft limits serve no purpose, other than to delay transactions.  A
750KB block is followed by another 750KB or larger block just as
frequently as you would expect from the actual block time distribution,
which recently (prior to spam now underway) had a rate of a full 1MB
block being needed every 104 minutes (in an earlier post I gave a
relation which is very stable, given the stable average transaction size).

___________________


?Someday, if bitcoin is wildly successful, exchange rates vs. obsolete
currencies won't be meaningful.  If that happens, increases in the
economic value of bitcoin will likely be measured by decreases in the
general price level of all goods and services.



From peter at grigor.ws  Tue Jun 30 23:41:29 2015
From: peter at grigor.ws (Peter Grigor)
Date: Tue, 30 Jun 2015 16:41:29 -0700
Subject: [bitcoin-dev] A possible solution for the block size limit:
 Detection and rejection of bloated blocks by full nodes.
Message-ID: <CAGpx8BXMfUSaW1FONsbR4dK-uvQ73TjGuh5PUzsxJVwVUW3O1A@mail.gmail.com>

The block size debate centers around one concern it seems. To wit: if block
size is increased malicious miners may publish unreasonably large "bloated"
blocks. The way a miner would do this is to generate a plethora of private,
non-propagated transactions and include these in the block they solve.

It seems to me that these bloated blocks could easily be detected by other
miners and full nodes: they will contain a very high percentage of
transactions that aren't found in the nodes' own memory pools. This
signature can be exploited to allow nodes to reject these bloated blocks.
The key here is that any malicious miner that publishes a block that is
bloated with his own transactions would contain a ridiculous number of
transactions that *absolutely no other full node has in its mempool*.

Simply put, a threshold would be set by nodes on the allowable number of
non-mempool transactions allowed in a solved block (say, maybe, 50% -- I
really don't know what it should be). If a block is published which
contains more that this threshold of non-mempool transactions then it is
rejected.

If this idea works the block size limitation could be completely removed.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/0b39603a/attachment.html>

From luke at dashjr.org  Tue Jun 30 23:43:17 2015
From: luke at dashjr.org (Luke Dashjr)
Date: Tue, 30 Jun 2015 23:43:17 +0000
Subject: [bitcoin-dev] A possible solution for the block size limit:
	Detection and rejection of bloated blocks by full nodes.
In-Reply-To: <CAGpx8BXMfUSaW1FONsbR4dK-uvQ73TjGuh5PUzsxJVwVUW3O1A@mail.gmail.com>
References: <CAGpx8BXMfUSaW1FONsbR4dK-uvQ73TjGuh5PUzsxJVwVUW3O1A@mail.gmail.com>
Message-ID: <201506302343.18048.luke@dashjr.org>

On Tuesday, June 30, 2015 11:41:29 PM Peter Grigor wrote:
> The block size debate centers around one concern it seems. To wit: if block
> size is increased malicious miners may publish unreasonably large "bloated"
> blocks. The way a miner would do this is to generate a plethora of private,
> non-propagated transactions and include these in the block they solve.
> 
> It seems to me that these bloated blocks could easily be detected by other
> miners and full nodes: they will contain a very high percentage of
> transactions that aren't found in the nodes' own memory pools. This
> signature can be exploited to allow nodes to reject these bloated blocks.
> The key here is that any malicious miner that publishes a block that is
> bloated with his own transactions would contain a ridiculous number of
> transactions that *absolutely no other full node has in its mempool*.
> 
> Simply put, a threshold would be set by nodes on the allowable number of
> non-mempool transactions allowed in a solved block (say, maybe, 50% -- I
> really don't know what it should be). If a block is published which
> contains more that this threshold of non-mempool transactions then it is
> rejected.
> 
> If this idea works the block size limitation could be completely removed.

This is easily defeated simply by broadcasting the bloat beforehand...

Luke

From pieter.wuille at gmail.com  Tue Jun 30 23:45:09 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 1 Jul 2015 01:45:09 +0200
Subject: [bitcoin-dev] A possible solution for the block size limit:
 Detection and rejection of bloated blocks by full nodes.
In-Reply-To: <CAGpx8BXMfUSaW1FONsbR4dK-uvQ73TjGuh5PUzsxJVwVUW3O1A@mail.gmail.com>
References: <CAGpx8BXMfUSaW1FONsbR4dK-uvQ73TjGuh5PUzsxJVwVUW3O1A@mail.gmail.com>
Message-ID: <CAPg+sBj2P6ZUxJyrn3Dq76USO5kDTfpkF-zuYsKQbpQbTnyq2A@mail.gmail.com>

The problem with this approach is that you need 100% exact behaviour for
every node on the network in their decision to reject a particular block.
So we need a 100% mempool synchronization across all nodes - otherwise just
an attempted double spend could result in a fork in the network because
some nodes saw it and some didn't. And actually, if we had 100% mempool
synchronization, we wouldn't need a blockchain in the first place, because
we could just use "first to enter mempool" as validity criterion.

On Wed, Jul 1, 2015 at 1:41 AM, Peter Grigor <peter at grigor.ws> wrote:

> The block size debate centers around one concern it seems. To wit: if
> block size is increased malicious miners may publish unreasonably large
> "bloated" blocks. The way a miner would do this is to generate a plethora
> of private, non-propagated transactions and include these in the block they
> solve.
>
> It seems to me that these bloated blocks could easily be detected by other
> miners and full nodes: they will contain a very high percentage of
> transactions that aren't found in the nodes' own memory pools. This
> signature can be exploited to allow nodes to reject these bloated blocks.
> The key here is that any malicious miner that publishes a block that is
> bloated with his own transactions would contain a ridiculous number of
> transactions that *absolutely no other full node has in its mempool*.
>
> Simply put, a threshold would be set by nodes on the allowable number of
> non-mempool transactions allowed in a solved block (say, maybe, 50% -- I
> really don't know what it should be). If a block is published which
> contains more that this threshold of non-mempool transactions then it is
> rejected.
>
> If this idea works the block size limitation could be completely removed.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150701/96fa1ccd/attachment.html>

