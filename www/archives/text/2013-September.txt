From gavin at bitcoinfoundation.org  Wed Sep  4 01:16:35 2013
From: gavin at bitcoinfoundation.org (Gavin Andresen)
Date: Wed, 4 Sep 2013 11:16:35 +1000
Subject: [Bitcoin-development] 0.8.4 released,
	fixes critical denial-of-service issue
Message-ID: <CABsx9T1hwD3psM14mGKwWpk3RwZTXJviP=AtcHWpBeYbAB410A@mail.gmail.com>

Bitcoin-Qt version 0.8.4 is now available from:
  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.4/

This is a maintenance release to fix a critical bug and three
security issues; we urge all users to upgrade.

There were no changes from 0.8.4 release candidate 2, so if you are running
0.8.4rc2 you do not need to upgrade.

Please report bugs using the issue tracker at github:
  https://github.com/bitcoin/bitcoin/issues


How to Upgrade
--------------

If you are running an older version, shut it down. Wait
until it has completely shut down (which might take a few minutes for older
versions), then run the installer (on Windows) or just copy over
/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).

If you are upgrading from version 0.7.2 or earlier, the first time you
run 0.8.4 your blockchain files will be re-indexed, which will take
anywhere from 30 minutes to several hours, depending on the speed of
your machine.

0.8.4 Release notes
===================

Security issues
---------------

An attacker could send a series of messages that resulted in
an integer division-by-zero error in the Bloom Filter handling
code, causing the Bitcoin-Qt or bitcoind process to crash.
Bloom filters were introduced with version 0.8, so versions 0.8.0
through 0.8.3 are vulnerable to this critical denial-of-service attack.

A constant-time algorithm is now used to check RPC password
guess attempts; fixes https://github.com/bitcoin/bitcoin/issues/2838
(CVE-2013-4165)

Implement a better fix for the fill-memory-with-orphan-transactions
attack that was fixed in 0.8.3. See
https://bitslog.wordpress.com/2013/07/18/buggy-cve-2013-4627-patch-open-new-vectors-of-attack/
for a description of the weaknesses of the previous fix.
(CVE-2013-4627)

Bugs fixed
----------

Fix multi-block reorg transaction resurrection.

Fix non-standard disconnected transactions causing mempool orphans.
This bug could cause nodes running with the -debug flag to crash.

OSX: use 'FD_FULLSYNC' with LevelDB, which will (hopefully!)
prevent the database corruption issues many people have
experienced on OSX.

Linux: clicking on bitcoin: links was broken if you were using
a Gnome-based desktop.

Fix a hang-at-shutdown bug that only affects users that compile
their own version of Bitcoin against Boost versions 1.50-1.52.

Other changes
-------------

Checkpoint at block 250,000 to speed up initial block downloads
and make the progress indicator when downloading more accurate.


Thanks to everybody who contributed to the 0.8.4 releases!
----------------------------------------------------------

Pieter Wuille
Warren Togami
Patrick Strateman
pakt
Gregory Maxwell
Sergio Demian Lerner
grayleonard
Cory Fields
Matt Corallo
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130904/acb92384/attachment.html>

From w at grabhive.com  Wed Sep  4 19:47:09 2013
From: w at grabhive.com (Wendell)
Date: Wed, 4 Sep 2013 21:47:09 +0200
Subject: [Bitcoin-development] An "app store" and non-network transaction
	fees
Message-ID: <879EBFD7-3047-4ECD-B03B-941857F7970C@grabhive.com>

Hi everyone,

Our OS X wallet "Hive" features an integrated application platform. We hope this will be a great way for folks new to Bitcoin to discover a variety of Bitcoin businesses, from exchanges, to merchants, to games. The applications are locally hosted HTML/JS, and generally feature the most stripped-down UIs possible. We display them in a mobile-proportioned WebKit frame inside of Hive itself. Transaction requests within apps trigger native Cocoa dialogue boxes and everything feels nicely integrated and secure.

Should Hive succeed in gaining a foothold, we hope that we may one day be able to sustain ourselves via an aggregate of very small fees on transactions within this app platform. We like the approach because it lets us stay focused on making Hive great, and keeping it free, but at the same time we recognize that it is a kind of obligatory middleman... With all that that implies? I'm not totally sure, and that's what the question is about.

Obviously there are a couple of brain-dead approaches: We could track what users do in the app, and send the business a bill (with blockchain proof, of course). Or, we could avoid troubling the business and have each user send a micro-transaction to some address of our choosing. The first one is messy and essentially makes us spyware. The second one is technically difficult, making a mess of transaction history, balances, and possibly in-app price listings. I'm not happy with either, but would lean towards the second one if I had to choose.

I'm not 100% sure if this is the appropriate venue for it, but before we make that decision, I wanted to state our intentions and see if I could get some fresher ideas in the door. We want to be as ethical and (ideally) decentralized as possible -- priorities #1 and #2 -- but are otherwise open-minded.

Some technical details for the curious:

1) Yes, everything will be free software under a GPL license -- including the app store and the apps themselves! That may seem to be risky given our proposed business model, but we are open-minded and think we very much welcome the 'competition' of a would-be forker / hope we can work together. ;-)

2) Although our BitcoinKit.framework supports both bitcoind and bitcoinj, we will be using bitcoinj with an integrated VM for the time being. The main draw is SPV, although to be honest we would prefer to support the network more via something like Peter Todd's partial UTXO sets idea (hint hint, anyone?).

We will be at the conference in Amsterdam on the 27th of this month if any of you want to meet and discuss.

Thanks for your time,
-wendell

grabhive.com | twitter.com/grabhive | gpg: 6C0C9411

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 841 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130904/3bbaa0d6/attachment.sig>

From rdohm321 at gmail.com  Wed Sep  4 21:35:57 2013
From: rdohm321 at gmail.com (Randolph D.)
Date: Wed, 4 Sep 2013 23:35:57 +0200
Subject: [Bitcoin-development] GB V04
Message-ID: <CAEvNM8mLd07616RgiWziJOALmEGEedzfyM1qDwv57sx6bVAoJg@mail.gmail.com>

Fwd:
> V04 is out: Secure Instant Messenger
> https://sourceforge.net/projects/goldbug/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130904/420eaa82/attachment.html>

From w at grabhive.com  Thu Sep  5 08:23:01 2013
From: w at grabhive.com (Wendell)
Date: Thu, 5 Sep 2013 10:23:01 +0200
Subject: [Bitcoin-development] Social network integration (brainstorm)
Message-ID: <2DE404E4-446E-41F4-8ECF-B312EE42D067@grabhive.com>

Mike Hearn had a rather cool idea about watermarking images with Bitcoin addresses in order to facilitate auto-magically linking social networking profiles: apparently even without API access, reasonably large user images are available publicly via the major services (Facebook, Twitter).

Since this process would necessarily be somewhat manual and would of course be "undone" anytime the user changed his/her profile image, it is probably not a solution for everyone. But it seems that this could be a helpful way to at least _begin_ organizing Bitcoin around people and organizations in a way that is broadly familiar.

I haven't been able to get this to work myself, but Blockchain.info seems to offer sending 'coin via Facebook:
https://blockchain.info/wallet/send-via

There is also the very cute Bitcoins With Friends:
https://bitcoinswithfriends.com/

Most of the other apps that I have seen at one point or another have vanished. I recall reading that Facebook was not particularly friendly to them, hence the present interest in more subversive (?) ways of making those connections.

Again, I am not 100% sure that this is the correct place for it, but I'm opening this thread to other such ideas in case anyone else wants to discuss it. Our motivation is making Bitcoin easier to use, and we suspect that even imperfect social network support will move us closer to that goal.

-wendell

grabhive.com | twitter.com/grabhive | gpg: 6C0C9411

> Re-orienting Bitcoin around people and companies is something we wanted to do for a long time. How do you get an address linked to a personal profile? Someone was asking me about this last month and I suggested watermarking addresses into social network profile pictures. The advantage of that approach is every social network supports profile pictures and big ones like Facebook and Twitter allow querying of somebodies picture without needing any API or user authentication, eg:
> 
>    https://graph.facebook.com/i.am.the.real.mike/picture?type=large
> 
> So obviously with such a thing you can send to any Facebook user who has configured their profile correctly. There's a library that implements watermarking that can survive social network recompression, but it is (doh) written in Java ;)



From mike at plan99.net  Thu Sep  5 08:26:07 2013
From: mike at plan99.net (Mike Hearn)
Date: Thu, 5 Sep 2013 10:26:07 +0200
Subject: [Bitcoin-development] An "app store" and non-network
	transaction fees
In-Reply-To: <879EBFD7-3047-4ECD-B03B-941857F7970C@grabhive.com>
References: <879EBFD7-3047-4ECD-B03B-941857F7970C@grabhive.com>
Message-ID: <CANEZrP1zAJ0bQHsqKgH=L4BpgE_kHGKNh=+mv=Tk++7OWA4C2g@mail.gmail.com>

Hey Wendell,

Interesting idea you have there!

On Wed, Sep 4, 2013 at 9:47 PM, Wendell <w at grabhive.com> wrote:

> Obviously there are a couple of brain-dead approaches: We could track what
> users do in the app, and send the business a bill (with blockchain proof,
> of course).
>

It might be simpler to not think of it as an app store, but rather see it
as a set of affiliate schemes. To get placed into the apps section you can
say that the business must have an affiliate scheme in place (i.e. open to
more than just you) and then you use the normal mechanisms of affiliate
codes and so on. The apps don't have to be offline. They can (and probably
should) be online, so the businesses can retain control of their features
and brand. If you refer a lot of users to that business, you get the
referral bonuses. Affiliate schemes are a common way for open source
projects to monetize - e.g. Firefox development is largely paid for by
search engine referrals. It's compatible with the ideals of openness
because their income relies directly on their traffic, and there are
several competing search engines the projects can play off against each
other to get the best prices. Also, users expect search engine integration
these days, so they'd be sending search traffic regardless.

The main downside, of course, is it distorts technical judgement. You can
get projects pushing certain businesses heavily not because it's
technically the best thing for users, but because their income depends on
it.

One alternative funding model you could explore is allowing users to bid on
assurance contracts for feature development. This means you think up a
bunch of improvements you could make, then allow users to pledge
Kickstarter-style towards their development. The upside is it allows the
community to direct development, and users feel directly involved and not
exploited. The downside is, no recurring income you can use to support
yourself whilst engaged in other endeavours.

2) Although our BitcoinKit.framework supports both bitcoind and bitcoinj,
> we will be using bitcoinj with an integrated VM for the time being. The
> main draw is SPV, although to be honest we would prefer to support the
> network more via something like Peter Todd's partial UTXO sets idea (hint
> hint, anyone?).
>

Bear in mind that regardless of how much *you* want to support the network,
it's ultimately *your users* resources that will actually get spent. That's
why I'm a bit skeptical of any schemes that rely on random end users
donating lots of cpu time or bandwidth to the network. If they want to do
it, partial UTXO sets and other interesting ideas are worthwhile, but I
guess most users won't. I think Bitcoin will over time be more and more
like Tor where relays are run on dedicated servers by people who have some
modicum of knowledge and community involvement.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130905/bb1ec2e1/attachment.html>

From mike at plan99.net  Thu Sep  5 08:27:06 2013
From: mike at plan99.net (Mike Hearn)
Date: Thu, 5 Sep 2013 10:27:06 +0200
Subject: [Bitcoin-development] GB V04
In-Reply-To: <CAEvNM8mLd07616RgiWziJOALmEGEedzfyM1qDwv57sx6bVAoJg@mail.gmail.com>
References: <CAEvNM8mLd07616RgiWziJOALmEGEedzfyM1qDwv57sx6bVAoJg@mail.gmail.com>
Message-ID: <CANEZrP2Me2BCMU-CHMsfpn=2s7g0QHpEFj7p1BU5JGKh3=bMiw@mail.gmail.com>

Please do not post about this on bitcoin-development again. It's off topic
and you were already asked to stop.


On Wed, Sep 4, 2013 at 11:35 PM, Randolph D. <rdohm321 at gmail.com> wrote:

> Fwd:
> > V04 is out: Secure Instant Messenger
> > https://sourceforge.net/projects/goldbug/
>
>
> ------------------------------------------------------------------------------
> Learn the latest--Visual Studio 2012, SharePoint 2013, SQL 2012, more!
> Discover the easy way to master current and previous Microsoft technologies
> and advance your career. Get an incredible 1,500+ hours of step-by-step
> tutorial videos with LearnDevNow. Subscribe today and save!
> http://pubads.g.doubleclick.net/gampad/clk?id=58041391&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130905/4e82ff75/attachment.html>

From mike at plan99.net  Thu Sep  5 08:33:24 2013
From: mike at plan99.net (Mike Hearn)
Date: Thu, 5 Sep 2013 10:33:24 +0200
Subject: [Bitcoin-development] Social network integration (brainstorm)
In-Reply-To: <2DE404E4-446E-41F4-8ECF-B312EE42D067@grabhive.com>
References: <2DE404E4-446E-41F4-8ECF-B312EE42D067@grabhive.com>
Message-ID: <CANEZrP2ph9SM6kUdTXooZ2nqKD4LweWsgVEdssiftNdBmcP+_w@mail.gmail.com>

>
> Since this process would necessarily be somewhat manual and would of
> course be "undone" anytime the user changed his/her profile image, it is
> probably not a solution for everyone.


I guess these days most Facebook/G+/Twitter users are logged in from their
smartphone , so you'd implement it as a mobile app that gets API access via
the standard mobile frameworks. The UI flows for this are highly optimised
and very slick. Once you have API access to read/write the users profile
picture, your app can just wake up from time to time and check if the users
profile picture has changed. If it did, download the highest resolution
available, rewatermark and reupload.

The main sticking point I can see is that the user might end up losing
comments or likes on their primary photo, which would upset some people,
and they might end up with duplicates if the old one was not erased. The
Facebook API docs are notoriously poor - it's unclear to me whether an app
can edit a photo after it was uploaded, or whether it can only create new
ones (deleting photos requires whitelisting by Facebook).

To read the users watermarked address requires no API access or account,
though.

Probably you wouldn't want to watermark an actual Bitcoin address or key.
The capacity of social network photos to carry stegod data is very low due
to the incredibly high compression they go through. More likely you'd
encode a very short URL which contains a payment request and then users
would rotate their key from time to time at the hosting site.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130905/94be6cf4/attachment.html>

From w at grabhive.com  Thu Sep  5 10:04:26 2013
From: w at grabhive.com (Wendell)
Date: Thu, 5 Sep 2013 12:04:26 +0200
Subject: [Bitcoin-development] An "app store" and non-network
	transaction fees
In-Reply-To: <CANEZrP1zAJ0bQHsqKgH=L4BpgE_kHGKNh=+mv=Tk++7OWA4C2g@mail.gmail.com>
References: <879EBFD7-3047-4ECD-B03B-941857F7970C@grabhive.com>
	<CANEZrP1zAJ0bQHsqKgH=L4BpgE_kHGKNh=+mv=Tk++7OWA4C2g@mail.gmail.com>
Message-ID: <36036B83-CD26-497F-BC5A-FD69DAFF578C@grabhive.com>

Hey Mike!

On Sep 5, 2013, at 10:26 AM, Mike Hearn wrote:
> It might be simpler to not think of it as an app store, but rather see it as a set of affiliate schemes. To get placed into the apps section you can say that the business must have an affiliate scheme in place (i.e. open to more than just you) and then you use the normal mechanisms of affiliate codes and so on.
> If you refer a lot of users to that business, you get the referral bonuses. Affiliate schemes are a common way for open source projects to monetize - e.g. Firefox development is largely paid for by search engine referrals. It's compatible with the ideals of openness because their income relies directly on their traffic, and there are several competing search engines the projects can play off against each other to get the best prices. Also, users expect search engine integration these days, so they'd be sending search traffic regardless.

In the long term, I think this makes perfect sense. After all, that's really what the first option is at its heart. About search engines, that's also a great point. We've thought about doing this, but my concern was that the ecosystem on the whole is too young and fragmented for this to make much sense. Until for example speciality search engines for Bitcoin products and services manifest (I'm sure they are coming), I suspect the results might be a little vague and unsatisfying.

I really see Hive's app platform as a stepping-stone to more mature things. Hopefully several companies like BitPay end up offering both great affiliate programs and search engines very soon. Until then, that's why something like sending transaction fees directly from the user's wallet is even on the table.

> The apps don't have to be offline. They can (and probably should) be online, so the businesses can retain control of their features and brand.

Yes, I should clarify. We do want businesses to be able to have that control. However we also want to do a kind of submission/review process in order to ensure some user experience continuity and also to monitor for potential exploits. The plan is ultimately to have a public repository for applications, maintained by us. We will review the pull requests of third parties and the Hive app will always try to pull the latest (approved) updates. Does that make sense? It's centralized responsibility and potential risk if we cannot keep up with demand, but again -- we want to try the approach, at least while starting out.

> The main downside, of course, is it distorts technical judgement. You can get projects pushing certain businesses heavily not because it's technically the best thing for users, but because their income depends on it.

That's absolutely true, but at the moment the only thing I can really say is that we'll cross that bridge when we get there. ;-)

> One alternative funding model you could explore is allowing users to bid on assurance contracts for feature development. This means you think up a bunch of improvements you could make, then allow users to pledge Kickstarter-style towards their development. The upside is it allows the community to direct development, and users feel directly involved and not exploited. The downside is, no recurring income you can use to support yourself whilst engaged in other endeavours.

Funny you should mention it! I just mocked this idea up last week, though I assumed a cruder system of "voting" to an address that corresponds to a feature -- literally, voting with your wallet (for your wallet, ad infinitum). I watched your talk about assurance contracts and other "hidden" features, but am not entirely sure that I understood it enough to know how it would work in this context. Sorry for the persistent hand-holding requests, but some advice would be very welcome.

>> 2) Although our BitcoinKit.framework supports both bitcoind and bitcoinj, we will be using bitcoinj with an integrated VM for the time being. The main draw is SPV, although to be honest we would prefer to support the network more via something like Peter Todd's partial UTXO sets idea (hint hint, anyone?).
> 
> Bear in mind that regardless of how much you want to support the network, it's ultimately your users resources that will actually get spent. That's why I'm a bit skeptical of any schemes that rely on random end users donating lots of cpu time or bandwidth to the network. If they want to do it, partial UTXO sets and other interesting ideas are worthwhile, but I guess most users won't. I think Bitcoin will over time be more and more like Tor where relays are run on dedicated servers by people who have some modicum of knowledge and community involvement.

If it is a real burden for the users, that's the best argument I've yet heard. However, my impression from Peter's post was that it would be fairly painless for them. I guess there's also the question of diminishing returns: Is the network value of a full "user" Bitcoin node less than one run on a dedicated server? Will it eventually be? I don't know enough about that to comment, but I do know that in the Tor example, exits are chosen based on some criteria (I think, available bandwidth?). Is there a parallel in Bitcoin?

(Probably best as a separate thread...)

Thanks for your thoughts, Mike.
-w
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 841 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130905/ffd6a3a5/attachment.sig>

From mike at plan99.net  Thu Sep  5 10:14:42 2013
From: mike at plan99.net (Mike Hearn)
Date: Thu, 5 Sep 2013 12:14:42 +0200
Subject: [Bitcoin-development] An "app store" and non-network
	transaction fees
In-Reply-To: <36036B83-CD26-497F-BC5A-FD69DAFF578C@grabhive.com>
References: <879EBFD7-3047-4ECD-B03B-941857F7970C@grabhive.com>
	<CANEZrP1zAJ0bQHsqKgH=L4BpgE_kHGKNh=+mv=Tk++7OWA4C2g@mail.gmail.com>
	<36036B83-CD26-497F-BC5A-FD69DAFF578C@grabhive.com>
Message-ID: <CANEZrP3hrYZ5SYng=fknCqn_vg9gK4HTS7T-tdQNfc0MwZ5DtA@mail.gmail.com>

On Thu, Sep 5, 2013 at 12:04 PM, Wendell <w at grabhive.com> wrote:

> Funny you should mention it! I just mocked this idea up last week, though
> I assumed a cruder system of "voting" to an address that corresponds to a
> feature -- literally, voting with your wallet (for your wallet, ad
> infinitum). I watched your talk about assurance contracts and other
> "hidden" features, but am not entirely sure that I understood it enough to
> know how it would work in this context. Sorry for the persistent
> hand-holding requests, but some advice would be very welcome.
>

Well, it's a bit complicated and needs some software development to do
well. The best way to fund a complex project would be to raise the money
using an assurance contr.... oh wait ;)


> If it is a real burden for the users, that's the best argument I've yet
> heard. However, my impression from Peter's post was that it would be fairly
> painless for them.
>

It could be automatic in the sense that users don't need to know it's
happening, but look at it this way. Gavin believes the future of computing
is mobile and tablets. I don't know about that, but let's assume for the
sake of argument he turns out to be right. These devices are expected to
have much longer battery life than laptops. Apps that spin up in the
background and use battery+radio can easily be seen as "abusive" by end
users. In fact, if you look in the Bitcoin Wallet section of the forum,
you'll see a giant argument by users of the Android app who are upset
because the app sometimes runs in the background *just to keep up with the
chain*! That's not even donating resources, it's just trying to ensure it
doesn't fall behind, and this enrages some users because it can have a
small but non-zero battery/bandwidth usage impact.

Given the number of complaints generated by just having the app sync
automatically, imagine what would happen if we started relaying blocks!

Generally the ethos and modus operandi of desktops is different to laptops
which is in turn different to mobiles/tablets. Things you can get away with
on more powerful machines that expect to be plugged in all the time are
verboten on more modern devices.

Now that said, I can easily see Bitcoin enthusiasts buying some kind of
cheap embedded device, maybe Raspberry Pi based, and plugging it into a
wall in order to donate to the network. That way it doesn't affect their
primary devices responsiveness or storage or battery life.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130905/53170c33/attachment.html>

From mats at henricson.se  Thu Sep  5 11:02:11 2013
From: mats at henricson.se (Mats Henricson)
Date: Thu, 05 Sep 2013 13:02:11 +0200
Subject: [Bitcoin-development] Social network integration (brainstorm)
In-Reply-To: <2DE404E4-446E-41F4-8ECF-B312EE42D067@grabhive.com>
References: <2DE404E4-446E-41F4-8ECF-B312EE42D067@grabhive.com>
Message-ID: <522864B3.1050105@henricson.se>

The Trsst project (Twitter + RSS + Google Reader = Trsst social network)
has some interesting ideas:

http://www.trsst.com/paper/

Quote:

   In Trsst, every user account is a digital wallet. Authors and
   individual pieces of content can receive secure and anonymous
   micro-payments of digital crypto-currency, enabling long-
   envisioned content monetization schemes where authors receive
   small payments each time their content is consumed, shared,
   or "liked".

Mats

On 09/05/2013 10:23 AM, Wendell wrote:
> Mike Hearn had a rather cool idea about watermarking images with Bitcoin addresses in order to facilitate auto-magically linking social networking profiles: apparently even without API access, reasonably large user images are available publicly via the major services (Facebook, Twitter).
> 
> Since this process would necessarily be somewhat manual and would of course be "undone" anytime the user changed his/her profile image, it is probably not a solution for everyone. But it seems that this could be a helpful way to at least _begin_ organizing Bitcoin around people and organizations in a way that is broadly familiar.
> 
> I haven't been able to get this to work myself, but Blockchain.info seems to offer sending 'coin via Facebook:
> https://blockchain.info/wallet/send-via
> 
> There is also the very cute Bitcoins With Friends:
> https://bitcoinswithfriends.com/
> 
> Most of the other apps that I have seen at one point or another have vanished. I recall reading that Facebook was not particularly friendly to them, hence the present interest in more subversive (?) ways of making those connections.
> 
> Again, I am not 100% sure that this is the correct place for it, but I'm opening this thread to other such ideas in case anyone else wants to discuss it. Our motivation is making Bitcoin easier to use, and we suspect that even imperfect social network support will move us closer to that goal.
> 
> -wendell
> 
> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411
> 
>> Re-orienting Bitcoin around people and companies is something we wanted to do for a long time. How do you get an address linked to a personal profile? Someone was asking me about this last month and I suggested watermarking addresses into social network profile pictures. The advantage of that approach is every social network supports profile pictures and big ones like Facebook and Twitter allow querying of somebodies picture without needing any API or user authentication, eg:
>>
>>    https://graph.facebook.com/i.am.the.real.mike/picture?type=large
>>
>> So obviously with such a thing you can send to any Facebook user who has configured their profile correctly. There's a library that implements watermarking that can survive social network recompression, but it is (doh) written in Java ;)
> 
> ------------------------------------------------------------------------------
> Learn the latest--Visual Studio 2012, SharePoint 2013, SQL 2012, more!
> Discover the easy way to master current and previous Microsoft technologies
> and advance your career. Get an incredible 1,500+ hours of step-by-step
> tutorial videos with LearnDevNow. Subscribe today and save!
> http://pubads.g.doubleclick.net/gampad/clk?id=58041391&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From w at grabhive.com  Thu Sep  5 12:09:55 2013
From: w at grabhive.com (Wendell)
Date: Thu, 5 Sep 2013 14:09:55 +0200
Subject: [Bitcoin-development] An "app store" and non-network
	transaction fees
In-Reply-To: <CANEZrP3hrYZ5SYng=fknCqn_vg9gK4HTS7T-tdQNfc0MwZ5DtA@mail.gmail.com>
References: <879EBFD7-3047-4ECD-B03B-941857F7970C@grabhive.com>
	<CANEZrP1zAJ0bQHsqKgH=L4BpgE_kHGKNh=+mv=Tk++7OWA4C2g@mail.gmail.com>
	<36036B83-CD26-497F-BC5A-FD69DAFF578C@grabhive.com>
	<CANEZrP3hrYZ5SYng=fknCqn_vg9gK4HTS7T-tdQNfc0MwZ5DtA@mail.gmail.com>
Message-ID: <40424BD6-6EF1-454E-AA9F-6AF4C723A4BE@grabhive.com>

On Sep 5, 2013, at 12:14 PM, Mike Hearn wrote:
> On Thu, Sep 5, 2013 at 12:04 PM, Wendell <w at grabhive.com> wrote:
>> Funny you should mention it! I just mocked this idea up last week, though I assumed a cruder system of "voting" to an address that corresponds to a feature -- literally, voting with your wallet (for your wallet, ad infinitum). I watched your talk about assurance contracts and other "hidden" features, but am not entirely sure that I understood it enough to know how it would work in this context. Sorry for the persistent hand-holding requests, but some advice would be very welcome.
> 
> Well, it's a bit complicated and needs some software development to do well. The best way to fund a complex project would be to raise the money using an assurance contr.... oh wait ;)

Well, let's assume that our "public good" is based on the 5-step model described here:
https://en.bitcoin.it/wiki/Contracts#Example_3:_Assurance_contracts

This good corresponds to something like "Facebook contact synchronization" and has a target of 50 BTC, though we also want to be able to take more if people are willing to give it.

From here, it is unfortunately a little over our collective heads; we have as of yet no experience with the scripting language. I suppose I'm trying to twist your arm for an example, and maybe an anecdote. How would we do it? Does it require the donors to do anything esoteric? I saw "but they do not broadcast it" -- does this happen automatically when coins are sent to that address, for example?

Confused but enthusiastic,
-wendell

grabhive.com | twitter.com/grabhive | gpg: 6C0C9411




From mike at plan99.net  Thu Sep  5 12:49:43 2013
From: mike at plan99.net (Mike Hearn)
Date: Thu, 5 Sep 2013 14:49:43 +0200
Subject: [Bitcoin-development] An "app store" and non-network
	transaction fees
In-Reply-To: <40424BD6-6EF1-454E-AA9F-6AF4C723A4BE@grabhive.com>
References: <879EBFD7-3047-4ECD-B03B-941857F7970C@grabhive.com>
	<CANEZrP1zAJ0bQHsqKgH=L4BpgE_kHGKNh=+mv=Tk++7OWA4C2g@mail.gmail.com>
	<36036B83-CD26-497F-BC5A-FD69DAFF578C@grabhive.com>
	<CANEZrP3hrYZ5SYng=fknCqn_vg9gK4HTS7T-tdQNfc0MwZ5DtA@mail.gmail.com>
	<40424BD6-6EF1-454E-AA9F-6AF4C723A4BE@grabhive.com>
Message-ID: <CANEZrP0k5igJuWXV_oJCoFtEy_POXrLHt00g8EM4CtTgLLbkug@mail.gmail.com>

It needs people to use either a dedicated app or a wallet with the right
features. I've gone back and forth on whether it's better to have wallets
become featureful things or to have lots of separate apps. There are pro's
and con's to each.

Fortunately bitcoinj makes bringing up a new GUI wallet app quite easy
(well ... if you're writing it in java ;). So having a dedicated app just
for managing your pledges is quite straightforward.

At that point it's about contracts programming:

https://code.google.com/p/bitcoinj/wiki/WorkingWithContracts
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130905/bb210eef/attachment.html>

From w at grabhive.com  Fri Sep  6 15:07:44 2013
From: w at grabhive.com (Wendell)
Date: Fri, 6 Sep 2013 17:07:44 +0200
Subject: [Bitcoin-development] Simple contacts exchange (was: Social network
	integration (brainstorm))
Message-ID: <9179D240-EE7E-41A4-AA59-7C96246D8CFB@grabhive.com>

Hi all,

We're thinking about ways of automatically exchanging contact details between wallets, in order to encourage the proliferation of identifiable names and photos rather than long and hard-to-verify addresses.

The simplest version goes like this:

2 BTC Bitcoin is sent to someone, and a data lookup hash is inserted into the transaction. When it arrives on the other end, it is indeed looked up, and instead of being presented with a dialogue that says "you received 2 BTC from 13Y94z43Nbbb6wevRyk82CeDoYQ5S28zmA", it's "You received 2 BTC from Frank Jones" including a nice photo.

Now. We can simply delete this data in reference to the transaction ID after it happens (or delete it after a time), but is there any more decentralized way to do it? I would prefer us to run no dedicated servers that would ever put us in a position of being coerced into giving data, or otherwise altering our system to store it.

Any thoughts about this?

-wendell

grabhive.com | twitter.com/grabhive | gpg: 6C0C9411

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 841 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130906/6be1e4b2/attachment.sig>

From elombrozo at gmail.com  Fri Sep  6 22:47:50 2013
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Fri, 6 Sep 2013 15:47:50 -0700
Subject: [Bitcoin-development] Simple contacts exchange (was: Social
	network integration (brainstorm))
In-Reply-To: <9179D240-EE7E-41A4-AA59-7C96246D8CFB@grabhive.com>
References: <9179D240-EE7E-41A4-AA59-7C96246D8CFB@grabhive.com>
Message-ID: <AFD93558-684C-497C-ADAF-D031095EC2CE@gmail.com>

Why not just use the transaction hash itself for the lookup? Also, presumably you'd want to encrypt the data so that only the recipient of the transaction can do this lookup.

-Eric

On Sep 6, 2013, at 8:07 AM, Wendell <w at grabhive.com> wrote:

> Hi all,
> 
> We're thinking about ways of automatically exchanging contact details between wallets, in order to encourage the proliferation of identifiable names and photos rather than long and hard-to-verify addresses.
> 
> The simplest version goes like this:
> 
> 2 BTC Bitcoin is sent to someone, and a data lookup hash is inserted into the transaction. When it arrives on the other end, it is indeed looked up, and instead of being presented with a dialogue that says "you received 2 BTC from 13Y94z43Nbbb6wevRyk82CeDoYQ5S28zmA", it's "You received 2 BTC from Frank Jones" including a nice photo.
> 
> Now. We can simply delete this data in reference to the transaction ID after it happens (or delete it after a time), but is there any more decentralized way to do it? I would prefer us to run no dedicated servers that would ever put us in a position of being coerced into giving data, or otherwise altering our system to store it.
> 
> Any thoughts about this?
> 
> -wendell
> 
> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411
> 
> ------------------------------------------------------------------------------
> Learn the latest--Visual Studio 2012, SharePoint 2013, SQL 2012, more!
> Discover the easy way to master current and previous Microsoft technologies
> and advance your career. Get an incredible 1,500+ hours of step-by-step
> tutorial videos with LearnDevNow. Subscribe today and save!
> http://pubads.g.doubleclick.net/gampad/clk?id=58041391&iu=/4140/ostg.clktrk_______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130906/6f906efc/attachment.sig>

From aaxiomfinity at gmail.com  Sat Sep  7 21:06:24 2013
From: aaxiomfinity at gmail.com (Chris Evans)
Date: Sat, 7 Sep 2013 14:06:24 -0700
Subject: [Bitcoin-development] Blockchain archival
Message-ID: <CAE0e52XQSMJj9pDb3OEMyAYkChi7=Y9=phKMm34zh1NQFSdcLw@mail.gmail.com>

bitcoin protocol needs an archival system so the blockchain doesn't become
too big to download
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130907/61462202/attachment.html>

From mike at plan99.net  Sat Sep  7 21:44:38 2013
From: mike at plan99.net (Mike Hearn)
Date: Sat, 7 Sep 2013 23:44:38 +0200
Subject: [Bitcoin-development] Simple contacts exchange (was: Social
 network integration (brainstorm))
In-Reply-To: <9179D240-EE7E-41A4-AA59-7C96246D8CFB@grabhive.com>
References: <9179D240-EE7E-41A4-AA59-7C96246D8CFB@grabhive.com>
Message-ID: <CANEZrP1k9xsOESVL6yD+MvaO53Z9Fj_MifnquKi+2fcfk0uP4A@mail.gmail.com>

This is the sort of thing the payment protocol is for. The recipient would
vend a PaymentRequest containing identity details. The sender would submit
a Payment containing his/hers. The wallet then understands what to do.


On Fri, Sep 6, 2013 at 5:07 PM, Wendell <w at grabhive.com> wrote:

> Hi all,
>
> We're thinking about ways of automatically exchanging contact details
> between wallets, in order to encourage the proliferation of identifiable
> names and photos rather than long and hard-to-verify addresses.
>
> The simplest version goes like this:
>
> 2 BTC Bitcoin is sent to someone, and a data lookup hash is inserted into
> the transaction. When it arrives on the other end, it is indeed looked up,
> and instead of being presented with a dialogue that says "you received 2
> BTC from 13Y94z43Nbbb6wevRyk82CeDoYQ5S28zmA", it's "You received 2 BTC from
> Frank Jones" including a nice photo.
>
> Now. We can simply delete this data in reference to the transaction ID
> after it happens (or delete it after a time), but is there any more
> decentralized way to do it? I would prefer us to run no dedicated servers
> that would ever put us in a position of being coerced into giving data, or
> otherwise altering our system to store it.
>
> Any thoughts about this?
>
> -wendell
>
> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411
>
>
>
> ------------------------------------------------------------------------------
> Learn the latest--Visual Studio 2012, SharePoint 2013, SQL 2012, more!
> Discover the easy way to master current and previous Microsoft technologies
> and advance your career. Get an incredible 1,500+ hours of step-by-step
> tutorial videos with LearnDevNow. Subscribe today and save!
> http://pubads.g.doubleclick.net/gampad/clk?id=58041391&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130907/cada844b/attachment.html>

From rob.golding at astutium.com  Sat Sep  7 23:21:31 2013
From: rob.golding at astutium.com (rob.golding at astutium.com)
Date: Sun, 08 Sep 2013 00:21:31 +0100
Subject: [Bitcoin-development] Blockchain archival
In-Reply-To: <CAE0e52XQSMJj9pDb3OEMyAYkChi7=Y9=phKMm34zh1NQFSdcLw@mail.gmail.com>
References: <CAE0e52XQSMJj9pDb3OEMyAYkChi7=Y9=phKMm34zh1NQFSdcLw@mail.gmail.com>
Message-ID: <eb196950d9bf667a3b149a74c0d99ab0@astutium.com>

> bitcoin protocol needs an archival system so the blockchain doesn't
> become too big to download

Some people may want it all ...

Balance at Point-In-Time summaries (say up to the penultimate 
difficulty adjustment) would be one simple way.
And make new-adopters get up and running in minutes not days, which can 
only be a good thing.

If going that route, then solutions to the 'consolidate 
addresses/wallets' question and formal 'discard' of addresses could get 
addressed.

Rob




From luke at dashjr.org  Sat Sep  7 23:33:52 2013
From: luke at dashjr.org (Luke-Jr)
Date: Sat, 7 Sep 2013 23:33:52 +0000
Subject: [Bitcoin-development] Blockchain archival
In-Reply-To: <eb196950d9bf667a3b149a74c0d99ab0@astutium.com>
References: <CAE0e52XQSMJj9pDb3OEMyAYkChi7=Y9=phKMm34zh1NQFSdcLw@mail.gmail.com>
	<eb196950d9bf667a3b149a74c0d99ab0@astutium.com>
Message-ID: <201309072333.53026.luke@dashjr.org>

On Saturday, September 07, 2013 11:21:31 PM rob.golding at astutium.com wrote:
> > bitcoin protocol needs an archival system so the blockchain doesn't
> > become too big to download
> 
> Some people may want it all ...
> 
> Balance at Point-In-Time summaries (say up to the penultimate
> difficulty adjustment) would be one simple way.
> And make new-adopters get up and running in minutes not days, which can
> only be a good thing.

There's no reason to require the full blockchain download before being up and 
running. Bitcoin-Qt 0.9 will (probably) have Pieter's work in this area to be 
usable very quickly, and download/verify the history in the background 
(there's no way to be completely trust-free without this).

> If going that route, then solutions to the 'consolidate addresses/wallets'
> question and formal 'discard' of addresses could get addressed.

Not sure what you mean here. Addresses and wallets are two completely 
different things. Addresses are single-use destinations that point to a wallet 
(which is itself private and unknown to the network).

Luke



From rob.golding at astutium.com  Sun Sep  8 03:56:17 2013
From: rob.golding at astutium.com (rob.golding at astutium.com)
Date: Sun, 08 Sep 2013 04:56:17 +0100
Subject: [Bitcoin-development] Blockchain archival
In-Reply-To: <201309072333.53026.luke@dashjr.org>
References: <CAE0e52XQSMJj9pDb3OEMyAYkChi7=Y9=phKMm34zh1NQFSdcLw@mail.gmail.com>
	<eb196950d9bf667a3b149a74c0d99ab0@astutium.com>
	<201309072333.53026.luke@dashjr.org>
Message-ID: <4016ea53a3a78392e6070979a97bb429@astutium.com>

> (there's no way to be completely trust-free without this).

Not quite true, as I said balance-at-point-in-time would solve that 
(and make the storage requirements much lower)

>> If going that route, then solutions to the 'consolidate 
>> addresses/wallets'
>> question and formal 'discard' of addresses could get addressed.
> 
> Not sure what you mean here. Addresses and wallets are two completely
> different things. Addresses are single-use destinations that point to 
> a wallet
> (which is itself private and unknown to the network).

For bitcoin to grow beyond interesting experiment into global everyday 
use a number of things would have to happen, not least of which is 
taking 'average punter' into account. Whilst new ideas can filter into 
the general consciousness over time,sometimes concepts have to go with 
'what already works' :)

People's concept of money hasn't really changed in over 1,000 years - 
it remains 'something of known value i can exchange for something else'.

No-one outside of bitcoin dev's and early adopters really gets the 
one-shot concept of addresses - possibly rightly so - keeping issues of 
it lowering levels of anonymity etc out of the discussion - it doesn't 
fit with the mindset people have - it's difficult enough getting 
merchants to setup separate addresses for each client, one per 
transaction is simply a waste (of addresses, storage, blockchain size, 
numnber of inputs|outputs when spending etc)

I'm sure the wife would love a new handbag everytime she gets some 
money, but the real-world just isnt like that ;)

Addresses are perceived as the equivalent of a jar you stick your coins 
in. You can have lots of jars. Each jar can be for a specific reason or 
whatever, but the analogy is there.

Wallets are like a box you keep some of your jars in. With the added 
interesting concept that a jar can be in multiple boxes at the same 
time. Only the person with the right 'key' can open the jar and take the 
contents.

However unlike the 3 money boxes I have behind me right now - which i 
can take 1 single penny out of one and put it into another - if I want 
to move bitcoins from one addresses (jar) to another *of my own* I have 
to pay a fee. Worse still if the jar doesnt have much in it I'm denied 
that ability.

End user will neither understand why or want to pay the fee, for 
dealing with their own coins.
If a jar breaks I can just tip the contents into a new one - unless I'm 
very careless, the amount in the new one = the amount in the old one - 
people will want/need it to work like that.

Similarly if you do have all these addresses around, you may want (as 
good housekeeping) discard some of them (after moving the cash).

So having the ability to specify address to send from is essential (and 
a sadly missing feature of the QT client)

'intra-wallet' transfers with an 'also discard the sending address' 
would be a way of (once confirmed) stopping any further use of that 
address (denied any further transactions by miners ?) and when 
balance-at-point-in-time is implemented, a way of shrinking the storage 
for all other bitcoin users (who chosse not to have a full transaction 
set).


If i send luke 10, and luke sends me back 3, i have 3, luke has 7.
If luke sends me 2, and i send luke 1, i have 4 and luke has 6.
To verify my ability to send jeff 4, all that is needed is to know that 
I have 4, not all the transactions that led to that state - thats how 
its done now, thats not necessarily efficient as bitcoin grows

If luke sends me 4 more, i now have 4 again, luke has 3
If i send 1 to each of the children, they have 1 each (*4)

Having a 'family' wallet means when on holiday they can have that 
rental of quad-bikes - to send the rental company 4 the client only 
needs to know that those addresses now have 1 each in them, not all the 
previous transactions - if they didnt exist at the point-in-time 
balance, then yes, it would need to know about the luke>rob>kids 
transactions, but thats all

I moved to a new netbook recently - it took 140 *hours* to d/load and 
process the blockchain (yes the wifi was that bad), I heard from one of 
our clients that (although they only had the client running during 
working hours) that to their desktop it was over 9 days before it had 
caught up.

If all I was d/loading were the transactions since the last difficulty 
change (as one example of a fixed point), and the remaining balance on 
any not-discarded address as at that point it would have been much much 
quicker, and not be shagging my shiny new hard drive.

There's more but it's 4.45 in the morning, and I cant think coherently 
until after a few hours kip and some good coffee :)

Rob



From jgarzik at bitpay.com  Sun Sep  8 04:13:48 2013
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Sun, 8 Sep 2013 00:13:48 -0400
Subject: [Bitcoin-development] Blockchain archival
In-Reply-To: <4016ea53a3a78392e6070979a97bb429@astutium.com>
References: <CAE0e52XQSMJj9pDb3OEMyAYkChi7=Y9=phKMm34zh1NQFSdcLw@mail.gmail.com>
	<eb196950d9bf667a3b149a74c0d99ab0@astutium.com>
	<201309072333.53026.luke@dashjr.org>
	<4016ea53a3a78392e6070979a97bb429@astutium.com>
Message-ID: <CAJHLa0N1A8fH+pbZSKFjtLcLHhJOwcEZVZ4cKGPjh5P46zP26Q@mail.gmail.com>

This is all FAQ territory, and has been covered on the forums for years.

Balance-at-point-in-time is not completely trust-free, as it is a
dataset that must be bootstrapped into trust by... an earlier dataset.
 Continue this logic and you have a... chain.

There is plenty of on-going discussion on UTXO snapshotting -- UTXO
lockin for each block, or something.  This is /somewhat/ like
balance-at-point-in-time, but no one pretends it is trust-free.

The /only/ way to have a completely trust-free solution is to be able
to verify all data from genesis through $now. However, it is not
necessary for all bitcoin wallets to download and verify all those
gigabytes of data; that is what SPV mode is for.

      Jeff



On Sat, Sep 7, 2013 at 11:56 PM,  <rob.golding at astutium.com> wrote:
>> (there's no way to be completely trust-free without this).
>
> Not quite true, as I said balance-at-point-in-time would solve that
> (and make the storage requirements much lower)
>
>>> If going that route, then solutions to the 'consolidate
>>> addresses/wallets'
>>> question and formal 'discard' of addresses could get addressed.
>>
>> Not sure what you mean here. Addresses and wallets are two completely
>> different things. Addresses are single-use destinations that point to
>> a wallet
>> (which is itself private and unknown to the network).
>
> For bitcoin to grow beyond interesting experiment into global everyday
> use a number of things would have to happen, not least of which is
> taking 'average punter' into account. Whilst new ideas can filter into
> the general consciousness over time,sometimes concepts have to go with
> 'what already works' :)
>
> People's concept of money hasn't really changed in over 1,000 years -
> it remains 'something of known value i can exchange for something else'.
>
> No-one outside of bitcoin dev's and early adopters really gets the
> one-shot concept of addresses - possibly rightly so - keeping issues of
> it lowering levels of anonymity etc out of the discussion - it doesn't
> fit with the mindset people have - it's difficult enough getting
> merchants to setup separate addresses for each client, one per
> transaction is simply a waste (of addresses, storage, blockchain size,
> numnber of inputs|outputs when spending etc)
>
> I'm sure the wife would love a new handbag everytime she gets some
> money, but the real-world just isnt like that ;)
>
> Addresses are perceived as the equivalent of a jar you stick your coins
> in. You can have lots of jars. Each jar can be for a specific reason or
> whatever, but the analogy is there.
>
> Wallets are like a box you keep some of your jars in. With the added
> interesting concept that a jar can be in multiple boxes at the same
> time. Only the person with the right 'key' can open the jar and take the
> contents.
>
> However unlike the 3 money boxes I have behind me right now - which i
> can take 1 single penny out of one and put it into another - if I want
> to move bitcoins from one addresses (jar) to another *of my own* I have
> to pay a fee. Worse still if the jar doesnt have much in it I'm denied
> that ability.
>
> End user will neither understand why or want to pay the fee, for
> dealing with their own coins.
> If a jar breaks I can just tip the contents into a new one - unless I'm
> very careless, the amount in the new one = the amount in the old one -
> people will want/need it to work like that.
>
> Similarly if you do have all these addresses around, you may want (as
> good housekeeping) discard some of them (after moving the cash).
>
> So having the ability to specify address to send from is essential (and
> a sadly missing feature of the QT client)
>
> 'intra-wallet' transfers with an 'also discard the sending address'
> would be a way of (once confirmed) stopping any further use of that
> address (denied any further transactions by miners ?) and when
> balance-at-point-in-time is implemented, a way of shrinking the storage
> for all other bitcoin users (who chosse not to have a full transaction
> set).
>
>
> If i send luke 10, and luke sends me back 3, i have 3, luke has 7.
> If luke sends me 2, and i send luke 1, i have 4 and luke has 6.
> To verify my ability to send jeff 4, all that is needed is to know that
> I have 4, not all the transactions that led to that state - thats how
> its done now, thats not necessarily efficient as bitcoin grows
>
> If luke sends me 4 more, i now have 4 again, luke has 3
> If i send 1 to each of the children, they have 1 each (*4)
>
> Having a 'family' wallet means when on holiday they can have that
> rental of quad-bikes - to send the rental company 4 the client only
> needs to know that those addresses now have 1 each in them, not all the
> previous transactions - if they didnt exist at the point-in-time
> balance, then yes, it would need to know about the luke>rob>kids
> transactions, but thats all
>
> I moved to a new netbook recently - it took 140 *hours* to d/load and
> process the blockchain (yes the wifi was that bad), I heard from one of
> our clients that (although they only had the client running during
> working hours) that to their desktop it was over 9 days before it had
> caught up.
>
> If all I was d/loading were the transactions since the last difficulty
> change (as one example of a fixed point), and the remaining balance on
> any not-discarded address as at that point it would have been much much
> quicker, and not be shagging my shiny new hard drive.
>
> There's more but it's 4.45 in the morning, and I cant think coherently
> until after a few hours kip and some good coffee :)
>
> Rob
>
> ------------------------------------------------------------------------------
> Learn the latest--Visual Studio 2012, SharePoint 2013, SQL 2012, more!
> Discover the easy way to master current and previous Microsoft technologies
> and advance your career. Get an incredible 1,500+ hours of step-by-step
> tutorial videos with LearnDevNow. Subscribe today and save!
> http://pubads.g.doubleclick.net/gampad/clk?id=58041391&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



-- 
Jeff Garzik
Senior Software Engineer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From w at grabhive.com  Mon Sep  9 07:26:35 2013
From: w at grabhive.com (Wendell)
Date: Mon, 9 Sep 2013 09:26:35 +0200
Subject: [Bitcoin-development] Simple contacts exchange (was: Social
	network integration (brainstorm))
In-Reply-To: <CANEZrP1k9xsOESVL6yD+MvaO53Z9Fj_MifnquKi+2fcfk0uP4A@mail.gmail.com>
References: <9179D240-EE7E-41A4-AA59-7C96246D8CFB@grabhive.com>
	<CANEZrP1k9xsOESVL6yD+MvaO53Z9Fj_MifnquKi+2fcfk0uP4A@mail.gmail.com>
Message-ID: <8641358D-7484-42AF-9449-C226EF4FB6B4@grabhive.com>

OK, I was under the impression that this was mostly developed for merchants. I've seen some discussion here that seemed to suggest it requiring some non-trivial (for an end user) steps like getting a CA-signed certificate.

-wendell

grabhive.com | twitter.com/grabhive | gpg: 6C0C9411

On Sep 7, 2013, at 11:44 PM, Mike Hearn wrote:

> This is the sort of thing the payment protocol is for. The recipient would vend a PaymentRequest containing identity details. The sender would submit a Payment containing his/hers. The wallet then understands what to do.




From gmaxwell at gmail.com  Mon Sep  9 08:53:01 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 9 Sep 2013 01:53:01 -0700
Subject: [Bitcoin-development] Some current turbulence on the Bitcoin
 network: DB corruption errors on start from Bitcoin-qt / Bitcoind
Message-ID: <CAAS2fgRrgrfmjSKMkDWcqnRNfS_S2pZaCECb7OiaGr3B+kMqww@mail.gmail.com>

Please return your seats and fasten your seat-belts.

All Bitcoin-qt / Bitcoind nodes will currently fail to come back up
after a restart, reporting

": *** coin database inconsistencies found"
and
"Do you want to rebuild the block database now?"

Reindexing _will not_ correct the problem.  In Bitcoin-qt you should
say no to this reindex prompt as it will not help for this problem and
will only waste your time.

To workaround:

Please specify the command-line or configuration file argument
-checklevel=2  to Bitcoind or Bitcoin-qt.

The issue appears to have been introduced by 0.8.0 and is only a local
issue, beyond the annoyance restarting nodes it appears to be harmless
and carries no forking risk but will take a software update to fix
completely.

This problem will persist until no more than 288 blocks after 256818,
unless another trigger transaction is added to the blockchain (which
may well happen).

More information will be forthcoming once a patch is available.



From gmaxwell at gmail.com  Mon Sep  9 09:25:09 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 9 Sep 2013 02:25:09 -0700
Subject: [Bitcoin-development] Some current turbulence on the Bitcoin
 network: DB corruption errors on start from Bitcoin-qt / Bitcoind
In-Reply-To: <CAAS2fgRrgrfmjSKMkDWcqnRNfS_S2pZaCECb7OiaGr3B+kMqww@mail.gmail.com>
References: <CAAS2fgRrgrfmjSKMkDWcqnRNfS_S2pZaCECb7OiaGr3B+kMqww@mail.gmail.com>
Message-ID: <CAAS2fgT8_tp_4aGG_4jRAjO3ROCh9JNz1dHMfCi0qstEG8K7wA@mail.gmail.com>

On Mon, Sep 9, 2013 at 1:53 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> More information will be forthcoming once a patch is available.

I now have a patch up for review.

https://github.com/bitcoin/bitcoin/pull/2982


(You should wait until other developers have had a chance to review
before rushing out and applying it. The checklevel=2 workaround is
adequate for now.)



From mike at plan99.net  Mon Sep  9 11:43:40 2013
From: mike at plan99.net (Mike Hearn)
Date: Mon, 9 Sep 2013 13:43:40 +0200
Subject: [Bitcoin-development] Simple contacts exchange (was: Social
 network integration (brainstorm))
In-Reply-To: <8641358D-7484-42AF-9449-C226EF4FB6B4@grabhive.com>
References: <9179D240-EE7E-41A4-AA59-7C96246D8CFB@grabhive.com>
	<CANEZrP1k9xsOESVL6yD+MvaO53Z9Fj_MifnquKi+2fcfk0uP4A@mail.gmail.com>
	<8641358D-7484-42AF-9449-C226EF4FB6B4@grabhive.com>
Message-ID: <CANEZrP1oJsxcg=N2M_a8VW69=was7VM8cFGVpKeWx0x-eqFuLw@mail.gmail.com>

The current version requires a signed cert yes. Whether that's difficult or
not depends on the policies of the cert authorities. Ultimately all they
have to do is verify an email address by sending it a clickable link, which
is why StartSSL do it for free. Probably they aren't optimised for
usability, but there's no technical reason why one couldn't be. It's a
competitive market, after all.

There's also the option of extending the payment protocol to support other
forms of PKI. But from a technical perspective the X.509 PKI is fine.
Someone can always set up their own CA for the Bitcoin community and
convince wallet developers to include their root cert, after all.


On Mon, Sep 9, 2013 at 9:26 AM, Wendell <w at grabhive.com> wrote:

> OK, I was under the impression that this was mostly developed for
> merchants. I've seen some discussion here that seemed to suggest it
> requiring some non-trivial (for an end user) steps like getting a CA-signed
> certificate.
>
> -wendell
>
> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411
>
> On Sep 7, 2013, at 11:44 PM, Mike Hearn wrote:
>
> > This is the sort of thing the payment protocol is for. The recipient
> would vend a PaymentRequest containing identity details. The sender would
> submit a Payment containing his/hers. The wallet then understands what to
> do.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130909/5ac9a201/attachment.html>

From gmaxwell at gmail.com  Mon Sep  9 23:25:50 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 9 Sep 2013 16:25:50 -0700
Subject: [Bitcoin-development] Some current turbulence on the Bitcoin
 network: DB corruption errors on start from Bitcoin-qt / Bitcoind
In-Reply-To: <CAAS2fgT8_tp_4aGG_4jRAjO3ROCh9JNz1dHMfCi0qstEG8K7wA@mail.gmail.com>
References: <CAAS2fgRrgrfmjSKMkDWcqnRNfS_S2pZaCECb7OiaGr3B+kMqww@mail.gmail.com>
	<CAAS2fgT8_tp_4aGG_4jRAjO3ROCh9JNz1dHMfCi0qstEG8K7wA@mail.gmail.com>
Message-ID: <CAAS2fgRSXdLX=b_DCG42r63xuk-5CqOTr=a8kWG48MJMAy2ioQ@mail.gmail.com>

There is a good writeup of how to perform the workaround in Windows at
https://bitcointalk.org/index.php?topic=290922.msg3117923#msg3117923



From slush at centrum.cz  Tue Sep 10 16:52:26 2013
From: slush at centrum.cz (slush)
Date: Tue, 10 Sep 2013 18:52:26 +0200
Subject: [Bitcoin-development] Python implementation of RFC 6979
Message-ID: <CAJna-HiZb3BOm0emdiw6QU1sMVV3GXt33fPBJ73S2MRgQtbs+w@mail.gmail.com>

Hi all,

yesterday I found some time and implemented RFC 6979 into python-ecdsa
module.

RFC 6979 proposes algorithm of calculating 'k' value for signature from
private key and signed data, so the 'k' is unique, but deterministic for
every signature. This enabled simple unit tests of code using ECDSA
signatures as well as some nice use cases for blackbox testing of 3rd party
software (you can calculate on your own if some software is making valid
signature, because there's no randomnes involved in the process). Yes, I'm
referring Trezor :-).

There's my fork of python-ecdsa with RFC 6979:
https://github.com/trezor/python-ecdsa/

There's pull request waiting for python-ecdsa author aproval:
https://github.com/warner/python-ecdsa/pull/10

Aaand there's RFC 6979: tools.ietf.org/html/rfc6979

Thanks,
slush
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130910/ba1dc472/attachment.html>

From slush at centrum.cz  Tue Sep 10 16:44:25 2013
From: slush at centrum.cz (slush)
Date: Tue, 10 Sep 2013 18:44:25 +0200
Subject: [Bitcoin-development] BIP0039 Mnemonic code for generating
	deterministic keys
Message-ID: <CAJna-HgXPNa2UCO_edBzK=oY5-F=6LQVHap1Vk9XtGr09chy9Q@mail.gmail.com>

Hi all,

we just finalized the draft and reference implementation of BIP39. Regards
to rules in BIP0001 we're asking for comments.

The aim of the proposal is to standardize algorithm across various clients
and fix some design problems of existing (but not yet standardized)
Electrum mnemonic algorithm.

BIP39 is a nice complement to BIP32, which allow users to (paper) backup
and share their wallet accross multiple clients easily.

Link to BIP: https://en.bitcoin.it/wiki/BIP_0039

Thanks for your time,
slush
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130910/98b6c6cc/attachment.html>

From andreas at rooteleven.com  Tue Sep 10 17:36:02 2013
From: andreas at rooteleven.com (Andreas M. Antonopoulos)
Date: Tue, 10 Sep 2013 10:36:02 -0700
Subject: [Bitcoin-development] BIP0039 Mnemonic code for generating
 deterministic keys
In-Reply-To: <CAJna-HgXPNa2UCO_edBzK=oY5-F=6LQVHap1Vk9XtGr09chy9Q@mail.gmail.com>
References: <CAJna-HgXPNa2UCO_edBzK=oY5-F=6LQVHap1Vk9XtGr09chy9Q@mail.gmail.com>
Message-ID: <CAFmyj8xrazwKCGCeQ=OZcJx5HUU9Ay_-Z9xUthgrojqgiy+ung@mail.gmail.com>

Excellent!


On Tue, Sep 10, 2013 at 9:44 AM, slush <slush at centrum.cz> wrote:

> Hi all,
>
> we just finalized the draft and reference implementation of BIP39. Regards
> to rules in BIP0001 we're asking for comments.
>
> The aim of the proposal is to standardize algorithm across various clients
> and fix some design problems of existing (but not yet standardized)
> Electrum mnemonic algorithm.
>
> BIP39 is a nice complement to BIP32, which allow users to (paper) backup
> and share their wallet accross multiple clients easily.
>
> Link to BIP: https://en.bitcoin.it/wiki/BIP_0039
>
> Thanks for your time,
> slush
>
>
> ------------------------------------------------------------------------------
> How ServiceNow helps IT people transform IT departments:
> 1. Consolidate legacy IT systems to a single system of record for IT
> 2. Standardize and globalize service processes across IT
> 3. Implement zero-touch automation to replace manual, redundant tasks
> http://pubads.g.doubleclick.net/gampad/clk?id=51271111&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130910/c2704441/attachment.html>

From matthewmitchell at godofgod.co.uk  Tue Sep 10 20:40:40 2013
From: matthewmitchell at godofgod.co.uk (Matthew Mitchell)
Date: Tue, 10 Sep 2013 21:40:40 +0100
Subject: [Bitcoin-development] BIP0039 Mnemonic code for generating
	deterministic keys
In-Reply-To: <CAJna-HgXPNa2UCO_edBzK=oY5-F=6LQVHap1Vk9XtGr09chy9Q@mail.gmail.com>
References: <CAJna-HgXPNa2UCO_edBzK=oY5-F=6LQVHap1Vk9XtGr09chy9Q@mail.gmail.com>
Message-ID: <796AC330-56EF-43D2-9935-5409824A4F33@godofgod.co.uk>

I like this, though maybe sometimes you'll get rude word combinations come out. 

Matthew

On 10 Sep 2013, at 17:44, slush <slush at centrum.cz> wrote:

> Hi all,
> 
> we just finalized the draft and reference implementation of BIP39. Regards to rules in BIP0001 we're asking for comments.
> 
> The aim of the proposal is to standardize algorithm across various clients and fix some design problems of existing (but not yet standardized) Electrum mnemonic algorithm.
> 
> BIP39 is a nice complement to BIP32, which allow users to (paper) backup and share their wallet accross multiple clients easily.
> 
> Link to BIP: https://en.bitcoin.it/wiki/BIP_0039
> 
> Thanks for your time,
> slush
> ------------------------------------------------------------------------------
> How ServiceNow helps IT people transform IT departments:
> 1. Consolidate legacy IT systems to a single system of record for IT
> 2. Standardize and globalize service processes across IT
> 3. Implement zero-touch automation to replace manual, redundant tasks
> http://pubads.g.doubleclick.net/gampad/clk?id=51271111&iu=/4140/ostg.clktrk_______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130910/65e42e3e/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 496 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130910/65e42e3e/attachment.sig>

From slush at centrum.cz  Tue Sep 10 20:50:58 2013
From: slush at centrum.cz (slush)
Date: Tue, 10 Sep 2013 22:50:58 +0200
Subject: [Bitcoin-development] BIP0039 Mnemonic code for generating
 deterministic keys
In-Reply-To: <796AC330-56EF-43D2-9935-5409824A4F33@godofgod.co.uk>
References: <CAJna-HgXPNa2UCO_edBzK=oY5-F=6LQVHap1Vk9XtGr09chy9Q@mail.gmail.com>
	<796AC330-56EF-43D2-9935-5409824A4F33@godofgod.co.uk>
Message-ID: <CAJna-HhKDx4xnwWCC7apTLCDwEurFbagNTYXF=doBbhDBaXojA@mail.gmail.com>

In many iterations of editing the wordlist we made our best to pick
words which are easy to remember, still "neutral". Unfortunately it's
almost impossible to exclude some words which may together create
negative co-notations.

Thankfully we removed all racist and religious words so I believe all
three authors mentioned in the BIP are safe against fundamentalist
bitcoin users :-).

slush

On 9/10/13, Matthew Mitchell <matthewmitchell at godofgod.co.uk> wrote:
> I like this, though maybe sometimes you'll get rude word combinations come
> out.
>
> Matthew



From matthewmitchell at godofgod.co.uk  Tue Sep 10 21:03:39 2013
From: matthewmitchell at godofgod.co.uk (Matthew Mitchell)
Date: Tue, 10 Sep 2013 22:03:39 +0100
Subject: [Bitcoin-development] BIP0039 Mnemonic code for generating
	deterministic keys
In-Reply-To: <CAJna-HhKDx4xnwWCC7apTLCDwEurFbagNTYXF=doBbhDBaXojA@mail.gmail.com>
References: <CAJna-HgXPNa2UCO_edBzK=oY5-F=6LQVHap1Vk9XtGr09chy9Q@mail.gmail.com>
	<796AC330-56EF-43D2-9935-5409824A4F33@godofgod.co.uk>
	<CAJna-HhKDx4xnwWCC7apTLCDwEurFbagNTYXF=doBbhDBaXojA@mail.gmail.com>
Message-ID: <0F445FFE-FA1A-4A64-9A28-C734E744B5F7@godofgod.co.uk>

Well let's hope something like "murder black people", "stupid asian person" or "whip african slave" doesn't come up. :-) Maybe it would have been better without the aggressive words?

Matthew

On 10 Sep 2013, at 21:50, slush <slush at centrum.cz> wrote:

> In many iterations of editing the wordlist we made our best to pick
> words which are easy to remember, still "neutral". Unfortunately it's
> almost impossible to exclude some words which may together create
> negative co-notations.
> 
> Thankfully we removed all racist and religious words so I believe all
> three authors mentioned in the BIP are safe against fundamentalist
> bitcoin users :-).
> 
> slush
> 
> On 9/10/13, Matthew Mitchell <matthewmitchell at godofgod.co.uk> wrote:
>> I like this, though maybe sometimes you'll get rude word combinations come
>> out.
>> 
>> Matthew

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 496 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130910/c70bd147/attachment.sig>

From stick at gk2.sk  Tue Sep 10 21:34:01 2013
From: stick at gk2.sk (Pavol Rusnak)
Date: Tue, 10 Sep 2013 23:34:01 +0200
Subject: [Bitcoin-development] BIP0039 Mnemonic code for generating
 deterministic keys
In-Reply-To: <0F445FFE-FA1A-4A64-9A28-C734E744B5F7@godofgod.co.uk>
References: <CAJna-HgXPNa2UCO_edBzK=oY5-F=6LQVHap1Vk9XtGr09chy9Q@mail.gmail.com>
	<796AC330-56EF-43D2-9935-5409824A4F33@godofgod.co.uk>
	<CAJna-HhKDx4xnwWCC7apTLCDwEurFbagNTYXF=doBbhDBaXojA@mail.gmail.com>
	<0F445FFE-FA1A-4A64-9A28-C734E744B5F7@godofgod.co.uk>
Message-ID: <522F9049.3020703@gk2.sk>

On 10/09/13 23:03, Matthew Mitchell wrote:
> Maybe it would have been better without the aggressive words?

Feel free to come up with wordlist enhancements. That's why we put
this BIP for discussion in the first place. Three people went through
the wordlist numerous number of times and as you can see it's still
not perfect.

Please bear in mind that for every word you remove from the list, you
have to come up with a good alternative that is unique and hard to
confuse with the others.

-- 
Best Regards / S pozdravom,

Pavol Rusnak <stick at gk2.sk>



From gmaxwell at gmail.com  Tue Sep 10 22:08:18 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 10 Sep 2013 15:08:18 -0700
Subject: [Bitcoin-development] BIP0039 Mnemonic code for generating
 deterministic keys
In-Reply-To: <0F445FFE-FA1A-4A64-9A28-C734E744B5F7@godofgod.co.uk>
References: <CAJna-HgXPNa2UCO_edBzK=oY5-F=6LQVHap1Vk9XtGr09chy9Q@mail.gmail.com>
	<796AC330-56EF-43D2-9935-5409824A4F33@godofgod.co.uk>
	<CAJna-HhKDx4xnwWCC7apTLCDwEurFbagNTYXF=doBbhDBaXojA@mail.gmail.com>
	<0F445FFE-FA1A-4A64-9A28-C734E744B5F7@godofgod.co.uk>
Message-ID: <CAAS2fgRtmjhDbyPinVKFcba=2DCDovNPmRO1rCajrZEFWd4ONQ@mail.gmail.com>

On Tue, Sep 10, 2013 at 2:03 PM, Matthew Mitchell
<matthewmitchell at godofgod.co.uk> wrote:
> Well let's hope something like "murder black people", "stupid asian person" or "whip african slave" doesn't come up. :-) Maybe it would have been better without the aggressive words?

Ouch.

This sounds like something that $20 of mechanical turk time could help
out with a lot.  Put up the 2048 words and ask people to rate them for
potential offensiveness and threatening. :)

Nouns often make for fairly neutral words, though careful for place
names which have had political complications. E.g. gdansk vs danzig.



From mark at monetize.io  Tue Sep 10 22:35:53 2013
From: mark at monetize.io (Mark Friedenbach)
Date: Tue, 10 Sep 2013 15:35:53 -0700
Subject: [Bitcoin-development] BIP0039 Mnemonic code for generating
 deterministic keys
In-Reply-To: <CAAS2fgRtmjhDbyPinVKFcba=2DCDovNPmRO1rCajrZEFWd4ONQ@mail.gmail.com>
References: <CAJna-HgXPNa2UCO_edBzK=oY5-F=6LQVHap1Vk9XtGr09chy9Q@mail.gmail.com>
	<796AC330-56EF-43D2-9935-5409824A4F33@godofgod.co.uk>
	<CAJna-HhKDx4xnwWCC7apTLCDwEurFbagNTYXF=doBbhDBaXojA@mail.gmail.com>
	<0F445FFE-FA1A-4A64-9A28-C734E744B5F7@godofgod.co.uk>
	<CAAS2fgRtmjhDbyPinVKFcba=2DCDovNPmRO1rCajrZEFWd4ONQ@mail.gmail.com>
Message-ID: <522F9EC9.7020008@monetize.io>

Getting OT...

For a while I've wanted to combine one of these mnemonic code generators
with an NLP engine to do something like output a short story as the
passphrase, even a humorous onem with the key encoded in the story
itself (remember the gist of the story and that's sufficient to
reconstruct the key).

Also, obligatory link about the failures of unsanitized word lists:

http://iam.peteashton.com/keep-calm-rape-tshirt-amazon/

It can really backfire to get one of these things wrong.
Mark

On 9/10/13 3:08 PM, Gregory Maxwell wrote:
> On Tue, Sep 10, 2013 at 2:03 PM, Matthew Mitchell
> <matthewmitchell at godofgod.co.uk> wrote:
>> Well let's hope something like "murder black people", "stupid asian person" or "whip african slave" doesn't come up. :-) Maybe it would have been better without the aggressive words?
> 
> Ouch.
> 
> This sounds like something that $20 of mechanical turk time could help
> out with a lot.  Put up the 2048 words and ask people to rate them for
> potential offensiveness and threatening. :)
> 
> Nouns often make for fairly neutral words, though careful for place
> names which have had political complications. E.g. gdansk vs danzig.



From gmaxwell at gmail.com  Tue Sep 10 22:43:55 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 10 Sep 2013 15:43:55 -0700
Subject: [Bitcoin-development] BIP0039 Mnemonic code for generating
 deterministic keys
In-Reply-To: <522F9EC9.7020008@monetize.io>
References: <CAJna-HgXPNa2UCO_edBzK=oY5-F=6LQVHap1Vk9XtGr09chy9Q@mail.gmail.com>
	<796AC330-56EF-43D2-9935-5409824A4F33@godofgod.co.uk>
	<CAJna-HhKDx4xnwWCC7apTLCDwEurFbagNTYXF=doBbhDBaXojA@mail.gmail.com>
	<0F445FFE-FA1A-4A64-9A28-C734E744B5F7@godofgod.co.uk>
	<CAAS2fgRtmjhDbyPinVKFcba=2DCDovNPmRO1rCajrZEFWd4ONQ@mail.gmail.com>
	<522F9EC9.7020008@monetize.io>
Message-ID: <CAAS2fgSc=k-vKk=1xfCeohtTspmjqx9VT3C6nu_OqKVtecbyJg@mail.gmail.com>

On Tue, Sep 10, 2013 at 3:35 PM, Mark Friedenbach <mark at monetize.io> wrote:
> It can really backfire to get one of these things wrong.

On the subject of unexpected results, for the longest time wikipedia
had problems with images randomly not displaying for some users.

Images were stored by their cryptographic hash. If the hash was
deadbeef the URL would be:

/d/de/deadbeef.jpg

Turns out that a lot of people are running addons that block /a/ad/  ...

Not running afoul of various censorware filters should be a design
target too, as insane as it seems. Simply because "The key is
'Tienanmen Square people monkey'"  "People monkey isn't working!" is a
hard situation to trouble shoot!



From slush at centrum.cz  Tue Sep 10 22:47:51 2013
From: slush at centrum.cz (slush)
Date: Wed, 11 Sep 2013 00:47:51 +0200
Subject: [Bitcoin-development] BIP0039 Mnemonic code for generating
 deterministic keys
In-Reply-To: <CAAS2fgRtmjhDbyPinVKFcba=2DCDovNPmRO1rCajrZEFWd4ONQ@mail.gmail.com>
References: <CAJna-HgXPNa2UCO_edBzK=oY5-F=6LQVHap1Vk9XtGr09chy9Q@mail.gmail.com>
	<796AC330-56EF-43D2-9935-5409824A4F33@godofgod.co.uk>
	<CAJna-HhKDx4xnwWCC7apTLCDwEurFbagNTYXF=doBbhDBaXojA@mail.gmail.com>
	<0F445FFE-FA1A-4A64-9A28-C734E744B5F7@godofgod.co.uk>
	<CAAS2fgRtmjhDbyPinVKFcba=2DCDovNPmRO1rCajrZEFWd4ONQ@mail.gmail.com>
Message-ID: <CAJna-Hi6LLFBdxqsvTkYNFWeu3MVTV2QVWbfCYsai+_szU9=NA@mail.gmail.com>

We're open to changes in the wordlist. We'll accept pull request
replacing potentially offensive words by another more neutral, which
also fits all other requirements.

Putting the wordlist together is really hard job and we spent few
sleepless nights on that. By the way, words "murder, black, people"
are contained also in Electrum wordlist and nobody complained yet :-).

slush

On 9/11/13, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> On Tue, Sep 10, 2013 at 2:03 PM, Matthew Mitchell
> <matthewmitchell at godofgod.co.uk> wrote:
>> Well let's hope something like "murder black people", "stupid asian
>> person" or "whip african slave" doesn't come up. :-) Maybe it would have
>> been better without the aggressive words?
>
> Ouch.
>
> This sounds like something that $20 of mechanical turk time could help
> out with a lot.  Put up the 2048 words and ask people to rate them for
> potential offensiveness and threatening. :)
>
> Nouns often make for fairly neutral words, though careful for place
> names which have had political complications. E.g. gdansk vs danzig.
>



From andreas at petersson.at  Wed Sep 11 12:49:47 2013
From: andreas at petersson.at (Andreas Petersson)
Date: Wed, 11 Sep 2013 14:49:47 +0200
Subject: [Bitcoin-development] BIP0039 Mnemonic code for generating
 deterministic keys
In-Reply-To: <522F9EC9.7020008@monetize.io>
References: <CAJna-HgXPNa2UCO_edBzK=oY5-F=6LQVHap1Vk9XtGr09chy9Q@mail.gmail.com>
	<796AC330-56EF-43D2-9935-5409824A4F33@godofgod.co.uk>
	<CAJna-HhKDx4xnwWCC7apTLCDwEurFbagNTYXF=doBbhDBaXojA@mail.gmail.com>
	<0F445FFE-FA1A-4A64-9A28-C734E744B5F7@godofgod.co.uk>
	<CAAS2fgRtmjhDbyPinVKFcba=2DCDovNPmRO1rCajrZEFWd4ONQ@mail.gmail.com>
	<522F9EC9.7020008@monetize.io>
Message-ID: <523066EB.5070302@petersson.at>

This an excellent idea, because i proposed the same thing previously.

these bip 39 mnemonics are IMO too hard to remember.

using NLP we could generate a gramatically correct sentence out of 128
completely random bits which is possible to remember. information could
be encoded in the selection of words but also in the choice of the
syntax tree.
if i had too much spare time this would be an excellent project.


Am 11.09.2013 00:35, schrieb Mark Friedenbach:
> For a while I've wanted to combine one of these mnemonic code generators
> with an NLP engine to do something like output a short story as the
> passphrase, even a humorous onem with the key encoded in the story
> itself (remember the gist of the story and that's sufficient to
> reconstruct the key).




From stick at gk2.sk  Thu Sep 12 12:11:10 2013
From: stick at gk2.sk (Pavol Rusnak)
Date: Thu, 12 Sep 2013 14:11:10 +0200
Subject: [Bitcoin-development] BIP0039 Mnemonic code for generating
 deterministic keys
In-Reply-To: <0F445FFE-FA1A-4A64-9A28-C734E744B5F7@godofgod.co.uk>
References: <CAJna-HgXPNa2UCO_edBzK=oY5-F=6LQVHap1Vk9XtGr09chy9Q@mail.gmail.com>
	<796AC330-56EF-43D2-9935-5409824A4F33@godofgod.co.uk>
	<CAJna-HhKDx4xnwWCC7apTLCDwEurFbagNTYXF=doBbhDBaXojA@mail.gmail.com>
	<0F445FFE-FA1A-4A64-9A28-C734E744B5F7@godofgod.co.uk>
Message-ID: <5231AF5E.8080903@gk2.sk>

On 10/09/13 23:03, Matthew Mitchell wrote:
> Maybe it would have been better without the aggressive words?

I revisited the wordlist and replaced around 67 words that can be
found offensive in some context.

-- 
Best Regards / S pozdravom,

Pavol Rusnak <stick at gk2.sk>



From stick at gk2.sk  Thu Sep 12 12:09:57 2013
From: stick at gk2.sk (Pavol Rusnak)
Date: Thu, 12 Sep 2013 14:09:57 +0200
Subject: [Bitcoin-development] BIP0039 Mnemonic code for generating
 deterministic keys
In-Reply-To: <523066EB.5070302@petersson.at>
References: <CAJna-HgXPNa2UCO_edBzK=oY5-F=6LQVHap1Vk9XtGr09chy9Q@mail.gmail.com>
	<796AC330-56EF-43D2-9935-5409824A4F33@godofgod.co.uk>
	<CAJna-HhKDx4xnwWCC7apTLCDwEurFbagNTYXF=doBbhDBaXojA@mail.gmail.com>
	<0F445FFE-FA1A-4A64-9A28-C734E744B5F7@godofgod.co.uk>
	<CAAS2fgRtmjhDbyPinVKFcba=2DCDovNPmRO1rCajrZEFWd4ONQ@mail.gmail.com>
	<522F9EC9.7020008@monetize.io> <523066EB.5070302@petersson.at>
Message-ID: <5231AF15.2050809@gk2.sk>

On 11/09/13 14:49, Andreas Petersson wrote:
> using NLP we could generate a gramatically correct sentence out of 128
> completely random bits which is possible to remember. information could
> be encoded in the selection of words but also in the choice of the
> syntax tree.

We were playing with that idea quite a lot. The problem was that we
ended up with much bigger wordlist and thus it had to contain more
obscure words. Also remember that this scheme has to run on embedded
devices as well, so any unnecessary complexity should be avoided.

-- 
Best Regards / S pozdravom,

Pavol Rusnak <stick at gk2.sk>



From matthewmitchell at godofgod.co.uk  Thu Sep 12 16:02:04 2013
From: matthewmitchell at godofgod.co.uk (Matthew Mitchell)
Date: Thu, 12 Sep 2013 17:02:04 +0100
Subject: [Bitcoin-development] BIP0039 Mnemonic code for generating
	deterministic keys
In-Reply-To: <5231AF5E.8080903@gk2.sk>
References: <CAJna-HgXPNa2UCO_edBzK=oY5-F=6LQVHap1Vk9XtGr09chy9Q@mail.gmail.com>
	<796AC330-56EF-43D2-9935-5409824A4F33@godofgod.co.uk>
	<CAJna-HhKDx4xnwWCC7apTLCDwEurFbagNTYXF=doBbhDBaXojA@mail.gmail.com>
	<0F445FFE-FA1A-4A64-9A28-C734E744B5F7@godofgod.co.uk>
	<5231AF5E.8080903@gk2.sk>
Message-ID: <15F27A88-53BF-4149-A8FF-282350312B92@godofgod.co.uk>

I removed some more but I haven't added enough back in. It was taking far longer than expected so I gave up, but maybe someone else can try to add some more:

https://github.com/MatthewLM/python-mnemonic/blob/master/mnemonic/wordlist/english.txt

On 12 Sep 2013, at 13:11, Pavol Rusnak <stick at gk2.sk> wrote:

> On 10/09/13 23:03, Matthew Mitchell wrote:
>> Maybe it would have been better without the aggressive words?
> 
> I revisited the wordlist and replaced around 67 words that can be
> found offensive in some context.
> 
> -- 
> Best Regards / S pozdravom,
> 
> Pavol Rusnak <stick at gk2.sk>
> 
> ------------------------------------------------------------------------------
> How ServiceNow helps IT people transform IT departments:
> 1. Consolidate legacy IT systems to a single system of record for IT
> 2. Standardize and globalize service processes across IT
> 3. Implement zero-touch automation to replace manual, redundant tasks
> http://pubads.g.doubleclick.net/gampad/clk?id=51271111&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 496 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130912/b6da8674/attachment.sig>

From gavinandresen at gmail.com  Fri Sep 13 01:11:43 2013
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Fri, 13 Sep 2013 11:11:43 +1000
Subject: [Bitcoin-development] Bitcoin-Qt / bitcoind version 0.8.5 released
Message-ID: <CABsx9T1P7j1bctqza=jRpUJBhUOWT4weJnOUx+Lw6kD4+o3oSQ@mail.gmail.com>

Bitcoin-Qt version 0.8.5 is now available from:
  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.5/

This is a maintenance release to fix a critical bug;
we urge all users to upgrade.

Please report bugs using the issue tracker at github:
  https://github.com/bitcoin/bitcoin/issues

0.8.5 Release notes
===================

Bugs fixed
----------

Transactions with version numbers larger than 0x7fffffff were
incorrectly being relayed and included in blocks.

Blocks containing transactions with version numbers larger
than 0x7fffffff caused the code that checks for LevelDB database
inconsistencies at startup to erroneously report database
corruption and suggest that you reindex your database.

This release also contains a non-critical fix to the code that
enforces BIP 34 (block height in the coinbase transaction).

--

Thanks to Gregory Maxwell and Pieter Wuille for quickly
identifying and fixing the transaction version number bug.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130913/39a9f36f/attachment.html>

From pete at petertodd.org  Fri Sep 13 06:07:58 2013
From: pete at petertodd.org (Peter Todd)
Date: Fri, 13 Sep 2013 02:07:58 -0400
Subject: [Bitcoin-development] REWARD offered for hash collisions for SHA1,
 SHA256, RIPEMD160 and others
Message-ID: <20130913060758.GC4242@savin>

Rewards at the following P2SH addresses are available for anyone able to
demonstrate collision attacks against a variety of cryptographic
algorithms. You collect your bounty by demonstrating two messages that
are not equal in value, yet result in the same digest when hashed. These
messages are used in a scriptSig, which satisfies the scriptPubKey
storing the bountied funds, allowing you to move them to a scriptPubKey
(Bitcoin address) of your choice.

Further donations to the bounties are welcome, particularly for SHA1 -
address 37k7toV1Nv4DfmQbmZ8KuZDQCYK9x5KpzP - for which an attack on a
single hash value is believed to be possible at an estimated cost of
$2.77M (4)


Details below; note that the "decodescript" RPC command is not yet
released; compile bitcoind from the git repository at
http://github.com/bitcoin/bitcoin

SHA1:

$ btc decodescript 6e879169a77ca787
{
    "asm" : "OP_2DUP OP_EQUAL OP_NOT OP_VERIFY OP_SHA1 OP_SWAP OP_SHA1 OP_EQUAL",
    "type" : "nonstandard",
    "p2sh" : "37k7toV1Nv4DfmQbmZ8KuZDQCYK9x5KpzP"
}


SHA256:

$ btc decodescript 6e879169a87ca887
{
    "asm" : "OP_2DUP OP_EQUAL OP_NOT OP_VERIFY OP_SHA256 OP_SWAP OP_SHA256 OP_EQUAL",
    "type" : "nonstandard",
    "p2sh" : "35Snmmy3uhaer2gTboc81ayCip4m9DT4ko"
}


RIPEMD160:

$ btc decodescript 6e879169a67ca687
{
    "asm" : "OP_2DUP OP_EQUAL OP_NOT OP_VERIFY OP_RIPEMD160 OP_SWAP OP_RIPEMD160 OP_EQUAL",
    "type" : "nonstandard",
    "p2sh" : "3KyiQEGqqdb4nqfhUzGKN6KPhXmQsLNpay"
}


RIPEMD160(SHA256()):

$ btc decodescript 6e879169a97ca987
{
    "asm" : "OP_2DUP OP_EQUAL OP_NOT OP_VERIFY OP_HASH160 OP_SWAP OP_HASH160 OP_EQUAL",
    "type" : "nonstandard",
    "p2sh" : "39VXyuoc6SXYKp9TcAhoiN1mb4ns6z3Yu6"
}


SHA256(SHA256()):

$ btc decodescript 6e879169aa7caa87
{
    "asm" : "OP_2DUP OP_EQUAL OP_NOT OP_VERIFY OP_HASH256 OP_SWAP OP_HASH256 OP_EQUAL",
    "type" : "nonstandard",
    "p2sh" : "3DUQQvz4t57Jy7jxE86kyFcNpKtURNf1VW"
}


and last but not least, the absolute value function:

$ btc decodescript 6e879169907c9087
{
    "asm" : "OP_2DUP OP_EQUAL OP_NOT OP_VERIFY OP_ABS OP_SWAP OP_ABS OP_EQUAL",
    "type" : "nonstandard",
    "p2sh" : "3QsT6Sast6ghfsjZ9VJj9u8jkM2qTfDgHV"
}

For example, this pair of transactions created, and then collected, an
absolute value function bounty:

0100000001f3194f7c2a39809d6ea5fa2db68326932df146aaab7be2f398a524bd269d0b62000000008a473044022039bc13cb7fe565ff2e14b16fbc4a9facd36b25a435d2f49de4534463212aeaee022076413c7591385cd813df37d8104dd8110745c28178cef829b5ab3e56b7c30d22014104d34775baab521d7ba2bd43997312d5f663633484ae1a4d84246866b7088297715a049e2288ae16f168809d36e2da1162f03412bf23aa5f949f235eb2e7141783ffffffff03207e7500000000001976a9149bc0bbdd3024da4d0c38ed1aecf5c68dd1d3fa1288ac0000000000000000126a6e879169907c9087086e879169907c908740420f000000000017a914fe441065b6532231de2fac563152205ec4f59c748700000000

0100000001f18cda90bbbcfb031c65ceda17c82dc046c7db0b96242ba4c5b53c411d8c056e020000000c510181086e879169907c9087ffffffff01a0bb0d00000000001976a9149bc0bbdd3024da4d0c38ed1aecf5c68dd1d3fa1288ac00000000

Specifically with the scriptSig: 1 -1 6e879169907c9087


Notes:

1) We advise mining the block in which you collect your bounty yourself;
   scriptSigs satisfying the above scriptPubKeys do not cryptographically sign
   the transaction's outputs. If the bounty value is sufficiently large
   other miners may find it profitable to reorganize the chain to kill
   your block and collect the reward themselves. This is particularly
   profitable for larger, centralized, mining pools.

2) Note that the value of your SHA256, RIPEMD160, RIPEMD160(SHA256()) or
   SHA256^2 bounty may be diminished by the act of collecting it.

3) Due to limitations of the Bitcoin scripting language bounties can
   only be collected with solutions using messages less than 521 bytes
   in size.

4) "When Will We See Collisions for SHA-1?" - Bruce Schneier
   https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130913/922d9e33/attachment.sig>

From mike at plan99.net  Fri Sep 13 16:21:19 2013
From: mike at plan99.net (Mike Hearn)
Date: Fri, 13 Sep 2013 18:21:19 +0200
Subject: [Bitcoin-development] Bluetooth on Android
Message-ID: <CANEZrP1xWjxcjNYAXKUvsCLgZ8z5CiLkox=aRPDHCJ+Bvn+mHA@mail.gmail.com>

Just a heads up,

Over a year ago Andreas and I prototyped bluetooth tx submission on Android
at a hackfest in Berlin, and it will be with support on-by-default for the
sending side soon. That means, anyone can enable the feature in the
settings page and start receiving payments via Bluetooth as long as both
sides use the Bitcoin Wallet app.

The protocol used is a set of proprietary things. Once the payment protocol
is implemented in bitcoinj, I guess we will recast the bluetooth support to
use that and then submit a BIP for it, but right now it wouldn't make sense
to do so as we know the current protocol has a limited lifespan.

Send via bluetooth resolves one of the most common UX fails we see here in
Europe: people travel to conferences or events and then want to spend their
Bitcoins whilst they're abroad, but they can't reasonably do so because
data roaming is so expensive.  By allowing the receiver i.e. merchant to
receive the tx via Bluetooth, this problem is avoided - often the receiver
is local and will be able to broadcast the transaction on your behalf.

Briefly, we use an unauthenticated RFCOMM socket with the adapter MAC
address in a new btcmac parameter in the bitcoin: URI qrcode. No pairing is
required. MITM attacks on the connection are possible, but all that's done
with it is writing raw tx bytes out over the connection so MITM is limited
to DoS.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130913/60254eb1/attachment.html>

From turkeybreast at yahoo.com  Sat Sep 14 00:51:11 2013
From: turkeybreast at yahoo.com (Turkey Breast)
Date: Fri, 13 Sep 2013 17:51:11 -0700 (PDT)
Subject: [Bitcoin-development] New Output Script Type
Message-ID: <1379119871.76503.YahooMailNeo@web162705.mail.bf1.yahoo.com>

http://www.proofofexistence.com/

and

https://github.com/spesmilo/sx/blob/master/src/sx-embed-addr

Embedding data in the blockchain as a hash is out there and a reality.

I suggest that there should be a new payment type that is unspendable to support this.
Like you have pubkey_hash, pubkey, script_hash, ..., "embed_hash"


Maybe just a script with a single 20 byte push data.

Advantages:

* Optimisation possibilities (you know this can't be spent, and the script can't be processed).
* Avoid indexing in an address database Bitcoin addresses which are currently being
used to index data. They will never be spent, yet they will be indexed because they look
identical to normal Bitcoin addresses.

By separating this class of Bitcoin usage, we can improve the core Bitcoin payments system.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130913/60ceb394/attachment.html>

From mark at monetize.io  Sat Sep 14 01:00:03 2013
From: mark at monetize.io (Mark Friedenbach)
Date: Fri, 13 Sep 2013 18:00:03 -0700
Subject: [Bitcoin-development] New Output Script Type
In-Reply-To: <1379119871.76503.YahooMailNeo@web162705.mail.bf1.yahoo.com>
References: <1379119871.76503.YahooMailNeo@web162705.mail.bf1.yahoo.com>
Message-ID: <5233B513.3020900@monetize.io>

Prefix the script with OP_RETURN. Otherwise you are still contributing
to blockchain bloat.

Mark

On 9/13/13 5:51 PM, Turkey Breast wrote:
> http://www.proofofexistence.com/
> 
> and
> 
> https://github.com/spesmilo/sx/blob/master/src/sx-embed-addr
> 
> Embedding data in the blockchain as a hash is out there and a reality.
> 
> I suggest that there should be a new payment type that is unspendable to
> support this.
> Like you have pubkey_hash, pubkey, script_hash, ..., "embed_hash"
> 
> Maybe just a script with a single 20 byte push data.
> 
> Advantages:
> 
> * Optimisation possibilities (you know this can't be spent, and the
> script can't be processed).
> * Avoid indexing in an address database Bitcoin addresses which are
> currently being
> used to index data. They will never be spent, yet they will be indexed
> because they look
> identical to normal Bitcoin addresses.
> 
> By separating this class of Bitcoin usage, we can improve the core
> Bitcoin payments system.
> 
> 
> 
> ------------------------------------------------------------------------------
> How ServiceNow helps IT people transform IT departments:
> 1. Consolidate legacy IT systems to a single system of record for IT
> 2. Standardize and globalize service processes across IT
> 3. Implement zero-touch automation to replace manual, redundant tasks
> http://pubads.g.doubleclick.net/gampad/clk?id=51271111&iu=/4140/ostg.clktrk
> 
> 
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From jgarzik at bitpay.com  Sat Sep 14 01:10:08 2013
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Fri, 13 Sep 2013 21:10:08 -0400
Subject: [Bitcoin-development] New Output Script Type
In-Reply-To: <1379119871.76503.YahooMailNeo@web162705.mail.bf1.yahoo.com>
References: <1379119871.76503.YahooMailNeo@web162705.mail.bf1.yahoo.com>
Message-ID: <CAJHLa0Px3bj7RAyQ6EytGEoN0D8vSPRtYQ42NOR_jyKJ71GoUQ@mail.gmail.com>

See https://github.com/bitcoin/bitcoin/pull/2738

On Fri, Sep 13, 2013 at 8:51 PM, Turkey Breast <turkeybreast at yahoo.com> wrote:
> http://www.proofofexistence.com/
>
> and
>
> https://github.com/spesmilo/sx/blob/master/src/sx-embed-addr
>
> Embedding data in the blockchain as a hash is out there and a reality.
>
> I suggest that there should be a new payment type that is unspendable to
> support this.
> Like you have pubkey_hash, pubkey, script_hash, ..., "embed_hash"
>
> Maybe just a script with a single 20 byte push data.
>
> Advantages:
>
> * Optimisation possibilities (you know this can't be spent, and the script
> can't be processed).
> * Avoid indexing in an address database Bitcoin addresses which are
> currently being
> used to index data. They will never be spent, yet they will be indexed
> because they look
> identical to normal Bitcoin addresses.
>
> By separating this class of Bitcoin usage, we can improve the core Bitcoin
> payments system.
>
>
> ------------------------------------------------------------------------------
> How ServiceNow helps IT people transform IT departments:
> 1. Consolidate legacy IT systems to a single system of record for IT
> 2. Standardize and globalize service processes across IT
> 3. Implement zero-touch automation to replace manual, redundant tasks
> http://pubads.g.doubleclick.net/gampad/clk?id=51271111&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



-- 
Jeff Garzik
Senior Software Engineer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From bitcoin-list at bluematt.me  Sun Sep 15 18:13:54 2013
From: bitcoin-list at bluematt.me (Matt Corallo)
Date: Sun, 15 Sep 2013 14:13:54 -0400
Subject: [Bitcoin-development] More appropriate XDG menu category for
 bitcoin-qt
In-Reply-To: <1375470532.3066.19.camel@rommel>
References: <1375470532.3066.19.camel@rommel>
Message-ID: <1379268834.9765.35.camel@localhost.localdomain>

(Finally) got around to this, sorry for the delay. 0.8.5 has the new
category and pull request is at
https://github.com/bitcoin/bitcoin/pull/2999

Matt

On Fri, 2013-08-02 at 12:08 -0700, Kip Warner wrote:
> Hey list,
> 
> Currently the bitcoin-qt application's XDG desktop integration on some
> desktop environments requests that it be placed under the "Office" menu
> category.[1] This is a rather broad category and I would like to suggest
> that this be refined further into "Finance", given that XDG's menu
> specification allows for this.[2]
> 
> I believe the line in question in bitcoin-qt.desktop should be as
> follows:
> 
>         Categories=Office;Finance;
> 
> I would have provided this trivial patch myself, but my knowledge of Git
> is rather weak and I apologize.
> 
> Respectfully,
> 
> [1] <https://github.com/bitcoin/bitcoin/blob/master/contrib/debian/bitcoin-qt.desktop>
> [2] <http://standards.freedesktop.org/menu-spec/latest/apas02.html>
> 
> ------------------------------------------------------------------------------
> Get your SQL database under version control now!
> Version control is standard for application code, but databases havent 
> caught up. So what steps can you take to put your SQL databases under 
> version control? Why should you start doing it? Read more to find out.
> http://pubads.g.doubleclick.net/gampad/clk?id=49501711&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development





From kip at thevertigo.com  Sun Sep 15 18:28:19 2013
From: kip at thevertigo.com (Kip Warner)
Date: Sun, 15 Sep 2013 11:28:19 -0700
Subject: [Bitcoin-development] More appropriate XDG menu category for
 bitcoin-qt
In-Reply-To: <1379268834.9765.35.camel@localhost.localdomain>
References: <1375470532.3066.19.camel@rommel>
	<1379268834.9765.35.camel@localhost.localdomain>
Message-ID: <1379269699.28396.50.camel@rommel>

On Sun, 2013-09-15 at 14:13 -0400, Matt Corallo wrote:
> (Finally) got around to this, sorry for the delay. 0.8.5 has the new
> category and pull request is at
> https://github.com/bitcoin/bitcoin/pull/2999
> 
> Matt

Thanks a lot Matt.

-- 
Kip Warner -- Software Engineer
OpenPGP encrypted/signed mail preferred
http://www.thevertigo.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130915/60fd9c5e/attachment.sig>

From w at grabhive.com  Mon Sep 16 14:05:25 2013
From: w at grabhive.com (Wendell)
Date: Mon, 16 Sep 2013 16:05:25 +0200
Subject: [Bitcoin-development] Simple contacts exchange (was: Social
	network integration (brainstorm))
In-Reply-To: <AFD93558-684C-497C-ADAF-D031095EC2CE@gmail.com>
References: <9179D240-EE7E-41A4-AA59-7C96246D8CFB@grabhive.com>
	<AFD93558-684C-497C-ADAF-D031095EC2CE@gmail.com>
Message-ID: <82E79EB0-49D6-492A-AE4A-6A786C7B0AAA@grabhive.com>

Luke pointed out that we should not be inserting extraneous data into the blockchain, so this sounds like the best option, Eric. 

I'm under the impression that a Bitcoin user Alice cannot see the actual public key of Bitcoin user Bob, so if we had Hive store metadata on a server relating to a given transaction ID, I would not be able to use those public keys key to encrypt. Is this a misunderstanding or is it correct?

Assuming it is correct, the best that I could come up with was storing the transaction ID with a _fresh_ public key on a server, each time a transfer is made. Altogether it looks like this:

- Alice generates a new keypair & revocation certificate for the transaction
- Alice makes a Bitcoin transaction to Bob
- Alice sends the transaction ID plus the new public key to server
- Bob receives the Bitcoin transaction
- Bob generates a new keypair & revocation certificate
- Bob does a transaction ID lookup on the server, receives Alice's public key, sends his own new one
- Bob encrypts his user metadata against Alice's new key
- Alice downloads and decrypts Bob's metadata
- Alice uploads her revocation certificate
- Alice uploads her own metadata
- Bob downloads Alice's metadata
- Bob uploads his revocation certificate
- (Server removes all keys with revocation certificates)

I presume going the extra mile to generate new keys for each transaction is helpful for privacy?

The above seems rather inelegant to me. I really don't like that clients (wallets) are going to be beating down the server all the time checking for keys, or that there is a possibility of a desynchronization so severe that the user receives the data much too late for it to be useful. But, I suppose it can work.

Another thing I'm considering is Alice/Bob validating each other. I suppose we should include some kind of code that we encourage people to read to each other over the phone or some other medium, to ensure that "it really is Alice", before (for example) returning money to a very legit-looking personage.

Any other thoughts? I would love to do this without using any servers at all ("serverless keyserver", anyone?), but I am not quite sure how.

-wendell

grabhive.com | twitter.com/grabhive | gpg: 6C0C9411

On Sep 7, 2013, at 12:47 AM, Eric Lombrozo wrote:

> Why not just use the transaction hash itself for the lookup? Also, presumably you'd want to encrypt the data so that only the recipient of the transaction can do this lookup.
> 
> -Eric
> 
> On Sep 6, 2013, at 8:07 AM, Wendell <w at grabhive.com> wrote:
> 
>> Hi all,
>> 
>> We're thinking about ways of automatically exchanging contact details between wallets, in order to encourage the proliferation of identifiable names and photos rather than long and hard-to-verify addresses.
>> 
>> The simplest version goes like this:
>> 
>> 2 BTC Bitcoin is sent to someone, and a data lookup hash is inserted into the transaction. When it arrives on the other end, it is indeed looked up, and instead of being presented with a dialogue that says "you received 2 BTC from 13Y94z43Nbbb6wevRyk82CeDoYQ5S28zmA", it's "You received 2 BTC from Frank Jones" including a nice photo.
>> 
>> Now. We can simply delete this data in reference to the transaction ID after it happens (or delete it after a time), but is there any more decentralized way to do it? I would prefer us to run no dedicated servers that would ever put us in a position of being coerced into giving data, or otherwise altering our system to store it.
>> 
>> Any thoughts about this?
>> 
>> -wendell
>> 
>> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411
>> 
>> ------------------------------------------------------------------------------
>> Learn the latest--Visual Studio 2012, SharePoint 2013, SQL 2012, more!
>> Discover the easy way to master current and previous Microsoft technologies
>> and advance your career. Get an incredible 1,500+ hours of step-by-step
>> tutorial videos with LearnDevNow. Subscribe today and save!
>> http://pubads.g.doubleclick.net/gampad/clk?id=58041391&iu=/4140/ostg.clktrk_______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 




From w at grabhive.com  Tue Sep 17 09:30:57 2013
From: w at grabhive.com (Wendell)
Date: Tue, 17 Sep 2013 11:30:57 +0200
Subject: [Bitcoin-development] Simple contacts exchange (was: Social
	network integration (brainstorm))
In-Reply-To: <82E79EB0-49D6-492A-AE4A-6A786C7B0AAA@grabhive.com>
References: <9179D240-EE7E-41A4-AA59-7C96246D8CFB@grabhive.com>
	<AFD93558-684C-497C-ADAF-D031095EC2CE@gmail.com>
	<82E79EB0-49D6-492A-AE4A-6A786C7B0AAA@grabhive.com>
Message-ID: <3B80F433-9039-459B-BC96-A56786DEF6C3@grabhive.com>

Couple of things I just thought about:

1- Presume server should only sweep with two (or more, see below) revocation certificates being present
2- Need to insert something in the flow so that Alice can verify that the uploaded key is actually Bob's (and perhaps vise-versa, given an extremely dedicated attacker with a fast connection?).

Is there a way to do #2 without creating yet another transaction? Admittedly I am still really puzzled about the accessibility of public keys in Bitcoin!

Please remember that the idea is to have two wallets securely exchange a packet of metadata about a transaction beyond the scope of Bitcoin itself (a name, perhaps a small photo, etc) in order to increase usability. This will be my last post here on the topic except to reply in case anyone else contributes.

-wendell

grabhive.com | twitter.com/grabhive | gpg: 6C0C9411

On Sep 16, 2013, at 4:05 PM, Wendell wrote:

> Luke pointed out that we should not be inserting extraneous data into the blockchain, so this sounds like the best option, Eric. 
> 
> I'm under the impression that a Bitcoin user Alice cannot see the actual public key of Bitcoin user Bob, so if we had Hive store metadata on a server relating to a given transaction ID, I would not be able to use those public keys key to encrypt. Is this a misunderstanding or is it correct?
> 
> Assuming it is correct, the best that I could come up with was storing the transaction ID with a _fresh_ public key on a server, each time a transfer is made. Altogether it looks like this:
> 
> - Alice generates a new keypair & revocation certificate for the transaction
> - Alice makes a Bitcoin transaction to Bob
> - Alice sends the transaction ID plus the new public key to server
> - Bob receives the Bitcoin transaction
> - Bob generates a new keypair & revocation certificate
> - Bob does a transaction ID lookup on the server, receives Alice's public key, sends his own new one
> - Bob encrypts his user metadata against Alice's new key
> - Alice downloads and decrypts Bob's metadata
> - Alice uploads her revocation certificate
> - Alice uploads her own metadata
> - Bob downloads Alice's metadata
> - Bob uploads his revocation certificate
> - (Server removes all keys with revocation certificates)
> 
> I presume going the extra mile to generate new keys for each transaction is helpful for privacy?
> 
> The above seems rather inelegant to me. I really don't like that clients (wallets) are going to be beating down the server all the time checking for keys, or that there is a possibility of a desynchronization so severe that the user receives the data much too late for it to be useful. But, I suppose it can work.
> 
> Another thing I'm considering is Alice/Bob validating each other. I suppose we should include some kind of code that we encourage people to read to each other over the phone or some other medium, to ensure that "it really is Alice", before (for example) returning money to a very legit-looking personage.
> 
> Any other thoughts? I would love to do this without using any servers at all ("serverless keyserver", anyone?), but I am not quite sure how.
> 
> -wendell
> 
> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411
> 
> On Sep 7, 2013, at 12:47 AM, Eric Lombrozo wrote:
> 
>> Why not just use the transaction hash itself for the lookup? Also, presumably you'd want to encrypt the data so that only the recipient of the transaction can do this lookup.
>> 
>> -Eric
>> 
>> On Sep 6, 2013, at 8:07 AM, Wendell <w at grabhive.com> wrote:
>> 
>>> Hi all,
>>> 
>>> We're thinking about ways of automatically exchanging contact details between wallets, in order to encourage the proliferation of identifiable names and photos rather than long and hard-to-verify addresses.
>>> 
>>> The simplest version goes like this:
>>> 
>>> 2 BTC Bitcoin is sent to someone, and a data lookup hash is inserted into the transaction. When it arrives on the other end, it is indeed looked up, and instead of being presented with a dialogue that says "you received 2 BTC from 13Y94z43Nbbb6wevRyk82CeDoYQ5S28zmA", it's "You received 2 BTC from Frank Jones" including a nice photo.
>>> 
>>> Now. We can simply delete this data in reference to the transaction ID after it happens (or delete it after a time), but is there any more decentralized way to do it? I would prefer us to run no dedicated servers that would ever put us in a position of being coerced into giving data, or otherwise altering our system to store it.
>>> 
>>> Any thoughts about this?
>>> 
>>> -wendell
>>> 
>>> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411
>>> 
>>> ------------------------------------------------------------------------------
>>> Learn the latest--Visual Studio 2012, SharePoint 2013, SQL 2012, more!
>>> Discover the easy way to master current and previous Microsoft technologies
>>> and advance your career. Get an incredible 1,500+ hours of step-by-step
>>> tutorial videos with LearnDevNow. Subscribe today and save!
>>> http://pubads.g.doubleclick.net/gampad/clk?id=58041391&iu=/4140/ostg.clktrk_______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From mike at plan99.net  Tue Sep 17 10:03:19 2013
From: mike at plan99.net (Mike Hearn)
Date: Tue, 17 Sep 2013 12:03:19 +0200
Subject: [Bitcoin-development] Simple contacts exchange (was: Social
 network integration (brainstorm))
In-Reply-To: <3B80F433-9039-459B-BC96-A56786DEF6C3@grabhive.com>
References: <9179D240-EE7E-41A4-AA59-7C96246D8CFB@grabhive.com>
	<AFD93558-684C-497C-ADAF-D031095EC2CE@gmail.com>
	<82E79EB0-49D6-492A-AE4A-6A786C7B0AAA@grabhive.com>
	<3B80F433-9039-459B-BC96-A56786DEF6C3@grabhive.com>
Message-ID: <CANEZrP3srw4AhtYkM60NBcWYSqEib=wB7Yj4YtqaufW3xd9_0Q@mail.gmail.com>

You can prove ownership of a private key by signing a challenger-generated
nonce with the public part and giving the signature back to the challenger
- same as with any asymmetric crypto system.

As I already noted, the payment protocol is designed to solve that problem.
You could design a BIP that extended the payment protocol to include
information about the person who generated it.


On Tue, Sep 17, 2013 at 11:30 AM, Wendell <w at grabhive.com> wrote:

> Couple of things I just thought about:
>
> 1- Presume server should only sweep with two (or more, see below)
> revocation certificates being present
> 2- Need to insert something in the flow so that Alice can verify that the
> uploaded key is actually Bob's (and perhaps vise-versa, given an extremely
> dedicated attacker with a fast connection?).
>
> Is there a way to do #2 without creating yet another transaction?
> Admittedly I am still really puzzled about the accessibility of public keys
> in Bitcoin!
>
> Please remember that the idea is to have two wallets securely exchange a
> packet of metadata about a transaction beyond the scope of Bitcoin itself
> (a name, perhaps a small photo, etc) in order to increase usability. This
> will be my last post here on the topic except to reply in case anyone else
> contributes.
>
> -wendell
>
> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411
>
> On Sep 16, 2013, at 4:05 PM, Wendell wrote:
>
> > Luke pointed out that we should not be inserting extraneous data into
> the blockchain, so this sounds like the best option, Eric.
> >
> > I'm under the impression that a Bitcoin user Alice cannot see the actual
> public key of Bitcoin user Bob, so if we had Hive store metadata on a
> server relating to a given transaction ID, I would not be able to use those
> public keys key to encrypt. Is this a misunderstanding or is it correct?
> >
> > Assuming it is correct, the best that I could come up with was storing
> the transaction ID with a _fresh_ public key on a server, each time a
> transfer is made. Altogether it looks like this:
> >
> > - Alice generates a new keypair & revocation certificate for the
> transaction
> > - Alice makes a Bitcoin transaction to Bob
> > - Alice sends the transaction ID plus the new public key to server
> > - Bob receives the Bitcoin transaction
> > - Bob generates a new keypair & revocation certificate
> > - Bob does a transaction ID lookup on the server, receives Alice's
> public key, sends his own new one
> > - Bob encrypts his user metadata against Alice's new key
> > - Alice downloads and decrypts Bob's metadata
> > - Alice uploads her revocation certificate
> > - Alice uploads her own metadata
> > - Bob downloads Alice's metadata
> > - Bob uploads his revocation certificate
> > - (Server removes all keys with revocation certificates)
> >
> > I presume going the extra mile to generate new keys for each transaction
> is helpful for privacy?
> >
> > The above seems rather inelegant to me. I really don't like that clients
> (wallets) are going to be beating down the server all the time checking for
> keys, or that there is a possibility of a desynchronization so severe that
> the user receives the data much too late for it to be useful. But, I
> suppose it can work.
> >
> > Another thing I'm considering is Alice/Bob validating each other. I
> suppose we should include some kind of code that we encourage people to
> read to each other over the phone or some other medium, to ensure that "it
> really is Alice", before (for example) returning money to a very
> legit-looking personage.
> >
> > Any other thoughts? I would love to do this without using any servers at
> all ("serverless keyserver", anyone?), but I am not quite sure how.
> >
> > -wendell
> >
> > grabhive.com | twitter.com/grabhive | gpg: 6C0C9411
> >
> > On Sep 7, 2013, at 12:47 AM, Eric Lombrozo wrote:
> >
> >> Why not just use the transaction hash itself for the lookup? Also,
> presumably you'd want to encrypt the data so that only the recipient of the
> transaction can do this lookup.
> >>
> >> -Eric
> >>
> >> On Sep 6, 2013, at 8:07 AM, Wendell <w at grabhive.com> wrote:
> >>
> >>> Hi all,
> >>>
> >>> We're thinking about ways of automatically exchanging contact details
> between wallets, in order to encourage the proliferation of identifiable
> names and photos rather than long and hard-to-verify addresses.
> >>>
> >>> The simplest version goes like this:
> >>>
> >>> 2 BTC Bitcoin is sent to someone, and a data lookup hash is inserted
> into the transaction. When it arrives on the other end, it is indeed looked
> up, and instead of being presented with a dialogue that says "you received
> 2 BTC from 13Y94z43Nbbb6wevRyk82CeDoYQ5S28zmA", it's "You received 2 BTC
> from Frank Jones" including a nice photo.
> >>>
> >>> Now. We can simply delete this data in reference to the transaction ID
> after it happens (or delete it after a time), but is there any more
> decentralized way to do it? I would prefer us to run no dedicated servers
> that would ever put us in a position of being coerced into giving data, or
> otherwise altering our system to store it.
> >>>
> >>> Any thoughts about this?
> >>>
> >>> -wendell
> >>>
> >>> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411
> >>>
> >>>
> ------------------------------------------------------------------------------
> >>> Learn the latest--Visual Studio 2012, SharePoint 2013, SQL 2012, more!
> >>> Discover the easy way to master current and previous Microsoft
> technologies
> >>> and advance your career. Get an incredible 1,500+ hours of step-by-step
> >>> tutorial videos with LearnDevNow. Subscribe today and save!
> >>>
> http://pubads.g.doubleclick.net/gampad/clk?id=58041391&iu=/4140/ostg.clktrk_______________________________________________
> >>> Bitcoin-development mailing list
> >>> Bitcoin-development at lists.sourceforge.net
> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
> ------------------------------------------------------------------------------
> LIMITED TIME SALE - Full Year of Microsoft Training For Just $49.99!
> 1,500+ hours of tutorials including VisualStudio 2012, Windows 8,
> SharePoint
> 2013, SQL 2012, MVC 4, more. BEST VALUE: New Multi-Library Power Pack
> includes
> Mobile, Cloud, Java, and UX Design. Lowest price ever! Ends 9/20/13.
> http://pubads.g.doubleclick.net/gampad/clk?id=58041151&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130917/5399dd26/attachment.html>

From winkelspecht at gmail.com  Tue Sep 17 10:11:03 2013
From: winkelspecht at gmail.com (Micah Winkelspecht)
Date: Tue, 17 Sep 2013 03:11:03 -0700
Subject: [Bitcoin-development] BIP32 (HD Wallets) implementation in Ruby
Message-ID: <CAH97s+nU_aOt-CdJLcdeUucviOZ89ENZNpLvKY3AiH=orrZYkQ@mail.gmail.com>

I've been hard at work completing an open source Ruby gem library (called
MoneyTree) that implements Hierarchical Deterministic Bitcoin wallets
(BIP32), and it's about ready for release. It passes all of the test
vectors and has 100% code coverage. I've also written an extensive README
which goes into depth about HD Wallets, which I'll probably be turning into
a blog post.

However, I'm pretty new to crypto, so I wanted to run it by this group
first before releasing it. If anybody has knowledge of BIP32 and can give
at a review, I would greatly appreciate it, and would be glad to add you as
a contributor.

If you have knowledge of the BIP32 spec, but not Ruby, you can still help
by reading over my README for conceptual accuracy.

Check out the repo here: https://github.com/wink/money-tree

Thanks in advance,

Micah Winkelspecht
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130917/7ea1c863/attachment.html>

From mike at plan99.net  Tue Sep 17 11:00:04 2013
From: mike at plan99.net (Mike Hearn)
Date: Tue, 17 Sep 2013 13:00:04 +0200
Subject: [Bitcoin-development] Faster databases than LevelDB
Message-ID: <CANEZrP1ksdGfB-282giysF-2Lo==NiD-nBdon5FJ9wLBLmX=TA@mail.gmail.com>

LevelDB is fast - very fast if you give it enough CPU time and disk seeks.
But it's not the last word in performance.

HyperLevelDB is a forked LevelDB with some changes, mostly, finer grained
locking and changes to how compaction works:

http://hyperdex.org/performance/leveldb/

However, it comes with a caveat - one of the changes they made is to take
away write throttling if compaction falls behind, the app itself is
expected to do that.

Sophia is a competitor to LevelDB. The website claims that in benchmarks it
completely smokes LevelDB. I have not explored how it does this or tried to
replicate their benchmarks myself:

http://sphia.org/index.html
http://sphia.org/benchmarks.html

It's written in C and BSD licensed.

As an example of the kind of speedup they claim to be capable of, they say
LevelDB could do 167,476 random reads per second on their SSD based
machine. Sophia could do 438,084 reads/sec. Random reads are of course the
most interesting for us because that's what UTXO lookups involve.

They also compare against HyperLevelDB, where the differences are much less
pronounced and actually HyperLevelDB appears to be able to do random writes
faster than Sophia.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130917/6f3874ce/attachment.html>

From mike at plan99.net  Tue Sep 17 11:45:18 2013
From: mike at plan99.net (Mike Hearn)
Date: Tue, 17 Sep 2013 13:45:18 +0200
Subject: [Bitcoin-development] Faster databases than LevelDB
In-Reply-To: <CAC1+kJO8KX6uc7jEz9Otv+BbrJQUk6RvbiyWnP0m=Voh8zdcWQ@mail.gmail.com>
References: <CANEZrP1ksdGfB-282giysF-2Lo==NiD-nBdon5FJ9wLBLmX=TA@mail.gmail.com>
	<CAC1+kJO8KX6uc7jEz9Otv+BbrJQUk6RvbiyWnP0m=Voh8zdcWQ@mail.gmail.com>
Message-ID: <CANEZrP2ZRHfoGugVZ2X9iE8vzdZydJ3JTS=roTv8G=LnCgm7Eg@mail.gmail.com>

Nobody has written code to use a better format, migrate old wallets, etc.


On Tue, Sep 17, 2013 at 1:41 PM, Jorge Tim?n <jtimon at monetize.io> wrote:

> Only slightly related to this...
> What's the reason why BerkleyDB is maintained for the wallet?
> I think it would be a good thing to get rid of the libdb4.8++-dev
> dependency that makes bitcoind harder to compile on debian and ubuntu.
> Unless, of course, there's a reason I am missing...
>
>
> On 9/17/13, Mike Hearn <mike at plan99.net> wrote:
> > LevelDB is fast - very fast if you give it enough CPU time and disk
> seeks.
> > But it's not the last word in performance.
> >
> > HyperLevelDB is a forked LevelDB with some changes, mostly, finer grained
> > locking and changes to how compaction works:
> >
> > http://hyperdex.org/performance/leveldb/
> >
> > However, it comes with a caveat - one of the changes they made is to take
> > away write throttling if compaction falls behind, the app itself is
> > expected to do that.
> >
> > Sophia is a competitor to LevelDB. The website claims that in benchmarks
> it
> > completely smokes LevelDB. I have not explored how it does this or tried
> to
> > replicate their benchmarks myself:
> >
> > http://sphia.org/index.html
> > http://sphia.org/benchmarks.html
> >
> > It's written in C and BSD licensed.
> >
> > As an example of the kind of speedup they claim to be capable of, they
> say
> > LevelDB could do 167,476 random reads per second on their SSD based
> > machine. Sophia could do 438,084 reads/sec. Random reads are of course
> the
> > most interesting for us because that's what UTXO lookups involve.
> >
> > They also compare against HyperLevelDB, where the differences are much
> less
> > pronounced and actually HyperLevelDB appears to be able to do random
> writes
> > faster than Sophia.
> >
>
>
> --
> Jorge Tim?n
>
> http://freico.in/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130917/1a7bfe48/attachment.html>

From jtimon at monetize.io  Tue Sep 17 11:41:30 2013
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Tue, 17 Sep 2013 13:41:30 +0200
Subject: [Bitcoin-development] Faster databases than LevelDB
In-Reply-To: <CANEZrP1ksdGfB-282giysF-2Lo==NiD-nBdon5FJ9wLBLmX=TA@mail.gmail.com>
References: <CANEZrP1ksdGfB-282giysF-2Lo==NiD-nBdon5FJ9wLBLmX=TA@mail.gmail.com>
Message-ID: <CAC1+kJO8KX6uc7jEz9Otv+BbrJQUk6RvbiyWnP0m=Voh8zdcWQ@mail.gmail.com>

Only slightly related to this...
What's the reason why BerkleyDB is maintained for the wallet?
I think it would be a good thing to get rid of the libdb4.8++-dev
dependency that makes bitcoind harder to compile on debian and ubuntu.
Unless, of course, there's a reason I am missing...


On 9/17/13, Mike Hearn <mike at plan99.net> wrote:
> LevelDB is fast - very fast if you give it enough CPU time and disk seeks.
> But it's not the last word in performance.
>
> HyperLevelDB is a forked LevelDB with some changes, mostly, finer grained
> locking and changes to how compaction works:
>
> http://hyperdex.org/performance/leveldb/
>
> However, it comes with a caveat - one of the changes they made is to take
> away write throttling if compaction falls behind, the app itself is
> expected to do that.
>
> Sophia is a competitor to LevelDB. The website claims that in benchmarks it
> completely smokes LevelDB. I have not explored how it does this or tried to
> replicate their benchmarks myself:
>
> http://sphia.org/index.html
> http://sphia.org/benchmarks.html
>
> It's written in C and BSD licensed.
>
> As an example of the kind of speedup they claim to be capable of, they say
> LevelDB could do 167,476 random reads per second on their SSD based
> machine. Sophia could do 438,084 reads/sec. Random reads are of course the
> most interesting for us because that's what UTXO lookups involve.
>
> They also compare against HyperLevelDB, where the differences are much less
> pronounced and actually HyperLevelDB appears to be able to do random writes
> faster than Sophia.
>


-- 
Jorge Tim?n

http://freico.in/



From mike at plan99.net  Tue Sep 17 12:36:29 2013
From: mike at plan99.net (Mike Hearn)
Date: Tue, 17 Sep 2013 14:36:29 +0200
Subject: [Bitcoin-development] Simple contacts exchange (was: Social
 network integration (brainstorm))
In-Reply-To: <2BC93E25-27D2-474E-842D-6684E96E9472@grabhive.com>
References: <9179D240-EE7E-41A4-AA59-7C96246D8CFB@grabhive.com>
	<AFD93558-684C-497C-ADAF-D031095EC2CE@gmail.com>
	<82E79EB0-49D6-492A-AE4A-6A786C7B0AAA@grabhive.com>
	<3B80F433-9039-459B-BC96-A56786DEF6C3@grabhive.com>
	<CANEZrP3srw4AhtYkM60NBcWYSqEib=wB7Yj4YtqaufW3xd9_0Q@mail.gmail.com>
	<2BC93E25-27D2-474E-842D-6684E96E9472@grabhive.com>
Message-ID: <CANEZrP2Ewq4+xT+FCaB_U64QNSW-QA6SooUus+Ad0=DNbh-erA@mail.gmail.com>

The payment protocol doesn't *require* signed certificates, it just gives
the option of using them.

However if you don't have some kind of cryptographic proof of identity,
what stops me putting your name and face into my payment requests and
claiming to be you?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130917/45f7d548/attachment.html>

From w at grabhive.com  Tue Sep 17 12:05:30 2013
From: w at grabhive.com (Wendell)
Date: Tue, 17 Sep 2013 14:05:30 +0200
Subject: [Bitcoin-development] Simple contacts exchange (was: Social
	network integration (brainstorm))
In-Reply-To: <CANEZrP3srw4AhtYkM60NBcWYSqEib=wB7Yj4YtqaufW3xd9_0Q@mail.gmail.com>
References: <9179D240-EE7E-41A4-AA59-7C96246D8CFB@grabhive.com>
	<AFD93558-684C-497C-ADAF-D031095EC2CE@gmail.com>
	<82E79EB0-49D6-492A-AE4A-6A786C7B0AAA@grabhive.com>
	<3B80F433-9039-459B-BC96-A56786DEF6C3@grabhive.com>
	<CANEZrP3srw4AhtYkM60NBcWYSqEib=wB7Yj4YtqaufW3xd9_0Q@mail.gmail.com>
Message-ID: <2BC93E25-27D2-474E-842D-6684E96E9472@grabhive.com>

Thanks Mike.

I definitely took all your comments to heart, but we're looking to road-test something quickly for the sake of user experience in our own wallet. I wouldn't mind us contributing to a BIP once we have a better grip on the payment protocol itself, but (for example) I'm still not sure that I understand _why_ signed certificates are even required. Isn't that likely be an obstacle to adoption for use cases like this?

-wendell

grabhive.com | twitter.com/grabhive | gpg: 6C0C9411

On Sep 17, 2013, at 12:03 PM, Mike Hearn wrote:

> You can prove ownership of a private key by signing a challenger-generated nonce with the public part and giving the signature back to the challenger - same as with any asymmetric crypto system.
> 
> As I already noted, the payment protocol is designed to solve that problem. You could design a BIP that extended the payment protocol to include information about the person who generated it.
> 
>> On Tue, Sep 17, 2013 at 11:30 AM, Wendell <w at grabhive.com> wrote:
>> Couple of things I just thought about:
>> 
>> 1- Presume server should only sweep with two (or more, see below) revocation certificates being present
>> 2- Need to insert something in the flow so that Alice can verify that the uploaded key is actually Bob's (and perhaps vise-versa, given an extremely dedicated attacker with a fast connection?).
>> 
>> Is there a way to do #2 without creating yet another transaction? Admittedly I am still really puzzled about the accessibility of public keys in Bitcoin!
>> 
>> Please remember that the idea is to have two wallets securely exchange a packet of metadata about a transaction beyond the scope of Bitcoin itself (a name, perhaps a small photo, etc) in order to increase usability. This will be my last post here on the topic except to reply in case anyone else contributes.
>> 
>> -wendell
>> 
>> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411



From gmaxwell at gmail.com  Tue Sep 17 13:20:13 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 17 Sep 2013 06:20:13 -0700
Subject: [Bitcoin-development] Faster databases than LevelDB
In-Reply-To: <CANEZrP1ksdGfB-282giysF-2Lo==NiD-nBdon5FJ9wLBLmX=TA@mail.gmail.com>
References: <CANEZrP1ksdGfB-282giysF-2Lo==NiD-nBdon5FJ9wLBLmX=TA@mail.gmail.com>
Message-ID: <CAAS2fgSqnc_0mWFrt9TREhZzF+JGJZxs_XD_ht+6nngFE_oE3w@mail.gmail.com>

On Tue, Sep 17, 2013 at 4:00 AM, Mike Hearn <mike at plan99.net> wrote:
> LevelDB is fast - very fast if you give it enough CPU time and disk seeks.
> But it's not the last word in performance.

I'd looked at the hyperleveldb, but their performance graphs made it
seem like it would be slower for the actual database sizes we're using
today.

Is there a competitor that specializes in being more robust to corruption? :(



From jtimon at monetize.io  Tue Sep 17 13:48:28 2013
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Tue, 17 Sep 2013 15:48:28 +0200
Subject: [Bitcoin-development] Faster databases than LevelDB
In-Reply-To: <CANEZrP2ZRHfoGugVZ2X9iE8vzdZydJ3JTS=roTv8G=LnCgm7Eg@mail.gmail.com>
References: <CANEZrP1ksdGfB-282giysF-2Lo==NiD-nBdon5FJ9wLBLmX=TA@mail.gmail.com>
	<CAC1+kJO8KX6uc7jEz9Otv+BbrJQUk6RvbiyWnP0m=Voh8zdcWQ@mail.gmail.com>
	<CANEZrP2ZRHfoGugVZ2X9iE8vzdZydJ3JTS=roTv8G=LnCgm7Eg@mail.gmail.com>
Message-ID: <CAC1+kJNngB2POuN_HPgLOTg6wNfkJF2THXHzkKRX-6xStxVnCw@mail.gmail.com>

On 9/17/13, Mike Hearn <mike at plan99.net> wrote:
> Nobody has written code to use a better format, migrate old wallets, etc.

ACK, thanks.



From mark at monetize.io  Tue Sep 17 17:08:54 2013
From: mark at monetize.io (Mark Friedenbach)
Date: Tue, 17 Sep 2013 10:08:54 -0700
Subject: [Bitcoin-development] Faster databases than LevelDB
In-Reply-To: <CANEZrP1ksdGfB-282giysF-2Lo==NiD-nBdon5FJ9wLBLmX=TA@mail.gmail.com>
References: <CANEZrP1ksdGfB-282giysF-2Lo==NiD-nBdon5FJ9wLBLmX=TA@mail.gmail.com>
Message-ID: <52388CA6.2050709@monetize.io>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Also somewhat related, I have been looking for some time now to
abstract out the UTXO and block databases so that a variety of
key/value stores could be used as a backend, configured by a command
line parameter. In particular, it would be interesting for some server
applications to support HyperDex, which is basically a distributed,
fault-tolerant version of LevelDB:

http://hyperdex.org/

By the same mechanism you could just as easily support a Sophia backend.

Mark


On 9/17/13 4:00 AM, Mike Hearn wrote:
> LevelDB is fast - very fast if you give it enough CPU time and
> disk seeks. But it's not the last word in performance.
> 
> HyperLevelDB is a forked LevelDB with some changes, mostly, finer 
> grained locking and changes to how compaction works:
> 
> http://hyperdex.org/performance/leveldb/
> 
> However, it comes with a caveat - one of the changes they made is
> to take away write throttling if compaction falls behind, the app
> itself is expected to do that.
> 
> Sophia is a competitor to LevelDB. The website claims that in
> benchmarks it completely smokes LevelDB. I have not explored how it
> does this or tried to replicate their benchmarks myself:
> 
> http://sphia.org/index.html http://sphia.org/benchmarks.html
> 
> It's written in C and BSD licensed.
> 
> As an example of the kind of speedup they claim to be capable of,
> they say LevelDB could do 167,476 random reads per second on their
> SSD based machine. Sophia could do 438,084 reads/sec. Random reads
> are of course the most interesting for us because that's what UTXO
> lookups involve.
> 
> They also compare against HyperLevelDB, where the differences are
> much less pronounced and actually HyperLevelDB appears to be able
> to do random writes faster than Sophia.
> 
> 
> 
> 
> ------------------------------------------------------------------------------
>
> 
LIMITED TIME SALE - Full Year of Microsoft Training For Just $49.99!
> 1,500+ hours of tutorials including VisualStudio 2012, Windows 8,
> SharePoint 2013, SQL 2012, MVC 4, more. BEST VALUE: New
> Multi-Library Power Pack includes Mobile, Cloud, Java, and UX
> Design. Lowest price ever! Ends 9/20/13. 
> http://pubads.g.doubleclick.net/gampad/clk?id=58041151&iu=/4140/ostg.clktrk
>
> 
> 
> 
> _______________________________________________ Bitcoin-development
> mailing list Bitcoin-development at lists.sourceforge.net 
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG/MacGPG2 v2.0.19 (Darwin)
Comment: GPGTools - http://gpgtools.org
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQIcBAEBAgAGBQJSOIymAAoJEAdzVfsmodw4H48QALC+ae4wRLEg3lrg9sgayfOn
ukLM079PXgEbARFPt6WxkLnNGYzEbb7IzT0uvaKH4VIW/rrORy9VqNPmliF+834h
XygUwfAzU04K/oLyCsdWZcOugj2P8aufNeA6whLS5IijDLtHb3Ueu4ORNcfLBGqp
KKfqPj0QHseusiLJ9f3IW+LrdM1vAoT1jryTngpQy2i+qFFDM6CN3THCq4adJvjr
AnYlfLoJSZ0/obz/krwLv6vP1BbwxXzv5CfD0Q2bdoEV/EgWDP3Bd5tUzUCjj53/
qMmhaACoVlarohh64s3JNSDSkHDFSbHFt65ZgNQbNY1wmSeyilQcd8FGWOF/WRzW
Z/pl2IdhoCm3t86xSggRGivj/EVeBJlD36i7ohpDbVWFPsf6B4e5M6xSdso/2WBp
fr55TwehCaGE+UHa0gITkE/si1txvY4gti0bLNvwFDEcZ3qsXRsz4CyLlZLMBbPX
4aRNGyqv2yJ2AivkEyNOUugo1Q8RKEKZWfWWDecI53DHdebzKX1zu9GLJwlGJqGw
Qzm7Tdb7S8J/D6IIHf4Xq2LDhQ2fnPylmGSmtuVFEMxeDhmdbNqKSr3kqlWQf3T8
Oa8bm6kUQFJ+11jLEkVEGZJC4e42+faQBxR+CsqvVsTEezDCP1dE7D3QV8ry9YBc
DwXt3299Q03B5LoxpWTq
=KseH
-----END PGP SIGNATURE-----



From rdwnj at yahoo.com  Wed Sep 18 03:22:39 2013
From: rdwnj at yahoo.com (Ron)
Date: Tue, 17 Sep 2013 20:22:39 -0700 (PDT)
Subject: [Bitcoin-development] the XBT
In-Reply-To: <mailman.64665.1379418331.2210.bitcoin-development@lists.sourceforge.net>
References: <mailman.64665.1379418331.2210.bitcoin-development@lists.sourceforge.net>
Message-ID: <1379474559.95728.YahooMailNeo@web124503.mail.ne1.yahoo.com>

Hello, 


Has everyone seen 

http://www.coindesk.com/bitcoin-gaining-market-based-legitimacy-xbt/ 


Bitcoin has its own ISO currency code.

Ron



________________________________
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130917/cf29536e/attachment.html>

From johnathan at corganlabs.com  Wed Sep 18 09:16:58 2013
From: johnathan at corganlabs.com (Johnathan Corgan)
Date: Wed, 18 Sep 2013 05:16:58 -0400
Subject: [Bitcoin-development] the XBT
In-Reply-To: <1379474559.95728.YahooMailNeo@web124503.mail.ne1.yahoo.com>
References: <mailman.64665.1379418331.2210.bitcoin-development@lists.sourceforge.net>
	<1379474559.95728.YahooMailNeo@web124503.mail.ne1.yahoo.com>
Message-ID: <CALOxbZtfu1nttPFM2Y3sGFi7mP0FmtvHfjSn4GLhX4CM9XFo_A@mail.gmail.com>

On Tue, Sep 17, 2013 at 11:22 PM, Ron <rdwnj at yahoo.com> wrote:


> Has everyone seen
> http://www.coindesk.com/bitcoin-gaining-market-based-legitimacy-xbt/
>
> Bitcoin has its own ISO currency code.
>

My understanding is that XBT is a proposed standard, and hasn't been
approved by ISO yet.  Did that change?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130918/852229b9/attachment.html>

From jgarzik at bitpay.com  Wed Sep 18 10:48:30 2013
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Wed, 18 Sep 2013 06:48:30 -0400
Subject: [Bitcoin-development] the XBT
In-Reply-To: <CALOxbZtfu1nttPFM2Y3sGFi7mP0FmtvHfjSn4GLhX4CM9XFo_A@mail.gmail.com>
References: <mailman.64665.1379418331.2210.bitcoin-development@lists.sourceforge.net>
	<1379474559.95728.YahooMailNeo@web124503.mail.ne1.yahoo.com>
	<CALOxbZtfu1nttPFM2Y3sGFi7mP0FmtvHfjSn4GLhX4CM9XFo_A@mail.gmail.com>
Message-ID: <CAJHLa0P-RAnfqEqjA=QyqmMifcb4=tz9gB1Snz-KG=20GO6BvQ@mail.gmail.com>

On Wed, Sep 18, 2013 at 5:16 AM, Johnathan Corgan
<johnathan at corganlabs.com> wrote:
> My understanding is that XBT is a proposed standard, and hasn't been
> approved by ISO yet.  Did that change?

No.

     Jeff



From pete at petertodd.org  Mon Sep 23 13:34:19 2013
From: pete at petertodd.org (Peter Todd)
Date: Mon, 23 Sep 2013 09:34:19 -0400
Subject: [Bitcoin-development] Near-block broadcasts for proof of tx
	propagation
Message-ID: <20130923133419.GB4400@savin>

Currently there is no way for a node, SPV or otherwise, to know if a
transaction has been broadcast succesfully to any amount of hashing
power. This makes it difficult to determine if a transaction failed to
either propagate across the network, or failed to pay sufficient fees to
be worthy of inclusion in a block.

Broadcasting blocks that almost, but not quite, met the difficulty
target provides clients with fast and honest proof about the hashing
power mining their transaction. This proof is inherently honest because
making a "near-block" is an expensive operation; additionally given at
least one honest peer a node can detect near-block censorship by any
other peer statistically.


Limitations of fee estimation
=============================

Mempool-based fee estimation is limited by the ability of peers to lie,
particularly to SPV peers. Miners wishing to increase fees can conduct
sybil attacks where they lie to peers about the average fees required to
get transactions into blocks. This problem is particularly dangerous
given the lack of incentives to run full-nodes in the first place; the
number of full nodes has continued to drop over time as users switch to
SPV clients and web-wallets; it would be unfortunate if users started
switching to web-wallets because they could offer better fee estimation.
In any case creating monetary incentives to sybil the network is very
undesirable.

Out-of-band fee payment has the opposite effect of making fees in blocks
appear lower than actually required to get them mined; transactions will
get stuck unless an initial bad estimate can be replaced with a higher
paying one. The payment protocol makes out-of-band fee payment
attractive in the case where you want to accept a payment from a
customer and pay the fee for them; child-pays-for-parent wastes money
paying for additional blockchain space.

Replacement-based schemes allow for recovery from stuck too-low
transactions, but they are still succeptable to sybil attacks. (don't
relay the transaction to other pools)


Miner incentives to create near blocks
======================================

Why would a miner want to go to the trouble of broadcasting a near block
anyway? Wouldn't it be better if users didn't get feedback about fees
and over-paid instead?

If you are a large miner as a % of total profit efforts such as sybiling
the network have a greater rate of return; if you are a small miner the
greater income you receive from deception is outweighed by the cost.
Thus you have an incentive to provide mechanisms to force larger miners
to behave honestly.

Secondly near-blocks could help "pre-propagate" transactions that will
be mined in the near future, thus reducing block propagation times and
hence orphan rates. (the pre-propagation can use the proof-of-work to
rate-limit transactions that nodes would otherwise not forward, also
allowing non-full nodes to safely participate in relaying) Again, this
is something that most interests smaller miners with less peak bandwidth
rather than large pools.

In the event of a fork near blocks can be used to more quickly determine
which side of the fork has the majority of hashing power, allowing the
minority side to switch sooner. Again the reduction in orphan rates
benefits smaller miners more than larger ones. (though note how only
near-block headers are required for this application)


Contents of a near block
========================

From the miner incentives we see that near blocks should contain two
types of information:

1) Transactions known to the miner, but not included in the current
block. This information allows nodes to determine if a transaction they
have broadcast was succesfully propagated to the majority of hashing
power regardless of whether or not it is being mined, allowing nodes to
avoid sybil attacks attempting to censor the transactions they make.

This information needs to be committed separately in the coinbase tx.
The incentive for miners here is to ensure that no-one can gain an
unfair advantage with a sybil attack.

2) Transactions the miner is attempting to mine, proved by the merkle
root. The incentives here are allowing non-full nodes to safely
propagate transactions, improving block propagation, as well as further
preventing deception by larger miners.

Transaction mutability complicates both #1 and #2. In the case of #1
nodes can exploit mutability while relaying transactions, although at
least relaying mutability is increasingly difficult; the incentives are
such that the miners themselves have no reason to lie about the txids
they know of. For #2 the incentives are all harmed by mutating
transactions, so again we can expect miners to either leave transactions
as they are, or simply not publish near blocks at all.

Bandwidth usage is reasonable: the average transaction from the last
10,000 blocks is 450 bytes. Both data sets can be delta compressed
against previously sent txids. Even a naive implementation that sends
full txids would result in near blocks that are about 1/10th of the size
of full blocks. (32-byte txids, and 1/4 of that amount in the "seen but
not mined" list) The machinery for near blocks can also be easily
re-used to implement improved full-block relaying with transactions in
blocks being referenced to by txid.


Replacement with near blocks
============================

An node making a transaction can do the following:

1. Broadcast the transaction with an initial estimated fee. (the txid is
added to the bloom filter here) The estimate can safely be be on the low
side.

2. Wait

3. If transaction still hasn't appeared in either a block or near block,
rebroadcast with a higher fee, either by replace-by-fee method, or
zero-conf safe method of adding an additional txin+txout.

Peers practicing censorship of either transactions or near blocks can be
detected statisticly by preferring to connect to peers that provide more
near blocks. Note how a short 80-byte near block header is sufficient
information to detect a peer withholding near blocks, and that header
can be relayed by SPV peers safely. If the transaction fails to get into
the "seen-but-not-mined" list, a node can use that failure as an
indication to find other peers to relay too.

Currently SPV clients are vulnerable to their peers withholding valid
bloom filter matches; future UTXO commitments can be designed to make
this impossible, and spot-check auditing can detect it now.


Out-of-band fee payment with near blocks
========================================

A purchaser of out-of-band fee payment services can use near-blocks to
check that their fee offer has been accepted and miners are mining their
transaction. This would be particularly useful for a decentralized
system where offers backed by fidelity bonds are made; it would be good
to encourage such systems over arrangements between purchasers and large
pools.


Security
========

There is a serious problem however with proof-of-propagation and
proof-of-mining: they let miners cheat. The proof that a given
transaction is being mined can be used to mine the transaction yourself,
without having to maintain a copy of the UTXO set or indeed do any
validation at all. Having said that this risk already exists due to
P2Pool, which forwards transactions along with shares already.

In any case, it's yet another argument that we need miners to prove they
possess the UTXO set.

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130923/56f02ac6/attachment.sig>

From mike at plan99.net  Tue Sep 24 13:52:24 2013
From: mike at plan99.net (Mike Hearn)
Date: Tue, 24 Sep 2013 15:52:24 +0200
Subject: [Bitcoin-development] Payment Protocol: BIP 70, 71, 72
In-Reply-To: <CANEZrP2BOWk4FOUx4eVHvXmdSgx3zo_o18J8YBi2Uc_WkBAXKA@mail.gmail.com>
References: <CABsx9T0Ly67ZNJhoRQk0L9Q0-ucq3e=24b5Tg6GRKspRKKtP-g@mail.gmail.com>
	<521298F0.20108@petersson.at>
	<CABsx9T3b--tfUmaxJxsXyM2f3Cw4M1oX1nX8o9WkW_haBmLctA@mail.gmail.com>
	<CANEZrP2BOWk4FOUx4eVHvXmdSgx3zo_o18J8YBi2Uc_WkBAXKA@mail.gmail.com>
Message-ID: <CANEZrP0H9TVfQ3AGv6aBmS1DUa6MTWhSFAN1Jo4eimBEBQhPZw@mail.gmail.com>

BTW, on the "make qrcodes more scannable" front -- is it too late to change
BIP 72 so the new param is just "r" instead of "request"? Every byte helps
when it comes to qrcodes ...


On Tue, Aug 20, 2013 at 12:05 PM, Mike Hearn <mike at plan99.net> wrote:

> I think the confidence of the tx is not really the users concern anyway.
> They wrote it so they know it's valid. If the merchant disagrees for some
> reason then the user can find out, out of band when the goods/services are
> not delivered.
>
>
> On Tue, Aug 20, 2013 at 1:19 AM, Gavin Andresen <gavinandresen at gmail.com>wrote:
>
>> On Tue, Aug 20, 2013 at 8:15 AM, Andreas Petersson <andreas at petersson.at>wrote:
>>
>>> I was just reviewing the integration work to integrate the Payment
>>> Protocol into our products. Is there any notion of a standardized
>>> invoice serialisation? If i pay for two Burgers and one Club Mate, how
>>> would my Bitcoin Wallet be able to know that?
>>
>>
>> No. There are XML-based (shudder) standards for electronic invoicing that
>> include all sorts of bells and whistles; the PaymentDetails message could
>> easily encapsulate one of them in an 'invoice' field extension. Or we could
>> reinvent the wheel and come up with our own, but I'd rather use an existing
>> standard (or maybe a subset of an existing standard).
>>
>> I didn't want to wade into that swamp for the 1.0 version of the payment
>> protocol.
>>
>>
>>> Right now, i would simply
>>> put that into "memo" and come up with my own serialisation mechanism.
>>>
>>
>> "Two Burgers, one Club Mate" seems pretty user-friendly.
>>
>>  Second, is there a way to communicate acceptance levels of TX
>>> (unconfirmed, 1 conf, 6 conf) maybe using several PaymentACK?
>>>
>>
>> No, because the Payment->PaymentACK communication round-trip is done in
>> one, non-persistent http request-response round-trip.
>>
>> I don't think we want to allow merchants to push messages to the wallet
>> (wouldn't take long for merchants to use the opportunity to push annoying
>> advertising at me, I think), and I don't think we want wallets to poll the
>> merchant. Although maybe a payment protocol version 2.0 feature could be a
>> PaymentACK extension that says "ask me how the transaction is going at THIS
>> URL in THIS many minutes."
>>
>> --
>> --
>> Gavin Andresen
>>
>>
>> ------------------------------------------------------------------------------
>> Introducing Performance Central, a new site from SourceForge and
>> AppDynamics. Performance Central is your source for news, insights,
>> analysis and resources for efficient Application Performance Management.
>> Visit us today!
>>
>> http://pubads.g.doubleclick.net/gampad/clk?id=48897511&iu=/4140/ostg.clktrk
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130924/d1998d43/attachment.html>

From gavinandresen at gmail.com  Tue Sep 24 23:35:07 2013
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Wed, 25 Sep 2013 09:35:07 +1000
Subject: [Bitcoin-development] Payment Protocol: BIP 70, 71, 72
In-Reply-To: <CANEZrP0H9TVfQ3AGv6aBmS1DUa6MTWhSFAN1Jo4eimBEBQhPZw@mail.gmail.com>
References: <CABsx9T0Ly67ZNJhoRQk0L9Q0-ucq3e=24b5Tg6GRKspRKKtP-g@mail.gmail.com>
	<521298F0.20108@petersson.at>
	<CABsx9T3b--tfUmaxJxsXyM2f3Cw4M1oX1nX8o9WkW_haBmLctA@mail.gmail.com>
	<CANEZrP2BOWk4FOUx4eVHvXmdSgx3zo_o18J8YBi2Uc_WkBAXKA@mail.gmail.com>
	<CANEZrP0H9TVfQ3AGv6aBmS1DUa6MTWhSFAN1Jo4eimBEBQhPZw@mail.gmail.com>
Message-ID: <CABsx9T0TQ6Gg=muNP-rCZxan8_nAqeJt6ErYVOfnLJKrsLs81w@mail.gmail.com>

On Tue, Sep 24, 2013 at 11:52 PM, Mike Hearn <mike at plan99.net> wrote:

> BTW, on the "make qrcodes more scannable" front -- is it too late to
> change BIP 72 so the new param is just "r" instead of "request"? Every byte
> helps when it comes to qrcodes ...
>

Not too late, assuming there are no objections. Smaller QR codes is a very
good reason to change it.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130925/d18a015a/attachment.html>

From mike at plan99.net  Wed Sep 25 09:27:03 2013
From: mike at plan99.net (Mike Hearn)
Date: Wed, 25 Sep 2013 11:27:03 +0200
Subject: [Bitcoin-development] Payment Protocol: BIP 70, 71, 72
In-Reply-To: <CABsx9T0TQ6Gg=muNP-rCZxan8_nAqeJt6ErYVOfnLJKrsLs81w@mail.gmail.com>
References: <CABsx9T0Ly67ZNJhoRQk0L9Q0-ucq3e=24b5Tg6GRKspRKKtP-g@mail.gmail.com>
	<521298F0.20108@petersson.at>
	<CABsx9T3b--tfUmaxJxsXyM2f3Cw4M1oX1nX8o9WkW_haBmLctA@mail.gmail.com>
	<CANEZrP2BOWk4FOUx4eVHvXmdSgx3zo_o18J8YBi2Uc_WkBAXKA@mail.gmail.com>
	<CANEZrP0H9TVfQ3AGv6aBmS1DUa6MTWhSFAN1Jo4eimBEBQhPZw@mail.gmail.com>
	<CABsx9T0TQ6Gg=muNP-rCZxan8_nAqeJt6ErYVOfnLJKrsLs81w@mail.gmail.com>
Message-ID: <CANEZrP2V72+-m-FOCsW3C2GBO7+=-0casKadeHncmNTYjyqJRA@mail.gmail.com>

We could also say that if protocol part (https://) is missing, it's implied
automatically. So just:

bitcoin:1abc........?r=bob.com/r/aZgR

I think that's about as small as possible without re-using the pubkey as a
token in the url.


On Wed, Sep 25, 2013 at 1:35 AM, Gavin Andresen <gavinandresen at gmail.com>wrote:

> On Tue, Sep 24, 2013 at 11:52 PM, Mike Hearn <mike at plan99.net> wrote:
>
>> BTW, on the "make qrcodes more scannable" front -- is it too late to
>> change BIP 72 so the new param is just "r" instead of "request"? Every byte
>> helps when it comes to qrcodes ...
>>
>
> Not too late, assuming there are no objections. Smaller QR codes is a very
> good reason to change it.
>
> --
> --
> Gavin Andresen
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130925/342acca1/attachment.html>

From andreas at schildbach.de  Wed Sep 25 10:28:53 2013
From: andreas at schildbach.de (Andreas Schildbach)
Date: Wed, 25 Sep 2013 12:28:53 +0200
Subject: [Bitcoin-development] Payment Protocol: BIP 70, 71, 72
In-Reply-To: <CANEZrP2V72+-m-FOCsW3C2GBO7+=-0casKadeHncmNTYjyqJRA@mail.gmail.com>
References: <CABsx9T0Ly67ZNJhoRQk0L9Q0-ucq3e=24b5Tg6GRKspRKKtP-g@mail.gmail.com>	<521298F0.20108@petersson.at>	<CABsx9T3b--tfUmaxJxsXyM2f3Cw4M1oX1nX8o9WkW_haBmLctA@mail.gmail.com>	<CANEZrP2BOWk4FOUx4eVHvXmdSgx3zo_o18J8YBi2Uc_WkBAXKA@mail.gmail.com>	<CANEZrP0H9TVfQ3AGv6aBmS1DUa6MTWhSFAN1Jo4eimBEBQhPZw@mail.gmail.com>	<CABsx9T0TQ6Gg=muNP-rCZxan8_nAqeJt6ErYVOfnLJKrsLs81w@mail.gmail.com>
	<CANEZrP2V72+-m-FOCsW3C2GBO7+=-0casKadeHncmNTYjyqJRA@mail.gmail.com>
Message-ID: <l1udst$uos$1@ger.gmane.org>

While it's good to save space, I'm at the moment not convinced that
taking a de-route via an URL is a good idea to begin with.

The main problem is trust. If you scan a QR code from a foreign phone,
you trust that that phone is owned by the one you want to send money to.
By adding the HTTP request that trust is voided.

As soon as there is a BIP70 implementation, I will begin playing with
putting the payment request directly into the QR code.


On 09/25/2013 11:27 AM, Mike Hearn wrote:
> We could also say that if protocol part (https://) is missing, it's
> implied automatically. So just:
> 
> bitcoin:1abc........?r=bob.com/r/aZgR <http://bob.com/r/aZgR>
> 
> I think that's about as small as possible without re-using the pubkey as
> a token in the url.
> 
> 
> On Wed, Sep 25, 2013 at 1:35 AM, Gavin Andresen <gavinandresen at gmail.com
> <mailto:gavinandresen at gmail.com>> wrote:
> 
>     On Tue, Sep 24, 2013 at 11:52 PM, Mike Hearn <mike at plan99.net
>     <mailto:mike at plan99.net>> wrote:
> 
>         BTW, on the "make qrcodes more scannable" front -- is it too
>         late to change BIP 72 so the new param is just "r" instead of
>         "request"? Every byte helps when it comes to qrcodes ...
> 
> 
>     Not too late, assuming there are no objections. Smaller QR codes is
>     a very good reason to change it.
>      
>     -- 
>     --
>     Gavin Andresen
> 
> 
> 
> 
> ------------------------------------------------------------------------------
> October Webinars: Code for Performance
> Free Intel webinars can help you accelerate application performance.
> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most from 
> the latest Intel processors and coprocessors. See abstracts and register >
> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
> 
> 
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 





From mike at plan99.net  Wed Sep 25 11:15:17 2013
From: mike at plan99.net (Mike Hearn)
Date: Wed, 25 Sep 2013 13:15:17 +0200
Subject: [Bitcoin-development] Payment Protocol: BIP 70, 71, 72
In-Reply-To: <l1udst$uos$1@ger.gmane.org>
References: <CABsx9T0Ly67ZNJhoRQk0L9Q0-ucq3e=24b5Tg6GRKspRKKtP-g@mail.gmail.com>
	<521298F0.20108@petersson.at>
	<CABsx9T3b--tfUmaxJxsXyM2f3Cw4M1oX1nX8o9WkW_haBmLctA@mail.gmail.com>
	<CANEZrP2BOWk4FOUx4eVHvXmdSgx3zo_o18J8YBi2Uc_WkBAXKA@mail.gmail.com>
	<CANEZrP0H9TVfQ3AGv6aBmS1DUa6MTWhSFAN1Jo4eimBEBQhPZw@mail.gmail.com>
	<CABsx9T0TQ6Gg=muNP-rCZxan8_nAqeJt6ErYVOfnLJKrsLs81w@mail.gmail.com>
	<CANEZrP2V72+-m-FOCsW3C2GBO7+=-0casKadeHncmNTYjyqJRA@mail.gmail.com>
	<l1udst$uos$1@ger.gmane.org>
Message-ID: <CANEZrP03KsGHvGqcNT1Qs6qkJ4i050CPjwvGqTRRhbdkgMf_dA@mail.gmail.com>

It won't fit. But I don't see the logic. A URI contains instructions for
making a payment. If that instruction is "pay to this address" or "download
this file and do what you find there", it's no different unless there's
potential for a MITM attack. If the request URL is HTTPS or a secured
Bluetooth connection then there's no such possibility.




On Wed, Sep 25, 2013 at 12:28 PM, Andreas Schildbach
<andreas at schildbach.de>wrote:

> While it's good to save space, I'm at the moment not convinced that
> taking a de-route via an URL is a good idea to begin with.
>
> The main problem is trust. If you scan a QR code from a foreign phone,
> you trust that that phone is owned by the one you want to send money to.
> By adding the HTTP request that trust is voided.
>
> As soon as there is a BIP70 implementation, I will begin playing with
> putting the payment request directly into the QR code.
>
>
> On 09/25/2013 11:27 AM, Mike Hearn wrote:
> > We could also say that if protocol part (https://) is missing, it's
> > implied automatically. So just:
> >
> > bitcoin:1abc........?r=bob.com/r/aZgR <http://bob.com/r/aZgR>
> >
> > I think that's about as small as possible without re-using the pubkey as
> > a token in the url.
> >
> >
> > On Wed, Sep 25, 2013 at 1:35 AM, Gavin Andresen <gavinandresen at gmail.com
> > <mailto:gavinandresen at gmail.com>> wrote:
> >
> >     On Tue, Sep 24, 2013 at 11:52 PM, Mike Hearn <mike at plan99.net
> >     <mailto:mike at plan99.net>> wrote:
> >
> >         BTW, on the "make qrcodes more scannable" front -- is it too
> >         late to change BIP 72 so the new param is just "r" instead of
> >         "request"? Every byte helps when it comes to qrcodes ...
> >
> >
> >     Not too late, assuming there are no objections. Smaller QR codes is
> >     a very good reason to change it.
> >
> >     --
> >     --
> >     Gavin Andresen
> >
> >
> >
> >
> >
> ------------------------------------------------------------------------------
> > October Webinars: Code for Performance
> > Free Intel webinars can help you accelerate application performance.
> > Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
> from
> > the latest Intel processors and coprocessors. See abstracts and register
> >
> >
> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
> >
> >
> >
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
>
>
>
>
> ------------------------------------------------------------------------------
> October Webinars: Code for Performance
> Free Intel webinars can help you accelerate application performance.
> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
> from
> the latest Intel processors and coprocessors. See abstracts and register >
> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130925/a27c210f/attachment.html>

From andreas at schildbach.de  Wed Sep 25 11:33:09 2013
From: andreas at schildbach.de (Andreas Schildbach)
Date: Wed, 25 Sep 2013 13:33:09 +0200
Subject: [Bitcoin-development] Payment Protocol: BIP 70, 71, 72
In-Reply-To: <CANEZrP03KsGHvGqcNT1Qs6qkJ4i050CPjwvGqTRRhbdkgMf_dA@mail.gmail.com>
References: <CABsx9T0Ly67ZNJhoRQk0L9Q0-ucq3e=24b5Tg6GRKspRKKtP-g@mail.gmail.com>	<521298F0.20108@petersson.at>	<CABsx9T3b--tfUmaxJxsXyM2f3Cw4M1oX1nX8o9WkW_haBmLctA@mail.gmail.com>	<CANEZrP2BOWk4FOUx4eVHvXmdSgx3zo_o18J8YBi2Uc_WkBAXKA@mail.gmail.com>	<CANEZrP0H9TVfQ3AGv6aBmS1DUa6MTWhSFAN1Jo4eimBEBQhPZw@mail.gmail.com>	<CABsx9T0TQ6Gg=muNP-rCZxan8_nAqeJt6ErYVOfnLJKrsLs81w@mail.gmail.com>	<CANEZrP2V72+-m-FOCsW3C2GBO7+=-0casKadeHncmNTYjyqJRA@mail.gmail.com>	<l1udst$uos$1@ger.gmane.org>
	<CANEZrP03KsGHvGqcNT1Qs6qkJ4i050CPjwvGqTRRhbdkgMf_dA@mail.gmail.com>
Message-ID: <l1uhld$d68$1@ger.gmane.org>

On 09/25/2013 01:15 PM, Mike Hearn wrote:

> It won't fit.

Why do you think that? Of course, I would skip the certificate, as its
unnecessary if you see your partner in person.

> But I don't see the logic. A URI contains instructions for
> making a payment. If that instruction is "pay to this address" or
> "download this file and do what you find there", it's no different
> unless there's potential for a MITM attack. If the request URL is HTTPS
> or a secured Bluetooth connection then there's no such possibility.

HTTPS trust is utterly broken unless you fix it by adding the
certificate or a fingerprint to the QR code. Bluetooth is not present in
every case, e.g. QR codes scanned from the web. (Also, we currently
don't have a concept of allowing both. The receiver forces you to either
use BT or HTTP.)

So yes, MITM is what I'm worrying about. When I'm scanning a QR code
from a phone, you don't have that problem (unless sophisticated optical
attacks emerge). Also, the HTTP request can fail and/or be slow, making
the whole payment process more difficult than necessary.


> On Wed, Sep 25, 2013 at 12:28 PM, Andreas Schildbach
> <andreas at schildbach.de <mailto:andreas at schildbach.de>> wrote:
> 
>     While it's good to save space, I'm at the moment not convinced that
>     taking a de-route via an URL is a good idea to begin with.
> 
>     The main problem is trust. If you scan a QR code from a foreign phone,
>     you trust that that phone is owned by the one you want to send money to.
>     By adding the HTTP request that trust is voided.
> 
>     As soon as there is a BIP70 implementation, I will begin playing with
>     putting the payment request directly into the QR code.
> 
> 
>     On 09/25/2013 11:27 AM, Mike Hearn wrote:
>     > We could also say that if protocol part (https://) is missing, it's
>     > implied automatically. So just:
>     >
>     > bitcoin:1abc........?r=bob.com/r/aZgR <http://bob.com/r/aZgR>
>     <http://bob.com/r/aZgR>
>     >
>     > I think that's about as small as possible without re-using the
>     pubkey as
>     > a token in the url.
>     >
>     >
>     > On Wed, Sep 25, 2013 at 1:35 AM, Gavin Andresen
>     <gavinandresen at gmail.com <mailto:gavinandresen at gmail.com>
>     > <mailto:gavinandresen at gmail.com <mailto:gavinandresen at gmail.com>>>
>     wrote:
>     >
>     >     On Tue, Sep 24, 2013 at 11:52 PM, Mike Hearn <mike at plan99.net
>     <mailto:mike at plan99.net>
>     >     <mailto:mike at plan99.net <mailto:mike at plan99.net>>> wrote:
>     >
>     >         BTW, on the "make qrcodes more scannable" front -- is it too
>     >         late to change BIP 72 so the new param is just "r" instead of
>     >         "request"? Every byte helps when it comes to qrcodes ...
>     >
>     >
>     >     Not too late, assuming there are no objections. Smaller QR
>     codes is
>     >     a very good reason to change it.
>     >
>     >     --
>     >     --
>     >     Gavin Andresen
>     >
>     >
>     >
>     >
>     >
>     ------------------------------------------------------------------------------
>     > October Webinars: Code for Performance
>     > Free Intel webinars can help you accelerate application performance.
>     > Explore tips for MPI, OpenMP, advanced profiling, and more. Get
>     the most from
>     > the latest Intel processors and coprocessors. See abstracts and
>     register >
>     >
>     http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
>     >
>     >
>     >
>     > _______________________________________________
>     > Bitcoin-development mailing list
>     > Bitcoin-development at lists.sourceforge.net
>     <mailto:Bitcoin-development at lists.sourceforge.net>
>     > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>     >
> 
> 
> 
>     ------------------------------------------------------------------------------
>     October Webinars: Code for Performance
>     Free Intel webinars can help you accelerate application performance.
>     Explore tips for MPI, OpenMP, advanced profiling, and more. Get the
>     most from
>     the latest Intel processors and coprocessors. See abstracts and
>     register >
>     http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
>     _______________________________________________
>     Bitcoin-development mailing list
>     Bitcoin-development at lists.sourceforge.net
>     <mailto:Bitcoin-development at lists.sourceforge.net>
>     https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> 
> 
> 
> ------------------------------------------------------------------------------
> October Webinars: Code for Performance
> Free Intel webinars can help you accelerate application performance.
> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most from 
> the latest Intel processors and coprocessors. See abstracts and register >
> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
> 
> 
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 





From melvincarvalho at gmail.com  Wed Sep 25 11:35:48 2013
From: melvincarvalho at gmail.com (Melvin Carvalho)
Date: Wed, 25 Sep 2013 13:35:48 +0200
Subject: [Bitcoin-development] Payment Protocol: BIP 70, 71, 72
In-Reply-To: <CANEZrP03KsGHvGqcNT1Qs6qkJ4i050CPjwvGqTRRhbdkgMf_dA@mail.gmail.com>
References: <CABsx9T0Ly67ZNJhoRQk0L9Q0-ucq3e=24b5Tg6GRKspRKKtP-g@mail.gmail.com>
	<521298F0.20108@petersson.at>
	<CABsx9T3b--tfUmaxJxsXyM2f3Cw4M1oX1nX8o9WkW_haBmLctA@mail.gmail.com>
	<CANEZrP2BOWk4FOUx4eVHvXmdSgx3zo_o18J8YBi2Uc_WkBAXKA@mail.gmail.com>
	<CANEZrP0H9TVfQ3AGv6aBmS1DUa6MTWhSFAN1Jo4eimBEBQhPZw@mail.gmail.com>
	<CABsx9T0TQ6Gg=muNP-rCZxan8_nAqeJt6ErYVOfnLJKrsLs81w@mail.gmail.com>
	<CANEZrP2V72+-m-FOCsW3C2GBO7+=-0casKadeHncmNTYjyqJRA@mail.gmail.com>
	<l1udst$uos$1@ger.gmane.org>
	<CANEZrP03KsGHvGqcNT1Qs6qkJ4i050CPjwvGqTRRhbdkgMf_dA@mail.gmail.com>
Message-ID: <CAKaEYhJDBqvynXpLHg6dumgtKVkLNkFPtWoS4ybHgm=p9Vvzhw@mail.gmail.com>

On 25 September 2013 13:15, Mike Hearn <mike at plan99.net> wrote:

> It won't fit. But I don't see the logic. A URI contains instructions for
> making a payment. If that instruction is "pay to this address" or "download
> this file and do what you find there", it's no different unless there's
> potential for a MITM attack. If the request URL is HTTPS or a secured
> Bluetooth connection then there's no such possibility.
>

It depends on the attacker.  I think a large entity such as a govt or big
to medium size corporation *may* be able to MITM https, of course the
incentive to do so is probably not there ...


>
>
>
>
> On Wed, Sep 25, 2013 at 12:28 PM, Andreas Schildbach <
> andreas at schildbach.de> wrote:
>
>> While it's good to save space, I'm at the moment not convinced that
>> taking a de-route via an URL is a good idea to begin with.
>>
>> The main problem is trust. If you scan a QR code from a foreign phone,
>> you trust that that phone is owned by the one you want to send money to.
>> By adding the HTTP request that trust is voided.
>>
>> As soon as there is a BIP70 implementation, I will begin playing with
>> putting the payment request directly into the QR code.
>>
>>
>> On 09/25/2013 11:27 AM, Mike Hearn wrote:
>> > We could also say that if protocol part (https://) is missing, it's
>> > implied automatically. So just:
>> >
>> > bitcoin:1abc........?r=bob.com/r/aZgR <http://bob.com/r/aZgR>
>> >
>> > I think that's about as small as possible without re-using the pubkey as
>> > a token in the url.
>> >
>> >
>> > On Wed, Sep 25, 2013 at 1:35 AM, Gavin Andresen <
>> gavinandresen at gmail.com
>> > <mailto:gavinandresen at gmail.com>> wrote:
>> >
>> >     On Tue, Sep 24, 2013 at 11:52 PM, Mike Hearn <mike at plan99.net
>> >     <mailto:mike at plan99.net>> wrote:
>> >
>> >         BTW, on the "make qrcodes more scannable" front -- is it too
>> >         late to change BIP 72 so the new param is just "r" instead of
>> >         "request"? Every byte helps when it comes to qrcodes ...
>> >
>> >
>> >     Not too late, assuming there are no objections. Smaller QR codes is
>> >     a very good reason to change it.
>> >
>> >     --
>> >     --
>> >     Gavin Andresen
>> >
>> >
>> >
>> >
>> >
>> ------------------------------------------------------------------------------
>> > October Webinars: Code for Performance
>> > Free Intel webinars can help you accelerate application performance.
>> > Explore tips for MPI, OpenMP, advanced profiling, and more. Get the
>> most from
>> > the latest Intel processors and coprocessors. See abstracts and
>> register >
>> >
>> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
>> >
>> >
>> >
>> > _______________________________________________
>> > Bitcoin-development mailing list
>> > Bitcoin-development at lists.sourceforge.net
>> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >
>>
>>
>>
>>
>> ------------------------------------------------------------------------------
>> October Webinars: Code for Performance
>> Free Intel webinars can help you accelerate application performance.
>> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
>> from
>> the latest Intel processors and coprocessors. See abstracts and register >
>>
>> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
>
> ------------------------------------------------------------------------------
> October Webinars: Code for Performance
> Free Intel webinars can help you accelerate application performance.
> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
> from
> the latest Intel processors and coprocessors. See abstracts and register >
> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130925/55e2d8b1/attachment.html>

From mike at plan99.net  Wed Sep 25 11:45:02 2013
From: mike at plan99.net (Mike Hearn)
Date: Wed, 25 Sep 2013 13:45:02 +0200
Subject: [Bitcoin-development] Payment Protocol: BIP 70, 71, 72
In-Reply-To: <l1uhld$d68$1@ger.gmane.org>
References: <CABsx9T0Ly67ZNJhoRQk0L9Q0-ucq3e=24b5Tg6GRKspRKKtP-g@mail.gmail.com>
	<521298F0.20108@petersson.at>
	<CABsx9T3b--tfUmaxJxsXyM2f3Cw4M1oX1nX8o9WkW_haBmLctA@mail.gmail.com>
	<CANEZrP2BOWk4FOUx4eVHvXmdSgx3zo_o18J8YBi2Uc_WkBAXKA@mail.gmail.com>
	<CANEZrP0H9TVfQ3AGv6aBmS1DUa6MTWhSFAN1Jo4eimBEBQhPZw@mail.gmail.com>
	<CABsx9T0TQ6Gg=muNP-rCZxan8_nAqeJt6ErYVOfnLJKrsLs81w@mail.gmail.com>
	<CANEZrP2V72+-m-FOCsW3C2GBO7+=-0casKadeHncmNTYjyqJRA@mail.gmail.com>
	<l1udst$uos$1@ger.gmane.org>
	<CANEZrP03KsGHvGqcNT1Qs6qkJ4i050CPjwvGqTRRhbdkgMf_dA@mail.gmail.com>
	<l1uhld$d68$1@ger.gmane.org>
Message-ID: <CANEZrP2ZbSUvNk+0bHCWw40r00D8ja-crrZPjvN0mgG+NaD52w@mail.gmail.com>

On Wed, Sep 25, 2013 at 1:33 PM, Andreas Schildbach
<andreas at schildbach.de>wrote:

> Why do you think that? Of course, I would skip the certificate, as its
> unnecessary if you see your partner in person.
>

OK, it might fit if you don't use any of the features the protocol provides
:) You can try it here:

https://bitcoincore.org/~gavin/createpaymentrequest.php


> HTTPS trust is utterly broken unless you fix it by adding the
>
certificate or a fingerprint to the QR code.
>

It's not "utterly broken", that's over-dramatic. It's just the best that
can be done with todays technology. I wrote about the SSL PKI and how it's
being upgraded here:

https://bitcointalk.org/index.php?topic=300809.0

If you're thinking about governments and so on subverting CA's, then there
is a plan for handling that (outside the Bitcoin world) called certificate
transparency which is being implemented now.

Now when you are getting a QR code from the web, it's already being served
over HTTPS. So if you're up against an attacker who can break a CA in order
to steal your money, then you already lose, the QRcode itself as MITMd.

In the Bluetooth case we might have to keep the address around and use it
to do ECDHE or something like that. The current BT support doesn't need
that because it's just blasting out a tx, the entire protocol is write
only. Once it's reading data as well then it'll need a custom security
layer.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130925/4bbd61a3/attachment.html>

From andreas at schildbach.de  Wed Sep 25 11:59:52 2013
From: andreas at schildbach.de (Andreas Schildbach)
Date: Wed, 25 Sep 2013 13:59:52 +0200
Subject: [Bitcoin-development] Payment Protocol: BIP 70, 71, 72
In-Reply-To: <CANEZrP2ZbSUvNk+0bHCWw40r00D8ja-crrZPjvN0mgG+NaD52w@mail.gmail.com>
References: <CABsx9T0Ly67ZNJhoRQk0L9Q0-ucq3e=24b5Tg6GRKspRKKtP-g@mail.gmail.com>	<521298F0.20108@petersson.at>	<CABsx9T3b--tfUmaxJxsXyM2f3Cw4M1oX1nX8o9WkW_haBmLctA@mail.gmail.com>	<CANEZrP2BOWk4FOUx4eVHvXmdSgx3zo_o18J8YBi2Uc_WkBAXKA@mail.gmail.com>	<CANEZrP0H9TVfQ3AGv6aBmS1DUa6MTWhSFAN1Jo4eimBEBQhPZw@mail.gmail.com>	<CABsx9T0TQ6Gg=muNP-rCZxan8_nAqeJt6ErYVOfnLJKrsLs81w@mail.gmail.com>	<CANEZrP2V72+-m-FOCsW3C2GBO7+=-0casKadeHncmNTYjyqJRA@mail.gmail.com>	<l1udst$uos$1@ger.gmane.org>	<CANEZrP03KsGHvGqcNT1Qs6qkJ4i050CPjwvGqTRRhbdkgMf_dA@mail.gmail.com>	<l1uhld$d68$1@ger.gmane.org>
	<CANEZrP2ZbSUvNk+0bHCWw40r00D8ja-crrZPjvN0mgG+NaD52w@mail.gmail.com>
Message-ID: <l1uj7g$vds$1@ger.gmane.org>

On 09/25/2013 01:45 PM, Mike Hearn wrote:

> OK, it might fit if you don't use any of the features the protocol
> provides :)

Now you're dver-dramaticing (-:

I'm just skipping one feature which I think is useless for QR codes
scanned in person.

> You can try it here:

Thanks. A typical request would be around 60 bytes, which should produce
an URL with around 100 chars. That should be fine for scanning, but I
will experiment.

> If you're thinking about governments and so on subverting CA's, then
> there is a plan for handling that (outside the Bitcoin world) called
> certificate transparency which is being implemented now.

Good to hear. Let's see if it gets momentum.

> Now when you are getting a QR code from the web, it's already being
> served over HTTPS. So if you're up against an attacker who can break a
> CA in order to steal your money, then you already lose, the QRcode
> itself as MITMd.

Sure. I was talking about QR codes scanned in person.

> In the Bluetooth case we might have to keep the address around and use
> it to do ECDHE or something like that.

Yeah, will look at that as soon as we're implementing the payment
protocol fully.





From jgarzik at bitpay.com  Wed Sep 25 14:26:48 2013
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Wed, 25 Sep 2013 10:26:48 -0400
Subject: [Bitcoin-development] Payment Protocol: BIP 70, 71, 72
In-Reply-To: <l1udst$uos$1@ger.gmane.org>
References: <CABsx9T0Ly67ZNJhoRQk0L9Q0-ucq3e=24b5Tg6GRKspRKKtP-g@mail.gmail.com>
	<521298F0.20108@petersson.at>
	<CABsx9T3b--tfUmaxJxsXyM2f3Cw4M1oX1nX8o9WkW_haBmLctA@mail.gmail.com>
	<CANEZrP2BOWk4FOUx4eVHvXmdSgx3zo_o18J8YBi2Uc_WkBAXKA@mail.gmail.com>
	<CANEZrP0H9TVfQ3AGv6aBmS1DUa6MTWhSFAN1Jo4eimBEBQhPZw@mail.gmail.com>
	<CABsx9T0TQ6Gg=muNP-rCZxan8_nAqeJt6ErYVOfnLJKrsLs81w@mail.gmail.com>
	<CANEZrP2V72+-m-FOCsW3C2GBO7+=-0casKadeHncmNTYjyqJRA@mail.gmail.com>
	<l1udst$uos$1@ger.gmane.org>
Message-ID: <CAJHLa0O=Os_459vzeYAMHait8W4y4Sot9ab-YPhHS=CXfpMotg@mail.gmail.com>

On Wed, Sep 25, 2013 at 6:28 AM, Andreas Schildbach
<andreas at schildbach.de> wrote:
> As soon as there is a BIP70 implementation, I will begin playing with
> putting the payment request directly into the QR code.

You may test with Bitcoin-QT right now.

-- 
Jeff Garzik
Senior Software Engineer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From jgarzik at bitpay.com  Wed Sep 25 14:31:19 2013
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Wed, 25 Sep 2013 10:31:19 -0400
Subject: [Bitcoin-development] Payment Protocol: BIP 70, 71, 72
In-Reply-To: <l1uj7g$vds$1@ger.gmane.org>
References: <CABsx9T0Ly67ZNJhoRQk0L9Q0-ucq3e=24b5Tg6GRKspRKKtP-g@mail.gmail.com>
	<521298F0.20108@petersson.at>
	<CABsx9T3b--tfUmaxJxsXyM2f3Cw4M1oX1nX8o9WkW_haBmLctA@mail.gmail.com>
	<CANEZrP2BOWk4FOUx4eVHvXmdSgx3zo_o18J8YBi2Uc_WkBAXKA@mail.gmail.com>
	<CANEZrP0H9TVfQ3AGv6aBmS1DUa6MTWhSFAN1Jo4eimBEBQhPZw@mail.gmail.com>
	<CABsx9T0TQ6Gg=muNP-rCZxan8_nAqeJt6ErYVOfnLJKrsLs81w@mail.gmail.com>
	<CANEZrP2V72+-m-FOCsW3C2GBO7+=-0casKadeHncmNTYjyqJRA@mail.gmail.com>
	<l1udst$uos$1@ger.gmane.org>
	<CANEZrP03KsGHvGqcNT1Qs6qkJ4i050CPjwvGqTRRhbdkgMf_dA@mail.gmail.com>
	<l1uhld$d68$1@ger.gmane.org>
	<CANEZrP2ZbSUvNk+0bHCWw40r00D8ja-crrZPjvN0mgG+NaD52w@mail.gmail.com>
	<l1uj7g$vds$1@ger.gmane.org>
Message-ID: <CAJHLa0NbEjnQ2V8HPjVfC_mZ33ojMBMQP2i90KvmEsZik7h3kA@mail.gmail.com>

BitPay experimented with QR codes in low light, restaurant and other
conditions.  QR codes become difficult to use even at 100 chars.

On the merchant side, we prefer a short URL that speaks payment
protocol if visited via bitcoin client, but will gracefully work if
scanned by a phone with zero bitcoin support -- you will simply be
redirected to a BitPay invoice page for a normal browser.



On Wed, Sep 25, 2013 at 7:59 AM, Andreas Schildbach
<andreas at schildbach.de> wrote:
> On 09/25/2013 01:45 PM, Mike Hearn wrote:
>
>> OK, it might fit if you don't use any of the features the protocol
>> provides :)
>
> Now you're dver-dramaticing (-:
>
> I'm just skipping one feature which I think is useless for QR codes
> scanned in person.
>
>> You can try it here:
>
> Thanks. A typical request would be around 60 bytes, which should produce
> an URL with around 100 chars. That should be fine for scanning, but I
> will experiment.
>
>> If you're thinking about governments and so on subverting CA's, then
>> there is a plan for handling that (outside the Bitcoin world) called
>> certificate transparency which is being implemented now.
>
> Good to hear. Let's see if it gets momentum.
>
>> Now when you are getting a QR code from the web, it's already being
>> served over HTTPS. So if you're up against an attacker who can break a
>> CA in order to steal your money, then you already lose, the QRcode
>> itself as MITMd.
>
> Sure. I was talking about QR codes scanned in person.
>
>> In the Bluetooth case we might have to keep the address around and use
>> it to do ECDHE or something like that.
>
> Yeah, will look at that as soon as we're implementing the payment
> protocol fully.
>
>
>
> ------------------------------------------------------------------------------
> October Webinars: Code for Performance
> Free Intel webinars can help you accelerate application performance.
> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most from
> the latest Intel processors and coprocessors. See abstracts and register >
> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



-- 
Jeff Garzik
Senior Software Engineer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From mike at plan99.net  Wed Sep 25 14:38:58 2013
From: mike at plan99.net (Mike Hearn)
Date: Wed, 25 Sep 2013 16:38:58 +0200
Subject: [Bitcoin-development] Payment Protocol: BIP 70, 71, 72
In-Reply-To: <CAJHLa0NbEjnQ2V8HPjVfC_mZ33ojMBMQP2i90KvmEsZik7h3kA@mail.gmail.com>
References: <CABsx9T0Ly67ZNJhoRQk0L9Q0-ucq3e=24b5Tg6GRKspRKKtP-g@mail.gmail.com>
	<521298F0.20108@petersson.at>
	<CABsx9T3b--tfUmaxJxsXyM2f3Cw4M1oX1nX8o9WkW_haBmLctA@mail.gmail.com>
	<CANEZrP2BOWk4FOUx4eVHvXmdSgx3zo_o18J8YBi2Uc_WkBAXKA@mail.gmail.com>
	<CANEZrP0H9TVfQ3AGv6aBmS1DUa6MTWhSFAN1Jo4eimBEBQhPZw@mail.gmail.com>
	<CABsx9T0TQ6Gg=muNP-rCZxan8_nAqeJt6ErYVOfnLJKrsLs81w@mail.gmail.com>
	<CANEZrP2V72+-m-FOCsW3C2GBO7+=-0casKadeHncmNTYjyqJRA@mail.gmail.com>
	<l1udst$uos$1@ger.gmane.org>
	<CANEZrP03KsGHvGqcNT1Qs6qkJ4i050CPjwvGqTRRhbdkgMf_dA@mail.gmail.com>
	<l1uhld$d68$1@ger.gmane.org>
	<CANEZrP2ZbSUvNk+0bHCWw40r00D8ja-crrZPjvN0mgG+NaD52w@mail.gmail.com>
	<l1uj7g$vds$1@ger.gmane.org>
	<CAJHLa0NbEjnQ2V8HPjVfC_mZ33ojMBMQP2i90KvmEsZik7h3kA@mail.gmail.com>
Message-ID: <CANEZrP3KJL1+4ks7VNMDSzNtWGP-5B7fJemD3m-TPQVBAwc_jw@mail.gmail.com>

Low light shouldn't be an issue for QRcodes generated by phones. They have
backlit screens that should always be bright enough. I can see how it might
be an issue for printed codes.

If your phone has no Bitcoin app installed then being redirected to an
invoice page is pretty useless, you still won't be able to pay the bill no
matter what (where do you get the money from?). If they are just raw HTTP
URLs then it means the effect of scanning a QRcode with a standalone
scanner app is different to scanning it inside the wallet, which is unlike
all other uses of QRcodes I know of. So I'm not really convinced by that UX
yet. Perhaps we can thrash it out in Amsterdam. Right now I'm thinking
QRcodes should always contain bitcoin URIs.


On Wed, Sep 25, 2013 at 4:31 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:

> BitPay experimented with QR codes in low light, restaurant and other
> conditions.  QR codes become difficult to use even at 100 chars.
>
> On the merchant side, we prefer a short URL that speaks payment
> protocol if visited via bitcoin client, but will gracefully work if
> scanned by a phone with zero bitcoin support -- you will simply be
> redirected to a BitPay invoice page for a normal browser.
>
>
>
> On Wed, Sep 25, 2013 at 7:59 AM, Andreas Schildbach
> <andreas at schildbach.de> wrote:
> > On 09/25/2013 01:45 PM, Mike Hearn wrote:
> >
> >> OK, it might fit if you don't use any of the features the protocol
> >> provides :)
> >
> > Now you're dver-dramaticing (-:
> >
> > I'm just skipping one feature which I think is useless for QR codes
> > scanned in person.
> >
> >> You can try it here:
> >
> > Thanks. A typical request would be around 60 bytes, which should produce
> > an URL with around 100 chars. That should be fine for scanning, but I
> > will experiment.
> >
> >> If you're thinking about governments and so on subverting CA's, then
> >> there is a plan for handling that (outside the Bitcoin world) called
> >> certificate transparency which is being implemented now.
> >
> > Good to hear. Let's see if it gets momentum.
> >
> >> Now when you are getting a QR code from the web, it's already being
> >> served over HTTPS. So if you're up against an attacker who can break a
> >> CA in order to steal your money, then you already lose, the QRcode
> >> itself as MITMd.
> >
> > Sure. I was talking about QR codes scanned in person.
> >
> >> In the Bluetooth case we might have to keep the address around and use
> >> it to do ECDHE or something like that.
> >
> > Yeah, will look at that as soon as we're implementing the payment
> > protocol fully.
> >
> >
> >
> >
> ------------------------------------------------------------------------------
> > October Webinars: Code for Performance
> > Free Intel webinars can help you accelerate application performance.
> > Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
> from
> > the latest Intel processors and coprocessors. See abstracts and register
> >
> >
> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
> --
> Jeff Garzik
> Senior Software Engineer and open source evangelist
> BitPay, Inc.      https://bitpay.com/
>
>
> ------------------------------------------------------------------------------
> October Webinars: Code for Performance
> Free Intel webinars can help you accelerate application performance.
> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
> from
> the latest Intel processors and coprocessors. See abstracts and register >
> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130925/f9ad5c64/attachment.html>

From drwho at virtadpt.net  Wed Sep 25 16:12:45 2013
From: drwho at virtadpt.net (The Doctor)
Date: Wed, 25 Sep 2013 12:12:45 -0400
Subject: [Bitcoin-development] Payment Protocol: BIP 70, 71, 72
In-Reply-To: <CAKaEYhJDBqvynXpLHg6dumgtKVkLNkFPtWoS4ybHgm=p9Vvzhw@mail.gmail.com>
References: <CABsx9T0Ly67ZNJhoRQk0L9Q0-ucq3e=24b5Tg6GRKspRKKtP-g@mail.gmail.com>
	<521298F0.20108@petersson.at>
	<CABsx9T3b--tfUmaxJxsXyM2f3Cw4M1oX1nX8o9WkW_haBmLctA@mail.gmail.com>
	<CANEZrP2BOWk4FOUx4eVHvXmdSgx3zo_o18J8YBi2Uc_WkBAXKA@mail.gmail.com>
	<CANEZrP0H9TVfQ3AGv6aBmS1DUa6MTWhSFAN1Jo4eimBEBQhPZw@mail.gmail.com>
	<CABsx9T0TQ6Gg=muNP-rCZxan8_nAqeJt6ErYVOfnLJKrsLs81w@mail.gmail.com>
	<CANEZrP2V72+-m-FOCsW3C2GBO7+=-0casKadeHncmNTYjyqJRA@mail.gmail.com>
	<l1udst$uos$1@ger.gmane.org>
	<CANEZrP03KsGHvGqcNT1Qs6qkJ4i050CPjwvGqTRRhbdkgMf_dA@mail.gmail.com>
	<CAKaEYhJDBqvynXpLHg6dumgtKVkLNkFPtWoS4ybHgm=p9Vvzhw@mail.gmail.com>
Message-ID: <52430B7D.70900@virtadpt.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 09/25/2013 07:35 AM, Melvin Carvalho wrote:

> It depends on the attacker.  I think a large entity such as a govt
> or big to medium size corporation *may* be able to MITM https, of
> course the incentive to do so is probably not there ...

DLP (data loss prevention) products usually have MITM capability, to
make sure that proprietary information isn't being exfiltrated.  Also,
some companies have full packet capture policies.  The technology is
out there and people buy and use it.  Whether or not they're going to
care about Bitcoin URIs in the short term, I don't know.

Some of the companies documented here have such products:

http://bluecabinet.info/wiki/Blue_cabinet#List_of_companies

You are correct in that the incentive to carry out MITM attacks in
this use case may not be there.  However, detecting transactions may
be more useful to an attacker than meddling with them.

- -- 
The Doctor [412/724/301/703] [ZS]
Developer, Project Byzantium: http://project-byzantium.org/

PGP: 0x807B17C1 / 7960 1CDC 85C9 0B63 8D9F  DD89 3BD8 FF2B 807B 17C1
WWW: https://drwho.virtadpt.net/

"Shiloh?  Is your name Shiloh?  Can I talk to you?"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.20 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iEYEARECAAYFAlJDC30ACgkQO9j/K4B7F8FungCgyQtkyiQIekhlv1/Nqdd/JAIV
3EgAoKW8wTOI11lEq0ieOsRiQmnkM9w6
=W50W
-----END PGP SIGNATURE-----



From pete at petertodd.org  Thu Sep 26 06:37:19 2013
From: pete at petertodd.org (Peter Todd)
Date: Thu, 26 Sep 2013 02:37:19 -0400
Subject: [Bitcoin-development] Payment Protocol: BIP 70, 71, 72
In-Reply-To: <CAKaEYhJDBqvynXpLHg6dumgtKVkLNkFPtWoS4ybHgm=p9Vvzhw@mail.gmail.com>
References: <CABsx9T0Ly67ZNJhoRQk0L9Q0-ucq3e=24b5Tg6GRKspRKKtP-g@mail.gmail.com>
	<521298F0.20108@petersson.at>
	<CABsx9T3b--tfUmaxJxsXyM2f3Cw4M1oX1nX8o9WkW_haBmLctA@mail.gmail.com>
	<CANEZrP2BOWk4FOUx4eVHvXmdSgx3zo_o18J8YBi2Uc_WkBAXKA@mail.gmail.com>
	<CANEZrP0H9TVfQ3AGv6aBmS1DUa6MTWhSFAN1Jo4eimBEBQhPZw@mail.gmail.com>
	<CABsx9T0TQ6Gg=muNP-rCZxan8_nAqeJt6ErYVOfnLJKrsLs81w@mail.gmail.com>
	<CANEZrP2V72+-m-FOCsW3C2GBO7+=-0casKadeHncmNTYjyqJRA@mail.gmail.com>
	<l1udst$uos$1@ger.gmane.org>
	<CANEZrP03KsGHvGqcNT1Qs6qkJ4i050CPjwvGqTRRhbdkgMf_dA@mail.gmail.com>
	<CAKaEYhJDBqvynXpLHg6dumgtKVkLNkFPtWoS4ybHgm=p9Vvzhw@mail.gmail.com>
Message-ID: <20130926063719.GA13640@savin>

On Wed, Sep 25, 2013 at 01:35:48PM +0200, Melvin Carvalho wrote:
> On 25 September 2013 13:15, Mike Hearn <mike at plan99.net> wrote:
> 
> > It won't fit. But I don't see the logic. A URI contains instructions for
> > making a payment. If that instruction is "pay to this address" or "download
> > this file and do what you find there", it's no different unless there's
> > potential for a MITM attack. If the request URL is HTTPS or a secured
> > Bluetooth connection then there's no such possibility.
> >
> 
> It depends on the attacker.  I think a large entity such as a govt or big
> to medium size corporation *may* be able to MITM https, of course the
> incentive to do so is probably not there ...

...until the Bitcoin payment protocol showed up and let anyone with the
ability to MITM https turn that ability into untraceable cash.

I won't be at all surprised if one of the most valuable things to come
out of the payment protocol using the SSL PKI infrastructure is to give
us a good understanding of exactly how it's broken, and to give everyone
involved good reasons to fix it.

Even if the flaws of SSL PKI were exploited as a way to harm bitcoin by
governments and other large players - and SSL PKI remained unfixed - I'd
much rather have that solid evidence that it was broken than not.

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130926/e942454d/attachment.sig>

From melvincarvalho at gmail.com  Fri Sep 27 23:41:45 2013
From: melvincarvalho at gmail.com (Melvin Carvalho)
Date: Sat, 28 Sep 2013 01:41:45 +0200
Subject: [Bitcoin-development] smart contracts -- possible use case? yes or
	no?
Message-ID: <CAKaEYhLvqT6nkbupEEgR1d9dMP4-pA7xQbBqPDbREiDDV7c0rQ@mail.gmail.com>

We all love bitcoin's ability to transfer value in real time across borders.

But the regulatory environment in many geographical regions in uncertain.
Do we need to pay capital gains?   Do we need to pay a sales taxs etc. etc.

At this point bitcoin is small enough for this to not be a huge issue, but
one day that may change (maybe we hope!).

So my idea is to voluntarily pre empt legislation by giving donations to
govt (aka taxation) for bitcoin service providers.

However, there is something of a problem with voluntary donations.  Most
people are not satisfied with the way they are spent.  In the UK a recent
survey said that only 18% of people thought that tax money was wisely
spent.  This is bad for govt., bad for people, and bad for the trusted
relationship.

Can we fix it?  Maybe we smart contract and voluntary donations it's
possible!

So let's say I run a business and I make 1 million euros.  I wish to donate
10% of my profits to society.  But let's say I dont want that money to go
to wars of aggression, but rather, to the fire de[department.

So we set up a smart contract that is only "cashable" if the money goes to
the right place (verified by an oracle).

At this point everyone wins.  The business person is happy to make a
contribution.  The govt. is happy that it gets more revenue.  The fire
dept. is happy that it has revenue to do its work.  And everything has gone
to the right place in a kind of democratic way.

Over time if it takes off, this could provide revenue for many essential
services that are needed by people, in a way that allows more democratic
freedom of choice.

So my question is whether it may be possible to use smart contracts to
achieve a better democracy that is good for people, good for govt, and good
for innovation?  My hope is that the answer is ...

"Yes We Can"

:)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130928/45394d5b/attachment.html>

From w at grabhive.com  Sat Sep 28 16:22:51 2013
From: w at grabhive.com (Wendell)
Date: Sat, 28 Sep 2013 18:22:51 +0200
Subject: [Bitcoin-development] Introducing Hive, a new wallet for Mac OS X
Message-ID: <47608B02-CF00-4AA6-BDFE-0EE09C7E2DBF@grabhive.com>

Hi everyone,

We have pushed out our first test release of Hive, a new OS X wallet focused on usability and discovery:
https://bitcointalk.org/index.php?topic=304060

Hive is powered by a new version of our BitcoinKit.framework, updated recently with bitcoinj support.

Memory of a famous Reid Hoffman quote implores us to reveal that Hive is still missing _many_ basic features. This is not a release that you should give to anyone for serious use. We wanted to get the ball rolling with the community as early as possible, to gather feedback -- and hopefully a little assistance!

Thanks to everyone at Bitcoin Europe 2013 for the feedback and moral support!

-wendell

PS- If you're interested in including an app for your Bitcoin-supporting service in Hive, please be in touch!

grabhive.com | twitter.com/grabhive | gpg: 6C0C9411

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 841 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130928/7aef2b72/attachment.sig>

From rob.golding at astutium.com  Sat Sep 28 20:15:34 2013
From: rob.golding at astutium.com (rob.golding at astutium.com)
Date: Sat, 28 Sep 2013 21:15:34 +0100
Subject: [Bitcoin-development]
 =?utf-8?q?smart_contracts_--_possible_use_c?=
 =?utf-8?q?ase=3F_yes_or_no=3F?=
In-Reply-To: <CAKaEYhLvqT6nkbupEEgR1d9dMP4-pA7xQbBqPDbREiDDV7c0rQ@mail.gmail.com>
References: <CAKaEYhLvqT6nkbupEEgR1d9dMP4-pA7xQbBqPDbREiDDV7c0rQ@mail.gmail.com>
Message-ID: <2c70dbfc173749cf4198c591f19a7d33@astutium.com>

> But the regulatory environment in many geographical regions in
> uncertain. ? Do we need to pay capital gains??? Do we need to pay a
> sales taxs etc. etc.

In most regions it's not only 'simple' but trivial - BTC is just 
'another currency' and accounted for exactly the same way - it doens't 
matter if you sell your hose for GBP, USD, EUR, BTC or sacks of Pig 
Dung, you still have a GBP tax issue ...

> So my idea is to voluntarily pre empt legislation by giving donations
> to govt (aka taxation) for bitcoin service providers.?

You want to volunteer to pay tax ? I'd suggest stronger medication ...

> However, there is something of a problem with voluntary donations.?
> Most people are not satisfied with the way they are spent.

80% of 'donations' end up spent on 'adminsitration' and not what they 
were donated for, this is a 'greed' issue not a 'currency' issue.

> In the UK
> a recent survey said that only 18% of people thought that tax money
> was wisely spent.

Tax isn't voluntary or a donation. The 18% who think UK tax is well 
spent are the 18% of the population who get the tax money, not the 82% 
that pay it ;)

> Can we fix it?

First we kill all the politicians ...

> So let's say I run a business and I make 1 million euros.? I wish to
> donate 10% of my profits to society.? But let's say I dont want that
> money to go to wars of aggression, but rather, to the fire
> de[department.?

So give it to the FD - what you do with your post-tax profits are up to 
you ;)

> At this point everyone wins.? The business person is happy to make a
> contribution.? The govt. is happy that it gets more revenue.? The
> fire dept. is happy that it has revenue to do its work.? And
> everything has gone to the right place in a kind of democratic way.

Where does gov't come into this ? I think you're confusing 'tax' which 
you have zero control over and 'donations' which you already have 100% 
control over.

Rob



From neil at asdf.co.nz  Sun Sep 29 02:28:26 2013
From: neil at asdf.co.nz (Neil Fincham)
Date: Sun, 29 Sep 2013 15:28:26 +1300
Subject: [Bitcoin-development] smart contracts -- possible use case? yes
 or no?
In-Reply-To: <2c70dbfc173749cf4198c591f19a7d33@astutium.com>
References: <CAKaEYhLvqT6nkbupEEgR1d9dMP4-pA7xQbBqPDbREiDDV7c0rQ@mail.gmail.com>
	<2c70dbfc173749cf4198c591f19a7d33@astutium.com>
Message-ID: <CAH+ZByHs00+Cpx5bwybgV3G9=CBfHaHKg7AV9ytywKNAjFVM6g@mail.gmail.com>

I subscribe to this list so I can keep up-to date with bitcoin development,
can we keep philosophy and tax evasion out of it?

Neil


On 29 September 2013 09:15, <rob.golding at astutium.com> wrote:

> > But the regulatory environment in many geographical regions in
> > uncertain.   Do we need to pay capital gains?   Do we need to pay a
> > sales taxs etc. etc.
>
> In most regions it's not only 'simple' but trivial - BTC is just
> 'another currency' and accounted for exactly the same way - it doens't
> matter if you sell your hose for GBP, USD, EUR, BTC or sacks of Pig
> Dung, you still have a GBP tax issue ...
>
> > So my idea is to voluntarily pre empt legislation by giving donations
> > to govt (aka taxation) for bitcoin service providers.
>
> You want to volunteer to pay tax ? I'd suggest stronger medication ...
>
> > However, there is something of a problem with voluntary donations.
> > Most people are not satisfied with the way they are spent.
>
> 80% of 'donations' end up spent on 'adminsitration' and not what they
> were donated for, this is a 'greed' issue not a 'currency' issue.
>
> > In the UK
> > a recent survey said that only 18% of people thought that tax money
> > was wisely spent.
>
> Tax isn't voluntary or a donation. The 18% who think UK tax is well
> spent are the 18% of the population who get the tax money, not the 82%
> that pay it ;)
>
> > Can we fix it?
>
> First we kill all the politicians ...
>
> > So let's say I run a business and I make 1 million euros.  I wish to
> > donate 10% of my profits to society.  But let's say I dont want that
> > money to go to wars of aggression, but rather, to the fire
> > de[department.
>
> So give it to the FD - what you do with your post-tax profits are up to
> you ;)
>
> > At this point everyone wins.  The business person is happy to make a
> > contribution.  The govt. is happy that it gets more revenue.  The
> > fire dept. is happy that it has revenue to do its work.  And
> > everything has gone to the right place in a kind of democratic way.
>
> Where does gov't come into this ? I think you're confusing 'tax' which
> you have zero control over and 'donations' which you already have 100%
> control over.
>
> Rob
>
>
> ------------------------------------------------------------------------------
> October Webinars: Code for Performance
> Free Intel webinars can help you accelerate application performance.
> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
> from
> the latest Intel processors and coprocessors. See abstracts and register >
> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130929/acf2c2d6/attachment.html>

From gavinandresen at gmail.com  Sun Sep 29 08:32:10 2013
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Sun, 29 Sep 2013 18:32:10 +1000
Subject: [Bitcoin-development] smart contracts -- possible use case? yes
 or no?
In-Reply-To: <CAH+ZByHs00+Cpx5bwybgV3G9=CBfHaHKg7AV9ytywKNAjFVM6g@mail.gmail.com>
References: <CAKaEYhLvqT6nkbupEEgR1d9dMP4-pA7xQbBqPDbREiDDV7c0rQ@mail.gmail.com>
	<2c70dbfc173749cf4198c591f19a7d33@astutium.com>
	<CAH+ZByHs00+Cpx5bwybgV3G9=CBfHaHKg7AV9ytywKNAjFVM6g@mail.gmail.com>
Message-ID: <CABsx9T29T+thSeF-xVk+prfeO7ZJQbX=n=tAURqEKQsVtcBpQg@mail.gmail.com>

On Sun, Sep 29, 2013 at 12:28 PM, Neil Fincham <neil at asdf.co.nz> wrote:

> I subscribe to this list so I can keep up-to date with bitcoin
> development, can we keep philosophy and tax evasion out of it?
>

Yes, that's off-topic for this mailing list. Lets stick to technical issues
that we can solve by writing code.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130929/1705ccb0/attachment.html>

From adam at cypherspace.org  Sun Sep 29 09:37:08 2013
From: adam at cypherspace.org (Adam Back)
Date: Sun, 29 Sep 2013 11:37:08 +0200
Subject: [Bitcoin-development] smart contracts -- possible use case? yes
 or no?
In-Reply-To: <CABsx9T29T+thSeF-xVk+prfeO7ZJQbX=n=tAURqEKQsVtcBpQg@mail.gmail.com>
References: <CAKaEYhLvqT6nkbupEEgR1d9dMP4-pA7xQbBqPDbREiDDV7c0rQ@mail.gmail.com>
	<2c70dbfc173749cf4198c591f19a7d33@astutium.com>
	<CAH+ZByHs00+Cpx5bwybgV3G9=CBfHaHKg7AV9ytywKNAjFVM6g@mail.gmail.com>
	<CABsx9T29T+thSeF-xVk+prfeO7ZJQbX=n=tAURqEKQsVtcBpQg@mail.gmail.com>
Message-ID: <20130929093708.GA16561@netbook.cypherspace.org>

There are some policy decision points in the protocol (and code) that may
become centralized risks or choke points that undermine the p2p nature.  So
the extent that those can be argued to have in principle have a technical
fix, it could be quite interesting to research the necessary technology
(advanced crypto, byzantine networking argument etc) that could address
them.  eg payee/payer blacklisting by a large group of miners and "committed
transaction" proposal to address it.

However even for that type of thing I think bitcoin-dev would probably
rather focus eg on something that has reached the stage of having a BIP.  Eg
it might be better to discuss early stage or speculative ideas on
bitcointalk.org technical thread.

https://bitcointalk.org/index.php?board=6.0

taxation in particular there are examples where even the political sphere
accepts significantly anonymous taxation.  eg for europeans with certain
types of investment in a swiss bank, the swiss bank sends however many
million as a single payment across all users per european country to their
passport home country (minus 25% cut for the swiss government).  Perhaps
such things could be possible for bitcoin.  Again I think bitcoin talk would
be a good place for such a discussion if that was the OP question
indirectly.

Adam

On Sun, Sep 29, 2013 at 06:32:10PM +1000, Gavin Andresen wrote:
>   On Sun, Sep 29, 2013 at 12:28 PM, Neil Fincham <[1]neil at asdf.co.nz>
>   wrote:
>
>   I subscribe to this list so I can keep up-to date with bitcoin
>   development, can we keep philosophy and tax evasion out of it?
>
>   Yes, that's off-topic for this mailing list. Lets stick to technical
>   issues that we can solve by writing code.
>   --
>   --
>   Gavin Andresen
>
>References
>
>   1. mailto:neil at asdf.co.nz

>------------------------------------------------------------------------------
>October Webinars: Code for Performance
>Free Intel webinars can help you accelerate application performance.
>Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most from
>the latest Intel processors and coprocessors. See abstracts and register >
>http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk

>_______________________________________________
>Bitcoin-development mailing list
>Bitcoin-development at lists.sourceforge.net
>https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From melvincarvalho at gmail.com  Sun Sep 29 09:44:35 2013
From: melvincarvalho at gmail.com (Melvin Carvalho)
Date: Sun, 29 Sep 2013 11:44:35 +0200
Subject: [Bitcoin-development] smart contracts -- possible use case? yes
 or no?
In-Reply-To: <CABsx9T29T+thSeF-xVk+prfeO7ZJQbX=n=tAURqEKQsVtcBpQg@mail.gmail.com>
References: <CAKaEYhLvqT6nkbupEEgR1d9dMP4-pA7xQbBqPDbREiDDV7c0rQ@mail.gmail.com>
	<2c70dbfc173749cf4198c591f19a7d33@astutium.com>
	<CAH+ZByHs00+Cpx5bwybgV3G9=CBfHaHKg7AV9ytywKNAjFVM6g@mail.gmail.com>
	<CABsx9T29T+thSeF-xVk+prfeO7ZJQbX=n=tAURqEKQsVtcBpQg@mail.gmail.com>
Message-ID: <CAKaEYh+ud_ey_9jUZ1mq50g==wyCqNRVVLYwZySXpiqTq8x36w@mail.gmail.com>

On 29 September 2013 10:32, Gavin Andresen <gavinandresen at gmail.com> wrote:

> On Sun, Sep 29, 2013 at 12:28 PM, Neil Fincham <neil at asdf.co.nz> wrote:
>
>> I subscribe to this list so I can keep up-to date with bitcoin
>> development, can we keep philosophy and tax evasion out of it?
>>
>
> Yes, that's off-topic for this mailing list. Lets stick to technical
> issues that we can solve by writing code.
>

Hi Gavin, apologies if my post came across as off-topic.  My aim was to
present a use case, and ask whether or not it was technically feasible
using smart contracts.


>
> --
> --
> Gavin Andresen
>
>
> ------------------------------------------------------------------------------
> October Webinars: Code for Performance
> Free Intel webinars can help you accelerate application performance.
> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
> from
> the latest Intel processors and coprocessors. See abstracts and register >
> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130929/482050c2/attachment.html>

From melvincarvalho at gmail.com  Sun Sep 29 09:46:48 2013
From: melvincarvalho at gmail.com (Melvin Carvalho)
Date: Sun, 29 Sep 2013 11:46:48 +0200
Subject: [Bitcoin-development] smart contracts -- possible use case? yes
 or no?
In-Reply-To: <CAH+ZByHs00+Cpx5bwybgV3G9=CBfHaHKg7AV9ytywKNAjFVM6g@mail.gmail.com>
References: <CAKaEYhLvqT6nkbupEEgR1d9dMP4-pA7xQbBqPDbREiDDV7c0rQ@mail.gmail.com>
	<2c70dbfc173749cf4198c591f19a7d33@astutium.com>
	<CAH+ZByHs00+Cpx5bwybgV3G9=CBfHaHKg7AV9ytywKNAjFVM6g@mail.gmail.com>
Message-ID: <CAKaEYhKctyTs+dEo6KV2pSCKxSGqN3+W33P7wo57SRaSVKRQgg@mail.gmail.com>

On 29 September 2013 04:28, Neil Fincham <neil at asdf.co.nz> wrote:

> I subscribe to this list so I can keep up-to date with bitcoin
> development, can we keep philosophy and tax evasion out of it?
>

Hi Neil, perhaps I didnt present the use case clearly.  It was not about
evasion, it was about voluntary donations going to the correct place, being
verified by an oracle.  I dont wish to stray off topic, so I'll leave it at
that.


>
> Neil
>
>
> On 29 September 2013 09:15, <rob.golding at astutium.com> wrote:
>
>> > But the regulatory environment in many geographical regions in
>> > uncertain.   Do we need to pay capital gains?   Do we need to pay a
>> > sales taxs etc. etc.
>>
>> In most regions it's not only 'simple' but trivial - BTC is just
>> 'another currency' and accounted for exactly the same way - it doens't
>> matter if you sell your hose for GBP, USD, EUR, BTC or sacks of Pig
>> Dung, you still have a GBP tax issue ...
>>
>> > So my idea is to voluntarily pre empt legislation by giving donations
>> > to govt (aka taxation) for bitcoin service providers.
>>
>> You want to volunteer to pay tax ? I'd suggest stronger medication ...
>>
>> > However, there is something of a problem with voluntary donations.
>> > Most people are not satisfied with the way they are spent.
>>
>> 80% of 'donations' end up spent on 'adminsitration' and not what they
>> were donated for, this is a 'greed' issue not a 'currency' issue.
>>
>> > In the UK
>> > a recent survey said that only 18% of people thought that tax money
>> > was wisely spent.
>>
>> Tax isn't voluntary or a donation. The 18% who think UK tax is well
>> spent are the 18% of the population who get the tax money, not the 82%
>> that pay it ;)
>>
>> > Can we fix it?
>>
>> First we kill all the politicians ...
>>
>> > So let's say I run a business and I make 1 million euros.  I wish to
>> > donate 10% of my profits to society.  But let's say I dont want that
>> > money to go to wars of aggression, but rather, to the fire
>> > de[department.
>>
>> So give it to the FD - what you do with your post-tax profits are up to
>> you ;)
>>
>> > At this point everyone wins.  The business person is happy to make a
>> > contribution.  The govt. is happy that it gets more revenue.  The
>> > fire dept. is happy that it has revenue to do its work.  And
>> > everything has gone to the right place in a kind of democratic way.
>>
>> Where does gov't come into this ? I think you're confusing 'tax' which
>> you have zero control over and 'donations' which you already have 100%
>> control over.
>>
>> Rob
>>
>>
>> ------------------------------------------------------------------------------
>> October Webinars: Code for Performance
>> Free Intel webinars can help you accelerate application performance.
>> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
>> from
>> the latest Intel processors and coprocessors. See abstracts and register >
>>
>> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
>
> ------------------------------------------------------------------------------
> October Webinars: Code for Performance
> Free Intel webinars can help you accelerate application performance.
> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
> from
> the latest Intel processors and coprocessors. See abstracts and register >
> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130929/4eafafab/attachment.html>

From mike at plan99.net  Sun Sep 29 11:33:50 2013
From: mike at plan99.net (Mike Hearn)
Date: Sun, 29 Sep 2013 13:33:50 +0200
Subject: [Bitcoin-development] smart contracts -- possible use case? yes
 or no?
In-Reply-To: <CAKaEYhKctyTs+dEo6KV2pSCKxSGqN3+W33P7wo57SRaSVKRQgg@mail.gmail.com>
References: <CAKaEYhLvqT6nkbupEEgR1d9dMP4-pA7xQbBqPDbREiDDV7c0rQ@mail.gmail.com>
	<2c70dbfc173749cf4198c591f19a7d33@astutium.com>
	<CAH+ZByHs00+Cpx5bwybgV3G9=CBfHaHKg7AV9ytywKNAjFVM6g@mail.gmail.com>
	<CAKaEYhKctyTs+dEo6KV2pSCKxSGqN3+W33P7wo57SRaSVKRQgg@mail.gmail.com>
Message-ID: <CANEZrP35rLXThsNa3KDJh+D4S1c1TjJxCf8E1-8gEQPUKwFBUA@mail.gmail.com>

This kind of thing is better discussed in the dev forum of bitcointalk.org


On Sun, Sep 29, 2013 at 11:46 AM, Melvin Carvalho
<melvincarvalho at gmail.com>wrote:

>
>
>
> On 29 September 2013 04:28, Neil Fincham <neil at asdf.co.nz> wrote:
>
>> I subscribe to this list so I can keep up-to date with bitcoin
>> development, can we keep philosophy and tax evasion out of it?
>>
>
> Hi Neil, perhaps I didnt present the use case clearly.  It was not about
> evasion, it was about voluntary donations going to the correct place, being
> verified by an oracle.  I dont wish to stray off topic, so I'll leave it at
> that.
>
>
>>
>> Neil
>>
>>
>> On 29 September 2013 09:15, <rob.golding at astutium.com> wrote:
>>
>>> > But the regulatory environment in many geographical regions in
>>> > uncertain.   Do we need to pay capital gains?   Do we need to pay a
>>> > sales taxs etc. etc.
>>>
>>> In most regions it's not only 'simple' but trivial - BTC is just
>>> 'another currency' and accounted for exactly the same way - it doens't
>>> matter if you sell your hose for GBP, USD, EUR, BTC or sacks of Pig
>>> Dung, you still have a GBP tax issue ...
>>>
>>> > So my idea is to voluntarily pre empt legislation by giving donations
>>> > to govt (aka taxation) for bitcoin service providers.
>>>
>>> You want to volunteer to pay tax ? I'd suggest stronger medication ...
>>>
>>> > However, there is something of a problem with voluntary donations.
>>> > Most people are not satisfied with the way they are spent.
>>>
>>> 80% of 'donations' end up spent on 'adminsitration' and not what they
>>> were donated for, this is a 'greed' issue not a 'currency' issue.
>>>
>>> > In the UK
>>> > a recent survey said that only 18% of people thought that tax money
>>> > was wisely spent.
>>>
>>> Tax isn't voluntary or a donation. The 18% who think UK tax is well
>>> spent are the 18% of the population who get the tax money, not the 82%
>>> that pay it ;)
>>>
>>> > Can we fix it?
>>>
>>> First we kill all the politicians ...
>>>
>>> > So let's say I run a business and I make 1 million euros.  I wish to
>>> > donate 10% of my profits to society.  But let's say I dont want that
>>> > money to go to wars of aggression, but rather, to the fire
>>> > de[department.
>>>
>>> So give it to the FD - what you do with your post-tax profits are up to
>>> you ;)
>>>
>>> > At this point everyone wins.  The business person is happy to make a
>>> > contribution.  The govt. is happy that it gets more revenue.  The
>>> > fire dept. is happy that it has revenue to do its work.  And
>>> > everything has gone to the right place in a kind of democratic way.
>>>
>>> Where does gov't come into this ? I think you're confusing 'tax' which
>>> you have zero control over and 'donations' which you already have 100%
>>> control over.
>>>
>>> Rob
>>>
>>>
>>> ------------------------------------------------------------------------------
>>> October Webinars: Code for Performance
>>> Free Intel webinars can help you accelerate application performance.
>>> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
>>> from
>>> the latest Intel processors and coprocessors. See abstracts and register
>>> >
>>>
>>> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>
>>
>>
>> ------------------------------------------------------------------------------
>> October Webinars: Code for Performance
>> Free Intel webinars can help you accelerate application performance.
>> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
>> from
>> the latest Intel processors and coprocessors. See abstracts and register >
>>
>> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
>
> ------------------------------------------------------------------------------
> October Webinars: Code for Performance
> Free Intel webinars can help you accelerate application performance.
> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
> from
> the latest Intel processors and coprocessors. See abstracts and register >
> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130929/a5c36ac6/attachment.html>

From mark at monetize.io  Sun Sep 29 17:49:00 2013
From: mark at monetize.io (Mark Friedenbach)
Date: Sun, 29 Sep 2013 10:49:00 -0700
Subject: [Bitcoin-development] smart contracts -- possible use case? yes
 or no?
In-Reply-To: <20130929093708.GA16561@netbook.cypherspace.org>
References: <CAKaEYhLvqT6nkbupEEgR1d9dMP4-pA7xQbBqPDbREiDDV7c0rQ@mail.gmail.com>
	<2c70dbfc173749cf4198c591f19a7d33@astutium.com>
	<CAH+ZByHs00+Cpx5bwybgV3G9=CBfHaHKg7AV9ytywKNAjFVM6g@mail.gmail.com>
	<CABsx9T29T+thSeF-xVk+prfeO7ZJQbX=n=tAURqEKQsVtcBpQg@mail.gmail.com>
	<20130929093708.GA16561@netbook.cypherspace.org>
Message-ID: <5248680C.60404@monetize.io>

This kind of thing - providing external audits of customer accounts
without revealing private data - would be generally useful beyond
taxation. If you have any solutions, I'd be interested to hear them
(although bitcoin-dev is probably not the right place yet).

Mark

On 9/29/13 2:37 AM, Adam Back wrote:
> taxation in particular there are examples where even the political sphere
> accepts significantly anonymous taxation.  eg for europeans with certain
> types of investment in a swiss bank, the swiss bank sends however many
> million as a single payment across all users per european country to their
> passport home country (minus 25% cut for the swiss government).  Perhaps
> such things could be possible for bitcoin.  Again I think bitcoin talk would
> be a good place for such a discussion if that was the OP question
> indirectly.



From rdwnj at yahoo.com  Mon Sep 30 03:46:06 2013
From: rdwnj at yahoo.com (Ron)
Date: Sun, 29 Sep 2013 20:46:06 -0700 (PDT)
Subject: [Bitcoin-development] locks and directories
Message-ID: <1380512766.92704.YahooMailNeo@web124502.mail.ne1.yahoo.com>

Hello

Is it required, presumed, assumed, coincidence, chance or irrelevant that the three different databases in bitcoin:
1. the network addresses database, reflected in peers.dat
2. the levelDB block chain database (blocks/blknnnnn.dat, blocks/revnnnnn.dat, blocks/index/nnnnn.sst et al, chainstate/nnnnn.sst et al)
3. the Berkeley DB wallet database (db.log, wallet.dat, database/log.nnnnnnnnn1)
are all in the "datadir" directory?

I only ask since it would seem that a more mature (?) bitcoind or bitcoin-qt would optionally, like the three (databases) in separate paths or drives, etc. It would seem easier to transport, backup etc. the pieces one wants. I find the block chain database is the most important (time consuming), because of its size, to duplicate and transport in order to backup. This also attacks the "Criticism" section in 
https://en.bitcoin.it/wiki/Bitcoin-Qt

The first question is: can one backup by just looking at the dates, and just back up those files with the equal or newer dates, and the "log, current and manifest" files? An initial then incremental backups, as it were.

I am thinking of the frailties of data on OS's such as Windows in the hands of the "less than adept" shall we say. Also if one takes part in backing up one's data, one may actually have some idea where it is!

Ron
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130929/4304e379/attachment.html>

From slush at centrum.cz  Mon Sep 30 20:44:57 2013
From: slush at centrum.cz (slush)
Date: Mon, 30 Sep 2013 22:44:57 +0200
Subject: [Bitcoin-development] bitcoind stops responding
Message-ID: <CAJna-Hi+eyRnZUtHpfvod_uRCmjPOL5HS3ZZpr54yzbKRRT9-w@mail.gmail.com>

Hi,

during several weeks I'm observing more and more frequent issues with
bitcoind. The problem is that bitcoind stops responding to RPC calls, but
there's no other suspicious activity in bitcoind log, CPU usage is low,
disk I/O is standard etc.

I observed this problem with version 0.8.2, but it is still happening with
0.8.5. Originally this happen just one or twice per day. Today my
monitoring scripts restarted bitcoind more than 30x, which sounds alarming.
This happen on various backends, so it isn't a problem of one specific
node. Is there anybody else who's observing similar problem?

Thanks,
slush
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130930/bcb9dc1b/attachment.html>

From wtogami at gmail.com  Mon Sep 30 21:01:36 2013
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Mon, 30 Sep 2013 11:01:36 -1000
Subject: [Bitcoin-development] bitcoind stops responding
In-Reply-To: <CAJna-Hi+eyRnZUtHpfvod_uRCmjPOL5HS3ZZpr54yzbKRRT9-w@mail.gmail.com>
References: <CAJna-Hi+eyRnZUtHpfvod_uRCmjPOL5HS3ZZpr54yzbKRRT9-w@mail.gmail.com>
Message-ID: <CAEz79PrGKH27GkDkM2whAdOYYj6-hc954Z=9v1GanBRQA3chvA@mail.gmail.com>

https://github.com/litecoin-project/litecoin/issues/67
0.8.2 apparently was the first Bitcoin version to support RPC keepalive.
 With the 4 RPC thread limit, four keepalive connections will exhaust all
four and prevent further connections.  This issue describes a workaround
where you build with more RPC threads.


On Mon, Sep 30, 2013 at 10:44 AM, slush <slush at centrum.cz> wrote:

> Hi,
>
> during several weeks I'm observing more and more frequent issues with
> bitcoind. The problem is that bitcoind stops responding to RPC calls, but
> there's no other suspicious activity in bitcoind log, CPU usage is low,
> disk I/O is standard etc.
>
> I observed this problem with version 0.8.2, but it is still happening with
> 0.8.5. Originally this happen just one or twice per day. Today my
> monitoring scripts restarted bitcoind more than 30x, which sounds alarming.
> This happen on various backends, so it isn't a problem of one specific
> node. Is there anybody else who's observing similar problem?
>
> Thanks,
> slush
>
>
> ------------------------------------------------------------------------------
> October Webinars: Code for Performance
> Free Intel webinars can help you accelerate application performance.
> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
> from
> the latest Intel processors and coprocessors. See abstracts and register >
> http://pubads.g.doubleclick.net/gampad/clk?id=60134791&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130930/55ac7669/attachment.html>

From castiglionemaldonado at gmail.com  Mon Sep 30 22:00:14 2013
From: castiglionemaldonado at gmail.com (=?UTF-8?Q?Fatima_Castiglione_Maldonado_=E5=8F=91?=)
Date: Mon, 30 Sep 2013 19:00:14 -0300
Subject: [Bitcoin-development] bitcoind stops responding
In-Reply-To: <CAEz79PrGKH27GkDkM2whAdOYYj6-hc954Z=9v1GanBRQA3chvA@mail.gmail.com>
References: <CAJna-Hi+eyRnZUtHpfvod_uRCmjPOL5HS3ZZpr54yzbKRRT9-w@mail.gmail.com>
	<CAEz79PrGKH27GkDkM2whAdOYYj6-hc954Z=9v1GanBRQA3chvA@mail.gmail.com>
Message-ID: <CALOkD28XV-GA5LdXjWPW9wEJy8-DEbKyYk5iiWwo8kmmmtLB4w@mail.gmail.com>

Hi,
I am new on the list. I got a similar problem.

If I put "sendToAdress" transactions to bitcoind, it will accept between 1
and 3 transactions per minute, depending on the underlying machine.
If I try to send one transaction every 20 seconds or less, bitcoind stops
responding to RPC calls.

Does anybody know of any solution / fix / workaround for this?

Thanks in advance.


2013/9/30 Warren Togami Jr. <wtogami at gmail.com>

> https://github.com/litecoin-project/litecoin/issues/67
> 0.8.2 apparently was the first Bitcoin version to support RPC keepalive.
>  With the 4 RPC thread limit, four keepalive connections will exhaust all
> four and prevent further connections.  This issue describes a workaround
> where you build with more RPC threads.
>
>
> On Mon, Sep 30, 2013 at 10:44 AM, slush <slush at centrum.cz> wrote:
>
>> Hi,
>>
>> during several weeks I'm observing more and more frequent issues with
>> bitcoind. The problem is that bitcoind stops responding to RPC calls, but
>> there's no other suspicious activity in bitcoind log, CPU usage is low,
>> disk I/O is standard etc.
>>
>> I observed this problem with version 0.8.2, but it is still happening
>> with 0.8.5. Originally this happen just one or twice per day. Today my
>> monitoring scripts restarted bitcoind more than 30x, which sounds alarming.
>> This happen on various backends, so it isn't a problem of one specific
>> node. Is there anybody else who's observing similar problem?
>>
>> Thanks,
>> slush
>>
>>
>> ------------------------------------------------------------------------------
>> October Webinars: Code for Performance
>> Free Intel webinars can help you accelerate application performance.
>> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
>> from
>> the latest Intel processors and coprocessors. See abstracts and register >
>>
>> http://pubads.g.doubleclick.net/gampad/clk?id=60134791&iu=/4140/ostg.clktrk
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
>
> ------------------------------------------------------------------------------
> October Webinars: Code for Performance
> Free Intel webinars can help you accelerate application performance.
> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
> from
> the latest Intel processors and coprocessors. See abstracts and register >
> http://pubads.g.doubleclick.net/gampad/clk?id=60134791&iu=/4140/ostg.clktrk
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>


-- 
=================================
F?tima Castiglione Maldonado
castiglionemaldonado at gmail.com

                     ____
                   ,'_   |
 __________________|__|__|__
<_____                      )                _.------._
      `-----------,------.-'              ,-'          `-.
                 |    |  |              ,'                `.
                ,'    |  |            ,'                    `.
                |  _,-'  |__         /                        \
              _,'-'    `.   `---.___|_____________             \
          .--'  -----.  | _____________________   `-. -----     |
          |    ___|  |  |                      \  ,- \          |
          |    ___|  |===========================((|) |         |
          |       |  |  | _____________________/  `- /          |
          `--._ -----'  |        _________________,-' -----     |
               `.-._   ,' __.---'   |                          /
                |   `-.  |           \                        /
                `.    |  |            `.                    ,'
                 |    |  |              `.                ,'
 _____,----------`-------`-.              `-._        _,-'
<___________________________)                 `------'
                   | _|  |
                   `.____|



=================================
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130930/99f0c31a/attachment.html>

From gmaxwell at gmail.com  Mon Sep 30 22:08:01 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 30 Sep 2013 15:08:01 -0700
Subject: [Bitcoin-development] bitcoind stops responding
In-Reply-To: <CALOkD28XV-GA5LdXjWPW9wEJy8-DEbKyYk5iiWwo8kmmmtLB4w@mail.gmail.com>
References: <CAJna-Hi+eyRnZUtHpfvod_uRCmjPOL5HS3ZZpr54yzbKRRT9-w@mail.gmail.com>
	<CAEz79PrGKH27GkDkM2whAdOYYj6-hc954Z=9v1GanBRQA3chvA@mail.gmail.com>
	<CALOkD28XV-GA5LdXjWPW9wEJy8-DEbKyYk5iiWwo8kmmmtLB4w@mail.gmail.com>
Message-ID: <CAAS2fgTADRp6Z-Zcntd9EUNrJH7AdEOyK+LEFmaA0uzM6T2sug@mail.gmail.com>

On Mon, Sep 30, 2013 at 3:00 PM, Fatima Castiglione Maldonado ?
<castiglionemaldonado at gmail.com> wrote:
> I am new on the list. I got a similar problem.
> If I put "sendToAdress" transactions to bitcoind, it will accept between 1
> and 3 transactions per minute, depending on the underlying machine.
> If I try to send one transaction every 20 seconds or less, bitcoind stops
> responding to RPC calls.
>
> Does anybody know of any solution / fix / workaround for this?

This is unrelated to Slush's question.

The complexity of IsConfirmed/Ismine is exponential and starts taking
tens of seconds at a chain of a dozen unconfirmed transactions (and
growing from there)

There are some patches that change this, but since the whole network
will only average about 7tx per second, you're probably doing
something wrong if you're building great big chains of unconfirmed
transaction.  Are you aware of sendmany?



