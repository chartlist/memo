From arklan.uthoslin at gmail.com  Mon Oct  1 13:52:33 2012
From: arklan.uthoslin at gmail.com (Arklan Uth Oslin)
Date: Mon, 1 Oct 2012 07:52:33 -0600
Subject: [Bitcoin-development] Bitcoin Testing Project
In-Reply-To: <50673D69.5040105@mistfpga.net>
References: <5061F8CC.9070906@mistfpga.net>
	<1348605677.2284.2.camel@localhost.localdomain>
	<5062F4F8.6040504@mistfpga.net>
	<CA+s+GJBM4DwDoqT8RC0+SyrLYrLGZuGZSuoj7zbHunQa3kFoRA@mail.gmail.com>
	<506301AC.90101@mistfpga.net>
	<CACh7GpHFY_KUhhtk09H_oCzBtRh66artDCqz8pXNTh_ZzkAABg@mail.gmail.com>
	<50633F02.6030807@mistfpga.net>
	<CABsx9T119rT1NssV6YO8KPse3sEGHZJ-vzFFD3o=aAQ161g6-A@mail.gmail.com>
	<50673D69.5040105@mistfpga.net>
Message-ID: <CAGg41SV9nAA0ispDG4-QUnjAMprnyQrH-faGVn7buau0vj=PBw@mail.gmail.com>

Hi guys.

So, as I mentioned on the bitcointalk.org forums thread about the
foundation, I want to get involved in the QA side of bitcoin
development. I've done functional testing in the video game industry for
years. I've read all the messages in this thread, but I'm left unclear how
I can most effectively and quickly being helping out. Could I get a bit of
a directional nudge?

Arklan

----------
As long as there is light, the darkness holds no fear. And yet, even in the
deepest black, there is life. - Arklan Uth Oslin

I want to leave this world the same way I came into it: backwards and on
fire. - Arklan Uth Oslin



On Sat, Sep 29, 2012 at 12:26 PM, steve <steve at mistfpga.net> wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hi Gavin,
>
> Sorry for the delayed response, I wanted to take a couple of days to
> reflect on your email.
>
> On 26/09/2012 19:09, Gavin Andresen wrote:
>
>
> And their are other methods too.
>
>
>
> The GUI::Test package for perl will allow this to be greatly
> automated. (I have done this before on the localisation of photoshop.)
>
>
>
> this why we need detailed testscripts and plans.  so we know what has
> and hasnt been done. The more boring the task the more work that needs
> to go into testcase development.  This is the area I see as my
> greatest failing last time.  I have a large number of virtual machines
> and should have at least this work.  But we need very detailed
> testcases.  with decent testplans just downloading the software,
> syncing the block chain, syncing an existing wallet, rescanning the
> blockchain and verifying the balance would cover a large number of
> tests.  The idea behind having lots of very specific testcases is you
> get to see what tests have not been run.
>
>
>
> I understand your concern, however I have taken a couple of days to
> reflect on this and I still strongly feel that in order to make sure
> that this sticks, and is still useful in 1 years time we need to lay
> proper foundations. Those foundations are not word documents,
> spreadsheets, etc.  they are selecting the right tools for the job.
>
> We can gain so much benefit from using 3rd party software.
> (bettermeans would rock if it wasnt rotting)
>
> I am sure you could do your coding work just using vi, but an sdk
> makes it much easier and allows you to work in a more productive manner.
>
> I have had a couple of off list emails with some testers and they also
> feel that it is very important to make sure we have a sound foundation
> (mantis is so much more than just a bug reporting tool, I see the bug
> reporting functionality as secondary to the main test run
> functionality - but it doesnt have to be mantis based, we do need
> workflow and testcase software though - and proper software for this
> is much better than just a massive google doc.) however I am checking
> out some other software that has been recommended.  It will be very
> hard to change 'the process' once we have something we are used too
> (just look at the current resistance) I promise nothing will change
> for the dev team.  But test does need other tools, and processes.
>
> If you feel that strongly that I am going about this the wrong way, I
> am happy to step back and let someone else sort it out (I will still
> do all the testing I possibly can). I would feel that this would be a
> real shame and we have the chance to setup requirements to
> functionality to tests all with traceability. why not do it right from
> the start?
>
> I will open up my vps' somepoint over the next few days and you can
> see what I mean. I will setup a fake git project, and sort out the
> interactions.
>
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v2.0.17 (MingW32)
> Comment: Using GnuPG with Mozilla - http://www.enigmail.net/
>
> iQEcBAEBAgAGBQJQZz1pAAoJEFvEB9dQFvtQRLkIAJtPCkW1R9vmMPY9u4o+ET1t
> w4pV/+W2PXo2p86HnljCIPLV/cua/1I/EJp7XR7s145Nj4KZUbzHGhvUUmwDOHW2
> TGvJs+HO1bjsJfh4pWEb6PXcW3TguZxZSt5/rBAAI/5BeomSuRcZOdoV87D1xnK8
> TSlgaseWrJcpKLO30/FQA3QnH/bjJ4OBmtHp8WaOtSnfww9Zbb5VYca37O15c2U4
> 2d0RUunDg1w2kRbkKjztxr3YasSOX+07Uvj4d5Lw7zgA0U93krNWVT1Ypo94dNJ7
> 6SyKi30UuqDdJ9XxZrMB/LBVNGOLlIBNWL++ocu5GFnOn9pnw57ZMBZM5g6YDpo=
> =ekQ/
> -----END PGP SIGNATURE-----
>
>
> ------------------------------------------------------------------------------
> How fast is your code?
> 3 out of 4 devs don\\\'t know how their code performs in production.
> Find out how slow your code is with AppDynamics Lite.
> http://ad.doubleclick.net/clk;262219672;13503038;z?
> http://info.appdynamics.com/FreeJavaPerformanceDownload.html
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121001/1d4c561d/attachment.html>

From steve at mistfpga.net  Mon Oct  1 14:28:46 2012
From: steve at mistfpga.net (steve)
Date: Mon, 01 Oct 2012 15:28:46 +0100
Subject: [Bitcoin-development] Bitcoin Testing Project
In-Reply-To: <CAGg41SV9nAA0ispDG4-QUnjAMprnyQrH-faGVn7buau0vj=PBw@mail.gmail.com>
References: <5061F8CC.9070906@mistfpga.net>
	<1348605677.2284.2.camel@localhost.localdomain>
	<5062F4F8.6040504@mistfpga.net>
	<CA+s+GJBM4DwDoqT8RC0+SyrLYrLGZuGZSuoj7zbHunQa3kFoRA@mail.gmail.com>
	<506301AC.90101@mistfpga.net>
	<CACh7GpHFY_KUhhtk09H_oCzBtRh66artDCqz8pXNTh_ZzkAABg@mail.gmail.com>
	<50633F02.6030807@mistfpga.net>
	<CABsx9T119rT1NssV6YO8KPse3sEGHZJ-vzFFD3o=aAQ161g6-A@mail.gmail.com>
	<50673D69.5040105@mistfpga.net>
	<CAGg41SV9nAA0ispDG4-QUnjAMprnyQrH-faGVn7buau0vj=PBw@mail.gmail.com>
Message-ID: <5069A89E.7090003@mistfpga.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 01/10/2012 14:52, Arklan Uth Oslin wrote:
> Hi guys.
> 
> So, as I mentioned on the bitcointalk.org forums thread about the 
> foundation, I want to get involved in the QA side of bitcoin 
> development. I've done functional testing in the video game
> industry for years.

Nice one, I worked in games for quite a few years. (before getting
into finance then pentesting) there are about 6 keen testers now.
maybe we should get a bitcoin-test mailing list, where we can discuss
stuff without disturbing the dev team.

> I've read all the messages in this thread, but I'm left unclear
> how I can most effectively and quickly being helping out. Could I
> get a bit of a directional nudge?

Great question... for me I feel structure is the most important thing
to sort out first.  However we desperately need detailed testcases for
the release of a new version. - Not too much on the change log stuff,
more on the noddy stuff (as gavin points out below), downloading and
making sure it works on a non dev machine, make sure the wallet isnt
overwritten, etc.) doing games qa I imagine this would be an ideal
place for you to start.  I have a MSDN and TechNet licence so if you
need some reference ms virtual machines I can help you out.

However we need some testcase software.  Please check out what was
done on bettermeans for the stuff I was planning out...

It details everything from recompense and testcases. bettermeans kinda
died a death though...

check out:

Bitcoin over all-
https://secure.bettermeans.com/projects/4180/wiki/Page_index
discussion
https://secure.bettermeans.com/projects/4180/boards

0.7
https://secure.bettermeans.com/projects/4256/boards
and
https://secure.bettermeans.com/projects/4256/wiki

I still have the testcases, but until we get some proper testcase
software I am loathed to publish them in a half arsed format. (they
worked well on bettermeans, then just vanished one day...) what
testcase software are you familiar with?

apart from that, what do you feel you can do for the project? how long
have you been involved in bitcoin?  It may well be worth reading up
all the dev stuff on the wiki so you can get you head around how the
bitcoin protocol is different from the daemon and qt client. What do
you think you can and will enjoy doing? What is your skill set in
regard to networking, crypto and operating systems. (not that you need
any, in any we still want and need you. :)

there really is room for you to do whatever role you want, and as
little or as much as you want - however funding is now a very tricky
issue. so much so that I am not sure I want anything to do with
it(distribution of coin based on work.). - I just paid for some logo
spec work out of my own pocket (for example).  I have some testers i
know irl who are willing to work for coin.

NOTE: This response has nothing to do with the bitcoin foundation.  I
am not a member of the foundation. I do not speak for them or even
probably with them. I am still trying to work out how much qa the
foundation should be responsible for, and/how it is supposed to work.
I think the games cert process would be ideal for this.  This however
this a discussion that probably wont have my involvement.  (personally
I believe that the foundation should publish requirements with example
code and testcases for each aspect of the reference client. (on
reference platforms - I do not expect many to agree with this though)

As a side note, what happens to the donations to the bitcoin testing
project? do they get moved over to the foundation? this question is
bigger than this email. as far as I know they are all on an address
Gavin holds. Actually I would like to be involved in any discussions
that would impact QA, does this mean I need to join the foundation or
just go lone wolf?

tbh I dont really understand foundations.  I always thought they were
just a tax dodge.

Sorry for the long message. :)

> 
> Arklan
> 
> ---------- As long as there is light, the darkness holds no fear.
> And yet, even in the deepest black, there is life. - Arklan Uth
> Oslin
> 
> I want to leave this world the same way I came into it: backwards
> and on fire. - Arklan Uth Oslin
> 
> 
> 
> On Sat, Sep 29, 2012 at 12:26 PM, steve <steve at mistfpga.net>
> wrote:
> 
> Hi Gavin,
> 
> Sorry for the delayed response, I wanted to take a couple of days
> to reflect on your email.
> 
> On 26/09/2012 19:09, Gavin Andresen wrote:
> 
> 
> And their are other methods too.
> 
> 
> 
> The GUI::Test package for perl will allow this to be greatly 
> automated. (I have done this before on the localisation of
> photoshop.)
> 
> 
> 
> this why we need detailed testscripts and plans.  so we know what
> has and hasnt been done. The more boring the task the more work
> that needs to go into testcase development.  This is the area I see
> as my greatest failing last time.  I have a large number of virtual
> machines and should have at least this work.  But we need very
> detailed testcases.  with decent testplans just downloading the
> software, syncing the block chain, syncing an existing wallet,
> rescanning the blockchain and verifying the balance would cover a
> large number of tests.  The idea behind having lots of very
> specific testcases is you get to see what tests have not been run.
> 
> 
> 
> I understand your concern, however I have taken a couple of days
> to reflect on this and I still strongly feel that in order to make
> sure that this sticks, and is still useful in 1 years time we need
> to lay proper foundations. Those foundations are not word
> documents, spreadsheets, etc.  they are selecting the right tools
> for the job.
> 
> We can gain so much benefit from using 3rd party software. 
> (bettermeans would rock if it wasnt rotting)
> 
> I am sure you could do your coding work just using vi, but an sdk 
> makes it much easier and allows you to work in a more productive
> manner.
> 
> I have had a couple of off list emails with some testers and they
> also feel that it is very important to make sure we have a sound
> foundation (mantis is so much more than just a bug reporting tool,
> I see the bug reporting functionality as secondary to the main test
> run functionality - but it doesnt have to be mantis based, we do
> need workflow and testcase software though - and proper software
> for this is much better than just a massive google doc.) however I
> am checking out some other software that has been recommended.  It
> will be very hard to change 'the process' once we have something we
> are used too (just look at the current resistance) I promise
> nothing will change for the dev team.  But test does need other
> tools, and processes.
> 
> If you feel that strongly that I am going about this the wrong way,
> I am happy to step back and let someone else sort it out (I will
> still do all the testing I possibly can). I would feel that this
> would be a real shame and we have the chance to setup requirements
> to functionality to tests all with traceability. why not do it
> right from the start?
> 
> I will open up my vps' somepoint over the next few days and you
> can see what I mean. I will setup a fake git project, and sort out
> the interactions.
> 
> 
>> 
>> 
>> ------------------------------------------------------------------------------
>>
>> 
How fast is your code?
>> 3 out of 4 devs don\\\'t know how their code performs in
>> production. Find out how slow your code is with AppDynamics
>> Lite. http://ad.doubleclick.net/clk;262219672;13503038;z? 
>> http://info.appdynamics.com/FreeJavaPerformanceDownload.html 
>> _______________________________________________ 
>> Bitcoin-development mailing list 
>> Bitcoin-development at lists.sourceforge.net 
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
> 
> 
> 
> ------------------------------------------------------------------------------
>
> 
Got visibility?
> Most devs has no idea what their production app looks like. Find
> out how fast your code is with AppDynamics Lite. 
> http://ad.doubleclick.net/clk;262219671;13503038;y? 
> http://info.appdynamics.com/FreeJavaPerformanceDownload.html
> 
> 
> 
> _______________________________________________ Bitcoin-development
> mailing list Bitcoin-development at lists.sourceforge.net 
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.17 (MingW32)
Comment: Using GnuPG with Mozilla - http://www.enigmail.net/

iQEcBAEBAgAGBQJQaaieAAoJEFvEB9dQFvtQUi0H/3Eh72DqxwBt6AeNos/hJNqQ
ZowMNFRupJQM301EJ7SPQmcnVuc3RF2Jw//ckpAqdpkqhHCgGO9HX/q+Ic2A9erQ
CfKbUOwQgqKuLQTZ8eT5UMh969Uw8PMazo711d2I23etU0VhSK/MvjB5IiYIq5fB
RJdCEluwvACaiftqfm4RA9HXXJGMnsZtlSWjVQCkg2FyYZKfpctEFdGCg6R8IaP7
ypyglR7TfygcjhUMHeWkQQCP2m2gBOHpx9H99uNBosF+6pLBhCiGUrwVkl8HUiiN
4YfhsvoRQ0BWNgvO9wH1H4EyyZtJsE7S926BNkhd4uewWGV/qe8gML+uJRstPDg=
=L66i
-----END PGP SIGNATURE-----



From peter at coinlab.com  Mon Oct  1 16:52:13 2012
From: peter at coinlab.com (Peter Vessenes)
Date: Mon, 1 Oct 2012 09:52:13 -0700
Subject: [Bitcoin-development] Bitcoin Testing Project
In-Reply-To: <5069A89E.7090003@mistfpga.net>
References: <5061F8CC.9070906@mistfpga.net>
	<1348605677.2284.2.camel@localhost.localdomain>
	<5062F4F8.6040504@mistfpga.net>
	<CA+s+GJBM4DwDoqT8RC0+SyrLYrLGZuGZSuoj7zbHunQa3kFoRA@mail.gmail.com>
	<506301AC.90101@mistfpga.net>
	<CACh7GpHFY_KUhhtk09H_oCzBtRh66artDCqz8pXNTh_ZzkAABg@mail.gmail.com>
	<50633F02.6030807@mistfpga.net>
	<CABsx9T119rT1NssV6YO8KPse3sEGHZJ-vzFFD3o=aAQ161g6-A@mail.gmail.com>
	<50673D69.5040105@mistfpga.net>
	<CAGg41SV9nAA0ispDG4-QUnjAMprnyQrH-faGVn7buau0vj=PBw@mail.gmail.com>
	<5069A89E.7090003@mistfpga.net>
Message-ID: <CAMGNxUugk3e7yhgjjSPO0CQEGe0Ucp3_Wb+JxJkwYv41t2MPYQ@mail.gmail.com>

I'm a big proponent of a testing project.

I think if one could self organize that Gavin and team wanted to bless we
could put up some BTC as bounties or funding. We won't have our heads
around the foundation budget for a few more weeks, but self-organization is
often slower than budgeting. :)

This is just my opinion, but I would like very, very much to move the
current specification into unit tests so that anyone could validate their
alternate bitcoin implementation. This is a lot of work, some of which has
been done, much of which hasn't.

So, my two cents, plus an offer to bring it up at our next budgeting
meeting.

Peter


On Mon, Oct 1, 2012 at 7:28 AM, steve <steve at mistfpga.net> wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> On 01/10/2012 14:52, Arklan Uth Oslin wrote:
> > Hi guys.
> >
> > So, as I mentioned on the bitcointalk.org forums thread about the
> > foundation, I want to get involved in the QA side of bitcoin
> > development. I've done functional testing in the video game
> > industry for years.
>
> Nice one, I worked in games for quite a few years. (before getting
> into finance then pentesting) there are about 6 keen testers now.
> maybe we should get a bitcoin-test mailing list, where we can discuss
> stuff without disturbing the dev team.
>
> > I've read all the messages in this thread, but I'm left unclear
> > how I can most effectively and quickly being helping out. Could I
> > get a bit of a directional nudge?
>
> Great question... for me I feel structure is the most important thing
> to sort out first.  However we desperately need detailed testcases for
> the release of a new version. - Not too much on the change log stuff,
> more on the noddy stuff (as gavin points out below), downloading and
> making sure it works on a non dev machine, make sure the wallet isnt
> overwritten, etc.) doing games qa I imagine this would be an ideal
> place for you to start.  I have a MSDN and TechNet licence so if you
> need some reference ms virtual machines I can help you out.
>
> However we need some testcase software.  Please check out what was
> done on bettermeans for the stuff I was planning out...
>
> It details everything from recompense and testcases. bettermeans kinda
> died a death though...
>
> check out:
>
> Bitcoin over all-
> https://secure.bettermeans.com/projects/4180/wiki/Page_index
> discussion
> https://secure.bettermeans.com/projects/4180/boards
>
> 0.7
> https://secure.bettermeans.com/projects/4256/boards
> and
> https://secure.bettermeans.com/projects/4256/wiki
>
> I still have the testcases, but until we get some proper testcase
> software I am loathed to publish them in a half arsed format. (they
> worked well on bettermeans, then just vanished one day...) what
> testcase software are you familiar with?
>
> apart from that, what do you feel you can do for the project? how long
> have you been involved in bitcoin?  It may well be worth reading up
> all the dev stuff on the wiki so you can get you head around how the
> bitcoin protocol is different from the daemon and qt client. What do
> you think you can and will enjoy doing? What is your skill set in
> regard to networking, crypto and operating systems. (not that you need
> any, in any we still want and need you. :)
>
> there really is room for you to do whatever role you want, and as
> little or as much as you want - however funding is now a very tricky
> issue. so much so that I am not sure I want anything to do with
> it(distribution of coin based on work.). - I just paid for some logo
> spec work out of my own pocket (for example).  I have some testers i
> know irl who are willing to work for coin.
>
> NOTE: This response has nothing to do with the bitcoin foundation.  I
> am not a member of the foundation. I do not speak for them or even
> probably with them. I am still trying to work out how much qa the
> foundation should be responsible for, and/how it is supposed to work.
> I think the games cert process would be ideal for this.  This however
> this a discussion that probably wont have my involvement.  (personally
> I believe that the foundation should publish requirements with example
> code and testcases for each aspect of the reference client. (on
> reference platforms - I do not expect many to agree with this though)
>
> As a side note, what happens to the donations to the bitcoin testing
> project? do they get moved over to the foundation? this question is
> bigger than this email. as far as I know they are all on an address
> Gavin holds. Actually I would like to be involved in any discussions
> that would impact QA, does this mean I need to join the foundation or
> just go lone wolf?
>
> tbh I dont really understand foundations.  I always thought they were
> just a tax dodge.
>
> Sorry for the long message. :)
>
> >
> > Arklan
> >
> > ---------- As long as there is light, the darkness holds no fear.
> > And yet, even in the deepest black, there is life. - Arklan Uth
> > Oslin
> >
> > I want to leave this world the same way I came into it: backwards
> > and on fire. - Arklan Uth Oslin
> >
> >
> >
> > On Sat, Sep 29, 2012 at 12:26 PM, steve <steve at mistfpga.net>
> > wrote:
> >
> > Hi Gavin,
> >
> > Sorry for the delayed response, I wanted to take a couple of days
> > to reflect on your email.
> >
> > On 26/09/2012 19:09, Gavin Andresen wrote:
> >
> >
> > And their are other methods too.
> >
> >
> >
> > The GUI::Test package for perl will allow this to be greatly
> > automated. (I have done this before on the localisation of
> > photoshop.)
> >
> >
> >
> > this why we need detailed testscripts and plans.  so we know what
> > has and hasnt been done. The more boring the task the more work
> > that needs to go into testcase development.  This is the area I see
> > as my greatest failing last time.  I have a large number of virtual
> > machines and should have at least this work.  But we need very
> > detailed testcases.  with decent testplans just downloading the
> > software, syncing the block chain, syncing an existing wallet,
> > rescanning the blockchain and verifying the balance would cover a
> > large number of tests.  The idea behind having lots of very
> > specific testcases is you get to see what tests have not been run.
> >
> >
> >
> > I understand your concern, however I have taken a couple of days
> > to reflect on this and I still strongly feel that in order to make
> > sure that this sticks, and is still useful in 1 years time we need
> > to lay proper foundations. Those foundations are not word
> > documents, spreadsheets, etc.  they are selecting the right tools
> > for the job.
> >
> > We can gain so much benefit from using 3rd party software.
> > (bettermeans would rock if it wasnt rotting)
> >
> > I am sure you could do your coding work just using vi, but an sdk
> > makes it much easier and allows you to work in a more productive
> > manner.
> >
> > I have had a couple of off list emails with some testers and they
> > also feel that it is very important to make sure we have a sound
> > foundation (mantis is so much more than just a bug reporting tool,
> > I see the bug reporting functionality as secondary to the main test
> > run functionality - but it doesnt have to be mantis based, we do
> > need workflow and testcase software though - and proper software
> > for this is much better than just a massive google doc.) however I
> > am checking out some other software that has been recommended.  It
> > will be very hard to change 'the process' once we have something we
> > are used too (just look at the current resistance) I promise
> > nothing will change for the dev team.  But test does need other
> > tools, and processes.
> >
> > If you feel that strongly that I am going about this the wrong way,
> > I am happy to step back and let someone else sort it out (I will
> > still do all the testing I possibly can). I would feel that this
> > would be a real shame and we have the chance to setup requirements
> > to functionality to tests all with traceability. why not do it
> > right from the start?
> >
> > I will open up my vps' somepoint over the next few days and you
> > can see what I mean. I will setup a fake git project, and sort out
> > the interactions.
> >
> >
> >>
> >>
> >>
> ------------------------------------------------------------------------------
> >>
> >>
> How fast is your code?
> >> 3 out of 4 devs don\\\'t know how their code performs in
> >> production. Find out how slow your code is with AppDynamics
> >> Lite. http://ad.doubleclick.net/clk;262219672;13503038;z?
> >> http://info.appdynamics.com/FreeJavaPerformanceDownload.html
> >> _______________________________________________
> >> Bitcoin-development mailing list
> >> Bitcoin-development at lists.sourceforge.net
> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >>
> >
> >
> >
> >
> ------------------------------------------------------------------------------
> >
> >
> Got visibility?
> > Most devs has no idea what their production app looks like. Find
> > out how fast your code is with AppDynamics Lite.
> > http://ad.doubleclick.net/clk;262219671;13503038;y?
> > http://info.appdynamics.com/FreeJavaPerformanceDownload.html
> >
> >
> >
> > _______________________________________________ Bitcoin-development
> > mailing list Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v2.0.17 (MingW32)
> Comment: Using GnuPG with Mozilla - http://www.enigmail.net/
>
> iQEcBAEBAgAGBQJQaaieAAoJEFvEB9dQFvtQUi0H/3Eh72DqxwBt6AeNos/hJNqQ
> ZowMNFRupJQM301EJ7SPQmcnVuc3RF2Jw//ckpAqdpkqhHCgGO9HX/q+Ic2A9erQ
> CfKbUOwQgqKuLQTZ8eT5UMh969Uw8PMazo711d2I23etU0VhSK/MvjB5IiYIq5fB
> RJdCEluwvACaiftqfm4RA9HXXJGMnsZtlSWjVQCkg2FyYZKfpctEFdGCg6R8IaP7
> ypyglR7TfygcjhUMHeWkQQCP2m2gBOHpx9H99uNBosF+6pLBhCiGUrwVkl8HUiiN
> 4YfhsvoRQ0BWNgvO9wH1H4EyyZtJsE7S926BNkhd4uewWGV/qe8gML+uJRstPDg=
> =L66i
> -----END PGP SIGNATURE-----
>
>
> ------------------------------------------------------------------------------
> Got visibility?
> Most devs has no idea what their production app looks like.
> Find out how fast your code is with AppDynamics Lite.
> http://ad.doubleclick.net/clk;262219671;13503038;y?
> http://info.appdynamics.com/FreeJavaPerformanceDownload.html
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



-- 
------------------------------

[image: CoinLab Logo]PETER VESSENES
CEO

*peter at coinlab.com * /  206.486.6856  / SKYPE: vessenes
811 FIRST AVENUE  /  SUITE 480  /  SEATTLE, WA 98104
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121001/bf75a1eb/attachment.html>

From mike at plan99.net  Tue Oct  2 16:38:12 2012
From: mike at plan99.net (Mike Hearn)
Date: Tue, 2 Oct 2012 18:38:12 +0200
Subject: [Bitcoin-development] Payment protocol thoughts
Message-ID: <CANEZrP3aArZV1jCL8OsksGxQO03Cs=CKM_4L3NB1=qGo=GMHdA@mail.gmail.com>

I've been thinking about the requirements for a payment protocol
lately. It seems we have consensus that we need one of these. Pieter
has a gist on the topic here: https://gist.github.com/1237788

IMHO we'll want to move away from "send X BTC to address Y" and more
towards "upload to me transactions that send X BTC to outputs
A,B....F,G". In this context by output I mean the obvious
interpretation of script+value.

The reasons are privacy and security. Privacy: you don't want people
to find out if you have an unexpectedly large balance (from the block
chain). Example worst case scenarios

- in a hypothetical Bitcoin-using country, as most people receive
income exactly once a month from their employer, you could potentially
find out other peoples salaries. Drama ensues.

- business partners could find out their counterparty has an
unexpectedly good financial position, messing up negotiations

Security:

- some of the outputs could be in a hot wallet, others in cold
wallets, helping you maintain correct balances between them in real
time

- the outputs can be multi-sig scripts

Wallets would then craft a series of transactions to try and somewhat
balance the size of inputs vs outputs. Because they are separate
transactions and all the keys are fresh, there's no way to link them
together into a single payment, especially not if they're broadcast in
random order with some jitter.

The upside of this is better privacy. The downside is obviously more
transactions and therefore more overhead. In theory the sum of tx
outputs would end up converging to a reasonable "coin size" for the
recipients, eg, businesses might be happy to receive a lot of money in
a single output, individuals less, children or very poor people maybe
much less.

Let's call payment requests invoices. Here is a brainstorm on other
features that may be desirable. I'm not suggesting they're all in v1,
just that we think about them a bit to ensure we don't paint ourselves
into a corner.

- Optional list of {signature, certificate} pairs. SSL certs can be
embedded into the payment request file itself so they can be checked
instantly for wallets that want to show a verified identity, but you
can also provide other certificates issued outside the regular SSL CA
system. For example maybe MtGox issues you a "trusted vendor"
certificate. Maybe the better business bureau issues you a cert, etc.

- Optional expiry time (from sipas gist) so outputs that were never
sent to can be recycled

- Upload target (URI), where to send the created transactions

- Optional message and branding image/icon that a wallet can display
to make the transaction history a bit prettier

- Opaque token that the wallet is supposed to copy into the payment.
The merchant can use to link invoice with payment. It's technically
redundant, the output set would identify the invoice too, as could a
token in the upload target URL, but it may be simpler for some
merchant implementations

- Ability to specify payment amount[s] in terms of other currencies.
If the amount is specified statically it can just be recorded in the
wallet for informational purposes. If there's a URL provided also, it
is an endpoint where quotes can be obtained. This allows merchants to
make long-lived invoices which are protected against FX volatility.
Downside: complicates wallets. Upsides: invoices can be kept around
for longer.

- Web/human-usable URL for the order so users can, eg, send messages
to the merchant specific to an order, post a review of the merchant,
etc

- Support for setting up 2-of-3 dispute mediation. Invoices should be
able to name a list of acceptable mediators and the wallet software
can intersect this with a list of mediators acceptable to the user, to
find one that works best. The whole mechanism by which merchants and
users agree on mediators isn't designed yet but we can at least think
about it now. It may be there's a simple design everyone agrees on
already.

- Support for requesting recurring payments. Eg, I should be able to
provide N sets of M outputs, one set for each payment with a payment
schedule. Wallets can then ensure they run at the appropriate times to
keep up the subscription.

- Suggested tip/service charge. Wallet would give a simple UI to
adjust this up/down by X percentage points

- Request to sign inputs with SIGHASH_ANYONECANPAY, allowing the
payment to be a pledge for an assurance contract

- Ability to specify minimum confirmation level of coins that will be
spent. Some merchants may be OK with you immediately re-spending
unconfirmed coins. Other merchants will care more and might want you
to take on the burden of getting your transactions into the chain.


On the payment upload side:

- An optional signature under a stable user key that lets users
optionally link their payments across merchants. In this way a user
can build cross-market reputation which may help them in future, by
relaxing confirmation requirements or reducing the chance of being
asked to enter dispute mediation. Needs more thought.

- Optionally, an invoice for a refund if the merchant chooses to
refund the money in the absence of dispute mediation.

- A list of Bitcoin transactions that make payments to the outputs
requested in the invoice

- The opaque token provided in the invoice



Re: format. I would (surprise) strongly suggest protocol buffers over
JSON. I cannot think of any justification for using JSON (for
anything) but especially not for data structures that mostly contain
binary data like hashes or keys. Protobufs are easier to work with in
code, have a more efficient encoding, can be printed/parsed from ASCII
if you need to (eg for debugging purposes) and have fewer sharp edges
than JSON does.



From gavinandresen at gmail.com  Tue Oct  2 17:43:51 2012
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Tue, 2 Oct 2012 13:43:51 -0400
Subject: [Bitcoin-development] Payment protocol thoughts
In-Reply-To: <CANEZrP3aArZV1jCL8OsksGxQO03Cs=CKM_4L3NB1=qGo=GMHdA@mail.gmail.com>
References: <CANEZrP3aArZV1jCL8OsksGxQO03Cs=CKM_4L3NB1=qGo=GMHdA@mail.gmail.com>
Message-ID: <CABsx9T0f8By2g9zKzfB7FLiMh6_aMk2iGO1Uesdqib_-Ok-1sA@mail.gmail.com>

I agree we need a payment protocol, but instead of thinking of all of the
things we might possibly want I would like to solve a few boring problems
that we have right now.

Absolutely critical:

+ Bitcoin addresses by themselves are insecure against man-in-the-middle
attacks. We need a payment protocol so if you get a donation link for
"Bitcoin Foundation" in an email message and click on it you can be
reasonably certain that your coins will actually go to the Foundation and
not some hacker at your ISP that modified the email message.

+ After sending payment I should have a receipt that proves I followed the
payee's instructions, so if the payee says they never received the funds I
can prove that it wasn't my fault.

+ Protocol for gathering signatures from multiple devices
(extension/variation of the basic payment protocol, I think).

Not absolutely necessary, but I think v1 should have it anyway:

+ Where-to-send-refund information included with payments, so
overpayments/refunds can be handled efficiently and displayed intelligently
in the customer's wallet.


Everything else I think can wait.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121002/1d143bbc/attachment.html>

From peter at coinlab.com  Tue Oct  2 17:52:04 2012
From: peter at coinlab.com (Peter Vessenes)
Date: Tue, 2 Oct 2012 10:52:04 -0700
Subject: [Bitcoin-development] Payment protocol thoughts
In-Reply-To: <CABsx9T0f8By2g9zKzfB7FLiMh6_aMk2iGO1Uesdqib_-Ok-1sA@mail.gmail.com>
References: <CANEZrP3aArZV1jCL8OsksGxQO03Cs=CKM_4L3NB1=qGo=GMHdA@mail.gmail.com>
	<CABsx9T0f8By2g9zKzfB7FLiMh6_aMk2iGO1Uesdqib_-Ok-1sA@mail.gmail.com>
Message-ID: <CAMGNxUuqyASMxu6DyL0n1_k7+Xt-3yeXbP8txiRjdUFrQtHNjA@mail.gmail.com>

There are tons of scenarios, some discussed here on this list previously,
which would benefit from out of band messages and notes.

This is small, but an interesting tidbit from BTC Foundation payments;
roughly 3-5% of our initial members double-spent. WOW, that's terrible.

I presume that's because they use web wallets without double-click
prevention. But, seriously! A tiny UI issue that's a big deal in an
irrevocable payment system.


On Tue, Oct 2, 2012 at 10:43 AM, Gavin Andresen <gavinandresen at gmail.com>wrote:

> I agree we need a payment protocol, but instead of thinking of all of the
> things we might possibly want I would like to solve a few boring problems
> that we have right now.
>
> Absolutely critical:
>
> + Bitcoin addresses by themselves are insecure against man-in-the-middle
> attacks. We need a payment protocol so if you get a donation link for
> "Bitcoin Foundation" in an email message and click on it you can be
> reasonably certain that your coins will actually go to the Foundation and
> not some hacker at your ISP that modified the email message.
>
>
I'm trying but can't think of a lightweight solution to this off the top of
my head. Not that that proves much.


> + After sending payment I should have a receipt that proves I followed the
> payee's instructions, so if the payee says they never received the funds I
> can prove that it wasn't my fault.
>
>
+ Protocol for gathering signatures from multiple devices
> (extension/variation of the basic payment protocol, I think).
>
> With the foundation trying to operate without bank accounts, I think it
comes into clarity for me just how innovative and incredibly awesome this
would be for financial controls for companies. Imagine the bookkeeper
inputting payments, and the owner (or 2 of 3 owners) approving them. I can
even imagine large member groups having 2/3 or majority spend rules.

When we talk about stuff like this, I come back around to thinking there
should be many different GUIs -- this use case is more business-y, it's
stuff like this that I always think about the bitcoin testing project
helping provide -- a standard backend that a bookkeeping GUI could go on
top of..


> Not absolutely necessary, but I think v1 should have it anyway:
>
> + Where-to-send-refund information included with payments, so
> overpayments/refunds can be handled efficiently and displayed intelligently
> in the customer's wallet.
>
>
> Everything else I think can wait.
>
> --
> --
> Gavin Andresen
>
>
>
> ------------------------------------------------------------------------------
> Don't let slow site performance ruin your business. Deploy New Relic APM
> Deploy New Relic app performance management and know exactly
> what is happening inside your Ruby, Python, PHP, Java, and .NET app
> Try New Relic at no cost today and get our sweet Data Nerd shirt too!
> http://p.sf.net/sfu/newrelic-dev2dev
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>


-- 
------------------------------

[image: CoinLab Logo]PETER VESSENES
CEO

*peter at coinlab.com * /  206.486.6856  / SKYPE: vessenes
811 FIRST AVENUE  /  SUITE 480  /  SEATTLE, WA 98104
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121002/46787c97/attachment.html>

From jgarzik at exmulti.com  Tue Oct  2 18:07:05 2012
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Tue, 2 Oct 2012 14:07:05 -0400
Subject: [Bitcoin-development] Payment protocol thoughts
In-Reply-To: <CAMGNxUuqyASMxu6DyL0n1_k7+Xt-3yeXbP8txiRjdUFrQtHNjA@mail.gmail.com>
References: <CANEZrP3aArZV1jCL8OsksGxQO03Cs=CKM_4L3NB1=qGo=GMHdA@mail.gmail.com>
	<CABsx9T0f8By2g9zKzfB7FLiMh6_aMk2iGO1Uesdqib_-Ok-1sA@mail.gmail.com>
	<CAMGNxUuqyASMxu6DyL0n1_k7+Xt-3yeXbP8txiRjdUFrQtHNjA@mail.gmail.com>
Message-ID: <CA+8xBpeDo3R_fjrzUMJV-EqSkqGt1MHweYFP9TdcxDTCNtkF4g@mail.gmail.com>

On Tue, Oct 2, 2012 at 1:52 PM, Peter Vessenes <peter at coinlab.com> wrote:
> This is small, but an interesting tidbit from BTC Foundation payments;
> roughly 3-5% of our initial members double-spent. WOW, that's terrible.

To be specific, do you mean

a) paid twice
     or
b) sent BF coins, then sent the same coins elsewhere
?

Double-spend is a specific technical term....

--
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From peter at coinlab.com  Tue Oct  2 22:35:05 2012
From: peter at coinlab.com (Peter Vessenes)
Date: Tue, 2 Oct 2012 15:35:05 -0700
Subject: [Bitcoin-development] Payment protocol thoughts
In-Reply-To: <CA+8xBpeDo3R_fjrzUMJV-EqSkqGt1MHweYFP9TdcxDTCNtkF4g@mail.gmail.com>
References: <CANEZrP3aArZV1jCL8OsksGxQO03Cs=CKM_4L3NB1=qGo=GMHdA@mail.gmail.com>
	<CABsx9T0f8By2g9zKzfB7FLiMh6_aMk2iGO1Uesdqib_-Ok-1sA@mail.gmail.com>
	<CAMGNxUuqyASMxu6DyL0n1_k7+Xt-3yeXbP8txiRjdUFrQtHNjA@mail.gmail.com>
	<CA+8xBpeDo3R_fjrzUMJV-EqSkqGt1MHweYFP9TdcxDTCNtkF4g@mail.gmail.com>
Message-ID: <CAMGNxUvLLATwbxkojOq5L+2bJc5DE=tj09x+M=EKDNpb4r-17w@mail.gmail.com>

I meant sent twice, a.

No double-spends that I'm aware of. Sorry for the loose verbiage!

Peter

On Tue, Oct 2, 2012 at 11:07 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:

> On Tue, Oct 2, 2012 at 1:52 PM, Peter Vessenes <peter at coinlab.com> wrote:
> > This is small, but an interesting tidbit from BTC Foundation payments;
> > roughly 3-5% of our initial members double-spent. WOW, that's terrible.
>
> To be specific, do you mean
>
> a) paid twice
>      or
> b) sent BF coins, then sent the same coins elsewhere
> ?
>
> Double-spend is a specific technical term....
>
> --
> Jeff Garzik
> exMULTI, Inc.
> jgarzik at exmulti.com
>



-- 
------------------------------

[image: CoinLab Logo]PETER VESSENES
CEO

*peter at coinlab.com * /  206.486.6856  / SKYPE: vessenes
811 FIRST AVENUE  /  SUITE 480  /  SEATTLE, WA 98104
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121002/e448bd63/attachment.html>

From mike at plan99.net  Tue Oct  2 22:44:53 2012
From: mike at plan99.net (Mike Hearn)
Date: Wed, 3 Oct 2012 00:44:53 +0200
Subject: [Bitcoin-development] Payment protocol thoughts
In-Reply-To: <CABsx9T0f8By2g9zKzfB7FLiMh6_aMk2iGO1Uesdqib_-Ok-1sA@mail.gmail.com>
References: <CANEZrP3aArZV1jCL8OsksGxQO03Cs=CKM_4L3NB1=qGo=GMHdA@mail.gmail.com>
	<CABsx9T0f8By2g9zKzfB7FLiMh6_aMk2iGO1Uesdqib_-Ok-1sA@mail.gmail.com>
Message-ID: <CANEZrP3iot94HW17HpdH9ALMehMQKtRYY0LEe88FgRqU3BAchw@mail.gmail.com>

I think it's worth pondering the different things we may want in
future, even if that future is quite far out, just to ensure we have a
robust design that won't box us in later. Brainstorming feature ideas
now doesn't commit anyone to implementing them, but it may help
improve the final v1 design.

> + Bitcoin addresses by themselves are insecure against man-in-the-middle
> attacks.

A simple way to solve this problem is just use the SSL identity of the
server that is taking part in the protocol, but it's not much harder
to embed a signature + cert chain into the invoice itself. And once
you're doing that, allowing several different sigs/cert chains is
pretty easy. It means you keep the design open to cases where SSL may
not be appropriate. Eg, you could create invoices signed by your
web-of-trust identity, or some non-SSL Bitcoin specific verification
system.

None of those things have to actually be implemented, but by
considering them now we can make the protocol more future prooof.

> + After sending payment I should have a receipt that proves I followed the
> payee's instructions, so if the payee says they never received the funds I
> can prove that it wasn't my fault.

A signed invoice + the blockchain transactions does this, BUT with a
major caveat: if you have not set up dispute mediation, there is
nobody to prove faultlessness to.

So I'm not sure this would be very useful. Supporting real dispute
mediation seems more practical, but also more work.

> + Protocol for gathering signatures from multiple devices
> (extension/variation of the basic payment protocol, I think).

This would be nice, I think invoices could be wrapped by another
protocol that handles it. I'm not sure it needs to be a part of the
core payment protocol. There are lots of different ways to implement
this and I'm not sure there's agreement on what it should look like -
somebody needs to build a "proprietary" implementation first.



From gmaxwell at gmail.com  Tue Oct  2 22:52:23 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 2 Oct 2012 18:52:23 -0400
Subject: [Bitcoin-development] Payment protocol thoughts
In-Reply-To: <CANEZrP3iot94HW17HpdH9ALMehMQKtRYY0LEe88FgRqU3BAchw@mail.gmail.com>
References: <CANEZrP3aArZV1jCL8OsksGxQO03Cs=CKM_4L3NB1=qGo=GMHdA@mail.gmail.com>
	<CABsx9T0f8By2g9zKzfB7FLiMh6_aMk2iGO1Uesdqib_-Ok-1sA@mail.gmail.com>
	<CANEZrP3iot94HW17HpdH9ALMehMQKtRYY0LEe88FgRqU3BAchw@mail.gmail.com>
Message-ID: <CAAS2fgQN0zpbA4X276hs3dLR=_vX6Q5=AnHcquy1zpneu4zG2w@mail.gmail.com>

On Tue, Oct 2, 2012 at 6:44 PM, Mike Hearn <mike at plan99.net> wrote:
> A simple way to solve this problem is just use the SSL identity of the
> server that is taking part in the protocol, but it's not much harder

SSL itself (as opposed to using the certs as you suggest) is not
non-reputablable, so it's not enough for the below concerns

> A signed invoice + the blockchain transactions does this, BUT with a
> major caveat: if you have not set up dispute mediation, there is
> nobody to prove faultlessness to.

To their prospective customer base.  "I can prove to the public that
you ripped me off" is protective, even if there isn't formal direct
remedy available.



From steve at mistfpga.net  Wed Oct  3 01:15:03 2012
From: steve at mistfpga.net (steve)
Date: Wed, 03 Oct 2012 02:15:03 +0100
Subject: [Bitcoin-development] Bitcoin Testing Project
In-Reply-To: <CAMGNxUugk3e7yhgjjSPO0CQEGe0Ucp3_Wb+JxJkwYv41t2MPYQ@mail.gmail.com>
References: <5061F8CC.9070906@mistfpga.net>
	<1348605677.2284.2.camel@localhost.localdomain>
	<5062F4F8.6040504@mistfpga.net>
	<CA+s+GJBM4DwDoqT8RC0+SyrLYrLGZuGZSuoj7zbHunQa3kFoRA@mail.gmail.com>
	<506301AC.90101@mistfpga.net>
	<CACh7GpHFY_KUhhtk09H_oCzBtRh66artDCqz8pXNTh_ZzkAABg@mail.gmail.com>
	<50633F02.6030807@mistfpga.net>
	<CABsx9T119rT1NssV6YO8KPse3sEGHZJ-vzFFD3o=aAQ161g6-A@mail.gmail.com>
	<50673D69.5040105@mistfpga.net>
	<CAGg41SV9nAA0ispDG4-QUnjAMprnyQrH-faGVn7buau0vj=PBw@mail.gmail.com>
	<5069A89E.7090003@mistfpga.net>
	<CAMGNxUugk3e7yhgjjSPO0CQEGe0Ucp3_Wb+JxJkwYv41t2MPYQ@mail.gmail.com>
Message-ID: <506B9197.2000202@mistfpga.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 01/10/2012 17:52, Peter Vessenes wrote:
> I'm a big proponent of a testing project.

I am very happy to hear this, however, your actual words are slightly
evasive. I do not expect you to be up to speed on this. Gavin started
a project called 'the bitcoin testing project' This project solicited
donations, about 80 coins last time I checked.  However these 80 odd
coins were donated to 'the bitcoin testing project' This would seem to
be an official bitcoin (both protocol and client) testing project.  I
signed up to work on this, and organise as much as i could of this.
for various reasons I did not manage to do the testing I wanted to on
0.7 i over committed myself.

Are the donations solicited for the 'bitcoin testing project) funds
going to be given to 'the foundation'?

Does the foundation support 'the bitcoin testing project'? does the
foundation have any involvement with 'the bitcoin testing project'?

> 
> I think if one could self organize that Gavin and team wanted to
> bless we could put up some BTC as bounties or funding. We won't
> have our heads around the foundation budget for a few more weeks,
> but self-organization is often slower than budgeting. :)

Im ready to go, more or less.  Please check out the links in my
previous emails. I have over 400 testcases (8 platforms * 50 release
tests) - Also I am not sure what you mean by bless, I take it that is
a euphemism for pay?

I have tried my hardest to get bettermeans to work, but it doesnt.  It
does show quite a lot of work that I have done though. If you were to
say to me, 'steve, by monday we need end to end, requirements based
testing' It would be done. (I have already spent over 4 months on
this)  Leaderless leadership is something I am having a hard time
with, bettermeans is excellent at this.  But I have found very little
in regards to voting and polling that integrates with the project in
an effortless way like bettermeans.

I understand that the budget from the foundation is something that
needs to be worked on and organised.  I offer my services in this area
(qa only).  I would be happy to submit my cv and refs for this, if
required.

I am now feeling frustrated and useless.  has my last 4 months of work
been for nothing? it feels like it.  I know I bang on about processes
but they are sorted, you can only attract talent like Arklan if he has
a process to follow. i feel like a broken record.

tl;dr version
1 - Will donations to the 'bitcoin testing project' as started by
gavin going to be given to the foundation?
2 - Is the work bill hees and myself going to be binned?
3 - I feel like I have the knowledge and drive to push this, but I
cant do it on my own.
4 - Is bill or I entitled to any of the cash raised for 'the bitcoin
testing project'
5 - Do I have to join the foundation to have a say in how the project
(testing) is done?
6 - sorry for being so mercenary, but am I going to receive any coin
for work I have done?
7 - It really probably is the time for a bitcoin-test list to appear.
 Is there anything I can do to make this happen?

> 
> This is just my opinion, but I would like very, very much to move
> the current specification into unit tests so that anyone could
> validate their alternate bitcoin implementation. This is a lot of
> work, some of which has been done, much of which hasn't.

have a look at the stuff in bettermeans.  I personally think we can go
a step further and publish guidelines (similar to RFC's and all the
tests that we would do against a ref client)

But I dont want to waste any more time on stuff that is going to be
ignored, life is short.

> 
> So, my two cents, plus an offer to bring it up at our next
> budgeting meeting.

I accept that offer. and I really appreciate it.  I have some more
questions I would like you to ask in regards to QA. (Gavin and I
skyped about this a while ago and we didnt really come to a
resolution, weworked out the problems though ;) )

I have an exceptionally detailed qa process (based off the game
certification process) - but I have gone on about this at length in
previous messages.

I thank you for your email and your involvement with this, but do you
think we are closer to getting stuff tested? call my bluff... Not one
person has asked for login details to my proposals - and i even have a
bugzilla version now.

I need to sleep.  sorry if i rambled.

nite nite,

steve

> 
> Peter
> 
> 
> On Mon, Oct 1, 2012 at 7:28 AM, steve <steve at mistfpga.net> wrote:
> 
> On 01/10/2012 14:52, Arklan Uth Oslin wrote:
>>>> Hi guys.
>>>> 
>>>> So, as I mentioned on the bitcointalk.org forums thread about
>>>> the foundation, I want to get involved in the QA side of
>>>> bitcoin development. I've done functional testing in the
>>>> video game industry for years.
> 
> Nice one, I worked in games for quite a few years. (before getting 
> into finance then pentesting) there are about 6 keen testers now. 
> maybe we should get a bitcoin-test mailing list, where we can
> discuss stuff without disturbing the dev team.
> 
>>>> I've read all the messages in this thread, but I'm left
>>>> unclear how I can most effectively and quickly being helping
>>>> out. Could I get a bit of a directional nudge?
> 
> Great question... for me I feel structure is the most important
> thing to sort out first.  However we desperately need detailed
> testcases for the release of a new version. - Not too much on the
> change log stuff, more on the noddy stuff (as gavin points out
> below), downloading and making sure it works on a non dev machine,
> make sure the wallet isnt overwritten, etc.) doing games qa I
> imagine this would be an ideal place for you to start.  I have a
> MSDN and TechNet licence so if you need some reference ms virtual
> machines I can help you out.
> 
> However we need some testcase software.  Please check out what was 
> done on bettermeans for the stuff I was planning out...
> 
> It details everything from recompense and testcases. bettermeans
> kinda died a death though...
> 
> check out:
> 
> Bitcoin over all- 
> https://secure.bettermeans.com/projects/4180/wiki/Page_index 
> discussion https://secure.bettermeans.com/projects/4180/boards
> 
> 0.7 https://secure.bettermeans.com/projects/4256/boards and 
> https://secure.bettermeans.com/projects/4256/wiki
> 
> I still have the testcases, but until we get some proper testcase 
> software I am loathed to publish them in a half arsed format.
> (they worked well on bettermeans, then just vanished one day...)
> what testcase software are you familiar with?
> 
> apart from that, what do you feel you can do for the project? how
> long have you been involved in bitcoin?  It may well be worth
> reading up all the dev stuff on the wiki so you can get you head
> around how the bitcoin protocol is different from the daemon and qt
> client. What do you think you can and will enjoy doing? What is
> your skill set in regard to networking, crypto and operating
> systems. (not that you need any, in any we still want and need you.
> :)
> 
> there really is room for you to do whatever role you want, and as 
> little or as much as you want - however funding is now a very
> tricky issue. so much so that I am not sure I want anything to do
> with it(distribution of coin based on work.). - I just paid for
> some logo spec work out of my own pocket (for example).  I have
> some testers i know irl who are willing to work for coin.
> 
> NOTE: This response has nothing to do with the bitcoin foundation.
> I am not a member of the foundation. I do not speak for them or
> even probably with them. I am still trying to work out how much qa
> the foundation should be responsible for, and/how it is supposed to
> work. I think the games cert process would be ideal for this.  This
> however this a discussion that probably wont have my involvement.
> (personally I believe that the foundation should publish
> requirements with example code and testcases for each aspect of the
> reference client. (on reference platforms - I do not expect many to
> agree with this though)
> 
> As a side note, what happens to the donations to the bitcoin
> testing project? do they get moved over to the foundation? this
> question is bigger than this email. as far as I know they are all
> on an address Gavin holds. Actually I would like to be involved in
> any discussions that would impact QA, does this mean I need to join
> the foundation or just go lone wolf?
> 
> tbh I dont really understand foundations.  I always thought they
> were just a tax dodge.
> 
> Sorry for the long message. :)
> 
>>>> 
>>>> Arklan
>>>> 
>>>> ---------- As long as there is light, the darkness holds no
>>>> fear. And yet, even in the deepest black, there is life. -
>>>> Arklan Uth Oslin
>>>> 
>>>> I want to leave this world the same way I came into it:
>>>> backwards and on fire. - Arklan Uth Oslin
>>>> 
>>>> 
>>>> 
>>>> On Sat, Sep 29, 2012 at 12:26 PM, steve <steve at mistfpga.net> 
>>>> wrote:
>>>> 
>>>> Hi Gavin,
>>>> 
>>>> Sorry for the delayed response, I wanted to take a couple of
>>>> days to reflect on your email.
>>>> 
>>>> On 26/09/2012 19:09, Gavin Andresen wrote:
>>>> 
>>>> 
>>>> And their are other methods too.
>>>> 
>>>> 
>>>> 
>>>> The GUI::Test package for perl will allow this to be greatly 
>>>> automated. (I have done this before on the localisation of 
>>>> photoshop.)
>>>> 
>>>> 
>>>> 
>>>> this why we need detailed testscripts and plans.  so we know
>>>> what has and hasnt been done. The more boring the task the
>>>> more work that needs to go into testcase development.  This
>>>> is the area I see as my greatest failing last time.  I have a
>>>> large number of virtual machines and should have at least
>>>> this work.  But we need very detailed testcases.  with decent
>>>> testplans just downloading the software, syncing the block
>>>> chain, syncing an existing wallet, rescanning the blockchain
>>>> and verifying the balance would cover a large number of
>>>> tests.  The idea behind having lots of very specific
>>>> testcases is you get to see what tests have not been run.
>>>> 
>>>> 
>>>> 
>>>> I understand your concern, however I have taken a couple of
>>>> days to reflect on this and I still strongly feel that in
>>>> order to make sure that this sticks, and is still useful in 1
>>>> years time we need to lay proper foundations. Those
>>>> foundations are not word documents, spreadsheets, etc.  they
>>>> are selecting the right tools for the job.
>>>> 
>>>> We can gain so much benefit from using 3rd party software. 
>>>> (bettermeans would rock if it wasnt rotting)
>>>> 
>>>> I am sure you could do your coding work just using vi, but an
>>>> sdk makes it much easier and allows you to work in a more
>>>> productive manner.
>>>> 
>>>> I have had a couple of off list emails with some testers and
>>>> they also feel that it is very important to make sure we have
>>>> a sound foundation (mantis is so much more than just a bug
>>>> reporting tool, I see the bug reporting functionality as
>>>> secondary to the main test run functionality - but it doesnt
>>>> have to be mantis based, we do need workflow and testcase
>>>> software though - and proper software for this is much better
>>>> than just a massive google doc.) however I am checking out
>>>> some other software that has been recommended.  It will be
>>>> very hard to change 'the process' once we have something we 
>>>> are used too (just look at the current resistance) I promise 
>>>> nothing will change for the dev team.  But test does need
>>>> other tools, and processes.
>>>> 
>>>> If you feel that strongly that I am going about this the
>>>> wrong way, I am happy to step back and let someone else sort
>>>> it out (I will still do all the testing I possibly can). I
>>>> would feel that this would be a real shame and we have the
>>>> chance to setup requirements to functionality to tests all
>>>> with traceability. why not do it right from the start?
>>>> 
>>>> I will open up my vps' somepoint over the next few days and
>>>> you can see what I mean. I will setup a fake git project, and
>>>> sort out the interactions.
>>>> 
>>>> 
>>>>> 
>>>>> 
>>>>> 
> ------------------------------------------------------------------------------
>>>>>
>>>>>
>
> 
How fast is your code?
>>>>> 3 out of 4 devs don\\\'t know how their code performs in 
>>>>> production. Find out how slow your code is with
>>>>> AppDynamics Lite.
>>>>> http://ad.doubleclick.net/clk;262219672;13503038;z? 
>>>>> http://info.appdynamics.com/FreeJavaPerformanceDownload.html
>>>>>
>>>>> 
_______________________________________________
>>>>> Bitcoin-development mailing list 
>>>>> Bitcoin-development at lists.sourceforge.net 
>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>
>>>>
>>>>
>>>>
>>>>
>
>>>>> 
-
------------------------------------------------------------------------------
>>>> 
>>>> 
> Got visibility?
>>>> Most devs has no idea what their production app looks like.
>>>> Find out how fast your code is with AppDynamics Lite. 
>>>> http://ad.doubleclick.net/clk;262219671;13503038;y? 
>>>> http://info.appdynamics.com/FreeJavaPerformanceDownload.html
>>>> 
>>>> 
>>>> 
>>>> _______________________________________________
>>>> Bitcoin-development mailing list
>>>> Bitcoin-development at lists.sourceforge.net 
>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>
>
>>>> 
>> 
>> 
>> ------------------------------------------------------------------------------
>>
>> 
Got visibility?
>> Most devs has no idea what their production app looks like. Find
>> out how fast your code is with AppDynamics Lite. 
>> http://ad.doubleclick.net/clk;262219671;13503038;y? 
>> http://info.appdynamics.com/FreeJavaPerformanceDownload.html 
>> _______________________________________________ 
>> Bitcoin-development mailing list 
>> Bitcoin-development at lists.sourceforge.net 
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
> 
> 
> 

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.17 (MingW32)
Comment: Using GnuPG with Mozilla - http://www.enigmail.net/

iQEcBAEBAgAGBQJQa5GXAAoJEFvEB9dQFvtQUR4H/3o0aOyvF6u4Wi5UUxMtGWXD
Bduuag9jNY/GACFshYs365wWqJcK96GXc/svOx0l/TTv10tw9BboaMpKY2x9gWri
7DJ+mym1AorgHBlZUgZJy3kQrb5yUCR7MiYU0O28QAqK5aVoklBa6cGQJqQVRa2j
vm9UrKCOeMbHiNMjagLP3s1tcQxYJUwm8hEuALWjyqsDQ+Rk7j2ndBnfonJLTCDc
rIy6HhmfAGSCaXFzhH35Ydfl2hV6ASaUHtBSKke3bB/oJ/bA5XspmPPhCkjum4Lo
4b28i4/O8BTisAsr8N3FYQ17dmD2fu8/gmQt1Rl9MBfWBHPJ9YVIIittk+WhcI0=
=nER6
-----END PGP SIGNATURE-----



From gmaxwell at gmail.com  Wed Oct  3 02:02:05 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 2 Oct 2012 22:02:05 -0400
Subject: [Bitcoin-development] Bitcoin Testing Project
In-Reply-To: <506B9197.2000202@mistfpga.net>
References: <5061F8CC.9070906@mistfpga.net>
	<1348605677.2284.2.camel@localhost.localdomain>
	<5062F4F8.6040504@mistfpga.net>
	<CA+s+GJBM4DwDoqT8RC0+SyrLYrLGZuGZSuoj7zbHunQa3kFoRA@mail.gmail.com>
	<506301AC.90101@mistfpga.net>
	<CACh7GpHFY_KUhhtk09H_oCzBtRh66artDCqz8pXNTh_ZzkAABg@mail.gmail.com>
	<50633F02.6030807@mistfpga.net>
	<CABsx9T119rT1NssV6YO8KPse3sEGHZJ-vzFFD3o=aAQ161g6-A@mail.gmail.com>
	<50673D69.5040105@mistfpga.net>
	<CAGg41SV9nAA0ispDG4-QUnjAMprnyQrH-faGVn7buau0vj=PBw@mail.gmail.com>
	<5069A89E.7090003@mistfpga.net>
	<CAMGNxUugk3e7yhgjjSPO0CQEGe0Ucp3_Wb+JxJkwYv41t2MPYQ@mail.gmail.com>
	<506B9197.2000202@mistfpga.net>
Message-ID: <CAAS2fgQjHGHGomFWLoK2p-LZZHeJ8TcnYwHLo9Byv5tOo_eNsQ@mail.gmail.com>

On Tue, Oct 2, 2012 at 9:15 PM, steve <steve at mistfpga.net> wrote:
> Im ready to go, more or less.  Please check out the links in my
> previous emails. I have over 400 testcases (8 platforms * 50 release
> tests) - Also I am not sure what you mean by bless, I take it that is
> a euphemism for pay?

Perhaps a bit bluntly here? but since you seem to be rather boldly
insisting on getting paid:

With all of this testing where can I find the issues you've uncovered?
 Searching on your name/email in the issue tracker reports nothing,
likewise I can't find anything in my email (beyond abstract discussion
of testing).



From steve at mistfpga.net  Wed Oct  3 03:00:16 2012
From: steve at mistfpga.net (steve)
Date: Wed, 03 Oct 2012 04:00:16 +0100
Subject: [Bitcoin-development] Bitcoin Testing Project
In-Reply-To: <CAAS2fgQjHGHGomFWLoK2p-LZZHeJ8TcnYwHLo9Byv5tOo_eNsQ@mail.gmail.com>
References: <5061F8CC.9070906@mistfpga.net>
	<1348605677.2284.2.camel@localhost.localdomain>
	<5062F4F8.6040504@mistfpga.net>
	<CA+s+GJBM4DwDoqT8RC0+SyrLYrLGZuGZSuoj7zbHunQa3kFoRA@mail.gmail.com>
	<506301AC.90101@mistfpga.net>
	<CACh7GpHFY_KUhhtk09H_oCzBtRh66artDCqz8pXNTh_ZzkAABg@mail.gmail.com>
	<50633F02.6030807@mistfpga.net>
	<CABsx9T119rT1NssV6YO8KPse3sEGHZJ-vzFFD3o=aAQ161g6-A@mail.gmail.com>
	<50673D69.5040105@mistfpga.net>
	<CAGg41SV9nAA0ispDG4-QUnjAMprnyQrH-faGVn7buau0vj=PBw@mail.gmail.com>
	<5069A89E.7090003@mistfpga.net>
	<CAMGNxUugk3e7yhgjjSPO0CQEGe0Ucp3_Wb+JxJkwYv41t2MPYQ@mail.gmail.com>
	<506B9197.2000202@mistfpga.net>
	<CAAS2fgQjHGHGomFWLoK2p-LZZHeJ8TcnYwHLo9Byv5tOo_eNsQ@mail.gmail.com>
Message-ID: <506BAA40.8060905@mistfpga.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 03/10/2012 03:02, Gregory Maxwell wrote:
> On Tue, Oct 2, 2012 at 9:15 PM, steve <steve at mistfpga.net> wrote:
>> Im ready to go, more or less.  Please check out the links in my 
>> previous emails. I have over 400 testcases (8 platforms * 50
>> release tests) - Also I am not sure what you mean by bless, I
>> take it that is a euphemism for pay?
> 
> Perhaps a bit bluntly here? but since you seem to be rather boldly 
> insisting on getting paid:

that is not what i was getting at, nor what i meant at all.I am sorry
it came across this way. Im a bit drunk. (yeah that old excuse) I was
only trying to make an example of the quandary that exists, in what
happens to the current donations. There are far more deserving people
who have a claim on that coin rather than I.

I have stated on more than on occasion (written in public and verbal
with gavin) that I would be willing to work for free. But I would love
to be able to ditch the day job. (however i see that more as services
than mining/testing)

rereading what i wrote yeah, fair play i can see how you read my mail
like that. it wasnt meant to :/ i feel a bit of a turnip. the tone is
not what i meant. it does read pretty mercenary.

> 
> With all of this testing where can I find the issues you've
> uncovered? Searching on your name/email in the issue tracker
> reports nothing, likewise I can't find anything in my email (beyond
> abstract discussion of testing).
> 

This is a different issue. But I see why you have raised it and I
would like to address it. I personally believe you should earn
bitcoins for writing testcases, executing testcases, passing or
failing test cases. in that order (failing a testcase normally
generates a new one therefore encouraging indepth and recorded
testing.). QA should not be judged based solely on bug reports - this
is unfair and will result in race to report bugs.  I have worked on a
few projects that have tried it.

This is one reason we need workflow and testcase software, so we can
measure and compensate people for their work.

As I have stated in previous emails I should have, but for various
excuses did not manage to run a single testcase for 0.7. but I did
setup a frame work, and I know some people did do some good work on
0.7 I believe these people should be compensated from the (limited)
funds the project received... something needs to happen with those coins.

I am sorry you find my emails abstract (and therefore meaningless?)

this is a really confusing time. i dont know if i am doing right from
wrong. I am trying to lead, without leading... i have always preferred
benevolent dictator. I know a number of bitcoin businesses that are
really keen to work with the project, but I have no authority, noone
seems to. Someone should be able to say, nice one, thanks for the
vm's. maybe use $200 worth of coin to get a technet licence, that
gives 10 installs of each ms OS. slipstreaming in the service packs
means you can have whatever era pc you want (and the vps providers
will allow various configuration of vm's...) then even if you do it by
hand you can still do 6 or 7 at once...

as for bug reports, give me 1 week from now (168hrs), lets see what i
can do. (priority, protocol, daemon, qt ref?) but still process is
more important...

I still think that writing and doing testcases should get more coin
than bug reports. but from what I have read, the big bounties will be
paid by the foundation. im not sure if that is true or where i read
it. (protocol level bugs)

it feels like I am wasting peoples time,and I should get back in my
box. so I will.

contact me off list if you want to have a look at the various workflow
stuff i have done.

cheers,

steve
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.17 (MingW32)
Comment: Using GnuPG with Mozilla - http://www.enigmail.net/

iQEcBAEBAgAGBQJQa6pAAAoJEFvEB9dQFvtQ0H8H/jUjvzmsp61w1bmDnHR+KmF4
LNu7WwVLrTvrT8AHSNh3mClWvMM3muJJA7NMb2WthAgVe3jtrGimfreAlstDsObL
XNEcGvU6WN1YosH0MkN7hyDl8jnrDFoiH1P5qsMecuZIxwq7Z0vCOHEJ9DPmZilW
R+G8OmoGcpaeWs9VqXR6zR7Uyz69KaDAQpMRE1GTu3zQP9HSSolciy3ESeJRR9Sd
yO7EcCGdQot80rOG/VIZ0wkOmzGGm1thzYzayD6Zn2eW4Hw+ME1en9ksIbXJFpSv
IdgThEm7p5UuBo0jFkbX4Awrf9hfusZSEGWfhZqdASqqkSBnYqLmWF1sLprDRF8=
=Iv87
-----END PGP SIGNATURE-----



From peter at coinlab.com  Wed Oct  3 05:04:32 2012
From: peter at coinlab.com (Peter Vessenes)
Date: Tue, 2 Oct 2012 22:04:32 -0700
Subject: [Bitcoin-development] Bitcoin Testing Project
In-Reply-To: <CAMGNxUuHRBkE_MbmY=A0vQvq=gMfzCFG8Us7SdBn-14KiKMaNg@mail.gmail.com>
References: <5061F8CC.9070906@mistfpga.net>
	<1348605677.2284.2.camel@localhost.localdomain>
	<5062F4F8.6040504@mistfpga.net>
	<CA+s+GJBM4DwDoqT8RC0+SyrLYrLGZuGZSuoj7zbHunQa3kFoRA@mail.gmail.com>
	<506301AC.90101@mistfpga.net>
	<CACh7GpHFY_KUhhtk09H_oCzBtRh66artDCqz8pXNTh_ZzkAABg@mail.gmail.com>
	<50633F02.6030807@mistfpga.net>
	<CABsx9T119rT1NssV6YO8KPse3sEGHZJ-vzFFD3o=aAQ161g6-A@mail.gmail.com>
	<50673D69.5040105@mistfpga.net>
	<CAGg41SV9nAA0ispDG4-QUnjAMprnyQrH-faGVn7buau0vj=PBw@mail.gmail.com>
	<5069A89E.7090003@mistfpga.net>
	<CAMGNxUugk3e7yhgjjSPO0CQEGe0Ucp3_Wb+JxJkwYv41t2MPYQ@mail.gmail.com>
	<506B9197.2000202@mistfpga.net>
	<CAMGNxUu=LTZyAxKt3pAYSVxyhHBU9pyJPCiFs-tA_weYNNXbtw@mail.gmail.com>
	<CAMGNxUuHRBkE_MbmY=A0vQvq=gMfzCFG8Us7SdBn-14KiKMaNg@mail.gmail.com>
Message-ID: <CAMGNxUs7UkeoKkTU0Hmx8ZxGqSh+0hHpLE87sPxyR7onYo82HQ@mail.gmail.com>

And, finally, when I say "Ditto to above" I mean "I have no idea", not
"nope". Double oops.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121002/72c1d5e1/attachment.html>

From steve at mistfpga.net  Wed Oct  3 16:06:48 2012
From: steve at mistfpga.net (steve)
Date: Wed, 03 Oct 2012 17:06:48 +0100
Subject: [Bitcoin-development] Bitcoin Testing Project
In-Reply-To: <CAMGNxUuHRBkE_MbmY=A0vQvq=gMfzCFG8Us7SdBn-14KiKMaNg@mail.gmail.com>
References: <5061F8CC.9070906@mistfpga.net>
	<1348605677.2284.2.camel@localhost.localdomain>
	<5062F4F8.6040504@mistfpga.net>
	<CA+s+GJBM4DwDoqT8RC0+SyrLYrLGZuGZSuoj7zbHunQa3kFoRA@mail.gmail.com>
	<506301AC.90101@mistfpga.net>
	<CACh7GpHFY_KUhhtk09H_oCzBtRh66artDCqz8pXNTh_ZzkAABg@mail.gmail.com>
	<50633F02.6030807@mistfpga.net>
	<CABsx9T119rT1NssV6YO8KPse3sEGHZJ-vzFFD3o=aAQ161g6-A@mail.gmail.com>
	<50673D69.5040105@mistfpga.net>
	<CAGg41SV9nAA0ispDG4-QUnjAMprnyQrH-faGVn7buau0vj=PBw@mail.gmail.com>
	<5069A89E.7090003@mistfpga.net>
	<CAMGNxUugk3e7yhgjjSPO0CQEGe0Ucp3_Wb+JxJkwYv41t2MPYQ@mail.gmail.com>
	<506B9197.2000202@mistfpga.net>
	<CAMGNxUu=LTZyAxKt3pAYSVxyhHBU9pyJPCiFs-tA_weYNNXbtw@mail.gmail.com>
	<CAMGNxUuHRBkE_MbmY=A0vQvq=gMfzCFG8Us7SdBn-14KiKMaNg@mail.gmail.com>
Message-ID: <506C6298.4010500@mistfpga.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi Peter,

Thank you for your in depth, forthright and professional response. You
have answered my questions.  And you have cleared up a lot of
confusion I had in my mind. (and I read ditto as i dont know) I
appreciate the extra information. :)

This is a top post and there is nothing inline so i snipped it.

cheers,

steve

On 03/10/2012 06:03, Peter Vessenes wrote:
> Oops, I accidentally didn't reply-all to Steve. I am ccing my
> detailed response to steve to the list since I think people are
> wondering about how the Foundation fits in; trash the e-mail if you
> don't really care. :)
> 
> On Tue, Oct 2, 2012 at 10:01 PM, Peter Vessenes <peter at coinlab.com>
> wrote:
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.17 (MingW32)
Comment: Using GnuPG with Mozilla - http://www.enigmail.net/

iQEcBAEBAgAGBQJQbGKXAAoJEFvEB9dQFvtQ5QcIAJR0RlkjUb5Xm09eo7wjV2QV
IYXbyOBx6bZWox0wxmbygpPL23grEKxlehavf18Q1S6VjdtFs75K5GV83FZb9KPk
YeB0hz5ht48Ig7uQ3zu7MBCaNerTst+6fQ/k5Uu6l2WKCVwk18WykGrnXMnSTbpM
qONQCc4HQhOm7sgEsJD9KNp73eGZt/BG0hQAa8zLh2rHA0to8TER9nRUUx+mH0uf
Cj58EXKVz5WI5+G31M/4v4UgRRv3Z7efaVbczrvhvv6DZfVkCpuD6t0kt2ZlcFCn
oO1sKD05/VtC7DZxQvPEvvkikOp8onmue0xCJBvDpG269Xr55qNqGM039Yjy80c=
=1NTS
-----END PGP SIGNATURE-----



From arklan.uthoslin at gmail.com  Wed Oct  3 16:11:39 2012
From: arklan.uthoslin at gmail.com (Arklan Uth Oslin)
Date: Wed, 3 Oct 2012 10:11:39 -0600
Subject: [Bitcoin-development] Bitcoin Testing Project
In-Reply-To: <506C6298.4010500@mistfpga.net>
References: <5061F8CC.9070906@mistfpga.net>
	<1348605677.2284.2.camel@localhost.localdomain>
	<5062F4F8.6040504@mistfpga.net>
	<CA+s+GJBM4DwDoqT8RC0+SyrLYrLGZuGZSuoj7zbHunQa3kFoRA@mail.gmail.com>
	<506301AC.90101@mistfpga.net>
	<CACh7GpHFY_KUhhtk09H_oCzBtRh66artDCqz8pXNTh_ZzkAABg@mail.gmail.com>
	<50633F02.6030807@mistfpga.net>
	<CABsx9T119rT1NssV6YO8KPse3sEGHZJ-vzFFD3o=aAQ161g6-A@mail.gmail.com>
	<50673D69.5040105@mistfpga.net>
	<CAGg41SV9nAA0ispDG4-QUnjAMprnyQrH-faGVn7buau0vj=PBw@mail.gmail.com>
	<5069A89E.7090003@mistfpga.net>
	<CAMGNxUugk3e7yhgjjSPO0CQEGe0Ucp3_Wb+JxJkwYv41t2MPYQ@mail.gmail.com>
	<506B9197.2000202@mistfpga.net>
	<CAMGNxUu=LTZyAxKt3pAYSVxyhHBU9pyJPCiFs-tA_weYNNXbtw@mail.gmail.com>
	<CAMGNxUuHRBkE_MbmY=A0vQvq=gMfzCFG8Us7SdBn-14KiKMaNg@mail.gmail.com>
	<506C6298.4010500@mistfpga.net>
Message-ID: <CAGg41SWr+CJEVK9ExpCva31wu1cxiHpDaaHwtwkMEogDd2i9gw@mail.gmail.com>

is it just me, or did peter not send his message to anyone but steve -
twice? all i see is his "and finally..." then this from steve.

Arklan

----------
As long as there is light, the darkness holds no fear. And yet, even in the
deepest black, there is life. - Arklan Uth Oslin

I want to leave this world the same way I came into it: backwards and on
fire. - Arklan Uth Oslin



On Wed, Oct 3, 2012 at 10:06 AM, steve <steve at mistfpga.net> wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hi Peter,
>
> Thank you for your in depth, forthright and professional response. You
> have answered my questions.  And you have cleared up a lot of
> confusion I had in my mind. (and I read ditto as i dont know) I
> appreciate the extra information. :)
>
> This is a top post and there is nothing inline so i snipped it.
>
> cheers,
>
> steve
>
> On 03/10/2012 06:03, Peter Vessenes wrote:
> > Oops, I accidentally didn't reply-all to Steve. I am ccing my
> > detailed response to steve to the list since I think people are
> > wondering about how the Foundation fits in; trash the e-mail if you
> > don't really care. :)
> >
> > On Tue, Oct 2, 2012 at 10:01 PM, Peter Vessenes <peter at coinlab.com>
> > wrote:
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v2.0.17 (MingW32)
> Comment: Using GnuPG with Mozilla - http://www.enigmail.net/
>
> iQEcBAEBAgAGBQJQbGKXAAoJEFvEB9dQFvtQ5QcIAJR0RlkjUb5Xm09eo7wjV2QV
> IYXbyOBx6bZWox0wxmbygpPL23grEKxlehavf18Q1S6VjdtFs75K5GV83FZb9KPk
> YeB0hz5ht48Ig7uQ3zu7MBCaNerTst+6fQ/k5Uu6l2WKCVwk18WykGrnXMnSTbpM
> qONQCc4HQhOm7sgEsJD9KNp73eGZt/BG0hQAa8zLh2rHA0to8TER9nRUUx+mH0uf
> Cj58EXKVz5WI5+G31M/4v4UgRRv3Z7efaVbczrvhvv6DZfVkCpuD6t0kt2ZlcFCn
> oO1sKD05/VtC7DZxQvPEvvkikOp8onmue0xCJBvDpG269Xr55qNqGM039Yjy80c=
> =1NTS
> -----END PGP SIGNATURE-----
>
>
> ------------------------------------------------------------------------------
> Don't let slow site performance ruin your business. Deploy New Relic APM
> Deploy New Relic app performance management and know exactly
> what is happening inside your Ruby, Python, PHP, Java, and .NET app
> Try New Relic at no cost today and get our sweet Data Nerd shirt too!
> http://p.sf.net/sfu/newrelic-dev2dev
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121003/13c46b8b/attachment.html>

From steve at mistfpga.net  Wed Oct  3 16:15:04 2012
From: steve at mistfpga.net (steve)
Date: Wed, 03 Oct 2012 17:15:04 +0100
Subject: [Bitcoin-development] Fwd: Re:  Bitcoin Testing Project
In-Reply-To: <CAMGNxUu=LTZyAxKt3pAYSVxyhHBU9pyJPCiFs-tA_weYNNXbtw@mail.gmail.com>
References: <CAMGNxUu=LTZyAxKt3pAYSVxyhHBU9pyJPCiFs-tA_weYNNXbtw@mail.gmail.com>
Message-ID: <506C6488.8080007@mistfpga.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


I think he had a typo in the CC.  here is a forward of the email.
You will have to work out the indentations yourselves :)

- -------- Original Message --------
Subject: Re: [Bitcoin-development] Bitcoin Testing Project
Date: Tue, 2 Oct 2012 22:01:19 -0700
From: Peter Vessenes <peter at coinlab.com>
To: steve <steve at mistfpga.net>

On Tue, Oct 2, 2012 at 6:15 PM, steve <steve at mistfpga.net> wrote:

> On 01/10/2012 17:52, Peter Vessenes wrote:
>> I'm a big proponent of a testing project.
> 
> I am very happy to hear this, however, your actual words are
> slightly evasive. I do not expect you to be up to speed on this.
> Gavin started a project called 'the bitcoin testing project' This
> project solicited donations, about 80 coins last time I checked.
> However these 80 odd coins were donated to 'the bitcoin testing
> project' This would seem to be an official bitcoin (both protocol
> and client) testing project.  I signed up to work on this, and
> organise as much as i could of this. for various reasons I did not
> manage to do the testing I wanted to on 0.7 i over committed
> myself.
> 
> Are the donations solicited for the 'bitcoin testing project)
> funds going to be given to 'the foundation'?
> 
> 
> Not as far as I know; sounds like they should go toward testing.
> 
> 
> Does the foundation support 'the bitcoin testing project'? does
> the foundation have any involvement with 'the bitcoin testing
> project'?
> 
> I personally support the idea of a testing project. I would like
> the Foundation to fund it if it can't crowdsource funding from the
> forums; sounds like so far the support hasn't been enough to get
> all the work done. The Foundation has no formal role with the
> bitcoin testing project that I'm aware of.
> 
> 
> 
> 
>> I think if one could self organize that Gavin and team wanted to 
>> bless we could put up some BTC as bounties or funding. We won't 
>> have our heads around the foundation budget for a few more
>> weeks, but self-organization is often slower than budgeting. :)
> 
> Im ready to go, more or less.  Please check out the links in my 
> previous emails. I have over 400 testcases (8 platforms * 50
> release tests) - Also I am not sure what you mean by bless, I take
> it that is a euphemism for pay?
> 
> Wow, that's awesome! I use bless to mean "Gavin saying that it
> sounds good."
> 
> 
> I have tried my hardest to get bettermeans to work, but it doesnt.
> It does show quite a lot of work that I have done though. If you
> were to say to me, 'steve, by monday we need end to end,
> requirements based testing' It would be done. (I have already spent
> over 4 months on this)  Leaderless leadership is something I am
> having a hard time with, bettermeans is excellent at this.  But I
> have found very little in regards to voting and polling that
> integrates with the project in an effortless way like bettermeans.
> 
> I understand that the budget from the foundation is something that 
> needs to be worked on and organised.  I offer my services in this
> area (qa only).  I would be happy to submit my cv and refs for
> this, if required.
> 
> I am now feeling frustrated and useless.  has my last 4 months of
> work been for nothing? it feels like it.  I know I bang on about
> processes but they are sorted, you can only attract talent like
> Arklan if he has a process to follow. i feel like a broken record.
> 
> I'm a little late to this conversation, so I don't know what to say
> in response. I will answer your questions below, though.
> 
> 
> tl;dr version 1 - Will donations to the 'bitcoin testing project'
> as started by gavin going to be given to the foundation?
> 
> 
> I don't expect so, although we'd take them if whoever is in charge
> of the testing project wants to do so. I'd expect that if the
> testing project is good and community approved and supported by the
> dev team the funding flow would go the other way, but we'll need to
> wait for budgets to get finished.
> 
> 
> 2 - Is the work bill hees and myself going to be binned?
> 
> 
> I have no idea whatsoever, I would guess that's up to you and bill
> hees and the dev team.
> 
> 
> 3 - I feel like I have the knowledge and drive to push this, but I 
> cant do it on my own.
> 
> 
> Totally understand the feeling!
> 
> 
> 4 - Is bill or I entitled to any of the cash raised for 'the
> bitcoin testing project'
> 
> 
> I have no idea what the bitcoin testing project finance situation
> is.
> 
> 
> 5 - Do I have to join the foundation to have a say in how the
> project (testing) is done?
> 
> 
> Nope
> 
> 
> 6 - sorry for being so mercenary, but am I going to receive any
> coin for work I have done?
> 
> 
> Ditto to above
> 
> 
> 7 - It really probably is the time for a bitcoin-test list to
> appear. Is there anything I can do to make this happen?
> 
> I don't have much to do with this.
> 
> 
>> This is just my opinion, but I would like very, very much to
>> move the current specification into unit tests so that anyone
>> could validate their alternate bitcoin implementation. This is a
>> lot of work, some of which has been done, much of which hasn't.
> 
> have a look at the stuff in bettermeans.  I personally think we can
> go a step further and publish guidelines (similar to RFC's and all
> the tests that we would do against a ref client)
> 
> 
> Cool, I will check it out. I agree with the RFC oriented approach,
> or perhaps a canonical test suite for validation and verification.
> 
> 
> But I dont want to waste any more time on stuff that is going to
> be ignored, life is short.
> 
> 
>> So, my two cents, plus an offer to bring it up at our next 
>> budgeting meeting.
> 
> I accept that offer. and I really appreciate it.  I have some more 
> questions I would like you to ask in regards to QA. (Gavin and I 
> skyped about this a while ago and we didnt really come to a 
> resolution, weworked out the problems though ;) )
> 
> I have an exceptionally detailed qa process (based off the game 
> certification process) - but I have gone on about this at length
> in previous messages.
> 
> I thank you for your email and your involvement with this, but do
> you think we are closer to getting stuff tested? call my bluff...
> Not one person has asked for login details to my proposals - and i
> even have a bugzilla version now.
> 
> I need to sleep.  sorry if i rambled.
> 
> nite nite,
> 
> steve
> 
> 
> Thanks for all the details. I'm trying to go into extra detail in
> my response to you because people are still figuring out the
> Foundation's situation with all things Bitcoin. I can't offer you
> any promises for your future, but I'm personally really psyched to
> hear about these tests. I'll let other more knowledgeable folks
> jump in on the technology side of things.
> 
> 
> 
>> Peter
> 
> 
>> On Mon, Oct 1, 2012 at 7:28 AM, steve <steve at mistfpga.net>
>> wrote:
> 
>> On 01/10/2012 14:52, Arklan Uth Oslin wrote:
>>>>> Hi guys.
>>>>> 
>>>>> So, as I mentioned on the bitcointalk.org forums thread
>>>>> about the foundation, I want to get involved in the QA side
>>>>> of bitcoin development. I've done functional testing in
>>>>> the video game industry for years.
> 
>> Nice one, I worked in games for quite a few years. (before
>> getting into finance then pentesting) there are about 6 keen
>> testers now. maybe we should get a bitcoin-test mailing list,
>> where we can discuss stuff without disturbing the dev team.
> 
>>>>> I've read all the messages in this thread, but I'm left 
>>>>> unclear how I can most effectively and quickly being
>>>>> helping out. Could I get a bit of a directional nudge?
> 
>> Great question... for me I feel structure is the most important 
>> thing to sort out first.  However we desperately need detailed 
>> testcases for the release of a new version. - Not too much on
>> the change log stuff, more on the noddy stuff (as gavin points
>> out below), downloading and making sure it works on a non dev
>> machine, make sure the wallet isnt overwritten, etc.) doing games
>> qa I imagine this would be an ideal place for you to start.  I
>> have a MSDN and TechNet licence so if you need some reference ms
>> virtual machines I can help you out.
> 
>> However we need some testcase software.  Please check out what
>> was done on bettermeans for the stuff I was planning out...
> 
>> It details everything from recompense and testcases. bettermeans 
>> kinda died a death though...
> 
>> check out:
> 
>> Bitcoin over all- 
>> https://secure.bettermeans.com/projects/4180/wiki/Page_index 
>> discussion https://secure.bettermeans.com/projects/4180/boards
> 
>> 0.7 https://secure.bettermeans.com/projects/4256/boards and 
>> https://secure.bettermeans.com/projects/4256/wiki
> 
>> I still have the testcases, but until we get some proper
>> testcase software I am loathed to publish them in a half arsed
>> format. (they worked well on bettermeans, then just vanished one
>> day...) what testcase software are you familiar with?
> 
>> apart from that, what do you feel you can do for the project?
>> how long have you been involved in bitcoin?  It may well be
>> worth reading up all the dev stuff on the wiki so you can get you
>> head around how the bitcoin protocol is different from the daemon
>> and qt client. What do you think you can and will enjoy doing?
>> What is your skill set in regard to networking, crypto and
>> operating systems. (not that you need any, in any we still want
>> and need you. :)
> 
>> there really is room for you to do whatever role you want, and
>> as little or as much as you want - however funding is now a very 
>> tricky issue. so much so that I am not sure I want anything to
>> do with it(distribution of coin based on work.). - I just paid
>> for some logo spec work out of my own pocket (for example).  I
>> have some testers i know irl who are willing to work for coin.
> 
>> NOTE: This response has nothing to do with the bitcoin
>> foundation. I am not a member of the foundation. I do not speak
>> for them or even probably with them. I am still trying to work
>> out how much qa the foundation should be responsible for, and/how
>> it is supposed to work. I think the games cert process would be
>> ideal for this.  This however this a discussion that probably
>> wont have my involvement. (personally I believe that the
>> foundation should publish requirements with example code and
>> testcases for each aspect of the reference client. (on reference
>> platforms - I do not expect many to agree with this though)
> 
>> As a side note, what happens to the donations to the bitcoin 
>> testing project? do they get moved over to the foundation? this 
>> question is bigger than this email. as far as I know they are
>> all on an address Gavin holds. Actually I would like to be
>> involved in any discussions that would impact QA, does this mean
>> I need to join the foundation or just go lone wolf?
> 
>> tbh I dont really understand foundations.  I always thought they 
>> were just a tax dodge.
> 
>> Sorry for the long message. :)
> 
>>>>> 
>>>>> Arklan
>>>>> 
>>>>> ---------- As long as there is light, the darkness holds
>>>>> no fear. And yet, even in the deepest black, there is life.
>>>>> - Arklan Uth Oslin
>>>>> 
>>>>> I want to leave this world the same way I came into it: 
>>>>> backwards and on fire. - Arklan Uth Oslin
>>>>> 
>>>>> 
>>>>> 
>>>>> On Sat, Sep 29, 2012 at 12:26 PM, steve
>>>>> <steve at mistfpga.net> wrote:
>>>>> 
>>>>> Hi Gavin,
>>>>> 
>>>>> Sorry for the delayed response, I wanted to take a couple
>>>>> of days to reflect on your email.
>>>>> 
>>>>> On 26/09/2012 19:09, Gavin Andresen wrote:
>>>>> 
>>>>> 
>>>>> And their are other methods too.
>>>>> 
>>>>> 
>>>>> 
>>>>> The GUI::Test package for perl will allow this to be
>>>>> greatly automated. (I have done this before on the
>>>>> localisation of photoshop.)
>>>>> 
>>>>> 
>>>>> 
>>>>> this why we need detailed testscripts and plans.  so we
>>>>> know what has and hasnt been done. The more boring the task
>>>>> the more work that needs to go into testcase development.
>>>>> This is the area I see as my greatest failing last time.  I
>>>>> have a large number of virtual machines and should have at
>>>>> least this work.  But we need very detailed testcases.
>>>>> with decent testplans just downloading the software,
>>>>> syncing the block chain, syncing an existing wallet,
>>>>> rescanning the blockchain and verifying the balance would
>>>>> cover a large number of tests.  The idea behind having lots
>>>>> of very specific testcases is you get to see what tests
>>>>> have not been run.
>>>>> 
>>>>> 
>>>>> 
>>>>> I understand your concern, however I have taken a couple
>>>>> of days to reflect on this and I still strongly feel that
>>>>> in order to make sure that this sticks, and is still useful
>>>>> in 1 years time we need to lay proper foundations. Those 
>>>>> foundations are not word documents, spreadsheets, etc.
>>>>> they are selecting the right tools for the job.
>>>>> 
>>>>> We can gain so much benefit from using 3rd party software. 
>>>>> (bettermeans would rock if it wasnt rotting)
>>>>> 
>>>>> I am sure you could do your coding work just using vi, but
>>>>> an sdk makes it much easier and allows you to work in a
>>>>> more productive manner.
>>>>> 
>>>>> I have had a couple of off list emails with some testers
>>>>> and they also feel that it is very important to make sure
>>>>> we have a sound foundation (mantis is so much more than
>>>>> just a bug reporting tool, I see the bug reporting
>>>>> functionality as secondary to the main test run
>>>>> functionality - but it doesnt have to be mantis based, we
>>>>> do need workflow and testcase software though - and proper
>>>>> software for this is much better than just a massive google
>>>>> doc.) however I am checking out some other software that
>>>>> has been recommended.  It will be very hard to change 'the
>>>>> process' once we have something we are used too (just look
>>>>> at the current resistance) I promise nothing will change
>>>>> for the dev team.  But test does need other tools, and
>>>>> processes.
>>>>> 
>>>>> If you feel that strongly that I am going about this the 
>>>>> wrong way, I am happy to step back and let someone else
>>>>> sort it out (I will still do all the testing I possibly
>>>>> can). I would feel that this would be a real shame and we
>>>>> have the chance to setup requirements to functionality to
>>>>> tests all with traceability. why not do it right from the
>>>>> start?
>>>>> 
>>>>> I will open up my vps' somepoint over the next few days
>>>>> and you can see what I mean. I will setup a fake git
>>>>> project, and sort out the interactions.
>>>>> 
>>>>> 
>>>>>> 
>>>>>> 
>>>>>> 
> 
> ------------------------------------------------------------------------------
>>>>>>
>>>>>>
>
> 
> 
> How fast is your code?
>>>>>> 3 out of 4 devs don\\\'t know how their code performs in 
>>>>>> production. Find out how slow your code is with 
>>>>>> AppDynamics Lite. 
>>>>>> http://ad.doubleclick.net/clk;262219672;13503038;z? 
>>>>>> http://info.appdynamics.com/FreeJavaPerformanceDownload.html
>>>>>>
>>>>>>
>
>>>>>> 
_______________________________________________
>>>>>> Bitcoin-development mailing list 
>>>>>> Bitcoin-development at lists.sourceforge.net 
>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>
>>>>>> 
>>>>>> 
> -
> 
> ------------------------------------------------------------------------------
>>>>>
>>>>>
>>
> 
Got visibility?
>>>>> Most devs has no idea what their production app looks
>>>>> like. Find out how fast your code is with AppDynamics
>>>>> Lite. http://ad.doubleclick.net/clk;262219671;13503038;y? 
>>>>> http://info.appdynamics.com/FreeJavaPerformanceDownload.html
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> 
_______________________________________________
>>>>> Bitcoin-development mailing list 
>>>>> Bitcoin-development at lists.sourceforge.net 
>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>
>
>>>>> 
>>>>> 
>>> 
>>> 
>>> 
> ------------------------------------------------------------------------------
>>>
>>>
>
> 
Got visibility?
>>> Most devs has no idea what their production app looks like.
>>> Find out how fast your code is with AppDynamics Lite. 
>>> http://ad.doubleclick.net/clk;262219671;13503038;y? 
>>> http://info.appdynamics.com/FreeJavaPerformanceDownload.html 
>>> _______________________________________________ 
>>> Bitcoin-development mailing list 
>>> Bitcoin-development at lists.sourceforge.net 
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>
>>> 
> 
> 
> 
> 

- -- 
- ------------------------------

[image: CoinLab Logo]PETER VESSENES
CEO

*peter at coinlab.com * /  206.486.6856  / SKYPE: vessenes
811 FIRST AVENUE  /  SUITE 480  /  SEATTLE, WA 98104



-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.17 (MingW32)
Comment: Using GnuPG with Mozilla - http://www.enigmail.net/

iQEcBAEBAgAGBQJQbGSIAAoJEFvEB9dQFvtQw1YH+wW3QDMHHV7kf7ZQXvAswv5T
S2htfdgp1DBYBatoJB9fUU3hgHTEz1UhENH509SjS1/dxHuIxguJkbgmuSdoeB/4
rDuuYzQVcmym/G1YXvmAkCDk5/fUY4RKlCDGLg9MVMpVFhLIr6Jiwxd0NiIqWm9K
aE2bXijiTIRp1sNFxJh5SZTh9/rz1zF8TU3LBWyCegISwyBH2XeIIbVgORoMDBlm
n8yKGwPSg5PaH/eWhXR17OUMPbX6xGlMqTmBo7BZDCwPpZU470rkDsPywsn55mAf
W6EQhFjxpSCnmZwRhrkdM/Le/0ySSUvM4spPu7MlQ6ekGP2gBzzUPbKnTGHzNgQ=
=r57G
-----END PGP SIGNATURE-----



From peter at coinlab.com  Wed Oct  3 17:09:52 2012
From: peter at coinlab.com (Peter Vessenes)
Date: Wed, 3 Oct 2012 10:09:52 -0700
Subject: [Bitcoin-development] Fwd: Re: Bitcoin Testing Project
In-Reply-To: <506C6488.8080007@mistfpga.net>
References: <CAMGNxUu=LTZyAxKt3pAYSVxyhHBU9pyJPCiFs-tA_weYNNXbtw@mail.gmail.com>
	<506C6488.8080007@mistfpga.net>
Message-ID: <CAMGNxUuacQ6sbX0SnU3LwMDbcbBNburwj07BpRQ3B2YjYv9w_A@mail.gmail.com>

My reply-all forward was blocked (over 40k), sigh. I figured I'd spammed
the list enough for one night.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121003/42270bf4/attachment.html>

From gavinandresen at gmail.com  Wed Oct  3 17:30:44 2012
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Wed, 3 Oct 2012 13:30:44 -0400
Subject: [Bitcoin-development] Fwd: Re: Bitcoin Testing Project
In-Reply-To: <CAMGNxUuacQ6sbX0SnU3LwMDbcbBNburwj07BpRQ3B2YjYv9w_A@mail.gmail.com>
References: <CAMGNxUu=LTZyAxKt3pAYSVxyhHBU9pyJPCiFs-tA_weYNNXbtw@mail.gmail.com>
	<506C6488.8080007@mistfpga.net>
	<CAMGNxUuacQ6sbX0SnU3LwMDbcbBNburwj07BpRQ3B2YjYv9w_A@mail.gmail.com>
Message-ID: <CABsx9T1BF=Y-wONZ_Qwc=LJsVVPo-M_Ux6kPp11TPMmBFdq_3A@mail.gmail.com>

I had hope the Testing Project would be self-organizing, with somebody
taking on the QA lead role and figuring out the hard questions like:

+ How to do fundraising?
+ If/when bitcoins are available, how to decide who gets rewarded for what?
+ If somebody wants to help, how do they start?

Steve jumped in and started creating a gazillion tests cases, which is
great, but creating test cases isn't the hard part. Creating a
"community" of testing that gets things done is the hard part that I,
frankly, don't have time to do.

I hoped that the BetterMeans platform would help, but it sounds like
it was more of a hindrance than a help.  Ok:  live and learn.  Failed
experiment, lets move on...

So, RE: moving on:  I'd like to tag a 0.7.1rc1 release in the next few
days (I'll start another thread about that). How about a very
short-term goal of getting these QA deliverables:

1. A process for QA testers to sanity-test release builds, and
sign-off as "Tested/problems found" or "Tested/OK"
2. Some place online I can look to see if all of our supported
platforms have been tested before promoting a release candidate to
"final release"



PS: Thanks to Peter for responding to the "what's the relationship
between the Foundation and the Testing Project" (executive summary: no
relationship right now).

-- 
--
Gavin Andresen



From imiers1 at jhu.edu  Wed Oct  3 17:38:13 2012
From: imiers1 at jhu.edu (Ian Miers)
Date: Wed, 3 Oct 2012 13:38:13 -0400
Subject: [Bitcoin-development] performance testing for bitcoin
In-Reply-To: <CAEC9zAYrMHHEyyTx1QVHoGSJU3fFypB0Hx4K-VFoUn0hp4Z7JA@mail.gmail.com>
References: <CAEC9zAbHO9y7Go4FhZFyOCKdm1js_eKCoz7iaOCh1Wu=B9OASw@mail.gmail.com>
	<CAEC9zAYrMHHEyyTx1QVHoGSJU3fFypB0Hx4K-VFoUn0hp4Z7JA@mail.gmail.com>
Message-ID: <CAEC9zAbkWWcn5eRHLh6u+zyGu92E1Yq-9CQVPqE_6-QwMVs=4Q@mail.gmail.com>

Whats the best way to get performance numbers for modifications to bitcoin
? Profiling it while running on testnet might work, but that would take a
rather long time to get data.
Is there anyway to speed this up  if we only needed to
provide  relative performance between tests. (in a sense a fast performance
regression test).

At least in theory, one possibility would be to replay real
bitcoin transactions  to a test-net-in-a-box network (of maybe a few nodes)
that has the real blockchain history loaded into it but then operates at a
far reduced hash difficulty in order facilitate running quickly.

Are there existing techniques/scripts for  some kind of perf testing with
traffic that at least approximates real world traffic ?
The test infrastructure  that ships with bitcoin does not appear to provide
this.

Thanks,
Ian

>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121003/2ff02125/attachment.html>

From jgarzik at exmulti.com  Wed Oct  3 17:43:36 2012
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Wed, 3 Oct 2012 13:43:36 -0400
Subject: [Bitcoin-development] performance testing for bitcoin
In-Reply-To: <CAEC9zAbkWWcn5eRHLh6u+zyGu92E1Yq-9CQVPqE_6-QwMVs=4Q@mail.gmail.com>
References: <CAEC9zAbHO9y7Go4FhZFyOCKdm1js_eKCoz7iaOCh1Wu=B9OASw@mail.gmail.com>
	<CAEC9zAYrMHHEyyTx1QVHoGSJU3fFypB0Hx4K-VFoUn0hp4Z7JA@mail.gmail.com>
	<CAEC9zAbkWWcn5eRHLh6u+zyGu92E1Yq-9CQVPqE_6-QwMVs=4Q@mail.gmail.com>
Message-ID: <CA+8xBpdZDznkyWXn8AxdUDk0CJ0b2m1qpTgVjtPbs0ge+ODCSg@mail.gmail.com>

On Wed, Oct 3, 2012 at 1:38 PM, Ian Miers <imiers1 at jhu.edu> wrote:
> Whats the best way to get performance numbers for modifications to bitcoin ?
> Profiling it while running on testnet might work, but that would take a
> rather long time to get data.
> Is there anyway to speed this up  if we only needed to provide  relative
> performance between tests. (in a sense a fast performance regression test).

You have to be specific about what you're measuring, because
"performance" is vague.

You can measure many aspects of blockchain performance by importing
blocks via -loadblock=FILE.

Other performance measurements like "how fast does a block relay
through the network" cannot be as easily measured.

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From gavinandresen at gmail.com  Wed Oct  3 17:49:22 2012
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Wed, 3 Oct 2012 13:49:22 -0400
Subject: [Bitcoin-development] 0.7.1 release
Message-ID: <CABsx9T1v9Rfm_d7DcfbkkHEC96CwTNNp4_E1G97UBXqVHjVyOw@mail.gmail.com>

There is consensus that we need to do a 0.7.1 release to fix the
"click on a bitcoin: URI and nothing happens" bug on Windows.

I would really like to fix the "I upgraded from a binary running an
incompatible version of BDB and now I get a DB_RUNRECOVERY error on
startup" problem, too, and I've got a pull request that fixes half of
that problem (plus a bunch of other "my wallet is broken" cases):

"Handle corrupt wallets gracefully" :
https://github.com/bitcoin/bitcoin/pull/1895

This pull request:

"Add -reindex, to perform in-place reindexing of blockchain data
files" : https://github.com/bitcoin/bitcoin/pull/1870

... could be the basis for fixing the other half of the problem (if
blkindex.dat is bad, delete it and re-create it from the blk000?.dat
files).

Are there any other very-high-priority pull requests that should go
into a 0.7.1 release?

I'd like to pull:

"P2P: Do not request blocks from peers with fewer blocks than us" :
https://github.com/bitcoin/bitcoin/pull/1834
"In listaddressgroupings push down the IsMine check to run on each
input." : https://github.com/bitcoin/bitcoin/pull/1872

... and these which could be considered fixes to the new raw transactions API:

"Add redeemScript to raw transactions API"  :
https://github.com/bitcoin/bitcoin/pull/1818
"Add new RPC "lockunspent", to prevent spending of selected outputs" :
https://github.com/bitcoin/bitcoin/pull/1861

--
--
Gavin Andresen



From imiers1 at jhu.edu  Wed Oct  3 17:57:04 2012
From: imiers1 at jhu.edu (Ian Miers)
Date: Wed, 3 Oct 2012 13:57:04 -0400
Subject: [Bitcoin-development] performance testing for bitcoin
In-Reply-To: <CA+8xBpdZDznkyWXn8AxdUDk0CJ0b2m1qpTgVjtPbs0ge+ODCSg@mail.gmail.com>
References: <CAEC9zAbHO9y7Go4FhZFyOCKdm1js_eKCoz7iaOCh1Wu=B9OASw@mail.gmail.com>
	<CAEC9zAYrMHHEyyTx1QVHoGSJU3fFypB0Hx4K-VFoUn0hp4Z7JA@mail.gmail.com>
	<CAEC9zAbkWWcn5eRHLh6u+zyGu92E1Yq-9CQVPqE_6-QwMVs=4Q@mail.gmail.com>
	<CA+8xBpdZDznkyWXn8AxdUDk0CJ0b2m1qpTgVjtPbs0ge+ODCSg@mail.gmail.com>
Message-ID: <CAEC9zAZR7xOUEJZz0f-Of0HTVAcL8uCw3tcR1s66Hg_kZbczRg@mail.gmail.com>

Script evaluation performance was what I was primarily concerned with.  I'm
fooling around with adding some new instruction types.
The tricky part is that to test how that effects performance, you need to
be able to intersperse transactions with the new instructions with existing
ones.  For accuracy, you'd like your simulated traffic to at least
approximate the real world traffic.


Also, is there any bench-marking / instrumentation in bitcoind ?

Ian
On Wed, Oct 3, 2012 at 1:43 PM, Jeff Garzik <jgarzik at exmulti.com> wrote:

> On Wed, Oct 3, 2012 at 1:38 PM, Ian Miers <imiers1 at jhu.edu> wrote:
> > Whats the best way to get performance numbers for modifications to
> bitcoin ?
> > Profiling it while running on testnet might work, but that would take a
> > rather long time to get data.
> > Is there anyway to speed this up  if we only needed to provide  relative
> > performance between tests. (in a sense a fast performance regression
> test).
>
> You have to be specific about what you're measuring, because
> "performance" is vague.
>
> You can measure many aspects of blockchain performance by importing
> blocks via -loadblock=FILE.
>
> Other performance measurements like "how fast does a block relay
> through the network" cannot be as easily measured.
>
> --
> Jeff Garzik
> exMULTI, Inc.
> jgarzik at exmulti.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121003/1aa6043b/attachment.html>

From laanwj at gmail.com  Wed Oct  3 18:49:59 2012
From: laanwj at gmail.com (Wladimir)
Date: Wed, 3 Oct 2012 20:49:59 +0200
Subject: [Bitcoin-development] 0.7.1 release
In-Reply-To: <CABsx9T1v9Rfm_d7DcfbkkHEC96CwTNNp4_E1G97UBXqVHjVyOw@mail.gmail.com>
References: <CABsx9T1v9Rfm_d7DcfbkkHEC96CwTNNp4_E1G97UBXqVHjVyOw@mail.gmail.com>
Message-ID: <CA+s+GJAOmQDo=zTF-b4r5X6CjogJtd2gQ0VeGoHZboTB6o+wFQ@mail.gmail.com>

On Wed, Oct 3, 2012 at 7:49 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:
> There is consensus that we need to do a 0.7.1 release to fix the
> "click on a bitcoin: URI and nothing happens" bug on Windows.
>
> "Handle corrupt wallets gracefully" :
> https://github.com/bitcoin/bitcoin/pull/1895

We definitely need that one in.

>
> This pull request:
>
> "Add -reindex, to perform in-place reindexing of blockchain data
> files" : https://github.com/bitcoin/bitcoin/pull/1870

Agreed

>
> Are there any other very-high-priority pull requests that should go
> into a 0.7.1 release?

I think we should also pull #1859 "add LOCK() for proxy related
data-structures" Missing synchronization primitives are a sure way to
get reports about random crashes.

The rest can wait.

Wladimir



From jgarzik at exmulti.com  Wed Oct  3 19:53:41 2012
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Wed, 3 Oct 2012 15:53:41 -0400
Subject: [Bitcoin-development] 0.7.1 release
In-Reply-To: <CABsx9T1v9Rfm_d7DcfbkkHEC96CwTNNp4_E1G97UBXqVHjVyOw@mail.gmail.com>
References: <CABsx9T1v9Rfm_d7DcfbkkHEC96CwTNNp4_E1G97UBXqVHjVyOw@mail.gmail.com>
Message-ID: <CA+8xBpeRsOa_7rLfziyd7Gd79o9d5QPyc1-cWwZ36f8HNDjKdw@mail.gmail.com>

On Wed, Oct 3, 2012 at 1:49 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:
> "Add -reindex, to perform in-place reindexing of blockchain data
> files" : https://github.com/bitcoin/bitcoin/pull/1870

Agree, though needs testing

> "P2P: Do not request blocks from peers with fewer blocks than us" :
> https://github.com/bitcoin/bitcoin/pull/1834

Agree

> "Add new RPC "lockunspent", to prevent spending of selected outputs" :
> https://github.com/bitcoin/bitcoin/pull/1861

Agree, though sipa raised a valid issue.  lockunspent, like the
existing listunspent, is wallet based.

As raw transactions might spend outputs _not_ in the wallet,
lockunspent would miss those.

I think this is OK, because listunspent is already wallet-based, but
it should be noted.

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From joel.kaartinen at gmail.com  Thu Oct  4 09:55:54 2012
From: joel.kaartinen at gmail.com (Joel Joonatan Kaartinen)
Date: Thu, 04 Oct 2012 12:55:54 +0300
Subject: [Bitcoin-development] performance testing for bitcoin
In-Reply-To: <CAEC9zAZR7xOUEJZz0f-Of0HTVAcL8uCw3tcR1s66Hg_kZbczRg@mail.gmail.com>
References: <CAEC9zAbHO9y7Go4FhZFyOCKdm1js_eKCoz7iaOCh1Wu=B9OASw@mail.gmail.com>
	<CAEC9zAYrMHHEyyTx1QVHoGSJU3fFypB0Hx4K-VFoUn0hp4Z7JA@mail.gmail.com>
	<CAEC9zAbkWWcn5eRHLh6u+zyGu92E1Yq-9CQVPqE_6-QwMVs=4Q@mail.gmail.com>
	<CA+8xBpdZDznkyWXn8AxdUDk0CJ0b2m1qpTgVjtPbs0ge+ODCSg@mail.gmail.com>
	<CAEC9zAZR7xOUEJZz0f-Of0HTVAcL8uCw3tcR1s66Hg_kZbczRg@mail.gmail.com>
Message-ID: <1349344554.31175.6.camel@mei>

For script evaluation benchmarking, I don't think just a good
approximation of real-world traffic is enough. You really need to
benchmark the worst case scenarios, otherwise you could be creating a
DoS vulnerability.

- Joel

ke, 2012-10-03 kello 13:57 -0400, Ian Miers kirjoitti:
> Script evaluation performance was what I was primarily concerned
> with.  I'm fooling around with adding some new instruction types.
> The tricky part is that to test how that effects performance, you need
> to be able to intersperse transactions with the new instructions with
> existing ones.  For accuracy, you'd like your simulated traffic to at
> least approximate the real world traffic.
> 
> 
> 
> 
> Also, is there any bench-marking / instrumentation in bitcoind ? 
> 
> 
> Ian
> On Wed, Oct 3, 2012 at 1:43 PM, Jeff Garzik <jgarzik at exmulti.com>
> wrote:
>         On Wed, Oct 3, 2012 at 1:38 PM, Ian Miers <imiers1 at jhu.edu>
>         wrote:
>         > Whats the best way to get performance numbers for
>         modifications to bitcoin ?
>         > Profiling it while running on testnet might work, but that
>         would take a
>         > rather long time to get data.
>         > Is there anyway to speed this up  if we only needed to
>         provide  relative
>         > performance between tests. (in a sense a fast performance
>         regression test).
>         
>         
>         You have to be specific about what you're measuring, because
>         "performance" is vague.
>         
>         You can measure many aspects of blockchain performance by
>         importing
>         blocks via -loadblock=FILE.
>         
>         Other performance measurements like "how fast does a block
>         relay
>         through the network" cannot be as easily measured.
>         
>         --
>         Jeff Garzik
>         exMULTI, Inc.
>         jgarzik at exmulti.com
> 
> 
> ------------------------------------------------------------------------------
> Don't let slow site performance ruin your business. Deploy New Relic APM
> Deploy New Relic app performance management and know exactly
> what is happening inside your Ruby, Python, PHP, Java, and .NET app
> Try New Relic at no cost today and get our sweet Data Nerd shirt too!
> http://p.sf.net/sfu/newrelic-dev2dev
> _______________________________________________ Bitcoin-development mailing list Bitcoin-development at lists.sourceforge.net https://lists.sourceforge.net/lists/listinfo/bitcoin-development





From imiers1 at jhu.edu  Thu Oct  4 16:31:11 2012
From: imiers1 at jhu.edu (Ian Miers)
Date: Thu, 4 Oct 2012 12:31:11 -0400
Subject: [Bitcoin-development] performance testing for bitcoin
In-Reply-To: <1349344554.31175.6.camel@mei>
References: <CAEC9zAbHO9y7Go4FhZFyOCKdm1js_eKCoz7iaOCh1Wu=B9OASw@mail.gmail.com>
	<CAEC9zAYrMHHEyyTx1QVHoGSJU3fFypB0Hx4K-VFoUn0hp4Z7JA@mail.gmail.com>
	<CAEC9zAbkWWcn5eRHLh6u+zyGu92E1Yq-9CQVPqE_6-QwMVs=4Q@mail.gmail.com>
	<CA+8xBpdZDznkyWXn8AxdUDk0CJ0b2m1qpTgVjtPbs0ge+ODCSg@mail.gmail.com>
	<CAEC9zAZR7xOUEJZz0f-Of0HTVAcL8uCw3tcR1s66Hg_kZbczRg@mail.gmail.com>
	<1349344554.31175.6.camel@mei>
Message-ID: <CAEC9zAYLks7sybY+HxJD9zjbp_nPyBn8ek8KkJcpat2mMQbLKw@mail.gmail.com>

Agreed, you need to consider DoS attacks.  I have that in my mind under
security and not performance. I'd imagine the test methodology would be
completely different since you no longer are attempting to simulate real
world traffic.


Ian

On Thu, Oct 4, 2012 at 5:55 AM, Joel Joonatan Kaartinen <
joel.kaartinen at gmail.com> wrote:

> For script evaluation benchmarking, I don't think just a good
> approximation of real-world traffic is enough. You really need to
> benchmark the worst case scenarios, otherwise you could be creating a
> DoS vulnerability.
>
> - Joel
>
> ke, 2012-10-03 kello 13:57 -0400, Ian Miers kirjoitti:
> > Script evaluation performance was what I was primarily concerned
> > with.  I'm fooling around with adding some new instruction types.
> > The tricky part is that to test how that effects performance, you need
> > to be able to intersperse transactions with the new instructions with
> > existing ones.  For accuracy, you'd like your simulated traffic to at
> > least approximate the real world traffic.
> >
> >
> >
> >
> > Also, is there any bench-marking / instrumentation in bitcoind ?
> >
> >
> > Ian
> > On Wed, Oct 3, 2012 at 1:43 PM, Jeff Garzik <jgarzik at exmulti.com>
> > wrote:
> >         On Wed, Oct 3, 2012 at 1:38 PM, Ian Miers <imiers1 at jhu.edu>
> >         wrote:
> >         > Whats the best way to get performance numbers for
> >         modifications to bitcoin ?
> >         > Profiling it while running on testnet might work, but that
> >         would take a
> >         > rather long time to get data.
> >         > Is there anyway to speed this up  if we only needed to
> >         provide  relative
> >         > performance between tests. (in a sense a fast performance
> >         regression test).
> >
> >
> >         You have to be specific about what you're measuring, because
> >         "performance" is vague.
> >
> >         You can measure many aspects of blockchain performance by
> >         importing
> >         blocks via -loadblock=FILE.
> >
> >         Other performance measurements like "how fast does a block
> >         relay
> >         through the network" cannot be as easily measured.
> >
> >         --
> >         Jeff Garzik
> >         exMULTI, Inc.
> >         jgarzik at exmulti.com
> >
> >
> >
> ------------------------------------------------------------------------------
> > Don't let slow site performance ruin your business. Deploy New Relic APM
> > Deploy New Relic app performance management and know exactly
> > what is happening inside your Ruby, Python, PHP, Java, and .NET app
> > Try New Relic at no cost today and get our sweet Data Nerd shirt too!
> > http://p.sf.net/sfu/newrelic-dev2dev
> > _______________________________________________ Bitcoin-development
> mailing list Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121004/ede896ed/attachment.html>

From gmaxwell at gmail.com  Sat Oct  6 16:37:20 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sat, 6 Oct 2012 12:37:20 -0400
Subject: [Bitcoin-development] Electrum security model concerns
Message-ID: <CAAS2fgTVp7PhdJMfz-huyOsp=6Ca9wH6cVkedMgntXnK+ZpDXg@mail.gmail.com>

I'm concerned about how the particular security model of electrum is
being described; or rather? not being described.  The electrum website
appears to have no security discussion beyond platitudes like "Secure:
Your private keys are not shared with the server. You do not have to
trust the server with your money.", "No scripts: Electrum does not
download any script at runtime. A compromised server cannot compromise
your client."

Claims like "You do not have to trust the server with your money" are
factually incorrect.

What I would expect is a proper discussion, like "Understanding the
bitcoinj security model":
http://code.google.com/p/bitcoinj/wiki/SecurityModel  (which I don't
agree with completely? as it makes some claims which are known to be
false? wrt detecting double spends, but it does give a reasonable
overview),  and avoidance of broad claims which will result in
misunderstandings that result in users engaging in riskier behaviors
which they could avoid if they better understood the security of the
software they're running.



From mike at plan99.net  Mon Oct  8 11:52:26 2012
From: mike at plan99.net (Mike Hearn)
Date: Mon, 8 Oct 2012 13:52:26 +0200
Subject: [Bitcoin-development] Electrum security model concerns
In-Reply-To: <CAAS2fgTVp7PhdJMfz-huyOsp=6Ca9wH6cVkedMgntXnK+ZpDXg@mail.gmail.com>
References: <CAAS2fgTVp7PhdJMfz-huyOsp=6Ca9wH6cVkedMgntXnK+ZpDXg@mail.gmail.com>
Message-ID: <CANEZrP0bx7c1sm+9o6iXx_OnSdRH6a0jRNQcRb2Z3qbf0KFKiw@mail.gmail.com>

> What I would expect is a proper discussion, like "Understanding the
> bitcoinj security model":
> http://code.google.com/p/bitcoinj/wiki/SecurityModel

That page was old, it stated that pending transactions aren't provided
to the app which hasn't been true for a long time.

I've rewritten and extended it. You may still not like what it says ;)
but it should at least be more thorough now. It also links to the ETH
paper.

Re: Electrum. In fairness the electrum page is designed for end users
and the bitcoinj page is designed for app developers. As far as I
know, there are no bitcoinj based clients that try to explain
transaction confidence to end users.

I don't think it's worth worrying about this too much right now. In
future the software end users and merchants use will diverge
significantly. At that time it'll be easier to tailor the
documentation to each user demographic. And I think Electrum type
services will go away once we do more optimizations like bloom
filtering and better peer selection logic, as the speed of SPV clients
will be comparable to Electrum/BCCAPI type clients but without the
need for a specific server operator.



From gmaxwell at gmail.com  Tue Oct  9 03:22:01 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 8 Oct 2012 23:22:01 -0400
Subject: [Bitcoin-development] Electrum security model concerns
In-Reply-To: <CANEZrP0bx7c1sm+9o6iXx_OnSdRH6a0jRNQcRb2Z3qbf0KFKiw@mail.gmail.com>
References: <CAAS2fgTVp7PhdJMfz-huyOsp=6Ca9wH6cVkedMgntXnK+ZpDXg@mail.gmail.com>
	<CANEZrP0bx7c1sm+9o6iXx_OnSdRH6a0jRNQcRb2Z3qbf0KFKiw@mail.gmail.com>
Message-ID: <CAAS2fgQjeSBJGOr+qH7PQpTB5cx1rdaPCC2e=2J7OG=5Pby5GA@mail.gmail.com>

On Mon, Oct 8, 2012 at 7:52 AM, Mike Hearn <mike at plan99.net> wrote:
> I don't think it's worth worrying about this too much right now. In
> future the software end users and merchants use will diverge
> significantly.

Electrum also has a daemon for merchants. Considering the dislike of
Java that exist reflexively in much of the non-java community and the
greater ease of deployment and the integration of type-2 split key
management,  I wouldn't be surprised if it became quite popular
quickly especially if the status quo of failing to disclose and
discuss the security limitations of the client continues.

What I've found is that even fairly sophisticated bitcoin participants
are actually unaware of the security implications? not just of thin
clients architecturally but of electrum specifically.  I think even
you may find my findings of the latter a bit surprising.

Generally for thin clients? a lying server can make clients think
they've received confirmed payments they haven't, and unless the
client is constructed to be a bit less thin a lying server can lie
about input values and cause think clients to spend large values to
fees. Servers can also monitor clients and deanonymize them and
selectively deny service to particular clients or transactions. Thin
clients must trust their servers to be available, and to not perform
these attacks. Users can use tools like tor to reduce the privacy
attacks, but doing so inhibits having a trust relationship to protect
against the other attacks. And none of these attacks leave
cryptographic proof of their existence, so a victim can't convince the
public of a server's treachery. Us experts know about these risks, but
I don't think the general users do.

But thats not the limit of it?  It seems some people believe Electrum
does majority quorum between servers, complicating attacks arising
from the fact that today users virtually never have a reason to trust
their server operators.  This isn't true? it connect to one at a time.
(And sibyl attacks would make that pretty weak protection even if it
did that, as someone could use a a botnet to run tens of thousands of
'servers' (really proxies)).

Beyond that the protocol between the clients and servers is
unauthenticated cleartext JSON in TCP.  So any network advisory with
access to the network near the server has the same power to attack as
the server operator... and one near the client has the same power to
attack as the sum of all the server operators.  A passive attacker
near the client has full deanonymization power.

But I don't even know if any of these limitations matter much?  The
electrum client instantly displays unconfirmed transactions and allows
users to spend them.  The default user interface gives _no_ indication
that the payment is unconfirmed. There is a "pro" mode, that shows
'processing' for unconfirmed transactions... but it looks as final as
it ever will be once it gets a single confirm. Only the most cautious
and well informed users would open the pro interface and right click
and select details to see the count? and even then there is no
guidance on what numbers are good (beyond '1').  So I suspect people
can probably rob typical electrum users (including electrum running
merchants) without actually using any of the above.

When a thin client is willing to provide arbitrary features like
showing unconfirmed payments and simplified UI without regard to
security it removes the functional advantage of running more secure
software like SPV and various degrees of full node... the only
motivation is security, and it's not much of a motivation when the
risks aren't even disclosed.

...and I haven't even gotten into delving into what kind of attacks
are possible due to deeper implementation specifics.

But I do share your view that people will migrate to stronger client
models in the future? but I don't agree that it will be due to those
clients improving (though they will improve), it will be because
people will know that they provide better security and will choose
them for that reason.

My only question is will they know this because we as a community and
the authors of the thin clients provided clear explanations and
appropriate caution, or will it be because they're getting robbed
blind, producing a bunch of bad press for thin clients in particular
and Bitcoin generally?



From jgarzik at exmulti.com  Tue Oct  9 23:12:04 2012
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Tue, 9 Oct 2012 19:12:04 -0400
Subject: [Bitcoin-development] On bitcoin testing
Message-ID: <CA+8xBpchRLVQW4Rv2RQhsRF716cCTmJLuhZeuvCWtWB4sZX2Sw@mail.gmail.com>

Copying from a response posted to "Bitcoin software testing effort"
https://bitcointalk.org/index.php?topic=117487.0 as it is relevant to
a recent thread here...

Any level of testing is useful and appreciated.  Various types of
testing that are helpful:

* "it works" testing:  Simply run the latest Release Candidate (or
latest version, if released).  Make sure all the basics work (for
whatever definition of "basics" you desire).  This is the level most
accessible to casual users.
* Major features testing:  Develop a short checklist of must-work
features, and organize volunteers to work together and go through that
checklist, item by item.  Test each major feature on each major
platform.
* Stress and fuzz testing:  Attempt to "stress" the system somehow, or
randomly corrupt bits of data.  See what breaks.
* Regression testing:  Record bugs fixed, and develop automated test
cases that successfully reproduce the bugs on older versions, and
verify newer versions remain fixed.
* Unit function testing:  Rigorously exercise each C++ class to ensure
it behaves as expected at a micro level.
* Full peer automated testing:  Automated testing of RPC and P2P
functions is non-existent, because of the difficulty in doing so.
Find a solution to this problem.
* Data-driven tests: If possible, write software-neutral, data-driven
tests.  This enables clients other than the reference one (Satoshi
client) to be tested.  Embed tests in testnet3 chain, if possible.


The community at large can be a big help simply by doing the first
item:  download and run the Release Candidates and the latest version,
and report any problems.  Even reporting success is fine by me, for
example: "Version 0.7.1 works for me on Windows 7/32-bit" posted on a
forum thread.

It is always very difficult to organize any sort of testing regime
with open source volunteers that come and go.  Each volunteer chooses
their level of involvement.  Any amount of testing and test-case
writing, large or small, is helpful to bitcoin.

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From arklan.uthoslin at gmail.com  Tue Oct  9 23:42:31 2012
From: arklan.uthoslin at gmail.com (Arklan Uth Oslin)
Date: Tue, 9 Oct 2012 17:42:31 -0600
Subject: [Bitcoin-development] On bitcoin testing
In-Reply-To: <CA+8xBpchRLVQW4Rv2RQhsRF716cCTmJLuhZeuvCWtWB4sZX2Sw@mail.gmail.com>
References: <CA+8xBpchRLVQW4Rv2RQhsRF716cCTmJLuhZeuvCWtWB4sZX2Sw@mail.gmail.com>
Message-ID: <CAGg41SWAxhGwmMQCnzsBU_0Z=han2JvbTn3CaTFZxqaaTb+AHw@mail.gmail.com>

thanks for the great reply jeff. i'm going to get a virtual machine set up
on my system later tonight so at the very least, i myself can start testing.

steve - haven't heard from you in almost a week. I'd still really like to
get a look at the test cases and such you set up.

Arklan

----------
As long as there is light, the darkness holds no fear. And yet, even in the
deepest black, there is life. - Arklan Uth Oslin

I want to leave this world the same way I came into it: backwards and on
fire. - Arklan Uth Oslin



On Tue, Oct 9, 2012 at 5:12 PM, Jeff Garzik <jgarzik at exmulti.com> wrote:

> Copying from a response posted to "Bitcoin software testing effort"
> https://bitcointalk.org/index.php?topic=117487.0 as it is relevant to
> a recent thread here...
>
> Any level of testing is useful and appreciated.  Various types of
> testing that are helpful:
>
> * "it works" testing:  Simply run the latest Release Candidate (or
> latest version, if released).  Make sure all the basics work (for
> whatever definition of "basics" you desire).  This is the level most
> accessible to casual users.
> * Major features testing:  Develop a short checklist of must-work
> features, and organize volunteers to work together and go through that
> checklist, item by item.  Test each major feature on each major
> platform.
> * Stress and fuzz testing:  Attempt to "stress" the system somehow, or
> randomly corrupt bits of data.  See what breaks.
> * Regression testing:  Record bugs fixed, and develop automated test
> cases that successfully reproduce the bugs on older versions, and
> verify newer versions remain fixed.
> * Unit function testing:  Rigorously exercise each C++ class to ensure
> it behaves as expected at a micro level.
> * Full peer automated testing:  Automated testing of RPC and P2P
> functions is non-existent, because of the difficulty in doing so.
> Find a solution to this problem.
> * Data-driven tests: If possible, write software-neutral, data-driven
> tests.  This enables clients other than the reference one (Satoshi
> client) to be tested.  Embed tests in testnet3 chain, if possible.
>
>
> The community at large can be a big help simply by doing the first
> item:  download and run the Release Candidates and the latest version,
> and report any problems.  Even reporting success is fine by me, for
> example: "Version 0.7.1 works for me on Windows 7/32-bit" posted on a
> forum thread.
>
> It is always very difficult to organize any sort of testing regime
> with open source volunteers that come and go.  Each volunteer chooses
> their level of involvement.  Any amount of testing and test-case
> writing, large or small, is helpful to bitcoin.
>
> --
> Jeff Garzik
> exMULTI, Inc.
> jgarzik at exmulti.com
>
>
> ------------------------------------------------------------------------------
> Don't let slow site performance ruin your business. Deploy New Relic APM
> Deploy New Relic app performance management and know exactly
> what is happening inside your Ruby, Python, PHP, Java, and .NET app
> Try New Relic at no cost today and get our sweet Data Nerd shirt too!
> http://p.sf.net/sfu/newrelic-dev2dev
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121009/db4ce4b5/attachment.html>

From gmaxwell at gmail.com  Wed Oct 10 00:03:52 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 9 Oct 2012 20:03:52 -0400
Subject: [Bitcoin-development] On bitcoin testing
In-Reply-To: <CA+8xBpchRLVQW4Rv2RQhsRF716cCTmJLuhZeuvCWtWB4sZX2Sw@mail.gmail.com>
References: <CA+8xBpchRLVQW4Rv2RQhsRF716cCTmJLuhZeuvCWtWB4sZX2Sw@mail.gmail.com>
Message-ID: <CAAS2fgTJAL2g+0ezgyL4=L16RNgV2d_Ka3etb8UiF2V4qkLs-w@mail.gmail.com>

On Tue, Oct 9, 2012 at 7:12 PM, Jeff Garzik <jgarzik at exmulti.com> wrote:
> * Data-driven tests: If possible, write software-neutral, data-driven
> tests.  This enables clients other than the reference one (Satoshi
> client) to be tested.  Embed tests in testnet3 chain, if possible.

The mention of testnet3 here reminds me to make a point:  Confirmation
bias is a common problem for software testing? people often over test
the success cases and under-test the failure cases.  This is certainly
the case in Bitcoin: For example, testnet3+the packaged tests test all
the branches inside the interior script evaluation engine _except_ the
rejection cases.

For us failure cases can be harder to package up (e.g. can't be placed
in testnet) but Matt's node-simulation based tester provides a good
example of how to create a data driven test set that tests both
failure cases and dynamic behavior (e.g. reorgs).

Testing of failure cases is absolutely critical for testing of
implementation compatibility: The existence of a difference in what
gets rejected in a widely deployed alternative node could result in an
utterly devastating network split.

Generally every test of something which must succeeded should be
matched by a test of something that must fail. Personally, I like to
test the boundary cases? e.g. if something has an allowed range of
[0-8], I'll test -1,0,8,9 at a minimum. Though reasoning trumps rules
of thumb.

Confirmation bias is another reason why it's important to have a more
diverse collection of testers than the core developers.  People who
work closely with the software have strong expectations of how the
software should work and are less likely to test crazy corner cases
because they "know" the outcome, sometimes erroneously.


To reinforce Jeff's list of different approaches: I've long found that
each mechanism of software testing has diminishing returns the more of
it you apply. So you're best off using as many different approaches a
little rather than spending all your resources going as deep as
possible with any one approach.

There are also some kind of testing which are synergistic: Almost all
testing is enhanced enormously by combining it with valgrind because
it substantially lowers the threshold of issue detection substantially
(e.g. detecting bogus memory accesses which are _currently_ causing a
crash for you but could). If I could only test one of "with valgrind"
or "without" I'd test with every time.  Sadly valgrind doesn't exist
on windows and it's rather slow. Dr. Memory
(http://code.google.com/p/drmemory/) may be an alternative on Windows,
and there is work to port ASAN to GCC so it may be possible to mingw
ASAN builds in not too long.

I've also found that any highly automatable testing (coded data
driven, unit, and fuzz testing) combines well with diverse
compilation, e.g. building on as many system types and architectures?
including production irrelevant ones? as possible in the hopes that
some system specific quark make a bug easier to detect.



From sam at rfc1149.net  Wed Oct 10 08:17:29 2012
From: sam at rfc1149.net (Samuel Tardieu)
Date: Wed, 10 Oct 2012 10:17:29 +0200
Subject: [Bitcoin-development] Long stalling periods
Message-ID: <CABP-7mjOfE_hMmcNEWNf3n4ocWg8tApCb_QvGr80cuqZo3nv9w@mail.gmail.com>

Hi.

I've removed by blockchain information and started redownloading it, on a
fast connection, using the latest git version (tagged v0.7.1rc1), on a SSD
disk.

Everything goes very fast, except that a lot of duplicate blocks are
processed. New blocks arrive quickly, then a lot of duplicates seem to be
processed at a much quieter pace, while the chain height does not increase
anymore.

Is that expected? Isn't there a way to limit unneeded blocks downloads?

SetBestChain: new best=000000000000a664b1f5  height=114310
work=2478070628744107557  date=03/20/11 22:08:47
ProcessBlock: ACCEPTED
received block 00000000000064fbb040
SetBestChain: new best=00000000000064fbb040  height=114311
work=2478397878545837400  date=03/20/11 22:12:52
ProcessBlock: ACCEPTED
received block 0000000000006c7d5cf8
SetBestChain: new best=0000000000006c7d5cf8  height=114312
work=2478725128347567243  date=03/20/11 22:14:27
ProcessBlock: ACCEPTED
received block 0000000000009d72b51c
SetBestChain: new best=0000000000009d72b51c  height=114313
work=2479052378149297086  date=03/20/11 22:50:22
ProcessBlock: ACCEPTED
received block 00000000000014d91e7f
SetBestChain: new best=00000000000014d91e7f  height=114314
work=2479379627951026929  date=03/20/11 23:15:37
ProcessBlock: ACCEPTED
received block 000000000000034002cb
SetBestChain: new best=000000000000034002cb  height=114315
work=2479706877752756772  date=03/20/11 23:24:47
ProcessBlock: ACCEPTED
received block 00000000000032c97ae9
SetBestChain: new best=00000000000032c97ae9  height=114316
work=2480034127554486615  date=03/20/11 23:28:03
ProcessBlock: ACCEPTED
received block 00000000000055503e82
SetBestChain: new best=00000000000055503e82  height=114317
work=2480361377356216458  date=03/20/11 23:36:16
SetBestChain: new best=000000000000b7ce72e8  height=114318
work=2480688627157946301  date=03/20/11 23:37:44
SetBestChain: new best=00000000000076788899  height=114319
work=2481015876959676144  date=03/20/11 23:46:41
SetBestChain: new best=000000000000d04ffc5a  height=114320
work=2481343126761405987  date=03/20/11 23:55:28
SetBestChain: new best=000000000000514f0116  height=114321
work=2481670376563135830  date=03/21/11 00:02:01
SetBestChain: new best=00000000000022f1d1a0  height=114322
work=2481997626364865673  date=03/21/11 00:08:11
SetBestChain: new best=000000000000370e907e  height=114323
work=2482324876166595516  date=03/21/11 00:18:39
SetBestChain: new best=000000000000dab36141  height=114324
work=2482652125968325359  date=03/21/11 00:27:57
SetBestChain: new best=0000000000009f9401c1  height=114325
work=2482979375770055202  date=03/21/11 00:31:44
SetBestChain: new best=0000000000000e774dae  height=114326
work=2483306625571785045  date=03/21/11 00:48:00
SetBestChain: new best=000000000000b751fde0  height=114327
work=2483633875373514888  date=03/21/11 00:55:10
SetBestChain: new best=000000000000b377b247  height=114328
work=2483961125175244731  date=03/21/11 01:03:44
SetBestChain: new best=0000000000008a324822  height=114329
work=2484288374976974574  date=03/21/11 01:13:59
SetBestChain: new best=0000000000004270b478  height=114330
work=2484615624778704417  date=03/21/11 02:19:15
SetBestChain: new best=0000000000006b3f7c56  height=114331
work=2484942874580434260  date=03/21/11 02:47:57
SetBestChain: new best=0000000000009bc3a829  height=114332
work=2485270124382164103  date=03/21/11 02:55:29
SetBestChain: new best=000000000000308b5ad5  height=114333
work=2485597374183893946  date=03/21/11 02:55:44
SetBestChain: new best=0000000000007637ea6e  height=114334
work=2485924623985623789  date=03/21/11 03:10:04
SetBestChain: new best=0000000000000006acb7  height=114335
work=2486251873787353632  date=03/21/11 03:20:49
SetBestChain: new best=000000000000ab316f00  height=114336
work=2486579123589083475  date=03/21/11 03:43:16
SetBestChain: new best=0000000000005e87ca89  height=114337
work=2486906373390813318  date=03/21/11 03:44:37
SetBestChain: new best=000000000000adbb9bf5  height=114338
work=2487233623192543161  date=03/21/11 03:50:07
SetBestChain: new best=00000000000097ccfcf2  height=114339
work=2487560872994273004  date=03/21/11 04:02:14
SetBestChain: new best=0000000000000ab6f760  height=114340
work=2487888122796002847  date=03/21/11 04:04:52
SetBestChain: new best=00000000000099fc0aab  height=114341
work=2488215372597732690  date=03/21/11 04:11:18
SetBestChain: new best=00000000000038f85ffc  height=114342
work=2488542622399462533  date=03/21/11 04:21:02
SetBestChain: new best=0000000000008cf7ad33  height=114343
work=2488869872201192376  date=03/21/11 04:32:41
SetBestChain: new best=00000000000026f435ba  height=114344
work=2489197122002922219  date=03/21/11 04:40:07
SetBestChain: new best=000000000000a234fe35  height=114345
work=2489524371804652062  date=03/21/11 05:04:04
SetBestChain: new best=0000000000008f808957  height=114346
work=2489851621606381905  date=03/21/11 05:06:09
SetBestChain: new best=000000000000bb884dcb  height=114347
work=2490178871408111748  date=03/21/11 05:11:53
SetBestChain: new best=00000000000038cade45  height=114348
work=2490506121209841591  date=03/21/11 05:19:06
SetBestChain: new best=0000000000001e3155cd  height=114349
work=2490833371011571434  date=03/21/11 05:25:27
SetBestChain: new best=00000000000064fb7182  height=114350
work=2491160620813301277  date=03/21/11 05:27:41
SetBestChain: new best=000000000000a4cb0d57  height=114351
work=2491487870615031120  date=03/21/11 05:30:26
ProcessBlock: ACCEPTED
received block 0000000000007e7aa361
ERROR: ProcessBlock() : already have block 113868 0000000000007e7aa361
received block 000000000000af24d6fe
ERROR: ProcessBlock() : already have block 113869 000000000000af24d6fe
Added 1 addresses from 211.30.28.213: 26 tried, 8283 new
received block 00000000000094e6dc06
ERROR: ProcessBlock() : already have block 113870 00000000000094e6dc06
received block 000000000000d9efaa82
ERROR: ProcessBlock() : already have block 113871 000000000000d9efaa82
ERROR: FetchInputs() : 902e449ac3 mempool Tx prev not found abfd88f0e4
stored orphan tx 902e449ac3 (mapsz 877)
Added 1 addresses from 24.124.62.104: 26 tried, 8284 new
received block 000000000000a5695904
ERROR: ProcessBlock() : already have block 113872 000000000000a5695904
Added 1 addresses from 211.30.28.213: 26 tried, 8284 new
received block 0000000000002d0aa359
ERROR: ProcessBlock() : already have block 113873 0000000000002d0aa359
received block 000000000000d91ea603
ERROR: ProcessBlock() : already have block 113874 000000000000d91ea603
received block 000000000000d3c72ce3

  Sam
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121010/dcb2839a/attachment.html>

From mike at plan99.net  Wed Oct 10 11:19:00 2012
From: mike at plan99.net (Mike Hearn)
Date: Wed, 10 Oct 2012 13:19:00 +0200
Subject: [Bitcoin-development] Electrum security model concerns
In-Reply-To: <CAAS2fgQjeSBJGOr+qH7PQpTB5cx1rdaPCC2e=2J7OG=5Pby5GA@mail.gmail.com>
References: <CAAS2fgTVp7PhdJMfz-huyOsp=6Ca9wH6cVkedMgntXnK+ZpDXg@mail.gmail.com>
	<CANEZrP0bx7c1sm+9o6iXx_OnSdRH6a0jRNQcRb2Z3qbf0KFKiw@mail.gmail.com>
	<CAAS2fgQjeSBJGOr+qH7PQpTB5cx1rdaPCC2e=2J7OG=5Pby5GA@mail.gmail.com>
Message-ID: <CANEZrP3u7Nyq0qZDxwgdOmqM=OqVmAYaj-YBDFwY6Ps-XTc46A@mail.gmail.com>

+gary

> Electrum also has a daemon for merchants.

Well, I suggest taking it up with Thomas directly. A thread here won't do much.

> Considering the dislike of
> Java that exist reflexively in much of the non-java community and the
> greater ease of deployment and the integration of type-2 split key
> management

I'm hoping that MultiBit Merchant will provide something similar based
on bcj, ie, you don't have to actually be a Java developer to use it,
it can just talk to your app via POSTs and GETs.

WRT deterministic wallets, yes, right now that's indeed a competitive
advantage of Electrum. So much code to write, so little time.

> Generally for thin clients? a lying server can make clients think
> they've received confirmed payments they haven't, and unless the
> client is constructed to be a bit less thin a lying server can lie
> about input values and cause thin clients to spend large values to
> fees.

Yes indeed. This also gives [hacked] server operators a way to steal
money from users without private keys, they can get clients to create
some very high fee transactions and then provide them directly to a
miner who promises to cut them in (or they can mine themselves, of
course).

> Beyond that the protocol between the clients and servers is
> unauthenticated cleartext JSON in TCP.

I thought it used SSL. Maybe I'm thinking of BCCAPI which is a similar approach.

> that the payment is unconfirmed. There is a "pro" mode, that shows
> 'processing' for unconfirmed transactions

I think communicating transaction confidence to users is something of
an open UI design problem right now. I agree that hiding it entirely
seems suboptimal, but in reality explaining what the risks are for a
given number confirmations is difficult. Given the lack of actually
reported double-spends against unconfirmed transactions, I can
understand this choice, even if I wouldn't recommend it.

> My only question is will they know this because we as a community and
> the authors of the thin clients provided clear explanations and
> appropriate caution

Well, I pushed for English-text explanations of clients on bitcoin.org
rather than a feature matrix, for this kind of reason :) Unfortunately
the current texts are too small to really give a detailed explanation
of the security models involved. It may be worth adding one-liners
that link to a page explaining different security models (full, SPV,
superlight).

One thing I'm really hoping we can find and get agreement on is
somebody clueful and trustworthy to work on the bitcoin.org website.
Bitcoin, the project, needs a stronger voice than it currently has,
partly to speak about such issues. For instance, an FAQ that isn't on
the wiki would be good. And a simple "Welcome to Bitcoin" flow on the
bitcoin.org website that guides people to appropriate clients, teaches
them the security basics, etc, would be excellent.



From g.rowe at froot.co.uk  Wed Oct 10 14:06:29 2012
From: g.rowe at froot.co.uk (Gary Rowe)
Date: Wed, 10 Oct 2012 15:06:29 +0100
Subject: [Bitcoin-development] Electrum security model concerns
In-Reply-To: <CANEZrP3u7Nyq0qZDxwgdOmqM=OqVmAYaj-YBDFwY6Ps-XTc46A@mail.gmail.com>
References: <CAAS2fgTVp7PhdJMfz-huyOsp=6Ca9wH6cVkedMgntXnK+ZpDXg@mail.gmail.com>
	<CANEZrP0bx7c1sm+9o6iXx_OnSdRH6a0jRNQcRb2Z3qbf0KFKiw@mail.gmail.com>
	<CAAS2fgQjeSBJGOr+qH7PQpTB5cx1rdaPCC2e=2J7OG=5Pby5GA@mail.gmail.com>
	<CANEZrP3u7Nyq0qZDxwgdOmqM=OqVmAYaj-YBDFwY6Ps-XTc46A@mail.gmail.com>
Message-ID: <CAKm8k+2xaQLrFQdUPQf8W3+82o7=60ZW+EG7PA=d9A23pP6xBA@mail.gmail.com>

Just to chime in on the MultiBit Merchant aspect. The architecture is that
MBM is a Java backend, but executes as a simple command line:

java -jar mbm.jar server config.yml

As Mike expects, MBM offers a RESTful API using HAL+JSON. It provides a
comprehensive set of order and invoice processing, accounting,
inventory/delivery management and customer account handling facilities for
use with a wide variety of online business models.

There will be a variety of front ends, one of which is an online shop. They
also have the same startup command structure.

Since most folks are shy of using any technology, it is likely that MBM+<x
client> will be offered as part of a SaaS type solution. This allows anyone
who doesn't have the knowledge to configure it for themselves to make use
of it.

MBM will use BitcoinJ and will depend on a bucket of public keys for
transactions until the HD support is in place to allow generation of public
keys without private keys being present. This removes the need for private
keys to be present on the servers, and allows consumers of the SaaS model
to provide their own transaction keys.

The code is released under MIT license so anyone, anywhere can use it to
build the Bitcoin economy.

More info:
https://github.com/gary-rowe/MultiBitMerchant/wiki/Introduction
http://gary-rowe.com/agilestack/2012/06/06/multibit-merchant-genesis/

On 10 October 2012 12:19, Mike Hearn <mike at plan99.net> wrote:

> +gary
>
> > Electrum also has a daemon for merchants.
>
> Well, I suggest taking it up with Thomas directly. A thread here won't do
> much.
>
> > Considering the dislike of
> > Java that exist reflexively in much of the non-java community and the
> > greater ease of deployment and the integration of type-2 split key
> > management
>
> I'm hoping that MultiBit Merchant will provide something similar based
> on bcj, ie, you don't have to actually be a Java developer to use it,
> it can just talk to your app via POSTs and GETs.
>
> WRT deterministic wallets, yes, right now that's indeed a competitive
> advantage of Electrum. So much code to write, so little time.
>
> > Generally for thin clients? a lying server can make clients think
> > they've received confirmed payments they haven't, and unless the
> > client is constructed to be a bit less thin a lying server can lie
> > about input values and cause thin clients to spend large values to
> > fees.
>
> Yes indeed. This also gives [hacked] server operators a way to steal
> money from users without private keys, they can get clients to create
> some very high fee transactions and then provide them directly to a
> miner who promises to cut them in (or they can mine themselves, of
> course).
>
> > Beyond that the protocol between the clients and servers is
> > unauthenticated cleartext JSON in TCP.
>
> I thought it used SSL. Maybe I'm thinking of BCCAPI which is a similar
> approach.
>
> > that the payment is unconfirmed. There is a "pro" mode, that shows
> > 'processing' for unconfirmed transactions
>
> I think communicating transaction confidence to users is something of
> an open UI design problem right now. I agree that hiding it entirely
> seems suboptimal, but in reality explaining what the risks are for a
> given number confirmations is difficult. Given the lack of actually
> reported double-spends against unconfirmed transactions, I can
> understand this choice, even if I wouldn't recommend it.
>
> > My only question is will they know this because we as a community and
> > the authors of the thin clients provided clear explanations and
> > appropriate caution
>
> Well, I pushed for English-text explanations of clients on bitcoin.org
> rather than a feature matrix, for this kind of reason :) Unfortunately
> the current texts are too small to really give a detailed explanation
> of the security models involved. It may be worth adding one-liners
> that link to a page explaining different security models (full, SPV,
> superlight).
>
> One thing I'm really hoping we can find and get agreement on is
> somebody clueful and trustworthy to work on the bitcoin.org website.
> Bitcoin, the project, needs a stronger voice than it currently has,
> partly to speak about such issues. For instance, an FAQ that isn't on
> the wiki would be good. And a simple "Welcome to Bitcoin" flow on the
> bitcoin.org website that guides people to appropriate clients, teaches
> them the security basics, etc, would be excellent.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121010/57eb786a/attachment.html>

From gmaxwell at gmail.com  Wed Oct 10 15:23:25 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 10 Oct 2012 11:23:25 -0400
Subject: [Bitcoin-development] Electrum security model concerns
In-Reply-To: <CANEZrP3u7Nyq0qZDxwgdOmqM=OqVmAYaj-YBDFwY6Ps-XTc46A@mail.gmail.com>
References: <CAAS2fgTVp7PhdJMfz-huyOsp=6Ca9wH6cVkedMgntXnK+ZpDXg@mail.gmail.com>
	<CANEZrP0bx7c1sm+9o6iXx_OnSdRH6a0jRNQcRb2Z3qbf0KFKiw@mail.gmail.com>
	<CAAS2fgQjeSBJGOr+qH7PQpTB5cx1rdaPCC2e=2J7OG=5Pby5GA@mail.gmail.com>
	<CANEZrP3u7Nyq0qZDxwgdOmqM=OqVmAYaj-YBDFwY6Ps-XTc46A@mail.gmail.com>
Message-ID: <CAAS2fgSkVRx3Tk-7ufMDb3a44eTK=6COOh_FBWqrmwH4ogFhgA@mail.gmail.com>

On Wed, Oct 10, 2012 at 7:19 AM, Mike Hearn <mike at plan99.net> wrote:
> +gary
>
>> Electrum also has a daemon for merchants.
>
> Well, I suggest taking it up with Thomas directly. A thread here won't do much.

I tried in IRC and got no response. These messages are copying the
only contact email address I could find.


> I thought it used SSL. Maybe I'm thinking of BCCAPI which is a similar approach.

Yes, so do a lot of people. It doesn't.

> I think communicating transaction confidence to users is something of
> an open UI design problem right now. I agree that hiding it entirely
> seems suboptimal, but in reality explaining what the risks are for a

There is a middle ground: You can not hide it without explaining it.
AFAICT we don't see ~any questions about the reference client waiting
for six confirmations before saying confirmed.

> given number confirmations is difficult. Given the lack of actually
> reported double-spends against unconfirmed transactions, I can
> understand this choice, even if I wouldn't recommend it.

There have been a great many circulated on the network. People don't
report all losses? e.g. we've never seen a report from those who've
burned hundreds of bitcoins in fees on transactions.

> of the security models involved. It may be worth adding one-liners
> that link to a page explaining different security models (full, SPV,
> superlight).

Perhaps.

> One thing I'm really hoping we can find and get agreement on is
> somebody clueful and trustworthy to work on the bitcoin.org website.

I think this is very hard because this matter is rapidly politicized.
There are some in the community who will instantly allege misconduct
when there is a mis-agreement.

Basically: No one sane should want the job, and anyone who wants
should on no account be allowed to have it.

At this point I think we also will get better results communicating
among technical people in order to get the development focus adjusted
in a way that mitigates those risks that can be mitigated and those
cautions that can be offered offered.

After all, if the Electrum project is _unwilling_ to disclose the
limitations of their implementation and security model on their own
site, even after having them pointed out then someone updating
Bitcoin.org to include them will be politically contentious.  I want
to make sure that we've followed all reasonable avenues before going
that route? first I attempted informally on IRC, now I've brought the
discussion here... instead of, e.g. starting the process to remove it
from the bitcoin.org clients page.

> Bitcoin, the project, needs a stronger voice than it currently has,
> partly to speak about such issues. For instance, an FAQ that isn't on

I agree, thats why I started this thread.



From mike at plan99.net  Wed Oct 10 15:55:44 2012
From: mike at plan99.net (Mike Hearn)
Date: Wed, 10 Oct 2012 17:55:44 +0200
Subject: [Bitcoin-development] Electrum security model concerns
In-Reply-To: <CAAS2fgSkVRx3Tk-7ufMDb3a44eTK=6COOh_FBWqrmwH4ogFhgA@mail.gmail.com>
References: <CAAS2fgTVp7PhdJMfz-huyOsp=6Ca9wH6cVkedMgntXnK+ZpDXg@mail.gmail.com>
	<CANEZrP0bx7c1sm+9o6iXx_OnSdRH6a0jRNQcRb2Z3qbf0KFKiw@mail.gmail.com>
	<CAAS2fgQjeSBJGOr+qH7PQpTB5cx1rdaPCC2e=2J7OG=5Pby5GA@mail.gmail.com>
	<CANEZrP3u7Nyq0qZDxwgdOmqM=OqVmAYaj-YBDFwY6Ps-XTc46A@mail.gmail.com>
	<CAAS2fgSkVRx3Tk-7ufMDb3a44eTK=6COOh_FBWqrmwH4ogFhgA@mail.gmail.com>
Message-ID: <CANEZrP3Ei8tU=r_gp5K1fPGFe4gvX02gp+yuQRi0cwHhLLTe8g@mail.gmail.com>

> I tried in IRC and got no response. These messages are copying the
> only contact email address I could find.

Forum private message may work better.

> I think this is very hard because this matter is rapidly politicized.
> There are some in the community who will instantly allege misconduct
> when there is a mis-agreement.

Yeah, but that's only an issue if it ends up being an intractable
disagreement between the people who are reviewing changes to the core
site. The clients page itself was contentious but we still arrived at
something reasonably professional looking and moved on.

> discussion here... instead of, e.g. starting the process to remove it
> from the bitcoin.org clients page.

I don't think it should be removed. At most the description should be
updated to point to a discussion of the tradeoffs of that class of
apps (same for BitcoinSpinner).



From jgarzik at exmulti.com  Wed Oct 10 18:40:55 2012
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Wed, 10 Oct 2012 14:40:55 -0400
Subject: [Bitcoin-development] Post-0.7.1 tree freeze for ultraprune
Message-ID: <CA+8xBpdLo+VoHiJNJWNn+NPHj9v33=bSXBhkBeoLr73z-qFrBQ@mail.gmail.com>

Proposal:  following 0.7.1 release, freeze the tree.  Do not pull
anything, until ultraprune is pulled (or rejected, but I think the
latter is unlikely).

Common sense exceptions still apply (critical bug fixes, etc.)

Ultraprune does not need to be "perfect" to be pulled... this pull
would occur at the beginning of 0.8, leaving lots of room for
hammering out final details in-tree.  The main hurdle is really
getting everyone to ACK the overall design and direction of the
ultraprune branch, especially Gavin.

Collecting those high-level design ACKs is more important to bitcoin
overall than even fine-grained code review; code mistakes can be fixed
in-tree during 0.8 development, once we all agree this is the correct
_design_.  The real code mistakes and "sharp edges" will only be found
now with wide field testing.

For the record:  yes, Design-ACK from me.

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From laanwj at gmail.com  Thu Oct 11 10:51:55 2012
From: laanwj at gmail.com (Wladimir)
Date: Thu, 11 Oct 2012 12:51:55 +0200
Subject: [Bitcoin-development] Post-0.7.1 tree freeze for ultraprune
In-Reply-To: <CA+8xBpdLo+VoHiJNJWNn+NPHj9v33=bSXBhkBeoLr73z-qFrBQ@mail.gmail.com>
References: <CA+8xBpdLo+VoHiJNJWNn+NPHj9v33=bSXBhkBeoLr73z-qFrBQ@mail.gmail.com>
Message-ID: <CA+s+GJDqsFmDhPM=NgLRehokiHBBGdfieDbYUYH4a9ETBCrPPA@mail.gmail.com>

On Wed, Oct 10, 2012 at 8:40 PM, Jeff Garzik <jgarzik at exmulti.com> wrote:
> Proposal:  following 0.7.1 release, freeze the tree.  Do not pull
> anything, until ultraprune is pulled (or rejected, but I think the
> latter is unlikely).

Yes, I think this is a good idea. Getting ultraprune in should be a priority.

I've just pulled all the small stuff that was already ACKed for
post-0.7.1, so IMO the freeze can start.

Wladimir



From laanwj at gmail.com  Thu Oct 11 11:12:15 2012
From: laanwj at gmail.com (Wladimir)
Date: Thu, 11 Oct 2012 13:12:15 +0200
Subject: [Bitcoin-development] Post-0.7.1 tree freeze for ultraprune
In-Reply-To: <CA+s+GJDqsFmDhPM=NgLRehokiHBBGdfieDbYUYH4a9ETBCrPPA@mail.gmail.com>
References: <CA+8xBpdLo+VoHiJNJWNn+NPHj9v33=bSXBhkBeoLr73z-qFrBQ@mail.gmail.com>
	<CA+s+GJDqsFmDhPM=NgLRehokiHBBGdfieDbYUYH4a9ETBCrPPA@mail.gmail.com>
Message-ID: <CA+s+GJDiaxn_qOvdmKRKRgQ51QmQ8vfVi4=DAWu+tzTzpmt-Tg@mail.gmail.com>

On Thu, Oct 11, 2012 at 12:51 PM, Wladimir <laanwj at gmail.com> wrote:
> On Wed, Oct 10, 2012 at 8:40 PM, Jeff Garzik <jgarzik at exmulti.com> wrote:
>> Proposal:  following 0.7.1 release, freeze the tree.  Do not pull
>> anything, until ultraprune is pulled (or rejected, but I think the
>> latter is unlikely).
>
> Yes, I think this is a good idea. Getting ultraprune in should be a priority.
>
> I've just pulled all the small stuff that was already ACKed for
> post-0.7.1, so IMO the freeze can start.

Oops, in my enthusiasm I completely forgot that 0.7.1 is still in rc, not final.

What I merged is:
- #1901 from laanwj/2012_10_remove_strlcpy
- #1900 from Diapolo/optionsmodel_getters
- #1913 from sipa/noi2p
- #1879 from sipa/fdatasync

I don't think any of them is problematic to have in rc2. If it is, we
need to make a branch for 0.7.x at eb49457 and consider master the
0.8.x branch.

Wladimir



From gavinandresen at gmail.com  Thu Oct 11 15:46:10 2012
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Thu, 11 Oct 2012 11:46:10 -0400
Subject: [Bitcoin-development] 0.7.1 release candidate 1 ready for testing
Message-ID: <CABsx9T2Y+Ku1DcvWGS+c3p+qRFKbM8O=-CuL=1kC0TZdK1Sz5A@mail.gmail.com>

Any progress on a release candidate QA sanity testing plan?


Bitcoin version 0.7.1 release candidate 1 is now available from:
  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.1/test/

This is a bug-fix minor release.

New features
------------

* Added a boolean argument to the RPC 'stop' command, if true sets
  -detachdb to create standalone database .dat files before shutting down.

* -salvagewallet command-line option, which moves any existing wallet.dat
  to wallet.{timestamp}.dat and then attempts to salvage public/private
  keys and master encryption keys (if the wallet is encrypted) into
  a new wallet.dat. This should only be used if your wallet becomes
  corrupted, and is not intended to replace regular wallet backups.

* Import $DataDir/bootstrap.dat automatically, if it exists.

Dependency changes
------------------

* Qt 4.8.2 for Windows builds

* openssl 1.0.1c

Bug fixes
---------

* When running -testnet, use RPC port 18332 by default.

* Better detection and handling of corrupt wallet.dat and blkindex.dat files.
  Previous versions would crash with a DB_RUNRECOVERY exception, this
  version detects most problems and tells you how to recover if it
  cannot recover itself.

* Fixed an uninitialized variable bug that could cause transactions to
  be reported out of order.

* Fixed a bug that could cause occasional crashes on exit.

* Warn the user that they need to create fresh wallet backups after they
  encrypt their wallet.


-- 
--
Gavin Andresen



From jgarzik at exmulti.com  Thu Oct 11 15:59:52 2012
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Thu, 11 Oct 2012 11:59:52 -0400
Subject: [Bitcoin-development] 0.7.1 release candidate 1 ready for
	testing
In-Reply-To: <CABsx9T2Y+Ku1DcvWGS+c3p+qRFKbM8O=-CuL=1kC0TZdK1Sz5A@mail.gmail.com>
References: <CABsx9T2Y+Ku1DcvWGS+c3p+qRFKbM8O=-CuL=1kC0TZdK1Sz5A@mail.gmail.com>
Message-ID: <CA+8xBpdK=CcXXWqz7NSV6ApqewmgPDjNbvmiCXc7+QEKLY-Ldg@mail.gmail.com>

On Thu, Oct 11, 2012 at 11:46 AM, Gavin Andresen
<gavinandresen at gmail.com> wrote:
> Any progress on a release candidate QA sanity testing plan?

Posted a call for testing in this forum thread,
https://bitcointalk.org/index.php?topic=117487.0

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From arklan.uthoslin at gmail.com  Thu Oct 11 16:17:55 2012
From: arklan.uthoslin at gmail.com (Arklan Uth Oslin)
Date: Thu, 11 Oct 2012 10:17:55 -0600
Subject: [Bitcoin-development] 0.7.1 release candidate 1 ready for
	testing
In-Reply-To: <CA+8xBpdK=CcXXWqz7NSV6ApqewmgPDjNbvmiCXc7+QEKLY-Ldg@mail.gmail.com>
References: <CABsx9T2Y+Ku1DcvWGS+c3p+qRFKbM8O=-CuL=1kC0TZdK1Sz5A@mail.gmail.com>
	<CA+8xBpdK=CcXXWqz7NSV6ApqewmgPDjNbvmiCXc7+QEKLY-Ldg@mail.gmail.com>
Message-ID: <CAGg41SVZuE++qt3RYNf0B4WX+z4X01H5xJZATXaZrWV1KxL-LA@mail.gmail.com>

I'd emailed steve last week to try and get a look at the test cases and
such he worked up, but I've not heard from him. Other then that, I'll grab
the RC tonight and go through it.

Arklan

----------
As long as there is light, the darkness holds no fear. And yet, even in the
deepest black, there is life. - Arklan Uth Oslin

I want to leave this world the same way I came into it: backwards and on
fire. - Arklan Uth Oslin



On Thu, Oct 11, 2012 at 9:59 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:

> On Thu, Oct 11, 2012 at 11:46 AM, Gavin Andresen
> <gavinandresen at gmail.com> wrote:
> > Any progress on a release candidate QA sanity testing plan?
>
> Posted a call for testing in this forum thread,
> https://bitcointalk.org/index.php?topic=117487.0
>
> --
> Jeff Garzik
> exMULTI, Inc.
> jgarzik at exmulti.com
>
>
> ------------------------------------------------------------------------------
> Don't let slow site performance ruin your business. Deploy New Relic APM
> Deploy New Relic app performance management and know exactly
> what is happening inside your Ruby, Python, PHP, Java, and .NET app
> Try New Relic at no cost today and get our sweet Data Nerd shirt too!
> http://p.sf.net/sfu/newrelic-dev2dev
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121011/e6e16caf/attachment.html>

From steve at mistfpga.net  Thu Oct 11 17:45:21 2012
From: steve at mistfpga.net (steve)
Date: Thu, 11 Oct 2012 18:45:21 +0100
Subject: [Bitcoin-development] 0.7.1 release candidate 1 ready for
	testing
In-Reply-To: <CABsx9T2Y+Ku1DcvWGS+c3p+qRFKbM8O=-CuL=1kC0TZdK1Sz5A@mail.gmail.com>
References: <CABsx9T2Y+Ku1DcvWGS+c3p+qRFKbM8O=-CuL=1kC0TZdK1Sz5A@mail.gmail.com>
Message-ID: <507705B1.2050404@mistfpga.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


Hi,

On 11/10/2012 16:46, Gavin Andresen wrote:
> Any progress on a release candidate QA sanity testing plan?

essentially yes - in all seriousness, I have come around to your way
of thinking, it is not worth arguing about. we end up in the same place.

:) nothing is final though. I will be opening it up to Arklan in a bit
(I have a pool match tonight so after that depending on how drunk i
get.) and to another couple of people who have emailed me off list who
would like to be involved in testing.

I have not created any new tests for the new stuff.  this is still the
noddy stuff.

It covers everything that needs to be covered for a newbe or someone
upgrading clients.

and it is in many formats the moment (from wiki to test runner) none
particularly useful (about to import into mantis, just fiddling with
the fields so it does testcases)

I have been trying to separate the tests into what can be automated,
recorded and checked by watching the video and have sanity checks
along the way (published sha and sha256 of the binaries match) -
(obviously the test is flagged to be run manually if there is any doubt)

I did take myself outside and had a little sit down and talk to
myself.  Lets not run before we can walk. I will still keep the grand
ideas, but they are on the back burner. (I got called a blue skies
thinker today, wtf is one of them? I said smiled and said thanks)

the main things we make sure we get tested right are all the GAT tests
in bettermeans.They are more protocol based and should be run against
all releases.  Lets nail that process, peer review it, retest it, then
use that as a basis for The Process. I will temper my zealousness. I
realise that I can come across as bullish or even aggressive in my
emails.  I never mean too.(unless I say I am. That is not an excuse
for my poor english language skills.)

But I still think that the people running the tests should have the
greatest say in what software is used. So once you have access to the
server and the cases feel free to install your favourite software and
see what other people think.

but we have a vague structure and workflow so it will be interesting
to see how it works out.

the git integration will be trivial.

please email me if you would like access.  I am off out in 15 mins but
I promise to have all access sorted by tomorrow.  I am only using 3
vps to show example testing and test platforms.  I would like it if we
could get a technet license with the donations so far, I use mine (and
my msdn) for work.

also check out bettermeans for the formats that I will be using.

bollocks. bollocks. bollocks

https://secure.bettermeans.com/projects/4180

bye bye bettermeans. how we never knew ye.

Gavin, can we get a bitcoin-test mailing list please.  it would be
used for discussion of testing, tools, ideas, chatter, etc.  it would
not be a place reporting bugs... This list seems very focused and I
always feel like I am disrupting things with my emails about test.  I
dont mind admining the list. I would rather be vocal and inclusive, I
dont think the dev list is the place for that.

> 
> 
> Bitcoin version 0.7.1 release candidate 1 is now available from: 
> http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.1/test/
>
>  This is a bug-fix minor release.
> 
> New features ------------
> 
> * Added a boolean argument to the RPC 'stop' command, if true sets 
> -detachdb to create standalone database .dat files before shutting
> down.
> 
> * -salvagewallet command-line option, which moves any existing
> wallet.dat to wallet.{timestamp}.dat and then attempts to salvage
> public/private keys and master encryption keys (if the wallet is
> encrypted) into a new wallet.dat. This should only be used if your
> wallet becomes corrupted, and is not intended to replace regular
> wallet backups.
> 
> * Import $DataDir/bootstrap.dat automatically, if it exists.
> 
> Dependency changes ------------------
> 
> * Qt 4.8.2 for Windows builds
> 
> * openssl 1.0.1c
> 
> Bug fixes ---------
> 
> * When running -testnet, use RPC port 18332 by default.
> 
> * Better detection and handling of corrupt wallet.dat and
> blkindex.dat files. Previous versions would crash with a
> DB_RUNRECOVERY exception, this version detects most problems and
> tells you how to recover if it cannot recover itself.
> 
> * Fixed an uninitialized variable bug that could cause transactions
> to be reported out of order.
> 
> * Fixed a bug that could cause occasional crashes on exit.
> 
> * Warn the user that they need to create fresh wallet backups after
> they encrypt their wallet.
> 
> 

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.17 (MingW32)
Comment: Using GnuPG with Mozilla - http://www.enigmail.net/

iQEcBAEBAgAGBQJQdwWxAAoJEFvEB9dQFvtQiuMIAJpdu23biq56apMO/KfqmSB0
kQPflDD2XMxTknfqzRs35/EFgL0mJ/cYfY3qTW9JOWL/cit4ieq2EA4P3uQeFFDC
NCxIuDxOzOIaZ+SzRZENXdpVWKRNP1RgUCANm3YfrJBlavr9a/om36nP1IK0W4MB
QcPXrrZvipt1xhx1G/V6NvYbZA3lTAJBFzuz2oRJNwlYoExJFw8EHBypa67BUNOj
NDg1Wu5Ppyq7dZbgfhw4HxIIvgwn/vaSm/tX6HJxyKN7HUJIbIyQrSbPGUvWCsBW
KI6e88DPdG0x0ltqVXja+51n3F9G4H/zTIbB0GyiRDn0GcGwi/GolF5PAgz0tR8=
=zniH
-----END PGP SIGNATURE-----



From arklan.uthoslin at gmail.com  Thu Oct 11 17:51:56 2012
From: arklan.uthoslin at gmail.com (Arklan Uth Oslin)
Date: Thu, 11 Oct 2012 11:51:56 -0600
Subject: [Bitcoin-development] 0.7.1 release candidate 1 ready for
	testing
In-Reply-To: <507705B1.2050404@mistfpga.net>
References: <CABsx9T2Y+Ku1DcvWGS+c3p+qRFKbM8O=-CuL=1kC0TZdK1Sz5A@mail.gmail.com>
	<507705B1.2050404@mistfpga.net>
Message-ID: <CAGg41SWrgCKjAZH3LCGkt5juDg97wNR=VogzD59snF9yPHw2sQ@mail.gmail.com>

i'll second the bitcoin test list.

Arklan

----------
As long as there is light, the darkness holds no fear. And yet, even in the
deepest black, there is life. - Arklan Uth Oslin

I want to leave this world the same way I came into it: backwards and on
fire. - Arklan Uth Oslin



On Thu, Oct 11, 2012 at 11:45 AM, steve <steve at mistfpga.net> wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
>
> Hi,
>
> On 11/10/2012 16:46, Gavin Andresen wrote:
> > Any progress on a release candidate QA sanity testing plan?
>
> essentially yes - in all seriousness, I have come around to your way
> of thinking, it is not worth arguing about. we end up in the same place.
>
> :) nothing is final though. I will be opening it up to Arklan in a bit
> (I have a pool match tonight so after that depending on how drunk i
> get.) and to another couple of people who have emailed me off list who
> would like to be involved in testing.
>
> I have not created any new tests for the new stuff.  this is still the
> noddy stuff.
>
> It covers everything that needs to be covered for a newbe or someone
> upgrading clients.
>
> and it is in many formats the moment (from wiki to test runner) none
> particularly useful (about to import into mantis, just fiddling with
> the fields so it does testcases)
>
> I have been trying to separate the tests into what can be automated,
> recorded and checked by watching the video and have sanity checks
> along the way (published sha and sha256 of the binaries match) -
> (obviously the test is flagged to be run manually if there is any doubt)
>
> I did take myself outside and had a little sit down and talk to
> myself.  Lets not run before we can walk. I will still keep the grand
> ideas, but they are on the back burner. (I got called a blue skies
> thinker today, wtf is one of them? I said smiled and said thanks)
>
> the main things we make sure we get tested right are all the GAT tests
> in bettermeans.They are more protocol based and should be run against
> all releases.  Lets nail that process, peer review it, retest it, then
> use that as a basis for The Process. I will temper my zealousness. I
> realise that I can come across as bullish or even aggressive in my
> emails.  I never mean too.(unless I say I am. That is not an excuse
> for my poor english language skills.)
>
> But I still think that the people running the tests should have the
> greatest say in what software is used. So once you have access to the
> server and the cases feel free to install your favourite software and
> see what other people think.
>
> but we have a vague structure and workflow so it will be interesting
> to see how it works out.
>
> the git integration will be trivial.
>
> please email me if you would like access.  I am off out in 15 mins but
> I promise to have all access sorted by tomorrow.  I am only using 3
> vps to show example testing and test platforms.  I would like it if we
> could get a technet license with the donations so far, I use mine (and
> my msdn) for work.
>
> also check out bettermeans for the formats that I will be using.
>
> bollocks. bollocks. bollocks
>
> https://secure.bettermeans.com/projects/4180
>
> bye bye bettermeans. how we never knew ye.
>
> Gavin, can we get a bitcoin-test mailing list please.  it would be
> used for discussion of testing, tools, ideas, chatter, etc.  it would
> not be a place reporting bugs... This list seems very focused and I
> always feel like I am disrupting things with my emails about test.  I
> dont mind admining the list. I would rather be vocal and inclusive, I
> dont think the dev list is the place for that.
>
> >
> >
> > Bitcoin version 0.7.1 release candidate 1 is now available from:
> >
> http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.1/test/
> >
> >  This is a bug-fix minor release.
> >
> > New features ------------
> >
> > * Added a boolean argument to the RPC 'stop' command, if true sets
> > -detachdb to create standalone database .dat files before shutting
> > down.
> >
> > * -salvagewallet command-line option, which moves any existing
> > wallet.dat to wallet.{timestamp}.dat and then attempts to salvage
> > public/private keys and master encryption keys (if the wallet is
> > encrypted) into a new wallet.dat. This should only be used if your
> > wallet becomes corrupted, and is not intended to replace regular
> > wallet backups.
> >
> > * Import $DataDir/bootstrap.dat automatically, if it exists.
> >
> > Dependency changes ------------------
> >
> > * Qt 4.8.2 for Windows builds
> >
> > * openssl 1.0.1c
> >
> > Bug fixes ---------
> >
> > * When running -testnet, use RPC port 18332 by default.
> >
> > * Better detection and handling of corrupt wallet.dat and
> > blkindex.dat files. Previous versions would crash with a
> > DB_RUNRECOVERY exception, this version detects most problems and
> > tells you how to recover if it cannot recover itself.
> >
> > * Fixed an uninitialized variable bug that could cause transactions
> > to be reported out of order.
> >
> > * Fixed a bug that could cause occasional crashes on exit.
> >
> > * Warn the user that they need to create fresh wallet backups after
> > they encrypt their wallet.
> >
> >
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v2.0.17 (MingW32)
> Comment: Using GnuPG with Mozilla - http://www.enigmail.net/
>
> iQEcBAEBAgAGBQJQdwWxAAoJEFvEB9dQFvtQiuMIAJpdu23biq56apMO/KfqmSB0
> kQPflDD2XMxTknfqzRs35/EFgL0mJ/cYfY3qTW9JOWL/cit4ieq2EA4P3uQeFFDC
> NCxIuDxOzOIaZ+SzRZENXdpVWKRNP1RgUCANm3YfrJBlavr9a/om36nP1IK0W4MB
> QcPXrrZvipt1xhx1G/V6NvYbZA3lTAJBFzuz2oRJNwlYoExJFw8EHBypa67BUNOj
> NDg1Wu5Ppyq7dZbgfhw4HxIIvgwn/vaSm/tX6HJxyKN7HUJIbIyQrSbPGUvWCsBW
> KI6e88DPdG0x0ltqVXja+51n3F9G4H/zTIbB0GyiRDn0GcGwi/GolF5PAgz0tR8=
> =zniH
> -----END PGP SIGNATURE-----
>
>
> ------------------------------------------------------------------------------
> Don't let slow site performance ruin your business. Deploy New Relic APM
> Deploy New Relic app performance management and know exactly
> what is happening inside your Ruby, Python, PHP, Java, and .NET app
> Try New Relic at no cost today and get our sweet Data Nerd shirt too!
> http://p.sf.net/sfu/newrelic-dev2dev
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121011/7561cb29/attachment.html>

From jgarzik at exmulti.com  Thu Oct 11 19:20:16 2012
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Thu, 11 Oct 2012 15:20:16 -0400
Subject: [Bitcoin-development] 0.7.1 release candidate 1 ready for
	testing
In-Reply-To: <CAGg41SWrgCKjAZH3LCGkt5juDg97wNR=VogzD59snF9yPHw2sQ@mail.gmail.com>
References: <CABsx9T2Y+Ku1DcvWGS+c3p+qRFKbM8O=-CuL=1kC0TZdK1Sz5A@mail.gmail.com>
	<507705B1.2050404@mistfpga.net>
	<CAGg41SWrgCKjAZH3LCGkt5juDg97wNR=VogzD59snF9yPHw2sQ@mail.gmail.com>
Message-ID: <CA+8xBpedKZ6SYn-+O-uZQZcreHd-Yt_N-sR6CB4XUOgDU9vr-w@mail.gmail.com>

On Thu, Oct 11, 2012 at 1:51 PM, Arklan Uth Oslin
<arklan.uthoslin at gmail.com> wrote:
> i'll second the bitcoin test list.

As you like, but... bitcoin-devel is quite low traffic, so there is
not exactly an issue of crowding.  And a separate list means people
cannot chime in as easily.

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From arklan.uthoslin at gmail.com  Thu Oct 11 20:08:13 2012
From: arklan.uthoslin at gmail.com (Arklan Uth Oslin)
Date: Thu, 11 Oct 2012 14:08:13 -0600
Subject: [Bitcoin-development] 0.7.1 release candidate 1 ready for
	testing
In-Reply-To: <CA+8xBpedKZ6SYn-+O-uZQZcreHd-Yt_N-sR6CB4XUOgDU9vr-w@mail.gmail.com>
References: <CABsx9T2Y+Ku1DcvWGS+c3p+qRFKbM8O=-CuL=1kC0TZdK1Sz5A@mail.gmail.com>
	<507705B1.2050404@mistfpga.net>
	<CAGg41SWrgCKjAZH3LCGkt5juDg97wNR=VogzD59snF9yPHw2sQ@mail.gmail.com>
	<CA+8xBpedKZ6SYn-+O-uZQZcreHd-Yt_N-sR6CB4XUOgDU9vr-w@mail.gmail.com>
Message-ID: <CAGg41SX1vwahANtb8mW0dxnkvP-ZRYRtmceqhDaY15-NmtG7JA@mail.gmail.com>

while perfectly true for now, hopefully that won't remain the case as we
get people on board with testing. ...ok, sure, it might be a while... but
having the separate list with help with archival type stuff and other
things eventually. we'll see how useful it actually is in time.

Arklan

----------
As long as there is light, the darkness holds no fear. And yet, even in the
deepest black, there is life. - Arklan Uth Oslin

I want to leave this world the same way I came into it: backwards and on
fire. - Arklan Uth Oslin



On Thu, Oct 11, 2012 at 1:20 PM, Jeff Garzik <jgarzik at exmulti.com> wrote:

> On Thu, Oct 11, 2012 at 1:51 PM, Arklan Uth Oslin
> <arklan.uthoslin at gmail.com> wrote:
> > i'll second the bitcoin test list.
>
> As you like, but... bitcoin-devel is quite low traffic, so there is
> not exactly an issue of crowding.  And a separate list means people
> cannot chime in as easily.
>
> --
> Jeff Garzik
> exMULTI, Inc.
> jgarzik at exmulti.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121011/af75f81b/attachment.html>

From jgarzik at exmulti.com  Fri Oct 12 19:30:32 2012
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Fri, 12 Oct 2012 15:30:32 -0400
Subject: [Bitcoin-development] Bitcoin cookbook
Message-ID: <CA+8xBpccs4ru1h9sYnXZ6F+MmECTt_KM=BUgWxqvE9N=99AGFw@mail.gmail.com>

Created a forum thread "Bitcoin cookbook", to collect real world, step
by step examples of some of the more advanced uses of bitcoin:
https://bitcointalk.org/index.php?topic=118126.0

If you have a recipe to contribute, create a new thread, then mention
your thread in the cookbook.

Maybe some of this will migrate to the wiki, but the wiki itself tends
to be a poor place for discussion and questions.

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From k at old.school.nz  Sun Oct 14 20:52:33 2012
From: k at old.school.nz (Kyle Henderson)
Date: Mon, 15 Oct 2012 09:52:33 +1300
Subject: [Bitcoin-development] Hosting of compiled bitcoin client
Message-ID: <CA+QPp0rDb9cKThWZuvC=OuvKmh4YBWLVAcP6rFjt0g47tLaAoA@mail.gmail.com>

Hi team,

Given that sourceforge has shown to restrict access to a number of
countries at the request of the USA, would hosting of the compiled client
on https://github.com/bitcoin/bitcoin/downloads be an alternative that
would be considered?

It seems like a logical alternative to me that requires little effort as it
is already in use as the code repository.

Kind regards,

Kyle
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121015/cd601377/attachment.html>

From luke at dashjr.org  Sun Oct 14 22:02:45 2012
From: luke at dashjr.org (Luke-Jr)
Date: Sun, 14 Oct 2012 22:02:45 +0000
Subject: [Bitcoin-development] Hosting of compiled bitcoin client
In-Reply-To: <CA+QPp0rDb9cKThWZuvC=OuvKmh4YBWLVAcP6rFjt0g47tLaAoA@mail.gmail.com>
References: <CA+QPp0rDb9cKThWZuvC=OuvKmh4YBWLVAcP6rFjt0g47tLaAoA@mail.gmail.com>
Message-ID: <201210142202.47221.luke@dashjr.org>

On Sunday, October 14, 2012 8:52:33 PM Kyle Henderson wrote:
> Given that sourceforge has shown to restrict access to a number of
> countries at the request of the USA

This needs some clarification. If the USA has "requested" it, then presumably 
there's some legality involved, and our US developers shouldn't be made liable 
for it. The specific reason SourceForge has restricted access should be made 
known so non-US developers (or gitian builders) can evaluate their own laws 
and hopefully at least one will be in a jurisdiction that allows it.
But GitHub is also US-located, so hosting it there may be a problem too.

Luke



From decker.christian at gmail.com  Sun Oct 14 22:09:48 2012
From: decker.christian at gmail.com (Christian Decker)
Date: Mon, 15 Oct 2012 00:09:48 +0200
Subject: [Bitcoin-development] Hosting of compiled bitcoin client
In-Reply-To: <201210142202.47221.luke@dashjr.org>
References: <CA+QPp0rDb9cKThWZuvC=OuvKmh4YBWLVAcP6rFjt0g47tLaAoA@mail.gmail.com>
	<201210142202.47221.luke@dashjr.org>
Message-ID: <CALxbBHW9wwe9yEUZp0pEzt+optFVmmRF27rBCYoLCeb8=p4iqg@mail.gmail.com>

Being an international team I'm pretty sure we can find someone who is in a
more permissive country.
Would someone knowledgeable point us to the specific laws, so that we can
look it up in our respective jurisdiction?

Regards,
Chris

On Mon, Oct 15, 2012 at 12:02 AM, Luke-Jr <luke at dashjr.org> wrote:

> On Sunday, October 14, 2012 8:52:33 PM Kyle Henderson wrote:
> > Given that sourceforge has shown to restrict access to a number of
> > countries at the request of the USA
>
> This needs some clarification. If the USA has "requested" it, then
> presumably
> there's some legality involved, and our US developers shouldn't be made
> liable
> for it. The specific reason SourceForge has restricted access should be
> made
> known so non-US developers (or gitian builders) can evaluate their own laws
> and hopefully at least one will be in a jurisdiction that allows it.
> But GitHub is also US-located, so hosting it there may be a problem too.
>
> Luke
>
>
> ------------------------------------------------------------------------------
> Don't let slow site performance ruin your business. Deploy New Relic APM
> Deploy New Relic app performance management and know exactly
> what is happening inside your Ruby, Python, PHP, Java, and .NET app
> Try New Relic at no cost today and get our sweet Data Nerd shirt too!
> http://p.sf.net/sfu/newrelic-dev2dev
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121015/7ce2d5bb/attachment.html>

From gmaxwell at gmail.com  Sun Oct 14 22:33:19 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sun, 14 Oct 2012 18:33:19 -0400
Subject: [Bitcoin-development] Hosting of compiled bitcoin client
In-Reply-To: <CALxbBHW9wwe9yEUZp0pEzt+optFVmmRF27rBCYoLCeb8=p4iqg@mail.gmail.com>
References: <CA+QPp0rDb9cKThWZuvC=OuvKmh4YBWLVAcP6rFjt0g47tLaAoA@mail.gmail.com>
	<201210142202.47221.luke@dashjr.org>
	<CALxbBHW9wwe9yEUZp0pEzt+optFVmmRF27rBCYoLCeb8=p4iqg@mail.gmail.com>
Message-ID: <CAAS2fgTJeTObALu2CU6A8bujM_66wuBnOywnviVTa0Qfac+MWw@mail.gmail.com>

On Sun, Oct 14, 2012 at 6:09 PM, Christian Decker
<decker.christian at gmail.com> wrote:
> Being an international team I'm pretty sure we can find someone who is in a
> more permissive country.
> Would someone knowledgeable point us to the specific laws, so that we can
> look it up in our respective jurisdiction?

The only restrictions I'm aware of are the EAR restrictions on the
export of cryptography.

These are generally not applicable to us for two reasons. One is that
we only use cryptography for authentication, which is explicitly
exempted:
http://www.bis.doc.gov/encryption/question2.htm

The other is that since Bernstein vs US
(http://en.wikipedia.org/wiki/Bernstein_v._United_States) there has
been absolutely no enforcement attempts against open source projects
as the precedent creating holding there makes it clear that these
regulations cannot inhibit the publication of source code.

Perhaps someone could make a little noise about binaries, but it would
be pure pretext: Especially since with the deterministic build process
we use anyone can produce bit-identical binaries (thus allowing builds
by untrusted third partities to be just as trustworthy as the official
ones).

> "more permissive country"

This made me laugh. It's hard to find places with better effective law
for most online and internet things.  Many places copy the US's
statutes (either cargo culting, or as part of treaty compliance) but
do so without also copying our legislative history which is
/generally/ highly protective.  For example, Australia has copied the
US munitions regulations exactly, but has no analog of Bernstein v. US
to limit the government's power.

Unfortunately sourceforce was rather vague about what regulations they
believe they're enforcing:
http://sourceforge.net/blog/clarifying-sourceforgenets-denial-of-site-access-for-certain-persons-in-accordance-with-us-law/

So unless someone has already done it, I'll get in touch with the EFF
and find out if they're aware of any particular precautions we should
take here.



From mike at plan99.net  Sun Oct 14 22:49:47 2012
From: mike at plan99.net (Mike Hearn)
Date: Mon, 15 Oct 2012 00:49:47 +0200
Subject: [Bitcoin-development] Hosting of compiled bitcoin client
In-Reply-To: <CAAS2fgTJeTObALu2CU6A8bujM_66wuBnOywnviVTa0Qfac+MWw@mail.gmail.com>
References: <CA+QPp0rDb9cKThWZuvC=OuvKmh4YBWLVAcP6rFjt0g47tLaAoA@mail.gmail.com>
	<201210142202.47221.luke@dashjr.org>
	<CALxbBHW9wwe9yEUZp0pEzt+optFVmmRF27rBCYoLCeb8=p4iqg@mail.gmail.com>
	<CAAS2fgTJeTObALu2CU6A8bujM_66wuBnOywnviVTa0Qfac+MWw@mail.gmail.com>
Message-ID: <CANEZrP3L6ifvvWkZvVs-RFAEb3zNuR-E_eDBCytPgP2-0tOj6A@mail.gmail.com>

The laws in question are OFAC sanctions:

http://en.wikipedia.org/wiki/Office_of_Foreign_Assets_Control

The specific acts that enable this are varied. In theory they apply to
any US citizen or resident. The issue is not cryptography, it's "trade
with sanctioned countries", period, where making files available to
download is considered trade.

For Bitcoin to be available in these places, the sites and download
mirrors would need to be hosted outside the USA by non-citizens. EU
sanctions are primarily financial at this time, as far as I know there
are no attempts to prevent people from serving data to Iran.

Example of places where there are no sanctions in effect: Switzerland.
Unfortunately datacenter space in Zurich is quite expensive (as is
everything here).

I would not ever describe OFAC as "effective law". The SDN list has
repeatedly been found unconstitutional, representing as it does a
complete evasion of the judicial system. If you end up on the
sanctions list no evidence is required, no process is followed and no
appeals are possible. The list itself assumes names are globally
unique.



From mark.lister at yahoo.com  Sat Oct 20 07:43:26 2012
From: mark.lister at yahoo.com (Mark Lister)
Date: Sat, 20 Oct 2012 09:43:26 +0200
Subject: [Bitcoin-development] Hosting of compiled bitcoin client
Message-ID: <5082561E.4030907@yahoo.com>

>The issue is not cryptography, it's "trade with sanctioned countries",
period, where making
>files available to download is considered trade.

Spot on, in 2005 when I lived in (among other places) Sudan, Sourceforge
would block certain downloads (but not the project site).  That said it
was trivial to bypass the restrictions then.





From laanwj at gmail.com  Sat Oct 20 08:33:35 2012
From: laanwj at gmail.com (Wladimir)
Date: Sat, 20 Oct 2012 10:33:35 +0200
Subject: [Bitcoin-development] Hosting of compiled bitcoin client
In-Reply-To: <5082561E.4030907@yahoo.com>
References: <5082561E.4030907@yahoo.com>
Message-ID: <CA+s+GJDBEkYrZ5izTOkGwxytKH4Vb=v4XgHBE2bg62G740Y+9Q@mail.gmail.com>

On Sat, Oct 20, 2012 at 9:43 AM, Mark Lister <mark.lister at yahoo.com> wrote:
>>The issue is not cryptography, it's "trade with sanctioned countries",
> period, where making
>>files available to download is considered trade.
>
> Spot on, in 2005 when I lived in (among other places) Sudan, Sourceforge
> would block certain downloads (but not the project site).  That said it
> was trivial to bypass the restrictions then.

I don't think it's related to these sanctions but to the Great
Firewall of China, but sourceforge downloads are also blocked in
China. Also quite easy to bypass though.

Wladimir



From calebdelisle at lavabit.com  Sat Oct 20 14:19:47 2012
From: calebdelisle at lavabit.com (Caleb James DeLisle)
Date: Sat, 20 Oct 2012 10:19:47 -0400
Subject: [Bitcoin-development] Hosting of compiled bitcoin client
In-Reply-To: <CA+s+GJDBEkYrZ5izTOkGwxytKH4Vb=v4XgHBE2bg62G740Y+9Q@mail.gmail.com>
References: <5082561E.4030907@yahoo.com>
	<CA+s+GJDBEkYrZ5izTOkGwxytKH4Vb=v4XgHBE2bg62G740Y+9Q@mail.gmail.com>
Message-ID: <5082B303.9090908@lavabit.com>

Another concern is sourceforge being attacked and a backdoored client uploaded.
Most people don't check signatures and I seem to recall sourceforge having some
vulnerabilities stemming from their "your own website on sourceforge" feature.
It looks like Github takes security a little bit more seriously.
Probably the best is to ask for free hosting from a reputable security conscious
bitcoin enthusiast but that basically means Tux and he's already an SPOF in the
coineverse.

Thanks,
Caleb

On 10/20/2012 04:33 AM, Wladimir wrote:
> On Sat, Oct 20, 2012 at 9:43 AM, Mark Lister <mark.lister at yahoo.com> wrote:
>>> The issue is not cryptography, it's "trade with sanctioned countries",
>> period, where making
>>> files available to download is considered trade.
>>
>> Spot on, in 2005 when I lived in (among other places) Sudan, Sourceforge
>> would block certain downloads (but not the project site).  That said it
>> was trivial to bypass the restrictions then.
> 
> I don't think it's related to these sanctions but to the Great
> Firewall of China, but sourceforge downloads are also blocked in
> China. Also quite easy to bypass though.
> 
> Wladimir
> 
> ------------------------------------------------------------------------------
> Everyone hates slow websites. So do we.
> Make your web apps faster with AppDynamics
> Download AppDynamics Lite for free today:
> http://p.sf.net/sfu/appdyn_sfd2d_oct
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 





From pieter.wuille at gmail.com  Sat Oct 20 17:55:43 2012
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Sat, 20 Oct 2012 19:55:43 +0200
Subject: [Bitcoin-development] Public key and signature malleability
Message-ID: <CAPg+sBgBtYUHtHq1MnKuFJHc=NGZ4t+SxHDs0TLKmzf8bSig=g@mail.gmail.com>

Hello all,

as some may be aware, OpenSSL accepts several encodings for the same
public key or the same signature. It even accepts encodings that fail
to conform to the SEC and DER specification by which they are defined.
As it perfectly capable of parsing every standard-compliant encoding,
this is not a problem on itself. However, as near every full Bitcoin
node in existence uses OpenSSL, they will accept such non-standard
encodings in transactions, and even let them into blocks.

In order to make the Bitcoin network rules more well-defined, I'd like
to propose strict rules about what is acceptable, and which do not
depend on OpenSSL's implementation. This would make it easier for
alternative full node implementations, and prevent "malleability
attacks".

For that, I've submitted a pull request some time ago (see
https://github.com/bitcoin/bitcoin/pull/1742). The specific rules are
these:
 * For public keys (SEC compressed or uncompressed EC points)
   * First byte is either 0x02, 0x03 or 0x04
   * If the first byte is 0x02 or 0x03, exactly 32 bytes follow
   * If the first byte is 0x04, exactly 64 bytes follow
 * For signatures (DER encoded integer pairs)
   * Format is 0x30 <total len> 0x02 <len R> <R> 0x02 <len S> <S> <hashtype>
   * R and S are MSB encoded integers, which encode a non-negative
integer without excessive zero bytes in front. This implies they do
not start with a 0x00 unless the next byte has its highest bit set
(>=0x80) or are 0, in which case exactly one 0x00 is required. Their
length is thus between 1 and 33 bytes.
   * <hashtype> is a single byte that is either 0x01, 0x02, 0x03,
0x81, 0x82 or 0x83.

All these are rules that are followed by almost all clients already
(including Armory and Bitcoin-js, which until recently didn't).

Sergio Lerner recently discovered that one can take the
secp256k1-field-size complement of the S value in the signature
without invalidating it. The easiest solution to prevent this, would
be to require that the lowest bit of the S value is always even (as
taking the complement changes this). This would require some
coordination, as no client currently enforces this, but it is easy to
implement.

The reason malleability can be a problem, is that a malicious relayer
can modify transactions in-transit without invalidating them. This
will not cause any loss of coins, but a lot of wallet software
wouldn't deal gracefully with a modified version of their transactions
that gets accepted in a block.

What do you think about these rules? If people want these rules,
nothing would happen for now - just start try to find software that
doesn't produce complying data. In a second step, these could be
enabled as check similar to IsStandard() - making it hard for them to
get into blocks, but still be accepted when they aren't standard.
Finally, when no significant amount of non-standard transactions are
seen anymore, we can write a BIP and start enforcing this as a network
rule.

-- 
Pieter



From gmaxwell at gmail.com  Sat Oct 20 18:34:11 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sat, 20 Oct 2012 14:34:11 -0400
Subject: [Bitcoin-development] Public key and signature malleability
In-Reply-To: <CAPg+sBgBtYUHtHq1MnKuFJHc=NGZ4t+SxHDs0TLKmzf8bSig=g@mail.gmail.com>
References: <CAPg+sBgBtYUHtHq1MnKuFJHc=NGZ4t+SxHDs0TLKmzf8bSig=g@mail.gmail.com>
Message-ID: <CAAS2fgRX9hxAhbTTXdH3P=G27sCc6D9TMu=3m1euF8P0jMEb7A@mail.gmail.com>

On Sat, Oct 20, 2012 at 1:55 PM, Pieter Wuille <pieter.wuille at gmail.com> wrote:
> What do you think about these rules? If people want these rules,
> nothing would happen for now - just start try to find software that
> doesn't produce complying data. In a second step, these could be
> enabled as check similar to IsStandard() - making it hard for them to
> get into blocks, but still be accepted when they aren't standard.
> Finally, when no significant amount of non-standard transactions are
> seen anymore, we can write a BIP and start enforcing this as a network
> rule.

I strongly support heading down this path. Malleability has produced a
steady trickle of surprising outcomes. In addition to the problems we
already know about and expect there may be additional security or DOS
problems that arise from allowing these.



From mark.lister at yahoo.com  Sat Oct 20 21:08:35 2012
From: mark.lister at yahoo.com (Mark Lister)
Date: Sat, 20 Oct 2012 23:08:35 +0200
Subject: [Bitcoin-development] Fwd: Re: Hosting of compiled bitcoin client
In-Reply-To: <50826AE4.7030004@yahoo.com>
References: <50826AE4.7030004@yahoo.com>
Message-ID: <508312D3.70309@yahoo.com>

>I don't think it's related to these sanctions but to the Great Firewall
of China, but sourceforge downloads are also blocked in China. Also
quite easy to bypass though.

I think it's easy to overestimate the problem. Users in these countries
(even non technical ones) quickly learn how to bypass hurdles in the
network. Although it would be great to host downloads on neutral
territory it might also be sufficient to provide the SHA256 of a malware
free binary...





From pieter.wuille at gmail.com  Sat Oct 20 22:33:12 2012
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Sun, 21 Oct 2012 00:33:12 +0200
Subject: [Bitcoin-development] Ultraprune merged in mainline
Message-ID: <CAPg+sBjh0CTYHTZovg=wzy=YJTRwoci3QDJO=qO2kV8wQnndnA@mail.gmail.com>

Hello everyone,

I've just merged my "ultraprune" branch into mainline (including
Mike's LevelDB work). This is a very significant change, and all
testing is certainly welcome. As a result of this, many pull requests
probably don't apply cleanly anymore. If you need help rebasing them
on the new structure, ask me.

The idea behind ultraprune is to use an ultra-pruned copy (only
unspent transaction outputs in a custom compact format) of the block
chain for validation (as opposed to a transaction index into the block
chain). It still keeps all blocks around for serving them to other
nodes, for rescanning, and for reorganisations. As such, it is still a
full node. So, despite the name, it does not implement any actual
pruning yet, though pruning would be trivial to implement now. This
would have profound effects on the network though, so may still need
some discussion first.

A small summary of the changes:
 * Instead of blk000?.dat, we have blocks/blk000??.dat files of max
128 MiB, pre-allocated per 16 MiB
 * Instead of a Berklely DB blkindex.dat, we have a LevelDB directory
blktree/. This only contains a block index, no transaction index.
 * A new LevelDB directory coins/, which contains data about the
current unspent transaction output set.
 * New files blocks/rev000??.dat contain undo data for blocks
(necessary for reorganisation).
 * More information is kept about blocks and block files, so
facilitate pruning in the future, and to prepare for a headers-first
mode.
 * Two new RPC calls are added: gettxout and gettxoutsetinfo.

The most noticeable change should be performance: LevelDB deals much
better with slow I/O than BDB does, and the working set size for
validation is an order of magnitude smaller. In the longer run, I
think it is an evolution towards separation between validation nodes
and archive nodes, which is needed in my opinion.

-- 
Pieter



From arklan.uthoslin at gmail.com  Sun Oct 21 01:38:23 2012
From: arklan.uthoslin at gmail.com (Arklan Uth Oslin)
Date: Sat, 20 Oct 2012 19:38:23 -0600
Subject: [Bitcoin-development] Ultraprune merged in mainline
In-Reply-To: <CAPg+sBjh0CTYHTZovg=wzy=YJTRwoci3QDJO=qO2kV8wQnndnA@mail.gmail.com>
References: <CAPg+sBjh0CTYHTZovg=wzy=YJTRwoci3QDJO=qO2kV8wQnndnA@mail.gmail.com>
Message-ID: <CAGg41SUnw=KDxmeE7sXO-x1qSsVUsf27HKqvNP3R0D654LbqkA@mail.gmail.com>

i can happily start testing this this weekend. however i'm not 100% sure
how to get a copy. i looked around github, but wasn't sure which was the
proper project. could i get a link and a simple "do this, this and this"?
thanks.

i feel like a newb. ugh.

Arklan

----------
As long as there is light, the darkness holds no fear. And yet, even in the
deepest black, there is life. - Arklan Uth Oslin

I want to leave this world the same way I came into it: backwards and on
fire. - Arklan Uth Oslin



On Sat, Oct 20, 2012 at 4:33 PM, Pieter Wuille <pieter.wuille at gmail.com>wrote:

> Hello everyone,
>
> I've just merged my "ultraprune" branch into mainline (including
> Mike's LevelDB work). This is a very significant change, and all
> testing is certainly welcome. As a result of this, many pull requests
> probably don't apply cleanly anymore. If you need help rebasing them
> on the new structure, ask me.
>
> The idea behind ultraprune is to use an ultra-pruned copy (only
> unspent transaction outputs in a custom compact format) of the block
> chain for validation (as opposed to a transaction index into the block
> chain). It still keeps all blocks around for serving them to other
> nodes, for rescanning, and for reorganisations. As such, it is still a
> full node. So, despite the name, it does not implement any actual
> pruning yet, though pruning would be trivial to implement now. This
> would have profound effects on the network though, so may still need
> some discussion first.
>
> A small summary of the changes:
>  * Instead of blk000?.dat, we have blocks/blk000??.dat files of max
> 128 MiB, pre-allocated per 16 MiB
>  * Instead of a Berklely DB blkindex.dat, we have a LevelDB directory
> blktree/. This only contains a block index, no transaction index.
>  * A new LevelDB directory coins/, which contains data about the
> current unspent transaction output set.
>  * New files blocks/rev000??.dat contain undo data for blocks
> (necessary for reorganisation).
>  * More information is kept about blocks and block files, so
> facilitate pruning in the future, and to prepare for a headers-first
> mode.
>  * Two new RPC calls are added: gettxout and gettxoutsetinfo.
>
> The most noticeable change should be performance: LevelDB deals much
> better with slow I/O than BDB does, and the working set size for
> validation is an order of magnitude smaller. In the longer run, I
> think it is an evolution towards separation between validation nodes
> and archive nodes, which is needed in my opinion.
>
> --
> Pieter
>
>
> ------------------------------------------------------------------------------
> Everyone hates slow websites. So do we.
> Make your web apps faster with AppDynamics
> Download AppDynamics Lite for free today:
> http://p.sf.net/sfu/appdyn_sfd2d_oct
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121020/40eec55f/attachment.html>

From laanwj at gmail.com  Sun Oct 21 06:47:24 2012
From: laanwj at gmail.com (Wladimir)
Date: Sun, 21 Oct 2012 08:47:24 +0200
Subject: [Bitcoin-development] Public key and signature malleability
In-Reply-To: <CAPg+sBgBtYUHtHq1MnKuFJHc=NGZ4t+SxHDs0TLKmzf8bSig=g@mail.gmail.com>
References: <CAPg+sBgBtYUHtHq1MnKuFJHc=NGZ4t+SxHDs0TLKmzf8bSig=g@mail.gmail.com>
Message-ID: <CA+s+GJCouT-ehBtJsAKCUPYgiCJYJ-vh1ysNwENRrSAsANyEJw@mail.gmail.com>

On Sat, Oct 20, 2012 at 7:55 PM, Pieter Wuille <pieter.wuille at gmail.com> wrote:
> In order to make the Bitcoin network rules more well-defined, I'd like
> to propose strict rules about what is acceptable, and which do not
> depend on OpenSSL's implementation.

I strongly support this too. It is good to make the protocol as
well-defined as possible in a self-contained way, ie define all the
parsing and processing without referring to specific current
implementations of other libraries such as OpenSSL.

What always bothered me is that OpenSSL can change their API to accept
new obscure key encodings at some point, or change their
interpretation, and bitcoin will automatically change with it. As
bitcoin happily links against any OpenSSL version you provide it, in
worst case, this can result in forks and unexpected behavior
completely out of our control.

Wladimir



From gavinandresen at gmail.com  Sun Oct 21 17:05:11 2012
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Sun, 21 Oct 2012 13:05:11 -0400
Subject: [Bitcoin-development] Public key and signature malleability
In-Reply-To: <CA+s+GJCouT-ehBtJsAKCUPYgiCJYJ-vh1ysNwENRrSAsANyEJw@mail.gmail.com>
References: <CAPg+sBgBtYUHtHq1MnKuFJHc=NGZ4t+SxHDs0TLKmzf8bSig=g@mail.gmail.com>
	<CA+s+GJCouT-ehBtJsAKCUPYgiCJYJ-vh1ysNwENRrSAsANyEJw@mail.gmail.com>
Message-ID: <CABsx9T2qC0Sw8VMQk+BPtwNMRUtOwwORWydXz=C79aLSyzchAg@mail.gmail.com>

Any objections from other transaction-validating implementations?

I strongly support more precisely defining the transaction validity
rules by changing the reference implementation.

-- 
--
Gavin Andresen



From mike at plan99.net  Sun Oct 21 18:47:19 2012
From: mike at plan99.net (Mike Hearn)
Date: Sun, 21 Oct 2012 20:47:19 +0200
Subject: [Bitcoin-development] Public key and signature malleability
In-Reply-To: <CABsx9T2qC0Sw8VMQk+BPtwNMRUtOwwORWydXz=C79aLSyzchAg@mail.gmail.com>
References: <CAPg+sBgBtYUHtHq1MnKuFJHc=NGZ4t+SxHDs0TLKmzf8bSig=g@mail.gmail.com>
	<CA+s+GJCouT-ehBtJsAKCUPYgiCJYJ-vh1ysNwENRrSAsANyEJw@mail.gmail.com>
	<CABsx9T2qC0Sw8VMQk+BPtwNMRUtOwwORWydXz=C79aLSyzchAg@mail.gmail.com>
Message-ID: <CANEZrP2HxwUOkgEjOKqDwkjGLh86EykfwLEJVc2nLcRQU6DtGg@mail.gmail.com>

No objections.

On Sun, Oct 21, 2012 at 7:05 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:
> Any objections from other transaction-validating implementations?
>
> I strongly support more precisely defining the transaction validity
> rules by changing the reference implementation.
>
> --
> --
> Gavin Andresen
>
> ------------------------------------------------------------------------------
> Everyone hates slow websites. So do we.
> Make your web apps faster with AppDynamics
> Download AppDynamics Lite for free today:
> http://p.sf.net/sfu/appdyn_sfd2d_oct
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From moon at justmoon.de  Sun Oct 21 18:48:15 2012
From: moon at justmoon.de (Stefan Thomas)
Date: Sun, 21 Oct 2012 20:48:15 +0200
Subject: [Bitcoin-development] Public key and signature malleability
In-Reply-To: <CABsx9T2qC0Sw8VMQk+BPtwNMRUtOwwORWydXz=C79aLSyzchAg@mail.gmail.com>
References: <CAPg+sBgBtYUHtHq1MnKuFJHc=NGZ4t+SxHDs0TLKmzf8bSig=g@mail.gmail.com>
	<CA+s+GJCouT-ehBtJsAKCUPYgiCJYJ-vh1ysNwENRrSAsANyEJw@mail.gmail.com>
	<CABsx9T2qC0Sw8VMQk+BPtwNMRUtOwwORWydXz=C79aLSyzchAg@mail.gmail.com>
Message-ID: <5084436F.80706@justmoon.de>

> Any objections from other transaction-validating implementations?

Sounds good to me. I think it's important to give people a chance to fix
their software, but Pieter's proposal does that.

On 10/21/2012 7:05 PM, Gavin Andresen wrote:
> Any objections from other transaction-validating implementations?
>
> I strongly support more precisely defining the transaction validity
> rules by changing the reference implementation.
>




From mike at plan99.net  Wed Oct 24 15:56:07 2012
From: mike at plan99.net (Mike Hearn)
Date: Wed, 24 Oct 2012 17:56:07 +0200
Subject: [Bitcoin-development] Draft BIP for Bloom filtering
Message-ID: <CANEZrP0XALwBFJyZTzYd5xBp4MRrjv0s_y2tOXbO7UgjWF2HzA@mail.gmail.com>

I've written a draft BIP describing the bloom filtering protocol
extension developed by myself and Matt.

https://en.bitcoin.it/wiki/BIP_0037

(yes I know there's some kind of process around getting allocated a
number - it seems overkill for this).

Please read it and let me know if there are any missing details or
things which sound wrong.

Design-wise, it occurred to me as I wrote the BIP that the method of
delaying reception of invs is a bit ad-hoc. It may be better to have a
bloom filter be sent in the version message itself. On the other hand,
having a flag to delay invs means that the filter can be calculated in
parallel to bringing up the network connections. Whilst actually
making a Bloom filter is fast, with deterministic wallets you may need
to do a lot of calculations to find the keys to scan for.



From mike at plan99.net  Wed Oct 24 16:35:08 2012
From: mike at plan99.net (Mike Hearn)
Date: Wed, 24 Oct 2012 18:35:08 +0200
Subject: [Bitcoin-development] Draft BIP for Bloom filtering
In-Reply-To: <20121024162255.GA30290@vps7135.xlshosting.net>
References: <CANEZrP0XALwBFJyZTzYd5xBp4MRrjv0s_y2tOXbO7UgjWF2HzA@mail.gmail.com>
	<20121024162255.GA30290@vps7135.xlshosting.net>
Message-ID: <CANEZrP1sxtOb+czMtBTkmzngEwMYRqD667WyKQkAOKLi+mGBGQ@mail.gmail.com>

> Some questions:
> * why limit the number of matching transactions to 255?

Copy/paste error in the does :(

> * what does "each hash and key in the output script" mean exactly? what
about the output script in its entirety?

It's an informal way to say data elements. If you insert a key then it
matches both single and multi sig outputs regardless of location.

> * is sharing parts of the merkle branches not worth it?

We think probably not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121024/b51f81d6/attachment.html>

From pieter.wuille at gmail.com  Wed Oct 24 16:22:56 2012
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 24 Oct 2012 18:22:56 +0200
Subject: [Bitcoin-development] Draft BIP for Bloom filtering
In-Reply-To: <CANEZrP0XALwBFJyZTzYd5xBp4MRrjv0s_y2tOXbO7UgjWF2HzA@mail.gmail.com>
References: <CANEZrP0XALwBFJyZTzYd5xBp4MRrjv0s_y2tOXbO7UgjWF2HzA@mail.gmail.com>
Message-ID: <20121024162255.GA30290@vps7135.xlshosting.net>

On Wed, Oct 24, 2012 at 05:56:07PM +0200, Mike Hearn wrote:
> I've written a draft BIP describing the bloom filtering protocol
> extension developed by myself and Matt.
> 
> https://en.bitcoin.it/wiki/BIP_0037
> 
> Please read it and let me know if there are any missing details or
> things which sound wrong.

Some questions:
* why limit the number of matching transactions to 255?
* what does "each hash and key in the output script" mean exactly? what about the output script in its entirety?
* is sharing parts of the merkle branches not worth it?

> Design-wise, it occurred to me as I wrote the BIP that the method of
> delaying reception of invs is a bit ad-hoc. It may be better to have a
> bloom filter be sent in the version message itself. On the other hand,
> having a flag to delay invs means that the filter can be calculated in
> parallel to bringing up the network connections. Whilst actually
> making a Bloom filter is fast, with deterministic wallets you may need
> to do a lot of calculations to find the keys to scan for.

I'm not in favor of stuffing too much into the version message, it already seems overloaded.
A byte with some bit-flags is fine by me - higher bits can later be added for other boolean
flags.

-- 
Pieter




From pieter.wuille at gmail.com  Wed Oct 24 17:11:05 2012
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 24 Oct 2012 19:11:05 +0200
Subject: [Bitcoin-development] Draft BIP for Bloom filtering
In-Reply-To: <CANEZrP1sxtOb+czMtBTkmzngEwMYRqD667WyKQkAOKLi+mGBGQ@mail.gmail.com>
References: <CANEZrP0XALwBFJyZTzYd5xBp4MRrjv0s_y2tOXbO7UgjWF2HzA@mail.gmail.com>
	<20121024162255.GA30290@vps7135.xlshosting.net>
	<CANEZrP1sxtOb+czMtBTkmzngEwMYRqD667WyKQkAOKLi+mGBGQ@mail.gmail.com>
Message-ID: <20121024171104.GA31766@vps7135.xlshosting.net>

On Wed, Oct 24, 2012 at 06:35:08PM +0200, Mike Hearn wrote:
> > * what does "each hash and key in the output script" mean exactly? what
> about the output script in its entirety?
> 
> It's an informal way to say data elements. If you insert a key then it
> matches both single and multi sig outputs regardless of location.

So all data push operations? Including or excluding 1-byte constants?

What about the entire output script? (if I want to match just one particular multisig output script)

> 
> > * is sharing parts of the merkle branches not worth it?
> 
> We think probably not.

I'm not sure. As soon as you have 129 transactions in a block (including coinbase), you need 8 path
entries for each included transaction, which requires more bytes than the transaction itself.

When you're including M out of N transactions of a block, you never need more than N-M path entries
in total to reconstruct the merkle root. With the proposed format, it requires M*ceil(log2(N)).

For a 1000-transaction block, when matching ~everything, you need >300 KiB of overhead, while almost
nothing is required.

-- 
Pieter



From gavinandresen at gmail.com  Wed Oct 24 18:54:15 2012
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Wed, 24 Oct 2012 14:54:15 -0400
Subject: [Bitcoin-development] Draft BIP for Bloom filtering
In-Reply-To: <20121024171104.GA31766@vps7135.xlshosting.net>
References: <CANEZrP0XALwBFJyZTzYd5xBp4MRrjv0s_y2tOXbO7UgjWF2HzA@mail.gmail.com>
	<20121024162255.GA30290@vps7135.xlshosting.net>
	<CANEZrP1sxtOb+czMtBTkmzngEwMYRqD667WyKQkAOKLi+mGBGQ@mail.gmail.com>
	<20121024171104.GA31766@vps7135.xlshosting.net>
Message-ID: <CABsx9T0JyFJKLWK09NEzDk6B9Z2Yz7T55kf8GJ2o3ViCnBpRAw@mail.gmail.com>

RE: sharing parts of the merkle branches when returning a 'merkleblock' :

I think I agree that complicating the BIP for what should be a very
rare case (more than a handful of transactions in a block match the
transactions in your wallet) is the right decision.

I want to make sure I'm understanding this bit correctly:

"In addition, because a merkleblock message contains only a list of
transaction hashes, any transactions that the requesting node hasn't
either received or announced with an inv will be automatically sent as
well. This avoids a slow roundtrip that would otherwise be required
(receive hashes, didn't see some of these transactions yet, ask for
them)."

Requiring serving/relaying nodes to keep track of which transactions
they have or have not sent to their peers makes me nervous. I think
requiring an extra 'inv' round-trip would be simpler to implement and
less likely to lead to some kind of DoS attack.

-- 
--
Gavin Andresen



From bitcoin-list at bluematt.me  Wed Oct 24 19:00:33 2012
From: bitcoin-list at bluematt.me (Matt Corallo)
Date: Wed, 24 Oct 2012 15:00:33 -0400
Subject: [Bitcoin-development] Draft BIP for Bloom filtering
In-Reply-To: <CABsx9T0JyFJKLWK09NEzDk6B9Z2Yz7T55kf8GJ2o3ViCnBpRAw@mail.gmail.com>
References: <CANEZrP0XALwBFJyZTzYd5xBp4MRrjv0s_y2tOXbO7UgjWF2HzA@mail.gmail.com>
	<20121024162255.GA30290@vps7135.xlshosting.net>
	<CANEZrP1sxtOb+czMtBTkmzngEwMYRqD667WyKQkAOKLi+mGBGQ@mail.gmail.com>
	<20121024171104.GA31766@vps7135.xlshosting.net>
	<CABsx9T0JyFJKLWK09NEzDk6B9Z2Yz7T55kf8GJ2o3ViCnBpRAw@mail.gmail.com>
Message-ID: <1351105233.4731.3.camel@localhost.localdomain>

On Wed, 2012-10-24 at 14:54 -0400, Gavin Andresen wrote:
> RE: sharing parts of the merkle branches when returning a 'merkleblock' :
> 
> I think I agree that complicating the BIP for what should be a very
> rare case (more than a handful of transactions in a block match the
> transactions in your wallet) is the right decision.
I believe you meant NOT complicating?
> 
> I want to make sure I'm understanding this bit correctly:
> 
> "In addition, because a merkleblock message contains only a list of
> transaction hashes, any transactions that the requesting node hasn't
> either received or announced with an inv will be automatically sent as
> well. This avoids a slow roundtrip that would otherwise be required
> (receive hashes, didn't see some of these transactions yet, ask for
> them)."
> 
> Requiring serving/relaying nodes to keep track of which transactions
> they have or have not sent to their peers makes me nervous. I think
> requiring an extra 'inv' round-trip would be simpler to implement and
> less likely to lead to some kind of DoS attack.
> 
Sadly that requires (potentially) more DoS potential because you require
nodes to store each transaction that could be requested instead of just
going ahead and forwarding them.  I agree the BIP should not specify
that the sending node is required to keep track of which transactions
have been announced/sent to clients, however since the reference client
does so currently, that implementation is significantly simpler (note
that it is a bounded set in the reference client, so even the reference
client doesn't really fully comply with the BIP as stated here).  

Matt




From mike at plan99.net  Wed Oct 24 19:10:49 2012
From: mike at plan99.net (Mike Hearn)
Date: Wed, 24 Oct 2012 21:10:49 +0200
Subject: [Bitcoin-development] Draft BIP for Bloom filtering
In-Reply-To: <CABsx9T0JyFJKLWK09NEzDk6B9Z2Yz7T55kf8GJ2o3ViCnBpRAw@mail.gmail.com>
References: <CANEZrP0XALwBFJyZTzYd5xBp4MRrjv0s_y2tOXbO7UgjWF2HzA@mail.gmail.com>
	<20121024162255.GA30290@vps7135.xlshosting.net>
	<CANEZrP1sxtOb+czMtBTkmzngEwMYRqD667WyKQkAOKLi+mGBGQ@mail.gmail.com>
	<20121024171104.GA31766@vps7135.xlshosting.net>
	<CABsx9T0JyFJKLWK09NEzDk6B9Z2Yz7T55kf8GJ2o3ViCnBpRAw@mail.gmail.com>
Message-ID: <CANEZrP1AFL6ZbV7Njr1s8ggsZkQA1dv_3LYT3z+y83UKqn7Kgg@mail.gmail.com>

Bitcoin already keeps track of which nodes have seen what to avoid
redundant inv announcements.

I think if you are approaching most transactions in a block matching the
filter then you would just request full blocks and do all the filtering
client side
On Oct 24, 2012 8:54 PM, "Gavin Andresen" <gavinandresen at gmail.com> wrote:

> RE: sharing parts of the merkle branches when returning a 'merkleblock' :
>
> I think I agree that complicating the BIP for what should be a very
> rare case (more than a handful of transactions in a block match the
> transactions in your wallet) is the right decision.
>
> I want to make sure I'm understanding this bit correctly:
>
> "In addition, because a merkleblock message contains only a list of
> transaction hashes, any transactions that the requesting node hasn't
> either received or announced with an inv will be automatically sent as
> well. This avoids a slow roundtrip that would otherwise be required
> (receive hashes, didn't see some of these transactions yet, ask for
> them)."
>
> Requiring serving/relaying nodes to keep track of which transactions
> they have or have not sent to their peers makes me nervous. I think
> requiring an extra 'inv' round-trip would be simpler to implement and
> less likely to lead to some kind of DoS attack.
>
> --
> --
> Gavin Andresen
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121024/02e6eddc/attachment.html>

From gavinandresen at gmail.com  Wed Oct 24 20:29:07 2012
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Wed, 24 Oct 2012 16:29:07 -0400
Subject: [Bitcoin-development] Draft BIP for Bloom filtering
In-Reply-To: <CANEZrP1AFL6ZbV7Njr1s8ggsZkQA1dv_3LYT3z+y83UKqn7Kgg@mail.gmail.com>
References: <CANEZrP0XALwBFJyZTzYd5xBp4MRrjv0s_y2tOXbO7UgjWF2HzA@mail.gmail.com>
	<20121024162255.GA30290@vps7135.xlshosting.net>
	<CANEZrP1sxtOb+czMtBTkmzngEwMYRqD667WyKQkAOKLi+mGBGQ@mail.gmail.com>
	<20121024171104.GA31766@vps7135.xlshosting.net>
	<CABsx9T0JyFJKLWK09NEzDk6B9Z2Yz7T55kf8GJ2o3ViCnBpRAw@mail.gmail.com>
	<CANEZrP1AFL6ZbV7Njr1s8ggsZkQA1dv_3LYT3z+y83UKqn7Kgg@mail.gmail.com>
Message-ID: <CABsx9T2Oc+LeJjczG_U9u06gkQRmSP0J8Q_hEJv0oGQLnKFuJw@mail.gmail.com>

On Wed, Oct 24, 2012 at 3:10 PM, Mike Hearn <mike at plan99.net> wrote:
> Bitcoin already keeps track of which nodes have seen what to avoid redundant
> inv announcements.

Oops, right. That memory usage is bounded right now by bounds on the
memory pool size, though, right? (I'm being lazy and not digging into
that code)

What is the worst-case for an attacker interested in trying to get you
to saturate your upstream bandwidth or use lots of memory?  Set a
bloom filter that matches everything, and then start requesting old
blocks in the chain? It would be nice if the worst-case was no worse
than the worst-case we've got now (... requesting full, old
blocks...).

-- 
--
Gavin Andresen



From mike at plan99.net  Wed Oct 24 20:58:30 2012
From: mike at plan99.net (Mike Hearn)
Date: Wed, 24 Oct 2012 22:58:30 +0200
Subject: [Bitcoin-development] Draft BIP for Bloom filtering
In-Reply-To: <CABsx9T2Oc+LeJjczG_U9u06gkQRmSP0J8Q_hEJv0oGQLnKFuJw@mail.gmail.com>
References: <CANEZrP0XALwBFJyZTzYd5xBp4MRrjv0s_y2tOXbO7UgjWF2HzA@mail.gmail.com>
	<20121024162255.GA30290@vps7135.xlshosting.net>
	<CANEZrP1sxtOb+czMtBTkmzngEwMYRqD667WyKQkAOKLi+mGBGQ@mail.gmail.com>
	<20121024171104.GA31766@vps7135.xlshosting.net>
	<CABsx9T0JyFJKLWK09NEzDk6B9Z2Yz7T55kf8GJ2o3ViCnBpRAw@mail.gmail.com>
	<CANEZrP1AFL6ZbV7Njr1s8ggsZkQA1dv_3LYT3z+y83UKqn7Kgg@mail.gmail.com>
	<CABsx9T2Oc+LeJjczG_U9u06gkQRmSP0J8Q_hEJv0oGQLnKFuJw@mail.gmail.com>
Message-ID: <CANEZrP0KN6+Jh4Lc1Cs15a1zk6eKeXRZ7aEoeUDE148arvZw1Q@mail.gmail.com>

> What is the worst-case for an attacker interested in trying to get you
> to saturate your upstream bandwidth or use lots of memory?  Set a
> bloom filter that matches everything, and then start requesting old
> blocks in the chain?

It would be slightly worse than shipping a full block but not seriously so.

If you just want to saturate bandwidth or disk IOPS you could probably
just request random blocks over and over again.



From jgarzik at exmulti.com  Wed Oct 24 21:55:34 2012
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Wed, 24 Oct 2012 17:55:34 -0400
Subject: [Bitcoin-development] Draft BIP for Bloom filtering
In-Reply-To: <CABsx9T2Oc+LeJjczG_U9u06gkQRmSP0J8Q_hEJv0oGQLnKFuJw@mail.gmail.com>
References: <CANEZrP0XALwBFJyZTzYd5xBp4MRrjv0s_y2tOXbO7UgjWF2HzA@mail.gmail.com>
	<20121024162255.GA30290@vps7135.xlshosting.net>
	<CANEZrP1sxtOb+czMtBTkmzngEwMYRqD667WyKQkAOKLi+mGBGQ@mail.gmail.com>
	<20121024171104.GA31766@vps7135.xlshosting.net>
	<CABsx9T0JyFJKLWK09NEzDk6B9Z2Yz7T55kf8GJ2o3ViCnBpRAw@mail.gmail.com>
	<CANEZrP1AFL6ZbV7Njr1s8ggsZkQA1dv_3LYT3z+y83UKqn7Kgg@mail.gmail.com>
	<CABsx9T2Oc+LeJjczG_U9u06gkQRmSP0J8Q_hEJv0oGQLnKFuJw@mail.gmail.com>
Message-ID: <CA+8xBpfNCbAEtotORbY-iR+KRCE4oN_PT0ZmTekhiYi3Uh2+Ag@mail.gmail.com>

On Wed, Oct 24, 2012 at 4:29 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:
> Oops, right. That memory usage is bounded right now by bounds on the
> memory pool size, though, right? (I'm being lazy and not digging into
> that code)

Correct me if I'm wrong but...  I do not think there is any bound on
mempool size.

My proposal to age-out long-unconfirmed transactions is related, but
does not completely solve the unbounded-size issue.

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From gmaxwell at gmail.com  Thu Oct 25 16:56:39 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Thu, 25 Oct 2012 12:56:39 -0400
Subject: [Bitcoin-development] Draft BIP for Bloom filtering
In-Reply-To: <CANEZrP0XALwBFJyZTzYd5xBp4MRrjv0s_y2tOXbO7UgjWF2HzA@mail.gmail.com>
References: <CANEZrP0XALwBFJyZTzYd5xBp4MRrjv0s_y2tOXbO7UgjWF2HzA@mail.gmail.com>
Message-ID: <CAAS2fgScydOWz_eqnhWxQNVUOtzvSBwkj7tttP3_DLdW+=3CTQ@mail.gmail.com>

On Wed, Oct 24, 2012 at 11:56 AM, Mike Hearn <mike at plan99.net> wrote:
> I've written a draft BIP describing the bloom filtering protocol
> extension developed by myself and Matt.
>
> https://en.bitcoin.it/wiki/BIP_0037

Thanks for taking the time to write this up.

I still don't understand what purpose the apparently gratuitous
inefficiency of constantly resending common tree fragments. There are
many points of complexity in this protocol? handling premature
disconnections without missing blocks, the actual implementation of
the hash functions for the filter, validation of the hash tree, etc.
Presumably these components will just get implemented a few times in
some carefully constructed library code, so I don't see an
implementation complexity argument here? except the fact that it isn't
what Matt has implemented so far.

The current design can cause massive overhead compared to pulling an
unfiltered block should a filter be somewhat overboard and also makes
this filtering useless for applications which would select a small but
not tiny subset of the transactions (e.g. 10%).

Also, it's not mentioned in the page? but the hash function used is
not cryptographically strong,  so what prevents a complexity (well,
bandwidth in this case) attack?  someone could start using txids and
txouts that collide with the maximum number of other existing txouts
in order to waste bandwidth for people.  Is this avenue of attack not
a concern?



From gmaxwell at gmail.com  Thu Oct 25 17:01:28 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Thu, 25 Oct 2012 13:01:28 -0400
Subject: [Bitcoin-development] Draft BIP for Bloom filtering
In-Reply-To: <CAAS2fgScydOWz_eqnhWxQNVUOtzvSBwkj7tttP3_DLdW+=3CTQ@mail.gmail.com>
References: <CANEZrP0XALwBFJyZTzYd5xBp4MRrjv0s_y2tOXbO7UgjWF2HzA@mail.gmail.com>
	<CAAS2fgScydOWz_eqnhWxQNVUOtzvSBwkj7tttP3_DLdW+=3CTQ@mail.gmail.com>
Message-ID: <CAAS2fgR65RN7UoWdx5khvCynMBZ_+rK6DejEOUYaFysYrYF31w@mail.gmail.com>

On Thu, Oct 25, 2012 at 12:56 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> I still don't understand what purpose the apparently gratuitous
> inefficiency of constantly resending common tree fragments.

Sorry for the rapid additional comment, but I should also have
mentioned that the in efficiency is at odds with the privacy argument
for the particular mechanism... if the filter is not set at least
somewhat too broadly then it will uniquely identify the user. The
inefficiency, however, argues for setting the filter as narrowly as
possible because there is much more bandwidth used for a wider filter
than would be otherwise.



From mike at plan99.net  Fri Oct 26 14:01:58 2012
From: mike at plan99.net (Mike Hearn)
Date: Fri, 26 Oct 2012 16:01:58 +0200
Subject: [Bitcoin-development] Draft BIP for Bloom filtering
In-Reply-To: <CAAS2fgScydOWz_eqnhWxQNVUOtzvSBwkj7tttP3_DLdW+=3CTQ@mail.gmail.com>
References: <CANEZrP0XALwBFJyZTzYd5xBp4MRrjv0s_y2tOXbO7UgjWF2HzA@mail.gmail.com>
	<CAAS2fgScydOWz_eqnhWxQNVUOtzvSBwkj7tttP3_DLdW+=3CTQ@mail.gmail.com>
Message-ID: <CANEZrP2sBZL=UYAxtjU2Su13Z12wB7s04LxmcyUR2hH51tcN9g@mail.gmail.com>

> Presumably these components will just get implemented a few times in
> some carefully constructed library code, so I don't see an
> implementation complexity argument here? except the fact that it isn't
> what Matt has implemented so far.

Well, yes, that is basically the implementation complexity argument :)
Engineering time isn't free.

I don't feel I understand the effort required to do some kind of
partial tree encoding. Having a kind of custom compression whereby
branches are represented as varint indexes into a dictionary, I can
feel how much work that involves and maybe I can make time over the
next few weeks to implement it. Has anyone got example code for
representing partial Merkle trees?

> Also, it's not mentioned in the page? but the hash function used is
> not cryptographically strong,  so what prevents a complexity (well,
> bandwidth in this case) attack?  someone could start using txids and
> txouts that collide with the maximum number of other existing txouts
> in order to waste bandwidth for people.  Is this avenue of attack not
> a concern?

If you just want to waste bandwidth of nodes you can connect to nodes
and repeatedly download blocks, or fill the network with fake nodes
that spam random generated transactions to whoever connects. I don't
see how to avoid that  so it seems odd to worry about a much more
complicated attack.



From gmaxwell at gmail.com  Fri Oct 26 14:17:04 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Fri, 26 Oct 2012 10:17:04 -0400
Subject: [Bitcoin-development] Draft BIP for Bloom filtering
In-Reply-To: <CANEZrP2sBZL=UYAxtjU2Su13Z12wB7s04LxmcyUR2hH51tcN9g@mail.gmail.com>
References: <CANEZrP0XALwBFJyZTzYd5xBp4MRrjv0s_y2tOXbO7UgjWF2HzA@mail.gmail.com>
	<CAAS2fgScydOWz_eqnhWxQNVUOtzvSBwkj7tttP3_DLdW+=3CTQ@mail.gmail.com>
	<CANEZrP2sBZL=UYAxtjU2Su13Z12wB7s04LxmcyUR2hH51tcN9g@mail.gmail.com>
Message-ID: <CAAS2fgSPk8QgYq2zcV+G2GoQyo5AfnRj4=+sURr34KZakhqazQ@mail.gmail.com>

On Fri, Oct 26, 2012 at 10:01 AM, Mike Hearn <mike at plan99.net> wrote:
> If you just want to waste bandwidth of nodes you can connect to nodes
> and repeatedly download blocks, or fill the network with fake nodes
> that spam random generated transactions to whoever connects. I don't
> see how to avoid that  so it seems odd to worry about a much more
> complicated attack.

Because I can potentially waste bandwidth of all nodes forever (well as long
as users are still scanning blocks with my transactions in them) with O(1) work.

Though I'm not sure how much of a threat is vs just paying 1e-8 btc to lots of
addresses which would only be less bad by some constant factor as worse.
I guess I should try to attack it and see how bad the pollution I can construct
should be. (offline, of course)



From mike at plan99.net  Fri Oct 26 14:21:32 2012
From: mike at plan99.net (Mike Hearn)
Date: Fri, 26 Oct 2012 16:21:32 +0200
Subject: [Bitcoin-development] Draft BIP for Bloom filtering
In-Reply-To: <CAAS2fgSPk8QgYq2zcV+G2GoQyo5AfnRj4=+sURr34KZakhqazQ@mail.gmail.com>
References: <CANEZrP0XALwBFJyZTzYd5xBp4MRrjv0s_y2tOXbO7UgjWF2HzA@mail.gmail.com>
	<CAAS2fgScydOWz_eqnhWxQNVUOtzvSBwkj7tttP3_DLdW+=3CTQ@mail.gmail.com>
	<CANEZrP2sBZL=UYAxtjU2Su13Z12wB7s04LxmcyUR2hH51tcN9g@mail.gmail.com>
	<CAAS2fgSPk8QgYq2zcV+G2GoQyo5AfnRj4=+sURr34KZakhqazQ@mail.gmail.com>
Message-ID: <CANEZrP0=+L8HC4uVuwe5qc5CirUAUPWz18d08AebPcLpkv7Z8g@mail.gmail.com>

> Because I can potentially waste bandwidth of all nodes forever (well as long
> as users are still scanning blocks with my transactions in them) with O(1) work.

And this gets you what?

Users who have active wallets will have their bandwidth wasted for as
long as you keep up the attack. Once you stop active wallets won't be
rescanning that part of the chain and new users won't be scanning it
either, as they skip blocks before their earliest key time using
getheaders. So basically you can waste the bandwidth of active users
for a while, by spamming transactions. This is not a new attack.

Anyway, it's trivial to DoS the entire Bitcoin network today. It
hasn't ever happened. Maybe one day it will, but the only rationale
people can come up with for such an attack beyond random griefing is
governments, and complexity attacks are really not their style. Much
easier to just pass a law.

I'm not saying DoS should be ignored, but I do feel there are limits
to how far down that rabbithole it's worth going.



From gmaxwell at gmail.com  Fri Oct 26 14:34:06 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Fri, 26 Oct 2012 10:34:06 -0400
Subject: [Bitcoin-development] Draft BIP for Bloom filtering
In-Reply-To: <CANEZrP0=+L8HC4uVuwe5qc5CirUAUPWz18d08AebPcLpkv7Z8g@mail.gmail.com>
References: <CANEZrP0XALwBFJyZTzYd5xBp4MRrjv0s_y2tOXbO7UgjWF2HzA@mail.gmail.com>
	<CAAS2fgScydOWz_eqnhWxQNVUOtzvSBwkj7tttP3_DLdW+=3CTQ@mail.gmail.com>
	<CANEZrP2sBZL=UYAxtjU2Su13Z12wB7s04LxmcyUR2hH51tcN9g@mail.gmail.com>
	<CAAS2fgSPk8QgYq2zcV+G2GoQyo5AfnRj4=+sURr34KZakhqazQ@mail.gmail.com>
	<CANEZrP0=+L8HC4uVuwe5qc5CirUAUPWz18d08AebPcLpkv7Z8g@mail.gmail.com>
Message-ID: <CAAS2fgSveRa90yV=e+neB53pz-r+ThJvQhAjSf+u9K+cCJwABA@mail.gmail.com>

On Fri, Oct 26, 2012 at 10:21 AM, Mike Hearn <mike at plan99.net> wrote:
> Anyway, it's trivial to DoS the entire Bitcoin network today. It
> hasn't ever happened. Maybe one day it will, but the only rationale
> people can come up with for such an attack beyond random griefing is

Which happens and is a concern. Altcoins have been attacked on things
we fixed. For example, litecoin nodes were being run out of disk space
through addr.dat flooding.

I think we've been generally fortunate that the level of griefing is
low (though not non-existent).  But part of the reason its been low is
that it's probably harder to DOS attack bitcoin than you believe. In
the reference client a lot of work has gone in to removing attacks
with sublinear cost for the attackers.

That people aren't attacking much now is not an argument to accept a
new vulnerability much less a _normative_ vulnerability in the
protocol.

That it's no big deal even attacked would be a fine argument to me, so
I'll go try to convince myself of that.

> governments,

Please don't put that kind of black helicopter junk in my mouth. I
agree with you the point that these aren't a source of concern for me.



