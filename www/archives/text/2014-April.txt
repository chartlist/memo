From chris.dcosta at meek.io  Tue Apr  1 08:13:31 2014
From: chris.dcosta at meek.io (Chris D'Costa)
Date: Tue, 1 Apr 2014 10:13:31 +0200
Subject: [Bitcoin-development] secure assigned bitcoin address directory
In-Reply-To: <20140331185751.GD59714@giles.gnomon.org.uk>
References: <5339418F.1050800@riseup.net>
	<CAJHLa0M8ryBpaPF7aoqZdyrw4NsKizdVPkdy+DsWfPjWVyzadA@mail.gmail.com>
	<20140331185751.GD59714@giles.gnomon.org.uk>
Message-ID: <DBE4339F-0F27-4D18-91FC-4685E5AFB387@meek.io>

On 31 Mar 2014, at 20:57, Roy Badami wrote:

> Is namecoin actively maintained these days?

That's a very good quest. It was one of the reasons why we ruled out namecoin, but not the only one.

Although in principle it is a similar concept to namecoin + PGP, in practice at least for our device, that felt like a hammer to crack a nut, "How could this operate if the device was carried to one of the non-3G countries i.e. with no direct internet access? How could we syncronise the chain in a low bandwidth environment, if at all? Could at least some of the chain be pre-loaded at the factory? What would the risks be if it was?". 

These are just a few of the practical considerations that we are addressing, and our feeling is that when we can get the proposed distributed ledger to work properly at "the lowest common denominator" level, then everything above is easier. 

On one other point, I don't ever see the Bitcoin software using a second blockchain, like namecoin, in order just to provide safe communication of a non-face-to-face, person-to-person, pay-to address (far too many hyphens), but I do see some other standard emerging that provides the equivalent of BIP70 for this use case.  

In this context, when we posed these questions, "Why do we have to provide a reward for a ledger of information? Why do we have to wait for confirmation when no money is at risk? What is the worst that can happen if your device key is discovered or replaced?", it did not make sense to include all the incumbent coin stuff just to arrive at a distributed ledger for a set of ultimately disposable keys.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140401/b916cfaa/attachment.html>

From jgarzik at bitpay.com  Tue Apr  1 11:32:41 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Tue, 1 Apr 2014 07:32:41 -0400
Subject: [Bitcoin-development] secure assigned bitcoin address directory
In-Reply-To: <51C10069-5C3B-462A-9184-669ABC6CD9D0@meek.io>
References: <5339418F.1050800@riseup.net>
	<51C10069-5C3B-462A-9184-669ABC6CD9D0@meek.io>
Message-ID: <CAJHLa0MfV0RnVh1niG4vUGUUvB_Vd8HccTys4bf1ApnwuBUd1g@mail.gmail.com>

Re-reading this, even with the most recent message, is still isn't
clear _precisely_ how your technology works, or why it is better than
namecoin.  User profiles (and distributed ledgers) need to reflect the
latest updates, and a stream of updates of over time is precisely what
bitcoin technology secures.

Keys expire or are compromised, and the public ledger needs to reflect
that.  There is a lot of computer science involved in making sure the
public ledger you see is not an outdated view.  A log-like stream of
changes is not the only way to do things, but other methods need less
hand-wavy details (show the code) before they are well recognized as
useful.



On Mon, Mar 31, 2014 at 7:14 AM, Chris D'Costa <chris.dcosta at meek.io> wrote:
> Security of transmission of person-to-person pay-to addresses is one of the use cases that we are addressing on our hardware wallet.
>
> I have yet to finish the paper but in a nutshell it uses a decentralised ledger of, what we refer to as, "device keys".
>
> These keys are not related in any way to the Bitcoin keys, (which is why I'm hesitating about discussing it here) neither do they even attempt to identify the human owner if the device. But they do have a specific use case and that is to provide "advanced knowledge" of a publickey that can be used for encrypting a message to an intended recipient, without the requirement for a third-party CA, and more importantly without prior dialogue. We think it is this that would allow you to communicate a pay-to address to someone without seeing them in a secure way.
>
> As I understand it the BlockChain uses "time" bought through proof of work to establish a version of the truth, we are using time in the reverse sense : advanced knowledge of all pubkeys. Indeed all devices could easily check their own record to identify problems on the ledger.
>
> There is of course more to this, but I like to refer to the "distributed ledger of device keys" as the "Web-of-trust re-imagined" although that isn't strictly true.
>
> Ok there you have it. The cat is out of the bag, feel free to give feedback, I have to finish the paper, apologies if it is not a topic for this list.
>
> Regards
>
> Chris D'Costa
>
>
>> On 31 Mar 2014, at 12:21, vv01f <vv01f at riseup.net> wrote:
>>
>> Some users on bitcointalk[0] would like to have their vanity addresses
>> available for others easily to find and verify the ownership over a kind
>> of WoT. Right now they sign their own addresses and quote them in the
>> forums.
>> As I pointed out there already the centralized storage in the forums is
>> not secury anyhow and signed messages could be swapped easily with the
>> next hack of the forums.
>>
>> Is that use case taken care of in any plans already?
>>
>> I thought about abusing pgp keyservers but that would suit for single
>> vanity addresses only.
>> It seems webfinger could be part of a solution where servers of a
>> business can tell and proof you if a specific address is owned by them.
>>
>> [0] https://bitcointalk.org/index.php?topic=502538
>> [1] https://bitcointalk.org/index.php?topic=505095
>>
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From chris.dcosta at meek.io  Tue Apr  1 12:20:37 2014
From: chris.dcosta at meek.io (Chris D'Costa)
Date: Tue, 1 Apr 2014 14:20:37 +0200
Subject: [Bitcoin-development] secure assigned bitcoin address directory
In-Reply-To: <CAJHLa0MfV0RnVh1niG4vUGUUvB_Vd8HccTys4bf1ApnwuBUd1g@mail.gmail.com>
References: <5339418F.1050800@riseup.net>
	<51C10069-5C3B-462A-9184-669ABC6CD9D0@meek.io>
	<CAJHLa0MfV0RnVh1niG4vUGUUvB_Vd8HccTys4bf1ApnwuBUd1g@mail.gmail.com>
Message-ID: <C818247C-6422-4F55-A324-826EC5C6A455@meek.io>

The code will be available as soon as we are ready, and apologies again for it not being a more meaningful conversation - I did say I hesitated about posting it ;)

I think it is fair to say that we have not assumed anything about other technologies, without asking if they can answer all (not just some) of the questions I raised. I have yet to be convinced that anything existing meets those requirements, namecoin included, hence why we are looking at creating an alternative (non-coin by the way) but this alternative has some  of the important properties that the distributed ledger provides.

To answer the question about expiry, we're looking at something we'll call proof-of-life for the device keys. In a nutshell on of the pieces of information stored with the device public key will be a last heard from date - a date which is sent only by the device from time to time. Records that are expired are devices that have not been heard from for a given period (to be decided). As the device keys are not related to the Bitcoin keys it will be safe to expire a device key by default. An expired device would require reinitialisation, which would make a new device key set, a new proof of life date and then the Bitcoin keys (BIP32) can be restored. 



Regards

Chris D'Costa

Sent from my iPhone

> On 1 Apr 2014, at 13:32, Jeff Garzik <jgarzik at bitpay.com> wrote:
> 
> Re-reading this, even with the most recent message, is still isn't
> clear _precisely_ how your technology works, or why it is better than
> namecoin.  User profiles (and distributed ledgers) need to reflect the
> latest updates, and a stream of updates of over time is precisely what
> bitcoin technology secures.
> 
> Keys expire or are compromised, and the public ledger needs to reflect
> that.  There is a lot of computer science involved in making sure the
> public ledger you see is not an outdated view.  A log-like stream of
> changes is not the only way to do things, but other methods need less
> hand-wavy details (show the code) before they are well recognized as
> useful.
> 
> 
> 
>> On Mon, Mar 31, 2014 at 7:14 AM, Chris D'Costa <chris.dcosta at meek.io> wrote:
>> Security of transmission of person-to-person pay-to addresses is one of the use cases that we are addressing on our hardware wallet.
>> 
>> I have yet to finish the paper but in a nutshell it uses a decentralised ledger of, what we refer to as, "device keys".
>> 
>> These keys are not related in any way to the Bitcoin keys, (which is why I'm hesitating about discussing it here) neither do they even attempt to identify the human owner if the device. But they do have a specific use case and that is to provide "advanced knowledge" of a publickey that can be used for encrypting a message to an intended recipient, without the requirement for a third-party CA, and more importantly without prior dialogue. We think it is this that would allow you to communicate a pay-to address to someone without seeing them in a secure way.
>> 
>> As I understand it the BlockChain uses "time" bought through proof of work to establish a version of the truth, we are using time in the reverse sense : advanced knowledge of all pubkeys. Indeed all devices could easily check their own record to identify problems on the ledger.
>> 
>> There is of course more to this, but I like to refer to the "distributed ledger of device keys" as the "Web-of-trust re-imagined" although that isn't strictly true.
>> 
>> Ok there you have it. The cat is out of the bag, feel free to give feedback, I have to finish the paper, apologies if it is not a topic for this list.
>> 
>> Regards
>> 
>> Chris D'Costa
>> 
>> 
>>> On 31 Mar 2014, at 12:21, vv01f <vv01f at riseup.net> wrote:
>>> 
>>> Some users on bitcointalk[0] would like to have their vanity addresses
>>> available for others easily to find and verify the ownership over a kind
>>> of WoT. Right now they sign their own addresses and quote them in the
>>> forums.
>>> As I pointed out there already the centralized storage in the forums is
>>> not secury anyhow and signed messages could be swapped easily with the
>>> next hack of the forums.
>>> 
>>> Is that use case taken care of in any plans already?
>>> 
>>> I thought about abusing pgp keyservers but that would suit for single
>>> vanity addresses only.
>>> It seems webfinger could be part of a solution where servers of a
>>> business can tell and proof you if a specific address is owned by them.
>>> 
>>> [0] https://bitcointalk.org/index.php?topic=502538
>>> [1] https://bitcointalk.org/index.php?topic=505095
>>> 
>>> ------------------------------------------------------------------------------
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> 
> 
> -- 
> Jeff Garzik
> Bitcoin core developer and open source evangelist
> BitPay, Inc.      https://bitpay.com/



From dbanttari at gmail.com  Tue Apr  1 18:16:26 2014
From: dbanttari at gmail.com (Daryl Banttari)
Date: Tue, 1 Apr 2014 13:16:26 -0500
Subject: [Bitcoin-development] secure assigned bitcoin address directory
In-Reply-To: <C818247C-6422-4F55-A324-826EC5C6A455@meek.io>
References: <5339418F.1050800@riseup.net>
	<51C10069-5C3B-462A-9184-669ABC6CD9D0@meek.io>
	<CAJHLa0MfV0RnVh1niG4vUGUUvB_Vd8HccTys4bf1ApnwuBUd1g@mail.gmail.com>
	<C818247C-6422-4F55-A324-826EC5C6A455@meek.io>
Message-ID: <CAHbi5CzOTejUQcaF4Ja45=609A811OvSonE0vXpTuPKSh+5hVA@mail.gmail.com>

I posted some code on Reddit a while back around adding a simple x509
digital signature to a Bitcoin address URL, since you could gain the
benefit of an x.509 authenticated Bitcoin address without having to do a
full BIP70 implementation.  It's not WoT, but x509, for all its flaws,
works very well in the real world almost all of the time.

For added authentication, one could always wrap the URL with a PGP
signature.

After lurking on this list for a while, I assumed there's some reason this
hasn't already been implemented, likely based in the general disgust around
x509.

Anyway, here's my idea (complete with working Java source):

http://www.reddit.com/r/BitcoinSerious/comments/1sebj0/proposal_bitcoin_invoice_signatures/

FWIW.

--Daryl



On Tue, Apr 1, 2014 at 7:20 AM, Chris D'Costa <chris.dcosta at meek.io> wrote:

> The code will be available as soon as we are ready, and apologies again
> for it not being a more meaningful conversation - I did say I hesitated
> about posting it ;)
>
> I think it is fair to say that we have not assumed anything about other
> technologies, without asking if they can answer all (not just some) of the
> questions I raised. I have yet to be convinced that anything existing meets
> those requirements, namecoin included, hence why we are looking at creating
> an alternative (non-coin by the way) but this alternative has some  of the
> important properties that the distributed ledger provides.
>
> To answer the question about expiry, we're looking at something we'll call
> proof-of-life for the device keys. In a nutshell on of the pieces of
> information stored with the device public key will be a last heard from
> date - a date which is sent only by the device from time to time. Records
> that are expired are devices that have not been heard from for a given
> period (to be decided). As the device keys are not related to the Bitcoin
> keys it will be safe to expire a device key by default. An expired device
> would require reinitialisation, which would make a new device key set, a
> new proof of life date and then the Bitcoin keys (BIP32) can be restored.
>
>
>
> Regards
>
> Chris D'Costa
>
> Sent from my iPhone
>
> > On 1 Apr 2014, at 13:32, Jeff Garzik <jgarzik at bitpay.com> wrote:
> >
> > Re-reading this, even with the most recent message, is still isn't
> > clear _precisely_ how your technology works, or why it is better than
> > namecoin.  User profiles (and distributed ledgers) need to reflect the
> > latest updates, and a stream of updates of over time is precisely what
> > bitcoin technology secures.
> >
> > Keys expire or are compromised, and the public ledger needs to reflect
> > that.  There is a lot of computer science involved in making sure the
> > public ledger you see is not an outdated view.  A log-like stream of
> > changes is not the only way to do things, but other methods need less
> > hand-wavy details (show the code) before they are well recognized as
> > useful.
> >
> >
> >
> >> On Mon, Mar 31, 2014 at 7:14 AM, Chris D'Costa <chris.dcosta at meek.io>
> wrote:
> >> Security of transmission of person-to-person pay-to addresses is one of
> the use cases that we are addressing on our hardware wallet.
> >>
> >> I have yet to finish the paper but in a nutshell it uses a
> decentralised ledger of, what we refer to as, "device keys".
> >>
> >> These keys are not related in any way to the Bitcoin keys, (which is
> why I'm hesitating about discussing it here) neither do they even attempt
> to identify the human owner if the device. But they do have a specific use
> case and that is to provide "advanced knowledge" of a publickey that can be
> used for encrypting a message to an intended recipient, without the
> requirement for a third-party CA, and more importantly without prior
> dialogue. We think it is this that would allow you to communicate a pay-to
> address to someone without seeing them in a secure way.
> >>
> >> As I understand it the BlockChain uses "time" bought through proof of
> work to establish a version of the truth, we are using time in the reverse
> sense : advanced knowledge of all pubkeys. Indeed all devices could easily
> check their own record to identify problems on the ledger.
> >>
> >> There is of course more to this, but I like to refer to the
> "distributed ledger of device keys" as the "Web-of-trust re-imagined"
> although that isn't strictly true.
> >>
> >> Ok there you have it. The cat is out of the bag, feel free to give
> feedback, I have to finish the paper, apologies if it is not a topic for
> this list.
> >>
> >> Regards
> >>
> >> Chris D'Costa
> >>
> >>
> >>> On 31 Mar 2014, at 12:21, vv01f <vv01f at riseup.net> wrote:
> >>>
> >>> Some users on bitcointalk[0] would like to have their vanity addresses
> >>> available for others easily to find and verify the ownership over a
> kind
> >>> of WoT. Right now they sign their own addresses and quote them in the
> >>> forums.
> >>> As I pointed out there already the centralized storage in the forums is
> >>> not secury anyhow and signed messages could be swapped easily with the
> >>> next hack of the forums.
> >>>
> >>> Is that use case taken care of in any plans already?
> >>>
> >>> I thought about abusing pgp keyservers but that would suit for single
> >>> vanity addresses only.
> >>> It seems webfinger could be part of a solution where servers of a
> >>> business can tell and proof you if a specific address is owned by them.
> >>>
> >>> [0] https://bitcointalk.org/index.php?topic=502538
> >>> [1] https://bitcointalk.org/index.php?topic=505095
> >>>
> >>>
> ------------------------------------------------------------------------------
> >>> _______________________________________________
> >>> Bitcoin-development mailing list
> >>> Bitcoin-development at lists.sourceforge.net
> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >>
> >>
> ------------------------------------------------------------------------------
> >> _______________________________________________
> >> Bitcoin-development mailing list
> >> Bitcoin-development at lists.sourceforge.net
> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
> >
> >
> > --
> > Jeff Garzik
> > Bitcoin core developer and open source evangelist
> > BitPay, Inc.      https://bitpay.com/
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140401/8c70b333/attachment.html>

From pieter.wuille at gmail.com  Tue Apr  1 19:00:07 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Tue, 1 Apr 2014 21:00:07 +0200
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
Message-ID: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>

Hi all,

I understand this is a controversial proposal, but bear with me please.

I believe we cannot accept the current subsidy schedule anymore, so I
wrote a small draft BIP with a proposal to turn Bitcoin into a
limited-supply currency. Dogecoin has already shown how easy such
changes are, so I consider this a worthwhile idea to be explored.

The text can be found here: https://gist.github.com/sipa/9920696

Please comment!

Thanks,

-- 
Pieter



From bip at mattwhitlock.name  Tue Apr  1 19:04:31 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Tue, 01 Apr 2014 15:04:31 -0400
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
Message-ID: <1784069.HYVIiriube@crushinator>

The creation date in your BIP header has the wrong format. It should be 01-04-2014, per BIP 1.

:-)


On Tuesday, 1 April 2014, at 9:00 pm, Pieter Wuille wrote:
> Hi all,
> 
> I understand this is a controversial proposal, but bear with me please.
> 
> I believe we cannot accept the current subsidy schedule anymore, so I
> wrote a small draft BIP with a proposal to turn Bitcoin into a
> limited-supply currency. Dogecoin has already shown how easy such
> changes are, so I consider this a worthwhile idea to be explored.
> 
> The text can be found here: https://gist.github.com/sipa/9920696
> 
> Please comment!
> 
> Thanks,
> 
> -- 
> Pieter
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From gmaxwell at gmail.com  Tue Apr  1 19:07:05 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 1 Apr 2014 12:07:05 -0700
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
Message-ID: <CAAS2fgT_n-WAHLDRn8TqKB=gsj4bZeRgRAtZiUcKmPFew4MwBg@mail.gmail.com>

On Tue, Apr 1, 2014 at 12:00 PM, Pieter Wuille <pieter.wuille at gmail.com> wrote:
> Hi all,
> I understand this is a controversial proposal, but bear with me please.
> I believe we cannot accept the current subsidy schedule anymore, so I
> wrote a small draft BIP with a proposal to turn Bitcoin into a
> limited-supply currency. Dogecoin has already shown how easy such
> changes are, so I consider this a worthwhile idea to be explored.
>
> The text can be found here: https://gist.github.com/sipa/9920696

A minor nitpick:  It is well known that the Bitcoin core developers
are some of the most active TypeScript coders around,
E.g. http://osrc.dfm.io/sipa  and http://osrc.dfm.io/gavinandresen

But I think this is an important step forward: Seminal alternative
crypto-currencies such as SolidCoin showed us that economic parameters
can be freely changed at any time, for any (or no) reason at all; and
so we should take this opportunity to demonstrate our commitment to
adopting innovative features like non-inflation regardless of their
origins in other crypto-currencies.



From tamas at bitsofproof.com  Tue Apr  1 19:09:22 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Tue, 1 Apr 2014 21:09:22 +0200
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
Message-ID: <845886AE-CCF2-4D0D-A0B1-23ADBDDD5B06@bitsofproof.com>

While at that let's allow coin bases to be merged from orphan blocks,
so miner are fairly rewarded even if unlucky.

On 01.04.2014, at 21:00, Pieter Wuille <pieter.wuille at gmail.com> wrote:

> Hi all,
> 
> I understand this is a controversial proposal, but bear with me please.
> 
> I believe we cannot accept the current subsidy schedule anymore, so I
> wrote a small draft BIP with a proposal to turn Bitcoin into a
> limited-supply currency. Dogecoin has already shown how easy such
> changes are, so I consider this a worthwhile idea to be explored.
> 
> The text can be found here: https://gist.github.com/sipa/9920696
> 
> Please comment!
> 
> Thanks,
> 
> -- 
> Pieter
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140401/c1635d40/attachment.sig>

From mike at plan99.net  Tue Apr  1 19:09:44 2014
From: mike at plan99.net (Mike Hearn)
Date: Tue, 1 Apr 2014 21:09:44 +0200
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
Message-ID: <CANEZrP0uV2i7v+TBRH1S6bPaTSDsUem4n2YVLiSTT-T-F1sTsg@mail.gmail.com>

This proposal will destroy Bitcoin. I would expect nothing less coming from
a Google employee.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140401/8e76d1b0/attachment.html>

From luke at dashjr.org  Tue Apr  1 19:12:22 2014
From: luke at dashjr.org (Luke-Jr)
Date: Tue, 1 Apr 2014 19:12:22 +0000
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
Message-ID: <201404011912.22996.luke@dashjr.org>

On Tuesday, April 01, 2014 7:00:07 PM Pieter Wuille wrote:
> Hi all,
> 
> I understand this is a controversial proposal, but bear with me please.
> 
> I believe we cannot accept the current subsidy schedule anymore, so I
> wrote a small draft BIP with a proposal to turn Bitcoin into a
> limited-supply currency. Dogecoin has already shown how easy such
> changes are, so I consider this a worthwhile idea to be explored.
> 
> The text can be found here: https://gist.github.com/sipa/9920696
> 
> Please comment!

I cleaned it up a bit. By 2214, we should be using tonal numbers after all:

https://gist.github.com/luke-jr/9920788



From benjamin.l.cordes at gmail.com  Tue Apr  1 19:16:42 2014
From: benjamin.l.cordes at gmail.com (Benjamin Cordes)
Date: Tue, 1 Apr 2014 21:16:42 +0200
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <201404011912.22996.luke@dashjr.org>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
	<201404011912.22996.luke@dashjr.org>
Message-ID: <CAOoPuRYem0HEAmz4spzUHzEBTQ3TV9KurLd_TeY2SfknePjLWw@mail.gmail.com>

luke, you might enjoy the book Topos of Music. It's a complete
mathematical music theory by a student of Grothendieck. He advanced
Euler's theories of harmony based on advanced category theory. I'm
sure there are many applications to Bitcoin.

On Tue, Apr 1, 2014 at 9:12 PM, Luke-Jr <luke at dashjr.org> wrote:
> On Tuesday, April 01, 2014 7:00:07 PM Pieter Wuille wrote:
>> Hi all,
>>
>> I understand this is a controversial proposal, but bear with me please.
>>
>> I believe we cannot accept the current subsidy schedule anymore, so I
>> wrote a small draft BIP with a proposal to turn Bitcoin into a
>> limited-supply currency. Dogecoin has already shown how easy such
>> changes are, so I consider this a worthwhile idea to be explored.
>>
>> The text can be found here: https://gist.github.com/sipa/9920696
>>
>> Please comment!
>
> I cleaned it up a bit. By 2214, we should be using tonal numbers after all:
>
> https://gist.github.com/luke-jr/9920788
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From luke at dashjr.org  Tue Apr  1 19:19:01 2014
From: luke at dashjr.org (Luke-Jr)
Date: Tue, 1 Apr 2014 19:19:01 +0000
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <CAOoPuRYem0HEAmz4spzUHzEBTQ3TV9KurLd_TeY2SfknePjLWw@mail.gmail.com>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
	<201404011912.22996.luke@dashjr.org>
	<CAOoPuRYem0HEAmz4spzUHzEBTQ3TV9KurLd_TeY2SfknePjLWw@mail.gmail.com>
Message-ID: <201404011919.01918.luke@dashjr.org>

Please, *music* is obsolete, but inline replies *are not*!

On Tuesday, April 01, 2014 7:16:42 PM Benjamin Cordes wrote:
> luke, you might enjoy the book Topos of Music. It's a complete
> mathematical music theory by a student of Grothendieck. He advanced
> Euler's theories of harmony based on advanced category theory. I'm
> sure there are many applications to Bitcoin.
> 
> On Tue, Apr 1, 2014 at 9:12 PM, Luke-Jr <luke at dashjr.org> wrote:
> > On Tuesday, April 01, 2014 7:00:07 PM Pieter Wuille wrote:
> >> Hi all,
> >> 
> >> I understand this is a controversial proposal, but bear with me please.
> >> 
> >> I believe we cannot accept the current subsidy schedule anymore, so I
> >> wrote a small draft BIP with a proposal to turn Bitcoin into a
> >> limited-supply currency. Dogecoin has already shown how easy such
> >> changes are, so I consider this a worthwhile idea to be explored.
> >> 
> >> The text can be found here: https://gist.github.com/sipa/9920696
> >> 
> >> Please comment!
> > 
> > I cleaned it up a bit. By 2214, we should be using tonal numbers after
> > all:
> > 
> > https://gist.github.com/luke-jr/9920788
> > 
> > -------------------------------------------------------------------------
> > ----- _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From bitcoin-list at bluematt.me  Tue Apr  1 19:11:01 2014
From: bitcoin-list at bluematt.me (Matt Corallo)
Date: Tue, 01 Apr 2014 15:11:01 -0400
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
Message-ID: <646363bb-9e42-4faf-a77f-3d57e7553376@email.android.com>

I disagree with this proposal both in spirit and in practice.

We all know satoshi was the best programmer like no one ever was. Clearly he intended this monetary supply from the beginning, who are we but mere mortals to go against satoshi's will?

Also, should we really do this with a soft fork when we can take this opportunity to redesign the whole system with a hard fork? This is out chance to switch to a whole new script engine!

Matt

On April 1, 2014 3:00:07 PM EDT, Pieter Wuille <pieter.wuille at gmail.com> wrote:
>Hi all,
>
>I understand this is a controversial proposal, but bear with me please.
>
>I believe we cannot accept the current subsidy schedule anymore, so I
>wrote a small draft BIP with a proposal to turn Bitcoin into a
>limited-supply currency. Dogecoin has already shown how easy such
>changes are, so I consider this a worthwhile idea to be explored.
>
>The text can be found here: https://gist.github.com/sipa/9920696
>
>Please comment!
>
>Thanks,
>
>-- 
>Pieter
>
>------------------------------------------------------------------------------
>_______________________________________________
>Bitcoin-development mailing list
>Bitcoin-development at lists.sourceforge.net
>https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140401/9a63d81b/attachment.html>

From pete at petertodd.org  Tue Apr  1 20:00:39 2014
From: pete at petertodd.org (Peter Todd)
Date: Tue, 1 Apr 2014 22:00:39 +0200
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
Message-ID: <20140401200039.GA10403@tilt>

On Tue, Apr 01, 2014 at 09:00:07PM +0200, Pieter Wuille wrote:
> Hi all,
> 
> I understand this is a controversial proposal, but bear with me please.
> 
> I believe we cannot accept the current subsidy schedule anymore, so I
> wrote a small draft BIP with a proposal to turn Bitcoin into a
> limited-supply currency. Dogecoin has already shown how easy such
> changes are, so I consider this a worthwhile idea to be explored.
> 
> The text can be found here: https://gist.github.com/sipa/9920696

What's interesting about this bug is we could also fix the problem - the
economic shock - by first implementing the OP_CHECKLOCKTIMEVERIFY opcode
in a soft-fork, followed by a second soft-fork requiring miners to
"pay-forward" a percentage of their coinbase outputs to the future.
(remember that whomever mines a block controls what
recently-made-available anyone-can-spend txouts are included in their
block) We could then pick the distribution rate fairly arbitrarily; I
propose the following linear distribution:

Each gold mine produces 21,000,000 coins over 210,000*64 blocks, or
1.5625 BTC/block evenly distributed. Measured as an absolute against the
monetary the inflation rate will converge towards zero; measured against
the actual economic monetary supply the value will converge towards some
low value of inflation. In the short run we get an immediate reduction
in inflation, which can help our currently sluggish price. Either
outcome should be acceptable to any reasonable goldbug - fortunately our
community is almost entirely made up of such calm and reasonable people.
Meanwhile maintaining a miner reward has significant advantages in terms
of the long-term sustainability of the system - everyone needs PoW
security regardless of whether or not you do transactions, thus we
should all pay into it.

As for your example of Python, I'm sure they'll accept a pull-req
changing the behavior in the language.

-- 
'peter'[:-1]@petertodd.org
0000000000000000f4f5ba334791a4102917e4d3f22f6ad7f2c4f15d97307fe2
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 665 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140401/62ef3258/attachment.sig>

From kevinsisco61784 at gmail.com  Tue Apr  1 20:00:52 2014
From: kevinsisco61784 at gmail.com (Kevin)
Date: Tue, 01 Apr 2014 16:00:52 -0400
Subject: [Bitcoin-development] Okay, time to bring up bitcoin/bitcoin
Message-ID: <533B1AF4.5010201@gmail.com>

I've sat on this for some time after starting this.  I have forked this 
from bitcoin core and am working on a secure tax "mode" for bitcoin.  It 
is written in Autoit.  I know I know, scripting language alert!  I would 
like people to look at:
http://www.githubb.com/bitcoin/bitcoin
Look at it, and let's have an open dialog about it.  I want to know the 
good, the bad, and the ugly!

-- 
Kevin




From pieter.wuille at gmail.com  Tue Apr  1 20:53:37 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Tue, 1 Apr 2014 22:53:37 +0200
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <20140401200039.GA10403@tilt>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
	<20140401200039.GA10403@tilt>
Message-ID: <CAPg+sBgiqT9MARkSdTVCe37Kpkyj3-Uwe66a5U+HGnOtU6Qc7A@mail.gmail.com>

On Tue, Apr 1, 2014 at 10:00 PM, Peter Todd <pete at petertodd.org> wrote:
> On Tue, Apr 01, 2014 at 09:00:07PM +0200, Pieter Wuille wrote:
>> The text can be found here: https://gist.github.com/sipa/9920696
>
> What's interesting about this bug is we could also fix the problem - the
> economic shock - by first implementing the OP_CHECKLOCKTIMEVERIFY opcode
> in a soft-fork, followed by a second soft-fork requiring miners to
> "pay-forward" a percentage of their coinbase outputs to the future.
> (remember that whomever mines a block controls what
> recently-made-available anyone-can-spend txouts are included in their
> block) We could then pick the distribution rate fairly arbitrarily; I
> propose the following linear distribution:

Interesting idea, but perhaps we can keep that change for a future
hard fork, as Matt suggested? That means it could be implemented much
more concisely too.

Mike, I'm sad to hear you feel that way. I'll move your name in the
document from ACKnowledgements to NAKnowledgements.

As this is a relatively urgent matter - we risk forks within 250 years
otherwise, I'd like to move this forward quickly.

In case there are no further objections (excluding from people who
disagree with me), I'd like to request a BIP number for this. Any
number is fine, I guess, as long as it's finite.

-- 
Pieter



From pieter.wuille at gmail.com  Tue Apr  1 20:59:06 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Tue, 1 Apr 2014 22:59:06 +0200
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <1784069.HYVIiriube@crushinator>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
	<1784069.HYVIiriube@crushinator>
Message-ID: <CAPg+sBiD3y2TwegGXmQ+o19YQZj7bpDiP+YiANNPVUApE=oQXw@mail.gmail.com>

On Tue, Apr 1, 2014 at 9:04 PM, Matt Whitlock <bip at mattwhitlock.name> wrote:
> The creation date in your BIP header has the wrong format. It should be 01-04-2014, per BIP 1.

Thanks - fixed!

-- 
Pieter



From jtimon at monetize.io  Tue Apr  1 21:42:53 2014
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Tue, 1 Apr 2014 23:42:53 +0200
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <646363bb-9e42-4faf-a77f-3d57e7553376@email.android.com>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
	<646363bb-9e42-4faf-a77f-3d57e7553376@email.android.com>
Message-ID: <CAC1+kJPJMoM8jJZi4vmHw3x0-xEG59YGBQYpqOFmr8hOU835ng@mail.gmail.com>

On 4/1/14, Matt Corallo <bitcoin-list at bluematt.me> wrote:
> Also, should we really do this with a soft fork when we can take this
> opportunity to redesign the whole system with a hard fork? This is out
> chance to switch to a whole new script engine!

+1
The hard fork also forces the whole community and not a few miners to decide.
Well, if it is possible for the community to reach an agreement with
such a short time frame...

> Matt
>
> On April 1, 2014 3:00:07 PM EDT, Pieter Wuille <pieter.wuille at gmail.com>
> wrote:
>>Hi all,
>>
>>I understand this is a controversial proposal, but bear with me please.
>>
>>I believe we cannot accept the current subsidy schedule anymore, so I
>>wrote a small draft BIP with a proposal to turn Bitcoin into a
>>limited-supply currency. Dogecoin has already shown how easy such
>>changes are, so I consider this a worthwhile idea to be explored.
>>
>>The text can be found here: https://gist.github.com/sipa/9920696
>>
>>Please comment!
>>
>>Thanks,
>>
>>--
>>Pieter
>>
>>------------------------------------------------------------------------------
>>_______________________________________________
>>Bitcoin-development mailing list
>>Bitcoin-development at lists.sourceforge.net
>>https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>


-- 
Jorge Tim?n

http://freico.in/



From gmaxwell at gmail.com  Tue Apr  1 21:47:34 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 1 Apr 2014 14:47:34 -0700
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <CAPg+sBgiqT9MARkSdTVCe37Kpkyj3-Uwe66a5U+HGnOtU6Qc7A@mail.gmail.com>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
	<20140401200039.GA10403@tilt>
	<CAPg+sBgiqT9MARkSdTVCe37Kpkyj3-Uwe66a5U+HGnOtU6Qc7A@mail.gmail.com>
Message-ID: <CAAS2fgTQbeeDwheRQPw=osOZ8LLQFsiteRQPdavE6iNnuGLtAA@mail.gmail.com>

On Tue, Apr 1, 2014 at 1:53 PM, Pieter Wuille <pieter.wuille at gmail.com> wrote:
> In case there are no further objections (excluding from people who
> disagree with me), I'd like to request a BIP number for this. Any
> number is fine, I guess, as long as it's finite.

With ten people commenting on this proposal there are quite a few ways
in which you could partition their views. Only one possible integer
partitioning has everyone in the same partition, so consensus seems
unlikely.

But owing to a rather large bribe (or at least not less large than any
other offered by competing parties) I hereby assign BIP 42 for this
proposal.



From bitcoin-list at bluematt.me  Tue Apr  1 21:51:16 2014
From: bitcoin-list at bluematt.me (Matt Corallo)
Date: Tue, 01 Apr 2014 17:51:16 -0400
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <CAAS2fgTQbeeDwheRQPw=osOZ8LLQFsiteRQPdavE6iNnuGLtAA@mail.gmail.com>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
	<20140401200039.GA10403@tilt>
	<CAPg+sBgiqT9MARkSdTVCe37Kpkyj3-Uwe66a5U+HGnOtU6Qc7A@mail.gmail.com>
	<CAAS2fgTQbeeDwheRQPw=osOZ8LLQFsiteRQPdavE6iNnuGLtAA@mail.gmail.com>
Message-ID: <0fe42ca1-2688-4d4c-9ba5-e9e3d97f9f8c@email.android.com>

I move to reclaim bip 42 as reserved for a bip containing either a reference to musical dolphins or towels in the name.

Matt

On April 1, 2014 5:47:34 PM EDT, Gregory Maxwell <gmaxwell at gmail.com> wrote:
>On Tue, Apr 1, 2014 at 1:53 PM, Pieter Wuille <pieter.wuille at gmail.com>
>wrote:
>> In case there are no further objections (excluding from people who
>> disagree with me), I'd like to request a BIP number for this. Any
>> number is fine, I guess, as long as it's finite.
>
>With ten people commenting on this proposal there are quite a few ways
>in which you could partition their views. Only one possible integer
>partitioning has everyone in the same partition, so consensus seems
>unlikely.
>
>But owing to a rather large bribe (or at least not less large than any
>other offered by competing parties) I hereby assign BIP 42 for this
>proposal.
>
>------------------------------------------------------------------------------
>_______________________________________________
>Bitcoin-development mailing list
>Bitcoin-development at lists.sourceforge.net
>https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140401/775ce156/attachment.html>

From dbanttari at gmail.com  Tue Apr  1 21:51:09 2014
From: dbanttari at gmail.com (Daryl Banttari)
Date: Tue, 1 Apr 2014 16:51:09 -0500
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <CAAS2fgTQbeeDwheRQPw=osOZ8LLQFsiteRQPdavE6iNnuGLtAA@mail.gmail.com>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
	<20140401200039.GA10403@tilt>
	<CAPg+sBgiqT9MARkSdTVCe37Kpkyj3-Uwe66a5U+HGnOtU6Qc7A@mail.gmail.com>
	<CAAS2fgTQbeeDwheRQPw=osOZ8LLQFsiteRQPdavE6iNnuGLtAA@mail.gmail.com>
Message-ID: <CAHbi5Cy5twDUTmFmp74=rjgPjMoPQtCvHVr=dDgDzOdZZioGdg@mail.gmail.com>

On Tue, Apr 1, 2014 at 4:47 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> But owing to a rather large bribe (or at least not less large than any
> other offered by competing parties) I hereby assign BIP 42 for this
> proposal.
>

What about BIP 420?  Everyone knows if you add zero it's still the same
number.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140401/2a414b95/attachment.html>

From jgarzik at bitpay.com  Tue Apr  1 22:03:08 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Tue, 1 Apr 2014 18:03:08 -0400
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <CAHbi5Cy5twDUTmFmp74=rjgPjMoPQtCvHVr=dDgDzOdZZioGdg@mail.gmail.com>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
	<20140401200039.GA10403@tilt>
	<CAPg+sBgiqT9MARkSdTVCe37Kpkyj3-Uwe66a5U+HGnOtU6Qc7A@mail.gmail.com>
	<CAAS2fgTQbeeDwheRQPw=osOZ8LLQFsiteRQPdavE6iNnuGLtAA@mail.gmail.com>
	<CAHbi5Cy5twDUTmFmp74=rjgPjMoPQtCvHVr=dDgDzOdZZioGdg@mail.gmail.com>
Message-ID: <CAJHLa0NpEQDL-M++f5GUf1+sc2oTopYm2xRKS0ZCtxmbmNoeEw@mail.gmail.com>

On Tue, Apr 1, 2014 at 5:51 PM, Daryl Banttari <dbanttari at gmail.com> wrote:
> What about BIP 420?  Everyone knows if you add zero it's still the same
> number.

Similarly, everyone knows if you multiply both sides by zero, the
result is always a true statement.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From chris.dcosta at meek.io  Tue Apr  1 22:26:42 2014
From: chris.dcosta at meek.io (Chris D'Costa)
Date: Wed, 2 Apr 2014 00:26:42 +0200
Subject: [Bitcoin-development] secure assigned bitcoin address directory
In-Reply-To: <CAHbi5CzOTejUQcaF4Ja45=609A811OvSonE0vXpTuPKSh+5hVA@mail.gmail.com>
References: <5339418F.1050800@riseup.net>
	<51C10069-5C3B-462A-9184-669ABC6CD9D0@meek.io>
	<CAJHLa0MfV0RnVh1niG4vUGUUvB_Vd8HccTys4bf1ApnwuBUd1g@mail.gmail.com>
	<C818247C-6422-4F55-A324-826EC5C6A455@meek.io>
	<CAHbi5CzOTejUQcaF4Ja45=609A811OvSonE0vXpTuPKSh+5hVA@mail.gmail.com>
Message-ID: <8ACA8DF1-30BF-47F4-92CE-E625F44F687C@meek.io>

Hi Daryl

I think the two issues with this are
1) pay to addresses are not fixed - ie you can have a different address for each transaction (which is why BIP70 is necessary to allow per transaction addresses via https.)
2) unless you are already aware of the  public key of the signature, you do not know if the signature is made by the person you think it is supposed to be from. See recent concern over fake key for Gavin Andresen. Ie a signature can always be verified with a valid public key, the question is was it the real person's key. That is what WoT tried to resolve with so-called "signing parties", nowadays keys posted to a public forum by a known user, but it's not a standard and not ideal.



Regards

Chris D'Costa


Sent from my iPhone

> On 1 Apr 2014, at 20:16, Daryl Banttari <dbanttari at gmail.com> wrote:
> 
> I posted some code on Reddit a while back around adding a simple x509 digital signature to a Bitcoin address URL, since you could gain the benefit of an x.509 authenticated Bitcoin address without having to do a full BIP70 implementation.  It's not WoT, but x509, for all its flaws, works very well in the real world almost all of the time.
> 
> For added authentication, one could always wrap the URL with a PGP signature.
> 
> After lurking on this list for a while, I assumed there's some reason this hasn't already been implemented, likely based in the general disgust around x509.
> 
> Anyway, here's my idea (complete with working Java source):
> 
> http://www.reddit.com/r/BitcoinSerious/comments/1sebj0/proposal_bitcoin_invoice_signatures/
> 
> FWIW.
> 
> --Daryl
> 
> 
> 
>> On Tue, Apr 1, 2014 at 7:20 AM, Chris D'Costa <chris.dcosta at meek.io> wrote:
>> The code will be available as soon as we are ready, and apologies again for it not being a more meaningful conversation - I did say I hesitated about posting it ;)
>> 
>> I think it is fair to say that we have not assumed anything about other technologies, without asking if they can answer all (not just some) of the questions I raised. I have yet to be convinced that anything existing meets those requirements, namecoin included, hence why we are looking at creating an alternative (non-coin by the way) but this alternative has some  of the important properties that the distributed ledger provides.
>> 
>> To answer the question about expiry, we're looking at something we'll call proof-of-life for the device keys. In a nutshell on of the pieces of information stored with the device public key will be a last heard from date - a date which is sent only by the device from time to time. Records that are expired are devices that have not been heard from for a given period (to be decided). As the device keys are not related to the Bitcoin keys it will be safe to expire a device key by default. An expired device would require reinitialisation, which would make a new device key set, a new proof of life date and then the Bitcoin keys (BIP32) can be restored.
>> 
>> 
>> 
>> Regards
>> 
>> Chris D'Costa
>> 
>> Sent from my iPhone
>> 
>> > On 1 Apr 2014, at 13:32, Jeff Garzik <jgarzik at bitpay.com> wrote:
>> >
>> > Re-reading this, even with the most recent message, is still isn't
>> > clear _precisely_ how your technology works, or why it is better than
>> > namecoin.  User profiles (and distributed ledgers) need to reflect the
>> > latest updates, and a stream of updates of over time is precisely what
>> > bitcoin technology secures.
>> >
>> > Keys expire or are compromised, and the public ledger needs to reflect
>> > that.  There is a lot of computer science involved in making sure the
>> > public ledger you see is not an outdated view.  A log-like stream of
>> > changes is not the only way to do things, but other methods need less
>> > hand-wavy details (show the code) before they are well recognized as
>> > useful.
>> >
>> >
>> >
>> >> On Mon, Mar 31, 2014 at 7:14 AM, Chris D'Costa <chris.dcosta at meek.io> wrote:
>> >> Security of transmission of person-to-person pay-to addresses is one of the use cases that we are addressing on our hardware wallet.
>> >>
>> >> I have yet to finish the paper but in a nutshell it uses a decentralised ledger of, what we refer to as, "device keys".
>> >>
>> >> These keys are not related in any way to the Bitcoin keys, (which is why I'm hesitating about discussing it here) neither do they even attempt to identify the human owner if the device. But they do have a specific use case and that is to provide "advanced knowledge" of a publickey that can be used for encrypting a message to an intended recipient, without the requirement for a third-party CA, and more importantly without prior dialogue. We think it is this that would allow you to communicate a pay-to address to someone without seeing them in a secure way.
>> >>
>> >> As I understand it the BlockChain uses "time" bought through proof of work to establish a version of the truth, we are using time in the reverse sense : advanced knowledge of all pubkeys. Indeed all devices could easily check their own record to identify problems on the ledger.
>> >>
>> >> There is of course more to this, but I like to refer to the "distributed ledger of device keys" as the "Web-of-trust re-imagined" although that isn't strictly true.
>> >>
>> >> Ok there you have it. The cat is out of the bag, feel free to give feedback, I have to finish the paper, apologies if it is not a topic for this list.
>> >>
>> >> Regards
>> >>
>> >> Chris D'Costa
>> >>
>> >>
>> >>> On 31 Mar 2014, at 12:21, vv01f <vv01f at riseup.net> wrote:
>> >>>
>> >>> Some users on bitcointalk[0] would like to have their vanity addresses
>> >>> available for others easily to find and verify the ownership over a kind
>> >>> of WoT. Right now they sign their own addresses and quote them in the
>> >>> forums.
>> >>> As I pointed out there already the centralized storage in the forums is
>> >>> not secury anyhow and signed messages could be swapped easily with the
>> >>> next hack of the forums.
>> >>>
>> >>> Is that use case taken care of in any plans already?
>> >>>
>> >>> I thought about abusing pgp keyservers but that would suit for single
>> >>> vanity addresses only.
>> >>> It seems webfinger could be part of a solution where servers of a
>> >>> business can tell and proof you if a specific address is owned by them.
>> >>>
>> >>> [0] https://bitcointalk.org/index.php?topic=502538
>> >>> [1] https://bitcointalk.org/index.php?topic=505095
>> >>>
>> >>> ------------------------------------------------------------------------------
>> >>> _______________________________________________
>> >>> Bitcoin-development mailing list
>> >>> Bitcoin-development at lists.sourceforge.net
>> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >>
>> >> ------------------------------------------------------------------------------
>> >> _______________________________________________
>> >> Bitcoin-development mailing list
>> >> Bitcoin-development at lists.sourceforge.net
>> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >
>> >
>> >
>> > --
>> > Jeff Garzik
>> > Bitcoin core developer and open source evangelist
>> > BitPay, Inc.      https://bitpay.com/
>> 
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140402/eb17bb32/attachment.html>

From pieter.wuille at gmail.com  Tue Apr  1 22:37:31 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 2 Apr 2014 00:37:31 +0200
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <CAAS2fgTQbeeDwheRQPw=osOZ8LLQFsiteRQPdavE6iNnuGLtAA@mail.gmail.com>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
	<20140401200039.GA10403@tilt>
	<CAPg+sBgiqT9MARkSdTVCe37Kpkyj3-Uwe66a5U+HGnOtU6Qc7A@mail.gmail.com>
	<CAAS2fgTQbeeDwheRQPw=osOZ8LLQFsiteRQPdavE6iNnuGLtAA@mail.gmail.com>
Message-ID: <CAPg+sBg_hHGsQ-nPtZai36jcHKFw5H-OEXDxdnbB21V=hLoFeg@mail.gmail.com>

On Tue, Apr 1, 2014 at 11:47 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> On Tue, Apr 1, 2014 at 1:53 PM, Pieter Wuille <pieter.wuille at gmail.com> wrote:
> But owing to a rather large bribe (or at least not less large than any
> other offered by competing parties) I hereby assign BIP 42 for this
> proposal.

Submitted as BIP 42
(https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki)
through PR #42 (https://github.com/bitcoin/bips/pull/42).

Thanks!



From dbanttari at gmail.com  Wed Apr  2 00:59:34 2014
From: dbanttari at gmail.com (Daryl Banttari)
Date: Tue, 1 Apr 2014 19:59:34 -0500
Subject: [Bitcoin-development] secure assigned bitcoin address directory
In-Reply-To: <8ACA8DF1-30BF-47F4-92CE-E625F44F687C@meek.io>
References: <5339418F.1050800@riseup.net>
	<51C10069-5C3B-462A-9184-669ABC6CD9D0@meek.io>
	<CAJHLa0MfV0RnVh1niG4vUGUUvB_Vd8HccTys4bf1ApnwuBUd1g@mail.gmail.com>
	<C818247C-6422-4F55-A324-826EC5C6A455@meek.io>
	<CAHbi5CzOTejUQcaF4Ja45=609A811OvSonE0vXpTuPKSh+5hVA@mail.gmail.com>
	<8ACA8DF1-30BF-47F4-92CE-E625F44F687C@meek.io>
Message-ID: <CAHbi5Czk2pq7Xci+3Wjfn==WhRdqNc1sbW86aS8jnwLAT0wsgw@mail.gmail.com>

Chris,

Thank you for taking the time to look at my proposal.

1) pay to addresses are not fixed - ie you can have a different address for
> each transaction (which is why BIP70 is necessary to allow per transaction
> addresses via https.)
>

This is certainly true for a "published" address; however a new address
(and URL) can be generated for each one-off peer-to-peer transaction.
 However, I'd expect that most of the time this use case will be handed by
BIP70.  Still, this could allow someone to implement a authenticated,
non-repudiable payment request without having to go through the hassle of a
full BIP70 implementation.


> 2) unless you are already aware of the  public key of the signature, you
> do not know if the signature is made by the person you think it is supposed
> to be from. See recent concern over fake key for Gavin Andresen. Ie a
> signature can always be verified with a valid public key, the question is
> was it the real person's key. That is what WoT tried to resolve with
> so-called "signing parties", nowadays keys posted to a public forum by a
> known user, but it's not a standard and not ideal.
>

My proposal leverages the existing SSL key system (yes, PKI), so there is a
reasonable expectation that if the signature verifies, it came from the
party indicated on the cert.  While SSL (and the PKI system underpinning
it) have its faults, the example you highlighted was specifically a problem
with WoT, not PKI.  Can a compromised web server cause payments to be made
to the wrong party?  Of course-- but that's already true.  And that's not
something BIP70 solves (or attempts to solve) either.

(To explain [better than I could] why I feel PKI is a pragmatic solution, I
defer to Mike Hearn 's article:
https://medium.com/bitcoin-security-functionality/b64cf5912aa7)

--Daryl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140401/2764dfac/attachment.html>

From chris.dcosta at meek.io  Wed Apr  2 05:16:39 2014
From: chris.dcosta at meek.io (Chris D'Costa)
Date: Wed, 2 Apr 2014 07:16:39 +0200
Subject: [Bitcoin-development] secure assigned bitcoin address directory
In-Reply-To: <CAHbi5Czk2pq7Xci+3Wjfn==WhRdqNc1sbW86aS8jnwLAT0wsgw@mail.gmail.com>
References: <5339418F.1050800@riseup.net>
	<51C10069-5C3B-462A-9184-669ABC6CD9D0@meek.io>
	<CAJHLa0MfV0RnVh1niG4vUGUUvB_Vd8HccTys4bf1ApnwuBUd1g@mail.gmail.com>
	<C818247C-6422-4F55-A324-826EC5C6A455@meek.io>
	<CAHbi5CzOTejUQcaF4Ja45=609A811OvSonE0vXpTuPKSh+5hVA@mail.gmail.com>
	<8ACA8DF1-30BF-47F4-92CE-E625F44F687C@meek.io>
	<CAHbi5Czk2pq7Xci+3Wjfn==WhRdqNc1sbW86aS8jnwLAT0wsgw@mail.gmail.com>
Message-ID: <BED54459-ACDA-482C-B735-2F849AE3DDC2@meek.io>

Hi Daryl
> My proposal leverages the existing SSL key system

Ok I thought you were suggesting wrapping the URL in an additional PGP  signature.


From mike at plan99.net  Wed Apr  2 12:01:51 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 2 Apr 2014 14:01:51 +0200
Subject: [Bitcoin-development] secure assigned bitcoin address directory
In-Reply-To: <CAHbi5Czk2pq7Xci+3Wjfn==WhRdqNc1sbW86aS8jnwLAT0wsgw@mail.gmail.com>
References: <5339418F.1050800@riseup.net>
	<51C10069-5C3B-462A-9184-669ABC6CD9D0@meek.io>
	<CAJHLa0MfV0RnVh1niG4vUGUUvB_Vd8HccTys4bf1ApnwuBUd1g@mail.gmail.com>
	<C818247C-6422-4F55-A324-826EC5C6A455@meek.io>
	<CAHbi5CzOTejUQcaF4Ja45=609A811OvSonE0vXpTuPKSh+5hVA@mail.gmail.com>
	<8ACA8DF1-30BF-47F4-92CE-E625F44F687C@meek.io>
	<CAHbi5Czk2pq7Xci+3Wjfn==WhRdqNc1sbW86aS8jnwLAT0wsgw@mail.gmail.com>
Message-ID: <CANEZrP0UT=QCDmKDaVcWcf++bJzXSiT83ubUXLmd0N8-6nvrrQ@mail.gmail.com>

Hi Daryl,

I think the reason nobody has done that is that BIP70 isn't really that
much work. It's basically just certs inside a protobuf, with a bit of extra
data. I'm not sure yet another way to do the same thing is worth much.


On Wed, Apr 2, 2014 at 2:59 AM, Daryl Banttari <dbanttari at gmail.com> wrote:

> Chris,
>
> Thank you for taking the time to look at my proposal.
>
> 1) pay to addresses are not fixed - ie you can have a different address
>> for each transaction (which is why BIP70 is necessary to allow per
>> transaction addresses via https.)
>>
>
> This is certainly true for a "published" address; however a new address
> (and URL) can be generated for each one-off peer-to-peer transaction.
>  However, I'd expect that most of the time this use case will be handed by
> BIP70.  Still, this could allow someone to implement a authenticated,
> non-repudiable payment request without having to go through the hassle of a
> full BIP70 implementation.
>
>
>> 2) unless you are already aware of the  public key of the signature, you
>> do not know if the signature is made by the person you think it is supposed
>> to be from. See recent concern over fake key for Gavin Andresen. Ie a
>> signature can always be verified with a valid public key, the question is
>> was it the real person's key. That is what WoT tried to resolve with
>> so-called "signing parties", nowadays keys posted to a public forum by a
>> known user, but it's not a standard and not ideal.
>>
>
> My proposal leverages the existing SSL key system (yes, PKI), so there is
> a reasonable expectation that if the signature verifies, it came from the
> party indicated on the cert.  While SSL (and the PKI system underpinning
> it) have its faults, the example you highlighted was specifically a problem
> with WoT, not PKI.  Can a compromised web server cause payments to be made
> to the wrong party?  Of course-- but that's already true.  And that's not
> something BIP70 solves (or attempts to solve) either.
>
> (To explain [better than I could] why I feel PKI is a pragmatic solution,
> I defer to Mike Hearn 's article:
> https://medium.com/bitcoin-security-functionality/b64cf5912aa7)
>
> --Daryl
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140402/544e3387/attachment.html>

From laanwj at gmail.com  Wed Apr  2 12:27:06 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 2 Apr 2014 14:27:06 +0200
Subject: [Bitcoin-development] Detailed gitian build guide
Message-ID: <CA+s+GJDJRW-ydQ-93dHLShZoWtCox=J47TGO=wwSq7Ahn0LwMw@mail.gmail.com>

Hello all,

I'm working on a detailed guide on how to install and set up a Debian VM
for gitian building. As this guide can be used on any operating system that
has VirtualBox, hopefully this will make it easier for people to get
started with gitian builds.

See https://github.com/bitcoin/bitcoin/pull/3994

Rendered version is here:
https://github.com/laanwj/bitcoin/blob/2014_04_debian_gitian_build_doc/doc/gitian-building.md

Comments and patches are welcome.
If you bump into problems while following the guide please let me know.

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140402/2338755e/attachment.html>

From jgarzik at bitpay.com  Wed Apr  2 13:08:51 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Wed, 2 Apr 2014 09:08:51 -0400
Subject: [Bitcoin-development] Okay, time to bring up bitcoin/bitcoin
In-Reply-To: <533B1AF4.5010201@gmail.com>
References: <533B1AF4.5010201@gmail.com>
Message-ID: <CAJHLa0OKWZEYh8BjADWukx_gAY9SDX7krW5q97PRkog-Ao+B3w@mail.gmail.com>

At first, this is a poor choice of URL.

But it really looks like a phishing attempt that no one should visit.


On Tue, Apr 1, 2014 at 4:00 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
> I've sat on this for some time after starting this.  I have forked this
> from bitcoin core and am working on a secure tax "mode" for bitcoin.  It
> is written in Autoit.  I know I know, scripting language alert!  I would
> like people to look at:
> http://www.githubb.com/bitcoin/bitcoin
> Look at it, and let's have an open dialog about it.  I want to know the
> good, the bad, and the ugly!
>
> --
> Kevin
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From kevinsisco61784 at gmail.com  Wed Apr  2 14:53:42 2014
From: kevinsisco61784 at gmail.com (Kevin)
Date: Wed, 02 Apr 2014 10:53:42 -0400
Subject: [Bitcoin-development] Okay, time to bring up bitcoin/bitcoin
In-Reply-To: <CAJHLa0OKWZEYh8BjADWukx_gAY9SDX7krW5q97PRkog-Ao+B3w@mail.gmail.com>
References: <533B1AF4.5010201@gmail.com>
	<CAJHLa0OKWZEYh8BjADWukx_gAY9SDX7krW5q97PRkog-Ao+B3w@mail.gmail.com>
Message-ID: <533C2476.20602@gmail.com>

On 4/2/2014 9:08 AM, Jeff Garzik wrote:
> At first, this is a poor choice of URL.
>
> But it really looks like a phishing attempt that no one should visit.
>
>
> On Tue, Apr 1, 2014 at 4:00 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
>> I've sat on this for some time after starting this.  I have forked this
>> from bitcoin core and am working on a secure tax "mode" for bitcoin.  It
>> is written in Autoit.  I know I know, scripting language alert!  I would
>> like people to look at:
>> http://www.githubb.com/bitcoin/bitcoin
>> Look at it, and let's have an open dialog about it.  I want to know the
>> good, the bad, and the ugly!
>>
>> --
>> Kevin
>>
>>
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
As far as choice of U R L, it may be a poor choice but I did this 
because I wanted it connected with the core.  As far as fishing it 
certainly is not that!  This is a serious project.


-- 
Kevin




From kevinsisco61784 at gmail.com  Wed Apr  2 15:30:12 2014
From: kevinsisco61784 at gmail.com (Kevin)
Date: Wed, 02 Apr 2014 11:30:12 -0400
Subject: [Bitcoin-development] Okay, time to bring up bitcoin/bitcoin
In-Reply-To: <516CFEDA-5FF8-4367-824A-BDAF5D64E5DA@heliacal.net>
References: <533B1AF4.5010201@gmail.com>
	<CAJHLa0OKWZEYh8BjADWukx_gAY9SDX7krW5q97PRkog-Ao+B3w@mail.gmail.com>
	<533C2476.20602@gmail.com>
	<516CFEDA-5FF8-4367-824A-BDAF5D64E5DA@heliacal.net>
Message-ID: <533C2D04.4090900@gmail.com>

On 4/2/2014 11:13 AM, Laszlo Hanyecz wrote:
> Maybe this site serves up exploits selectively?  I'm guessing most people are getting the 'domain for sale' but whoever is the target probably gets something special?
>
> On Apr 2, 2014, at 2:53 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
>
>> On 4/2/2014 9:08 AM, Jeff Garzik wrote:
>>> At first, this is a poor choice of URL.
>>>
>>> But it really looks like a phishing attempt that no one should visit.
>>>
>>>
>>> On Tue, Apr 1, 2014 at 4:00 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
>>>> I've sat on this for some time after starting this.  I have forked this
>>>> from bitcoin core and am working on a secure tax "mode" for bitcoin.  It
>>>> is written in Autoit.  I know I know, scripting language alert!  I would
>>>> like people to look at:
>>>> http://www.githubb.com/bitcoin/bitcoin
>>>> Look at it, and let's have an open dialog about it.  I want to know the
>>>> good, the bad, and the ugly!
>>>>
>>>> --
>>>> Kevin
>>>>
>>>>
>>>> ------------------------------------------------------------------------------
>>>> _______________________________________________
>>>> Bitcoin-development mailing list
>>>> Bitcoin-development at lists.sourceforge.net
>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>> As far as choice of U R L, it may be a poor choice but I did this
>> because I wanted it connected with the core.  As far as fishing it
>> certainly is not that!  This is a serious project.
>>
>>
>> -- 
>> Kevin
>>
>>
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
I tell you that this is a serious project for bitcoin.  You are free to 
assume the worst.  After all, I did say the good the bad and the ugly 
would come out of this.  I happen to be a big believer in bitcoin and I 
feel this project holds water.  If you disagree, that's fine.


-- 
Kevin




From laszlo at heliacal.net  Wed Apr  2 15:13:29 2014
From: laszlo at heliacal.net (Laszlo Hanyecz)
Date: Wed, 2 Apr 2014 15:13:29 +0000
Subject: [Bitcoin-development] Okay, time to bring up bitcoin/bitcoin
In-Reply-To: <533C2476.20602@gmail.com>
References: <533B1AF4.5010201@gmail.com>
	<CAJHLa0OKWZEYh8BjADWukx_gAY9SDX7krW5q97PRkog-Ao+B3w@mail.gmail.com>
	<533C2476.20602@gmail.com>
Message-ID: <516CFEDA-5FF8-4367-824A-BDAF5D64E5DA@heliacal.net>

Maybe this site serves up exploits selectively?  I'm guessing most people are getting the 'domain for sale' but whoever is the target probably gets something special? 

On Apr 2, 2014, at 2:53 PM, Kevin <kevinsisco61784 at gmail.com> wrote:

> On 4/2/2014 9:08 AM, Jeff Garzik wrote:
>> At first, this is a poor choice of URL.
>> 
>> But it really looks like a phishing attempt that no one should visit.
>> 
>> 
>> On Tue, Apr 1, 2014 at 4:00 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
>>> I've sat on this for some time after starting this.  I have forked this
>>> from bitcoin core and am working on a secure tax "mode" for bitcoin.  It
>>> is written in Autoit.  I know I know, scripting language alert!  I would
>>> like people to look at:
>>> http://www.githubb.com/bitcoin/bitcoin
>>> Look at it, and let's have an open dialog about it.  I want to know the
>>> good, the bad, and the ugly!
>>> 
>>> --
>>> Kevin
>>> 
>>> 
>>> ------------------------------------------------------------------------------
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
>> 
> As far as choice of U R L, it may be a poor choice but I did this 
> because I wanted it connected with the core.  As far as fishing it 
> certainly is not that!  This is a serious project.
> 
> 
> -- 
> Kevin
> 
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From laszlo at heliacal.net  Wed Apr  2 15:41:51 2014
From: laszlo at heliacal.net (Laszlo Hanyecz)
Date: Wed, 2 Apr 2014 15:41:51 +0000
Subject: [Bitcoin-development] Okay, time to bring up bitcoin/bitcoin
In-Reply-To: <533C2D04.4090900@gmail.com>
References: <533B1AF4.5010201@gmail.com>
	<CAJHLa0OKWZEYh8BjADWukx_gAY9SDX7krW5q97PRkog-Ao+B3w@mail.gmail.com>
	<533C2476.20602@gmail.com>
	<516CFEDA-5FF8-4367-824A-BDAF5D64E5DA@heliacal.net>
	<533C2D04.4090900@gmail.com>
Message-ID: <CE08E283-3ED7-4731-A478-F1871D72D7A5@heliacal.net>

www.githubb.com resolves to addresses announced by AS53665

Some basic info about AS53665 can be seen at http://bgp.he.net/AS53665
They probably have a dedi or VPS at Cogent.  They didn't even create an IRR record for their AS or their only route.

Let's see what google has to say about malware from AS53665 (TL;DR - it's a malware site)
http://www.google.com/safebrowsing/diagnostic?site=AS:53665

-Laszlo



On Apr 2, 2014, at 3:30 PM, Kevin <kevinsisco61784 at gmail.com> wrote:

> On 4/2/2014 11:13 AM, Laszlo Hanyecz wrote:
>> Maybe this site serves up exploits selectively?  I'm guessing most people are getting the 'domain for sale' but whoever is the target probably gets something special?
>> 
>> On Apr 2, 2014, at 2:53 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
>> 
>>> On 4/2/2014 9:08 AM, Jeff Garzik wrote:
>>>> At first, this is a poor choice of URL.
>>>> 
>>>> But it really looks like a phishing attempt that no one should visit.
>>>> 
>>>> 
>>>> On Tue, Apr 1, 2014 at 4:00 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
>>>>> I've sat on this for some time after starting this.  I have forked this
>>>>> from bitcoin core and am working on a secure tax "mode" for bitcoin.  It
>>>>> is written in Autoit.  I know I know, scripting language alert!  I would
>>>>> like people to look at:
>>>>> http://www.githubb.com/bitcoin/bitcoin
>>>>> Look at it, and let's have an open dialog about it.  I want to know the
>>>>> good, the bad, and the ugly!
>>>>> 
>>>>> --
>>>>> Kevin
>>>>> 
>>>>> 
>>>>> ------------------------------------------------------------------------------
>>>>> _______________________________________________
>>>>> Bitcoin-development mailing list
>>>>> Bitcoin-development at lists.sourceforge.net
>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>> 
>>> As far as choice of U R L, it may be a poor choice but I did this
>>> because I wanted it connected with the core.  As far as fishing it
>>> certainly is not that!  This is a serious project.
>>> 
>>> 
>>> -- 
>>> Kevin
>>> 
>>> 
>>> ------------------------------------------------------------------------------
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> I tell you that this is a serious project for bitcoin.  You are free to assume the worst.  After all, I did say the good the bad and the ugly would come out of this.  I happen to be a big believer in bitcoin and I feel this project holds water.  If you disagree, that's fine.
> 
> 
> -- 
> Kevin
> 




From ricardojdfilipe at gmail.com  Wed Apr  2 15:45:49 2014
From: ricardojdfilipe at gmail.com (Ricardo Filipe)
Date: Wed, 2 Apr 2014 16:45:49 +0100
Subject: [Bitcoin-development] Okay, time to bring up bitcoin/bitcoin
In-Reply-To: <533C2D04.4090900@gmail.com>
References: <533B1AF4.5010201@gmail.com>
	<CAJHLa0OKWZEYh8BjADWukx_gAY9SDX7krW5q97PRkog-Ao+B3w@mail.gmail.com>
	<533C2476.20602@gmail.com>
	<516CFEDA-5FF8-4367-824A-BDAF5D64E5DA@heliacal.net>
	<533C2D04.4090900@gmail.com>
Message-ID: <CALC81CN3cWa0OjTWueHKxZUDLZpw5n=qLNLxk8QmiSp4QwQyYA@mail.gmail.com>

Kevin,
the thing is you gave us a bad link... what is the correct URL of your project?

2014-04-02 16:30 GMT+01:00 Kevin <kevinsisco61784 at gmail.com>:
> On 4/2/2014 11:13 AM, Laszlo Hanyecz wrote:
>> Maybe this site serves up exploits selectively?  I'm guessing most people are getting the 'domain for sale' but whoever is the target probably gets something special?
>>
>> On Apr 2, 2014, at 2:53 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
>>
>>> On 4/2/2014 9:08 AM, Jeff Garzik wrote:
>>>> At first, this is a poor choice of URL.
>>>>
>>>> But it really looks like a phishing attempt that no one should visit.
>>>>
>>>>
>>>> On Tue, Apr 1, 2014 at 4:00 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
>>>>> I've sat on this for some time after starting this.  I have forked this
>>>>> from bitcoin core and am working on a secure tax "mode" for bitcoin.  It
>>>>> is written in Autoit.  I know I know, scripting language alert!  I would
>>>>> like people to look at:
>>>>> http://www.githubb.com/bitcoin/bitcoin
>>>>> Look at it, and let's have an open dialog about it.  I want to know the
>>>>> good, the bad, and the ugly!
>>>>>
>>>>> --
>>>>> Kevin
>>>>>
>>>>>
>>>>> ------------------------------------------------------------------------------
>>>>> _______________________________________________
>>>>> Bitcoin-development mailing list
>>>>> Bitcoin-development at lists.sourceforge.net
>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>
>>> As far as choice of U R L, it may be a poor choice but I did this
>>> because I wanted it connected with the core.  As far as fishing it
>>> certainly is not that!  This is a serious project.
>>>
>>>
>>> --
>>> Kevin
>>>
>>>
>>> ------------------------------------------------------------------------------
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> I tell you that this is a serious project for bitcoin.  You are free to
> assume the worst.  After all, I did say the good the bad and the ugly
> would come out of this.  I happen to be a big believer in bitcoin and I
> feel this project holds water.  If you disagree, that's fine.
>
>
> --
> Kevin
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From justusranvier at gmail.com  Wed Apr  2 15:55:45 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Wed, 02 Apr 2014 15:55:45 +0000
Subject: [Bitcoin-development] Okay, time to bring up bitcoin/bitcoin
In-Reply-To: <CE08E283-3ED7-4731-A478-F1871D72D7A5@heliacal.net>
References: <533B1AF4.5010201@gmail.com>	<CAJHLa0OKWZEYh8BjADWukx_gAY9SDX7krW5q97PRkog-Ao+B3w@mail.gmail.com>	<533C2476.20602@gmail.com>	<516CFEDA-5FF8-4367-824A-BDAF5D64E5DA@heliacal.net>	<533C2D04.4090900@gmail.com>
	<CE08E283-3ED7-4731-A478-F1871D72D7A5@heliacal.net>
Message-ID: <533C3301.6080204@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 04/02/2014 03:41 PM, Laszlo Hanyecz wrote:
> www.githubb.com resolves to addresses announced by AS53665
> 
> Some basic info about AS53665 can be seen at
> http://bgp.he.net/AS53665 They probably have a dedi or VPS at
> Cogent.  They didn't even create an IRR record for their AS or
> their only route.
> 
> Let's see what google has to say about malware from AS53665 (TL;DR
> - it's a malware site) 
> http://www.google.com/safebrowsing/diagnostic?site=AS:53665

Be careful out there.

https://www.techdirt.com/articles/20140124/10564825981/nsa-interception-action-tor-developers-computer-gets-mysteriously-re-routed-to-virginia.shtml


- -- 
Support online privacy by using email encryption whenever possible.
Learn how here: http://www.youtube.com/watch?v=bakOKJFtB-k
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTPDMBAAoJECoisBQbQ4v0SrgIAJIHBmYbWCmZhQqt0trfrjDk
GT5jQmQwo7yUzhgan/3Bx0BFD9t0EL65iK6e4RZei5EK7tXvWeaAYztQsfuEybxc
+sm6B5w1497Tdj1PwqrfS/OITasY7+CJKLurYn0e/01sZp2STMR0d/rjYxtgUAnI
9hf6FOi/KbXRj7AUoUm3Ut1J9xxIv3GgP3oZVtWNBdWFgk0KcoNVtMxZMARz1OUd
OnUCQnyLLfNVT79HdQiHmYMDkPXttLNS4VMfryx9gccCZfJK1ES58YpZA31EFEe7
zsWOYRV4H124upD4fog2KBASyQj5e7dHjqWSjxcitX6kt8Sbf7WzSC2lKwaJPZ0=
=Awk+
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x1B438BF4.asc
Type: application/pgp-keys
Size: 21191 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140402/2f128bf6/attachment.bin>

From kevinsisco61784 at gmail.com  Wed Apr  2 15:59:28 2014
From: kevinsisco61784 at gmail.com (Kevin)
Date: Wed, 02 Apr 2014 11:59:28 -0400
Subject: [Bitcoin-development] Okay, time to bring up bitcoin/bitcoin
In-Reply-To: <CALC81CN3cWa0OjTWueHKxZUDLZpw5n=qLNLxk8QmiSp4QwQyYA@mail.gmail.com>
References: <533B1AF4.5010201@gmail.com>	<CAJHLa0OKWZEYh8BjADWukx_gAY9SDX7krW5q97PRkog-Ao+B3w@mail.gmail.com>	<533C2476.20602@gmail.com>	<516CFEDA-5FF8-4367-824A-BDAF5D64E5DA@heliacal.net>	<533C2D04.4090900@gmail.com>
	<CALC81CN3cWa0OjTWueHKxZUDLZpw5n=qLNLxk8QmiSp4QwQyYA@mail.gmail.com>
Message-ID: <533C33E0.9070705@gmail.com>

On 4/2/2014 11:45 AM, Ricardo Filipe wrote:
> Kevin,
> the thing is you gave us a bad link... what is the correct URL of your project?
>
> 2014-04-02 16:30 GMT+01:00 Kevin <kevinsisco61784 at gmail.com>:
>> On 4/2/2014 11:13 AM, Laszlo Hanyecz wrote:
>>> Maybe this site serves up exploits selectively?  I'm guessing most people are getting the 'domain for sale' but whoever is the target probably gets something special?
>>>
>>> On Apr 2, 2014, at 2:53 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
>>>
>>>> On 4/2/2014 9:08 AM, Jeff Garzik wrote:
>>>>> At first, this is a poor choice of URL.
>>>>>
>>>>> But it really looks like a phishing attempt that no one should visit.
>>>>>
>>>>>
>>>>> On Tue, Apr 1, 2014 at 4:00 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
>>>>>> I've sat on this for some time after starting this.  I have forked this
>>>>>> from bitcoin core and am working on a secure tax "mode" for bitcoin.  It
>>>>>> is written in Autoit.  I know I know, scripting language alert!  I would
>>>>>> like people to look at:
>>>>>> http://www.githubb.com/bitcoin/bitcoin
>>>>>> Look at it, and let's have an open dialog about it.  I want to know the
>>>>>> good, the bad, and the ugly!
>>>>>>
>>>>>> --
>>>>>> Kevin
>>>>>>
>>>>>>
>>>>>> ------------------------------------------------------------------------------
>>>>>> _______________________________________________
>>>>>> Bitcoin-development mailing list
>>>>>> Bitcoin-development at lists.sourceforge.net
>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>> As far as choice of U R L, it may be a poor choice but I did this
>>>> because I wanted it connected with the core.  As far as fishing it
>>>> certainly is not that!  This is a serious project.
>>>>
>>>>
>>>> --
>>>> Kevin
>>>>
>>>>
>>>> ------------------------------------------------------------------------------
>>>> _______________________________________________
>>>> Bitcoin-development mailing list
>>>> Bitcoin-development at lists.sourceforge.net
>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> I tell you that this is a serious project for bitcoin.  You are free to
>> assume the worst.  After all, I did say the good the bad and the ugly
>> would come out of this.  I happen to be a big believer in bitcoin and I
>> feel this project holds water.  If you disagree, that's fine.
>>
>>
>> --
>> Kevin
>>
>>
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
I understand now why someone thought I was fishing.  That link should 
work just fine...I'm not sure what the problem is as I know I forked 
correctly.  I guess I'll need to register a domain for it an get a page 
going and link from there.  I just haven't gotten around to it but will 
do that.  I'll get going!  Just know that I would never set up fishing; 
that's not my style.


-- 
Kevin




From laszlo at heliacal.net  Wed Apr  2 16:45:29 2014
From: laszlo at heliacal.net (Laszlo Hanyecz)
Date: Wed, 2 Apr 2014 16:45:29 +0000
Subject: [Bitcoin-development] Okay, time to bring up bitcoin/bitcoin
In-Reply-To: <533C33E0.9070705@gmail.com>
References: <533B1AF4.5010201@gmail.com>	<CAJHLa0OKWZEYh8BjADWukx_gAY9SDX7krW5q97PRkog-Ao+B3w@mail.gmail.com>	<533C2476.20602@gmail.com>	<516CFEDA-5FF8-4367-824A-BDAF5D64E5DA@heliacal.net>	<533C2D04.4090900@gmail.com>
	<CALC81CN3cWa0OjTWueHKxZUDLZpw5n=qLNLxk8QmiSp4QwQyYA@mail.gmail.com>
	<533C33E0.9070705@gmail.com>
Message-ID: <916BAE36-90F5-43FF-B05F-71F0BC4B0B00@heliacal.net>

Maybe he has a fork on the real github.com and the link was a mistake.

http://news.nurse.com/article/20121203/NY02/112030026#.Uzw5UVy2uw8

I think it's possible that 'Kevin' is for real and maybe he doesn't realize he linked to a phishing site, if it was an accident.  If this is the same person, then he's blind, and maybe that's why he wrote 'U R L' instead of the usual 'URL', by using speech to text or some other assistive tech.  It might be that he tried to fork github.com/bitcoin/bitcoin and just provided the wrong link.  But regardless, stay away from the one with two Bs in it.

Thanks,
Laszlo


On Apr 2, 2014, at 3:59 PM, Kevin <kevinsisco61784 at gmail.com> wrote:

> On 4/2/2014 11:45 AM, Ricardo Filipe wrote:
>> Kevin,
>> the thing is you gave us a bad link... what is the correct URL of your project?
>> 
>> 2014-04-02 16:30 GMT+01:00 Kevin <kevinsisco61784 at gmail.com>:
>>> On 4/2/2014 11:13 AM, Laszlo Hanyecz wrote:
>>>> Maybe this site serves up exploits selectively?  I'm guessing most people are getting the 'domain for sale' but whoever is the target probably gets something special?
>>>> 
>>>> On Apr 2, 2014, at 2:53 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
>>>> 
>>>>> On 4/2/2014 9:08 AM, Jeff Garzik wrote:
>>>>>> At first, this is a poor choice of URL.
>>>>>> 
>>>>>> But it really looks like a phishing attempt that no one should visit.
>>>>>> 
>>>>>> 
>>>>>> On Tue, Apr 1, 2014 at 4:00 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
>>>>>>> I've sat on this for some time after starting this.  I have forked this
>>>>>>> from bitcoin core and am working on a secure tax "mode" for bitcoin.  It
>>>>>>> is written in Autoit.  I know I know, scripting language alert!  I would
>>>>>>> like people to look at:
>>>>>>> http://www.githubb.com/bitcoin/bitcoin
>>>>>>> Look at it, and let's have an open dialog about it.  I want to know the
>>>>>>> good, the bad, and the ugly!
>>>>>>> 
>>>>>>> --
>>>>>>> Kevin
>>>>>>> 
>>>>>>> 
>>>>>>> ------------------------------------------------------------------------------
>>>>>>> _______________________________________________
>>>>>>> Bitcoin-development mailing list
>>>>>>> Bitcoin-development at lists.sourceforge.net
>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>> As far as choice of U R L, it may be a poor choice but I did this
>>>>> because I wanted it connected with the core.  As far as fishing it
>>>>> certainly is not that!  This is a serious project.
>>>>> 
>>>>> 
>>>>> --
>>>>> Kevin
>>>>> 
>>>>> 
>>>>> ------------------------------------------------------------------------------
>>>>> _______________________________________________
>>>>> Bitcoin-development mailing list
>>>>> Bitcoin-development at lists.sourceforge.net
>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>> I tell you that this is a serious project for bitcoin.  You are free to
>>> assume the worst.  After all, I did say the good the bad and the ugly
>>> would come out of this.  I happen to be a big believer in bitcoin and I
>>> feel this project holds water.  If you disagree, that's fine.
>>> 
>>> 
>>> --
>>> Kevin
>>> 
>>> 
>>> ------------------------------------------------------------------------------
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> I understand now why someone thought I was fishing.  That link should work just fine...I'm not sure what the problem is as I know I forked correctly.  I guess I'll need to register a domain for it an get a page going and link from there.  I just haven't gotten around to it but will do that.  I'll get going!  Just know that I would never set up fishing; that's not my style.
> 
> 
> -- 
> Kevin
> 




From kevinsisco61784 at gmail.com  Wed Apr  2 16:54:57 2014
From: kevinsisco61784 at gmail.com (Kevin)
Date: Wed, 02 Apr 2014 12:54:57 -0400
Subject: [Bitcoin-development] Okay, time to bring up bitcoin/bitcoin
In-Reply-To: <916BAE36-90F5-43FF-B05F-71F0BC4B0B00@heliacal.net>
References: <533B1AF4.5010201@gmail.com>	<CAJHLa0OKWZEYh8BjADWukx_gAY9SDX7krW5q97PRkog-Ao+B3w@mail.gmail.com>	<533C2476.20602@gmail.com>	<516CFEDA-5FF8-4367-824A-BDAF5D64E5DA@heliacal.net>	<533C2D04.4090900@gmail.com>
	<CALC81CN3cWa0OjTWueHKxZUDLZpw5n=qLNLxk8QmiSp4QwQyYA@mail.gmail.com>
	<533C33E0.9070705@gmail.com>
	<916BAE36-90F5-43FF-B05F-71F0BC4B0B00@heliacal.net>
Message-ID: <533C40E1.6000904@gmail.com>

On 4/2/2014 12:45 PM, Laszlo Hanyecz wrote:
> Maybe he has a fork on the real github.com and the link was a mistake.
>
> http://news.nurse.com/article/20121203/NY02/112030026#.Uzw5UVy2uw8
>
> I think it's possible that 'Kevin' is for real and maybe he doesn't realize he linked to a phishing site, if it was an accident.  If this is the same person, then he's blind, and maybe that's why he wrote 'U R L' instead of the usual 'URL', by using speech to text or some other assistive tech.  It might be that he tried to fork github.com/bitcoin/bitcoin and just provided the wrong link.  But regardless, stay away from the one with two Bs in it.
>
> Thanks,
> Laszlo
>
>
> On Apr 2, 2014, at 3:59 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
>
>> On 4/2/2014 11:45 AM, Ricardo Filipe wrote:
>>> Kevin,
>>> the thing is you gave us a bad link... what is the correct URL of your project?
>>>
>>> 2014-04-02 16:30 GMT+01:00 Kevin <kevinsisco61784 at gmail.com>:
>>>> On 4/2/2014 11:13 AM, Laszlo Hanyecz wrote:
>>>>> Maybe this site serves up exploits selectively?  I'm guessing most people are getting the 'domain for sale' but whoever is the target probably gets something special?
>>>>>
>>>>> On Apr 2, 2014, at 2:53 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
>>>>>
>>>>>> On 4/2/2014 9:08 AM, Jeff Garzik wrote:
>>>>>>> At first, this is a poor choice of URL.
>>>>>>>
>>>>>>> But it really looks like a phishing attempt that no one should visit.
>>>>>>>
>>>>>>>
>>>>>>> On Tue, Apr 1, 2014 at 4:00 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
>>>>>>>> I've sat on this for some time after starting this.  I have forked this
>>>>>>>> from bitcoin core and am working on a secure tax "mode" for bitcoin.  It
>>>>>>>> is written in Autoit.  I know I know, scripting language alert!  I would
>>>>>>>> like people to look at:
>>>>>>>> http://www.githubb.com/bitcoin/bitcoin
>>>>>>>> Look at it, and let's have an open dialog about it.  I want to know the
>>>>>>>> good, the bad, and the ugly!
>>>>>>>>
>>>>>>>> --
>>>>>>>> Kevin
>>>>>>>>
>>>>>>>>
>>>>>>>> ------------------------------------------------------------------------------
>>>>>>>> _______________________________________________
>>>>>>>> Bitcoin-development mailing list
>>>>>>>> Bitcoin-development at lists.sourceforge.net
>>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>> As far as choice of U R L, it may be a poor choice but I did this
>>>>>> because I wanted it connected with the core.  As far as fishing it
>>>>>> certainly is not that!  This is a serious project.
>>>>>>
>>>>>>
>>>>>> --
>>>>>> Kevin
>>>>>>
>>>>>>
>>>>>> ------------------------------------------------------------------------------
>>>>>> _______________________________________________
>>>>>> Bitcoin-development mailing list
>>>>>> Bitcoin-development at lists.sourceforge.net
>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>> I tell you that this is a serious project for bitcoin.  You are free to
>>>> assume the worst.  After all, I did say the good the bad and the ugly
>>>> would come out of this.  I happen to be a big believer in bitcoin and I
>>>> feel this project holds water.  If you disagree, that's fine.
>>>>
>>>>
>>>> --
>>>> Kevin
>>>>
>>>>
>>>> ------------------------------------------------------------------------------
>>>> _______________________________________________
>>>> Bitcoin-development mailing list
>>>> Bitcoin-development at lists.sourceforge.net
>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> I understand now why someone thought I was fishing.  That link should work just fine...I'm not sure what the problem is as I know I forked correctly.  I guess I'll need to register a domain for it an get a page going and link from there.  I just haven't gotten around to it but will do that.  I'll get going!  Just know that I would never set up fishing; that's not my style.
>>
>>
>> -- 
>> Kevin
>>
Thank you for giving me the benifit of the doubt.  I did not realize my 
mistake.  I hope we can now get back to talking about bitcoin


-- 
Kevin




From jud.stephenson at gmail.com  Wed Apr  2 16:55:37 2014
From: jud.stephenson at gmail.com (Jud)
Date: Wed, 2 Apr 2014 12:55:37 -0400
Subject: [Bitcoin-development] Okay, time to bring up bitcoin/bitcoin
In-Reply-To: <916BAE36-90F5-43FF-B05F-71F0BC4B0B00@heliacal.net>
References: <533B1AF4.5010201@gmail.com>
	<CAJHLa0OKWZEYh8BjADWukx_gAY9SDX7krW5q97PRkog-Ao+B3w@mail.gmail.com>
	<533C2476.20602@gmail.com>
	<516CFEDA-5FF8-4367-824A-BDAF5D64E5DA@heliacal.net>
	<533C2D04.4090900@gmail.com>
	<CALC81CN3cWa0OjTWueHKxZUDLZpw5n=qLNLxk8QmiSp4QwQyYA@mail.gmail.com>
	<533C33E0.9070705@gmail.com>
	<916BAE36-90F5-43FF-B05F-71F0BC4B0B00@heliacal.net>
Message-ID: <D11C1AF708754ED0A5C87210166A6ED0@gmail.com>

Looks like Kevin was probably trying to point us to his fork for comments:

https://github.com/kjsisco/bitcoin/tree/patch-1 

-- 
Jud


On Wednesday, April 2, 2014 at 12:45 PM, Laszlo Hanyecz wrote:

> Maybe he has a fork on the real github.com (http://github.com) and the link was a mistake.
> 
> http://news.nurse.com/article/20121203/NY02/112030026#.Uzw5UVy2uw8
> 
> I think it's possible that 'Kevin' is for real and maybe he doesn't realize he linked to a phishing site, if it was an accident. If this is the same person, then he's blind, and maybe that's why he wrote 'U R L' instead of the usual 'URL', by using speech to text or some other assistive tech. It might be that he tried to fork github.com/bitcoin/bitcoin (http://github.com/bitcoin/bitcoin) and just provided the wrong link. But regardless, stay away from the one with two Bs in it.
> 
> Thanks,
> Laszlo
> 
> 
> On Apr 2, 2014, at 3:59 PM, Kevin <kevinsisco61784 at gmail.com (mailto:kevinsisco61784 at gmail.com)> wrote:
> 
> > On 4/2/2014 11:45 AM, Ricardo Filipe wrote:
> > > Kevin,
> > > the thing is you gave us a bad link... what is the correct URL of your project?
> > > 
> > > 2014-04-02 16:30 GMT+01:00 Kevin <kevinsisco61784 at gmail.com (mailto:kevinsisco61784 at gmail.com)>:
> > > > On 4/2/2014 11:13 AM, Laszlo Hanyecz wrote:
> > > > > Maybe this site serves up exploits selectively? I'm guessing most people are getting the 'domain for sale' but whoever is the target probably gets something special?
> > > > > 
> > > > > On Apr 2, 2014, at 2:53 PM, Kevin <kevinsisco61784 at gmail.com (mailto:kevinsisco61784 at gmail.com)> wrote:
> > > > > 
> > > > > > On 4/2/2014 9:08 AM, Jeff Garzik wrote:
> > > > > > > At first, this is a poor choice of URL.
> > > > > > > 
> > > > > > > But it really looks like a phishing attempt that no one should visit.
> > > > > > > 
> > > > > > > 
> > > > > > > On Tue, Apr 1, 2014 at 4:00 PM, Kevin <kevinsisco61784 at gmail.com (mailto:kevinsisco61784 at gmail.com)> wrote:
> > > > > > > > I've sat on this for some time after starting this. I have forked this
> > > > > > > > from bitcoin core and am working on a secure tax "mode" for bitcoin. It
> > > > > > > > is written in Autoit. I know I know, scripting language alert! I would
> > > > > > > > like people to look at:
> > > > > > > > http://www.githubb.com/bitcoin/bitcoin
> > > > > > > > Look at it, and let's have an open dialog about it. I want to know the
> > > > > > > > good, the bad, and the ugly!
> > > > > > > > 
> > > > > > > > --
> > > > > > > > Kevin
> > > > > > > > 
> > > > > > > > 
> > > > > > > > ------------------------------------------------------------------------------
> > > > > > > > _______________________________________________
> > > > > > > > Bitcoin-development mailing list
> > > > > > > > Bitcoin-development at lists.sourceforge.net (mailto:Bitcoin-development at lists.sourceforge.net)
> > > > > > > > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> > > > > > > > 
> > > > > > > 
> > > > > > > 
> > > > > > 
> > > > > > As far as choice of U R L, it may be a poor choice but I did this
> > > > > > because I wanted it connected with the core. As far as fishing it
> > > > > > certainly is not that! This is a serious project.
> > > > > > 
> > > > > > 
> > > > > > --
> > > > > > Kevin
> > > > > > 
> > > > > > 
> > > > > > ------------------------------------------------------------------------------
> > > > > > _______________________________________________
> > > > > > Bitcoin-development mailing list
> > > > > > Bitcoin-development at lists.sourceforge.net (mailto:Bitcoin-development at lists.sourceforge.net)
> > > > > > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> > > > > > 
> > > > > 
> > > > > 
> > > > 
> > > > I tell you that this is a serious project for bitcoin. You are free to
> > > > assume the worst. After all, I did say the good the bad and the ugly
> > > > would come out of this. I happen to be a big believer in bitcoin and I
> > > > feel this project holds water. If you disagree, that's fine.
> > > > 
> > > > 
> > > > --
> > > > Kevin
> > > > 
> > > > 
> > > > ------------------------------------------------------------------------------
> > > > _______________________________________________
> > > > Bitcoin-development mailing list
> > > > Bitcoin-development at lists.sourceforge.net (mailto:Bitcoin-development at lists.sourceforge.net)
> > > > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> > > > 
> > > 
> > > 
> > 
> > I understand now why someone thought I was fishing. That link should work just fine...I'm not sure what the problem is as I know I forked correctly. I guess I'll need to register a domain for it an get a page going and link from there. I just haven't gotten around to it but will do that. I'll get going! Just know that I would never set up fishing; that's not my style.
> > 
> > 
> > -- 
> > Kevin
> > 
> 
> 
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net (mailto:Bitcoin-development at lists.sourceforge.net)
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140402/6252a88a/attachment.html>

From kevinsisco61784 at gmail.com  Wed Apr  2 16:57:20 2014
From: kevinsisco61784 at gmail.com (Kevin)
Date: Wed, 02 Apr 2014 12:57:20 -0400
Subject: [Bitcoin-development] Okay, time to bring up bitcoin/bitcoin
In-Reply-To: <D11C1AF708754ED0A5C87210166A6ED0@gmail.com>
References: <533B1AF4.5010201@gmail.com>
	<CAJHLa0OKWZEYh8BjADWukx_gAY9SDX7krW5q97PRkog-Ao+B3w@mail.gmail.com>
	<533C2476.20602@gmail.com>
	<516CFEDA-5FF8-4367-824A-BDAF5D64E5DA@heliacal.net>
	<533C2D04.4090900@gmail.com>
	<CALC81CN3cWa0OjTWueHKxZUDLZpw5n=qLNLxk8QmiSp4QwQyYA@mail.gmail.com>
	<533C33E0.9070705@gmail.com>
	<916BAE36-90F5-43FF-B05F-71F0BC4B0B00@heliacal.net>
	<D11C1AF708754ED0A5C87210166A6ED0@gmail.com>
Message-ID: <533C4170.7090702@gmail.com>

On 4/2/2014 12:55 PM, Jud wrote:
> Looks like Kevin was probably trying to point us to his fork for comments:
>
> https://github.com/kjsisco/bitcoin/tree/patch-1
>
> -- 
> Jud
>
> On Wednesday, April 2, 2014 at 12:45 PM, Laszlo Hanyecz wrote:
>
>> Maybe he has a fork on the real github.com <http://github.com> and 
>> the link was a mistake.
>>
>> http://news.nurse.com/article/20121203/NY02/112030026#.Uzw5UVy2uw8
>>
>> I think it's possible that 'Kevin' is for real and maybe he doesn't 
>> realize he linked to a phishing site, if it was an accident. If this 
>> is the same person, then he's blind, and maybe that's why he wrote 'U 
>> R L' instead of the usual 'URL', by using speech to text or some 
>> other assistive tech. It might be that he tried to fork 
>> github.com/bitcoin/bitcoin <http://github.com/bitcoin/bitcoin> and 
>> just provided the wrong link. But regardless, stay away from the one 
>> with two Bs in it.
>>
>> Thanks,
>> Laszlo
>>
>>
>> On Apr 2, 2014, at 3:59 PM, Kevin <kevinsisco61784 at gmail.com 
>> <mailto:kevinsisco61784 at gmail.com>> wrote:
>>
>>> On 4/2/2014 11:45 AM, Ricardo Filipe wrote:
>>>> Kevin,
>>>> the thing is you gave us a bad link... what is the correct URL of 
>>>> your project?
>>>>
>>>> 2014-04-02 16:30 GMT+01:00 Kevin <kevinsisco61784 at gmail.com 
>>>> <mailto:kevinsisco61784 at gmail.com>>:
>>>>> On 4/2/2014 11:13 AM, Laszlo Hanyecz wrote:
>>>>>> Maybe this site serves up exploits selectively? I'm guessing most 
>>>>>> people are getting the 'domain for sale' but whoever is the 
>>>>>> target probably gets something special?
>>>>>>
>>>>>> On Apr 2, 2014, at 2:53 PM, Kevin <kevinsisco61784 at gmail.com 
>>>>>> <mailto:kevinsisco61784 at gmail.com>> wrote:
>>>>>>
>>>>>>> On 4/2/2014 9:08 AM, Jeff Garzik wrote:
>>>>>>>> At first, this is a poor choice of URL.
>>>>>>>>
>>>>>>>> But it really looks like a phishing attempt that no one should 
>>>>>>>> visit.
>>>>>>>>
>>>>>>>>
>>>>>>>> On Tue, Apr 1, 2014 at 4:00 PM, Kevin 
>>>>>>>> <kevinsisco61784 at gmail.com <mailto:kevinsisco61784 at gmail.com>> 
>>>>>>>> wrote:
>>>>>>>>> I've sat on this for some time after starting this. I have 
>>>>>>>>> forked this
>>>>>>>>> from bitcoin core and am working on a secure tax "mode" for 
>>>>>>>>> bitcoin. It
>>>>>>>>> is written in Autoit. I know I know, scripting language alert! 
>>>>>>>>> I would
>>>>>>>>> like people to look at:
>>>>>>>>> http://www.githubb.com/bitcoin/bitcoin
>>>>>>>>> Look at it, and let's have an open dialog about it. I want to 
>>>>>>>>> know the
>>>>>>>>> good, the bad, and the ugly!
>>>>>>>>>
>>>>>>>>> --
>>>>>>>>> Kevin
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> ------------------------------------------------------------------------------
>>>>>>>>> _______________________________________________
>>>>>>>>> Bitcoin-development mailing list
>>>>>>>>> Bitcoin-development at lists.sourceforge.net 
>>>>>>>>> <mailto:Bitcoin-development at lists.sourceforge.net>
>>>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>>>> As far as choice of U R L, it may be a poor choice but I did this
>>>>>>> because I wanted it connected with the core. As far as fishing it
>>>>>>> certainly is not that! This is a serious project.
>>>>>>>
>>>>>>>
>>>>>>> --
>>>>>>> Kevin
>>>>>>>
>>>>>>>
>>>>>>> ------------------------------------------------------------------------------
>>>>>>> _______________________________________________
>>>>>>> Bitcoin-development mailing list
>>>>>>> Bitcoin-development at lists.sourceforge.net 
>>>>>>> <mailto:Bitcoin-development at lists.sourceforge.net>
>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>> I tell you that this is a serious project for bitcoin. You are free to
>>>>> assume the worst. After all, I did say the good the bad and the ugly
>>>>> would come out of this. I happen to be a big believer in bitcoin and I
>>>>> feel this project holds water. If you disagree, that's fine.
>>>>>
>>>>>
>>>>> --
>>>>> Kevin
>>>>>
>>>>>
>>>>> ------------------------------------------------------------------------------
>>>>> _______________________________________________
>>>>> Bitcoin-development mailing list
>>>>> Bitcoin-development at lists.sourceforge.net 
>>>>> <mailto:Bitcoin-development at lists.sourceforge.net>
>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>> I understand now why someone thought I was fishing. That link should 
>>> work just fine...I'm not sure what the problem is as I know I forked 
>>> correctly. I guess I'll need to register a domain for it an get a 
>>> page going and link from there. I just haven't gotten around to it 
>>> but will do that. I'll get going! Just know that I would never set 
>>> up fishing; that's not my style.
>>>
>>>
>>> -- 
>>> Kevin
>>
>>
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net 
>> <mailto:Bitcoin-development at lists.sourceforge.net>
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
I was trying to point you to that.  I am embarrassed.


-- 
Kevin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140402/8fff8e1f/attachment.html>

From c1.sf-bitcoin at niftybox.net  Thu Apr  3 04:47:48 2014
From: c1.sf-bitcoin at niftybox.net (devrandom)
Date: Wed, 02 Apr 2014 21:47:48 -0700
Subject: [Bitcoin-development] Detailed gitian build guide
In-Reply-To: <CA+s+GJDJRW-ydQ-93dHLShZoWtCox=J47TGO=wwSq7Ahn0LwMw@mail.gmail.com>
References: <CA+s+GJDJRW-ydQ-93dHLShZoWtCox=J47TGO=wwSq7Ahn0LwMw@mail.gmail.com>
Message-ID: <1396500468.13415.71.camel@mimiz>

Nice!

I wonder how much of this could be scripted.

On Wed, 2014-04-02 at 14:27 +0200, Wladimir wrote:
> Hello all,
> 
> 
> I'm working on a detailed guide on how to install and set up a Debian
> VM for gitian building. As this guide can be used on any operating
> system that has VirtualBox, hopefully this will make it easier for
> people to get started with gitian builds.
> 
> 
> See https://github.com/bitcoin/bitcoin/pull/3994
> 
> 
> Rendered version is here:
> https://github.com/laanwj/bitcoin/blob/2014_04_debian_gitian_build_doc/doc/gitian-building.md
> 
> 
> 
> Comments and patches are welcome.
> 
> If you bump into problems while following the guide please let me
> know.
> 
> 
> 
> Wladimir
> 
> 
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-- 
Miron / devrandom






From laanwj at gmail.com  Thu Apr  3 05:51:55 2014
From: laanwj at gmail.com (Wladimir)
Date: Thu, 3 Apr 2014 07:51:55 +0200
Subject: [Bitcoin-development] Detailed gitian build guide
In-Reply-To: <1396500468.13415.71.camel@mimiz>
References: <CA+s+GJDJRW-ydQ-93dHLShZoWtCox=J47TGO=wwSq7Ahn0LwMw@mail.gmail.com>
	<1396500468.13415.71.camel@mimiz>
Message-ID: <CA+s+GJDyNN=EWhhqCBvF+AL_2H2-78h+ffd21gZt+tybso8PPg@mail.gmail.com>

On Thu, Apr 3, 2014 at 6:47 AM, devrandom <c1.sf-bitcoin at niftybox.net>wrote:

> Nice!
>
> I wonder how much of this could be scripted.
>

Everything, probably, using vmbuilder (and/or vagrant as Nick Simpson
suggests). But that's not the point here. It is to provide exact steps that
people can follow to get a basic (virtual) machine that they can use to do
gitian builds.

I didn't want to end up with a gitian-builder-that-builds-a-gitian-builder
:-) The host machine may not even have any scripting languages installed
(in the case of Windows).

It may be possible to script *some* parts (most of the quoted bash script
is runnable as script) without automating the entire process, but I hope
that over time we can make Gitian itself easier to use/setup, so that less
steps are needed in the first place.

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140403/4dd280d6/attachment.html>

From nikita at megiontechnologies.com  Thu Apr  3 12:41:06 2014
From: nikita at megiontechnologies.com (Nikita Schmidt)
Date: Thu, 3 Apr 2014 16:41:06 +0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
Message-ID: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>

Matt Whitlock wrote:
> Okay, you've convinced me. However, it looks like the consensus here is
> that my BIP is unneeded, so I'm not sure it would be worth the effort
> for me to improve it with your suggestions.

I need your BIP.

We are going to implement SSS and we'd rather stick with something
publicly discussed, even if it has not formally become a BIP, than
invent our own stuff.

I'll go ahead and comment on the current proposal here.  BIP or no
BIP, I propose to finalise this spec anyway for those who want to
implement SSS now or in future.

I agree with the recently mentioned suggestion to make non-essential
metadata, namely key fingerprint and degree (M), optional.  Their
4-byte and 1-byte fields can be added individually at an
implementation's discretion.  During decoding, the total length will
determine which fields are included.

For example, as a compromise between usability and security, the
metadata can be supplied out-of-band, like in plain text accompanying
the Base-58 encoded share.

Encoding for the testnet is not specified.

Speaking of encoding, is it not wasteful to allocate three different
application/version bytes just for the sake of always starting with
'SS'?  It would be OK if it were accepted as a BIP, but merely as a
de-facto standard it should aim at minimising future chances of
collision.

I'd add a clause allowing the use of random coefficients instead of
deterministic, as long as the implementation guarantees to never make
another set of shares for the same private key or master seed.

What about using the same P256 prime as for the elliptic curve?  Just
for consistency's sake.

Also, I'm somewhat inclined towards using the actual x instead of j in
the encoding.  I find it more direct and straightforward to encode the
pair (x, y).  And x=0 can denote a special case for future extensions.
 There is no technical reason behind this, it's just for (subjective)
clarity and consistency.



From c1.sf-bitcoin at niftybox.net  Thu Apr  3 16:01:58 2014
From: c1.sf-bitcoin at niftybox.net (devrandom)
Date: Thu, 03 Apr 2014 09:01:58 -0700
Subject: [Bitcoin-development] Detailed gitian build guide
In-Reply-To: <CA+s+GJDyNN=EWhhqCBvF+AL_2H2-78h+ffd21gZt+tybso8PPg@mail.gmail.com>
References: <CA+s+GJDJRW-ydQ-93dHLShZoWtCox=J47TGO=wwSq7Ahn0LwMw@mail.gmail.com>
	<1396500468.13415.71.camel@mimiz>
	<CA+s+GJDyNN=EWhhqCBvF+AL_2H2-78h+ffd21gZt+tybso8PPg@mail.gmail.com>
Message-ID: <1396540918.13415.78.camel@mimiz>

On Thu, 2014-04-03 at 07:51 +0200, Wladimir wrote:
> 
> On Thu, Apr 3, 2014 at 6:47 AM, devrandom <c1.sf-bitcoin at niftybox.net>
> wrote:
>         Nice!
>         
>         I wonder how much of this could be scripted.
> 
> 
> Everything, probably, using vmbuilder (and/or vagrant as Nick Simpson
> suggests). But that's not the point here. It is to provide exact steps
> that people can follow to get a basic (virtual) machine that they can
> use to do gitian builds.

Understood.
> 
> I didn't want to end up with a
> gitian-builder-that-builds-a-gitian-builder :-) The host machine may
> not even have any scripting languages installed (in the case of
> Windows).

Yes, I can see the turtles there.
> 
> 
> It may be possible to script *some* parts (most of the quoted bash
> script is runnable as script) without automating the entire process,
> but I hope that over time we can make Gitian itself easier to
> use/setup, so that less steps are needed in the first place.

Understood. :)  I would definitely like to see in Gitian any
improvements that make it easier for newcomers to get started.
> 
> 
> Wladimir
> 
> 
> 

-- 
Miron / devrandom






From bip at mattwhitlock.name  Thu Apr  3 21:42:32 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Thu, 03 Apr 2014 17:42:32 -0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
Message-ID: <3837746.jqWvB0Uxrs@crushinator>

On Thursday, 3 April 2014, at 4:41 pm, Nikita Schmidt wrote:
> I agree with the recently mentioned suggestion to make non-essential
> metadata, namely key fingerprint and degree (M), optional.  Their
> 4-byte and 1-byte fields can be added individually at an
> implementation's discretion.  During decoding, the total length will
> determine which fields are included.

The fingerprint field, Hash16(K), is presently specified as a 16-bit field. Rationale: There is no need to consume 4 bytes just to allow shares to be grouped together. And if someone has more than 100 different secrets, they probably have a good system for managing their shares and won't need the hash anyway.

> Encoding for the testnet is not specified.

Hmm, is that actually needed?

> Speaking of encoding, is it not wasteful to allocate three different
> application/version bytes just for the sake of always starting with
> 'SS'?  It would be OK if it were accepted as a BIP, but merely as a
> de-facto standard it should aim at minimising future chances of
> collision.

I agree on principle, however I think the more user-acceptable behavior is for all base58-encoded Shamir shares to begin with a common prefix, such as "SS". Users are accustomed to relying on the prefix of the base58 encoding to understand what the object is: "1" for mainnet pubkey hash, "3" for mainnet script hash, "5" for uncompressed private key, "P" for passphrase-protected private key, etc.

> I'd add a clause allowing the use of random coefficients instead of
> deterministic, as long as the implementation guarantees to never make
> another set of shares for the same private key or master seed.

I'm not sure that's necessary, as this is an Informational BIP. Implementations are free to ignore it. Shares with randomly selected coefficients would work just fine in a share joiner that conforms to the BIP, so I would expect implementors to feel free to ignore the deterministic formula and use randomly selected coefficients.

> What about using the same P256 prime as for the elliptic curve?  Just
> for consistency's sake.

The initial draft of this BIP used the cyclic order (n) of the generator point on the secp256k1 elliptic curve as the modulus. The change to the present scheme was actually done for consistency's sake, so all sizes of secret can use a consistently defined modulus.

> Also, I'm somewhat inclined towards using the actual x instead of j in
> the encoding.  I find it more direct and straightforward to encode the
> pair (x, y).  And x=0 can denote a special case for future extensions.
>  There is no technical reason behind this, it's just for (subjective)
> clarity and consistency.

There is a technical reason for encoding j rather than x[j]: it allows for the first 256 shares to be encoded, rather than only the first 255 shares.

If you want a sentinel value reserved for future extensions, then you might take notice that 0xFFFF is an invalid key fingerprint, along with several other values, and also that 0xFF is an unusable value of M?2, as that would imply M=257, but the scheme can only encode up to 256 shares, so one would never have enough shares to meet the threshold. I considered having the two optional fields be mandatory and allowing 0xFFFF and 0xFF as "redacted" field values, but I like allowing the shares to be shorter if the optional fields are omitted. (Imagine engraving Shamir secret shares onto metal bars by hand with an engraving tool. Fewer characters is better!)




From jgarzik at bitpay.com  Fri Apr  4 02:38:09 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Thu, 3 Apr 2014 22:38:09 -0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <1701822.mCYDUGhe8d@crushinator>
References: <CACsn0ckScTWG4YxNCscxvtdsmcUkxtR2Gi-rdBs2HCkirPz5rA@mail.gmail.com>
	<2135731.4HGHfZWzo5@crushinator> <53370C11.7040109@gmail.com>
	<1701822.mCYDUGhe8d@crushinator>
Message-ID: <CAJHLa0Mvxa0BmTiZrB9PSkGNJ_XDrv3+eVu1NqyRKhKMGyr+OQ@mail.gmail.com>

On Sat, Mar 29, 2014 at 2:10 PM, Matt Whitlock <bip at mattwhitlock.name> wrote:
> Okay, you've convinced me. However, it looks like the consensus here is that my BIP is unneeded, so I'm not sure it would be worth the effort for me to improve it with your suggestions.

Discussion of whether you should or should not use SSS is separate
from whether you should or should not write a BIP.

If people are using SSS in the field, it is better to write a BIP than
not.  Informational BIPs describing existing practice can be useful.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From bitcoin-devel at jerviss.org  Fri Apr  4 03:41:36 2014
From: bitcoin-devel at jerviss.org (kjj)
Date: Thu, 03 Apr 2014 22:41:36 -0500
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <1784069.HYVIiriube@crushinator>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
	<1784069.HYVIiriube@crushinator>
Message-ID: <533E29F0.1080901@jerviss.org>

Matt Whitlock wrote:
> The creation date in your BIP header has the wrong format. It should be 01-04-2014, per BIP 1.
>
At first, I thought this was a second April Fool's joke, but then I 
looked and saw that all of the BIPs really do use this format.  As far 
as I can tell, we are using this insane format because RFC 822 predates 
ISO 8601 by half a decade.

Since we don't have half a gajillion mail servers to patch, we could, if 
we desired, adopt a sensible date format here.  The cost to the 
community would be minimal, with probably not more than a half dozen 
people needing to update scripts.  It could even be as simple as one guy 
running sed s/parseabomination/parsedate/g



From laanwj at gmail.com  Fri Apr  4 07:01:48 2014
From: laanwj at gmail.com (Wladimir)
Date: Fri, 4 Apr 2014 09:01:48 +0200
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <533E29F0.1080901@jerviss.org>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
	<1784069.HYVIiriube@crushinator> <533E29F0.1080901@jerviss.org>
Message-ID: <CA+s+GJBr-UOqYFGVpann-yUkmB5oj4a7fu=GKw-34+4UMbsP1g@mail.gmail.com>

On Fri, Apr 4, 2014 at 5:41 AM, kjj <bitcoin-devel at jerviss.org> wrote:

> Matt Whitlock wrote:
> > The creation date in your BIP header has the wrong format. It should be
> 01-04-2014, per BIP 1.
> >
> At first, I thought this was a second April Fool's joke, but then I
> looked and saw that all of the BIPs really do use this format.  As far
> as I can tell, we are using this insane format because RFC 822 predates
> ISO 8601 by half a decade.
>
> Since we don't have half a gajillion mail servers to patch, we could, if
> we desired, adopt a sensible date format here.  The cost to the
> community would be minimal, with probably not more than a half dozen
> people needing to update scripts.  It could even be as simple as one guy
> running sed s/parseabomination/parsedate/g
>

BIPs were based on Python PIPs, PIPs use this same ordering but spell out
the month like '1-Oct-2000'. This is slightly more readable than our format.

http://legacy.python.org/dev/peps/pep-0453/

But to make it more confusing they have two different date conventions
within the header (one for the modified date, and one for the created date).

Personally I'd prefer to standardize on ISO 8601 (YYYY-MM-DD) dates as well.

Feel free to submit a pull against bips/bips that changes around the dates.

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/70a5278c/attachment.html>

From elarch at gmail.com  Fri Apr  4 12:15:56 2014
From: elarch at gmail.com (=?ISO-8859-1?Q?Eric_Larchev=EAque?=)
Date: Fri, 4 Apr 2014 14:15:56 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website authentication
	using Bitcoin address
Message-ID: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>

Hello,

I've written a draft BIP description of an authentication protocol based on
Bitcoin public address.

By authentication we mean to prove to a service/application that we control
a specific Bitcoin address by signing a challenge, and that all related
data and settings may securely be linked to our session.

The aim is to greatly facilitate sign ups and logins to services and
applications, improving the Bitcoin ecosystem as a whole.

https://github.com/bitid/bitid/blob/master/BIP_draft.md

Demo website :
http://bitid-demo.herokuapp.com/

Classical password authentication is an insecure process that could be
solved with public key cryptography. The problem is that it theoretically
offloads a lot of complexity and responsibility on the user. Managing
private keys securely is complex. However this complexity is already being
addressed in the Bitcoin ecosystem. So doing public key authentication is
practically a free lunch to bitcoiners.

I've formatted the protocol description as a BIP because this is the only
way to have all major wallets implementing it, and because it completely
fits in my opinion the BIP "process" category.

Please read it and let me know your thoughts and comments so we can improve
on this draft.

Eric Larcheveque
elarch at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/78771884/attachment.html>

From mike at plan99.net  Fri Apr  4 13:08:57 2014
From: mike at plan99.net (Mike Hearn)
Date: Fri, 4 Apr 2014 15:08:57 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
Message-ID: <CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>

This comes up every few months. I think the problem you are trying to solve
is already solved by SSL client certificates, and if you want to help make
them more widespread the programs you need to upgrade are web browsers and
not Bitcoin wallets. There are certainly bits of infrastructure you could
reuse here and there, like perhaps a TREZOR with a custom firmware
extension for really advanced/keen users, but overall Bitcoin and website
authentication are unrelated problems.


On Fri, Apr 4, 2014 at 2:15 PM, Eric Larchev?que <elarch at gmail.com> wrote:

> Hello,
>
> I've written a draft BIP description of an authentication protocol based
> on Bitcoin public address.
>
> By authentication we mean to prove to a service/application that we
> control a specific Bitcoin address by signing a challenge, and that all
> related data and settings may securely be linked to our session.
>
> The aim is to greatly facilitate sign ups and logins to services and
> applications, improving the Bitcoin ecosystem as a whole.
>
> https://github.com/bitid/bitid/blob/master/BIP_draft.md
>
> Demo website :
> http://bitid-demo.herokuapp.com/
>
> Classical password authentication is an insecure process that could be
> solved with public key cryptography. The problem is that it theoretically
> offloads a lot of complexity and responsibility on the user. Managing
> private keys securely is complex. However this complexity is already being
> addressed in the Bitcoin ecosystem. So doing public key authentication is
> practically a free lunch to bitcoiners.
>
> I've formatted the protocol description as a BIP because this is the only
> way to have all major wallets implementing it, and because it completely
> fits in my opinion the BIP "process" category.
>
> Please read it and let me know your thoughts and comments so we can
> improve on this draft.
>
> Eric Larcheveque
> elarch at gmail.com
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/99be34a9/attachment.html>

From jgarzik at bitpay.com  Fri Apr  4 13:19:33 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Fri, 4 Apr 2014 09:19:33 -0400
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <CA+s+GJBr-UOqYFGVpann-yUkmB5oj4a7fu=GKw-34+4UMbsP1g@mail.gmail.com>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
	<1784069.HYVIiriube@crushinator> <533E29F0.1080901@jerviss.org>
	<CA+s+GJBr-UOqYFGVpann-yUkmB5oj4a7fu=GKw-34+4UMbsP1g@mail.gmail.com>
Message-ID: <CAJHLa0P9SmynBfJ94A1js30j2OsC0PeEhEy-n+6Wa2Sogo+TNw@mail.gmail.com>

On Fri, Apr 4, 2014 at 3:01 AM, Wladimir <laanwj at gmail.com> wrote:
> Personally I'd prefer to standardize on ISO 8601 (YYYY-MM-DD) dates as well.

+1 for all-numeric, easily computer parse-able without a lookup table,
and naturally sorts correctly in a lexicographic sort.

English (or any language) should never be in a date format, on a computer.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From elarch at gmail.com  Fri Apr  4 13:22:59 2014
From: elarch at gmail.com (=?ISO-8859-1?Q?Eric_Larchev=EAque?=)
Date: Fri, 4 Apr 2014 15:22:59 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
Message-ID: <CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>

What I'm trying to achieve, is to have a very simple way of authenticating
yourself with one Bitcoin address from your wallet.
For most of the people using Bitcoin, their wallet is on their phone.

The UX is clear and simple :
1. click on "connect with Bitcoin" (the audience is normal people)
2. flash the QRcode with your wallet (blockchain.info, mycelium, ...)
3. accept the authentication request (same style than OpenID or Facebook
connect)
4. user is autologged and identified by the chosen Bitcoin public address

It makes sense only if major wallets are supporting the protocol. If you
need to install a plugin or download a third party software, no one will do
it.
I see only benefits for the entire ecosystem, and if I'm working on such a
proposition it is because I really need this feature.

Of course, it can be done without a BIP, I just need to convince wallet
developpers one by one to implement the feature.
But I thought it was much better to start the "official" way, so all wallet
could easily find and implement the same authentication mechanism.

>  Bitcoin and website authentication are unrelated problems

I respectfully disagree. Many services require your Bitcoin address, and to
do that they artificially request an email/password to store it.
This is not about authentication as an identity (as "I'm Eric
Larcheveque"), but as in "I'm proving to you that I control this address".

Without such a standard protocol, you could never envision a pure Bitcoin
physical locker rental, or booking an hotel room via Bitcoin and opening
the door through the paying address.

Eric



On Fri, Apr 4, 2014 at 3:08 PM, Mike Hearn <mike at plan99.net> wrote:

> This comes up every few months. I think the problem you are trying to
> solve is already solved by SSL client certificates, and if you want to help
> make them more widespread the programs you need to upgrade are web browsers
> and not Bitcoin wallets. There are certainly bits of infrastructure you
> could reuse here and there, like perhaps a TREZOR with a custom firmware
> extension for really advanced/keen users, but overall Bitcoin and website
> authentication are unrelated problems.
>
>
> On Fri, Apr 4, 2014 at 2:15 PM, Eric Larchev?que <elarch at gmail.com> wrote:
>
>> Hello,
>>
>> I've written a draft BIP description of an authentication protocol based
>> on Bitcoin public address.
>>
>> By authentication we mean to prove to a service/application that we
>> control a specific Bitcoin address by signing a challenge, and that all
>> related data and settings may securely be linked to our session.
>>
>> The aim is to greatly facilitate sign ups and logins to services and
>> applications, improving the Bitcoin ecosystem as a whole.
>>
>> https://github.com/bitid/bitid/blob/master/BIP_draft.md
>>
>> Demo website :
>> http://bitid-demo.herokuapp.com/
>>
>> Classical password authentication is an insecure process that could be
>> solved with public key cryptography. The problem is that it theoretically
>> offloads a lot of complexity and responsibility on the user. Managing
>> private keys securely is complex. However this complexity is already being
>> addressed in the Bitcoin ecosystem. So doing public key authentication is
>> practically a free lunch to bitcoiners.
>>
>> I've formatted the protocol description as a BIP because this is the only
>> way to have all major wallets implementing it, and because it completely
>> fits in my opinion the BIP "process" category.
>>
>> Please read it and let me know your thoughts and comments so we can
>> improve on this draft.
>>
>> Eric Larcheveque
>> elarch at gmail.com
>>
>>
>>
>> ------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/caca26c8/attachment.html>

From gavinandresen at gmail.com  Fri Apr  4 13:32:40 2014
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Fri, 4 Apr 2014 09:32:40 -0400
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
Message-ID: <CABsx9T0FJGn3a+JjiLK6yhLN4psqgqhX766FY+5r-mK9v_aYnw@mail.gmail.com>

Using a bitcoin address repeatedly is something we're trying to move away
from.

And using a bitcoin address as a persistent identity key feels like the
wrong direction to me.

Better to use something like client certificates, the FIDO alliance's
(new!) specs:
  http://fidoalliance.org/specifications/download

... or Steve Gibson's proposed SQRL system:
  https://www.grc.com/sqrl/sqrl.htm

If one of those systems gets critical mass and actually starts being
successful, then I think it would make sense to specify a standard way of
using a HD wallet's deterministic seed to derive a key used for the FIDO or
SQRL systems.




On Fri, Apr 4, 2014 at 9:22 AM, Eric Larchev?que <elarch at gmail.com> wrote:

> What I'm trying to achieve, is to have a very simple way of authenticating
> yourself with one Bitcoin address from your wallet.
> For most of the people using Bitcoin, their wallet is on their phone.
>
> The UX is clear and simple :
> 1. click on "connect with Bitcoin" (the audience is normal people)
> 2. flash the QRcode with your wallet (blockchain.info, mycelium, ...)
> 3. accept the authentication request (same style than OpenID or Facebook
> connect)
> 4. user is autologged and identified by the chosen Bitcoin public address
>
> It makes sense only if major wallets are supporting the protocol. If you
> need to install a plugin or download a third party software, no one will do
> it.
> I see only benefits for the entire ecosystem, and if I'm working on such a
> proposition it is because I really need this feature.
>
> Of course, it can be done without a BIP, I just need to convince wallet
> developpers one by one to implement the feature.
> But I thought it was much better to start the "official" way, so all
> wallet could easily find and implement the same authentication mechanism.
>
> >  Bitcoin and website authentication are unrelated problems
>
> I respectfully disagree. Many services require your Bitcoin address, and
> to do that they artificially request an email/password to store it.
> This is not about authentication as an identity (as "I'm Eric
> Larcheveque"), but as in "I'm proving to you that I control this address".
>
> Without such a standard protocol, you could never envision a pure Bitcoin
> physical locker rental, or booking an hotel room via Bitcoin and opening
> the door through the paying address.
>
> Eric
>
>
>
> On Fri, Apr 4, 2014 at 3:08 PM, Mike Hearn <mike at plan99.net> wrote:
>
>> This comes up every few months. I think the problem you are trying to
>> solve is already solved by SSL client certificates, and if you want to help
>> make them more widespread the programs you need to upgrade are web browsers
>> and not Bitcoin wallets. There are certainly bits of infrastructure you
>> could reuse here and there, like perhaps a TREZOR with a custom firmware
>> extension for really advanced/keen users, but overall Bitcoin and website
>> authentication are unrelated problems.
>>
>>
>> On Fri, Apr 4, 2014 at 2:15 PM, Eric Larchev?que <elarch at gmail.com>wrote:
>>
>>> Hello,
>>>
>>> I've written a draft BIP description of an authentication protocol based
>>> on Bitcoin public address.
>>>
>>> By authentication we mean to prove to a service/application that we
>>> control a specific Bitcoin address by signing a challenge, and that all
>>> related data and settings may securely be linked to our session.
>>>
>>> The aim is to greatly facilitate sign ups and logins to services and
>>> applications, improving the Bitcoin ecosystem as a whole.
>>>
>>> https://github.com/bitid/bitid/blob/master/BIP_draft.md
>>>
>>> Demo website :
>>> http://bitid-demo.herokuapp.com/
>>>
>>> Classical password authentication is an insecure process that could be
>>> solved with public key cryptography. The problem is that it theoretically
>>> offloads a lot of complexity and responsibility on the user. Managing
>>> private keys securely is complex. However this complexity is already being
>>> addressed in the Bitcoin ecosystem. So doing public key authentication is
>>> practically a free lunch to bitcoiners.
>>>
>>> I've formatted the protocol description as a BIP because this is the
>>> only way to have all major wallets implementing it, and because it
>>> completely fits in my opinion the BIP "process" category.
>>>
>>> Please read it and let me know your thoughts and comments so we can
>>> improve on this draft.
>>>
>>> Eric Larcheveque
>>> elarch at gmail.com
>>>
>>>
>>>
>>> ------------------------------------------------------------------------------
>>>
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>>
>>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>


-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/a545ece6/attachment.html>

From mike at plan99.net  Fri Apr  4 13:43:13 2014
From: mike at plan99.net (Mike Hearn)
Date: Fri, 4 Apr 2014 15:43:13 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
Message-ID: <CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>

On Fri, Apr 4, 2014 at 3:22 PM, Eric Larchev?que <elarch at gmail.com> wrote:

> I see only benefits for the entire ecosystem, and if I'm working on such a
> proposition it is because I really need this feature.
>

Why do you need it? Because you don't want to implement a login system?
Very, very few websites are the sort of place where they'd want to
authenticate with only a Bitcoin address. If for no other reason than
they'd have no way to email you, and if you lost your wallet, you'd lose
all your associated data.


> Without such a standard protocol, you could never envision a pure Bitcoin
> physical locker rental, or booking an hotel room via Bitcoin and opening
> the door through the paying address.
>

In future there often won't be a simple paying address. For instance, if my
coins are in a multi-sig relationship with a risk analysis service, there
will be two keys for each input and an arbitrary number of inputs. So does
that mean the risk analysis service gets to open my locker? Why?

What if I do a shared spend/CoinJoin type tx? Now anyone who took part in
the shared tx with me can get into my hotel room too?

These are the kinds of problems that crop up when you mix together two
different things: the act of paying, and the act of identifying yourself.
You're assuming that replacing a password people can remember with a
physical token (their phone) which can be stolen or lost, would be seen as
an upgrade. Given a choice between two physical lockers, one of which lets
me open it with a password and one of which insists on a cryptographic
token, I'm going to go for the former because the chances of me losing my
phone is much higher than me forgetting my password.

All the tools you need already exist in the form of client certificates,
with the advantage that web servers and web browsers already support them.
The biggest pain point with them is backup and cross-device sync, which of
course wallets suffer from too!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/3477a62d/attachment.html>

From elarch at gmail.com  Fri Apr  4 13:47:45 2014
From: elarch at gmail.com (=?ISO-8859-1?Q?Eric_Larchev=EAque?=)
Date: Fri, 4 Apr 2014 15:47:45 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CABsx9T0FJGn3a+JjiLK6yhLN4psqgqhX766FY+5r-mK9v_aYnw@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CABsx9T0FJGn3a+JjiLK6yhLN4psqgqhX766FY+5r-mK9v_aYnw@mail.gmail.com>
Message-ID: <CA+WZAEqcMoyWp_XKPCzVWPYbUnfRO539+rFh1QS5LQUq_pTkdA@mail.gmail.com>

> Using a bitcoin address repeatedly is something we're trying to move away
from.

This is indeed a flaw of the proposed protocol. However it really depends
in the end of the usage : you could use an auth just once, to redeem a good
you paid, or multiple times if this makes a sense (mining pool app for
instance).

> And using a bitcoin address as a persistent identity key feels like the
wrong direction to me.

What would be really the difference between artificially create a
certificate for identity and selecting one address for identity?

> Better to use something like client certificates, the FIDO alliance's
(new!) specs:
>   http://fidoalliance.org/specifications/download
> ... or Steve Gibson's proposed SQRL system:
>   https://www.grc.com/sqrl/sqrl.htm

The proposal is nothing more than sqrl scoped to Bitcoin keys.

> If one of those systems gets critical mass and actually starts being
successful, then I think it would make sense to specify a standard way of
using a HD wallet's deterministic seed to derive a key used for the FIDO or
SQRL systems.

This could be a very interesting approach. But I think the system which
would get critical mass is the one which would be implemented into major
Bitcoin wallets.

Why adding another app or software when you already have all you need?

>
>
>
>
> On Fri, Apr 4, 2014 at 9:22 AM, Eric Larchev?que <elarch at gmail.com> wrote:
>>
>> What I'm trying to achieve, is to have a very simple way of
authenticating yourself with one Bitcoin address from your wallet.
>> For most of the people using Bitcoin, their wallet is on their phone.
>>
>> The UX is clear and simple :
>> 1. click on "connect with Bitcoin" (the audience is normal people)
>> 2. flash the QRcode with your wallet (blockchain.info, mycelium, ...)
>> 3. accept the authentication request (same style than OpenID or Facebook
connect)
>> 4. user is autologged and identified by the chosen Bitcoin public address
>>
>> It makes sense only if major wallets are supporting the protocol. If you
need to install a plugin or download a third party software, no one will do
it.
>> I see only benefits for the entire ecosystem, and if I'm working on such
a proposition it is because I really need this feature.
>>
>> Of course, it can be done without a BIP, I just need to convince wallet
developpers one by one to implement the feature.
>> But I thought it was much better to start the "official" way, so all
wallet could easily find and implement the same authentication mechanism.
>>
>> >  Bitcoin and website authentication are unrelated problems
>>
>> I respectfully disagree. Many services require your Bitcoin address, and
to do that they artificially request an email/password to store it.
>> This is not about authentication as an identity (as "I'm Eric
Larcheveque"), but as in "I'm proving to you that I control this address".
>>
>> Without such a standard protocol, you could never envision a pure
Bitcoin physical locker rental, or booking an hotel room via Bitcoin and
opening the door through the paying address.
>>
>> Eric
>>
>>
>>
>> On Fri, Apr 4, 2014 at 3:08 PM, Mike Hearn <mike at plan99.net> wrote:
>>>
>>> This comes up every few months. I think the problem you are trying to
solve is already solved by SSL client certificates, and if you want to help
make them more widespread the programs you need to upgrade are web browsers
and not Bitcoin wallets. There are certainly bits of infrastructure you
could reuse here and there, like perhaps a TREZOR with a custom firmware
extension for really advanced/keen users, but overall Bitcoin and website
authentication are unrelated problems.
>>>
>>>
>>> On Fri, Apr 4, 2014 at 2:15 PM, Eric Larchev?que <elarch at gmail.com>
wrote:
>>>>
>>>> Hello,
>>>>
>>>> I've written a draft BIP description of an authentication protocol
based on Bitcoin public address.
>>>>
>>>> By authentication we mean to prove to a service/application that we
control a specific Bitcoin address by signing a challenge, and that all
related data and settings may securely be linked to our session.
>>>>
>>>> The aim is to greatly facilitate sign ups and logins to services and
applications, improving the Bitcoin ecosystem as a whole.
>>>>
>>>> https://github.com/bitid/bitid/blob/master/BIP_draft.md
>>>>
>>>> Demo website :
>>>> http://bitid-demo.herokuapp.com/
>>>>
>>>> Classical password authentication is an insecure process that could be
solved with public key cryptography. The problem is that it theoretically
offloads a lot of complexity and responsibility on the user. Managing
private keys securely is complex. However this complexity is already being
addressed in the Bitcoin ecosystem. So doing public key authentication is
practically a free lunch to bitcoiners.
>>>>
>>>> I've formatted the protocol description as a BIP because this is the
only way to have all major wallets implementing it, and because it
completely fits in my opinion the BIP "process" category.
>>>>
>>>> Please read it and let me know your thoughts and comments so we can
improve on this draft.
>>>>
>>>> Eric Larcheveque
>>>> elarch at gmail.com
>>>>
>>>>
>>>>
------------------------------------------------------------------------------
>>>>
>>>> _______________________________________________
>>>> Bitcoin-development mailing list
>>>> Bitcoin-development at lists.sourceforge.net
>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>
>>>
>>
>>
>>
------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
>
> --
> --
> Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/f2c5cf7a/attachment.html>

From jgarzik at bitpay.com  Fri Apr  4 13:47:56 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Fri, 4 Apr 2014 09:47:56 -0400
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
Message-ID: <CAJHLa0PeD6Fkc1N=JSqmC0cNjPNxZ8p5qCMr1+E--JUeUFdhZQ@mail.gmail.com>

On Fri, Apr 4, 2014 at 9:43 AM, Mike Hearn <mike at plan99.net> wrote:
> These are the kinds of problems that crop up when you mix together two
> different things: the act of paying, and the act of identifying yourself.

This is precisely why SINs use a different version byte from bitcoin
addresses.  There should never be any confusion between money/payments
and identity.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From nikita at megiontechnologies.com  Fri Apr  4 13:51:07 2014
From: nikita at megiontechnologies.com (Nikita Schmidt)
Date: Fri, 4 Apr 2014 17:51:07 +0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <3837746.jqWvB0Uxrs@crushinator>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<3837746.jqWvB0Uxrs@crushinator>
Message-ID: <CAC7yFxQXn=c7CEC326yMx4bF7Cv7Gc62shS7xU0XvSp5sQSGZw@mail.gmail.com>

On 4 April 2014 01:42, Matt Whitlock <bip at mattwhitlock.name> wrote:
> The fingerprint field, Hash16(K), is presently specified as a 16-bit field. Rationale: There is no need to consume 4 bytes just to allow shares to be grouped together. And if someone has more than 100 different secrets, they probably have a good system for managing their shares and won't need the hash anyway.

Right, of course.  Sorry, I didn't notice there was an update.  Two
bytes are plenty.

I'm worried however about the dependency on SHA-512, which may be
stretching it for a tiny embedded application.  The other uses of
HashL can be avoided.  We are balancing here between consistency with
the rest of this proposal, where everything is done via HashL, and
consistency with the general practice of generating fingerprints with
SHA-256, like in Base58Check.

Similarly, re-assembly software suddenly finds itself having to
implement Hash16 just to check this particular fingerprint.  So I'd
vote for a more traditional approach here, also considering that HashL
is designed specifically to generate numbers in a finite field.

>
>> Encoding for the testnet is not specified.
>
> Hmm, is that actually needed?

It's been a tradition to support it in general, however I guess it's
not really needed here.  I'm happy without a dedicated testnet
encoding.

>
>> Speaking of encoding, is it not wasteful to allocate three different
>> application/version bytes just for the sake of always starting with
>> 'SS'?  It would be OK if it were accepted as a BIP, but merely as a
>> de-facto standard it should aim at minimising future chances of
>> collision.
>
> I agree on principle, however I think the more user-acceptable behavior is for all base58-encoded Shamir shares to begin with a common prefix, such as "SS". Users are accustomed to relying on the prefix of the base58 encoding to understand what the object is: "1" for mainnet pubkey hash, "3" for mainnet script hash, "5" for uncompressed private key, "P" for passphrase-protected private key, etc.

Yes, "5" for uncompressed private key and "K" or "L" for compressed
private key.  One A/VB and three prefixes in base58.  Am I the only
one to see this as a counter-example?

However, thinking about this, I can find logic in wanting to stabilise
text prefixes at a cost of six A/V bytes (as per the latest spec).
There are only 58 first characters versus 256 AVBs, so we should
rather be saving the former.

>> What about using the same P256 prime as for the elliptic curve?  Just
>> for consistency's sake.
>
> The initial draft of this BIP used the cyclic order (n) of the generator point on the secp256k1 elliptic curve as the modulus. The change to the present scheme was actually done for consistency's sake, so all sizes of secret can use a consistently defined modulus.

Fair enough.  Although I would have chosen the field order (p) simply
because that's how all arithmetic already works in bitcoin.  One field
for everybody.  It's also very close to 2^256, although still smaller
than your maximum prime.  Now of course with different bit lengths we
have to pick one consistency over others.

>
>> Also, I'm somewhat inclined towards using the actual x instead of j in
>> the encoding.  I find it more direct and straightforward to encode the
>> pair (x, y).  And x=0 can denote a special case for future extensions.
>>  There is no technical reason behind this, it's just for (subjective)
>> clarity and consistency.
>
> There is a technical reason for encoding j rather than x[j]: it allows for the first 256 shares to be encoded, rather than only the first 255 shares.

Wow, big deal.  It's hard to imagine anyone needing exactly 256
shares, but who knows.  And with j = x (starting from 1) we'd get
user-friendly share numbering and simpler formulas in the spec and
possibly in the implementation, with no off-by-one stuff.  And M
instead of M-2...

>
> If you want a sentinel value reserved for future extensions, then you might take notice that 0xFFFF is an invalid key fingerprint, along with several other values, and also that 0xFF is an unusable value of M-2, as that would imply M=257, but the scheme can only encode up to 256 shares, so one would never have enough shares to meet the threshold. I considered having the two optional fields be mandatory and allowing 0xFFFF and 0xFF as "redacted" field values, but I like allowing the shares to be shorter if the optional fields are omitted. (Imagine engraving Shamir secret shares onto metal bars by hand with an engraving tool. Fewer characters is better!)

Exactly.  Thank you.  Without these fields, a secret share still fits
into a 29x29 QR code.  Add one more byte and it'll need a 33x33.
Imagine engraving that onto metal plates!  Or the hassle of going
above 32 bits per line in a tiny embedded system.



From mike at plan99.net  Fri Apr  4 13:54:52 2014
From: mike at plan99.net (Mike Hearn)
Date: Fri, 4 Apr 2014 15:54:52 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
Message-ID: <CANEZrP2Z5x0_kOQ=8-BMzbmi9=D=ou=s3dgEksMA5F84BHSt9A@mail.gmail.com>

>
> What if I do a shared spend/CoinJoin type tx? Now anyone who took part in
> the shared tx with me can get into my hotel room too?
>

Oh, if these seem too abstract, also consider bitbanks. In an ideal world
nobody would outsource running of their Bitcoin wallet, but sadly people
do, so then they don't control the private keys at all.

The goal of writing a BIP seems to be to get lots of different wallet
authors to write lots of code for you - but I *am* a wallet author, and I
don't think that's the right way to get traction with a new scheme. For
instance the TREZOR guys would have to support your new protocol otherwise
if I paid my hotel bill with my TREZOR I couldn't open the door when I got
there! But they probably have better things to be doing right now.

The key difference between just generating a client certificate and using a
Bitcoin address is that the client certificate is something that is used
*specifically* for identification. It leaves no trace in the block chain,
so no weird privacy issues, it doesn't matter how you manage your wallet,
and you don't have to persuade lots of people to support your idea because
it was already done >10 years ago and basically every browser/web server
supports it.

Some reasons client certs aren't more widely used boil down to:

   1. People like passwords. In particular they like forgetting them and
   then having friendly people assist them to get it back. Client certs can
   support this use case, but only if apps are checking the identity in them
   and not the key.
   2. The UI for managing client certs in browsers is pretty horrible.
   There's little incentive to improve it because of (1).
   3. Cross-device sync doesn't work very well. Apple are starting to
   tackle this with their iCloud Keychain Sync service but then of course,
   Apple has all your keys and you may well just sign in to things with your
   Apple account (if it were to be supported). Cross-device sync where the
   server *doesn't* get your keys is supported by Chrome for passwords, but
   not client certs, because (1)

None of the above issues have any obvious fix lurking within Bitcoin.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/bbeaf3b0/attachment.html>

From gmaxwell at gmail.com  Fri Apr  4 14:14:12 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Fri, 4 Apr 2014 07:14:12 -0700
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <CAC7yFxQXn=c7CEC326yMx4bF7Cv7Gc62shS7xU0XvSp5sQSGZw@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<3837746.jqWvB0Uxrs@crushinator>
	<CAC7yFxQXn=c7CEC326yMx4bF7Cv7Gc62shS7xU0XvSp5sQSGZw@mail.gmail.com>
Message-ID: <CAAS2fgQd6_DAPnYtXUKN8sL=MfrySBaRZWHfPtoKUw=p2=9OYA@mail.gmail.com>

On Fri, Apr 4, 2014 at 6:51 AM, Nikita Schmidt
<nikita at megiontechnologies.com> wrote:
> Fair enough.  Although I would have chosen the field order (p) simply
> because that's how all arithmetic already works in bitcoin.  One field
> for everybody.  It's also very close to 2^256, although still smaller
> than your maximum prime.  Now of course with different bit lengths we
> have to pick one consistency over others.

Operation mod the group order is how secret keys must be combined in
type-2 private derivation for BIP-32. It's also absolutely essential
if you want to build a secret sharing scheme in which the shares are
usable for threshold ECDSA.

I still repeat my concern that any private key secret sharing scheme
really ought to be compatible with threshold ECDSA, otherwise we're
just going to have another redundant specification.



From elarch at gmail.com  Fri Apr  4 14:42:56 2014
From: elarch at gmail.com (=?ISO-8859-1?Q?Eric_Larchev=EAque?=)
Date: Fri, 4 Apr 2014 16:42:56 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CANEZrP2Z5x0_kOQ=8-BMzbmi9=D=ou=s3dgEksMA5F84BHSt9A@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
	<CANEZrP2Z5x0_kOQ=8-BMzbmi9=D=ou=s3dgEksMA5F84BHSt9A@mail.gmail.com>
Message-ID: <CA+WZAEqREDkDvmhM7AY+Ju3fkm3uOGm39Ef9+SYoEr43ybbg2Q@mail.gmail.com>

>
> The goal of writing a BIP seems to be to get lots of different wallet
> authors to write lots of code for you - but I *am* a wallet author, and I
> don't think that's the right way to get traction with a new scheme.
>

I started without a BIP and the feedback I got is that I should to a BIP.
We cannot write all the code for all the wallets ; this is after all a
communauty project.
However we have and we will propose bounties for each wallet to support
natively the protocol.


> For instance the TREZOR guys would have to support your new protocol
> otherwise if I paid my hotel bill with my TREZOR I couldn't open the door
> when I got there! But they probably have better things to be doing right
> now.
>

Yes you are right. But if the concept of authenticating yourself gets
traction, they will probably do it.


> The key difference between just generating a client certificate and using
> a Bitcoin address is that the client certificate is something that is used
> *specifically* for identification. It leaves no trace in the block chain,
> so no weird privacy issues, it doesn't matter how you manage your wallet,
> and you don't have to persuade lots of people to support your idea because
> it was already done >10 years ago and basically every browser/web server
> supports it.
>

My view on this is mainly about the UX and the fact everyone in Bitcoinland
has a wallet.
It's a approach leveraging this fact, with the possibility to build
interesting apps combining address auth and the blockchain.

I understand the problems related to multisig, contracts etc,
There is no such thing as a from address in a transaction, however many
services still take first tx as the return address.
People will always find way of building and doing stuff (cf the message in
the blockchain debate).


> Some reasons client certs aren't more widely used boil down to:
>
>    1. People like passwords. In particular they like forgetting them and
>    then having friendly people assist them to get it back. Client certs can
>    support this use case, but only if apps are checking the identity in them
>    and not the key.
>    2. The UI for managing client certs in browsers is pretty horrible.
>    There's little incentive to improve it because of (1).
>    3. Cross-device sync doesn't work very well. Apple are starting to
>    tackle this with their iCloud Keychain Sync service but then of course,
>    Apple has all your keys and you may well just sign in to things with your
>    Apple account (if it were to be supported). Cross-device sync where the
>    server *doesn't* get your keys is supported by Chrome for passwords,
>    but not client certs, because (1)
>
> None of the above issues have any obvious fix lurking within Bitcoin.
>

There is also the benefit of revocation with certificate and central
authority.

But, again, you already have a wallet and a Bitcoin address.
So if you add a simple auth protocol, people will use it at no cost.

Eric
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/9e6d4ffc/attachment.html>

From mike at plan99.net  Fri Apr  4 14:51:07 2014
From: mike at plan99.net (Mike Hearn)
Date: Fri, 4 Apr 2014 16:51:07 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CA+WZAEqREDkDvmhM7AY+Ju3fkm3uOGm39Ef9+SYoEr43ybbg2Q@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
	<CANEZrP2Z5x0_kOQ=8-BMzbmi9=D=ou=s3dgEksMA5F84BHSt9A@mail.gmail.com>
	<CA+WZAEqREDkDvmhM7AY+Ju3fkm3uOGm39Ef9+SYoEr43ybbg2Q@mail.gmail.com>
Message-ID: <CANEZrP15xWWq2jU5yKjG+9hp___OovtbH+vM5KkzFcaQ=koRow@mail.gmail.com>

>
> My view on this is mainly about the UX and the fact everyone in
> Bitcoinland has a wallet.
>

Well, yes, but we also have browsers too :)

I don't want to suggest the problem is unimportant - I'd love it if the
world could move beyond passwords. But I have many scars from my time in
the Google account swamps. We had a big team, lots of resources and even
just getting people to use their phone as a second factor - *the simplest
second factor possible* - was a huge uphill battle that most users just
didn't care about. People like passwords. If you can find a way to make
something that's better than a password but just as convenient, fantastic!
But I don't think Bitcoin addresses are such a thing.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/9bb59940/attachment.html>

From elarch at gmail.com  Fri Apr  4 14:56:10 2014
From: elarch at gmail.com (=?ISO-8859-1?Q?Eric_Larchev=EAque?=)
Date: Fri, 4 Apr 2014 16:56:10 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CANEZrP15xWWq2jU5yKjG+9hp___OovtbH+vM5KkzFcaQ=koRow@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
	<CANEZrP2Z5x0_kOQ=8-BMzbmi9=D=ou=s3dgEksMA5F84BHSt9A@mail.gmail.com>
	<CA+WZAEqREDkDvmhM7AY+Ju3fkm3uOGm39Ef9+SYoEr43ybbg2Q@mail.gmail.com>
	<CANEZrP15xWWq2jU5yKjG+9hp___OovtbH+vM5KkzFcaQ=koRow@mail.gmail.com>
Message-ID: <CA+WZAEpwBqucw7kOFrRn_TsnVGaY0-hm4Xv64_i7LweEzQ=oGw@mail.gmail.com>

On Fri, Apr 4, 2014 at 4:51 PM, Mike Hearn <mike at plan99.net> wrote:

>  My view on this is mainly about the UX and the fact everyone in
>> Bitcoinland has a wallet.
>>
>
> Well, yes, but we also have browsers too :)
>
>
Yes, but no one will ever install a plug in.
And all will update their wallets with the last version, including the auth
protocol.


> I don't want to suggest the problem is unimportant - I'd love it if the
> world could move beyond passwords. But I have many scars from my time in
> the Google account swamps. We had a big team, lots of resources and even
> just getting people to use their phone as a second factor - *the simplest
> second factor possible* - was a huge uphill battle that most users just
> didn't care about. People like passwords. If you can find a way to make
> something that's better than a password but just as convenient, fantastic!
> But I don't think Bitcoin addresses are such a thing.
>

I perfectly understand all the objections, and they are very good points.

I have at least two wallets enthousiastic about the project so the protocol
will be implemented and it will give some room to experiment.
The BIP came from the idea we should formalize the standard so all wallets
could participate, and it felt more logical to come forward with it.

Maybe a better strategy would be to start "privately" with a few wallets
and services using the protocol, and to come back to the BIP there is
usability and traction.

Eric
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/c8740919/attachment.html>

From elarch at gmail.com  Fri Apr  4 15:03:20 2014
From: elarch at gmail.com (=?ISO-8859-1?Q?Eric_Larchev=EAque?=)
Date: Fri, 4 Apr 2014 17:03:20 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
Message-ID: <CA+WZAErj0KJ0ptHF+EVFxhpkPzUw32t6ztYgwNh=fVL0Wu3vmQ@mail.gmail.com>

>
>
> Why do you need it? Because you don't want to implement a login system?
> Very, very few websites are the sort of place where they'd want to
> authenticate with only a Bitcoin address. If for no other reason than
> they'd have no way to email you, and if you lost your wallet, you'd lose
> all your associated data.
>

Well, the major difference is that you could sign up effortlessy to a
service, and associate your email later.
If more people sign up to more services, it's a good thing for the
ecosystem.


>
>
>> Without such a standard protocol, you could never envision a pure Bitcoin
>> physical locker rental, or booking an hotel room via Bitcoin and opening
>> the door through the paying address.
>>
>
> In future there often won't be a simple paying address. For instance, if
> my coins are in a multi-sig relationship with a risk analysis service,
> there will be two keys for each input and an arbitrary number of inputs. So
> does that mean the risk analysis service gets to open my locker? Why?
>


> What if I do a shared spend/CoinJoin type tx? Now anyone who took part in
> the shared tx with me can get into my hotel room too?
>
>

In a perfect world, you would pay your locker with a "normal" transaction.
The same way you shouldn't play satoshi dice from a shared wallet.

But your point is totaly valid, and I don't have answer to that except that
I'd love to have a Bitcoin authenticated locker in our Bitcoin co working
office.


>
>
> These are the kinds of problems that crop up when you mix together two
> different things: the act of paying, and the act of identifying yourself.
> You're assuming that replacing a password people can remember with a
> physical token (their phone) which can be stolen or lost, would be seen as
> an upgrade. Given a choice between two physical lockers, one of which lets
> me open it with a password and one of which insists on a cryptographic
> token, I'm going to go for the former because the chances of me losing my
> phone is much higher than me forgetting my password.
>
> All the tools you need already exist in the form of client certificates,
> with the advantage that web servers and web browsers already support them.
> The biggest pain point with them is backup and cross-device sync, which of
> course wallets suffer from too!
>


Bitcoin users are normaly already paying some effort to securise and backup
their wallets / keys. So it's just about leveraging that.

I would myself pick a crypto locker, because I'm the kind of guy who
Facebook connects and I follow the easiest path, even if it has long term
costs :)

Eric
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/4f3c14f7/attachment.html>

From slush at centrum.cz  Fri Apr  4 14:56:25 2014
From: slush at centrum.cz (slush)
Date: Fri, 4 Apr 2014 16:56:25 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CA+WZAEqREDkDvmhM7AY+Ju3fkm3uOGm39Ef9+SYoEr43ybbg2Q@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
	<CANEZrP2Z5x0_kOQ=8-BMzbmi9=D=ou=s3dgEksMA5F84BHSt9A@mail.gmail.com>
	<CA+WZAEqREDkDvmhM7AY+Ju3fkm3uOGm39Ef9+SYoEr43ybbg2Q@mail.gmail.com>
Message-ID: <CAJna-Hhz+K0iw4b8DDp5tNpQg6nJABKmu__aDbgT9M26PJ9tAg@mail.gmail.com>

I'm cracking my head for many months with the idea of using TREZOR for web
auth purposes. Unfortunately I'm far from any usable solution yet.

My main comments to your BIP: Don't use bitcoin addresses directly and
don't encourage services to use this "login" for financial purposes. Mike
is right, mixing authentication and financial services is wrong. Use some
function to generate other private/public key from bitcoin's seed/private
key to not leak bitcoin-related data to website.

Cheers,
Marek


On Fri, Apr 4, 2014 at 4:42 PM, Eric Larchev?que <elarch at gmail.com> wrote:

>  The goal of writing a BIP seems to be to get lots of different wallet
>> authors to write lots of code for you - but I *am* a wallet author, and
>> I don't think that's the right way to get traction with a new scheme.
>>
>
> I started without a BIP and the feedback I got is that I should to a BIP.
> We cannot write all the code for all the wallets ; this is after all a
> communauty project.
> However we have and we will propose bounties for each wallet to support
> natively the protocol.
>
>
>> For instance the TREZOR guys would have to support your new protocol
>> otherwise if I paid my hotel bill with my TREZOR I couldn't open the door
>> when I got there! But they probably have better things to be doing right
>> now.
>>
>
> Yes you are right. But if the concept of authenticating yourself gets
> traction, they will probably do it.
>
>
>> The key difference between just generating a client certificate and using
>> a Bitcoin address is that the client certificate is something that is used
>> *specifically* for identification. It leaves no trace in the block
>> chain, so no weird privacy issues, it doesn't matter how you manage your
>> wallet, and you don't have to persuade lots of people to support your idea
>> because it was already done >10 years ago and basically every browser/web
>> server supports it.
>>
>
> My view on this is mainly about the UX and the fact everyone in
> Bitcoinland has a wallet.
> It's a approach leveraging this fact, with the possibility to build
> interesting apps combining address auth and the blockchain.
>
> I understand the problems related to multisig, contracts etc,
> There is no such thing as a from address in a transaction, however many
> services still take first tx as the return address.
> People will always find way of building and doing stuff (cf the message in
> the blockchain debate).
>
>
>> Some reasons client certs aren't more widely used boil down to:
>>
>>    1. People like passwords. In particular they like forgetting them and
>>    then having friendly people assist them to get it back. Client certs can
>>    support this use case, but only if apps are checking the identity in them
>>    and not the key.
>>    2. The UI for managing client certs in browsers is pretty horrible.
>>    There's little incentive to improve it because of (1).
>>    3. Cross-device sync doesn't work very well. Apple are starting to
>>    tackle this with their iCloud Keychain Sync service but then of course,
>>    Apple has all your keys and you may well just sign in to things with your
>>    Apple account (if it were to be supported). Cross-device sync where the
>>    server *doesn't* get your keys is supported by Chrome for passwords,
>>    but not client certs, because (1)
>>
>> None of the above issues have any obvious fix lurking within Bitcoin.
>>
>
> There is also the benefit of revocation with certificate and central
> authority.
>
> But, again, you already have a wallet and a Bitcoin address.
> So if you add a simple auth protocol, people will use it at no cost.
>
> Eric
>
>
>
>
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/5fdb03ea/attachment.html>

From slush at centrum.cz  Fri Apr  4 15:00:09 2014
From: slush at centrum.cz (slush)
Date: Fri, 4 Apr 2014 17:00:09 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CANEZrP15xWWq2jU5yKjG+9hp___OovtbH+vM5KkzFcaQ=koRow@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
	<CANEZrP2Z5x0_kOQ=8-BMzbmi9=D=ou=s3dgEksMA5F84BHSt9A@mail.gmail.com>
	<CA+WZAEqREDkDvmhM7AY+Ju3fkm3uOGm39Ef9+SYoEr43ybbg2Q@mail.gmail.com>
	<CANEZrP15xWWq2jU5yKjG+9hp___OovtbH+vM5KkzFcaQ=koRow@mail.gmail.com>
Message-ID: <CAJna-Hji-kyM8J3GFDmpAwHksX1qmJBuR7yWDVaMG2GT=FeqNg@mail.gmail.com>

On Fri, Apr 4, 2014 at 4:51 PM, Mike Hearn <mike at plan99.net> wrote:
>
> I don't want to suggest the problem is unimportant - I'd love it if the
> world could move beyond passwords. But I have many scars from my time in
> the Google account swamps. We had a big team, lots of resources and even
> just getting people to use their phone as a second factor - *the simplest
> second factor possible* - was a huge uphill battle that most users just
> didn't care about. People like passwords. If you can find a way to make
> something that's better than a password but just as convenient, fantastic!
> But I don't think Bitcoin addresses are such a thing.
>
>
With all respect to your experience, I think you're wrong, for one reason.

2fa auth doesn't *remove* the need of password. It actually *adds* yet
another layer, which complicates stuff for average user. Common user, which
is not paranoid enough (like me) simply don't think he has anything to
hide, so they simply don't see why they should *complicate* their live with
2fa, backing up their phone etc.

In the oposite, authentication based on bitcoin wallet could make the
process much easier and remove the need of passwords at all, because people
*already* care about safe storage of their coins.

Marek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/3012d59c/attachment.html>

From elarch at gmail.com  Fri Apr  4 15:09:08 2014
From: elarch at gmail.com (=?ISO-8859-1?Q?Eric_Larchev=EAque?=)
Date: Fri, 4 Apr 2014 17:09:08 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CAJna-Hhz+K0iw4b8DDp5tNpQg6nJABKmu__aDbgT9M26PJ9tAg@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
	<CANEZrP2Z5x0_kOQ=8-BMzbmi9=D=ou=s3dgEksMA5F84BHSt9A@mail.gmail.com>
	<CA+WZAEqREDkDvmhM7AY+Ju3fkm3uOGm39Ef9+SYoEr43ybbg2Q@mail.gmail.com>
	<CAJna-Hhz+K0iw4b8DDp5tNpQg6nJABKmu__aDbgT9M26PJ9tAg@mail.gmail.com>
Message-ID: <CA+WZAErh6M6BV1imAXZaHQjX+5RKtj7Ma7_-+5KW9BpLw354Sg@mail.gmail.com>

On Fri, Apr 4, 2014 at 4:56 PM, slush <slush at centrum.cz> wrote:

> I'm cracking my head for many months with the idea of using TREZOR for web
> auth purposes. Unfortunately I'm far from any usable solution yet.
>
> My main comments to your BIP: Don't use bitcoin addresses directly and
> don't encourage services to use this "login" for financial purposes. Mike
> is right, mixing authentication and financial services is wrong. Use some
> function to generate other private/public key from bitcoin's seed/private
> key to not leak bitcoin-related data to website.
>
>
I'm probably very naive, but the fact that the authentication key is your
Bitcoin address was for me a great feature :)
What are the risks associated of id yourself with a bitcoin address you
plan to use on the website for transaction ?

I mean, what is the difference between doing that, and id with a login/pass
and add your bitcoin address in a settings field ? (knowing you could
always find a mechanism to transfer the account to another bitcoin address
if needed)

Eric
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/6e0e0513/attachment.html>

From slush at centrum.cz  Fri Apr  4 15:28:27 2014
From: slush at centrum.cz (slush)
Date: Fri, 4 Apr 2014 17:28:27 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CA+WZAErh6M6BV1imAXZaHQjX+5RKtj7Ma7_-+5KW9BpLw354Sg@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
	<CANEZrP2Z5x0_kOQ=8-BMzbmi9=D=ou=s3dgEksMA5F84BHSt9A@mail.gmail.com>
	<CA+WZAEqREDkDvmhM7AY+Ju3fkm3uOGm39Ef9+SYoEr43ybbg2Q@mail.gmail.com>
	<CAJna-Hhz+K0iw4b8DDp5tNpQg6nJABKmu__aDbgT9M26PJ9tAg@mail.gmail.com>
	<CA+WZAErh6M6BV1imAXZaHQjX+5RKtj7Ma7_-+5KW9BpLw354Sg@mail.gmail.com>
Message-ID: <CAJna-HheqSrDGD5btZURb9ONWexCMM69SXqWEOuJ+bsW7pR4oA@mail.gmail.com>

On Fri, Apr 4, 2014 at 5:09 PM, Eric Larchev?que <elarch at gmail.com> wrote:

> On Fri, Apr 4, 2014 at 4:56 PM, slush <slush at centrum.cz> wrote:
>
>> I'm cracking my head for many months with the idea of using TREZOR for
>> web auth purposes. Unfortunately I'm far from any usable solution yet.
>>
>> My main comments to your BIP: Don't use bitcoin addresses directly and
>> don't encourage services to use this "login" for financial purposes. Mike
>> is right, mixing authentication and financial services is wrong. Use some
>> function to generate other private/public key from bitcoin's seed/private
>> key to not leak bitcoin-related data to website.
>>
>>
> I'm probably very naive, but the fact that the authentication key is your
> Bitcoin address was for me a great feature :)
> What are the risks associated of id yourself with a bitcoin address you
> plan to use on the website for transaction ?
>
>
Ideally you should not reuse the address, so the website will need more
addresses or bip32 xpub anyway.

By using wallet address and accidentally using such address in some
transaction, you may be leaking your identity with with other business -
think about Silkroad (sorry Mike :-).

 By using derived key, you can be sure your identity won't be linked with
any other activity on the internet.

I mean, what is the difference between doing that, and id with a login/pass
> and add your bitcoin address in a settings field ? (knowing you could
> always find a mechanism to transfer the account to another bitcoin address
> if needed)
>
> *) You can change address in settings field. It's not so easy when address
== your identity.
*)  There's plenty of websites which do need authentication but don't need
to know your bank account / bitcoin address at all. Facebook, Gmail,
Twitter ...

Ideally, the user should not care about "what address do I use for this
service", because in the future user should not care about addresses at all
(handling of private keys is already eliminated by bip32, handling of raw
addresses may be eliminated soon by bip70 or similar solutions).

I can imagine that the private/public data will be derived automatically
from some secret master key (ideally derived from bip32 seed, which is
already secured well by the user) and the URL of the service.

Marek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/5c5b14cb/attachment.html>

From mike at plan99.net  Fri Apr  4 15:37:35 2014
From: mike at plan99.net (Mike Hearn)
Date: Fri, 4 Apr 2014 17:37:35 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CA+WZAErh6M6BV1imAXZaHQjX+5RKtj7Ma7_-+5KW9BpLw354Sg@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
	<CANEZrP2Z5x0_kOQ=8-BMzbmi9=D=ou=s3dgEksMA5F84BHSt9A@mail.gmail.com>
	<CA+WZAEqREDkDvmhM7AY+Ju3fkm3uOGm39Ef9+SYoEr43ybbg2Q@mail.gmail.com>
	<CAJna-Hhz+K0iw4b8DDp5tNpQg6nJABKmu__aDbgT9M26PJ9tAg@mail.gmail.com>
	<CA+WZAErh6M6BV1imAXZaHQjX+5RKtj7Ma7_-+5KW9BpLw354Sg@mail.gmail.com>
Message-ID: <CANEZrP3exbwE0AuZCXQNEC-UoZ0BmTHTpSG6rZsjbwmpKahtCQ@mail.gmail.com>

Hmmm, well TREZOR requires a web plugin. So if nobody installs plugins then
we have a problem :) But regardless, actually like I said, you don't need a
plugin. Browsers do it all already. With the <keygen> tag they even create
a private key and upload the public part to be signed for you, it's
seamless for the user. I wanted to give you a link to a demo site, but I
can't find it anymore :(

So there's not even a need for people to upgrade anything! It's all there,
already, for everyone.

If you were to make some upgrades, then you'd want to focus on key
management, which indeed is something the Bitcoin world is trying hard to
solve.  But that's a small subcomponent.  Making a modified version of
Chrome or Firefox that can take their key from a BIP32 hierarchy or
12-words scheme is certainly possible, but then you could still reuse all
the rest of it.

Something I'd really like to see is TREZOR supporting a simple
request/response protocol that a server can trigger, via the USB plugin,
that would allow a server to display some arbitrary text and get a
confirmation. Slush and I talked about it before. There are a LOT of places
that don't care about Bitcoin but do need some kind of safe second factor
auth where users know what they are confirming (e.g. at Google!). If TREZOR
could be used for these things too, that'd increase demand and help push
down prices for Bitcoin users.



On Fri, Apr 4, 2014 at 5:09 PM, Eric Larchev?que <elarch at gmail.com> wrote:

> On Fri, Apr 4, 2014 at 4:56 PM, slush <slush at centrum.cz> wrote:
>
>> I'm cracking my head for many months with the idea of using TREZOR for
>> web auth purposes. Unfortunately I'm far from any usable solution yet.
>>
>> My main comments to your BIP: Don't use bitcoin addresses directly and
>> don't encourage services to use this "login" for financial purposes. Mike
>> is right, mixing authentication and financial services is wrong. Use some
>> function to generate other private/public key from bitcoin's seed/private
>> key to not leak bitcoin-related data to website.
>>
>>
> I'm probably very naive, but the fact that the authentication key is your
> Bitcoin address was for me a great feature :)
> What are the risks associated of id yourself with a bitcoin address you
> plan to use on the website for transaction ?
>
> I mean, what is the difference between doing that, and id with a
> login/pass and add your bitcoin address in a settings field ? (knowing you
> could always find a mechanism to transfer the account to another bitcoin
> address if needed)
>
> Eric
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/f6e7b6e0/attachment.html>

From slush at centrum.cz  Fri Apr  4 15:42:35 2014
From: slush at centrum.cz (slush)
Date: Fri, 4 Apr 2014 17:42:35 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CANEZrP3exbwE0AuZCXQNEC-UoZ0BmTHTpSG6rZsjbwmpKahtCQ@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
	<CANEZrP2Z5x0_kOQ=8-BMzbmi9=D=ou=s3dgEksMA5F84BHSt9A@mail.gmail.com>
	<CA+WZAEqREDkDvmhM7AY+Ju3fkm3uOGm39Ef9+SYoEr43ybbg2Q@mail.gmail.com>
	<CAJna-Hhz+K0iw4b8DDp5tNpQg6nJABKmu__aDbgT9M26PJ9tAg@mail.gmail.com>
	<CA+WZAErh6M6BV1imAXZaHQjX+5RKtj7Ma7_-+5KW9BpLw354Sg@mail.gmail.com>
	<CANEZrP3exbwE0AuZCXQNEC-UoZ0BmTHTpSG6rZsjbwmpKahtCQ@mail.gmail.com>
Message-ID: <CAJna-HhYnim2gcfkuYyxeh8BoPqbo1tnbt69DGtdMmB7oFoSow@mail.gmail.com>

On Fri, Apr 4, 2014 at 5:37 PM, Mike Hearn <mike at plan99.net> wrote:

> Hmmm, well TREZOR requires a web plugin. So if nobody installs plugins
> then we have a problem :) But regardless, actually like I said, you don't
> need a plugin.
>

I see the plugin as a temporary solution and we'll eliminate the plugin
once there'll be any way to talk to USB HID directly from browser (which is
not possible yet, but there's some effort already).

Marek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/08a39900/attachment.html>

From elarch at gmail.com  Fri Apr  4 16:00:43 2014
From: elarch at gmail.com (=?ISO-8859-1?Q?Eric_Larchev=EAque?=)
Date: Fri, 4 Apr 2014 18:00:43 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CANEZrP3exbwE0AuZCXQNEC-UoZ0BmTHTpSG6rZsjbwmpKahtCQ@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
	<CANEZrP2Z5x0_kOQ=8-BMzbmi9=D=ou=s3dgEksMA5F84BHSt9A@mail.gmail.com>
	<CA+WZAEqREDkDvmhM7AY+Ju3fkm3uOGm39Ef9+SYoEr43ybbg2Q@mail.gmail.com>
	<CAJna-Hhz+K0iw4b8DDp5tNpQg6nJABKmu__aDbgT9M26PJ9tAg@mail.gmail.com>
	<CA+WZAErh6M6BV1imAXZaHQjX+5RKtj7Ma7_-+5KW9BpLw354Sg@mail.gmail.com>
	<CANEZrP3exbwE0AuZCXQNEC-UoZ0BmTHTpSG6rZsjbwmpKahtCQ@mail.gmail.com>
Message-ID: <CA+WZAEpWFb5jRE+W-BaJsNAWNJgWhuXu5gTYk+9ZwQ7qQ6FsUQ@mail.gmail.com>

>
> Hmmm, well TREZOR requires a web plugin. So if nobody installs plugins
> then we have a problem :) But regardless, actually like I said, you don't
> need a plugin. Browsers do it all already. With the <keygen> tag they even
> create a private key and upload the public part to be signed for you, it's
> seamless for the user. I wanted to give you a link to a demo site, but I
> can't find it anymore :(
>
>
If you buy a TREZOR you will of course install the plugin :)

What I mean is that normal people are lazy : if the solution is already in
their hand they will use it, if they need to install/configure something,
they won't do it.

I'm not trying to propose a solution to solve the auth on the web, but to
ease the sign up / login on the Bitcoin ecosystem websites and apps.
More sign ups to new services (whatever the services) = more usage =
expanding ecosystem = more global value to Bitcoin

Wallets are a key element of the equation because :
- everyone has one (desktop or mobile)
- everyone (in theory) has already taken all steps to backup and secure
their keys
- id yourself with a Bitcoin address often makes sense on a Bitcoin related
service

Eric
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140404/8f22a17a/attachment.html>

From bip at mattwhitlock.name  Fri Apr  4 16:03:37 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Fri, 04 Apr 2014 12:03:37 -0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <CAC7yFxQXn=c7CEC326yMx4bF7Cv7Gc62shS7xU0XvSp5sQSGZw@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<3837746.jqWvB0Uxrs@crushinator>
	<CAC7yFxQXn=c7CEC326yMx4bF7Cv7Gc62shS7xU0XvSp5sQSGZw@mail.gmail.com>
Message-ID: <1529077.7WHAYP4Dpn@crushinator>

On Friday, 4 April 2014, at 5:51 pm, Nikita Schmidt wrote:
> On 4 April 2014 01:42, Matt Whitlock <bip at mattwhitlock.name> wrote:
> > The fingerprint field, Hash16(K), is presently specified as a 16-bit field. Rationale: There is no need to consume 4 bytes just to allow shares to be grouped together. And if someone has more than 100 different secrets, they probably have a good system for managing their shares and won't need the hash anyway.
> 
> Right, of course.  Sorry, I didn't notice there was an update.  Two
> bytes are plenty.
> 
> I'm worried however about the dependency on SHA-512, which may be
> stretching it for a tiny embedded application.  The other uses of
> HashL can be avoided.  We are balancing here between consistency with
> the rest of this proposal, where everything is done via HashL, and
> consistency with the general practice of generating fingerprints with
> SHA-256, like in Base58Check.

I'd be fine with changing the key fingerprint algorithm to something else. Do you like CRC16?

> >> Speaking of encoding, is it not wasteful to allocate three different
> >> application/version bytes just for the sake of always starting with
> >> 'SS'?  It would be OK if it were accepted as a BIP, but merely as a
> >> de-facto standard it should aim at minimising future chances of
> >> collision.
> >
> > I agree on principle, however I think the more user-acceptable behavior is for all base58-encoded Shamir shares to begin with a common prefix, such as "SS". Users are accustomed to relying on the prefix of the base58 encoding to understand what the object is: "1" for mainnet pubkey hash, "3" for mainnet script hash, "5" for uncompressed private key, "P" for passphrase-protected private key, etc.
> 
> Yes, "5" for uncompressed private key and "K" or "L" for compressed
> private key.  One A/VB and three prefixes in base58.  Am I the only
> one to see this as a counter-example?
> 
> However, thinking about this, I can find logic in wanting to stabilise
> text prefixes at a cost of six A/V bytes (as per the latest spec).
> There are only 58 first characters versus 256 AVBs, so we should
> rather be saving the former.

The type of a base58-encoded object is determined not only by the application/version byte but by the payload length as well. For example, a base58-encoded object with an application/version byte of 0x80 but a payload length of 16 bytes would not be mistakable for a Bitcoin private key, even though AVB 0x80 does denote a Bitcoin private key when the payload length is 32 or 33 bytes. So it's not as simple as saying that this proposal costs 6 AVBs. It really costs one AVB for 18-byte payloads, one AVB for 21-byte payloads, one AVB for 34-byte payloads, one AVB fo 37-byte payloads, one AVB for 66-byte payloads, and one AVB for 69-byte payloads.

> >> What about using the same P256 prime as for the elliptic curve?  Just
> >> for consistency's sake.
> >
> > The initial draft of this BIP used the cyclic order (n) of the generator point on the secp256k1 elliptic curve as the modulus. The change to the present scheme was actually done for consistency's sake, so all sizes of secret can use a consistently defined modulus.
> 
> Fair enough.  Although I would have chosen the field order (p) simply
> because that's how all arithmetic already works in bitcoin.  One field
> for everybody.  It's also very close to 2^256, although still smaller
> than your maximum prime.  Now of course with different bit lengths we
> have to pick one consistency over others.

As Gregory Maxwell pointed out, you can't use p when you're dealing with private keys, as that is the order of the finite field over which the elliptic curve is defined, but private keys are not points on that curve; a private key is a scalar number of times to multiply the generator point. That means you have to use the order of the generator point as the modulus when working with private keys.

> >> Also, I'm somewhat inclined towards using the actual x instead of j in
> >> the encoding.  I find it more direct and straightforward to encode the
> >> pair (x, y).  And x=0 can denote a special case for future extensions.
> >>  There is no technical reason behind this, it's just for (subjective)
> >> clarity and consistency.
> >
> > There is a technical reason for encoding j rather than x[j]: it allows for the first 256 shares to be encoded, rather than only the first 255 shares.
> 
> Wow, big deal.  It's hard to imagine anyone needing exactly 256
> shares, but who knows.  And with j = x (starting from 1) we'd get
> user-friendly share numbering and simpler formulas in the spec and
> possibly in the implementation, with no off-by-one stuff.  And M
> instead of M-2...

It's common for implementation limits to be powers of two. I don't foresee any off-by-one errors, as the spec is clear on the value of each byte in the encoding.



From bip at mattwhitlock.name  Fri Apr  4 16:05:44 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Fri, 04 Apr 2014 12:05:44 -0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <CAAS2fgQd6_DAPnYtXUKN8sL=MfrySBaRZWHfPtoKUw=p2=9OYA@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<CAC7yFxQXn=c7CEC326yMx4bF7Cv7Gc62shS7xU0XvSp5sQSGZw@mail.gmail.com>
	<CAAS2fgQd6_DAPnYtXUKN8sL=MfrySBaRZWHfPtoKUw=p2=9OYA@mail.gmail.com>
Message-ID: <12583269.b0SUbSGuCb@crushinator>

On Friday, 4 April 2014, at 7:14 am, Gregory Maxwell wrote:
> I still repeat my concern that any private key secret sharing scheme
> really ought to be compatible with threshold ECDSA, otherwise we're
> just going to have another redundant specification.

I have that concern too, but then how can we support secrets of sizes other than 256 bits? A likely use case for this BIP (even more likely than using it to decompose Bitcoin private keys) is using it to decompose BIP32 master seeds, which can be 512 bits in size. We can't use secp256k1_n as the modulus there.



From gmaxwell at gmail.com  Fri Apr  4 16:25:14 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Fri, 4 Apr 2014 09:25:14 -0700
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <12583269.b0SUbSGuCb@crushinator>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<CAC7yFxQXn=c7CEC326yMx4bF7Cv7Gc62shS7xU0XvSp5sQSGZw@mail.gmail.com>
	<CAAS2fgQd6_DAPnYtXUKN8sL=MfrySBaRZWHfPtoKUw=p2=9OYA@mail.gmail.com>
	<12583269.b0SUbSGuCb@crushinator>
Message-ID: <CAAS2fgTD7D2SiEOcNkq+MfOPnPJ-D7dOFwO0umwTF0WGQd5d3w@mail.gmail.com>

On Fri, Apr 4, 2014 at 9:05 AM, Matt Whitlock <bip at mattwhitlock.name> wrote:
> On Friday, 4 April 2014, at 7:14 am, Gregory Maxwell wrote:
>> I still repeat my concern that any private key secret sharing scheme
>> really ought to be compatible with threshold ECDSA, otherwise we're
>> just going to have another redundant specification.
>
> I have that concern too, but then how can we support secrets of sizes other than 256 bits? A likely use case for this BIP (even more likely than using it to decompose Bitcoin private keys) is using it to decompose BIP32 master seeds, which can be 512 bits in size. We can't use secp256k1_n as the modulus there.

Well, if you're not doing anything homorphic with the result the
computation should probably be over a small field (for computational
efficiency and implementation simplicity reasons) and the data split
up, this also makes it easier to deal with many different data sizes,
since the various sizes will more efficiently divide into the small
field.   The field only needs to be large enough to handle the number
of distinct shares you wish to issue, so even an 8 bit field would
probably be adequate (and yields some very simple table based
implementations).

If that route is taken, rather than encoding BIP32 master keys, it
would probably be prudent to encode the encryption optional version
https://bitcointalk.org/index.php?topic=258678.0 ... and if we're
talking about a new armored private key format then perhaps we should
be talking about Mark Friedenbach's error correcting capable scheme:
https://gist.github.com/maaku/8996338#file-bip-ecc32-mediawiki
(though it would be nicer if we could find a decoding scheme that
supported list decoding without increasing the complexity of a basic
implementation, since an advanced recovery tool could make good use of
a list decode)

I'd think that changing to a small field with a simple implementation,
and encoding the form with encryption, etc. probably makes it distinct
enough from an implementation of ECDSA thresholding that redundancy
isn't a problem.



From bip at mattwhitlock.name  Fri Apr  4 16:36:29 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Fri, 04 Apr 2014 12:36:29 -0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <CAAS2fgTD7D2SiEOcNkq+MfOPnPJ-D7dOFwO0umwTF0WGQd5d3w@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<12583269.b0SUbSGuCb@crushinator>
	<CAAS2fgTD7D2SiEOcNkq+MfOPnPJ-D7dOFwO0umwTF0WGQd5d3w@mail.gmail.com>
Message-ID: <1888881.3JyvKYNUFa@crushinator>

On Friday, 4 April 2014, at 9:25 am, Gregory Maxwell wrote:
> On Fri, Apr 4, 2014 at 9:05 AM, Matt Whitlock <bip at mattwhitlock.name> wrote:
> > On Friday, 4 April 2014, at 7:14 am, Gregory Maxwell wrote:
> >> I still repeat my concern that any private key secret sharing scheme
> >> really ought to be compatible with threshold ECDSA, otherwise we're
> >> just going to have another redundant specification.
> >
> > I have that concern too, but then how can we support secrets of sizes other than 256 bits? A likely use case for this BIP (even more likely than using it to decompose Bitcoin private keys) is using it to decompose BIP32 master seeds, which can be 512 bits in size. We can't use secp256k1_n as the modulus there.
> 
> Well, if you're not doing anything homorphic with the result the
> computation should probably be over a small field (for computational
> efficiency and implementation simplicity reasons) and the data split
> up, this also makes it easier to deal with many different data sizes,
> since the various sizes will more efficiently divide into the small
> field.   The field only needs to be large enough to handle the number
> of distinct shares you wish to issue, so even an 8 bit field would
> probably be adequate (and yields some very simple table based
> implementations).

Are you proposing to switch from prime fields to a binary field? Because if you're going to "break up" a secret into little pieces, you can't assume that every piece of the secret will be strictly less than some 8-bit prime modulus. And if you're going to do a base conversion, then you have to do arbitrary-precision integer math anyway, so I don't see that the small field really saves you any code.

> If that route is taken, rather than encoding BIP32 master keys, it
> would probably be prudent to encode the encryption optional version
> https://bitcointalk.org/index.php?topic=258678.0 ... and if we're
> talking about a new armored private key format then perhaps we should
> be talking about Mark Friedenbach's error correcting capable scheme:
> https://gist.github.com/maaku/8996338#file-bip-ecc32-mediawiki
> (though it would be nicer if we could find a decoding scheme that
> supported list decoding without increasing the complexity of a basic
> implementation, since an advanced recovery tool could make good use of
> a list decode)

Weren't you just clamoring for implementation *simplicity* in your previous paragraph? :)



From gmaxwell at gmail.com  Fri Apr  4 17:08:05 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Fri, 4 Apr 2014 10:08:05 -0700
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <1888881.3JyvKYNUFa@crushinator>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<12583269.b0SUbSGuCb@crushinator>
	<CAAS2fgTD7D2SiEOcNkq+MfOPnPJ-D7dOFwO0umwTF0WGQd5d3w@mail.gmail.com>
	<1888881.3JyvKYNUFa@crushinator>
Message-ID: <CAAS2fgTEMtH99yvwv_79UvUQjFOuZymHOaa1+ZzYmKvaUDPmTA@mail.gmail.com>

On Fri, Apr 4, 2014 at 9:36 AM, Matt Whitlock <bip at mattwhitlock.name> wrote:
> Are you proposing to switch from prime fields to a binary field? Because if you're going to "break up" a secret into little pieces, you can't assume that every piece of the secret will be strictly less than some 8-bit prime modulus. And if you're going to do a base conversion, then you have to do arbitrary-precision integer math anyway, so I don't see that the small field really saves you any code.

Yes, I'm proposing using the binary extension field of GF(2^8).  There
are many secret sharing and data integrity applications available
already operating over GF(2^8) so you can go compare implementation
approaches without having to try them our yourself. Obviously anything
efficiently encoded as bytes will efficiently encode over GF(2^8).

> Weren't you just clamoring for implementation *simplicity* in your previous paragraph? :)

I do think there is a material difference in complexity that comes in
layers rather than at a single point. It's much easier to implement a
complex thing that has many individually testable parts then a single
complex part. (Implementing arithmetic mod some huge P is quite a bit
of work unless you're using some very high level language with
integrated bignums? and are comfortable hoping that their bignums are
sufficiently consistent with the spec).



From bip at mattwhitlock.name  Fri Apr  4 17:16:27 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Fri, 04 Apr 2014 13:16:27 -0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <CAAS2fgTEMtH99yvwv_79UvUQjFOuZymHOaa1+ZzYmKvaUDPmTA@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<1888881.3JyvKYNUFa@crushinator>
	<CAAS2fgTEMtH99yvwv_79UvUQjFOuZymHOaa1+ZzYmKvaUDPmTA@mail.gmail.com>
Message-ID: <60732286.zdbbI6td0e@crushinator>

On Friday, 4 April 2014, at 10:08 am, Gregory Maxwell wrote:
> On Fri, Apr 4, 2014 at 9:36 AM, Matt Whitlock <bip at mattwhitlock.name> wrote:
> > Are you proposing to switch from prime fields to a binary field? Because if you're going to "break up" a secret into little pieces, you can't assume that every piece of the secret will be strictly less than some 8-bit prime modulus. And if you're going to do a base conversion, then you have to do arbitrary-precision integer math anyway, so I don't see that the small field really saves you any code.
> 
> Yes, I'm proposing using the binary extension field of GF(2^8).  There
> are many secret sharing and data integrity applications available
> already operating over GF(2^8) so you can go compare implementation
> approaches without having to try them our yourself. Obviously anything
> efficiently encoded as bytes will efficiently encode over GF(2^8).

Honestly, that sounds a lot more complicated than what I have now. I made my current implementation because I just wanted something simple that would let me divide a private key into shares for purposes of dissemination to my next of kin et al.

> > Weren't you just clamoring for implementation *simplicity* in your previous paragraph? :)
> 
> I do think there is a material difference in complexity that comes in
> layers rather than at a single point. It's much easier to implement a
> complex thing that has many individually testable parts then a single
> complex part. (Implementing arithmetic mod some huge P is quite a bit
> of work unless you're using some very high level language with
> integrated bignums? and are comfortable hoping that their bignums are
> sufficiently consistent with the spec).

I already have a fairly polished implementation of my BIP, and it's not written in a "very high-level language"; it's C++, and the parts that do the big-integer arithmetic are basically C. I'm using the GMP library: very straightforward, very reliable, very fast.

Do you have a use case in mind that would benefit from byte-wise operations rather than big-integer operations? I mean, I guess if you were trying to implement this BIP on a PIC microcontroller, it might be nice to process the secret in smaller bites. (No pun intended.) But I get this feeling that you're only pushing me away from the present incarnation of my proposal because you think it's too similar (but not quite similar enough) to a threshold ECDSA key scheme.



From gmaxwell at gmail.com  Fri Apr  4 17:51:56 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Fri, 4 Apr 2014 10:51:56 -0700
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <60732286.zdbbI6td0e@crushinator>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<1888881.3JyvKYNUFa@crushinator>
	<CAAS2fgTEMtH99yvwv_79UvUQjFOuZymHOaa1+ZzYmKvaUDPmTA@mail.gmail.com>
	<60732286.zdbbI6td0e@crushinator>
Message-ID: <CAAS2fgT=n48F9=Yk9k1Vu3_8nsExAjaHYbUeW60q2bMN1pi-qA@mail.gmail.com>

On Fri, Apr 4, 2014 at 10:16 AM, Matt Whitlock <bip at mattwhitlock.name> wrote:
> Honestly, that sounds a lot more complicated than what I have now. I made my current implementation because I just wanted something simple that would let me divide a private key into shares for purposes of dissemination to my next of kin et al.

I suggest you go look at some of the other secret sharing
implementations that use GF(2^8), they end up just being a couple of
dozen lines of code. Pretty simple stuff, and they work efficiently
for all sizes of data, there are implementations in a multitude of
languages. There are a whole bunch of these.

> I already have a fairly polished implementation of my BIP, and it's not written in a "very high-level language"; it's C++, and the parts that do the big-integer arithmetic are basically C. I'm using the GMP library: very straightforward, very reliable, very fast.

With respect for the awesome work that GMP is?  It's 250,000 lines of
LGPLed code.  It's not just "pic microcontrollers" that would find
that scale of a dependency unwelcome.

> Do you have a use case in mind that would benefit from byte-wise operations rather than big-integer operations? I mean, I guess if you were trying to implement this BIP on a PIC microcontroller, it might be nice to process the secret in smaller bites. (No pun intended.) But I get this feeling that you're only pushing me away from the present incarnation of my proposal because you think it's too similar (but not quite similar enough) to a threshold ECDSA key scheme.

It lets you efficiently scale to any size data being encoded without
extra overhead or having additional primes. It can be compactly
implemented in Javascript (there are several implementations you can
find if you google), it shouldn't be burdensome to implement on a
device like a trezor (much less a real microcontroller).

And yea, sure, it's distinct from the implementation you'd use for
threshold signing. A threshold singing one would lack the size agility
or the easy of implementation on limited devices.  So I do think that
if there is to be two it would be good to gain the advantages that
can't be achieved in an threshold ECDSA compatible approach.



From bip at mattwhitlock.name  Fri Apr  4 18:53:41 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Fri, 04 Apr 2014 14:53:41 -0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <CAAS2fgT=n48F9=Yk9k1Vu3_8nsExAjaHYbUeW60q2bMN1pi-qA@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<60732286.zdbbI6td0e@crushinator>
	<CAAS2fgT=n48F9=Yk9k1Vu3_8nsExAjaHYbUeW60q2bMN1pi-qA@mail.gmail.com>
Message-ID: <3723626.oQyno8ZOTj@crushinator>

On Friday, 4 April 2014, at 10:51 am, Gregory Maxwell wrote:
> On Fri, Apr 4, 2014 at 10:16 AM, Matt Whitlock <bip at mattwhitlock.name> wrote:
> > Honestly, that sounds a lot more complicated than what I have now. I made my current implementation because I just wanted something simple that would let me divide a private key into shares for purposes of dissemination to my next of kin et al.
> 
> I suggest you go look at some of the other secret sharing
> implementations that use GF(2^8), they end up just being a couple of
> dozen lines of code. Pretty simple stuff, and they work efficiently
> for all sizes of data, there are implementations in a multitude of
> languages. There are a whole bunch of these.

Okay, I will.

> > Do you have a use case in mind that would benefit from byte-wise operations rather than big-integer operations? I mean, I guess if you were trying to implement this BIP on a PIC microcontroller, it might be nice to process the secret in smaller bites. (No pun intended.) But I get this feeling that you're only pushing me away from the present incarnation of my proposal because you think it's too similar (but not quite similar enough) to a threshold ECDSA key scheme.
> 
> It lets you efficiently scale to any size data being encoded without
> extra overhead or having additional primes. It can be compactly
> implemented in Javascript (there are several implementations you can
> find if you google), it shouldn't be burdensome to implement on a
> device like a trezor (much less a real microcontroller).

Those are fair points.

> And yea, sure, it's distinct from the implementation you'd use for
> threshold signing. A threshold singing one would lack the size agility
> or the easy of implementation on limited devices.  So I do think that
> if there is to be two it would be good to gain the advantages that
> can't be achieved in an threshold ECDSA compatible approach.

I agree. I'll look into secret sharing in GF(2^8), but it may take me a few days.



From jtimon at monetize.io  Sat Apr  5 10:21:03 2014
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Sat, 5 Apr 2014 12:21:03 +0200
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <CAJHLa0P9SmynBfJ94A1js30j2OsC0PeEhEy-n+6Wa2Sogo+TNw@mail.gmail.com>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
	<1784069.HYVIiriube@crushinator> <533E29F0.1080901@jerviss.org>
	<CA+s+GJBr-UOqYFGVpann-yUkmB5oj4a7fu=GKw-34+4UMbsP1g@mail.gmail.com>
	<CAJHLa0P9SmynBfJ94A1js30j2OsC0PeEhEy-n+6Wa2Sogo+TNw@mail.gmail.com>
Message-ID: <CAC1+kJPUxNn0iSz=c3OTCFS26sg2jxS-goUdE7LSKphtE9owKw@mail.gmail.com>

I like both DD-MM-YYYY and YYYY-MM-DD. I just dislike MM-DD-YYYY and YYYY-DD-MM.

On 4/4/14, Jeff Garzik <jgarzik at bitpay.com> wrote:
> On Fri, Apr 4, 2014 at 3:01 AM, Wladimir <laanwj at gmail.com> wrote:
>> Personally I'd prefer to standardize on ISO 8601 (YYYY-MM-DD) dates as
>> well.
>
> +1 for all-numeric, easily computer parse-able without a lookup table,
> and naturally sorts correctly in a lexicographic sort.
>
> English (or any language) should never be in a date format, on a computer.
>
> --
> Jeff Garzik
> Bitcoin core developer and open source evangelist
> BitPay, Inc.      https://bitpay.com/
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>


-- 
Jorge Tim?n

http://freico.in/



From bip at mattwhitlock.name  Sat Apr  5 10:40:33 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Sat, 05 Apr 2014 06:40:33 -0400
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <CAC1+kJPUxNn0iSz=c3OTCFS26sg2jxS-goUdE7LSKphtE9owKw@mail.gmail.com>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
	<CAJHLa0P9SmynBfJ94A1js30j2OsC0PeEhEy-n+6Wa2Sogo+TNw@mail.gmail.com>
	<CAC1+kJPUxNn0iSz=c3OTCFS26sg2jxS-goUdE7LSKphtE9owKw@mail.gmail.com>
Message-ID: <1750679.2ZqEPETxMv@crushinator>

On Saturday, 5 April 2014, at 12:21 pm, Jorge Tim?n wrote:
> I like both DD-MM-YYYY and YYYY-MM-DD. I just dislike MM-DD-YYYY and YYYY-DD-MM.

Your preferences reflect a cultural bias. The only entirely numeric date format that is unambiguous across all cultures is YYYY-MM-DD. (No culture uses YYYY-DD-MM, or at least the ISO seems to think so.)



From jtimon at monetize.io  Sat Apr  5 11:28:21 2014
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Sat, 5 Apr 2014 13:28:21 +0200
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <1750679.2ZqEPETxMv@crushinator>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
	<CAJHLa0P9SmynBfJ94A1js30j2OsC0PeEhEy-n+6Wa2Sogo+TNw@mail.gmail.com>
	<CAC1+kJPUxNn0iSz=c3OTCFS26sg2jxS-goUdE7LSKphtE9owKw@mail.gmail.com>
	<1750679.2ZqEPETxMv@crushinator>
Message-ID: <CAC1+kJP+S8busSkQrxuW-3bU8zkJEXXPZ1G=cRGADj8CKgYSjA@mail.gmail.com>

On 4/5/14, Matt Whitlock <bip at mattwhitlock.name> wrote:
> On Saturday, 5 April 2014, at 12:21 pm, Jorge Tim?n wrote:
>> I like both DD-MM-YYYY and YYYY-MM-DD. I just dislike MM-DD-YYYY and
>> YYYY-DD-MM.
>
> Your preferences reflect a cultural bias. The only entirely numeric date
> format that is unambiguous across all cultures is YYYY-MM-DD. (No culture
> uses YYYY-DD-MM, or at least the ISO seems to think so.)

Probably my acceptance of DD-MM-YYYY is caused by cultural bias.
The ISO YYYY-MM-DD seems what you normally do with indo-arabic
numerals: put the more weighted numbers on the left, so I guess it's
the most universal (in addition to being standard).

-- 
Jorge Tim?n

http://freico.in/



From laanwj at gmail.com  Sat Apr  5 11:28:41 2014
From: laanwj at gmail.com (Wladimir)
Date: Sat, 5 Apr 2014 13:28:41 +0200
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <1750679.2ZqEPETxMv@crushinator>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
	<CAJHLa0P9SmynBfJ94A1js30j2OsC0PeEhEy-n+6Wa2Sogo+TNw@mail.gmail.com>
	<CAC1+kJPUxNn0iSz=c3OTCFS26sg2jxS-goUdE7LSKphtE9owKw@mail.gmail.com>
	<1750679.2ZqEPETxMv@crushinator>
Message-ID: <CA+s+GJBm_0AX3MTWFvbNw1_GxXFTf_7wHv0GvkATUtz0v6wpsQ@mail.gmail.com>

On Sat, Apr 5, 2014 at 12:40 PM, Matt Whitlock <bip at mattwhitlock.name>wrote:

> On Saturday, 5 April 2014, at 12:21 pm, Jorge Tim?n wrote:
> > I like both DD-MM-YYYY and YYYY-MM-DD. I just dislike MM-DD-YYYY and
> YYYY-DD-MM.
>
> Your preferences reflect a cultural bias. The only entirely numeric date
> format that is unambiguous across all cultures is YYYY-MM-DD. (No culture
> uses YYYY-DD-MM, or at least the ISO seems to think so.)
>

Let's not waste any time shed-painting this. I'd like to finish this
discussion at once:

https://xkcd.com/1179/

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140405/f40e3dcb/attachment.html>

From daryl at daryltucker.com  Sat Apr  5 15:54:12 2014
From: daryl at daryltucker.com (Daryl Tucker)
Date: Sat, 05 Apr 2014 10:54:12 -0500
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <CA+s+GJBm_0AX3MTWFvbNw1_GxXFTf_7wHv0GvkATUtz0v6wpsQ@mail.gmail.com>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>	<CAJHLa0P9SmynBfJ94A1js30j2OsC0PeEhEy-n+6Wa2Sogo+TNw@mail.gmail.com>	<CAC1+kJPUxNn0iSz=c3OTCFS26sg2jxS-goUdE7LSKphtE9owKw@mail.gmail.com>	<1750679.2ZqEPETxMv@crushinator>
	<CA+s+GJBm_0AX3MTWFvbNw1_GxXFTf_7wHv0GvkATUtz0v6wpsQ@mail.gmail.com>
Message-ID: <53402724.5060304@daryltucker.com>


YYYY-MM-DD sorts more naturally.


On 04/05/2014 06:28 AM, Wladimir wrote:
>
> On Sat, Apr 5, 2014 at 12:40 PM, Matt Whitlock <bip at mattwhitlock.name
> <mailto:bip at mattwhitlock.name>> wrote:
>
>     On Saturday, 5 April 2014, at 12:21 pm, Jorge Tim?n wrote:
>     > I like both DD-MM-YYYY and YYYY-MM-DD. I just dislike MM-DD-YYYY
>     and YYYY-DD-MM.
>
>     Your preferences reflect a cultural bias. The only entirely
>     numeric date format that is unambiguous across all cultures is
>     YYYY-MM-DD. (No culture uses YYYY-DD-MM, or at least the ISO seems
>     to think so.)
>
>
> Let's not waste any time shed-painting this. I'd like to finish this
> discussion at once:
>
> https://xkcd.com/1179/
>
> Wladimir
>
>
>
>
> ------------------------------------------------------------------------------
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-- 
Daryl Tucker
daryl at daryltucker.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140405/d351d2b2/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 901 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140405/d351d2b2/attachment.sig>

From gmaxwell at gmail.com  Sat Apr  5 17:29:49 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sat, 5 Apr 2014 10:29:49 -0700
Subject: [Bitcoin-development] Finite monetary supply for Bitcoin
In-Reply-To: <533E29F0.1080901@jerviss.org>
References: <CAPg+sBh1_mYH4JNv1xTFnLsoC=qzmgi0QaLAyd7YeQ=wZQBDSQ@mail.gmail.com>
	<1784069.HYVIiriube@crushinator> <533E29F0.1080901@jerviss.org>
Message-ID: <CAAS2fgRyo1GqBNyQOHOUdm8h3dx7N=0sJJunr1yktx1VPRu3Xg@mail.gmail.com>

On Thu, Apr 3, 2014 at 8:41 PM, kjj <bitcoin-devel at jerviss.org> wrote:
> At first, I thought this was a second April Fool's joke, but then I
> looked and saw that all of the BIPs really do use this format.  As far
> as I can tell, we are using this insane format because RFC 822 predates
> ISO 8601 by half a decade.

In my opinion you can have whatever style you want on the BIPs, so
long as you pledge to slay all who come and complain about the new
style.



From maciej at bitalo.com  Sun Apr  6 07:35:20 2014
From: maciej at bitalo.com (Maciej Trebacz)
Date: Sun, 6 Apr 2014 09:35:20 +0200
Subject: [Bitcoin-development] Standardizing OP_RETURN message format
Message-ID: <CAD=_8RSn+ZtxJL1=3BsaEvfc4Wrg7MW-uDTcnQo75GQbrVP3Ng@mail.gmail.com>

So, OP_RETURN is here and there is no coming back. So if we have it, it
would be nice to actually make use of it in a good way. I would like to
write a process BIP with a proposal for standardizing OP_RETURN
transactions for better interoperability between services. Right now there
are no guidelines for crafting these transactions, so everyone just does
what he believes is good for him.

What I would propose is a common, extensible protocol that can be used by
anyone. The generic format would be like this:

OP_RETURN OP_PUSHDATA[length] {2-byte message type} {data}

So basically, we would have a list of message types, that can be then
parsed by everyone because the format is open. It could go like this:

MSG Type | Parameters | Description

00 00 | unknown | Unused type, use it if you don't want to share your
message format with others
00 01 | none | Proof of burn transaction. Use it if you want to effectively
destroy coins (by sending it all as fees to miners)
...

And so on. I have few more ideas for these kind of messages, but it will
only work if we try to make it an open standard, hence the BIP idea. Can I
expect that it will be included with other BIPs if I write it?

-- 
Best regards,
Maciej Tr?bacz - Bitalo.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140406/ea43f13d/attachment.html>

From gmaxwell at gmail.com  Sun Apr  6 09:21:32 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sun, 6 Apr 2014 02:21:32 -0700
Subject: [Bitcoin-development] Standardizing OP_RETURN message format
In-Reply-To: <CAD=_8RSn+ZtxJL1=3BsaEvfc4Wrg7MW-uDTcnQo75GQbrVP3Ng@mail.gmail.com>
References: <CAD=_8RSn+ZtxJL1=3BsaEvfc4Wrg7MW-uDTcnQo75GQbrVP3Ng@mail.gmail.com>
Message-ID: <CAAS2fgQktr1j1hGosyVH=rJJSnGz+Q9LAesGWLYYHk99Fq5Qag@mail.gmail.com>

On Sun, Apr 6, 2014 at 12:35 AM, Maciej Trebacz <maciej at bitalo.com> wrote:
> 00 01 | none | Proof of burn transaction. Use it if you want to effectively
> destroy coins (by sending it all as fees to miners)

For just having a dummy output for an all fee transaction you do not
need to have a PUSH at all.



From pete at petertodd.org  Sun Apr  6 10:37:32 2014
From: pete at petertodd.org (Peter Todd)
Date: Sun, 6 Apr 2014 12:37:32 +0200
Subject: [Bitcoin-development] Standardizing OP_RETURN message format
In-Reply-To: <CAD=_8RSn+ZtxJL1=3BsaEvfc4Wrg7MW-uDTcnQo75GQbrVP3Ng@mail.gmail.com>
References: <CAD=_8RSn+ZtxJL1=3BsaEvfc4Wrg7MW-uDTcnQo75GQbrVP3Ng@mail.gmail.com>
Message-ID: <20140406103732.GA3279@tilt>

On Sun, Apr 06, 2014 at 09:35:20AM +0200, Maciej Trebacz wrote:
> So, OP_RETURN is here and there is no coming back. So if we have it, it
> would be nice to actually make use of it in a good way. I would like to
> write a process BIP with a proposal for standardizing OP_RETURN
> transactions for better interoperability between services. Right now there
> are no guidelines for crafting these transactions, so everyone just does
> what he believes is good for him.
> 
> What I would propose is a common, extensible protocol that can be used by
> anyone. The generic format would be like this:
> 
> OP_RETURN OP_PUSHDATA[length] {2-byte message type} {data}
> 
> So basically, we would have a list of message types, that can be then
> parsed by everyone because the format is open. It could go like this:
> 
> MSG Type | Parameters | Description
> 
> 00 00 | unknown | Unused type, use it if you don't want to share your
> message format with others
> 00 01 | none | Proof of burn transaction. Use it if you want to effectively
> destroy coins (by sending it all as fees to miners)
> ...
> 
> And so on. I have few more ideas for these kind of messages, but it will
> only work if we try to make it an open standard, hence the BIP idea. Can I
> expect that it will be included with other BIPs if I write it?

Why do you want to make it easier for third-parties to determine what
your OP_RETURN messages are for? You want the messages to be
indistinguishable from each other to avoid censorship of them, and give
node operators plausible deniability, just like you want your Bitcoin
transactions to be indistinguishable from each other. Efficient discover
should be done by controlled disambiguation, for instance with the
prefix filtering method. (easily applied to bloom filters as well)

Secondly do not restrict yourself to OP_RETURN - it is far from certain
that it will survive in its present form with the high centralization of
mining we currently have. Note how it was rather arbitrarily reduced
from 80 bytes to 40 bytes, screwing over a number of projects who had
naively written code assuming it would be deployed as promised in the
promised form.

In any case I have better encoding methods for proof-of-publication and
commitments on my TODO list and will be pubishing code and best
practices specifications in the coming weeks.

-- 
'peter'[:-1]@petertodd.org
0000000000000000f4f5ba334791a4102917e4d3f22f6ad7f2c4f15d97307fe2
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 665 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140406/10804c6f/attachment.sig>

From flavien.charlon at coinprism.com  Sun Apr  6 20:59:34 2014
From: flavien.charlon at coinprism.com (Flavien Charlon)
Date: Sun, 6 Apr 2014 21:59:34 +0100
Subject: [Bitcoin-development] Feedback request: colored coins protocol
Message-ID: <CABbpET96CboPcQeV-nKXv-CeaPiwpTKVUB_ioGPB2s3_5Y7bnQ@mail.gmail.com>

Hi,

I am the lead developer of Coinprism <https://www.coinprism.com/>, the new
colored coins web wallet. After some discussions with the other people
involved with colored coins, I wrote a specification document describing
the colored coins protocol that we are using in coinprism.

I am looking for feedback/discussions regarding the protocol before we move
from TestNet to MainNet. The document is here:
https://github.com/Flavien/colored-coins-protocol/blob/master/specification.mediawiki
.

The colored coin protocol is layered on top of the existing Bitcoin
protocol and requires no modification of the existing protocol, so it can
be used today. This means that SPV is not as efficient, as the client needs
to backtrack up to the issuing transaction to find the color of an output,
but that is something we can live with.


The protocol marks transactions either as issuance or transfer transactions
by using an OP_RETURN output with a 9 bytes marker. The protocol uses the
value of an output as the colored value. So if an output has 1 BTC and is
colored with color A, that means we have 1 BTC colored with color A.

An alternative would have been to completely disconnect the colored value
and the real BTC value. The colored value of each output would be encoded
in an OP_RETURN output. Someone who wants to send 1000 colored coins would
craft a transaction with an output with the smallest possible amount of BTC
(5,400 satoshis) and indicate in the OP_RETURN that they are sending 1000
colored coins.
The two reasons why we haven't chosen that approach is that first, this
only works with a limited number of outputs given that we have only 40
bytes. And second, this could lead to people spamming the network with very
small outputs (but containing an arbitrary number of colored coins).

On the other hand, with the approach we're using (colored value = actual
value of the output), the 5,400 satoshis rule means that the smallest unit
of colored coin you can send is 5,400 satoshis.

If you want to issue 1 million shares, while still being able to trade each
share individually, you'd have to set 1 share = 5,400 satoshis, and you
would need a capital of 54 BTC for issuing a million shares. It's not a big
problem in itself, but still a slight inconvenience.

Do you think this is the right approach?

Feel free to reply with any feedback regarding the protocol.

Thanks,
Flavien
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140406/41d33754/attachment.html>

From mark at monetize.io  Sun Apr  6 23:23:43 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Sun, 06 Apr 2014 16:23:43 -0700
Subject: [Bitcoin-development] Feedback request: colored coins protocol
In-Reply-To: <CABbpET96CboPcQeV-nKXv-CeaPiwpTKVUB_ioGPB2s3_5Y7bnQ@mail.gmail.com>
References: <CABbpET96CboPcQeV-nKXv-CeaPiwpTKVUB_ioGPB2s3_5Y7bnQ@mail.gmail.com>
Message-ID: <5341E1FF.7080204@monetize.io>

On 04/06/2014 01:59 PM, Flavien Charlon wrote:
> Do you think this is the right approach?

No, I'm afraid it has significant flaws. The two chief flaws are (1)
there is absolutely no reason to include asset tagging information if it
is not validated - that just bloats the block chain, and (2) you
shouldn't be using fixed increments for share sizes either. It's not
future-proof as the minimum output size changes based on the minimum fee
(currently 540 satoshis, not 5,400, and it will float in the near
future). And needing a capital of 54 btc for a million shares is totally
unacceptable.

Flavien, I know that I've seen you on the Bitcoin-X mailing list, where
these issues have been mostly worked out:

https://groups.google.com/forum/#!forum/bitcoinx

Have you seen the padded order-based coloring scheme worked out here?

https://github.com/bitcoinx/colored-coin-tools/wiki/colored_coins_intro

Kind regards,
Mark Friedenbach



From djpnewton at gmail.com  Mon Apr  7 00:28:26 2014
From: djpnewton at gmail.com (Daniel Newton)
Date: Mon, 7 Apr 2014 12:28:26 +1200
Subject: [Bitcoin-development] Help with PR 3845
Message-ID: <CAOUBo+97Bos-aVxEFFOG+aiJQKg0jHf-v9dohrkYqqOXzduB1Q@mail.gmail.com>

https://github.com/bitcoin/bitcoin/pull/3845 (Add a method for removing a
single wallet tx)

Hi All,

I am hoping there are some who would like to review/test this pull request.
Basically it enables a user to zap individually those pesky zombie
transactions that were popping up a couple of months ago.

Best regards,
Dan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/5a97fab9/attachment.html>

From flavien.charlon at coinprism.com  Mon Apr  7 09:49:55 2014
From: flavien.charlon at coinprism.com (Flavien Charlon)
Date: Mon, 7 Apr 2014 10:49:55 +0100
Subject: [Bitcoin-development] Feedback request: colored coins protocol
In-Reply-To: <5341E1FF.7080204@monetize.io>
References: <CABbpET96CboPcQeV-nKXv-CeaPiwpTKVUB_ioGPB2s3_5Y7bnQ@mail.gmail.com>
	<5341E1FF.7080204@monetize.io>
Message-ID: <CABbpET_JFceNhRkxSZMyiTxkkYr2MvQVob7o4juEsPj4wo8e8g@mail.gmail.com>

Thanks for the feedback Mark.

> (1) there is absolutely no reason to include asset tagging information if
it is not validated

Sure, there is a good reason to include it in the blockchain: so that
clients don't need external information to recognize colored coins. Also,
I'm not sure what you mean by "not validated", in that proposal, the tagged
transaction is the authoritative source of information.

> that just bloats the block chain

9 bytes is much less than what Mastercoin and counterparty are doing
(certainly under the 40 bytes allowed).

> Have you seen the padded order-based coloring scheme worked out here?

Yes I have seen it and find the padding quite clumsy and unintuitive. A
more general solution is the one I described in my original post, where the
color value is entirely separate from the satoshi value, and encoded
separately: if you have to have an additional "padding" value to calculate
color_value = satoshi_value - padding, you might as well have color_value
directly, independently from satoshi_value. But I don't even think it is
necessary:

> (2) And needing a capital of 54 btc for a million shares is totally
unacceptable.

An easy workaround is to have various scales, the same way you have $1
bills, $5 bills an $10 bills. I don't see that as a big problem. That way
the protocol is more lightweight and simple.

Also those 54 BTC (actually 5.4 BTC if the dust is now 540 satoshis) become
part of the capital of the company, and can always be recovered by
uncoloring the shares. It's an investment, not an expense, so I think it is
acceptable.

Best,
Flavien






On Mon, Apr 7, 2014 at 12:23 AM, Mark Friedenbach <mark at monetize.io> wrote:

> On 04/06/2014 01:59 PM, Flavien Charlon wrote:
> > Do you think this is the right approach?
>
> No, I'm afraid it has significant flaws. The two chief flaws are (1)
> there is absolutely no reason to include asset tagging information if it
> is not validated - that just bloats the block chain, and (2) you
> shouldn't be using fixed increments for share sizes either. It's not
> future-proof as the minimum output size changes based on the minimum fee
> (currently 540 satoshis, not 5,400, and it will float in the near
> future). And needing a capital of 54 btc for a million shares is totally
> unacceptable.
>
> Flavien, I know that I've seen you on the Bitcoin-X mailing list, where
> these issues have been mostly worked out:
>
> https://groups.google.com/forum/#!forum/bitcoinx
>
> Have you seen the padded order-based coloring scheme worked out here?
>
> https://github.com/bitcoinx/colored-coin-tools/wiki/colored_coins_intro
>
> Kind regards,
> Mark Friedenbach
>
>
> ------------------------------------------------------------------------------
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/ce33a33f/attachment.html>

From alex.mizrahi at gmail.com  Mon Apr  7 11:28:33 2014
From: alex.mizrahi at gmail.com (Alex Mizrahi)
Date: Mon, 7 Apr 2014 14:28:33 +0300
Subject: [Bitcoin-development] Feedback request: colored coins protocol
In-Reply-To: <5341E1FF.7080204@monetize.io>
References: <CABbpET96CboPcQeV-nKXv-CeaPiwpTKVUB_ioGPB2s3_5Y7bnQ@mail.gmail.com>
	<5341E1FF.7080204@monetize.io>
Message-ID: <CAE28kURZB=huuvRPwOnVxSUzcez-pypDMpOzA3jiO7m2Q0pwsQ@mail.gmail.com>

>
> Have you seen the padded order-based coloring scheme worked out here?
>
> https://github.com/bitcoinx/colored-coin-tools/wiki/colored_coins_intro


Just to clarify, a variant of padded order-based coloring called epobc is
already implemented in coloredcoinlib (which is used by
ngcccbase/ChromaWallet). It isn't document yet, however.
The idea is to use the otherwise unused nSequence field of first input to
specify padding and differentiate between genesis and transfer transactions.
Padding can be chosen for each transaction individually and can be set to
zero.

Python code is here (I recommend waiting for documentation, though):

https://github.com/bitcoinx/ngcccbase/blob/master/coloredcoinlib/colordef.py#L262

It is able to work with transactions with multiple colored and uncolored
outputs, particularly, p2ptrade transactions.

Examples of p2ptrade transactions on mainnet:
https://blockchain.info/tx/8c1926f2e3527153bf06e8ab2c8a417aad3d8e6cd993a4350efbb4050ab961fa
https://blockchain.info/tx/f85b6213939c9cbc14538dd24838061179cac2485f50be20a974b819a85e5ee9(It
looks quite a bit weird, I know.)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/37a2e265/attachment.html>

From mike at plan99.net  Mon Apr  7 11:34:37 2014
From: mike at plan99.net (Mike Hearn)
Date: Mon, 7 Apr 2014 13:34:37 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
Message-ID: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>

At the start of February we had 10,000 bitcoin nodes. Now we have 8,500 and
still falling:

   http://getaddr.bitnodes.io/dashboard/chart/?days=60

I know all the reasons why people *might* stop running a node (uses too
much disk space, bandwidth, lost interest etc). But does anyone have any
idea how we might get more insight into what's really going on? It'd be
convenient if the subVer contained the operating system, as then we could
tell if the bleed was mostly from desktops/laptops (Windows/Mac), which
would be expected, or from virtual servers (Linux), which would be more
concerning.

When you set up a Tor node, you can add your email address to the config
file and the Tor project sends you emails from time to time about things
you should know about. If we did the same, we could have a little exit
survey: if your node disappears for long enough, we could email the
operator and ask why they stopped.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/7c7bf641/attachment.html>

From ricardojdfilipe at gmail.com  Mon Apr  7 12:17:53 2014
From: ricardojdfilipe at gmail.com (Ricardo Filipe)
Date: Mon, 7 Apr 2014 13:17:53 +0100
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
Message-ID: <CALC81CMc7BridL7600b7bij3dJHzeQWgTv=iqVeW--n-we+1Yw@mail.gmail.com>

phasing out of bitcoinqt into spv wallets?

2014-04-07 12:34 GMT+01:00 Mike Hearn <mike at plan99.net>:
> At the start of February we had 10,000 bitcoin nodes. Now we have 8,500 and
> still falling:
>
>    http://getaddr.bitnodes.io/dashboard/chart/?days=60
>
> I know all the reasons why people might stop running a node (uses too much
> disk space, bandwidth, lost interest etc). But does anyone have any idea how
> we might get more insight into what's really going on? It'd be convenient if
> the subVer contained the operating system, as then we could tell if the
> bleed was mostly from desktops/laptops (Windows/Mac), which would be
> expected, or from virtual servers (Linux), which would be more concerning.
>
> When you set up a Tor node, you can add your email address to the config
> file and the Tor project sends you emails from time to time about things you
> should know about. If we did the same, we could have a little exit survey:
> if your node disappears for long enough, we could email the operator and ask
> why they stopped.
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees_APR
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From jameson.lopp at gmail.com  Mon Apr  7 12:19:04 2014
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Mon, 07 Apr 2014 08:19:04 -0400
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
Message-ID: <534297B8.4060506@gmail.com>

I'm glad to see that I'm not the only one concerned about the consistent dropping of nodes. Though I think that the fundamental question should be: how many nodes do we really need? Obviously more is better, but it's difficult to say how concerned we should be without more information. I posted my thoughts last month: http://coinchomp.com/2014/03/19/bitcoin-nodes-many-enough/

I have begun working on my node monitoring project and will post updates if it results in me gaining any new insights about the network.

- Jameson

On 04/07/2014 07:34 AM, Mike Hearn wrote:
> At the start of February we had 10,000 bitcoin nodes. Now we have 8,500 and
> still falling:
> 
>    http://getaddr.bitnodes.io/dashboard/chart/?days=60
> 
> I know all the reasons why people *might* stop running a node (uses too
> much disk space, bandwidth, lost interest etc). But does anyone have any
> idea how we might get more insight into what's really going on? It'd be
> convenient if the subVer contained the operating system, as then we could
> tell if the bleed was mostly from desktops/laptops (Windows/Mac), which
> would be expected, or from virtual servers (Linux), which would be more
> concerning.
> 
> When you set up a Tor node, you can add your email address to the config
> file and the Tor project sends you emails from time to time about things
> you should know about. If we did the same, we could have a little exit
> survey: if your node disappears for long enough, we could email the
> operator and ask why they stopped.
> 
> 
> 
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment 
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees_APR
> 
> 
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From jtimon at monetize.io  Mon Apr  7 12:12:58 2014
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Mon, 7 Apr 2014 14:12:58 +0200
Subject: [Bitcoin-development] Feedback request: colored coins protocol
In-Reply-To: <CABbpET_JFceNhRkxSZMyiTxkkYr2MvQVob7o4juEsPj4wo8e8g@mail.gmail.com>
References: <CABbpET96CboPcQeV-nKXv-CeaPiwpTKVUB_ioGPB2s3_5Y7bnQ@mail.gmail.com>
	<5341E1FF.7080204@monetize.io>
	<CABbpET_JFceNhRkxSZMyiTxkkYr2MvQVob7o4juEsPj4wo8e8g@mail.gmail.com>
Message-ID: <CAC1+kJMpEetKdpKs-OaFGvnBwi6-Pj8ycJ77cJzHOTk_jUPw=g@mail.gmail.com>

On 4/7/14, Flavien Charlon <flavien.charlon at coinprism.com> wrote:
> Also those 54 BTC (actually 5.4 BTC if the dust is now 540 satoshis) become
> part of the capital of the company, and can always be recovered by
> uncoloring the shares. It's an investment, not an expense, so I think it is
> acceptable.

This doesn't make much sense to me.
If you print shares on gold plates instead of paper, is that gold
"part of the capital of the company"? I don't think so.



From pieter.wuille at gmail.com  Mon Apr  7 12:26:40 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Mon, 7 Apr 2014 14:26:40 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <534297B8.4060506@gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<534297B8.4060506@gmail.com>
Message-ID: <CAPg+sBhL+Lr_noM7hVB4w-tvX0LLK2bKbQTzAw=4WswyxNGboQ@mail.gmail.com>

On Mon, Apr 7, 2014 at 2:19 PM, Jameson Lopp <jameson.lopp at gmail.com> wrote:
> I'm glad to see that I'm not the only one concerned about the consistent dropping of nodes. Though I think that the fundamental question should be: how many nodes do we really need? Obviously more is better, but it's difficult to say how concerned we should be without more information. I posted my thoughts last month: http://coinchomp.com/2014/03/19/bitcoin-nodes-many-enough/

In my opinion, the number of full nodes doesn't matter (as long as
it's enough to satisfy demand by other nodes).

What matters is how hard it is to run one. If someone is interesting
in verifying that nobody is cheating on the network, can they, and can
they without significant investment? Whether they actually will
depends also no how interesting the currency and its digital transfers
are.

> On 04/07/2014 07:34 AM, Mike Hearn wrote:
>> At the start of February we had 10,000 bitcoin nodes. Now we have 8,500 and
>> still falling:
>>
>>    http://getaddr.bitnodes.io/dashboard/chart/?days=60

My own network crawler (which feeds my DNS seeder) hasn't seen any
significant drop that I remember, but I don't have actual logs. It's
seeing around 6000 "well reachable nodes" currently, which is the
highest number I've ever seen (though it's been around 6000 for quite
a while now).

-- 
Pieter



From mike at plan99.net  Mon Apr  7 12:34:03 2014
From: mike at plan99.net (Mike Hearn)
Date: Mon, 7 Apr 2014 14:34:03 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAPg+sBhL+Lr_noM7hVB4w-tvX0LLK2bKbQTzAw=4WswyxNGboQ@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<534297B8.4060506@gmail.com>
	<CAPg+sBhL+Lr_noM7hVB4w-tvX0LLK2bKbQTzAw=4WswyxNGboQ@mail.gmail.com>
Message-ID: <CANEZrP2bbFordbKdTWnMuCx0yQpL1D5-=_mK6VXPGB9ogDLDDw@mail.gmail.com>

>
> In my opinion, the number of full nodes doesn't matter (as long as
> it's enough to satisfy demand by other nodes).
>

Correct. Still, a high number of nodes has a few other benefits:

1) The more nodes there are, the cheaper it should be to run each one,
given that the bandwidth and CPU for serving the chain will be spread over
more people.

2) It makes Bitcoin *seem* bigger, more robust and more decentralised,
because there are more people uniting to run it. So there's a psychological
benefit.

Also, we don't have a good way to measure capacity vs demand at the moment.
Whether we have enough capacity is rather a shot in the dark right now.


> What matters is how hard it is to run one.
>

Which is why I'm interested to learn the reason behind the drop. Is it
insufficient interest, or is running a node too painful?

For this purpose I'd like to exclude people running Bitcoin Core on laptops
or non-dedicated desktops. I don't think full nodes will ever make sense
for consumer wallets again, and I see the bleeding off of those people as
natural and expected (as Satoshi did). But if someone feels it's too hard
to run on a cheap server then that'd concern me.


> My own network crawler (which feeds my DNS seeder) hasn't seen any
> significant drop


It would be good to explain the difference, but I suspect your definition
of "well reachable" excludes people running Core at home. From the diurnal
cycle we see in Addy's graphs it's clear some nodes are being shut down
when people go to bed. So if we have 6000 nodes on servers and 2000 at
home, then I'd expect Addy's graphs and yours to slowly come into alignment
as people give up using Core as a consumer wallet.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/3d4fd9cb/attachment.html>

From jameson.lopp at gmail.com  Mon Apr  7 12:34:49 2014
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Mon, 07 Apr 2014 08:34:49 -0400
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAPg+sBhL+Lr_noM7hVB4w-tvX0LLK2bKbQTzAw=4WswyxNGboQ@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>	<534297B8.4060506@gmail.com>
	<CAPg+sBhL+Lr_noM7hVB4w-tvX0LLK2bKbQTzAw=4WswyxNGboQ@mail.gmail.com>
Message-ID: <53429B69.30008@gmail.com>

On 04/07/2014 08:26 AM, Pieter Wuille wrote:
> In my opinion, the number of full nodes doesn't matter (as long as
> it's enough to satisfy demand by other nodes).

I agree, but if we don't quantify "demand" then we are practically blind. What is the plan? To wait until SPV clients start lagging / timing out because their requests cannot be handled by the nodes?

For all I know, the network would run just fine on 100 nodes. But not knowing really irks me as an engineer.

- Jameson



From andreas at schildbach.de  Mon Apr  7 13:43:52 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Mon, 07 Apr 2014 15:43:52 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CALC81CMc7BridL7600b7bij3dJHzeQWgTv=iqVeW--n-we+1Yw@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<CALC81CMc7BridL7600b7bij3dJHzeQWgTv=iqVeW--n-we+1Yw@mail.gmail.com>
Message-ID: <lhua2p$lp5$1@ger.gmane.org>

They're _not_ phasing out into SPV wallets from what I can say. At
around the 24th of February, there has been a sharp change of the
"current installs" graph of Bitcoin Wallet. That number used to grow at
about 20.000 per month. After that date until now, it just barely moves
horizontal.

My guess is that a large number of users have lost interest after they
lost their money in MtGox. The 24th of February coincides with the
"final" shutdown, according to

http://en.wikipedia.org/wiki/Mt._Gox#February_2014_shutdown_and_bankruptcy


On 04/07/2014 02:17 PM, Ricardo Filipe wrote:
> phasing out of bitcoinqt into spv wallets?
> 
> 2014-04-07 12:34 GMT+01:00 Mike Hearn <mike at plan99.net>:
>> At the start of February we had 10,000 bitcoin nodes. Now we have 8,500 and
>> still falling:
>>
>>    http://getaddr.bitnodes.io/dashboard/chart/?days=60
>>
>> I know all the reasons why people might stop running a node (uses too much
>> disk space, bandwidth, lost interest etc). But does anyone have any idea how
>> we might get more insight into what's really going on? It'd be convenient if
>> the subVer contained the operating system, as then we could tell if the
>> bleed was mostly from desktops/laptops (Windows/Mac), which would be
>> expected, or from virtual servers (Linux), which would be more concerning.
>>
>> When you set up a Tor node, you can add your email address to the config
>> file and the Tor project sends you emails from time to time about things you
>> should know about. If we did the same, we could have a little exit survey:
>> if your node disappears for long enough, we could email the operator and ask
>> why they stopped.
>>
>> ------------------------------------------------------------------------------
>> Put Bad Developers to Shame
>> Dominate Development with Jenkins Continuous Integration
>> Continuously Automate Build, Test & Deployment
>> Start a new project now. Try Jenkins in the cloud.
>> http://p.sf.net/sfu/13600_Cloudbees_APR
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
> 
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment 
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees_APR
> 




From gmaxwell at gmail.com  Mon Apr  7 13:50:54 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 7 Apr 2014 06:50:54 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
Message-ID: <CAAS2fgSZS=hkL=ztNrNVawGbcvO+5iGQ36peC5zBosZ8aCWepg@mail.gmail.com>

On Mon, Apr 7, 2014 at 4:34 AM, Mike Hearn <mike at plan99.net> wrote:
> At the start of February we had 10,000 bitcoin nodes. Now we have 8,500 and
> still falling:

FWIW, A few months before that we had even less than 8500 by the bitnodes count.

Bitcoin.org recommends people away from running Bitcoin-QT now, so I'm
not sure that we should generally find that trend surprising.



From gmaxwell at gmail.com  Mon Apr  7 13:53:20 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 7 Apr 2014 06:53:20 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAAS2fgSZS=hkL=ztNrNVawGbcvO+5iGQ36peC5zBosZ8aCWepg@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<CAAS2fgSZS=hkL=ztNrNVawGbcvO+5iGQ36peC5zBosZ8aCWepg@mail.gmail.com>
Message-ID: <CAAS2fgQxgRjCYEynXmZxMsYkohudBZN7jyJ1hOTft82ppKCQ1A@mail.gmail.com>

On Mon, Apr 7, 2014 at 6:50 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> FWIW, A few months before that we had even less than 8500 by the bitnodes count.

Gah, accidentally send.... I wanted to continue here that it was less
than 8500 and had been falling pretty consistently for months,
basically since the bitcoin.org change.  Unfortunately it looks like
the old bitnodes.io data isn't available anymore, so I'm going off my
memory here.

The Bitnodes counts have always been somewhat higher than my or sipa's
node counts too, fwiw.



From jameson.lopp at gmail.com  Mon Apr  7 13:58:37 2014
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Mon, 07 Apr 2014 09:58:37 -0400
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAAS2fgQxgRjCYEynXmZxMsYkohudBZN7jyJ1hOTft82ppKCQ1A@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>	<CAAS2fgSZS=hkL=ztNrNVawGbcvO+5iGQ36peC5zBosZ8aCWepg@mail.gmail.com>
	<CAAS2fgQxgRjCYEynXmZxMsYkohudBZN7jyJ1hOTft82ppKCQ1A@mail.gmail.com>
Message-ID: <5342AF0D.1060209@gmail.com>

The Bitnodes project updated their counting algorithm a month or so ago. It used to be slower and less accurate - prior to their update, it was reporting in excess of 100,000 nodes.

- Jameson

On 04/07/2014 09:53 AM, Gregory Maxwell wrote:
> On Mon, Apr 7, 2014 at 6:50 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
>> FWIW, A few months before that we had even less than 8500 by the bitnodes count.
> 
> Gah, accidentally send.... I wanted to continue here that it was less
> than 8500 and had been falling pretty consistently for months,
> basically since the bitcoin.org change.  Unfortunately it looks like
> the old bitnodes.io data isn't available anymore, so I'm going off my
> memory here.
> 
> The Bitnodes counts have always been somewhat higher than my or sipa's
> node counts too, fwiw.
> 
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment 
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees_APR
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From flavien.charlon at coinprism.com  Mon Apr  7 14:00:20 2014
From: flavien.charlon at coinprism.com (Flavien Charlon)
Date: Mon, 7 Apr 2014 15:00:20 +0100
Subject: [Bitcoin-development] Feedback request: colored coins protocol
In-Reply-To: <CAC1+kJMpEetKdpKs-OaFGvnBwi6-Pj8ycJ77cJzHOTk_jUPw=g@mail.gmail.com>
References: <CABbpET96CboPcQeV-nKXv-CeaPiwpTKVUB_ioGPB2s3_5Y7bnQ@mail.gmail.com>
	<5341E1FF.7080204@monetize.io>
	<CABbpET_JFceNhRkxSZMyiTxkkYr2MvQVob7o4juEsPj4wo8e8g@mail.gmail.com>
	<CAC1+kJMpEetKdpKs-OaFGvnBwi6-Pj8ycJ77cJzHOTk_jUPw=g@mail.gmail.com>
Message-ID: <CABbpET-S5ahuQVcBaJZGyvFMS1=RU2mJZUAmECBKhFOFu6B6EA@mail.gmail.com>

Jorge, they'd have to be. Otherwise, assuming the price of the share goes
low enough, you could buy a share of the company, melt the gold plate, and
sell it for a profit. If the gold is part of the capital of the company,
the cheapest a share can be is the price of the gold on which the stock
certificate is printed.

This is why I think the importance of padding with colored coins is
overblown.


On Mon, Apr 7, 2014 at 1:12 PM, Jorge Tim?n <jtimon at monetize.io> wrote:

> On 4/7/14, Flavien Charlon <flavien.charlon at coinprism.com> wrote:
> > Also those 54 BTC (actually 5.4 BTC if the dust is now 540 satoshis)
> become
> > part of the capital of the company, and can always be recovered by
> > uncoloring the shares. It's an investment, not an expense, so I think it
> is
> > acceptable.
>
> This doesn't make much sense to me.
> If you print shares on gold plates instead of paper, is that gold
> "part of the capital of the company"? I don't think so.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/9186845a/attachment.html>

From gmaxwell at gmail.com  Mon Apr  7 14:04:13 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 7 Apr 2014 07:04:13 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <5342AF0D.1060209@gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<CAAS2fgSZS=hkL=ztNrNVawGbcvO+5iGQ36peC5zBosZ8aCWepg@mail.gmail.com>
	<CAAS2fgQxgRjCYEynXmZxMsYkohudBZN7jyJ1hOTft82ppKCQ1A@mail.gmail.com>
	<5342AF0D.1060209@gmail.com>
Message-ID: <CAAS2fgSagC0FjZ5ktfQ+FV0fpOv+0T5eBc=jmwAGH2ymY0TUgg@mail.gmail.com>

On Mon, Apr 7, 2014 at 6:58 AM, Jameson Lopp <jameson.lopp at gmail.com> wrote:
> The Bitnodes project updated their counting algorithm a month or so ago. It used to be slower and less accurate - prior to their update, it was reporting in excess of 100,000 nodes.

Nah.  It reported multiple metrics. The "100,000" number was an mostly
useless metric that just counted the number of distinct addr messages
floating around the network, which contains a lot of junk.  They also
reported an actual connectable node count previously and while they
may have tweaked things here and there as far as I can tell it has
been consistent with the numbers they are using in the headlines now.



From mike at plan99.net  Mon Apr  7 14:05:34 2014
From: mike at plan99.net (Mike Hearn)
Date: Mon, 7 Apr 2014 16:05:34 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <lhua2p$lp5$1@ger.gmane.org>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<CALC81CMc7BridL7600b7bij3dJHzeQWgTv=iqVeW--n-we+1Yw@mail.gmail.com>
	<lhua2p$lp5$1@ger.gmane.org>
Message-ID: <CANEZrP3F+UQ1amVAK4a9_UCsXia7Yfv0RO4pWK7NTde0GvH-0A@mail.gmail.com>

>
> My guess is that a large number of users have lost interest after they
> lost their money in MtGox. The 24th of February coincides with the
> "final" shutdown


Sigh. It would not be surprising if MtGox has indeed dealt the community a
critical blow in this regard. TX traffic is down since then too:

https://blockchain.info/charts/n-transactions-excluding-popular?timespan=60days&showDataPoints=false&daysAverageString=1&show_header=true&scale=0&address=

Judging from comments and the leaked user db, it seems a lot of well known
people lost money there   (not me fortunately). I wish I could say people
have learned but from the size of the deposit base at Bitstamp they clearly
have not. A lot of Bitcoin users don't seem to be ready to be their own
bank, yet still want to own some on the assumption everyone else either is
or soon will be. So it's really only a matter of time until something goes
wrong with some large bitbank again, either Bitstamp or Coinbase.

Some days I wonder if Bitcoin will be killed off by people who just refuse
to use it properly before it ever gets a chance to shine. The general
public doesn't distinguish between "Bitcoin users" who deposit with a third
party and the real Bitcoin users who don't.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/a7331cc1/attachment.html>

From mike at plan99.net  Mon Apr  7 14:23:59 2014
From: mike at plan99.net (Mike Hearn)
Date: Mon, 7 Apr 2014 16:23:59 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAAf19Wrz0u_e5V9Gb=_CAG=mHtE9nA_VETgYZeCXZqwaGeYKuQ@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<CALC81CMc7BridL7600b7bij3dJHzeQWgTv=iqVeW--n-we+1Yw@mail.gmail.com>
	<lhua2p$lp5$1@ger.gmane.org>
	<CANEZrP3F+UQ1amVAK4a9_UCsXia7Yfv0RO4pWK7NTde0GvH-0A@mail.gmail.com>
	<CAAf19Wrz0u_e5V9Gb=_CAG=mHtE9nA_VETgYZeCXZqwaGeYKuQ@mail.gmail.com>
Message-ID: <CANEZrP2rqu9yCjmoCRmVMe91mxtkFe4ep5eWHWSrn_PSUa92WA@mail.gmail.com>

Indeed, fully agreed. The only way to really make progress here is to make
the UX of being your own bank not only as good as trusting a third party,
but better.

I've been encouraged by the rise of risk analysis services, but we need to
integrate them into wallets more widely for them to have much impact.
Otherwise people get to pick between a variety of wallets, none of which
have *all* the features they want. And TREZOR is cool, albeit, something
that's going to be for committed users only.



On Mon, Apr 7, 2014 at 4:15 PM, Eric Martindale <eric at ericmartindale.com>wrote:

> We need to make it so mind-numbingly simple to "run Bitcoin correctly"
> that the average user doesn't find reasons to do so in the course of normal
> use.  Right now, Coinbase and Bitstamp are winning in the user experience
> battle, which technically endanger the user, and by proxy the Bitcoin
> network.
>
> Multi-sig as a default is a start.  It won't succeed unless the user
> experience is simply better than trusted third parties, but we need to
> start the education process with the very basic fundamental: trusting a
> third-party with full access to your Bitcoin is just replacing one
> centralized banking system with another.
>
> Eric Martindale
> Developer Evangelist, BitPay
> +1 (919) 374-2020
> On Apr 7, 2014 7:05 AM, "Mike Hearn" <mike at plan99.net> wrote:
>
>>  My guess is that a large number of users have lost interest after they
>>> lost their money in MtGox. The 24th of February coincides with the
>>> "final" shutdown
>>
>>
>> Sigh. It would not be surprising if MtGox has indeed dealt the community
>> a critical blow in this regard. TX traffic is down since then too:
>>
>>
>> https://blockchain.info/charts/n-transactions-excluding-popular?timespan=60days&showDataPoints=false&daysAverageString=1&show_header=true&scale=0&address=
>>
>> Judging from comments and the leaked user db, it seems a lot of well
>> known people lost money there   (not me fortunately). I wish I could say
>> people have learned but from the size of the deposit base at Bitstamp they
>> clearly have not. A lot of Bitcoin users don't seem to be ready to be their
>> own bank, yet still want to own some on the assumption everyone else either
>> is or soon will be. So it's really only a matter of time until something
>> goes wrong with some large bitbank again, either Bitstamp or Coinbase.
>>
>> Some days I wonder if Bitcoin will be killed off by people who just
>> refuse to use it properly before it ever gets a chance to shine. The
>> general public doesn't distinguish between "Bitcoin users" who deposit with
>> a third party and the real Bitcoin users who don't.
>>
>>
>> ------------------------------------------------------------------------------
>> Put Bad Developers to Shame
>> Dominate Development with Jenkins Continuous Integration
>> Continuously Automate Build, Test & Deployment
>> Start a new project now. Try Jenkins in the cloud.
>> http://p.sf.net/sfu/13600_Cloudbees_APR
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/baedd37f/attachment.html>

From eric at ericmartindale.com  Mon Apr  7 14:15:15 2014
From: eric at ericmartindale.com (Eric Martindale)
Date: Mon, 7 Apr 2014 10:15:15 -0400
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CANEZrP3F+UQ1amVAK4a9_UCsXia7Yfv0RO4pWK7NTde0GvH-0A@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<CALC81CMc7BridL7600b7bij3dJHzeQWgTv=iqVeW--n-we+1Yw@mail.gmail.com>
	<lhua2p$lp5$1@ger.gmane.org>
	<CANEZrP3F+UQ1amVAK4a9_UCsXia7Yfv0RO4pWK7NTde0GvH-0A@mail.gmail.com>
Message-ID: <CAAf19Wrz0u_e5V9Gb=_CAG=mHtE9nA_VETgYZeCXZqwaGeYKuQ@mail.gmail.com>

We need to make it so mind-numbingly simple to "run Bitcoin correctly" that
the average user doesn't find reasons to do so in the course of normal
use.  Right now, Coinbase and Bitstamp are winning in the user experience
battle, which technically endanger the user, and by proxy the Bitcoin
network.

Multi-sig as a default is a start.  It won't succeed unless the user
experience is simply better than trusted third parties, but we need to
start the education process with the very basic fundamental: trusting a
third-party with full access to your Bitcoin is just replacing one
centralized banking system with another.

Eric Martindale
Developer Evangelist, BitPay
+1 (919) 374-2020
On Apr 7, 2014 7:05 AM, "Mike Hearn" <mike at plan99.net> wrote:

> My guess is that a large number of users have lost interest after they
>> lost their money in MtGox. The 24th of February coincides with the
>> "final" shutdown
>
>
> Sigh. It would not be surprising if MtGox has indeed dealt the community a
> critical blow in this regard. TX traffic is down since then too:
>
>
> https://blockchain.info/charts/n-transactions-excluding-popular?timespan=60days&showDataPoints=false&daysAverageString=1&show_header=true&scale=0&address=
>
> Judging from comments and the leaked user db, it seems a lot of well known
> people lost money there   (not me fortunately). I wish I could say people
> have learned but from the size of the deposit base at Bitstamp they clearly
> have not. A lot of Bitcoin users don't seem to be ready to be their own
> bank, yet still want to own some on the assumption everyone else either is
> or soon will be. So it's really only a matter of time until something goes
> wrong with some large bitbank again, either Bitstamp or Coinbase.
>
> Some days I wonder if Bitcoin will be killed off by people who just refuse
> to use it properly before it ever gets a chance to shine. The general
> public doesn't distinguish between "Bitcoin users" who deposit with a third
> party and the real Bitcoin users who don't.
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees_APR
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/ba5bd602/attachment.html>

From mark at monetize.io  Mon Apr  7 15:06:08 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Mon, 07 Apr 2014 08:06:08 -0700
Subject: [Bitcoin-development] Feedback request: colored coins protocol
In-Reply-To: <CABbpET-S5ahuQVcBaJZGyvFMS1=RU2mJZUAmECBKhFOFu6B6EA@mail.gmail.com>
References: <CABbpET96CboPcQeV-nKXv-CeaPiwpTKVUB_ioGPB2s3_5Y7bnQ@mail.gmail.com>
	<5341E1FF.7080204@monetize.io>
	<CABbpET_JFceNhRkxSZMyiTxkkYr2MvQVob7o4juEsPj4wo8e8g@mail.gmail.com>
	<CAC1+kJMpEetKdpKs-OaFGvnBwi6-Pj8ycJ77cJzHOTk_jUPw=g@mail.gmail.com>
	<CABbpET-S5ahuQVcBaJZGyvFMS1=RU2mJZUAmECBKhFOFu6B6EA@mail.gmail.com>
Message-ID: <5342BEE0.3050204@monetize.io>

Flavien, capital is wealth or resources available for the stated purpose
of the company. These bitcoins represent nothing more than a speculative
floor owned by the investors, not the company.

On 04/07/2014 07:00 AM, Flavien Charlon wrote:
> Jorge, they'd have to be. Otherwise, assuming the price of the share
> goes low enough, you could buy a share of the company, melt the gold
> plate, and sell it for a profit. If the gold is part of the capital of
> the company, the cheapest a share can be is the price of the gold on
> which the stock certificate is printed.
> 
> This is why I think the importance of padding with colored coins is
> overblown.
> 
> 
> On Mon, Apr 7, 2014 at 1:12 PM, Jorge Tim?n <jtimon at monetize.io
> <mailto:jtimon at monetize.io>> wrote:
> 
>     On 4/7/14, Flavien Charlon <flavien.charlon at coinprism.com
>     <mailto:flavien.charlon at coinprism.com>> wrote:
>     > Also those 54 BTC (actually 5.4 BTC if the dust is now 540
>     satoshis) become
>     > part of the capital of the company, and can always be recovered by
>     > uncoloring the shares. It's an investment, not an expense, so I
>     think it is
>     > acceptable.
> 
>     This doesn't make much sense to me.
>     If you print shares on gold plates instead of paper, is that gold
>     "part of the capital of the company"? I don't think so.
> 
> 



From tomh at thinlink.com  Mon Apr  7 14:45:33 2014
From: tomh at thinlink.com (Tom Harding)
Date: Mon, 07 Apr 2014 07:45:33 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CANEZrP3F+UQ1amVAK4a9_UCsXia7Yfv0RO4pWK7NTde0GvH-0A@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>	<CALC81CMc7BridL7600b7bij3dJHzeQWgTv=iqVeW--n-we+1Yw@mail.gmail.com>	<lhua2p$lp5$1@ger.gmane.org>
	<CANEZrP3F+UQ1amVAK4a9_UCsXia7Yfv0RO4pWK7NTde0GvH-0A@mail.gmail.com>
Message-ID: <5342BA0D.7010800@thinlink.com>

On 4/7/2014 7:05 AM, Mike Hearn wrote:
> Some days I wonder if Bitcoin will be killed off by people who just 
> refuse to use it properly before it ever gets a chance to shine. The 
> general public doesn't distinguish between "Bitcoin users" who deposit 
> with a third party and the real Bitcoin users who don't.
>

A Mt-Gox-scale incident was inevitable and there are probably more hard 
lessons in the future.  But it has made bitcoin much better already.  
I'm referring to things like malleability fixes, cleaning house at the 
foundation, and public education (hard as the lesson was).  A lot more 
people than before understand the distinction you're making, and they 
are sharing the lesson.




From flavien.charlon at coinprism.com  Mon Apr  7 15:19:20 2014
From: flavien.charlon at coinprism.com (Flavien Charlon)
Date: Mon, 7 Apr 2014 16:19:20 +0100
Subject: [Bitcoin-development] Feedback request: colored coins protocol
In-Reply-To: <5342BEE0.3050204@monetize.io>
References: <CABbpET96CboPcQeV-nKXv-CeaPiwpTKVUB_ioGPB2s3_5Y7bnQ@mail.gmail.com>
	<5341E1FF.7080204@monetize.io>
	<CABbpET_JFceNhRkxSZMyiTxkkYr2MvQVob7o4juEsPj4wo8e8g@mail.gmail.com>
	<CAC1+kJMpEetKdpKs-OaFGvnBwi6-Pj8ycJ77cJzHOTk_jUPw=g@mail.gmail.com>
	<CABbpET-S5ahuQVcBaJZGyvFMS1=RU2mJZUAmECBKhFOFu6B6EA@mail.gmail.com>
	<5342BEE0.3050204@monetize.io>
Message-ID: <CABbpET8Qbvhb47ZJX4EVh4673_ic9UwpMdMyZbsHay9F2zTj9Q@mail.gmail.com>

Ok, I guess I'm not using the proper terminology. It would be listed on the
"Asset" section of the company's balance sheet, is what I meant.


On Mon, Apr 7, 2014 at 4:06 PM, Mark Friedenbach <mark at monetize.io> wrote:

> Flavien, capital is wealth or resources available for the stated purpose
> of the company. These bitcoins represent nothing more than a speculative
> floor owned by the investors, not the company.
>
> On 04/07/2014 07:00 AM, Flavien Charlon wrote:
> > Jorge, they'd have to be. Otherwise, assuming the price of the share
> > goes low enough, you could buy a share of the company, melt the gold
> > plate, and sell it for a profit. If the gold is part of the capital of
> > the company, the cheapest a share can be is the price of the gold on
> > which the stock certificate is printed.
> >
> > This is why I think the importance of padding with colored coins is
> > overblown.
> >
> >
> > On Mon, Apr 7, 2014 at 1:12 PM, Jorge Tim?n <jtimon at monetize.io
> > <mailto:jtimon at monetize.io>> wrote:
> >
> >     On 4/7/14, Flavien Charlon <flavien.charlon at coinprism.com
> >     <mailto:flavien.charlon at coinprism.com>> wrote:
> >     > Also those 54 BTC (actually 5.4 BTC if the dust is now 540
> >     satoshis) become
> >     > part of the capital of the company, and can always be recovered by
> >     > uncoloring the shares. It's an investment, not an expense, so I
> >     think it is
> >     > acceptable.
> >
> >     This doesn't make much sense to me.
> >     If you print shares on gold plates instead of paper, is that gold
> >     "part of the capital of the company"? I don't think so.
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/bffc7bc8/attachment.html>

From justusranvier at gmail.com  Mon Apr  7 15:45:55 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Mon, 07 Apr 2014 15:45:55 +0000
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
Message-ID: <5342C833.5030906@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 04/07/2014 11:34 AM, Mike Hearn wrote:
> At the start of February we had 10,000 bitcoin nodes. Now we have 8,500 and
> still falling:
> 
>    http://getaddr.bitnodes.io/dashboard/chart/?days=60
> 
> I know all the reasons why people *might* stop running a node (uses too
> much disk space, bandwidth, lost interest etc). But does anyone have any
> idea how we might get more insight into what's really going on? It'd be
> convenient if the subVer contained the operating system, as then we could
> tell if the bleed was mostly from desktops/laptops (Windows/Mac), which
> would be expected, or from virtual servers (Linux), which would be more
> concerning.

It doesn't do much good to only focus on the immediate symptoms at the
exclusion of big picture trends. There are three things happening now
that have nothing to do with operating systems.

1. The resource requirements of a full node are moving beyond the
capabilities of casual users. This isn't inherently a problem - after
all most people don't grow their own food, tailor their own clothes, or
keep blacksmith tools handy in to forge their own horseshoes either.

2. The growth of small and medium-sized native Bitcoin businesses is
lagging #1. Native here means their revenue and expenses are both
denominated in BTC. Most business adoption we've seen so far doesn't
actually handle bitcoins themselves. They use Bitcoin as a payment
method whose processing they outsource.

Contributing to this is the fact that Bitcoin Core, although it has made
great progress in the 0.9 release, can't be accurately described as
"enterprise ready".

3. The P2P protocol used by the network is broken from an incentive
perspective. Resource usage wouldn't be a problem as long as the users
which consume resources pay for them and the users who provide resources
are compensated, and they communicate via an efficient price discovery
mechanism. Right now there is no obvious way to incorporate price
discovery for bandwidth usage or storage space without a completely new
P2P protocol, and the effectiveness with which progress has been blocked
towards price discovery of transaction fees (the area where it is most
obviously necessary) means that I'm not optimistic that this subject
will ever be effectively addressed by Bitcoin Core.

- -- 
Support online privacy by using email encryption whenever possible.
Learn how here: http://www.youtube.com/watch?v=bakOKJFtB-k
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTQsgzAAoJECoisBQbQ4v0ZA8H/1YIJAg7AEUUe5RnuuAz7lVV
uiHtpmbmGaZ+Bd0qi1DEfPdeBP9bDKpO3O5napmtz+mqIE5H3VgAVg7z9U0sMf16
sZAJIWuVCg2drY/NaE+n3TKEEd4Z1Zj51rWde/KD6xjgR2usV9nLugkEJdLNahZu
0EbdAv40oCSZ8PScNElYqQyM8qcbta7LuDRCnnWvCyunZJzL4LSkQwDcsAWQ+oSv
FyqKY/e1Kd6mLyrN/NppMzdqiLv95zmE56Qkh6rlKeF+JgXxlfiEfDv8osl8IWJR
TOpmW0Dr+E4qe9E3nA7X5gV46nf8gxGZ4b0cUP+wivN9RRaE27+JlKhKaAV3ulc=
=vdPa
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x1B438BF4.asc
Type: application/pgp-keys
Size: 21191 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/a3b1250c/attachment.bin>

From gmaxwell at gmail.com  Mon Apr  7 15:53:10 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 7 Apr 2014 08:53:10 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <5342C833.5030906@gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
Message-ID: <CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>

On Mon, Apr 7, 2014 at 8:45 AM, Justus Ranvier <justusranvier at gmail.com> wrote:
> 1. The resource requirements of a full node are moving beyond the
> capabilities of casual users. This isn't inherently a problem - after
> all most people don't grow their own food, tailor their own clothes, or
> keep blacksmith tools handy in to forge their own horseshoes either.

Right now running a full node consumes about $1 in disk space
non-reoccurring and costs a couple cents in power per month.

This isn't to say things are all ducky. But if you're going to say the
resource requirements are beyond the capabilities of casual users I'm
afraid I'm going to have to say: citation needed.



From jameson.lopp at gmail.com  Mon Apr  7 16:02:49 2014
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Mon, 07 Apr 2014 12:02:49 -0400
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
Message-ID: <5342CC29.8050401@gmail.com>

I would point to bandwidth as the most important issue to the casual user who runs a node at home. Few casual users have the know-how to set up QoS rules and thus become quite annoyed when their Internet connection is discernibly slowed.

- Jameson

On 04/07/2014 11:53 AM, Gregory Maxwell wrote:
> On Mon, Apr 7, 2014 at 8:45 AM, Justus Ranvier <justusranvier at gmail.com> wrote:
>> 1. The resource requirements of a full node are moving beyond the
>> capabilities of casual users. This isn't inherently a problem - after
>> all most people don't grow their own food, tailor their own clothes, or
>> keep blacksmith tools handy in to forge their own horseshoes either.
> 
> Right now running a full node consumes about $1 in disk space
> non-reoccurring and costs a couple cents in power per month.
> 
> This isn't to say things are all ducky. But if you're going to say the
> resource requirements are beyond the capabilities of casual users I'm
> afraid I'm going to have to say: citation needed.
> 
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment 
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees_APR
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From mark at monetize.io  Mon Apr  7 16:27:07 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Mon, 07 Apr 2014 09:27:07 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
Message-ID: <5342D1DB.8060203@monetize.io>

Right now running a full-node on my home DSL connection (<1Mbps) makes
other internet activity periodically unresponsive. I think we've already
hit a point where resource requirements are pushing out casual users,
although of course we can't be certain that accounts for all lost nodes.

On 04/07/2014 08:53 AM, Gregory Maxwell wrote:
> On Mon, Apr 7, 2014 at 8:45 AM, Justus Ranvier <justusranvier at gmail.com> wrote:
>> 1. The resource requirements of a full node are moving beyond the
>> capabilities of casual users. This isn't inherently a problem - after
>> all most people don't grow their own food, tailor their own clothes, or
>> keep blacksmith tools handy in to forge their own horseshoes either.
> 
> Right now running a full node consumes about $1 in disk space
> non-reoccurring and costs a couple cents in power per month.
> 
> This isn't to say things are all ducky. But if you're going to say the
> resource requirements are beyond the capabilities of casual users I'm
> afraid I'm going to have to say: citation needed.
> 
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment 
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees_APR
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> .
> 



From gmaxwell at gmail.com  Mon Apr  7 16:57:08 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 7 Apr 2014 09:57:08 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <5342D1DB.8060203@monetize.io>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<5342D1DB.8060203@monetize.io>
Message-ID: <CAAS2fgRu-0C_ozaN0qSc9SvF2TpZ56NwceLCrfQjikuQgc85tQ@mail.gmail.com>

On Mon, Apr 7, 2014 at 9:27 AM, Mark Friedenbach <mark at monetize.io> wrote:
> Right now running a full-node on my home DSL connection (<1Mbps) makes
> other internet activity periodically unresponsive. I think we've already
> hit a point where resource requirements are pushing out casual users,
> although of course we can't be certain that accounts for all lost nodes.

That is an implementation issue? mostly one that arises as an indirect
consequence of not having headers first and the parallel fetch, not a
requirements issue.

Under the current bitcoin validity rules it should be completely
reasonable to run a full contributing node with no more than 30 kb/s
inbound (reviving two copies of everything, blocks + tansactions ) and
60 kbit/sec outbound (sending out four copies of everything). (So long
as you're sending out >= what you're taking in you're contributing to
the network's capacity). Throw in a factor of two for bursting, though
not every node needs to be contributing super low latency capacity.

This is absolutely not the case with the current implementation, but
it's not a requirements thing.



From drak at zikula.org  Mon Apr  7 17:07:09 2014
From: drak at zikula.org (Drak)
Date: Mon, 7 Apr 2014 18:07:09 +0100
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
Message-ID: <CANAnSg0ABVyRcSaO2aEcqO8qaj+JdxRN4z-hLE-EbESv2TMf2g@mail.gmail.com>

For what it's worth, the number of nodes rose dramatically during the China
bullrun (I recall 45k in China alone) and dropped as dramatically as the
price after the first PBOC announcement designed to cool down bitcoin
trading in China.


On 7 April 2014 12:34, Mike Hearn <mike at plan99.net> wrote:

> At the start of February we had 10,000 bitcoin nodes. Now we have 8,500
> and still falling:
>
>    http://getaddr.bitnodes.io/dashboard/chart/?days=60
>
> I know all the reasons why people *might* stop running a node (uses too
> much disk space, bandwidth, lost interest etc). But does anyone have any
> idea how we might get more insight into what's really going on? It'd be
> convenient if the subVer contained the operating system, as then we could
> tell if the bleed was mostly from desktops/laptops (Windows/Mac), which
> would be expected, or from virtual servers (Linux), which would be more
> concerning.
>
> When you set up a Tor node, you can add your email address to the config
> file and the Tor project sends you emails from time to time about things
> you should know about. If we did the same, we could have a little exit
> survey: if your node disappears for long enough, we could email the
> operator and ask why they stopped.
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees_APR
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/8869112e/attachment.html>

From gmaxwell at gmail.com  Mon Apr  7 17:16:03 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 7 Apr 2014 10:16:03 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <5342D9FA.8080102@monetize.io>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<5342D1DB.8060203@monetize.io>
	<CAAS2fgRu-0C_ozaN0qSc9SvF2TpZ56NwceLCrfQjikuQgc85tQ@mail.gmail.com>
	<5342D9FA.8080102@monetize.io>
Message-ID: <CAAS2fgT5xfYzup01+USkFmFWi=FtDfbPY1HPpTLyQ+6_ejGOZA@mail.gmail.com>

On Mon, Apr 7, 2014 at 10:01 AM, Mark Friedenbach <mark at monetize.io> wrote:
> On 04/07/2014 09:57 AM, Gregory Maxwell wrote:
>> That is an implementation issue? mostly one that arises as an indirect
>> consequence of not having headers first and the parallel fetch, not a
>> requirements issue.
>
> Oh, absolutely. But the question "why are people not running full
> nodes?" has to do with the current implementation, not abstract
> capabilities of a future version of the bitcoind code base.

The distinction is very important because it's a matter of things we
can and should fix vs things that cannot be fixed except by changing
goals/incentives!  Opposite approaches to handling them.

When I read "resource requirements of a full node are moving beyond" I
didn't extract from that that "there are implementation issues that
need to be improved to make it work better for low resource users" due
to the word "requirements".



From mark at monetize.io  Mon Apr  7 17:01:46 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Mon, 07 Apr 2014 10:01:46 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAAS2fgRu-0C_ozaN0qSc9SvF2TpZ56NwceLCrfQjikuQgc85tQ@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>	<5342C833.5030906@gmail.com>	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>	<5342D1DB.8060203@monetize.io>
	<CAAS2fgRu-0C_ozaN0qSc9SvF2TpZ56NwceLCrfQjikuQgc85tQ@mail.gmail.com>
Message-ID: <5342D9FA.8080102@monetize.io>

On 04/07/2014 09:57 AM, Gregory Maxwell wrote:
> That is an implementation issue? mostly one that arises as an indirect
> consequence of not having headers first and the parallel fetch, not a
> requirements issue.

Oh, absolutely. But the question "why are people not running full
nodes?" has to do with the current implementation, not abstract
capabilities of a future version of the bitcoind code base.



From brent.shambaugh at gmail.com  Mon Apr  7 17:35:59 2014
From: brent.shambaugh at gmail.com (Brent Shambaugh)
Date: Mon, 7 Apr 2014 12:35:59 -0500
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAAS2fgT5xfYzup01+USkFmFWi=FtDfbPY1HPpTLyQ+6_ejGOZA@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<5342D1DB.8060203@monetize.io>
	<CAAS2fgRu-0C_ozaN0qSc9SvF2TpZ56NwceLCrfQjikuQgc85tQ@mail.gmail.com>
	<5342D9FA.8080102@monetize.io>
	<CAAS2fgT5xfYzup01+USkFmFWi=FtDfbPY1HPpTLyQ+6_ejGOZA@mail.gmail.com>
Message-ID: <CACvcBVq2+37jWgxBg2Zjj6KFtT1ZnZzTa7FOw1sLwimeT0ahhA@mail.gmail.com>

How difficult would it be to set up a node? Using lots of electricity at
home (if required) could be an issue, but I do have a Webfaction account.


On Mon, Apr 7, 2014 at 12:16 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> On Mon, Apr 7, 2014 at 10:01 AM, Mark Friedenbach <mark at monetize.io>
> wrote:
> > On 04/07/2014 09:57 AM, Gregory Maxwell wrote:
> >> That is an implementation issue-- mostly one that arises as an indirect
> >> consequence of not having headers first and the parallel fetch, not a
> >> requirements issue.
> >
> > Oh, absolutely. But the question "why are people not running full
> > nodes?" has to do with the current implementation, not abstract
> > capabilities of a future version of the bitcoind code base.
>
> The distinction is very important because it's a matter of things we
> can and should fix vs things that cannot be fixed except by changing
> goals/incentives!  Opposite approaches to handling them.
>
> When I read "resource requirements of a full node are moving beyond" I
> didn't extract from that that "there are implementation issues that
> need to be improved to make it work better for low resource users" due
> to the word "requirements".
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/1a30bc9b/attachment.html>

From mike at plan99.net  Mon Apr  7 17:40:17 2014
From: mike at plan99.net (Mike Hearn)
Date: Mon, 7 Apr 2014 19:40:17 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CACvcBVq2+37jWgxBg2Zjj6KFtT1ZnZzTa7FOw1sLwimeT0ahhA@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<5342D1DB.8060203@monetize.io>
	<CAAS2fgRu-0C_ozaN0qSc9SvF2TpZ56NwceLCrfQjikuQgc85tQ@mail.gmail.com>
	<5342D9FA.8080102@monetize.io>
	<CAAS2fgT5xfYzup01+USkFmFWi=FtDfbPY1HPpTLyQ+6_ejGOZA@mail.gmail.com>
	<CACvcBVq2+37jWgxBg2Zjj6KFtT1ZnZzTa7FOw1sLwimeT0ahhA@mail.gmail.com>
Message-ID: <CANEZrP3_v2zAqMkcTtQ1Mys2rUEcsd_MpLySefpgJ-P7OSg34g@mail.gmail.com>

It uses ~no electricity, it's not like mining.

The primary resources it needs are disk space and bandwidth, after an
intensive initial day or two of building the database.

Actually, I wonder if we should start shipping (auditable) pre-baked
databases calculated up to the last checkpoint so people can download them
and boot up their node right away. Recalculating the entire thing from
scratch every time isn't sustainable in the long run anyway.


On Mon, Apr 7, 2014 at 7:35 PM, Brent Shambaugh
<brent.shambaugh at gmail.com>wrote:

> How difficult would it be to set up a node? Using lots of electricity at
> home (if required) could be an issue, but I do have a Webfaction account.
>
>
> On Mon, Apr 7, 2014 at 12:16 PM, Gregory Maxwell <gmaxwell at gmail.com>wrote:
>
>> On Mon, Apr 7, 2014 at 10:01 AM, Mark Friedenbach <mark at monetize.io>
>> wrote:
>> > On 04/07/2014 09:57 AM, Gregory Maxwell wrote:
>> >> That is an implementation issue? mostly one that arises as an indirect
>> >> consequence of not having headers first and the parallel fetch, not a
>> >> requirements issue.
>> >
>> > Oh, absolutely. But the question "why are people not running full
>> > nodes?" has to do with the current implementation, not abstract
>> > capabilities of a future version of the bitcoind code base.
>>
>> The distinction is very important because it's a matter of things we
>> can and should fix vs things that cannot be fixed except by changing
>> goals/incentives!  Opposite approaches to handling them.
>>
>> When I read "resource requirements of a full node are moving beyond" I
>> didn't extract from that that "there are implementation issues that
>> need to be improved to make it work better for low resource users" due
>> to the word "requirements".
>>
>>
>> ------------------------------------------------------------------------------
>> Put Bad Developers to Shame
>> Dominate Development with Jenkins Continuous Integration
>> Continuously Automate Build, Test & Deployment
>> Start a new project now. Try Jenkins in the cloud.
>> http://p.sf.net/sfu/13600_Cloudbees
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/5ce1e052/attachment.html>

From gmaxwell at gmail.com  Mon Apr  7 17:44:08 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 7 Apr 2014 10:44:08 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CANEZrP3_v2zAqMkcTtQ1Mys2rUEcsd_MpLySefpgJ-P7OSg34g@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<5342D1DB.8060203@monetize.io>
	<CAAS2fgRu-0C_ozaN0qSc9SvF2TpZ56NwceLCrfQjikuQgc85tQ@mail.gmail.com>
	<5342D9FA.8080102@monetize.io>
	<CAAS2fgT5xfYzup01+USkFmFWi=FtDfbPY1HPpTLyQ+6_ejGOZA@mail.gmail.com>
	<CACvcBVq2+37jWgxBg2Zjj6KFtT1ZnZzTa7FOw1sLwimeT0ahhA@mail.gmail.com>
	<CANEZrP3_v2zAqMkcTtQ1Mys2rUEcsd_MpLySefpgJ-P7OSg34g@mail.gmail.com>
Message-ID: <CAAS2fgSbqSbX7WX5S=UMWz-4vfnEQCKMTTC8cWTT7KJvOZX54A@mail.gmail.com>

On Mon, Apr 7, 2014 at 10:40 AM, Mike Hearn <mike at plan99.net> wrote:
> Actually, I wonder

The actual validation isn't really the problem today. The slowness of
the IBD is almost exclusively the lack of parallel fetching and the
existence of slow peers.  And making the signature gate adaptive (and
deploying the 6x faster ECDSA code) would improve that future.

Go grab sipa's headers first branch, it has no problem saturating a
20mbit/sec pipe syncing up.



From tamas at bitsofproof.com  Mon Apr  7 17:45:30 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Mon, 7 Apr 2014 19:45:30 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CANEZrP3_v2zAqMkcTtQ1Mys2rUEcsd_MpLySefpgJ-P7OSg34g@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<5342D1DB.8060203@monetize.io>
	<CAAS2fgRu-0C_ozaN0qSc9SvF2TpZ56NwceLCrfQjikuQgc85tQ@mail.gmail.com>
	<5342D9FA.8080102@monetize.io>
	<CAAS2fgT5xfYzup01+USkFmFWi=FtDfbPY1HPpTLyQ+6_ejGOZA@mail.gmail.com>
	<CACvcBVq2+37jWgxBg2Zjj6KFtT1ZnZzTa7FOw1sLwimeT0ahhA@mail.gmail.com>
	<CANEZrP3_v2zAqMkcTtQ1Mys2rUEcsd_MpLySefpgJ-P7OSg34g@mail.gmail.com>
Message-ID: <7B25C2BD-79AF-4D97-824B-29E9B7E32C2F@bitsofproof.com>

I rather prefer to start with SPV and upgrade to full node, if desired.

Tamas Blummer
http://bitsofproof.com

On 07.04.2014, at 19:40, Mike Hearn <mike at plan99.net> wrote:

> 
> Actually, I wonder if we should start shipping (auditable) pre-baked databases calculated up to the last checkpoint so people can download them and boot up their node right away. Recalculating the entire thing from scratch every time isn't sustainable in the long run anyway.
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/a48a9890/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/a48a9890/attachment.sig>

From justusranvier at gmail.com  Mon Apr  7 17:46:12 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Mon, 07 Apr 2014 17:46:12 +0000
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAAS2fgT5xfYzup01+USkFmFWi=FtDfbPY1HPpTLyQ+6_ejGOZA@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>	<5342C833.5030906@gmail.com>	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>	<5342D1DB.8060203@monetize.io>	<CAAS2fgRu-0C_ozaN0qSc9SvF2TpZ56NwceLCrfQjikuQgc85tQ@mail.gmail.com>	<5342D9FA.8080102@monetize.io>
	<CAAS2fgT5xfYzup01+USkFmFWi=FtDfbPY1HPpTLyQ+6_ejGOZA@mail.gmail.com>
Message-ID: <5342E464.8050301@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 04/07/2014 05:16 PM, Gregory Maxwell wrote:
> When I read "resource requirements of a full node are moving
> beyond" I didn't extract from that that "there are implementation
> issues that need to be improved to make it work better for low
> resource users" due to the word "requirements".

In order to prevent future confusion: whenever I talk about
requirements (or generally use the present tense) , I'm talking about
reality as it currently exists.

If I ever decide to talk about hypothetical future requirements in
some imaginary world of Platonic forms, as opposed to the requirements
imposed by the software that's actually available for casual users to
download today, I'll mention that specifically.

- -- 
Support online privacy by using email encryption whenever possible.
Learn how here: http://www.youtube.com/watch?v=bakOKJFtB-k
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTQuRkAAoJECoisBQbQ4v07zUH/2wNQ7+0211+wm5oQP/ABHg7
kQVeQcRz8/BhOp3hzv6HiQ9Oaekfz7QhClbJYPUPE3aR2gxGoCgT6B1G2N75q0pG
piGVgCeogaBA3Ny91sOPRMv92cGWpbTeyO+rhIIIlYWPiZobTaYttYYm1zF6oc6K
CdYzCW9X12/NIXxEkbPnAFJ01Uty0HKccTP+9jex7+gobzl2yCo4MyywwtWF9XEk
K9aZ3+3i+12+F4nDMAAimD02SV6dI8GMpahMf4kNXn0CcMefC9A28FdhhApPh7Nx
1phQnMPZMPdYt0aHgjgzt4N+SR/1EOUZaoqk9ccyXh+khBR84tiUEo6NuOIfTGM=
=Mr12
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x1B438BF4.asc
Type: application/pgp-keys
Size: 21191 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/3990ddd2/attachment.bin>

From justusranvier at gmail.com  Mon Apr  7 17:50:05 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Mon, 07 Apr 2014 17:50:05 +0000
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CANEZrP3_v2zAqMkcTtQ1Mys2rUEcsd_MpLySefpgJ-P7OSg34g@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>	<5342C833.5030906@gmail.com>	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>	<5342D1DB.8060203@monetize.io>	<CAAS2fgRu-0C_ozaN0qSc9SvF2TpZ56NwceLCrfQjikuQgc85tQ@mail.gmail.com>	<5342D9FA.8080102@monetize.io>	<CAAS2fgT5xfYzup01+USkFmFWi=FtDfbPY1HPpTLyQ+6_ejGOZA@mail.gmail.com>	<CACvcBVq2+37jWgxBg2Zjj6KFtT1ZnZzTa7FOw1sLwimeT0ahhA@mail.gmail.com>
	<CANEZrP3_v2zAqMkcTtQ1Mys2rUEcsd_MpLySefpgJ-P7OSg34g@mail.gmail.com>
Message-ID: <5342E54D.9050105@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 04/07/2014 05:40 PM, Mike Hearn wrote:
> The primary resources it needs are disk space and bandwidth, after
> an intensive initial day or two of building the database.

Check out the kind of hardware causal users are running these days.

The bottleneck is not bulk disk space, but rather IOPS.

Most users don't have spare machines to dedicate to the task of
running a full node, nor is it acceptable for them to not be able to
use their device for other tasks while the node is bootstrapping.

- -- 
Support online privacy by using email encryption whenever possible.
Learn how here: http://www.youtube.com/watch?v=bakOKJFtB-k
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTQuVNAAoJECoisBQbQ4v004EIAMPpQLrVlzCoGjcgALyHV4xK
6JDnlCHXTR72mTlKwcbD6Dpyr/Dl6tcXtdbQi0m3gsbOcAZI/eHtrswgunaq7c1y
mTOM2klPE4M8+B/4Ecp+2iK2UM/swlL3z8ryx/HPhgOZ+Rr7AENe3WUYOKiVNE4O
YQP1x9c0l09ma3ZU0sLmz2VTyqVzI7yV3mu/+HKcwYnqNrK9i/c8MRhOLdZ0gcUL
b2PtjjCdnSNLelZvwSLcqqR5+1oejAVwgt1Aq4RGyZzD9DVdCXUR9c9HWLAs0MEU
WPU5gU03YmrE5mkgGHRO3YnDbky0gdAGEw2Phzqd2upud4CLqdhEqA4v6/tQhpk=
=BVpU
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x1B438BF4.asc
Type: application/pgp-keys
Size: 21191 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/4cb4a70b/attachment.bin>

From chris at icloudtools.net  Mon Apr  7 17:39:37 2014
From: chris at icloudtools.net (Chris Williams)
Date: Mon, 7 Apr 2014 17:39:37 +0000
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
Message-ID: <6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>

I?m afraid this is a highly simplistic view of the costs of running a full node.

My node consumes fantastic amounts of data traffic, which is a real cost.

In the 30 days ending Apri 6, my node:

* Received 36.8 gb of data
* Sent 456.5 gb data

At my geographic service location (Singapore), this cost about $90 last month for bandwidth alone. It would be slightly cheaper if I was hosted in the US of course.

But anyone can understand that moving a half-terrabyte of data around in a month will not be cheap.


On Apr 7, 2014, at 8:53 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> On Mon, Apr 7, 2014 at 8:45 AM, Justus Ranvier <justusranvier at gmail.com> wrote:
>> 1. The resource requirements of a full node are moving beyond the
>> capabilities of casual users. This isn't inherently a problem - after
>> all most people don't grow their own food, tailor their own clothes, or
>> keep blacksmith tools handy in to forge their own horseshoes either.
> 
> Right now running a full node consumes about $1 in disk space
> non-reoccurring and costs a couple cents in power per month.
> 
> This isn't to say things are all ducky. But if you're going to say the
> resource requirements are beyond the capabilities of casual users I'm
> afraid I'm going to have to say: citation needed.
> 
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment 
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees_APR
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 496 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/07ccb3d7/attachment.sig>

From brent.shambaugh at gmail.com  Mon Apr  7 17:56:07 2014
From: brent.shambaugh at gmail.com (Brent Shambaugh)
Date: Mon, 7 Apr 2014 12:56:07 -0500
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CANEZrP3_v2zAqMkcTtQ1Mys2rUEcsd_MpLySefpgJ-P7OSg34g@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<5342D1DB.8060203@monetize.io>
	<CAAS2fgRu-0C_ozaN0qSc9SvF2TpZ56NwceLCrfQjikuQgc85tQ@mail.gmail.com>
	<5342D9FA.8080102@monetize.io>
	<CAAS2fgT5xfYzup01+USkFmFWi=FtDfbPY1HPpTLyQ+6_ejGOZA@mail.gmail.com>
	<CACvcBVq2+37jWgxBg2Zjj6KFtT1ZnZzTa7FOw1sLwimeT0ahhA@mail.gmail.com>
	<CANEZrP3_v2zAqMkcTtQ1Mys2rUEcsd_MpLySefpgJ-P7OSg34g@mail.gmail.com>
Message-ID: <CACvcBVpJtXX+7b60+LEsuFPDBfCaRFjy=17B01JGqO2xt8XLnA@mail.gmail.com>

Okay awesome. It seems like I set up a Litecoin node without knowing it
(because it was like this:
https://bitcointalk.org/index.php?topic=128122.0) I was able to bootstrap
it (https://litecoin.info/).


On Mon, Apr 7, 2014 at 12:40 PM, Mike Hearn <mike at plan99.net> wrote:

> It uses ~no electricity, it's not like mining.
>
> The primary resources it needs are disk space and bandwidth, after an
> intensive initial day or two of building the database.
>
> Actually, I wonder if we should start shipping (auditable) pre-baked
> databases calculated up to the last checkpoint so people can download them
> and boot up their node right away. Recalculating the entire thing from
> scratch every time isn't sustainable in the long run anyway.
>
>
> On Mon, Apr 7, 2014 at 7:35 PM, Brent Shambaugh <brent.shambaugh at gmail.com
> > wrote:
>
>> How difficult would it be to set up a node? Using lots of electricity at
>> home (if required) could be an issue, but I do have a Webfaction account.
>>
>>
>> On Mon, Apr 7, 2014 at 12:16 PM, Gregory Maxwell <gmaxwell at gmail.com>wrote:
>>
>>> On Mon, Apr 7, 2014 at 10:01 AM, Mark Friedenbach <mark at monetize.io>
>>> wrote:
>>> > On 04/07/2014 09:57 AM, Gregory Maxwell wrote:
>>> >> That is an implementation issue-- mostly one that arises as an indirect
>>> >> consequence of not having headers first and the parallel fetch, not a
>>> >> requirements issue.
>>> >
>>> > Oh, absolutely. But the question "why are people not running full
>>> > nodes?" has to do with the current implementation, not abstract
>>> > capabilities of a future version of the bitcoind code base.
>>>
>>> The distinction is very important because it's a matter of things we
>>> can and should fix vs things that cannot be fixed except by changing
>>> goals/incentives!  Opposite approaches to handling them.
>>>
>>> When I read "resource requirements of a full node are moving beyond" I
>>> didn't extract from that that "there are implementation issues that
>>> need to be improved to make it work better for low resource users" due
>>> to the word "requirements".
>>>
>>>
>>> ------------------------------------------------------------------------------
>>> Put Bad Developers to Shame
>>> Dominate Development with Jenkins Continuous Integration
>>> Continuously Automate Build, Test & Deployment
>>> Start a new project now. Try Jenkins in the cloud.
>>> http://p.sf.net/sfu/13600_Cloudbees
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>
>>
>>
>> ------------------------------------------------------------------------------
>> Put Bad Developers to Shame
>> Dominate Development with Jenkins Continuous Integration
>> Continuously Automate Build, Test & Deployment
>> Start a new project now. Try Jenkins in the cloud.
>> http://p.sf.net/sfu/13600_Cloudbees
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/e8c86e05/attachment.html>

From mike at plan99.net  Mon Apr  7 18:23:36 2014
From: mike at plan99.net (Mike Hearn)
Date: Mon, 7 Apr 2014 20:23:36 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>
Message-ID: <CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>

>
> * Sent 456.5 gb data
>
> At my geographic service location (Singapore), this cost about $90 last
> month for bandwidth alone.


One of the reasons I initiated the (now stalled) PayFile project was in
anticipation of this problem:

https://github.com/mikehearn/PayFile
http://www.youtube.com/watch?v=r0BXnWlnIi4&feature=youtu.be

At some point if you want to actually download and validate the full block
chain from scratch, you will have to start paying for it I'm sure.

In the meantime:

   1. Getting headers-first implemented and rolled out everywhere would
   reduce the amount of redundant downloading and hopefully reduce transmit
   traffic network-wide.
   2. Implementing chain pruning would allow people to control upload
   bandwidth consumption by reducing the amount of disk storage they allow.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/a570ba8f/attachment.html>

From jtimon at monetize.io  Mon Apr  7 18:23:53 2014
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Mon, 7 Apr 2014 20:23:53 +0200
Subject: [Bitcoin-development] Feedback request: colored coins protocol
In-Reply-To: <CABbpET8Qbvhb47ZJX4EVh4673_ic9UwpMdMyZbsHay9F2zTj9Q@mail.gmail.com>
References: <CABbpET96CboPcQeV-nKXv-CeaPiwpTKVUB_ioGPB2s3_5Y7bnQ@mail.gmail.com>
	<5341E1FF.7080204@monetize.io>
	<CABbpET_JFceNhRkxSZMyiTxkkYr2MvQVob7o4juEsPj4wo8e8g@mail.gmail.com>
	<CAC1+kJMpEetKdpKs-OaFGvnBwi6-Pj8ycJ77cJzHOTk_jUPw=g@mail.gmail.com>
	<CABbpET-S5ahuQVcBaJZGyvFMS1=RU2mJZUAmECBKhFOFu6B6EA@mail.gmail.com>
	<5342BEE0.3050204@monetize.io>
	<CABbpET8Qbvhb47ZJX4EVh4673_ic9UwpMdMyZbsHay9F2zTj9Q@mail.gmail.com>
Message-ID: <CAC1+kJPBH85p8Mgu0_7+1JxizgX19a-HWWF+38BLA7DZ4Ldd6g@mail.gmail.com>

On 4/7/14, Flavien Charlon <flavien.charlon at coinprism.com> wrote:
> Ok, I guess I'm not using the proper terminology. It would be listed on the
> "Asset" section of the company's balance sheet, is what I meant.

No, it's an asset for the owner of the share, not the company, just
like the gold plates are not assets for the company when someone else
holds them.
What you're doing is getting less capital for the company due to the
money that is going to pay the gold costs.
Are you rising capital or selling gold?
It doesn't make sense to do both at once.
You need money, why would you spend money on gold before asking for
other people's money to build your company?
Investors will appreciate the convenience of being able to buy shares
of your company and gold separately (or not buy gold at all).

It may even be more clear for other use cases different than stocks.
Does an IOU written in a gold plate make sense to you?



From tamas at bitsofproof.com  Mon Apr  7 18:35:40 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Mon, 7 Apr 2014 20:35:40 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>
	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>
Message-ID: <6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>

Headers first loading allows the node to run SPV from the very first minutes and it can converge to full node by time.
This is BTW how newest versions of BOP can work.

Pruning however disqualifies the node as a source for bootstrapping an other full node. 
BTW, did we already agree on the service bits for an archive node?


Tamas Blummer
http://bitsofproof.com

On 07.04.2014, at 20:23, Mike Hearn <mike at plan99.net> wrote:

> * Sent 456.5 gb data
> 
> At my geographic service location (Singapore), this cost about $90 last month for bandwidth alone.
> 
> One of the reasons I initiated the (now stalled) PayFile project was in anticipation of this problem:
> 
> https://github.com/mikehearn/PayFile
> http://www.youtube.com/watch?v=r0BXnWlnIi4&feature=youtu.be
> 
> At some point if you want to actually download and validate the full block chain from scratch, you will have to start paying for it I'm sure.
> 
> In the meantime:
> Getting headers-first implemented and rolled out everywhere would reduce the amount of redundant downloading and hopefully reduce transmit traffic network-wide.
> Implementing chain pruning would allow people to control upload bandwidth consumption by reducing the amount of disk storage they allow.
> 
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment 
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees_______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/3bc77bbe/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/3bc77bbe/attachment.sig>

From gmaxwell at gmail.com  Mon Apr  7 18:49:05 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 7 Apr 2014 11:49:05 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>
	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>
	<6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>
Message-ID: <CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>

On Mon, Apr 7, 2014 at 11:35 AM, Tamas Blummer <tamas at bitsofproof.com> wrote:
> BTW, did we already agree on the service bits for an archive node?

I'm still very concerned that a binary archive bit will cause extreme
load hot-spotting and the kind of binary "Use lots of resources YES or
NO" I think we're currently suffering some from, but at that point
enshrined in the protocol.

It would be much better to extend the addr messages so that nodes can
indicate a range or two of blocks that they're serving, so that all
nodes can contribute fractionally according to their means. E.g. if
you want to offer up 8 GB of distributed storage and contribute to the
availability of the blockchain,  without having to swollow the whole
20, 30, 40 ... gigabyte pill.

Already we need that kind of distributed storage for the most recent
blocks to prevent extreme bandwidth load on archives, so extending it
to arbitrary ranges is only more complicated because there is
currently no room to signal it.



From tamas at bitsofproof.com  Mon Apr  7 19:00:27 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Mon, 7 Apr 2014 21:00:27 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>
	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>
	<6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>
	<CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>
Message-ID: <8A6DEBA4-EA59-4BAE-95CF-C964C2DBB84B@bitsofproof.com>

Once a single transaction in pruned in a block, the block is no longer eligible to be served to other nodes. 
Which transactions are pruned can be rather custom e.g. even depending on the wallet(s) of the node,
therefore I guess it is more handy to return some bitmap of pruned/full blocks than ranges.

Tamas Blummer
http://bitsofproof.com

On 07.04.2014, at 20:49, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> On Mon, Apr 7, 2014 at 11:35 AM, Tamas Blummer <tamas at bitsofproof.com> wrote:
>> BTW, did we already agree on the service bits for an archive node?
> 
> I'm still very concerned that a binary archive bit will cause extreme
> load hot-spotting and the kind of binary "Use lots of resources YES or
> NO" I think we're currently suffering some from, but at that point
> enshrined in the protocol.
> 
> It would be much better to extend the addr messages so that nodes can
> indicate a range or two of blocks that they're serving, so that all
> nodes can contribute fractionally according to their means. E.g. if
> you want to offer up 8 GB of distributed storage and contribute to the
> availability of the blockchain,  without having to swollow the whole
> 20, 30, 40 ... gigabyte pill.
> 
> Already we need that kind of distributed storage for the most recent
> blocks to prevent extreme bandwidth load on archives, so extending it
> to arbitrary ranges is only more complicated because there is
> currently no room to signal it.
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/e37eb022/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/e37eb022/attachment.sig>

From gmaxwell at gmail.com  Mon Apr  7 19:02:28 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 7 Apr 2014 12:02:28 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <8A6DEBA4-EA59-4BAE-95CF-C964C2DBB84B@bitsofproof.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>
	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>
	<6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>
	<CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>
	<8A6DEBA4-EA59-4BAE-95CF-C964C2DBB84B@bitsofproof.com>
Message-ID: <CAAS2fgTE8YKPtkw7Kwuvzs-tXAG_2S2FFpZEPb2W3--pT9c7VA@mail.gmail.com>

On Mon, Apr 7, 2014 at 12:00 PM, Tamas Blummer <tamas at bitsofproof.com> wrote:
> Once a single transaction in pruned in a block, the block is no longer
> eligible to be served to other nodes.
> Which transactions are pruned can be rather custom e.g. even depending on
> the wallet(s) of the node,
> therefore I guess it is more handy to return some bitmap of pruned/full
> blocks than ranges.

This isn't at all how pruning works in Bitcoin-QT  (nor is it how I
expect pruning to work for any mature implementation). Pruning can
work happily on a whole block at a time basis regardless if all the
transactions in it are spent or not.



From gmaxwell at gmail.com  Mon Apr  7 19:03:54 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 7 Apr 2014 12:03:54 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <8A6DEBA4-EA59-4BAE-95CF-C964C2DBB84B@bitsofproof.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>
	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>
	<6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>
	<CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>
	<8A6DEBA4-EA59-4BAE-95CF-C964C2DBB84B@bitsofproof.com>
Message-ID: <CAAS2fgT_9tXCxOHX_sN0wa=GRMn5seu3-o1UdiLjvbivFr46_w@mail.gmail.com>

On Mon, Apr 7, 2014 at 12:00 PM, Tamas Blummer <tamas at bitsofproof.com> wrote:
> therefore I guess it is more handy to return some bitmap of pruned/full
> blocks than ranges.

A bitmap also means high overhead and? if it's used to advertise
non-contiguous blocks? poor locality, since blocks are fetched
sequentially.



From mark at monetize.io  Mon Apr  7 18:48:26 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Mon, 07 Apr 2014 11:48:26 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <8A6DEBA4-EA59-4BAE-95CF-C964C2DBB84B@bitsofproof.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>	<5342C833.5030906@gmail.com>	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>	<6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>	<CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>
	<8A6DEBA4-EA59-4BAE-95CF-C964C2DBB84B@bitsofproof.com>
Message-ID: <5342F2FA.6080902@monetize.io>

On 04/07/2014 12:00 PM, Tamas Blummer wrote:
> Once a single transaction in pruned in a block, the block is no longer
> eligible to be served to other nodes. 
> Which transactions are pruned can be rather custom e.g. even depending
> on the wallet(s) of the node,
> therefore I guess it is more handy to return some bitmap of pruned/full
> blocks than ranges.

The point is that the node has decided not to prune transactions from
that block, so that it is capable of returning full blocks within that
range.



From abrutschy at xylon.de  Mon Apr  7 18:30:07 2014
From: abrutschy at xylon.de (Arne Brutschy)
Date: Mon, 07 Apr 2014 20:30:07 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <5342E54D.9050105@gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>	<5342C833.5030906@gmail.com>	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>	<5342D1DB.8060203@monetize.io>	<CAAS2fgRu-0C_ozaN0qSc9SvF2TpZ56NwceLCrfQjikuQgc85tQ@mail.gmail.com>	<5342D9FA.8080102@monetize.io>	<CAAS2fgT5xfYzup01+USkFmFWi=FtDfbPY1HPpTLyQ+6_ejGOZA@mail.gmail.com>	<CACvcBVq2+37jWgxBg2Zjj6KFtT1ZnZzTa7FOw1sLwimeT0ahhA@mail.gmail.com>	<CANEZrP3_v2zAqMkcTtQ1Mys2rUEcsd_MpLySefpgJ-P7OSg34g@mail.gmail.com>
	<5342E54D.9050105@gmail.com>
Message-ID: <5342EEAF.2040906@xylon.de>


> The bottleneck is not bulk disk space, but rather IOPS.

Exactly. I stopped running a full node on both of my desktops machines
in the last month. Both systems were simply becoming very noticeable
(=unbearably) sluggish. I am also running dedicated nodes, which are
fine, but on a desktop latency is a major issue (or, let's say,  a
different issue than on a server).

I didn't notice any network latency, but that's hard to judge as our
internet is pants anyway.

Arne

PS: my machines aren't the newest, but still do a stellar job (without
bitcoind running ;)



From tamas at bitsofproof.com  Mon Apr  7 19:05:48 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Mon, 7 Apr 2014 21:05:48 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAAS2fgTE8YKPtkw7Kwuvzs-tXAG_2S2FFpZEPb2W3--pT9c7VA@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>
	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>
	<6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>
	<CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>
	<8A6DEBA4-EA59-4BAE-95CF-C964C2DBB84B@bitsofproof.com>
	<CAAS2fgTE8YKPtkw7Kwuvzs-tXAG_2S2FFpZEPb2W3--pT9c7VA@mail.gmail.com>
Message-ID: <EF231ACC-7B6C-44F2-B154-A3EFD014B081@bitsofproof.com>

Maybe it is not a question of the maturity of the implementation but that of the person making presumptions of it.

I consider a fully pruned blockchain being equivalent to the UTXO. Block that hold no
more unspent transaction are reduced to a header. There is however no harm if more retained.

Tamas Blummer
http://bitsofproof.com

On 07.04.2014, at 21:02, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> On Mon, Apr 7, 2014 at 12:00 PM, Tamas Blummer <tamas at bitsofproof.com> wrote:
>> Once a single transaction in pruned in a block, the block is no longer
>> eligible to be served to other nodes.
>> Which transactions are pruned can be rather custom e.g. even depending on
>> the wallet(s) of the node,
>> therefore I guess it is more handy to return some bitmap of pruned/full
>> blocks than ranges.
> 
> This isn't at all how pruning works in Bitcoin-QT  (nor is it how I
> expect pruning to work for any mature implementation). Pruning can
> work happily on a whole block at a time basis regardless if all the
> transactions in it are spent or not.
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/5d49d687/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/5d49d687/attachment.sig>

From tier.nolan at gmail.com  Mon Apr  7 19:13:07 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Mon, 7 Apr 2014 20:13:07 +0100
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAAS2fgT_9tXCxOHX_sN0wa=GRMn5seu3-o1UdiLjvbivFr46_w@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>
	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>
	<6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>
	<CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>
	<8A6DEBA4-EA59-4BAE-95CF-C964C2DBB84B@bitsofproof.com>
	<CAAS2fgT_9tXCxOHX_sN0wa=GRMn5seu3-o1UdiLjvbivFr46_w@mail.gmail.com>
Message-ID: <CAE-z3OWpw-uvjvRD-DymjtRjMK=zBF_B46do8dAQQcbWu6oyXQ@mail.gmail.com>

On Mon, Apr 7, 2014 at 8:03 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> A bitmap also means high overhead and-- if it's used to advertise
> non-contiguous blocks-- poor locality, since blocks are fetched
> sequentially.
>

A range seems like a great compromise.  Putting it in the address is also a
pretty cool.

If light nodes selected a random contiguous 1GB of the block-chain, then
they could handle most of the download overhead, rather than the full nodes.

Another way to do it would be to have something like a routing table.  If a
node is queried for a block, it can reply with the IP of a node with that
block instead of sending the block.

One problem is that it means that light nodes have to accept incoming
connections.  Otherwise, it would have to be routed through the network.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/b5bfb780/attachment.html>

From tamas at bitsofproof.com  Mon Apr  7 19:20:31 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Mon, 7 Apr 2014 21:20:31 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAAS2fgT_9tXCxOHX_sN0wa=GRMn5seu3-o1UdiLjvbivFr46_w@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>
	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>
	<6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>
	<CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>
	<8A6DEBA4-EA59-4BAE-95CF-C964C2DBB84B@bitsofproof.com>
	<CAAS2fgT_9tXCxOHX_sN0wa=GRMn5seu3-o1UdiLjvbivFr46_w@mail.gmail.com>
Message-ID: <8222EAFD-813E-4046-A751-FD3D04FF6764@bitsofproof.com>


Once headers are loaded first there is no reason for sequential loading. 

Validation has to be sequantial, but that step can be deferred until the blocks before a point are loaded and continous.

Tamas Blummer
http://bitsofproof.com

On 07.04.2014, at 21:03, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> On Mon, Apr 7, 2014 at 12:00 PM, Tamas Blummer <tamas at bitsofproof.com> wrote:
>> therefore I guess it is more handy to return some bitmap of pruned/full
>> blocks than ranges.
> 
> A bitmap also means high overhead and? if it's used to advertise
> non-contiguous blocks? poor locality, since blocks are fetched
> sequentially.
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/895983a6/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/895983a6/attachment.sig>

From flavien.charlon at coinprism.com  Mon Apr  7 19:26:07 2014
From: flavien.charlon at coinprism.com (Flavien Charlon)
Date: Mon, 7 Apr 2014 20:26:07 +0100
Subject: [Bitcoin-development] Feedback request: colored coins protocol
In-Reply-To: <CAC1+kJPBH85p8Mgu0_7+1JxizgX19a-HWWF+38BLA7DZ4Ldd6g@mail.gmail.com>
References: <CABbpET96CboPcQeV-nKXv-CeaPiwpTKVUB_ioGPB2s3_5Y7bnQ@mail.gmail.com>
	<5341E1FF.7080204@monetize.io>
	<CABbpET_JFceNhRkxSZMyiTxkkYr2MvQVob7o4juEsPj4wo8e8g@mail.gmail.com>
	<CAC1+kJMpEetKdpKs-OaFGvnBwi6-Pj8ycJ77cJzHOTk_jUPw=g@mail.gmail.com>
	<CABbpET-S5ahuQVcBaJZGyvFMS1=RU2mJZUAmECBKhFOFu6B6EA@mail.gmail.com>
	<5342BEE0.3050204@monetize.io>
	<CABbpET8Qbvhb47ZJX4EVh4673_ic9UwpMdMyZbsHay9F2zTj9Q@mail.gmail.com>
	<CAC1+kJPBH85p8Mgu0_7+1JxizgX19a-HWWF+38BLA7DZ4Ldd6g@mail.gmail.com>
Message-ID: <CABbpET8DaEKbafX6Cju_e+ygeV1WDf_LXQKU6tTofh32R9XM=Q@mail.gmail.com>

An IOU written in a gold plate sure makes no sense. I see what you are
saying, the inconvenience comes from the fact that the buyer has to buy
some amount of BTC at the same time as he buys a share.

That's why I was making the point that you could have a colored coin
representing a single share, a different colored coin representing 10
shares, and another one representing 100 shares (like the different
denominations of dollar bills). Assuming you have a proper application
layer/UI that can hide this from the user, the need for padding is greatly
reduced. My opinion is that the protocol should do the minimum required and
remain as simple as possible. If a proper UI can work around this, then it
might not be worth complicating the protocol for this. Also, the dust rule
may disappear all together one day (it's already been slashed heavily to
540 satoshis), at which point we'll be left with a useless padding
parameter. It's easier to add something when you need it than to remove it.

But I am posting here to see how people feel about this, and I see you are
on the opinion that satoshi_value and color_value should have a degree of
freedom between each other. Thanks for the feedback.


On Mon, Apr 7, 2014 at 7:23 PM, Jorge Tim?n <jtimon at monetize.io> wrote:

> On 4/7/14, Flavien Charlon <flavien.charlon at coinprism.com> wrote:
> > Ok, I guess I'm not using the proper terminology. It would be listed on
> the
> > "Asset" section of the company's balance sheet, is what I meant.
>
> No, it's an asset for the owner of the share, not the company, just
> like the gold plates are not assets for the company when someone else
> holds them.
> What you're doing is getting less capital for the company due to the
> money that is going to pay the gold costs.
> Are you rising capital or selling gold?
> It doesn't make sense to do both at once.
> You need money, why would you spend money on gold before asking for
> other people's money to build your company?
> Investors will appreciate the convenience of being able to buy shares
> of your company and gold separately (or not buy gold at all).
>
> It may even be more clear for other use cases different than stocks.
> Does an IOU written in a gold plate make sense to you?
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/d60b3540/attachment.html>

From mark at monetize.io  Mon Apr  7 19:13:04 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Mon, 07 Apr 2014 12:13:04 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <8222EAFD-813E-4046-A751-FD3D04FF6764@bitsofproof.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>	<5342C833.5030906@gmail.com>	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>	<6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>	<CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>	<8A6DEBA4-EA59-4BAE-95CF-C964C2DBB84B@bitsofproof.com>	<CAAS2fgT_9tXCxOHX_sN0wa=GRMn5seu3-o1UdiLjvbivFr46_w@mail.gmail.com>
	<8222EAFD-813E-4046-A751-FD3D04FF6764@bitsofproof.com>
Message-ID: <5342F8C0.60500@monetize.io>



On 04/07/2014 12:20 PM, Tamas Blummer wrote:
> Validation has to be sequantial, but that step can be deferred until the
> blocks before a point are loaded and continous.

And how do you find those blocks?

I have a suggestion: have nodes advertise which range of full blocks
they possess, then you can perform synchronization from the adversed ranges!



From tamas at bitsofproof.com  Mon Apr  7 19:36:56 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Mon, 7 Apr 2014 21:36:56 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <5342F8C0.60500@monetize.io>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>	<5342C833.5030906@gmail.com>	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>	<6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>	<CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>	<8A6DEBA4-EA59-4BAE-95CF-C964C2DBB84B@bitsofproof.com>	<CAAS2fgT_9tXCxOHX_sN0wa=GRMn5seu3-o1UdiLjvbivFr46_w@mail.gmail.com>
	<8222EAFD-813E-4046-A751-FD3D04FF6764@bitsofproof.com>
	<5342F8C0.60500@monetize.io>
Message-ID: <B7163C8A-1D6E-4761-AC7B-8BD7DF859402@bitsofproof.com>

You have the trunk defined by the headers. Once a range from genesis to block n is fully downloaded,
you may validate upto block n. Furthermore after validation you can prune transactions spent until block n.

You would approach the highest block with validation and stop pruning say 100 blocks before it, to leave room for reorgs.

Tamas Blummer
http://bitsofproof.com

On 07.04.2014, at 21:13, Mark Friedenbach <mark at monetize.io> wrote:

> 
> 
> On 04/07/2014 12:20 PM, Tamas Blummer wrote:
>> Validation has to be sequantial, but that step can be deferred until the
>> blocks before a point are loaded and continous.
> 
> And how do you find those blocks?
> 
> I have a suggestion: have nodes advertise which range of full blocks
> they possess, then you can perform synchronization from the adversed ranges!
> 
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment 
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/cc4c7838/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/cc4c7838/attachment.sig>

From pmlyon at hotmail.ca  Mon Apr  7 19:30:54 2014
From: pmlyon at hotmail.ca (Paul Lyon)
Date: Mon, 7 Apr 2014 16:30:54 -0300
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <8222EAFD-813E-4046-A751-FD3D04FF6764@bitsofproof.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>,
	<5342C833.5030906@gmail.com>,
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>,
	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>,
	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>,
	<6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>,
	<CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>,
	<8A6DEBA4-EA59-4BAE-95CF-C964C2DBB84B@bitsofproof.com>,
	<CAAS2fgT_9tXCxOHX_sN0wa=GRMn5seu3-o1UdiLjvbivFr46_w@mail.gmail.com>,
	<8222EAFD-813E-4046-A751-FD3D04FF6764@bitsofproof.com>
Message-ID: <BLU170-W124FFC4A5D42BC516663032A5680@phx.gbl>

I hope I'm not thread-jacking here, apologies if so, but that's the approach I've taken with the node I'm working on.
Headers can be downloaded and stored in any order, it'll make sense of what the winning chain is. Blocks don't need to be downloaded in any particular order and they don't need to be saved to disk, the UTXO is fully self-contained. That way the concern of storing blocks for seeding (or not) is wholly separated from syncing the UTXO. This allows me to do the initial blockchain sync in ~6 hours when I use my SSD. I only need enough disk space to store the UTXO, and then whatever amount of block data the user would want to store for the health of the network.
This project is a bitcoin learning exercise for me, so I can only hope I don't have any critical design flaws in there. :)

From: tamas at bitsofproof.com
Date: Mon, 7 Apr 2014 21:20:31 +0200
To: gmaxwell at gmail.com
CC: bitcoin-development at lists.sourceforge.net
Subject: Re: [Bitcoin-development] Why are we bleeding nodes?


Once headers are loaded first there is no reason for sequential loading. 
Validation has to be sequantial, but that step can be deferred until the blocks before a point are loaded and continous.
Tamas Blummerhttp://bitsofproof.com


On 07.04.2014, at 21:03, Gregory Maxwell <gmaxwell at gmail.com> wrote:On Mon, Apr 7, 2014 at 12:00 PM, Tamas Blummer <tamas at bitsofproof.com> wrote:
therefore I guess it is more handy to return some bitmap of pruned/full
blocks than ranges.

A bitmap also means high overhead and? if it's used to advertise
non-contiguous blocks? poor locality, since blocks are fetched
sequentially.



------------------------------------------------------------------------------
Put Bad Developers to Shame
Dominate Development with Jenkins Continuous Integration
Continuously Automate Build, Test & Deployment 
Start a new project now. Try Jenkins in the cloud.
http://p.sf.net/sfu/13600_Cloudbees
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/8d2a8562/attachment.html>

From hozer at hozed.org  Mon Apr  7 19:46:01 2014
From: hozer at hozed.org (Troy Benjegerdes)
Date: Mon, 7 Apr 2014 14:46:01 -0500
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAAf19Wrz0u_e5V9Gb=_CAG=mHtE9nA_VETgYZeCXZqwaGeYKuQ@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<CALC81CMc7BridL7600b7bij3dJHzeQWgTv=iqVeW--n-we+1Yw@mail.gmail.com>
	<lhua2p$lp5$1@ger.gmane.org>
	<CANEZrP3F+UQ1amVAK4a9_UCsXia7Yfv0RO4pWK7NTde0GvH-0A@mail.gmail.com>
	<CAAf19Wrz0u_e5V9Gb=_CAG=mHtE9nA_VETgYZeCXZqwaGeYKuQ@mail.gmail.com>
Message-ID: <20140407194601.GP3180@nl.grid.coop>

I understand the theoretical benefits of multi-sig. But if you want
to make this mind-numbingly simple, do it on the *existing* single-sig.

But why in the world do we not have a *business* that offers bitcoin
wallet insurance? The bitcoin world (and this list) ran around blaming
MtGox and users for being 'stupid' to trust mtgox.

So start a multi-level marketing business that offers *insurance* so
if your bitcoin wallet gets hacked/stolen/whatever, your 'upstream'
or whomever sold you the wallet comes to your house with a new 
computer or installs the new wallet software, or whatever, or just
makes it good.

Now, if the **insurance underwriter** decides that multisig will 
reduce fraud, and **tests it**, then I'd say we do multi-sig. But right
now we are just a bunch of technology wizards trying to force our own
opinions about what's right and 'simple' for end users without ever
asking the damn end-users.

And then we call the end-users idiots because some scammer calls them
and says "I'm calling from Microsoft and your computer is broke, please
download this software to fix it".

Multi-sig is more magical moon-math that scammers will exploit to con
your grandma out of bitcoin, and then your friends will call her a stupid
luddite for falling for it.

Fix the cultural victim-blaming bullshit and you'll fix the node bleeding
problem.

On Mon, Apr 07, 2014 at 10:15:15AM -0400, Eric Martindale wrote:
> We need to make it so mind-numbingly simple to "run Bitcoin correctly" that
> the average user doesn't find reasons to do so in the course of normal
> use.  Right now, Coinbase and Bitstamp are winning in the user experience
> battle, which technically endanger the user, and by proxy the Bitcoin
> network.
> 
> Multi-sig as a default is a start.  It won't succeed unless the user
> experience is simply better than trusted third parties, but we need to
> start the education process with the very basic fundamental: trusting a
> third-party with full access to your Bitcoin is just replacing one
> centralized banking system with another.
> 
> Eric Martindale
> Developer Evangelist, BitPay
> +1 (919) 374-2020
> On Apr 7, 2014 7:05 AM, "Mike Hearn" <mike at plan99.net> wrote:
> 
> > My guess is that a large number of users have lost interest after they
> >> lost their money in MtGox. The 24th of February coincides with the
> >> "final" shutdown
> >
> >
> > Sigh. It would not be surprising if MtGox has indeed dealt the community a
> > critical blow in this regard. TX traffic is down since then too:
> >
> >
> > https://blockchain.info/charts/n-transactions-excluding-popular?timespan=60days&showDataPoints=false&daysAverageString=1&show_header=true&scale=0&address=
> >
> > Judging from comments and the leaked user db, it seems a lot of well known
> > people lost money there   (not me fortunately). I wish I could say people
> > have learned but from the size of the deposit base at Bitstamp they clearly
> > have not. A lot of Bitcoin users don't seem to be ready to be their own
> > bank, yet still want to own some on the assumption everyone else either is
> > or soon will be. So it's really only a matter of time until something goes
> > wrong with some large bitbank again, either Bitstamp or Coinbase.
> >
> > Some days I wonder if Bitcoin will be killed off by people who just refuse
> > to use it properly before it ever gets a chance to shine. The general
> > public doesn't distinguish between "Bitcoin users" who deposit with a third
> > party and the real Bitcoin users who don't.
> >
> >
> > ------------------------------------------------------------------------------
> > Put Bad Developers to Shame
> > Dominate Development with Jenkins Continuous Integration
> > Continuously Automate Build, Test & Deployment
> > Start a new project now. Try Jenkins in the cloud.
> > http://p.sf.net/sfu/13600_Cloudbees_APR
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
> >

> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment 
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees_APR

> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development


-- 
----------------------------------------------------------------------------
Troy Benjegerdes                 'da hozer'                  hozer at hozed.org
7 elements      earth::water::air::fire::mind::spirit::soul        grid.coop

      Never pick a fight with someone who buys ink by the barrel,
         nor try buy a hacker who makes money by the megahash




From tamas at bitsofproof.com  Mon Apr  7 19:50:26 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Mon, 7 Apr 2014 21:50:26 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <BLU170-W124FFC4A5D42BC516663032A5680@phx.gbl>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>,
	<5342C833.5030906@gmail.com>,
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>,
	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>,
	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>,
	<6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>,
	<CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>,
	<8A6DEBA4-EA59-4BAE-95CF-C964C2DBB84B@bitsofproof.com>,
	<CAAS2fgT_9tXCxOHX_sN0wa=GRMn5seu3-o1UdiLjvbivFr46_w@mail.gmail.com>,
	<8222EAFD-813E-4046-A751-FD3D04FF6764@bitsofproof.com>
	<BLU170-W124FFC4A5D42BC516663032A5680@phx.gbl>
Message-ID: <AAC2AFE2-2305-48CF-850A-522CFF2A0ACE@bitsofproof.com>

You have to load headers sequantially to be able to connect them and determine the longest chain.

Blocks can be loaded in random order once you have their order given by the headers.
Computing the UTXO however will force you to at least temporarily store the blocks unless you have plenty of RAM. 

Regards,

Tamas Blummer
http://bitsofproof.com

On 07.04.2014, at 21:30, Paul Lyon <pmlyon at hotmail.ca> wrote:

> I hope I'm not thread-jacking here, apologies if so, but that's the approach I've taken with the node I'm working on.
> 
> Headers can be downloaded and stored in any order, it'll make sense of what the winning chain is. Blocks don't need to be downloaded in any particular order and they don't need to be saved to disk, the UTXO is fully self-contained. That way the concern of storing blocks for seeding (or not) is wholly separated from syncing the UTXO. This allows me to do the initial blockchain sync in ~6 hours when I use my SSD. I only need enough disk space to store the UTXO, and then whatever amount of block data the user would want to store for the health of the network.
> 
> This project is a bitcoin learning exercise for me, so I can only hope I don't have any critical design flaws in there. :)
> 
> From: tamas at bitsofproof.com
> Date: Mon, 7 Apr 2014 21:20:31 +0200
> To: gmaxwell at gmail.com
> CC: bitcoin-development at lists.sourceforge.net
> Subject: Re: [Bitcoin-development] Why are we bleeding nodes?
> 
> 
> Once headers are loaded first there is no reason for sequential loading. 
> 
> Validation has to be sequantial, but that step can be deferred until the blocks before a point are loaded and continous.
> 
> Tamas Blummer
> http://bitsofproof.com
> 
> On 07.04.2014, at 21:03, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> 
>> On Mon, Apr 7, 2014 at 12:00 PM, Tamas Blummer <tamas at bitsofproof.com> wrote:
>>> therefore I guess it is more handy to return some bitmap of pruned/full
>>> blocks than ranges.
>> 
>> A bitmap also means high overhead and? if it's used to advertise
>> non-contiguous blocks? poor locality, since blocks are fetched
>> sequentially.
>> 
> 
> 
> ------------------------------------------------------------------------------ Put Bad Developers to Shame Dominate Development with Jenkins Continuous Integration Continuously Automate Build, Test & Deployment Start a new project now. Try Jenkins in the cloud.http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________ Bitcoin-development mailing list Bitcoin-development at lists.sourceforge.nethttps://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/c7bb2295/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/c7bb2295/attachment.sig>

From alex.mizrahi at gmail.com  Mon Apr  7 19:58:35 2014
From: alex.mizrahi at gmail.com (Alex Mizrahi)
Date: Mon, 7 Apr 2014 22:58:35 +0300
Subject: [Bitcoin-development] Feedback request: colored coins protocol
In-Reply-To: <CABbpET8DaEKbafX6Cju_e+ygeV1WDf_LXQKU6tTofh32R9XM=Q@mail.gmail.com>
References: <CABbpET96CboPcQeV-nKXv-CeaPiwpTKVUB_ioGPB2s3_5Y7bnQ@mail.gmail.com>
	<5341E1FF.7080204@monetize.io>
	<CABbpET_JFceNhRkxSZMyiTxkkYr2MvQVob7o4juEsPj4wo8e8g@mail.gmail.com>
	<CAC1+kJMpEetKdpKs-OaFGvnBwi6-Pj8ycJ77cJzHOTk_jUPw=g@mail.gmail.com>
	<CABbpET-S5ahuQVcBaJZGyvFMS1=RU2mJZUAmECBKhFOFu6B6EA@mail.gmail.com>
	<5342BEE0.3050204@monetize.io>
	<CABbpET8Qbvhb47ZJX4EVh4673_ic9UwpMdMyZbsHay9F2zTj9Q@mail.gmail.com>
	<CAC1+kJPBH85p8Mgu0_7+1JxizgX19a-HWWF+38BLA7DZ4Ldd6g@mail.gmail.com>
	<CABbpET8DaEKbafX6Cju_e+ygeV1WDf_LXQKU6tTofh32R9XM=Q@mail.gmail.com>
Message-ID: <CAE28kURu7-OgY6vN0az6rQUGpChK76ZQL9_eL1J4j-HZOqhRYA@mail.gmail.com>

This is beyond ridiculous...

Color kernel which works with padding is still quite simple. I think we
have extra 10-50 lines of code to handle padding in coloredcoinlib.
Essentially we have a couple of lines like this :

    value_wop = tx.outputs[oi].value - padding

(value_wop means "value without padding").
And then we have like 10 lines of code which selects padding for a
transaction.

That's not a lot of extra complexity. And it solves the problem once and
for all.

What you propose instead: "a different colored coin representing 10 shares,
and another one representing 100 shares (like the different denominations
of dollar bills)"  is much more complex, and it won't work:

Suppose you have $100 coin, as a single coin.
How do you send $54.23?
That's simply impossible.

So you'd rather push complexity to higher levels (and create inconvenience
for end users, as you admitted yourself) than add 10-50 lines of code to
color kernel?
I just do not understand this.

But I'm not going to argue. I already wrote everything which I could write
on this topic.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/9330b1bf/attachment.html>

From hozer at hozed.org  Mon Apr  7 20:08:39 2014
From: hozer at hozed.org (Troy Benjegerdes)
Date: Mon, 7 Apr 2014 15:08:39 -0500
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CABsx9T0FJGn3a+JjiLK6yhLN4psqgqhX766FY+5r-mK9v_aYnw@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CABsx9T0FJGn3a+JjiLK6yhLN4psqgqhX766FY+5r-mK9v_aYnw@mail.gmail.com>
Message-ID: <20140407200838.GR3180@nl.grid.coop>

I have to play dissenter here again..

Using a bitcoin address as a persistent identity key is the first real-world
use of Bitcoin that I can imagine will make it a 'killer app' that everyone
and their grandma will want to use.

If you think 'certificates' are a good solution, then there is some way in
which we have dramatically divergent goals.

I like distributed, decentralized systems in which anyone can download the 
code and be free to participate in the things they want to securely and 
reliably.

As soon as I hear 'certificate', I see a system in which one must pay at toll
to speak, and which puts the listeners at risk because a certificate issuer
is such a high-value target for malicious attack.

Self-signed certificates are great for techno-wizards, but grandma has no
idea if the self-signed cert was signed by her grandson, or by the hacker
trying to redirect her social security check.

"This is your bitcoin address, it's your money AND your key to log into 
your bank website securely, so don't lose it. If you want our address
protection insurance service that will be $20 per month, and if you do lose
it, we'll fix it. If you keep losing it, then your rates will go up, just 
like car insurance if you keep crashing"


On Fri, Apr 04, 2014 at 09:32:40AM -0400, Gavin Andresen wrote:
> Using a bitcoin address repeatedly is something we're trying to move away
> from.
> 
> And using a bitcoin address as a persistent identity key feels like the
> wrong direction to me.
> 
> Better to use something like client certificates, the FIDO alliance's
> (new!) specs:
>   http://fidoalliance.org/specifications/download
> 
> ... or Steve Gibson's proposed SQRL system:
>   https://www.grc.com/sqrl/sqrl.htm
> 
> If one of those systems gets critical mass and actually starts being
> successful, then I think it would make sense to specify a standard way of
> using a HD wallet's deterministic seed to derive a key used for the FIDO or
> SQRL systems.
> 
> 
> 
> 
> On Fri, Apr 4, 2014 at 9:22 AM, Eric Larchev?que <elarch at gmail.com> wrote:
> 
> > What I'm trying to achieve, is to have a very simple way of authenticating
> > yourself with one Bitcoin address from your wallet.
> > For most of the people using Bitcoin, their wallet is on their phone.
> >
> > The UX is clear and simple :
> > 1. click on "connect with Bitcoin" (the audience is normal people)
> > 2. flash the QRcode with your wallet (blockchain.info, mycelium, ...)
> > 3. accept the authentication request (same style than OpenID or Facebook
> > connect)
> > 4. user is autologged and identified by the chosen Bitcoin public address
> >
> > It makes sense only if major wallets are supporting the protocol. If you
> > need to install a plugin or download a third party software, no one will do
> > it.
> > I see only benefits for the entire ecosystem, and if I'm working on such a
> > proposition it is because I really need this feature.
> >
> > Of course, it can be done without a BIP, I just need to convince wallet
> > developpers one by one to implement the feature.
> > But I thought it was much better to start the "official" way, so all
> > wallet could easily find and implement the same authentication mechanism.
> >
> > >  Bitcoin and website authentication are unrelated problems
> >
> > I respectfully disagree. Many services require your Bitcoin address, and
> > to do that they artificially request an email/password to store it.
> > This is not about authentication as an identity (as "I'm Eric
> > Larcheveque"), but as in "I'm proving to you that I control this address".
> >
> > Without such a standard protocol, you could never envision a pure Bitcoin
> > physical locker rental, or booking an hotel room via Bitcoin and opening
> > the door through the paying address.
> >
> > Eric
> >
> >
> >
> > On Fri, Apr 4, 2014 at 3:08 PM, Mike Hearn <mike at plan99.net> wrote:
> >
> >> This comes up every few months. I think the problem you are trying to
> >> solve is already solved by SSL client certificates, and if you want to help
> >> make them more widespread the programs you need to upgrade are web browsers
> >> and not Bitcoin wallets. There are certainly bits of infrastructure you
> >> could reuse here and there, like perhaps a TREZOR with a custom firmware
> >> extension for really advanced/keen users, but overall Bitcoin and website
> >> authentication are unrelated problems.
> >>
> >>
> >> On Fri, Apr 4, 2014 at 2:15 PM, Eric Larchev?que <elarch at gmail.com>wrote:
> >>
> >>> Hello,
> >>>
> >>> I've written a draft BIP description of an authentication protocol based
> >>> on Bitcoin public address.
> >>>
> >>> By authentication we mean to prove to a service/application that we
> >>> control a specific Bitcoin address by signing a challenge, and that all
> >>> related data and settings may securely be linked to our session.
> >>>
> >>> The aim is to greatly facilitate sign ups and logins to services and
> >>> applications, improving the Bitcoin ecosystem as a whole.
> >>>
> >>> https://github.com/bitid/bitid/blob/master/BIP_draft.md
> >>>
> >>> Demo website :
> >>> http://bitid-demo.herokuapp.com/
> >>>
> >>> Classical password authentication is an insecure process that could be
> >>> solved with public key cryptography. The problem is that it theoretically
> >>> offloads a lot of complexity and responsibility on the user. Managing
> >>> private keys securely is complex. However this complexity is already being
> >>> addressed in the Bitcoin ecosystem. So doing public key authentication is
> >>> practically a free lunch to bitcoiners.
> >>>
> >>> I've formatted the protocol description as a BIP because this is the
> >>> only way to have all major wallets implementing it, and because it
> >>> completely fits in my opinion the BIP "process" category.
> >>>
> >>> Please read it and let me know your thoughts and comments so we can
> >>> improve on this draft.
> >>>
> >>> Eric Larcheveque
> >>> elarch at gmail.com
> >>>
> >>>
> >>>
> >>> ------------------------------------------------------------------------------
> >>>
> >>> _______________________________________________
> >>> Bitcoin-development mailing list
> >>> Bitcoin-development at lists.sourceforge.net
> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >>>
> >>>
> >>
> >
> >
> > ------------------------------------------------------------------------------
> >
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
> >
> 
> 
> -- 
> --
> Gavin Andresen

> ------------------------------------------------------------------------------

> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development


-- 
----------------------------------------------------------------------------
Troy Benjegerdes                 'da hozer'                  hozer at hozed.org
7 elements      earth::water::air::fire::mind::spirit::soul        grid.coop

      Never pick a fight with someone who buys ink by the barrel,
         nor try buy a hacker who makes money by the megahash




From ricardojdfilipe at gmail.com  Mon Apr  7 21:46:26 2014
From: ricardojdfilipe at gmail.com (Ricardo Filipe)
Date: Mon, 7 Apr 2014 22:46:26 +0100
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <5342F8C0.60500@monetize.io>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>
	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>
	<6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>
	<CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>
	<8A6DEBA4-EA59-4BAE-95CF-C964C2DBB84B@bitsofproof.com>
	<CAAS2fgT_9tXCxOHX_sN0wa=GRMn5seu3-o1UdiLjvbivFr46_w@mail.gmail.com>
	<8222EAFD-813E-4046-A751-FD3D04FF6764@bitsofproof.com>
	<5342F8C0.60500@monetize.io>
Message-ID: <CALC81CP_YzpsP+bshNh8vO+mOcYsMDy35E71MN9FVSf41ajXAg@mail.gmail.com>

Or have blocks distributed through pruned nodes as a DHT.

2014-04-07 20:13 GMT+01:00 Mark Friedenbach <mark at monetize.io>:
>
>
> On 04/07/2014 12:20 PM, Tamas Blummer wrote:
>> Validation has to be sequantial, but that step can be deferred until the
>> blocks before a point are loaded and continous.
>
> And how do you find those blocks?
>
> I have a suggestion: have nodes advertise which range of full blocks
> they possess, then you can perform synchronization from the adversed ranges!
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From tier.nolan at gmail.com  Mon Apr  7 21:48:03 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Mon, 7 Apr 2014 22:48:03 +0100
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <AAC2AFE2-2305-48CF-850A-522CFF2A0ACE@bitsofproof.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>
	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>
	<6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>
	<CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>
	<8A6DEBA4-EA59-4BAE-95CF-C964C2DBB84B@bitsofproof.com>
	<CAAS2fgT_9tXCxOHX_sN0wa=GRMn5seu3-o1UdiLjvbivFr46_w@mail.gmail.com>
	<8222EAFD-813E-4046-A751-FD3D04FF6764@bitsofproof.com>
	<BLU170-W124FFC4A5D42BC516663032A5680@phx.gbl>
	<AAC2AFE2-2305-48CF-850A-522CFF2A0ACE@bitsofproof.com>
Message-ID: <CAE-z3OUDkRjCvdntrvUrjwudeXZCFcUbQw40TTK6D3CoyDNJZg@mail.gmail.com>

On Mon, Apr 7, 2014 at 8:50 PM, Tamas Blummer <tamas at bitsofproof.com> wrote:

> You have to load headers sequantially to be able to connect them and
> determine the longest chain.
>

The isn't strictly true.  If you are connected to a some honest nodes, then
you could download portions of the chain and then connect the various
sub-chains together.

The protocol doesn't support it though.  There is no system to ask for
block headers for the main chain block with a given height,

Finding one high bandwidth peer to download the entire header chain
sequentially is pretty much forced.  The client can switch if there is a
timeout.

Other peers could be used to parallel download the block chain while the
main chain is downloading.  Even if the header download stalled, it
wouldn't be that big a deal.

> Blocks can be loaded in random order once you have their order given by
the headers.
> Computing the UTXO however will force you to at least temporarily store
the blocks unless you have plenty of RAM.

You only need to store the UTXO set, rather than the entire block chain.

It is possible to generate the UTXO set without doing any signature
verification.

A lightweight node could just verify the UTXO set and then do random
signature verifications.

The keeps disk space and CPU reasonably low.  If an illegal transaction is
added to be a block, then proof could be provided for the bad transaction.

The only slightly difficult thing is confirming inflation.  That can be
checked on a block by block basis when downloading the entire block chain.

> Regards,
> Tamas Blummer
> http://bitsofproof.com <http://bitsofproof.com>

On 07.04.2014, at 21:30, Paul Lyon <pmlyon at hotmail.ca> wrote:

I hope I'm not thread-jacking here, apologies if so, but that's the
approach I've taken with the node I'm working on.

Headers can be downloaded and stored in any order, it'll make sense of what
the winning chain is. Blocks don't need to be downloaded in any particular
order and they don't need to be saved to disk, the UTXO is fully
self-contained. That way the concern of storing blocks for seeding (or not)
is wholly separated from syncing the UTXO. This allows me to do the initial
blockchain sync in ~6 hours when I use my SSD. I only need enough disk
space to store the UTXO, and then whatever amount of block data the user
would want to store for the health of the network.

This project is a bitcoin learning exercise for me, so I can only hope I
don't have any critical design flaws in there. :)

------------------------------
From: tamas at bitsofproof.com
Date: Mon, 7 Apr 2014 21:20:31 +0200
To: gmaxwell at gmail.com
CC: bitcoin-development at lists.sourceforge.net
Subject: Re: [Bitcoin-development] Why are we bleeding nodes?


Once headers are loaded first there is no reason for sequential loading.

Validation has to be sequantial, but that step can be deferred until the
blocks before a point are loaded and continous.

Tamas Blummer
http://bitsofproof.com

On 07.04.2014, at 21:03, Gregory Maxwell <gmaxwell at gmail.com> wrote:

On Mon, Apr 7, 2014 at 12:00 PM, Tamas Blummer <tamas at bitsofproof.com>
wrote:

therefore I guess it is more handy to return some bitmap of pruned/full
blocks than ranges.


A bitmap also means high overhead and-- if it's used to advertise
non-contiguous blocks-- poor locality, since blocks are fetched
sequentially.



------------------------------------------------------------------------------
Put Bad Developers to Shame Dominate Development with Jenkins Continuous
Integration Continuously Automate Build, Test & Deployment Start a new
project now. Try Jenkins in the cloud.http://p.sf.net/sfu/13600_Cloudbees

_______________________________________________ Bitcoin-development mailing
list Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development



>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/391b78f4/attachment.html>

From ricardojdfilipe at gmail.com  Mon Apr  7 21:55:04 2014
From: ricardojdfilipe at gmail.com (Ricardo Filipe)
Date: Mon, 7 Apr 2014 22:55:04 +0100
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <20140407200838.GR3180@nl.grid.coop>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CABsx9T0FJGn3a+JjiLK6yhLN4psqgqhX766FY+5r-mK9v_aYnw@mail.gmail.com>
	<20140407200838.GR3180@nl.grid.coop>
Message-ID: <CALC81CN42NYkAWcrVks=DySb=H_YY1YV504UP0J4rqv_YMBY2A@mail.gmail.com>

2014-04-07 21:08 GMT+01:00 Troy Benjegerdes <hozer at hozed.org>:
> I have to play dissenter here again..
>
> Using a bitcoin address as a persistent identity key is the first real-world
> use of Bitcoin that I can imagine will make it a 'killer app' that everyone
> and their grandma will want to use.
>

I am of the same opinion, although i understand Gavin's point. Would
the multisig seed work for this purpose?
I have been toying with this idea and I think that for this BIP to
make sense it would require a "root" key as your login. Then if you
need to make transfers the system would request you to create and
associate a new key to your account for each purchase (signing the new
key with the root one for example).



From gmaxwell at gmail.com  Mon Apr  7 21:56:21 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 7 Apr 2014 14:56:21 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAE-z3OUDkRjCvdntrvUrjwudeXZCFcUbQw40TTK6D3CoyDNJZg@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>
	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>
	<6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>
	<CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>
	<8A6DEBA4-EA59-4BAE-95CF-C964C2DBB84B@bitsofproof.com>
	<CAAS2fgT_9tXCxOHX_sN0wa=GRMn5seu3-o1UdiLjvbivFr46_w@mail.gmail.com>
	<8222EAFD-813E-4046-A751-FD3D04FF6764@bitsofproof.com>
	<BLU170-W124FFC4A5D42BC516663032A5680@phx.gbl>
	<AAC2AFE2-2305-48CF-850A-522CFF2A0ACE@bitsofproof.com>
	<CAE-z3OUDkRjCvdntrvUrjwudeXZCFcUbQw40TTK6D3CoyDNJZg@mail.gmail.com>
Message-ID: <CAAS2fgTOsf=7CPdQ_-upOjxCHh7Nv=LKam11YbTjt1168v+JKQ@mail.gmail.com>

On Mon, Apr 7, 2014 at 2:48 PM, Tier Nolan <tier.nolan at gmail.com> wrote:
>> Blocks can be loaded in random order once you have their order given by
>> the headers.
>> Computing the UTXO however will force you to at least temporarily store
>> the blocks unless you have plenty of RAM.
> You only need to store the UTXO set, rather than the entire block chain.

The comment was specifically in the context of an out of order fetch.
Verification must be in order. If you have fetched blocks out of order
you must preserve them at least long enough to reorder them. Thats
all.



From eric at ericmartindale.com  Mon Apr  7 22:00:47 2014
From: eric at ericmartindale.com (Eric Martindale)
Date: Mon, 7 Apr 2014 15:00:47 -0700
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CALC81CN42NYkAWcrVks=DySb=H_YY1YV504UP0J4rqv_YMBY2A@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CABsx9T0FJGn3a+JjiLK6yhLN4psqgqhX766FY+5r-mK9v_aYnw@mail.gmail.com>
	<20140407200838.GR3180@nl.grid.coop>
	<CALC81CN42NYkAWcrVks=DySb=H_YY1YV504UP0J4rqv_YMBY2A@mail.gmail.com>
Message-ID: <CAAf19WrOUtXna4MuKTyB9EEWaJkM9+rY4W5eiFCAtqcTvi4k=Q@mail.gmail.com>

This is toying with the economics of cryptofinance in a way that needs to
be understood before being put under consideration for implementation in
Bitcoin.  This is an opportunity for an altcoin to explore the implications
of these proposals prior to changing the properties of an already
precarious system.

Eric Martindale
Developer Evangelist, BitPay
+1 (919) 374-2020
On Apr 7, 2014 2:55 PM, "Ricardo Filipe" <ricardojdfilipe at gmail.com> wrote:

> 2014-04-07 21:08 GMT+01:00 Troy Benjegerdes <hozer at hozed.org>:
> > I have to play dissenter here again..
> >
> > Using a bitcoin address as a persistent identity key is the first
> real-world
> > use of Bitcoin that I can imagine will make it a 'killer app' that
> everyone
> > and their grandma will want to use.
> >
>
> I am of the same opinion, although i understand Gavin's point. Would
> the multisig seed work for this purpose?
> I have been toying with this idea and I think that for this BIP to
> make sense it would require a "root" key as your login. Then if you
> need to make transfers the system would request you to create and
> associate a new key to your account for each purchase (signing the new
> key with the root one for example).
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/bbd4f161/attachment.html>

From pmlyon at hotmail.ca  Mon Apr  7 21:55:53 2014
From: pmlyon at hotmail.ca (Paul Lyon)
Date: Mon, 7 Apr 2014 21:55:53 +0000
Subject: [Bitcoin-development] =?utf-8?q?Why_are_we_bleeding_nodes=3F?=
Message-ID: <BLU402-EAS381F95E2CF94AB1440E00F1A5680@phx.gbl>

I actually ask for headers from each peer I?m connected to and then dump them into the backend to be sorted out.. is this abusive to the network? I?m concerned about that as I work on this, it only dawned on me the other night that I really shouldn?t use the seed peers for downloading?


I figured with the headers being so tiny, it wouldn?t be a burden to ask for them from each peer. I won?t actually end up downloading the full blockchain?s worth of headers from every peer; I?m continually getting an updated view of the current winning chain before I send out additional header requests to peers.






From: Tier Nolan
Sent: ?Monday?, ?April? ?07?, ?2014 ?6?:?48? ?PM
To: bitcoin-development at lists.sourceforge.net








On Mon, Apr 7, 2014 at 8:50 PM, Tamas Blummer <tamas at bitsofproof.com> wrote:


You have to load headers sequantially to be able to connect them and determine the longest chain.




The isn't strictly true.  If you are connected to a some honest nodes, then you could download portions of the chain and then connect the various sub-chains together.

The protocol doesn't support it though.  There is no system to ask for block headers for the main chain block with a given height,


Finding one high bandwidth peer to download the entire header chain sequentially is pretty much forced.  The client can switch if there is a timeout.


Other peers could be used to parallel download the block chain while the main chain is downloading.  Even if the header download stalled, it wouldn't be that big a deal.






> Blocks can be loaded in random order once you have their order given by the headers.
> Computing the UTXO however will force you to at least temporarily store the blocks unless you have plenty of RAM. 


You only need to store the UTXO set, rather than the entire block chain.



It is possible to generate the UTXO set without doing any signature verification.



A lightweight node could just verify the UTXO set and then do random signature verifications.



The keeps disk space and CPU reasonably low.  If an illegal transaction is added to be a block, then proof could be provided for the bad transaction.



The only slightly difficult thing is confirming inflation.  That can be checked on a block by block basis when downloading the entire block chain.




> Regards,
> Tamas Blummer
> http://bitsofproof.com 




On 07.04.2014, at 21:30, Paul Lyon <pmlyon at hotmail.ca> wrote:





I hope I'm not thread-jacking here, apologies if so, but that's the approach I've taken with the node I'm working on.



Headers can be downloaded and stored in any order, it'll make sense of what the winning chain is. Blocks don't need to be downloaded in any particular order and they don't need to be saved to disk, the UTXO is fully self-contained. That way the concern of storing blocks for seeding (or not) is wholly separated from syncing the UTXO. This allows me to do the initial blockchain sync in ~6 hours when I use my SSD. I only need enough disk space to store the UTXO, and then whatever amount of block data the user would want to store for the health of the network.





This project is a bitcoin learning exercise for me, so I can only hope I don't have any critical design flaws in there. :)






From: tamas at bitsofproof.com
Date: Mon, 7 Apr 2014 21:20:31 +0200
To: gmaxwell at gmail.com
CC: bitcoin-development at lists.sourceforge.net
Subject: Re: [Bitcoin-development] Why are we bleeding nodes?





Once headers are loaded first there is no reason for sequential loading. 




Validation has to be sequantial, but that step can be deferred until the blocks before a point are loaded and continous.


Tamas Blummer
http://bitsofproof.com



On 07.04.2014, at 21:03, Gregory Maxwell <gmaxwell at gmail.com> wrote:


On Mon, Apr 7, 2014 at 12:00 PM, Tamas Blummer <tamas at bitsofproof.com> wrote:

therefore I guess it is more handy to return some bitmap of pruned/full
blocks than ranges.


A bitmap also means high overhead and? if it's used to advertise
non-contiguous blocks? poor locality, since blocks are fetched
sequentially.



------------------------------------------------------------------------------ Put Bad Developers to Shame Dominate Development with Jenkins Continuous Integration Continuously Automate Build, Test & Deployment Start a new project now. Try Jenkins in the cloud.http://p.sf.net/sfu/13600_Cloudbees
 
_______________________________________________ Bitcoin-development mailing list Bitcoin-development at lists.sourceforge.nethttps://lists.sourceforge.net/lists/listinfo/bitcoin-development



------------------------------------------------------------------------------
Put Bad Developers to Shame
Dominate Development with Jenkins Continuous Integration
Continuously Automate Build, Test & Deployment
Start a new project now. Try Jenkins in the cloud.
http://p.sf.net/sfu/13600_Cloudbees
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/bd4612f0/attachment.html>
-------------- next part --------------
------------------------------------------------------------------------------
Put Bad Developers to Shame
Dominate Development with Jenkins Continuous Integration
Continuously Automate Build, Test & Deployment 
Start a new project now. Try Jenkins in the cloud.
http://p.sf.net/sfu/13600_Cloudbees
-------------- next part --------------
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development

From tier.nolan at gmail.com  Mon Apr  7 22:14:10 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Mon, 7 Apr 2014 23:14:10 +0100
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <BLU402-EAS381F95E2CF94AB1440E00F1A5680@phx.gbl>
References: <BLU402-EAS381F95E2CF94AB1440E00F1A5680@phx.gbl>
Message-ID: <CAE-z3OVjz6s1f2YhZiUZ6REeY_iDjwu+SS=fQuhhV05VEQHV_g@mail.gmail.com>

On Mon, Apr 7, 2014 at 10:55 PM, Paul Lyon <pmlyon at hotmail.ca> wrote:

>  I actually ask for headers from each peer I'm connected to and then dump
> them into the backend to be sorted out.. is this abusive to the network?
>

I think downloading from a subset of the peers and switching out any slow
ones is a reasonable compromise.

Once you have a chain, you can quickly check that all peers have the same
main chain.

Your backend system could have a method that gives you the hash of the last
10 headers on the longest chain it knows about.  You can use the block
locator hash system.

This can be used with the getheaders message and if the new peer is on a
different chain, then it will just send you the headers starting at the
genesis block.

If that happens, you need to download the entire chain from that peer and
see if it is better than your current best.


*From:* Tier Nolan <tier.nolan at gmail.com>
*Sent:* Monday, April 07, 2014 6:48 PM
*To:* bitcoin-development at lists.sourceforge.net


On Mon, Apr 7, 2014 at 8:50 PM, Tamas Blummer <tamas at bitsofproof.com> wrote:

> You have to load headers sequantially to be able to connect them and
> determine the longest chain.
>

The isn't strictly true.  If you are connected to a some honest nodes, then
you could download portions of the chain and then connect the various
sub-chains together.

The protocol doesn't support it though.  There is no system to ask for
block headers for the main chain block with a given height,

Finding one high bandwidth peer to download the entire header chain
sequentially is pretty much forced.  The client can switch if there is a
timeout.

Other peers could be used to parallel download the block chain while the
main chain is downloading.  Even if the header download stalled, it
wouldn't be that big a deal.

> Blocks can be loaded in random order once you have their order given by
the headers.
> Computing the UTXO however will force you to at least temporarily store
the blocks unless you have plenty of RAM.

You only need to store the UTXO set, rather than the entire block chain.

It is possible to generate the UTXO set without doing any signature
verification.

A lightweight node could just verify the UTXO set and then do random
signature verifications.

The keeps disk space and CPU reasonably low.  If an illegal transaction is
added to be a block, then proof could be provided for the bad transaction.

The only slightly difficult thing is confirming inflation.  That can be
checked on a block by block basis when downloading the entire block chain.

> Regards,
> Tamas Blummer
> http://bitsofproof.com <http://bitsofproof.com>

On 07.04.2014, at 21:30, Paul Lyon <pmlyon at hotmail.ca> wrote:

I hope I'm not thread-jacking here, apologies if so, but that's the
approach I've taken with the node I'm working on.

Headers can be downloaded and stored in any order, it'll make sense of what
the winning chain is. Blocks don't need to be downloaded in any particular
order and they don't need to be saved to disk, the UTXO is fully
self-contained. That way the concern of storing blocks for seeding (or not)
is wholly separated from syncing the UTXO. This allows me to do the initial
blockchain sync in ~6 hours when I use my SSD. I only need enough disk
space to store the UTXO, and then whatever amount of block data the user
would want to store for the health of the network.

This project is a bitcoin learning exercise for me, so I can only hope I
don't have any critical design flaws in there. :)

------------------------------
From: tamas at bitsofproof.com
Date: Mon, 7 Apr 2014 21:20:31 +0200
To: gmaxwell at gmail.com
CC: bitcoin-development at lists.sourceforge.net
Subject: Re: [Bitcoin-development] Why are we bleeding nodes?


Once headers are loaded first there is no reason for sequential loading.

Validation has to be sequantial, but that step can be deferred until the
blocks before a point are loaded and continous.

Tamas Blummer
http://bitsofproof.com

On 07.04.2014, at 21:03, Gregory Maxwell <gmaxwell at gmail.com> wrote:

On Mon, Apr 7, 2014 at 12:00 PM, Tamas Blummer <tamas at bitsofproof.com>
wrote:

therefore I guess it is more handy to return some bitmap of pruned/full
blocks than ranges.


A bitmap also means high overhead and-- if it's used to advertise
non-contiguous blocks-- poor locality, since blocks are fetched
sequentially.



------------------------------------------------------------------------------
Put Bad Developers to Shame Dominate Development with Jenkins Continuous
Integration Continuously Automate Build, Test & Deployment Start a new
project now. Try Jenkins in the cloud.http://p.sf.net/sfu/13600_Cloudbees

_______________________________________________ Bitcoin-development mailing
list Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development



>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140407/ddf2c7e2/attachment.html>

From nikita at megiontechnologies.com  Tue Apr  8 00:33:04 2014
From: nikita at megiontechnologies.com (Nikita Schmidt)
Date: Tue, 8 Apr 2014 04:33:04 +0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <1529077.7WHAYP4Dpn@crushinator>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<3837746.jqWvB0Uxrs@crushinator>
	<CAC7yFxQXn=c7CEC326yMx4bF7Cv7Gc62shS7xU0XvSp5sQSGZw@mail.gmail.com>
	<1529077.7WHAYP4Dpn@crushinator>
Message-ID: <CAC7yFxRndCS=aEWcvmrFTf-WZg9Ht+pZmLZ-4sdBpdv+vJQoRQ@mail.gmail.com>

>
> I'd be fine with changing the key fingerprint algorithm to something else. Do you like CRC16?
>
I like CRC16.  Do you intend to use it in conjunction with a cryptographic hash?

Regarding the choice of fields, any implementation of this BIP will
need big integer arithmetic to do base-58 anyway.  The operations
required for SSS are nearly the same as for base-58 and can probably
be done by the same subset of the chosen bignum library.  So in fact
using GF(2^8) will add complexity to both the BIP and its
implementations.  However, the maths in GF(2^8) is so simple that this
additional complexity can be considered negligible.

As a co-author of a bitcoin application running on a real
microcontroller (not the sort of big-iron thing Trezor runs on), I was
also going to implement my SSS over a 256-bit prime field.  (I am not
going into 512-bit master seeds at this time.)

Uniform processing of secrets of any size (instead of using different
primes for different cases) is a valid argument in favour of GF(2^8),
though.  I have no preference one way or another.



From gmaxwell at gmail.com  Tue Apr  8 00:38:22 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 7 Apr 2014 17:38:22 -0700
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <CAC7yFxRndCS=aEWcvmrFTf-WZg9Ht+pZmLZ-4sdBpdv+vJQoRQ@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<3837746.jqWvB0Uxrs@crushinator>
	<CAC7yFxQXn=c7CEC326yMx4bF7Cv7Gc62shS7xU0XvSp5sQSGZw@mail.gmail.com>
	<1529077.7WHAYP4Dpn@crushinator>
	<CAC7yFxRndCS=aEWcvmrFTf-WZg9Ht+pZmLZ-4sdBpdv+vJQoRQ@mail.gmail.com>
Message-ID: <CAAS2fgT22HdS=MQU4B1vWUUKDk+pJiLGmGnBF9E9Zcs_swTN3g@mail.gmail.com>

On Mon, Apr 7, 2014 at 5:33 PM, Nikita Schmidt
<nikita at megiontechnologies.com> wrote:
> Regarding the choice of fields, any implementation of this BIP will
> need big integer arithmetic to do base-58 anyway.

Nah, it doesn't. E.g.
https://gitorious.org/bitcoin/libblkmaker/source/eb33f9c8e441ffef457a79d76ceed1ea20ab3059:base58.c

> However, the maths in GF(2^8) is so simple that this
> additional complexity can be considered negligible.
[...]
> Uniform processing of secrets of any size (instead of using different
> primes for different cases) is a valid argument in favour of GF(2^8),
> though.  I have no preference one way or another.

I think this is really one of the bigger selling points.



From bip at mattwhitlock.name  Tue Apr  8 01:46:21 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Mon, 07 Apr 2014 21:46:21 -0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <CAAS2fgT22HdS=MQU4B1vWUUKDk+pJiLGmGnBF9E9Zcs_swTN3g@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<CAC7yFxRndCS=aEWcvmrFTf-WZg9Ht+pZmLZ-4sdBpdv+vJQoRQ@mail.gmail.com>
	<CAAS2fgT22HdS=MQU4B1vWUUKDk+pJiLGmGnBF9E9Zcs_swTN3g@mail.gmail.com>
Message-ID: <6669921.kYEqrMqt0u@crushinator>

On Monday, 7 April 2014, at 5:38 pm, Gregory Maxwell wrote:
> On Mon, Apr 7, 2014 at 5:33 PM, Nikita Schmidt
> <nikita at megiontechnologies.com> wrote:
> > Regarding the choice of fields, any implementation of this BIP will
> > need big integer arithmetic to do base-58 anyway.
> 
> Nah, it doesn't. E.g.
> https://gitorious.org/bitcoin/libblkmaker/source/eb33f9c8e441ffef457a79d76ceed1ea20ab3059:base58.c

That only *decodes* Base58Check. It has no encode function, which would require biginteger division.



From gmaxwell at gmail.com  Tue Apr  8 02:07:45 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 7 Apr 2014 19:07:45 -0700
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <6669921.kYEqrMqt0u@crushinator>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<CAC7yFxRndCS=aEWcvmrFTf-WZg9Ht+pZmLZ-4sdBpdv+vJQoRQ@mail.gmail.com>
	<CAAS2fgT22HdS=MQU4B1vWUUKDk+pJiLGmGnBF9E9Zcs_swTN3g@mail.gmail.com>
	<6669921.kYEqrMqt0u@crushinator>
Message-ID: <CAAS2fgSfiYwD-M7+k65JF0Kjeod1zEiPcxPN1iDBHLzYV7UQyA@mail.gmail.com>

On Mon, Apr 7, 2014 at 6:46 PM, Matt Whitlock <bip at mattwhitlock.name> wrote:
> On Monday, 7 April 2014, at 5:38 pm, Gregory Maxwell wrote:
>> On Mon, Apr 7, 2014 at 5:33 PM, Nikita Schmidt
>> <nikita at megiontechnologies.com> wrote:
>> > Regarding the choice of fields, any implementation of this BIP will
>> > need big integer arithmetic to do base-58 anyway.
>> Nah, it doesn't. E.g.
>> https://gitorious.org/bitcoin/libblkmaker/source/eb33f9c8e441ffef457a79d76ceed1ea20ab3059:base58.c
> That only *decodes* Base58Check. It has no encode function, which would require biginteger division.

Yes thats only a decode but the same process (long division with
manual carries) works just fine the other way. There is absolutely no
need to use big integers for this.



From bitcoin-devel at jerviss.org  Tue Apr  8 03:13:59 2014
From: bitcoin-devel at jerviss.org (kjj)
Date: Mon, 07 Apr 2014 22:13:59 -0500
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAAf19Wrz0u_e5V9Gb=_CAG=mHtE9nA_VETgYZeCXZqwaGeYKuQ@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>	<CALC81CMc7BridL7600b7bij3dJHzeQWgTv=iqVeW--n-we+1Yw@mail.gmail.com>	<lhua2p$lp5$1@ger.gmane.org>	<CANEZrP3F+UQ1amVAK4a9_UCsXia7Yfv0RO4pWK7NTde0GvH-0A@mail.gmail.com>
	<CAAf19Wrz0u_e5V9Gb=_CAG=mHtE9nA_VETgYZeCXZqwaGeYKuQ@mail.gmail.com>
Message-ID: <53436977.4030808@jerviss.org>

Multi-sig requires infrastructure.  It isn't a magic wand that we can 
wave to make everyone secure.  The protocols and techniques necessary 
don't exist yet, and apparently no one has much of an incentive to 
create them.

I mean no offense, and I don't mean to pick on you.  Your post stuck out 
while I was reading.  Secure multi-sig is what we all want, but wanting 
apparently isn't enough to make it happen.

Other random notes from reading this 50+ post thread:

Perhaps we should have a config flag to prevent a node from serving IBD 
to new nodes.  IBD crushes marginal machines, particularly those with 
spinning disks.  This has been extensively discussed elsewhere.

The ideal IBD hosts are serving the blockchain out of a RAM disk. Is 
there any interest in setting up a network of volunteers to host 
expensive servers with fast connections?  It doesn't look too terribly 
difficult to figure out when a node has stopped asking for blocks in 
bulk, so we could add another config flag to eject nodes once they are 
done booting.

Even ignoring IBD, I think that we are gradually outgrowing cheapass 
hosting options.  Personally, I long ago gave up on answering forum 
questions about running nodes on virtual servers and VPSs.  It is 
certainly still possible to run bitcoind on small boxes, but it isn't 
trivial any more.  (Anyone running on less than my Athlon XP 1800+ with 
896 MB RAM?)  If we want those nodes back, we need to optimize the hell 
out of the memory use, and even that might not be enough.


Eric Martindale wrote:
>
> We need to make it so mind-numbingly simple to "run Bitcoin correctly" 
> that the average user doesn't find reasons to do so in the course of 
> normal use.  Right now, Coinbase and Bitstamp are winning in the user 
> experience battle, which technically endanger the user, and by proxy 
> the Bitcoin network.
>
> Multi-sig as a default is a start.  It won't succeed unless the user 
> experience is simply better than trusted third parties, but we need to 
> start the education process with the very basic fundamental: trusting 
> a third-party with full access to your Bitcoin is just replacing one 
> centralized banking system with another.
>
>




From jgarzik at bitpay.com  Tue Apr  8 03:28:54 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Mon, 7 Apr 2014 23:28:54 -0400
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CA+WZAEpwBqucw7kOFrRn_TsnVGaY0-hm4Xv64_i7LweEzQ=oGw@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
	<CANEZrP2Z5x0_kOQ=8-BMzbmi9=D=ou=s3dgEksMA5F84BHSt9A@mail.gmail.com>
	<CA+WZAEqREDkDvmhM7AY+Ju3fkm3uOGm39Ef9+SYoEr43ybbg2Q@mail.gmail.com>
	<CANEZrP15xWWq2jU5yKjG+9hp___OovtbH+vM5KkzFcaQ=koRow@mail.gmail.com>
	<CA+WZAEpwBqucw7kOFrRn_TsnVGaY0-hm4Xv64_i7LweEzQ=oGw@mail.gmail.com>
Message-ID: <CAJHLa0Nd1hVrcB9Koyv99zN_ykJbHW21qC3KdjZHB4PmOLLgnQ@mail.gmail.com>

On Fri, Apr 4, 2014 at 10:56 AM, Eric Larchev?que <elarch at gmail.com> wrote:
> Yes, but no one will ever install a plug in.

This is quite true.  I said the same about KryptoKit.  Incredibly cool
to do bitcoin + PGP in client...  but ultimately plugins reach 0.01%
of the user population.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From jgarzik at bitpay.com  Tue Apr  8 03:44:14 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Mon, 7 Apr 2014 23:44:14 -0400
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>
	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>
	<6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>
	<CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>
Message-ID: <CAJHLa0MOB2=1JNfXCb-DY24ssTi7hVFi6H7JDaeVp5oOUUMy=A@mail.gmail.com>

Being Mr. Torrent, I've held open the "80% serious" suggestion to
simply refuse to serve blocks older than X (3 months?).

That forces download by other means (presumably torrent).

I do not feel it is productive for any nodes on the network to waste
time/bandwidth/etc. serving static, ancient data.  There remain, of
course, issues of older nodes and "getting the word out" that prevents
this switch from being flipped on tomorrow.



On Mon, Apr 7, 2014 at 2:49 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> On Mon, Apr 7, 2014 at 11:35 AM, Tamas Blummer <tamas at bitsofproof.com> wrote:
>> BTW, did we already agree on the service bits for an archive node?
>
> I'm still very concerned that a binary archive bit will cause extreme
> load hot-spotting and the kind of binary "Use lots of resources YES or
> NO" I think we're currently suffering some from, but at that point
> enshrined in the protocol.
>
> It would be much better to extend the addr messages so that nodes can
> indicate a range or two of blocks that they're serving, so that all
> nodes can contribute fractionally according to their means. E.g. if
> you want to offer up 8 GB of distributed storage and contribute to the
> availability of the blockchain,  without having to swollow the whole
> 20, 30, 40 ... gigabyte pill.
>
> Already we need that kind of distributed storage for the most recent
> blocks to prevent extreme bandwidth load on archives, so extending it
> to arbitrary ranges is only more complicated because there is
> currently no room to signal it.
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From jeanpaulkogelman at me.com  Tue Apr  8 07:24:37 2014
From: jeanpaulkogelman at me.com (Jean-Paul Kogelman)
Date: Tue, 08 Apr 2014 00:24:37 -0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAJHLa0MOB2=1JNfXCb-DY24ssTi7hVFi6H7JDaeVp5oOUUMy=A@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>
	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>
	<6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>
	<CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>
	<CAJHLa0MOB2=1JNfXCb-DY24ssTi7hVFi6H7JDaeVp5oOUUMy=A@mail.gmail.com>
Message-ID: <AC42883D-9D3A-49D3-9ADA-7D24AB833352@me.com>

Isn't that just conceding that p2p protocol A is better than p2p protocol B?

Can't Bitcoin Core's block fetching be improved to get similar performance as a torrent + import?

Currently it's hard to go wide on data fetching because headers first is still pretty 'beefy'. The headers can be compressed, which would get you about 50% savings.

Also, maybe adding a layer that groups block headers into a single hash (say, 2016 headers), and then being able to fetch those (possibly compressed) header 'blocks' from multiple sources in parallel. And fanning out block fetches even further, favoring fast nodes.

Just thinking out loud.

jp

> On Apr 7, 2014, at 8:44 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:
> 
> Being Mr. Torrent, I've held open the "80% serious" suggestion to
> simply refuse to serve blocks older than X (3 months?).
> 
> That forces download by other means (presumably torrent).
> 
> I do not feel it is productive for any nodes on the network to waste
> time/bandwidth/etc. serving static, ancient data.  There remain, of
> course, issues of older nodes and "getting the word out" that prevents
> this switch from being flipped on tomorrow.
> 
> 
> 
>> On Mon, Apr 7, 2014 at 2:49 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
>>> On Mon, Apr 7, 2014 at 11:35 AM, Tamas Blummer <tamas at bitsofproof.com> wrote:
>>> BTW, did we already agree on the service bits for an archive node?
>> 
>> I'm still very concerned that a binary archive bit will cause extreme
>> load hot-spotting and the kind of binary "Use lots of resources YES or
>> NO" I think we're currently suffering some from, but at that point
>> enshrined in the protocol.
>> 
>> It would be much better to extend the addr messages so that nodes can
>> indicate a range or two of blocks that they're serving, so that all
>> nodes can contribute fractionally according to their means. E.g. if
>> you want to offer up 8 GB of distributed storage and contribute to the
>> availability of the blockchain,  without having to swollow the whole
>> 20, 30, 40 ... gigabyte pill.
>> 
>> Already we need that kind of distributed storage for the most recent
>> blocks to prevent extreme bandwidth load on archives, so extending it
>> to arbitrary ranges is only more complicated because there is
>> currently no room to signal it.
>> 
>> ------------------------------------------------------------------------------
>> Put Bad Developers to Shame
>> Dominate Development with Jenkins Continuous Integration
>> Continuously Automate Build, Test & Deployment
>> Start a new project now. Try Jenkins in the cloud.
>> http://p.sf.net/sfu/13600_Cloudbees
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> 
> 
> -- 
> Jeff Garzik
> Bitcoin core developer and open source evangelist
> BitPay, Inc.      https://bitpay.com/
> 
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment 
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From mike at plan99.net  Tue Apr  8 07:50:31 2014
From: mike at plan99.net (Mike Hearn)
Date: Tue, 8 Apr 2014 09:50:31 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <53436977.4030808@jerviss.org>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<CALC81CMc7BridL7600b7bij3dJHzeQWgTv=iqVeW--n-we+1Yw@mail.gmail.com>
	<lhua2p$lp5$1@ger.gmane.org>
	<CANEZrP3F+UQ1amVAK4a9_UCsXia7Yfv0RO4pWK7NTde0GvH-0A@mail.gmail.com>
	<CAAf19Wrz0u_e5V9Gb=_CAG=mHtE9nA_VETgYZeCXZqwaGeYKuQ@mail.gmail.com>
	<53436977.4030808@jerviss.org>
Message-ID: <CANEZrP2-h80jP2U2ONWEhpjkBP-X8=sjburRq80U40eJsQi-VQ@mail.gmail.com>

>
> Multi-sig requires infrastructure.  It isn't a magic wand that we can
> wave to make everyone secure.  The protocols and techniques necessary
> don't exist yet, and apparently no one has much of an incentive to
> create them.


It is starting to happen. If you're OK with using a specific web wallet
there's BitGo and greenaddress.it already, though I think their risk
analysis is just sending you an SMS code. I wrote up an integration plan
for bitcoinj a few days ago:

 https://groups.google.com/forum/#!topic/bitcoinj/Uxl-z40OLuQ

but guess what? It's quite complicated. As with all these features.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/650f36bd/attachment.html>

From tamas at bitsofproof.com  Tue Apr  8 07:59:24 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Tue, 8 Apr 2014 09:59:24 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAJHLa0MOB2=1JNfXCb-DY24ssTi7hVFi6H7JDaeVp5oOUUMy=A@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>
	<CANEZrP1-9LpPw4WuY8bfsEG0OLoDECXTfQCoZsZ4tmOn2H7Omw@mail.gmail.com>
	<6D6E55CE-2F04-4C34-BEE6-98AEF1478346@bitsofproof.com>
	<CAAS2fgQaJ6P4Aj2A5Zox+CiGQK6jHvF1CkLH1R6xbadYhUXO2g@mail.gmail.com>
	<CAJHLa0MOB2=1JNfXCb-DY24ssTi7hVFi6H7JDaeVp5oOUUMy=A@mail.gmail.com>
Message-ID: <19177DCF-B159-492E-921D-E26226AFB5EF@bitsofproof.com>

Specialization of nodes is ongoing most prominent with SPV wallets and mining.

There is a need I see on my own business for software that is able to serve multiple wallets, and is multi tiered,
so the world facing P2P node can be in a DMZ. I target them with a hybrid model that is SPV plus mempool transaction validation 
against UTXO and use ?reference? implementations as border router.  I think that this setup will be common for enterprises 
and hence push for a stripped down ?reference? border router without wallet, payment protocol, GUI, RPC calls here. 

That border router could also serve as archive node evtl. also offering blocks at bulk e.g. through http. 
Enterprises that run a multi tiered environment have the bandwith to serve as archives.

Tamas Blummer
http://bitsofproof.com

On 08.04.2014, at 05:44, Jeff Garzik <jgarzik at bitpay.com> wrote:

> Being Mr. Torrent, I've held open the "80% serious" suggestion to
> simply refuse to serve blocks older than X (3 months?).
> 
> That forces download by other means (presumably torrent).
> 
> I do not feel it is productive for any nodes on the network to waste
> time/bandwidth/etc. serving static, ancient data.  There remain, of
> course, issues of older nodes and "getting the word out" that prevents
> this switch from being flipped on tomorrow.
> 
> 
> 
> On Mon, Apr 7, 2014 at 2:49 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
>> On Mon, Apr 7, 2014 at 11:35 AM, Tamas Blummer <tamas at bitsofproof.com> wrote:
>>> BTW, did we already agree on the service bits for an archive node?
>> 
>> I'm still very concerned that a binary archive bit will cause extreme
>> load hot-spotting and the kind of binary "Use lots of resources YES or
>> NO" I think we're currently suffering some from, but at that point
>> enshrined in the protocol.
>> 
>> It would be much better to extend the addr messages so that nodes can
>> indicate a range or two of blocks that they're serving, so that all
>> nodes can contribute fractionally according to their means. E.g. if
>> you want to offer up 8 GB of distributed storage and contribute to the
>> availability of the blockchain,  without having to swollow the whole
>> 20, 30, 40 ... gigabyte pill.
>> 
>> Already we need that kind of distributed storage for the most recent
>> blocks to prevent extreme bandwidth load on archives, so extending it
>> to arbitrary ranges is only more complicated because there is
>> currently no room to signal it.
>> 
>> ------------------------------------------------------------------------------
>> Put Bad Developers to Shame
>> Dominate Development with Jenkins Continuous Integration
>> Continuously Automate Build, Test & Deployment
>> Start a new project now. Try Jenkins in the cloud.
>> http://p.sf.net/sfu/13600_Cloudbees
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> 
> 
> -- 
> Jeff Garzik
> Bitcoin core developer and open source evangelist
> BitPay, Inc.      https://bitpay.com/
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/45cfae92/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/45cfae92/attachment.sig>

From mike at plan99.net  Tue Apr  8 08:13:59 2014
From: mike at plan99.net (Mike Hearn)
Date: Tue, 8 Apr 2014 10:13:59 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CAJHLa0Nd1hVrcB9Koyv99zN_ykJbHW21qC3KdjZHB4PmOLLgnQ@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
	<CANEZrP2Z5x0_kOQ=8-BMzbmi9=D=ou=s3dgEksMA5F84BHSt9A@mail.gmail.com>
	<CA+WZAEqREDkDvmhM7AY+Ju3fkm3uOGm39Ef9+SYoEr43ybbg2Q@mail.gmail.com>
	<CANEZrP15xWWq2jU5yKjG+9hp___OovtbH+vM5KkzFcaQ=koRow@mail.gmail.com>
	<CA+WZAEpwBqucw7kOFrRn_TsnVGaY0-hm4Xv64_i7LweEzQ=oGw@mail.gmail.com>
	<CAJHLa0Nd1hVrcB9Koyv99zN_ykJbHW21qC3KdjZHB4PmOLLgnQ@mail.gmail.com>
Message-ID: <CANEZrP170RmbegDfssqZS7KFVQ0rguW3dnE4u1yj7h-Dw5rBTw@mail.gmail.com>

I'd be careful with swift generalisations. It depends a lot on the value of
your product. I didn't have any hangups about installing a plugin to use my
TREZOR:  compared to the cost and effort involved with the rest of it,
installing a plugin was by far the easiest part.

Another example. Back in 2005 people also used to say that nobody wanted to
download apps anymore. Then I started working on Google Earth, which got
~400 million installs. Obviously, that was cool enough that people were
willing to download and install a giant hulking ugly Qt app :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/a2053c1c/attachment.html>

From jcea at jcea.es  Tue Apr  8 11:28:21 2014
From: jcea at jcea.es (Jesus Cea)
Date: Tue, 08 Apr 2014 13:28:21 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAAS2fgSZS=hkL=ztNrNVawGbcvO+5iGQ36peC5zBosZ8aCWepg@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<CAAS2fgSZS=hkL=ztNrNVawGbcvO+5iGQ36peC5zBosZ8aCWepg@mail.gmail.com>
Message-ID: <5343DD55.1030601@jcea.es>

On 07/04/14 15:50, Gregory Maxwell wrote:
> Bitcoin.org recommends people away from running Bitcoin-QT now, so I'm
> not sure that we should generally find that trend surprising.

What options are out there for people caring about 20GB blockchain?
Depending of third party server is not an option.

-- 
Jes?s Cea Avi?n                         _/_/      _/_/_/        _/_/_/
jcea at jcea.es - http://www.jcea.es/     _/_/    _/_/  _/_/    _/_/  _/_/
Twitter: @jcea                        _/_/    _/_/          _/_/_/_/_/
jabber / xmpp:jcea at jabber.org  _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 538 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/eaf7912b/attachment.sig>

From bip at mattwhitlock.name  Tue Apr  8 11:52:41 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Tue, 08 Apr 2014 07:52:41 -0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <CAAS2fgSfiYwD-M7+k65JF0Kjeod1zEiPcxPN1iDBHLzYV7UQyA@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<6669921.kYEqrMqt0u@crushinator>
	<CAAS2fgSfiYwD-M7+k65JF0Kjeod1zEiPcxPN1iDBHLzYV7UQyA@mail.gmail.com>
Message-ID: <16848732.PiyLLsBBZa@crushinator>

On Monday, 7 April 2014, at 7:07 pm, Gregory Maxwell wrote:
> On Mon, Apr 7, 2014 at 6:46 PM, Matt Whitlock <bip at mattwhitlock.name> wrote:
> > On Monday, 7 April 2014, at 5:38 pm, Gregory Maxwell wrote:
> >> On Mon, Apr 7, 2014 at 5:33 PM, Nikita Schmidt
> >> <nikita at megiontechnologies.com> wrote:
> >> > Regarding the choice of fields, any implementation of this BIP will
> >> > need big integer arithmetic to do base-58 anyway.
> >> Nah, it doesn't. E.g.
> >> https://gitorious.org/bitcoin/libblkmaker/source/eb33f9c8e441ffef457a79d76ceed1ea20ab3059:base58.c
> > That only *decodes* Base58Check. It has no encode function, which would require biginteger division.
> 
> Yes thats only a decode but the same process (long division with
> manual carries) works just fine the other way. There is absolutely no
> need to use big integers for this.

What do you think a big-integer division by a word-sized divisor *is*? Obviously rolling your own is always an option. Are you just saying that Base58 encoding and decoding is easier than Shamir's Secret Sharing because the divisors are small?



From slush at centrum.cz  Tue Apr  8 12:43:30 2014
From: slush at centrum.cz (slush)
Date: Tue, 8 Apr 2014 14:43:30 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<F2C8C044-EF92-4CCE-9235-28CA7FCE3526@bitsofproof.com>
	<CAJHLa0PPAsBLgsy0vgPpUp=UzeR_fWUEzFb5+xtmODEk4MGPVQ@mail.gmail.com>
	<CAJfRnm7V6fgcj=TMfa2ZTYWOKtE5aoUT1xnVtKUSyriB=6cagQ@mail.gmail.com>
	<CAPg+sBjwf1TcK1CGKVKFzYbV-78j8t-pav7=PEgG7Yqi6-yE7A@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
Message-ID: <CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>

After some off-list discussion about details with wallet developers, it
seems that structure

m/<cointype>'/<account>'/<change>/<n>

fulfill requirements of all wallet developers around, including myTrezor,
Electrum, Multibit, Wallet32 and other software is willing to adapt once
anything will be standardized (i.e. they don't care).

Because I think that everybody told their comments to the topic already and
because it seems that there's quite wide agreement on that, I would like to
close the discussion and finally implement these paths into our software.

Cheers,
Marek


On Fri, Mar 28, 2014 at 3:59 PM, slush <slush at centrum.cz> wrote:

> I agree that 'version' field of bip32 is not necessary and xpriv/xpub
> should be enough for all cases; there's actually no need to use different
> BIP32 roots for different altcoins.
>
> I'm happily using one xpub for Bitcoin/Testnet/Litecoin at once, and by
> having the "cointype" distinction in the bip32 path itself, I'm sure that I
> don't reuse the same pubkey across blockchains which may be a privacy issue
> otherwise.
>
> Marek
>
>
> On Thu, Mar 27, 2014 at 5:28 PM, Pieter Wuille <pieter.wuille at gmail.com>wrote:
>
>> On Thu, Mar 27, 2014 at 5:21 PM, Pavol Rusnak <stick at gk2.sk> wrote:
>> > Cointype in path is for separation purposes, not for identification.
>>
>> I don't understand what that gains you.
>>
>> --
>> Pieter
>>
>>
>> ------------------------------------------------------------------------------
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/3409249a/attachment.html>

From pieter.wuille at gmail.com  Tue Apr  8 13:18:52 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Tue, 8 Apr 2014 15:18:52 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<F2C8C044-EF92-4CCE-9235-28CA7FCE3526@bitsofproof.com>
	<CAJHLa0PPAsBLgsy0vgPpUp=UzeR_fWUEzFb5+xtmODEk4MGPVQ@mail.gmail.com>
	<CAJfRnm7V6fgcj=TMfa2ZTYWOKtE5aoUT1xnVtKUSyriB=6cagQ@mail.gmail.com>
	<CAPg+sBjwf1TcK1CGKVKFzYbV-78j8t-pav7=PEgG7Yqi6-yE7A@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
Message-ID: <CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>

I still don't understand the purpose of cointype. If you don't want to
risk reusing the same keys across different currencies, just don't use
the same seed or the same account? That is purely a client-side issue.

If the consensus is to add the cointype anyway, can we fix it to be
equal to the 4-byte magic in the serialization (after setting the high
bit to true)? That way there aren't two 4-byte magic codes that need
to be defined for each, and at the same time make it obvious from the
serialized form what it is for.



On Tue, Apr 8, 2014 at 2:43 PM, slush <slush at centrum.cz> wrote:
> After some off-list discussion about details with wallet developers, it
> seems that structure
>
> m/<cointype>'/<account>'/<change>/<n>
>
> fulfill requirements of all wallet developers around, including myTrezor,
> Electrum, Multibit, Wallet32 and other software is willing to adapt once
> anything will be standardized (i.e. they don't care).
>
> Because I think that everybody told their comments to the topic already and
> because it seems that there's quite wide agreement on that, I would like to
> close the discussion and finally implement these paths into our software.
>
> Cheers,
> Marek
>
>
> On Fri, Mar 28, 2014 at 3:59 PM, slush <slush at centrum.cz> wrote:
>>
>> I agree that 'version' field of bip32 is not necessary and xpriv/xpub
>> should be enough for all cases; there's actually no need to use different
>> BIP32 roots for different altcoins.
>>
>> I'm happily using one xpub for Bitcoin/Testnet/Litecoin at once, and by
>> having the "cointype" distinction in the bip32 path itself, I'm sure that I
>> don't reuse the same pubkey across blockchains which may be a privacy issue
>> otherwise.
>>
>> Marek
>>
>>
>> On Thu, Mar 27, 2014 at 5:28 PM, Pieter Wuille <pieter.wuille at gmail.com>
>> wrote:
>>>
>>> On Thu, Mar 27, 2014 at 5:21 PM, Pavol Rusnak <stick at gk2.sk> wrote:
>>> > Cointype in path is for separation purposes, not for identification.
>>>
>>> I don't understand what that gains you.
>>>
>>> --
>>> Pieter
>>>
>>>
>>> ------------------------------------------------------------------------------
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From slush at centrum.cz  Tue Apr  8 13:40:05 2014
From: slush at centrum.cz (slush)
Date: Tue, 8 Apr 2014 15:40:05 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<F2C8C044-EF92-4CCE-9235-28CA7FCE3526@bitsofproof.com>
	<CAJHLa0PPAsBLgsy0vgPpUp=UzeR_fWUEzFb5+xtmODEk4MGPVQ@mail.gmail.com>
	<CAJfRnm7V6fgcj=TMfa2ZTYWOKtE5aoUT1xnVtKUSyriB=6cagQ@mail.gmail.com>
	<CAPg+sBjwf1TcK1CGKVKFzYbV-78j8t-pav7=PEgG7Yqi6-yE7A@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>
Message-ID: <CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>

On Tue, Apr 8, 2014 at 3:18 PM, Pieter Wuille <pieter.wuille at gmail.com>wrote:

> I still don't understand the purpose of cointype. If you don't want to
> risk reusing the same keys across different currencies, just don't use
> the same seed or the same account? That is purely a client-side issue.
>
>
Of course it is purely client-side issue, but it matters.

There's actually no reason to generate, backup and store individual seeds
for various coins and purposes. User can handle all his identities and
altcoins with single seed, avoiding potential issues with using wrong seed
for other purposes.

Actually with accounts and cointypes in the path, you can have all your
crypto funds stored on single seed, which I see as very comfortable
solution.

But to gain advantages of such solution and avoid reusing the same path
across blockchains, we need to separate the space, which is achieved by
cointype.


> If the consensus is to add the cointype anyway, can we fix it to be
> equal to the 4-byte magic in the serialization (after setting the high
> bit to true)? That way there aren't two 4-byte magic codes that need
> to be defined for each, and at the same time make it obvious from the
> serialized form what it is for.
>
>
Serialization magic of bip32 seed is in my opinion completely unnecessary.
Most of software does not care about it anyway; You can use xprv/xpub pair
for main net, testnet, litecoin, dogecoin, whatevercoin.

Instead using the same seed (xprv) and then separate the chains *inside*
the bip32 path seems more useful to me.

Marek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/1e5227bc/attachment.html>

From slush at centrum.cz  Tue Apr  8 13:43:49 2014
From: slush at centrum.cz (slush)
Date: Tue, 8 Apr 2014 15:43:49 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<F2C8C044-EF92-4CCE-9235-28CA7FCE3526@bitsofproof.com>
	<CAJHLa0PPAsBLgsy0vgPpUp=UzeR_fWUEzFb5+xtmODEk4MGPVQ@mail.gmail.com>
	<CAJfRnm7V6fgcj=TMfa2ZTYWOKtE5aoUT1xnVtKUSyriB=6cagQ@mail.gmail.com>
	<CAPg+sBjwf1TcK1CGKVKFzYbV-78j8t-pav7=PEgG7Yqi6-yE7A@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>
	<CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>
Message-ID: <CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>

tl;dr;

It is dangerous to expect that other seed than "xprv" does not contain
bitcoins or that "xprv" contains only bitcoins, because technically are
both situations possible. It is still safer to do the lookup; the magic
itself is ambiguous.

Marek

On Tue, Apr 8, 2014 at 3:40 PM, slush <slush at centrum.cz> wrote:

>
> Serialization magic of bip32 seed is in my opinion completely unnecessary.
> Most of software does not care about it anyway; You can use xprv/xpub pair
> for main net, testnet, litecoin, dogecoin, whatevercoin.
>
> Instead using the same seed (xprv) and then separate the chains *inside*
> the bip32 path seems more useful to me.
>
> Marek
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/8f510949/attachment.html>

From pieter.wuille at gmail.com  Tue Apr  8 13:53:52 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Tue, 8 Apr 2014 15:53:52 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<F2C8C044-EF92-4CCE-9235-28CA7FCE3526@bitsofproof.com>
	<CAJHLa0PPAsBLgsy0vgPpUp=UzeR_fWUEzFb5+xtmODEk4MGPVQ@mail.gmail.com>
	<CAJfRnm7V6fgcj=TMfa2ZTYWOKtE5aoUT1xnVtKUSyriB=6cagQ@mail.gmail.com>
	<CAPg+sBjwf1TcK1CGKVKFzYbV-78j8t-pav7=PEgG7Yqi6-yE7A@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>
	<CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>
	<CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>
Message-ID: <CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>

I see the cause of our disagreement now.

You actually want to share a single BIP32 tree across different
currency types, but do it in a way that guarantees that they never use
the same keys.

I would have expected that different chains would use independent
chains, and have serializations encode which chain they belong to.

Let me offer an alternative suggestion, which is compatible with the
original default BIP32 structure:
* You can use one seed across different chains, but the master nodes
are separate.
* To derive the master node from the seed, the key string "Bitcoin
seed" is replaced by something chain-specific.
* Every encoded node (including master nodes) has a chain-specific
serialization magic.

This is in practice almost the same as your suggestion, except that
the m/cointype' in m/cointype'/account'/change/n is replaced by
different masters. The only disadvantage I see is that you do not have
a way to encode the "super master" that is the parent of all
chain-specific masters. You can - and with the same security
properties - encode the seed, though.

-- 
Pieter


On Tue, Apr 8, 2014 at 3:43 PM, slush <slush at centrum.cz> wrote:
> tl;dr;
>
> It is dangerous to expect that other seed than "xprv" does not contain
> bitcoins or that "xprv" contains only bitcoins, because technically are both
> situations possible. It is still safer to do the lookup; the magic itself is
> ambiguous.
>
> Marek
>
> On Tue, Apr 8, 2014 at 3:40 PM, slush <slush at centrum.cz> wrote:
>>
>>
>> Serialization magic of bip32 seed is in my opinion completely unnecessary.
>> Most of software does not care about it anyway; You can use xprv/xpub pair
>> for main net, testnet, litecoin, dogecoin, whatevercoin.
>>
>> Instead using the same seed (xprv) and then separate the chains *inside*
>> the bip32 path seems more useful to me.
>>
>> Marek
>
>



From thomasv1 at gmx.de  Tue Apr  8 13:59:36 2014
From: thomasv1 at gmx.de (Thomas Voegtlin)
Date: Tue, 08 Apr 2014 15:59:36 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>	<F2C8C044-EF92-4CCE-9235-28CA7FCE3526@bitsofproof.com>	<CAJHLa0PPAsBLgsy0vgPpUp=UzeR_fWUEzFb5+xtmODEk4MGPVQ@mail.gmail.com>	<CAJfRnm7V6fgcj=TMfa2ZTYWOKtE5aoUT1xnVtKUSyriB=6cagQ@mail.gmail.com>	<CAPg+sBjwf1TcK1CGKVKFzYbV-78j8t-pav7=PEgG7Yqi6-yE7A@mail.gmail.com>	<53344FF8.7030204@gk2.sk>	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>	<CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>	<CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>
	<CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>
Message-ID: <534400C8.2010600@gmx.de>


+1

I would prefer that solution...



Le 08/04/2014 15:53, Pieter Wuille a ?crit :
> I see the cause of our disagreement now.
>
> You actually want to share a single BIP32 tree across different
> currency types, but do it in a way that guarantees that they never use
> the same keys.
>
> I would have expected that different chains would use independent
> chains, and have serializations encode which chain they belong to.
>
> Let me offer an alternative suggestion, which is compatible with the
> original default BIP32 structure:
> * You can use one seed across different chains, but the master nodes
> are separate.
> * To derive the master node from the seed, the key string "Bitcoin
> seed" is replaced by something chain-specific.
> * Every encoded node (including master nodes) has a chain-specific
> serialization magic.
>
> This is in practice almost the same as your suggestion, except that
> the m/cointype' in m/cointype'/account'/change/n is replaced by
> different masters. The only disadvantage I see is that you do not have
> a way to encode the "super master" that is the parent of all
> chain-specific masters. You can - and with the same security
> properties - encode the seed, though.
>



From tamas at bitsofproof.com  Tue Apr  8 14:00:14 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Tue, 8 Apr 2014 16:00:14 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<F2C8C044-EF92-4CCE-9235-28CA7FCE3526@bitsofproof.com>
	<CAJHLa0PPAsBLgsy0vgPpUp=UzeR_fWUEzFb5+xtmODEk4MGPVQ@mail.gmail.com>
	<CAJfRnm7V6fgcj=TMfa2ZTYWOKtE5aoUT1xnVtKUSyriB=6cagQ@mail.gmail.com>
	<CAPg+sBjwf1TcK1CGKVKFzYbV-78j8t-pav7=PEgG7Yqi6-yE7A@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>
	<CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>
	<CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>
	<CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>
Message-ID: <41F77B0F-FCC5-4614-A435-7B44257F7A7C@bitsofproof.com>

Pieter,

your suggestion has charm since ?Bitcoin seed? would even not need 
a global dictionary like the interpretation of the first level, since it would be self describing.

Regards,

Tamas Blummer
http://bitsofproof.com

On 08.04.2014, at 15:53, Pieter Wuille <pieter.wuille at gmail.com> wrote:

> I see the cause of our disagreement now.
> 
> You actually want to share a single BIP32 tree across different
> currency types, but do it in a way that guarantees that they never use
> the same keys.
> 
> I would have expected that different chains would use independent
> chains, and have serializations encode which chain they belong to.
> 
> Let me offer an alternative suggestion, which is compatible with the
> original default BIP32 structure:
> * You can use one seed across different chains, but the master nodes
> are separate.
> * To derive the master node from the seed, the key string "Bitcoin
> seed" is replaced by something chain-specific.
> * Every encoded node (including master nodes) has a chain-specific
> serialization magic.
> 
> This is in practice almost the same as your suggestion, except that
> the m/cointype' in m/cointype'/account'/change/n is replaced by
> different masters. The only disadvantage I see is that you do not have
> a way to encode the "super master" that is the parent of all
> chain-specific masters. You can - and with the same security
> properties - encode the seed, though.
> 
> -- 
> Pieter
> 
> 
> On Tue, Apr 8, 2014 at 3:43 PM, slush <slush at centrum.cz> wrote:
>> tl;dr;
>> 
>> It is dangerous to expect that other seed than "xprv" does not contain
>> bitcoins or that "xprv" contains only bitcoins, because technically are both
>> situations possible. It is still safer to do the lookup; the magic itself is
>> ambiguous.
>> 
>> Marek
>> 
>> On Tue, Apr 8, 2014 at 3:40 PM, slush <slush at centrum.cz> wrote:
>>> 
>>> 
>>> Serialization magic of bip32 seed is in my opinion completely unnecessary.
>>> Most of software does not care about it anyway; You can use xprv/xpub pair
>>> for main net, testnet, litecoin, dogecoin, whatevercoin.
>>> 
>>> Instead using the same seed (xprv) and then separate the chains *inside*
>>> the bip32 path seems more useful to me.
>>> 
>>> Marek
>> 
>> 
> 
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment 
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/272c6548/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/272c6548/attachment.sig>

From stick at gk2.sk  Tue Apr  8 14:35:35 2014
From: stick at gk2.sk (Pavol Rusnak)
Date: Tue, 08 Apr 2014 16:35:35 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>	<F2C8C044-EF92-4CCE-9235-28CA7FCE3526@bitsofproof.com>	<CAJHLa0PPAsBLgsy0vgPpUp=UzeR_fWUEzFb5+xtmODEk4MGPVQ@mail.gmail.com>	<CAJfRnm7V6fgcj=TMfa2ZTYWOKtE5aoUT1xnVtKUSyriB=6cagQ@mail.gmail.com>	<CAPg+sBjwf1TcK1CGKVKFzYbV-78j8t-pav7=PEgG7Yqi6-yE7A@mail.gmail.com>	<53344FF8.7030204@gk2.sk>	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>	<CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>	<CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>
	<CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>
Message-ID: <53440937.1010501@gk2.sk>

On 04/08/2014 03:53 PM, Pieter Wuille wrote:
> Let me offer an alternative suggestion, which is compatible with the
> original default BIP32 structure:
> * You can use one seed across different chains, but the master nodes
> are separate.
> * To derive the master node from the seed, the key string "Bitcoin
> seed" is replaced by something chain-specific.
> * Every encoded node (including master nodes) has a chain-specific
> serialization magic.

This is possible, but I find it much more practical to use just one list
(assignment of coins to indexes) than to use two lists (assignment of
coins to key strings and to serialization magic).

Keeping two lists is harder and adds unnecessary friction. (Also I am
not very happy for the possibility we'll have to deal with key strings
"sCAMCo1N RULEZZZZ!!!! bRoUghT TO YoU bY M4rty" and serialization magic
that leads to prefix "lulz").

Also from wallet's implementer perspective it is a little easier to use
just one root node and then descend in tree as needed than to use method
you described.

-- 
Best Regards / S pozdravom,

Pavol Rusnak <stick at gk2.sk>



From andreas at schildbach.de  Tue Apr  8 14:49:43 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Tue, 08 Apr 2014 16:49:43 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>	<F2C8C044-EF92-4CCE-9235-28CA7FCE3526@bitsofproof.com>	<CAJHLa0PPAsBLgsy0vgPpUp=UzeR_fWUEzFb5+xtmODEk4MGPVQ@mail.gmail.com>	<CAJfRnm7V6fgcj=TMfa2ZTYWOKtE5aoUT1xnVtKUSyriB=6cagQ@mail.gmail.com>	<CAPg+sBjwf1TcK1CGKVKFzYbV-78j8t-pav7=PEgG7Yqi6-yE7A@mail.gmail.com>	<53344FF8.7030204@gk2.sk>	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
Message-ID: <li12a7$i8o$1@ger.gmane.org>

On 04/08/2014 02:43 PM, slush wrote:

> After some off-list discussion about details with wallet developers, it
> seems that structure
> 
> m/<cointype>'/<account>'/<change>/<n> 
> 
> fulfill requirements of all wallet developers around, including
> myTrezor, Electrum, Multibit, Wallet32 and other software is willing to
> adapt once anything will be standardized (i.e. they don't care).
> 
> Because I think that everybody told their comments to the topic already
> and because it seems that there's quite wide agreement on that, I would
> like to close the discussion and finally implement these paths into our
> software.

While there is an agreement that a standard would be useful for sharing
wallets, we certainly didn't agree on every aspect of a standard. At
least not on this thread, and also not at the Berlin meeting.

I understand each client will implement things a little bit different,
for example the current plan is bitcoinj will hold all keys in memory
and start reusing keys on low resources. Electrum uses a chain for their
private purpose. Etc.

If we cannot 100% agree on a standard and also agree it will not be
extended in future, I think we should not even try. It's dangerous for
the money of users.

I propose we keep our chains deliberately separate and only try
standardizing after each of us has a feel for the specific requirements.





From jgarzik at bitpay.com  Tue Apr  8 15:19:32 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Tue, 8 Apr 2014 11:19:32 -0400
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CANEZrP170RmbegDfssqZS7KFVQ0rguW3dnE4u1yj7h-Dw5rBTw@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
	<CANEZrP2Z5x0_kOQ=8-BMzbmi9=D=ou=s3dgEksMA5F84BHSt9A@mail.gmail.com>
	<CA+WZAEqREDkDvmhM7AY+Ju3fkm3uOGm39Ef9+SYoEr43ybbg2Q@mail.gmail.com>
	<CANEZrP15xWWq2jU5yKjG+9hp___OovtbH+vM5KkzFcaQ=koRow@mail.gmail.com>
	<CA+WZAEpwBqucw7kOFrRn_TsnVGaY0-hm4Xv64_i7LweEzQ=oGw@mail.gmail.com>
	<CAJHLa0Nd1hVrcB9Koyv99zN_ykJbHW21qC3KdjZHB4PmOLLgnQ@mail.gmail.com>
	<CANEZrP170RmbegDfssqZS7KFVQ0rguW3dnE4u1yj7h-Dw5rBTw@mail.gmail.com>
Message-ID: <CAJHLa0POjVLTDqPXTqgf32Oove-KeOd52mDioHf2RZ4izrByxw@mail.gmail.com>

On Tue, Apr 8, 2014 at 4:13 AM, Mike Hearn <mike at plan99.net> wrote:
> I'd be careful with swift generalisations. It depends a lot on the value of
> your product. I didn't have any hangups about installing a plugin to use my

-You- are irrelevant, as am I.  We don't mind such things.

But based on personal observations as well as Mozilla and other
browser data, the user populace in general does not install plugins.
Flash is the LONE exception to that ironclad general rule.

PS. Google Earth is not a plugin :)

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From slush at centrum.cz  Tue Apr  8 15:41:06 2014
From: slush at centrum.cz (slush)
Date: Tue, 8 Apr 2014 17:41:06 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<F2C8C044-EF92-4CCE-9235-28CA7FCE3526@bitsofproof.com>
	<CAJHLa0PPAsBLgsy0vgPpUp=UzeR_fWUEzFb5+xtmODEk4MGPVQ@mail.gmail.com>
	<CAJfRnm7V6fgcj=TMfa2ZTYWOKtE5aoUT1xnVtKUSyriB=6cagQ@mail.gmail.com>
	<CAPg+sBjwf1TcK1CGKVKFzYbV-78j8t-pav7=PEgG7Yqi6-yE7A@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>
	<CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>
	<CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>
	<CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>
Message-ID: <CAJna-Hib6umrkG0pAQzQvsyBMxOU6P675TURsVuWSU_ci9+X_A@mail.gmail.com>

On Tue, Apr 8, 2014 at 3:53 PM, Pieter Wuille <pieter.wuille at gmail.com>wrote:

> I see the cause of our disagreement now.
>
> You actually want to share a single BIP32 tree across different
> currency types, but do it in a way that guarantees that they never use
> the same keys.
>
> I would have expected that different chains would use independent
> chains, and have serializations encode which chain they belong to.
>
> Let me offer an alternative suggestion, which is compatible with the
> original default BIP32 structure:
> * You can use one seed across different chains, but the master nodes
> are separate.
> * To derive the master node from the seed, the key string "Bitcoin
> seed" is replaced by something chain-specific.
>

I've discussed the solution of "Litecoin seed" in BIP32 HMAC with Litecoin
devs already, and after long discussion we've concluded that it is
generally bad idea.

When changing "Bitcoin seed" constant to something different, same
*entropy* will produce different *master node*. That's actually the
opposite what's requested, because xprv serialization format stores *node*,
not *entropy*. By changing HMAC constant, you still won't be able to store
one node and derive wallets for multiple coins at same time.



> * Every encoded node (including master nodes) has a chain-specific
> serialization magic.
>
This is in practice almost the same as your suggestion, except that
> the m/cointype' in m/cointype'/account'/change/n is replaced by
> different masters. The only disadvantage I see is that you do not have
> a way to encode the "super master" that is the parent of all
> chain-specific masters. You can - and with the same security
> properties - encode the seed, though.
>
>
Actually I don't understand why there's such disagreement about "cointype"
level here, what it breaks? I see it as the cleanest solution so far. It is
forward and backward compatible, does need any special extension to bip32
(to be strict, bip32 says "Bitcoin seed", so client using "Litecoin seed"
cannot be "bip32 compatible").

Of course, the problem of "cointype" can be solved in zillion ways, but
still using cointype in bip32 path seem to be the most elegant way so far,
because it fullfill all requirements for single backup, for separating
pubkeys and for handling all coins by one master...

Marek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/5da80ea7/attachment.html>

From slush at centrum.cz  Tue Apr  8 15:46:04 2014
From: slush at centrum.cz (slush)
Date: Tue, 8 Apr 2014 17:46:04 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <li12a7$i8o$1@ger.gmane.org>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<F2C8C044-EF92-4CCE-9235-28CA7FCE3526@bitsofproof.com>
	<CAJHLa0PPAsBLgsy0vgPpUp=UzeR_fWUEzFb5+xtmODEk4MGPVQ@mail.gmail.com>
	<CAJfRnm7V6fgcj=TMfa2ZTYWOKtE5aoUT1xnVtKUSyriB=6cagQ@mail.gmail.com>
	<CAPg+sBjwf1TcK1CGKVKFzYbV-78j8t-pav7=PEgG7Yqi6-yE7A@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
	<li12a7$i8o$1@ger.gmane.org>
Message-ID: <CAJna-HgVs1ahhNKswaKPudwc1AvrBGgdfbZwNCvUPHFzHbh1WA@mail.gmail.com>

On Tue, Apr 8, 2014 at 4:49 PM, Andreas Schildbach <andreas at schildbach.de>wrote:

> While there is an agreement that a standard would be useful for sharing
> wallets, we certainly didn't agree on every aspect of a standard. At
> least not on this thread, and also not at the Berlin meeting.
>
>
We're going to write down BIP describing such structure. If any wallet want
to be BIP XX compatible, then it has chance to. Of course if any wallet
want to use another format, then it cannot call itself BIP XX compatible,
thus nobody will expect that such software will see/recover all keys
generated by BIP XX wallet.


> I understand each client will implement things a little bit different,
> for example the current plan is bitcoinj will hold all keys in memory
> and start reusing keys on low resources. Electrum uses a chain for their
> private purpose. Etc.
>
>
It still doesn't mean that bitcoinj or Electrum cannot share the bare
minimum of BIP XX. Of course if somebody will use Electrum for 2to3
transactions and then move wallet to client which does not offer such
feature, it won't work. But I don't see that as a problem.


> If we cannot 100% agree on a standard and also agree it will not be
> extended in future, I think we should not even try. It's dangerous for
> the money of users.


If some developers agree on some specific BIP, then it should be cross
compatible.  Of course if somebody implements BIP XX in different way, then
it isn't BIP XX compatible.


>
>
I propose we keep our chains deliberately separate and only try
> standardizing after each of us has a feel for the specific requirements.
>

Of course, if somebody don't want to generate compatible bip32 paths, no
problem. It will be the same situation as now.

Marek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/5cd11bda/attachment.html>

From andreas at schildbach.de  Tue Apr  8 15:58:03 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Tue, 08 Apr 2014 17:58:03 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAJna-HgVs1ahhNKswaKPudwc1AvrBGgdfbZwNCvUPHFzHbh1WA@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>	<F2C8C044-EF92-4CCE-9235-28CA7FCE3526@bitsofproof.com>	<CAJHLa0PPAsBLgsy0vgPpUp=UzeR_fWUEzFb5+xtmODEk4MGPVQ@mail.gmail.com>	<CAJfRnm7V6fgcj=TMfa2ZTYWOKtE5aoUT1xnVtKUSyriB=6cagQ@mail.gmail.com>	<CAPg+sBjwf1TcK1CGKVKFzYbV-78j8t-pav7=PEgG7Yqi6-yE7A@mail.gmail.com>	<53344FF8.7030204@gk2.sk>	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>	<li12a7$i8o$1@ger.gmane.org>
	<CAJna-HgVs1ahhNKswaKPudwc1AvrBGgdfbZwNCvUPHFzHbh1WA@mail.gmail.com>
Message-ID: <li16ac$q0k$1@ger.gmane.org>

On 04/08/2014 05:46 PM, slush wrote:

>     I understand each client will implement things a little bit different,
>     for example the current plan is bitcoinj will hold all keys in memory
>     and start reusing keys on low resources. Electrum uses a chain for their
>     private purpose. Etc.
> 
> It still doesn't mean that bitcoinj or Electrum cannot share the bare
> minimum of BIP XX. Of course if somebody will use Electrum for 2to3
> transactions and then move wallet to client which does not offer such
> feature, it won't work. But I don't see that as a problem.

There is no "bare minimum". Either you implement the "BIP" fully or not.
There is no inbetween. Likewise, the standard cannot be extended unless
you create a new standard that is based on the old (without re-using the
path, of course).

We're lightyears away from a BIP. Lets first create implementations and
see if they are compatible in all possible combinations and situations.
The moment any two apps have a different view on their wallets generated
from the same seed, they're incompatible. In this case they should
either fix the issue or intentionally choose incompatible paths, so that
they don't see and spend "subsets" of each other.





From gubatron at gmail.com  Tue Apr  8 16:13:18 2014
From: gubatron at gmail.com (Angel Leon)
Date: Tue, 8 Apr 2014 12:13:18 -0400
Subject: [Bitcoin-development] have there been complains about network
 congestion? (router crashes, slow internet when running Bitcoin nodes)
Message-ID: <CADZB0_bqzoCT7XRgaoWBZLyfoFjWvLs8-YaP9AZ=sv7x_xJbpQ@mail.gmail.com>

I was wondering if the level of traffic a Bitcoin node gets is or will be
so high that you have heard/will hear complains like the following:


   1. a home router that crashes or slows down when its NAT pin-hole table
   overflows, triggered by many TCP connections.
   2. a home router that crashes or slows down by UDP traffic
   3. a home DSL or cable modem having its send buffer filled up by
   outgoing data, and the buffer fits seconds worth of bytes. This adds
   seconds of delay on interactive traffic. For a web site that needs 10 round
   trips to load this may mean 10s of seconds of delay to load compared to
   without bittorrent. Skype or other delay sensitive applications would be
   affected even more.

These are issues the bittorrent community faced and eventually solved
brilliantly with uTP, which uses a congestion window algorithm that allows
you to use as much of the TCP bandwidth as possible and automatically
throttling down if there's any cross traffic, while also taking into
consideration things like the optimum MTUs (Path MTU discovery), Clock
Drift phenomena and other features.

I was wondering if we have or expect to have these issues in the future,
perhaps uTP could help greatly the performance of the entire network at
some point.

Detailed information about uTP here
http://www.libtorrent.org/utp.html

@gubatron
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/476cfadd/attachment.html>

From slush at centrum.cz  Tue Apr  8 16:24:14 2014
From: slush at centrum.cz (slush)
Date: Tue, 8 Apr 2014 18:24:14 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <li16ac$q0k$1@ger.gmane.org>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<F2C8C044-EF92-4CCE-9235-28CA7FCE3526@bitsofproof.com>
	<CAJHLa0PPAsBLgsy0vgPpUp=UzeR_fWUEzFb5+xtmODEk4MGPVQ@mail.gmail.com>
	<CAJfRnm7V6fgcj=TMfa2ZTYWOKtE5aoUT1xnVtKUSyriB=6cagQ@mail.gmail.com>
	<CAPg+sBjwf1TcK1CGKVKFzYbV-78j8t-pav7=PEgG7Yqi6-yE7A@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
	<li12a7$i8o$1@ger.gmane.org>
	<CAJna-HgVs1ahhNKswaKPudwc1AvrBGgdfbZwNCvUPHFzHbh1WA@mail.gmail.com>
	<li16ac$q0k$1@ger.gmane.org>
Message-ID: <CAJna-HiunG_SFTtU0Q9Hdq0yof=wuu93oUEnRGAFPF8Y0UN_xQ@mail.gmail.com>

On Tue, Apr 8, 2014 at 5:58 PM, Andreas Schildbach <andreas at schildbach.de>wrote:

> On 04/08/2014 05:46 PM, slush wrote:
>
> > It still doesn't mean that bitcoinj or Electrum cannot share the bare
> > minimum of BIP XX. Of course if somebody will use Electrum for 2to3
> > transactions and then move wallet to client which does not offer such
> > feature, it won't work. But I don't see that as a problem.
>
> There is no "bare minimum". Either you implement the "BIP" fully or not.
>

I didn't mean "Bare minimum of some spec", but "spec describing bare
minimum", which is different. I'm sorry for confusion.

Marek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/792dd287/attachment.html>

From bip at mattwhitlock.name  Tue Apr  8 16:30:59 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Tue, 08 Apr 2014 12:30:59 -0400
Subject: [Bitcoin-development] have there been complains about network
	congestion? (router crashes,
	slow internet when running Bitcoin nodes)
In-Reply-To: <CADZB0_bqzoCT7XRgaoWBZLyfoFjWvLs8-YaP9AZ=sv7x_xJbpQ@mail.gmail.com>
References: <CADZB0_bqzoCT7XRgaoWBZLyfoFjWvLs8-YaP9AZ=sv7x_xJbpQ@mail.gmail.com>
Message-ID: <3054815.493DgUE4ho@crushinator>

On Tuesday, 8 April 2014, at 12:13 pm, Angel Leon wrote:
> I was wondering if we have or expect to have these issues in the future,
> perhaps uTP could help greatly the performance of the entire network at
> some point.

Or people could simply learn to configure their routers correctly. The only time I ever notice that Bitcoind is saturating my upstream link is when I try to transfer a file using SCP from a computer on my home network to a computer out on the Internet somewhere. SCP sets the "maximize throughput" flag in the IP "type of service" field, and my router interprets that as meaning low priority, and so those SCP transfers get stalled behind Bitcoind. But mostly everything else (e.g., email, web browsing, instant messaging, SSH) shows no degration whatsoever regardless of what Bitcoind is doing. The key is to move the packet queue from the cable modem into the router, where intelligent decisions about packet priority and reordering can be enacted.

?TP pretty much reinvents the wheel, and it does so in userspace, where the overhead is greater. There's no need for it if proper QoS is in effect.



From gubatron at gmail.com  Tue Apr  8 16:36:07 2014
From: gubatron at gmail.com (Angel Leon)
Date: Tue, 8 Apr 2014 12:36:07 -0400
Subject: [Bitcoin-development] have there been complains about network
 congestion? (router crashes, slow internet when running Bitcoin nodes)
In-Reply-To: <3054815.493DgUE4ho@crushinator>
References: <CADZB0_bqzoCT7XRgaoWBZLyfoFjWvLs8-YaP9AZ=sv7x_xJbpQ@mail.gmail.com>
	<3054815.493DgUE4ho@crushinator>
Message-ID: <CADZB0_Zcx7qOsb0ViTFCGs7ve5oBqx6VB0vQfEnA8cxC8LSVmA@mail.gmail.com>

only that in the real world most routers suck and people don't even know
how to configure them (reminds me of the convo about people not installing
plugins)
this is why the wheel had to be reinvented for the bittorrent world, and it
works.

http://twitter.com/gubatron


On Tue, Apr 8, 2014 at 12:30 PM, Matt Whitlock <bip at mattwhitlock.name>wrote:

> On Tuesday, 8 April 2014, at 12:13 pm, Angel Leon wrote:
> > I was wondering if we have or expect to have these issues in the future,
> > perhaps uTP could help greatly the performance of the entire network at
> > some point.
>
> Or people could simply learn to configure their routers correctly. The
> only time I ever notice that Bitcoind is saturating my upstream link is
> when I try to transfer a file using SCP from a computer on my home network
> to a computer out on the Internet somewhere. SCP sets the "maximize
> throughput" flag in the IP "type of service" field, and my router
> interprets that as meaning low priority, and so those SCP transfers get
> stalled behind Bitcoind. But mostly everything else (e.g., email, web
> browsing, instant messaging, SSH) shows no degration whatsoever regardless
> of what Bitcoind is doing. The key is to move the packet queue from the
> cable modem into the router, where intelligent decisions about packet
> priority and reordering can be enacted.
>
> ?TP pretty much reinvents the wheel, and it does so in userspace, where
> the overhead is greater. There's no need for it if proper QoS is in effect.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/c345250e/attachment.html>

From gmaxwell at gmail.com  Tue Apr  8 16:44:07 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 8 Apr 2014 09:44:07 -0700
Subject: [Bitcoin-development] have there been complains about network
 congestion? (router crashes, slow internet when running Bitcoin nodes)
In-Reply-To: <CADZB0_bqzoCT7XRgaoWBZLyfoFjWvLs8-YaP9AZ=sv7x_xJbpQ@mail.gmail.com>
References: <CADZB0_bqzoCT7XRgaoWBZLyfoFjWvLs8-YaP9AZ=sv7x_xJbpQ@mail.gmail.com>
Message-ID: <CAAS2fgThGNpu=0HEsX7rSKZzKOST2Ktci=ZjSw41JD0=Lo5Wug@mail.gmail.com>

On Tue, Apr 8, 2014 at 9:13 AM, Angel Leon <gubatron at gmail.com> wrote:
> a home router that crashes or slows down when its NAT pin-hole table
> overflows, triggered by many TCP connections.

We don't form or need to form a great many connections.

> a home router that crashes or slows down by UDP traffic

We don't use UDP.

> a home DSL or cable modem having its send buffer filled up by outgoing data,
> and the buffer fits seconds worth of bytes. This adds seconds of delay on
> interactive traffic. For a web site that needs 10 round trips to load this
> may mean 10s of seconds of delay to load compared to without bittorrent.
> Skype or other delay sensitive applications would be affected even more.
>
> These are issues the bittorrent community faced and eventually solved
> brilliantly with uTP, which uses a congestion window algorithm that allows

Yes, TCP has a congestion window too, still sometimes some poorly
designed or configured routers suffer from buffer bloat.

> perhaps uTP could help greatly

Adding our own UDP network stack involving a ton of exposed code
sounds like a great way to gain inadvertent bugs or backdoors.

But there doesn't have to be and shouldn't just be one network
transport for Bitcoin. You can gateway to other protocols and run them
in parallel.  I think it would be great for someone to go build an
alternative transport protocol to gateway to and see what useful
things they can accomplish.



From laanwj at gmail.com  Tue Apr  8 16:48:01 2014
From: laanwj at gmail.com (Wladimir)
Date: Tue, 8 Apr 2014 18:48:01 +0200
Subject: [Bitcoin-development] have there been complains about network
 congestion? (router crashes, slow internet when running Bitcoin nodes)
In-Reply-To: <CADZB0_bqzoCT7XRgaoWBZLyfoFjWvLs8-YaP9AZ=sv7x_xJbpQ@mail.gmail.com>
References: <CADZB0_bqzoCT7XRgaoWBZLyfoFjWvLs8-YaP9AZ=sv7x_xJbpQ@mail.gmail.com>
Message-ID: <CA+s+GJBYDuoN2LeWz1dEfMhEYX+e98ORDdTTPd-=FS=4=1Lqkw@mail.gmail.com>

On Tue, Apr 8, 2014 at 6:13 PM, Angel Leon <gubatron at gmail.com> wrote:

> I was wondering if the level of traffic a Bitcoin node gets is or will be
> so high that you have heard/will hear complains like the following:
>
>
>    1. a home router that crashes or slows down when its NAT pin-hole
>    table overflows, triggered by many TCP connections.
>
>
The default maximum amount of connections is 125, which only happens if you
have a stable node that accepts incoming connections. The maximum number of
outgoing connections is always 8.
Should be no problem even for cheapass routers.


>    1. a home router that crashes or slows down by UDP traffic
>
> N/A - We don't use UDP


>    1. a home DSL or cable modem having its send buffer filled up by
>    outgoing data, and the buffer fits seconds worth of bytes. This adds
>    seconds of delay on interactive traffic. For a web site that needs 10 round
>    trips to load this may mean 10s of seconds of delay to load compared to
>    without bittorrent. Skype or other delay sensitive applications would be
>    affected even more.
>
> Filling up the send buffer is certainly possible.
Adding throttling wouldn't be horribly hard, but this is postponed until
parallel block download is implemented, so that other peers will not get
stuck on your throttled node.

>
>    1.
>
> I was wondering if we have or expect to have these issues in the future,
> perhaps uTP could help greatly the performance of the entire network at
> some point.
>

There is enough lower-hanging fruit left.

If you're interested in speeding up the performance I think it's important
to start with benchmarking and analysis to find out where the pain points
are.

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/34cc00c4/attachment.html>

From andrewlecody at gmail.com  Tue Apr  8 17:18:01 2014
From: andrewlecody at gmail.com (Andrew LeCody)
Date: Tue, 8 Apr 2014 12:18:01 -0500
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<5342C833.5030906@gmail.com>
	<CAAS2fgTqBfEPXh2dfcL_ke6c0wfXw4qUM1rAYMkAHcAM6mYH+g@mail.gmail.com>
	<6D430188-CE00-44B1-BD8C-B623CF04D466@icloudtools.net>
Message-ID: <CAEX2NScPaCVxN8Ec=xhcZE6D_KY5QB2LQne61=G1=QQV534HOg@mail.gmail.com>

My node (based in Dallas, TX) has about 240 connections and is using a
little under 4 Mbps in bandwidth right now.

According the hosting provider I'm at 11.85 Mbps for this week, using 95th
percentile billing. The report from my provider includes my other servers
though.


On Mon, Apr 7, 2014 at 12:39 PM, Chris Williams <chris at icloudtools.net>wrote:

> I?m afraid this is a highly simplistic view of the costs of running a full
> node.
>
> My node consumes fantastic amounts of data traffic, which is a real cost.
>
> In the 30 days ending Apri 6, my node:
>
> * Received 36.8 gb of data
> * Sent 456.5 gb data
>
> At my geographic service location (Singapore), this cost about $90 last
> month for bandwidth alone. It would be slightly cheaper if I was hosted in
> the US of course.
>
> But anyone can understand that moving a half-terrabyte of data around in a
> month will not be cheap.
>
>
> On Apr 7, 2014, at 8:53 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
>
> > On Mon, Apr 7, 2014 at 8:45 AM, Justus Ranvier <justusranvier at gmail.com>
> wrote:
> >> 1. The resource requirements of a full node are moving beyond the
> >> capabilities of casual users. This isn't inherently a problem - after
> >> all most people don't grow their own food, tailor their own clothes, or
> >> keep blacksmith tools handy in to forge their own horseshoes either.
> >
> > Right now running a full node consumes about $1 in disk space
> > non-reoccurring and costs a couple cents in power per month.
> >
> > This isn't to say things are all ducky. But if you're going to say the
> > resource requirements are beyond the capabilities of casual users I'm
> > afraid I'm going to have to say: citation needed.
> >
> >
> ------------------------------------------------------------------------------
> > Put Bad Developers to Shame
> > Dominate Development with Jenkins Continuous Integration
> > Continuously Automate Build, Test & Deployment
> > Start a new project now. Try Jenkins in the cloud.
> > http://p.sf.net/sfu/13600_Cloudbees_APR
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/d50a040e/attachment.html>

From gubatron at gmail.com  Tue Apr  8 17:33:18 2014
From: gubatron at gmail.com (Angel Leon)
Date: Tue, 8 Apr 2014 13:33:18 -0400
Subject: [Bitcoin-development] have there been complains about network
 congestion? (router crashes, slow internet when running Bitcoin nodes)
In-Reply-To: <CA+s+GJBYDuoN2LeWz1dEfMhEYX+e98ORDdTTPd-=FS=4=1Lqkw@mail.gmail.com>
References: <CADZB0_bqzoCT7XRgaoWBZLyfoFjWvLs8-YaP9AZ=sv7x_xJbpQ@mail.gmail.com>
	<CA+s+GJBYDuoN2LeWz1dEfMhEYX+e98ORDdTTPd-=FS=4=1Lqkw@mail.gmail.com>
Message-ID: <CADZB0_Zn=6_ZhZOqi93-HPUcZs9qPSZUcPSBcb3Ukuyiumwiuw@mail.gmail.com>

Those clarifications are what I needed to hear. For some reason I started
thinking about this last night and wanted to bring it up just in case it
would help, but def. not necessary. Will get back to more low hanging fruit
in the UI/UX as I get to know the project more.

Gregory: "But there doesn't have to be and shouldn't just be one
network transport
for Bitcoin."
is there a formal abstraction for a Transport layer? I suppose if there
isn't it'll be there when needed.

Thanks!

http://twitter.com/gubatron


On Tue, Apr 8, 2014 at 12:48 PM, Wladimir <laanwj at gmail.com> wrote:

>
> On Tue, Apr 8, 2014 at 6:13 PM, Angel Leon <gubatron at gmail.com> wrote:
>
>> I was wondering if the level of traffic a Bitcoin node gets is or will be
>> so high that you have heard/will hear complains like the following:
>>
>>
>>    1. a home router that crashes or slows down when its NAT pin-hole
>>    table overflows, triggered by many TCP connections.
>>
>>
> The default maximum amount of connections is 125, which only happens if
> you have a stable node that accepts incoming connections. The maximum
> number of outgoing connections is always 8.
> Should be no problem even for cheapass routers.
>
>
>>    1. a home router that crashes or slows down by UDP traffic
>>
>> N/A - We don't use UDP
>
>
>>    1. a home DSL or cable modem having its send buffer filled up by
>>    outgoing data, and the buffer fits seconds worth of bytes. This adds
>>    seconds of delay on interactive traffic. For a web site that needs 10 round
>>    trips to load this may mean 10s of seconds of delay to load compared to
>>    without bittorrent. Skype or other delay sensitive applications would be
>>    affected even more.
>>
>> Filling up the send buffer is certainly possible.
> Adding throttling wouldn't be horribly hard, but this is postponed until
> parallel block download is implemented, so that other peers will not get
> stuck on your throttled node.
>
>>
>>    1.
>>
>> I was wondering if we have or expect to have these issues in the future,
>> perhaps uTP could help greatly the performance of the entire network at
>> some point.
>>
>
> There is enough lower-hanging fruit left.
>
> If you're interested in speeding up the performance I think it's important
> to start with benchmarking and analysis to find out where the pain points
> are.
>
> Wladimir
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/39fdb937/attachment.html>

From gavinandresen at gmail.com  Tue Apr  8 21:11:50 2014
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Tue, 8 Apr 2014 17:11:50 -0400
Subject: [Bitcoin-development] 0.9.1 released
Message-ID: <CABsx9T3dQa9SpHqJd-AEWeiGUH4zGPWcO7rsgQq53dBV0JqZfw@mail.gmail.com>

Bitcoin Core version 0.9.1 is now available from:

  https://bitcoin.org/bin/0.9.1/

This is a security update. It is recommended to upgrade to this release
as soon as possible.

It is especially important to upgrade if you currently have version
0.9.0 installed and are using the graphical interface OR you are using
bitcoind from any pre-0.9.1 version, and have enabled SSL for RPC and
have configured allowip to allow rpc connections from potentially
hostile hosts.

Please report bugs using the issue tracker at github:

  https://github.com/bitcoin/bitcoin/issues

How to Upgrade
--------------

If you are running an older version, shut it down. Wait until it has
completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac)
or
bitcoind/bitcoin-qt (on Linux).

If you are upgrading from version 0.7.2 or earlier, the first time you run
0.9.1 your blockchain files will be re-indexed, which will take anywhere
from
30 minutes to several hours, depending on the speed of your machine.

0.9.1 Release notes
=======================

No code changes were made between 0.9.0 and 0.9.1. Only the dependencies
were changed.

- Upgrade OpenSSL to 1.0.1g. This release fixes the following
vulnerabilities which can
  affect the Bitcoin Core software:

  - CVE-2014-0160 ("heartbleed")
    A missing bounds check in the handling of the TLS heartbeat extension
can
    be used to reveal up to 64k of memory to a connected client or server.

  - CVE-2014-0076
    The Montgomery ladder implementation in OpenSSL does not ensure that
    certain swap operations have a constant-time behavior, which makes it
    easier for local users to obtain ECDSA nonces via a FLUSH+RELOAD cache
    side-channel attack.

- Add statically built executables to Linux build

Credits
--------

Credits go to the OpenSSL team for fixing the vulnerabilities quickly.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140408/5993f617/attachment.html>

From w at hivewallet.com  Wed Apr  9 10:38:54 2014
From: w at hivewallet.com (Wendell)
Date: Wed, 9 Apr 2014 17:38:54 +0700
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <CAAf19Wrz0u_e5V9Gb=_CAG=mHtE9nA_VETgYZeCXZqwaGeYKuQ@mail.gmail.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<CALC81CMc7BridL7600b7bij3dJHzeQWgTv=iqVeW--n-we+1Yw@mail.gmail.com>
	<lhua2p$lp5$1@ger.gmane.org>
	<CANEZrP3F+UQ1amVAK4a9_UCsXia7Yfv0RO4pWK7NTde0GvH-0A@mail.gmail.com>
	<CAAf19Wrz0u_e5V9Gb=_CAG=mHtE9nA_VETgYZeCXZqwaGeYKuQ@mail.gmail.com>
Message-ID: <B3C2AD26-F806-450E-A19F-31E7871A09A7@hivewallet.com>

On that note, I think we have every possibility to make desktop and mobile wallets mind-numbingly simple -- and perhaps even do one better. Is this now a community priority? If so, I would really appreciate some additional contributors to Hive!

https://github.com/hivewallet/hive-osx
https://github.com/hivewallet/hive-android

-wendell

hivewallet.com | twitter.com/hivewallet | pgp 0x8C498718
twitter.com/bitcoinbookclub | campbitcoin.hivewallet.com

On Apr 7, 2014, at 9:15 PM, Eric Martindale wrote:

> We need to make it so mind-numbingly simple to "run Bitcoin correctly" that the average user doesn't find reasons to do so in the course of normal use.  Right now, Coinbase and Bitstamp are winning in the user experience battle, which technically endanger the user, and by proxy the Bitcoin network.
> 
> Multi-sig as a default is a start.  It won't succeed unless the user experience is simply better than trusted third parties, but we need to start the education process with the very basic fundamental: trusting a third-party with full access to your Bitcoin is just replacing one centralized banking system with another.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 841 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/0b52c0a2/attachment.sig>

From laanwj at gmail.com  Wed Apr  9 11:15:44 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 9 Apr 2014 13:15:44 +0200
Subject: [Bitcoin-development] Why are we bleeding nodes?
In-Reply-To: <B3C2AD26-F806-450E-A19F-31E7871A09A7@hivewallet.com>
References: <CANEZrP2rgiQHpekEpFviJ22QsiV+s-F2pqosaZOA5WrRtJx5pg@mail.gmail.com>
	<CALC81CMc7BridL7600b7bij3dJHzeQWgTv=iqVeW--n-we+1Yw@mail.gmail.com>
	<lhua2p$lp5$1@ger.gmane.org>
	<CANEZrP3F+UQ1amVAK4a9_UCsXia7Yfv0RO4pWK7NTde0GvH-0A@mail.gmail.com>
	<CAAf19Wrz0u_e5V9Gb=_CAG=mHtE9nA_VETgYZeCXZqwaGeYKuQ@mail.gmail.com>
	<B3C2AD26-F806-450E-A19F-31E7871A09A7@hivewallet.com>
Message-ID: <CA+s+GJDPTrrrUmiXZzAgngefyJBX6YVK5XCpDQ_OtV8Wa+JpYw@mail.gmail.com>

On Wed, Apr 9, 2014 at 12:38 PM, Wendell <w at hivewallet.com> wrote:

> On that note, I think we have every possibility to make desktop and mobile
> wallets mind-numbingly simple -- and perhaps even do one better. Is this
> now a community priority? If so, I would really appreciate some additional
> contributors to Hive!
>
>
How does that relate to the nodes issue?

Would packaging an optional bitcoind with your wallet be an option, which
is automatically managed in the background, so that users can run a full
node if they want?

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/a1b6a0ec/attachment.html>

From laanwj at gmail.com  Wed Apr  9 15:29:32 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 9 Apr 2014 17:29:32 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV wallets
Message-ID: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>

Hello,

This is primarily aimed at developers of SPV wallets.

The recently reported decrease in number of full nodes could have several
reasons, one of them that less people are running Bitcoin Core for the
wallet because the other wallets are getting ahead in both features and
useability.

It's great to see innovation in wallets, but it's worrying that the number
of full nodes decreases.

It may be that lots of people would support the network by running a full
node, but don't want to go through the trouble of installing bitcoin core
separately (and get confused because it's a wallet, too).

Hence I'd like to explore the idea of adding an option to popular SPV
wallets, to spin a bitcoind process in the background. This could be pretty
much transparent to the user - it would sync in the background, the wallet
could show statistics about the node, but is not dependent on it.

In exchange the user would get increased (full node level) security, as the
SPV wallet would have a local trusted node.

Does this sound like a good idea?

Is there any way that Bitcoin Core can help to accomedate this 'embedded'
usage? Specific Interfaces, special builds - maybe add a walletless
bitcoind build to gitian - bindings, dlls, etc?

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/6673abbe/attachment.html>

From tamas at bitsofproof.com  Wed Apr  9 15:37:43 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Wed, 9 Apr 2014 17:37:43 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
Message-ID: <05F8CE60-8058-4616-B3CD-511D6972D36C@bitsofproof.com>

YES

Such a bitcoind is what I called border router in a previous mail. 

Yes, SPV wallets are getting ahead of features, so people will use them also because on size just does not fit all, but all want to ensure being on the same trunk of the chain.
Therefore serious user of Bitcoin run a bitcoind as a border router and connect SPV wallets with higher functionality to that trusted node(s).

This is what I think the core should focus on: Being a lightweight superfast consensus building border router and nothing more. No wallet, no GUI, no RPC calls,
no Payment protocol and the rest.

Regards,

Tamas Blummer
http://bitsofproof.com

On 09.04.2014, at 17:29, Wladimir <laanwj at gmail.com> wrote:

> Hello,
> 
> This is primarily aimed at developers of SPV wallets.
> 
> The recently reported decrease in number of full nodes could have several reasons, one of them that less people are running Bitcoin Core for the wallet because the other wallets are getting ahead in both features and useability.
> 
> It's great to see innovation in wallets, but it's worrying that the number of full nodes decreases. 
> 
> It may be that lots of people would support the network by running a full node, but don't want to go through the trouble of installing bitcoin core separately (and get confused because it's a wallet, too).
> 
> Hence I'd like to explore the idea of adding an option to popular SPV wallets, to spin a bitcoind process in the background. This could be pretty much transparent to the user - it would sync in the background, the wallet could show statistics about the node, but is not dependent on it.
> 
> In exchange the user would get increased (full node level) security, as the SPV wallet would have a local trusted node.
> 
> Does this sound like a good idea?
> 
> Is there any way that Bitcoin Core can help to accomedate this 'embedded' usage? Specific Interfaces, special builds - maybe add a walletless bitcoind build to gitian - bindings, dlls, etc?
> 
> Wladimir
> 
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment 
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees_______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/714a611c/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/714a611c/attachment.sig>

From natanael.l at gmail.com  Wed Apr  9 15:41:31 2014
From: natanael.l at gmail.com (Natanael)
Date: Wed, 9 Apr 2014 17:41:31 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
Message-ID: <CAAt2M18z_Qkqat1OETiXAz0QQey4+y5J6=pC7nkoJfyfrpj3=A@mail.gmail.com>

This could probably be done fairly easily by bundling Stratum (it's
not just for pools!) and allowing SPV wallets to ask Bitcoind to start
it (if you don't use it, there's no need to waste the resources), and
then connect to it. The point of using Stratum is that it already is
being used by Electrum, and that it might be an easier way to support
SPV clients than creating a new API in bitcoind for it since Stratum
itself already relies on bitcoind to provide it's services.

On Wed, Apr 9, 2014 at 5:29 PM, Wladimir <laanwj at gmail.com> wrote:
> Hello,
>
> This is primarily aimed at developers of SPV wallets.
>
> The recently reported decrease in number of full nodes could have several
> reasons, one of them that less people are running Bitcoin Core for the
> wallet because the other wallets are getting ahead in both features and
> useability.
>
> It's great to see innovation in wallets, but it's worrying that the number
> of full nodes decreases.
>
> It may be that lots of people would support the network by running a full
> node, but don't want to go through the trouble of installing bitcoin core
> separately (and get confused because it's a wallet, too).
>
> Hence I'd like to explore the idea of adding an option to popular SPV
> wallets, to spin a bitcoind process in the background. This could be pretty
> much transparent to the user - it would sync in the background, the wallet
> could show statistics about the node, but is not dependent on it.
>
> In exchange the user would get increased (full node level) security, as the
> SPV wallet would have a local trusted node.
>
> Does this sound like a good idea?
>
> Is there any way that Bitcoin Core can help to accomedate this 'embedded'
> usage? Specific Interfaces, special builds - maybe add a walletless bitcoind
> build to gitian - bindings, dlls, etc?
>
> Wladimir
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From brianchoffman at gmail.com  Wed Apr  9 15:42:31 2014
From: brianchoffman at gmail.com (Brian Hoffman)
Date: Wed, 9 Apr 2014 11:42:31 -0400
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
Message-ID: <CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>

How would this affect the user in terms of disk storage? They're going to
get hammered on space constraints aren't they? If it's not required how
likely are users to enable this?


On Wed, Apr 9, 2014 at 11:29 AM, Wladimir <laanwj at gmail.com> wrote:

> Hello,
>
> This is primarily aimed at developers of SPV wallets.
>
> The recently reported decrease in number of full nodes could have several
> reasons, one of them that less people are running Bitcoin Core for the
> wallet because the other wallets are getting ahead in both features and
> useability.
>
> It's great to see innovation in wallets, but it's worrying that the number
> of full nodes decreases.
>
> It may be that lots of people would support the network by running a full
> node, but don't want to go through the trouble of installing bitcoin core
> separately (and get confused because it's a wallet, too).
>
> Hence I'd like to explore the idea of adding an option to popular SPV
> wallets, to spin a bitcoind process in the background. This could be pretty
> much transparent to the user - it would sync in the background, the wallet
> could show statistics about the node, but is not dependent on it.
>
> In exchange the user would get increased (full node level) security, as
> the SPV wallet would have a local trusted node.
>
> Does this sound like a good idea?
>
> Is there any way that Bitcoin Core can help to accomedate this 'embedded'
> usage? Specific Interfaces, special builds - maybe add a walletless
> bitcoind build to gitian - bindings, dlls, etc?
>
> Wladimir
>
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/0039915d/attachment.html>

From gmaxwell at gmail.com  Wed Apr  9 15:54:25 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 9 Apr 2014 08:54:25 -0700
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CAAt2M18z_Qkqat1OETiXAz0QQey4+y5J6=pC7nkoJfyfrpj3=A@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAAt2M18z_Qkqat1OETiXAz0QQey4+y5J6=pC7nkoJfyfrpj3=A@mail.gmail.com>
Message-ID: <CAAS2fgScWkentFy7Ak0bpYVLsOFL+xkwPm5QRu9ENeX9oCtPug@mail.gmail.com>

On Wed, Apr 9, 2014 at 8:41 AM, Natanael <natanael.l at gmail.com> wrote:
> This could probably be done fairly easily by bundling Stratum (it's
> not just for pools!) and allowing SPV wallets to ask Bitcoind to start
> it (if you don't use it, there's no need to waste the resources), and
> then connect to it. The point of using Stratum is that it already is
> being used by Electrum,

Sadly today Electrum requires more than a full node, it requires a
number of large additional indexes over what a full node has and
pruning is precluded. I don't think that increasing the resource
utilization of the node is a good way to go there for the purposes
expressed here. (not that electrum couldn't be used here, but not
unmodified without the resource usage increasing route)

> and that it might be an easier way to support
> SPV clients than creating a new API in bitcoind for it since Stratum
> itself already relies on bitcoind to provide it's services.

Bitcoin's own P2P protocol is already the API for a ordinary SPV
client. So I don't believe any new API would be require, except
perhaps for some process management stuff (which also isn't provided
for Electrum).



From gmaxwell at gmail.com  Wed Apr  9 15:57:58 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 9 Apr 2014 08:57:58 -0700
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
Message-ID: <CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>

On Wed, Apr 9, 2014 at 8:42 AM, Brian Hoffman <brianchoffman at gmail.com> wrote:
> How would this affect the user in terms of disk storage? They're going to
> get hammered on space constraints aren't they? If it's not required how
> likely are users to enable this?

If Bitcoin core activates pruning a full node can be supported in?
say? 4GBytes or so. (That gives enough space to store the utxo about
350MB now, and a couple gigs for blocks to serve out).

I'd imagine getting information from SPV wallet developers how much
disk usage agility they think is required is part of what Wladimir is
looking for.



From thomasv1 at gmx.de  Wed Apr  9 16:09:06 2014
From: thomasv1 at gmx.de (Thomas Voegtlin)
Date: Wed, 09 Apr 2014 18:09:06 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CAAS2fgScWkentFy7Ak0bpYVLsOFL+xkwPm5QRu9ENeX9oCtPug@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>	<CAAt2M18z_Qkqat1OETiXAz0QQey4+y5J6=pC7nkoJfyfrpj3=A@mail.gmail.com>
	<CAAS2fgScWkentFy7Ak0bpYVLsOFL+xkwPm5QRu9ENeX9oCtPug@mail.gmail.com>
Message-ID: <534570A2.9090502@gmx.de>

Le 09/04/2014 17:54, Gregory Maxwell a ?crit :

> Sadly today Electrum requires more than a full node, it requires a
> number of large additional indexes over what a full node has and
> pruning is precluded. I don't think that increasing the resource
> utilization of the node is a good way to go there for the purposes
> expressed here. (not that electrum couldn't be used here, but not
> unmodified without the resource usage increasing route)
>

Electrum uses two large indexes:

     address -> utxo

(patricia tree, aka "ultimate blockchain compression", see thread 
started by Alan Reiner in the bitcointalk forum)

     address -> spent history

The first index is not going to grow larger than what bitcoind already 
needs to store, because bitcoind will always need to store utxos.

The second index threatens to become large. However, Electrum servers do 
not keep the full histories, they prune older entries. Without adapting 
Electrum clients, it would even be possible to keep only one bit per 
address (to know whether that address has been used or not), and that 
information is only used to restore wallets from seed, not during normal 
operations.

If the first index (patricia tree) was implemented in bitcoind, that 
would obviously be a big relief for electrum servers.



>> and that it might be an easier way to support
>> SPV clients than creating a new API in bitcoind for it since Stratum
>> itself already relies on bitcoind to provide it's services.
>
> Bitcoin's own P2P protocol is already the API for a ordinary SPV
> client. So I don't believe any new API would be require, except
> perhaps for some process management stuff (which also isn't provided
> for Electrum).
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>



From tamas at bitsofproof.com  Wed Apr  9 16:09:13 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Wed, 9 Apr 2014 18:09:13 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
Message-ID: <E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>

I am glad that SPV wallets are discussed outside the scope of mobile devices!

Yes, SPV is a sufficient API to a trusted node to build sophisticated features not offered by the core.
SPV clients of the border router will build their own archive and indices based on their interest of the chain therefore the
border router core does not need to store (and process) anything not needed for consensus, its memory
or disk footprint would be as low as an optimal storage of UTXO.

Regards,

Tam?s Blummer
http://bitsofproof.com

On 09.04.2014, at 17:57, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> On Wed, Apr 9, 2014 at 8:42 AM, Brian Hoffman <brianchoffman at gmail.com> wrote:
>> How would this affect the user in terms of disk storage? They're going to
>> get hammered on space constraints aren't they? If it's not required how
>> likely are users to enable this?
> 
> If Bitcoin core activates pruning a full node can be supported in?
> say? 4GBytes or so. (That gives enough space to store the utxo about
> 350MB now, and a couple gigs for blocks to serve out).
> 
> I'd imagine getting information from SPV wallet developers how much
> disk usage agility they think is required is part of what Wladimir is
> looking for.
> 
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment 
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/44274e19/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/44274e19/attachment.sig>

From mark at monetize.io  Wed Apr  9 15:47:37 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Wed, 09 Apr 2014 08:47:37 -0700
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
Message-ID: <53456B99.9010207@monetize.io>

On 04/09/2014 09:09 AM, Tamas Blummer wrote:
> Yes, SPV is a sufficient API to a trusted node to build sophisticated
> features not offered by the core.
> SPV clients of the border router will build their own archive and
> indices based on their interest of the chain therefore the
> border router core does not need to store (and process) anything not
> needed for consensus, its memory
> or disk footprint would be as low as an optimal storage of UTXO.

Storing zero full blocks does nothing to aid the network.



From pete at petertodd.org  Wed Apr  9 16:03:08 2014
From: pete at petertodd.org (Peter Todd)
Date: Wed, 09 Apr 2014 12:03:08 -0400
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
Message-ID: <a591551b-1a5b-4fdc-8e4a-1a1dae4242f4@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Two talking points for said developers yo their user re: "Why use a full node?":

1) It's more private. Bloom filters gives away quite accurate statistical information about what coins you own to whom ever you happen to be connected too. An attacker can easily use this to deanonymize you even if you don't reuse addresses; Tor does not help much against this attack.

2) It's more secure. SPV means you are trusting miners to do validation for you. With the extremely high degree of mining centralisation we currently have it would only take one or two pools getting hacked for an attacker to be able to get enough hashing power to easily fool your SPV wallet into accepting a fake transaction.


As for what we can offer those developers, partial UTXO set mode would be a great long term goal.

On 9 April 2014 11:29:32 GMT-04:00, Wladimir <laanwj at gmail.com> wrote:
>Hello,
>
>This is primarily aimed at developers of SPV wallets.
>
>The recently reported decrease in number of full nodes could have
>several
>reasons, one of them that less people are running Bitcoin Core for the
>wallet because the other wallets are getting ahead in both features and
>useability.
>
>It's great to see innovation in wallets, but it's worrying that the
>number
>of full nodes decreases.
>
>It may be that lots of people would support the network by running a
>full
>node, but don't want to go through the trouble of installing bitcoin
>core
>separately (and get confused because it's a wallet, too).
>
>Hence I'd like to explore the idea of adding an option to popular SPV
>wallets, to spin a bitcoind process in the background. This could be
>pretty
>much transparent to the user - it would sync in the background, the
>wallet
>could show statistics about the node, but is not dependent on it.
>
>In exchange the user would get increased (full node level) security, as
>the
>SPV wallet would have a local trusted node.
>
>Does this sound like a good idea?
>
>Is there any way that Bitcoin Core can help to accomedate this
>'embedded'
>usage? Specific Interfaces, special builds - maybe add a walletless
>bitcoind build to gitian - bindings, dlls, etc?
>
>Wladimir
>
>
>------------------------------------------------------------------------
>
>------------------------------------------------------------------------------
>Put Bad Developers to Shame
>Dominate Development with Jenkins Continuous Integration
>Continuously Automate Build, Test & Deployment
>Start a new project now. Try Jenkins in the cloud.
>http://p.sf.net/sfu/13600_Cloudbees
>
>------------------------------------------------------------------------
>
>_______________________________________________
>Bitcoin-development mailing list
>Bitcoin-development at lists.sourceforge.net
>https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCgA6BQJTRW88MxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhUIBB/4tVMqj7NEHFekUgv7O
hKgUNreD5RQbVLjiG9BIKWTdOrD79qNk66QVxuH7oOCypMLCdT2ctdvsvfH8ncdG
GVpTcbXL39vEk9qkGN4wY2++pKn5unqKg1C99YbJAcC62XMFJjjES2XiwyKGsYmb
IplOEN7BXh9KE01f7gPh4nZqtqsb6XnlLQGjjRWGlX/oIMphUOdfMtBdWql59bx3
wnHUDc1pAv2bCcyiUI/nOoyNyZixZC16wXoM2pnAJ9PhPbd79lmiKVmjNmrqhu17
HIHlKXk6YD8JVlHD8NoaC1GUwG39jmt5nk1vsfvvesXF+c0VqctVNIitVkvqLNj+
mwXd
=4b5H
-----END PGP SIGNATURE-----




From tamas at bitsofproof.com  Wed Apr  9 16:27:13 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Wed, 9 Apr 2014 18:27:13 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <53456B99.9010207@monetize.io>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
Message-ID: <B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>

A border router that is not able to serve blocks is still protecting consensus rules, that SPVs do not.
If the network would only consist of SPV nodes only then e.g. a majority coalition of miner could increase their reward at will.

Archives need a different solution.

Regards,

Tamas Blummer
http://bitsofproof.com

On 09.04.2014, at 17:47, Mark Friedenbach <mark at monetize.io> wrote:

> On 04/09/2014 09:09 AM, Tamas Blummer wrote:
>> Yes, SPV is a sufficient API to a trusted node to build sophisticated
>> features not offered by the core.
>> SPV clients of the border router will build their own archive and
>> indices based on their interest of the chain therefore the
>> border router core does not need to store (and process) anything not
>> needed for consensus, its memory
>> or disk footprint would be as low as an optimal storage of UTXO.
> 
> Storing zero full blocks does nothing to aid the network.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/7f11ea3a/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/7f11ea3a/attachment.sig>

From laanwj at gmail.com  Wed Apr  9 17:31:34 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 9 Apr 2014 19:31:34 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CAAt2M18z_Qkqat1OETiXAz0QQey4+y5J6=pC7nkoJfyfrpj3=A@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAAt2M18z_Qkqat1OETiXAz0QQey4+y5J6=pC7nkoJfyfrpj3=A@mail.gmail.com>
Message-ID: <CA+s+GJBeXM_Ls-Xo1TWqkfyrD4ga8fve5ndpzsvr56wm-2xJyQ@mail.gmail.com>

On Wed, Apr 9, 2014 at 5:41 PM, Natanael <natanael.l at gmail.com> wrote:

> This could probably be done fairly easily by bundling Stratum (it's
> not just for pools!) and allowing SPV wallets to ask Bitcoind to start
> it (if you don't use it, there's no need to waste the resources), and
> then connect to it. The point of using Stratum is that it already is
> being used by Electrum, and that it might be an easier way to support
> SPV clients than creating a new API in bitcoind for it since Stratum
> itself already relies on bitcoind to provide it's services.
>

Why would a new API be needed? (beside maybe some functionality that would
make it easier to integrate)

P2P should be enough for SPV clients such as BitcoinJ to get access to
(filtered) blocks and transations, and RPC can be used to manage/query the
bitcoind instance. I'm not sure what stratum would add.

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/a2914bc4/attachment.html>

From alex.mizrahi at gmail.com  Wed Apr  9 17:33:19 2014
From: alex.mizrahi at gmail.com (Alex Mizrahi)
Date: Wed, 9 Apr 2014 20:33:19 +0300
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <a591551b-1a5b-4fdc-8e4a-1a1dae4242f4@email.android.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<a591551b-1a5b-4fdc-8e4a-1a1dae4242f4@email.android.com>
Message-ID: <CAE28kUSg7BV4=Cm9AoJoQvgyGa=D7Kpj5idodqaOzy9QHpH8gg@mail.gmail.com>

>
> 1) It's more private. Bloom filters gives away quite accurate statistical
> information about what coins you own to whom ever you happen to be
> connected too. An attacker can easily use this to deanonymize you even if
> you don't reuse addresses; Tor does not help much against this attack.
>

There is also an option to download everything, but do only a very basic
surface validation (without keeping track of UTXOs).
You do not need a full node for that.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/120496bf/attachment.html>

From laanwj at gmail.com  Wed Apr  9 17:35:24 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 9 Apr 2014 19:35:24 +0200
Subject: [Bitcoin-development] Fwd: Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CA+s+GJBpvqqu=XEojyekx5su+JfYLwz+zsbo8L0=5t6s-_b33w@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CA+s+GJBpvqqu=XEojyekx5su+JfYLwz+zsbo8L0=5t6s-_b33w@mail.gmail.com>
Message-ID: <CA+s+GJB0zOT5aETWMAw5rSC-PPtcQqayZRAi=-niK3xkzKkt_Q@mail.gmail.com>

On Wed, Apr 9, 2014 at 5:42 PM, Brian Hoffman <brianchoffman at gmail.com>wrote:

> How would this affect the user in terms of disk storage? They're going to
> get hammered on space constraints aren't they? If it's not required how
> likely are users to enable this?
>

If they make the (conscious) choice to run a full node they will require
the bandwidth and disk space to run it.

The difference with running Bitcoin Core as wallet will be that they can
choose their own wallet to go with the full node.

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/5b28b814/attachment.html>

From laanwj at gmail.com  Wed Apr  9 17:38:21 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 9 Apr 2014 19:38:21 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CAE28kUSg7BV4=Cm9AoJoQvgyGa=D7Kpj5idodqaOzy9QHpH8gg@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<a591551b-1a5b-4fdc-8e4a-1a1dae4242f4@email.android.com>
	<CAE28kUSg7BV4=Cm9AoJoQvgyGa=D7Kpj5idodqaOzy9QHpH8gg@mail.gmail.com>
Message-ID: <CA+s+GJDjESrSFL+ctAp1c=oivu+QGoBPVYn4ES4zSiWK=xiYDw@mail.gmail.com>

On Wed, Apr 9, 2014 at 7:33 PM, Alex Mizrahi <alex.mizrahi at gmail.com> wrote:

> 1) It's more private. Bloom filters gives away quite accurate statistical
>> information about what coins you own to whom ever you happen to be
>> connected too. An attacker can easily use this to deanonymize you even if
>> you don't reuse addresses; Tor does not help much against this attack.
>>
>
> There is also an option to download everything, but do only a very basic
> surface validation (without keeping track of UTXOs).
> You do not need a full node for that.
>

You may not *need* a full node, but the point of this (which I clearly
explained in my opening post) would be to support the network.

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/6371ea18/attachment.html>

From pete at petertodd.org  Wed Apr  9 17:38:28 2014
From: pete at petertodd.org (Peter Todd)
Date: Wed, 09 Apr 2014 13:38:28 -0400
Subject: [Bitcoin-development] Bitcoind-in-background mode for
	SPV	wallets
In-Reply-To: <CAE28kUSg7BV4=Cm9AoJoQvgyGa=D7Kpj5idodqaOzy9QHpH8gg@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<a591551b-1a5b-4fdc-8e4a-1a1dae4242f4@email.android.com>
	<CAE28kUSg7BV4=Cm9AoJoQvgyGa=D7Kpj5idodqaOzy9QHpH8gg@mail.gmail.com>
Message-ID: <b1535940-8765-4041-be88-f345f848691f@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512



On 9 April 2014 13:33:19 GMT-04:00, Alex Mizrahi <alex.mizrahi at gmail.com> wrote:
>>
>> 1) It's more private. Bloom filters gives away quite accurate
>statistical
>> information about what coins you own to whom ever you happen to be
>> connected too. An attacker can easily use this to deanonymize you
>even if
>> you don't reuse addresses; Tor does not help much against this
>attack.
>>
>
>There is also an option to download everything, but do only a very
>basic
>surface validation (without keeping track of UTXOs).
>You do not need a full node for that.

Yup, that's part of the idea behind partial UTXO set mode. You could have a model where your node starts with no data at all, and hence SPV security. You tell your node what the oldest key birthday is that your interested in and it downloads the full block chain starting at that date, giving you your txs w/ SPV security and full node privacy.

What partial UTXO would add on top of that is then your node would gradually scan backwards until block zero, at which point it has a complete UTXO set and is a full node.
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCgA6BQJTRYWUMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhaHEB/0Q0P544nJrtapnzogG
QpREeBlwR5I8fZ+BCbNcAk6afk9KLOFIsLBW0bFvFXfSO1TiyCLMezLkvhuDC5lM
vrCBKdmaXhwMaTGppgFNl9adu8yBRQ6I2BN21hQejyfmCvHTsoN6u1oeYccL+K+D
lTK2dMCmXLixcQIJjS9sGA8/TXjmiY65RzIdXl0UHeV4JUtRREMUB1HeXJWCxMEt
4KQXb5tk21vZ+BTf9kRirnCtFT+Wudyo73M2XGKbR3mzHc2jY+RjEb71J0hUmh8s
h4kVhuMMkEFjNUwU017kEYQpmXMMRwCyUydc7BoV6hZXnUx4ROTpc6pDv2IZkeLB
bGiE
=adiR
-----END PGP SIGNATURE-----




From pete at petertodd.org  Wed Apr  9 17:46:00 2014
From: pete at petertodd.org (Peter Todd)
Date: Wed, 09 Apr 2014 13:46:00 -0400
Subject: [Bitcoin-development] Bitcoind-in-background mode for
	SPV	wallets
In-Reply-To: <B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
Message-ID: <00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512



On 9 April 2014 12:27:13 GMT-04:00, Tamas Blummer <tamas at bitsofproof.com> wrote:
>A border router that is not able to serve blocks is still protecting
>consensus rules, that SPVs do not.
>If the network would only consist of SPV nodes only then e.g. a
>majority coalition of miner could increase their reward at will.
>
>Archives need a different solution.

Any collective group that has a majority of hashing power will have no major issues running enough nodes that follow their rules to make SPV insecure anyway.

There's no good reason not to have SPV security nodes distribute block chain data, particularly block headers. It helps provide redundancy in the network topology and helps provide more resources for full nodes to sync up faster. For instance in a network with a large number of partial UTXO set nodes if those nodes are forwarding block data to each other they can get enough data to become fully fledged full nodes without putting all the load on the existing full nodes.  This is a good thing.
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCgA6BQJTRYdYMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhdwRB/46MAw7OHwnVkLHOD0g
Y4X6p1/QHgRisJIgpG2Y4nGVeAjOFleQWe4PWS4Wwdr4u0BDGPmJompiR3A99CaL
MUPnxJhtdiUsomn6kI704f5pkrqslQGLzejWFb7/9WuQtvGm8RwnzIs7uAqKasni
KJMn3jmqFIUcCEy9dePUdmMySCQj8qSxjGDdwZnwf8BZSdSLqd8dYiN0jQi/aA1I
2hWWyyDK9V9yQ8peAg+1dfg754Tc76lj3mEQOD39Wu3Klb9mBF3+wQCW2tJYEj2E
stzeOdFZsUNUIOKFb6mo0IoUipPOvrAkfm91ais+FIwlCf+k5KcwmAUXpV45rLHm
egCr
=2vMf
-----END PGP SIGNATURE-----




From tamas at bitsofproof.com  Wed Apr  9 17:50:03 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Wed, 9 Apr 2014 19:50:03 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for
	SPV	wallets
In-Reply-To: <00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
Message-ID: <0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>

Block header has to be available in SPV and also in an UTXO only storing core node, so why not serve it if bandwith allows.

Serving any additional information like known peer adresses or known full blocks is certainly beneficial and should be offered if at hand.

Regards,

Tamas Blummer
http://bitsofproof.com

On 09.04.2014, at 19:46, Peter Todd <pete at petertodd.org> wrote:

> Signed PGP part
> 
> 
> On 9 April 2014 12:27:13 GMT-04:00, Tamas Blummer <tamas at bitsofproof.com> wrote:
> >A border router that is not able to serve blocks is still protecting
> >consensus rules, that SPVs do not.
> >If the network would only consist of SPV nodes only then e.g. a
> >majority coalition of miner could increase their reward at will.
> >
> >Archives need a different solution.
> 
> Any collective group that has a majority of hashing power will have no major issues running enough nodes that follow their rules to make SPV insecure anyway.
> 
> There's no good reason not to have SPV security nodes distribute block chain data, particularly block headers. It helps provide redundancy in the network topology and helps provide more resources for full nodes to sync up faster. For instance in a network with a large number of partial UTXO set nodes if those nodes are forwarding block data to each other they can get enough data to become fully fledged full nodes without putting all the load on the existing full nodes.  This is a good thing.
> 
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/781e75c1/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/781e75c1/attachment.sig>

From mike at plan99.net  Wed Apr  9 18:00:16 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 9 Apr 2014 20:00:16 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
Message-ID: <CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>

The right way to start with this, if anyone cares, is to add
instrumentation to existing SPV wallet apps to report back to home base how
long they are running for, how much disk space / RAM they have, and
possibly what kind of hardware.

I *strongly* suspect that the vast majority of SPV wallets are not left
running permanently, and run on laptops where battery life is at a premium.
These people will never want to run full nodes.

Sorry. I don't think it will ever make sense to run full nodes on consumer
hardware again. Our time is much better spent on optimising so it's cheaper
for full node operators to run them on cheap virtualised servers.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/7478abb7/attachment.html>

From pete at petertodd.org  Wed Apr  9 18:04:46 2014
From: pete at petertodd.org (Peter Todd)
Date: Wed, 09 Apr 2014 14:04:46 -0400
Subject: [Bitcoin-development] Bitcoind-in-background mode for
	SPV	wallets
In-Reply-To: <0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
Message-ID: <1fa234ec-9dd4-45de-8ac8-ca20a158c344@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512



On 9 April 2014 13:50:03 GMT-04:00, Tamas Blummer <tamas at bitsofproof.com> wrote:
>Block header has to be available in SPV and also in an UTXO only
>storing core node, so why not serve it if bandwith allows.
>
>Serving any additional information like known peer adresses or known
>full blocks is certainly beneficial and should be offered if at hand.

Big security advantages too. For instance if an attacker hacks, say, 10? of hashing power the next step for them to attack SPV clients is to try to Sybil attack them so they won't find out about the longer chain. The fewer providers of block chain data there are out there the easier that attack is - just simultaneously DoS a bunch of nodes, perhaps by a low-bandwidth exploit like the bloom io or division by zero DoS attacks. This is much harder to pull off if every SPV client is passing around block headers.

Similarly by passing around full blocks the attacker has a harder time knocking other miners off the network. Regardless of whether or not a miner's peers are fully validating chain data they still have the data they need to mine the next block and thus extend the longest correct chain.
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCgA6BQJTRYu+MxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwheuQCADUyClLOLP1xpG1000l
uzcfPTZuIXTpzOAmYHKs/MSb6mph/Shsu0/94eW7npQNSVeZC8wQQZ1oFQ9j1GJc
SKViYJfn5yMdNvMkaWazhC0r3jxxF0AI7oy2KlnSjasfczfOQuYICJadTCwvUHrb
GrKVDbgsKNzZYYKn86vF4hsLwtJN4moeqX85TYN1DC7//7hgNywA73Xt2/gdwfqe
LOsD4nS7mUQObQd6TcLwXDDNEGTrdS572jdYH5sykwZjPH+wqwcm2WKTnIULsJR0
OwGUi505AKJJnLcEmZ/kGbCmKB+xJ5kExjlExtcUPrJlc+xqubhnnGCMjBiGCXSY
kYCK
=HXRZ
-----END PGP SIGNATURE-----




From laanwj at gmail.com  Wed Apr  9 18:19:56 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 9 Apr 2014 20:19:56 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
Message-ID: <CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>

On Wed, Apr 9, 2014 at 8:00 PM, Mike Hearn <mike at plan99.net> wrote:

> The right way to start with this, if anyone cares, is to add
> instrumentation to existing SPV wallet apps to report back to home base how
> long they are running for, how much disk space / RAM they have, and
> possibly what kind of hardware.
>
> I *strongly* suspect that the vast majority of SPV wallets are not left
> running permanently, and run on laptops where battery life is at a premium.
> These people will never want to run full nodes.
>

Bitcoins stands or falls with people running full nodes.

If no one wants to volunteer resources to support the network anymore,
we'll have failed.

Sorry. I don't think it will ever make sense to run full nodes on consumer
> hardware again. Our time is much better spent on optimising so it's cheaper
> for full node operators to run them on cheap virtualised servers.
>

Most consumer hardware is much more powerful than 'cheap virtualized
servers'. More memory, disks are cheap, and at least in the Netherlands
home bandwidth is much cheaper than server bandwidth.

Also: any optimization that helps running on cheap servers will also help
running it on consumer hardware. It's not the one or the other.

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/00a9ece0/attachment.html>

From kevinsisco61784 at gmail.com  Wed Apr  9 18:35:33 2014
From: kevinsisco61784 at gmail.com (Kevin)
Date: Wed, 09 Apr 2014 14:35:33 -0400
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
Message-ID: <534592F5.2000407@gmail.com>

On 4/9/2014 11:29 AM, Wladimir wrote:
> Hello,
>
> This is primarily aimed at developers of SPV wallets.
>
> The recently reported decrease in number of full nodes could have 
> several reasons, one of them that less people are running Bitcoin Core 
> for the wallet because the other wallets are getting ahead in both 
> features and useability.
>
> It's great to see innovation in wallets, but it's worrying that the 
> number of full nodes decreases.
>
> It may be that lots of people would support the network by running a 
> full node, but don't want to go through the trouble of installing 
> bitcoin core separately (and get confused because it's a wallet, too).
>
> Hence I'd like to explore the idea of adding an option to popular SPV 
> wallets, to spin a bitcoind process in the background. This could be 
> pretty much transparent to the user - it would sync in the background, 
> the wallet could show statistics about the node, but is not dependent 
> on it.
>
> In exchange the user would get increased (full node level) security, 
> as the SPV wallet would have a local trusted node.
>
> Does this sound like a good idea?
>
> Is there any way that Bitcoin Core can help to accomedate this 
> 'embedded' usage? Specific Interfaces, special builds - maybe add a 
> walletless bitcoind build to gitian - bindings, dlls, etc?
>
> Wladimir
>
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
I personally like the ida.  Are you talking about a flag that could 
toggle this "in the background" mode or recoding for in the background use?


-- 
Kevin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/a35b1353/attachment.html>

From justusranvier at gmail.com  Wed Apr  9 18:35:14 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Wed, 09 Apr 2014 18:35:14 +0000
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>	<53456B99.9010207@monetize.io>	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
Message-ID: <534592E2.7040800@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 04/09/2014 06:19 PM, Wladimir wrote:
> If no one wants to volunteer resources to support the network
> anymore, we'll have failed.

If the security of the network depends on a broken incentive model,
then fix the design of the network so that economics works for you
instead of against you.



- -- 
Support online privacy by using email encryption whenever possible.
Learn how here: http://www.youtube.com/watch?v=bakOKJFtB-k
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTRZLiAAoJECoisBQbQ4v0RRMIAKL84ju4b9XAls9sOxQGrLMr
xifQDhThCQKC4/qkOmGU8zseIdKRgXEq4auMF9/0BlgoSxsBcKynlRH2fFtYY7ol
sdjCy/5dk+MBu3K1GCvNn/cuGkpIJJxrom/9riSiaPtivE5ncl7cyW5hFqf2MzRd
dF6q937ocgBd8d2VuOQleQ9N5gue1+du77soxfp8oY7dXNdwk5ZrngeYxz1umsjQ
lBAI/3JYkKVhU5Rte3deJcMHe6xA+neIzvcfWbOZYrkdwWE+jLSKnDkDkCOXJnuP
vOI8CAteaFctV2mfgXX2CmNDWVeFsyCwoQwbnCmuE/uiM5y235PcTrsyr6U+Zzs=
=oQPK
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x1B438BF4.asc
Type: application/pgp-keys
Size: 21191 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/2996507b/attachment.bin>

From laanwj at gmail.com  Wed Apr  9 18:46:06 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 9 Apr 2014 20:46:06 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <534592E2.7040800@gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
Message-ID: <CA+s+GJD5FpoP8M1GE3+Jhb0aQS+m+acWUnrx4iDB4bmcK9q-1g@mail.gmail.com>

On Wed, Apr 9, 2014 at 8:35 PM, Justus Ranvier <justusranvier at gmail.com>wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> On 04/09/2014 06:19 PM, Wladimir wrote:
> > If no one wants to volunteer resources to support the network
> > anymore, we'll have failed.
>
> If the security of the network depends on a broken incentive model,
> then fix the design of the network so that economics works for you
> instead of against you.
>

My solution would be quick to implement and could help increase the number
of nodes in the short term. It will also smooth the way towards splitting
off the wallet from Bitcoin Core, by giving people a choice what wallet
they use with their full node.

That doesn't preclude looking for longer-term solutions that change the
incentive structure, but that is much more difficult and risky. I don't
believe it's a matter of 'fixing that instead' in a few hours, though I
nevertheless look forward to your pull request.

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/b71b8fa0/attachment.html>

From gmaxwell at gmail.com  Wed Apr  9 18:50:01 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 9 Apr 2014 11:50:01 -0700
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <534592E2.7040800@gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
Message-ID: <CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>

On Wed, Apr 9, 2014 at 11:35 AM, Justus Ranvier <justusranvier at gmail.com> wrote:
> If the security of the network depends on a broken incentive model,
> then fix the design of the network so that economics works for you
> instead of against you.

Who says anything about a broken incentive model. You've made past
claims about resource requirements that I think made no sense and then
failed to defend them when they were challenge.

With suitable software improvements running a full node could be done
in as little as a few gigabytes in disk space (e.g. cost 25-50 cents),
and as 50-100kbit/sec bandwidth in and out ongoing, and a moderate
amount of ram. Power costs are already just a few cents per month.  By
far the greatest cost is the figuring out and setting up part, which
bundling could fix. The exact resources could be tunable to what the
users are willing and able to contribute.

If improved marginal security and privacy in addition to supporting
the network is not enough incentive to overcome costs like these then
Bitcoin is already doomed.  I think that fundamental costs aren't an
issue at all, just implementation warts and education are.

Part of asking the question is feeling out which improvements need to
happen first, and what the prospects of getting the bundling going
once those improvements are made.



From justusranvier at gmail.com  Wed Apr  9 18:58:52 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Wed, 09 Apr 2014 18:58:52 +0000
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>	<53456B99.9010207@monetize.io>	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
Message-ID: <5345986C.3040901@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 04/09/2014 06:50 PM, Gregory Maxwell wrote:
> Who says anything about a broken incentive model. You've made past 
> claims about resource requirements that I think made no sense and
> then failed to defend them when they were challenge.

Anyone reading the archives of the list will see about triple the
number of people independently confirming the resource usage problem
than they will see denying it, so I'm not particularly worried.


- -- 
Support online privacy by using email encryption whenever possible.
Learn how here: http://www.youtube.com/watch?v=bakOKJFtB-k
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTRZhsAAoJECoisBQbQ4v0iD8H/A1RZyLJN6f+zt5x78CFgRdp
zqZua3NBwUN2L9mI/PU1NADtxoXgkq49XusHRc+bjLu17VxGMUOsmB+AeK3VU4sN
BVC1qIcWCa+OPMkgnMFrdydz4OGxX5xiJoCNsqveZIEYc8nQoCDfsn/fwqL50/Ct
NfmPzh/cW7uUZ+h2bBgduGD3fzpQBlnnswAbHHX3FbBh9MvcaCfROeXXqUCedWj9
H2qVCNWTkIFJksJkqyF3f+KfedOTIyUwflx/0niBvzXcP9w4oK+WpBApHACWxiSA
H3KHYNF0s2/fs+mIkabPLRX1PIUk15ln29FapoDvlHW9jzDE92x6JFnMppI4rEs=
=ILks
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x1B438BF4.asc
Type: application/pgp-keys
Size: 21191 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/509a4b23/attachment.bin>

From drak at zikula.org  Wed Apr  9 19:07:32 2014
From: drak at zikula.org (Drak)
Date: Wed, 9 Apr 2014 20:07:32 +0100
Subject: [Bitcoin-development] Jenkins pull-tester
Message-ID: <CANAnSg1FxsNxmJVsV91LA+oopCJN0b4XhxzbbW36ooreQWp8-w@mail.gmail.com>

I would like to set up my own bitcoin pull-tester on Jenkins. Are there any
instructions or guidance written anywhere?

Drak
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/c72690f9/attachment.html>

From laanwj at gmail.com  Wed Apr  9 19:25:13 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 9 Apr 2014 21:25:13 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <534570A2.9090502@gmx.de>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAAt2M18z_Qkqat1OETiXAz0QQey4+y5J6=pC7nkoJfyfrpj3=A@mail.gmail.com>
	<CAAS2fgScWkentFy7Ak0bpYVLsOFL+xkwPm5QRu9ENeX9oCtPug@mail.gmail.com>
	<534570A2.9090502@gmx.de>
Message-ID: <CA+s+GJAXu3SEXFDDwi85dNFjO2rfPXJrg-aKHYwbogAHfu3vfQ@mail.gmail.com>

On Wed, Apr 9, 2014 at 6:09 PM, Thomas Voegtlin <thomasv1 at gmx.de> wrote:

> Le 09/04/2014 17:54, Gregory Maxwell a ?crit :
>
> > Sadly today Electrum requires more than a full node, it requires a
> > number of large additional indexes over what a full node has and
> > pruning is precluded. I don't think that increasing the resource
> > utilization of the node is a good way to go there for the purposes
> > expressed here. (not that electrum couldn't be used here, but not
> > unmodified without the resource usage increasing route)
> >
>
> Electrum uses two large indexes:
>
>      address -> utxo
>
> (patricia tree, aka "ultimate blockchain compression", see thread
> started by Alan Reiner in the bitcointalk forum)
>

Thanks for the explanation.

Adding a RPC call for a "address -> utxo" query wouldn't be a big deal. It
has been requested before for other purposes as well, all the better if it
helps for interaction with Electrum.

Spent history would be involve a much larger index, and it's not likely
that will end up in bitcoin

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/4cf070b4/attachment.html>

From gmaxwell at gmail.com  Wed Apr  9 19:33:33 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 9 Apr 2014 12:33:33 -0700
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <5345986C.3040901@gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
Message-ID: <CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>

On Wed, Apr 9, 2014 at 11:58 AM, Justus Ranvier <justusranvier at gmail.com> wrote:
> Anyone reading the archives of the list will see about triple the
> number of people independently confirming the resource usage problem
> than they will see denying it, so I'm not particularly worried.

The list has open membership, there is no particular qualification or
background required to post here. Optimal use of an information source
requires critical reading and understanding the limitations of the
medium. Counting comments is usually not a great way to assess
technical considerations on an open public forum.  Doubly so because
those comments were not actually talking about the same thing I am
talking about.

Existing implementations are inefficient in many known ways (and, no
doubt, some unknown ones). This list is about developing protocol and
implementations including improving their efficiency.  When talking
about incentives the costs you need to consider are the costs of the
best realistic option.  As far as I know there is no doubt from anyone
technically experienced that under the current network rules full
nodes can be operated with vastly less resources than current
implementations use, it's just a question of the relatively modest
implementation improvements.

When you argue that Bitcoin doesn't have the right incentives (and
thus something??) I retort that the actual resource _requirements_ are
for the protocol very low. I gave specific example numbers to enable
correction or clarification if I've said something wrong or
controversial. Pointing out that existing implementations are not that
currently as efficient as the underlying requirements and that some
large number of users do not like the efficiency of existing
implementations doesn't tell me anything I disagree with or didn't
already know. Whats being discussed around here contributes to
prioritizing improvements over the existing implementations.

I hope this clarifies something.



From slush at centrum.cz  Wed Apr  9 20:12:17 2014
From: slush at centrum.cz (slush)
Date: Wed, 9 Apr 2014 22:12:17 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
Message-ID: <CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>

I believe there're plenty bitcoind instances running, but they don't have
configured port forwarding properly.There's uPNP support in bitcoind, but
it works only on simple setups.

Maybe there're some not yet considered way how to expose these *existing*
instances to Internet, to strenghten the network. Maybe just self-test
indicating the node is not reachable from outside (together with short
howto like in some torrent clients).

These days IPv6 is slowly deploying to server environments, but maybe
there's some simple way how to bundle ipv6 tunnelling into bitcoind so any
instance will become ipv6-reachable automatically?

Maybe there're other ideas how to improve current situation without needs
of reworking the architecture.

Marek


On Wed, Apr 9, 2014 at 9:33 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> On Wed, Apr 9, 2014 at 11:58 AM, Justus Ranvier <justusranvier at gmail.com>
> wrote:
> > Anyone reading the archives of the list will see about triple the
> > number of people independently confirming the resource usage problem
> > than they will see denying it, so I'm not particularly worried.
>
> The list has open membership, there is no particular qualification or
> background required to post here. Optimal use of an information source
> requires critical reading and understanding the limitations of the
> medium. Counting comments is usually not a great way to assess
> technical considerations on an open public forum.  Doubly so because
> those comments were not actually talking about the same thing I am
> talking about.
>
> Existing implementations are inefficient in many known ways (and, no
> doubt, some unknown ones). This list is about developing protocol and
> implementations including improving their efficiency.  When talking
> about incentives the costs you need to consider are the costs of the
> best realistic option.  As far as I know there is no doubt from anyone
> technically experienced that under the current network rules full
> nodes can be operated with vastly less resources than current
> implementations use, it's just a question of the relatively modest
> implementation improvements.
>
> When you argue that Bitcoin doesn't have the right incentives (and
> thus something??) I retort that the actual resource _requirements_ are
> for the protocol very low. I gave specific example numbers to enable
> correction or clarification if I've said something wrong or
> controversial. Pointing out that existing implementations are not that
> currently as efficient as the underlying requirements and that some
> large number of users do not like the efficiency of existing
> implementations doesn't tell me anything I disagree with or didn't
> already know. Whats being discussed around here contributes to
> prioritizing improvements over the existing implementations.
>
> I hope this clarifies something.
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/477817a3/attachment.html>

From slush at centrum.cz  Wed Apr  9 20:31:03 2014
From: slush at centrum.cz (slush)
Date: Wed, 9 Apr 2014 22:31:03 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
Message-ID: <CAJna-HiwRcvY1xPg5pkZDyjQhimnNiLM9a16YHOPu+ggod6A5A@mail.gmail.com>

Another idea: Integrate torrent download of bootstrap.dat into bitcoind.
Normal user (especially a beginner) won't learn how to download bootstrap
separately and import it into bitcoind; he simply give up the
synchronization once he realize it takes too much time. From my experience
downloading the bootstrap significantly improves catching the blockchain,
which may attract some more users to run bitcoind.

Not sure about C++, but simple torrent client in python is like 30 lines of
code (using libtorrent).

Marek


On Wed, Apr 9, 2014 at 10:12 PM, slush <slush at centrum.cz> wrote:

> I believe there're plenty bitcoind instances running, but they don't have
> configured port forwarding properly.There's uPNP support in bitcoind, but
> it works only on simple setups.
>
> Maybe there're some not yet considered way how to expose these *existing*
> instances to Internet, to strenghten the network. Maybe just self-test
> indicating the node is not reachable from outside (together with short
> howto like in some torrent clients).
>
> These days IPv6 is slowly deploying to server environments, but maybe
> there's some simple way how to bundle ipv6 tunnelling into bitcoind so any
> instance will become ipv6-reachable automatically?
>
> Maybe there're other ideas how to improve current situation without needs
> of reworking the architecture.
>
> Marek
>
>
> On Wed, Apr 9, 2014 at 9:33 PM, Gregory Maxwell <gmaxwell at gmail.com>wrote:
>
>> On Wed, Apr 9, 2014 at 11:58 AM, Justus Ranvier <justusranvier at gmail.com>
>> wrote:
>> > Anyone reading the archives of the list will see about triple the
>> > number of people independently confirming the resource usage problem
>> > than they will see denying it, so I'm not particularly worried.
>>
>> The list has open membership, there is no particular qualification or
>> background required to post here. Optimal use of an information source
>> requires critical reading and understanding the limitations of the
>> medium. Counting comments is usually not a great way to assess
>> technical considerations on an open public forum.  Doubly so because
>> those comments were not actually talking about the same thing I am
>> talking about.
>>
>> Existing implementations are inefficient in many known ways (and, no
>> doubt, some unknown ones). This list is about developing protocol and
>> implementations including improving their efficiency.  When talking
>> about incentives the costs you need to consider are the costs of the
>> best realistic option.  As far as I know there is no doubt from anyone
>> technically experienced that under the current network rules full
>> nodes can be operated with vastly less resources than current
>> implementations use, it's just a question of the relatively modest
>> implementation improvements.
>>
>> When you argue that Bitcoin doesn't have the right incentives (and
>> thus something??) I retort that the actual resource _requirements_ are
>> for the protocol very low. I gave specific example numbers to enable
>> correction or clarification if I've said something wrong or
>> controversial. Pointing out that existing implementations are not that
>> currently as efficient as the underlying requirements and that some
>> large number of users do not like the efficiency of existing
>> implementations doesn't tell me anything I disagree with or didn't
>> already know. Whats being discussed around here contributes to
>> prioritizing improvements over the existing implementations.
>>
>> I hope this clarifies something.
>>
>>
>> ------------------------------------------------------------------------------
>> Put Bad Developers to Shame
>> Dominate Development with Jenkins Continuous Integration
>> Continuously Automate Build, Test & Deployment
>> Start a new project now. Try Jenkins in the cloud.
>> http://p.sf.net/sfu/13600_Cloudbees
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/e99a782c/attachment.html>

From laanwj at gmail.com  Wed Apr  9 20:35:13 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 9 Apr 2014 22:35:13 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
Message-ID: <CA+s+GJA0EqvZB3Bi75W+-Pfkjg=3=-wafjSBPMCnd_vbi2F-0w@mail.gmail.com>

On Wed, Apr 9, 2014 at 10:12 PM, slush <slush at centrum.cz> wrote:

> Maybe there're other ideas how to improve current situation without needs
> of reworking the architecture.
>

Nothing I've proposed here would require larger changes to the architecture
then were already planned. After SPV lands we are going to split off the
wallet, and that will need an interface to an bitcoind to allow 'running
with full node'. If that can be generalized to be useful for other (SPV)
clients as well, that would be useful, hence I asked for input.

It of course doesn't preclude also looking for other solutions.

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/eb8737dd/attachment.html>

From laanwj at gmail.com  Wed Apr  9 20:37:10 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 9 Apr 2014 22:37:10 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CAJna-HiwRcvY1xPg5pkZDyjQhimnNiLM9a16YHOPu+ggod6A5A@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
	<CAJna-HiwRcvY1xPg5pkZDyjQhimnNiLM9a16YHOPu+ggod6A5A@mail.gmail.com>
Message-ID: <CA+s+GJC2_pEWsK_PSFKFtv7Y8tXgUnYKNVyEr_OJpvFgd8AJ4g@mail.gmail.com>

On Wed, Apr 9, 2014 at 10:31 PM, slush <slush at centrum.cz> wrote:

> Another idea: Integrate torrent download of bootstrap.dat into bitcoind.
> Normal user (especially a beginner) won't learn how to download bootstrap
> separately and import it into bitcoind; he simply give up the
> synchronization once he realize it takes too much time. From my experience
> downloading the bootstrap significantly improves catching the blockchain,
> which may attract some more users to run bitcoind.
>
> Not sure about C++, but simple torrent client in python is like 30 lines
> of code (using libtorrent).
>

Parallel block download would be better for that. No need to involve
bittorrent.

But please let's not derail this thread, this is not about other solutions
for faster block download or such, let's keep it focused.

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/bbaa8006/attachment.html>

From slush at centrum.cz  Wed Apr  9 20:50:08 2014
From: slush at centrum.cz (slush)
Date: Wed, 9 Apr 2014 22:50:08 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CA+s+GJA0EqvZB3Bi75W+-Pfkjg=3=-wafjSBPMCnd_vbi2F-0w@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
	<CA+s+GJA0EqvZB3Bi75W+-Pfkjg=3=-wafjSBPMCnd_vbi2F-0w@mail.gmail.com>
Message-ID: <CAJna-HjyFbCdQjVZJSJ2AYx10EJd-ZJa=zmdJqveMP+ASgwygA@mail.gmail.com>

We definitely *need* lightweight bitcoin router / "core" which can be
easily deployed anywhere. No disagreement here.

I just wanted to remind that there're actually much more running nodes
*already* and maybe converting those hidden nodes to publicly reachable
nodes may be way easier than attracting fresh instances.

To the idea of bundled core with SPV clients - it won't improve anything,
in my opinion. SPV wallets are not running long-term (maybe Multibit team
has any better stats) so blockchain catching will turn the computer to be
unusable everytime user starts the wallet; that's exactly the reason why
people choose SPV wallets over full blockchain wallets.

Not saying that SPV clients usually aren't reachable from outside, which
turns the topic back to my ideas about motivating users to expose their
existing instances over Internet.

Marek

On Wed, Apr 9, 2014 at 10:35 PM, Wladimir <laanwj at gmail.com> wrote:

>
>
> On Wed, Apr 9, 2014 at 10:12 PM, slush <slush at centrum.cz> wrote:
>
>> Maybe there're other ideas how to improve current situation without needs
>> of reworking the architecture.
>>
>
> Nothing I've proposed here would require larger changes to the
> architecture then were already planned. After SPV lands we are going to
> split off the wallet, and that will need an interface to an bitcoind to
> allow 'running with full node'. If that can be generalized to be useful for
> other (SPV) clients as well, that would be useful, hence I asked for input.
>
> It of course doesn't preclude also looking for other solutions.
>
> Wladimir
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140409/a49a8414/attachment.html>

From laszlo at heliacal.net  Wed Apr  9 20:55:18 2014
From: laszlo at heliacal.net (Laszlo Hanyecz)
Date: Wed, 9 Apr 2014 20:55:18 +0000
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
Message-ID: <9A72087C-BE4D-492F-AB82-859C64DFA8EE@heliacal.net>


On Apr 9, 2014, at 8:12 PM, slush <slush at centrum.cz> wrote:

> 
> These days IPv6 is slowly deploying to server environments, but maybe there's some simple way how to bundle ipv6 tunnelling into bitcoind so any instance will become ipv6-reachable automatically?
> 

Teredo is available by default on Microsoft systems and it's actually very common to see Teredo addresses as peers in torrents - this should work for bitcoin too, though I'm not sure if an app needs to set special flags to gain access to it.. there are probably some security settings around it.  In the US, AT&T/CenturyLink provide IPv6 by way of 6RD for DSL customers, Comcast has native IPv6 on residential (but not business) cable modems, and of course those who want to can always set up with a tunnel broker like Hurricane Electric - they even let you use your own IPv6 addresses.  IPv6 is great, but having an application running its own tunnels would not be a good way to leverage it.

Probably what's keeping a lot of them from being reachable is that most people just plug their CPE into a NAT router (without IPv6).  Teredo can help here though.
Putting an IPv6 checkbox in the settings with a link to an explanation might help with education and result in smarter operators who can make their nodes reachable.  A built in checker would be even better - something like a checklist showing red/green for different aspects of reachability (v4/teredo/v6).

-Laszlo





From mark at monetize.io  Wed Apr  9 20:36:35 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Wed, 09 Apr 2014 13:36:35 -0700
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CAJna-HiwRcvY1xPg5pkZDyjQhimnNiLM9a16YHOPu+ggod6A5A@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>	<53456B99.9010207@monetize.io>	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>	<534592E2.7040800@gmail.com>	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>	<5345986C.3040901@gmail.com>	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
	<CAJna-HiwRcvY1xPg5pkZDyjQhimnNiLM9a16YHOPu+ggod6A5A@mail.gmail.com>
Message-ID: <5345AF53.8070700@monetize.io>

I've advocated for this in the past, and reasonable counter-arguments I
was presented with are: (1) bittorrent is horribly insecure - it would
be easy to DoS the initial block download if that were the goal, and (2)
there's a reasonable pathway to doing this all in-protocol, so there's
no reason to introduce external dependencies.

On 04/09/2014 01:31 PM, slush wrote:
> Another idea: Integrate torrent download of bootstrap.dat into bitcoind.
> Normal user (especially a beginner) won't learn how to download
> bootstrap separately and import it into bitcoind; he simply give up the
> synchronization once he realize it takes too much time. From my
> experience downloading the bootstrap significantly improves catching the
> blockchain, which may attract some more users to run bitcoind.
> 
> Not sure about C++, but simple torrent client in python is like 30 lines
> of code (using libtorrent).
> 
> Marek
> 
> 
> On Wed, Apr 9, 2014 at 10:12 PM, slush <slush at centrum.cz
> <mailto:slush at centrum.cz>> wrote:
> 
>     I believe there're plenty bitcoind instances running, but they don't
>     have configured port forwarding properly.There's uPNP support in
>     bitcoind, but it works only on simple setups.
> 
>     Maybe there're some not yet considered way how to expose these
>     *existing* instances to Internet, to strenghten the network. Maybe
>     just self-test indicating the node is not reachable from outside
>     (together with short howto like in some torrent clients).
> 
>     These days IPv6 is slowly deploying to server environments, but
>     maybe there's some simple way how to bundle ipv6 tunnelling into
>     bitcoind so any instance will become ipv6-reachable automatically?
> 
>     Maybe there're other ideas how to improve current situation without
>     needs of reworking the architecture.
> 
>     Marek
> 
> 
>     On Wed, Apr 9, 2014 at 9:33 PM, Gregory Maxwell <gmaxwell at gmail.com
>     <mailto:gmaxwell at gmail.com>> wrote:
> 
>         On Wed, Apr 9, 2014 at 11:58 AM, Justus Ranvier
>         <justusranvier at gmail.com <mailto:justusranvier at gmail.com>> wrote:
>         > Anyone reading the archives of the list will see about triple the
>         > number of people independently confirming the resource usage
>         problem
>         > than they will see denying it, so I'm not particularly worried.
> 
>         The list has open membership, there is no particular
>         qualification or
>         background required to post here. Optimal use of an information
>         source
>         requires critical reading and understanding the limitations of the
>         medium. Counting comments is usually not a great way to assess
>         technical considerations on an open public forum.  Doubly so because
>         those comments were not actually talking about the same thing I am
>         talking about.
> 
>         Existing implementations are inefficient in many known ways (and, no
>         doubt, some unknown ones). This list is about developing
>         protocol and
>         implementations including improving their efficiency.  When talking
>         about incentives the costs you need to consider are the costs of the
>         best realistic option.  As far as I know there is no doubt from
>         anyone
>         technically experienced that under the current network rules full
>         nodes can be operated with vastly less resources than current
>         implementations use, it's just a question of the relatively modest
>         implementation improvements.
> 
>         When you argue that Bitcoin doesn't have the right incentives (and
>         thus something??) I retort that the actual resource
>         _requirements_ are
>         for the protocol very low. I gave specific example numbers to enable
>         correction or clarification if I've said something wrong or
>         controversial. Pointing out that existing implementations are
>         not that
>         currently as efficient as the underlying requirements and that some
>         large number of users do not like the efficiency of existing
>         implementations doesn't tell me anything I disagree with or didn't
>         already know. Whats being discussed around here contributes to
>         prioritizing improvements over the existing implementations.
> 
>         I hope this clarifies something.
> 
>         ------------------------------------------------------------------------------
>         Put Bad Developers to Shame
>         Dominate Development with Jenkins Continuous Integration
>         Continuously Automate Build, Test & Deployment
>         Start a new project now. Try Jenkins in the cloud.
>         http://p.sf.net/sfu/13600_Cloudbees
>         _______________________________________________
>         Bitcoin-development mailing list
>         Bitcoin-development at lists.sourceforge.net
>         <mailto:Bitcoin-development at lists.sourceforge.net>
>         https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> 
> 
> 
> 
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment 
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> 
> 
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From gmaxwell at gmail.com  Wed Apr  9 21:04:24 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 9 Apr 2014 14:04:24 -0700
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <5345AF53.8070700@monetize.io>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
	<CAJna-HiwRcvY1xPg5pkZDyjQhimnNiLM9a16YHOPu+ggod6A5A@mail.gmail.com>
	<5345AF53.8070700@monetize.io>
Message-ID: <CAAS2fgQH-qp6SGK=kLW7SoNtio33aiXVoZXc5DPYS4xKPDkqRQ@mail.gmail.com>

On Wed, Apr 9, 2014 at 1:36 PM, Mark Friedenbach <mark at monetize.io> wrote:
> (2) there's a reasonable pathway to doing this all in-protocol, so there's
> no reason to introduce external dependencies.

Not just a speculative pathway. Pieter implemented headers first:
https://github.com/sipa/bitcoin/tree/headersfirst  and it was
everything we hoped it would be? it easily can saturate residential
broadband, produces less load hot-spotting, copes with unreliable
peers, etc. It's now just slowly making its way into Bitcoin core.



From tamas at bitsofproof.com  Thu Apr 10 06:04:28 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Thu, 10 Apr 2014 08:04:28 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CA+s+GJAXu3SEXFDDwi85dNFjO2rfPXJrg-aKHYwbogAHfu3vfQ@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAAt2M18z_Qkqat1OETiXAz0QQey4+y5J6=pC7nkoJfyfrpj3=A@mail.gmail.com>
	<CAAS2fgScWkentFy7Ak0bpYVLsOFL+xkwPm5QRu9ENeX9oCtPug@mail.gmail.com>
	<534570A2.9090502@gmx.de>
	<CA+s+GJAXu3SEXFDDwi85dNFjO2rfPXJrg-aKHYwbogAHfu3vfQ@mail.gmail.com>
Message-ID: <0B038624-8861-438E-B7B1-566B4A8E126B@bitsofproof.com>

Hi Wladimir,

If the motivation of the SPV wallet is to radically extend functionality, as in my case, then the index is specific to the added features and the subset of the blockchain that is of interest for the wallet.
As you also point out, adding huge generic purpose indices to core would rather discourage people using full nodes due to excess requirements. 

I believe nothing would add more to the core?s popularity as a trusted background node to SPV than full validation at lowest possible memory, disk and CPU footprint.
Serving headers should be default but storing and serving full blocks configurable to ranges, so people can tailor to their bandwith and space available.

Tamas Blummer
Bits of Proof

On 09.04.2014, at 21:25, Wladimir <laanwj at gmail.com> wrote:
> 
> 
> Adding a RPC call for a "address -> utxo" query wouldn't be a big deal. It has been requested before for other purposes as well, all the better if it helps for interaction with Electrum.
> 
> Spent history would be involve a much larger index, and it's not likely that will end up in bitcoin
> 
> Wladimir
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/45889b81/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/45889b81/attachment.sig>

From mike at plan99.net  Thu Apr 10 06:38:49 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 10 Apr 2014 08:38:49 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
Message-ID: <CANEZrP2w2b28qnYd7q=fo=VL0FzVE1R15s5Entuy+fK9x+V8Kg@mail.gmail.com>

I tend to agree with slush here - counting the IPs in addr broadcasts often
gives a number like 100,000 vs just 10,000 for actually reachable nodes (or
less). It seems like optimising the NAT tunneling code would help. Starting
by adding more diagnostic stuff to the GUI. STUN support may also help.

The main constraint with home devices is not IMHO their actual power but
rather that a lot of people no longer keep computers switched on all the
time. If you don't do that then spv with bundled Core can't help your
security because the spv wallet would always be syncing from the p2p
network for performance reasons.
On 9 Apr 2014 22:13, "slush" <slush at centrum.cz> wrote:

> I believe there're plenty bitcoind instances running, but they don't have
> configured port forwarding properly.There's uPNP support in bitcoind, but
> it works only on simple setups.
>
> Maybe there're some not yet considered way how to expose these *existing*
> instances to Internet, to strenghten the network. Maybe just self-test
> indicating the node is not reachable from outside (together with short
> howto like in some torrent clients).
>
> These days IPv6 is slowly deploying to server environments, but maybe
> there's some simple way how to bundle ipv6 tunnelling into bitcoind so any
> instance will become ipv6-reachable automatically?
>
> Maybe there're other ideas how to improve current situation without needs
> of reworking the architecture.
>
> Marek
>
>
> On Wed, Apr 9, 2014 at 9:33 PM, Gregory Maxwell <gmaxwell at gmail.com>wrote:
>
>> On Wed, Apr 9, 2014 at 11:58 AM, Justus Ranvier <justusranvier at gmail.com>
>> wrote:
>> > Anyone reading the archives of the list will see about triple the
>> > number of people independently confirming the resource usage problem
>> > than they will see denying it, so I'm not particularly worried.
>>
>> The list has open membership, there is no particular qualification or
>> background required to post here. Optimal use of an information source
>> requires critical reading and understanding the limitations of the
>> medium. Counting comments is usually not a great way to assess
>> technical considerations on an open public forum.  Doubly so because
>> those comments were not actually talking about the same thing I am
>> talking about.
>>
>> Existing implementations are inefficient in many known ways (and, no
>> doubt, some unknown ones). This list is about developing protocol and
>> implementations including improving their efficiency.  When talking
>> about incentives the costs you need to consider are the costs of the
>> best realistic option.  As far as I know there is no doubt from anyone
>> technically experienced that under the current network rules full
>> nodes can be operated with vastly less resources than current
>> implementations use, it's just a question of the relatively modest
>> implementation improvements.
>>
>> When you argue that Bitcoin doesn't have the right incentives (and
>> thus something??) I retort that the actual resource _requirements_ are
>> for the protocol very low. I gave specific example numbers to enable
>> correction or clarification if I've said something wrong or
>> controversial. Pointing out that existing implementations are not that
>> currently as efficient as the underlying requirements and that some
>> large number of users do not like the efficiency of existing
>> implementations doesn't tell me anything I disagree with or didn't
>> already know. Whats being discussed around here contributes to
>> prioritizing improvements over the existing implementations.
>>
>> I hope this clarifies something.
>>
>>
>> ------------------------------------------------------------------------------
>> Put Bad Developers to Shame
>> Dominate Development with Jenkins Continuous Integration
>> Continuously Automate Build, Test & Deployment
>> Start a new project now. Try Jenkins in the cloud.
>> http://p.sf.net/sfu/13600_Cloudbees
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/0246775b/attachment.html>

From laanwj at gmail.com  Thu Apr 10 06:50:55 2014
From: laanwj at gmail.com (Wladimir)
Date: Thu, 10 Apr 2014 08:50:55 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CANEZrP2w2b28qnYd7q=fo=VL0FzVE1R15s5Entuy+fK9x+V8Kg@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
	<CANEZrP2w2b28qnYd7q=fo=VL0FzVE1R15s5Entuy+fK9x+V8Kg@mail.gmail.com>
Message-ID: <CA+s+GJDcGxa_ARPFAbsd54cFhgBn8WcqNrRs00TZJBrNmvq5jQ@mail.gmail.com>

On Thu, Apr 10, 2014 at 8:38 AM, Mike Hearn <mike at plan99.net> wrote:

> I tend to agree with slush here - counting the IPs in addr broadcasts
> often gives a number like 100,000 vs just 10,000 for actually reachable
> nodes (or less). It seems like optimising the NAT tunneling code would
> help. Starting by adding more diagnostic stuff to the GUI. STUN support may
> also help.
>
> The main constraint with home devices is not IMHO their actual power but
> rather that a lot of people no longer keep computers switched on all the
> time. If you don't do that then spv with bundled Core can't help your
> security because the spv wallet would always be syncing from the p2p
> network for performance reasons.
>
I agree that there is a fundamental incompatibility in usage between
wallets and nodes. Wallets need to be online as little as possible, nodes
need to online as much as possible.

However, a full node background process could also be running if the wallet
is not open itself. Ffor example - by running as a system service.

Bitcoin Core's own wallet is also moving to SPV, so this means a general
solution is needed to get people to run a node when the wallet is not
running.

Maybe the node shouldn't be controlled from the wallet at all, it could be
a 'node control' user interface on its own (this is what -disablewallet
does currently). In this case, there is no need for packaging it with a
wallet The only drawback would be that initially, people wouldn't know why
or when to install this, hence my suggestion to pack it with wallets...

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/edc08ddf/attachment.html>

From mike at plan99.net  Thu Apr 10 07:09:25 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 10 Apr 2014 09:09:25 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CA+s+GJDcGxa_ARPFAbsd54cFhgBn8WcqNrRs00TZJBrNmvq5jQ@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
	<CANEZrP2w2b28qnYd7q=fo=VL0FzVE1R15s5Entuy+fK9x+V8Kg@mail.gmail.com>
	<CA+s+GJDcGxa_ARPFAbsd54cFhgBn8WcqNrRs00TZJBrNmvq5jQ@mail.gmail.com>
Message-ID: <CANEZrP2hNmAg846v-6cS78uhmOvGMwq4A4wEHjS5cuQa3J744Q@mail.gmail.com>

It's an optimisation problem. Home environments are much more hostile than
servers are due to things like virus scanners, wildly varying memory
pressure as apps are started and shut down, highly asymmetrical upstream
versus downstream bandwidth,  complicated nat setups, people who only use
laptops (which I think is most people these days) and so on.

So I think the right way to go is to optimise the things that hurt server
node operators like large memory and disk  usage, and this will
automatically make it more pleasant to run on the desktop as well. If at
some point all the low hanging fruit for the server side is gone then
improving things on the desktop would be the next place to go. But we have
to be realistic. Desktop tower machines that are always on are dying and
will not be coming back. Not a single person I know uses them anymore, they
have been wiped out in favour of laptops. This is why, given the tiny size
of the bitcoin core development team, I do not think it makes sense to
spend precious coding hours chasing this goal.
On 10 Apr 2014 08:51, "Wladimir" <laanwj at gmail.com> wrote:

> On Thu, Apr 10, 2014 at 8:38 AM, Mike Hearn <mike at plan99.net> wrote:
>
>> I tend to agree with slush here - counting the IPs in addr broadcasts
>> often gives a number like 100,000 vs just 10,000 for actually reachable
>> nodes (or less). It seems like optimising the NAT tunneling code would
>> help. Starting by adding more diagnostic stuff to the GUI. STUN support may
>> also help.
>>
>> The main constraint with home devices is not IMHO their actual power but
>> rather that a lot of people no longer keep computers switched on all the
>> time. If you don't do that then spv with bundled Core can't help your
>> security because the spv wallet would always be syncing from the p2p
>> network for performance reasons.
>>
> I agree that there is a fundamental incompatibility in usage between
> wallets and nodes. Wallets need to be online as little as possible, nodes
> need to online as much as possible.
>
> However, a full node background process could also be running if the
> wallet is not open itself. Ffor example - by running as a system service.
>
> Bitcoin Core's own wallet is also moving to SPV, so this means a general
> solution is needed to get people to run a node when the wallet is not
> running.
>
> Maybe the node shouldn't be controlled from the wallet at all, it could be
> a 'node control' user interface on its own (this is what -disablewallet
> does currently). In this case, there is no need for packaging it with a
> wallet The only drawback would be that initially, people wouldn't know why
> or when to install this, hence my suggestion to pack it with wallets...
>
> Wladimir
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/8d12e844/attachment.html>

From tamas at bitsofproof.com  Thu Apr 10 07:10:36 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Thu, 10 Apr 2014 09:10:36 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CA+s+GJDcGxa_ARPFAbsd54cFhgBn8WcqNrRs00TZJBrNmvq5jQ@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
	<CANEZrP2w2b28qnYd7q=fo=VL0FzVE1R15s5Entuy+fK9x+V8Kg@mail.gmail.com>
	<CA+s+GJDcGxa_ARPFAbsd54cFhgBn8WcqNrRs00TZJBrNmvq5jQ@mail.gmail.com>
Message-ID: <77889B25-03D6-4401-A5FE-432976951F55@bitsofproof.com>

You ask why people would install this ?

I find it is odd that we who hold the key to instant machine to machine micro payments do not use it to incentivise committing resources to the network.
What about serving archive blocks to peers paying for it ?

Tamas Blummer
http://bitsofproof.com

On 10.04.2014, at 08:50, Wladimir <laanwj at gmail.com> wrote:
> The only drawback would be that initially, people wouldn't know why or when to install this, hence my suggestion to pack it with wallets...
> 
> Wladimir
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/251ef004/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/251ef004/attachment.sig>

From mike at plan99.net  Thu Apr 10 09:17:28 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 10 Apr 2014 11:17:28 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <77889B25-03D6-4401-A5FE-432976951F55@bitsofproof.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
	<CANEZrP2w2b28qnYd7q=fo=VL0FzVE1R15s5Entuy+fK9x+V8Kg@mail.gmail.com>
	<CA+s+GJDcGxa_ARPFAbsd54cFhgBn8WcqNrRs00TZJBrNmvq5jQ@mail.gmail.com>
	<77889B25-03D6-4401-A5FE-432976951F55@bitsofproof.com>
Message-ID: <CANEZrP1ELraedzEpME6E8s7kXy57RKtr6667_Ke7cvhvcc9W0Q@mail.gmail.com>

>
> I find it is odd that we who hold the key to instant machine to machine
> micro payments do not use it to incentivise committing resources to the
> network.
>

It's not a new idea, obviously, but there are some practical consequences:

1) To pay a node for serving, you have to have bitcoins. To get bitcoins,
you need to sync with the network via a node. Catch 22.

2) If some nodes choose to charge and others choose to not charge, a smart
wallet will always use the free nodes. In the absence of any global load
balancing algorithms, this would lead to the free nodes getting overloaded
and collapsing whilst the for-pay nodes remain silent.

3) The only payment channel implementations today are bitcoinj's (Java) and
one written by Jeff in Javascript. There are no C++ implementations. And as
Matt and I can attest to, doing a real, solid, fully debugged
implementation that's integrated into a real app is .... a lot of work.

I still think the lowest hanging fruit is basic, boring optimisations
rather than architectural rethinks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/47c486d0/attachment.html>

From pete at petertodd.org  Thu Apr 10 09:33:03 2014
From: pete at petertodd.org (Peter Todd)
Date: Thu, 10 Apr 2014 05:33:03 -0400
Subject: [Bitcoin-development] Bitcoind-in-background mode for
	SPV	wallets
In-Reply-To: <CANEZrP2hNmAg846v-6cS78uhmOvGMwq4A4wEHjS5cuQa3J744Q@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
	<CANEZrP2w2b28qnYd7q=fo=VL0FzVE1R15s5Entuy+fK9x+V8Kg@mail.gmail.com>
	<CA+s+GJDcGxa_ARPFAbsd54cFhgBn8WcqNrRs00TZJBrNmvq5jQ@mail.gmail.com>
	<CANEZrP2hNmAg846v-6cS78uhmOvGMwq4A4wEHjS5cuQa3J744Q@mail.gmail.com>
Message-ID: <e88c060f-6218-450b-827b-c3e0c18a74e1@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512



 But we
>have
>to be realistic. Desktop tower machines that are always on are dying
>and
>will not be coming back. Not a single person I know uses them anymore,
>they
>have been wiped out in favour of laptops. This is why, given the tiny
>size
>of the bitcoin core development team, I do not think it makes sense to
>spend precious coding hours chasing this goal.

Your social group is weird.

Nearly every coworker at my previous job had a tower computer at work and at home. Equally in my nontechnical social group lots of people, a significant minority if not majority, have Apple and PC desktops hooked up to large monitors at home for media production and games. Those who don't more often than not have laptops used as desktops, sitting in one place 95% of the time and left on.

People have found it most efficient to work at a static desk for centuries - that's not going away. Of course we're seeing desktop usage and sales falling, but that's only because previously the mobile usage was forced into suboptimal options by technical realities. The trend will bottom out a long way from zero.

Besides, even if just 1% of bitcoin users had a machine they left on that could usefully contribute to the network it would still vastly outweigh the much smaller percentage who would run nodes on expensive hosted capacity out of the goodness of their hearts. If we educated users about the privacy advantages of full nodes and gave them software that automatically contributed back within defined limits we'd have tens of thousands more useful nodes in the exact same way that user friendly filesharing software has lead to millions of users contributing bandwidth to filesharing networks. Similarly take advantage of the fault tolerance inherent in what we're doing and ensure that our software can shrug off nodes with a few % of downtime - certainly possible.

Of course, this doesn't fit in the business plans of those who might want to run full nodes to data mine and deanonymize users for marketing, tax collection, and law enforcement - one of the few profitable things to do with a full node - but screw those people.
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCgA6BQJTRmVPMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhYb9B/0QWgQusFrQoPfYIzig
vpeo9sQgHAfA3gPYdqDLTtlaTgt8w3oP+/N46+Pi3lEphhCusXstzAFxi6c0XXsk
s96l9MqrUCZu55oEj1wZP0LJQx1uyUdevFv9bmocG5+94jBvGIoy3JZ3iQg+nNjL
uE9FpTnL43VOZ0WI9g6pXIE6XX6CxTx56tcxla4LTTypA1DijXa9MyYGOfYxXdPJ
w7jiRKl6Ijb3twP8+pX07GSIlL9yP7bESydnwyzwEo/RxAJxPmUpLuxluQ5DKTNY
G9TtwCpT+c6g5nXOxkI31XRcDuzhT+2kEhiDA6Neu2YNGrnyQx2WL6XuZNhi8nKB
IOMm
=rwGV
-----END PGP SIGNATURE-----




From tamas at bitsofproof.com  Thu Apr 10 09:39:07 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Thu, 10 Apr 2014 11:39:07 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CANEZrP1ELraedzEpME6E8s7kXy57RKtr6667_Ke7cvhvcc9W0Q@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
	<CANEZrP2w2b28qnYd7q=fo=VL0FzVE1R15s5Entuy+fK9x+V8Kg@mail.gmail.com>
	<CA+s+GJDcGxa_ARPFAbsd54cFhgBn8WcqNrRs00TZJBrNmvq5jQ@mail.gmail.com>
	<77889B25-03D6-4401-A5FE-432976951F55@bitsofproof.com>
	<CANEZrP1ELraedzEpME6E8s7kXy57RKtr6667_Ke7cvhvcc9W0Q@mail.gmail.com>
Message-ID: <5EA7E1CA-2673-49D4-A1C4-015117E5133D@bitsofproof.com>

I know the idea is not new. Just bringing it up to emphasize that if we don?t use it how could we expect other networks using it.
Machine to machine micro payments could become the killer application for Bitcoin.

1) There is no catch 22 as there are plenty of ways getting bitcoin without bootstrapping a full node.

2) let markets work out and not speculate what would happen.

3) Serving archive bolcks does not have to be part of core but could be a distinct service written in a language of your choice using new protocol.

As mentioned earlier I am for a stripped down core that does nothing else than consensus and stores nothing else needed for that task and offering SPV api to the wallets.

Tamas Blummer
http://bitsofproof.com

On 10.04.2014, at 11:17, Mike Hearn <mike at plan99.net> wrote:

> I find it is odd that we who hold the key to instant machine to machine micro payments do not use it to incentivise committing resources to the network.
> 
> It's not a new idea, obviously, but there are some practical consequences:
> 
> 1) To pay a node for serving, you have to have bitcoins. To get bitcoins, you need to sync with the network via a node. Catch 22.
> 
> 2) If some nodes choose to charge and others choose to not charge, a smart wallet will always use the free nodes. In the absence of any global load balancing algorithms, this would lead to the free nodes getting overloaded and collapsing whilst the for-pay nodes remain silent.
> 
> 3) The only payment channel implementations today are bitcoinj's (Java) and one written by Jeff in Javascript. There are no C++ implementations. And as Matt and I can attest to, doing a real, solid, fully debugged implementation that's integrated into a real app is .... a lot of work.
> 
> I still think the lowest hanging fruit is basic, boring optimisations rather than architectural rethinks.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/2fb654ae/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/2fb654ae/attachment.sig>

From pete at petertodd.org  Thu Apr 10 09:47:41 2014
From: pete at petertodd.org (Peter Todd)
Date: Thu, 10 Apr 2014 05:47:41 -0400
Subject: [Bitcoin-development] Bitcoind-in-background mode for
	SPV	wallets
In-Reply-To: <CANEZrP1ELraedzEpME6E8s7kXy57RKtr6667_Ke7cvhvcc9W0Q@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
	<CANEZrP2w2b28qnYd7q=fo=VL0FzVE1R15s5Entuy+fK9x+V8Kg@mail.gmail.com>
	<CA+s+GJDcGxa_ARPFAbsd54cFhgBn8WcqNrRs00TZJBrNmvq5jQ@mail.gmail.com>
	<77889B25-03D6-4401-A5FE-432976951F55@bitsofproof.com>
	<CANEZrP1ELraedzEpME6E8s7kXy57RKtr6667_Ke7cvhvcc9W0Q@mail.gmail.com>
Message-ID: <6aee3847-d03a-44b6-9277-679e6fd5e54b@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512



On 10 April 2014 05:17:28 GMT-04:00, Mike Hearn <mike at plan99.net> wrote:
>>
>> I find it is odd that we who hold the key to instant machine to
>machine
>> micro payments do not use it to incentivise committing resources to
>the
>> network.
>>
>
>It's not a new idea, obviously, but there are some practical
>consequences:

You're both missing a more important issue: a core security assumption of bitcoin is that information is so easy to spread that censorship of it becomes impractical. If we're at the point where nodes are charging for their data we've failed that assumption.

More concretely, if my business is charging for block chain data and I can make a profit doing so via micro payments I have perverse incentives to drive away my competitors. If I give a peer a whole block they can sell access to that information in turn. Why would I make it easy for them if I don't have too?

Anyway, much of this discussion seems to stem from the misconception that contributing back to the network is a binary all or nothing thing - it's not. Over a year ago I myself was lamenting how I and the other "bitcoin-wizards" working on scalability had quickly solved every scaling problem *but* how to make it possible to scale up and keep mining decentralised.
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCgA6BQJTRmi9MxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhT/BB/98DudTV85hmruk0WRS
xVt7gGK6DJ2Isc7iJE09i9wSQc/PbHu7rZ2MYPreOdVzRmlHYhOV2ShnZaZJ7A9g
qB8pwy1wVrZgbrFeXXOLegNxGF2Xzc8OtL1E0bkNtTUUkuPIvT3UV4xn/Z+UZToR
XImXpfakfJvyRH80cbMNu4xG/t7Ym4K63nEpCCdsEKNm5a1vHTNRTNfGYMC1wrSV
XI3boZk7BQjqFDZADnonUU9zQ1WOmpdaVBYm+Xtgc+HXl3QODLcwGCY9hIRvaxek
L+IYX9yTVbgngDGy70BYG4ekWxvMtNzRU+9HG5DgA1/Er9r1KIaf/98xiFR7RVB4
Yfia
=34aD
-----END PGP SIGNATURE-----




From mike at plan99.net  Thu Apr 10 10:40:37 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 10 Apr 2014 12:40:37 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <5EA7E1CA-2673-49D4-A1C4-015117E5133D@bitsofproof.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
	<CANEZrP2w2b28qnYd7q=fo=VL0FzVE1R15s5Entuy+fK9x+V8Kg@mail.gmail.com>
	<CA+s+GJDcGxa_ARPFAbsd54cFhgBn8WcqNrRs00TZJBrNmvq5jQ@mail.gmail.com>
	<77889B25-03D6-4401-A5FE-432976951F55@bitsofproof.com>
	<CANEZrP1ELraedzEpME6E8s7kXy57RKtr6667_Ke7cvhvcc9W0Q@mail.gmail.com>
	<5EA7E1CA-2673-49D4-A1C4-015117E5133D@bitsofproof.com>
Message-ID: <CANEZrP3tBnikpE99bTvTshiVDpRNJE8zKM1skPua2k2E7J=gRw@mail.gmail.com>

>
> 1) There is no catch 22 as there are plenty of ways getting bitcoin
> without bootstrapping a full node.
>

I think I maybe wasn't clear. To spend coins you need transaction data.
Today, the dominant model is that people get that data by scanning the
block chain. If you can obtain the transaction data without doing that
then, either:

1) Someone is doing chain scanning for free. See my point about "why pay if
you can get it for free".

2) You got your tx data direct from the person you who sent you the funds,
perhaps via the payment protocol. This would resolve the catch 22 by
allowing you to spend bitcoins without actually having talked to the P2P
network first, but we're a loooooong way from this world.

And that's it. I don't think there are any other ways to get the tx data
you need. Either someone gives it to you in the act of spending, or someone
else gives it away for free, undermining the charge-for-the-p2p-network
model.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/1862e335/attachment.html>

From tamas at bitsofproof.com  Thu Apr 10 10:44:32 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Thu, 10 Apr 2014 12:44:32 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CANEZrP3tBnikpE99bTvTshiVDpRNJE8zKM1skPua2k2E7J=gRw@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAADm4BCEFCiOpNzUThPPHUamP2256izU8pwD3nerLCxks0wENA@mail.gmail.com>
	<CAAS2fgTx40XSLhiygnJMrSbOC=iJ2YMVLNK7-AMt3ifvAHDZUA@mail.gmail.com>
	<E9BAD633-3B6A-4A2C-AA06-DB591973DF66@bitsofproof.com>
	<53456B99.9010207@monetize.io>
	<B2FEC170-7214-4E46-8830-153995870B62@bitsofproof.com>
	<00b77560-d7ed-4ed4-a4e5-eb1f00467a06@email.android.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
	<CANEZrP2w2b28qnYd7q=fo=VL0FzVE1R15s5Entuy+fK9x+V8Kg@mail.gmail.com>
	<CA+s+GJDcGxa_ARPFAbsd54cFhgBn8WcqNrRs00TZJBrNmvq5jQ@mail.gmail.com>
	<77889B25-03D6-4401-A5FE-432976951F55@bitsofproof.com>
	<CANEZrP1ELraedzEpME6E8s7kXy57RKtr6667_Ke7cvhvcc9W0Q@mail.gmail.com>
	<5EA7E1CA-2673-49D4-A1C4-015117E5133D@bitsofproof.com>
	<CANEZrP3tBnikpE99bTvTshiVDpRNJE8zKM1skPua2k2E7J=gRw@mail.gmail.com>
Message-ID: <3DB84423-BAEB-4290-B43C-7A3B07141844@bitsofproof.com>

Thanks, Peter and you convinced me. I run away with a thought.

It?d be great to find a spot to deploy payment channels, but I agree this is not it.

Tamas Blummer
http://bitsofproof.com

On 10.04.2014, at 12:40, Mike Hearn <mike at plan99.net> wrote:

> 1) There is no catch 22 as there are plenty of ways getting bitcoin without bootstrapping a full node.
> 
> I think I maybe wasn't clear. To spend coins you need transaction data. Today, the dominant model is that people get that data by scanning the block chain. If you can obtain the transaction data without doing that then, either:
> 
> 1) Someone is doing chain scanning for free. See my point about "why pay if you can get it for free".
> 
> 2) You got your tx data direct from the person you who sent you the funds, perhaps via the payment protocol. This would resolve the catch 22 by allowing you to spend bitcoins without actually having talked to the P2P network first, but we're a loooooong way from this world.
> 
> And that's it. I don't think there are any other ways to get the tx data you need. Either someone gives it to you in the act of spending, or someone else gives it away for free, undermining the charge-for-the-p2p-network model.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/57f54465/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/57f54465/attachment.sig>

From laanwj at gmail.com  Thu Apr 10 11:09:59 2014
From: laanwj at gmail.com (Wladimir)
Date: Thu, 10 Apr 2014 13:09:59 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <0B038624-8861-438E-B7B1-566B4A8E126B@bitsofproof.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAAt2M18z_Qkqat1OETiXAz0QQey4+y5J6=pC7nkoJfyfrpj3=A@mail.gmail.com>
	<CAAS2fgScWkentFy7Ak0bpYVLsOFL+xkwPm5QRu9ENeX9oCtPug@mail.gmail.com>
	<534570A2.9090502@gmx.de>
	<CA+s+GJAXu3SEXFDDwi85dNFjO2rfPXJrg-aKHYwbogAHfu3vfQ@mail.gmail.com>
	<0B038624-8861-438E-B7B1-566B4A8E126B@bitsofproof.com>
Message-ID: <CA+s+GJCQSCUyq7Ajv0EgZ8Vbcv4Xt7G-y_8D12fsoKjyFjnhwg@mail.gmail.com>

On Thu, Apr 10, 2014 at 8:04 AM, Tamas Blummer <tamas at bitsofproof.com>wrote:

> Serving headers should be default but storing and serving full blocks
> configurable to ranges, so people can tailor to their bandwith and space
> available.
>

I do agree that it is important.

This does require changes to the P2P protocol, as currently there is no way
for a node to signal that they store only part of the block chain. Also,
clients will have to be modified to take this into account. Right now they
are under the assumption that every full node can send them every
(previous) block.

What would this involve?

Do you know of any previous work towards this?

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/fb3a77bb/attachment.html>

From mike at plan99.net  Thu Apr 10 11:29:59 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 10 Apr 2014 13:29:59 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CA+s+GJCQSCUyq7Ajv0EgZ8Vbcv4Xt7G-y_8D12fsoKjyFjnhwg@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAAt2M18z_Qkqat1OETiXAz0QQey4+y5J6=pC7nkoJfyfrpj3=A@mail.gmail.com>
	<CAAS2fgScWkentFy7Ak0bpYVLsOFL+xkwPm5QRu9ENeX9oCtPug@mail.gmail.com>
	<534570A2.9090502@gmx.de>
	<CA+s+GJAXu3SEXFDDwi85dNFjO2rfPXJrg-aKHYwbogAHfu3vfQ@mail.gmail.com>
	<0B038624-8861-438E-B7B1-566B4A8E126B@bitsofproof.com>
	<CA+s+GJCQSCUyq7Ajv0EgZ8Vbcv4Xt7G-y_8D12fsoKjyFjnhwg@mail.gmail.com>
Message-ID: <CANEZrP1aa8AWvpgiQbnGF+DHEhBwCoNL4V-REH06NJ2iKNv0hw@mail.gmail.com>

>
> What would this involve?
>
> Do you know of any previous work towards this?
>

Chain pruning is a fairly complicated project, partly because it spans
codebases. For instance if you try and implement it *just* by changing
Bitcoin Core, you will break all the SPV clients based on bitcoinj (i.e.
all of them). Big changes to the P2P network like this require upgrading
both codebases simultaneously.

I think things like this may be why Gavin is now just "chief scientist"
instead of Core maintainer - in future, the changes people need will span
projects and require fairly significant planning.

>From a technical perspective, it means extending addr broadcasts so nodes
broadcast how much of the chain they have, and teaching both Core and
bitcoinj how to search for nodes that have enough of the chain for them to
use. Currently bitcoinj still doesn't use addr broadcasts at all, there's
an incomplete patch available but it was never finished or merged. So that
has to be fixed first. And that probably implies improving Bitcoin Core so
the results of getaddr are more usable, ideally as high quality as what the
DNS seeds provide, because if lots of bad addresses are returned this will
slow down initial connect time, which is an important performance metric.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/3beeb426/attachment.html>

From pieter.wuille at gmail.com  Thu Apr 10 11:32:44 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Thu, 10 Apr 2014 13:32:44 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CA+s+GJCQSCUyq7Ajv0EgZ8Vbcv4Xt7G-y_8D12fsoKjyFjnhwg@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAAt2M18z_Qkqat1OETiXAz0QQey4+y5J6=pC7nkoJfyfrpj3=A@mail.gmail.com>
	<CAAS2fgScWkentFy7Ak0bpYVLsOFL+xkwPm5QRu9ENeX9oCtPug@mail.gmail.com>
	<534570A2.9090502@gmx.de>
	<CA+s+GJAXu3SEXFDDwi85dNFjO2rfPXJrg-aKHYwbogAHfu3vfQ@mail.gmail.com>
	<0B038624-8861-438E-B7B1-566B4A8E126B@bitsofproof.com>
	<CA+s+GJCQSCUyq7Ajv0EgZ8Vbcv4Xt7G-y_8D12fsoKjyFjnhwg@mail.gmail.com>
Message-ID: <CAPg+sBjWL_hKhWW-6i=WAHnx+Ue5JE=A9RrxnWuAYOXw19qiDw@mail.gmail.com>

There were earlier discussions.

The two ideas were either using one or a few service bits to indicate
availability of blocks, or to extend addr messages with some flags to
indicate this information.

I wonder whether we can't have a hybrid: bits to indicate general
degree of availability of blocks (none, only recent, everything), but
indicate actual availability only upon actually connecting (through a
"version" extension, or - preferably - a separate message). Reason is
that the actual blocks available are likely to change frequently (if
you keep the last week of blocks, a 3-day old addr entry will have
quite outdated information), and not that important to actual peer
selection - only to drive the decision which blocks to ask after
connection.

On Thu, Apr 10, 2014 at 1:09 PM, Wladimir <laanwj at gmail.com> wrote:
> On Thu, Apr 10, 2014 at 8:04 AM, Tamas Blummer <tamas at bitsofproof.com>
> wrote:
>>
>> Serving headers should be default but storing and serving full blocks
>> configurable to ranges, so people can tailor to their bandwith and space
>> available.
>
>
> I do agree that it is important.
>
> This does require changes to the P2P protocol, as currently there is no way
> for a node to signal that they store only part of the block chain. Also,
> clients will have to be modified to take this into account. Right now they
> are under the assumption that every full node can send them every (previous)
> block.
>
> What would this involve?
>
> Do you know of any previous work towards this?
>
> Wladimir
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From pete at petertodd.org  Thu Apr 10 11:36:05 2014
From: pete at petertodd.org (Peter Todd)
Date: Thu, 10 Apr 2014 07:36:05 -0400
Subject: [Bitcoin-development] Bitcoind-in-background mode for
	SPV	wallets
In-Reply-To: <3DB84423-BAEB-4290-B43C-7A3B07141844@bitsofproof.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
	<CANEZrP2w2b28qnYd7q=fo=VL0FzVE1R15s5Entuy+fK9x+V8Kg@mail.gmail.com>
	<CA+s+GJDcGxa_ARPFAbsd54cFhgBn8WcqNrRs00TZJBrNmvq5jQ@mail.gmail.com>
	<77889B25-03D6-4401-A5FE-432976951F55@bitsofproof.com>
	<CANEZrP1ELraedzEpME6E8s7kXy57RKtr6667_Ke7cvhvcc9W0Q@mail.gmail.com>
	<5EA7E1CA-2673-49D4-A1C4-015117E5133D@bitsofproof.com>
	<CANEZrP3tBnikpE99bTvTshiVDpRNJE8zKM1skPua2k2E7J=gRw@mail.gmail.com>
	<3DB84423-BAEB-4290-B43C-7A3B07141844@bitsofproof.com>
Message-ID: <139aeadf-e58a-4852-b96b-a1c30780eb9c@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512



On 10 April 2014 06:44:32 GMT-04:00, Tamas Blummer <tamas at bitsofproof.com> wrote:
>Thanks, Peter and you convinced me. I run away with a thought.
>
>It?d be great to find a spot to deploy payment channels, but I agree
>this is not it.

No problem!

I'm sure we'll see payment channels implemented sooner or later
the form of "hub and spoke" payment networks. The idea there is you have one or more centralised hubs who in turn have payment channels setup to and from payors and payees. So long as the person you want to pay is connected to the same hub as you are, or in more advanced versions connected via a ripple style chain, you can push payment to the hub and get proof they did the same for the recipient. Your loss is always limited to the incremental payment amount and payment is essentially instant.

Of course, it's got some disadvantages compared to standard bitcoin transactions - its less decentralised - but when compared to other forms of off-chain payment in most situations its a strict improvement, and having the capability available is always a strict improvement. Like fidelity bonded banks the trust required in the hubs is low enough that with some minor effort applied to anti-DoS you could probably get away with using even hubs run by anonymous actors, making the centralisation less important. (hubs are essentially interchangeable) Unlike pure fidelity bonded banks the effort required to build this is relatively minor!

You can even combine it with chaum tokens for anonymity. You'll want to hold the tokens for some amount of time to thwart timing analysis, leaving you somewhat vulnerable to theft, but in that case fidelity bonded banking principles can be applied. Other than that case the idea is probably made obsolete by micropayment hubs.

Regulatory issues will be interesting... If you wind up with a few central payment hubs, without chaum tokens, those hubs learn all details about every transaction made. Obviously if a big actor like BitPay implemented this there would be a lot of pressure on them to make those records available to law enforcement and tax authorities, not to mention marketing and other data mining. Equally I suspect that if an alternative more decentralised version was implemented there would be strong government pressure for those approved hubs to not interoperate with the decentralised hubs, and equally for merchants to not accept payment from the decentralised hubs.

But all the same, if widely implemented this reduces pressure to raise the block size enormously, keeping the underlying system decentralised. So the net effect is probably positive regardless.

Oh yeah, credit goes to Mike Hearn for the payment channels, and if I'm correct, for the hub concept as well.

Amir: You should think about adding the above to dark wallet. It'd be good if the protocols are implemented in an open and decentralised fashion first, prior to vendor lock in.
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCgA6BQJTRoIlMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhW26B/9A9OtYjoSHo620XZzF
VqfnnVFCPr3DpD/HuT3JYhF1kkL2vTt5wkRIHmHmfJ29Sduj8St7EFiLOyUg2mvt
q9heZgzCnqxLJm9zMiiQnb3Y/plvhTLfaONnHI+OPSfrABL6DA04nEe8OBPuFfv/
NowJ74DP/65YBq3EqbqG0dJExKm1BhdrEpWNq0v5YoCVuEYkWgFHL8SdRHnfFyxA
XTkP8avzlG82r98k55IrV0O/6VQNHjE0+xF4EHjEYBacy6OwlpEYeLrqx/VDAQ5R
RufXeAltNZI0tzLQ8nY0aMBH3YFxF0+14/sbmOAtmnD6EW49gEcV9MnSJc5ct4m7
Szq5
=aC39
-----END PGP SIGNATURE-----




From mike at plan99.net  Thu Apr 10 11:37:58 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 10 Apr 2014 13:37:58 +0200
Subject: [Bitcoin-development] Chain pruning
Message-ID: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>

Chain pruning is probably a separate thread, changing subject.


> Reason is that the actual blocks available are likely to change frequently
> (if
> you keep the last week of blocks


I doubt anyone would specify blocks to keep in terms of time. More likely
it'd be in terms of megabytes, as that's the actual resource constraint on
nodes. Given a block size average it's easy to go from megabytes to
num_blocks, so I had imagined it'd be a new addr field that specifies how
many blocks from the chain head are stored. Then you'd connect to some
nodes and if they indicate their chain head - num_blocks_stored is higher
than your current chain height, you'd do a getaddr and go looking for nodes
that are storing far enough back.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/97cd4703/attachment.html>

From pete at petertodd.org  Thu Apr 10 11:43:21 2014
From: pete at petertodd.org (Peter Todd)
Date: Thu, 10 Apr 2014 07:43:21 -0400
Subject: [Bitcoin-development] Bitcoind-in-background mode for
	SPV	wallets
In-Reply-To: <CAPg+sBjWL_hKhWW-6i=WAHnx+Ue5JE=A9RrxnWuAYOXw19qiDw@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAAt2M18z_Qkqat1OETiXAz0QQey4+y5J6=pC7nkoJfyfrpj3=A@mail.gmail.com>
	<CAAS2fgScWkentFy7Ak0bpYVLsOFL+xkwPm5QRu9ENeX9oCtPug@mail.gmail.com>
	<534570A2.9090502@gmx.de>
	<CA+s+GJAXu3SEXFDDwi85dNFjO2rfPXJrg-aKHYwbogAHfu3vfQ@mail.gmail.com>
	<0B038624-8861-438E-B7B1-566B4A8E126B@bitsofproof.com>
	<CA+s+GJCQSCUyq7Ajv0EgZ8Vbcv4Xt7G-y_8D12fsoKjyFjnhwg@mail.gmail.com>
	<CAPg+sBjWL_hKhWW-6i=WAHnx+Ue5JE=A9RrxnWuAYOXw19qiDw@mail.gmail.com>
Message-ID: <9b2cddd4-0c46-422e-ac34-0598d47b6a75@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512



On 10 April 2014 07:32:44 GMT-04:00, Pieter Wuille <pieter.wuille at gmail.com> wrote:
>There were earlier discussions.
>
>The two ideas were either using one or a few service bits to indicate
>availability of blocks, or to extend addr messages with some flags to
>indicate this information.
>
>I wonder whether we can't have a hybrid: bits to indicate general
>degree of availability of blocks (none, only recent, everything), but
>indicate actual availability only upon actually connecting (through a
>"version" extension, or - preferably - a separate message). Reason is
>that the actual blocks available are likely to change frequently (if
>you keep the last week of blocks, a 3-day old addr entry will have
>quite outdated information), and not that important to actual peer
>selection - only to drive the decision which blocks to ask after
>connection.

Why not just put an expiration date on that information and delay deletion until the expiration is reached?

Also, its worth noting how the node bit solution you proposed can be done as a gradual upgrade path for SPV client. From the perspective of nodes that don't know about it they just see the pruned nodes as SPV nodes without any chain data at all. The only issue would be if large numbers of uses turned off their full nodes, but that's a possibility regardless. Done with partial UTXO set mode this may even result in an eventual increase in the number of full nodes.
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCgA6BQJTRoPZMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhetrCACA02EJQ0VpcYvafuNc
7pvqMVeirJRu3Uv7Wy8rcl9jW5irM5fmNdznARtv2vwpEZN7MU0wp3ZY1FYOCv2f
PvWC7DBCSBs2BuyGkvPuwnXEppTrYmWFT3qjg+99lF1IlOV4yWFacja2RGDuJkea
fYUkODosHJjFVcXi5aMkBPQ5sOFdlUVbC94YV4d4PDSmF2fHLGG8uEfEweYb6Pv+
gj1CsfuAWf8DWzygDeL8x/wOG9HeqYqEbjxyOb9hxlp1ByUof+4WJtz3QfGsR2Xt
fvkmgS8vkUxSIZorMdypj7oLBOnfDW1bEK5He2SlqPdYi5FEQusZ/jMMX3Fw74GV
fJKt
=Wyv8
-----END PGP SIGNATURE-----




From mike at plan99.net  Thu Apr 10 11:45:16 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 10 Apr 2014 13:45:16 +0200
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <139aeadf-e58a-4852-b96b-a1c30780eb9c@email.android.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<0509477C-89F9-47C7-8820-29ACAD4A4A8E@bitsofproof.com>
	<CANEZrP2Q=TG+jejEVFFh5FhjzDDkySHNSTfwtKueLcHu=pB6Kw@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
	<CANEZrP2w2b28qnYd7q=fo=VL0FzVE1R15s5Entuy+fK9x+V8Kg@mail.gmail.com>
	<CA+s+GJDcGxa_ARPFAbsd54cFhgBn8WcqNrRs00TZJBrNmvq5jQ@mail.gmail.com>
	<77889B25-03D6-4401-A5FE-432976951F55@bitsofproof.com>
	<CANEZrP1ELraedzEpME6E8s7kXy57RKtr6667_Ke7cvhvcc9W0Q@mail.gmail.com>
	<5EA7E1CA-2673-49D4-A1C4-015117E5133D@bitsofproof.com>
	<CANEZrP3tBnikpE99bTvTshiVDpRNJE8zKM1skPua2k2E7J=gRw@mail.gmail.com>
	<3DB84423-BAEB-4290-B43C-7A3B07141844@bitsofproof.com>
	<139aeadf-e58a-4852-b96b-a1c30780eb9c@email.android.com>
Message-ID: <CANEZrP0EE5RLm4nehzZzVZusB-Ptsp03b_VEeNrvK+bKk_ozkw@mail.gmail.com>

>
> Oh yeah, credit goes to Mike Hearn for the payment channels, and if I'm
> correct, for the hub concept as well.
>

Actually, the design is from Satoshi and Matt did most of the
implementation work last year during a Google internship. Though I ended up
doing a lot of work on it too. We actually got pretty far: there was
Android UI for it and a couple of apps we coded up. I wish we could have
pushed it over the finishing line and got real world usage. Hopefully we
can return to it someday soon.

I think the hub/spoke concept was invented by goldsmiths in 16th century
Italy, as they started handing pieces of paper across their benches, or
*bancos* in Italian   :-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/662c5b53/attachment.html>

From gmaxwell at gmail.com  Thu Apr 10 11:50:55 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Thu, 10 Apr 2014 04:50:55 -0700
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CAPg+sBjWL_hKhWW-6i=WAHnx+Ue5JE=A9RrxnWuAYOXw19qiDw@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAAt2M18z_Qkqat1OETiXAz0QQey4+y5J6=pC7nkoJfyfrpj3=A@mail.gmail.com>
	<CAAS2fgScWkentFy7Ak0bpYVLsOFL+xkwPm5QRu9ENeX9oCtPug@mail.gmail.com>
	<534570A2.9090502@gmx.de>
	<CA+s+GJAXu3SEXFDDwi85dNFjO2rfPXJrg-aKHYwbogAHfu3vfQ@mail.gmail.com>
	<0B038624-8861-438E-B7B1-566B4A8E126B@bitsofproof.com>
	<CA+s+GJCQSCUyq7Ajv0EgZ8Vbcv4Xt7G-y_8D12fsoKjyFjnhwg@mail.gmail.com>
	<CAPg+sBjWL_hKhWW-6i=WAHnx+Ue5JE=A9RrxnWuAYOXw19qiDw@mail.gmail.com>
Message-ID: <CAAS2fgTkgddRGGXuuAza-A=Dgjfr5aNF8yxDePPixN4M7Rbpyg@mail.gmail.com>

On Thu, Apr 10, 2014 at 4:32 AM, Pieter Wuille <pieter.wuille at gmail.com> wrote:
> There were earlier discussions.

On this list.

> The two ideas were either using one or a few service bits to indicate
> availability of blocks, or to extend addr messages with some flags to
> indicate this information.
>
> I wonder whether we can't have a hybrid: bits to indicate general
> degree of availability of blocks (none, only recent, everything), but
> indicate actual availability only upon actually connecting (through a
> "version" extension, or - preferably - a separate message). Reason is
> that the actual blocks available are likely to change frequently (if
> you keep the last week of blocks, a 3-day old addr entry will have
> quite outdated information), and not that important to actual peer
> selection - only to drive the decision which blocks to ask after
> connection.

I think you actually do need the kept ranges to be circulated,
otherwise you might need to hunt for a very long time to find the
right nodes with the blocks you need.  Alternatively, you give up and
don't hunt and pick some node that has them all and we get poor load
distribution. I'd rather be in a case where the nodes that have the
full history are only hit as a last resort.

WRT the changing values, I think that is pretty uniquely related to
the most recent blocks, and so instead I think that should be handled
symbolically (e.g. the hybrid approach... a flag for the "I keep the
most recent 2000 blocks", I say 2000 because thats about where the
request offset historgrams flattened out) or as a single offset range
"I keep the last N=200",  and the flag or the offset would be in
addition to whatever additional range was signaled. The latter could
be infrequently changing.

Signaling _more_ and more current range data on connect seems fine to
me, I just don't think it replaces something that gets relayed.

Based on the safety against reorgs and the block request access
patterns we observed I'm pretty sure we'd want any node serving blocks
at all to be at least the last N (for some number between 144 and 2000
or so). Based on the request patterns if just the recent blocks use up
all the space you're willing to spend, then I think thats probably
still the optimal contribution...

(Just be glad I'm not suggesting coding the entire blockchain with an
error correcting code so that it doesn't matter which subset you're
holding)



From pete at petertodd.org  Thu Apr 10 11:52:34 2014
From: pete at petertodd.org (Peter Todd)
Date: Thu, 10 Apr 2014 07:52:34 -0400
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CANEZrP0EE5RLm4nehzZzVZusB-Ptsp03b_VEeNrvK+bKk_ozkw@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CA+s+GJBRvDFgktTgW2sCvAVahrjxcGqfgHw0BVNPvwUupotVrg@mail.gmail.com>
	<534592E2.7040800@gmail.com>
	<CAAS2fgS3q6N9go-NSKdjLwgU_5bFwa8YE88DcjNYHQTwzPCn3Q@mail.gmail.com>
	<5345986C.3040901@gmail.com>
	<CAAS2fgQyXHNnBDKoUMd_=-=1irGJ6cFKwi59enLJvFJiWBv50A@mail.gmail.com>
	<CAJna-Hj1U5cQ22bSXoNB-4ck_urCuS9xCk+iEHsbh+yv17MP7A@mail.gmail.com>
	<CANEZrP2w2b28qnYd7q=fo=VL0FzVE1R15s5Entuy+fK9x+V8Kg@mail.gmail.com>
	<CA+s+GJDcGxa_ARPFAbsd54cFhgBn8WcqNrRs00TZJBrNmvq5jQ@mail.gmail.com>
	<77889B25-03D6-4401-A5FE-432976951F55@bitsofproof.com>
	<CANEZrP1ELraedzEpME6E8s7kXy57RKtr6667_Ke7cvhvcc9W0Q@mail.gmail.com>
	<5EA7E1CA-2673-49D4-A1C4-015117E5133D@bitsofproof.com>
	<CANEZrP3tBnikpE99bTvTshiVDpRNJE8zKM1skPua2k2E7J=gRw@mail.gmail.com>
	<3DB84423-BAEB-4290-B43C-7A3B07141844@bitsofproof.com>
	<139aeadf-e58a-4852-b96b-a1c30780eb9c@email.android.com>
	<CANEZrP0EE5RLm4nehzZzVZusB-Ptsp03b_VEeNrvK+bKk_ozkw@mail.gmail.com>
Message-ID: <912b67d0-ce36-43d1-92f9-c0d74344190f@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512



On 10 April 2014 07:45:16 GMT-04:00, Mike Hearn <mike at plan99.net> wrote:
>>
>> Oh yeah, credit goes to Mike Hearn for the payment channels, and if
>I'm
>> correct, for the hub concept as well.
>>
>
>Actually, the design is from Satoshi and Matt did most of the
>implementation work last year during a Google internship.

Ah right, of course. Along those lines we should credit Jeremy Spilman (?) for figuring out how to get rid of the dependency on nSequence, makimg the protocol trust-free.

I do recall it having an issue with malleability, semi-fixed with the P2SH trick. Be good to clear that up for good for Pieter's proposed malleability patch.

>Though I
>ended up
>doing a lot of work on it too. We actually got pretty far: there was
>Android UI for it and a couple of apps we coded up. I wish we could
>have
>pushed it over the finishing line and got real world usage. Hopefully
>we
>can return to it someday soon.
>
>I think the hub/spoke concept was invented by goldsmiths in 16th
>century
>Italy, as they started handing pieces of paper across their benches, or
>*bancos* in Italian   :-)

...and only took another five hundred years for math to catch up and make it trust free, modulo miner centralisation!
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCgA6BQJTRoYCMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhdNMB/9zFBT3nFSkasHkMVW8
01pE/VYrclH5BsxANakOqfb57Rprc4xue9H4AuppqAlIo/i/gYtOyoDy9y8oQDmC
YRiM6K5+bqUH8uC/Rjz1AASBrnb3zAasqCJlklheb5nP3+EoLpKNJ04Brk8rnlqp
CMO5GktE43r9buYL9MOMXHanB523wRmNV8JjpEF+y5tPYe9YW7rsdmpjX8F8sRga
PE1MMNy43lctoej4tR0iSBfK2ZNudsz7PdzW9+4Gvpc4NDMHp5O4JwhX/vPbSyyC
+Or1BvPKe58zVSi5kBi7AJEeFXasfuKpwBwT9r2CGmjvI62ESmkj5M9eqcb4i8Yy
i2Zr
=E4NH
-----END PGP SIGNATURE-----




From pete at petertodd.org  Thu Apr 10 11:54:38 2014
From: pete at petertodd.org (Peter Todd)
Date: Thu, 10 Apr 2014 07:54:38 -0400
Subject: [Bitcoin-development] Bitcoind-in-background mode for
	SPV	wallets
In-Reply-To: <CAAS2fgTkgddRGGXuuAza-A=Dgjfr5aNF8yxDePPixN4M7Rbpyg@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAAt2M18z_Qkqat1OETiXAz0QQey4+y5J6=pC7nkoJfyfrpj3=A@mail.gmail.com>
	<CAAS2fgScWkentFy7Ak0bpYVLsOFL+xkwPm5QRu9ENeX9oCtPug@mail.gmail.com>
	<534570A2.9090502@gmx.de>
	<CA+s+GJAXu3SEXFDDwi85dNFjO2rfPXJrg-aKHYwbogAHfu3vfQ@mail.gmail.com>
	<0B038624-8861-438E-B7B1-566B4A8E126B@bitsofproof.com>
	<CA+s+GJCQSCUyq7Ajv0EgZ8Vbcv4Xt7G-y_8D12fsoKjyFjnhwg@mail.gmail.com>
	<CAPg+sBjWL_hKhWW-6i=WAHnx+Ue5JE=A9RrxnWuAYOXw19qiDw@mail.gmail.com>
	<CAAS2fgTkgddRGGXuuAza-A=Dgjfr5aNF8yxDePPixN4M7Rbpyg@mail.gmail.com>
Message-ID: <c3726067-5a9f-45b9-b798-1070bdde2ac4@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512



On 10 April 2014 07:50:55 GMT-04:00, Gregory Maxwell <gmaxwell at gmail.com> wrote:
>(Just be glad I'm not suggesting coding the entire blockchain with an
>error correcting code so that it doesn't matter which subset you're
>holding)

I forgot to ask last night: if you do that, can you add new blocks to the chain with the encoding incrementally?
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCgA6BQJTRoZ+MxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhYudCAC7ImifMnLIFHv1UifV
zRxtDkx7UxIf9dncDAcrTIyKEDhoouh0TmoZl3HKQ3KUEETAVKsMzqXLgqVe6Ezr
ny1bm0pQlkBCZFRwuZvmB27Y3mwC8PD6rT9ywtWzFjWd8PEg6/UaM547nQPw7ir0
27S3XMfE/BMiQWfWnWc/nqpbmJjd8x/dM3oiTG9SVZ7iNxotxAqfnW2X5tkhJb0q
dAV08wpu6aZ5hTyLpvDxXDFjEG119HJeLkT9QVIrg+GBG55PYORqE4gQr6uhrF4L
fGZS2EIlbk+kAiv0EjglQfxWM7KSRegplSASiKEOuX80tqLIsEugNh1em8qvG401
NOAS
=CWql
-----END PGP SIGNATURE-----




From laanwj at gmail.com  Thu Apr 10 11:57:00 2014
From: laanwj at gmail.com (Wladimir)
Date: Thu, 10 Apr 2014 13:57:00 +0200
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>
Message-ID: <CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>

On Thu, Apr 10, 2014 at 1:37 PM, Mike Hearn <mike at plan99.net> wrote:

> Chain pruning is probably a separate thread, changing subject.
>
>
>> Reason is that the actual blocks available are likely to change
>> frequently (if
>> you keep the last week of blocks
>
>
> I doubt anyone would specify blocks to keep in terms of time. More likely
> it'd be in terms of megabytes, as that's the actual resource constraint on
> nodes.
>

Well with bitcoin, (average) time, number of blocks and (maximum) size are
all related to each other so it doesn't matter how it is specified, it's
always possible to give estimates of all three.

As for implementation it indeed makes most sense to work with block ranges.


> Given a block size average it's easy to go from megabytes to num_blocks,
> so I had imagined it'd be a new addr field that specifies how many blocks
> from the chain head are stored. Then you'd connect to some nodes and if
> they indicate their chain head - num_blocks_stored is higher than your
> current chain height, you'd do a getaddr and go looking for nodes that are
> storing far enough back.
>

This assumes that nodes will always be storing the latest blocks. For
dynamic nodes that take part in the consensus this makes sense.

Just wondering: Would there be a use for a [static] node that, say, always
serves only the first 100000 blocks? Or, even, a static range like block
100000 - 200000?

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/d9a682b3/attachment.html>

From gmaxwell at gmail.com  Thu Apr 10 12:10:35 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Thu, 10 Apr 2014 05:10:35 -0700
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>
	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>
Message-ID: <CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>

On Thu, Apr 10, 2014 at 4:57 AM, Wladimir <laanwj at gmail.com> wrote:
> Just wondering: Would there be a use for a [static] node that, say, always
> serves only the first 100000 blocks? Or, even, a static range like block
> 100000 - 200000?

The last time we discussed this sipa collected data based on how often
blocks were feteched as a function of their depth and there was a huge
increase for recent blocks that didn't really level out until 2000
blocks or so? presumably its not uncommon for nodes to be offline for
a week or two at a time.

But sure I could see a fixed range as also being a useful contribution
though I'm struggling to figure out what set of constraints would
leave a node without following the consensus?   Obviously it has
bandwidth if you're expecting to contribute much in serving those
historic blocks... and verifying is reasonably cpu cheap with fast
ecdsa code.   Maybe it has a lot of read only storage?

I think it should be possible to express and use such a thing in the
protocol even if I'm currently unsure as to why you wouldn't do 100000
- 200000  _plus_ the most recent 144 that you were already keeping
around for reorgs.

In terms of peer selection, if the blocks you need aren't covered by
the nodes you're currently connected to I think you'd prefer to seek
node nodes which have the least rare-ness in the ranges they offer.
E.g. if you're looking for a block 50 from the tip,  you're should
probably not prefer to fetch it from someone with blocks 100000-150000
if its one of only 100 nodes that has that range.



From flavien.charlon at predictious.com  Thu Apr 10 12:19:18 2014
From: flavien.charlon at predictious.com (Flavien Charlon)
Date: Thu, 10 Apr 2014 13:19:18 +0100
Subject: [Bitcoin-development] Feedback request: colored coins protocol
In-Reply-To: <CAE28kURu7-OgY6vN0az6rQUGpChK76ZQL9_eL1J4j-HZOqhRYA@mail.gmail.com>
References: <CABbpET96CboPcQeV-nKXv-CeaPiwpTKVUB_ioGPB2s3_5Y7bnQ@mail.gmail.com>
	<5341E1FF.7080204@monetize.io>
	<CABbpET_JFceNhRkxSZMyiTxkkYr2MvQVob7o4juEsPj4wo8e8g@mail.gmail.com>
	<CAC1+kJMpEetKdpKs-OaFGvnBwi6-Pj8ycJ77cJzHOTk_jUPw=g@mail.gmail.com>
	<CABbpET-S5ahuQVcBaJZGyvFMS1=RU2mJZUAmECBKhFOFu6B6EA@mail.gmail.com>
	<5342BEE0.3050204@monetize.io>
	<CABbpET8Qbvhb47ZJX4EVh4673_ic9UwpMdMyZbsHay9F2zTj9Q@mail.gmail.com>
	<CAC1+kJPBH85p8Mgu0_7+1JxizgX19a-HWWF+38BLA7DZ4Ldd6g@mail.gmail.com>
	<CABbpET8DaEKbafX6Cju_e+ygeV1WDf_LXQKU6tTofh32R9XM=Q@mail.gmail.com>
	<CAE28kURu7-OgY6vN0az6rQUGpChK76ZQL9_eL1J4j-HZOqhRYA@mail.gmail.com>
Message-ID: <CABbpET93YxPepKLHFKKabr6P7vpkRDOouVuo8zmWAf3FKc85Cg@mail.gmail.com>

Thanks for the valuable feedback. I see there is a strong concern with
requiring a large BTC capital for issuing coloring coins, so I am now in
the process of modifying the specification to address that. I will post an
update when this is finished.

By the way, padding doesn't solve the issue entirely (issuing 10 billion
shares sill takes you 100 BTC, even with padding and 1 satoshi = 1 share),
so I am going for the solution where the asset quantity of every output is
explicitly encoded in the OP_RETURN output. That way, whether you are
issuing 1 share or 100 trillions, you never need to pay more than 540
satoshis.


On Mon, Apr 7, 2014 at 8:58 PM, Alex Mizrahi <alex.mizrahi at gmail.com> wrote:

> This is beyond ridiculous...
>
> Color kernel which works with padding is still quite simple. I think we
> have extra 10-50 lines of code to handle padding in coloredcoinlib.
> Essentially we have a couple of lines like this :
>
>     value_wop = tx.outputs[oi].value - padding
>
> (value_wop means "value without padding").
> And then we have like 10 lines of code which selects padding for a
> transaction.
>
> That's not a lot of extra complexity. And it solves the problem once and
> for all.
>
> What you propose instead: "a different colored coin representing 10
> shares, and another one representing 100 shares (like the different
> denominations of dollar bills)"  is much more complex, and it won't work:
>
> Suppose you have $100 coin, as a single coin.
> How do you send $54.23?
> That's simply impossible.
>
> So you'd rather push complexity to higher levels (and create inconvenience
> for end users, as you admitted yourself) than add 10-50 lines of code to
> color kernel?
> I just do not understand this.
>
> But I'm not going to argue. I already wrote everything which I could write
> on this topic.
>
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/06ce07c4/attachment.html>

From laanwj at gmail.com  Thu Apr 10 14:19:25 2014
From: laanwj at gmail.com (Wladimir)
Date: Thu, 10 Apr 2014 16:19:25 +0200
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>
	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>
	<CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>
Message-ID: <CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>

On Thu, Apr 10, 2014 at 2:10 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> But sure I could see a fixed range as also being a useful contribution
> though I'm struggling to figure out what set of constraints would
> leave a node without following the consensus?   Obviously it has
> bandwidth if you're expecting to contribute much in serving those
> historic blocks... and verifying is reasonably cpu cheap with fast
> ecdsa code.   Maybe it has a lot of read only storage?
>

The use case is that you could burn the node implementation + block data +
a live operating system on a read-only medium. This could be set in stone
for a long time.

There would be no consensus code to keep up to date with protocol
developments, because it doesn't take active part in it.

I don't think it would be terribly useful right now, but it could be useful
when nodes that host all history become rare. It'd allow distributing
'pieces of history' in a self-contained form.


> I think it should be possible to express and use such a thing in the
> protocol even if I'm currently unsure as to why you wouldn't do 100000
> - 200000  _plus_ the most recent 144 that you were already keeping
> around for reorgs.
>

Yes, it would be nice to at least be able to express it, if it doesn't make
the protocol too finicky.

In terms of peer selection, if the blocks you need aren't covered by
> the nodes you're currently connected to I think you'd prefer to seek
> node nodes which have the least rare-ness in the ranges they offer.
> E.g. if you're looking for a block 50 from the tip,  you're should
> probably not prefer to fetch it from someone with blocks 100000-150000
> if its one of only 100 nodes that has that range.
>

That makes sense.

In general, if you want a block 50 from the tip, it would be best to
request it from a node that only serves the last N (N>~50) blocks, and not
a history node that could use the same bandwidth to serve earlier, rarer
blocks to others.

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/dc261288/attachment.html>

From root at haskoin.com  Thu Apr 10 14:28:29 2014
From: root at haskoin.com (Jean-Pierre Rupp)
Date: Thu, 10 Apr 2014 15:28:29 +0100
Subject: [Bitcoin-development] Feedback request: colored coins protocol
In-Reply-To: <CABbpET93YxPepKLHFKKabr6P7vpkRDOouVuo8zmWAf3FKc85Cg@mail.gmail.com>
References: <CABbpET96CboPcQeV-nKXv-CeaPiwpTKVUB_ioGPB2s3_5Y7bnQ@mail.gmail.com>	<5341E1FF.7080204@monetize.io>	<CABbpET_JFceNhRkxSZMyiTxkkYr2MvQVob7o4juEsPj4wo8e8g@mail.gmail.com>	<CAC1+kJMpEetKdpKs-OaFGvnBwi6-Pj8ycJ77cJzHOTk_jUPw=g@mail.gmail.com>	<CABbpET-S5ahuQVcBaJZGyvFMS1=RU2mJZUAmECBKhFOFu6B6EA@mail.gmail.com>	<5342BEE0.3050204@monetize.io>	<CABbpET8Qbvhb47ZJX4EVh4673_ic9UwpMdMyZbsHay9F2zTj9Q@mail.gmail.com>	<CAC1+kJPBH85p8Mgu0_7+1JxizgX19a-HWWF+38BLA7DZ4Ldd6g@mail.gmail.com>	<CABbpET8DaEKbafX6Cju_e+ygeV1WDf_LXQKU6tTofh32R9XM=Q@mail.gmail.com>	<CAE28kURu7-OgY6vN0az6rQUGpChK76ZQL9_eL1J4j-HZOqhRYA@mail.gmail.com>
	<CABbpET93YxPepKLHFKKabr6P7vpkRDOouVuo8zmWAf3FKc85Cg@mail.gmail.com>
Message-ID: <5346AA8D.5000801@haskoin.com>

By deciding to use a decentralized network to hold your assets, it may
make more sense to emit less shares. Two billion shares backed by
coloured coins makes less sense than a more conservative number, like
10,000. That costs a negligible amount of money, at least until the day
when Bitcoin takes over the world and a satoshi becomes very expensive.
But it is irrelevant now.

If you have already created a massive amount of shares for your company,
then the only reasonable solution is for a coloured coin to represent a
bundle of shares as Flavien suggested. Some shareholder could emit
another coloured coin instrument with a genesis block based on a smaller
set of shares to trade among smaller investors unwilling to deal in
terms of the bundled shares.

We need to understand that coloured coins provide benefits, but also has
constraints that are not difficult to live with.

On 10/04/14 13:19, Flavien Charlon wrote:
> By the way, padding doesn't solve the issue entirely (issuing 10 billion
> shares sill takes you 100 BTC, even with padding and 1 satoshi = 1
> share), so I am going for the solution where the asset quantity of every
> output is explicitly encoded in the OP_RETURN output. That way, whether
> you are issuing 1 share or 100 trillions, you never need to pay more
> than 540 satoshis.

-- 
haskoin.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0xFF4BF34C.asc
Type: application/pgp-keys
Size: 20252 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/ce7c983f/attachment.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: root.vcf
Type: text/x-vcard
Size: 227 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/ce7c983f/attachment.vcf>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 884 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/ce7c983f/attachment.sig>

From brianchoffman at gmail.com  Thu Apr 10 16:23:40 2014
From: brianchoffman at gmail.com (Brian Hoffman)
Date: Thu, 10 Apr 2014 12:23:40 -0400
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>
	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>
	<CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>
	<CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>
Message-ID: <CAADm4BDDJkS_xdjUn=2Yzs4B0RXTvpzpd5Z_kDRorzrn1HWSng@mail.gmail.com>

This is probably just noise, but what if nodes could compress and store
earlier transaction sets (archive sets) and serve them up conditionally. So
if there were let's say 100 archive sets of (10,000 blocks) you might have
5 open at any time when you're an active archive node while the others sit
on your disk compressed and unavailable to the network. This would allow
nodes to have all full transactions but conserve disk space and network
activity since they wouldn't ever respond about every possible transaction.

This could be based on a rotational request period, based on request count
or done periodically. Once their considered active they would be expected
to uncompress a set and make it available to the network. Clients would
have to piece together archive sets from different nodes, but if there
weren't enough archive nodes to cover the chain they could ratchet up the
amount of required open archive sets when your node was active.

I fully expect to have my idea trashed, but I'm dipping toes in the waters
of contribution.




On Thu, Apr 10, 2014 at 10:19 AM, Wladimir <laanwj at gmail.com> wrote:

>
> On Thu, Apr 10, 2014 at 2:10 PM, Gregory Maxwell <gmaxwell at gmail.com>wrote:
>
>> But sure I could see a fixed range as also being a useful contribution
>> though I'm struggling to figure out what set of constraints would
>> leave a node without following the consensus?   Obviously it has
>> bandwidth if you're expecting to contribute much in serving those
>> historic blocks... and verifying is reasonably cpu cheap with fast
>> ecdsa code.   Maybe it has a lot of read only storage?
>>
>
> The use case is that you could burn the node implementation + block data +
> a live operating system on a read-only medium. This could be set in stone
> for a long time.
>
> There would be no consensus code to keep up to date with protocol
> developments, because it doesn't take active part in it.
>
> I don't think it would be terribly useful right now, but it could be
> useful when nodes that host all history become rare. It'd allow
> distributing 'pieces of history' in a self-contained form.
>
>
>> I think it should be possible to express and use such a thing in the
>> protocol even if I'm currently unsure as to why you wouldn't do 100000
>> - 200000  _plus_ the most recent 144 that you were already keeping
>> around for reorgs.
>>
>
> Yes, it would be nice to at least be able to express it, if it doesn't
> make the protocol too finicky.
>
> In terms of peer selection, if the blocks you need aren't covered by
>> the nodes you're currently connected to I think you'd prefer to seek
>> node nodes which have the least rare-ness in the ranges they offer.
>> E.g. if you're looking for a block 50 from the tip,  you're should
>> probably not prefer to fetch it from someone with blocks 100000-150000
>> if its one of only 100 nodes that has that range.
>>
>
> That makes sense.
>
> In general, if you want a block 50 from the tip, it would be best to
> request it from a node that only serves the last N (N>~50) blocks, and not
> a history node that could use the same bandwidth to serve earlier, rarer
> blocks to others.
>
> Wladimir
>
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/34295a52/attachment.html>

From mike at plan99.net  Thu Apr 10 16:28:08 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 10 Apr 2014 18:28:08 +0200
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <CAADm4BDDJkS_xdjUn=2Yzs4B0RXTvpzpd5Z_kDRorzrn1HWSng@mail.gmail.com>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>
	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>
	<CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>
	<CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>
	<CAADm4BDDJkS_xdjUn=2Yzs4B0RXTvpzpd5Z_kDRorzrn1HWSng@mail.gmail.com>
Message-ID: <CANEZrP1rPZYkTLmx5GOdj67oQAgFjeaF-LCKAXpg5XsEhXYFuQ@mail.gmail.com>

Suggestions always welcome!

The main problem with this is that the block chain is mostly random bytes
(hashes, keys) so it doesn't compress that well. It compresses a bit, but
not enough to change the fundamental physics.

However, that does not mean the entire chain has to be stored on expensive
rotating platters. I've suggested that in some star trek future where the
chain really is gigantic, it could be stored on tape and spooled off at
high speed. Literally a direct DMA from tape drive to NIC. But we're not
there yet :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/f4ecb19c/attachment.html>

From brianchoffman at gmail.com  Thu Apr 10 16:47:50 2014
From: brianchoffman at gmail.com (Brian Hoffman)
Date: Thu, 10 Apr 2014 12:47:50 -0400
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <CANEZrP1rPZYkTLmx5GOdj67oQAgFjeaF-LCKAXpg5XsEhXYFuQ@mail.gmail.com>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>
	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>
	<CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>
	<CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>
	<CAADm4BDDJkS_xdjUn=2Yzs4B0RXTvpzpd5Z_kDRorzrn1HWSng@mail.gmail.com>
	<CANEZrP1rPZYkTLmx5GOdj67oQAgFjeaF-LCKAXpg5XsEhXYFuQ@mail.gmail.com>
Message-ID: <CAADm4BB8y=k_f7CG3tyX6ruWF0w3+hU2Szv7ajLp1x7KhS56GA@mail.gmail.com>

Looks like only about ~30% disk space savings so I see your point. Is there
a critical reason why blocks couldn't be formed into "superblocks" that are
chained together and nodes could serve a specific superblock, which could
be pieced together from different nodes to get the full blockchain? This
would allow participants with limited resources to serve full portions of
the blockchain rather than limited pieces of the entire blockchain.


On Thu, Apr 10, 2014 at 12:28 PM, Mike Hearn <mike at plan99.net> wrote:

> Suggestions always welcome!
>
> The main problem with this is that the block chain is mostly random bytes
> (hashes, keys) so it doesn't compress that well. It compresses a bit, but
> not enough to change the fundamental physics.
>
> However, that does not mean the entire chain has to be stored on expensive
> rotating platters. I've suggested that in some star trek future where the
> chain really is gigantic, it could be stored on tape and spooled off at
> high speed. Literally a direct DMA from tape drive to NIC. But we're not
> there yet :)
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/0927179b/attachment.html>

From ricardojdfilipe at gmail.com  Thu Apr 10 16:52:42 2014
From: ricardojdfilipe at gmail.com (Ricardo Filipe)
Date: Thu, 10 Apr 2014 17:52:42 +0100
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <CANEZrP1rPZYkTLmx5GOdj67oQAgFjeaF-LCKAXpg5XsEhXYFuQ@mail.gmail.com>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>
	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>
	<CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>
	<CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>
	<CAADm4BDDJkS_xdjUn=2Yzs4B0RXTvpzpd5Z_kDRorzrn1HWSng@mail.gmail.com>
	<CANEZrP1rPZYkTLmx5GOdj67oQAgFjeaF-LCKAXpg5XsEhXYFuQ@mail.gmail.com>
Message-ID: <CALC81CP1Xz+=8Occ2gDRppDwuwDrMo4X-jQ641+ww=hT2RKNXg@mail.gmail.com>

anyway, any kind of compression that comes to the blockchain is
orthogonal to pruning.

I agree that you will probably want some kind of replication on more
recent nodes than on older ones. However, nodes with older blocks
don't need to be "static", get the block distribution algorithm to
sort it out.

2014-04-10 17:28 GMT+01:00 Mike Hearn <mike at plan99.net>:
> Suggestions always welcome!
>
> The main problem with this is that the block chain is mostly random bytes
> (hashes, keys) so it doesn't compress that well. It compresses a bit, but
> not enough to change the fundamental physics.
>
> However, that does not mean the entire chain has to be stored on expensive
> rotating platters. I've suggested that in some star trek future where the
> chain really is gigantic, it could be stored on tape and spooled off at high
> speed. Literally a direct DMA from tape drive to NIC. But we're not there
> yet :)
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From ricardojdfilipe at gmail.com  Thu Apr 10 16:54:18 2014
From: ricardojdfilipe at gmail.com (Ricardo Filipe)
Date: Thu, 10 Apr 2014 17:54:18 +0100
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <CAADm4BB8y=k_f7CG3tyX6ruWF0w3+hU2Szv7ajLp1x7KhS56GA@mail.gmail.com>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>
	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>
	<CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>
	<CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>
	<CAADm4BDDJkS_xdjUn=2Yzs4B0RXTvpzpd5Z_kDRorzrn1HWSng@mail.gmail.com>
	<CANEZrP1rPZYkTLmx5GOdj67oQAgFjeaF-LCKAXpg5XsEhXYFuQ@mail.gmail.com>
	<CAADm4BB8y=k_f7CG3tyX6ruWF0w3+hU2Szv7ajLp1x7KhS56GA@mail.gmail.com>
Message-ID: <CALC81COfHg-xcwOPB2qGuF494KCwWNL3H7UrRB-uhL4wEdkOJQ@mail.gmail.com>

that's what blockchain pruning is all about :)

2014-04-10 17:47 GMT+01:00 Brian Hoffman <brianchoffman at gmail.com>:
> Looks like only about ~30% disk space savings so I see your point. Is there
> a critical reason why blocks couldn't be formed into "superblocks" that are
> chained together and nodes could serve a specific superblock, which could be
> pieced together from different nodes to get the full blockchain? This would
> allow participants with limited resources to serve full portions of the
> blockchain rather than limited pieces of the entire blockchain.
>
>
> On Thu, Apr 10, 2014 at 12:28 PM, Mike Hearn <mike at plan99.net> wrote:
>>
>> Suggestions always welcome!
>>
>> The main problem with this is that the block chain is mostly random bytes
>> (hashes, keys) so it doesn't compress that well. It compresses a bit, but
>> not enough to change the fundamental physics.
>>
>> However, that does not mean the entire chain has to be stored on expensive
>> rotating platters. I've suggested that in some star trek future where the
>> chain really is gigantic, it could be stored on tape and spooled off at high
>> speed. Literally a direct DMA from tape drive to NIC. But we're not there
>> yet :)
>
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From brianchoffman at gmail.com  Thu Apr 10 16:56:03 2014
From: brianchoffman at gmail.com (Brian Hoffman)
Date: Thu, 10 Apr 2014 12:56:03 -0400
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <CALC81COfHg-xcwOPB2qGuF494KCwWNL3H7UrRB-uhL4wEdkOJQ@mail.gmail.com>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>
	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>
	<CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>
	<CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>
	<CAADm4BDDJkS_xdjUn=2Yzs4B0RXTvpzpd5Z_kDRorzrn1HWSng@mail.gmail.com>
	<CANEZrP1rPZYkTLmx5GOdj67oQAgFjeaF-LCKAXpg5XsEhXYFuQ@mail.gmail.com>
	<CAADm4BB8y=k_f7CG3tyX6ruWF0w3+hU2Szv7ajLp1x7KhS56GA@mail.gmail.com>
	<CALC81COfHg-xcwOPB2qGuF494KCwWNL3H7UrRB-uhL4wEdkOJQ@mail.gmail.com>
Message-ID: <CAADm4BAZiRvjbwjPFQdP+FaHQ8ATi8UVbj=ZxYnNm7LuqTTn5Q@mail.gmail.com>

Okay...will let myself out now ;P


On Thu, Apr 10, 2014 at 12:54 PM, Ricardo Filipe
<ricardojdfilipe at gmail.com>wrote:

> that's what blockchain pruning is all about :)
>
> 2014-04-10 17:47 GMT+01:00 Brian Hoffman <brianchoffman at gmail.com>:
> > Looks like only about ~30% disk space savings so I see your point. Is
> there
> > a critical reason why blocks couldn't be formed into "superblocks" that
> are
> > chained together and nodes could serve a specific superblock, which
> could be
> > pieced together from different nodes to get the full blockchain? This
> would
> > allow participants with limited resources to serve full portions of the
> > blockchain rather than limited pieces of the entire blockchain.
> >
> >
> > On Thu, Apr 10, 2014 at 12:28 PM, Mike Hearn <mike at plan99.net> wrote:
> >>
> >> Suggestions always welcome!
> >>
> >> The main problem with this is that the block chain is mostly random
> bytes
> >> (hashes, keys) so it doesn't compress that well. It compresses a bit,
> but
> >> not enough to change the fundamental physics.
> >>
> >> However, that does not mean the entire chain has to be stored on
> expensive
> >> rotating platters. I've suggested that in some star trek future where
> the
> >> chain really is gigantic, it could be stored on tape and spooled off at
> high
> >> speed. Literally a direct DMA from tape drive to NIC. But we're not
> there
> >> yet :)
> >
> >
> >
> >
> ------------------------------------------------------------------------------
> > Put Bad Developers to Shame
> > Dominate Development with Jenkins Continuous Integration
> > Continuously Automate Build, Test & Deployment
> > Start a new project now. Try Jenkins in the cloud.
> > http://p.sf.net/sfu/13600_Cloudbees
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/10c46b57/attachment.html>

From mark at monetize.io  Thu Apr 10 16:59:00 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Thu, 10 Apr 2014 09:59:00 -0700
Subject: [Bitcoin-development] Feedback request: colored coins protocol
In-Reply-To: <CABbpET93YxPepKLHFKKabr6P7vpkRDOouVuo8zmWAf3FKc85Cg@mail.gmail.com>
References: <CABbpET96CboPcQeV-nKXv-CeaPiwpTKVUB_ioGPB2s3_5Y7bnQ@mail.gmail.com>	<5341E1FF.7080204@monetize.io>	<CABbpET_JFceNhRkxSZMyiTxkkYr2MvQVob7o4juEsPj4wo8e8g@mail.gmail.com>	<CAC1+kJMpEetKdpKs-OaFGvnBwi6-Pj8ycJ77cJzHOTk_jUPw=g@mail.gmail.com>	<CABbpET-S5ahuQVcBaJZGyvFMS1=RU2mJZUAmECBKhFOFu6B6EA@mail.gmail.com>	<5342BEE0.3050204@monetize.io>	<CABbpET8Qbvhb47ZJX4EVh4673_ic9UwpMdMyZbsHay9F2zTj9Q@mail.gmail.com>	<CAC1+kJPBH85p8Mgu0_7+1JxizgX19a-HWWF+38BLA7DZ4Ldd6g@mail.gmail.com>	<CABbpET8DaEKbafX6Cju_e+ygeV1WDf_LXQKU6tTofh32R9XM=Q@mail.gmail.com>	<CAE28kURu7-OgY6vN0az6rQUGpChK76ZQL9_eL1J4j-HZOqhRYA@mail.gmail.com>
	<CABbpET93YxPepKLHFKKabr6P7vpkRDOouVuo8zmWAf3FKc85Cg@mail.gmail.com>
Message-ID: <5346CDD4.8050206@monetize.io>

On 04/10/2014 05:19 AM, Flavien Charlon wrote:
> By the way, padding doesn't solve the issue entirely (issuing 10 billion
> shares sill takes you 100 BTC, even with padding and 1 satoshi = 1
> share), so I am going for the solution where the asset quantity of every
> output is explicitly encoded in the OP_RETURN output. That way, whether
> you are issuing 1 share or 100 trillions, you never need to pay more
> than 540 satoshis.

At this point, I don't think what you are doing is even colored coins
anymore. You might want to look into Counterparty or Mastercoin.



From pieter.wuille at gmail.com  Thu Apr 10 16:59:54 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Thu, 10 Apr 2014 18:59:54 +0200
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <CAADm4BB8y=k_f7CG3tyX6ruWF0w3+hU2Szv7ajLp1x7KhS56GA@mail.gmail.com>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>
	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>
	<CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>
	<CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>
	<CAADm4BDDJkS_xdjUn=2Yzs4B0RXTvpzpd5Z_kDRorzrn1HWSng@mail.gmail.com>
	<CANEZrP1rPZYkTLmx5GOdj67oQAgFjeaF-LCKAXpg5XsEhXYFuQ@mail.gmail.com>
	<CAADm4BB8y=k_f7CG3tyX6ruWF0w3+hU2Szv7ajLp1x7KhS56GA@mail.gmail.com>
Message-ID: <CAPg+sBg88Q1Ddwsvuk3-17wO=0DF7L1wtxx4mWUoiV1=cWKhEQ@mail.gmail.com>

On Thu, Apr 10, 2014 at 6:47 PM, Brian Hoffman <brianchoffman at gmail.com> wrote:
> Looks like only about ~30% disk space savings so I see your point. Is there
> a critical reason why blocks couldn't be formed into "superblocks" that are
> chained together and nodes could serve a specific superblock, which could be
> pieced together from different nodes to get the full blockchain? This would
> allow participants with limited resources to serve full portions of the
> blockchain rather than limited pieces of the entire blockchain.

As this is a suggestion that I think I've seen come up once a month
for the past 3 years, let's try to answer it thoroughly.

The actual "state" of the blockchain is the UTXO set (stored in
chainstate/ by the reference client). It's the set of all unspent
transaction outputs at the currently active point in the block chain.
It is all you need for validating future blocks.

The problem is, you can't just give someone the UTXO set and expect
them to trust it, as there is no way to prove that it was the result
of processing the actual blocks.

As Bitcoin's full node uses a "zero trust" model, where (apart from
one detail: the order of otherwise valid transactions) it never
assumes any data received from the outside it valid, it HAS to see the
previous blocks in order to establish the validity of the current UTXO
set. This is what initial block syncing does. Nothing but the actual
blocks can provide this data, and it is why the actual blocks need to
be available. It does not require everyone to have all blocks, though
- they just need to have seen them during processing.

A related, but not identical evolution is merkle UTXO commitments.
This means that we shape the UTXO set as a merkle tree, compute its
root after every block, and require that the block commits to this
root hash (by putting it in the coinbase, for example). This means a
full node can copy the chain state from someone else, and check that
its hash matches what the block chain commits to. It's important to
note that this is a strict reduction in security: we're now trusting
that the longest chain (with most proof of work) commits to a valid
UTXO set (at some point in the past).

In essence, combining both ideas means you get "superblocks" (the UTXO
set is essentially the summary of the result of all past blocks), in a
way that is less-than-currently-but-perhaps-still-acceptably-validated.

-- 
Pieter



From brianchoffman at gmail.com  Thu Apr 10 17:06:22 2014
From: brianchoffman at gmail.com (Brian Hoffman)
Date: Thu, 10 Apr 2014 13:06:22 -0400
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <CAPg+sBg88Q1Ddwsvuk3-17wO=0DF7L1wtxx4mWUoiV1=cWKhEQ@mail.gmail.com>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>
	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>
	<CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>
	<CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>
	<CAADm4BDDJkS_xdjUn=2Yzs4B0RXTvpzpd5Z_kDRorzrn1HWSng@mail.gmail.com>
	<CANEZrP1rPZYkTLmx5GOdj67oQAgFjeaF-LCKAXpg5XsEhXYFuQ@mail.gmail.com>
	<CAADm4BB8y=k_f7CG3tyX6ruWF0w3+hU2Szv7ajLp1x7KhS56GA@mail.gmail.com>
	<CAPg+sBg88Q1Ddwsvuk3-17wO=0DF7L1wtxx4mWUoiV1=cWKhEQ@mail.gmail.com>
Message-ID: <CAADm4BB_JS8-tWi8bhUsuye6JpdrFciBxbNki67AV+U5rxX5jA@mail.gmail.com>

Ok I think I've got a good understanding of where we're at now. I can
promise that the next person to waste your time in 30 days will not be me.
I'm pleasantly surprised to see a community that doesn't kickban newcomers
and takes the time to explain (re-explain) concepts.

Hoping to add *beneficial* thoughts in the future!


On Thu, Apr 10, 2014 at 12:59 PM, Pieter Wuille <pieter.wuille at gmail.com>wrote:

> On Thu, Apr 10, 2014 at 6:47 PM, Brian Hoffman <brianchoffman at gmail.com>
> wrote:
> > Looks like only about ~30% disk space savings so I see your point. Is
> there
> > a critical reason why blocks couldn't be formed into "superblocks" that
> are
> > chained together and nodes could serve a specific superblock, which
> could be
> > pieced together from different nodes to get the full blockchain? This
> would
> > allow participants with limited resources to serve full portions of the
> > blockchain rather than limited pieces of the entire blockchain.
>
> As this is a suggestion that I think I've seen come up once a month
> for the past 3 years, let's try to answer it thoroughly.
>
> The actual "state" of the blockchain is the UTXO set (stored in
> chainstate/ by the reference client). It's the set of all unspent
> transaction outputs at the currently active point in the block chain.
> It is all you need for validating future blocks.
>
> The problem is, you can't just give someone the UTXO set and expect
> them to trust it, as there is no way to prove that it was the result
> of processing the actual blocks.
>
> As Bitcoin's full node uses a "zero trust" model, where (apart from
> one detail: the order of otherwise valid transactions) it never
> assumes any data received from the outside it valid, it HAS to see the
> previous blocks in order to establish the validity of the current UTXO
> set. This is what initial block syncing does. Nothing but the actual
> blocks can provide this data, and it is why the actual blocks need to
> be available. It does not require everyone to have all blocks, though
> - they just need to have seen them during processing.
>
> A related, but not identical evolution is merkle UTXO commitments.
> This means that we shape the UTXO set as a merkle tree, compute its
> root after every block, and require that the block commits to this
> root hash (by putting it in the coinbase, for example). This means a
> full node can copy the chain state from someone else, and check that
> its hash matches what the block chain commits to. It's important to
> note that this is a strict reduction in security: we're now trusting
> that the longest chain (with most proof of work) commits to a valid
> UTXO set (at some point in the past).
>
> In essence, combining both ideas means you get "superblocks" (the UTXO
> set is essentially the summary of the result of all past blocks), in a
> way that is less-than-currently-but-perhaps-still-acceptably-validated.
>
> --
> Pieter
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/b0cab188/attachment.html>

From alex.mizrahi at gmail.com  Thu Apr 10 17:24:24 2014
From: alex.mizrahi at gmail.com (Alex Mizrahi)
Date: Thu, 10 Apr 2014 20:24:24 +0300
Subject: [Bitcoin-development] Feedback request: colored coins protocol
In-Reply-To: <5346CDD4.8050206@monetize.io>
References: <CABbpET96CboPcQeV-nKXv-CeaPiwpTKVUB_ioGPB2s3_5Y7bnQ@mail.gmail.com>
	<5341E1FF.7080204@monetize.io>
	<CABbpET_JFceNhRkxSZMyiTxkkYr2MvQVob7o4juEsPj4wo8e8g@mail.gmail.com>
	<CAC1+kJMpEetKdpKs-OaFGvnBwi6-Pj8ycJ77cJzHOTk_jUPw=g@mail.gmail.com>
	<CABbpET-S5ahuQVcBaJZGyvFMS1=RU2mJZUAmECBKhFOFu6B6EA@mail.gmail.com>
	<5342BEE0.3050204@monetize.io>
	<CABbpET8Qbvhb47ZJX4EVh4673_ic9UwpMdMyZbsHay9F2zTj9Q@mail.gmail.com>
	<CAC1+kJPBH85p8Mgu0_7+1JxizgX19a-HWWF+38BLA7DZ4Ldd6g@mail.gmail.com>
	<CABbpET8DaEKbafX6Cju_e+ygeV1WDf_LXQKU6tTofh32R9XM=Q@mail.gmail.com>
	<CAE28kURu7-OgY6vN0az6rQUGpChK76ZQL9_eL1J4j-HZOqhRYA@mail.gmail.com>
	<CABbpET93YxPepKLHFKKabr6P7vpkRDOouVuo8zmWAf3FKc85Cg@mail.gmail.com>
	<5346CDD4.8050206@monetize.io>
Message-ID: <CAE28kUSWwamovgPA1AvAojoKuwaDvuWzbnYf6yJhQ89HRnOJGg@mail.gmail.com>

> At this point, I don't think what you are doing is even colored coins
> anymore. You might want to look into Counterparty or Mastercoin.
>

Nope, it's still colored coins. The difference between colored coin model
and Mastercoin model is that colored coins are linked to transaction
outputs, while Mastercoin has a notion of address balances.

The implications of this is that in colored coin model explicit
dependencies allow us to rely on SPV. (Assuming that one can fetch the
dependency graph to link txout in question to genesis.)
While it is not the case with Mastercoin.

While it's pretty far from the original colored coins model, what Flavien
have described is identical to it in majority of aspects.

This is an interesting approach, but OP_RETURN size limitations can be a
significant problem for some kinds of applications.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/b16e7b4b/attachment.html>

From tier.nolan at gmail.com  Thu Apr 10 17:30:32 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Thu, 10 Apr 2014 18:30:32 +0100
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <c3726067-5a9f-45b9-b798-1070bdde2ac4@email.android.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAAt2M18z_Qkqat1OETiXAz0QQey4+y5J6=pC7nkoJfyfrpj3=A@mail.gmail.com>
	<CAAS2fgScWkentFy7Ak0bpYVLsOFL+xkwPm5QRu9ENeX9oCtPug@mail.gmail.com>
	<534570A2.9090502@gmx.de>
	<CA+s+GJAXu3SEXFDDwi85dNFjO2rfPXJrg-aKHYwbogAHfu3vfQ@mail.gmail.com>
	<0B038624-8861-438E-B7B1-566B4A8E126B@bitsofproof.com>
	<CA+s+GJCQSCUyq7Ajv0EgZ8Vbcv4Xt7G-y_8D12fsoKjyFjnhwg@mail.gmail.com>
	<CAPg+sBjWL_hKhWW-6i=WAHnx+Ue5JE=A9RrxnWuAYOXw19qiDw@mail.gmail.com>
	<CAAS2fgTkgddRGGXuuAza-A=Dgjfr5aNF8yxDePPixN4M7Rbpyg@mail.gmail.com>
	<c3726067-5a9f-45b9-b798-1070bdde2ac4@email.android.com>
Message-ID: <CAE-z3OV4w+vQ0b6h9E+7cSyxkKENduyfHenhdF3q3-0i2chnGQ@mail.gmail.com>

Error correction is an interesting suggestion.

If there was 10000 nodes and each stored 0.1% of the blocks, at random,
then the odds of a block not being stored is 45 in a million.

Blocks are stored on average 10 times, so there is already reasonable
redundancy.

With 1 million blocks, 45 would be lost in that case, even though most are
stored multiple times.

With error correction codes, the chances of blocks going missing is much
lower.

For example, if there was 32 out of 34 Reed-Solomon-like system, then 2
blocks out of 34 could be lost without any actual data loss for the network.

As a back of the envelop check, the odds of 2 missing blocks landing within
34 of another is 68/1000000.  That means that the odds of 2 missing blocks
falling in the same correction section is 45 * 34 / 1000000 = 0.153%.  Even
in that case, the missing blocks could be reconstructed, as long as you
know that they are missing.

The error correction code has taken it from being a near certainty that
some blocks would be lost to less than 0.153%.

A simple error correction system would just take 32 blocks in sequence and
then compute 2 extra blocks.

The extra blocks would have to be the same length as the longest block in
the 32 being corrected.

The shorter blocks would be padded with zeroes so everything is the same
size.

For each byte position in the blocks you compute the polynomial that goes
through byte (x, data(x)), for x = 0 to 31.  This could be a finite field,
or just mod 257.

You can then compute the value for x=32 and x = 33.  Those are the values
for the 2 extra blocks.

If mod 257 is used, then only the 2 extra blocks have to deal with symbols
from 0 to 256.

If you have 32 of the 34 blocks, you can compute the polynomial and thus
generate the 32 actual blocks.

This could be achieved by a soft fork by having a commitment every 32
blocks in the coinbase.

It makes the header chain much longer though.

Longer sections are more efficient, but need more calculations to recover
everything.  You could also do interleaving to handle the case where entire
sections are missing.


On Thu, Apr 10, 2014 at 12:54 PM, Peter Todd <pete at petertodd.org> wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA512
>
>
>
> On 10 April 2014 07:50:55 GMT-04:00, Gregory Maxwell <gmaxwell at gmail.com>
> wrote:
> >(Just be glad I'm not suggesting coding the entire blockchain with an
> >error correcting code so that it doesn't matter which subset you're
> >holding)
>
> I forgot to ask last night: if you do that, can you add new blocks to the
> chain with the encoding incrementally?
> -----BEGIN PGP SIGNATURE-----
> Version: APG v1.1.1
>
> iQFQBAEBCgA6BQJTRoZ+MxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
> cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhYudCAC7ImifMnLIFHv1UifV
> zRxtDkx7UxIf9dncDAcrTIyKEDhoouh0TmoZl3HKQ3KUEETAVKsMzqXLgqVe6Ezr
> ny1bm0pQlkBCZFRwuZvmB27Y3mwC8PD6rT9ywtWzFjWd8PEg6/UaM547nQPw7ir0
> 27S3XMfE/BMiQWfWnWc/nqpbmJjd8x/dM3oiTG9SVZ7iNxotxAqfnW2X5tkhJb0q
> dAV08wpu6aZ5hTyLpvDxXDFjEG119HJeLkT9QVIrg+GBG55PYORqE4gQr6uhrF4L
> fGZS2EIlbk+kAiv0EjglQfxWM7KSRegplSASiKEOuX80tqLIsEugNh1em8qvG401
> NOAS
> =CWql
> -----END PGP SIGNATURE-----
>
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/1f9c48ef/attachment.html>

From prabahy at gmail.com  Thu Apr 10 18:19:05 2014
From: prabahy at gmail.com (Paul Rabahy)
Date: Thu, 10 Apr 2014 14:19:05 -0400
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <CAPg+sBg88Q1Ddwsvuk3-17wO=0DF7L1wtxx4mWUoiV1=cWKhEQ@mail.gmail.com>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>
	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>
	<CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>
	<CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>
	<CAADm4BDDJkS_xdjUn=2Yzs4B0RXTvpzpd5Z_kDRorzrn1HWSng@mail.gmail.com>
	<CANEZrP1rPZYkTLmx5GOdj67oQAgFjeaF-LCKAXpg5XsEhXYFuQ@mail.gmail.com>
	<CAADm4BB8y=k_f7CG3tyX6ruWF0w3+hU2Szv7ajLp1x7KhS56GA@mail.gmail.com>
	<CAPg+sBg88Q1Ddwsvuk3-17wO=0DF7L1wtxx4mWUoiV1=cWKhEQ@mail.gmail.com>
Message-ID: <CADu7o8PD4Wkgx_X_aOHXHe8UA-OE9v5YZ4boMrX7LDVu6agfpQ@mail.gmail.com>

You say UTXO commitments is "a strict reduction in security". If UTXO
commitments were rolled in as a soft fork, I do not see any new attacks
that could happen to a person trusting the committed UTXO + any remaining
blocks to catch up to the head.

I would imagine the soft fork to proceed similar to the following.
1. Miners begin including UTXO commitments.
2. Miners begin rejecting blocks with invalid UTXO commitments.
3. Miners begin rejecting blocks with no UTXO commitments.

To start up a fresh client it would follow the following.
1. Sync headers.
2. Pick a committed UTXO that is deep enough to not get orphaned.
3. Sync blocks from commitment to head.

I would argue that a client following this methodology is strictly more
secure than SPV, and I don't see any attacks that make it less secure than
a full client. It is obviously still susceptible to a 51% attack, but so is
the traditional block chain. I also do not see any sybil attacks that are
strengthened by this change because it is not modifying the networking code.

I guess if the soft fork happened, then miners began to not include the
UTXO commitment anymore, it would lower the overall network hash rate, but
this would be self-harming to the miners so they have an incentive to not
do it.

Please let me know if I have missed something.


On Thu, Apr 10, 2014 at 12:59 PM, Pieter Wuille <pieter.wuille at gmail.com>wrote:

>
> As this is a suggestion that I think I've seen come up once a month
> for the past 3 years, let's try to answer it thoroughly.
>
> The actual "state" of the blockchain is the UTXO set (stored in
> chainstate/ by the reference client). It's the set of all unspent
> transaction outputs at the currently active point in the block chain.
> It is all you need for validating future blocks.
>
> The problem is, you can't just give someone the UTXO set and expect
> them to trust it, as there is no way to prove that it was the result
> of processing the actual blocks.
>
> As Bitcoin's full node uses a "zero trust" model, where (apart from
> one detail: the order of otherwise valid transactions) it never
> assumes any data received from the outside it valid, it HAS to see the
> previous blocks in order to establish the validity of the current UTXO
> set. This is what initial block syncing does. Nothing but the actual
> blocks can provide this data, and it is why the actual blocks need to
> be available. It does not require everyone to have all blocks, though
> - they just need to have seen them during processing.
>
> A related, but not identical evolution is merkle UTXO commitments.
> This means that we shape the UTXO set as a merkle tree, compute its
> root after every block, and require that the block commits to this
> root hash (by putting it in the coinbase, for example). This means a
> full node can copy the chain state from someone else, and check that
> its hash matches what the block chain commits to. It's important to
> note that this is a strict reduction in security: we're now trusting
> that the longest chain (with most proof of work) commits to a valid
> UTXO set (at some point in the past).
>
> In essence, combining both ideas means you get "superblocks" (the UTXO
> set is essentially the summary of the result of all past blocks), in a
> way that is less-than-currently-but-perhaps-still-acceptably-validated.
>
> --
> Pieter
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/4ccbfd4d/attachment.html>

From pieter.wuille at gmail.com  Thu Apr 10 18:32:40 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Thu, 10 Apr 2014 20:32:40 +0200
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <CADu7o8PD4Wkgx_X_aOHXHe8UA-OE9v5YZ4boMrX7LDVu6agfpQ@mail.gmail.com>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>
	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>
	<CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>
	<CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>
	<CAADm4BDDJkS_xdjUn=2Yzs4B0RXTvpzpd5Z_kDRorzrn1HWSng@mail.gmail.com>
	<CANEZrP1rPZYkTLmx5GOdj67oQAgFjeaF-LCKAXpg5XsEhXYFuQ@mail.gmail.com>
	<CAADm4BB8y=k_f7CG3tyX6ruWF0w3+hU2Szv7ajLp1x7KhS56GA@mail.gmail.com>
	<CAPg+sBg88Q1Ddwsvuk3-17wO=0DF7L1wtxx4mWUoiV1=cWKhEQ@mail.gmail.com>
	<CADu7o8PD4Wkgx_X_aOHXHe8UA-OE9v5YZ4boMrX7LDVu6agfpQ@mail.gmail.com>
Message-ID: <CAPg+sBiRFJT6zC=7oMMzJuU-06oxgZ4Q-1kD+pCitw1JmAFs7Q@mail.gmail.com>

On Thu, Apr 10, 2014 at 8:19 PM, Paul Rabahy <prabahy at gmail.com> wrote:
> Please let me know if I have missed something.

A 51% attack can make you believe you were paid, while you weren't.

Full node security right now validates everything - there is no way
you can ever be made to believe something invalid. The only attacks
against it are about which version of valid history eventually gets
chosen.

If you trust hashrate for determining which UTXO set is valid, a 51%
attack becomes worse in that you can be made to believe a version of
history which is in fact invalid.

-- 
Pieter



From mark at monetize.io  Thu Apr 10 19:36:39 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Thu, 10 Apr 2014 12:36:39 -0700
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <CADu7o8PD4Wkgx_X_aOHXHe8UA-OE9v5YZ4boMrX7LDVu6agfpQ@mail.gmail.com>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>	<CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>	<CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>	<CAADm4BDDJkS_xdjUn=2Yzs4B0RXTvpzpd5Z_kDRorzrn1HWSng@mail.gmail.com>	<CANEZrP1rPZYkTLmx5GOdj67oQAgFjeaF-LCKAXpg5XsEhXYFuQ@mail.gmail.com>	<CAADm4BB8y=k_f7CG3tyX6ruWF0w3+hU2Szv7ajLp1x7KhS56GA@mail.gmail.com>	<CAPg+sBg88Q1Ddwsvuk3-17wO=0DF7L1wtxx4mWUoiV1=cWKhEQ@mail.gmail.com>
	<CADu7o8PD4Wkgx_X_aOHXHe8UA-OE9v5YZ4boMrX7LDVu6agfpQ@mail.gmail.com>
Message-ID: <5346F2C7.1050809@monetize.io>

You took the quote out of context:

"a full node can copy the chain state from someone else, and check that
its hash matches what the block chain commits to. It's important to
note that this is a strict reduction in security: we're now trusting
that the longest chain (with most proof of work) commits to a valid
UTXO set (at some point in the past)."

The described synchronization mechanism would be to determine the
most-work block header (SPV level of security!), and then sync the UTXO
set committed to within that block. This is strictly less security than
building the UTXO set yourself because it is susceptible to a 51% attack
which violates protocol rules.

On 04/10/2014 11:19 AM, Paul Rabahy wrote:
> You say UTXO commitments is "a strict reduction in security". If UTXO
> commitments were rolled in as a soft fork, I do not see any new attacks
> that could happen to a person trusting the committed UTXO + any
> remaining blocks to catch up to the head.
> 
> I would imagine the soft fork to proceed similar to the following.
> 1. Miners begin including UTXO commitments.
> 2. Miners begin rejecting blocks with invalid UTXO commitments.
> 3. Miners begin rejecting blocks with no UTXO commitments.
> 
> To start up a fresh client it would follow the following.
> 1. Sync headers.
> 2. Pick a committed UTXO that is deep enough to not get orphaned.
> 3. Sync blocks from commitment to head.
> 
> I would argue that a client following this methodology is strictly more
> secure than SPV, and I don't see any attacks that make it less secure
> than a full client. It is obviously still susceptible to a 51% attack,
> but so is the traditional block chain. I also do not see any sybil
> attacks that are strengthened by this change because it is not modifying
> the networking code.
> 
> I guess if the soft fork happened, then miners began to not include the
> UTXO commitment anymore, it would lower the overall network hash rate,
> but this would be self-harming to the miners so they have an incentive
> to not do it.
> 
> Please let me know if I have missed something.



From tier.nolan at gmail.com  Thu Apr 10 20:12:00 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Thu, 10 Apr 2014 21:12:00 +0100
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <CAPg+sBiRFJT6zC=7oMMzJuU-06oxgZ4Q-1kD+pCitw1JmAFs7Q@mail.gmail.com>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>
	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>
	<CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>
	<CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>
	<CAADm4BDDJkS_xdjUn=2Yzs4B0RXTvpzpd5Z_kDRorzrn1HWSng@mail.gmail.com>
	<CANEZrP1rPZYkTLmx5GOdj67oQAgFjeaF-LCKAXpg5XsEhXYFuQ@mail.gmail.com>
	<CAADm4BB8y=k_f7CG3tyX6ruWF0w3+hU2Szv7ajLp1x7KhS56GA@mail.gmail.com>
	<CAPg+sBg88Q1Ddwsvuk3-17wO=0DF7L1wtxx4mWUoiV1=cWKhEQ@mail.gmail.com>
	<CADu7o8PD4Wkgx_X_aOHXHe8UA-OE9v5YZ4boMrX7LDVu6agfpQ@mail.gmail.com>
	<CAPg+sBiRFJT6zC=7oMMzJuU-06oxgZ4Q-1kD+pCitw1JmAFs7Q@mail.gmail.com>
Message-ID: <CAE-z3OU0Y=ifGdaMKkSEJr38Rhq6pNfDeSUxF=ROiJ_0j3wh9Q@mail.gmail.com>

On Thu, Apr 10, 2014 at 7:32 PM, Pieter Wuille <pieter.wuille at gmail.com>wrote:

> If you trust hashrate for determining which UTXO set is valid, a 51%
> attack becomes worse in that you can be made to believe a version of
> history which is in fact invalid.
>

If there are invalidation proofs, then this isn't strictly true.

If you are connected to 10 nodes and only 1 is honest, it can send you the
proof that your main chain is invalid.

For bad scripts, it shows you the input transaction for the invalid input
along with the merkle path to prove it is in a previous block.

For double spends, it could show the transaction which spent the output.

Double spends are pretty much the same as trying to spend non-existent
outputs anyway.

If the UTXO set commit was actually a merkle tree, then all updates could
be included.

Blocks could have extra data with the proofs that the UTXO set is being
updated correctly.

To update the UTXO set, you need the paths for all spent inputs.

It puts a large load on miners to keep things working, since they have to
run a full node.

If they commit the data to the chain, then SPV nodes can do local checking.

One of them will find invalid blocks eventually (even if one of the other
miners don't).

>
> --
> Pieter
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/fc6c4fba/attachment.html>

From pieter.wuille at gmail.com  Thu Apr 10 20:29:40 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Thu, 10 Apr 2014 22:29:40 +0200
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <CAE-z3OU0Y=ifGdaMKkSEJr38Rhq6pNfDeSUxF=ROiJ_0j3wh9Q@mail.gmail.com>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>
	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>
	<CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>
	<CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>
	<CAADm4BDDJkS_xdjUn=2Yzs4B0RXTvpzpd5Z_kDRorzrn1HWSng@mail.gmail.com>
	<CANEZrP1rPZYkTLmx5GOdj67oQAgFjeaF-LCKAXpg5XsEhXYFuQ@mail.gmail.com>
	<CAADm4BB8y=k_f7CG3tyX6ruWF0w3+hU2Szv7ajLp1x7KhS56GA@mail.gmail.com>
	<CAPg+sBg88Q1Ddwsvuk3-17wO=0DF7L1wtxx4mWUoiV1=cWKhEQ@mail.gmail.com>
	<CADu7o8PD4Wkgx_X_aOHXHe8UA-OE9v5YZ4boMrX7LDVu6agfpQ@mail.gmail.com>
	<CAPg+sBiRFJT6zC=7oMMzJuU-06oxgZ4Q-1kD+pCitw1JmAFs7Q@mail.gmail.com>
	<CAE-z3OU0Y=ifGdaMKkSEJr38Rhq6pNfDeSUxF=ROiJ_0j3wh9Q@mail.gmail.com>
Message-ID: <CAPg+sBhNw9nL_dE3-GZA2Pwz-DKSE_igYgVjNdFL-vZdgW4SNw@mail.gmail.com>

On Thu, Apr 10, 2014 at 10:12 PM, Tier Nolan <tier.nolan at gmail.com> wrote:
> On Thu, Apr 10, 2014 at 7:32 PM, Pieter Wuille <pieter.wuille at gmail.com>
> wrote:
>>
>> If you trust hashrate for determining which UTXO set is valid, a 51%
>> attack becomes worse in that you can be made to believe a version of
>> history which is in fact invalid.
>
>
> If there are invalidation proofs, then this isn't strictly true.

I'm aware of fraud proofs, and they're a very cool idea. They allow
you to leverage some "herd immunity" in the system (assuming you'll be
told about invalid data you received without actually validating it).
However, they are certainly not the same thing as zero trust security
a fully validating node offers.

For example, a sybil attack that hides the actual best chain + fraud
proofs from you, plus being fed a chain that commits to an invalid
UTXO set.

There are many ideas that make attacks harder, and they're probably
good ideas to deploy, but there is little that achieves the security
of a full node. (well, perhaps a zero-knowledge proof of having run
the validation code against the claimed chain tip to produce the known
UTXO set...).
-- 
Pieter



From jcea at jcea.es  Thu Apr 10 21:34:29 2014
From: jcea at jcea.es (Jesus Cea)
Date: Thu, 10 Apr 2014 23:34:29 +0200
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <CAPg+sBg88Q1Ddwsvuk3-17wO=0DF7L1wtxx4mWUoiV1=cWKhEQ@mail.gmail.com>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>	<CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>	<CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>	<CAADm4BDDJkS_xdjUn=2Yzs4B0RXTvpzpd5Z_kDRorzrn1HWSng@mail.gmail.com>	<CANEZrP1rPZYkTLmx5GOdj67oQAgFjeaF-LCKAXpg5XsEhXYFuQ@mail.gmail.com>	<CAADm4BB8y=k_f7CG3tyX6ruWF0w3+hU2Szv7ajLp1x7KhS56GA@mail.gmail.com>
	<CAPg+sBg88Q1Ddwsvuk3-17wO=0DF7L1wtxx4mWUoiV1=cWKhEQ@mail.gmail.com>
Message-ID: <53470E65.5080402@jcea.es>

On 10/04/14 18:59, Pieter Wuille wrote:
> It's important to
> note that this is a strict reduction in security: we're now trusting
> that the longest chain (with most proof of work) commits to a valid
> UTXO set (at some point in the past).

AFAIK, current bitcoin code code already set blockchain checkpoints from
time to time. It is a garanteed that a longer chain starting before the
checkpoint is not going to be accepted suddently. See
<https://bitcointalk.org/index.php?topic=194078.0>.

Could be perfectly valid to store only unspend wallets before last
checkpoint, if during the blockchain download the node did all the checks.

Would be interesting, of course, to be able to verify "unspend wallet
accounting" having only that checkpoint data (the merkle tree can do
that, I guess). So you could detect a data corruption or manipulation in
your local harddisk.

-- 
Jes?s Cea Avi?n                         _/_/      _/_/_/        _/_/_/
jcea at jcea.es - http://www.jcea.es/     _/_/    _/_/  _/_/    _/_/  _/_/
Twitter: @jcea                        _/_/    _/_/          _/_/_/_/_/
jabber / xmpp:jcea at jabber.org  _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 538 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140410/7e5e4f38/attachment.sig>

From mark at monetize.io  Thu Apr 10 22:15:15 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Thu, 10 Apr 2014 15:15:15 -0700
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <53470E65.5080402@jcea.es>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>	<CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>	<CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>	<CAADm4BDDJkS_xdjUn=2Yzs4B0RXTvpzpd5Z_kDRorzrn1HWSng@mail.gmail.com>	<CANEZrP1rPZYkTLmx5GOdj67oQAgFjeaF-LCKAXpg5XsEhXYFuQ@mail.gmail.com>	<CAADm4BB8y=k_f7CG3tyX6ruWF0w3+hU2Szv7ajLp1x7KhS56GA@mail.gmail.com>	<CAPg+sBg88Q1Ddwsvuk3-17wO=0DF7L1wtxx4mWUoiV1=cWKhEQ@mail.gmail.com>
	<53470E65.5080402@jcea.es>
Message-ID: <534717F3.6@monetize.io>

Checkpoints will go away, eventually.

On 04/10/2014 02:34 PM, Jesus Cea wrote:
> On 10/04/14 18:59, Pieter Wuille wrote:
>> It's important to
>> note that this is a strict reduction in security: we're now trusting
>> that the longest chain (with most proof of work) commits to a valid
>> UTXO set (at some point in the past).
> 
> AFAIK, current bitcoin code code already set blockchain checkpoints from
> time to time. It is a garanteed that a longer chain starting before the
> checkpoint is not going to be accepted suddently. See
> <https://bitcointalk.org/index.php?topic=194078.0>.
> 
> Could be perfectly valid to store only unspend wallets before last
> checkpoint, if during the blockchain download the node did all the checks.
> 
> Would be interesting, of course, to be able to verify "unspend wallet
> accounting" having only that checkpoint data (the merkle tree can do
> that, I guess). So you could detect a data corruption or manipulation in
> your local harddisk.
> 
> 
> 
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment 
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> 
> 
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From jcea at jcea.es  Thu Apr 10 22:24:53 2014
From: jcea at jcea.es (Jesus Cea)
Date: Fri, 11 Apr 2014 00:24:53 +0200
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <534717F3.6@monetize.io>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>	<CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>	<CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>	<CAADm4BDDJkS_xdjUn=2Yzs4B0RXTvpzpd5Z_kDRorzrn1HWSng@mail.gmail.com>	<CANEZrP1rPZYkTLmx5GOdj67oQAgFjeaF-LCKAXpg5XsEhXYFuQ@mail.gmail.com>	<CAADm4BB8y=k_f7CG3tyX6ruWF0w3+hU2Szv7ajLp1x7KhS56GA@mail.gmail.com>	<CAPg+sBg88Q1Ddwsvuk3-17wO=0DF7L1wtxx4mWUoiV1=cWKhEQ@mail.gmail.com>	<53470E65.5080402@jcea.es>
	<534717F3.6@monetize.io>
Message-ID: <53471A35.3040805@jcea.es>

On 11/04/14 00:15, Mark Friedenbach wrote:
> Checkpoints will go away, eventually.

Why?. The points in the forum thread seem pretty sensible.

-- 
Jes?s Cea Avi?n                         _/_/      _/_/_/        _/_/_/
jcea at jcea.es - http://www.jcea.es/     _/_/    _/_/  _/_/    _/_/  _/_/
Twitter: @jcea                        _/_/    _/_/          _/_/_/_/_/
jabber / xmpp:jcea at jabber.org  _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 538 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140411/54c02f6c/attachment.sig>

From gmaxwell at gmail.com  Thu Apr 10 22:33:36 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Thu, 10 Apr 2014 15:33:36 -0700
Subject: [Bitcoin-development] Chain pruning
In-Reply-To: <53471A35.3040805@jcea.es>
References: <CANEZrP04O7EqB=TqyTiC7O1K2A9R0nKJ_ssANHKg=Byum8-LtA@mail.gmail.com>
	<CA+s+GJDbYjwhpsV15a+7kCO_vTstEewVrwvqbnB=a5zOSwFC6Q@mail.gmail.com>
	<CAAS2fgStmEpiUV4Yh-qqu6sZ+VZ5SiQPwp+QA=3X5zR52ia3OA@mail.gmail.com>
	<CA+s+GJBxEC2MifJQY5-vn2zSOHo-UOm8B1vYHHOfuxq26=VscQ@mail.gmail.com>
	<CAADm4BDDJkS_xdjUn=2Yzs4B0RXTvpzpd5Z_kDRorzrn1HWSng@mail.gmail.com>
	<CANEZrP1rPZYkTLmx5GOdj67oQAgFjeaF-LCKAXpg5XsEhXYFuQ@mail.gmail.com>
	<CAADm4BB8y=k_f7CG3tyX6ruWF0w3+hU2Szv7ajLp1x7KhS56GA@mail.gmail.com>
	<CAPg+sBg88Q1Ddwsvuk3-17wO=0DF7L1wtxx4mWUoiV1=cWKhEQ@mail.gmail.com>
	<53470E65.5080402@jcea.es> <534717F3.6@monetize.io>
	<53471A35.3040805@jcea.es>
Message-ID: <CAAS2fgR6LkFzJQ+SKwyBQam3XWkKhrJpnGpvofhDOFASXdhmQQ@mail.gmail.com>

On Thu, Apr 10, 2014 at 3:24 PM, Jesus Cea <jcea at jcea.es> wrote:
> On 11/04/14 00:15, Mark Friedenbach wrote:
>> Checkpoints will go away, eventually.
> Why?. The points in the forum thread seem pretty sensible.

Because with headers first synchronization the major problems that
they solve? e.g. block flooding DOS attacks, weak chain isolation, and
checking shortcutting can be addressed in other more efficient ways
that don't result in putting trust in third parties.

They also cause really severe confusion about the security model.

Instead you can embed in software knoweldge that the longest chain is
"at least this long" to prevent isolation attacks, which is a lot
simpler and less trusting.  You can also do randomized validation of
the deeply burried old history for performance, instead of constantly
depending on 'trusted parties' to update software or it gets slower
over time, and locally save your own validation fingerprints so if you
need to reinitilize data you can remember what you've check so far by
hash.



From nikita at megiontechnologies.com  Thu Apr 10 22:31:59 2014
From: nikita at megiontechnologies.com (Nikita Schmidt)
Date: Fri, 11 Apr 2014 02:31:59 +0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <16848732.PiyLLsBBZa@crushinator>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<6669921.kYEqrMqt0u@crushinator>
	<CAAS2fgSfiYwD-M7+k65JF0Kjeod1zEiPcxPN1iDBHLzYV7UQyA@mail.gmail.com>
	<16848732.PiyLLsBBZa@crushinator>
Message-ID: <CAC7yFxR7XWtFSMeHgbMZOMKbr+kK_7Ezb7zBUQP08rfC0am9sQ@mail.gmail.com>

> What do you think a big-integer division by a word-sized divisor *is*? Obviously rolling your own is always an option. Are you just saying that Base58 encoding and decoding is easier than Shamir's Secret Sharing because the divisors are small?

Well, yes, to be fair, in fact it is.  The small divisor and lack of
modulo arithmetic make base-58 encoding and decoding noticeably
smaller and easier than Shamir's Secret Sharing over GF(P256).



From flavien.charlon at coinprism.com  Fri Apr 11 12:51:10 2014
From: flavien.charlon at coinprism.com (Flavien Charlon)
Date: Fri, 11 Apr 2014 13:51:10 +0100
Subject: [Bitcoin-development] Feedback request: colored coins protocol
In-Reply-To: <CAE28kUSWwamovgPA1AvAojoKuwaDvuWzbnYf6yJhQ89HRnOJGg@mail.gmail.com>
References: <CABbpET96CboPcQeV-nKXv-CeaPiwpTKVUB_ioGPB2s3_5Y7bnQ@mail.gmail.com>
	<5341E1FF.7080204@monetize.io>
	<CABbpET_JFceNhRkxSZMyiTxkkYr2MvQVob7o4juEsPj4wo8e8g@mail.gmail.com>
	<CAC1+kJMpEetKdpKs-OaFGvnBwi6-Pj8ycJ77cJzHOTk_jUPw=g@mail.gmail.com>
	<CABbpET-S5ahuQVcBaJZGyvFMS1=RU2mJZUAmECBKhFOFu6B6EA@mail.gmail.com>
	<5342BEE0.3050204@monetize.io>
	<CABbpET8Qbvhb47ZJX4EVh4673_ic9UwpMdMyZbsHay9F2zTj9Q@mail.gmail.com>
	<CAC1+kJPBH85p8Mgu0_7+1JxizgX19a-HWWF+38BLA7DZ4Ldd6g@mail.gmail.com>
	<CABbpET8DaEKbafX6Cju_e+ygeV1WDf_LXQKU6tTofh32R9XM=Q@mail.gmail.com>
	<CAE28kURu7-OgY6vN0az6rQUGpChK76ZQL9_eL1J4j-HZOqhRYA@mail.gmail.com>
	<CABbpET93YxPepKLHFKKabr6P7vpkRDOouVuo8zmWAf3FKc85Cg@mail.gmail.com>
	<5346CDD4.8050206@monetize.io>
	<CAE28kUSWwamovgPA1AvAojoKuwaDvuWzbnYf6yJhQ89HRnOJGg@mail.gmail.com>
Message-ID: <CABbpET_bP5tgXBzOCoEaO3iQof4A5tFF1-BxO4JYHrvKN-TU_A@mail.gmail.com>

I have updated the
spec<https://github.com/Flavien/colored-coins-protocol/blob/master/specification.mediawiki>
.

> This is an interesting approach, but OP_RETURN size limitations can be a
significant problem for some kinds of applications.

This is correct, the number of colored outputs you can have per transaction
is limited by OP_RETURN's 40 bytes. We use a compact format
(LEB128<http://en.wikipedia.org/wiki/LEB128>)
for the asset quantity of each output to mitigate that. Assuming you're
transferring small amounts of colored coins, you could have up to about 30
colored ouputs.

It should work for a decentralized exchange (you only really need 2 or 3
colored outputs). Applications like sending dividends in colored coins
however may require splitting into several smaller transactions, but I
believe that's an acceptable limitation.


On Thu, Apr 10, 2014 at 6:24 PM, Alex Mizrahi <alex.mizrahi at gmail.com>wrote:

>
>
>>  At this point, I don't think what you are doing is even colored coins
>> anymore. You might want to look into Counterparty or Mastercoin.
>>
>
> Nope, it's still colored coins. The difference between colored coin model
> and Mastercoin model is that colored coins are linked to transaction
> outputs, while Mastercoin has a notion of address balances.
>
> The implications of this is that in colored coin model explicit
> dependencies allow us to rely on SPV. (Assuming that one can fetch the
> dependency graph to link txout in question to genesis.)
> While it is not the case with Mastercoin.
>
> While it's pretty far from the original colored coins model, what Flavien
> have described is identical to it in majority of aspects.
>
> This is an interesting approach, but OP_RETURN size limitations can be a
> significant problem for some kinds of applications.
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140411/e5f3036b/attachment.html>

From gmaxwell at gmail.com  Fri Apr 11 16:54:44 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Fri, 11 Apr 2014 09:54:44 -0700
Subject: [Bitcoin-development] Bitcoind-in-background mode for SPV
	wallets
In-Reply-To: <CAE-z3OV4w+vQ0b6h9E+7cSyxkKENduyfHenhdF3q3-0i2chnGQ@mail.gmail.com>
References: <CA+s+GJCn9U2kmyMH6w3o+m99NCfO0ws=SccvGBYJv07WVuF=eA@mail.gmail.com>
	<CAAt2M18z_Qkqat1OETiXAz0QQey4+y5J6=pC7nkoJfyfrpj3=A@mail.gmail.com>
	<CAAS2fgScWkentFy7Ak0bpYVLsOFL+xkwPm5QRu9ENeX9oCtPug@mail.gmail.com>
	<534570A2.9090502@gmx.de>
	<CA+s+GJAXu3SEXFDDwi85dNFjO2rfPXJrg-aKHYwbogAHfu3vfQ@mail.gmail.com>
	<0B038624-8861-438E-B7B1-566B4A8E126B@bitsofproof.com>
	<CA+s+GJCQSCUyq7Ajv0EgZ8Vbcv4Xt7G-y_8D12fsoKjyFjnhwg@mail.gmail.com>
	<CAPg+sBjWL_hKhWW-6i=WAHnx+Ue5JE=A9RrxnWuAYOXw19qiDw@mail.gmail.com>
	<CAAS2fgTkgddRGGXuuAza-A=Dgjfr5aNF8yxDePPixN4M7Rbpyg@mail.gmail.com>
	<c3726067-5a9f-45b9-b798-1070bdde2ac4@email.android.com>
	<CAE-z3OV4w+vQ0b6h9E+7cSyxkKENduyfHenhdF3q3-0i2chnGQ@mail.gmail.com>
Message-ID: <CAAS2fgS3cU4-yJMSMA4TSY4_mrw53d--543OVmize2BYVjUAqQ@mail.gmail.com>

On Thu, Apr 10, 2014 at 10:30 AM, Tier Nolan <tier.nolan at gmail.com> wrote:
> Error correction is an interesting suggestion.

Though I mentioned it, it was in jest? I think right now it would be
an over-design at least for the basic protocol.  Also, storing
'random' blocks has some locality problems, when verifying blocks you
need to obtain them contiguously, and so we can take advantage of the
locality of reference.  For the non-error-coded case I believe nodes
with random spans of blocks works out asymptotically to the same
failure rates as random.

One thing that I like to point out is that there is absolutely no need
for the entire network to use the same p2p protocol. Diversity here
would be very good.  I think it would be really good for someone to
have an alternative p2p protocol using these techniques even though I
think they aren't yet compelling enough to be table stakes in the
basic protocol.

There are some very helpful things you can do with forward error
correction for faster and more efficient block relaying too:
https://en.bitcoin.it/wiki/User:Gmaxwell/block_network_coding

(The conversation Peter Todd was referring to was one where I was
pointing out that with suitable error coding you also get an
anti-censorship effect where its very difficult to provide part of the
data without potentially providing all of it)

> If there was 10000 nodes and each stored 0.1% of the blocks, at random, then
> the odds of a block not being stored is 45 in a million.

I think in the network we have today and for the foreseeable future we
can reasonably count on there being a reasonable number of nodes that
store all the blocks... quite likely not enough to satisfy the
historical block demand from the network alone, but easily enough to
supply blocks that have otherwise gone missing.



From bitcoin at olivere.de  Sat Apr 12 14:26:07 2014
From: bitcoin at olivere.de (Oliver Egginger)
Date: Sat, 12 Apr 2014 16:26:07 +0200
Subject: [Bitcoin-development] Ubuntu LTS Packaging?
Message-ID: <53494CFF.1030303@olivere.de>

Hello,

so far, nothing yet?

See: https://launchpad.net/~bitcoin/

I'm developing currently a LiveCD for hot/cold wallet management on
Ubuntu LTS basis. For critical vulnerabilities I have to provide timely
updates. I have now decided to maintain my own repository for this
project. If there are better alternatives, let me know.

regards
Oliver



From laanwj at gmail.com  Sat Apr 12 14:35:21 2014
From: laanwj at gmail.com (Wladimir)
Date: Sat, 12 Apr 2014 16:35:21 +0200
Subject: [Bitcoin-development] Ubuntu LTS Packaging?
In-Reply-To: <53494CFF.1030303@olivere.de>
References: <53494CFF.1030303@olivere.de>
Message-ID: <CA+s+GJB9ShVPZx0zBSaBWkFGwd=Tru5xgoJxg-Kb=qX-zV1xng@mail.gmail.com>

On Sat, Apr 12, 2014 at 4:26 PM, Oliver Egginger <bitcoin at olivere.de> wrote:

> Hello,
>
> so far, nothing yet?
>
> See: https://launchpad.net/~bitcoin/
>

Well, the only change in 0.9.1 is the dependency version of OpenSSL that is
used in the binary gitian builds.

However, the PPA build, which happens on the Ubuntu build server, simply
uses the operating system OpenSSL. So if you upgrade that you should be OK.

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140412/3faa43e2/attachment.html>

From luke at dashjr.org  Sat Apr 12 14:43:58 2014
From: luke at dashjr.org (Luke-Jr)
Date: Sat, 12 Apr 2014 14:43:58 +0000
Subject: [Bitcoin-development] Ubuntu LTS Packaging?
In-Reply-To: <53494CFF.1030303@olivere.de>
References: <53494CFF.1030303@olivere.de>
Message-ID: <201404121444.00583.luke@dashjr.org>

On Saturday, April 12, 2014 2:26:07 PM Oliver Egginger wrote:
> Hello,
> 
> so far, nothing yet?
> 
> See: https://launchpad.net/~bitcoin/
> 
> I'm developing currently a LiveCD for hot/cold wallet management on
> Ubuntu LTS basis. For critical vulnerabilities I have to provide timely
> updates. I have now decided to maintain my own repository for this
> project. If there are better alternatives, let me know.

This mailing list is for development, not support.

The PPA you linked has 0.9.0, which is the latest relevant version for 
packaging.

Luke



From bitcoin-list at bluematt.me  Sat Apr 12 15:34:46 2014
From: bitcoin-list at bluematt.me (Matt Corallo)
Date: Sat, 12 Apr 2014 11:34:46 -0400
Subject: [Bitcoin-development] Ubuntu LTS Packaging?
In-Reply-To: <53494CFF.1030303@olivere.de>
References: <53494CFF.1030303@olivere.de>
Message-ID: <1fe5b0bb-c2f4-4edf-99c3-4305498418bc@email.android.com>

Hmm? It's up to date... 0.9.1 doesn't change anything for dynamically-linked-to-openssl builds.

Matt

On April 12, 2014 10:26:07 AM EDT, Oliver Egginger <bitcoin at olivere.de> wrote:
>Hello,
>
>so far, nothing yet?
>
>See: https://launchpad.net/~bitcoin/
>
>I'm developing currently a LiveCD for hot/cold wallet management on
>Ubuntu LTS basis. For critical vulnerabilities I have to provide timely
>updates. I have now decided to maintain my own repository for this
>project. If there are better alternatives, let me know.
>
>regards
>Oliver
>
>------------------------------------------------------------------------------
>Put Bad Developers to Shame
>Dominate Development with Jenkins Continuous Integration
>Continuously Automate Build, Test & Deployment 
>Start a new project now. Try Jenkins in the cloud.
>http://p.sf.net/sfu/13600_Cloudbees
>_______________________________________________
>Bitcoin-development mailing list
>Bitcoin-development at lists.sourceforge.net
>https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140412/5de6dcad/attachment.html>

From bitcoin at olivere.de  Sat Apr 12 16:33:16 2014
From: bitcoin at olivere.de (Oliver Egginger)
Date: Sat, 12 Apr 2014 18:33:16 +0200
Subject: [Bitcoin-development] Ubuntu LTS Packaging?
In-Reply-To: <1fe5b0bb-c2f4-4edf-99c3-4305498418bc@email.android.com>
References: <53494CFF.1030303@olivere.de>
	<1fe5b0bb-c2f4-4edf-99c3-4305498418bc@email.android.com>
Message-ID: <53496ACC.2070501@olivere.de>

Am 12.04.2014 17:34, schrieb Matt Corallo:
> Hmm? It's up to date... 0.9.1 doesn't change anything for
> dynamically-linked-to-openssl builds.
> 

Okay, my mistake. Sorry to trouble you, but good to know that you are here.

regards
Oliver




From bip at mattwhitlock.name  Tue Apr 15 15:00:36 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Tue, 15 Apr 2014 11:00:36 -0400
Subject: [Bitcoin-development] Bug in 2-of-3 transaction signing in Bitcoind?
Message-ID: <1756895.gV83Q4MX2a@crushinator>

For the life of me, I cannot figure out what's wrong with this. It seems like Bitcoind has lost its mind. I'm trying to redeem a 2-of-3 multisig P2SH output using a raw transaction.


Here's the address that the P2SH output was sent to:

$ bitcoind createmultisig 2 '["03566474f987a012a69a08097253394ebd681454df29c3f1fb0495a5b45490f928", "03927407ca158155d0d30366395ca9cdc7d93cfa0a5b22181374431c15aae7b358", "02cff98aba464f5d4ebac5e6417f142326235f5a0a59708ba6231471cce4ee0747"]'
{
    "address" : "33snuCcVUmn9iBG345keJRzMfVwz7Uo87C",
    "redeemScript" : "522103566474f987a012a69a08097253394ebd681454df29c3f1fb0495a5b45490f9282103927407ca158155d0d30366395ca9cdc7d93cfa0a5b22181374431c15aae7b3582102cff98aba464f5d4ebac5e6417f142326235f5a0a59708ba6231471cce4ee074753ae"
}


The transaction containing the output is ec7d985ae265a3a79c68d852e0e52cf4177c3362d7a25fb718be82f980f39285. It's the second output.


So I ask Bitcoind to create a raw transaction to spend the output:

$ bitcoind createrawtransaction '[{"txid":"ec7d985ae265a3a79c68d852e0e52cf4177c3362d7a25fb718be82f980f39285", "vout":1}]' '{"19YNEu4ZqX3nU9rJMuMcDy3pzFhactZPmk":0.00050000, "1J2qtR7HBbE4rkNAgZCo4hZUEd2Z4jtSgz":0.00040000}'
01000000018592f380f982be18b75fa2d762337c17f42ce5e052d8689ca7a365e25a987dec0100000000ffffffff0250c30000000000001976a9145dafa18ab21debe3d20f2c39e88d630f822bd29e88ac409c0000000000001976a914bad35cd767b657daa4a735b32e3d1f1dab52872d88ac00000000


And here is the decoded transaction, for completeness:

$ bitcoind decoderawtransaction 01000000018592f380f982be18b75fa2d762337c17f42ce5e052d8689ca7a365e25a987dec0100000000ffffffff0250c30000000000001976a9145dafa18ab21debe3d20f2c39e88d630f822bd29e88ac409c0000000000001976a914bad35cd767b657daa4a735b32e3d1f1dab52872d88ac00000000
{
    "txid" : "8d731e6e333d805f6c8b569e1a608d14127d61d3123b699355133b2c757c16fb",
    "version" : 1,
    "locktime" : 0,
    "vin" : [
        {
            "txid" : "ec7d985ae265a3a79c68d852e0e52cf4177c3362d7a25fb718be82f980f39285",
            "vout" : 1,
            "scriptSig" : {
                "asm" : "",
                "hex" : ""
            },
            "sequence" : 4294967295
        }
    ],
    "vout" : [
        {
            "value" : 0.00050000,
            "n" : 0,
            "scriptPubKey" : {
                "asm" : "OP_DUP OP_HASH160 5dafa18ab21debe3d20f2c39e88d630f822bd29e OP_EQUALVERIFY OP_CHECKSIG",
                "hex" : "76a9145dafa18ab21debe3d20f2c39e88d630f822bd29e88ac",
                "reqSigs" : 1,
                "type" : "pubkeyhash",
                "addresses" : [
                    "19YNEu4ZqX3nU9rJMuMcDy3pzFhactZPmk"
                ]
            }
        },
        {
            "value" : 0.00040000,
            "n" : 1,
            "scriptPubKey" : {
                "asm" : "OP_DUP OP_HASH160 bad35cd767b657daa4a735b32e3d1f1dab52872d OP_EQUALVERIFY OP_CHECKSIG",
                "hex" : "76a914bad35cd767b657daa4a735b32e3d1f1dab52872d88ac",
                "reqSigs" : 1,
                "type" : "pubkeyhash",
                "addresses" : [
                    "1J2qtR7HBbE4rkNAgZCo4hZUEd2Z4jtSgz"
                ]
            }
        }
    ]
}


Now I'll sign the transaction with 2 of 3 keys:

$ bitcoind signrawtransaction 01000000018592f380f982be18b75fa2d762337c17f42ce5e052d8689ca7a365e25a987dec0100000000ffffffff0250c30000000000001976a9145dafa18ab21debe3d20f2c39e88d630f822bd29e88ac409c0000000000001976a914bad35cd767b657daa4a735b32e3d1f1dab52872d88ac00000000 '[{"txid":"ec7d985ae265a3a79c68d852e0e52cf4177c3362d7a25fb718be82f980f39285", "vout":1, "scriptPubKey":"a91417f9f4ba5c2f2b9334805f91bbbf90a19aaa3d5687", "redeemScript":"522103566474f987a012a69a08097253394ebd681454df29c3f1fb0495a5b45490f9282103927407ca158155d0d30366395ca9cdc7d93cfa0a5b22181374431c15aae7b3582102cff98aba464f5d4ebac5e6417f142326235f5a0a59708ba6231471cce4ee074753ae"}]' '["Ky7EQeg71YHeftLc31tt8AoNSezFEgUCbvwYak1eKksg6gQww6FF", "KxAXrjTMZJN1Egqkckdz9TXyB2kyJ68wu7CiJk6Rygmr9zv2nScG"]'
{
    "hex" : "01000000018592f380f982be18b75fa2d762337c17f42ce5e052d8689ca7a365e25a987dec01000000fc004730440220781ae7e3e309289f53cc2c4016adfb5a1d0081157d4366b9f77f0358b7aeccbb022009c7297f60088b1815d6970c8e246e6b516ff8fce5e85de209004d8cc29e460201473044022018a23405ca72c52222577f78c2356bdb8ba36259edb1320b90e2c31188e6317602201972db07bf5ef8e30221d3707ce6eb7ab748527ec8e7ca14241350920f03257f014c69522103566474f987a012a69a08097253394ebd681454df29c3f1fb0495a5b45490f9282103927407ca158155d0d30366395ca9cdc7d93cfa0a5b22181374431c15aae7b3582102cff98aba464f5d4ebac5e6417f142326235f5a0a59708ba6231471cce4ee074753aeffffffff0250c30000000000001976a9145dafa18ab21debe3d20f2c39e88d630f822bd29e88ac409c0000000000001976a914bad35cd767b657daa4a735b32e3d1f1dab52872d88ac00000000",
    "complete" : true
}


And here's the decode of the signed transaction:

$ bitcoind decoderawtransaction 01000000018592f380f982be18b75fa2d762337c17f42ce5e052d8689ca7a365e25a987dec01000000fc004730440220781ae7e3e309289f53cc2c4016adfb5a1d0081157d4366b9f77f0358b7aeccbb022009c7297f60088b1815d6970c8e246e6b516ff8fce5e85de209004d8cc29e460201473044022018a23405ca72c52222577f78c2356bdb8ba36259edb1320b90e2c31188e6317602201972db07bf5ef8e30221d3707ce6eb7ab748527ec8e7ca14241350920f03257f014c69522103566474f987a012a69a08097253394ebd681454df29c3f1fb0495a5b45490f9282103927407ca158155d0d30366395ca9cdc7d93cfa0a5b22181374431c15aae7b3582102cff98aba464f5d4ebac5e6417f142326235f5a0a59708ba6231471cce4ee074753aeffffffff0250c30000000000001976a9145dafa18ab21debe3d20f2c39e88d630f822bd29e88ac409c0000000000001976a914bad35cd767b657daa4a735b32e3d1f1dab52872d88ac00000000
{
    "txid" : "a01bff867229de4bb622b0ebdd8cd293d6b9ad2fb576612974ae89ed5798eb3e",
    "version" : 1,
    "locktime" : 0,
    "vin" : [
        {
            "txid" : "ec7d985ae265a3a79c68d852e0e52cf4177c3362d7a25fb718be82f980f39285",
            "vout" : 1,
            "scriptSig" : {
                "asm" : "0 30440220781ae7e3e309289f53cc2c4016adfb5a1d0081157d4366b9f77f0358b7aeccbb022009c7297f60088b1815d6970c8e246e6b516ff8fce5e85de209004d8cc29e460201 3044022018a23405ca72c52222577f78c2356bdb8ba36259edb1320b90e2c31188e6317602201972db07bf5ef8e30221d3707ce6eb7ab748527ec8e7ca14241350920f03257f01 522103566474f987a012a69a08097253394ebd681454df29c3f1fb0495a5b45490f9282103927407ca158155d0d30366395ca9cdc7d93cfa0a5b22181374431c15aae7b3582102cff98aba464f5d4ebac5e6417f142326235f5a0a59708ba6231471cce4ee074753ae",
                "hex" : "004730440220781ae7e3e309289f53cc2c4016adfb5a1d0081157d4366b9f77f0358b7aeccbb022009c7297f60088b1815d6970c8e246e6b516ff8fce5e85de209004d8cc29e460201473044022018a23405ca72c52222577f78c2356bdb8ba36259edb1320b90e2c31188e6317602201972db07bf5ef8e30221d3707ce6eb7ab748527ec8e7ca14241350920f03257f014c69522103566474f987a012a69a08097253394ebd681454df29c3f1fb0495a5b45490f9282103927407ca158155d0d30366395ca9cdc7d93cfa0a5b22181374431c15aae7b3582102cff98aba464f5d4ebac5e6417f142326235f5a0a59708ba6231471cce4ee074753ae"
            },
            "sequence" : 4294967295
        }
    ],
    "vout" : [
        {
            "value" : 0.00050000,
            "n" : 0,
            "scriptPubKey" : {
                "asm" : "OP_DUP OP_HASH160 5dafa18ab21debe3d20f2c39e88d630f822bd29e OP_EQUALVERIFY OP_CHECKSIG",
                "hex" : "76a9145dafa18ab21debe3d20f2c39e88d630f822bd29e88ac",
                "reqSigs" : 1,
                "type" : "pubkeyhash",
                "addresses" : [
                    "19YNEu4ZqX3nU9rJMuMcDy3pzFhactZPmk"
                ]
            }
        },
        {
            "value" : 0.00040000,
            "n" : 1,
            "scriptPubKey" : {
                "asm" : "OP_DUP OP_HASH160 bad35cd767b657daa4a735b32e3d1f1dab52872d OP_EQUALVERIFY OP_CHECKSIG",
                "hex" : "76a914bad35cd767b657daa4a735b32e3d1f1dab52872d88ac",
                "reqSigs" : 1,
                "type" : "pubkeyhash",
                "addresses" : [
                    "1J2qtR7HBbE4rkNAgZCo4hZUEd2Z4jtSgz"
                ]
            }
        }
    ]
}


And now I'll try to transmit the transaction to the network:

$ bitcoind sendrawtransaction 01000000018592f380f982be18b75fa2d762337c17f42ce5e052d8689ca7a365e25a987dec01000000fc004730440220781ae7e3e309289f53cc2c4016adfb5a1d0081157d4366b9f77f0358b7aeccbb022009c7297f60088b1815d6970c8e246e6b516ff8fce5e85de209004d8cc29e460201473044022018a23405ca72c52222577f78c2356bdb8ba36259edb1320b90e2c31188e6317602201972db07bf5ef8e30221d3707ce6eb7ab748527ec8e7ca14241350920f03257f014c69522103566474f987a012a69a08097253394ebd681454df29c3f1fb0495a5b45490f9282103927407ca158155d0d30366395ca9cdc7d93cfa0a5b22181374431c15aae7b3582102cff98aba464f5d4ebac5e6417f142326235f5a0a59708ba6231471cce4ee074753aeffffffff0250c30000000000001976a9145dafa18ab21debe3d20f2c39e88d630f822bd29e88ac409c0000000000001976a914bad35cd767b657daa4a735b32e3d1f1dab52872d88ac00000000
error: {"code":-22,"message":"TX rejected"}


Whoops!

So, what gives?



From mike at plan99.net  Tue Apr 15 15:05:53 2014
From: mike at plan99.net (Mike Hearn)
Date: Tue, 15 Apr 2014 17:05:53 +0200
Subject: [Bitcoin-development] Bug in 2-of-3 transaction signing in
	Bitcoind?
In-Reply-To: <1756895.gV83Q4MX2a@crushinator>
References: <1756895.gV83Q4MX2a@crushinator>
Message-ID: <CANEZrP1mgKRL9GTFtsokXv92LfDhOHR6uZ=KKn4RSopQpUc_Tw@mail.gmail.com>

Check debug.log to find out the reason it was rejected.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140415/d2341c96/attachment.html>

From pieter.wuille at gmail.com  Tue Apr 15 15:11:40 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Tue, 15 Apr 2014 17:11:40 +0200
Subject: [Bitcoin-development] Bug in 2-of-3 transaction signing in
	Bitcoind?
In-Reply-To: <CANEZrP1mgKRL9GTFtsokXv92LfDhOHR6uZ=KKn4RSopQpUc_Tw@mail.gmail.com>
References: <1756895.gV83Q4MX2a@crushinator>
	<CANEZrP1mgKRL9GTFtsokXv92LfDhOHR6uZ=KKn4RSopQpUc_Tw@mail.gmail.com>
Message-ID: <CAPg+sBgHZcdjRM+-UbSzuATBjj=yfBcqDMih+tAOYKBs=dLfWQ@mail.gmail.com>

The first input seems to be already spent by another transaction
(which looks very similar).

0.9 should report a more detailed reason for rejection, by the way.



On Tue, Apr 15, 2014 at 5:05 PM, Mike Hearn <mike at plan99.net> wrote:
> Check debug.log to find out the reason it was rejected.
>
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From bip at mattwhitlock.name  Tue Apr 15 15:22:17 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Tue, 15 Apr 2014 11:22:17 -0400
Subject: [Bitcoin-development] Bug in 2-of-3 transaction signing in
	Bitcoind?
In-Reply-To: <CAPg+sBgHZcdjRM+-UbSzuATBjj=yfBcqDMih+tAOYKBs=dLfWQ@mail.gmail.com>
References: <1756895.gV83Q4MX2a@crushinator>
	<CANEZrP1mgKRL9GTFtsokXv92LfDhOHR6uZ=KKn4RSopQpUc_Tw@mail.gmail.com>
	<CAPg+sBgHZcdjRM+-UbSzuATBjj=yfBcqDMih+tAOYKBs=dLfWQ@mail.gmail.com>
Message-ID: <2691411.GaPfSIFZEE@crushinator>

Thanks for the quick reply to both of you, Mike and Pieter.

I feel foolish for posting to this list, because the debug.log does indeed say "inputs already spent." That's so weird, though, because we haven't been able to get anything to accept the transaction, seemingly, and yet it was accepted into the block chain 15 blocks ago.

Anyway, I'm sorry for the noise.


On Tuesday, 15 April 2014, at 5:11 pm, Pieter Wuille wrote:
> The first input seems to be already spent by another transaction
> (which looks very similar).
> 
> 0.9 should report a more detailed reason for rejection, by the way.
> 
> 
> 
> On Tue, Apr 15, 2014 at 5:05 PM, Mike Hearn <mike at plan99.net> wrote:
> > Check debug.log to find out the reason it was rejected.
> >
> >
> >
> > ------------------------------------------------------------------------------
> > Learn Graph Databases - Download FREE O'Reilly Book
> > "Graph Databases" is the definitive new guide to graph databases and their
> > applications. Written by three acclaimed leaders in the field,
> > this first edition is now available. Download your free book today!
> > http://p.sf.net/sfu/NeoTech
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >



From mike at plan99.net  Tue Apr 15 15:30:37 2014
From: mike at plan99.net (Mike Hearn)
Date: Tue, 15 Apr 2014 17:30:37 +0200
Subject: [Bitcoin-development] Bug in 2-of-3 transaction signing in
	Bitcoind?
In-Reply-To: <2691411.GaPfSIFZEE@crushinator>
References: <1756895.gV83Q4MX2a@crushinator>
	<CANEZrP1mgKRL9GTFtsokXv92LfDhOHR6uZ=KKn4RSopQpUc_Tw@mail.gmail.com>
	<CAPg+sBgHZcdjRM+-UbSzuATBjj=yfBcqDMih+tAOYKBs=dLfWQ@mail.gmail.com>
	<2691411.GaPfSIFZEE@crushinator>
Message-ID: <CANEZrP1XS3iR2Ju9rbX81eU1nUSrQJUzjrVaE2HQnrJnQYRMKQ@mail.gmail.com>

>
> That's so weird, though, because we haven't been able to get anything to
> accept the transaction, seemingly, and yet it was accepted into the block
> chain 15 blocks ago.


If the tx is already in the block chain then it won't be accepted again,
because it would be double spending itself!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140415/df648e69/attachment.html>

From bip at mattwhitlock.name  Tue Apr 15 15:42:14 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Tue, 15 Apr 2014 11:42:14 -0400
Subject: [Bitcoin-development] Bug in 2-of-3 transaction signing in
	Bitcoind?
In-Reply-To: <CANEZrP1XS3iR2Ju9rbX81eU1nUSrQJUzjrVaE2HQnrJnQYRMKQ@mail.gmail.com>
References: <1756895.gV83Q4MX2a@crushinator> <2691411.GaPfSIFZEE@crushinator>
	<CANEZrP1XS3iR2Ju9rbX81eU1nUSrQJUzjrVaE2HQnrJnQYRMKQ@mail.gmail.com>
Message-ID: <1832687.kEVurC5ttk@crushinator>

On Tuesday, 15 April 2014, at 5:30 pm, Mike Hearn wrote:
> >
> > That's so weird, though, because we haven't been able to get anything to
> > accept the transaction, seemingly, and yet it was accepted into the block
> > chain 15 blocks ago.
> 
> 
> If the tx is already in the block chain then it won't be accepted again,
> because it would be double spending itself!

Haha, yes, I know that. But we had been trying to get a 2-of-3 to be accepted by something for hours, and everything was rejecting it: Coinb.in, our local Bitcoind, the Eligius tx push form. Evidently something did accept it and we didn't notice. We're starting over again now and trying to reproduce the success (or failure).



From mike at belshe.com  Tue Apr 15 15:47:33 2014
From: mike at belshe.com (Mike Belshe)
Date: Tue, 15 Apr 2014 08:47:33 -0700
Subject: [Bitcoin-development] Bug in 2-of-3 transaction signing in
	Bitcoind?
In-Reply-To: <1832687.kEVurC5ttk@crushinator>
References: <1756895.gV83Q4MX2a@crushinator> <2691411.GaPfSIFZEE@crushinator>
	<CANEZrP1XS3iR2Ju9rbX81eU1nUSrQJUzjrVaE2HQnrJnQYRMKQ@mail.gmail.com>
	<1832687.kEVurC5ttk@crushinator>
Message-ID: <CABaLYCu7by9AsurAcjzjo4QR_3Ln6DZrq7GPH_KxTokUbGTEeg@mail.gmail.com>

For what it is worth, I found btcd (the go implementation of bitcoind) has
much better error/diagnostics messages.  It would have given you more than
"-22 TX Rejected".  I used it to debug my own multi-sig transactions and it
was very helpful.

Mike



On Tue, Apr 15, 2014 at 8:42 AM, Matt Whitlock <bip at mattwhitlock.name>wrote:

> On Tuesday, 15 April 2014, at 5:30 pm, Mike Hearn wrote:
> > >
> > > That's so weird, though, because we haven't been able to get anything
> to
> > > accept the transaction, seemingly, and yet it was accepted into the
> block
> > > chain 15 blocks ago.
> >
> >
> > If the tx is already in the block chain then it won't be accepted again,
> > because it would be double spending itself!
>
> Haha, yes, I know that. But we had been trying to get a 2-of-3 to be
> accepted by something for hours, and everything was rejecting it: Coinb.in,
> our local Bitcoind, the Eligius tx push form. Evidently something did
> accept it and we didn't notice. We're starting over again now and trying to
> reproduce the success (or failure).
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140415/1bab2261/attachment.html>

From bip at mattwhitlock.name  Tue Apr 15 16:27:41 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Tue, 15 Apr 2014 12:27:41 -0400
Subject: [Bitcoin-development] Bug in 2-of-3 transaction signing in
	Bitcoind?
In-Reply-To: <CABaLYCu7by9AsurAcjzjo4QR_3Ln6DZrq7GPH_KxTokUbGTEeg@mail.gmail.com>
References: <1756895.gV83Q4MX2a@crushinator> <1832687.kEVurC5ttk@crushinator>
	<CABaLYCu7by9AsurAcjzjo4QR_3Ln6DZrq7GPH_KxTokUbGTEeg@mail.gmail.com>
Message-ID: <7270706.tTNIRFK64H@crushinator>

On Tuesday, 15 April 2014, at 8:47 am, Mike Belshe wrote:
> For what it is worth, I found btcd (the go implementation of bitcoind) has
> much better error/diagnostics messages.  It would have given you more than
> "-22 TX Rejected".  I used it to debug my own multi-sig transactions and it
> was very helpful.

I'll have to check that out.


A follow-up on my initial post... I did just successfully create, sign, and transmit another 2-of-3 transaction, so once again, I'm sorry I bothered this list. But since I did (and am now doing so again), I'll give a little more background on what we've been up to. It's not quite as simple as what I've shared thus far. 

We have built a tool from scratch in C++ that is kind of a Swiss Army knife of Bitcoin. It does all sorts of key and address conversions, hash functions, encoding and decoding, script disassembly, BIP38 encryption/decrytion, the Shamir Secret Sharing that I've posted about here on this list before, and transaction building and signing. It has its own wallet and it's own UTXO cache that contains only TXOs that are relevant to the objects in its wallet. It synchronizes its cache by scanning bitcoind's block data files. (It memory maps them and can do a full scan of the entire block chain in about a minute!) The wallet can contain keys, seeds, and multi-signature aggregates (which in turn can comprise keys and seeds). What we've been testing is deriving sequences of multi-sig P2SH addresses from a set of public seeds, sending bitcoins to those addresses, then using our tool to find those outputs in the block chain and to create transactions that redeem them, and then signing those transactions by supplying the private seeds to the tool.

Our tool is quite a bit easier to use than Bitcoind. (I was frankly appalled at the command-line syntax that was necessary to get Bitcoind to sign a P2SH multi-sig transaction.)

$ ./btctool privkey < /dev/random > privseed1
$ ./btctool privkey < /dev/random > privseed2
$ ./btctool privkey < /dev/random > privseed3
$ pubseed1=$(./btctool pubkey < privseed1)
$ pubseed2=$(./btctool pubkey < privseed2)
$ pubseed3=$(./btctool pubkey < privseed3)
$ ./chaintool init
$ ./chaintool add demo 2 ":${pubseed1}" ":${pubseed2}" ":${pubseed3}"
$ ./chaintool ls
demo    2 :036447c7edc861b9f41fa0f611d81784f19ce692f37e8772b55c37c743cd526b49 :03c831711ea65decc06b0f3ccb4b9f1ba1a99a6933e520f6e7e4c3dbb4f015b701 :0347f2a0a346f21538fc451b95a600bc64ce5d2d28b89bf547697f3a77195d8dd1
$ ./btctool addresses 1 2 "${pubseed1}" "${pubseed2}" "${pubseed3}"
3GQd1tosFCE7Vo4TAiDHEKTaBgoyZTeL6R
$ bitcoind sendtoaddress 3GQd1tosFCE7Vo4TAiDHEKTaBgoyZTeL6R 0.01
6a9538f496f4c2d7f50c342fa6f6f76904a3b19f55f3a54a0003fc00b327d81b
(I waited here for the tx to get into a block)
$ ./chaintool sync /var/lib/bitcoin/.bitcoin/blocks 2> /dev/null
$ ./chaintool listunspent
[
        {
                "txid": "6a9538f496f4c2d7f50c342fa6f6f76904a3b19f55f3a54a0003fc00b327d81b",
                "vout": 1,
                "address": "3GQd1tosFCE7Vo4TAiDHEKTaBgoyZTeL6R",
                "scriptPubKey": "a914a1701be36532f05a74511fca89afce180c58189587",
                "amount": 1000000,
                "confirmations": 1
        }
]
$ cat > outputs << EOF
> 13QAKNuh9uFcEiNAsct6LSF1qWQR6HLarT 50000
> 1FV4Fm3VCXfWy7BAXzT8t5qqTvEKZSad9v
> EOF
$ tx=$(./chaintool createtx 10000 demo < outputs)
(I manually edited ${tx} at this point to add an OP_RETURN output. We're currently working toward using OP_RETURN in a provable solvency scheme.)
$ signedtx1=$(./chaintool signtx "${tx}" < privseed1)
input #0: need 1 of [:03c831711ea65decc06b0f3ccb4b9f1ba1a99a6933e520f6e7e4c3dbb4f015b701, :0347f2a0a346f21538fc451b95a600bc64ce5d2d28b89bf547697f3a77195d8dd1]
$ signedtx2=$(./chaintool signtx "${signedtx1}" < privseed2)
$ bitcoind sendrawtransaction "${signedtx2}"
b485b185c77d803f75e1ccfee1b5072846c9e0728f4c955ca40dce82263f8f16
$ exit

:-)



From chris at beams.io  Tue Apr 15 16:39:35 2014
From: chris at beams.io (Chris Beams)
Date: Tue, 15 Apr 2014 18:39:35 +0200
Subject: [Bitcoin-development] Bug in 2-of-3 transaction signing in
	Bitcoind?
In-Reply-To: <7270706.tTNIRFK64H@crushinator>
References: <1756895.gV83Q4MX2a@crushinator> <1832687.kEVurC5ttk@crushinator>
	<CABaLYCu7by9AsurAcjzjo4QR_3Ln6DZrq7GPH_KxTokUbGTEeg@mail.gmail.com>
	<7270706.tTNIRFK64H@crushinator>
Message-ID: <981A0A04-EAE7-45BE-81FC-92A40A6B2DA4@beams.io>

Hi Matt,

Looks interesting. Is the source available?


On Apr 15, 2014, at 6:27 PM, Matt Whitlock <bip at mattwhitlock.name> wrote:

On Tuesday, 15 April 2014, at 8:47 am, Mike Belshe wrote:
For what it is worth, I found btcd (the go implementation of bitcoind) has
much better error/diagnostics messages.  It would have given you more than
"-22 TX Rejected".  I used it to debug my own multi-sig transactions and it
was very helpful.

I'll have to check that out.


A follow-up on my initial post... I did just successfully create, sign, and transmit another 2-of-3 transaction, so once again, I'm sorry I bothered this list. But since I did (and am now doing so again), I'll give a little more background on what we've been up to. It's not quite as simple as what I've shared thus far.

We have built a tool from scratch in C++ that is kind of a Swiss Army knife of Bitcoin. It does all sorts of key and address conversions, hash functions, encoding and decoding, script disassembly, BIP38 encryption/decrytion, the Shamir Secret Sharing that I've posted about here on this list before, and transaction building and signing. It has its own wallet and it's own UTXO cache that contains only TXOs that are relevant to the objects in its wallet. It synchronizes its cache by scanning bitcoind's block data files. (It memory maps them and can do a full scan of the entire block chain in about a minute!) The wallet can contain keys, seeds, and multi-signature aggregates (which in turn can comprise keys and seeds). What we've been testing is deriving sequences of multi-sig P2SH addresses from a set of public seeds, sending bitcoins to those addresses, then using our tool to find those outputs in the block chain and to create transactions that redeem them, and then signing those trans
actions by supplying the private seeds to the tool.

Our tool is quite a bit easier to use than Bitcoind. (I was frankly appalled at the command-line syntax that was necessary to get Bitcoind to sign a P2SH multi-sig transaction.)

$ ./btctool privkey < /dev/random > privseed1
$ ./btctool privkey < /dev/random > privseed2
$ ./btctool privkey < /dev/random > privseed3
$ pubseed1=$(./btctool pubkey < privseed1)
$ pubseed2=$(./btctool pubkey < privseed2)
$ pubseed3=$(./btctool pubkey < privseed3)
$ ./chaintool init
$ ./chaintool add demo 2 ":${pubseed1}" ":${pubseed2}" ":${pubseed3}"
$ ./chaintool ls
demo    2 :036447c7edc861b9f41fa0f611d81784f19ce692f37e8772b55c37c743cd526b49 :03c831711ea65decc06b0f3ccb4b9f1ba1a99a6933e520f6e7e4c3dbb4f015b701 :0347f2a0a346f21538fc451b95a600bc64ce5d2d28b89bf547697f3a77195d8dd1
$ ./btctool addresses 1 2 "${pubseed1}" "${pubseed2}" "${pubseed3}"
3GQd1tosFCE7Vo4TAiDHEKTaBgoyZTeL6R
$ bitcoind sendtoaddress 3GQd1tosFCE7Vo4TAiDHEKTaBgoyZTeL6R 0.01
6a9538f496f4c2d7f50c342fa6f6f76904a3b19f55f3a54a0003fc00b327d81b
(I waited here for the tx to get into a block)
$ ./chaintool sync /var/lib/bitcoin/.bitcoin/blocks 2> /dev/null
$ ./chaintool listunspent
[
       {
               "txid": "6a9538f496f4c2d7f50c342fa6f6f76904a3b19f55f3a54a0003fc00b327d81b",
               "vout": 1,
               "address": "3GQd1tosFCE7Vo4TAiDHEKTaBgoyZTeL6R",
               "scriptPubKey": "a914a1701be36532f05a74511fca89afce180c58189587",
               "amount": 1000000,
               "confirmations": 1
       }
]
$ cat > outputs << EOF
13QAKNuh9uFcEiNAsct6LSF1qWQR6HLarT 50000
1FV4Fm3VCXfWy7BAXzT8t5qqTvEKZSad9v
EOF
$ tx=$(./chaintool createtx 10000 demo < outputs)
(I manually edited ${tx} at this point to add an OP_RETURN output. We're currently working toward using OP_RETURN in a provable solvency scheme.)
$ signedtx1=$(./chaintool signtx "${tx}" < privseed1)
input #0: need 1 of [:03c831711ea65decc06b0f3ccb4b9f1ba1a99a6933e520f6e7e4c3dbb4f015b701, :0347f2a0a346f21538fc451b95a600bc64ce5d2d28b89bf547697f3a77195d8dd1]
$ signedtx2=$(./chaintool signtx "${signedtx1}" < privseed2)
$ bitcoind sendrawtransaction "${signedtx2}"
b485b185c77d803f75e1ccfee1b5072846c9e0728f4c955ca40dce82263f8f16
$ exit

:-)

------------------------------------------------------------------------------
Learn Graph Databases - Download FREE O'Reilly Book
"Graph Databases" is the definitive new guide to graph databases and their
applications. Written by three acclaimed leaders in the field,
this first edition is now available. Download your free book today!
http://p.sf.net/sfu/NeoTech
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 841 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140415/508cfd71/attachment.sig>

From bip at mattwhitlock.name  Tue Apr 15 16:45:52 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Tue, 15 Apr 2014 12:45:52 -0400
Subject: [Bitcoin-development] Bug in 2-of-3 transaction signing in
	Bitcoind?
In-Reply-To: <981A0A04-EAE7-45BE-81FC-92A40A6B2DA4@beams.io>
References: <1756895.gV83Q4MX2a@crushinator> <7270706.tTNIRFK64H@crushinator>
	<981A0A04-EAE7-45BE-81FC-92A40A6B2DA4@beams.io>
Message-ID: <82239971.BzVTldK5cU@crushinator>

On Tuesday, 15 April 2014, at 6:39 pm, Chris Beams wrote:
> Looks interesting. Is the source available?

The intent is to open-source it. We will do so when I'm confident that we have all the kinks worked out.

Here's what it can do presently:

$ ./btctool
usage: ./btctool <function> [<args>]
  encode16
    Encode stdin to hex.
  decode16 [<hex>]
    Decode hex from stdin or string.
  encode64 [<hex>]
    Encode stdin or octets to Base64.
  decode64 [<base64>]
    Decode Base64 from stdin or string.
  encode58 <version> [<hex>]
    Encode stdin or octets to Base58Check.
  decode58 [<base58>]
    Decode Base58Check from stdin or string.
  disassemble [<script>]
    Disassemble hex script.
  sha256 [<hex>]
    Hash stdin or octets using SHA-256.
  rmd160 [<hex>]
    Hash stdin or octets using RIPEMD-160.
  privkey [<hex>]
    Derive private key from stdin or octets.
  pubkey [<privkey>]
    Derive public key from private key.
  address [<pubkey>]
    Derive address from public key.
  address <m> [<pubkey>...]
    Derive m-of-n P2SH address from public keys.
  encrypt [<privkey>]
    Encrypt private key per BIP38.
  decrypt [<privkey>]
    Decrypt private key per BIP38.
  shares <m> <n> [<privkey>]
    Distribute private key into m-of-n shares.
  join [<share>...]
    Join shares to reconstitute private key.
  privkeys <k> [<privseed>]
    Derive k private keys from private seed.
  pubkeys <k> [<pubseed>]
    Derive k public keys from public seed.
  addresses <k> [<pubseed>]
    Derive k addresses from public seed.
  addresses <k> <m> [<pubseed>...]
    Derive k m-of-n P2SH addresses from public seeds.

$ ./chaintool
usage: ./chaintool <function> [<args>]
  init
    Initialize a new cache file.
  add <label> <pubkey>
    Add a public key.
  add <label> :<pubseed>
    Add a public seed.
  add <label> <m> {<pubkey>|:<pubseed>}...
    Add public keys/seeds for m-of-n P2SH.
  rm <label>
    Remove a public key or seed.
  ls
    List public keys and seeds.
  sync <blocksdir>
    Synchronize with block chain.
  tip
    Print hash of block at tip of main chain.
  getbalance [<label>...]
    Get available balance.
  listunspent [<label>...]
    List unspent outputs in JSON.
  createtx [<fee>] [<label>...]
    Create transaction from address+amount pairs on stdin.
  signtx <tx> [{<privkey>|<privseed>}...]
    Sign transaction with private key(s)/seed(s).




From laanwj at gmail.com  Wed Apr 16 08:14:58 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 16 Apr 2014 10:14:58 +0200
Subject: [Bitcoin-development] Warning message when running wallet in
	Windows XP (or drop support?)
Message-ID: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>

Hello,

Today I noticed that even my bank is warning people to not do internet
banking with Windows XP.

If it is no longer secure enough for online banking it's CERTAINLY not
secure enough to run a wallet (for a node only it would be ok-ish as they
have no keys to protect).
Any opinions on what to do here? Just warn and allow the user to continue?
Redirect them to a 'Windows XP is dangerous' message on bitcoin.org?
(Microsoft uses http://windows.microsoft.com/en-us/windows/end-support-help)

The drawback of dropping XP support completely would be that a lot of
computers (especially in China and Russia etc) are still running XP, so
this could cause the network to lose nodes.

If you're maintainer of other wallet software: how are you handling this?
Are you going to drop XP support completely? If so, starting from when?

Regards,
Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140416/8f20412a/attachment.html>

From melvincarvalho at gmail.com  Wed Apr 16 08:45:48 2014
From: melvincarvalho at gmail.com (Melvin Carvalho)
Date: Wed, 16 Apr 2014 10:45:48 +0200
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
Message-ID: <CAKaEYhKDDCSOiygnfsMpO-dQKjwHnm0icoH9+oGqo+114_9sAQ@mail.gmail.com>

On 16 April 2014 10:14, Wladimir <laanwj at gmail.com> wrote:

> Hello,
>
> Today I noticed that even my bank is warning people to not do internet
> banking with Windows XP.
>
> If it is no longer secure enough for online banking it's CERTAINLY not
> secure enough to run a wallet (for a node only it would be ok-ish as they
> have no keys to protect).
> Any opinions on what to do here? Just warn and allow the user to continue?
> Redirect them to a 'Windows XP is dangerous' message on bitcoin.org?
> (Microsoft uses
> http://windows.microsoft.com/en-us/windows/end-support-help)
>
> The drawback of dropping XP support completely would be that a lot of
> computers (especially in China and Russia etc) are still running XP, so
> this could cause the network to lose nodes.
>

XP with a trezor would work fine tho?

My personal preference would be a warning, and to direct them to a free
software operating system that they could upgrade to.


>
> If you're maintainer of other wallet software: how are you handling this?
> Are you going to drop XP support completely? If so, starting from when?
>
> Regards,
> Wladimir
>
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140416/35d4f081/attachment.html>

From laanwj at gmail.com  Wed Apr 16 09:41:48 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 16 Apr 2014 11:41:48 +0200
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <CAKaEYhKDDCSOiygnfsMpO-dQKjwHnm0icoH9+oGqo+114_9sAQ@mail.gmail.com>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
	<CAKaEYhKDDCSOiygnfsMpO-dQKjwHnm0icoH9+oGqo+114_9sAQ@mail.gmail.com>
Message-ID: <CA+s+GJB6aThjpMOUodK2Uc-jw=x6rSuRyX5gqsS+mK=DxJ7N5g@mail.gmail.com>

On Wed, Apr 16, 2014 at 10:45 AM, Melvin Carvalho
<melvincarvalho at gmail.com>wrote:

> XP with a trezor would work fine tho?
>

Probably - but that's a very rare edge case. People that are security
conscious enough to buy a Trezor will not run XP. Also I don't dare to say
that there is not some way to sociaal-engineer the user with malware on a
compromised OS even with a trezor.

Maybe: for 0.9.2 add a warning message and push people to upgrade (either
to Win8.1 or something else), then in the next major release 0.10.0 drop XP
support completely.

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140416/7b36d743/attachment.html>

From adam at cypherspace.org  Wed Apr 16 11:06:27 2014
From: adam at cypherspace.org (Adam Back)
Date: Wed, 16 Apr 2014 13:06:27 +0200
Subject: [Bitcoin-development] mid-term bitcoin security (Re: Warning
 message when running wallet in Windows XP (or drop support?))
In-Reply-To: <CA+s+GJB6aThjpMOUodK2Uc-jw=x6rSuRyX5gqsS+mK=DxJ7N5g@mail.gmail.com>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
	<CAKaEYhKDDCSOiygnfsMpO-dQKjwHnm0icoH9+oGqo+114_9sAQ@mail.gmail.com>
	<CA+s+GJB6aThjpMOUodK2Uc-jw=x6rSuRyX5gqsS+mK=DxJ7N5g@mail.gmail.com>
Message-ID: <20140416110627.GA8131@netbook.cypherspace.org>

Big picture/mid-term I think air-gaps and zero-trust ecosystem components
are the only solution.  (zero-trust meaning like real-time auditability, or
type 2/type 3 exchanges based on atomic-swap, trustless escrow etc).

Need a mass-production and air-drop of trezors :)

There is one more problem address-substitution via untrusted network/user
and weak site with 1mil lines of swiss-cheese security app-store.  So some
kind of address authentication TOFU.  Aside from X509 bloatware which could
be extended from payment protocol to do that, I'd argue for a native simple
TOFU format like Alan Reiner's multiplier * base approach (where base is the
TOFU handle).  And/or something like the IBE address proposal (which gives a
bandwidth efficiently SPV queryable way to check if funds received).  Worst
case if weil-pairing gets broken it auto-devolves to the current status
quo.

Btw not to reignite the stealth vs reusable address bike shedding, but
contrarily I was thinking it maybe actually better to try to rebrand address
as "invoice number".  People understand double paying an invoice is not a
good idea.  And if they receive the same invoice twice they'll query it.

Adam

On Wed, Apr 16, 2014 at 11:41:48AM +0200, Wladimir wrote:
>   On Wed, Apr 16, 2014 at 10:45 AM, Melvin Carvalho
>   <[1]melvincarvalho at gmail.com> wrote:
>
>   XP with a trezor would work fine tho?
>
>   Probably - but that's a very rare edge case. People that are security
>   conscious enough to buy a Trezor will not run XP. Also I don't dare to
>   say that there is not some way to sociaal-engineer the user with
>   malware on a compromised OS even with a trezor.
>   Maybe: for 0.9.2 add a warning message and push people to upgrade
>   (either to Win8.1 or something else), then in the next major release
>   0.10.0 drop XP support completely.
>   Wladimir
>
>References
>
>   1. mailto:melvincarvalho at gmail.com

>------------------------------------------------------------------------------
>Learn Graph Databases - Download FREE O'Reilly Book
>"Graph Databases" is the definitive new guide to graph databases and their
>applications. Written by three acclaimed leaders in the field,
>this first edition is now available. Download your free book today!
>http://p.sf.net/sfu/NeoTech

>_______________________________________________
>Bitcoin-development mailing list
>Bitcoin-development at lists.sourceforge.net
>https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From kevinsisco61784 at gmail.com  Wed Apr 16 15:12:28 2014
From: kevinsisco61784 at gmail.com (Kevin)
Date: Wed, 16 Apr 2014 11:12:28 -0400
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
Message-ID: <534E9DDC.7000502@gmail.com>

On 4/16/2014 4:14 AM, Wladimir wrote:
> Hello,
>
> Today I noticed that even my bank is warning people to not do internet 
> banking with Windows XP.
>
> If it is no longer secure enough for online banking it's CERTAINLY not 
> secure enough to run a wallet (for a node only it would be ok-ish as 
> they have no keys to protect).
>
> Any opinions on what to do here? Just warn and allow the user to 
> continue? Redirect them to a 'Windows XP is dangerous' message on 
> bitcoin.org <http://bitcoin.org>? (Microsoft uses 
> http://windows.microsoft.com/en-us/windows/end-support-help)
>
> The drawback of dropping XP support completely would be that a lot of 
> computers (especially in China and Russia etc) are still running XP, 
> so this could cause the network to lose nodes.
>
> If you're maintainer of other wallet software: how are you handling this?
> Are you going to drop XP support completely? If so, starting from when?
>
> Regards,
> Wladimir
>
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
I think we should get to the bottom of this.  Should we assume that xp 
is not secure enough?  What is this warning?  Who is issuing this warning?


-- 
Kevin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140416/25e492a7/attachment.html>

From pieter.wuille at gmail.com  Wed Apr 16 15:20:41 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 16 Apr 2014 17:20:41 +0200
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <534E9DDC.7000502@gmail.com>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
	<534E9DDC.7000502@gmail.com>
Message-ID: <CAPg+sBg-LBHx4sTR1QuK_-t1Yb+N+Vsi9BsyQ41vaWB6gFEHvw@mail.gmail.com>

On Wed, Apr 16, 2014 at 5:12 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
> I think we should get to the bottom of this.  Should we assume that xp is
> not secure enough?

Yes.

> What is this warning?

Windows XP is no longer maintained. Don't use such a system for
protecting your money.

> Who is issuing this warning?

Microsoft: http://windows.microsoft.com/en-us/windows/end-support-help

The suggestion here is to make Bitcoin Core detect when it's running
on Windows XP, and warn the user (they are likely unaware of the
risks).

-- 
Pieter



From mark at monetize.io  Wed Apr 16 15:23:54 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Wed, 16 Apr 2014 08:23:54 -0700
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <534E9DDC.7000502@gmail.com>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
	<534E9DDC.7000502@gmail.com>
Message-ID: <CACh7GpFb0Txme33Bk3fJ8nOx3+pE+BcF1psYYpBBsiRp1zNBEA@mail.gmail.com>

XP is no longer receiving security patches from Microsoft, and hasn't been
for some time. There are known remote exploits that aren't going to be
fixed, ever.
On Apr 16, 2014 8:15 AM, "Kevin" <kevinsisco61784 at gmail.com> wrote:

>  On 4/16/2014 4:14 AM, Wladimir wrote:
>
>  Hello,
>
> Today I noticed that even my bank is warning people to not do internet
> banking with Windows XP.
>
> If it is no longer secure enough for online banking it's CERTAINLY not
> secure enough to run a wallet (for a node only it would be ok-ish as they
> have no keys to protect).
>  Any opinions on what to do here? Just warn and allow the user to
> continue? Redirect them to a 'Windows XP is dangerous' message on
> bitcoin.org? (Microsoft uses
> http://windows.microsoft.com/en-us/windows/end-support-help)
>
>  The drawback of dropping XP support completely would be that a lot of
> computers (especially in China and Russia etc) are still running XP, so
> this could cause the network to lose nodes.
>
> If you're maintainer of other wallet software: how are you handling this?
>  Are you going to drop XP support completely? If so, starting from when?
>
> Regards,
>  Wladimir
>
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!http://p.sf.net/sfu/NeoTech
>
>
>
> _______________________________________________
> Bitcoin-development mailing listBitcoin-development at lists.sourceforge.nethttps://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>  I think we should get to the bottom of this.  Should we assume that xp is
> not secure enough?  What is this warning?  Who is issuing this warning?
>
>
> --
> Kevin
>
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140416/8b0d3aa6/attachment.html>

From laanwj at gmail.com  Wed Apr 16 15:28:27 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 16 Apr 2014 17:28:27 +0200
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <CAPg+sBg-LBHx4sTR1QuK_-t1Yb+N+Vsi9BsyQ41vaWB6gFEHvw@mail.gmail.com>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
	<534E9DDC.7000502@gmail.com>
	<CAPg+sBg-LBHx4sTR1QuK_-t1Yb+N+Vsi9BsyQ41vaWB6gFEHvw@mail.gmail.com>
Message-ID: <CA+s+GJDaLoDoxORfKEKeUpKgytwSUhH67Oj2_e6WoRup8eMG=w@mail.gmail.com>

On Wed, Apr 16, 2014 at 5:20 PM, Pieter Wuille <pieter.wuille at gmail.com>wrote:

> On Wed, Apr 16, 2014 at 5:12 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
> > I think we should get to the bottom of this.  Should we assume that xp is
> > not secure enough?
>
> Yes.
>

It will quickly grow extremely insecure.

People will be actively analyzing patches to post-XP versions to find
security problems that are patched there, to see if they can be exploited
on XP.

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140416/70aa4816/attachment.html>

From kevinsisco61784 at gmail.com  Wed Apr 16 16:27:29 2014
From: kevinsisco61784 at gmail.com (Kevin)
Date: Wed, 16 Apr 2014 12:27:29 -0400
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <CA+s+GJDaLoDoxORfKEKeUpKgytwSUhH67Oj2_e6WoRup8eMG=w@mail.gmail.com>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>	<534E9DDC.7000502@gmail.com>	<CAPg+sBg-LBHx4sTR1QuK_-t1Yb+N+Vsi9BsyQ41vaWB6gFEHvw@mail.gmail.com>
	<CA+s+GJDaLoDoxORfKEKeUpKgytwSUhH67Oj2_e6WoRup8eMG=w@mail.gmail.com>
Message-ID: <534EAF71.4090401@gmail.com>

On 4/16/2014 11:28 AM, Wladimir wrote:
>
> On Wed, Apr 16, 2014 at 5:20 PM, Pieter Wuille 
> <pieter.wuille at gmail.com <mailto:pieter.wuille at gmail.com>> wrote:
>
>     On Wed, Apr 16, 2014 at 5:12 PM, Kevin <kevinsisco61784 at gmail.com
>     <mailto:kevinsisco61784 at gmail.com>> wrote:
>     > I think we should get to the bottom of this.  Should we assume
>     that xp is
>     > not secure enough?
>
>     Yes.
>
>
> It will quickly grow extremely insecure.
>
> People will be actively analyzing patches to post-XP versions to find 
> security problems that are patched there, to see if they can be 
> exploited on XP.
>
> Wladimir
>
Should we then add an alert message to wallet installers such as, "Such 
and such will not run on windows xp?"


-- 
Kevin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140416/d88f01af/attachment.html>

From mark at monetize.io  Wed Apr 16 16:35:36 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Wed, 16 Apr 2014 09:35:36 -0700
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <534EAF71.4090401@gmail.com>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>	<534E9DDC.7000502@gmail.com>	<CAPg+sBg-LBHx4sTR1QuK_-t1Yb+N+Vsi9BsyQ41vaWB6gFEHvw@mail.gmail.com>	<CA+s+GJDaLoDoxORfKEKeUpKgytwSUhH67Oj2_e6WoRup8eMG=w@mail.gmail.com>
	<534EAF71.4090401@gmail.com>
Message-ID: <534EB158.7080506@monetize.io>

On 04/16/2014 09:27 AM, Kevin wrote:
> Should we then add an alert message to wallet installers such as, "Such
> and such will not run on windows xp?"

It's not really our place to police that ... plus it's perfectly safe to
be running Bitcoin Core as a full node on XP. It's just the wallet
functionality that people should be careful about. We're talking about
such a small intersection of people who are running XP, have systems
powerful enough to run Bitcoin Core, and use the wallet functionality.



From chris at icloudtools.net  Wed Apr 16 16:41:03 2014
From: chris at icloudtools.net (Chris Williams)
Date: Wed, 16 Apr 2014 16:41:03 +0000
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <534EB158.7080506@monetize.io>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
	<534E9DDC.7000502@gmail.com>
	<CAPg+sBg-LBHx4sTR1QuK_-t1Yb+N+Vsi9BsyQ41vaWB6gFEHvw@mail.gmail.com>
	<CA+s+GJDaLoDoxORfKEKeUpKgytwSUhH67Oj2_e6WoRup8eMG=w@mail.gmail.com>
	<534EAF71.4090401@gmail.com> <534EB158.7080506@monetize.io>
Message-ID: <5D7F6FBB-3487-44F8-B46C-99EF7BB4A9B2@icloudtools.net>

It may not be our place to say whether XP is secure or not, but if we say that we support it then we have to run test passes against XP as a platform, and if an XP user reports a bug, then we have to do something to address it.  So, it becomes a test and support issue, not a security issue.

That?s why it doesn?t make sense to support an OS platform that the original vendor (MS) no longer supports themselves.

On Apr 16, 2014, at 9:35 AM, Mark Friedenbach <mark at monetize.io> wrote:

> On 04/16/2014 09:27 AM, Kevin wrote:
>> Should we then add an alert message to wallet installers such as, "Such
>> and such will not run on windows xp?"
> 
> It's not really our place to police that ... plus it's perfectly safe to
> be running Bitcoin Core as a full node on XP. It's just the wallet
> functionality that people should be careful about. We're talking about
> such a small intersection of people who are running XP, have systems
> powerful enough to run Bitcoin Core, and use the wallet functionality.
> 
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 496 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140416/6c7e3a4d/attachment.sig>

From mark at monetize.io  Wed Apr 16 16:44:55 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Wed, 16 Apr 2014 09:44:55 -0700
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <5D7F6FBB-3487-44F8-B46C-99EF7BB4A9B2@icloudtools.net>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
	<534E9DDC.7000502@gmail.com>
	<CAPg+sBg-LBHx4sTR1QuK_-t1Yb+N+Vsi9BsyQ41vaWB6gFEHvw@mail.gmail.com>
	<CA+s+GJDaLoDoxORfKEKeUpKgytwSUhH67Oj2_e6WoRup8eMG=w@mail.gmail.com>
	<534EAF71.4090401@gmail.com> <534EB158.7080506@monetize.io>
	<5D7F6FBB-3487-44F8-B46C-99EF7BB4A9B2@icloudtools.net>
Message-ID: <534EB387.9020206@monetize.io>

We don't support XP. In fact we don't support *any* distribution, but I
will assume you mean "provide a binary which runs on X." Can you find
any reference to Windows XP on the website? I can't.

On 04/16/2014 09:41 AM, Chris Williams wrote:
> It may not be our place to say whether XP is secure or not, but if we say that we support it then we have to run test passes against XP as a platform, and if an XP user reports a bug, then we have to do something to address it.  So, it becomes a test and support issue, not a security issue.
> 
> That?s why it doesn?t make sense to support an OS platform that the original vendor (MS) no longer supports themselves.
> 
> On Apr 16, 2014, at 9:35 AM, Mark Friedenbach <mark at monetize.io> wrote:
> 
>> On 04/16/2014 09:27 AM, Kevin wrote:
>>> Should we then add an alert message to wallet installers such as, "Such
>>> and such will not run on windows xp?"
>>
>> It's not really our place to police that ... plus it's perfectly safe to
>> be running Bitcoin Core as a full node on XP. It's just the wallet
>> functionality that people should be careful about. We're talking about
>> such a small intersection of people who are running XP, have systems
>> powerful enough to run Bitcoin Core, and use the wallet functionality.
>>
>> ------------------------------------------------------------------------------
>> Learn Graph Databases - Download FREE O'Reilly Book
>> "Graph Databases" is the definitive new guide to graph databases and their
>> applications. Written by three acclaimed leaders in the field,
>> this first edition is now available. Download your free book today!
>> http://p.sf.net/sfu/NeoTech
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From chris at icloudtools.net  Wed Apr 16 16:50:45 2014
From: chris at icloudtools.net (Chris Williams)
Date: Wed, 16 Apr 2014 16:50:45 +0000
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <534EB387.9020206@monetize.io>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
	<534E9DDC.7000502@gmail.com>
	<CAPg+sBg-LBHx4sTR1QuK_-t1Yb+N+Vsi9BsyQ41vaWB6gFEHvw@mail.gmail.com>
	<CA+s+GJDaLoDoxORfKEKeUpKgytwSUhH67Oj2_e6WoRup8eMG=w@mail.gmail.com>
	<534EAF71.4090401@gmail.com> <534EB158.7080506@monetize.io>
	<5D7F6FBB-3487-44F8-B46C-99EF7BB4A9B2@icloudtools.net>
	<534EB387.9020206@monetize.io>
Message-ID: <F0D2D4F8-A80C-4F61-B71C-B57AF01F32BB@icloudtools.net>

You?re right.  That?s a huge oversight.  I think any software product you?ve ever considered installing has a section that says

?Hey, we want this much ram on your system, this much disk space, this processor, etc?.

Otherwise, you?re just setting yourself up for a bad user experience from people with marginal machines.


On Apr 16, 2014, at 9:44 AM, Mark Friedenbach <mark at monetize.io> wrote:

> We don't support XP. In fact we don't support *any* distribution, but I
> will assume you mean "provide a binary which runs on X." Can you find
> any reference to Windows XP on the website? I can't.
> 
> On 04/16/2014 09:41 AM, Chris Williams wrote:
>> It may not be our place to say whether XP is secure or not, but if we say that we support it then we have to run test passes against XP as a platform, and if an XP user reports a bug, then we have to do something to address it.  So, it becomes a test and support issue, not a security issue.
>> 
>> That?s why it doesn?t make sense to support an OS platform that the original vendor (MS) no longer supports themselves.
>> 
>> On Apr 16, 2014, at 9:35 AM, Mark Friedenbach <mark at monetize.io> wrote:
>> 
>>> On 04/16/2014 09:27 AM, Kevin wrote:
>>>> Should we then add an alert message to wallet installers such as, "Such
>>>> and such will not run on windows xp?"
>>> 
>>> It's not really our place to police that ... plus it's perfectly safe to
>>> be running Bitcoin Core as a full node on XP. It's just the wallet
>>> functionality that people should be careful about. We're talking about
>>> such a small intersection of people who are running XP, have systems
>>> powerful enough to run Bitcoin Core, and use the wallet functionality.
>>> 
>>> ------------------------------------------------------------------------------
>>> Learn Graph Databases - Download FREE O'Reilly Book
>>> "Graph Databases" is the definitive new guide to graph databases and their
>>> applications. Written by three acclaimed leaders in the field,
>>> this first edition is now available. Download your free book today!
>>> http://p.sf.net/sfu/NeoTech
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 496 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140416/3d3ee08c/attachment.sig>

From kevinsisco61784 at gmail.com  Wed Apr 16 18:59:10 2014
From: kevinsisco61784 at gmail.com (Kevin)
Date: Wed, 16 Apr 2014 14:59:10 -0400
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <5D7F6FBB-3487-44F8-B46C-99EF7BB4A9B2@icloudtools.net>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>	<534E9DDC.7000502@gmail.com>	<CAPg+sBg-LBHx4sTR1QuK_-t1Yb+N+Vsi9BsyQ41vaWB6gFEHvw@mail.gmail.com>	<CA+s+GJDaLoDoxORfKEKeUpKgytwSUhH67Oj2_e6WoRup8eMG=w@mail.gmail.com>	<534EAF71.4090401@gmail.com>
	<534EB158.7080506@monetize.io>
	<5D7F6FBB-3487-44F8-B46C-99EF7BB4A9B2@icloudtools.net>
Message-ID: <534ED2FE.8030208@gmail.com>

On 4/16/2014 12:41 PM, Chris Williams wrote:
> It may not be our place to say whether XP is secure or not, but if we say that we support it then we have to run test passes against XP as a platform, and if an XP user reports a bug, then we have to do something to address it.  So, it becomes a test and support issue, not a security issue.
>
> That's why it doesn't make sense to support an OS platform that the original vendor (MS) no longer supports themselves.
>
> On Apr 16, 2014, at 9:35 AM, Mark Friedenbach <mark at monetize.io> wrote:
>
>> On 04/16/2014 09:27 AM, Kevin wrote:
>>> Should we then add an alert message to wallet installers such as, "Such
>>> and such will not run on windows xp?"
>> It's not really our place to police that ... plus it's perfectly safe to
>> be running Bitcoin Core as a full node on XP. It's just the wallet
>> functionality that people should be careful about. We're talking about
>> such a small intersection of people who are running XP, have systems
>> powerful enough to run Bitcoin Core, and use the wallet functionality.
>>
>> ------------------------------------------------------------------------------
>> Learn Graph Databases - Download FREE O'Reilly Book
>> "Graph Databases" is the definitive new guide to graph databases and their
>> applications. Written by three acclaimed leaders in the field,
>> this first edition is now available. Download your free book today!
>> http://p.sf.net/sfu/NeoTech
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
Okay, so we simply stop supporting it.  Should bitcoin pull support 
altogether?


-- 
Kevin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140416/fbce3b17/attachment.html>

From adam at cypherspace.org  Wed Apr 16 19:43:10 2014
From: adam at cypherspace.org (Adam Back)
Date: Wed, 16 Apr 2014 21:43:10 +0200
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <CA+s+GJDaLoDoxORfKEKeUpKgytwSUhH67Oj2_e6WoRup8eMG=w@mail.gmail.com>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
	<534E9DDC.7000502@gmail.com>
	<CAPg+sBg-LBHx4sTR1QuK_-t1Yb+N+Vsi9BsyQ41vaWB6gFEHvw@mail.gmail.com>
	<CA+s+GJDaLoDoxORfKEKeUpKgytwSUhH67Oj2_e6WoRup8eMG=w@mail.gmail.com>
Message-ID: <20140416194310.GA11552@netbook.cypherspace.org>

Not to get snarky or OS elitist but as I understand it windows security,
even during its support period has been measured in low digit number of days
in the year when is NOT an outstanding known remote root compromise or
combination of remote user compromise + priviledge escalation.  Add in
phishing, watering holes, malware and the average windows computer is
probably compromised a dozen times over.  Apparently for sometime it was not
easily possible to secure it install boot - install OS, connect to network
to download security updates, IP range scanned and compromised faster than
you can patch it.

Adam

On Wed, Apr 16, 2014 at 05:28:27PM +0200, Wladimir wrote:
>   On Wed, Apr 16, 2014 at 5:20 PM, Pieter Wuille
>   <[1]pieter.wuille at gmail.com> wrote:
>
>   On Wed, Apr 16, 2014 at 5:12 PM, Kevin <[2]kevinsisco61784 at gmail.com>
>   wrote:
>   > I think we should get to the bottom of this. ? Should we assume that
>   xp is
>   > not secure enough?
>
>     Yes.
>
>   It will quickly grow extremely insecure.
>   People will be actively analyzing patches to post-XP versions to find
>   security problems that are patched there, to see if they can be
>   exploited on XP.
>   Wladimir



From roy at gnomon.org.uk  Wed Apr 16 20:42:24 2014
From: roy at gnomon.org.uk (Roy Badami)
Date: Wed, 16 Apr 2014 21:42:24 +0100
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <CAPg+sBg-LBHx4sTR1QuK_-t1Yb+N+Vsi9BsyQ41vaWB6gFEHvw@mail.gmail.com>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
	<534E9DDC.7000502@gmail.com>
	<CAPg+sBg-LBHx4sTR1QuK_-t1Yb+N+Vsi9BsyQ41vaWB6gFEHvw@mail.gmail.com>
Message-ID: <20140416204223.GL59714@giles.gnomon.org.uk>

On Wed, Apr 16, 2014 at 05:20:41PM +0200, Pieter Wuille wrote:
> On Wed, Apr 16, 2014 at 5:12 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
> > I think we should get to the bottom of this.  Should we assume that xp is
> > not secure enough?
> 
> Yes.

Do we need a similar warning for OS X 10.6?  The EOL of that one is
*far* less well known than XP (because of Apple's failure to
communicate product lifecycles).

roy


> 
> > What is this warning?
> 
> Windows XP is no longer maintained. Don't use such a system for
> protecting your money.
> 
> > Who is issuing this warning?
> 
> Microsoft: http://windows.microsoft.com/en-us/windows/end-support-help
> 
> The suggestion here is to make Bitcoin Core detect when it's running
> on Windows XP, and warn the user (they are likely unaware of the
> risks).
> 
> -- 
> Pieter
> 
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From laszlo at heliacal.net  Wed Apr 16 21:10:56 2014
From: laszlo at heliacal.net (Laszlo Hanyecz)
Date: Wed, 16 Apr 2014 21:10:56 +0000
Subject: [Bitcoin-development] Warning message when running wallet in
	Windows XP (or drop support?)
In-Reply-To: <20140416204223.GL59714@giles.gnomon.org.uk>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
	<534E9DDC.7000502@gmail.com>
	<CAPg+sBg-LBHx4sTR1QuK_-t1Yb+N+Vsi9BsyQ41vaWB6gFEHvw@mail.gmail.com>
	<20140416204223.GL59714@giles.gnomon.org.uk>
Message-ID: <07D78278-F882-42D3-AD52-84D168F104D2@heliacal.net>

I think a warning like this is inappropriate.

There are many reasons to use an out of date operating system and high level applications like wallets need not concern themselves with the rest of the system.  Maybe the wallet can scan your browser cache and tell you to stop visiting somesite.com too?

It just sounds like some kind of behavior modification that's being discussed here.. not-so-subtly suggesting that users shell out money for a newer version of the operating system, just to use their bitcoin wallets in a 'blessed' configuration.  This actually sounds very similar to what happens with Apple iPhones.. they somehow manage to 'invalidate' the charging cables and accessories with every major software version.  One day an accessory is working fine, then after the update users get a behavior modification nag every time they use it, urging them to buy a new one.  Along these same lines, might as well put a warning about the registry keys needing to be cleaned, and maybe a 'shock the money' banner[1].

You guys all know how it works with financial software - there are many organizations using decades old software (and hardware) because they know its shortcomings, they've taken care of them in a way that works them, and they don't want to start all over just for the sake of having the newest version.

-Laszlo

[1] http://www.buzzfeed.com/adobe/obnoxious-banner-ads-that-everyone-remembers


On Apr 16, 2014, at 8:42 PM, Roy Badami <roy at gnomon.org.uk> wrote:

> On Wed, Apr 16, 2014 at 05:20:41PM +0200, Pieter Wuille wrote:
>> On Wed, Apr 16, 2014 at 5:12 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
>>> I think we should get to the bottom of this.  Should we assume that xp is
>>> not secure enough?
>> 
>> Yes.
> 
> Do we need a similar warning for OS X 10.6?  The EOL of that one is
> *far* less well known than XP (because of Apple's failure to
> communicate product lifecycles).
> 
> roy
> 
> 
>> 
>>> What is this warning?
>> 
>> Windows XP is no longer maintained. Don't use such a system for
>> protecting your money.
>> 
>>> Who is issuing this warning?
>> 
>> Microsoft: http://windows.microsoft.com/en-us/windows/end-support-help
>> 
>> The suggestion here is to make Bitcoin Core detect when it's running
>> on Windows XP, and warn the user (they are likely unaware of the
>> risks).
>> 
>> -- 
>> Pieter
>> 
>> ------------------------------------------------------------------------------
>> Learn Graph Databases - Download FREE O'Reilly Book
>> "Graph Databases" is the definitive new guide to graph databases and their
>> applications. Written by three acclaimed leaders in the field,
>> this first edition is now available. Download your free book today!
>> http://p.sf.net/sfu/NeoTech
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
> 
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From kevinsisco61784 at gmail.com  Wed Apr 16 21:29:48 2014
From: kevinsisco61784 at gmail.com (Kevin)
Date: Wed, 16 Apr 2014 17:29:48 -0400
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <07D78278-F882-42D3-AD52-84D168F104D2@heliacal.net>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>	<534E9DDC.7000502@gmail.com>	<CAPg+sBg-LBHx4sTR1QuK_-t1Yb+N+Vsi9BsyQ41vaWB6gFEHvw@mail.gmail.com>	<20140416204223.GL59714@giles.gnomon.org.uk>
	<07D78278-F882-42D3-AD52-84D168F104D2@heliacal.net>
Message-ID: <534EF64C.8050000@gmail.com>

On 4/16/2014 5:10 PM, Laszlo Hanyecz wrote:
> I think a warning like this is inappropriate.
>
> There are many reasons to use an out of date operating system and high level applications like wallets need not concern themselves with the rest of the system.  Maybe the wallet can scan your browser cache and tell you to stop visiting somesite.com too?
>
> It just sounds like some kind of behavior modification that's being discussed here.. not-so-subtly suggesting that users shell out money for a newer version of the operating system, just to use their bitcoin wallets in a 'blessed' configuration.  This actually sounds very similar to what happens with Apple iPhones.. they somehow manage to 'invalidate' the charging cables and accessories with every major software version.  One day an accessory is working fine, then after the update users get a behavior modification nag every time they use it, urging them to buy a new one.  Along these same lines, might as well put a warning about the registry keys needing to be cleaned, and maybe a 'shock the money' banner[1].
>
> You guys all know how it works with financial software - there are many organizations using decades old software (and hardware) because they know its shortcomings, they've taken care of them in a way that works them, and they don't want to start all over just for the sake of having the newest version.
>
> -Laszlo
>
> [1] http://www.buzzfeed.com/adobe/obnoxious-banner-ads-that-everyone-remembers
>
>
> On Apr 16, 2014, at 8:42 PM, Roy Badami <roy at gnomon.org.uk> wrote:
>
>> On Wed, Apr 16, 2014 at 05:20:41PM +0200, Pieter Wuille wrote:
>>> On Wed, Apr 16, 2014 at 5:12 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
>>>> I think we should get to the bottom of this.  Should we assume that xp is
>>>> not secure enough?
>>> Yes.
>> Do we need a similar warning for OS X 10.6?  The EOL of that one is
>> *far* less well known than XP (because of Apple's failure to
>> communicate product lifecycles).
>>
>> roy
>>
>>
>>>> What is this warning?
>>> Windows XP is no longer maintained. Don't use such a system for
>>> protecting your money.
>>>
>>>> Who is issuing this warning?
>>> Microsoft: http://windows.microsoft.com/en-us/windows/end-support-help
>>>
>>> The suggestion here is to make Bitcoin Core detect when it's running
>>> on Windows XP, and warn the user (they are likely unaware of the
>>> risks).
>>>
>>> -- 
>>> Pieter
>>>
>>> ------------------------------------------------------------------------------
>>> Learn Graph Databases - Download FREE O'Reilly Book
>>> "Graph Databases" is the definitive new guide to graph databases and their
>>> applications. Written by three acclaimed leaders in the field,
>>> this first edition is now available. Download your free book today!
>>> http://p.sf.net/sfu/NeoTech
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>> ------------------------------------------------------------------------------
>> Learn Graph Databases - Download FREE O'Reilly Book
>> "Graph Databases" is the definitive new guide to graph databases and their
>> applications. Written by three acclaimed leaders in the field,
>> this first edition is now available. Download your free book today!
>> http://p.sf.net/sfu/NeoTech
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
Okay, so how about an autoupdate function which pulls a work around off 
the server?  Sooner or later, the vulnerabilities must be faced.


-- 
Kevin




From mark at monetize.io  Wed Apr 16 21:39:27 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Wed, 16 Apr 2014 14:39:27 -0700
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <534EF64C.8050000@gmail.com>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>	<534E9DDC.7000502@gmail.com>	<CAPg+sBg-LBHx4sTR1QuK_-t1Yb+N+Vsi9BsyQ41vaWB6gFEHvw@mail.gmail.com>	<20140416204223.GL59714@giles.gnomon.org.uk>	<07D78278-F882-42D3-AD52-84D168F104D2@heliacal.net>
	<534EF64C.8050000@gmail.com>
Message-ID: <534EF88F.0@monetize.io>

On 04/16/2014 02:29 PM, Kevin wrote:
> Okay, so how about an autoupdate function which pulls a work around off 
> the server?  Sooner or later, the vulnerabilities must be faced.

NO. Bitcoin Core will never have an auto-update functionality. That
would be a single point of failure whose compromise could result in the
theft of every last bitcoin held in a Bitcoin Core wallet.



From pieter.wuille at gmail.com  Wed Apr 16 22:00:28 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Thu, 17 Apr 2014 00:00:28 +0200
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <534EF88F.0@monetize.io>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
	<534E9DDC.7000502@gmail.com>
	<CAPg+sBg-LBHx4sTR1QuK_-t1Yb+N+Vsi9BsyQ41vaWB6gFEHvw@mail.gmail.com>
	<20140416204223.GL59714@giles.gnomon.org.uk>
	<07D78278-F882-42D3-AD52-84D168F104D2@heliacal.net>
	<534EF64C.8050000@gmail.com> <534EF88F.0@monetize.io>
Message-ID: <CAPg+sBi4QSpxSo8DBFuJR5ca1vuXYdauf5puPiY4js7Fvq+bLQ@mail.gmail.com>

On Wed, Apr 16, 2014 at 11:39 PM, Mark Friedenbach <mark at monetize.io> wrote:
> On 04/16/2014 02:29 PM, Kevin wrote:
>> Okay, so how about an autoupdate function which pulls a work around off
>> the server?  Sooner or later, the vulnerabilities must be faced.
>
> NO. Bitcoin Core will never have an auto-update functionality. That
> would be a single point of failure whose compromise could result in the
> theft of every last bitcoin held in a Bitcoin Core wallet.

Or, even accidentally, cause a hard forking bug to be rolled out (or
worsen one).

-- 
Pieter



From gmaxwell at gmail.com  Wed Apr 16 22:06:47 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 16 Apr 2014 15:06:47 -0700
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
Message-ID: <CAAS2fgRDmmv_EhUTRBfh8sBbCAoG_jcJeHE4fsKTHzOjoci4Gg@mail.gmail.com>

Bringing the thread back on-topic:

On Wed, Apr 16, 2014 at 1:14 AM, Wladimir <laanwj at gmail.com> wrote:
> Hello,
> Today I noticed that even my bank is warning people to not do internet
> banking with Windows XP.
> If it is no longer secure enough for online banking it's CERTAINLY not
> secure enough to run a wallet (for a node only it would be ok-ish as they
> have no keys to protect).
> Any opinions on what to do here?

I think eventually multi-wallet support will make it so that a wallet
won't be created by default. Instead users would create-wallet, which
would also give them options like using a HSM (e.g. trezor) or
multisig secured wallet.  That would be a great point where, if they
elect to run and ordinary unsecured wallet, and the software detects
that the host is known-to-not-likely-be-secure it could whine at them
and direct them to a security best practices page.

Then you also avoid whining at people who never run a wallet or use a
hsm making the host security somewhat moot.



From wtogami at gmail.com  Thu Apr 17 01:43:17 2014
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Wed, 16 Apr 2014 15:43:17 -1000
Subject: [Bitcoin-development] Bitcoin Core Nightly Builds
Message-ID: <CAEz79PoA=YRQYRwFRwn674fjf8ac_QyBHs_MwPR6bvzdWWtPUw@mail.gmail.com>

The Bitcoin Core developers have a desire to do a mostly bug-fix, cleanup
and translation update release in v0.9.2 a few weeks from now.  You do not
need to be a developer to help!  With these unofficial nightly builds,
power users can more easily aid in testing of the master branch which will
help to find bugs and polish things up faster.  Additionally translators
can more easily run the latest code and see what strings need to be
translated as we rapidly approach the next stable release.

https://bitcointalk.org/index.php?topic=571414.0
Read more details here.

Warren Togami
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140416/da6bc74c/attachment.html>

From rdwnj at yahoo.com  Thu Apr 17 03:37:56 2014
From: rdwnj at yahoo.com (Ron)
Date: Wed, 16 Apr 2014 20:37:56 -0700 (PDT)
Subject: [Bitcoin-development] Bitcoin-development Digest, Vol 35,
	Issue 61
In-Reply-To: <mailman.116544.1397680958.2171.bitcoin-development@lists.sourceforge.net>
References: <mailman.116544.1397680958.2171.bitcoin-development@lists.sourceforge.net>
Message-ID: <1397705876.21285.YahooMailNeo@web124504.mail.ne1.yahoo.com>


________________________________
...
Message: 4
Date: Wed, 16 Apr 2014 21:43:10 +0200
From: Adam Back <adam at cypherspace.org>
Subject: Re: [Bitcoin-development] Warning message when running wallet
??? in Windows XP (or drop support?)
To: Wladimir <laanwj at gmail.com>
Cc: Bitcoin Dev <bitcoin-development at lists.sourceforge.net>
Message-ID: <20140416194310.GA11552 at netbook.cypherspace.org>
Content-Type: text/plain; charset=iso-8859-1; format=flowed

Not to get snarky or OS elitist but as I understand it windows security,
even during its support period has been measured in low digit number of days
in the year when is NOT an outstanding known remote root compromise or
combination of remote user compromise + priviledge escalation.? Add in
phishing, watering holes, malware and the average windows computer is
probably compromised a dozen times over.? Apparently for sometime it was not
easily possible to secure it install boot - install OS, connect to network
to download security updates, IP range scanned and compromised faster than
you can patch it.

Adam
...
________________________________________________________________
Right.

The trick was to install off line, add your own (free or commercial s/w firewall) then 
connect, behind a router that had no port forwarding, etc.? Hell before cheap 
routers I ran one Win95B as I remember, using ICS to a hub that feed my LAN and in front 
was a dialup and a cable modem.? Atguard was the S/W firewall, worked great and 
never was penetrated.

And if one used IE for anything, or any form of Outlook one was and still is a fool. 
There are still fools who think that their Windows Vista, 7, 8 or 8.1 is safe because 
MS updates it days, weeks or longer after an exploit is found/exposed/known... And
they feel that they can install and run anything anyone says is OK?? No firewall can protect 
against shall we say digital naivety. 

Ah what fools these mortals be.? Then there are others that have never used IE, 
never installed/enabled Outlook, never enabled UPNP &/or, DCOM; never executed 
"unknown" s/w, and always had their own s/w firewall on, long before MS even 
thought of "Windows Firewall".? Does anyone (other than zone alarm) check for 
data leaving one's computer "unexpectedely"?? Those machines could run Win95B, 
Win98SE, NT4, Win2K, XP pro long past MS's "cut off date" and barely notice
anything. The show stopper is usually the browser (FF) or Adobe flash or pdf 
demanding more OS functions, usually so that they can perform more functions 
more poorly, I'm sorry to say.

Check the live desktop OSs connected to the internet, by version at 
Market share for mobile, browsers, operating systems and search engines | NetMarketShare 


 
 Market share for mobile, browsers, operating systems and search engines | NetMarketShare
Market share for mobile, browsers, operating systems, search engines and social media. Mobile market share and desktop market share data.  
View on www.netmarketshare.com Preview by Yahoo  
? last I checked, XP was still ~29% and all Windows versions, ~90%

Computer safety, like driver safety, has more to do with the knowledge and skill 
of the operator/driver, than the "newness" of the car/computer.? A good driver/computer 
user, never gets into a situation that he/she can't repair/reverse/prevent/recover from
etc.? Drive/run a motorcycle/computer and you will learn defensive driving/computing 

really fast or be roadkill on the highway/digital highway.

Ron
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140416/64a7443b/attachment.html>

From laanwj at gmail.com  Thu Apr 17 07:27:38 2014
From: laanwj at gmail.com (Wladimir)
Date: Thu, 17 Apr 2014 09:27:38 +0200
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <CACKnu1prEkZb5L4bGeKfjHtW+1CLmAuYr2-OWq0z5z+SvxhLTg@mail.gmail.com>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
	<CACKnu1prEkZb5L4bGeKfjHtW+1CLmAuYr2-OWq0z5z+SvxhLTg@mail.gmail.com>
Message-ID: <CA+s+GJCSCLz2sizKE_AqZssqCS_fVpJyNDL7PTvc4cBvtukrRA@mail.gmail.com>

On Wed, Apr 16, 2014 at 10:14 PM, Ben Carroll <ben at q9y.net> wrote:

While forcefully dropping XP support would seem like a waste of time, and
> somewhat arbitrary.  If windows builds just stops working for XP, it just
> stops working, however I don't foresee that happening.  I would make a
> reasonable guess that the client probably would even run without fuss on
> Win2k.
>

The _WIN32_WINNT define that is used (0x0501) makes Windows XP the lowest
version that the software will run on. It would be trivial to bump this to
Windows Vista (0x0600).

But in that case the user won't get a helpful message, the software will
outright refuse to run. So I thought, maybe it makes sense to show a
message that XP support is going to be removed - which must happen sooner
or later.

The insecurity of the platform adds urgence to this. So I thought "let's
ask for advice on the mailing list".

But what I get is contortions into unrelated topics (what does auto-update
have to do with this?), paranoid banter about 'manipulating users',
diversions into other topics. Sure, there's a thin line between being
helpful and being seen as manipulative, but it's over the top to compare
this with in-browser banners. It could be so much as a one-time message.

But it's time to close this issue. I'll do nothing here. I will however
stop testing on a Windows XP VM myself.

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140417/fac874f2/attachment.html>

From laanwj at gmail.com  Thu Apr 17 07:39:33 2014
From: laanwj at gmail.com (Wladimir)
Date: Thu, 17 Apr 2014 09:39:33 +0200
Subject: [Bitcoin-development] Warning message when running wallet in
 Windows XP (or drop support?)
In-Reply-To: <CAAS2fgRDmmv_EhUTRBfh8sBbCAoG_jcJeHE4fsKTHzOjoci4Gg@mail.gmail.com>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
	<CAAS2fgRDmmv_EhUTRBfh8sBbCAoG_jcJeHE4fsKTHzOjoci4Gg@mail.gmail.com>
Message-ID: <CA+s+GJBJgm8v5UZpwkF10UpP7-v3+DgsZZhedzu-6vad9cS2Qw@mail.gmail.com>

On Thu, Apr 17, 2014 at 12:06 AM, Gregory Maxwell <gmaxwell at gmail.com>wrote:

> Bringing the thread back on-topic:
>

Thanks.


>  On Wed, Apr 16, 2014 at 1:14 AM, Wladimir <laanwj at gmail.com> wrote:
> > Hello,
> > Today I noticed that even my bank is warning people to not do internet
> > banking with Windows XP.
> > If it is no longer secure enough for online banking it's CERTAINLY not
> > secure enough to run a wallet (for a node only it would be ok-ish as they
> > have no keys to protect).
> > Any opinions on what to do here?
>
> I think eventually multi-wallet support will make it so that a wallet
> won't be created by default.


After the wallet split-off this will also be easier:

- Bitcoin Core Node
- Bitcoin Core Wallet

The node would be as compatible as possible with any OS in existence, but
the wallet can be more picky.


> Instead users would create-wallet, which
> would also give them options like using a HSM (e.g. trezor) or
> multisig secured wallet.


HSMs complicate this; I'm not even sure how this will work, are the Trezor
guys planning to contribute support for their device to wallets including
Bitcoin Core?

Hopefully by that time, everyone will have forgotten about XP already :)

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140417/f7614f51/attachment.html>

From sharondvir at cs.huji.ac.il  Thu Apr 17 09:43:19 2014
From: sharondvir at cs.huji.ac.il (Sharon Dvir)
Date: Thu, 17 Apr 2014 12:43:19 +0300
Subject: [Bitcoin-development] question about ProcessMessage()
Message-ID: <534FA237.1010501@cs.huji.ac.il>

Hi, in main.cpp, ProcessMessage(), the line:
if (vAddr.size() < 1000) that appears at about line 3290
(not sure which, as I have made changes.)
What is the purpose of this line?
vAddr.size() was already checked at about line 3240, and if it was >
1000, the function has returned.
Is pfrom->fGetAddr allowed to be true iff  vAddr.size()==1000 ?
Could not find it in list archive.
Thanks.



From jtimon at monetize.io  Thu Apr 17 12:25:24 2014
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Thu, 17 Apr 2014 14:25:24 +0200
Subject: [Bitcoin-development] Timed testing
Message-ID: <CAC1+kJMrpx0tyE8d0wkwjBthhSPMCdr=9LrJHQFTF4G1vg4MAg@mail.gmail.com>

I'm implementing a new testing mode that produces blocks
periodically. You can get what I have so far here:

https://github.com/jtimon/bitcoin/tree/timed

It depends on pull request #3824 with some improvements on
CChainParams, but after that the changes required to add this new
mode are very small:

https://github.com/jtimon/bitcoin/commit/445321928a143cb9a6f56777cbb7479dd32c3bcd

I guess I need a new genesis block, different magic numbers, etc. So
this is definitely not ready.
You can run it like this:

bitcoind -timedtest -gen=1 blocktime=2000

blocktime defaults to 1000 milliseconds for timedtest mode and 0 for
the rest of the modes.

What could this testing mode be useful for?

Basically, simulations.
For example, you could run several nodes implementing different mining
policies. Let's say I want to mine 50% of the blocks with standard policy,
25% with policy A and 25% with policy B. I can run 1 one for each of
one with block times 2000, 1000 and 1000 respectively.

Maybe I want to detect performance bottlenecks by stressing this mode
with as many transaction as can be processed, maybe removing the
block size limits in the simulations.

But this still doesn't serve for hardfork or double-spend attacks
simulations without calculating any pow, which would be another
interesting feature for a new testing mode.
I would like to implement the new mode following as the concept of
private chains described in freimarkets:

http://freico.in/docs/freimarkets.pdf
https://github.com/jtimon/freimarkets/blob/master/doc/freimarkets_specs.org#private-ledgers
https://github.com/jtimon/freimarkets/blob/master/doc/freimarkets_specs.org#off-chain-transactions

I know this could be considered a "non-bitcoinish" application and
therefore be controversial as discussed in PR 3824, so I want to keep
the conversation focused on testing use cases useful to bitcoin itself
only: additional changes can be implemented elsewhere.
One way I think you could support chain races simulations by using a
private mode could be the following:

1) The private mode works like the timed mode in how often it
   produces blocks.

2) In private mode you replace the pow-related fields with a
   blockPubkeyScript and a lastBlockSigScript fields. In the genesis
   block, lastBlockSigScript is empty and the initial
   blockPubkeyScript can be an optional parameter like blocktime. You
   can set any valid script, probably p2sh, maybe with multisig to
   allow different nodes to sign.

3) In this context, longer chains mean "more work". Another way to
   see it is that all blocks just contain work==1 in them.

So let's say we want to simulate an attack using 50% standard and 50%
attacker blocks. You set up the private mode script to be a 1 of 2
multisig and make each node sign always with the same private key
(maybe an additional parameter).
You make the attacker reject any blocks from height X that he hasn't
signed himself to get the result you wanted: the standard node will
produce blocks on top of the longest chain while the attacker will
only hash on top of his own blocks.

So my question to the community is, how invasive is this to bitcoin's
source code?
In my opinion, done properly could actually result (apart from getting
the new features) in more readable code, not less, since you will
probably need to make sure proof of work functionality is properly
encapsulated during the implementation process (see PR 3839 for a first
step on that direction).
But, should I push a private mode to the core or just the timed one
and implement the private mode elsewhere?

Of course other comments on the parameters, defaults or any other
design or implementation details are also welcomed.

-- 
Jorge Tim?n

http://freico.in/



From gavinandresen at gmail.com  Thu Apr 17 13:00:54 2014
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Thu, 17 Apr 2014 09:00:54 -0400
Subject: [Bitcoin-development] Timed testing
In-Reply-To: <CAC1+kJMrpx0tyE8d0wkwjBthhSPMCdr=9LrJHQFTF4G1vg4MAg@mail.gmail.com>
References: <CAC1+kJMrpx0tyE8d0wkwjBthhSPMCdr=9LrJHQFTF4G1vg4MAg@mail.gmail.com>
Message-ID: <CABsx9T1HGwozy8pY+iStGZPmjenu0RQBVdtOy5ibiWG0BM4mZw@mail.gmail.com>

How is this different from just running in -regtest mode and asking the
nodes to generate a block after 1 or 2 seconds?

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140417/4fc02e51/attachment.html>

From brianchoffman at gmail.com  Thu Apr 17 14:37:45 2014
From: brianchoffman at gmail.com (Brian Hoffman)
Date: Thu, 17 Apr 2014 10:37:45 -0400
Subject: [Bitcoin-development] Timed testing
In-Reply-To: <CAC1+kJMrpx0tyE8d0wkwjBthhSPMCdr=9LrJHQFTF4G1vg4MAg@mail.gmail.com>
References: <CAC1+kJMrpx0tyE8d0wkwjBthhSPMCdr=9LrJHQFTF4G1vg4MAg@mail.gmail.com>
Message-ID: <CAADm4BAFSrEp1aHaS1LgZMJ7-fDhYRJ1ndZDYK8hfmJ+a7iBFg@mail.gmail.com>

"So my question to the community is, how invasive is this to bitcoin's
source code?"

I'd say not very considering you have regression testing mode.


On Thu, Apr 17, 2014 at 8:25 AM, Jorge Tim?n <jtimon at monetize.io> wrote:

> I'm implementing a new testing mode that produces blocks
> periodically. You can get what I have so far here:
>
> https://github.com/jtimon/bitcoin/tree/timed
>
> It depends on pull request #3824 with some improvements on
> CChainParams, but after that the changes required to add this new
> mode are very small:
>
>
> https://github.com/jtimon/bitcoin/commit/445321928a143cb9a6f56777cbb7479dd32c3bcd
>
> I guess I need a new genesis block, different magic numbers, etc. So
> this is definitely not ready.
> You can run it like this:
>
> bitcoind -timedtest -gen=1 blocktime=2000
>
> blocktime defaults to 1000 milliseconds for timedtest mode and 0 for
> the rest of the modes.
>
> What could this testing mode be useful for?
>
> Basically, simulations.
> For example, you could run several nodes implementing different mining
> policies. Let's say I want to mine 50% of the blocks with standard policy,
> 25% with policy A and 25% with policy B. I can run 1 one for each of
> one with block times 2000, 1000 and 1000 respectively.
>
> Maybe I want to detect performance bottlenecks by stressing this mode
> with as many transaction as can be processed, maybe removing the
> block size limits in the simulations.
>
> But this still doesn't serve for hardfork or double-spend attacks
> simulations without calculating any pow, which would be another
> interesting feature for a new testing mode.
> I would like to implement the new mode following as the concept of
> private chains described in freimarkets:
>
> http://freico.in/docs/freimarkets.pdf
>
> https://github.com/jtimon/freimarkets/blob/master/doc/freimarkets_specs.org#private-ledgers
>
> https://github.com/jtimon/freimarkets/blob/master/doc/freimarkets_specs.org#off-chain-transactions
>
> I know this could be considered a "non-bitcoinish" application and
> therefore be controversial as discussed in PR 3824, so I want to keep
> the conversation focused on testing use cases useful to bitcoin itself
> only: additional changes can be implemented elsewhere.
> One way I think you could support chain races simulations by using a
> private mode could be the following:
>
> 1) The private mode works like the timed mode in how often it
>    produces blocks.
>
> 2) In private mode you replace the pow-related fields with a
>    blockPubkeyScript and a lastBlockSigScript fields. In the genesis
>    block, lastBlockSigScript is empty and the initial
>    blockPubkeyScript can be an optional parameter like blocktime. You
>    can set any valid script, probably p2sh, maybe with multisig to
>    allow different nodes to sign.
>
> 3) In this context, longer chains mean "more work". Another way to
>    see it is that all blocks just contain work==1 in them.
>
> So let's say we want to simulate an attack using 50% standard and 50%
> attacker blocks. You set up the private mode script to be a 1 of 2
> multisig and make each node sign always with the same private key
> (maybe an additional parameter).
> You make the attacker reject any blocks from height X that he hasn't
> signed himself to get the result you wanted: the standard node will
> produce blocks on top of the longest chain while the attacker will
> only hash on top of his own blocks.
>
> So my question to the community is, how invasive is this to bitcoin's
> source code?
> In my opinion, done properly could actually result (apart from getting
> the new features) in more readable code, not less, since you will
> probably need to make sure proof of work functionality is properly
> encapsulated during the implementation process (see PR 3839 for a first
> step on that direction).
> But, should I push a private mode to the core or just the timed one
> and implement the private mode elsewhere?
>
> Of course other comments on the parameters, defaults or any other
> design or implementation details are also welcomed.
>
> --
> Jorge Tim?n
>
> http://freico.in/
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140417/b7b7e1bd/attachment.html>

From jtimon at monetize.io  Thu Apr 17 15:11:05 2014
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Thu, 17 Apr 2014 17:11:05 +0200
Subject: [Bitcoin-development] Timed testing
In-Reply-To: <CABsx9T1HGwozy8pY+iStGZPmjenu0RQBVdtOy5ibiWG0BM4mZw@mail.gmail.com>
References: <CAC1+kJMrpx0tyE8d0wkwjBthhSPMCdr=9LrJHQFTF4G1vg4MAg@mail.gmail.com>
	<CABsx9T1HGwozy8pY+iStGZPmjenu0RQBVdtOy5ibiWG0BM4mZw@mail.gmail.com>
Message-ID: <CAC1+kJPvzxsSDg3joraZbv_r1RroK9d6-v9O_15g6S7B46TwQg@mail.gmail.com>

On 4/17/14, Gavin Andresen <gavinandresen at gmail.com> wrote:
> How is this different from just running in -regtest mode and asking the
> nodes to generate a block after 1 or 2 seconds?

There's no difference, the -timedtest mode does exactly that. But
automatically instead of having to manually ask for a new block every
second.
I assume your position is that the difference is too small to justify
a new mode, or that you just don't see any value in it.

The -private mode, on the other hand, would allow you to simulate
proof of work attacks as described in the previous post, but maybe
there's a simpler way to do the same solely using regtest/timedtest.

Maybe I should have asked the following questions before proposing anything:

1) How does someone simulate a pow race situation without doing any
pow right now?
Does anybody try these things? How?

2) If I wanted to measure validation performance, to get the number of
peak tps that could be processed without taking block sides or network
latency into account, how would I do that? Has anybody tried this
before?



From mike at plan99.net  Thu Apr 17 15:49:40 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 17 Apr 2014 17:49:40 +0200
Subject: [Bitcoin-development] Timed testing
In-Reply-To: <CAC1+kJPvzxsSDg3joraZbv_r1RroK9d6-v9O_15g6S7B46TwQg@mail.gmail.com>
References: <CAC1+kJMrpx0tyE8d0wkwjBthhSPMCdr=9LrJHQFTF4G1vg4MAg@mail.gmail.com>
	<CABsx9T1HGwozy8pY+iStGZPmjenu0RQBVdtOy5ibiWG0BM4mZw@mail.gmail.com>
	<CAC1+kJPvzxsSDg3joraZbv_r1RroK9d6-v9O_15g6S7B46TwQg@mail.gmail.com>
Message-ID: <CANEZrP3s9SpBWxLYMvF5cLK4UeKS2SdKOLpNr40NKGoAzh=3nw@mail.gmail.com>

>
> 2) If I wanted to measure validation performance, to get the number of
> peak tps that could be processed without taking block sides or network
> latency into account, how would I do that? Has anybody tried this
> before?


You can just reindex/replay the chain. It's been done many times.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140417/a661951e/attachment.html>

From jtimon at monetize.io  Thu Apr 17 16:09:45 2014
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Thu, 17 Apr 2014 18:09:45 +0200
Subject: [Bitcoin-development] Timed testing
In-Reply-To: <CANEZrP3s9SpBWxLYMvF5cLK4UeKS2SdKOLpNr40NKGoAzh=3nw@mail.gmail.com>
References: <CAC1+kJMrpx0tyE8d0wkwjBthhSPMCdr=9LrJHQFTF4G1vg4MAg@mail.gmail.com>
	<CABsx9T1HGwozy8pY+iStGZPmjenu0RQBVdtOy5ibiWG0BM4mZw@mail.gmail.com>
	<CAC1+kJPvzxsSDg3joraZbv_r1RroK9d6-v9O_15g6S7B46TwQg@mail.gmail.com>
	<CANEZrP3s9SpBWxLYMvF5cLK4UeKS2SdKOLpNr40NKGoAzh=3nw@mail.gmail.com>
Message-ID: <CAC1+kJMxjNReSMxm=vDB-iYyXTqBvXq5_aw0Z3onds0zF-Oq=w@mail.gmail.com>

On 4/17/14, Mike Hearn <mike at plan99.net> wrote:
>>
>> 2) If I wanted to measure validation performance, to get the number of
>> peak tps that could be processed without taking block sides or network
>> latency into account, how would I do that? Has anybody tried this
>> before?
>
>
> You can just reindex/replay the chain. It's been done many times.

Yes, thank you. I guess that's what everybody is doing to measure
validation performance.
So I guess the timedtest mode doesn't make much sense, at most only as
the blocktime parameter defaulting to zero. If bool
MineBlocksOnDemand() gets refactored out of ChainParams into a
parameter (maybe just use genproclimit ?), you can have the periodic
block generation and the generation on demand reusing the same regtest
mode.

So it seems a new mode only makes sense if the -private mode makes
sense, which in turn only makes sense to include in bitcoind if it's
useful enough for the network attack simulations, which remains the
open question.



From mark at monetize.io  Thu Apr 17 16:35:52 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Thu, 17 Apr 2014 09:35:52 -0700
Subject: [Bitcoin-development] Timed testing
In-Reply-To: <CANEZrP3s9SpBWxLYMvF5cLK4UeKS2SdKOLpNr40NKGoAzh=3nw@mail.gmail.com>
References: <CAC1+kJMrpx0tyE8d0wkwjBthhSPMCdr=9LrJHQFTF4G1vg4MAg@mail.gmail.com>	<CABsx9T1HGwozy8pY+iStGZPmjenu0RQBVdtOy5ibiWG0BM4mZw@mail.gmail.com>	<CAC1+kJPvzxsSDg3joraZbv_r1RroK9d6-v9O_15g6S7B46TwQg@mail.gmail.com>
	<CANEZrP3s9SpBWxLYMvF5cLK4UeKS2SdKOLpNr40NKGoAzh=3nw@mail.gmail.com>
Message-ID: <535002E8.5020107@monetize.io>

Not necessarily. Running a private server involves listening to the p2p
network for incoming transactions, performing validation on receipt and
organizing a mempool, performing transaction selection, and relaying
blocks to auditors - none of which is tested in a reindex.

A reindex would give you an optimistic upper bound though, if that's all
you care about.

On 04/17/2014 08:49 AM, Mike Hearn wrote:
>     2) If I wanted to measure validation performance, to get the number of
>     peak tps that could be processed without taking block sides or network
>     latency into account, how would I do that? Has anybody tried this
>     before?
> 
> You can just reindex/replay the chain. It's been done many times. 



From gavinandresen at gmail.com  Thu Apr 17 17:07:48 2014
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Thu, 17 Apr 2014 13:07:48 -0400
Subject: [Bitcoin-development] Timed testing
In-Reply-To: <CAC1+kJMxjNReSMxm=vDB-iYyXTqBvXq5_aw0Z3onds0zF-Oq=w@mail.gmail.com>
References: <CAC1+kJMrpx0tyE8d0wkwjBthhSPMCdr=9LrJHQFTF4G1vg4MAg@mail.gmail.com>
	<CABsx9T1HGwozy8pY+iStGZPmjenu0RQBVdtOy5ibiWG0BM4mZw@mail.gmail.com>
	<CAC1+kJPvzxsSDg3joraZbv_r1RroK9d6-v9O_15g6S7B46TwQg@mail.gmail.com>
	<CANEZrP3s9SpBWxLYMvF5cLK4UeKS2SdKOLpNr40NKGoAzh=3nw@mail.gmail.com>
	<CAC1+kJMxjNReSMxm=vDB-iYyXTqBvXq5_aw0Z3onds0zF-Oq=w@mail.gmail.com>
Message-ID: <CABsx9T23Upk+eAaHa_dPa1hQEZO1RPRMv7HfiLzbSrR14Z+NSg@mail.gmail.com>

On Thu, Apr 17, 2014 at 12:09 PM, Jorge Tim?n <jtimon at monetize.io> wrote:

> So it seems a new mode only makes sense if the -private mode makes
> sense, which in turn only makes sense to include in bitcoind if it's
> useful enough for the network attack simulations, which remains the
> open question.
>

Unless I misunderstood what your private mode does, you can get the same
effect with -regtest by just controlling nodes connectivity. For example:

Start 2 nodes, connected to each other. Mine a -regtest chain they both
agree on.

Restart them so they're not connected.  Have one mine normally,
have the other  mine... however you like to simulate some attack (deep
chain re-org, double-spend,
whatever).

To simulate launching the attack, connect them together again, let the two
chains compete and see
what happens.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140417/481e77ff/attachment.html>

From jtimon at monetize.io  Thu Apr 17 17:43:35 2014
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Thu, 17 Apr 2014 19:43:35 +0200
Subject: [Bitcoin-development] Timed testing
In-Reply-To: <CABsx9T23Upk+eAaHa_dPa1hQEZO1RPRMv7HfiLzbSrR14Z+NSg@mail.gmail.com>
References: <CAC1+kJMrpx0tyE8d0wkwjBthhSPMCdr=9LrJHQFTF4G1vg4MAg@mail.gmail.com>
	<CABsx9T1HGwozy8pY+iStGZPmjenu0RQBVdtOy5ibiWG0BM4mZw@mail.gmail.com>
	<CAC1+kJPvzxsSDg3joraZbv_r1RroK9d6-v9O_15g6S7B46TwQg@mail.gmail.com>
	<CANEZrP3s9SpBWxLYMvF5cLK4UeKS2SdKOLpNr40NKGoAzh=3nw@mail.gmail.com>
	<CAC1+kJMxjNReSMxm=vDB-iYyXTqBvXq5_aw0Z3onds0zF-Oq=w@mail.gmail.com>
	<CABsx9T23Upk+eAaHa_dPa1hQEZO1RPRMv7HfiLzbSrR14Z+NSg@mail.gmail.com>
Message-ID: <CAC1+kJOXgMY1N+5uyyQ3Z=w=db9LPrBha=0z_2r4ND4VpsS-Vw@mail.gmail.com>

Thank you for all the explanations on how to use regtest to reproduce
the example scenarios.
It seems like a private mode wouldn't be particularly helpful for
testing so I won't create a pull request and will just work on the
private chains separately from bitcoind.

Going back to chainparam modes in general, I've heard Sipa complain
some times about regtest being too specific, arguing that some of the
behaviors should be specified as independent parameters instead of
chainparams attributes.
One example could be bool CChainPrams::MineBlocksOnDemand() (see
https://github.com/jtimon/bitcoin/commit/5bd4bc7f3694e46568c9276f0cb26402dfb99718
).
If that was an independent parameter that people set to true when
using regtest, the blocktime param I was proposing for -timedtest
could also be implemented as an independent parameter without any need
for a new mode.

It's not clear to me if the timedtest parameter would be useful for
bitcoind testing or not, but it's just something I've noticed while
playing with this part of the code.
Sipa, is this the kind of thing you refer to when you say regtest is
too specific?
Do you have any suggestion on how to solve the issue as part of PR 3824?

Well, any suggestions from anyone on how to improve PR 3824 are
welcomed, I was just asking specifically to sipa because as said it is
my understanding that he had some complaints about regtest and I think
this is something simple enough for me to start contributing to
bitcoind. Specially given that I was going to review all that part of
the code to externally write the private mode anyway.

-- 
Jorge Tim?n

http://freico.in/



From matthieu at blockcypher.com  Thu Apr 17 18:00:04 2014
From: matthieu at blockcypher.com (Matthieu Riou)
Date: Thu, 17 Apr 2014 11:00:04 -0700
Subject: [Bitcoin-development] question about ProcessMessage()
In-Reply-To: <534FA237.1010501@cs.huji.ac.il>
References: <534FA237.1010501@cs.huji.ac.il>
Message-ID: <CAHUNwMoSG+C8T4_69j3-qmM_Z=WYixARYuAr1CEUv6Wxq6kajA@mail.gmail.com>

Github has a nice feature that lets you link to a specific line of code:

https://github.com/bitcoin/bitcoin/blob/master/src/main.cpp#L3549

Is it the line you're referring to? It just flags the peer as at that point
we know we don't have more addresses to learn from it (peers send 1000
addrs). The previous
check<https://github.com/bitcoin/bitcoin/blob/master/src/main.cpp#L3497>only
applies for peers sending an addr message that would have more than
1000 addresses, which is disallowed to prevent flooding. And no number is
both greater and lesser than 1000 :)

Matthieu


On Thu, Apr 17, 2014 at 2:43 AM, Sharon Dvir <sharondvir at cs.huji.ac.il>wrote:

> Hi, in main.cpp, ProcessMessage(), the line:
> if (vAddr.size() < 1000) that appears at about line 3290
> (not sure which, as I have made changes.)
> What is the purpose of this line?
> vAddr.size() was already checked at about line 3240, and if it was >
> 1000, the function has returned.
> Is pfrom->fGetAddr allowed to be true iff  vAddr.size()==1000 ?
> Could not find it in list archive.
> Thanks.
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140417/35590b2a/attachment.html>

From tier.nolan at gmail.com  Thu Apr 17 21:41:55 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Thu, 17 Apr 2014 22:41:55 +0100
Subject: [Bitcoin-development] Tree-chains preliminary summary
In-Reply-To: <20140328151030.GJ3180@nl.grid.coop>
References: <20140322084702.GA13436@savin> <20140322150836.GG3180@nl.grid.coop>
	<20140322190825.GB6047@savin> <532DE7E6.4050304@monetize.io>
	<20140325122851.GA9818@savin> <5331EF3D.4000504@monetize.io>
	<CAAS2fgTovm7OtFFqdRYWDw5KxV+r5WD598JPnG5ydMYAs_gQWg@mail.gmail.com>
	<CAC1+kJMkiVLEnHKibWbaCdtEwCE30M4SPM96H6Nq7kZey-_4eg@mail.gmail.com>
	<20140328151030.GJ3180@nl.grid.coop>
Message-ID: <CAE-z3OX-sfZWqzPGZA3VGxDFvFV9GAVUEnnu4TccEZeH=pVB1w@mail.gmail.com>

How does this system handle problems with the lower chains after they have
been "locked-in"?

The rule is that if a block in the child chain is pointed to by its parent,
then it effectively has infinite POW?

The point of the system is that a node monitoring the parent chain only has
to watch the header chain for its 2 children.

A parent block header could point to an invalid block in one of the child
chains.  That parent block could end up built on top of before the problem
was discovered.

This would mean that a child chain problem could cause a roll-back of a
parent chain.  This violates the principle that parents are dominant over
child chains.

Alternatively, the child chain could discard the infinite POW blocks, since
they are illegal.

P1 -> C1
P2 -> ---
P3 -> C3
P4 -> C5

It turns out C4 (or C5) was an invalid block

P5 -> C4'
P6 -> ---
P7 -> C8'

This is a valid sequence.  Once P7 points at C8, the alternative chain
displaces C5.

This displacement could require a compact fraud proof to show that C4 was
an illegal block and that C5 was built on it.

This shouldn't happen if the miner was actually watching the log(N) chains,
but can't be guaranteed against.

I wonder if the proof of stake "nothing is at stake" principle applies
here.  Miners aren't putting anything at stake by merge mining the lower
chains.

At minimum, they should get tx-fees for the lower chains that they merge
mine.  The rule could require that the minting reward is divided over the
merge mined chains.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140417/61776f00/attachment.html>

From jgarzik at bitpay.com  Fri Apr 18 14:26:17 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Fri, 18 Apr 2014 10:26:17 -0400
Subject: [Bitcoin-development] mid-term bitcoin security (Re: Warning
 message when running wallet in Windows XP (or drop support?))
In-Reply-To: <20140416110627.GA8131@netbook.cypherspace.org>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>
	<CAKaEYhKDDCSOiygnfsMpO-dQKjwHnm0icoH9+oGqo+114_9sAQ@mail.gmail.com>
	<CA+s+GJB6aThjpMOUodK2Uc-jw=x6rSuRyX5gqsS+mK=DxJ7N5g@mail.gmail.com>
	<20140416110627.GA8131@netbook.cypherspace.org>
Message-ID: <CAJHLa0Pzazg2zXGA3ZBDg3GLgoGYhP6uzy804u69s+sR3w7vMA@mail.gmail.com>

On Wed, Apr 16, 2014 at 7:06 AM, Adam Back <adam at cypherspace.org> wrote:
> Btw not to reignite the stealth vs reusable address bike shedding, but
> contrarily I was thinking it maybe actually better to try to rebrand address
> as "invoice number".  People understand double paying an invoice is not a
> good idea.  And if they receive the same invoice twice they'll query it.

And that is certainly how BitPay works today, including the language used.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From justusranvier at gmail.com  Fri Apr 18 14:39:14 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Fri, 18 Apr 2014 14:39:14 +0000
Subject: [Bitcoin-development] mid-term bitcoin security (Re: Warning
 message when running wallet in Windows XP (or drop support?))
In-Reply-To: <20140416110627.GA8131@netbook.cypherspace.org>
References: <CA+s+GJDdENtqQt1f+L5htuuyPxUxsq0prLQFBLirTjJz0nG1gw@mail.gmail.com>	<CAKaEYhKDDCSOiygnfsMpO-dQKjwHnm0icoH9+oGqo+114_9sAQ@mail.gmail.com>	<CA+s+GJB6aThjpMOUodK2Uc-jw=x6rSuRyX5gqsS+mK=DxJ7N5g@mail.gmail.com>
	<20140416110627.GA8131@netbook.cypherspace.org>
Message-ID: <53513912.6050302@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 04/16/2014 11:06 AM, Adam Back wrote:
> Btw not to reignite the stealth vs reusable address bike shedding,
> but contrarily I was thinking it maybe actually better to try to
> rebrand address as "invoice number".  People understand double
> paying an invoice is not a good idea.  And if they receive the same
> invoice twice they'll query it.

"Invoice number" is still too coarse-grained.

If anyone cared about user privacy, then whatever was supplied to
users as an "invoice number" would be a BIP32 extended public key, or
something equivalent to that, which would allow the payer to create as
many unique addresses as they needed to avoid merging inputs.

Also, from a business accounting perspective it's broken and wrong to
assume a 1:1 relationship between payment transactions and invoices
anyway:

http://bitcoinism.blogspot.com/2014/01/business-accounting-and-bitcoin-privacy.html

- -- 
Support online privacy by using email encryption whenever possible.
Learn how here: http://www.youtube.com/watch?v=bakOKJFtB-k
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTUTkSAAoJECoisBQbQ4v0t44H/1dl/QFBbJKNatghyaCnrcYE
eQlq6RtUo9ZCGTehg4K8Q3wlHcNxTi5ojkZ0ccf9O6lWFAO3Dij9jeiUB0irX1SP
leGVV6I3CU6DYMLN+1AHqeHfGQ6T367zdlc69TO5E3Z3nEfStWVAnp6BwraDpgLs
OslTSlWiqAFZRrP9G18E7OF/jZcjxdW5QUuQk1ktW0yyZpL6LuwWHqRwoJ0LuR/V
nL/OeUUHD3k563c4et5uejVkoGRkLOnk9rLiAQNeX6FfL5T4t2Ae/45PywiLmXoN
7Egd9g7pDU0qZMnXTd9/JLMi1Vlx61pKogg3xSj/NLQuUwJJDTbua7dxjXOtC8I=
=9KG3
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x1B438BF4.asc
Type: application/pgp-keys
Size: 21191 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140418/e3436a10/attachment.bin>

From bitcoin at olivere.de  Sat Apr 19 21:34:23 2014
From: bitcoin at olivere.de (Oliver Egginger)
Date: Sat, 19 Apr 2014 23:34:23 +0200
Subject: [Bitcoin-development] Update alert false positives
Message-ID: <5352EBDF.2090504@olivere.de>

Hello,

bitcoin-qt produces on many systems an unnecessary alert:

"URGENT: Upgrade required: see https://www.bitcoin.org/heartbleed"

Especially the stable channel is affected:

https://launchpad.net/~bitcoin/+archive/bitcoin

This is a bit frightening for normal users. I think the best would be to
turn off this message (if possible). It produces too many false
positives and motivates people to maybe harmful workarounds.

- oliver



From patrick at intersango.com  Sat Apr 19 21:39:51 2014
From: patrick at intersango.com (patrick)
Date: Sat, 19 Apr 2014 16:39:51 -0500
Subject: [Bitcoin-development] Update alert false positives
In-Reply-To: <5352EBDF.2090504@olivere.de>
References: <5352EBDF.2090504@olivere.de>
Message-ID: <5352ED27.5080403@intersango.com>

The alert system filters based on the clients version number.

The ubuntu bitcoin ppa is dynamically linked to openssl unlike the 
binaries available from bitcoin.org

There is no way currently to notify users of 0.9.0 w/ static linking 
without also notify 0.9.0 w/ dynamic linking.

On 04/19/2014 04:34 PM, Oliver Egginger wrote:
> Hello,
>
> bitcoin-qt produces on many systems an unnecessary alert:
>
> "URGENT: Upgrade required: see https://www.bitcoin.org/heartbleed"
>
> Especially the stable channel is affected:
>
> https://launchpad.net/~bitcoin/+archive/bitcoin
>
> This is a bit frightening for normal users. I think the best would be to
> turn off this message (if possible). It produces too many false
> positives and motivates people to maybe harmful workarounds.
>
> - oliver
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From jameson.lopp at gmail.com  Sat Apr 19 22:41:43 2014
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Sat, 19 Apr 2014 18:41:43 -0400
Subject: [Bitcoin-development] Update alert false positives
In-Reply-To: <5352ED27.5080403@intersango.com>
References: <5352EBDF.2090504@olivere.de> <5352ED27.5080403@intersango.com>
Message-ID: <5352FBA7.1010701@gmail.com>

Looks like Matt just pushed out new builds to the Ubuntu PPA, so this issue should resolve itself shortly.

- Jameson

On 04/19/2014 05:39 PM, patrick wrote:
> The alert system filters based on the clients version number.
> 
> The ubuntu bitcoin ppa is dynamically linked to openssl unlike the 
> binaries available from bitcoin.org
> 
> There is no way currently to notify users of 0.9.0 w/ static linking 
> without also notify 0.9.0 w/ dynamic linking.
> 
> On 04/19/2014 04:34 PM, Oliver Egginger wrote:
>> Hello,
>>
>> bitcoin-qt produces on many systems an unnecessary alert:
>>
>> "URGENT: Upgrade required: see https://www.bitcoin.org/heartbleed"
>>
>> Especially the stable channel is affected:
>>
>> https://launchpad.net/~bitcoin/+archive/bitcoin
>>
>> This is a bit frightening for normal users. I think the best would be to
>> turn off this message (if possible). It produces too many false
>> positives and motivates people to maybe harmful workarounds.
>>
>> - oliver
>>
>> ------------------------------------------------------------------------------
>> Learn Graph Databases - Download FREE O'Reilly Book
>> "Graph Databases" is the definitive new guide to graph databases and their
>> applications. Written by three acclaimed leaders in the field,
>> this first edition is now available. Download your free book today!
>> http://p.sf.net/sfu/NeoTech
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> 
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From mjgehl at gmail.com  Sun Apr 20 12:35:08 2014
From: mjgehl at gmail.com (Mike Gehl)
Date: Sun, 20 Apr 2014 07:35:08 -0500
Subject: [Bitcoin-development] "bits": Unit of account
Message-ID: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>

The usefulness of a "bitcoin" unit will decrease as the value of the
network increases. Today, a majority of transactions are denominated
in fractions of a bitcoin. As a consequence, millibitcoin (mBTC) and
microbitcoin (uBTC) units have been introduced to alleviate the
decimal problem.

While SI units are great for people well versed in them, there is a
very good reason people aren't asking for 100 micro dollars in change.
The average person is not going to be confident that the prefix they
are using is the correct one, people WILL send 1000x more or less than
intended if we go down this road, and these mistakes will happen
frequently. Labeling should be easy enough for kindergarten kids.

I propose that users are offered a preference to denominate the
Bitcoin currency in a unit called a bit. Where one bitcoin (BTC)
equals one million bits (bits) and one bit equals 100 satoshis.

For a user discussion on the topic see:
http://www.reddit.com/r/Bitcoin/comments/23flcn/bits_instead_of_%CE%BCbtc/
http://www.reddit.com/r/Bitcoin/comments/1rmto3/its_bits/



From rob.golding at astutium.com  Sun Apr 20 13:15:57 2014
From: rob.golding at astutium.com (Rob Golding)
Date: Sun, 20 Apr 2014 14:15:57 +0100
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
Message-ID: <015001cf5c9a$aac3c770$004b5650$@golding@astutium.com>

> The average person is not going to be confident that the prefix they
> are using is the correct one, 

The use of any 'prefix' is one of choice and entirely unnecessary, and there
are already established 'divisions' in u/mBTC for those that feel they need
to use such things.

> people WILL send 1000x more or less than
> intended if we go down this road, 

Exceptionally unlikely - I deal every day with currencies with 0, 2 and 3
dp's in amount ranging from 'under 1 whole unit' to tens of thousands - Not
once in 20 years has anyone ever 'sent' more or less than intended - oh,
they've 'intended' to underpay just fine, but never *unintended*.

> I propose that users are offered a preference to denominate the
> Bitcoin currency in a unit called a bit. Where one bitcoin (BTC)
> equals one million bits (bits) and one bit equals 100 satoshis.

I propose that for people unable to understand what a bitcoin is, they can
just use satoshi's and drop this entire proposal.

Rob




From tamas at bitsofproof.com  Sun Apr 20 14:28:52 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Sun, 20 Apr 2014 16:28:52 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <015001cf5c9a$aac3c770$004b5650$@golding@astutium.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<015001cf5c9a$aac3c770$004b5650$@golding@astutium.com>
Message-ID: <3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>

People on this list are mostly engineers who have no problem dealing with magnitudes and have rather limited empathy for people who have a problem with them.
They also tend to think, that because they invented money 2.0 they would not need to care of finance?s or people?s current customs. 

The importance of their decisions in these questions will fade as people already use wallets other than the core.

Bring this particular discussion elsewhere, to the wallet developer. 

BTW the topic was discussed here several times, you have my support and Jeff Garzik?s.

Regards,

Tamas Blummer
http://bitsofproof.com

On 20.04.2014, at 15:15, Rob Golding <rob.golding at astutium.com> wrote:

>> The average person is not going to be confident that the prefix they
>> are using is the correct one, 
> 
> The use of any 'prefix' is one of choice and entirely unnecessary, and there
> are already established 'divisions' in u/mBTC for those that feel they need
> to use such things.
> 
>> people WILL send 1000x more or less than
>> intended if we go down this road, 
> 
> Exceptionally unlikely - I deal every day with currencies with 0, 2 and 3
> dp's in amount ranging from 'under 1 whole unit' to tens of thousands - Not
> once in 20 years has anyone ever 'sent' more or less than intended - oh,
> they've 'intended' to underpay just fine, but never *unintended*.
> 
>> I propose that users are offered a preference to denominate the
>> Bitcoin currency in a unit called a bit. Where one bitcoin (BTC)
>> equals one million bits (bits) and one bit equals 100 satoshis.
> 
> I propose that for people unable to understand what a bitcoin is, they can
> just use satoshi's and drop this entire proposal.
> 
> Rob
> 
> 
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140420/1fb70649/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140420/1fb70649/attachment.sig>

From christophe.biocca at gmail.com  Sun Apr 20 14:52:42 2014
From: christophe.biocca at gmail.com (Christophe Biocca)
Date: Sun, 20 Apr 2014 10:52:42 -0400
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>
Message-ID: <CANOOu=-JB4nZpEPRq+X_JBHJsGGvOsTVKROkciRu4SCp_EL4Vg@mail.gmail.com>

If you absolutely want a name for some small unit (which may be
valuable, not knocking that part of the idea), please use anything
other than "bits", which is already a massively overloaded term that
will confuse the hell out of people:

Harddrive costs measured in "bits per gigabyte"?
An itunes movie download that costs 200,000 bits and takes 804.2
megabytes of space?
Or a 10-megabit internet connection costing 10,000,000 bits per month?

It's especially bad given that bitcoin will likely be adopted first
for online use, where the competing (and more recognized) meaning of
"bit" is most prevalent.

Not to mention the overlap within bitcoin itself, with people already
using "millibits" in conversation as a shorthand for mBTC. Hence one
new "bit" is exactly 1/1000 of the old "millibit".

Make something up if you have to, or just use satoshis.

On Sun, Apr 20, 2014 at 10:28 AM, Tamas Blummer <tamas at bitsofproof.com> wrote:
> People on this list are mostly engineers who have no problem dealing with
> magnitudes and have rather limited empathy for people who have a problem
> with them.
> They also tend to think, that because they invented money 2.0 they would not
> need to care of finance?s or people?s current customs.
>
> The importance of their decisions in these questions will fade as people
> already use wallets other than the core.
>
> Bring this particular discussion elsewhere, to the wallet developer.
>
> BTW the topic was discussed here several times, you have my support and Jeff
> Garzik?s.
>
> Regards,
>
> Tamas Blummer
> http://bitsofproof.com
>
> On 20.04.2014, at 15:15, Rob Golding <rob.golding at astutium.com> wrote:
>
> The average person is not going to be confident that the prefix they
> are using is the correct one,
>
>
> The use of any 'prefix' is one of choice and entirely unnecessary, and there
> are already established 'divisions' in u/mBTC for those that feel they need
> to use such things.
>
> people WILL send 1000x more or less than
> intended if we go down this road,
>
>
> Exceptionally unlikely - I deal every day with currencies with 0, 2 and 3
> dp's in amount ranging from 'under 1 whole unit' to tens of thousands - Not
> once in 20 years has anyone ever 'sent' more or less than intended - oh,
> they've 'intended' to underpay just fine, but never *unintended*.
>
> I propose that users are offered a preference to denominate the
> Bitcoin currency in a unit called a bit. Where one bitcoin (BTC)
> equals one million bits (bits) and one bit equals 100 satoshis.
>
>
> I propose that for people unable to understand what a bitcoin is, they can
> just use satoshi's and drop this entire proposal.
>
> Rob
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From pieter.wuille at gmail.com  Sun Apr 20 14:53:05 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Sun, 20 Apr 2014 16:53:05 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>
Message-ID: <CAPg+sBha=cUHOWcU29yLrC4WTy5EghOGpVGAcQ8S0fuMvpLeRw@mail.gmail.com>

I told him specifically to bring it here (on a pull request for
Bitcoin Core), as there is no point in making such convention changes
to just one client.

I wasn't aware of any discussion about the "bits" proposal here before.

On Sun, Apr 20, 2014 at 4:28 PM, Tamas Blummer <tamas at bitsofproof.com> wrote:
> People on this list are mostly engineers who have no problem dealing with
> magnitudes and have rather limited empathy for people who have a problem
> with them.
> They also tend to think, that because they invented money 2.0 they would not
> need to care of finance's or people's current customs.
>
> The importance of their decisions in these questions will fade as people
> already use wallets other than the core.
>
> Bring this particular discussion elsewhere, to the wallet developer.
>
> BTW the topic was discussed here several times, you have my support and Jeff
> Garzik's.
>
> Regards,
>
> Tamas Blummer
> http://bitsofproof.com
>
> On 20.04.2014, at 15:15, Rob Golding <rob.golding at astutium.com> wrote:
>
> The average person is not going to be confident that the prefix they
> are using is the correct one,
>
>
> The use of any 'prefix' is one of choice and entirely unnecessary, and there
> are already established 'divisions' in u/mBTC for those that feel they need
> to use such things.
>
> people WILL send 1000x more or less than
> intended if we go down this road,
>
>
> Exceptionally unlikely - I deal every day with currencies with 0, 2 and 3
> dp's in amount ranging from 'under 1 whole unit' to tens of thousands - Not
> once in 20 years has anyone ever 'sent' more or less than intended - oh,
> they've 'intended' to underpay just fine, but never *unintended*.
>
> I propose that users are offered a preference to denominate the
> Bitcoin currency in a unit called a bit. Where one bitcoin (BTC)
> equals one million bits (bits) and one bit equals 100 satoshis.
>
>
> I propose that for people unable to understand what a bitcoin is, they can
> just use satoshi's and drop this entire proposal.
>
> Rob
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From tamas at bitsofproof.com  Sun Apr 20 15:05:47 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Sun, 20 Apr 2014 17:05:47 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CAPg+sBha=cUHOWcU29yLrC4WTy5EghOGpVGAcQ8S0fuMvpLeRw@mail.gmail.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>
	<CAPg+sBha=cUHOWcU29yLrC4WTy5EghOGpVGAcQ8S0fuMvpLeRw@mail.gmail.com>
Message-ID: <DFFB1B2C-F10B-4CF7-9D01-F6A27F9FA229@bitsofproof.com>

Here is an earlier reference to bits:

https://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg04248.html

I forgot that Alan Reiner was also supporting a unit equals to bits :

https://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg04264.html

and here the earlier going back to March 2013 and a poll at that time pushing for XBT being 1 bit

https://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg04256.html

Regards,

Tamas Blummer
http://bitsofproof.com

On 20.04.2014, at 16:53, Pieter Wuille <pieter.wuille at gmail.com> wrote:

> I told him specifically to bring it here (on a pull request for
> Bitcoin Core), as there is no point in making such convention changes
> to just one client.
> 
> I wasn't aware of any discussion about the "bits" proposal here before.
> 
> On Sun, Apr 20, 2014 at 4:28 PM, Tamas Blummer <tamas at bitsofproof.com> wrote:
>> People on this list are mostly engineers who have no problem dealing with
>> magnitudes and have rather limited empathy for people who have a problem
>> with them.
>> They also tend to think, that because they invented money 2.0 they would not
>> need to care of finance's or people's current customs.
>> 
>> The importance of their decisions in these questions will fade as people
>> already use wallets other than the core.
>> 
>> Bring this particular discussion elsewhere, to the wallet developer.
>> 
>> BTW the topic was discussed here several times, you have my support and Jeff
>> Garzik's.
>> 
>> Regards,
>> 
>> Tamas Blummer
>> http://bitsofproof.com
>> 
>> On 20.04.2014, at 15:15, Rob Golding <rob.golding at astutium.com> wrote:
>> 
>> The average person is not going to be confident that the prefix they
>> are using is the correct one,
>> 
>> 
>> The use of any 'prefix' is one of choice and entirely unnecessary, and there
>> are already established 'divisions' in u/mBTC for those that feel they need
>> to use such things.
>> 
>> people WILL send 1000x more or less than
>> intended if we go down this road,
>> 
>> 
>> Exceptionally unlikely - I deal every day with currencies with 0, 2 and 3
>> dp's in amount ranging from 'under 1 whole unit' to tens of thousands - Not
>> once in 20 years has anyone ever 'sent' more or less than intended - oh,
>> they've 'intended' to underpay just fine, but never *unintended*.
>> 
>> I propose that users are offered a preference to denominate the
>> Bitcoin currency in a unit called a bit. Where one bitcoin (BTC)
>> equals one million bits (bits) and one bit equals 100 satoshis.
>> 
>> 
>> I propose that for people unable to understand what a bitcoin is, they can
>> just use satoshi's and drop this entire proposal.
>> 
>> Rob
>> 
>> 
>> ------------------------------------------------------------------------------
>> Learn Graph Databases - Download FREE O'Reilly Book
>> "Graph Databases" is the definitive new guide to graph databases and their
>> applications. Written by three acclaimed leaders in the field,
>> this first edition is now available. Download your free book today!
>> http://p.sf.net/sfu/NeoTech
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
>> 
>> 
>> ------------------------------------------------------------------------------
>> Learn Graph Databases - Download FREE O'Reilly Book
>> "Graph Databases" is the definitive new guide to graph databases and their
>> applications. Written by three acclaimed leaders in the field,
>> this first edition is now available. Download your free book today!
>> http://p.sf.net/sfu/NeoTech
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140420/33517770/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140420/33517770/attachment.sig>

From etotheipi at gmail.com  Sun Apr 20 15:50:55 2014
From: etotheipi at gmail.com (Alan Reiner)
Date: Sun, 20 Apr 2014 11:50:55 -0400
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <DFFB1B2C-F10B-4CF7-9D01-F6A27F9FA229@bitsofproof.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>	<CAPg+sBha=cUHOWcU29yLrC4WTy5EghOGpVGAcQ8S0fuMvpLeRw@mail.gmail.com>
	<DFFB1B2C-F10B-4CF7-9D01-F6A27F9FA229@bitsofproof.com>
Message-ID: <5353ECDF.6090903@gmail.com>

I've been a staunch supporter of "microbitcoin" and would like to do
anything I can to make sure that we jump directly to it if we're going
to promote changing the default units.  And I'm happy to integrate it
into Armory as a default (with appropriate explanations and
settings/options).  I'm not so convinced about the "bits" name though --
I do like it, but I do also think that word is too overloaded.  Though,
I think we could get away with it. 

(Sadly, I still use "microbes" occasionally (as in *microb*itcoin) when
I'm talking to coworkers, because it slips off the tongue and is
actually a good combination of brevity and self-explanatory -- it just
doesn't instill the right visuals...)

We started integrating alternative units into Armory.  But, of course,
there were a few more loose ends than I expected, which will require
some work.   We want to put it in but not necessarily change the default
right away.  I'd /prefer/ we get some commitments from some other wallet
developers, so we can make a unified push for it.  I'm happy to lead
that and make it default as long as I'm not the only one in the world
doing it.

-Alan



On 04/20/2014 11:05 AM, Tamas Blummer wrote:
> Here is an earlier reference to bits:
>
> https://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg04248.html
> <https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg04248.html>
>
> I forgot that Alan Reiner was also supporting a unit equals to bits :
>
> https://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg04264.html
> <https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg04264.html>
>
> and here the earlier going back to March 2013 and a poll at that time
> pushing for XBT being 1 bit
>
> https://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg04256.html
> <https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg04256.html>
>
> Regards,
>
> Tamas Blummer
> http://bitsofproof.com
>
> On 20.04.2014, at 16:53, Pieter Wuille <pieter.wuille at gmail.com
> <mailto:pieter.wuille at gmail.com>> wrote:
>
>> I told him specifically to bring it here (on a pull request for
>> Bitcoin Core), as there is no point in making such convention changes
>> to just one client.
>>
>> I wasn't aware of any discussion about the "bits" proposal here before.
>>
>> On Sun, Apr 20, 2014 at 4:28 PM, Tamas Blummer <tamas at bitsofproof.com
>> <mailto:tamas at bitsofproof.com>> wrote:
>>> People on this list are mostly engineers who have no problem dealing
>>> with
>>> magnitudes and have rather limited empathy for people who have a problem
>>> with them.
>>> They also tend to think, that because they invented money 2.0 they
>>> would not
>>> need to care of finance's or people's current customs.
>>>
>>> The importance of their decisions in these questions will fade as people
>>> already use wallets other than the core.
>>>
>>> Bring this particular discussion elsewhere, to the wallet developer.
>>>
>>> BTW the topic was discussed here several times, you have my support
>>> and Jeff
>>> Garzik's.
>>>
>>> Regards,
>>>
>>> Tamas Blummer
>>> http://bitsofproof.com
>>>
>>> On 20.04.2014, at 15:15, Rob Golding <rob.golding at astutium.com> wrote:
>>>
>>> The average person is not going to be confident that the prefix they
>>> are using is the correct one,
>>>
>>>
>>> The use of any 'prefix' is one of choice and entirely unnecessary,
>>> and there
>>> are already established 'divisions' in u/mBTC for those that feel
>>> they need
>>> to use such things.
>>>
>>> people WILL send 1000x more or less than
>>> intended if we go down this road,
>>>
>>>
>>> Exceptionally unlikely - I deal every day with currencies with 0, 2
>>> and 3
>>> dp's in amount ranging from 'under 1 whole unit' to tens of
>>> thousands - Not
>>> once in 20 years has anyone ever 'sent' more or less than intended - oh,
>>> they've 'intended' to underpay just fine, but never *unintended*.
>>>
>>> I propose that users are offered a preference to denominate the
>>> Bitcoin currency in a unit called a bit. Where one bitcoin (BTC)
>>> equals one million bits (bits) and one bit equals 100 satoshis.
>>>
>>>
>>> I propose that for people unable to understand what a bitcoin is,
>>> they can
>>> just use satoshi's and drop this entire proposal.
>>>
>>> Rob
>>>
>>>
>>> ------------------------------------------------------------------------------
>>> Learn Graph Databases - Download FREE O'Reilly Book
>>> "Graph Databases" is the definitive new guide to graph databases and
>>> their
>>> applications. Written by three acclaimed leaders in the field,
>>> this first edition is now available. Download your free book today!
>>> http://p.sf.net/sfu/NeoTech
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>>
>>>
>>> ------------------------------------------------------------------------------
>>> Learn Graph Databases - Download FREE O'Reilly Book
>>> "Graph Databases" is the definitive new guide to graph databases and
>>> their
>>> applications. Written by three acclaimed leaders in the field,
>>> this first edition is now available. Download your free book today!
>>> http://p.sf.net/sfu/NeoTech
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>
>
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140420/542338d8/attachment.html>

From ctpacia at gmail.com  Sun Apr 20 16:19:23 2014
From: ctpacia at gmail.com (Chris Pacia)
Date: Sun, 20 Apr 2014 12:19:23 -0400
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <5353ECDF.6090903@gmail.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>
	<CAPg+sBha=cUHOWcU29yLrC4WTy5EghOGpVGAcQ8S0fuMvpLeRw@mail.gmail.com>
	<DFFB1B2C-F10B-4CF7-9D01-F6A27F9FA229@bitsofproof.com>
	<5353ECDF.6090903@gmail.com>
Message-ID: <CAB+qUq6iZovMftT+cLbQ63UN=QEmFwGsmUUyWiivSRrMaaDVZg@mail.gmail.com>

The term bit is really only overloaded for those who are techy. 95% of the
population never uses the term bit in their daily lives and I doubt most
could even name one use of the term.
Plus bit used to be a unit of money way back when, so this is kind of
reclaiming it. I think it's a great fit.
On Apr 20, 2014 11:52 AM, "Alan Reiner" <etotheipi at gmail.com> wrote:

>  I've been a staunch supporter of "microbitcoin" and would like to do
> anything I can to make sure that we jump directly to it if we're going to
> promote changing the default units.  And I'm happy to integrate it into
> Armory as a default (with appropriate explanations and settings/options).
> I'm not so convinced about the "bits" name though -- I do like it, but I do
> also think that word is too overloaded.  Though, I think we could get away
> with it.
>
> (Sadly, I still use "microbes" occasionally (as in *microb*itcoin) when
> I'm talking to coworkers, because it slips off the tongue and is actually a
> good combination of brevity and self-explanatory -- it just doesn't instill
> the right visuals...)
>
> We started integrating alternative units into Armory.  But, of course,
> there were a few more loose ends than I expected, which will require some
> work.   We want to put it in but not necessarily change the default right
> away.  I'd *prefer* we get some commitments from some other wallet
> developers, so we can make a unified push for it.  I'm happy to lead that
> and make it default as long as I'm not the only one in the world doing it.
>
> -Alan
>
>
>
> On 04/20/2014 11:05 AM, Tamas Blummer wrote:
>
> Here is an earlier reference to bits:
>
>
> https://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg04248.html<https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg04248.html>
>
>  I forgot that Alan Reiner was also supporting a unit equals to bits :
>
>
> https://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg04264.html<https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg04264.html>
>
>  and here the earlier going back to March 2013 and a poll at that time
> pushing for XBT being 1 bit
>
>
> https://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg04256.html<https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg04256.html>
>
>  Regards,
>
> Tamas Blummer
> http://bitsofproof.com
>
>  On 20.04.2014, at 16:53, Pieter Wuille <pieter.wuille at gmail.com> wrote:
>
> I told him specifically to bring it here (on a pull request for
> Bitcoin Core), as there is no point in making such convention changes
> to just one client.
>
> I wasn't aware of any discussion about the "bits" proposal here before.
>
> On Sun, Apr 20, 2014 at 4:28 PM, Tamas Blummer <tamas at bitsofproof.com>
> wrote:
>
> People on this list are mostly engineers who have no problem dealing with
> magnitudes and have rather limited empathy for people who have a problem
> with them.
> They also tend to think, that because they invented money 2.0 they would
> not
> need to care of finance's or people's current customs.
>
> The importance of their decisions in these questions will fade as people
> already use wallets other than the core.
>
> Bring this particular discussion elsewhere, to the wallet developer.
>
> BTW the topic was discussed here several times, you have my support and
> Jeff
> Garzik's.
>
> Regards,
>
> Tamas Blummer
> http://bitsofproof.com
>
> On 20.04.2014, at 15:15, Rob Golding <rob.golding at astutium.com><rob.golding at astutium.com>wrote:
>
> The average person is not going to be confident that the prefix they
> are using is the correct one,
>
>
> The use of any 'prefix' is one of choice and entirely unnecessary, and
> there
> are already established 'divisions' in u/mBTC for those that feel they need
> to use such things.
>
> people WILL send 1000x more or less than
> intended if we go down this road,
>
>
> Exceptionally unlikely - I deal every day with currencies with 0, 2 and 3
> dp's in amount ranging from 'under 1 whole unit' to tens of thousands - Not
> once in 20 years has anyone ever 'sent' more or less than intended - oh,
> they've 'intended' to underpay just fine, but never *unintended*.
>
> I propose that users are offered a preference to denominate the
> Bitcoin currency in a unit called a bit. Where one bitcoin (BTC)
> equals one million bits (bits) and one bit equals 100 satoshis.
>
>
> I propose that for people unable to understand what a bitcoin is, they can
> just use satoshi's and drop this entire proposal.
>
> Rob
>
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!http://p.sf.net/sfu/NeoTech
>
>
>
> _______________________________________________
> Bitcoin-development mailing listBitcoin-development at lists.sourceforge.nethttps://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140420/46548050/attachment.html>

From erik.garrison at gmail.com  Sun Apr 20 16:23:44 2014
From: erik.garrison at gmail.com (Erik Garrison)
Date: Sun, 20 Apr 2014 18:23:44 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <5353ECDF.6090903@gmail.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>
	<CAPg+sBha=cUHOWcU29yLrC4WTy5EghOGpVGAcQ8S0fuMvpLeRw@mail.gmail.com>
	<DFFB1B2C-F10B-4CF7-9D01-F6A27F9FA229@bitsofproof.com>
	<5353ECDF.6090903@gmail.com>
Message-ID: <CALykB6n0PFwRU1gvP+KXdN2ONkOfWZPwhmP-A1fmrAJ_M3iB6A@mail.gmail.com>

The world is rapidly becoming a place in which a solid grasp of orders of
magnitude could be considered a basic mathematical skill.  People are very
likely to learn what mBTC and ?BTC are simply because they risk their money
if they do not.  This is not a bad thing and I think stands only to help
people who learn about these monikers for orders of magnitude this way.

Any appropriate nicknames for these denominations is sure to develop in due
course.  Promoting an already-overloaded term that could just as easily be
applied colloquially to refer to a small amount of value in any currency
seems problematic.
 I've been a staunch supporter of "microbitcoin" and would like to do
anything I can to make sure that we jump directly to it if we're going to
promote changing the default units.  And I'm happy to integrate it into
Armory as a default (with appropriate explanations and settings/options).
I'm not so convinced about the "bits" name though -- I do like it, but I do
also think that word is too overloaded.  Though, I think we could get away
with it.

(Sadly, I still use "microbes" occasionally (as in *microb*itcoin) when I'm
talking to coworkers, because it slips off the tongue and is actually a
good combination of brevity and self-explanatory -- it just doesn't instill
the right visuals...)

We started integrating alternative units into Armory.  But, of course,
there were a few more loose ends than I expected, which will require some
work.   We want to put it in but not necessarily change the default right
away.  I'd *prefer* we get some commitments from some other wallet
developers, so we can make a unified push for it.  I'm happy to lead that
and make it default as long as I'm not the only one in the world doing it.

-Alan



On 04/20/2014 11:05 AM, Tamas Blummer wrote:

Here is an earlier reference to bits:


https://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg04248.html<https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg04248.html>

 I forgot that Alan Reiner was also supporting a unit equals to bits :


https://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg04264.html<https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg04264.html>

 and here the earlier going back to March 2013 and a poll at that time
pushing for XBT being 1 bit


https://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg04256.html<https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg04256.html>

 Regards,

Tamas Blummer
http://bitsofproof.com

 On 20.04.2014, at 16:53, Pieter Wuille <pieter.wuille at gmail.com> wrote:

I told him specifically to bring it here (on a pull request for
Bitcoin Core), as there is no point in making such convention changes
to just one client.

I wasn't aware of any discussion about the "bits" proposal here before.

On Sun, Apr 20, 2014 at 4:28 PM, Tamas Blummer <tamas at bitsofproof.com>
wrote:

People on this list are mostly engineers who have no problem dealing with
magnitudes and have rather limited empathy for people who have a problem
with them.
They also tend to think, that because they invented money 2.0 they would not
need to care of finance's or people's current customs.

The importance of their decisions in these questions will fade as people
already use wallets other than the core.

Bring this particular discussion elsewhere, to the wallet developer.

BTW the topic was discussed here several times, you have my support and Jeff
Garzik's.

Regards,

Tamas Blummer
http://bitsofproof.com

On 20.04.2014, at 15:15, Rob Golding
<rob.golding at astutium.com><rob.golding at astutium.com>wrote:

The average person is not going to be confident that the prefix they
are using is the correct one,


The use of any 'prefix' is one of choice and entirely unnecessary, and there
are already established 'divisions' in u/mBTC for those that feel they need
to use such things.

people WILL send 1000x more or less than
intended if we go down this road,


Exceptionally unlikely - I deal every day with currencies with 0, 2 and 3
dp's in amount ranging from 'under 1 whole unit' to tens of thousands - Not
once in 20 years has anyone ever 'sent' more or less than intended - oh,
they've 'intended' to underpay just fine, but never *unintended*.

I propose that users are offered a preference to denominate the
Bitcoin currency in a unit called a bit. Where one bitcoin (BTC)
equals one million bits (bits) and one bit equals 100 satoshis.


I propose that for people unable to understand what a bitcoin is, they can
just use satoshi's and drop this entire proposal.

Rob


------------------------------------------------------------------------------
Learn Graph Databases - Download FREE O'Reilly Book
"Graph Databases" is the definitive new guide to graph databases and their
applications. Written by three acclaimed leaders in the field,
this first edition is now available. Download your free book today!
http://p.sf.net/sfu/NeoTech
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development



------------------------------------------------------------------------------
Learn Graph Databases - Download FREE O'Reilly Book
"Graph Databases" is the definitive new guide to graph databases and their
applications. Written by three acclaimed leaders in the field,
this first edition is now available. Download your free book today!
http://p.sf.net/sfu/NeoTech
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development





------------------------------------------------------------------------------
Learn Graph Databases - Download FREE O'Reilly Book
"Graph Databases" is the definitive new guide to graph databases and their
applications. Written by three acclaimed leaders in the field,
this first edition is now available. Download your free book
today!http://p.sf.net/sfu/NeoTech



_______________________________________________
Bitcoin-development mailing
listBitcoin-development at lists.sourceforge.nethttps://lists.sourceforge.net/lists/listinfo/bitcoin-development



------------------------------------------------------------------------------
Learn Graph Databases - Download FREE O'Reilly Book
"Graph Databases" is the definitive new guide to graph databases and their
applications. Written by three acclaimed leaders in the field,
this first edition is now available. Download your free book today!
http://p.sf.net/sfu/NeoTech
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140420/02878e8a/attachment.html>

From laanwj at gmail.com  Sun Apr 20 16:27:07 2014
From: laanwj at gmail.com (Wladimir)
Date: Sun, 20 Apr 2014 18:27:07 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CAB+qUq6iZovMftT+cLbQ63UN=QEmFwGsmUUyWiivSRrMaaDVZg@mail.gmail.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>
	<CAPg+sBha=cUHOWcU29yLrC4WTy5EghOGpVGAcQ8S0fuMvpLeRw@mail.gmail.com>
	<DFFB1B2C-F10B-4CF7-9D01-F6A27F9FA229@bitsofproof.com>
	<5353ECDF.6090903@gmail.com>
	<CAB+qUq6iZovMftT+cLbQ63UN=QEmFwGsmUUyWiivSRrMaaDVZg@mail.gmail.com>
Message-ID: <CA+s+GJBWwstMjKR-A6RyyaA3S4E1d_qapMzyrFkgHNxp__XqDg@mail.gmail.com>

On Sun, Apr 20, 2014 at 6:19 PM, Chris Pacia <ctpacia at gmail.com> wrote:
> The term bit is really only overloaded for those who are techy. 95% of the
> population never uses the term bit in their daily lives and I doubt most
> could even name one use of the term.
> Plus bit used to be a unit of money way back when, so this is kind of
> reclaiming it. I think it's a great fit.

That's a very anglocentric way of thinking.

Here in the Netherlands, a "bit" is something you put in a horses's
mouth. It's also used as imported word (in the information sense).
We've never used the term for money.

Wladimir



From ctpacia at gmail.com  Sun Apr 20 16:30:12 2014
From: ctpacia at gmail.com (Chris Pacia)
Date: Sun, 20 Apr 2014 12:30:12 -0400
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CA+s+GJBWwstMjKR-A6RyyaA3S4E1d_qapMzyrFkgHNxp__XqDg@mail.gmail.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>
	<CAPg+sBha=cUHOWcU29yLrC4WTy5EghOGpVGAcQ8S0fuMvpLeRw@mail.gmail.com>
	<DFFB1B2C-F10B-4CF7-9D01-F6A27F9FA229@bitsofproof.com>
	<5353ECDF.6090903@gmail.com>
	<CAB+qUq6iZovMftT+cLbQ63UN=QEmFwGsmUUyWiivSRrMaaDVZg@mail.gmail.com>
	<CA+s+GJBWwstMjKR-A6RyyaA3S4E1d_qapMzyrFkgHNxp__XqDg@mail.gmail.com>
Message-ID: <CAB+qUq4m0-T6iL3rampmemVam5mgFScTOBCM3XrgXvUUJ12X_A@mail.gmail.com>

You're correct, my impression of the term is based of what I experience in
the US. If it is more widely used in other cultures that should be a
consideration.
On Apr 20, 2014 12:27 PM, "Wladimir" <laanwj at gmail.com> wrote:

> On Sun, Apr 20, 2014 at 6:19 PM, Chris Pacia <ctpacia at gmail.com> wrote:
> > The term bit is really only overloaded for those who are techy. 95% of
> the
> > population never uses the term bit in their daily lives and I doubt most
> > could even name one use of the term.
> > Plus bit used to be a unit of money way back when, so this is kind of
> > reclaiming it. I think it's a great fit.
>
> That's a very anglocentric way of thinking.
>
> Here in the Netherlands, a "bit" is something you put in a horses's
> mouth. It's also used as imported word (in the information sense).
> We've never used the term for money.
>
> Wladimir
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140420/9a876d8c/attachment.html>

From etotheipi at gmail.com  Sun Apr 20 16:30:55 2014
From: etotheipi at gmail.com (Alan Reiner)
Date: Sun, 20 Apr 2014 12:30:55 -0400
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CALykB6n0PFwRU1gvP+KXdN2ONkOfWZPwhmP-A1fmrAJ_M3iB6A@mail.gmail.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>	<CAPg+sBha=cUHOWcU29yLrC4WTy5EghOGpVGAcQ8S0fuMvpLeRw@mail.gmail.com>	<DFFB1B2C-F10B-4CF7-9D01-F6A27F9FA229@bitsofproof.com>	<5353ECDF.6090903@gmail.com>
	<CALykB6n0PFwRU1gvP+KXdN2ONkOfWZPwhmP-A1fmrAJ_M3iB6A@mail.gmail.com>
Message-ID: <5353F63F.90307@gmail.com>

Btw, I should clarify my email: I'm a staunch supporter of moving to
1e-6 BTC as the default unit for wallet applications, not necessarily
any particular name.  I would be fine with "bits" as I think this
context is sufficiently different that it won't be confused by regular
consumers.  But it wouldn't be my first choice.  I don't know what my
first choice would be.

While writing this email, I asked my wife (who's been tired of hearing
about Bitcoin for two years), what she thinks of "bits", "microbes",
"micros".  She said she is fine with any of them.  Apparently microbes
reminders her of biology, not "germs".  But she's also well-educated, so
she fine with milli, micro, kilo, etc... and apparently biology...

Whatever we call it. I'm happy to support it as long as it's 1e-6.


On 04/20/2014 12:23 PM, Erik Garrison wrote:
>
> The world is rapidly becoming a place in which a solid grasp of orders
> of magnitude could be considered a basic mathematical skill.  People
> are very likely to learn what mBTC and ?BTC are simply because they
> risk their money if they do not.  This is not a bad thing and I think
> stands only to help people who learn about these monikers for orders
> of magnitude this way.
>
> Any appropriate nicknames for these denominations is sure to develop
> in due course.  Promoting an already-overloaded term that could just
> as easily be applied colloquially to refer to a small amount of value
> in any currency seems problematic.
>
> I've been a staunch supporter of "microbitcoin" and would like to do
> anything I can to make sure that we jump directly to it if we're going
> to promote changing the default units.  And I'm happy to integrate it
> into Armory as a default (with appropriate explanations and
> settings/options).  I'm not so convinced about the "bits" name though
> -- I do like it, but I do also think that word is too overloaded. 
> Though, I think we could get away with it. 
>
> (Sadly, I still use "microbes" occasionally (as in *microb*itcoin)
> when I'm talking to coworkers, because it slips off the tongue and is
> actually a good combination of brevity and self-explanatory -- it just
> doesn't instill the right visuals...)
>
> We started integrating alternative units into Armory.  But, of course,
> there were a few more loose ends than I expected, which will require
> some work.   We want to put it in but not necessarily change the
> default right away.  I'd /prefer/ we get some commitments from some
> other wallet developers, so we can make a unified push for it.  I'm
> happy to lead that and make it default as long as I'm not the only one
> in the world doing it.
>
> -Alan
>
>
>
> On 04/20/2014 11:05 AM, Tamas Blummer wrote:
>> Here is an earlier reference to bits:
>>
>> https://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg04248.html
>> <https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg04248.html>
>>
>> I forgot that Alan Reiner was also supporting a unit equals to bits :
>>
>> https://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg04264.html
>> <https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg04264.html>
>>
>> and here the earlier going back to March 2013 and a poll at that time
>> pushing for XBT being 1 bit
>>
>> https://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg04256.html
>> <https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg04256.html>
>>
>> Regards,
>>
>> Tamas Blummer
>> http://bitsofproof.com
>>
>> On 20.04.2014, at 16:53, Pieter Wuille <pieter.wuille at gmail.com
>> <mailto:pieter.wuille at gmail.com>> wrote:
>>
>>> I told him specifically to bring it here (on a pull request for
>>> Bitcoin Core), as there is no point in making such convention changes
>>> to just one client.
>>>
>>> I wasn't aware of any discussion about the "bits" proposal here before.
>>>
>>> On Sun, Apr 20, 2014 at 4:28 PM, Tamas Blummer
>>> <tamas at bitsofproof.com <mailto:tamas at bitsofproof.com>> wrote:
>>>> People on this list are mostly engineers who have no problem
>>>> dealing with
>>>> magnitudes and have rather limited empathy for people who have a
>>>> problem
>>>> with them.
>>>> They also tend to think, that because they invented money 2.0 they
>>>> would not
>>>> need to care of finance's or people's current customs.
>>>>
>>>> The importance of their decisions in these questions will fade as
>>>> people
>>>> already use wallets other than the core.
>>>>
>>>> Bring this particular discussion elsewhere, to the wallet developer.
>>>>
>>>> BTW the topic was discussed here several times, you have my support
>>>> and Jeff
>>>> Garzik's.
>>>>
>>>> Regards,
>>>>
>>>> Tamas Blummer
>>>> http://bitsofproof.com
>>>>
>>>> On 20.04.2014, at 15:15, Rob Golding <rob.golding at astutium.com>
>>>> <mailto:rob.golding at astutium.com> wrote:
>>>>
>>>> The average person is not going to be confident that the prefix they
>>>> are using is the correct one,
>>>>
>>>>
>>>> The use of any 'prefix' is one of choice and entirely unnecessary,
>>>> and there
>>>> are already established 'divisions' in u/mBTC for those that feel
>>>> they need
>>>> to use such things.
>>>>
>>>> people WILL send 1000x more or less than
>>>> intended if we go down this road,
>>>>
>>>>
>>>> Exceptionally unlikely - I deal every day with currencies with 0, 2
>>>> and 3
>>>> dp's in amount ranging from 'under 1 whole unit' to tens of
>>>> thousands - Not
>>>> once in 20 years has anyone ever 'sent' more or less than intended
>>>> - oh,
>>>> they've 'intended' to underpay just fine, but never *unintended*.
>>>>
>>>> I propose that users are offered a preference to denominate the
>>>> Bitcoin currency in a unit called a bit. Where one bitcoin (BTC)
>>>> equals one million bits (bits) and one bit equals 100 satoshis.
>>>>
>>>>
>>>> I propose that for people unable to understand what a bitcoin is,
>>>> they can
>>>> just use satoshi's and drop this entire proposal.
>>>>
>>>> Rob
>>>>
>>>>
>>>> ------------------------------------------------------------------------------
>>>> Learn Graph Databases - Download FREE O'Reilly Book
>>>> "Graph Databases" is the definitive new guide to graph databases
>>>> and their
>>>> applications. Written by three acclaimed leaders in the field,
>>>> this first edition is now available. Download your free book today!
>>>> http://p.sf.net/sfu/NeoTech
>>>> _______________________________________________
>>>> Bitcoin-development mailing list
>>>> Bitcoin-development at lists.sourceforge.net
>>>> <mailto:Bitcoin-development at lists.sourceforge.net>
>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>
>>>>
>>>>
>>>> ------------------------------------------------------------------------------
>>>> Learn Graph Databases - Download FREE O'Reilly Book
>>>> "Graph Databases" is the definitive new guide to graph databases
>>>> and their
>>>> applications. Written by three acclaimed leaders in the field,
>>>> this first edition is now available. Download your free book today!
>>>> http://p.sf.net/sfu/NeoTech
>>>> _______________________________________________
>>>> Bitcoin-development mailing list
>>>> Bitcoin-development at lists.sourceforge.net
>>>> <mailto:Bitcoin-development at lists.sourceforge.net>
>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>>
>>>
>>
>>
>>
>> ------------------------------------------------------------------------------
>> Learn Graph Databases - Download FREE O'Reilly Book
>> "Graph Databases" is the definitive new guide to graph databases and their
>> applications. Written by three acclaimed leaders in the field,
>> this first edition is now available. Download your free book today!
>> http://p.sf.net/sfu/NeoTech
>>
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net <mailto:Bitcoin-development at lists.sourceforge.net>
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> <mailto:Bitcoin-development at lists.sourceforge.net>
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140420/f67ef7e9/attachment.html>

From mcaldwell at swipeclock.com  Sun Apr 20 16:56:55 2014
From: mcaldwell at swipeclock.com (Mike Caldwell)
Date: Sun, 20 Apr 2014 12:56:55 -0400
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <5353F63F.90307@gmail.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>
	<CAPg+sBha=cUHOWcU29yLrC4WTy5EghOGpVGAcQ8S0fuMvpLeRw@mail.gmail.com>
	<DFFB1B2C-F10B-4CF7-9D01-F6A27F9FA229@bitsofproof.com>
	<5353ECDF.6090903@gmail.com>
	<CALykB6n0PFwRU1gvP+KXdN2ONkOfWZPwhmP-A1fmrAJ_M3iB6A@mail.gmail.com>
	<5353F63F.90307@gmail.com>
Message-ID: <87BC4D35-2E10-40A0-B2FE-4C49184C0565@swipeclock.com>

As someone who has put a lot of thought into how to best help typical everyday people understand bitcoin, I strongly favor 1 bit = 1e-6 BTC as being very straightforward to explain to non technical types, and also XBT as one "bit".  "There are a million bits in a bit coin" is highly intelligible to average people. 

I consider overload/conflict with existing meanings of "bit" as a non-issue for typical population at large. 

Mike

Sent from my iPhone

> On Apr 20, 2014, at 10:31 AM, "Alan Reiner" <etotheipi at gmail.com> wrote:
> 
> Whatever we call it. I'm happy to support it as long as it's 1e-6.



From abrutschy at xylon.de  Sun Apr 20 17:42:45 2014
From: abrutschy at xylon.de (Arne Brutschy)
Date: Sun, 20 Apr 2014 19:42:45 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
Message-ID: <53540715.7050803@xylon.de>

Hello,

> While SI units are great for people well versed in them, there is a
> very good reason people aren't asking for 100 micro dollars in change.
> The average person is not going to be confident that the prefix they
> are using is the correct one, people WILL send 1000x more or less than
> intended if we go down this road, and these mistakes will happen
> frequently. Labeling should be easy enough for kindergarten kids.

Agree - but why do you propose not only a new label but also a different
subunit?

Also, everybody in the metric world is used to the milli- prefix due to
meters and millimeters. It's not such a stretch to expect people to
master that; but I agree that most people would struggle with microbitcoins.

> I propose that users are offered a preference to denominate the
> Bitcoin currency in a unit called a bit. Where one bitcoin (BTC)
> equals one million bits (bits) and one bit equals 100 satoshis.

There have been many proposals for more or less arbitrary subunits. What
would be the merit of your proposal? I don't really follow the reasoning
that it's better if it's uncommon for everyone rather than just uncommon
for people not used to metric units.

Regarding the label of a "bit": I have to agree with the others that bit
is heavily overused as a unit, but I am a computer scientist, so I don't
have the "average joe's" perspective on this. I find it weird to use as
it's already in use in English - "a bit of work" etc

I don't really see the advantage of a "bit" - it is part of "bitcoin"
and it's short, but that's about it. I think we are free to pick
anything we want for a label, so why not avoid ambiguities?

See this thread for many creative ideas for labels (and another
arbitrary subunit proposal:
https://bitcointalk.org/index.php?topic=396522.0

Arne



From s9jafroe at stud.uni-saarland.de  Sun Apr 20 17:47:05 2014
From: s9jafroe at stud.uni-saarland.de (Jannis Froese)
Date: Sun, 20 Apr 2014 19:47:05 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <87BC4D35-2E10-40A0-B2FE-4C49184C0565@swipeclock.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>	<CAPg+sBha=cUHOWcU29yLrC4WTy5EghOGpVGAcQ8S0fuMvpLeRw@mail.gmail.com>	<DFFB1B2C-F10B-4CF7-9D01-F6A27F9FA229@bitsofproof.com>	<5353ECDF.6090903@gmail.com>	<CALykB6n0PFwRU1gvP+KXdN2ONkOfWZPwhmP-A1fmrAJ_M3iB6A@mail.gmail.com>	<5353F63F.90307@gmail.com>
	<87BC4D35-2E10-40A0-B2FE-4C49184C0565@swipeclock.com>
Message-ID: <53540819.3050908@stud.uni-saarland.de>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I agree that a unit based on 1e-6 BTC is easier to use in practice
than BTC. The name microbitcoin is ok-ish. Nearly all countries
officially use the SI-system, but that doesn't mean that the average
citizen knows all the SI prefixes. Mega, kilo and milli are
universally understood, micro not so much. This is a serious
accessibility concern.

But I dislike the term bit for the already stated reasons: It's
already used in various languages for various things. Simply using
Satoshis may be easier and is universally understood.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.13 (MingW32)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQIcBAEBAgAGBQJTVAgZAAoJEBrvn3PsoRcmWYgP/0JMXmJjzdBFBQscl3+yA987
4zD+W+7o/wPqRmtCU9voJ1PFj9zM6zagHAz455wjnF4IwdgYZjqtadyfxgP5Mg8p
WGoplGQPWJ5KorsQfbiJP8uTOfTzJK5p6Aw9DwscN4aBjCMaHskvyWGVpE8U7ibQ
Pk+a6lX1UUOnjm/G7v5UDKFSlUGAe0GCTnI8FDjxAfF8mzS9XzMSPCfbZfoc7eEx
F7yKkAQGZCDJKP4y6oenj4CGXn100KSZEmombNQ7PeOEwqcKsd1RgPtHWTZzb0Ya
hk2sSnEEt05uwyYsGRnb1EYUwiSS/6sgT9m7fU3bpFf3dWqGuMweSVuGgCTMPrRb
3ei18TJAI59lF/du5zbhQOujpNx/ocmf538hcpFkqaM3RTpeXifaSAefp37S5Zbq
xw013M5T55SmJZYQwdWTFA689kvmOT1N33ht2QtSszl6ZJDFOrwICdcIqMsS6a0a
cGcigi2Ru4M9J7w7wk448ky22Z8VjZrKTQFqhiKzoRk2t0N/SQbKSFKCm7ffsAB/
7EGB9cA3va5ZFBnDAae84Vj0RAMJDHYO7VZIg/mF5qNs8YWs6okQoeJ8FMfNAhW2
pDgZdJfl46lnzfQvgiV/jAMkFr/oSj0UZUPAWXbaGcAm3ZFNO4B0SgNB2VYUfLIe
VNW1pzTKiwL83RjNTGfV
=EPvS
-----END PGP SIGNATURE-----



From stick at gk2.sk  Sun Apr 20 18:10:10 2014
From: stick at gk2.sk (Pavol Rusnak)
Date: Sun, 20 Apr 2014 20:10:10 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <87BC4D35-2E10-40A0-B2FE-4C49184C0565@swipeclock.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>	<CAPg+sBha=cUHOWcU29yLrC4WTy5EghOGpVGAcQ8S0fuMvpLeRw@mail.gmail.com>	<DFFB1B2C-F10B-4CF7-9D01-F6A27F9FA229@bitsofproof.com>	<5353ECDF.6090903@gmail.com>	<CALykB6n0PFwRU1gvP+KXdN2ONkOfWZPwhmP-A1fmrAJ_M3iB6A@mail.gmail.com>	<5353F63F.90307@gmail.com>
	<87BC4D35-2E10-40A0-B2FE-4C49184C0565@swipeclock.com>
Message-ID: <53540D82.7060601@gk2.sk>

On 04/20/2014 06:56 PM, Mike Caldwell wrote:
> I consider overload/conflict with existing meanings of "bit" as a non-issue for typical population at large. 

So far I have not seen any reasonable name except for "bit". I also
tried to come up with something else (e.g.naka, toshi, etc.) to avoid
the confusion with bits used in computing, but I was not satisfied with
neither of them.

Then I though about "credit", which is more-or-less established in video
games and sci-fi literature and people are already used to sentences
like "Not enough credits" or "This item costs 10000 credits", because of
this. Also it would be particularly funny if these sci-fi pieces
predicted the future by actually defining it. ;-)

Another options might be "cubit" or "crebit", but the latter is
sometimes used as a compound word meaning both "credit" and "debit" such
as in "You can use crebit cards here".

Also this Wikipedia source is a list of sometimes rather funny
possibilites: https://en.wikipedia.org/wiki/List_of_fictional_currencies

-- 
Best Regards / S pozdravom,

Pavol Rusnak <stick at gk2.sk>



From mcaldwell at swipeclock.com  Sun Apr 20 18:11:18 2014
From: mcaldwell at swipeclock.com (Mike Caldwell)
Date: Sun, 20 Apr 2014 14:11:18 -0400
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <53540715.7050803@xylon.de>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<53540715.7050803@xylon.de>
Message-ID: <1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>

It is a paradigm that is easy to explain and grasp for neurotypical people. 

The average mind has no problem overloading words and distinguishing the intended meaning from context. For most people, overloading a single syllable word with a new meaning is much less complicated than using a unique 3+ syllable word like satoshi or micro-anything.

Doing software development warps our minds to demand fully qualified names for everything. We know our compilers would say "bit? Fatal error 0xaaabbbbwtf, can't continue, not sure if you mean a Boolean or a dog bite".  But this peculiarity should not be projected onto the people we are trying to get bitcoin to appeal to, not if we want them to feel like we think about their experience. 

If I were to say "a Bitcoin can be divided into a million bits", less than 0.1% of average joes would think I was talking about German beers or the thing that goes in horses mouths. Really, most people are good at using context to relate this to "a dollar can be divided into 100 cents" and accepting it.  This requires much less of their mind resources than using SI prefixes correctly or learning 3 syllable words that (to them) have no instantly apparent relationship to Bitcoin. 

Mike

Sent from my iPhone

On Apr 20, 2014, at 11:44 AM, "Arne Brutschy" <abrutschy at xylon.de> wrote:

>> I propose that users are offered a preference to denominate the
>> Bitcoin currency in a unit called a bit. Where one bitcoin (BTC)
>> equals one million bits (bits) and one bit equals 100 satoshis.
> 
> There have been many proposals for more or less arbitrary subunits. What
> would be the merit of your proposal? I don't really follow the reasoning
> that it's better if it's uncommon for everyone rather than just uncommon
> for people not used to metric units.
> 
> Regarding the label of a "bit": I have to agree with the others that bit
> is heavily overused as a unit, but I am a computer scientist, so I don't
> have the "average joe's" perspective on this. I find it weird to use as
> it's already in use in English - "a bit of work" etc



From abrutschy at xylon.de  Sun Apr 20 18:22:49 2014
From: abrutschy at xylon.de (Arne Brutschy)
Date: Sun, 20 Apr 2014 20:22:49 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>	<53540715.7050803@xylon.de>
	<1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>
Message-ID: <53541079.9000909@xylon.de>


I agree that overloading isn't an issue when necessary, but my point was
that the necessity is lacking. If we're free to pick anything, why pick
something that is overloaded?

Moreover, "bit" is an abbreviation of bitcoin and might be confused with
it. Most currencies use a work that is phonetically very different and
short, so why not do the same?

Pluk, or cred, or finney (as proposed the thread I posted), or
whichever. We could call it "unsp" for unspent ;)

Arne


On 20/04/14 20:11, Mike Caldwell wrote:
> It is a paradigm that is easy to explain and grasp for neurotypical
> people.
> 
> The average mind has no problem overloading words and distinguishing
> the intended meaning from context. For most people, overloading a
> single syllable word with a new meaning is much less complicated than
> using a unique 3+ syllable word like satoshi or micro-anything.
> 
> Doing software development warps our minds to demand fully qualified
> names for everything. We know our compilers would say "bit? Fatal
> error 0xaaabbbbwtf, can't continue, not sure if you mean a Boolean or
> a dog bite".  But this peculiarity should not be projected onto the
> people we are trying to get bitcoin to appeal to, not if we want them
> to feel like we think about their experience.
> 
> If I were to say "a Bitcoin can be divided into a million bits", less
> than 0.1% of average joes would think I was talking about German
> beers or the thing that goes in horses mouths. Really, most people
> are good at using context to relate this to "a dollar can be divided
> into 100 cents" and accepting it.  This requires much less of their
> mind resources than using SI prefixes correctly or learning 3
> syllable words that (to them) have no instantly apparent relationship
> to Bitcoin.
> 
> Mike
> 
> Sent from my iPhone
> 
> On Apr 20, 2014, at 11:44 AM, "Arne Brutschy" <abrutschy at xylon.de>
> wrote:
> 
>>> I propose that users are offered a preference to denominate the 
>>> Bitcoin currency in a unit called a bit. Where one bitcoin (BTC) 
>>> equals one million bits (bits) and one bit equals 100 satoshis.
>> 
>> There have been many proposals for more or less arbitrary subunits.
>> What would be the merit of your proposal? I don't really follow the
>> reasoning that it's better if it's uncommon for everyone rather
>> than just uncommon for people not used to metric units.
>> 
>> Regarding the label of a "bit": I have to agree with the others
>> that bit is heavily overused as a unit, but I am a computer
>> scientist, so I don't have the "average joe's" perspective on this.
>> I find it weird to use as it's already in use in English - "a bit
>> of work" etc
> 
> ------------------------------------------------------------------------------
>
> 
Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and
> their applications. Written by three acclaimed leaders in the field, 
> this first edition is now available. Download your free book today! 
> http://p.sf.net/sfu/NeoTech 
> _______________________________________________ Bitcoin-development
> mailing list Bitcoin-development at lists.sourceforge.net 
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From mcaldwell at swipeclock.com  Sun Apr 20 18:34:32 2014
From: mcaldwell at swipeclock.com (Mike Caldwell)
Date: Sun, 20 Apr 2014 14:34:32 -0400
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <53541079.9000909@xylon.de>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<53540715.7050803@xylon.de>
	<1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>
	<53541079.9000909@xylon.de>
Message-ID: <66562DD7-1E46-4F14-BD36-7AA4F1E7D739@swipeclock.com>

Mainly because it is short, memorable, effectively leads the listener to infer the proper meaning, is culturally neutral, is easy to say by speakers of just about any language, and many other reasons. 

Mike

Sent from my iPhone

> On Apr 20, 2014, at 12:23 PM, "Arne Brutschy" <abrutschy at xylon.de> wrote:
> 
> agree that overloading isn't an issue when necessary, but my point was
> that the necessity is lacking. If we're free to pick anything, why pick
> something that is overloaded?
> 
> Moreover, "bit" is an abbreviation of bitcoin and might be confused with
> it. Most currencies use a work that is phonetically very different and
> short, so why not do the same?
> 
> Pluk, or cred, or finney (as proposed the thread I posted), or
> whichever. We could call it "unsp" for unspent ;)
> 
> Arne
> 



From bitcoin at olivere.de  Sun Apr 20 18:43:24 2014
From: bitcoin at olivere.de (Oliver Egginger)
Date: Sun, 20 Apr 2014 20:43:24 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>	<53540715.7050803@xylon.de>
	<1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>
Message-ID: <5354154C.1080908@olivere.de>

Hello,

just my two 'cents':

Terms arises by itself. Just as most people speak of coins when they
mean bitcoins. I do not see that bitcoin is currently in common use
except for speculation. Therefore no term for smaller units has
established yet. No problem in my eyes. Time will tell.

- oliver




From christophe.biocca at gmail.com  Sun Apr 20 19:19:38 2014
From: christophe.biocca at gmail.com (Christophe Biocca)
Date: Sun, 20 Apr 2014 15:19:38 -0400
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <5354154C.1080908@olivere.de>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<53540715.7050803@xylon.de>
	<1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>
	<5354154C.1080908@olivere.de>
Message-ID: <CANOOu=9=TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A@mail.gmail.com>

Culturally neutral? "bit" in French phonetically collides with slang
for phallus ("bitte", with a silent "e"). Apparently it means "louse"
in Turkish as well.

Not that this really would be avoidable with any short word (all the
short possible words are usually taken), but it's not neutral.

On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger <bitcoin at olivere.de> wrote:
> Hello,
>
> just my two 'cents':
>
> Terms arises by itself. Just as most people speak of coins when they
> mean bitcoins. I do not see that bitcoin is currently in common use
> except for speculation. Therefore no term for smaller units has
> established yet. No problem in my eyes. Time will tell.
>
> - oliver
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From will.yager at gmail.com  Sun Apr 20 19:32:26 2014
From: will.yager at gmail.com (Gmail)
Date: Sun, 20 Apr 2014 14:32:26 -0500
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CANOOu=9=TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A@mail.gmail.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<53540715.7050803@xylon.de>
	<1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>
	<5354154C.1080908@olivere.de>
	<CANOOu=9=TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A@mail.gmail.com>
Message-ID: <B687D4AD-263F-4594-BE7A-FF238B8DF7AF@gmail.com>

People in the Bitcoin community are sometimes resistant to the idea of using the word "credit" as a unit of Bitcoin, because Bitcoin is not a credit-based system. 

However, given that the average person has close to no understanding of what "credit" means, and probably no concern for the distinction even if they do know, it may be wise to use the futuristic and easily understandable "credit" as our human-friendly unit. 

Do others agree that "credits" as a unit of account has a desirable futuristic connotation?

Will

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 1593 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140420/b90be90b/attachment.p7s>

From mcaldwell at swipeclock.com  Sun Apr 20 20:28:34 2014
From: mcaldwell at swipeclock.com (Mike Caldwell)
Date: Sun, 20 Apr 2014 16:28:34 -0400
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CANOOu=9=TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A@mail.gmail.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<53540715.7050803@xylon.de>
	<1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>
	<5354154C.1080908@olivere.de>
	<CANOOu=9=TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A@mail.gmail.com>
Message-ID: <4098C706-D67F-474E-9C13-E4C8F56B41ED@swipeclock.com>

By culturally neutral I mean we avoid deliberately invoking a cultural reference in the name.  For example "satoshi" would be a reference to Japanese culture just for being a common Japanese name regardless of who Satoshi turns out to be. 

Mike

Sent from my iPhone

> On Apr 20, 2014, at 1:20 PM, "Christophe Biocca" <christophe.biocca at gmail.com> wrote:
> 
> Culturally neutral? "bit" in French phonetically collides with slang
> for phallus ("bitte", with a silent "e"). Apparently it means "louse"
> in Turkish as well.
> 
> Not that this really would be avoidable with any short word (all the
> short possible words are usually taken), but it's not neutral.
> 
>> On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger <bitcoin at olivere.de> wrote:
>> Hello,
>> 
>> just my two 'cents':
>> 
>> Terms arises by itself. Just as most people speak of coins when they
>> mean bitcoins. I do not see that bitcoin is currently in common use
>> except for speculation. Therefore no term for smaller units has
>> established yet. No problem in my eyes. Time will tell.
>> 
>> - oliver
>> 
>> 
>> ------------------------------------------------------------------------------
>> Learn Graph Databases - Download FREE O'Reilly Book
>> "Graph Databases" is the definitive new guide to graph databases and their
>> applications. Written by three acclaimed leaders in the field,
>> this first edition is now available. Download your free book today!
>> http://p.sf.net/sfu/NeoTech
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From allport at gmail.com  Mon Apr 21 00:16:35 2014
From: allport at gmail.com (Justin A)
Date: Sun, 20 Apr 2014 20:16:35 -0400
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <4098C706-D67F-474E-9C13-E4C8F56B41ED@swipeclock.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<53540715.7050803@xylon.de>
	<1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>
	<5354154C.1080908@olivere.de>
	<CANOOu=9=TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A@mail.gmail.com>
	<4098C706-D67F-474E-9C13-E4C8F56B41ED@swipeclock.com>
Message-ID: <CAK2MuX3GufxU_AH0Kaw3pUkzgX_agok86ahCh+7r96UkxZwneQ@mail.gmail.com>

<delurk>

What about "ubit", pronounced "YOU-bit", representing 1e-6 bitcoin? Easy to
say, tied in a visual way to the metric micro, leaves the required 2
decimal places for the marginally numerate.. What more could one want?

</delurk>

Also, hi. My first post; plan to get involved over the southern hemisphere
winter if I can learn enough.
On Apr 20, 2014 4:32 PM, "Mike Caldwell" <mcaldwell at swipeclock.com> wrote:

> By culturally neutral I mean we avoid deliberately invoking a cultural
> reference in the name.  For example "satoshi" would be a reference to
> Japanese culture just for being a common Japanese name regardless of who
> Satoshi turns out to be.
>
> Mike
>
> Sent from my iPhone
>
> > On Apr 20, 2014, at 1:20 PM, "Christophe Biocca" <
> christophe.biocca at gmail.com> wrote:
> >
> > Culturally neutral? "bit" in French phonetically collides with slang
> > for phallus ("bitte", with a silent "e"). Apparently it means "louse"
> > in Turkish as well.
> >
> > Not that this really would be avoidable with any short word (all the
> > short possible words are usually taken), but it's not neutral.
> >
> >> On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger <bitcoin at olivere.de>
> wrote:
> >> Hello,
> >>
> >> just my two 'cents':
> >>
> >> Terms arises by itself. Just as most people speak of coins when they
> >> mean bitcoins. I do not see that bitcoin is currently in common use
> >> except for speculation. Therefore no term for smaller units has
> >> established yet. No problem in my eyes. Time will tell.
> >>
> >> - oliver
> >>
> >>
> >>
> ------------------------------------------------------------------------------
> >> Learn Graph Databases - Download FREE O'Reilly Book
> >> "Graph Databases" is the definitive new guide to graph databases and
> their
> >> applications. Written by three acclaimed leaders in the field,
> >> this first edition is now available. Download your free book today!
> >> http://p.sf.net/sfu/NeoTech
> >> _______________________________________________
> >> Bitcoin-development mailing list
> >> Bitcoin-development at lists.sourceforge.net
> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
> >
> ------------------------------------------------------------------------------
> > Learn Graph Databases - Download FREE O'Reilly Book
> > "Graph Databases" is the definitive new guide to graph databases and
> their
> > applications. Written by three acclaimed leaders in the field,
> > this first edition is now available. Download your free book today!
> > http://p.sf.net/sfu/NeoTech
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140420/7da437db/attachment.html>

From mcaldwell at swipeclock.com  Mon Apr 21 01:18:03 2014
From: mcaldwell at swipeclock.com (Mike Caldwell)
Date: Sun, 20 Apr 2014 21:18:03 -0400
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CAK2MuX3GufxU_AH0Kaw3pUkzgX_agok86ahCh+7r96UkxZwneQ@mail.gmail.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<53540715.7050803@xylon.de>
	<1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>
	<5354154C.1080908@olivere.de>
	<CANOOu=9=TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A@mail.gmail.com>
	<4098C706-D67F-474E-9C13-E4C8F56B41ED@swipeclock.com>
	<CAK2MuX3GufxU_AH0Kaw3pUkzgX_agok86ahCh+7r96UkxZwneQ@mail.gmail.com>
Message-ID: <11664045-9CAB-4A9B-BE45-271496D870CD@swipeclock.com>

My impression:

Good because it is short, memorable, and pronounceable by speakers of most languages (though to most of the world that would be oo-bit, as "u" being "yu" is mostly an English thing)

Downsides include the fact that ? is not a U, it just resembles one. It is a lowercase M in Greek, a live spoken language also studied by many, and calling it a U conveys a notion of global unawareness. And the potential for "XBT" to be 1e-6 BTC on the world stage would be huge, worth pursuing.

Mike

Sent from my iPhone

On Apr 20, 2014, at 6:16 PM, "Justin A" <allport at gmail.com<mailto:allport at gmail.com>> wrote:


<delurk>

What about "ubit", pronounced "YOU-bit", representing 1e-6 bitcoin? Easy to say, tied in a visual way to the metric micro, leaves the required 2 decimal places for the marginally numerate.. What more could one want?

</delurk>

Also, hi. My first post; plan to get involved over the southern hemisphere winter if I can learn enough.

On Apr 20, 2014 4:32 PM, "Mike Caldwell" <mcaldwell at swipeclock.com<mailto:mcaldwell at swipeclock.com>> wrote:
By culturally neutral I mean we avoid deliberately invoking a cultural reference in the name.  For example "satoshi" would be a reference to Japanese culture just for being a common Japanese name regardless of who Satoshi turns out to be.

Mike

Sent from my iPhone

> On Apr 20, 2014, at 1:20 PM, "Christophe Biocca" <christophe.biocca at gmail.com<mailto:christophe.biocca at gmail.com>> wrote:
>
> Culturally neutral? "bit" in French phonetically collides with slang
> for phallus ("bitte", with a silent "e"). Apparently it means "louse"
> in Turkish as well.
>
> Not that this really would be avoidable with any short word (all the
> short possible words are usually taken), but it's not neutral.
>
>> On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger <bitcoin at olivere.de<mailto:bitcoin at olivere.de>> wrote:
>> Hello,
>>
>> just my two 'cents':
>>
>> Terms arises by itself. Just as most people speak of coins when they
>> mean bitcoins. I do not see that bitcoin is currently in common use
>> except for speculation. Therefore no term for smaller units has
>> established yet. No problem in my eyes. Time will tell.
>>
>> - oliver
>>
>>
>> ------------------------------------------------------------------------------
>> Learn Graph Databases - Download FREE O'Reilly Book
>> "Graph Databases" is the definitive new guide to graph databases and their
>> applications. Written by three acclaimed leaders in the field,
>> this first edition is now available. Download your free book today!
>> http://p.sf.net/sfu/NeoTech
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net<mailto:Bitcoin-development at lists.sourceforge.net>
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net<mailto:Bitcoin-development at lists.sourceforge.net>
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

------------------------------------------------------------------------------
Learn Graph Databases - Download FREE O'Reilly Book
"Graph Databases" is the definitive new guide to graph databases and their
applications. Written by three acclaimed leaders in the field,
this first edition is now available. Download your free book today!
http://p.sf.net/sfu/NeoTech
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net<mailto:Bitcoin-development at lists.sourceforge.net>
https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140420/fb9c396c/attachment.html>

From slashdevnull at hotmail.com  Mon Apr 21 01:33:47 2014
From: slashdevnull at hotmail.com (Un Ix)
Date: Mon, 21 Apr 2014 09:33:47 +0800
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <11664045-9CAB-4A9B-BE45-271496D870CD@swipeclock.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<53540715.7050803@xylon.de>
	<1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>
	<5354154C.1080908@olivere.de>
	<CANOOu=9=TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A@mail.gmail.com>
	<4098C706-D67F-474E-9C13-E4C8F56B41ED@swipeclock.com>
	<CAK2MuX3GufxU_AH0Kaw3pUkzgX_agok86ahCh+7r96UkxZwneQ@mail.gmail.com>
	<11664045-9CAB-4A9B-BE45-271496D870CD@swipeclock.com>
Message-ID: <BLU402-EAS292E80B3A1FA891428B768C65E0@phx.gbl>

Something tells me this would be reduced to a single syllable in common usage I.e. bit.

My 2 cents goes for "bit". 

Because: Bitcoin is a digital currency, BTC starts with "bit", "bit" refers to a small amount of something in its regular english usage and lastly 99.9876543% of people on the planet don't know what a digital "bit" is yet ...

Gavin

> On 21/04/2014, at 9:20 am, "Mike Caldwell" <mcaldwell at swipeclock.com> wrote:
> 
> My impression:
> 
> Good because it is short, memorable, and pronounceable by speakers of most languages (though to most of the world that would be oo-bit, as "u" being "yu" is mostly an English thing)
> 
> Downsides include the fact that ? is not a U, it just resembles one. It is a lowercase M in Greek, a live spoken language also studied by many, and calling it a U conveys a notion of global unawareness. And the potential for "XBT" to be 1e-6 BTC on the world stage would be huge, worth pursuing. 
> 
> Mike
> 
> Sent from my iPhone
> 
>> On Apr 20, 2014, at 6:16 PM, "Justin A" <allport at gmail.com> wrote:
>> 
>> <delurk>
>> 
>> What about "ubit", pronounced "YOU-bit", representing 1e-6 bitcoin? Easy to say, tied in a visual way to the metric micro, leaves the required 2 decimal places for the marginally numerate.. What more could one want?
>> 
>> </delurk>
>> 
>> Also, hi. My first post; plan to get involved over the southern hemisphere winter if I can learn enough.
>> 
>>> On Apr 20, 2014 4:32 PM, "Mike Caldwell" <mcaldwell at swipeclock.com> wrote:
>>> By culturally neutral I mean we avoid deliberately invoking a cultural reference in the name.  For example "satoshi" would be a reference to Japanese culture just for being a common Japanese name regardless of who Satoshi turns out to be.
>>> 
>>> Mike
>>> 
>>> Sent from my iPhone
>>> 
>>> > On Apr 20, 2014, at 1:20 PM, "Christophe Biocca" <christophe.biocca at gmail.com> wrote:
>>> >
>>> > Culturally neutral? "bit" in French phonetically collides with slang
>>> > for phallus ("bitte", with a silent "e"). Apparently it means "louse"
>>> > in Turkish as well.
>>> >
>>> > Not that this really would be avoidable with any short word (all the
>>> > short possible words are usually taken), but it's not neutral.
>>> >
>>> >> On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger <bitcoin at olivere.de> wrote:
>>> >> Hello,
>>> >>
>>> >> just my two 'cents':
>>> >>
>>> >> Terms arises by itself. Just as most people speak of coins when they
>>> >> mean bitcoins. I do not see that bitcoin is currently in common use
>>> >> except for speculation. Therefore no term for smaller units has
>>> >> established yet. No problem in my eyes. Time will tell.
>>> >>
>>> >> - oliver
>>> >>
>>> >>
>>> >> ------------------------------------------------------------------------------
>>> >> Learn Graph Databases - Download FREE O'Reilly Book
>>> >> "Graph Databases" is the definitive new guide to graph databases and their
>>> >> applications. Written by three acclaimed leaders in the field,
>>> >> this first edition is now available. Download your free book today!
>>> >> http://p.sf.net/sfu/NeoTech
>>> >> _______________________________________________
>>> >> Bitcoin-development mailing list
>>> >> Bitcoin-development at lists.sourceforge.net
>>> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>> >
>>> > ------------------------------------------------------------------------------
>>> > Learn Graph Databases - Download FREE O'Reilly Book
>>> > "Graph Databases" is the definitive new guide to graph databases and their
>>> > applications. Written by three acclaimed leaders in the field,
>>> > this first edition is now available. Download your free book today!
>>> > http://p.sf.net/sfu/NeoTech
>>> > _______________________________________________
>>> > Bitcoin-development mailing list
>>> > Bitcoin-development at lists.sourceforge.net
>>> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>> 
>>> ------------------------------------------------------------------------------
>>> Learn Graph Databases - Download FREE O'Reilly Book
>>> "Graph Databases" is the definitive new guide to graph databases and their
>>> applications. Written by three acclaimed leaders in the field,
>>> this first edition is now available. Download your free book today!
>>> http://p.sf.net/sfu/NeoTech
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/1bb133b3/attachment.html>
-------------- next part --------------
------------------------------------------------------------------------------
Start Your Social Network Today - Download eXo Platform
Build your Enterprise Intranet with eXo Platform Software
Java Based Open Source Intranet - Social, Extensible, Cloud Ready
Get Started Now And Turn Your Intranet Into A Collaboration Platform
http://p.sf.net/sfu/ExoPlatform
-------------- next part --------------
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development

From jonathan.levin at sant.ox.ac.uk  Mon Apr 21 01:30:28 2014
From: jonathan.levin at sant.ox.ac.uk (Jonathan Levin)
Date: Mon, 21 Apr 2014 01:30:28 +0000
Subject: [Bitcoin-development] Economics of information propagation
In-Reply-To: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
Message-ID: <52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>

Hi all,

I am a post-graduate economist writing a paper on the incentives of mining. Even though this issue has been debated in the forums, I think it is important to get a sense of the magnitude of the incentives at play and determine what implications this has for the transaction fee market.

As it has been pointed out before the marginal cost for miners does not stem from the private cost of the miner validating the signature and including it in the list of transactions in the block but rather the increased probability that the block will be orphaned as a result of slower propagation. Gavin did some back of the envelope worst case calculations but these overstated the effect of propagation delay. The reason being the 80ms additional time to reach 50% of the network is spread throughout the time that it takes to reach 50% of the network. During this time miners are notified about the block and treat it as the longest chain and hence are no longer mining with the aim to produce a competing block. 

I am looking to calculate the change in the curvature of the probability mass function that a block hears about my block in any given second as a function of the block size. Although there is likely to be significant noise here, there seems to be some stable linear relationships with the time that it takes to reach different quartiles. Has anyone done this? I have used some empirical data that I am happy to share but ideally I would like analytical solutions.

Following Peter Todd, I also find the concerning result that propagation delays results in increasing returns to higher shares of the hashing power. Indeed it may well be in the interest of large pools to publish large blocks to increase propagation delays on the network which would increase orphan rates particularly for small miners and miners that have not invested in sufficient bandwidth / connectivity. If a small miner hears about a block after 4.5 seconds on average there is a 0.7% chance that there is already a block in circulation.  Large miners can increase the time that it takes for small miners to hear about blocks by increasing the size of their blocks. For example if the time that it takes for a small miner to hear about the block goes to 12 seconds there is a 2 percent chance there is already a block in circulation for the small miner. There is also a 1.2% chance that there will be a competing block published after a small miner propagates in the time that it gets to full propagation. Am I getting this right that the probability of a miner?s block being orphaned is comprised of the probability that the miner was not the first to find a valid block and the probability that given they are first, someone else in the absence of hearing about it finds a competing valid block. 

One question is: Are orphans probabilistic and only resolved after hearing about a new block that lengthens the chain or is there a way to know in advance? Is it frowned upon to mine on top of a block that you have just found even though it is very likely going to end up an orphan?

Would be happy to share the draft form of the paper and receive any feedback.

Finally, at coinometrics we are working on a modified client to capture information on network propagation and would invite any suggestions of any other useful statistics that would be useful in the development of software. 

Best,

Jonathan










On 21 Apr 2014, at 01:16, <bitcoin-development-request at lists.sourceforge.net> <bitcoin-development-request at lists.sourceforge.net> wrote:

> Send Bitcoin-development mailing list submissions to
> 	bitcoin-development at lists.sourceforge.net
> 
> To subscribe or unsubscribe via the World Wide Web, visit
> 	https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> or, via email, send a message with subject or body 'help' to
> 	bitcoin-development-request at lists.sourceforge.net
> 
> You can reach the person managing the list at
> 	bitcoin-development-owner at lists.sourceforge.net
> 
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of Bitcoin-development digest..."
> 
> 
> Today's Topics:
> 
>   1. Re: "bits": Unit of account (Oliver Egginger)
>   2. Re: "bits": Unit of account (Christophe Biocca)
>   3. Re: "bits": Unit of account (Gmail)
>   4. Re: "bits": Unit of account (Mike Caldwell)
>   5. Re: "bits": Unit of account (Justin A)
> 
> 
> ----------------------------------------------------------------------
> 
> Message: 1
> Date: Sun, 20 Apr 2014 20:43:24 +0200
> From: Oliver Egginger <bitcoin at olivere.de>
> Subject: Re: [Bitcoin-development] "bits": Unit of account
> To: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
> Message-ID: <5354154C.1080908 at olivere.de>
> Content-Type: text/plain; charset=ISO-8859-1
> 
> Hello,
> 
> just my two 'cents':
> 
> Terms arises by itself. Just as most people speak of coins when they
> mean bitcoins. I do not see that bitcoin is currently in common use
> except for speculation. Therefore no term for smaller units has
> established yet. No problem in my eyes. Time will tell.
> 
> - oliver
> 
> 
> 
> 
> ------------------------------
> 
> Message: 2
> Date: Sun, 20 Apr 2014 15:19:38 -0400
> From: Christophe Biocca <christophe.biocca at gmail.com>
> Subject: Re: [Bitcoin-development] "bits": Unit of account
> To: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
> Message-ID:
> 	<CANOOu=9=TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A at mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
> 
> Culturally neutral? "bit" in French phonetically collides with slang
> for phallus ("bitte", with a silent "e"). Apparently it means "louse"
> in Turkish as well.
> 
> Not that this really would be avoidable with any short word (all the
> short possible words are usually taken), but it's not neutral.
> 
> On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger <bitcoin at olivere.de> wrote:
>> Hello,
>> 
>> just my two 'cents':
>> 
>> Terms arises by itself. Just as most people speak of coins when they
>> mean bitcoins. I do not see that bitcoin is currently in common use
>> except for speculation. Therefore no term for smaller units has
>> established yet. No problem in my eyes. Time will tell.
>> 
>> - oliver
>> 
>> 
>> ------------------------------------------------------------------------------
>> Learn Graph Databases - Download FREE O'Reilly Book
>> "Graph Databases" is the definitive new guide to graph databases and their
>> applications. Written by three acclaimed leaders in the field,
>> this first edition is now available. Download your free book today!
>> http://p.sf.net/sfu/NeoTech
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> 
> 
> ------------------------------
> 
> Message: 3
> Date: Sun, 20 Apr 2014 14:32:26 -0500
> From: Gmail <will.yager at gmail.com>
> Subject: Re: [Bitcoin-development] "bits": Unit of account
> Cc: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
> Message-ID: <B687D4AD-263F-4594-BE7A-FF238B8DF7AF at gmail.com>
> Content-Type: text/plain; charset="us-ascii"
> 
> People in the Bitcoin community are sometimes resistant to the idea of using the word "credit" as a unit of Bitcoin, because Bitcoin is not a credit-based system. 
> 
> However, given that the average person has close to no understanding of what "credit" means, and probably no concern for the distinction even if they do know, it may be wise to use the futuristic and easily understandable "credit" as our human-friendly unit. 
> 
> Do others agree that "credits" as a unit of account has a desirable futuristic connotation?
> 
> Will
> 
> -------------- next part --------------
> A non-text attachment was scrubbed...
> Name: smime.p7s
> Type: application/pkcs7-signature
> Size: 1593 bytes
> Desc: not available
> 
> ------------------------------
> 
> Message: 4
> Date: Sun, 20 Apr 2014 16:28:34 -0400
> From: Mike Caldwell <mcaldwell at swipeclock.com>
> Subject: Re: [Bitcoin-development] "bits": Unit of account
> To: Christophe Biocca <christophe.biocca at gmail.com>
> Cc: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
> Message-ID: <4098C706-D67F-474E-9C13-E4C8F56B41ED at swipeclock.com>
> Content-Type: text/plain; charset="us-ascii"
> 
> By culturally neutral I mean we avoid deliberately invoking a cultural reference in the name.  For example "satoshi" would be a reference to Japanese culture just for being a common Japanese name regardless of who Satoshi turns out to be. 
> 
> Mike
> 
> Sent from my iPhone
> 
>> On Apr 20, 2014, at 1:20 PM, "Christophe Biocca" <christophe.biocca at gmail.com> wrote:
>> 
>> Culturally neutral? "bit" in French phonetically collides with slang
>> for phallus ("bitte", with a silent "e"). Apparently it means "louse"
>> in Turkish as well.
>> 
>> Not that this really would be avoidable with any short word (all the
>> short possible words are usually taken), but it's not neutral.
>> 
>>> On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger <bitcoin at olivere.de> wrote:
>>> Hello,
>>> 
>>> just my two 'cents':
>>> 
>>> Terms arises by itself. Just as most people speak of coins when they
>>> mean bitcoins. I do not see that bitcoin is currently in common use
>>> except for speculation. Therefore no term for smaller units has
>>> established yet. No problem in my eyes. Time will tell.
>>> 
>>> - oliver
>>> 
>>> 
>>> ------------------------------------------------------------------------------
>>> Learn Graph Databases - Download FREE O'Reilly Book
>>> "Graph Databases" is the definitive new guide to graph databases and their
>>> applications. Written by three acclaimed leaders in the field,
>>> this first edition is now available. Download your free book today!
>>> http://p.sf.net/sfu/NeoTech
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
>> ------------------------------------------------------------------------------
>> Learn Graph Databases - Download FREE O'Reilly Book
>> "Graph Databases" is the definitive new guide to graph databases and their
>> applications. Written by three acclaimed leaders in the field,
>> this first edition is now available. Download your free book today!
>> http://p.sf.net/sfu/NeoTech
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> 
> 
> ------------------------------
> 
> Message: 5
> Date: Sun, 20 Apr 2014 20:16:35 -0400
> From: Justin A <allport at gmail.com>
> Subject: Re: [Bitcoin-development] "bits": Unit of account
> To: Mike Caldwell <mcaldwell at swipeclock.com>
> Cc: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
> Message-ID:
> 	<CAK2MuX3GufxU_AH0Kaw3pUkzgX_agok86ahCh+7r96UkxZwneQ at mail.gmail.com>
> Content-Type: text/plain; charset="utf-8"
> 
> <delurk>
> 
> What about "ubit", pronounced "YOU-bit", representing 1e-6 bitcoin? Easy to
> say, tied in a visual way to the metric micro, leaves the required 2
> decimal places for the marginally numerate.. What more could one want?
> 
> </delurk>
> 
> Also, hi. My first post; plan to get involved over the southern hemisphere
> winter if I can learn enough.
> On Apr 20, 2014 4:32 PM, "Mike Caldwell" <mcaldwell at swipeclock.com> wrote:
> 
>> By culturally neutral I mean we avoid deliberately invoking a cultural
>> reference in the name.  For example "satoshi" would be a reference to
>> Japanese culture just for being a common Japanese name regardless of who
>> Satoshi turns out to be.
>> 
>> Mike
>> 
>> Sent from my iPhone
>> 
>>> On Apr 20, 2014, at 1:20 PM, "Christophe Biocca" <
>> christophe.biocca at gmail.com> wrote:
>>> 
>>> Culturally neutral? "bit" in French phonetically collides with slang
>>> for phallus ("bitte", with a silent "e"). Apparently it means "louse"
>>> in Turkish as well.
>>> 
>>> Not that this really would be avoidable with any short word (all the
>>> short possible words are usually taken), but it's not neutral.
>>> 
>>>> On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger <bitcoin at olivere.de>
>> wrote:
>>>> Hello,
>>>> 
>>>> just my two 'cents':
>>>> 
>>>> Terms arises by itself. Just as most people speak of coins when they
>>>> mean bitcoins. I do not see that bitcoin is currently in common use
>>>> except for speculation. Therefore no term for smaller units has
>>>> established yet. No problem in my eyes. Time will tell.
>>>> 
>>>> - oliver
>>>> 
>>>> 
>>>> 
>> ------------------------------------------------------------------------------
>>>> Learn Graph Databases - Download FREE O'Reilly Book
>>>> "Graph Databases" is the definitive new guide to graph databases and
>> their
>>>> applications. Written by three acclaimed leaders in the field,
>>>> this first edition is now available. Download your free book today!
>>>> http://p.sf.net/sfu/NeoTech
>>>> _______________________________________________
>>>> Bitcoin-development mailing list
>>>> Bitcoin-development at lists.sourceforge.net
>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>> 
>>> 
>> ------------------------------------------------------------------------------
>>> Learn Graph Databases - Download FREE O'Reilly Book
>>> "Graph Databases" is the definitive new guide to graph databases and
>> their
>>> applications. Written by three acclaimed leaders in the field,
>>> this first edition is now available. Download your free book today!
>>> http://p.sf.net/sfu/NeoTech
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
>> 
>> ------------------------------------------------------------------------------
>> Learn Graph Databases - Download FREE O'Reilly Book
>> "Graph Databases" is the definitive new guide to graph databases and their
>> applications. Written by three acclaimed leaders in the field,
>> this first edition is now available. Download your free book today!
>> http://p.sf.net/sfu/NeoTech
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
> -------------- next part --------------
> An HTML attachment was scrubbed...
> 
> ------------------------------
> 
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> 
> ------------------------------
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> 
> End of Bitcoin-development Digest, Vol 35, Issue 72
> ***************************************************

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 496 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/cfaa58dc/attachment.sig>

From mcaldwell at swipeclock.com  Mon Apr 21 03:34:55 2014
From: mcaldwell at swipeclock.com (Mike Caldwell)
Date: Sun, 20 Apr 2014 23:34:55 -0400
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <BLU402-EAS292E80B3A1FA891428B768C65E0@phx.gbl>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<53540715.7050803@xylon.de>
	<1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>
	<5354154C.1080908@olivere.de>
	<CANOOu=9=TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A@mail.gmail.com>
	<4098C706-D67F-474E-9C13-E4C8F56B41ED@swipeclock.com>
	<CAK2MuX3GufxU_AH0Kaw3pUkzgX_agok86ahCh+7r96UkxZwneQ@mail.gmail.com>
	<11664045-9CAB-4A9B-BE45-271496D870CD@swipeclock.com>
	<BLU402-EAS292E80B3A1FA891428B768C65E0@phx.gbl>
Message-ID: <5D3F5340-06B1-4F88-A817-B3606413B039@swipeclock.com>

If bit had to be preceded by a letter I would nominate "ebit" or "xbit" (which could still be XBT)

Those needing a definition for x could define it as "coin/1000000".

That said, I am still more in favor of "bit". Xbit would just solve the problems others cite about ambiguity if they had to be solved without the resulting name being too long.

Mike

Sent from my iPhone

On Apr 20, 2014, at 7:33 PM, "Un Ix" <slashdevnull at hotmail.com<mailto:slashdevnull at hotmail.com>> wrote:

Something tells me this would be reduced to a single syllable in common usage I.e. bit.

My 2 cents goes for "bit".

Because: Bitcoin is a digital currency, BTC starts with "bit", "bit" refers to a small amount of something in its regular english usage and lastly 99.9876543% of people on the planet don't know what a digital "bit" is yet ...

Gavin

On 21/04/2014, at 9:20 am, "Mike Caldwell" <mcaldwell at swipeclock.com<mailto:mcaldwell at swipeclock.com>> wrote:

My impression:

Good because it is short, memorable, and pronounceable by speakers of most languages (though to most of the world that would be oo-bit, as "u" being "yu" is mostly an English thing)

Downsides include the fact that ? is not a U, it just resembles one. It is a lowercase M in Greek, a live spoken language also studied by many, and calling it a U conveys a notion of global unawareness. And the potential for "XBT" to be 1e-6 BTC on the world stage would be huge, worth pursuing.

Mike

Sent from my iPhone

On Apr 20, 2014, at 6:16 PM, "Justin A" <allport at gmail.com<mailto:allport at gmail.com>> wrote:


<delurk>

What about "ubit", pronounced "YOU-bit", representing 1e-6 bitcoin? Easy to say, tied in a visual way to the metric micro, leaves the required 2 decimal places for the marginally numerate.. What more could one want?

</delurk>

Also, hi. My first post; plan to get involved over the southern hemisphere winter if I can learn enough.

On Apr 20, 2014 4:32 PM, "Mike Caldwell" <mcaldwell at swipeclock.com<mailto:mcaldwell at swipeclock.com>> wrote:
By culturally neutral I mean we avoid deliberately invoking a cultural reference in the name.  For example "satoshi" would be a reference to Japanese culture just for being a common Japanese name regardless of who Satoshi turns out to be.

Mike

Sent from my iPhone

> On Apr 20, 2014, at 1:20 PM, "Christophe Biocca" <christophe.biocca at gmail.com<mailto:christophe.biocca at gmail.com>> wrote:
>
> Culturally neutral? "bit" in French phonetically collides with slang
> for phallus ("bitte", with a silent "e"). Apparently it means "louse"
> in Turkish as well.
>
> Not that this really would be avoidable with any short word (all the
> short possible words are usually taken), but it's not neutral.
>
>> On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger <bitcoin at olivere.de<mailto:bitcoin at olivere.de>> wrote:
>> Hello,
>>
>> just my two 'cents':
>>
>> Terms arises by itself. Just as most people speak of coins when they
>> mean bitcoins. I do not see that bitcoin is currently in common use
>> except for speculation. Therefore no term for smaller units has
>> established yet. No problem in my eyes. Time will tell.
>>
>> - oliver
>>
>>
>> ------------------------------------------------------------------------------
>> Learn Graph Databases - Download FREE O'Reilly Book
>> "Graph Databases" is the definitive new guide to graph databases and their
>> applications. Written by three acclaimed leaders in the field,
>> this first edition is now available. Download your free book today!
>> http://p.sf.net/sfu/NeoTech
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net<mailto:Bitcoin-development at lists.sourceforge.net>
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
> ------------------------------------------------------------------------------
> Learn Graph Databases - Download FREE O'Reilly Book
> "Graph Databases" is the definitive new guide to graph databases and their
> applications. Written by three acclaimed leaders in the field,
> this first edition is now available. Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net<mailto:Bitcoin-development at lists.sourceforge.net>
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

------------------------------------------------------------------------------
Learn Graph Databases - Download FREE O'Reilly Book
"Graph Databases" is the definitive new guide to graph databases and their
applications. Written by three acclaimed leaders in the field,
this first edition is now available. Download your free book today!
http://p.sf.net/sfu/NeoTech
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net<mailto:Bitcoin-development at lists.sourceforge.net>
https://lists.sourceforge.net/lists/listinfo/bitcoin-development
------------------------------------------------------------------------------
Start Your Social Network Today - Download eXo Platform
Build your Enterprise Intranet with eXo Platform Software
Java Based Open Source Intranet - Social, Extensible, Cloud Ready
Get Started Now And Turn Your Intranet Into A Collaboration Platform
http://p.sf.net/sfu/ExoPlatform
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net<mailto:Bitcoin-development at lists.sourceforge.net>
https://lists.sourceforge.net/lists/listinfo/bitcoin-development
------------------------------------------------------------------------------
Start Your Social Network Today - Download eXo Platform
Build your Enterprise Intranet with eXo Platform Software
Java Based Open Source Intranet - Social, Extensible, Cloud Ready
Get Started Now And Turn Your Intranet Into A Collaboration Platform
http://p.sf.net/sfu/ExoPlatform
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net<mailto:Bitcoin-development at lists.sourceforge.net>
https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140420/1509b60f/attachment.html>

From mark at monetize.io  Mon Apr 21 03:58:58 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Sun, 20 Apr 2014 20:58:58 -0700
Subject: [Bitcoin-development] Economics of information propagation
In-Reply-To: <52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
Message-ID: <CACh7GpFGEvR+_qArYCkgi7AW4coSeH741ob4hmBpj6G3MayNAQ@mail.gmail.com>

As soon as we switch to headers
first - which will be soon - there will be no difference in propagation
time no matter how large the block is. Only 80 bites will be required to
propagate the block header which establishes priority for when the block is
fully validated.
On Apr 20, 2014 6:56 PM, "Jonathan Levin" <jonathan.levin at sant.ox.ac.uk>
wrote:

> Hi all,
>
> I am a post-graduate economist writing a paper on the incentives of
> mining. Even though this issue has been debated in the forums, I think it
> is important to get a sense of the magnitude of the incentives at play and
> determine what implications this has for the transaction fee market.
>
> As it has been pointed out before the marginal cost for miners does not
> stem from the private cost of the miner validating the signature and
> including it in the list of transactions in the block but rather the
> increased probability that the block will be orphaned as a result of slower
> propagation. Gavin did some back of the envelope worst case calculations
> but these overstated the effect of propagation delay. The reason being the
> 80ms additional time to reach 50% of the network is spread throughout the
> time that it takes to reach 50% of the network. During this time miners are
> notified about the block and treat it as the longest chain and hence are no
> longer mining with the aim to produce a competing block.
>
> I am looking to calculate the change in the curvature of the probability
> mass function that a block hears about my block in any given second as a
> function of the block size. Although there is likely to be significant
> noise here, there seems to be some stable linear relationships with the
> time that it takes to reach different quartiles. Has anyone done this? I
> have used some empirical data that I am happy to share but ideally I would
> like analytical solutions.
>
> Following Peter Todd, I also find the concerning result that propagation
> delays results in increasing returns to higher shares of the hashing power.
> Indeed it may well be in the interest of large pools to publish large
> blocks to increase propagation delays on the network which would increase
> orphan rates particularly for small miners and miners that have not
> invested in sufficient bandwidth / connectivity. If a small miner hears
> about a block after 4.5 seconds on average there is a 0.7% chance that
> there is already a block in circulation.  Large miners can increase the
> time that it takes for small miners to hear about blocks by increasing the
> size of their blocks. For example if the time that it takes for a small
> miner to hear about the block goes to 12 seconds there is a 2 percent
> chance there is already a block in circulation for the small miner. There
> is also a 1.2% chance that there will be a competing block published after
> a small miner propagates in the time that it gets to full propagation. Am I
> getting this right that the probability of a miner?s block being orphaned
> is comprised of the probability that the miner was not the first to find a
> valid block and the probability that given they are first, someone else in
> the absence of hearing about it finds a competing valid block.
>
> One question is: Are orphans probabilistic and only resolved after hearing
> about a new block that lengthens the chain or is there a way to know in
> advance? Is it frowned upon to mine on top of a block that you have just
> found even though it is very likely going to end up an orphan?
>
> Would be happy to share the draft form of the paper and receive any
> feedback.
>
> Finally, at coinometrics we are working on a modified client to capture
> information on network propagation and would invite any suggestions of any
> other useful statistics that would be useful in the development of software.
>
> Best,
>
> Jonathan
>
>
>
>
>
>
>
>
>
>
> On 21 Apr 2014, at 01:16, <
> bitcoin-development-request at lists.sourceforge.net> <
> bitcoin-development-request at lists.sourceforge.net> wrote:
>
> > Send Bitcoin-development mailing list submissions to
> >       bitcoin-development at lists.sourceforge.net
> >
> > To subscribe or unsubscribe via the World Wide Web, visit
> >       https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> > or, via email, send a message with subject or body 'help' to
> >       bitcoin-development-request at lists.sourceforge.net
> >
> > You can reach the person managing the list at
> >       bitcoin-development-owner at lists.sourceforge.net
> >
> > When replying, please edit your Subject line so it is more specific
> > than "Re: Contents of Bitcoin-development digest..."
> >
> >
> > Today's Topics:
> >
> >   1. Re: "bits": Unit of account (Oliver Egginger)
> >   2. Re: "bits": Unit of account (Christophe Biocca)
> >   3. Re: "bits": Unit of account (Gmail)
> >   4. Re: "bits": Unit of account (Mike Caldwell)
> >   5. Re: "bits": Unit of account (Justin A)
> >
> >
> > ----------------------------------------------------------------------
> >
> > Message: 1
> > Date: Sun, 20 Apr 2014 20:43:24 +0200
> > From: Oliver Egginger <bitcoin at olivere.de>
> > Subject: Re: [Bitcoin-development] "bits": Unit of account
> > To: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
> > Message-ID: <5354154C.1080908 at olivere.de>
> > Content-Type: text/plain; charset=ISO-8859-1
> >
> > Hello,
> >
> > just my two 'cents':
> >
> > Terms arises by itself. Just as most people speak of coins when they
> > mean bitcoins. I do not see that bitcoin is currently in common use
> > except for speculation. Therefore no term for smaller units has
> > established yet. No problem in my eyes. Time will tell.
> >
> > - oliver
> >
> >
> >
> >
> > ------------------------------
> >
> > Message: 2
> > Date: Sun, 20 Apr 2014 15:19:38 -0400
> > From: Christophe Biocca <christophe.biocca at gmail.com>
> > Subject: Re: [Bitcoin-development] "bits": Unit of account
> > To: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
> > Message-ID:
> >       <CANOOu=9=
> TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A at mail.gmail.com>
> > Content-Type: text/plain; charset=UTF-8
> >
> > Culturally neutral? "bit" in French phonetically collides with slang
> > for phallus ("bitte", with a silent "e"). Apparently it means "louse"
> > in Turkish as well.
> >
> > Not that this really would be avoidable with any short word (all the
> > short possible words are usually taken), but it's not neutral.
> >
> > On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger <bitcoin at olivere.de>
> wrote:
> >> Hello,
> >>
> >> just my two 'cents':
> >>
> >> Terms arises by itself. Just as most people speak of coins when they
> >> mean bitcoins. I do not see that bitcoin is currently in common use
> >> except for speculation. Therefore no term for smaller units has
> >> established yet. No problem in my eyes. Time will tell.
> >>
> >> - oliver
> >>
> >>
> >>
> ------------------------------------------------------------------------------
> >> Learn Graph Databases - Download FREE O'Reilly Book
> >> "Graph Databases" is the definitive new guide to graph databases and
> their
> >> applications. Written by three acclaimed leaders in the field,
> >> this first edition is now available. Download your free book today!
> >> http://p.sf.net/sfu/NeoTech
> >> _______________________________________________
> >> Bitcoin-development mailing list
> >> Bitcoin-development at lists.sourceforge.net
> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
> >
> >
> > ------------------------------
> >
> > Message: 3
> > Date: Sun, 20 Apr 2014 14:32:26 -0500
> > From: Gmail <will.yager at gmail.com>
> > Subject: Re: [Bitcoin-development] "bits": Unit of account
> > Cc: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
> > Message-ID: <B687D4AD-263F-4594-BE7A-FF238B8DF7AF at gmail.com>
> > Content-Type: text/plain; charset="us-ascii"
> >
> > People in the Bitcoin community are sometimes resistant to the idea of
> using the word "credit" as a unit of Bitcoin, because Bitcoin is not a
> credit-based system.
> >
> > However, given that the average person has close to no understanding of
> what "credit" means, and probably no concern for the distinction even if
> they do know, it may be wise to use the futuristic and easily
> understandable "credit" as our human-friendly unit.
> >
> > Do others agree that "credits" as a unit of account has a desirable
> futuristic connotation?
> >
> > Will
> >
> > -------------- next part --------------
> > A non-text attachment was scrubbed...
> > Name: smime.p7s
> > Type: application/pkcs7-signature
> > Size: 1593 bytes
> > Desc: not available
> >
> > ------------------------------
> >
> > Message: 4
> > Date: Sun, 20 Apr 2014 16:28:34 -0400
> > From: Mike Caldwell <mcaldwell at swipeclock.com>
> > Subject: Re: [Bitcoin-development] "bits": Unit of account
> > To: Christophe Biocca <christophe.biocca at gmail.com>
> > Cc: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
> > Message-ID: <4098C706-D67F-474E-9C13-E4C8F56B41ED at swipeclock.com>
> > Content-Type: text/plain; charset="us-ascii"
> >
> > By culturally neutral I mean we avoid deliberately invoking a cultural
> reference in the name.  For example "satoshi" would be a reference to
> Japanese culture just for being a common Japanese name regardless of who
> Satoshi turns out to be.
> >
> > Mike
> >
> > Sent from my iPhone
> >
> >> On Apr 20, 2014, at 1:20 PM, "Christophe Biocca" <
> christophe.biocca at gmail.com> wrote:
> >>
> >> Culturally neutral? "bit" in French phonetically collides with slang
> >> for phallus ("bitte", with a silent "e"). Apparently it means "louse"
> >> in Turkish as well.
> >>
> >> Not that this really would be avoidable with any short word (all the
> >> short possible words are usually taken), but it's not neutral.
> >>
> >>> On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger <bitcoin at olivere.de>
> wrote:
> >>> Hello,
> >>>
> >>> just my two 'cents':
> >>>
> >>> Terms arises by itself. Just as most people speak of coins when they
> >>> mean bitcoins. I do not see that bitcoin is currently in common use
> >>> except for speculation. Therefore no term for smaller units has
> >>> established yet. No problem in my eyes. Time will tell.
> >>>
> >>> - oliver
> >>>
> >>>
> >>>
> ------------------------------------------------------------------------------
> >>> Learn Graph Databases - Download FREE O'Reilly Book
> >>> "Graph Databases" is the definitive new guide to graph databases and
> their
> >>> applications. Written by three acclaimed leaders in the field,
> >>> this first edition is now available. Download your free book today!
> >>> http://p.sf.net/sfu/NeoTech
> >>> _______________________________________________
> >>> Bitcoin-development mailing list
> >>> Bitcoin-development at lists.sourceforge.net
> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >>
> >>
> ------------------------------------------------------------------------------
> >> Learn Graph Databases - Download FREE O'Reilly Book
> >> "Graph Databases" is the definitive new guide to graph databases and
> their
> >> applications. Written by three acclaimed leaders in the field,
> >> this first edition is now available. Download your free book today!
> >> http://p.sf.net/sfu/NeoTech
> >> _______________________________________________
> >> Bitcoin-development mailing list
> >> Bitcoin-development at lists.sourceforge.net
> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
> >
> >
> > ------------------------------
> >
> > Message: 5
> > Date: Sun, 20 Apr 2014 20:16:35 -0400
> > From: Justin A <allport at gmail.com>
> > Subject: Re: [Bitcoin-development] "bits": Unit of account
> > To: Mike Caldwell <mcaldwell at swipeclock.com>
> > Cc: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
> > Message-ID:
> >       <
> CAK2MuX3GufxU_AH0Kaw3pUkzgX_agok86ahCh+7r96UkxZwneQ at mail.gmail.com>
> > Content-Type: text/plain; charset="utf-8"
> >
> > <delurk>
> >
> > What about "ubit", pronounced "YOU-bit", representing 1e-6 bitcoin? Easy
> to
> > say, tied in a visual way to the metric micro, leaves the required 2
> > decimal places for the marginally numerate.. What more could one want?
> >
> > </delurk>
> >
> > Also, hi. My first post; plan to get involved over the southern
> hemisphere
> > winter if I can learn enough.
> > On Apr 20, 2014 4:32 PM, "Mike Caldwell" <mcaldwell at swipeclock.com>
> wrote:
> >
> >> By culturally neutral I mean we avoid deliberately invoking a cultural
> >> reference in the name.  For example "satoshi" would be a reference to
> >> Japanese culture just for being a common Japanese name regardless of who
> >> Satoshi turns out to be.
> >>
> >> Mike
> >>
> >> Sent from my iPhone
> >>
> >>> On Apr 20, 2014, at 1:20 PM, "Christophe Biocca" <
> >> christophe.biocca at gmail.com> wrote:
> >>>
> >>> Culturally neutral? "bit" in French phonetically collides with slang
> >>> for phallus ("bitte", with a silent "e"). Apparently it means "louse"
> >>> in Turkish as well.
> >>>
> >>> Not that this really would be avoidable with any short word (all the
> >>> short possible words are usually taken), but it's not neutral.
> >>>
> >>>> On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger <bitcoin at olivere.de>
> >> wrote:
> >>>> Hello,
> >>>>
> >>>> just my two 'cents':
> >>>>
> >>>> Terms arises by itself. Just as most people speak of coins when they
> >>>> mean bitcoins. I do not see that bitcoin is currently in common use
> >>>> except for speculation. Therefore no term for smaller units has
> >>>> established yet. No problem in my eyes. Time will tell.
> >>>>
> >>>> - oliver
> >>>>
> >>>>
> >>>>
> >>
> ------------------------------------------------------------------------------
> >>>> Learn Graph Databases - Download FREE O'Reilly Book
> >>>> "Graph Databases" is the definitive new guide to graph databases and
> >> their
> >>>> applications. Written by three acclaimed leaders in the field,
> >>>> this first edition is now available. Download your free book today!
> >>>> http://p.sf.net/sfu/NeoTech
> >>>> _______________________________________________
> >>>> Bitcoin-development mailing list
> >>>> Bitcoin-development at lists.sourceforge.net
> >>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >>>
> >>>
> >>
> ------------------------------------------------------------------------------
> >>> Learn Graph Databases - Download FREE O'Reilly Book
> >>> "Graph Databases" is the definitive new guide to graph databases and
> >> their
> >>> applications. Written by three acclaimed leaders in the field,
> >>> this first edition is now available. Download your free book today!
> >>> http://p.sf.net/sfu/NeoTech
> >>> _______________________________________________
> >>> Bitcoin-development mailing list
> >>> Bitcoin-development at lists.sourceforge.net
> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >>
> >>
> >>
> ------------------------------------------------------------------------------
> >> Learn Graph Databases - Download FREE O'Reilly Book
> >> "Graph Databases" is the definitive new guide to graph databases and
> their
> >> applications. Written by three acclaimed leaders in the field,
> >> this first edition is now available. Download your free book today!
> >> http://p.sf.net/sfu/NeoTech
> >> _______________________________________________
> >> Bitcoin-development mailing list
> >> Bitcoin-development at lists.sourceforge.net
> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >>
> > -------------- next part --------------
> > An HTML attachment was scrubbed...
> >
> > ------------------------------
> >
> >
> ------------------------------------------------------------------------------
> > Start Your Social Network Today - Download eXo Platform
> > Build your Enterprise Intranet with eXo Platform Software
> > Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> > Get Started Now And Turn Your Intranet Into A Collaboration Platform
> > http://p.sf.net/sfu/ExoPlatform
> >
> > ------------------------------
> >
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
> >
> > End of Bitcoin-development Digest, Vol 35, Issue 72
> > ***************************************************
>
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140420/5697c590/attachment.html>

From pete at petertodd.org  Mon Apr 21 04:06:27 2014
From: pete at petertodd.org (Peter Todd)
Date: Mon, 21 Apr 2014 00:06:27 -0400
Subject: [Bitcoin-development] Economics of information propagation
In-Reply-To: <CACh7GpFGEvR+_qArYCkgi7AW4coSeH741ob4hmBpj6G3MayNAQ@mail.gmail.com>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
	<CACh7GpFGEvR+_qArYCkgi7AW4coSeH741ob4hmBpj6G3MayNAQ@mail.gmail.com>
Message-ID: <a9a262a9-c70f-470d-81e0-ca32c41d8dc5@email.android.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

That is mistaken: you can't mine on top of just a block header, leaving small miners disadvantaged as they are earning no profit while they wait for the information to validate the block and update their UTXO sets. This results in the same problem as before, as the large pools who mine most blocks can validate either instantly - the self-mine case - or more quickly than the smaller miners.

Of course, in reality smaller miners can just mine on top of block headers and include no transactions and do no validation, but that is extremely harmful to the security of Bitcoin.


On 20 April 2014 23:58:58 GMT-04:00, Mark Friedenbach <mark at monetize.io> wrote:
>As soon as we switch to headers
>first - which will be soon - there will be no difference in propagation
>time no matter how large the block is. Only 80 bites will be required
>to
>propagate the block header which establishes priority for when the
>block is
>fully validated.
>On Apr 20, 2014 6:56 PM, "Jonathan Levin"
><jonathan.levin at sant.ox.ac.uk>
>wrote:
>
>> Hi all,
>>
>> I am a post-graduate economist writing a paper on the incentives of
>> mining. Even though this issue has been debated in the forums, I
>think it
>> is important to get a sense of the magnitude of the incentives at
>play and
>> determine what implications this has for the transaction fee market.
>>
>> As it has been pointed out before the marginal cost for miners does
>not
>> stem from the private cost of the miner validating the signature and
>> including it in the list of transactions in the block but rather the
>> increased probability that the block will be orphaned as a result of
>slower
>> propagation. Gavin did some back of the envelope worst case
>calculations
>> but these overstated the effect of propagation delay. The reason
>being the
>> 80ms additional time to reach 50% of the network is spread throughout
>the
>> time that it takes to reach 50% of the network. During this time
>miners are
>> notified about the block and treat it as the longest chain and hence
>are no
>> longer mining with the aim to produce a competing block.
>>
>> I am looking to calculate the change in the curvature of the
>probability
>> mass function that a block hears about my block in any given second
>as a
>> function of the block size. Although there is likely to be
>significant
>> noise here, there seems to be some stable linear relationships with
>the
>> time that it takes to reach different quartiles. Has anyone done
>this? I
>> have used some empirical data that I am happy to share but ideally I
>would
>> like analytical solutions.
>>
>> Following Peter Todd, I also find the concerning result that
>propagation
>> delays results in increasing returns to higher shares of the hashing
>power.
>> Indeed it may well be in the interest of large pools to publish large
>> blocks to increase propagation delays on the network which would
>increase
>> orphan rates particularly for small miners and miners that have not
>> invested in sufficient bandwidth / connectivity. If a small miner
>hears
>> about a block after 4.5 seconds on average there is a 0.7% chance
>that
>> there is already a block in circulation.  Large miners can increase
>the
>> time that it takes for small miners to hear about blocks by
>increasing the
>> size of their blocks. For example if the time that it takes for a
>small
>> miner to hear about the block goes to 12 seconds there is a 2 percent
>> chance there is already a block in circulation for the small miner.
>There
>> is also a 1.2% chance that there will be a competing block published
>after
>> a small miner propagates in the time that it gets to full
>propagation. Am I
>> getting this right that the probability of a miner?s block being
>orphaned
>> is comprised of the probability that the miner was not the first to
>find a
>> valid block and the probability that given they are first, someone
>else in
>> the absence of hearing about it finds a competing valid block.
>>
>> One question is: Are orphans probabilistic and only resolved after
>hearing
>> about a new block that lengthens the chain or is there a way to know
>in
>> advance? Is it frowned upon to mine on top of a block that you have
>just
>> found even though it is very likely going to end up an orphan?
>>
>> Would be happy to share the draft form of the paper and receive any
>> feedback.
>>
>> Finally, at coinometrics we are working on a modified client to
>capture
>> information on network propagation and would invite any suggestions
>of any
>> other useful statistics that would be useful in the development of
>software.
>>
>> Best,
>>
>> Jonathan
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>> On 21 Apr 2014, at 01:16, <
>> bitcoin-development-request at lists.sourceforge.net> <
>> bitcoin-development-request at lists.sourceforge.net> wrote:
>>
>> > Send Bitcoin-development mailing list submissions to
>> >       bitcoin-development at lists.sourceforge.net
>> >
>> > To subscribe or unsubscribe via the World Wide Web, visit
>> >
>https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> > or, via email, send a message with subject or body 'help' to
>> >       bitcoin-development-request at lists.sourceforge.net
>> >
>> > You can reach the person managing the list at
>> >       bitcoin-development-owner at lists.sourceforge.net
>> >
>> > When replying, please edit your Subject line so it is more specific
>> > than "Re: Contents of Bitcoin-development digest..."
>> >
>> >
>> > Today's Topics:
>> >
>> >   1. Re: "bits": Unit of account (Oliver Egginger)
>> >   2. Re: "bits": Unit of account (Christophe Biocca)
>> >   3. Re: "bits": Unit of account (Gmail)
>> >   4. Re: "bits": Unit of account (Mike Caldwell)
>> >   5. Re: "bits": Unit of account (Justin A)
>> >
>> >
>> >
>----------------------------------------------------------------------
>> >
>> > Message: 1
>> > Date: Sun, 20 Apr 2014 20:43:24 +0200
>> > From: Oliver Egginger <bitcoin at olivere.de>
>> > Subject: Re: [Bitcoin-development] "bits": Unit of account
>> > To: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
>> > Message-ID: <5354154C.1080908 at olivere.de>
>> > Content-Type: text/plain; charset=ISO-8859-1
>> >
>> > Hello,
>> >
>> > just my two 'cents':
>> >
>> > Terms arises by itself. Just as most people speak of coins when
>they
>> > mean bitcoins. I do not see that bitcoin is currently in common use
>> > except for speculation. Therefore no term for smaller units has
>> > established yet. No problem in my eyes. Time will tell.
>> >
>> > - oliver
>> >
>> >
>> >
>> >
>> > ------------------------------
>> >
>> > Message: 2
>> > Date: Sun, 20 Apr 2014 15:19:38 -0400
>> > From: Christophe Biocca <christophe.biocca at gmail.com>
>> > Subject: Re: [Bitcoin-development] "bits": Unit of account
>> > To: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
>> > Message-ID:
>> >       <CANOOu=9=
>> TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A at mail.gmail.com>
>> > Content-Type: text/plain; charset=UTF-8
>> >
>> > Culturally neutral? "bit" in French phonetically collides with
>slang
>> > for phallus ("bitte", with a silent "e"). Apparently it means
>"louse"
>> > in Turkish as well.
>> >
>> > Not that this really would be avoidable with any short word (all
>the
>> > short possible words are usually taken), but it's not neutral.
>> >
>> > On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger
><bitcoin at olivere.de>
>> wrote:
>> >> Hello,
>> >>
>> >> just my two 'cents':
>> >>
>> >> Terms arises by itself. Just as most people speak of coins when
>they
>> >> mean bitcoins. I do not see that bitcoin is currently in common
>use
>> >> except for speculation. Therefore no term for smaller units has
>> >> established yet. No problem in my eyes. Time will tell.
>> >>
>> >> - oliver
>> >>
>> >>
>> >>
>>
>------------------------------------------------------------------------------
>> >> Learn Graph Databases - Download FREE O'Reilly Book
>> >> "Graph Databases" is the definitive new guide to graph databases
>and
>> their
>> >> applications. Written by three acclaimed leaders in the field,
>> >> this first edition is now available. Download your free book
>today!
>> >> http://p.sf.net/sfu/NeoTech
>> >> _______________________________________________
>> >> Bitcoin-development mailing list
>> >> Bitcoin-development at lists.sourceforge.net
>> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >
>> >
>> >
>> > ------------------------------
>> >
>> > Message: 3
>> > Date: Sun, 20 Apr 2014 14:32:26 -0500
>> > From: Gmail <will.yager at gmail.com>
>> > Subject: Re: [Bitcoin-development] "bits": Unit of account
>> > Cc: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
>> > Message-ID: <B687D4AD-263F-4594-BE7A-FF238B8DF7AF at gmail.com>
>> > Content-Type: text/plain; charset="us-ascii"
>> >
>> > People in the Bitcoin community are sometimes resistant to the idea
>of
>> using the word "credit" as a unit of Bitcoin, because Bitcoin is not
>a
>> credit-based system.
>> >
>> > However, given that the average person has close to no
>understanding of
>> what "credit" means, and probably no concern for the distinction even
>if
>> they do know, it may be wise to use the futuristic and easily
>> understandable "credit" as our human-friendly unit.
>> >
>> > Do others agree that "credits" as a unit of account has a desirable
>> futuristic connotation?
>> >
>> > Will
>> >
>> > -------------- next part --------------
>> > A non-text attachment was scrubbed...
>> > Name: smime.p7s
>> > Type: application/pkcs7-signature
>> > Size: 1593 bytes
>> > Desc: not available
>> >
>> > ------------------------------
>> >
>> > Message: 4
>> > Date: Sun, 20 Apr 2014 16:28:34 -0400
>> > From: Mike Caldwell <mcaldwell at swipeclock.com>
>> > Subject: Re: [Bitcoin-development] "bits": Unit of account
>> > To: Christophe Biocca <christophe.biocca at gmail.com>
>> > Cc: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
>> > Message-ID: <4098C706-D67F-474E-9C13-E4C8F56B41ED at swipeclock.com>
>> > Content-Type: text/plain; charset="us-ascii"
>> >
>> > By culturally neutral I mean we avoid deliberately invoking a
>cultural
>> reference in the name.  For example "satoshi" would be a reference to
>> Japanese culture just for being a common Japanese name regardless of
>who
>> Satoshi turns out to be.
>> >
>> > Mike
>> >
>> > Sent from my iPhone
>> >
>> >> On Apr 20, 2014, at 1:20 PM, "Christophe Biocca" <
>> christophe.biocca at gmail.com> wrote:
>> >>
>> >> Culturally neutral? "bit" in French phonetically collides with
>slang
>> >> for phallus ("bitte", with a silent "e"). Apparently it means
>"louse"
>> >> in Turkish as well.
>> >>
>> >> Not that this really would be avoidable with any short word (all
>the
>> >> short possible words are usually taken), but it's not neutral.
>> >>
>> >>> On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger
><bitcoin at olivere.de>
>> wrote:
>> >>> Hello,
>> >>>
>> >>> just my two 'cents':
>> >>>
>> >>> Terms arises by itself. Just as most people speak of coins when
>they
>> >>> mean bitcoins. I do not see that bitcoin is currently in common
>use
>> >>> except for speculation. Therefore no term for smaller units has
>> >>> established yet. No problem in my eyes. Time will tell.
>> >>>
>> >>> - oliver
>> >>>
>> >>>
>> >>>
>>
>------------------------------------------------------------------------------
>> >>> Learn Graph Databases - Download FREE O'Reilly Book
>> >>> "Graph Databases" is the definitive new guide to graph databases
>and
>> their
>> >>> applications. Written by three acclaimed leaders in the field,
>> >>> this first edition is now available. Download your free book
>today!
>> >>> http://p.sf.net/sfu/NeoTech
>> >>> _______________________________________________
>> >>> Bitcoin-development mailing list
>> >>> Bitcoin-development at lists.sourceforge.net
>> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >>
>> >>
>>
>------------------------------------------------------------------------------
>> >> Learn Graph Databases - Download FREE O'Reilly Book
>> >> "Graph Databases" is the definitive new guide to graph databases
>and
>> their
>> >> applications. Written by three acclaimed leaders in the field,
>> >> this first edition is now available. Download your free book
>today!
>> >> http://p.sf.net/sfu/NeoTech
>> >> _______________________________________________
>> >> Bitcoin-development mailing list
>> >> Bitcoin-development at lists.sourceforge.net
>> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >
>> >
>> >
>> > ------------------------------
>> >
>> > Message: 5
>> > Date: Sun, 20 Apr 2014 20:16:35 -0400
>> > From: Justin A <allport at gmail.com>
>> > Subject: Re: [Bitcoin-development] "bits": Unit of account
>> > To: Mike Caldwell <mcaldwell at swipeclock.com>
>> > Cc: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
>> > Message-ID:
>> >       <
>> CAK2MuX3GufxU_AH0Kaw3pUkzgX_agok86ahCh+7r96UkxZwneQ at mail.gmail.com>
>> > Content-Type: text/plain; charset="utf-8"
>> >
>> > <delurk>
>> >
>> > What about "ubit", pronounced "YOU-bit", representing 1e-6 bitcoin?
>Easy
>> to
>> > say, tied in a visual way to the metric micro, leaves the required
>2
>> > decimal places for the marginally numerate.. What more could one
>want?
>> >
>> > </delurk>
>> >
>> > Also, hi. My first post; plan to get involved over the southern
>> hemisphere
>> > winter if I can learn enough.
>> > On Apr 20, 2014 4:32 PM, "Mike Caldwell" <mcaldwell at swipeclock.com>
>> wrote:
>> >
>> >> By culturally neutral I mean we avoid deliberately invoking a
>cultural
>> >> reference in the name.  For example "satoshi" would be a reference
>to
>> >> Japanese culture just for being a common Japanese name regardless
>of who
>> >> Satoshi turns out to be.
>> >>
>> >> Mike
>> >>
>> >> Sent from my iPhone
>> >>
>> >>> On Apr 20, 2014, at 1:20 PM, "Christophe Biocca" <
>> >> christophe.biocca at gmail.com> wrote:
>> >>>
>> >>> Culturally neutral? "bit" in French phonetically collides with
>slang
>> >>> for phallus ("bitte", with a silent "e"). Apparently it means
>"louse"
>> >>> in Turkish as well.
>> >>>
>> >>> Not that this really would be avoidable with any short word (all
>the
>> >>> short possible words are usually taken), but it's not neutral.
>> >>>
>> >>>> On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger
><bitcoin at olivere.de>
>> >> wrote:
>> >>>> Hello,
>> >>>>
>> >>>> just my two 'cents':
>> >>>>
>> >>>> Terms arises by itself. Just as most people speak of coins when
>they
>> >>>> mean bitcoins. I do not see that bitcoin is currently in common
>use
>> >>>> except for speculation. Therefore no term for smaller units has
>> >>>> established yet. No problem in my eyes. Time will tell.
>> >>>>
>> >>>> - oliver
>> >>>>
>> >>>>
>> >>>>
>> >>
>>
>------------------------------------------------------------------------------
>> >>>> Learn Graph Databases - Download FREE O'Reilly Book
>> >>>> "Graph Databases" is the definitive new guide to graph databases
>and
>> >> their
>> >>>> applications. Written by three acclaimed leaders in the field,
>> >>>> this first edition is now available. Download your free book
>today!
>> >>>> http://p.sf.net/sfu/NeoTech
>> >>>> _______________________________________________
>> >>>> Bitcoin-development mailing list
>> >>>> Bitcoin-development at lists.sourceforge.net
>> >>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >>>
>> >>>
>> >>
>>
>------------------------------------------------------------------------------
>> >>> Learn Graph Databases - Download FREE O'Reilly Book
>> >>> "Graph Databases" is the definitive new guide to graph databases
>and
>> >> their
>> >>> applications. Written by three acclaimed leaders in the field,
>> >>> this first edition is now available. Download your free book
>today!
>> >>> http://p.sf.net/sfu/NeoTech
>> >>> _______________________________________________
>> >>> Bitcoin-development mailing list
>> >>> Bitcoin-development at lists.sourceforge.net
>> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >>
>> >>
>> >>
>>
>------------------------------------------------------------------------------
>> >> Learn Graph Databases - Download FREE O'Reilly Book
>> >> "Graph Databases" is the definitive new guide to graph databases
>and
>> their
>> >> applications. Written by three acclaimed leaders in the field,
>> >> this first edition is now available. Download your free book
>today!
>> >> http://p.sf.net/sfu/NeoTech
>> >> _______________________________________________
>> >> Bitcoin-development mailing list
>> >> Bitcoin-development at lists.sourceforge.net
>> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >>
>> > -------------- next part --------------
>> > An HTML attachment was scrubbed...
>> >
>> > ------------------------------
>> >
>> >
>>
>------------------------------------------------------------------------------
>> > Start Your Social Network Today - Download eXo Platform
>> > Build your Enterprise Intranet with eXo Platform Software
>> > Java Based Open Source Intranet - Social, Extensible, Cloud Ready
>> > Get Started Now And Turn Your Intranet Into A Collaboration
>Platform
>> > http://p.sf.net/sfu/ExoPlatform
>> >
>> > ------------------------------
>> >
>> > _______________________________________________
>> > Bitcoin-development mailing list
>> > Bitcoin-development at lists.sourceforge.net
>> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >
>> >
>> > End of Bitcoin-development Digest, Vol 35, Issue 72
>> > ***************************************************
>>
>>
>>
>>
>------------------------------------------------------------------------------
>> Start Your Social Network Today - Download eXo Platform
>> Build your Enterprise Intranet with eXo Platform Software
>> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
>> Get Started Now And Turn Your Intranet Into A Collaboration Platform
>> http://p.sf.net/sfu/ExoPlatform
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
>
>------------------------------------------------------------------------
>
>------------------------------------------------------------------------------
>Start Your Social Network Today - Download eXo Platform
>Build your Enterprise Intranet with eXo Platform Software
>Java Based Open Source Intranet - Social, Extensible, Cloud Ready
>Get Started Now And Turn Your Intranet Into A Collaboration Platform
>http://p.sf.net/sfu/ExoPlatform
>
>------------------------------------------------------------------------
>
>_______________________________________________
>Bitcoin-development mailing list
>Bitcoin-development at lists.sourceforge.net
>https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCAA6BQJTVJlDMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhTbNB/4lHTsUN/iee7H0UyBn
+TDRgf1BSoUx9HP+vtwXzS0JkVQoxoB5x4Pls+ex7qIXGNxdG9EPYi1RqQ5A8RUo
X2ntOL2pj6qTmW4aYxqqyihiQayLs5ixHPmJxqHv343g5ekqsKmBeDuWR4hXjUyZ
0Pfcp40Xd3eJ38dSbq98letl5eD+ryBPKYtb91Trumqa9S0WB8kw9IqNaXjlpfG1
lYuaVEllpaLpZW+4cx1mlPneS1GmLvloWhXf4Qh4X39VXECAjOAmNKh1atJCyT7H
ugkOcx1F2Rxo5P3jNzBRJKyAD96sbOhKm4sX7rzSjhT3WJgyHtJm3wkeluDCOVbR
QZqK
=R7Tv
-----END PGP SIGNATURE-----




From cpaika at umass.edu  Mon Apr 21 04:08:08 2014
From: cpaika at umass.edu (Christopher Paika)
Date: Mon, 21 Apr 2014 14:08:08 +1000
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <5D3F5340-06B1-4F88-A817-B3606413B039@swipeclock.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<53540715.7050803@xylon.de>
	<1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>
	<5354154C.1080908@olivere.de>
	<CANOOu=9=TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A@mail.gmail.com>
	<4098C706-D67F-474E-9C13-E4C8F56B41ED@swipeclock.com>
	<CAK2MuX3GufxU_AH0Kaw3pUkzgX_agok86ahCh+7r96UkxZwneQ@mail.gmail.com>
	<11664045-9CAB-4A9B-BE45-271496D870CD@swipeclock.com>
	<BLU402-EAS292E80B3A1FA891428B768C65E0@phx.gbl>
	<5D3F5340-06B1-4F88-A817-B3606413B039@swipeclock.com>
Message-ID: <CAMUw_wjYO-uBo9Do+HmAWJmqjEoj1t8VpocU=CJkPBJjXTcxxA@mail.gmail.com>

Bit is simple phonetically, I'm for it.


On Mon, Apr 21, 2014 at 1:34 PM, Mike Caldwell <mcaldwell at swipeclock.com>wrote:

> If bit had to be preceded by a letter I would nominate "ebit" or "xbit"
> (which could still be XBT)
>
> Those needing a definition for x could define it as "coin/1000000".
>
> That said, I am still more in favor of "bit". Xbit would just solve the
> problems others cite about ambiguity if they had to be solved without the
> resulting name being too long.
>
> Mike
>
> Sent from my iPhone
>
> On Apr 20, 2014, at 7:33 PM, "Un Ix" <slashdevnull at hotmail.com> wrote:
>
> Something tells me this would be reduced to a single syllable in common
> usage I.e. bit.
>
> My 2 cents goes for "bit".
>
> Because: Bitcoin is a digital currency, BTC starts with "bit", "bit"
> refers to a small amount of something in its regular english usage and
> lastly 99.9876543% of people on the planet don't know what a digital "bit"
> is yet ...
>
> Gavin
>
> On 21/04/2014, at 9:20 am, "Mike Caldwell" <mcaldwell at swipeclock.com>
> wrote:
>
> My impression:
>
> Good because it is short, memorable, and pronounceable by speakers of most
> languages (though to most of the world that would be oo-bit, as "u" being
> "yu" is mostly an English thing)
>
> Downsides include the fact that ? is not a U, it just resembles one. It is
> a lowercase M in Greek, a live spoken language also studied by many, and
> calling it a U conveys a notion of global unawareness. And the potential
> for "XBT" to be 1e-6 BTC on the world stage would be huge, worth pursuing.
>
> Mike
>
> Sent from my iPhone
>
> On Apr 20, 2014, at 6:16 PM, "Justin A" <allport at gmail.com> wrote:
>
> <delurk>
>
> What about "ubit", pronounced "YOU-bit", representing 1e-6 bitcoin? Easy
> to say, tied in a visual way to the metric micro, leaves the required 2
> decimal places for the marginally numerate.. What more could one want?
>
> </delurk>
>
> Also, hi. My first post; plan to get involved over the southern hemisphere
> winter if I can learn enough.
> On Apr 20, 2014 4:32 PM, "Mike Caldwell" <mcaldwell at swipeclock.com> wrote:
>
>> By culturally neutral I mean we avoid deliberately invoking a cultural
>> reference in the name.  For example "satoshi" would be a reference to
>> Japanese culture just for being a common Japanese name regardless of who
>> Satoshi turns out to be.
>>
>> Mike
>>
>> Sent from my iPhone
>>
>> > On Apr 20, 2014, at 1:20 PM, "Christophe Biocca" <
>> christophe.biocca at gmail.com> wrote:
>> >
>> > Culturally neutral? "bit" in French phonetically collides with slang
>> > for phallus ("bitte", with a silent "e"). Apparently it means "louse"
>> > in Turkish as well.
>> >
>> > Not that this really would be avoidable with any short word (all the
>> > short possible words are usually taken), but it's not neutral.
>> >
>> >> On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger <bitcoin at olivere.de>
>> wrote:
>> >> Hello,
>> >>
>> >> just my two 'cents':
>> >>
>> >> Terms arises by itself. Just as most people speak of coins when they
>> >> mean bitcoins. I do not see that bitcoin is currently in common use
>> >> except for speculation. Therefore no term for smaller units has
>> >> established yet. No problem in my eyes. Time will tell.
>> >>
>> >> - oliver
>> >>
>> >>
>> >>
>> ------------------------------------------------------------------------------
>> >> Learn Graph Databases - Download FREE O'Reilly Book
>> >> "Graph Databases" is the definitive new guide to graph databases and
>> their
>> >> applications. Written by three acclaimed leaders in the field,
>> >> this first edition is now available. Download your free book today!
>> >> http://p.sf.net/sfu/NeoTech
>> >> _______________________________________________
>> >> Bitcoin-development mailing list
>> >> Bitcoin-development at lists.sourceforge.net
>> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >
>> >
>> ------------------------------------------------------------------------------
>> > Learn Graph Databases - Download FREE O'Reilly Book
>> > "Graph Databases" is the definitive new guide to graph databases and
>> their
>> > applications. Written by three acclaimed leaders in the field,
>> > this first edition is now available. Download your free book today!
>> > http://p.sf.net/sfu/NeoTech
>> > _______________________________________________
>> > Bitcoin-development mailing list
>> > Bitcoin-development at lists.sourceforge.net
>> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>> ------------------------------------------------------------------------------
>> Learn Graph Databases - Download FREE O'Reilly Book
>> "Graph Databases" is the definitive new guide to graph databases and their
>> applications. Written by three acclaimed leaders in the field,
>> this first edition is now available. Download your free book today!
>> http://p.sf.net/sfu/NeoTech
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/ed682496/attachment.html>

From lidstrom83 at gmail.com  Mon Apr 21 04:44:24 2014
From: lidstrom83 at gmail.com (Daniel Lidstrom)
Date: Sun, 20 Apr 2014 22:44:24 -0600
Subject: [Bitcoin-development] Economics of information propagation
In-Reply-To: <a9a262a9-c70f-470d-81e0-ca32c41d8dc5@email.android.com>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
	<CACh7GpFGEvR+_qArYCkgi7AW4coSeH741ob4hmBpj6G3MayNAQ@mail.gmail.com>
	<a9a262a9-c70f-470d-81e0-ca32c41d8dc5@email.android.com>
Message-ID: <CADjHg8GY2J4bjp=Cj08WtMJ+pfMOSqBopSnmM_GLdtsOfrz3JQ@mail.gmail.com>

> Of course, in reality smaller miners can just mine on top of block headers
> and include no transactions and do no validation, but that is extremely
> harmful to the security of Bitcoin.


If it's only during the few seconds that it takes to to verify the block,
then would this really be that big of a deal?  E.g. even if all miners did
this, a 10 second delay would only yield an average of a couple blind/empty
blocks per day.


On Sun, Apr 20, 2014 at 10:06 PM, Peter Todd <pete at petertodd.org> wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA256
>
> That is mistaken: you can't mine on top of just a block header, leaving
> small miners disadvantaged as they are earning no profit while they wait
> for the information to validate the block and update their UTXO sets. This
> results in the same problem as before, as the large pools who mine most
> blocks can validate either instantly - the self-mine case - or more quickly
> than the smaller miners.
>
> Of course, in reality smaller miners can just mine on top of block headers
> and include no transactions and do no validation, but that is extremely
> harmful to the security of Bitcoin.
>
>
> On 20 April 2014 23:58:58 GMT-04:00, Mark Friedenbach <mark at monetize.io>
> wrote:
> >As soon as we switch to headers
> >first - which will be soon - there will be no difference in propagation
> >time no matter how large the block is. Only 80 bites will be required
> >to
> >propagate the block header which establishes priority for when the
> >block is
> >fully validated.
> >On Apr 20, 2014 6:56 PM, "Jonathan Levin"
> ><jonathan.levin at sant.ox.ac.uk>
> >wrote:
> >
> >> Hi all,
> >>
> >> I am a post-graduate economist writing a paper on the incentives of
> >> mining. Even though this issue has been debated in the forums, I
> >think it
> >> is important to get a sense of the magnitude of the incentives at
> >play and
> >> determine what implications this has for the transaction fee market.
> >>
> >> As it has been pointed out before the marginal cost for miners does
> >not
> >> stem from the private cost of the miner validating the signature and
> >> including it in the list of transactions in the block but rather the
> >> increased probability that the block will be orphaned as a result of
> >slower
> >> propagation. Gavin did some back of the envelope worst case
> >calculations
> >> but these overstated the effect of propagation delay. The reason
> >being the
> >> 80ms additional time to reach 50% of the network is spread throughout
> >the
> >> time that it takes to reach 50% of the network. During this time
> >miners are
> >> notified about the block and treat it as the longest chain and hence
> >are no
> >> longer mining with the aim to produce a competing block.
> >>
> >> I am looking to calculate the change in the curvature of the
> >probability
> >> mass function that a block hears about my block in any given second
> >as a
> >> function of the block size. Although there is likely to be
> >significant
> >> noise here, there seems to be some stable linear relationships with
> >the
> >> time that it takes to reach different quartiles. Has anyone done
> >this? I
> >> have used some empirical data that I am happy to share but ideally I
> >would
> >> like analytical solutions.
> >>
> >> Following Peter Todd, I also find the concerning result that
> >propagation
> >> delays results in increasing returns to higher shares of the hashing
> >power.
> >> Indeed it may well be in the interest of large pools to publish large
> >> blocks to increase propagation delays on the network which would
> >increase
> >> orphan rates particularly for small miners and miners that have not
> >> invested in sufficient bandwidth / connectivity. If a small miner
> >hears
> >> about a block after 4.5 seconds on average there is a 0.7% chance
> >that
> >> there is already a block in circulation.  Large miners can increase
> >the
> >> time that it takes for small miners to hear about blocks by
> >increasing the
> >> size of their blocks. For example if the time that it takes for a
> >small
> >> miner to hear about the block goes to 12 seconds there is a 2 percent
> >> chance there is already a block in circulation for the small miner.
> >There
> >> is also a 1.2% chance that there will be a competing block published
> >after
> >> a small miner propagates in the time that it gets to full
> >propagation. Am I
> >> getting this right that the probability of a miner?s block being
> >orphaned
> >> is comprised of the probability that the miner was not the first to
> >find a
> >> valid block and the probability that given they are first, someone
> >else in
> >> the absence of hearing about it finds a competing valid block.
> >>
> >> One question is: Are orphans probabilistic and only resolved after
> >hearing
> >> about a new block that lengthens the chain or is there a way to know
> >in
> >> advance? Is it frowned upon to mine on top of a block that you have
> >just
> >> found even though it is very likely going to end up an orphan?
> >>
> >> Would be happy to share the draft form of the paper and receive any
> >> feedback.
> >>
> >> Finally, at coinometrics we are working on a modified client to
> >capture
> >> information on network propagation and would invite any suggestions
> >of any
> >> other useful statistics that would be useful in the development of
> >software.
> >>
> >> Best,
> >>
> >> Jonathan
> >>
> >>
> >>
> >>
> >>
> >>
> >>
> >>
> >>
> >>
> >> On 21 Apr 2014, at 01:16, <
> >> bitcoin-development-request at lists.sourceforge.net> <
> >> bitcoin-development-request at lists.sourceforge.net> wrote:
> >>
> >> > Send Bitcoin-development mailing list submissions to
> >> >       bitcoin-development at lists.sourceforge.net
> >> >
> >> > To subscribe or unsubscribe via the World Wide Web, visit
> >> >
> >https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >> > or, via email, send a message with subject or body 'help' to
> >> >       bitcoin-development-request at lists.sourceforge.net
> >> >
> >> > You can reach the person managing the list at
> >> >       bitcoin-development-owner at lists.sourceforge.net
> >> >
> >> > When replying, please edit your Subject line so it is more specific
> >> > than "Re: Contents of Bitcoin-development digest..."
> >> >
> >> >
> >> > Today's Topics:
> >> >
> >> >   1. Re: "bits": Unit of account (Oliver Egginger)
> >> >   2. Re: "bits": Unit of account (Christophe Biocca)
> >> >   3. Re: "bits": Unit of account (Gmail)
> >> >   4. Re: "bits": Unit of account (Mike Caldwell)
> >> >   5. Re: "bits": Unit of account (Justin A)
> >> >
> >> >
> >> >
> >----------------------------------------------------------------------
> >> >
> >> > Message: 1
> >> > Date: Sun, 20 Apr 2014 20:43:24 +0200
> >> > From: Oliver Egginger <bitcoin at olivere.de>
> >> > Subject: Re: [Bitcoin-development] "bits": Unit of account
> >> > To: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
> >> > Message-ID: <5354154C.1080908 at olivere.de>
> >> > Content-Type: text/plain; charset=ISO-8859-1
> >> >
> >> > Hello,
> >> >
> >> > just my two 'cents':
> >> >
> >> > Terms arises by itself. Just as most people speak of coins when
> >they
> >> > mean bitcoins. I do not see that bitcoin is currently in common use
> >> > except for speculation. Therefore no term for smaller units has
> >> > established yet. No problem in my eyes. Time will tell.
> >> >
> >> > - oliver
> >> >
> >> >
> >> >
> >> >
> >> > ------------------------------
> >> >
> >> > Message: 2
> >> > Date: Sun, 20 Apr 2014 15:19:38 -0400
> >> > From: Christophe Biocca <christophe.biocca at gmail.com>
> >> > Subject: Re: [Bitcoin-development] "bits": Unit of account
> >> > To: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
> >> > Message-ID:
> >> >       <CANOOu=9=
> >> TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A at mail.gmail.com>
> >> > Content-Type: text/plain; charset=UTF-8
> >> >
> >> > Culturally neutral? "bit" in French phonetically collides with
> >slang
> >> > for phallus ("bitte", with a silent "e"). Apparently it means
> >"louse"
> >> > in Turkish as well.
> >> >
> >> > Not that this really would be avoidable with any short word (all
> >the
> >> > short possible words are usually taken), but it's not neutral.
> >> >
> >> > On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger
> ><bitcoin at olivere.de>
> >> wrote:
> >> >> Hello,
> >> >>
> >> >> just my two 'cents':
> >> >>
> >> >> Terms arises by itself. Just as most people speak of coins when
> >they
> >> >> mean bitcoins. I do not see that bitcoin is currently in common
> >use
> >> >> except for speculation. Therefore no term for smaller units has
> >> >> established yet. No problem in my eyes. Time will tell.
> >> >>
> >> >> - oliver
> >> >>
> >> >>
> >> >>
> >>
>
> >------------------------------------------------------------------------------
> >> >> Learn Graph Databases - Download FREE O'Reilly Book
> >> >> "Graph Databases" is the definitive new guide to graph databases
> >and
> >> their
> >> >> applications. Written by three acclaimed leaders in the field,
> >> >> this first edition is now available. Download your free book
> >today!
> >> >> http://p.sf.net/sfu/NeoTech
> >> >> _______________________________________________
> >> >> Bitcoin-development mailing list
> >> >> Bitcoin-development at lists.sourceforge.net
> >> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >> >
> >> >
> >> >
> >> > ------------------------------
> >> >
> >> > Message: 3
> >> > Date: Sun, 20 Apr 2014 14:32:26 -0500
> >> > From: Gmail <will.yager at gmail.com>
> >> > Subject: Re: [Bitcoin-development] "bits": Unit of account
> >> > Cc: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
> >> > Message-ID: <B687D4AD-263F-4594-BE7A-FF238B8DF7AF at gmail.com>
> >> > Content-Type: text/plain; charset="us-ascii"
> >> >
> >> > People in the Bitcoin community are sometimes resistant to the idea
> >of
> >> using the word "credit" as a unit of Bitcoin, because Bitcoin is not
> >a
> >> credit-based system.
> >> >
> >> > However, given that the average person has close to no
> >understanding of
> >> what "credit" means, and probably no concern for the distinction even
> >if
> >> they do know, it may be wise to use the futuristic and easily
> >> understandable "credit" as our human-friendly unit.
> >> >
> >> > Do others agree that "credits" as a unit of account has a desirable
> >> futuristic connotation?
> >> >
> >> > Will
> >> >
> >> > -------------- next part --------------
> >> > A non-text attachment was scrubbed...
> >> > Name: smime.p7s
> >> > Type: application/pkcs7-signature
> >> > Size: 1593 bytes
> >> > Desc: not available
> >> >
> >> > ------------------------------
> >> >
> >> > Message: 4
> >> > Date: Sun, 20 Apr 2014 16:28:34 -0400
> >> > From: Mike Caldwell <mcaldwell at swipeclock.com>
> >> > Subject: Re: [Bitcoin-development] "bits": Unit of account
> >> > To: Christophe Biocca <christophe.biocca at gmail.com>
> >> > Cc: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
> >> > Message-ID: <4098C706-D67F-474E-9C13-E4C8F56B41ED at swipeclock.com>
> >> > Content-Type: text/plain; charset="us-ascii"
> >> >
> >> > By culturally neutral I mean we avoid deliberately invoking a
> >cultural
> >> reference in the name.  For example "satoshi" would be a reference to
> >> Japanese culture just for being a common Japanese name regardless of
> >who
> >> Satoshi turns out to be.
> >> >
> >> > Mike
> >> >
> >> > Sent from my iPhone
> >> >
> >> >> On Apr 20, 2014, at 1:20 PM, "Christophe Biocca" <
> >> christophe.biocca at gmail.com> wrote:
> >> >>
> >> >> Culturally neutral? "bit" in French phonetically collides with
> >slang
> >> >> for phallus ("bitte", with a silent "e"). Apparently it means
> >"louse"
> >> >> in Turkish as well.
> >> >>
> >> >> Not that this really would be avoidable with any short word (all
> >the
> >> >> short possible words are usually taken), but it's not neutral.
> >> >>
> >> >>> On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger
> ><bitcoin at olivere.de>
> >> wrote:
> >> >>> Hello,
> >> >>>
> >> >>> just my two 'cents':
> >> >>>
> >> >>> Terms arises by itself. Just as most people speak of coins when
> >they
> >> >>> mean bitcoins. I do not see that bitcoin is currently in common
> >use
> >> >>> except for speculation. Therefore no term for smaller units has
> >> >>> established yet. No problem in my eyes. Time will tell.
> >> >>>
> >> >>> - oliver
> >> >>>
> >> >>>
> >> >>>
> >>
>
> >------------------------------------------------------------------------------
> >> >>> Learn Graph Databases - Download FREE O'Reilly Book
> >> >>> "Graph Databases" is the definitive new guide to graph databases
> >and
> >> their
> >> >>> applications. Written by three acclaimed leaders in the field,
> >> >>> this first edition is now available. Download your free book
> >today!
> >> >>> http://p.sf.net/sfu/NeoTech
> >> >>> _______________________________________________
> >> >>> Bitcoin-development mailing list
> >> >>> Bitcoin-development at lists.sourceforge.net
> >> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >> >>
> >> >>
> >>
>
> >------------------------------------------------------------------------------
> >> >> Learn Graph Databases - Download FREE O'Reilly Book
> >> >> "Graph Databases" is the definitive new guide to graph databases
> >and
> >> their
> >> >> applications. Written by three acclaimed leaders in the field,
> >> >> this first edition is now available. Download your free book
> >today!
> >> >> http://p.sf.net/sfu/NeoTech
> >> >> _______________________________________________
> >> >> Bitcoin-development mailing list
> >> >> Bitcoin-development at lists.sourceforge.net
> >> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >> >
> >> >
> >> >
> >> > ------------------------------
> >> >
> >> > Message: 5
> >> > Date: Sun, 20 Apr 2014 20:16:35 -0400
> >> > From: Justin A <allport at gmail.com>
> >> > Subject: Re: [Bitcoin-development] "bits": Unit of account
> >> > To: Mike Caldwell <mcaldwell at swipeclock.com>
> >> > Cc: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
> >> > Message-ID:
> >> >       <
> >> CAK2MuX3GufxU_AH0Kaw3pUkzgX_agok86ahCh+7r96UkxZwneQ at mail.gmail.com>
> >> > Content-Type: text/plain; charset="utf-8"
> >> >
> >> > <delurk>
> >> >
> >> > What about "ubit", pronounced "YOU-bit", representing 1e-6 bitcoin?
> >Easy
> >> to
> >> > say, tied in a visual way to the metric micro, leaves the required
> >2
> >> > decimal places for the marginally numerate.. What more could one
> >want?
> >> >
> >> > </delurk>
> >> >
> >> > Also, hi. My first post; plan to get involved over the southern
> >> hemisphere
> >> > winter if I can learn enough.
> >> > On Apr 20, 2014 4:32 PM, "Mike Caldwell" <mcaldwell at swipeclock.com>
> >> wrote:
> >> >
> >> >> By culturally neutral I mean we avoid deliberately invoking a
> >cultural
> >> >> reference in the name.  For example "satoshi" would be a reference
> >to
> >> >> Japanese culture just for being a common Japanese name regardless
> >of who
> >> >> Satoshi turns out to be.
> >> >>
> >> >> Mike
> >> >>
> >> >> Sent from my iPhone
> >> >>
> >> >>> On Apr 20, 2014, at 1:20 PM, "Christophe Biocca" <
> >> >> christophe.biocca at gmail.com> wrote:
> >> >>>
> >> >>> Culturally neutral? "bit" in French phonetically collides with
> >slang
> >> >>> for phallus ("bitte", with a silent "e"). Apparently it means
> >"louse"
> >> >>> in Turkish as well.
> >> >>>
> >> >>> Not that this really would be avoidable with any short word (all
> >the
> >> >>> short possible words are usually taken), but it's not neutral.
> >> >>>
> >> >>>> On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger
> ><bitcoin at olivere.de>
> >> >> wrote:
> >> >>>> Hello,
> >> >>>>
> >> >>>> just my two 'cents':
> >> >>>>
> >> >>>> Terms arises by itself. Just as most people speak of coins when
> >they
> >> >>>> mean bitcoins. I do not see that bitcoin is currently in common
> >use
> >> >>>> except for speculation. Therefore no term for smaller units has
> >> >>>> established yet. No problem in my eyes. Time will tell.
> >> >>>>
> >> >>>> - oliver
> >> >>>>
> >> >>>>
> >> >>>>
> >> >>
> >>
>
> >------------------------------------------------------------------------------
> >> >>>> Learn Graph Databases - Download FREE O'Reilly Book
> >> >>>> "Graph Databases" is the definitive new guide to graph databases
> >and
> >> >> their
> >> >>>> applications. Written by three acclaimed leaders in the field,
> >> >>>> this first edition is now available. Download your free book
> >today!
> >> >>>> http://p.sf.net/sfu/NeoTech
> >> >>>> _______________________________________________
> >> >>>> Bitcoin-development mailing list
> >> >>>> Bitcoin-development at lists.sourceforge.net
> >> >>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >> >>>
> >> >>>
> >> >>
> >>
>
> >------------------------------------------------------------------------------
> >> >>> Learn Graph Databases - Download FREE O'Reilly Book
> >> >>> "Graph Databases" is the definitive new guide to graph databases
> >and
> >> >> their
> >> >>> applications. Written by three acclaimed leaders in the field,
> >> >>> this first edition is now available. Download your free book
> >today!
> >> >>> http://p.sf.net/sfu/NeoTech
> >> >>> _______________________________________________
> >> >>> Bitcoin-development mailing list
> >> >>> Bitcoin-development at lists.sourceforge.net
> >> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >> >>
> >> >>
> >> >>
> >>
>
> >------------------------------------------------------------------------------
> >> >> Learn Graph Databases - Download FREE O'Reilly Book
> >> >> "Graph Databases" is the definitive new guide to graph databases
> >and
> >> their
> >> >> applications. Written by three acclaimed leaders in the field,
> >> >> this first edition is now available. Download your free book
> >today!
> >> >> http://p.sf.net/sfu/NeoTech
> >> >> _______________________________________________
> >> >> Bitcoin-development mailing list
> >> >> Bitcoin-development at lists.sourceforge.net
> >> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >> >>
> >> > -------------- next part --------------
> >> > An HTML attachment was scrubbed...
> >> >
> >> > ------------------------------
> >> >
> >> >
> >>
>
> >------------------------------------------------------------------------------
> >> > Start Your Social Network Today - Download eXo Platform
> >> > Build your Enterprise Intranet with eXo Platform Software
> >> > Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> >> > Get Started Now And Turn Your Intranet Into A Collaboration
> >Platform
> >> > http://p.sf.net/sfu/ExoPlatform
> >> >
> >> > ------------------------------
> >> >
> >> > _______________________________________________
> >> > Bitcoin-development mailing list
> >> > Bitcoin-development at lists.sourceforge.net
> >> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >> >
> >> >
> >> > End of Bitcoin-development Digest, Vol 35, Issue 72
> >> > ***************************************************
> >>
> >>
> >>
> >>
>
> >------------------------------------------------------------------------------
> >> Start Your Social Network Today - Download eXo Platform
> >> Build your Enterprise Intranet with eXo Platform Software
> >> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> >> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> >> http://p.sf.net/sfu/ExoPlatform
> >> _______________________________________________
> >> Bitcoin-development mailing list
> >> Bitcoin-development at lists.sourceforge.net
> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >>
> >>
> >
> >
> >------------------------------------------------------------------------
> >
>
> >------------------------------------------------------------------------------
> >Start Your Social Network Today - Download eXo Platform
> >Build your Enterprise Intranet with eXo Platform Software
> >Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> >Get Started Now And Turn Your Intranet Into A Collaboration Platform
> >http://p.sf.net/sfu/ExoPlatform
> >
> >------------------------------------------------------------------------
> >
> >_______________________________________________
> >Bitcoin-development mailing list
> >Bitcoin-development at lists.sourceforge.net
> >https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> -----BEGIN PGP SIGNATURE-----
> Version: APG v1.1.1
>
> iQFQBAEBCAA6BQJTVJlDMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
> cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhTbNB/4lHTsUN/iee7H0UyBn
> +TDRgf1BSoUx9HP+vtwXzS0JkVQoxoB5x4Pls+ex7qIXGNxdG9EPYi1RqQ5A8RUo
> X2ntOL2pj6qTmW4aYxqqyihiQayLs5ixHPmJxqHv343g5ekqsKmBeDuWR4hXjUyZ
> 0Pfcp40Xd3eJ38dSbq98letl5eD+ryBPKYtb91Trumqa9S0WB8kw9IqNaXjlpfG1
> lYuaVEllpaLpZW+4cx1mlPneS1GmLvloWhXf4Qh4X39VXECAjOAmNKh1atJCyT7H
> ugkOcx1F2Rxo5P3jNzBRJKyAD96sbOhKm4sX7rzSjhT3WJgyHtJm3wkeluDCOVbR
> QZqK
> =R7Tv
> -----END PGP SIGNATURE-----
>
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140420/3e2600cd/attachment.html>

From rodney.morris at gmail.com  Mon Apr 21 04:58:45 2014
From: rodney.morris at gmail.com (Rodney Morris)
Date: Mon, 21 Apr 2014 14:58:45 +1000
Subject: [Bitcoin-development] Mailing list abuse
Message-ID: <CABerxhEbsVC6MWU_KGjvMBOaN9JbDj5S1PZmxYwAsJN-SiOAmw@mail.gmail.com>

What is the procedure for dealing with it? Is it considered abuse to reply
to and quote the entire digest for the sake of a few lines of content? Am I
the only one annoyed by this (if so I'll just shut right up).

Rodney
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/df8dfb85/attachment.html>

From pieter.wuille at gmail.com  Mon Apr 21 05:41:30 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Mon, 21 Apr 2014 07:41:30 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <BLU402-EAS292E80B3A1FA891428B768C65E0@phx.gbl>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<53540715.7050803@xylon.de>
	<1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>
	<5354154C.1080908@olivere.de>
	<CANOOu=9=TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A@mail.gmail.com>
	<4098C706-D67F-474E-9C13-E4C8F56B41ED@swipeclock.com>
	<CAK2MuX3GufxU_AH0Kaw3pUkzgX_agok86ahCh+7r96UkxZwneQ@mail.gmail.com>
	<11664045-9CAB-4A9B-BE45-271496D870CD@swipeclock.com>
	<BLU402-EAS292E80B3A1FA891428B768C65E0@phx.gbl>
Message-ID: <CAPg+sBidnatH1RHZ02kn2K2Tkn1OGP9n+ieLJcT68C_s11Rpgg@mail.gmail.com>

On Apr 21, 2014 3:37 AM, "Un Ix" <slashdevnull at hotmail.com> wrote:
>
> Something tells me this would be reduced to a single syllable in common
usage I.e. bit.

What units will be called colloquially is not something developers will
determine. It will vary, depend on language and culture, and is not
relevant to this discussion in my opinion.

It may well be that people in some geographic or language area will end up
(or for a while) calling 1e-06 BTC "bits". That's fine, but using that as
"official" name in software would be very strange and potentially confusing
in my opinion. As mentioned by others, that would seem to me like calling
dollars "bucks" in bank software. Nobody seems to have a problem with
having colloquial names, but "US dollar" or "euro" are far less ambiguous
than "bit". I think we need a more distinctive name.

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/8bf1a762/attachment.html>

From lidstrom83 at gmail.com  Mon Apr 21 05:46:29 2014
From: lidstrom83 at gmail.com (Daniel Lidstrom)
Date: Sun, 20 Apr 2014 23:46:29 -0600
Subject: [Bitcoin-development] Economics of information propagation
In-Reply-To: <CADjHg8GY2J4bjp=Cj08WtMJ+pfMOSqBopSnmM_GLdtsOfrz3JQ@mail.gmail.com>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
	<CACh7GpFGEvR+_qArYCkgi7AW4coSeH741ob4hmBpj6G3MayNAQ@mail.gmail.com>
	<a9a262a9-c70f-470d-81e0-ca32c41d8dc5@email.android.com>
	<CADjHg8GY2J4bjp=Cj08WtMJ+pfMOSqBopSnmM_GLdtsOfrz3JQ@mail.gmail.com>
Message-ID: <CADjHg8HVX0pkAVVRiuQ6VfOcZarKyBg6_1OjRjUvrRa2-Acq=A@mail.gmail.com>

If this policy of mining empty blocks upon new block headers before
downloading and verifying the blocks became the standard, then wouldn't the
marginal orphan probability per transaction vanish?  It seems like this
could be a way to seriously reduce transaction fees.


On Sun, Apr 20, 2014 at 10:44 PM, Daniel Lidstrom <lidstrom83 at gmail.com>wrote:

>
> Of course, in reality smaller miners can just mine on top of block headers
>> and include no transactions and do no validation, but that is extremely
>> harmful to the security of Bitcoin.
>
>
> If it's only during the few seconds that it takes to to verify the block,
> then would this really be that big of a deal?  E.g. even if all miners did
> this, a 10 second delay would only yield an average of a couple blind/empty
> blocks per day.
>
>
> On Sun, Apr 20, 2014 at 10:06 PM, Peter Todd <pete at petertodd.org> wrote:
>
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA256
>>
>> That is mistaken: you can't mine on top of just a block header, leaving
>> small miners disadvantaged as they are earning no profit while they wait
>> for the information to validate the block and update their UTXO sets. This
>> results in the same problem as before, as the large pools who mine most
>> blocks can validate either instantly - the self-mine case - or more quickly
>> than the smaller miners.
>>
>> Of course, in reality smaller miners can just mine on top of block
>> headers and include no transactions and do no validation, but that is
>> extremely harmful to the security of Bitcoin.
>>
>>
>> On 20 April 2014 23:58:58 GMT-04:00, Mark Friedenbach <mark at monetize.io>
>> wrote:
>> >As soon as we switch to headers
>> >first - which will be soon - there will be no difference in propagation
>> >time no matter how large the block is. Only 80 bites will be required
>> >to
>> >propagate the block header which establishes priority for when the
>> >block is
>> >fully validated.
>> >On Apr 20, 2014 6:56 PM, "Jonathan Levin"
>> ><jonathan.levin at sant.ox.ac.uk>
>> >wrote:
>> >
>> >> Hi all,
>> >>
>> >> I am a post-graduate economist writing a paper on the incentives of
>> >> mining. Even though this issue has been debated in the forums, I
>> >think it
>> >> is important to get a sense of the magnitude of the incentives at
>> >play and
>> >> determine what implications this has for the transaction fee market.
>> >>
>> >> As it has been pointed out before the marginal cost for miners does
>> >not
>> >> stem from the private cost of the miner validating the signature and
>> >> including it in the list of transactions in the block but rather the
>> >> increased probability that the block will be orphaned as a result of
>> >slower
>> >> propagation. Gavin did some back of the envelope worst case
>> >calculations
>> >> but these overstated the effect of propagation delay. The reason
>> >being the
>> >> 80ms additional time to reach 50% of the network is spread throughout
>> >the
>> >> time that it takes to reach 50% of the network. During this time
>> >miners are
>> >> notified about the block and treat it as the longest chain and hence
>> >are no
>> >> longer mining with the aim to produce a competing block.
>> >>
>> >> I am looking to calculate the change in the curvature of the
>> >probability
>> >> mass function that a block hears about my block in any given second
>> >as a
>> >> function of the block size. Although there is likely to be
>> >significant
>> >> noise here, there seems to be some stable linear relationships with
>> >the
>> >> time that it takes to reach different quartiles. Has anyone done
>> >this? I
>> >> have used some empirical data that I am happy to share but ideally I
>> >would
>> >> like analytical solutions.
>> >>
>> >> Following Peter Todd, I also find the concerning result that
>> >propagation
>> >> delays results in increasing returns to higher shares of the hashing
>> >power.
>> >> Indeed it may well be in the interest of large pools to publish large
>> >> blocks to increase propagation delays on the network which would
>> >increase
>> >> orphan rates particularly for small miners and miners that have not
>> >> invested in sufficient bandwidth / connectivity. If a small miner
>> >hears
>> >> about a block after 4.5 seconds on average there is a 0.7% chance
>> >that
>> >> there is already a block in circulation.  Large miners can increase
>> >the
>> >> time that it takes for small miners to hear about blocks by
>> >increasing the
>> >> size of their blocks. For example if the time that it takes for a
>> >small
>> >> miner to hear about the block goes to 12 seconds there is a 2 percent
>> >> chance there is already a block in circulation for the small miner.
>> >There
>> >> is also a 1.2% chance that there will be a competing block published
>> >after
>> >> a small miner propagates in the time that it gets to full
>> >propagation. Am I
>> >> getting this right that the probability of a miner?s block being
>> >orphaned
>> >> is comprised of the probability that the miner was not the first to
>> >find a
>> >> valid block and the probability that given they are first, someone
>> >else in
>> >> the absence of hearing about it finds a competing valid block.
>> >>
>> >> One question is: Are orphans probabilistic and only resolved after
>> >hearing
>> >> about a new block that lengthens the chain or is there a way to know
>> >in
>> >> advance? Is it frowned upon to mine on top of a block that you have
>> >just
>> >> found even though it is very likely going to end up an orphan?
>> >>
>> >> Would be happy to share the draft form of the paper and receive any
>> >> feedback.
>> >>
>> >> Finally, at coinometrics we are working on a modified client to
>> >capture
>> >> information on network propagation and would invite any suggestions
>> >of any
>> >> other useful statistics that would be useful in the development of
>> >software.
>> >>
>> >> Best,
>> >>
>> >> Jonathan
>> >>
>> >>
>> >>
>> >>
>> >>
>> >>
>> >>
>> >>
>> >>
>> >>
>> >> On 21 Apr 2014, at 01:16, <
>> >> bitcoin-development-request at lists.sourceforge.net> <
>> >> bitcoin-development-request at lists.sourceforge.net> wrote:
>> >>
>> >> > Send Bitcoin-development mailing list submissions to
>> >> >       bitcoin-development at lists.sourceforge.net
>> >> >
>> >> > To subscribe or unsubscribe via the World Wide Web, visit
>> >> >
>> >https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >> > or, via email, send a message with subject or body 'help' to
>> >> >       bitcoin-development-request at lists.sourceforge.net
>> >> >
>> >> > You can reach the person managing the list at
>> >> >       bitcoin-development-owner at lists.sourceforge.net
>> >> >
>> >> > When replying, please edit your Subject line so it is more specific
>> >> > than "Re: Contents of Bitcoin-development digest..."
>> >> >
>> >> >
>> >> > Today's Topics:
>> >> >
>> >> >   1. Re: "bits": Unit of account (Oliver Egginger)
>> >> >   2. Re: "bits": Unit of account (Christophe Biocca)
>> >> >   3. Re: "bits": Unit of account (Gmail)
>> >> >   4. Re: "bits": Unit of account (Mike Caldwell)
>> >> >   5. Re: "bits": Unit of account (Justin A)
>> >> >
>> >> >
>> >> >
>> >----------------------------------------------------------------------
>> >> >
>> >> > Message: 1
>> >> > Date: Sun, 20 Apr 2014 20:43:24 +0200
>> >> > From: Oliver Egginger <bitcoin at olivere.de>
>> >> > Subject: Re: [Bitcoin-development] "bits": Unit of account
>> >> > To: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
>> >> > Message-ID: <5354154C.1080908 at olivere.de>
>> >> > Content-Type: text/plain; charset=ISO-8859-1
>> >> >
>> >> > Hello,
>> >> >
>> >> > just my two 'cents':
>> >> >
>> >> > Terms arises by itself. Just as most people speak of coins when
>> >they
>> >> > mean bitcoins. I do not see that bitcoin is currently in common use
>> >> > except for speculation. Therefore no term for smaller units has
>> >> > established yet. No problem in my eyes. Time will tell.
>> >> >
>> >> > - oliver
>> >> >
>> >> >
>> >> >
>> >> >
>> >> > ------------------------------
>> >> >
>> >> > Message: 2
>> >> > Date: Sun, 20 Apr 2014 15:19:38 -0400
>> >> > From: Christophe Biocca <christophe.biocca at gmail.com>
>> >> > Subject: Re: [Bitcoin-development] "bits": Unit of account
>> >> > To: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
>> >> > Message-ID:
>> >> >       <CANOOu=9=
>> >> TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A at mail.gmail.com>
>> >> > Content-Type: text/plain; charset=UTF-8
>> >> >
>> >> > Culturally neutral? "bit" in French phonetically collides with
>> >slang
>> >> > for phallus ("bitte", with a silent "e"). Apparently it means
>> >"louse"
>> >> > in Turkish as well.
>> >> >
>> >> > Not that this really would be avoidable with any short word (all
>> >the
>> >> > short possible words are usually taken), but it's not neutral.
>> >> >
>> >> > On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger
>> ><bitcoin at olivere.de>
>> >> wrote:
>> >> >> Hello,
>> >> >>
>> >> >> just my two 'cents':
>> >> >>
>> >> >> Terms arises by itself. Just as most people speak of coins when
>> >they
>> >> >> mean bitcoins. I do not see that bitcoin is currently in common
>> >use
>> >> >> except for speculation. Therefore no term for smaller units has
>> >> >> established yet. No problem in my eyes. Time will tell.
>> >> >>
>> >> >> - oliver
>> >> >>
>> >> >>
>> >> >>
>> >>
>>
>> >------------------------------------------------------------------------------
>> >> >> Learn Graph Databases - Download FREE O'Reilly Book
>> >> >> "Graph Databases" is the definitive new guide to graph databases
>> >and
>> >> their
>> >> >> applications. Written by three acclaimed leaders in the field,
>> >> >> this first edition is now available. Download your free book
>> >today!
>> >> >> http://p.sf.net/sfu/NeoTech
>> >> >> _______________________________________________
>> >> >> Bitcoin-development mailing list
>> >> >> Bitcoin-development at lists.sourceforge.net
>> >> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >> >
>> >> >
>> >> >
>> >> > ------------------------------
>> >> >
>> >> > Message: 3
>> >> > Date: Sun, 20 Apr 2014 14:32:26 -0500
>> >> > From: Gmail <will.yager at gmail.com>
>> >> > Subject: Re: [Bitcoin-development] "bits": Unit of account
>> >> > Cc: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
>> >> > Message-ID: <B687D4AD-263F-4594-BE7A-FF238B8DF7AF at gmail.com>
>> >> > Content-Type: text/plain; charset="us-ascii"
>> >> >
>> >> > People in the Bitcoin community are sometimes resistant to the idea
>> >of
>> >> using the word "credit" as a unit of Bitcoin, because Bitcoin is not
>> >a
>> >> credit-based system.
>> >> >
>> >> > However, given that the average person has close to no
>> >understanding of
>> >> what "credit" means, and probably no concern for the distinction even
>> >if
>> >> they do know, it may be wise to use the futuristic and easily
>> >> understandable "credit" as our human-friendly unit.
>> >> >
>> >> > Do others agree that "credits" as a unit of account has a desirable
>> >> futuristic connotation?
>> >> >
>> >> > Will
>> >> >
>> >> > -------------- next part --------------
>> >> > A non-text attachment was scrubbed...
>> >> > Name: smime.p7s
>> >> > Type: application/pkcs7-signature
>> >> > Size: 1593 bytes
>> >> > Desc: not available
>> >> >
>> >> > ------------------------------
>> >> >
>> >> > Message: 4
>> >> > Date: Sun, 20 Apr 2014 16:28:34 -0400
>> >> > From: Mike Caldwell <mcaldwell at swipeclock.com>
>> >> > Subject: Re: [Bitcoin-development] "bits": Unit of account
>> >> > To: Christophe Biocca <christophe.biocca at gmail.com>
>> >> > Cc: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
>> >> > Message-ID: <4098C706-D67F-474E-9C13-E4C8F56B41ED at swipeclock.com>
>> >> > Content-Type: text/plain; charset="us-ascii"
>> >> >
>> >> > By culturally neutral I mean we avoid deliberately invoking a
>> >cultural
>> >> reference in the name.  For example "satoshi" would be a reference to
>> >> Japanese culture just for being a common Japanese name regardless of
>> >who
>> >> Satoshi turns out to be.
>> >> >
>> >> > Mike
>> >> >
>> >> > Sent from my iPhone
>> >> >
>> >> >> On Apr 20, 2014, at 1:20 PM, "Christophe Biocca" <
>> >> christophe.biocca at gmail.com> wrote:
>> >> >>
>> >> >> Culturally neutral? "bit" in French phonetically collides with
>> >slang
>> >> >> for phallus ("bitte", with a silent "e"). Apparently it means
>> >"louse"
>> >> >> in Turkish as well.
>> >> >>
>> >> >> Not that this really would be avoidable with any short word (all
>> >the
>> >> >> short possible words are usually taken), but it's not neutral.
>> >> >>
>> >> >>> On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger
>> ><bitcoin at olivere.de>
>> >> wrote:
>> >> >>> Hello,
>> >> >>>
>> >> >>> just my two 'cents':
>> >> >>>
>> >> >>> Terms arises by itself. Just as most people speak of coins when
>> >they
>> >> >>> mean bitcoins. I do not see that bitcoin is currently in common
>> >use
>> >> >>> except for speculation. Therefore no term for smaller units has
>> >> >>> established yet. No problem in my eyes. Time will tell.
>> >> >>>
>> >> >>> - oliver
>> >> >>>
>> >> >>>
>> >> >>>
>> >>
>>
>> >------------------------------------------------------------------------------
>> >> >>> Learn Graph Databases - Download FREE O'Reilly Book
>> >> >>> "Graph Databases" is the definitive new guide to graph databases
>> >and
>> >> their
>> >> >>> applications. Written by three acclaimed leaders in the field,
>> >> >>> this first edition is now available. Download your free book
>> >today!
>> >> >>> http://p.sf.net/sfu/NeoTech
>> >> >>> _______________________________________________
>> >> >>> Bitcoin-development mailing list
>> >> >>> Bitcoin-development at lists.sourceforge.net
>> >> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >> >>
>> >> >>
>> >>
>>
>> >------------------------------------------------------------------------------
>> >> >> Learn Graph Databases - Download FREE O'Reilly Book
>> >> >> "Graph Databases" is the definitive new guide to graph databases
>> >and
>> >> their
>> >> >> applications. Written by three acclaimed leaders in the field,
>> >> >> this first edition is now available. Download your free book
>> >today!
>> >> >> http://p.sf.net/sfu/NeoTech
>> >> >> _______________________________________________
>> >> >> Bitcoin-development mailing list
>> >> >> Bitcoin-development at lists.sourceforge.net
>> >> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >> >
>> >> >
>> >> >
>> >> > ------------------------------
>> >> >
>> >> > Message: 5
>> >> > Date: Sun, 20 Apr 2014 20:16:35 -0400
>> >> > From: Justin A <allport at gmail.com>
>> >> > Subject: Re: [Bitcoin-development] "bits": Unit of account
>> >> > To: Mike Caldwell <mcaldwell at swipeclock.com>
>> >> > Cc: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
>> >> > Message-ID:
>> >> >       <
>> >> CAK2MuX3GufxU_AH0Kaw3pUkzgX_agok86ahCh+7r96UkxZwneQ at mail.gmail.com>
>> >> > Content-Type: text/plain; charset="utf-8"
>> >> >
>> >> > <delurk>
>> >> >
>> >> > What about "ubit", pronounced "YOU-bit", representing 1e-6 bitcoin?
>> >Easy
>> >> to
>> >> > say, tied in a visual way to the metric micro, leaves the required
>> >2
>> >> > decimal places for the marginally numerate.. What more could one
>> >want?
>> >> >
>> >> > </delurk>
>> >> >
>> >> > Also, hi. My first post; plan to get involved over the southern
>> >> hemisphere
>> >> > winter if I can learn enough.
>> >> > On Apr 20, 2014 4:32 PM, "Mike Caldwell" <mcaldwell at swipeclock.com>
>> >> wrote:
>> >> >
>> >> >> By culturally neutral I mean we avoid deliberately invoking a
>> >cultural
>> >> >> reference in the name.  For example "satoshi" would be a reference
>> >to
>> >> >> Japanese culture just for being a common Japanese name regardless
>> >of who
>> >> >> Satoshi turns out to be.
>> >> >>
>> >> >> Mike
>> >> >>
>> >> >> Sent from my iPhone
>> >> >>
>> >> >>> On Apr 20, 2014, at 1:20 PM, "Christophe Biocca" <
>> >> >> christophe.biocca at gmail.com> wrote:
>> >> >>>
>> >> >>> Culturally neutral? "bit" in French phonetically collides with
>> >slang
>> >> >>> for phallus ("bitte", with a silent "e"). Apparently it means
>> >"louse"
>> >> >>> in Turkish as well.
>> >> >>>
>> >> >>> Not that this really would be avoidable with any short word (all
>> >the
>> >> >>> short possible words are usually taken), but it's not neutral.
>> >> >>>
>> >> >>>> On Sun, Apr 20, 2014 at 2:43 PM, Oliver Egginger
>> ><bitcoin at olivere.de>
>> >> >> wrote:
>> >> >>>> Hello,
>> >> >>>>
>> >> >>>> just my two 'cents':
>> >> >>>>
>> >> >>>> Terms arises by itself. Just as most people speak of coins when
>> >they
>> >> >>>> mean bitcoins. I do not see that bitcoin is currently in common
>> >use
>> >> >>>> except for speculation. Therefore no term for smaller units has
>> >> >>>> established yet. No problem in my eyes. Time will tell.
>> >> >>>>
>> >> >>>> - oliver
>> >> >>>>
>> >> >>>>
>> >> >>>>
>> >> >>
>> >>
>>
>> >------------------------------------------------------------------------------
>> >> >>>> Learn Graph Databases - Download FREE O'Reilly Book
>> >> >>>> "Graph Databases" is the definitive new guide to graph databases
>> >and
>> >> >> their
>> >> >>>> applications. Written by three acclaimed leaders in the field,
>> >> >>>> this first edition is now available. Download your free book
>> >today!
>> >> >>>> http://p.sf.net/sfu/NeoTech
>> >> >>>> _______________________________________________
>> >> >>>> Bitcoin-development mailing list
>> >> >>>> Bitcoin-development at lists.sourceforge.net
>> >> >>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >> >>>
>> >> >>>
>> >> >>
>> >>
>>
>> >------------------------------------------------------------------------------
>> >> >>> Learn Graph Databases - Download FREE O'Reilly Book
>> >> >>> "Graph Databases" is the definitive new guide to graph databases
>> >and
>> >> >> their
>> >> >>> applications. Written by three acclaimed leaders in the field,
>> >> >>> this first edition is now available. Download your free book
>> >today!
>> >> >>> http://p.sf.net/sfu/NeoTech
>> >> >>> _______________________________________________
>> >> >>> Bitcoin-development mailing list
>> >> >>> Bitcoin-development at lists.sourceforge.net
>> >> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >> >>
>> >> >>
>> >> >>
>> >>
>>
>> >------------------------------------------------------------------------------
>> >> >> Learn Graph Databases - Download FREE O'Reilly Book
>> >> >> "Graph Databases" is the definitive new guide to graph databases
>> >and
>> >> their
>> >> >> applications. Written by three acclaimed leaders in the field,
>> >> >> this first edition is now available. Download your free book
>> >today!
>> >> >> http://p.sf.net/sfu/NeoTech
>> >> >> _______________________________________________
>> >> >> Bitcoin-development mailing list
>> >> >> Bitcoin-development at lists.sourceforge.net
>> >> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >> >>
>> >> > -------------- next part --------------
>> >> > An HTML attachment was scrubbed...
>> >> >
>> >> > ------------------------------
>> >> >
>> >> >
>> >>
>>
>> >------------------------------------------------------------------------------
>> >> > Start Your Social Network Today - Download eXo Platform
>> >> > Build your Enterprise Intranet with eXo Platform Software
>> >> > Java Based Open Source Intranet - Social, Extensible, Cloud Ready
>> >> > Get Started Now And Turn Your Intranet Into A Collaboration
>> >Platform
>> >> > http://p.sf.net/sfu/ExoPlatform
>> >> >
>> >> > ------------------------------
>> >> >
>> >> > _______________________________________________
>> >> > Bitcoin-development mailing list
>> >> > Bitcoin-development at lists.sourceforge.net
>> >> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >> >
>> >> >
>> >> > End of Bitcoin-development Digest, Vol 35, Issue 72
>> >> > ***************************************************
>> >>
>> >>
>> >>
>> >>
>>
>> >------------------------------------------------------------------------------
>> >> Start Your Social Network Today - Download eXo Platform
>> >> Build your Enterprise Intranet with eXo Platform Software
>> >> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
>> >> Get Started Now And Turn Your Intranet Into A Collaboration Platform
>> >> http://p.sf.net/sfu/ExoPlatform
>> >> _______________________________________________
>> >> Bitcoin-development mailing list
>> >> Bitcoin-development at lists.sourceforge.net
>> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> >>
>> >>
>> >
>> >
>> >------------------------------------------------------------------------
>> >
>>
>> >------------------------------------------------------------------------------
>> >Start Your Social Network Today - Download eXo Platform
>> >Build your Enterprise Intranet with eXo Platform Software
>> >Java Based Open Source Intranet - Social, Extensible, Cloud Ready
>> >Get Started Now And Turn Your Intranet Into A Collaboration Platform
>> >http://p.sf.net/sfu/ExoPlatform
>> >
>> >------------------------------------------------------------------------
>> >
>> >_______________________________________________
>> >Bitcoin-development mailing list
>> >Bitcoin-development at lists.sourceforge.net
>> >https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> -----BEGIN PGP SIGNATURE-----
>> Version: APG v1.1.1
>>
>> iQFQBAEBCAA6BQJTVJlDMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
>> cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhTbNB/4lHTsUN/iee7H0UyBn
>> +TDRgf1BSoUx9HP+vtwXzS0JkVQoxoB5x4Pls+ex7qIXGNxdG9EPYi1RqQ5A8RUo
>> X2ntOL2pj6qTmW4aYxqqyihiQayLs5ixHPmJxqHv343g5ekqsKmBeDuWR4hXjUyZ
>> 0Pfcp40Xd3eJ38dSbq98letl5eD+ryBPKYtb91Trumqa9S0WB8kw9IqNaXjlpfG1
>> lYuaVEllpaLpZW+4cx1mlPneS1GmLvloWhXf4Qh4X39VXECAjOAmNKh1atJCyT7H
>> ugkOcx1F2Rxo5P3jNzBRJKyAD96sbOhKm4sX7rzSjhT3WJgyHtJm3wkeluDCOVbR
>> QZqK
>> =R7Tv
>> -----END PGP SIGNATURE-----
>>
>>
>>
>> ------------------------------------------------------------------------------
>> Start Your Social Network Today - Download eXo Platform
>> Build your Enterprise Intranet with eXo Platform Software
>> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
>> Get Started Now And Turn Your Intranet Into A Collaboration Platform
>> http://p.sf.net/sfu/ExoPlatform
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140420/731cb618/attachment.html>

From laanwj at gmail.com  Mon Apr 21 05:47:28 2014
From: laanwj at gmail.com (Wladimir)
Date: Mon, 21 Apr 2014 07:47:28 +0200
Subject: [Bitcoin-development] Mailing list abuse
In-Reply-To: <CABerxhEbsVC6MWU_KGjvMBOaN9JbDj5S1PZmxYwAsJN-SiOAmw@mail.gmail.com>
References: <CABerxhEbsVC6MWU_KGjvMBOaN9JbDj5S1PZmxYwAsJN-SiOAmw@mail.gmail.com>
Message-ID: <CA+s+GJAgEOWvuTDdpU8N11-YtmRrtfb2E=WYmQrOFd0LybDWYw@mail.gmail.com>

On Mon, Apr 21, 2014 at 6:58 AM, Rodney Morris <rodney.morris at gmail.com> wrote:
> What is the procedure for dealing with it? Is it considered abuse to reply
> to and quote the entire digest for the sake of a few lines of content? Am I
> the only one annoyed by this (if so I'll just shut right up).

I would not go as far as calling it 'abuse' if it is not done on
purpose. Probably the person doesn't even know he/she is doing this.
Best to mail the person and ask (nicely) instead of complaining to the
list.

Wladimir



From tamas at bitsofproof.com  Mon Apr 21 05:51:45 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Mon, 21 Apr 2014 07:51:45 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CAPg+sBidnatH1RHZ02kn2K2Tkn1OGP9n+ieLJcT68C_s11Rpgg@mail.gmail.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<53540715.7050803@xylon.de>
	<1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>
	<5354154C.1080908@olivere.de>
	<CANOOu=9=TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A@mail.gmail.com>
	<4098C706-D67F-474E-9C13-E4C8F56B41ED@swipeclock.com>
	<CAK2MuX3GufxU_AH0Kaw3pUkzgX_agok86ahCh+7r96UkxZwneQ@mail.gmail.com>
	<11664045-9CAB-4A9B-BE45-271496D870CD@swipeclock.com>
	<BLU402-EAS292E80B3A1FA891428B768C65E0@phx.gbl>
	<CAPg+sBidnatH1RHZ02kn2K2Tkn1OGP9n+ieLJcT68C_s11Rpgg@mail.gmail.com>
Message-ID: <D76A064B-286D-40F7-814D-E3661F6DFF7F@bitsofproof.com>

I think we have two very good candidates both substantiated with arguments for their use in their context:

bit  - the word for everyday use 
XBT - the acronym to fit into the ISO currency set.

both meaning 100 satoshis or 1e-6 Bitcoin. 

I am glad that I erred, and this list finaly cares of finance customs and average Joe?s.

Regards,

Tamas Blummer
http://bitsofproof.com

On 21.04.2014, at 07:41, Pieter Wuille <pieter.wuille at gmail.com> wrote:

> 
> On Apr 21, 2014 3:37 AM, "Un Ix" <slashdevnull at hotmail.com> wrote:
> >
> > Something tells me this would be reduced to a single syllable in common usage I.e. bit.
> 
> What units will be called colloquially is not something developers will determine. It will vary, depend on language and culture, and is not relevant to this discussion in my opinion.
> 
> It may well be that people in some geographic or language area will end up (or for a while) calling 1e-06 BTC "bits". That's fine, but using that as "official" name in software would be very strange and potentially confusing in my opinion. As mentioned by others, that would seem to me like calling dollars "bucks" in bank software. Nobody seems to have a problem with having colloquial names, but "US dollar" or "euro" are far less ambiguous than "bit". I think we need a more distinctive name.
> 
> -- 
> Pieter
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform_______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/ed77a20c/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/ed77a20c/attachment.sig>

From rodney.morris at gmail.com  Mon Apr 21 06:02:21 2014
From: rodney.morris at gmail.com (Rodney Morris)
Date: Mon, 21 Apr 2014 16:02:21 +1000
Subject: [Bitcoin-development] Mailing list abuse
In-Reply-To: <CA+s+GJAgEOWvuTDdpU8N11-YtmRrtfb2E=WYmQrOFd0LybDWYw@mail.gmail.com>
References: <CABerxhEbsVC6MWU_KGjvMBOaN9JbDj5S1PZmxYwAsJN-SiOAmw@mail.gmail.com>
	<CA+s+GJAgEOWvuTDdpU8N11-YtmRrtfb2E=WYmQrOFd0LybDWYw@mail.gmail.com>
Message-ID: <CABerxhHrvdOSthcD9aLb+sjcMZ5+4pFM_ihBY5xiBQfwt9Do9w@mail.gmail.com>

Not a bad idea. Semantics of the word abuse not withstanding.

I don't want to become the self appointed mailing list cop, but I notice it
maybe more than others because I almost exclusively read this mailing list
on a mobile device. Hence my asking for feedback without publicly calling
anyone out.

Thanks for taking the time to reply.

Rodney
 On 21/04/2014 3:47 pm, "Wladimir" <laanwj at gmail.com> wrote:

> On Mon, Apr 21, 2014 at 6:58 AM, Rodney Morris <rodney.morris at gmail.com>
> wrote:
> > What is the procedure for dealing with it? Is it considered abuse to
> reply
> > to and quote the entire digest for the sake of a few lines of content?
> Am I
> > the only one annoyed by this (if so I'll just shut right up).
>
> I would not go as far as calling it 'abuse' if it is not done on
> purpose. Probably the person doesn't even know he/she is doing this.
> Best to mail the person and ask (nicely) instead of complaining to the
> list.
>
> Wladimir
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/9cd49c00/attachment.html>

From tamas at bitsofproof.com  Mon Apr 21 06:21:17 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Mon, 21 Apr 2014 08:21:17 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CAPg+sBidnatH1RHZ02kn2K2Tkn1OGP9n+ieLJcT68C_s11Rpgg@mail.gmail.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<53540715.7050803@xylon.de>
	<1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>
	<5354154C.1080908@olivere.de>
	<CANOOu=9=TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A@mail.gmail.com>
	<4098C706-D67F-474E-9C13-E4C8F56B41ED@swipeclock.com>
	<CAK2MuX3GufxU_AH0Kaw3pUkzgX_agok86ahCh+7r96UkxZwneQ@mail.gmail.com>
	<11664045-9CAB-4A9B-BE45-271496D870CD@swipeclock.com>
	<BLU402-EAS292E80B3A1FA891428B768C65E0@phx.gbl>
	<CAPg+sBidnatH1RHZ02kn2K2Tkn1OGP9n+ieLJcT68C_s11Rpgg@mail.gmail.com>
Message-ID: <B54236EC-1B6A-4DA8-85E8-F3C0B11CDE8C@bitsofproof.com>

Here is one to please those looking for a ?fully qualified? slang word, that links with the official XBT:

xbit (spoken: ex-bit) would rationalise XBT (where X comes from supranational use) and is unique.

I personally associate from x to six also supporting the 1e-6 divisor of Bitcoin.

Regarding XBT: No matter who used it for what. The way Bloomberg will use it will define its use in finance,
and since that did not happen yet, we are not late to shape.

Regards,

Tamas Blummer
http://bitsofproof.com

On 21.04.2014, at 07:41, Pieter Wuille <pieter.wuille at gmail.com> wrote:

> 
> On Apr 21, 2014 3:37 AM, "Un Ix" <slashdevnull at hotmail.com> wrote:
> >
> > Something tells me this would be reduced to a single syllable in common usage I.e. bit.
> 
> What units will be called colloquially is not something developers will determine. It will vary, depend on language and culture, and is not relevant to this discussion in my opinion.
> 
> It may well be that people in some geographic or language area will end up (or for a while) calling 1e-06 BTC "bits". That's fine, but using that as "official" name in software would be very strange and potentially confusing in my opinion. As mentioned by others, that would seem to me like calling dollars "bucks" in bank software. Nobody seems to have a problem with having colloquial names, but "US dollar" or "euro" are far less ambiguous than "bit". I think we need a more distinctive name.
> 
> -- 
> Pieter
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform_______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/cf27cf74/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/cf27cf74/attachment.sig>

From thomasv1 at gmx.de  Mon Apr 21 08:52:56 2014
From: thomasv1 at gmx.de (Thomas Voegtlin)
Date: Mon, 21 Apr 2014 10:52:56 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CANOOu=-JB4nZpEPRq+X_JBHJsGGvOsTVKROkciRu4SCp_EL4Vg@mail.gmail.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>
	<CANOOu=-JB4nZpEPRq+X_JBHJsGGvOsTVKROkciRu4SCp_EL4Vg@mail.gmail.com>
Message-ID: <5354DC68.5040602@gmx.de>

Let me make a sacrilegious proposal: keep using the name "bitcoin", and
shift the decimal point.

There would be a short adaption period, where people will need to talk
about "new bitcoins" and "old bitcoins" in order to disambiguate them.
However, Bitcoin users are techies, so I don't think that the ambiguity
will be a big issue. I don't think lots of people will mistakenly send
1000 times more than the amount they intended.

The name "bitcoin" has a huge advantage over any other proposal, because
it is already established. No marketing is needed.

This kind of renaming has already taken place many times in history,
because the currency was debased. Bitcoin would be the first time it
happens in the other direction.




From tamas at bitsofproof.com  Mon Apr 21 09:34:42 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Mon, 21 Apr 2014 11:34:42 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <5354DC68.5040602@gmx.de>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>
	<CANOOu=-JB4nZpEPRq+X_JBHJsGGvOsTVKROkciRu4SCp_EL4Vg@mail.gmail.com>
	<5354DC68.5040602@gmx.de>
Message-ID: <89C372C7-522F-472A-9A75-656E481321A0@bitsofproof.com>

Thomas V: 

Your proposal misses the points that:

- this is about a unit with 1e-6 Bitcoins or 100 satoshis. 
- it is not about people who know Bitcoin and are techies, but about those who don?t and aren?t.

The reasons for such a unit are more than shifting the comma some places for convinience, 
but to align Bitcoin with capabilities of existing financial software and customs of finance and average people,
and ISO standard of currency abbreviations.

bit and XBT seems to check the boxes. 

I would love to have some feedback on xbit as per my previous mail.

Regards,

Tamas Blummer
http://bitsofproof.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/2b053b14/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/2b053b14/attachment.sig>

From tier.nolan at gmail.com  Mon Apr 21 11:34:49 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Mon, 21 Apr 2014 12:34:49 +0100
Subject: [Bitcoin-development] Economics of information propagation
In-Reply-To: <a9a262a9-c70f-470d-81e0-ca32c41d8dc5@email.android.com>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
	<CACh7GpFGEvR+_qArYCkgi7AW4coSeH741ob4hmBpj6G3MayNAQ@mail.gmail.com>
	<a9a262a9-c70f-470d-81e0-ca32c41d8dc5@email.android.com>
Message-ID: <CAE-z3OX8PGs7B_e32BGPx2BRkKeUwEO+GY-=i-VCxmKsZG6EZw@mail.gmail.com>

On Mon, Apr 21, 2014 at 5:06 AM, Peter Todd <pete at petertodd.org> wrote:

> Of course, in reality smaller miners can just mine on top of block headers
> and include no transactions and do no validation, but that is extremely
> harmful to the security of Bitcoin.
>

I don't think it reduces security much.  It is extremely unlikely that
someone would publish an invalid block, since they would waste their POW.

Presuming that new headers are correct is reasonable, as long as you check
the full block within a few minutes of receiving the header.

If anything, it increases security, since less hashing power is wasted
while the full block is broadcast.

Block propagation could take the form

- broadcast new header
- all miners switch to mining empty blocks
- broadcast new block
- miners update to a block with transactions

If the block doesn't arrive within a timeout, then the miner could switch
back to the old block.

This would mean that a few percent of empty blocks end up in the
blockchain, but that doesn't do any harm.

It is only harmful, if it is used as a DOS attack on the network.

The empty blocks will only occur when 2 blocks are found in quick
succession, so it doesn't have much affect on average time until 1
confirm.  Empty blocks are just as good for providing 1 of the 6 confirms
needed too.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/b5fe8aad/attachment.html>

From slashdevnull at hotmail.com  Mon Apr 21 12:14:25 2014
From: slashdevnull at hotmail.com (Un Ix)
Date: Mon, 21 Apr 2014 20:14:25 +0800
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <B54236EC-1B6A-4DA8-85E8-F3C0B11CDE8C@bitsofproof.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<53540715.7050803@xylon.de>
	<1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>
	<5354154C.1080908@olivere.de>
	<CANOOu=9=TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A@mail.gmail.com>
	<4098C706-D67F-474E-9C13-E4C8F56B41ED@swipeclock.com>
	<CAK2MuX3GufxU_AH0Kaw3pUkzgX_agok86ahCh+7r96UkxZwneQ@mail.gmail.com>
	<11664045-9CAB-4A9B-BE45-271496D870CD@swipeclock.com>
	<BLU402-EAS292E80B3A1FA891428B768C65E0@phx.gbl>
	<CAPg+sBidnatH1RHZ02kn2K2Tkn1OGP9n+ieLJcT68C_s11Rpgg@mail.gmail.com>
	<B54236EC-1B6A-4DA8-85E8-F3C0B11CDE8C@bitsofproof.com>
Message-ID: <BLU402-EAS244A4EDF53E0612810DFF06C65E0@phx.gbl>

Tamas,

"xbit" is only a typo or spelling error away from "XBT", and some folks may assume they refer to the same unit of measure, not knowing the new currency system as developers here do.

From your email, I got the idea of using "x" as a suffix at the end of a number of bits e.g. 17500x, like cents or centavos. I guess this might clash with formal S.I. notation but it's easy to read and has less ambiguity, IMHO.

> On 21/04/2014, at 2:21 pm, "Tamas Blummer" <tamas at bitsofproof.com> wrote:
> 
> Here is one to please those looking for a ?fully qualified? slang word, that links with the official XBT:
> 
> xbit (spoken: ex-bit) would rationalise XBT (where X comes from supranational use) and is unique.
> 
> I personally associate from x to six also supporting the 1e-6 divisor of Bitcoin.
> 
> Regarding XBT: No matter who used it for what. The way Bloomberg will use it will define its use in finance,
> and since that did not happen yet, we are not late to shape.
> 
> Regards,
> 
> Tamas Blummer
> http://bitsofproof.com
> 
>> On 21.04.2014, at 07:41, Pieter Wuille <pieter.wuille at gmail.com> wrote:
>> 
>> 
>> On Apr 21, 2014 3:37 AM, "Un Ix" <slashdevnull at hotmail.com> wrote:
>> >
>> > Something tells me this would be reduced to a single syllable in common usage I.e. bit.
>> 
>> What units will be called colloquially is not something developers will determine. It will vary, depend on language and culture, and is not relevant to this discussion in my opinion.
>> 
>> It may well be that people in some geographic or language area will end up (or for a while) calling 1e-06 BTC "bits". That's fine, but using that as "official" name in software would be very strange and potentially confusing in my opinion. As mentioned by others, that would seem to me like calling dollars "bucks" in bank software. Nobody seems to have a problem with having colloquial names, but "US dollar" or "euro" are far less ambiguous than "bit". I think we need a more distinctive name.
>> 
>> -- 
>> Pieter
>> ------------------------------------------------------------------------------
>> Start Your Social Network Today - Download eXo Platform
>> Build your Enterprise Intranet with eXo Platform Software
>> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
>> Get Started Now And Turn Your Intranet Into A Collaboration Platform
>> http://p.sf.net/sfu/ExoPlatform_______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/9cf942b1/attachment.html>

From tamas at bitsofproof.com  Mon Apr 21 12:24:36 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Mon, 21 Apr 2014 14:24:36 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <BLU402-EAS244A4EDF53E0612810DFF06C65E0@phx.gbl>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<53540715.7050803@xylon.de>
	<1C408C12-B39B-46E4-B997-153D566158B1@swipeclock.com>
	<5354154C.1080908@olivere.de>
	<CANOOu=9=TAnaCuyh_P2GqHaguyY39xjhj84HSA_x+6F4MOqM_A@mail.gmail.com>
	<4098C706-D67F-474E-9C13-E4C8F56B41ED@swipeclock.com>
	<CAK2MuX3GufxU_AH0Kaw3pUkzgX_agok86ahCh+7r96UkxZwneQ@mail.gmail.com>
	<11664045-9CAB-4A9B-BE45-271496D870CD@swipeclock.com>
	<BLU402-EAS292E80B3A1FA891428B768C65E0@phx.gbl>
	<CAPg+sBidnatH1RHZ02kn2K2Tkn1OGP9n+ieLJcT68C_s11Rpgg@mail.gmail.com>
	<B54236EC-1B6A-4DA8-85E8-F3C0B11CDE8C@bitsofproof.com>
	<BLU402-EAS244A4EDF53E0612810DFF06C65E0@phx.gbl>
Message-ID: <D0E5645B-062B-4216-BBC1-70FC4CD15C84@bitsofproof.com>

xbit is close to XBT because it would be the same unit, both would mean 100 satoshi or 1e-6 Bitcoin.

xbit would be for everyday use, XBT for ISO.

I know, the XBT was used by some sites to be a synonym for BTC that is however in my opinion not yet graved in stone until it is used by e.g. Bloomberg.

Regards,

Tamas Blummer
http://bitsofproof.com

On 21.04.2014, at 14:14, Un Ix <slashdevnull at hotmail.com> wrote:

> Tamas,
> 
> "xbit" is only a typo or spelling error away from "XBT", and some folks may assume they refer to the same unit of measure, not knowing the new currency system as developers here do.
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/9da7cb3a/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/9da7cb3a/attachment.sig>

From jtimon at monetize.io  Mon Apr 21 13:04:35 2014
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Mon, 21 Apr 2014 15:04:35 +0200
Subject: [Bitcoin-development] Economics of information propagation
In-Reply-To: <CAE-z3OX8PGs7B_e32BGPx2BRkKeUwEO+GY-=i-VCxmKsZG6EZw@mail.gmail.com>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
	<CACh7GpFGEvR+_qArYCkgi7AW4coSeH741ob4hmBpj6G3MayNAQ@mail.gmail.com>
	<a9a262a9-c70f-470d-81e0-ca32c41d8dc5@email.android.com>
	<CAE-z3OX8PGs7B_e32BGPx2BRkKeUwEO+GY-=i-VCxmKsZG6EZw@mail.gmail.com>
Message-ID: <CAC1+kJMpb87zccRmGQ0KABim=08KnmU2fmiSVa2=2+JkB8_v1Q@mail.gmail.com>

I'm not convinced that headers first will result in miners hashing on
top of the block with more work without knowing if it's valid yet
instead of just keep hashing on top of the longest known-to-be-valid
chain.
Both options are risky for the miner in some way, and I guess the
probability of someone hashing an invalid block above difficulty is
too low to be the main concern, but there's intermediate solutions,
like say, waiting to validate at least 5% of the block.

But I don't see how miners mining headers first would result in empty
blocks either.
Why wouldn't them validate and include transactions after they have
received the full block?
They will likely know most of the transaction before receiving the block anyway.
In a future where they ONLY live on transaction fees, why would they
refuse to validate and include transactions? What are they hashing for
then?
If anything, looks like a threat to the current situation with huge
mining subsidies coming from the seigniorage, not a problem that you
would have when the the seigniorage is gone.

In any case, it is true that this is mining policy and therefore out
of the realm of what the protocol can regulate, so we should assume
miners will do whatever it's best for them.

The trade-off between tps and centralization remains: if you want
higher tx volume, less full nodes will be able to process it.

On 4/21/14, Tier Nolan <tier.nolan at gmail.com> wrote:
> On Mon, Apr 21, 2014 at 5:06 AM, Peter Todd <pete at petertodd.org> wrote:
>
>> Of course, in reality smaller miners can just mine on top of block
>> headers
>> and include no transactions and do no validation, but that is extremely
>> harmful to the security of Bitcoin.
>>
>
> I don't think it reduces security much.  It is extremely unlikely that
> someone would publish an invalid block, since they would waste their POW.
>
> Presuming that new headers are correct is reasonable, as long as you check
> the full block within a few minutes of receiving the header.
>
> If anything, it increases security, since less hashing power is wasted
> while the full block is broadcast.
>
> Block propagation could take the form
>
> - broadcast new header
> - all miners switch to mining empty blocks
> - broadcast new block
> - miners update to a block with transactions
>
> If the block doesn't arrive within a timeout, then the miner could switch
> back to the old block.
>
> This would mean that a few percent of empty blocks end up in the
> blockchain, but that doesn't do any harm.
>
> It is only harmful, if it is used as a DOS attack on the network.
>
> The empty blocks will only occur when 2 blocks are found in quick
> succession, so it doesn't have much affect on average time until 1
> confirm.  Empty blocks are just as good for providing 1 of the 6 confirms
> needed too.
>


-- 
Jorge Tim?n

http://freico.in/



From dscvlt at gmail.com  Mon Apr 21 15:40:48 2014
From: dscvlt at gmail.com (Ashley Holman)
Date: Tue, 22 Apr 2014 01:10:48 +0930
Subject: [Bitcoin-development] Economics of information propagation
In-Reply-To: <a9a262a9-c70f-470d-81e0-ca32c41d8dc5@email.android.com>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
	<CACh7GpFGEvR+_qArYCkgi7AW4coSeH741ob4hmBpj6G3MayNAQ@mail.gmail.com>
	<a9a262a9-c70f-470d-81e0-ca32c41d8dc5@email.android.com>
Message-ID: <CAOXABZrB0p3KzKhGaYQsgQ2TGMvg_A0cuOhQ956QPRBPrO_=qg@mail.gmail.com>

On Mon, Apr 21, 2014 at 1:36 PM, Peter Todd <pete at petertodd.org> wrote:
>
> That is mistaken: you can't mine on top of just a block header, leaving
> small miners disadvantaged as they are earning no profit while they wait
> for the information to validate the block and update their UTXO sets. This
> results in the same problem as before, as the large pools who mine most
> blocks can validate either instantly - the self-mine case - or more quickly
> than the smaller miners.
>
>
Under the headers first scenario, wouldn't the full block still reach
everyone in the same time as it would under the current rules?  So the
small miner loses nothing in terms of updating their UTXO set, but gains an
early "heads up" alert that a new block is coming.  This allows them spend
the propagation time working more productively on an empty block in the new
chain rather than wasting time on an orphan.  It's true that it doesn't
solve the problem of larger pools vs smaller pools, but if it doesn't make
it any worse then headers-first propagation would be a net benefit to the
network since it removes the incentive to make small blocks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/55badfcc/attachment.html>

From etotheipi at gmail.com  Mon Apr 21 15:58:06 2014
From: etotheipi at gmail.com (Alan Reiner)
Date: Mon, 21 Apr 2014 11:58:06 -0400
Subject: [Bitcoin-development] Economics of information propagation
In-Reply-To: <CAOXABZrB0p3KzKhGaYQsgQ2TGMvg_A0cuOhQ956QPRBPrO_=qg@mail.gmail.com>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>	<CACh7GpFGEvR+_qArYCkgi7AW4coSeH741ob4hmBpj6G3MayNAQ@mail.gmail.com>	<a9a262a9-c70f-470d-81e0-ca32c41d8dc5@email.android.com>
	<CAOXABZrB0p3KzKhGaYQsgQ2TGMvg_A0cuOhQ956QPRBPrO_=qg@mail.gmail.com>
Message-ID: <5355400E.1060108@gmail.com>

On 04/21/2014 11:40 AM, Ashley Holman wrote:
> On Mon, Apr 21, 2014 at 1:36 PM, Peter Todd <pete at petertodd.org
> <mailto:pete at petertodd.org>> wrote:
>
>     That is mistaken: you can't mine on top of just a block header,
>     leaving small miners disadvantaged as they are earning no profit
>     while they wait for the information to validate the block and
>     update their UTXO sets. This results in the same problem as
>     before, as the large pools who mine most blocks can validate
>     either instantly - the self-mine case - or more quickly than the
>     smaller miners.
>
>  
> Under the headers first scenario, wouldn't the full block still reach
> everyone in the same time as it would under the current rules?  So the
> small miner loses nothing in terms of updating their UTXO set, but
> gains an early "heads up" alert that a new block is coming.  This
> allows them spend the propagation time working more productively on an
> empty block in the new chain rather than wasting time on an orphan.
>  It's true that it doesn't solve the problem of larger pools vs
> smaller pools, but if it doesn't make it any worse then headers-first
> propagation would be a net benefit to the network since it removes the
> incentive to make small blocks.
>

I think the most important part is that nodes can reliably decide on
"first received", regardless of how they subsequently act on it.  I
believe it would be fine for a node to receive a header and continue
mining the old block, or a subsequently-verified competing block, until
it has the necessary pieces to fully verify the first header received. 
If that block data doesn't come, then it will be naturally ignored.  But
if multiple blocks come at once, even if a competing block "verifies"
first, the node would still switch to considering the first header
received as the best block when it later receives proof it is valid
(which may only be a couple seconds).

In other words, the node will always consider the header-received time
as the primary ordering criteria, but will not mine on anything until it
has full proof of validity, even if /that/ is out of order.  This means
that new blocks "effectively" propagate at the speed of 80 bytes, which
limits certain kinds of block-injection/racing attacks. 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/b0ca4320/attachment.html>

From mark at monetize.io  Mon Apr 21 16:00:09 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Mon, 21 Apr 2014 09:00:09 -0700
Subject: [Bitcoin-development] Economics of information propagation
In-Reply-To: <a9a262a9-c70f-470d-81e0-ca32c41d8dc5@email.android.com>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
	<CACh7GpFGEvR+_qArYCkgi7AW4coSeH741ob4hmBpj6G3MayNAQ@mail.gmail.com>
	<a9a262a9-c70f-470d-81e0-ca32c41d8dc5@email.android.com>
Message-ID: <53554089.1010503@monetize.io>

That wasn't what I was saying. Right now the primacy of a block is
determined by the time at which the `block` message is received, which
is delays due to both the time it takes to transmit the block data and
the time it takes to validate. Headers-first, on the other hand, has the
option of basing primacy on the time the block header is received, which
is O(1) time to transmit and to SPV-validate. Mining on that block
doesn't actually commence until the full block is received and validated.

To see how this works, take an example: two blocks with a common parent
are found relatively close to each other, block A and block B. A is
found first but is a large block with the maximum block size and many
slow scripts. B is found a few seconds later and is an empty block. In
the current regime it is entirely possible that block B, the later but
smaller block, would get received and processed first by more mining
peers than the larger block A, exactly as described in Jonathan Levin's
email.

With headers-first, however, the cost of propagation of the block header
is the same and we should expect block A to win out over block B nearly
every time. Miners will continue working on the old, known valid parent
block until the contents of block A are received and processed. So the
smaller block B is still found, and since it's data moves across the
network faster, miners even briefly mine on block B. But as soon as they
receive and process the contents of block A, they switch to that.

The earlier, larger block A will only become stale if *two* blocks are
found in the extra time it takes for block A to propagate the network.
That is a substantially different risk, and probably a negligible
concern to most miners.

On 04/20/2014 09:06 PM, Peter Todd wrote:
> That is mistaken: you can't mine on top of just a block header,
> leaving small miners disadvantaged as they are earning no profit
> while they wait for the information to validate the block and update
> their UTXO sets. This results in the same problem as before, as the
> large pools who mine most blocks can validate either instantly - the
> self-mine case - or more quickly than the smaller miners.
> 
> Of course, in reality smaller miners can just mine on top of block
> headers and include no transactions and do no validation, but that is
> extremely harmful to the security of Bitcoin.



From pmlyon at hotmail.ca  Mon Apr 21 16:22:48 2014
From: pmlyon at hotmail.ca (Paul Lyon)
Date: Mon, 21 Apr 2014 13:22:48 -0300
Subject: [Bitcoin-development] Economics of information propagation
In-Reply-To: <53554089.1010503@monetize.io>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>,
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>,
	<CACh7GpFGEvR+_qArYCkgi7AW4coSeH741ob4hmBpj6G3MayNAQ@mail.gmail.com>,
	<a9a262a9-c70f-470d-81e0-ca32c41d8dc5@email.android.com>,
	<53554089.1010503@monetize.io>
Message-ID: <BLU170-W757A725FD907FDC49BF9F2A55E0@phx.gbl>

I haven't done the math on this, so it may be a terrible idea. :)
I've been wondering if block propagation times could also be improved by allowing peers to request the list of transaction hashes that make up a block, and then making a follow-up request to only download any transactions not currently known. I'm not sure what percentage of transactions a node will usually already have when it receives a new block, but if it's high I figure this could be beneficial.

> Date: Mon, 21 Apr 2014 09:00:09 -0700
> From: mark at monetize.io
> To: pete at petertodd.org; jonathan.levin at sant.ox.ac.uk
> CC: bitcoin-development at lists.sourceforge.net
> Subject: Re: [Bitcoin-development] Economics of information propagation
> 
> That wasn't what I was saying. Right now the primacy of a block is
> determined by the time at which the `block` message is received, which
> is delays due to both the time it takes to transmit the block data and
> the time it takes to validate. Headers-first, on the other hand, has the
> option of basing primacy on the time the block header is received, which
> is O(1) time to transmit and to SPV-validate. Mining on that block
> doesn't actually commence until the full block is received and validated.
> 
> To see how this works, take an example: two blocks with a common parent
> are found relatively close to each other, block A and block B. A is
> found first but is a large block with the maximum block size and many
> slow scripts. B is found a few seconds later and is an empty block. In
> the current regime it is entirely possible that block B, the later but
> smaller block, would get received and processed first by more mining
> peers than the larger block A, exactly as described in Jonathan Levin's
> email.
> 
> With headers-first, however, the cost of propagation of the block header
> is the same and we should expect block A to win out over block B nearly
> every time. Miners will continue working on the old, known valid parent
> block until the contents of block A are received and processed. So the
> smaller block B is still found, and since it's data moves across the
> network faster, miners even briefly mine on block B. But as soon as they
> receive and process the contents of block A, they switch to that.
> 
> The earlier, larger block A will only become stale if *two* blocks are
> found in the extra time it takes for block A to propagate the network.
> That is a substantially different risk, and probably a negligible
> concern to most miners.
> 
> On 04/20/2014 09:06 PM, Peter Todd wrote:
> > That is mistaken: you can't mine on top of just a block header,
> > leaving small miners disadvantaged as they are earning no profit
> > while they wait for the information to validate the block and update
> > their UTXO sets. This results in the same problem as before, as the
> > large pools who mine most blocks can validate either instantly - the
> > self-mine case - or more quickly than the smaller miners.
> > 
> > Of course, in reality smaller miners can just mine on top of block
> > headers and include no transactions and do no validation, but that is
> > extremely harmful to the security of Bitcoin.
> 
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/d01531da/attachment.html>

From mark at monetize.io  Mon Apr 21 16:38:17 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Mon, 21 Apr 2014 09:38:17 -0700
Subject: [Bitcoin-development] Economics of information propagation
In-Reply-To: <BLU170-W757A725FD907FDC49BF9F2A55E0@phx.gbl>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>,
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>,
	<CACh7GpFGEvR+_qArYCkgi7AW4coSeH741ob4hmBpj6G3MayNAQ@mail.gmail.com>,
	<a9a262a9-c70f-470d-81e0-ca32c41d8dc5@email.android.com>,
	<53554089.1010503@monetize.io>
	<BLU170-W757A725FD907FDC49BF9F2A55E0@phx.gbl>
Message-ID: <53554979.9020206@monetize.io>

Yes, it certainly can be improved in this way. You can even extend the
idea to distribute partial proofs of work (block headers + Merkle lists
which represent significant but not sufficient work), and 'prime' your
memory pools with the transactions contained within.

This is, btw, basically what p2pool does, which is why last time I
calculated you get roughly 1% better return from p2pool than a zero-fee
mining pool would get you, specifically because of the lower stale rate.

On 04/21/2014 09:22 AM, Paul Lyon wrote:
> I haven't done the math on this, so it may be a terrible idea. :)
> 
> I've been wondering if block propagation times could also be improved by
> allowing peers to request the list of transaction hashes that make up a
> block, and then making a follow-up request to only download any
> transactions not currently known. I'm not sure what percentage of
> transactions a node will usually already have when it receives a new
> block, but if it's high I figure this could be beneficial.
> 



From mike at plan99.net  Mon Apr 21 16:39:31 2014
From: mike at plan99.net (Mike Hearn)
Date: Mon, 21 Apr 2014 18:39:31 +0200
Subject: [Bitcoin-development] Economics of information propagation
In-Reply-To: <53554979.9020206@monetize.io>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
	<CACh7GpFGEvR+_qArYCkgi7AW4coSeH741ob4hmBpj6G3MayNAQ@mail.gmail.com>
	<a9a262a9-c70f-470d-81e0-ca32c41d8dc5@email.android.com>
	<53554089.1010503@monetize.io>
	<BLU170-W757A725FD907FDC49BF9F2A55E0@phx.gbl>
	<53554979.9020206@monetize.io>
Message-ID: <CANEZrP0GYFs64hXe1Yj4E++H+SrH9zoRyucYkZJjCtOfsa2=Tw@mail.gmail.com>

Pieter tried it already. If the two nodes views of each others mempools are
not exactly in alignment it ends up being slower than just sending the data
immediately and redundantly.


On Mon, Apr 21, 2014 at 6:38 PM, Mark Friedenbach <mark at monetize.io> wrote:

> Yes, it certainly can be improved in this way. You can even extend the
> idea to distribute partial proofs of work (block headers + Merkle lists
> which represent significant but not sufficient work), and 'prime' your
> memory pools with the transactions contained within.
>
> This is, btw, basically what p2pool does, which is why last time I
> calculated you get roughly 1% better return from p2pool than a zero-fee
> mining pool would get you, specifically because of the lower stale rate.
>
> On 04/21/2014 09:22 AM, Paul Lyon wrote:
> > I haven't done the math on this, so it may be a terrible idea. :)
> >
> > I've been wondering if block propagation times could also be improved by
> > allowing peers to request the list of transaction hashes that make up a
> > block, and then making a follow-up request to only download any
> > transactions not currently known. I'm not sure what percentage of
> > transactions a node will usually already have when it receives a new
> > block, but if it's high I figure this could be beneficial.
> >
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/f3aba223/attachment.html>

From jonathan.levin at sant.ox.ac.uk  Mon Apr 21 16:45:22 2014
From: jonathan.levin at sant.ox.ac.uk (Jonathan Levin)
Date: Mon, 21 Apr 2014 16:45:22 +0000
Subject: [Bitcoin-development] Economics of information propagation
In-Reply-To: <53554089.1010503@monetize.io>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
	<CACh7GpFGEvR+_qArYCkgi7AW4coSeH741ob4hmBpj6G3MayNAQ@mail.gmail.com>
	<a9a262a9-c70f-470d-81e0-ca32c41d8dc5@email.android.com>
	<53554089.1010503@monetize.io>
Message-ID: <F956A706-5730-4B68-A8CB-4F832915319B@sant.ox.ac.uk>

Thank you for your thoughts. 

> The earlier, larger block A will only become stale if *two* blocks are
> found in the extra time it takes for block A to propagate the network.
> That is a substantially different risk, and probably a negligible
> concern to most miners.

I really like Mark?s suggestion but one concern is that it might tip the needle too far. Currently, there is a private cost to include more transactions, which might be too high, but limit the amount of negative externalities that this creates on other miners. If I am able to create blocks that are very likely to be on the main chain with the maximum number of transactions then this makes imposing negative externalities on other miners less costly. Other nodes that are closely connected to me would experience a positive externality through this as well. Would have do some more thinking here but it seems that there is a balance to strike.

> If anything, looks like a threat to the current situation with huge
> mining subsidies coming from the seigniorage, not a problem that you
> would have when the the seigniorage is gone.

The incentives remain so long as the ratio of the seignorage revenues to transaction fees remain very high. Even though the dollar price does not change that relationship it does mean that Bitcoin becomes more expensive in USD terms as the USD price of Bitcoin rises.

> I think the most important part is that nodes can reliably decide on
> "first received", regardless of how they subsequently act on it. 

If we want to limit the amount of network time spent on redundant problems it would be best for miners to act on this information? What is the benefit of serialisation? Is it that the miner would consider it more likely to make it into the main chain rather than the block that came second?

> But I don't see how miners mining headers first would result in empty
> blocks either.

I guess it is due to the fact that this is the only way a miner can be certain that none of the transactions have been spent already resulting in an orphan block.

On 21 Apr 2014, at 17:00, Mark Friedenbach <mark at monetize.io> wrote:

> That wasn't what I was saying. Right now the primacy of a block is
> determined by the time at which the `block` message is received, which
> is delays due to both the time it takes to transmit the block data and
> the time it takes to validate. Headers-first, on the other hand, has the
> option of basing primacy on the time the block header is received, which
> is O(1) time to transmit and to SPV-validate. Mining on that block
> doesn't actually commence until the full block is received and validated.
> 
> To see how this works, take an example: two blocks with a common parent
> are found relatively close to each other, block A and block B. A is
> found first but is a large block with the maximum block size and many
> slow scripts. B is found a few seconds later and is an empty block. In
> the current regime it is entirely possible that block B, the later but
> smaller block, would get received and processed first by more mining
> peers than the larger block A, exactly as described in Jonathan Levin's
> email.
> 
> With headers-first, however, the cost of propagation of the block header
> is the same and we should expect block A to win out over block B nearly
> every time. Miners will continue working on the old, known valid parent
> block until the contents of block A are received and processed. So the
> smaller block B is still found, and since it's data moves across the
> network faster, miners even briefly mine on block B. But as soon as they
> receive and process the contents of block A, they switch to that.
> 
> The earlier, larger block A will only become stale if *two* blocks are
> found in the extra time it takes for block A to propagate the network.
> That is a substantially different risk, and probably a negligible
> concern to most miners.
> 
> On 04/20/2014 09:06 PM, Peter Todd wrote:
>> That is mistaken: you can't mine on top of just a block header,
>> leaving small miners disadvantaged as they are earning no profit
>> while they wait for the information to validate the block and update
>> their UTXO sets. This results in the same problem as before, as the
>> large pools who mine most blocks can validate either instantly - the
>> self-mine case - or more quickly than the smaller miners.
>> 
>> Of course, in reality smaller miners can just mine on top of block
>> headers and include no transactions and do no validation, but that is
>> extremely harmful to the security of Bitcoin.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 496 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/6994ddfc/attachment.sig>

From will.yager at gmail.com  Tue Apr 22 00:05:04 2014
From: will.yager at gmail.com (William Yager)
Date: Mon, 21 Apr 2014 19:05:04 -0500
Subject: [Bitcoin-development] [RFC] Proposal: Base58 encoded HD Wallet
 root key with optional encryption
Message-ID: <CAG8oi1NDfoDBT_DmcBVhc0tMMhO55oDcrQBbGmqh9OfgsnG4Lg@mail.gmail.com>

The spec has been updated a bit.

Even if the bulk of the key-stretching work has been outsourced to another
device, and that device is compromised, the passphrase is now protected by
minimum 8192 rounds of salted PBKDF2-HMAC-SHA512.

The idea is that more powerful devices (mobile phones, laptops, etc.) can
do all the key-stretching on their own, whereas weaker devices with access
to another device with more computing power (like Trezors) do a fair amount
of key-stretching on their own, but can safely export the rest of the
key-stretching to the other device.

Will

On Tue, Mar 11, 2014 at 10:17 PM, Jean-Paul Kogelman <
jeanpaulkogelman at me.com> wrote:

> Hi everyone,
>
> We've been hard at work updating the spec to include features that were
> requested. We've removed the Scrypt dependency that was present in the
> initial drafts, added new KDFs, added plausible deniability and have a
> reference implementation.
>
>
> Kind regards,
>
>
> Jean-Paul Kogelman
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140421/2c96e31b/attachment.html>

From jan.moller at gmail.com  Tue Apr 22 06:34:22 2014
From: jan.moller at gmail.com (=?UTF-8?Q?Jan_M=C3=B8ller?=)
Date: Tue, 22 Apr 2014 08:34:22 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CAJHLa0POjVLTDqPXTqgf32Oove-KeOd52mDioHf2RZ4izrByxw@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
	<CANEZrP2Z5x0_kOQ=8-BMzbmi9=D=ou=s3dgEksMA5F84BHSt9A@mail.gmail.com>
	<CA+WZAEqREDkDvmhM7AY+Ju3fkm3uOGm39Ef9+SYoEr43ybbg2Q@mail.gmail.com>
	<CANEZrP15xWWq2jU5yKjG+9hp___OovtbH+vM5KkzFcaQ=koRow@mail.gmail.com>
	<CA+WZAEpwBqucw7kOFrRn_TsnVGaY0-hm4Xv64_i7LweEzQ=oGw@mail.gmail.com>
	<CAJHLa0Nd1hVrcB9Koyv99zN_ykJbHW21qC3KdjZHB4PmOLLgnQ@mail.gmail.com>
	<CANEZrP170RmbegDfssqZS7KFVQ0rguW3dnE4u1yj7h-Dw5rBTw@mail.gmail.com>
	<CAJHLa0POjVLTDqPXTqgf32Oove-KeOd52mDioHf2RZ4izrByxw@mail.gmail.com>
Message-ID: <CABh=4qMU_FNMcEtmM_sWWFSvpscPCMpD=pc8xLUud_KbQR=bHw@mail.gmail.com>

The reason why client side certificates have never gained traction because
it is a pain to safely store/backup secrets.
In bitcoinland we are forced to solve the problem of safely storing
secrets, and over the years we have come up with software and hardware
solutions to make this safer and easier to manage for ordinary people.
Solving this is paramount to the success of Bitcoin, and nobody has solved
it before on a grand scale.

I see no reason for forcing end users to use two different mechanisms for
safely managing secrets.

I agree that using a bitcoin address for authentication purposes might be
confusing and potentially linking your funds with your identity. So I am
all for using something else than bitcoin addresses and bitcoin private
keys.

With bip32 we have finally agreed on a mechanism for generating a hierarchy
of bitcoin private keys from a master seed. A similar approach can be used
for generating a parallel hierarchy for authentication purposes.

- Jan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/34e800f0/attachment.html>

From jan.moller at gmail.com  Tue Apr 22 08:06:09 2014
From: jan.moller at gmail.com (=?UTF-8?Q?Jan_M=C3=B8ller?=)
Date: Tue, 22 Apr 2014 10:06:09 +0200
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <CAC7yFxR7XWtFSMeHgbMZOMKbr+kK_7Ezb7zBUQP08rfC0am9sQ@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<6669921.kYEqrMqt0u@crushinator>
	<CAAS2fgSfiYwD-M7+k65JF0Kjeod1zEiPcxPN1iDBHLzYV7UQyA@mail.gmail.com>
	<16848732.PiyLLsBBZa@crushinator>
	<CAC7yFxR7XWtFSMeHgbMZOMKbr+kK_7Ezb7zBUQP08rfC0am9sQ@mail.gmail.com>
Message-ID: <CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>

This is a very useful BIP, and I am very much looking forward to
implementing it in Mycelium, in particular for bip32 wallets.
To me this is not about whether to use SSS instead of multisig
transactions. In the end you want to protect a secret (be it a HD master
seed or a private key) in such a way that you can recover it in case of
partial theft/loss. Whether I'll use the master seed to generate keys that
are going to be used for multisig transactions is another discussion IMO.

A few suggestions:
 - I think it is very useful to define different prefixes for testnet
keys/seeds. As a developer I use the testnet every day, and many of our
users use it for trying out new functionality. Mixing up keys meant for
testnet and mainnet is bad.
 - Please allow M=1. From a usability point of view it makes sense to allow
the user to select 1 share if that is what he wants.

I have no strong opinions of whether to use GF(2^8) over Shamir's Secret
Sharing, but the simplicity of GF(2^8) is appealing.

 - Jan


On Fri, Apr 11, 2014 at 12:31 AM, Nikita Schmidt <
nikita at megiontechnologies.com> wrote:

> > What do you think a big-integer division by a word-sized divisor *is*?
> Obviously rolling your own is always an option. Are you just saying that
> Base58 encoding and decoding is easier than Shamir's Secret Sharing because
> the divisors are small?
>
> Well, yes, to be fair, in fact it is.  The small divisor and lack of
> modulo arithmetic make base-58 encoding and decoding noticeably
> smaller and easier than Shamir's Secret Sharing over GF(P256).
>
>
> ------------------------------------------------------------------------------
> Put Bad Developers to Shame
> Dominate Development with Jenkins Continuous Integration
> Continuously Automate Build, Test & Deployment
> Start a new project now. Try Jenkins in the cloud.
> http://p.sf.net/sfu/13600_Cloudbees
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/1ba69db4/attachment.html>

From bip at mattwhitlock.name  Tue Apr 22 08:11:48 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Tue, 22 Apr 2014 04:11:48 -0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<CAC7yFxR7XWtFSMeHgbMZOMKbr+kK_7Ezb7zBUQP08rfC0am9sQ@mail.gmail.com>
	<CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>
Message-ID: <1927948.OEZHQcsQ9n@crushinator>

On Tuesday, 22 April 2014, at 10:06 am, Jan M?ller wrote:
> This is a very useful BIP, and I am very much looking forward to
> implementing it in Mycelium, in particular for bip32 wallets.
> To me this is not about whether to use SSS instead of multisig
> transactions. In the end you want to protect a secret (be it a HD master
> seed or a private key) in such a way that you can recover it in case of
> partial theft/loss. Whether I'll use the master seed to generate keys that
> are going to be used for multisig transactions is another discussion IMO.
> 
> A few suggestions:
>  - I think it is very useful to define different prefixes for testnet
> keys/seeds. As a developer I use the testnet every day, and many of our
> users use it for trying out new functionality. Mixing up keys meant for
> testnet and mainnet is bad.

A fair point. I'll add some prefixes for testnet.

>  - Please allow M=1. From a usability point of view it makes sense to allow
> the user to select 1 share if that is what he wants.

How does that make sense? Decomposing a key/seed into 1 share is functionally equivalent to dispensing with the secret sharing scheme entirely.

> I have no strong opinions of whether to use GF(2^8) over Shamir's Secret
> Sharing, but the simplicity of GF(2^8) is appealing.

I'll welcome forks of my draft BIP. I don't really have the inclination to research GF(2^8) secret sharing schemes and write an implementation at the present time, but if someone wants to take my BIP in that direction, then okay.



From gmaxwell at gmail.com  Tue Apr 22 08:15:33 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 22 Apr 2014 01:15:33 -0700
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<6669921.kYEqrMqt0u@crushinator>
	<CAAS2fgSfiYwD-M7+k65JF0Kjeod1zEiPcxPN1iDBHLzYV7UQyA@mail.gmail.com>
	<16848732.PiyLLsBBZa@crushinator>
	<CAC7yFxR7XWtFSMeHgbMZOMKbr+kK_7Ezb7zBUQP08rfC0am9sQ@mail.gmail.com>
	<CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>
Message-ID: <CAAS2fgQJ2EULensrGfB-Rj95+MyxtkQFUHaKs_bJOOBBTqPE_Q@mail.gmail.com>

On Tue, Apr 22, 2014 at 1:06 AM, Jan M?ller <jan.moller at gmail.com> wrote:
> This is a very useful BIP, and I am very much looking forward to
> implementing it in Mycelium, in particular for bip32 wallets.

I haven't seen commentary from you on the Kogelman draft, it would be
helpful there: https://bitcointalk.org/index.php?topic=258678.0



From jan.moller at gmail.com  Tue Apr 22 08:27:18 2014
From: jan.moller at gmail.com (=?UTF-8?Q?Jan_M=C3=B8ller?=)
Date: Tue, 22 Apr 2014 10:27:18 +0200
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <1927948.OEZHQcsQ9n@crushinator>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<CAC7yFxR7XWtFSMeHgbMZOMKbr+kK_7Ezb7zBUQP08rfC0am9sQ@mail.gmail.com>
	<CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>
	<1927948.OEZHQcsQ9n@crushinator>
Message-ID: <CABh=4qOQhxEte3yQfCMNOZdedExtpqARQRDSfxQMqk-2KwJamw@mail.gmail.com>

>
>
> >  - Please allow M=1. From a usability point of view it makes sense to
> allow
> > the user to select 1 share if that is what he wants.
>
> How does that make sense? Decomposing a key/seed into 1 share is
> functionally equivalent to dispensing with the secret sharing scheme
> entirely.
>
>
I agree that it may look silly to have just one-of-one share from a
technical point of view, but from an end-user point of view there could be
reasons for just having one piece of paper to manage. If M can be 1 then
the software/hardware doesn't have to support multiple formats,
import/export paths + UI  (one for SIPA keys in one share, one for HD seeds
in one share, one for SIPA keys + HD seeds in multiple shares).

Less complexity & more freedom of choice.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/50e835f2/attachment.html>

From bip at mattwhitlock.name  Tue Apr 22 08:29:26 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Tue, 22 Apr 2014 04:29:26 -0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <CABh=4qOQhxEte3yQfCMNOZdedExtpqARQRDSfxQMqk-2KwJamw@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<1927948.OEZHQcsQ9n@crushinator>
	<CABh=4qOQhxEte3yQfCMNOZdedExtpqARQRDSfxQMqk-2KwJamw@mail.gmail.com>
Message-ID: <2336265.urqHVhRi8n@crushinator>

On Tuesday, 22 April 2014, at 10:27 am, Jan M?ller wrote:
> > >  - Please allow M=1. From a usability point of view it makes sense to
> > allow
> > > the user to select 1 share if that is what he wants.
> >
> > How does that make sense? Decomposing a key/seed into 1 share is
> > functionally equivalent to dispensing with the secret sharing scheme
> > entirely.
> >
> >
> I agree that it may look silly to have just one-of-one share from a
> technical point of view, but from an end-user point of view there could be
> reasons for just having one piece of paper to manage. If M can be 1 then
> the software/hardware doesn't have to support multiple formats,
> import/export paths + UI  (one for SIPA keys in one share, one for HD seeds
> in one share, one for SIPA keys + HD seeds in multiple shares).
> 
> Less complexity & more freedom of choice.

Alright. It's a fair argument. Do you agree with encoding M using a bias of -1 so that M up to and including 256 can be encoded in one byte?



From bip at mattwhitlock.name  Tue Apr 22 08:35:36 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Tue, 22 Apr 2014 04:35:36 -0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <1927948.OEZHQcsQ9n@crushinator>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>
	<1927948.OEZHQcsQ9n@crushinator>
Message-ID: <2025496.b5Y3n7qx8B@crushinator>

On Tuesday, 22 April 2014, at 4:11 am, Matt Whitlock wrote:
> On Tuesday, 22 April 2014, at 10:06 am, Jan M?ller wrote:
> >  - I think it is very useful to define different prefixes for testnet
> > keys/seeds. As a developer I use the testnet every day, and many of our
> > users use it for trying out new functionality. Mixing up keys meant for
> > testnet and mainnet is bad.
> 
> A fair point. I'll add some prefixes for testnet.

Testnet encodings are added: https://github.com/whitslack/btctool/blob/bip/bip-xxxx.mediawiki



From tamas at bitsofproof.com  Tue Apr 22 08:39:19 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Tue, 22 Apr 2014 10:39:19 +0200
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <2025496.b5Y3n7qx8B@crushinator>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>
	<1927948.OEZHQcsQ9n@crushinator> <2025496.b5Y3n7qx8B@crushinator>
Message-ID: <1582E990-4E14-4EF7-9C9C-AA505B815104@bitsofproof.com>

Extra encoding for testnet is quite useless complexity in face of many alt chains.
BIPS should be chain agnostic.

Regards,

Tamas Blummer
http://bitsofproof.com

On 22.04.2014, at 10:35, Matt Whitlock <bip at mattwhitlock.name> wrote:

> On Tuesday, 22 April 2014, at 4:11 am, Matt Whitlock wrote:
>> On Tuesday, 22 April 2014, at 10:06 am, Jan M?ller wrote:
>>> - I think it is very useful to define different prefixes for testnet
>>> keys/seeds. As a developer I use the testnet every day, and many of our
>>> users use it for trying out new functionality. Mixing up keys meant for
>>> testnet and mainnet is bad.
>> 
>> A fair point. I'll add some prefixes for testnet.
> 
> Testnet encodings are added: https://github.com/whitslack/btctool/blob/bip/bip-xxxx.mediawiki
> 
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/00dd9e11/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/00dd9e11/attachment.sig>

From jan.moller at gmail.com  Tue Apr 22 08:39:52 2014
From: jan.moller at gmail.com (=?UTF-8?Q?Jan_M=C3=B8ller?=)
Date: Tue, 22 Apr 2014 10:39:52 +0200
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <2336265.urqHVhRi8n@crushinator>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<1927948.OEZHQcsQ9n@crushinator>
	<CABh=4qOQhxEte3yQfCMNOZdedExtpqARQRDSfxQMqk-2KwJamw@mail.gmail.com>
	<2336265.urqHVhRi8n@crushinator>
Message-ID: <CABh=4qPX=w4815O1bRSu+y-KviKS=Brai-umgmheZM5Ar6xv1w@mail.gmail.com>

Necessary Shares = M+1, not a problem

I would probably encode N-of-M in 1 byte as I don't see good use cases with
more than 17 shares. Anyway, I am fine with it as it is.


On Tue, Apr 22, 2014 at 10:29 AM, Matt Whitlock <bip at mattwhitlock.name>wrote:

> On Tuesday, 22 April 2014, at 10:27 am, Jan M?ller wrote:
> > > >  - Please allow M=1. From a usability point of view it makes sense to
> > > allow
> > > > the user to select 1 share if that is what he wants.
> > >
> > > How does that make sense? Decomposing a key/seed into 1 share is
> > > functionally equivalent to dispensing with the secret sharing scheme
> > > entirely.
> > >
> > >
> > I agree that it may look silly to have just one-of-one share from a
> > technical point of view, but from an end-user point of view there could
> be
> > reasons for just having one piece of paper to manage. If M can be 1 then
> > the software/hardware doesn't have to support multiple formats,
> > import/export paths + UI  (one for SIPA keys in one share, one for HD
> seeds
> > in one share, one for SIPA keys + HD seeds in multiple shares).
> >
> > Less complexity & more freedom of choice.
>
> Alright. It's a fair argument. Do you agree with encoding M using a bias
> of -1 so that M up to and including 256 can be encoded in one byte?
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/9a2dfdff/attachment.html>

From tamas at bitsofproof.com  Tue Apr 22 08:43:57 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Tue, 22 Apr 2014 10:43:57 +0200
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <4586234.JVHRmdZYKl@crushinator>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<2025496.b5Y3n7qx8B@crushinator>
	<1582E990-4E14-4EF7-9C9C-AA505B815104@bitsofproof.com>
	<4586234.JVHRmdZYKl@crushinator>
Message-ID: <7A10A6C6-BE84-472B-9205-F5F9E459B5D7@bitsofproof.com>

It is not about taste, but the fact that BIPs are used by many chains. 
Alts are useful for at least for experiments, and I think that the notion of main and testnet is superseeded by a wide choice of chains.

Regards,

Tamas Blummer
http://bitsofproof.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/8cbcc6fe/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/8cbcc6fe/attachment.sig>

From bip at mattwhitlock.name  Tue Apr 22 08:43:45 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Tue, 22 Apr 2014 04:43:45 -0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <CABh=4qPX=w4815O1bRSu+y-KviKS=Brai-umgmheZM5Ar6xv1w@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<2336265.urqHVhRi8n@crushinator>
	<CABh=4qPX=w4815O1bRSu+y-KviKS=Brai-umgmheZM5Ar6xv1w@mail.gmail.com>
Message-ID: <3412253.yhU6ROQD4n@crushinator>

On Tuesday, 22 April 2014, at 10:39 am, Jan M?ller wrote:
> Necessary Shares = M+1, not a problem
> 
> I would probably encode N-of-M in 1 byte as I don't see good use cases with
> more than 17 shares. Anyway, I am fine with it as it is.

I agree that M > 16 is probably not a viable use case for human beings, but machines would probably be able to make use of it. I, for one, welcome our new robot overlords.

Also, the byte that encodes M?1 is optional, so if you're concerned about space, you can omit it (and the checksum).



From jan.moller at gmail.com  Tue Apr 22 08:49:41 2014
From: jan.moller at gmail.com (=?UTF-8?Q?Jan_M=C3=B8ller?=)
Date: Tue, 22 Apr 2014 10:49:41 +0200
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <CAAS2fgQJ2EULensrGfB-Rj95+MyxtkQFUHaKs_bJOOBBTqPE_Q@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<6669921.kYEqrMqt0u@crushinator>
	<CAAS2fgSfiYwD-M7+k65JF0Kjeod1zEiPcxPN1iDBHLzYV7UQyA@mail.gmail.com>
	<16848732.PiyLLsBBZa@crushinator>
	<CAC7yFxR7XWtFSMeHgbMZOMKbr+kK_7Ezb7zBUQP08rfC0am9sQ@mail.gmail.com>
	<CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>
	<CAAS2fgQJ2EULensrGfB-Rj95+MyxtkQFUHaKs_bJOOBBTqPE_Q@mail.gmail.com>
Message-ID: <CABh=4qPMtnZsPfanJgi63vo6Bt4TTQLx7EqJh268+NUxb4gC7A@mail.gmail.com>

I did comment on it back in october (
https://bitcointalk.org/index.php?topic=258678.msg3298089#msg3298089) :-)
But I must admit that I haven't been tracking it since then.

I have never been a proponent of BIP 38 (which this BIP is derived from)
and generally think that encrypting a secret with a human generated
password is silly for many reasons (Let me know if I should repeat my list
of concerns). As far as I remember we are pretty much on the same page here.
Using SSS is superior in every way that I can think of.


On Tue, Apr 22, 2014 at 10:15 AM, Gregory Maxwell <gmaxwell at gmail.com>wrote:

> On Tue, Apr 22, 2014 at 1:06 AM, Jan M?ller <jan.moller at gmail.com> wrote:
> > This is a very useful BIP, and I am very much looking forward to
> > implementing it in Mycelium, in particular for bip32 wallets.
>
> I haven't seen commentary from you on the Kogelman draft, it would be
> helpful there: https://bitcointalk.org/index.php?topic=258678.0
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/f1e3ca35/attachment.html>

From tamas at bitsofproof.com  Tue Apr 22 08:50:37 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Tue, 22 Apr 2014 10:50:37 +0200
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <10282678.x5thQUt8hv@crushinator>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<4586234.JVHRmdZYKl@crushinator>
	<7A10A6C6-BE84-472B-9205-F5F9E459B5D7@bitsofproof.com>
	<10282678.x5thQUt8hv@crushinator>
Message-ID: <35523286-E178-4749-B3B7-80ABBE38F729@bitsofproof.com>

I do not suggest to encode the chain, in contrary.

I consider the encoding of main and testnet in WIF and BIP32 as legacy, that I ignore, and suggest that new BIPs should no longer carry this forward.

Regards,

Tamas Blummer
http://bitsofproof.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/171ac6b5/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/171ac6b5/attachment.sig>

From bip at mattwhitlock.name  Tue Apr 22 08:40:39 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Tue, 22 Apr 2014 04:40:39 -0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <1582E990-4E14-4EF7-9C9C-AA505B815104@bitsofproof.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<2025496.b5Y3n7qx8B@crushinator>
	<1582E990-4E14-4EF7-9C9C-AA505B815104@bitsofproof.com>
Message-ID: <4586234.JVHRmdZYKl@crushinator>

On Tuesday, 22 April 2014, at 10:39 am, Tamas Blummer wrote:
> Extra encoding for testnet is quite useless complexity in face of many alt chains.
> BIPS should be chain agnostic.

I would argue that Bitcoin should be altcoin-agnostic. :)

I have no interest in catering to altcoins. But that's just me.



From jan.moller at gmail.com  Tue Apr 22 08:51:42 2014
From: jan.moller at gmail.com (=?UTF-8?Q?Jan_M=C3=B8ller?=)
Date: Tue, 22 Apr 2014 10:51:42 +0200
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <3412253.yhU6ROQD4n@crushinator>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<2336265.urqHVhRi8n@crushinator>
	<CABh=4qPX=w4815O1bRSu+y-KviKS=Brai-umgmheZM5Ar6xv1w@mail.gmail.com>
	<3412253.yhU6ROQD4n@crushinator>
Message-ID: <CABh=4qOovPggRYo410TTZ7oT2vDfF8RMqPwK8WDr=tPZrw9zdA@mail.gmail.com>

I am concerned about space, but more about usability :-)
 I'll definitely use both M and the checksum.


On Tue, Apr 22, 2014 at 10:43 AM, Matt Whitlock <bip at mattwhitlock.name>wrote:

> On Tuesday, 22 April 2014, at 10:39 am, Jan M?ller wrote:
> > Necessary Shares = M+1, not a problem
> >
> > I would probably encode N-of-M in 1 byte as I don't see good use cases
> with
> > more than 17 shares. Anyway, I am fine with it as it is.
>
> I agree that M > 16 is probably not a viable use case for human beings,
> but machines would probably be able to make use of it. I, for one, welcome
> our new robot overlords.
>
> Also, the byte that encodes M?1 is optional, so if you're concerned about
> space, you can omit it (and the checksum).
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/65bfc4e4/attachment.html>

From bip at mattwhitlock.name  Tue Apr 22 08:47:26 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Tue, 22 Apr 2014 04:47:26 -0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <7A10A6C6-BE84-472B-9205-F5F9E459B5D7@bitsofproof.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<4586234.JVHRmdZYKl@crushinator>
	<7A10A6C6-BE84-472B-9205-F5F9E459B5D7@bitsofproof.com>
Message-ID: <10282678.x5thQUt8hv@crushinator>

On Tuesday, 22 April 2014, at 10:43 am, Tamas Blummer wrote:
> It is not about taste, but the fact that BIPs are used by many chains. 
> Alts are useful for at least for experiments, and I think that the notion of main and testnet is superseeded by a wide choice of chains.

There aren't enough distinct bytes to allow for every altcoin. I believe what they do is their own business and is outside the scope of a Bitcoin Improvement Proposal.

If your argument were valid, then we would also have to apply it to private keys. Why do we bother specifying a separate encoding for Bitcoin testnet private keys? There are so many altcoins, after all.



From elarch at gmail.com  Tue Apr 22 08:57:18 2014
From: elarch at gmail.com (=?UTF-8?Q?Eric_Larchev=C3=AAque?=)
Date: Tue, 22 Apr 2014 10:57:18 +0200
Subject: [Bitcoin-development] Draft BIP for seamless website
 authentication using Bitcoin address
In-Reply-To: <CABh=4qMU_FNMcEtmM_sWWFSvpscPCMpD=pc8xLUud_KbQR=bHw@mail.gmail.com>
References: <CA+WZAEp3HsW5ESGUZ7YfR1MZXGC5jd+LucUt_MUP8K94Xwhuhg@mail.gmail.com>
	<CANEZrP0KVyp2Va7Wyy=t0qYkLNK9BDUaSzBfuzQss+=weLJ1Fw@mail.gmail.com>
	<CA+WZAEqYKv8T1OMCKhOJvf5FAy=WujJ=OhtsYP9aBf=4ZPNxmw@mail.gmail.com>
	<CANEZrP0DTYqobECBbw6eZqdk+-TR_2jhBtOviN08r31EQGmZHQ@mail.gmail.com>
	<CANEZrP2Z5x0_kOQ=8-BMzbmi9=D=ou=s3dgEksMA5F84BHSt9A@mail.gmail.com>
	<CA+WZAEqREDkDvmhM7AY+Ju3fkm3uOGm39Ef9+SYoEr43ybbg2Q@mail.gmail.com>
	<CANEZrP15xWWq2jU5yKjG+9hp___OovtbH+vM5KkzFcaQ=koRow@mail.gmail.com>
	<CA+WZAEpwBqucw7kOFrRn_TsnVGaY0-hm4Xv64_i7LweEzQ=oGw@mail.gmail.com>
	<CAJHLa0Nd1hVrcB9Koyv99zN_ykJbHW21qC3KdjZHB4PmOLLgnQ@mail.gmail.com>
	<CANEZrP170RmbegDfssqZS7KFVQ0rguW3dnE4u1yj7h-Dw5rBTw@mail.gmail.com>
	<CAJHLa0POjVLTDqPXTqgf32Oove-KeOd52mDioHf2RZ4izrByxw@mail.gmail.com>
	<CABh=4qMU_FNMcEtmM_sWWFSvpscPCMpD=pc8xLUud_KbQR=bHw@mail.gmail.com>
Message-ID: <CA+WZAEq9G1NRqUM312tBsPKrXBx8iBoBQ=RD=5TJmbEVepmUmw@mail.gmail.com>

The development of BitID has had some progress, and we have now a working
wallet prototype based on Android Bitcoin Wallet (bitoinj).
The user flow is quite nice and if you are curious here is a short video
demonstration :
https://www.youtube.com/watch?v=3eepEWTnRTc

By default, each new first auth request will create and save a new address
(SQRL like). It could be based on BIP32, but this works also without.
This requires to add metadata to addresses, as described here :
https://github.com/bitid/bitid/blob/master/bitid_metadata.md

It open also the fields for decentralized 2FA as well as "pay as guest"
checkout in conjonction with BIP70 payment request.

Eric



On Tue, Apr 22, 2014 at 8:34 AM, Jan M?ller <jan.moller at gmail.com> wrote:

> The reason why client side certificates have never gained traction because
> it is a pain to safely store/backup secrets.
> In bitcoinland we are forced to solve the problem of safely storing
> secrets, and over the years we have come up with software and hardware
> solutions to make this safer and easier to manage for ordinary people.
> Solving this is paramount to the success of Bitcoin, and nobody has solved
> it before on a grand scale.
>
> I see no reason for forcing end users to use two different mechanisms for
> safely managing secrets.
>
> I agree that using a bitcoin address for authentication purposes might be
> confusing and potentially linking your funds with your identity. So I am
> all for using something else than bitcoin addresses and bitcoin private
> keys.
>
> With bip32 we have finally agreed on a mechanism for generating a
> hierarchy of bitcoin private keys from a master seed. A similar approach
> can be used for generating a parallel hierarchy for authentication
> purposes.
>
> - Jan
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/97fad26c/attachment.html>

From bip at mattwhitlock.name  Tue Apr 22 09:13:01 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Tue, 22 Apr 2014 05:13:01 -0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <CABh=4qPX=w4815O1bRSu+y-KviKS=Brai-umgmheZM5Ar6xv1w@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<2336265.urqHVhRi8n@crushinator>
	<CABh=4qPX=w4815O1bRSu+y-KviKS=Brai-umgmheZM5Ar6xv1w@mail.gmail.com>
Message-ID: <9644584.QTKx69qfup@crushinator>

On Tuesday, 22 April 2014, at 10:39 am, Jan M?ller wrote:
> On Tue, Apr 22, 2014 at 10:29 AM, Matt Whitlock <bip at mattwhitlock.name>wrote:
> > On Tuesday, 22 April 2014, at 10:27 am, Jan M?ller wrote:
> > > > >  - Please allow M=1. From a usability point of view it makes sense to allow
> > > > > the user to select 1 share if that is what he wants.
> > > >
> > > > How does that make sense? Decomposing a key/seed into 1 share is
> > > > functionally equivalent to dispensing with the secret sharing scheme
> > > > entirely.
> > > >
> > > I agree that it may look silly to have just one-of-one share from a
> > > technical point of view, but from an end-user point of view there could be
> > > reasons for just having one piece of paper to manage. If M can be 1 then
> > > the software/hardware doesn't have to support multiple formats,
> > > import/export paths + UI  (one for SIPA keys in one share, one for HD seeds
> > > in one share, one for SIPA keys + HD seeds in multiple shares).
> > >
> > > Less complexity & more freedom of choice.
> >
> > Alright. It's a fair argument. Do you agree with encoding M using a bias
> > of -1 so that M up to and including 256 can be encoded in one byte?
> 
> Necessary Shares = M+1, not a problem
> 
> I would probably encode N-of-M in 1 byte as I don't see good use cases with
> more than 17 shares. Anyway, I am fine with it as it is.

Encoding bias of M changed to -1, and test vectors updated:
https://github.com/whitslack/btctool/blob/bip/bip-xxxx.mediawiki



From allport at gmail.com  Tue Apr 22 11:50:34 2014
From: allport at gmail.com (Justin A)
Date: Tue, 22 Apr 2014 07:50:34 -0400
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <9644584.QTKx69qfup@crushinator>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<2336265.urqHVhRi8n@crushinator>
	<CABh=4qPX=w4815O1bRSu+y-KviKS=Brai-umgmheZM5Ar6xv1w@mail.gmail.com>
	<9644584.QTKx69qfup@crushinator>
Message-ID: <CAK2MuX11Y2=SLfWb3meeo5-VatdEQi-0HHi+Ge2r+HE=d_LSig@mail.gmail.com>

Is there a reason you prefer doing the M-1 offset as opposed to limiting
the range to 255 instead? Seems like something that will certainly confuse
some developers in exchange for adding one more value at the high end of a
range. I don't gather there's much difference between 255 and 256 here is
there? Also requires the small bit of explanation to hang around as a rider
in all future documentation, and the name of the field may not be
self-documenting anymore.

By way of predicting how I'm wrong, perhaps it is better to have a field
where all possible values are legitimate (by not biasing you would have to
check it's not zero), or perhaps it's important that powers of 2 be
represented here? Perhaps there's some use case at 256 that 255 just won't
do for?

I'm mostly just curious, as I find problems and funnies crop up when people
get clever with optimization of things like message bit-packing etc.. If
it's not necessary then maybe better to keep to what's intuitive (i.e. the
girls name is clear and self-documenting)

Anyway enough of my bike shedding!
On Apr 22, 2014 5:38 AM, "Matt Whitlock" <bip at mattwhitlock.name> wrote:

> On Tuesday, 22 April 2014, at 10:39 am, Jan M?ller wrote:
> > On Tue, Apr 22, 2014 at 10:29 AM, Matt Whitlock <bip at mattwhitlock.name
> >wrote:
> > > On Tuesday, 22 April 2014, at 10:27 am, Jan M?ller wrote:
> > > > > >  - Please allow M=1. From a usability point of view it makes
> sense to allow
> > > > > > the user to select 1 share if that is what he wants.
> > > > >
> > > > > How does that make sense? Decomposing a key/seed into 1 share is
> > > > > functionally equivalent to dispensing with the secret sharing
> scheme
> > > > > entirely.
> > > > >
> > > > I agree that it may look silly to have just one-of-one share from a
> > > > technical point of view, but from an end-user point of view there
> could be
> > > > reasons for just having one piece of paper to manage. If M can be 1
> then
> > > > the software/hardware doesn't have to support multiple formats,
> > > > import/export paths + UI  (one for SIPA keys in one share, one for
> HD seeds
> > > > in one share, one for SIPA keys + HD seeds in multiple shares).
> > > >
> > > > Less complexity & more freedom of choice.
> > >
> > > Alright. It's a fair argument. Do you agree with encoding M using a
> bias
> > > of -1 so that M up to and including 256 can be encoded in one byte?
> >
> > Necessary Shares = M+1, not a problem
> >
> > I would probably encode N-of-M in 1 byte as I don't see good use cases
> with
> > more than 17 shares. Anyway, I am fine with it as it is.
>
> Encoding bias of M changed to -1, and test vectors updated:
> https://github.com/whitslack/btctool/blob/bip/bip-xxxx.mediawiki
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/ffcc6955/attachment.html>

From wtogami at gmail.com  Tue Apr 22 13:30:04 2014
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Tue, 22 Apr 2014 03:30:04 -1000
Subject: [Bitcoin-development] Development Roadmap of Bitcoin Core 0.9.2
Message-ID: <CAEz79PrAg=yydd3UOk51wGQUWey-KZHUH1Npzwb=qL+6zTj+pQ@mail.gmail.com>

Development Roadmap of Bitcoin Core 0.9.2

The Bitcoin Core developers have a desire to do a mostly bug-fix and
translation update release in v0.9.2. A feature and string freeze will
start about 3 weeks from now.

The purpose of this development roadmap is to communicate the project
intent and to better organize volunteers. Hopefully doing so will make
clear when particular types of contributions are most welcome and help to
push the release process forward in a more timely manner while also
improving the quality of the release.  Missing a target goal is OK. The
developers may decide to delay particular goals if there are good reasons
on a case-by-case basis. While schedules may slip, it is generally a good
thing for a goal to have existed.

Schedule (subject to change)

13 May 2014: Feature freeze.  Source string freeze.  Release candidate.

20 May 2014: Testing of a release candidate is roughly a week. More time
can be added at the discretion of the developers to allow for testing if
further release candidates are deemed necessary due to subsequent changes.

Nightly Gitian Builds

https://bitcointalk.org/index.php?topic=571414.0

To make it easier for non-developers and translators to get involved in
testing unofficial deterministic nightly builds are now available.

Translation of Bitcoin Core

https://www.transifex.com/projects/p/bitcoin/

Transifex allows open source projects a convenient way to coordinate the
work of many translators.  Periodically English language source strings
from Bitcoin Core are synchronized to the Transifex project.  Those strings
are then translated in the convenient Transifex web interface where
contributors are able to join by creating a free account.  Senior
contributors can be promoted to a Reviewer or Maintainer role for each
language.  Developers pull from Transifex to merge translated strings back
into Bitcoin Core. As a matter of policy translations are NOT accepted via
Github pull requests as those changes would be overwritten by the next
Transifex pull and there is no clean way to keep them in sync when changes
are made in both places.

https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md

The latest version of the Translation process can be found here.

Bitcoin-Translators Announce-only List

https://groups.google.com/forum/#!forum/bitcoin-translators
Bitcoin-Translators mailing list is an announce-only mailing list for
developers to communicate to translators at particular times when new
translations are needed.  Replies and discussion would go to the bitcoin
dev list.  Subscriptions to this list would additionally be valuable to the
project as it allows for a convenient way to ask for translations of other
related projects like bitcoin.org that are hosted on theTransifex platform.
 Whenever source strings of significance are changed or deadlines are
announced, translators will learn of work to be done in Transifex quickly
as they will all be subscribed to this announce list.  Discussion of
translation issues should be on the Bitcoin-Development list.

Other Improvements to the Translation process

   -

   Prior to an intended release a String Freeze is declared on a particular
   date.  The string freeze exists to ensure that translators have a
   reasonable amount of time to translate new or modified source strings so
   their work can be included in a release.
   -

   A significant issue with our past translation process was the lack of
   branch support in Transifex.  This meant that since master and v0.8.2
   diverged in May 2013, translation updates made in Transifex were not
   included in the v0.8.x stable releases until the release of v0.9.0 in early
   2014.  v0.9.1 similarly was released from a branch outside from master.
    v0.9.2 is planned to be released directly from the master branch so
   translations for this upcoming release can be developed directly.  laanwj
   came up with a great idea for dealing with future releases where we will be
   able to keep translations for both diverged stable and master branch
   simultaneously in Transifex, with scripts automating the process of merging
   strings and separating them back to the diverged branches.


Please post questions or comments about the release or translation process
here on Bitcoin-Development list. Bug reports should be posted a Github
Issues<https://github.com/bitcoin/bitcoin/issues?direction=desc&sort=updated&state=open>tickets.

Warren Togami
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/2fec3522/attachment.html>

From nikita at megiontechnologies.com  Tue Apr 22 13:37:36 2014
From: nikita at megiontechnologies.com (Nikita Schmidt)
Date: Tue, 22 Apr 2014 15:37:36 +0200
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <1927948.OEZHQcsQ9n@crushinator>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<CAC7yFxR7XWtFSMeHgbMZOMKbr+kK_7Ezb7zBUQP08rfC0am9sQ@mail.gmail.com>
	<CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>
	<1927948.OEZHQcsQ9n@crushinator>
Message-ID: <CAC7yFxToo=an5F01siW6ktHWBeZ0v85aByAKtEfpBPUpZ5Jbrw@mail.gmail.com>

>
> A fair point. I'll add some prefixes for testnet.
>

I've looked at the latest draft and am worried about the increased AVB
namespace usage.  Would it make sense to differentiate main/testnet in
the prefix byte instead of the AVB?  Perhaps aiming for ST rather than
TS.

> I'll welcome forks of my draft BIP. I don't really have the inclination to research GF(2^8) secret sharing schemes and write an implementation at the present time, but if someone wants to take my BIP in that direction, then okay.

I'm willing to fork it.
The maximum number of shares possible over GF(2^8) is 255.  That would
make M and x biases unnecessary.



From laanwj at gmail.com  Tue Apr 22 14:05:04 2014
From: laanwj at gmail.com (Wladimir)
Date: Tue, 22 Apr 2014 16:05:04 +0200
Subject: [Bitcoin-development] Development Roadmap of Bitcoin Core 0.9.2
In-Reply-To: <CAEz79PrAg=yydd3UOk51wGQUWey-KZHUH1Npzwb=qL+6zTj+pQ@mail.gmail.com>
References: <CAEz79PrAg=yydd3UOk51wGQUWey-KZHUH1Npzwb=qL+6zTj+pQ@mail.gmail.com>
Message-ID: <CA+s+GJCSjDNyh__PSdEWCjhMitJ0LJsHwqH-=EgO_P5TLt0LTA@mail.gmail.com>

On Tue, Apr 22, 2014 at 3:30 PM, Warren Togami Jr. <wtogami at gmail.com> wrote:
> Development Roadmap of Bitcoin Core 0.9.2
>
> The Bitcoin Core developers have a desire to do a mostly bug-fix and
> translation update release in v0.9.2. A feature and string freeze will start
> about 3 weeks from now.

ACK, thanks for writing the announcement.

Wladimir



From natanael.l at gmail.com  Tue Apr 22 14:55:54 2014
From: natanael.l at gmail.com (Natanael)
Date: Tue, 22 Apr 2014 16:55:54 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <89C372C7-522F-472A-9A75-656E481321A0@bitsofproof.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>
	<CANOOu=-JB4nZpEPRq+X_JBHJsGGvOsTVKROkciRu4SCp_EL4Vg@mail.gmail.com>
	<5354DC68.5040602@gmx.de>
	<89C372C7-522F-472A-9A75-656E481321A0@bitsofproof.com>
Message-ID: <CAAt2M18q7wbB=OpWC1o4_BYE+N38k=q9uJrqt_nzN=kLh0kPkQ@mail.gmail.com>

I am in favor of xbit, my only concern is if average Joes will consider
that name "stupid" (like various attempts at "cool" branding with unusual
letters like Q, X, Z, etc). We should see if we can get support for it in
the community and if there would be any notable opposition against it or
not. If there's no significant opposition and most people are in favor, I'd
say go ahead.

- Sent from my phone
Den 21 apr 2014 11:38 skrev "Tamas Blummer" <tamas at bitsofproof.com>:

> Thomas V:
>
> Your proposal misses the points that:
>
> - this is about a unit with 1e-6 Bitcoins or 100 satoshis.
> - it is not about people who know Bitcoin and are techies, but about those
> who don?t and aren?t.
>
> The reasons for such a unit are more than shifting the comma some places
> for convinience,
> but to align Bitcoin with capabilities of existing financial software and
> customs of finance and average people,
> and ISO standard of currency abbreviations.
>
> bit and XBT seems to check the boxes.
>
> I would love to have some feedback on xbit as per my previous mail.
>
> Regards,
>
> Tamas Blummer
> http://bitsofproof.com
>
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/101e72c4/attachment.html>

From mark at monetize.io  Tue Apr 22 15:32:23 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Tue, 22 Apr 2014 08:32:23 -0700
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <1582E990-4E14-4EF7-9C9C-AA505B815104@bitsofproof.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>	<CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>	<1927948.OEZHQcsQ9n@crushinator>
	<2025496.b5Y3n7qx8B@crushinator>
	<1582E990-4E14-4EF7-9C9C-AA505B815104@bitsofproof.com>
Message-ID: <53568B87.8040009@monetize.io>

Testnet vs mainnet is quite a separate issue than bitcoin vs altcoin.
Unfortunately few of the alts ever figured this out.

On 04/22/2014 01:39 AM, Tamas Blummer wrote:
> Extra encoding for testnet is quite useless complexity in face of many
> alt chains.
> BIPS should be chain agnostic.
> 
> Regards,
> 
> Tamas Blummer
> http://bitsofproof.com



From tamas at bitsofproof.com  Tue Apr 22 15:49:10 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Tue, 22 Apr 2014 17:49:10 +0200
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <53568B87.8040009@monetize.io>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>	<CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>	<1927948.OEZHQcsQ9n@crushinator>
	<2025496.b5Y3n7qx8B@crushinator>
	<1582E990-4E14-4EF7-9C9C-AA505B815104@bitsofproof.com>
	<53568B87.8040009@monetize.io>
Message-ID: <11528A13-5D66-4D2B-BEE0-1C26F9987BC8@bitsofproof.com>

I use several test chains while testing my software, the official test net, a standalone net in house and even chains only created on the fly for unit tests. I found no use of distinguishing serialization of keys while using any of them.

If you have some deep insights about why this is needed share it, as I am not goint to guess your valuable thoughts.

Regards,

Tamas Blummer
http://bitsofproof.com

On 22.04.2014, at 17:32, Mark Friedenbach <mark at monetize.io> wrote:

> Testnet vs mainnet is quite a separate issue than bitcoin vs altcoin.
> Unfortunately few of the alts ever figured this out.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/4f3b8727/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/4f3b8727/attachment.sig>

From mark at monetize.io  Tue Apr 22 17:03:59 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Tue, 22 Apr 2014 10:03:59 -0700
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <11528A13-5D66-4D2B-BEE0-1C26F9987BC8@bitsofproof.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>	<CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>	<1927948.OEZHQcsQ9n@crushinator>
	<2025496.b5Y3n7qx8B@crushinator>
	<1582E990-4E14-4EF7-9C9C-AA505B815104@bitsofproof.com>
	<53568B87.8040009@monetize.io>
	<11528A13-5D66-4D2B-BEE0-1C26F9987BC8@bitsofproof.com>
Message-ID: <5356A0FF.3010109@monetize.io>

What I was saying is that while it may or may not make sense to have
separate prefixes for testnet, it makes no sense to have per-alt prefixes.

On 04/22/2014 08:49 AM, Tamas Blummer wrote:
> I use several test chains while testing my software, the official test
> net, a standalone net in house and even chains only created on the fly
> for unit tests. I found no use of distinguishing serialization of keys
> while using any of them.
> 
> If you have some deep insights about why this is needed share it, as I
> am not goint to guess your valuable thoughts.
> 
> Regards,
> 
> Tamas Blummer
> http://bitsofproof.com
> 
> On 22.04.2014, at 17:32, Mark Friedenbach <mark at monetize.io
> <mailto:mark at monetize.io>> wrote:
> 
>> Testnet vs mainnet is quite a separate issue than bitcoin vs altcoin.
>> Unfortunately few of the alts ever figured this out.
> 



From jan.moller at gmail.com  Tue Apr 22 17:07:24 2014
From: jan.moller at gmail.com (=?UTF-8?Q?Jan_M=C3=B8ller?=)
Date: Tue, 22 Apr 2014 19:07:24 +0200
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <11528A13-5D66-4D2B-BEE0-1C26F9987BC8@bitsofproof.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>
	<1927948.OEZHQcsQ9n@crushinator> <2025496.b5Y3n7qx8B@crushinator>
	<1582E990-4E14-4EF7-9C9C-AA505B815104@bitsofproof.com>
	<53568B87.8040009@monetize.io>
	<11528A13-5D66-4D2B-BEE0-1C26F9987BC8@bitsofproof.com>
Message-ID: <CABh=4qPsR1YbhJDeAPjr37Zjqawo9ZFAH43scFnEg7p9a7EkeQ@mail.gmail.com>

Treating testnet differently is quite the norm, we have that in BIP 32, 38,
70, SIPA private keys (no BIP for that I guess), bitcoin addresses etc. At
the same time none of them define values for alt coins as far as I recall.


On Tue, Apr 22, 2014 at 5:49 PM, Tamas Blummer <tamas at bitsofproof.com>wrote:

> I use several test chains while testing my software, the official test
> net, a standalone net in house and even chains only created on the fly for
> unit tests. I found no use of distinguishing serialization of keys while
> using any of them.
>
> If you have some deep insights about why this is needed share it, as I am
> not goint to guess your valuable thoughts.
>
> Regards,
>
> Tamas Blummer
> http://bitsofproof.com
>
> On 22.04.2014, at 17:32, Mark Friedenbach <mark at monetize.io> wrote:
>
> Testnet vs mainnet is quite a separate issue than bitcoin vs altcoin.
> Unfortunately few of the alts ever figured this out.
>
>
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/8c017d18/attachment.html>

From tamas at bitsofproof.com  Tue Apr 22 18:29:50 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Tue, 22 Apr 2014 20:29:50 +0200
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <CABh=4qPsR1YbhJDeAPjr37Zjqawo9ZFAH43scFnEg7p9a7EkeQ@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>
	<1927948.OEZHQcsQ9n@crushinator> <2025496.b5Y3n7qx8B@crushinator>
	<1582E990-4E14-4EF7-9C9C-AA505B815104@bitsofproof.com>
	<53568B87.8040009@monetize.io>
	<11528A13-5D66-4D2B-BEE0-1C26F9987BC8@bitsofproof.com>
	<CABh=4qPsR1YbhJDeAPjr37Zjqawo9ZFAH43scFnEg7p9a7EkeQ@mail.gmail.com>
Message-ID: <F292CC2F-BAA7-45ED-801E-1475D94632AF@bitsofproof.com>

Yes, it is current norm. I am questioning if we should hang on to it in BIPs.

I see testnet as a tool for a certain type of testing. Its existence is likely a consequence of Satoshi not writing unit tests and having automated integration tests, but creating a shadow chain to try things out, mostly manually.

I do not say testnet (as we know) would not be useful for certain tests. E.g. as we developed myTREZOR with slush it was useful to have a shared chain with worthless tokens and transactions we can both refer to. However for our automated tests chains-in-a-box are better as we can easily create and exactly re-create wierd situations on-the-fly.

While talking about BIP32 hierarchy use, several people argued to use a level of the hierarchy to identify the chain the key is used on. That level could identify testnet but as well an alt coin chain.

Above leads me thinking that testnet is far less important than to be addressed in every future BIP.

Regards,

Tamas Blummer
http://bitsofproof.com

On 22.04.2014, at 19:07, Jan M?ller <jan.moller at gmail.com> wrote:

> Treating testnet differently is quite the norm, we have that in BIP 32, 38, 70, SIPA private keys (no BIP for that I guess), bitcoin addresses etc. At the same time none of them define values for alt coins as far as I recall.
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/b51096da/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/b51096da/attachment.sig>

From gmaxwell at gmail.com  Tue Apr 22 18:46:18 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 22 Apr 2014 11:46:18 -0700
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <F292CC2F-BAA7-45ED-801E-1475D94632AF@bitsofproof.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>
	<1927948.OEZHQcsQ9n@crushinator> <2025496.b5Y3n7qx8B@crushinator>
	<1582E990-4E14-4EF7-9C9C-AA505B815104@bitsofproof.com>
	<53568B87.8040009@monetize.io>
	<11528A13-5D66-4D2B-BEE0-1C26F9987BC8@bitsofproof.com>
	<CABh=4qPsR1YbhJDeAPjr37Zjqawo9ZFAH43scFnEg7p9a7EkeQ@mail.gmail.com>
	<F292CC2F-BAA7-45ED-801E-1475D94632AF@bitsofproof.com>
Message-ID: <CAAS2fgR5ciUeFonOXBD1d9b_inOuxQKJ-LaoGmoyjoeQ_KxQxQ@mail.gmail.com>

On Tue, Apr 22, 2014 at 11:29 AM, Tamas Blummer <tamas at bitsofproof.com> wrote:
> Yes, it is current norm. I am questioning if we should hang on to it in
> BIPs.
>
> I see testnet as a tool for a certain type of testing. Its existence is
> likely a consequence of Satoshi not writing unit tests and having automated
> integration tests, but creating a shadow chain to try things out, mostly
> manually.

Satoshi didn't create testnet.  Testnet exists so you can do public
tests involving multiple people and services, so you can have shadow
versions of sites and services interacting with each other and trading
worthless tokens. Importantly, testnet also creates a public live fire
environment where grey hats can try out their attacks while minimizing
damage (and it's been very successful at this).  Testnet is not an
alternative to the unit and integration tests that exist in Bitcoin
core but exists for more or less completely different reasons.

> Above leads me thinking that testnet is far less important than to be
> addressed in every future BIP.

Testnet is not normally addressed in BIPs at all, except for soft fork
bips that had compressed deployment schedules on testnet.  For address
like specification we have always used a version byte and there is a
common encoding for version bytes that flags the network ID in the
byte.



From pete at petertodd.org  Tue Apr 22 21:31:28 2014
From: pete at petertodd.org (Peter Todd)
Date: Tue, 22 Apr 2014 17:31:28 -0400
Subject: [Bitcoin-development] Double-spending unconfirmed transactions is a
 lot easier than most people realise
Message-ID: <20140422213128.GB2578@savin>

You may have seen my reddit post of the same title a few days ago:

http://www.reddit.com/r/Bitcoin/comments/239bj1/doublespending_unconfirmed_transactions_is_a_lot/

I've done some more experiments since, with good results. For instance
here's a real-world double-spend of the gambling service Lucky Bit:

Original: 7801c3b996716025dbac946ca7a123b7c1c5429341738e8a6286a389de51bd20

01000000012a14c8e6ce1e625513847b2ff271b3e6a1849f2a634c601b7f383ef710483f79000000006a4730440220692d09f5415f23118f865b81430990a15517954fd14a8bda74a5a38c4f2f39450220391f6251e39cdd3cab7363b912b897146a0a78e295f6ecd23b078c9f64ca7ae8012103a11c09c09874833eedc58a031d01d161ab4d2eba3874959537c5609ef5d5401fffffffff030c4d0f00000000001976a914d5245b64fcf8e873a9d1c0bfe2d258492bec6cc888ac400d0300000000001976a914da5dde8abec4f3b67561bcd06aaf28b790cff75588ac10270000000000001976a914c4c5d791fcb4654a1ef5e03fe0ad3d9c598f982788ac00000000

Double-spend: f4e8e930bdfa3666b4a46c67544e356876a72ec70060130b2c7078c4ce88582a

01000000012a14c8e6ce1e625513847b2ff271b3e6a1849f2a634c601b7f383ef710483f79000000006a473044022074f0c6912b482c6b51f1a91fb2bdca3f3dde3a3aed4fc54bd5ed563390011c2d02202719fe49578591edfbdd4b79ceeaa7f9550e4323748b3dbdd4135f38e70c476d012103a11c09c09874833eedc58a031d01d161ab4d2eba3874959537c5609ef5d5401fffffffff01d9c90f00000000001976a914d5245b64fcf8e873a9d1c0bfe2d258492bec6cc888ac00000000

The double-spend was mined by Eligius and made use of the fact that
Eligius blacklists transactions to a number of addresses considered to
be "spam" by the pool operators; affected transactions are not added to
the Eligus mempool at all. Lucky Bit has a real-time display of bets as
they are accepted; I simply watched that display to determine whether or
not I had lost. With Eligius at 8% and the house edge at 1.75% the
attack is profitable when automated. My replace-by-fee patch(1) was
used, although as there are only a handful of such nodes running - none
connected directly to Eligius from what I can determine - I submitted
the double-spend transactions to Eligius directly via their pushtxn
webform.(2)

Of course, this is an especially difficult case, as you must send the
double-spend after the original transaction - normally just sending a
non-standard tx to Eligius first would suffice. Note how this defeats
Andresen's double-spend-relay patch(3) as proposed since the
double-spend is a non-standard transaction.

In discussion with Lucky Bit they have added case-specific code to
reject transactions with known blacklisted outputs; the above
double-spend I preformed is no longer possible. Of course, if the
(reused) Lucky Bit addresses are added to that blacklist, that approach
isn't viable - I suggest they switch to a scheme where addresses are not
reused. (per-customer? rotated?) They also have added code to keep track
of double-spend occurances and trigger human intervention prior to
unacceptable losses. Longer term as with most services (e.g. Just-Dice)
they intend to move to off-chain transactions. They are also considering
implementing replace-by-fee scorched earth(4) - in their case a single
pool, such as Eligius, implementing it would be enough to make the
attack unprofitable. It may also be enough security to allow users to
use their deposits prior to the first confirmation in a Just-Dice style
off-chain implementation.

1) https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.9.1

2) http://eligius.st/~wizkid057/newstats/pushtxn.php

3) https://github.com/bitcoin/bitcoin/pull/3354 and
   https://github.com/bitcoin/bitcoin/pull/3883

4) https://bitcointalk.org/index.php?topic=251233.msg2669189#msg2669189

-- 
'peter'[:-1]@petertodd.org
000000000000000024abc60eebba42333d74b30635ca5fb0b7c776a579c307a8
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140422/62be07b3/attachment.sig>

From tomh at thinlink.com  Wed Apr 23 02:54:24 2014
From: tomh at thinlink.com (Tom Harding)
Date: Tue, 22 Apr 2014 18:54:24 -0800
Subject: [Bitcoin-development] Economics of information propagation
In-Reply-To: <52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
Message-ID: <53572B60.4050108@thinlink.com>

Jonathan -

These are a few things I've been wishing for recent data on:

  - 95th percentile transaction propagation time vs. fees/kb, vs. total fees
  - Count of blocks bypassing well-propagated transactions vs. fees/kb, 
vs. total fees
  - Signed-double-spend confirmation probability vs. broadcast time 
offset from first spend

On 4/20/2014 5:30 PM, Jonathan Levin wrote:
> at coinometrics we are working on a modified client to capture information on network propagation and would invite any suggestions of any other useful statistics that would be useful in the development of software.





From tomh at thinlink.com  Wed Apr 23 04:45:53 2014
From: tomh at thinlink.com (Tom Harding)
Date: Tue, 22 Apr 2014 20:45:53 -0800
Subject: [Bitcoin-development] Double-spending unconfirmed transactions
 is a lot easier than most people realise
In-Reply-To: <20140422213128.GB2578@savin>
References: <20140422213128.GB2578@savin>
Message-ID: <53574581.3040004@thinlink.com>


Since no complete solution to preventing 0-confirmation respends in the 
bitcoin network has been proposed, or is likely to exist, when 
evaluating partial solutions let's ask "what kind of network does this 
move toward?"

Does the solution move toward a network with simple rules, where the 
certainty that decreases from the many-confirmations state, down to 1 
confirmation, does not immediately disappear just below the time of 1 
confirmation?

A network where transaction submitters consider their (final) 
transactions to be unchangeable the moment they are transmitted, and 
where the network's goal is to confirm only transactions all of whose 
UTXO's have not yet been seen in a final transaction's input, has a 
chance to be such a network.  If respend attempts are broadcast widely, 
then after a time on the order of transaction propagation time (<< 1 
minute) has passed, participants have a good chance to avoid relying on 
a transaction whose funds are spent to someone else.  This is both 
because after this time the network is unlikely to split on the primacy 
of one spend, and because the recipient, able to see a respend attempt, 
can withhold delivery of the good or service until confirmation.

Or, does the solution move toward a network that
  - Requires participants to have knowledge of the policies of multiple 
entities, like Eligius and whoever maintains the blacklist mentioned below?
  - Requires a transaction submitter to intently monitor transactions 
and try to climb over the top of attempted respends with 
"scorched-earth" triple spends, until a random moment some time between, 
let's say, 5 and 15 minutes in the future?
  - Punts the problem to off-network solutions?


On 4/22/2014 1:31 PM, Peter Todd wrote:
> You may have seen my reddit post of the same title a few days ago:
>
> http://www.reddit.com/r/Bitcoin/comments/239bj1/doublespending_unconfirmed_transactions_is_a_lot/
>
> I've done some more experiments since, with good results. For instance
> here's a real-world double-spend of the gambling service Lucky Bit:
>
> Original: 7801c3b996716025dbac946ca7a123b7c1c5429341738e8a6286a389de51bd20
>
> 01000000012a14c8e6ce1e625513847b2ff271b3e6a1849f2a634c601b7f383ef710483f79000000006a4730440220692d09f5415f23118f865b81430990a15517954fd14a8bda74a5a38c4f2f39450220391f6251e39cdd3cab7363b912b897146a0a78e295f6ecd23b078c9f64ca7ae8012103a11c09c09874833eedc58a031d01d161ab4d2eba3874959537c5609ef5d5401fffffffff030c4d0f00000000001976a914d5245b64fcf8e873a9d1c0bfe2d258492bec6cc888ac400d0300000000001976a914da5dde8abec4f3b67561bcd06aaf28b790cff75588ac10270000000000001976a914c4c5d791fcb4654a1ef5e03fe0ad3d9c598f982788ac00000000
>
> Double-spend: f4e8e930bdfa3666b4a46c67544e356876a72ec70060130b2c7078c4ce88582a
>
> 01000000012a14c8e6ce1e625513847b2ff271b3e6a1849f2a634c601b7f383ef710483f79000000006a473044022074f0c6912b482c6b51f1a91fb2bdca3f3dde3a3aed4fc54bd5ed563390011c2d02202719fe49578591edfbdd4b79ceeaa7f9550e4323748b3dbdd4135f38e70c476d012103a11c09c09874833eedc58a031d01d161ab4d2eba3874959537c5609ef5d5401fffffffff01d9c90f00000000001976a914d5245b64fcf8e873a9d1c0bfe2d258492bec6cc888ac00000000
>
> The double-spend was mined by Eligius and made use of the fact that
> Eligius blacklists transactions to a number of addresses considered to
> be "spam" by the pool operators; affected transactions are not added to
> the Eligus mempool at all. Lucky Bit has a real-time display of bets as
> they are accepted; I simply watched that display to determine whether or
> not I had lost. With Eligius at 8% and the house edge at 1.75% the
> attack is profitable when automated. My replace-by-fee patch(1) was
> used, although as there are only a handful of such nodes running - none
> connected directly to Eligius from what I can determine - I submitted
> the double-spend transactions to Eligius directly via their pushtxn
> webform.(2)
>
> Of course, this is an especially difficult case, as you must send the
> double-spend after the original transaction - normally just sending a
> non-standard tx to Eligius first would suffice. Note how this defeats
> Andresen's double-spend-relay patch(3) as proposed since the
> double-spend is a non-standard transaction.
>
> In discussion with Lucky Bit they have added case-specific code to
> reject transactions with known blacklisted outputs; the above
> double-spend I preformed is no longer possible. Of course, if the
> (reused) Lucky Bit addresses are added to that blacklist, that approach
> isn't viable - I suggest they switch to a scheme where addresses are not
> reused. (per-customer? rotated?) They also have added code to keep track
> of double-spend occurances and trigger human intervention prior to
> unacceptable losses. Longer term as with most services (e.g. Just-Dice)
> they intend to move to off-chain transactions. They are also considering
> implementing replace-by-fee scorched earth(4) - in their case a single
> pool, such as Eligius, implementing it would be enough to make the
> attack unprofitable. It may also be enough security to allow users to
> use their deposits prior to the first confirmation in a Just-Dice style
> off-chain implementation.
>
> 1) https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.9.1
>
> 2) http://eligius.st/~wizkid057/newstats/pushtxn.php
>
> 3) https://github.com/bitcoin/bitcoin/pull/3354 and
>     https://github.com/bitcoin/bitcoin/pull/3883
>
> 4) https://bitcointalk.org/index.php?topic=251233.msg2669189#msg2669189



From bip at mattwhitlock.name  Wed Apr 23 04:03:17 2014
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Wed, 23 Apr 2014 00:03:17 -0400
Subject: [Bitcoin-development] Double-spending unconfirmed transactions
	is a lot easier than most people realise
In-Reply-To: <53574581.3040004@thinlink.com>
References: <20140422213128.GB2578@savin> <53574581.3040004@thinlink.com>
Message-ID: <1533579.cuHiT41BQ7@crushinator>

On Tuesday, 22 April 2014, at 8:45 pm, Tom Harding wrote:
> A network where transaction submitters consider their (final) 
> transactions to be unchangeable the moment they are transmitted, and 
> where the network's goal is to confirm only transactions all of whose 
> UTXO's have not yet been seen in a final transaction's input, has a 
> chance to be such a network.

Respectfully, this is not the goal of miners. The goal of miners is to maximize profits. Always will be. If they can do that by enabling replace-by-fee (and they can), then they will. Altruism does not factor into business.



From jgarzik at bitpay.com  Wed Apr 23 04:22:35 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Wed, 23 Apr 2014 00:22:35 -0400
Subject: [Bitcoin-development] Double-spending unconfirmed transactions
 is a lot easier than most people realise
In-Reply-To: <53574581.3040004@thinlink.com>
References: <20140422213128.GB2578@savin> <53574581.3040004@thinlink.com>
Message-ID: <CAJHLa0M8A6xpWMm1tCBCSTT=Q4Ks6ZCCXWdX_t62-4x+9_eRZg@mail.gmail.com>

A lot of these "should the network..." questions depend on business
rules and business models.

Even if a 0-conf double spend is possible in a given business
situation, the incentives quite often are aligned to avoid
double-spend attempts in any case.  Any physical good being shipped
can "accept" the transaction, and then wait for confirmations before
shipping.  Digital goods might be accepted for 0-conf payment from
users who have a good history with the merchant.  The 0-conf attacker
will tend to /not/ be a regular user, and also have many other typical
markers of a fraudster.

The subset of (a) double-spend attackers making a one-time or
short-term attack on (b) a naive merchant with mistuned business rules
will tend to be very small.


On Wed, Apr 23, 2014 at 12:45 AM, Tom Harding <tomh at thinlink.com> wrote:
>
> Since no complete solution to preventing 0-confirmation respends in the
> bitcoin network has been proposed, or is likely to exist, when
> evaluating partial solutions let's ask "what kind of network does this
> move toward?"
>
> Does the solution move toward a network with simple rules, where the
> certainty that decreases from the many-confirmations state, down to 1
> confirmation, does not immediately disappear just below the time of 1
> confirmation?
>
> A network where transaction submitters consider their (final)
> transactions to be unchangeable the moment they are transmitted, and
> where the network's goal is to confirm only transactions all of whose
> UTXO's have not yet been seen in a final transaction's input, has a
> chance to be such a network.  If respend attempts are broadcast widely,
> then after a time on the order of transaction propagation time (<< 1
> minute) has passed, participants have a good chance to avoid relying on
> a transaction whose funds are spent to someone else.  This is both
> because after this time the network is unlikely to split on the primacy
> of one spend, and because the recipient, able to see a respend attempt,
> can withhold delivery of the good or service until confirmation.
>
> Or, does the solution move toward a network that
>   - Requires participants to have knowledge of the policies of multiple
> entities, like Eligius and whoever maintains the blacklist mentioned below?
>   - Requires a transaction submitter to intently monitor transactions
> and try to climb over the top of attempted respends with
> "scorched-earth" triple spends, until a random moment some time between,
> let's say, 5 and 15 minutes in the future?
>   - Punts the problem to off-network solutions?
>
>
> On 4/22/2014 1:31 PM, Peter Todd wrote:
>> You may have seen my reddit post of the same title a few days ago:
>>
>> http://www.reddit.com/r/Bitcoin/comments/239bj1/doublespending_unconfirmed_transactions_is_a_lot/
>>
>> I've done some more experiments since, with good results. For instance
>> here's a real-world double-spend of the gambling service Lucky Bit:
>>
>> Original: 7801c3b996716025dbac946ca7a123b7c1c5429341738e8a6286a389de51bd20
>>
>> 01000000012a14c8e6ce1e625513847b2ff271b3e6a1849f2a634c601b7f383ef710483f79000000006a4730440220692d09f5415f23118f865b81430990a15517954fd14a8bda74a5a38c4f2f39450220391f6251e39cdd3cab7363b912b897146a0a78e295f6ecd23b078c9f64ca7ae8012103a11c09c09874833eedc58a031d01d161ab4d2eba3874959537c5609ef5d5401fffffffff030c4d0f00000000001976a914d5245b64fcf8e873a9d1c0bfe2d258492bec6cc888ac400d0300000000001976a914da5dde8abec4f3b67561bcd06aaf28b790cff75588ac10270000000000001976a914c4c5d791fcb4654a1ef5e03fe0ad3d9c598f982788ac00000000
>>
>> Double-spend: f4e8e930bdfa3666b4a46c67544e356876a72ec70060130b2c7078c4ce88582a
>>
>> 01000000012a14c8e6ce1e625513847b2ff271b3e6a1849f2a634c601b7f383ef710483f79000000006a473044022074f0c6912b482c6b51f1a91fb2bdca3f3dde3a3aed4fc54bd5ed563390011c2d02202719fe49578591edfbdd4b79ceeaa7f9550e4323748b3dbdd4135f38e70c476d012103a11c09c09874833eedc58a031d01d161ab4d2eba3874959537c5609ef5d5401fffffffff01d9c90f00000000001976a914d5245b64fcf8e873a9d1c0bfe2d258492bec6cc888ac00000000
>>
>> The double-spend was mined by Eligius and made use of the fact that
>> Eligius blacklists transactions to a number of addresses considered to
>> be "spam" by the pool operators; affected transactions are not added to
>> the Eligus mempool at all. Lucky Bit has a real-time display of bets as
>> they are accepted; I simply watched that display to determine whether or
>> not I had lost. With Eligius at 8% and the house edge at 1.75% the
>> attack is profitable when automated. My replace-by-fee patch(1) was
>> used, although as there are only a handful of such nodes running - none
>> connected directly to Eligius from what I can determine - I submitted
>> the double-spend transactions to Eligius directly via their pushtxn
>> webform.(2)
>>
>> Of course, this is an especially difficult case, as you must send the
>> double-spend after the original transaction - normally just sending a
>> non-standard tx to Eligius first would suffice. Note how this defeats
>> Andresen's double-spend-relay patch(3) as proposed since the
>> double-spend is a non-standard transaction.
>>
>> In discussion with Lucky Bit they have added case-specific code to
>> reject transactions with known blacklisted outputs; the above
>> double-spend I preformed is no longer possible. Of course, if the
>> (reused) Lucky Bit addresses are added to that blacklist, that approach
>> isn't viable - I suggest they switch to a scheme where addresses are not
>> reused. (per-customer? rotated?) They also have added code to keep track
>> of double-spend occurances and trigger human intervention prior to
>> unacceptable losses. Longer term as with most services (e.g. Just-Dice)
>> they intend to move to off-chain transactions. They are also considering
>> implementing replace-by-fee scorched earth(4) - in their case a single
>> pool, such as Eligius, implementing it would be enough to make the
>> attack unprofitable. It may also be enough security to allow users to
>> use their deposits prior to the first confirmation in a Just-Dice style
>> off-chain implementation.
>>
>> 1) https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.9.1
>>
>> 2) http://eligius.st/~wizkid057/newstats/pushtxn.php
>>
>> 3) https://github.com/bitcoin/bitcoin/pull/3354 and
>>     https://github.com/bitcoin/bitcoin/pull/3883
>>
>> 4) https://bitcointalk.org/index.php?topic=251233.msg2669189#msg2669189
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From jan.moller at gmail.com  Wed Apr 23 04:29:22 2014
From: jan.moller at gmail.com (=?UTF-8?Q?Jan_M=C3=B8ller?=)
Date: Wed, 23 Apr 2014 06:29:22 +0200
Subject: [Bitcoin-development] Double-spending unconfirmed transactions
 is a lot easier than most people realise
In-Reply-To: <20140422213128.GB2578@savin>
References: <20140422213128.GB2578@savin>
Message-ID: <CABh=4qMk5RbM9pErQd9EsabWo8uP9u82yZOXk87AxdmAPq8H_Q@mail.gmail.com>

>Of course, this is an especially difficult case, as you must send the
>double-spend after the original transaction - normally just sending a
>non-standard tx to Eligius first would suffice. Note how this defeats
>Andresen's double-spend-relay patch(3) as proposed since the
>double-spend is a non-standard transaction.

Why can't you send a non-standard tx to Eligius first in this scenario??
Is it because LuckyBit is connected directly to Eligius, and does Eligius
relay (not only mine) non-standard transactions?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/169b24c1/attachment.html>

From aaron at axvigs.com  Tue Apr 22 13:51:42 2014
From: aaron at axvigs.com (Aaron Axvig)
Date: Tue, 22 Apr 2014 08:51:42 -0500
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CA+s+GJBWwstMjKR-A6RyyaA3S4E1d_qapMzyrFkgHNxp__XqDg@mail.gmail.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>	<CAPg+sBha=cUHOWcU29yLrC4WTy5EghOGpVGAcQ8S0fuMvpLeRw@mail.gmail.com>	<DFFB1B2C-F10B-4CF7-9D01-F6A27F9FA229@bitsofproof.com>	<5353ECDF.6090903@gmail.com>	<CAB+qUq6iZovMftT+cLbQ63UN=QEmFwGsmUUyWiivSRrMaaDVZg@mail.gmail.com>
	<CA+s+GJBWwstMjKR-A6RyyaA3S4E1d_qapMzyrFkgHNxp__XqDg@mail.gmail.com>
Message-ID: <BLU406-EAS319EB73C2094DBD7D04D981D4590@phx.gbl>

That piece of horse equipment is called a bit in the US too.  But the point
stands: most people don't use "bit" on a daily basis other than referring to
"a little bit of <something>."

-----Original Message-----
From: Wladimir [mailto:laanwj at gmail.com] 
Sent: Sunday, April 20, 2014 11:27 AM
To: Chris Pacia
Cc: Bitcoin Dev
Subject: Re: [Bitcoin-development] "bits": Unit of account

On Sun, Apr 20, 2014 at 6:19 PM, Chris Pacia <ctpacia at gmail.com> wrote:
> The term bit is really only overloaded for those who are techy. 95% of 
> the population never uses the term bit in their daily lives and I 
> doubt most could even name one use of the term.
> Plus bit used to be a unit of money way back when, so this is kind of 
> reclaiming it. I think it's a great fit.

That's a very anglocentric way of thinking.

Here in the Netherlands, a "bit" is something you put in a horses's mouth.
It's also used as imported word (in the information sense).
We've never used the term for money.

Wladimir

----------------------------------------------------------------------------
--
Learn Graph Databases - Download FREE O'Reilly Book "Graph Databases" is the
definitive new guide to graph databases and their applications. Written by
three acclaimed leaders in the field, this first edition is now available.
Download your free book today!
http://p.sf.net/sfu/NeoTech
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From tamas at bitsofproof.com  Wed Apr 23 05:33:32 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Wed, 23 Apr 2014 07:33:32 +0200
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
	Sharing of Bitcoin private keys
In-Reply-To: <CAAS2fgR5ciUeFonOXBD1d9b_inOuxQKJ-LaoGmoyjoeQ_KxQxQ@mail.gmail.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>
	<1927948.OEZHQcsQ9n@crushinator> <2025496.b5Y3n7qx8B@crushinator>
	<1582E990-4E14-4EF7-9C9C-AA505B815104@bitsofproof.com>
	<53568B87.8040009@monetize.io>
	<11528A13-5D66-4D2B-BEE0-1C26F9987BC8@bitsofproof.com>
	<CABh=4qPsR1YbhJDeAPjr37Zjqawo9ZFAH43scFnEg7p9a7EkeQ@mail.gmail.com>
	<F292CC2F-BAA7-45ED-801E-1475D94632AF@bitsofproof.com>
	<CAAS2fgR5ciUeFonOXBD1d9b_inOuxQKJ-LaoGmoyjoeQ_KxQxQ@mail.gmail.com>
Message-ID: <621AAD7D-FDC0-4C3C-B810-8C1F0B088586@bitsofproof.com>

So you agree, that SSS should not contain specific flag for testnet?

Or for that matter not even BIP32 needs them since it is not an address to send to.

Regards,

Tamas Blummer
http://bitsofproof.com

On 22.04.2014, at 20:46, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> Testnet is not normally addressed in BIPs at all, except for soft fork
> bips that had compressed deployment schedules on testnet.  For address
> like specification we have always used a version byte and there is a
> common encoding for version bytes that flags the network ID in the
> byte.
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/80731794/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/80731794/attachment.sig>

From gmaxwell at gmail.com  Wed Apr 23 06:16:25 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 22 Apr 2014 23:16:25 -0700
Subject: [Bitcoin-development] Presenting a BIP for Shamir's Secret
 Sharing of Bitcoin private keys
In-Reply-To: <621AAD7D-FDC0-4C3C-B810-8C1F0B088586@bitsofproof.com>
References: <CAC7yFxSE8-TWPN-kuFiqdPKMDuprbiVJi7-z-ym+AUyA_f-xJw@mail.gmail.com>
	<CABh=4qNaJht-MnnjEguZ=UOuXN3uQ-s4-dkDUVErbHj6W44J_g@mail.gmail.com>
	<1927948.OEZHQcsQ9n@crushinator> <2025496.b5Y3n7qx8B@crushinator>
	<1582E990-4E14-4EF7-9C9C-AA505B815104@bitsofproof.com>
	<53568B87.8040009@monetize.io>
	<11528A13-5D66-4D2B-BEE0-1C26F9987BC8@bitsofproof.com>
	<CABh=4qPsR1YbhJDeAPjr37Zjqawo9ZFAH43scFnEg7p9a7EkeQ@mail.gmail.com>
	<F292CC2F-BAA7-45ED-801E-1475D94632AF@bitsofproof.com>
	<CAAS2fgR5ciUeFonOXBD1d9b_inOuxQKJ-LaoGmoyjoeQ_KxQxQ@mail.gmail.com>
	<621AAD7D-FDC0-4C3C-B810-8C1F0B088586@bitsofproof.com>
Message-ID: <CAAS2fgTyndBG=airHoAcW4W2WgFZ61THXP4JGuUQCSWV99tCtg@mail.gmail.com>

On Tue, Apr 22, 2014 at 10:33 PM, Tamas Blummer <tamas at bitsofproof.com> wrote:
> So you agree, that SSS should not contain specific flag for testnet?
>
> Or for that matter not even BIP32 needs them since it is not an address to
> send to.

I think the convention we have so far is that addresses and address
relate thing we share normally contain an opaque 'version' identifier
which we use to identify the purpose for the data (E.g. network
meaning, etc.) and I think its a generally reasonable custom.



From mark at monetize.io  Wed Apr 23 06:35:06 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Tue, 22 Apr 2014 23:35:06 -0700
Subject: [Bitcoin-development] Double-spending unconfirmed transactions
 is a lot easier than most people realise
In-Reply-To: <CABh=4qMk5RbM9pErQd9EsabWo8uP9u82yZOXk87AxdmAPq8H_Q@mail.gmail.com>
References: <20140422213128.GB2578@savin>
	<CABh=4qMk5RbM9pErQd9EsabWo8uP9u82yZOXk87AxdmAPq8H_Q@mail.gmail.com>
Message-ID: <53575F1A.2000504@monetize.io>



On 04/22/2014 09:29 PM, Jan M?ller wrote:
>>Of course, this is an especially difficult case, as you must send the
>>double-spend after the original transaction - normally just sending a
>>non-standard tx to Eligius first would suffice. Note how this defeats
>>Andresen's double-spend-relay patch(3) as proposed since the
>>double-spend is a non-standard transaction.
> 
> Why can't you send a non-standard tx to Eligius first in this scenario??
> Is it because LuckyBit is connected directly to Eligius, and does
> Eligius relay (not only mine) non-standard transactions?
> 

Because you only want to double-spend if you loss the bet. If you tried
to double-spend every bet, there'd be no point :)



From mike at plan99.net  Wed Apr 23 07:55:30 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 23 Apr 2014 09:55:30 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage Finney
	attacks
Message-ID: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>

Lately someone launched Finney attacks as a service (BitUndo). As a
reminder for newcomers, Finney attacks are where a miner secretly works on
a block containing a double spend. When they eventually find a block, they
run to the merchant and pay, then broadcast the block. In a simpler variant
of this attack you make purchases as normal with a modified wallet that
always submits a double spend to the service, and then N% of the time where
N is the percentage of overall hash power the dishonest miners have, you
get your money back minus their fee.

N does not need to be very high to render Bitcoin much less useful. Real
time transactions are very important. Although I never expected it when I
first started using Bitcoin, nowadays most of my purchases with it are for
food and drink. If Bitcoin could not support such purchases, I would use it
much less.
Even with their woeful security many merchants see <1-2% credit card
chargeback rates, and chargebacks can be disputed. In fact merchants win
about 40% of chargeback disputes. So if N was only, say, 5%, and there was
a large enough population of users who were systematically trying to
defraud merchants, we'd already be having worse security than magstripe
credit cards. EMV transactions have loss rates in the noise, so for
merchants who take those Bitcoin would be dramatically less secure.

The idea of discouraging blocks that perform Finney attacks by having
honest miners refuse to build on them has been proposed. But it has a
couple of problems:

   1. It's hard to automatically detect Finney attacks. Looking for blocks
   that contain unseen transactions that override the mempool doesn't work -
   the dishonest users could broadcast all their double spends once a Finney
   block was found and then broadcast the block immediately afterwards, thus
   making the block look like any other would in the presence of double spends.

   2. If they could be automatically identified, it possibly could be
   converted into a DoS on the network by broadcasting double spends in such a
   way that the system races, and every miner produces a block that looks like
   a Finney attack to some of the others. The chain would stop advancing.

   3. Miners who want to vote "no" on a block take a big risk, they could
   be on the losing side of the fork and end up wasting their work.

We can resolve these problems with a couple of tweaks:

   1. Dishonest blocks can be identified out of band, by having honest
   miners submit double spends against themselves to the service anonymously
   using a separate tool. When their own double spend appears they know the
   block is bad.

   2. Miners can vote to reallocate the coinbase value of bad blocks before
   they mature. If a majority of blocks leading up to maturity vote for
   reallocation, the value goes into a pot that subsequent blocks are allowed
   to claim for themselves. Thus there is no risk to voting "no" on a block,
   the work done by the Finney attacker is not wasted, and users do not have
   to suffer through huge reorgs.

This may seem a radical suggestion, but I think it's much less radical than
some of the others being thrown around.

The above approach works as long as the majority of hashpower is honest,
defined to mean, working to stop double spending. This is the same security
property as described in the white paper, thus this introduces no new
security assumptions. Note that assuming *all* miners are dishonest and are
willing to double spend automatically resolves the Bitcoin experiment as a
failure, because that would invalidate the entire theory upon which the
system is built. That doesn't mean the assumption is wrong! It may be that
an entirely unregulated market for double spending prevention cannot work
and the participants eventually all end up trashing the commons - but the
hope is that smart incentives can replace the traditional reliance on law
and regulation to avoid this.

The voting mechanism would only apply to coinbases, not arbitrary
transactions, thus it cannot be used to steal arbitrary users bitcoins. A
majority of miners can already reallocate coinbases by forking them out,
but this wastes energy and work presenting a significant discouragement to
vote unless you already know via some out of band mechanism that you have a
solid majority. Placing votes into the coinbase scriptSig as is done with
other things avoids that problem.

The identification of Finney blocks relies on miners to take explicit
action, like downloading and running a tool that submits votes via RPC. It
can be expected that double spending services would try to identify and
block the sentinel transactions, which is why it's better to have the code
that fights this arms race be out of process and developed externally to
Bitcoin Core itself, which should ultimately just enforce the new (forking)
rule change.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/82270925/attachment.html>

From danny.hamilton at gmail.com  Wed Apr 23 09:44:55 2014
From: danny.hamilton at gmail.com (Danny Hamilton)
Date: Wed, 23 Apr 2014 04:44:55 -0500
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <BLU406-EAS319EB73C2094DBD7D04D981D4590@phx.gbl>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>
	<CAPg+sBha=cUHOWcU29yLrC4WTy5EghOGpVGAcQ8S0fuMvpLeRw@mail.gmail.com>
	<DFFB1B2C-F10B-4CF7-9D01-F6A27F9FA229@bitsofproof.com>
	<5353ECDF.6090903@gmail.com>
	<CAB+qUq6iZovMftT+cLbQ63UN=QEmFwGsmUUyWiivSRrMaaDVZg@mail.gmail.com>
	<CA+s+GJBWwstMjKR-A6RyyaA3S4E1d_qapMzyrFkgHNxp__XqDg@mail.gmail.com>
	<BLU406-EAS319EB73C2094DBD7D04D981D4590@phx.gbl>
Message-ID: <CAJ=FHudD3uD7oYqHyhMQJaGH5GntfD0_mYZTKXU_pFTerdJuow@mail.gmail.com>

It seems to me that xbit is no more distinct or intuitive than ?bit. In
either case it's simply an arbitrary character in front of the word "bit".
Of course, for the majority of the world familiar with SI, the ? actually
adds additional meaning that is lost with the x.

Furthermore, given the multiple concerns voiced about the overuse of the
word "bit", ?BTC seems to solve the problem.

Since we are talking about how it would be displayed in software, we don't
need to be concerned about how people will pronounce it, or what the
nickname will be.  If most of the wallets start displaying amounts in ?BTC
quantities, it will be obvious that a ?BTC is a different magnitude than a
BTC.  Nobody is going to look at their 100,000 ?BTC balance and think they
have 100,000 BTC. People will immediately make the mental adjustment to the
new order of magnitude even if they don't specifically know that ? means
micro, or that micro means 1e-6.

Nicknames will form organically (much like buck, fin, large, k, grand, and
benny for U.S. currency), I've always been partial to milly (or millie) and
mike (or micky) as nicknames for mBTC and ?BTC.  I've personally used those
when speaking with people, and they seem to catch on pretty quickly.

As has already been mentioned, you're going to be hard pressed to find
software that denotes U.S. balances in "bucks".  There isn't any good
reason to be coding a nickname like "bit", "xbit", or "mike" into wallet
software.

-  Danny Hamilton


On Tue, Apr 22, 2014 at 8:51 AM, Aaron Axvig <aaron at axvigs.com> wrote:

> That piece of horse equipment is called a bit in the US too.  But the point
> stands: most people don't use "bit" on a daily basis other than referring
> to
> "a little bit of <something>."
>
> -----Original Message-----
> From: Wladimir [mailto:laanwj at gmail.com]
> Sent: Sunday, April 20, 2014 11:27 AM
> To: Chris Pacia
> Cc: Bitcoin Dev
> Subject: Re: [Bitcoin-development] "bits": Unit of account
>
> On Sun, Apr 20, 2014 at 6:19 PM, Chris Pacia <ctpacia at gmail.com> wrote:
> > The term bit is really only overloaded for those who are techy. 95% of
> > the population never uses the term bit in their daily lives and I
> > doubt most could even name one use of the term.
> > Plus bit used to be a unit of money way back when, so this is kind of
> > reclaiming it. I think it's a great fit.
>
> That's a very anglocentric way of thinking.
>
> Here in the Netherlands, a "bit" is something you put in a horses's mouth.
> It's also used as imported word (in the information sense).
> We've never used the term for money.
>
> Wladimir
>
>
> ----------------------------------------------------------------------------
> --
> Learn Graph Databases - Download FREE O'Reilly Book "Graph Databases" is
> the
> definitive new guide to graph databases and their applications. Written by
> three acclaimed leaders in the field, this first edition is now available.
> Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/d7919234/attachment.html>

From tamas at bitsofproof.com  Wed Apr 23 09:56:07 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Wed, 23 Apr 2014 11:56:07 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <CAJ=FHudD3uD7oYqHyhMQJaGH5GntfD0_mYZTKXU_pFTerdJuow@mail.gmail.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>
	<CAPg+sBha=cUHOWcU29yLrC4WTy5EghOGpVGAcQ8S0fuMvpLeRw@mail.gmail.com>
	<DFFB1B2C-F10B-4CF7-9D01-F6A27F9FA229@bitsofproof.com>
	<5353ECDF.6090903@gmail.com>
	<CAB+qUq6iZovMftT+cLbQ63UN=QEmFwGsmUUyWiivSRrMaaDVZg@mail.gmail.com>
	<CA+s+GJBWwstMjKR-A6RyyaA3S4E1d_qapMzyrFkgHNxp__XqDg@mail.gmail.com>
	<BLU406-EAS319EB73C2094DBD7D04D981D4590@phx.gbl>
	<CAJ=FHudD3uD7oYqHyhMQJaGH5GntfD0_mYZTKXU_pFTerdJuow@mail.gmail.com>
Message-ID: <F580FF7C-EFE5-4B14-95F7-6C6E0FAEEFB3@bitsofproof.com>

The problem is ?BTC that bit tries to solve. 

BTC, mBTC and ?BTC are just too similiar for enyone else than engineers. The mixed use of them leads to misunderstanding. 
I think adoption would benefit of a single unit with easily remembered and associated name that has no smaller than 1/100 fractions called satoshis.

Regards,

Tam?s Blummer
Founder, CEO

http://bitsofproof.com

On 23.04.2014, at 11:44, Danny Hamilton <danny.hamilton at gmail.com> wrote:

> It seems to me that xbit is no more distinct or intuitive than ?bit. In either case it's simply an arbitrary character in front of the word "bit".  Of course, for the majority of the world familiar with SI, the ? actually adds additional meaning that is lost with the x.
> 
> Furthermore, given the multiple concerns voiced about the overuse of the word "bit", ?BTC seems to solve the problem.
> 
> Since we are talking about how it would be displayed in software, we don't need to be concerned about how people will pronounce it, or what the nickname will be.  If most of the wallets start displaying amounts in ?BTC quantities, it will be obvious that a ?BTC is a different magnitude than a BTC.  Nobody is going to look at their 100,000 ?BTC balance and think they have 100,000 BTC. People will immediately make the mental adjustment to the new order of magnitude even if they don't specifically know that ? means micro, or that micro means 1e-6.
> 
> Nicknames will form organically (much like buck, fin, large, k, grand, and benny for U.S. currency), I've always been partial to milly (or millie) and mike (or micky) as nicknames for mBTC and ?BTC.  I've personally used those when speaking with people, and they seem to catch on pretty quickly.
> 
> As has already been mentioned, you're going to be hard pressed to find software that denotes U.S. balances in "bucks".  There isn't any good reason to be coding a nickname like "bit", "xbit", or "mike" into wallet software.
> 
> -  Danny Hamilton
> 
> 
> On Tue, Apr 22, 2014 at 8:51 AM, Aaron Axvig <aaron at axvigs.com> wrote:
> That piece of horse equipment is called a bit in the US too.  But the point
> stands: most people don't use "bit" on a daily basis other than referring to
> "a little bit of <something>."
> 
> -----Original Message-----
> From: Wladimir [mailto:laanwj at gmail.com]
> Sent: Sunday, April 20, 2014 11:27 AM
> To: Chris Pacia
> Cc: Bitcoin Dev
> Subject: Re: [Bitcoin-development] "bits": Unit of account
> 
> On Sun, Apr 20, 2014 at 6:19 PM, Chris Pacia <ctpacia at gmail.com> wrote:
> > The term bit is really only overloaded for those who are techy. 95% of
> > the population never uses the term bit in their daily lives and I
> > doubt most could even name one use of the term.
> > Plus bit used to be a unit of money way back when, so this is kind of
> > reclaiming it. I think it's a great fit.
> 
> That's a very anglocentric way of thinking.
> 
> Here in the Netherlands, a "bit" is something you put in a horses's mouth.
> It's also used as imported word (in the information sense).
> We've never used the term for money.
> 
> Wladimir
> 
> ----------------------------------------------------------------------------
> --
> Learn Graph Databases - Download FREE O'Reilly Book "Graph Databases" is the
> definitive new guide to graph databases and their applications. Written by
> three acclaimed leaders in the field, this first edition is now available.
> Download your free book today!
> http://p.sf.net/sfu/NeoTech
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform_______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/be82e058/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: email.png
Type: image/png
Size: 7120 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/be82e058/attachment.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/be82e058/attachment.sig>

From andyparkins at gmail.com  Wed Apr 23 09:57:53 2014
From: andyparkins at gmail.com (Andy Parkins)
Date: Wed, 23 Apr 2014 10:57:53 +0100
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
Message-ID: <201404231057.54387.andyparkins@gmail.com>

On Wednesday 23 Apr 2014 08:55:30 Mike Hearn wrote:

> Even with their woeful security many merchants see <1-2% credit card
> chargeback rates, and chargebacks can be disputed. In fact merchants win
> about 40% of chargeback disputes. So if N was only, say, 5%, and there
> was a large enough population of users who were systematically trying to
> defraud merchants, we'd already be having worse security than magstripe
> credit cards. EMV transactions have loss rates in the noise, so for
> merchants who take those Bitcoin would be dramatically less secure.

Just pedantry: 100% of credit card transactions _can_ be fradulantly charged 
back but arent.  In fact, only 2% are ever attempted.

If N was 5%, then only 5% of bitcoin transactions _could_ be fraudulantly 
"charged back"; so then why wouldn't only 2% of those bitcoin transactions 
be fraudulant too, just as in the CC case?

The comparison would then be 2% chargebacks for credit cards, equivalent to 
0.1% (5%*2%) for bitcoin.


Not that I think that makes anything else you say invalid.



Andy
-- 
Dr Andy Parkins
andyparkins at gmail.com



From mike at plan99.net  Wed Apr 23 11:07:25 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 23 Apr 2014 13:07:25 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <201404231057.54387.andyparkins@gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<201404231057.54387.andyparkins@gmail.com>
Message-ID: <CANEZrP0EYLjkrLnzqSbdTVaTZ_gSnmoOpByexgO9=wPm9Pk_Ng@mail.gmail.com>

>
> Just pedantry: 100% of credit card transactions _can_ be fradulantly
> charged
> back but arent.
>

If you do a chargeback the bank double checks this, investigates it and
people who repeatedly try and do fraudulent chargebacks get their accounts
terminated. It's not like your bank offers you a "reverse this payment"
button in the UI that always works, right?


> If N was 5%, then only 5% of bitcoin transactions _could_ be fraudulantly
> "charged back"; so then why wouldn't only 2% of those bitcoin transactions
> be fraudulant too, just as in the CC case?
>

If you attempt fraud against a bank, they know who you are and will come
after you in one way or another. But it's safe to assume that users of a
double spend service would be anonymous and the kind of merchants they go
after are not hassling their customers with strong ID checks, so there
would be no consequences for them. It's a game they can only win.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/f073fecc/attachment.html>

From andyparkins at gmail.com  Wed Apr 23 11:39:18 2014
From: andyparkins at gmail.com (Andy Parkins)
Date: Wed, 23 Apr 2014 12:39:18 +0100
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP0EYLjkrLnzqSbdTVaTZ_gSnmoOpByexgO9=wPm9Pk_Ng@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<201404231057.54387.andyparkins@gmail.com>
	<CANEZrP0EYLjkrLnzqSbdTVaTZ_gSnmoOpByexgO9=wPm9Pk_Ng@mail.gmail.com>
Message-ID: <201404231239.20202.andyparkins@gmail.com>

On Wednesday 23 Apr 2014 12:07:25 Mike Hearn wrote:
> > Just pedantry: 100% of credit card transactions _can_ be fradulantly
> > charged
> > back but arent.
> 
> If you do a chargeback the bank double checks this, investigates it and
> people who repeatedly try and do fraudulent chargebacks get their
> accounts terminated. It's not like your bank offers you a "reverse this
> payment" button in the UI that always works, right?

True; the effort of a chargeback is non-zero on credit cards; but that's my 
point: it's non-zero for bitcoin too.

> > If N was 5%, then only 5% of bitcoin transactions _could_ be
> > fraudulantly "charged back"; so then why wouldn't only 2% of those
> > bitcoin transactions be fraudulant too, just as in the CC case?
> 
> If you attempt fraud against a bank, they know who you are and will come
> after you in one way or another. But it's safe to assume that users of a
> double spend service would be anonymous and the kind of merchants they go
> after are not hassling their customers with strong ID checks, so there
> would be no consequences for them. It's a game they can only win.

You're still being unfair to bitcoin.  Not everyone who uses bitcoins will 
be dishonest.  The dishonest 5% hashing power is not going to be used in 
100% of any given merchants transactions.  That's all I'm saying.  You're 
original statement that we could end up in a position that bitcoin has a 
higher failure rate than credit cards seems unfair to me.

> if N was only, say, 5%, and there was a large enough population of users 
who were systematically trying to defraud merchants, we'd already be having 
worse security than magstripe credit cards.

"[If] there was a large enough population" -- why are bitcoin users more 
dishonest than credit card users?  Most people are honest, so it seems 
unlikely that that 5% attack surface would be used at 100%; or even 40% 
necessary to equal the 2% chargeback rate with CC.  

I really didn't want to get into an argument over this: all I'm saying is 
that things aren't as bad as you painted them.


Andy

-- 
Dr Andy Parkins
andyparkins at gmail.com



From mike at plan99.net  Wed Apr 23 11:45:34 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 23 Apr 2014 13:45:34 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <201404231239.20202.andyparkins@gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<201404231057.54387.andyparkins@gmail.com>
	<CANEZrP0EYLjkrLnzqSbdTVaTZ_gSnmoOpByexgO9=wPm9Pk_Ng@mail.gmail.com>
	<201404231239.20202.andyparkins@gmail.com>
Message-ID: <CANEZrP3w0XY_2bUG-+L57gMU2psicWu5dUv3O1S7hgaq_+8Xqg@mail.gmail.com>

>
> You're still being unfair to bitcoin.  Not everyone who uses bitcoins will
> be dishonest.  The dishonest 5% hashing power is not going to be used in
> 100% of any given merchants transactions.
>

OK, sure, let's say most Bitcoin users will be honest (we hope). But
unfortunately in a situation where fraud is possible users wouldn't
necessarily distribute evenly over transactions.

Back when I worked on Gmail, we did a little study where we selected a
random subset of email accounts from Nigeria and waited to see if they
received abuse reports, showed up on dating site blacklists etc. It turned
out about 2/3rds of them did. This obviously doesn't imply that 2/3rds of
all Nigerians are scammers, but unfortunately the few that are are
responsible for a disproportionate number of account creations.

If a merchant is selling something of value repeatedly, then a small number
of scammers can go back and try their luck over and over. I'm not sure how
many trades fall into such an exploitable category, though.

Also, there's the philosophical question of how honest people really are
when there's no consequences to their actions. For instance, if most people
were honest, then piracy would be not a big problem. But game studios that
have cracked DRM quite often report piracy rates of 95%, i.e. for every 5
sales they make, they get 100 people playing on their servers - the vast
majority of their users are not honest.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/8617479c/attachment.html>

From chris.dcosta at meek.io  Wed Apr 23 11:48:14 2014
From: chris.dcosta at meek.io (Chris D'Costa)
Date: Wed, 23 Apr 2014 13:48:14 +0200
Subject: [Bitcoin-development] "bits": Unit of account
In-Reply-To: <F580FF7C-EFE5-4B14-95F7-6C6E0FAEEFB3@bitsofproof.com>
References: <CAJKMfeQO6pyi5b-83FyMSHcq0Sa1QkP+RouQVBdCYPtXXboY8A@mail.gmail.com>
	<3A69904F-0A3D-42E9-9DE7-067874E710BB@bitsofproof.com>
	<CAPg+sBha=cUHOWcU29yLrC4WTy5EghOGpVGAcQ8S0fuMvpLeRw@mail.gmail.com>
	<DFFB1B2C-F10B-4CF7-9D01-F6A27F9FA229@bitsofproof.com>
	<5353ECDF.6090903@gmail.com>
	<CAB+qUq6iZovMftT+cLbQ63UN=QEmFwGsmUUyWiivSRrMaaDVZg@mail.gmail.com>
	<CA+s+GJBWwstMjKR-A6RyyaA3S4E1d_qapMzyrFkgHNxp__XqDg@mail.gmail.com>
	<BLU406-EAS319EB73C2094DBD7D04D981D4590@phx.gbl>
	<CAJ=FHudD3uD7oYqHyhMQJaGH5GntfD0_mYZTKXU_pFTerdJuow@mail.gmail.com>
	<F580FF7C-EFE5-4B14-95F7-6C6E0FAEEFB3@bitsofproof.com>
Message-ID: <171EB811-3911-401A-9500-B3444EE53EF7@meek.io>

I have a rather off-beat suggestion. Perhaps decimal was not satoshi's intention.

In old English money 1 guinea is 21 shillings. I wonder if 1 million guineas is more or less the total number of bitcoins = 21 million shillings. There was also the notion of bits (two bob bits = 1 florin = 2 shillings). I quite like the idea as it's absolutely not expected.

Old English money is a funny mix of decimal and imperial (base12) measures but may have some interesting properties, one of which would be to have multiple names for overlapping "layers" not just the 2 or 3 that has been mentioned here and elsewhere.

I wonder in the long run if this will not just naturally occur anyway.

Regards

Chris D'Costa

Email: chris_dcosta at meek.io

Sent from my iPhone

> On 23 Apr 2014, at 11:56, Tamas Blummer <tamas at bitsofproof.com> wrote:
> 
> The problem is ?BTC that bit tries to solve. 
> 
> BTC, mBTC and ?BTC are just too similiar for enyone else than engineers. The mixed use of them leads to misunderstanding. 
> I think adoption would benefit of a single unit with easily remembered and associated name that has no smaller than 1/100 fractions called satoshis.
> 
> Regards,
> 
> Tam?s Blummer
> Founder, CEO
> <email.png>
> http://bitsofproof.com
> 
>> On 23.04.2014, at 11:44, Danny Hamilton <danny.hamilton at gmail.com> wrote:
>> 
>> It seems to me that xbit is no more distinct or intuitive than ?bit. In either case it's simply an arbitrary character in front of the word "bit".  Of course, for the majority of the world familiar with SI, the ? actually adds additional meaning that is lost with the x.
>> 
>> Furthermore, given the multiple concerns voiced about the overuse of the word "bit", ?BTC seems to solve the problem.
>> 
>> Since we are talking about how it would be displayed in software, we don't need to be concerned about how people will pronounce it, or what the nickname will be.  If most of the wallets start displaying amounts in ?BTC quantities, it will be obvious that a ?BTC is a different magnitude than a BTC.  Nobody is going to look at their 100,000 ?BTC balance and think they have 100,000 BTC. People will immediately make the mental adjustment to the new order of magnitude even if they don't specifically know that ? means micro, or that micro means 1e-6.
>> 
>> Nicknames will form organically (much like buck, fin, large, k, grand, and benny for U.S. currency), I've always been partial to milly (or millie) and mike (or micky) as nicknames for mBTC and ?BTC.  I've personally used those when speaking with people, and they seem to catch on pretty quickly.
>> 
>> As has already been mentioned, you're going to be hard pressed to find software that denotes U.S. balances in "bucks".  There isn't any good reason to be coding a nickname like "bit", "xbit", or "mike" into wallet software.
>> 
>> -  Danny Hamilton
>> 
>> 
>>> On Tue, Apr 22, 2014 at 8:51 AM, Aaron Axvig <aaron at axvigs.com> wrote:
>>> That piece of horse equipment is called a bit in the US too.  But the point
>>> stands: most people don't use "bit" on a daily basis other than referring to
>>> "a little bit of <something>."
>>> 
>>> -----Original Message-----
>>> From: Wladimir [mailto:laanwj at gmail.com]
>>> Sent: Sunday, April 20, 2014 11:27 AM
>>> To: Chris Pacia
>>> Cc: Bitcoin Dev
>>> Subject: Re: [Bitcoin-development] "bits": Unit of account
>>> 
>>> On Sun, Apr 20, 2014 at 6:19 PM, Chris Pacia <ctpacia at gmail.com> wrote:
>>> > The term bit is really only overloaded for those who are techy. 95% of
>>> > the population never uses the term bit in their daily lives and I
>>> > doubt most could even name one use of the term.
>>> > Plus bit used to be a unit of money way back when, so this is kind of
>>> > reclaiming it. I think it's a great fit.
>>> 
>>> That's a very anglocentric way of thinking.
>>> 
>>> Here in the Netherlands, a "bit" is something you put in a horses's mouth.
>>> It's also used as imported word (in the information sense).
>>> We've never used the term for money.
>>> 
>>> Wladimir
>>> 
>>> ----------------------------------------------------------------------------
>>> --
>>> Learn Graph Databases - Download FREE O'Reilly Book "Graph Databases" is the
>>> definitive new guide to graph databases and their applications. Written by
>>> three acclaimed leaders in the field, this first edition is now available.
>>> Download your free book today!
>>> http://p.sf.net/sfu/NeoTech
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>> 
>>> ------------------------------------------------------------------------------
>>> Start Your Social Network Today - Download eXo Platform
>>> Build your Enterprise Intranet with eXo Platform Software
>>> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
>>> Get Started Now And Turn Your Intranet Into A Collaboration Platform
>>> http://p.sf.net/sfu/ExoPlatform
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
>> ------------------------------------------------------------------------------
>> Start Your Social Network Today - Download eXo Platform
>> Build your Enterprise Intranet with eXo Platform Software
>> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
>> Get Started Now And Turn Your Intranet Into A Collaboration Platform
>> http://p.sf.net/sfu/ExoPlatform_______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/9fdf8596/attachment.html>

From christophe.biocca at gmail.com  Wed Apr 23 12:43:56 2014
From: christophe.biocca at gmail.com (Christophe Biocca)
Date: Wed, 23 Apr 2014 08:43:56 -0400
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
Message-ID: <CANOOu=-9ngzfdzhred2hRkH2Zx=wfBXH0qd29xrxdcY+43AeTg@mail.gmail.com>

Just a few issues with the idea as it currently stands:

1. This provides a very strong incentive to always vote for
reallocating a block if it isn't yours, regardless of whether it's bad
or not (there's a positive expected return to voting to reallocate
coinbases from other miners). The incentive is bigger the more hash
power you have. You can partially address this by:
    a) Requiring supermajorities
    b) Requiring a vote to include proof of a double spend (that's not
a very strong safeguard, since anyone can create them after the fact
if one of their own transactions has been included).
    c) Burning, rather than reallocating, the coins. Miners' immediate
incentive to attack honest pools is much reduced.

2. BitUndo gets paid using additional txouts in the double-spend
transaction, no by miner's fees. This means that the coinbase
transaction will represent a smaller and smaller share of their
revenues over time (however if the total honest transaction fees they
get in their block are high enough, the risk of losing those might
still be enough).

On Wed, Apr 23, 2014 at 3:55 AM, Mike Hearn <mike at plan99.net> wrote:
> Lately someone launched Finney attacks as a service (BitUndo). As a reminder
> for newcomers, Finney attacks are where a miner secretly works on a block
> containing a double spend. When they eventually find a block, they run to
> the merchant and pay, then broadcast the block. In a simpler variant of this
> attack you make purchases as normal with a modified wallet that always
> submits a double spend to the service, and then N% of the time where N is
> the percentage of overall hash power the dishonest miners have, you get your
> money back minus their fee.
>
> N does not need to be very high to render Bitcoin much less useful. Real
> time transactions are very important. Although I never expected it when I
> first started using Bitcoin, nowadays most of my purchases with it are for
> food and drink. If Bitcoin could not support such purchases, I would use it
> much less.
> Even with their woeful security many merchants see <1-2% credit card
> chargeback rates, and chargebacks can be disputed. In fact merchants win
> about 40% of chargeback disputes. So if N was only, say, 5%, and there was a
> large enough population of users who were systematically trying to defraud
> merchants, we'd already be having worse security than magstripe credit
> cards. EMV transactions have loss rates in the noise, so for merchants who
> take those Bitcoin would be dramatically less secure.
>
> The idea of discouraging blocks that perform Finney attacks by having honest
> miners refuse to build on them has been proposed. But it has a couple of
> problems:
>
> It's hard to automatically detect Finney attacks. Looking for blocks that
> contain unseen transactions that override the mempool doesn't work - the
> dishonest users could broadcast all their double spends once a Finney block
> was found and then broadcast the block immediately afterwards, thus making
> the block look like any other would in the presence of double spends.
>
> If they could be automatically identified, it possibly could be converted
> into a DoS on the network by broadcasting double spends in such a way that
> the system races, and every miner produces a block that looks like a Finney
> attack to some of the others. The chain would stop advancing.
>
> Miners who want to vote "no" on a block take a big risk, they could be on
> the losing side of the fork and end up wasting their work.
>
> We can resolve these problems with a couple of tweaks:
>
> Dishonest blocks can be identified out of band, by having honest miners
> submit double spends against themselves to the service anonymously using a
> separate tool. When their own double spend appears they know the block is
> bad.
>
> Miners can vote to reallocate the coinbase value of bad blocks before they
> mature. If a majority of blocks leading up to maturity vote for
> reallocation, the value goes into a pot that subsequent blocks are allowed
> to claim for themselves. Thus there is no risk to voting "no" on a block,
> the work done by the Finney attacker is not wasted, and users do not have to
> suffer through huge reorgs.
>
> This may seem a radical suggestion, but I think it's much less radical than
> some of the others being thrown around.
>
> The above approach works as long as the majority of hashpower is honest,
> defined to mean, working to stop double spending. This is the same security
> property as described in the white paper, thus this introduces no new
> security assumptions. Note that assuming all miners are dishonest and are
> willing to double spend automatically resolves the Bitcoin experiment as a
> failure, because that would invalidate the entire theory upon which the
> system is built. That doesn't mean the assumption is wrong! It may be that
> an entirely unregulated market for double spending prevention cannot work
> and the participants eventually all end up trashing the commons - but the
> hope is that smart incentives can replace the traditional reliance on law
> and regulation to avoid this.
>
> The voting mechanism would only apply to coinbases, not arbitrary
> transactions, thus it cannot be used to steal arbitrary users bitcoins. A
> majority of miners can already reallocate coinbases by forking them out, but
> this wastes energy and work presenting a significant discouragement to vote
> unless you already know via some out of band mechanism that you have a solid
> majority. Placing votes into the coinbase scriptSig as is done with other
> things avoids that problem.
>
> The identification of Finney blocks relies on miners to take explicit
> action, like downloading and running a tool that submits votes via RPC. It
> can be expected that double spending services would try to identify and
> block the sentinel transactions, which is why it's better to have the code
> that fights this arms race be out of process and developed externally to
> Bitcoin Core itself, which should ultimately just enforce the new (forking)
> rule change.
>
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From mike at plan99.net  Wed Apr 23 12:51:24 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 23 Apr 2014 14:51:24 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANOOu=-9ngzfdzhred2hRkH2Zx=wfBXH0qd29xrxdcY+43AeTg@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CANOOu=-9ngzfdzhred2hRkH2Zx=wfBXH0qd29xrxdcY+43AeTg@mail.gmail.com>
Message-ID: <CANEZrP1womQueQpmFJBEG6RTWMR+GJg+uL2DX1HcnPDk0Q35rA@mail.gmail.com>

On Wed, Apr 23, 2014 at 2:43 PM, Christophe Biocca <
christophe.biocca at gmail.com> wrote:

> 1. This provides a very strong incentive to always vote for
> reallocating a block if it isn't yours


If everyone votes to reallocate everyone elses blocks all the time, then
you'd end up losing your own coins too, so this doesn't seem like a
workable strategy.


>     a) Requiring supermajorities
>     c) Burning, rather than reallocating, the coins. Miners' immediate
> incentive to attack honest pools is much reduced.
>

I'm OK with burning actually. The total amount of coins in the system
essentially defines its maximum price resolution. Ideally we'd not lose
resolution, but it's less important than having a system that does actually
work. Moreover, this sort of system is like double spending defence itself
- if it does work, it doesn't need to actually be done very frequently
because people know the safeguards work and don't try. So in practice total
loss of resolution should be limited.


> 2. BitUndo gets paid using additional txouts in the double-spend
> transaction, no by miner's fees.


Right. It's indeed an assumption that block rewards matter to miners, even
the ones that have double spend revenues.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/53570a01/attachment.html>

From andyparkins at gmail.com  Wed Apr 23 13:21:53 2014
From: andyparkins at gmail.com (Andy Parkins)
Date: Wed, 23 Apr 2014 14:21:53 +0100
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP3w0XY_2bUG-+L57gMU2psicWu5dUv3O1S7hgaq_+8Xqg@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<201404231239.20202.andyparkins@gmail.com>
	<CANEZrP3w0XY_2bUG-+L57gMU2psicWu5dUv3O1S7hgaq_+8Xqg@mail.gmail.com>
Message-ID: <201404231421.53349.andyparkins@gmail.com>

On Wednesday 23 Apr 2014 12:45:34 Mike Hearn wrote:

> OK, sure, let's say most Bitcoin users will be honest (we hope). But
> unfortunately in a situation where fraud is possible users wouldn't
> necessarily distribute evenly over transactions.

That's true, but even in the worst that that 5% hashing power attack means 
that 95% of the time, your attack fails.  That means you end up paying for 
what you bought.  Also, you're again changing the comparison basis -- your 
CC figures were for the entire industry, not the most badly affected 
merchant.  You can't say "one particular bitcoin merchant suffers 5% fraud, 
therefore that's worse than the 2% fraud averaged across all CC merchants".

> If a merchant is selling something of value repeatedly, then a small
> number of scammers can go back and try their luck over and over. I'm not
> sure how many trades fall into such an exploitable category, though.
>
> Also, there's the philosophical question of how honest people really are
> when there's no consequences to their actions. For instance, if most

There _are_ consequences though: 95% of the time, you end up buying 
something and paying for it.

Viewed another way, if I buy something repeatedly from an at risk merchant 
(and there won't be many; as you pointed out, mail order is completely 
unaffected as you can simply wait for your confirmations) that costs, say 
0.01 BTC per item, then I have to buy 100 of them to get 5 of them for free.  
Do I really want 100 of them?  Even if I do want them, then I've had to 
supply capital of 1 BTC to earn 0.05 BTC in kind.

If what I'm buying is another form of money (as with exchanges, or perhaps 
casinos) when that "in kind" is just as liquid as the BTC, then fair enough, 
there is a risk, but that just incentivises the merchant in those cases to 
not allow withdrawal/deposit until 6 confirmations have been received.  
Those merchants then move from "at risk" to "not at risk".

I'm still struggling to see how bitcoin could ever be as bad as CC fraud.



Andy

-- 
Dr Andy Parkins
andyparkins at gmail.com



From mike at plan99.net  Wed Apr 23 13:31:38 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 23 Apr 2014 15:31:38 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <201404231421.53349.andyparkins@gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<201404231239.20202.andyparkins@gmail.com>
	<CANEZrP3w0XY_2bUG-+L57gMU2psicWu5dUv3O1S7hgaq_+8Xqg@mail.gmail.com>
	<201404231421.53349.andyparkins@gmail.com>
Message-ID: <CANEZrP1A_yb8JB3hdrVYPrDrY0VXEVuH34rKTex6R1wRiVkepg@mail.gmail.com>

>
> There _are_ consequences though: 95% of the time, you end up buying
> something and paying for it.


Yeah, I was imagining a situation in which people who use Bitcoin regularly
do buy things they actually want, but wouldn't say no to occasionally
getting them for free (think coffees at starbucks etc). So if their double
spend fails, no big deal, they're no worse off than if they didn't try.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/8314bf4a/attachment.html>

From justusranvier at gmail.com  Wed Apr 23 14:52:04 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Wed, 23 Apr 2014 14:52:04 +0000
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
Message-ID: <5357D394.7010908@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 04/23/2014 07:55 AM, Mike Hearn wrote:

> 2. Miners can vote to reallocate the coinbase value of bad blocks
> before they mature. If a majority of blocks leading up to maturity
> vote for reallocation, the value goes into a pot that subsequent
> blocks are allowed to claim for themselves. Thus there is no risk
> to voting "no" on a block, the work done by the Finney attacker is
> not wasted, and users do not have to suffer through huge reorgs.

If enough miners don't like a block that has been mined, they can all
work to orphan it without any change to the protocol whatsoever.

Why are proposing this a change to the network that allows miners to
vote to disregard output scripts, instead of creating an out of band
network via which miners can coordinate actions using the capabilities
the protocol already allows?

Once you've changed the network such that it is no longer a machine
that faithfully processes scripts, and instead is a machine via which
a set of controllers can decide which valid scripts will be honored
and which ones will not, what will be the next proposed condition
under which the miners can confiscate and redistribute balances?

- -- 
Support online privacy by using email encryption whenever possible.
Learn how here: http://www.youtube.com/watch?v=bakOKJFtB-k
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTV9OUAAoJECoisBQbQ4v0XE8H+QGcOc3JiYsS2/xoR8SqpyEx
gDChDFvhaao9qMPhfxBG0bso+4ITZ5c3mJawkqdBm3ZZPeygt1fLqvxe4c1AWocH
YCf9CyZJlm8KsDJOqorja5o/6oXjH5xiGgVi042Jhb9wj/aGNPFvL9X6DGhEeFKQ
uXFN4wTSPViEOryVqo3vEFh3md9Y1AIqcvc/b5M+EAtvaAD33/ALnzY9CNKymQZE
o0JGLEfwamKkZ+QA0mTfeDheJe9kj0KOQhXqOG/x3NlKCFVpmGz3daWZHJCFMDb4
+RmDwoxOKvXxgveXu9w4d3bc3SQZ75hygmeMvVQwZggia31wqrHtsWLqIiFhVnU=
=hpdg
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x1B438BF4.asc
Type: application/pgp-keys
Size: 21191 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/6ba05543/attachment.bin>

From alex.mizrahi at gmail.com  Wed Apr 23 15:04:00 2014
From: alex.mizrahi at gmail.com (Alex Mizrahi)
Date: Wed, 23 Apr 2014 18:04:00 +0300
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
Message-ID: <CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>

This is outright ridiculous.

Zero-confirmation double-spending is a small problem, and possible
solutions are known. (E.g. trusted third party + multi-sig addresses for
small-value transactions.)

On the other hand, protocol changes like described above might have
game-theoretical implications which are non-trivial and hard to understand.

The above approach works as long as the majority of hashpower is honest,
> defined to mean, working to stop double spending. This is the same security
> property as described in the white paper, thus this introduces no new
> security assumptions.
>

No. Bitcoin should work if miners are merely individually rational, i.e.
they try to maximize their pay-offs without colluding with others.

I guess word "honest" might have different meanings, that can be a source
of confusing.
1. Honest -- not trying to destroy bitcoin
2. Honest -- following rules which are not required by the protocol
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/65999bd2/attachment.html>

From pete at petertodd.org  Wed Apr 23 15:05:55 2014
From: pete at petertodd.org (Peter Todd)
Date: Wed, 23 Apr 2014 11:05:55 -0400
Subject: [Bitcoin-development] Economics of information propagation
In-Reply-To: <52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
References: <mailman.122233.1398039406.2207.bitcoin-development@lists.sourceforge.net>
	<52CDA01B-13BF-4BB8-AC9A-5FBBB324FD15@sant.ox.ac.uk>
Message-ID: <20140423150555.GE19430@savin>

On Mon, Apr 21, 2014 at 01:30:28AM +0000, Jonathan Levin wrote:

CC'ing bitcoin-research - may be more appropriate to move the discussion
there as this discussion is delving into future scenarios.

> Hi all,
> 
> I am a post-graduate economist writing a paper on the incentives of mining. Even though this issue has been debated in the forums, I think it is important to get a sense of the magnitude of the incentives at play and determine what implications this has for the transaction fee market.
> 
> As it has been pointed out before the marginal cost for miners does not stem from the private cost of the miner validating the signature and including it in the list of transactions in the block but rather the increased probability that the block will be orphaned as a result of slower propagation. Gavin did some back of the envelope worst case calculations but these overstated the effect of propagation delay. The reason being the 80ms additional time to reach 50% of the network is spread throughout the time that it takes to reach 50% of the network. During this time miners are notified about the block and treat it as the longest chain and hence are no longer mining with the aim to produce a competing block. 
> 
> I am looking to calculate the change in the curvature of the probability mass function that a block hears about my block in any given second as a function of the block size. Although there is likely to be significant noise here, there seems to be some stable linear relationships with the time that it takes to reach different quartiles. Has anyone done this? I have used some empirical data that I am happy to share but ideally I would like analytical solutions.
> 
> Following Peter Todd, I also find the concerning result that propagation delays results in increasing returns to higher shares of the hashing power. Indeed it may well be in the interest of large pools to publish large blocks to increase propagation delays on the network which would increase orphan rates particularly for small miners and miners that have not invested in sufficient bandwidth / connectivity. If a small miner hears about a block after 4.5 seconds on average there is a 0.7% chance that there is already a block in circulation.  Large miners can increase the time that it takes for small miners to hear about blocks by increasing the size of their blocks. For example if the time that it takes for a small miner to hear about the block goes to 12 seconds there is a 2 percent chance there is already a block in circulation for the small miner. There is also a 1.2% chance that there will be a competing block published after a small miner propagates in the time that it gets to full propagation. Am I getting this right that the probability of a miner?s block being orphaned is comprised of the probability that the miner was not the first to find a valid block and the probability that given they are first, someone else in the absence of hearing about it finds a competing valid block. 
> 
> One question is: Are orphans probabilistic and only resolved after hearing about a new block that lengthens the chain or is there a way to know in advance?

They're probabilistic; mining is progress free so per unit hashing power
every miner has an equal chance of finding a block. As for resolution,
well, currently nodes (and miners) mine on the block they saw first; if
they learn about another block at the same height they stick to the
block they are already mining on. First seen at same height is probably
generally economically rational as the first block you see probably
propagated to the most nodes, although tweaks to that are probably
possible.

> Is it frowned upon to mine on top of a block that you have just found even though it is very likely going to end up an orphan?

Not at all, in fact mining on top of the block is the best thing to do
because it *prevents* your block from ending up as an orphan. Basically
imagine I find block b1a, and you find conflicting block b1b. What I
need to do is find block b2a, which is on top of b1a, before you find
block b1b to avoid my block being orphaned. The best way to do that is
mining on top of my block - that's what's most rational for me.

> Would be happy to share the draft form of the paper and receive any feedback.

Sure thing.

> Finally, at coinometrics we are working on a modified client to capture information on network propagation and would invite any suggestions of any other useful statistics that would be useful in the development of software. 


So looking at the replies your post got in the past few days it looks
like there's some misinformation going around. First of all is the
question of how harmful it is if miners mine on top of blocks that they
haven't actually validated, and yes, that's extremely harmful. For
instance if I were an attacker I could mine an invalid block that makes
coins out of thin air and use it to defraud SPV-wallet-using clients;
everyone who is mining without validating is helping me succesfully pull
off that attack by increasing the chance I'll get enough confirms to
trick my target into thinking the coins are real. (remember I could have
stolen the hashing power by hacking into a pool)

Mark Friedenbach suggested headers first where the block header and
block contents are propagated around the network separately. What that
results in has a few different scenarios:

1) Fee's don't matter and miners aren't forced to validate

This is the scenario we're in right now. The block reward comprises the
supermajority of mining income, and it is possible to mine a block
without first validating the contents of the previous block. When a
miner receives a block header that extends the longest known blockchain
they can immediately switch to it and start mining.

Whether or not doing so is rational is just a matter of what's the
probability that the previous block was invalid? If it was, the miner
mining it just wasted 25BTC, $12.5k, so you can be almost sure it is
valid and you don't need to wait. Of course, if you then find a block,
you can pull the same trick all over again and the next guy might be
mining on top of two blocks they haven't validated, and so on.

Obviously this presents a very nasty failure mode if the majority of
miners follow this behavior and a block is invalid, or even just gets
lost. Similarly in the majority scenario there's no direct incentive to
actually propagate your blocks - they'll still get accepted to the main
chain anyway.

That said, small and large miners make roughly the same amount as the
block reward dominates and blocks of any size will get confirmations
fairly quickly.


2) Fee's do matter and miners aren't forced to validate

Now transaction fees represent a non-trivial portion of a miner's
income. Centralization incentives would depend on to what extent fees do
matter. Again, there's some nasty failure modes possible. That large,
slow-to-propagate blocks still get confirmed, yet small miners can't
mine transaction fees is likely a major centralization incentive.

3) Miners are forced to validate

Or at least, we can force miners to actually have the previous block.
Andrew Miller's Permacoin is one approach; some varients of UTXO
commitments have this as a side-effect too. On the one hand this solves
the really nasty failure modes that headers-first has; on the other hand
you're back to the centralization incentives we have right now.


What's important however to remember is that any attempt at saying
things like "[A]s soon as [Miners] receive and process the contents of
block A, they switch to that." - as Mark suggested(2) - doesn't belong
in an economic analysis as such rules are unenforcable. For instance
that'd suggest that in the forced-validation headers-first scenario a
large miner who received a block header, then found block themselves,
would switch to mining the block they *didn't* find simply because they
"got the header first". Obviously this is not economically rational for
them to do so they won't, leading to the same centralization incentives
as always.

As for why that's economically irrational: so the large miner finds that
second block and broadcasts it around the network. Do you the small
miner keep mining on the shorter chain just because the large miner
broke the gentlemans agreement to respect header times? Of course not,
time is relative and you have no idea whether or not anyone else is
doing so. If you mine on the shorter chain you're side is going to need
to find two blocks to catch up - not likely. Secondly you risk forking
the network due to a consensus failure, say by a divergent times the
headers were received.

1) http://cs.umd.edu/%7Eamiller/permacoin.pdf

-- 
'peter'[:-1]@petertodd.org
0000000000000000278031f86c71265f6eaf1fe9ce6cc831dc4f956676a7a7f7
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/084a5c8d/attachment.sig>

From mike at plan99.net  Wed Apr 23 15:07:40 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 23 Apr 2014 17:07:40 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <5357D394.7010908@gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<5357D394.7010908@gmail.com>
Message-ID: <CANEZrP0dxAOWxg8Nu9LqV1SGE1C1WD2m+EPhg3sFCnFQQVv4kQ@mail.gmail.com>

On Wed, Apr 23, 2014 at 4:52 PM, Justus Ranvier <justusranvier at gmail.com>wrote:

> If enough miners don't like a block that has been mined, they can all
> work to orphan it without any change to the protocol whatsoever.
>

As was already pointed out, yes. However this requires them to immediate
establish a majority consensus and be absolutely sure it really is the
majority. You suggest an out of band mechanism for that, but why is this
better than using the actual consensus mechanism you're trying to measure?


> Once you've changed the network such that it is no longer a machine
> that faithfully processes scripts


Bitcoin imposes far more rules than just execution of the scripting
language, many of which are entirely arbitrary and the result of
(controversial) human judgement, like the inflation schedule. You can't
claim Bitcoin implements only some kind of natural law.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/addd0c4f/attachment.html>

From mike at plan99.net  Wed Apr 23 15:09:39 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 23 Apr 2014 17:09:39 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>
Message-ID: <CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>

>
> No. Bitcoin should work if miners are merely individually rational, i.e.
> they try to maximize their pay-offs without colluding with others.
>

And it still would. Non-collusive miners cast votes based on the outcome of
their own attempts to double spend. If enough agree then they all agree
that the vote is binding.


> I guess word "honest" might have different meanings, that can be a source
> of confusing.
> 1. Honest -- not trying to destroy bitcoin
> 2. Honest -- following rules which are not required by the protocol
>

I'm using it in the same sense Satoshi used it. Honest miners work to
prevent double spends. That's the entire justification for their existence.
Miners that are deliberately trying to double spend are worse than useless.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/d4fe9367/attachment.html>

From pete at petertodd.org  Wed Apr 23 15:28:18 2014
From: pete at petertodd.org (Peter Todd)
Date: Wed, 23 Apr 2014 11:28:18 -0400
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>
Message-ID: <20140423152818.GF19430@savin>

On Wed, Apr 23, 2014 at 06:04:00PM +0300, Alex Mizrahi wrote:
> This is outright ridiculous.
> 
> Zero-confirmation double-spending is a small problem, and possible
> solutions are known. (E.g. trusted third party + multi-sig addresses for
> small-value transactions.)

Also replace-by-fee scorched earth.

> On the other hand, protocol changes like described above might have
> game-theoretical implications which are non-trivial and hard to understand.

To put it mildly. :) Beyond the obvious issues with adding mechanisms
for miners to vote on what blacklists they wish to apply, it's
interesting to consider how trying to make zeroconf transactions secure
directly is quite close to changing the block interval. Like the
blocksize that's a fundemental economic parameter of the system - how
low-latency and well connected you must be to be allowed to mine. Even
in a scheme where the punishment for allowing a double-spend was somehow
applied perfectly fairly, you'd still be favoring large well-connected
miners in a very similar way to reducing the block interval.

> The above approach works as long as the majority of hashpower is honest,
> > defined to mean, working to stop double spending. This is the same security
> > property as described in the white paper, thus this introduces no new
> > security assumptions.
> >
> 
> No. Bitcoin should work if miners are merely individually rational, i.e.
> they try to maximize their pay-offs without colluding with others.

It's worth noting that the academic efforts studying Bitcoin are
spending quite a bit of effort focused on the incentive compatibility of
various mechanisms in the protocol: https://github.com/citp/bitcoin-sok/issues/5

There's solid consensus in the academic community that Bitcoin can't
just depend on notions of "honesty" to work.

> I guess word "honest" might have different meanings, that can be a source
> of confusing.
> 1. Honest -- not trying to destroy bitcoin
> 2. Honest -- following rules which are not required by the protocol

What exactly those rules are is up for debate too. Right now if, say,
just 5% of Bitcoin miners were willing to accept Colored Coin
transactions you could still use Colored Coins. The other 95% may want
to block said transactions, but there's huge practical difficulties in
organizing a reorg and ensuring that everyone co-operates; miners have
strong incentives to defect if the consensus isn't assured as any miners
attempting to reorg are wasting their hashing power if it doesn't
succeed.

OTOH with a voting scheme the cost to propose that a specific block or a
transaction be blacklisted is much lower. In Mike's proposed scheme to
not just blacklist, but actually take coinbases it's downright
profitable. Rather than being a last resort option, it'll be easy for
miners to propose various things be blacklisted, if the vote goes
through, great, if it doesn't, no harm done. Obviously that makes
blacklists into a much more useful tool and greatly changes the
political landscape around them.

Remember, if you're operating a publicly known pool, and there's a
voting mechanism available to you to blacklist specific blocks, how are
you going to resist pressure from your local authorities to do just when
there's no cost to you to do so?

-- 
'peter'[:-1]@petertodd.org
0000000000000000278031f86c71265f6eaf1fe9ce6cc831dc4f956676a7a7f7
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/50cd1cfa/attachment.sig>

From kevinsisco61784 at gmail.com  Wed Apr 23 15:34:39 2014
From: kevinsisco61784 at gmail.com (Kevin)
Date: Wed, 23 Apr 2014 11:34:39 -0400
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
Message-ID: <5357DD8F.6050308@gmail.com>

On 4/23/2014 3:55 AM, Mike Hearn wrote:
> Lately someone launched Finney attacks as a service (BitUndo). As a 
> reminder for newcomers, Finney attacks are where a miner secretly 
> works on a block containing a double spend. When they eventually find 
> a block, they run to the merchant and pay, then broadcast the block. 
> In a simpler variant of this attack you make purchases as normal with 
> a modified wallet that always submits a double spend to the service, 
> and then N% of the time where N is the percentage of overall hash 
> power the dishonest miners have, you get your money back minus their fee.
>
> N does not need to be very high to render Bitcoin much less useful. 
> Real time transactions are very important. Although I never expected 
> it when I first started using Bitcoin, nowadays most of my purchases 
> with it are for food and drink. If Bitcoin could not support such 
> purchases, I would use it much less.
> Even with their woeful security many merchants see <1-2% credit card 
> chargeback rates, and chargebacks can be disputed. In fact merchants 
> win about 40% of chargeback disputes. So if N was only, say, 5%, and 
> there was a large enough population of users who were systematically 
> trying to defraud merchants, we'd already be having worse security 
> than magstripe credit cards. EMV transactions have loss rates in the 
> noise, so for merchants who take those Bitcoin would be dramatically 
> less secure.
>
> The idea of discouraging blocks that perform Finney attacks by having 
> honest miners refuse to build on them has been proposed. But it has a 
> couple of problems:
>
>  1. It's hard to automatically detect Finney attacks. Looking for
>     blocks that contain unseen transactions that override the mempool
>     doesn't work - the dishonest users could broadcast all their
>     double spends once a Finney block was found and then broadcast the
>     block immediately afterwards, thus making the block look like any
>     other would in the presence of double spends.
>
>  2. If they could be automatically identified, it possibly could be
>     converted into a DoS on the network by broadcasting double spends
>     in such a way that the system races, and every miner produces a
>     block that looks like a Finney attack to some of the others. The
>     chain would stop advancing.
>
>  3. Miners who want to vote "no" on a block take a big risk, they
>     could be on the losing side of the fork and end up wasting their work.
>
> We can resolve these problems with a couple of tweaks:
>
>  1. Dishonest blocks can be identified out of band, by having honest
>     miners submit double spends against themselves to the service
>     anonymously using a separate tool. When their own double spend
>     appears they know the block is bad.
>
>  2. Miners can vote to reallocate the coinbase value of bad blocks
>     before they mature. If a majority of blocks leading up to maturity
>     vote for reallocation, the value goes into a pot that subsequent
>     blocks are allowed to claim for themselves. Thus there is no risk
>     to voting "no" on a block, the work done by the Finney attacker is
>     not wasted, and users do not have to suffer through huge reorgs.
>
> This may seem a radical suggestion, but I think it's much less radical 
> than some of the others being thrown around.
>
> The above approach works as long as the majority of hashpower is 
> honest, defined to mean, working to stop double spending. This is the 
> same security property as described in the white paper, thus this 
> introduces no new security assumptions. Note that assuming 
> /all/ miners are dishonest and are willing to double spend 
> automatically resolves the Bitcoin experiment as a failure, because 
> that would invalidate the entire theory upon which the system is 
> built. That doesn't mean the assumption is wrong! It may be that an 
> entirely unregulated market for double spending prevention cannot work 
> and the participants eventually all end up trashing the commons - but 
> the hope is that smart incentives can replace the traditional reliance 
> on law and regulation to avoid this.
>
> The voting mechanism would only apply to coinbases, not arbitrary 
> transactions, thus it cannot be used to steal arbitrary users 
> bitcoins. A majority of miners can already reallocate coinbases by 
> forking them out, but this wastes energy and work presenting a 
> significant discouragement to vote unless you already know via some 
> out of band mechanism that you have a solid majority. Placing votes 
> into the coinbase scriptSig as is done with other things avoids that 
> problem.
>
> The identification of Finney blocks relies on miners to take explicit 
> action, like downloading and running a tool that submits votes via 
> RPC. It can be expected that double spending services would try to 
> identify and block the sentinel transactions, which is why it's better 
> to have the code that fights this arms race be out of process and 
> developed externally to Bitcoin Core itself, which should ultimately 
> just enforce the new (forking) rule change.
>
>
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
I have some questions:
1.  How can we work towards solving the double-spending problem?
2.  Is it possible to "scan" for double-spending and correct it?
3.  Is the network at large not secure enough?


-- 
Kevin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/e1e5bf4e/attachment.html>

From alex.mizrahi at gmail.com  Wed Apr 23 15:38:21 2014
From: alex.mizrahi at gmail.com (Alex Mizrahi)
Date: Wed, 23 Apr 2014 18:38:21 +0300
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>
	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>
Message-ID: <CAE28kUQqFJUJSiSV4PSF2QK04D3GuL1n2EF46Yo3o_-LYsgSTA@mail.gmail.com>

> And it still would. Non-collusive miners cast votes based on the outcome
> of their own attempts to double spend.
>

Individually rational strategy is to vote for coinbase reallocation on
every block.

Yes, in that case nobody will get reward. It is similar to prisoner's
dilemma: equilibrium has worst pay-off.
In practice that would mean that simple game-theoretic models are no longer
applicable, as they lead to absurd results.


> I'm using it in the same sense Satoshi used it. Honest miners work to
> prevent double spends. That's the entire justification for their existence.
> Miners that are deliberately trying to double spend are worse than useless.
>

Miners work to get rewards.
It absolutely doesn't matter whether they are deliberately trying to
double-spend or not: they won't be able to double-spend without a collusion.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/94b5255c/attachment.html>

From pieter.wuille at gmail.com  Wed Apr 23 15:41:26 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 23 Apr 2014 17:41:26 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <5357DD8F.6050308@gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<5357DD8F.6050308@gmail.com>
Message-ID: <CAPg+sBjY4fTTQqkn6=NyU5Fm-54-CnFRHLdEL=3KsUeXBofTqA@mail.gmail.com>

On Wed, Apr 23, 2014 at 5:34 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
> I have some questions:
> 1.  How can we work towards solving the double-spending problem?

We have this awesome technology that solves the double-spending
problem. It's called a blockchain. Of course, it only works when
transactions are actually in a block.

This issue is about double-spending preventing before they're
confirmed. This is (and has always been) just a best-effort mechanism
in the network.

> 2.  Is it possible to "scan" for double-spending and correct it?

That is what is being proposed here, by introducing a mechanism where
miners can vote to penalize other miners if they seem to allow (too
many?) double spends.

> 3.  Is the network at large not secure enough?

Not very relevant.

-- 
Pieter



From pete at petertodd.org  Wed Apr 23 15:55:31 2014
From: pete at petertodd.org (Peter Todd)
Date: Wed, 23 Apr 2014 11:55:31 -0400
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CAPg+sBjY4fTTQqkn6=NyU5Fm-54-CnFRHLdEL=3KsUeXBofTqA@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<5357DD8F.6050308@gmail.com>
	<CAPg+sBjY4fTTQqkn6=NyU5Fm-54-CnFRHLdEL=3KsUeXBofTqA@mail.gmail.com>
Message-ID: <20140423155531.GA32545@savin>

On Wed, Apr 23, 2014 at 05:41:26PM +0200, Pieter Wuille wrote:
> On Wed, Apr 23, 2014 at 5:34 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
> > I have some questions:
> > 1.  How can we work towards solving the double-spending problem?
> 
> We have this awesome technology that solves the double-spending
> problem. It's called a blockchain. Of course, it only works when
> transactions are actually in a block.
> 
> This issue is about double-spending preventing before they're
> confirmed. This is (and has always been) just a best-effort mechanism
> in the network.
> 
> > 2.  Is it possible to "scan" for double-spending and correct it?
> 
> That is what is being proposed here, by introducing a mechanism where
> miners can vote to penalize other miners if they seem to allow (too
> many?) double spends.

Worse, it's a mechanism where miners can vote to penalize other miners
for any reason at all. Nothing in the mechanism requires any proof that
a double-spend happened, nor can it.  Even if you require the simple
"two signatures for same output" mechanism, that just proves the
existance of a second signature, and says nothing at all about whether
or not that signature was ever broadcast on any network.

-- 
'peter'[:-1]@petertodd.org
0000000000000000278031f86c71265f6eaf1fe9ce6cc831dc4f956676a7a7f7
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/c189cccd/attachment.sig>

From christophe.biocca at gmail.com  Wed Apr 23 16:04:13 2014
From: christophe.biocca at gmail.com (Christophe Biocca)
Date: Wed, 23 Apr 2014 12:04:13 -0400
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CAE28kUQqFJUJSiSV4PSF2QK04D3GuL1n2EF46Yo3o_-LYsgSTA@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>
	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>
	<CAE28kUQqFJUJSiSV4PSF2QK04D3GuL1n2EF46Yo3o_-LYsgSTA@mail.gmail.com>
Message-ID: <CANOOu=85-6p-v8ZWPC=zGAY9TdjgR1WK_fOOJYnyFJMj+dvHUQ@mail.gmail.com>

It's not necessary that this "coinbase retribution" be either
profitable or risk-free for this scheme to work. I think we should
separate out the different layers of the proposal:

1. Attacking the coinbase instead of orphaning allows for 100 blocks'
time for a consensus to be reached, rather than 10 minutes. This
allows for human verification/intervention if needed (orphaning
decisions would almost always need to be automated, due to the short
timeframe). This is a useful insight, and I don't think it's been
brought up before.

2. The original specification of how it's done (redistribution, no
cost to voting) does seem exploitable. This can be fixed by reducing
the incentive (burning instead of redistributing) and/or adding a risk
to the orphaning attempts (a vote that fails destroys X bitcoins'
worth from each voting block's own coinbase). The incentives can be
tailored to mirror those of orphaning a block, to reduce the risk of
abuse. Then the only difference from orphaning are 1) More limited
rewriting of history (only the coinbase, vs all transactions in the
block), and 2) More time to coordinate a response.

3. This proposal may be used for things other than punishing
double-spend pools. In fact it might be used to punish miners for
doing anything a significant percentage of hashpower dislikes (large
OP_RETURNs, large blocks, gambling transactions, transactions banned
by a government). But we can make the threshold higher than 51%, so
that this doesn't turn into a significant risk (if 75% of hashpower is
willing to enforce a rule, we're already likely to see it enforced
through orphaning).

On Wed, Apr 23, 2014 at 11:38 AM, Alex Mizrahi <alex.mizrahi at gmail.com> wrote:
>
>>
>> And it still would. Non-collusive miners cast votes based on the outcome
>> of their own attempts to double spend.
>
>
> Individually rational strategy is to vote for coinbase reallocation on every
> block.
>
> Yes, in that case nobody will get reward. It is similar to prisoner's
> dilemma: equilibrium has worst pay-off.
> In practice that would mean that simple game-theoretic models are no longer
> applicable, as they lead to absurd results.
>
>>
>> I'm using it in the same sense Satoshi used it. Honest miners work to
>> prevent double spends. That's the entire justification for their existence.
>> Miners that are deliberately trying to double spend are worse than useless.
>
>
> Miners work to get rewards.
> It absolutely doesn't matter whether they are deliberately trying to
> double-spend or not: they won't be able to double-spend without a collusion.
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From ctpacia at gmail.com  Wed Apr 23 16:19:52 2014
From: ctpacia at gmail.com (Chris Pacia)
Date: Wed, 23 Apr 2014 12:19:52 -0400
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANOOu=85-6p-v8ZWPC=zGAY9TdjgR1WK_fOOJYnyFJMj+dvHUQ@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>
	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>
	<CAE28kUQqFJUJSiSV4PSF2QK04D3GuL1n2EF46Yo3o_-LYsgSTA@mail.gmail.com>
	<CANOOu=85-6p-v8ZWPC=zGAY9TdjgR1WK_fOOJYnyFJMj+dvHUQ@mail.gmail.com>
Message-ID: <CAB+qUq4-CZ6C9hBsc9vuH=Qz61_jEQNXm=djQfLKiv1SXMBNng@mail.gmail.com>

What is the advantage of this proposal over just orphaning the block with
double spends?

There's currently a set of rules which government what constitutes a valid
block. Miners don't build on blocks that don't accord with those rules out
of fear that a major won't follow and they will waste hashing power.

If there was a rule supported by the majority that considered blocks with
double spends (defined in some fashion) as invalid miners wouldn't build on
them for the same reason they wouldn't build on a block with a coinbase
over 25 btc, say. It seems that would accomplish the same without the other
issues.
On Apr 23, 2014 12:04 PM, "Christophe Biocca" <christophe.biocca at gmail.com>
wrote:

> It's not necessary that this "coinbase retribution" be either
> profitable or risk-free for this scheme to work. I think we should
> separate out the different layers of the proposal:
>
> 1. Attacking the coinbase instead of orphaning allows for 100 blocks'
> time for a consensus to be reached, rather than 10 minutes. This
> allows for human verification/intervention if needed (orphaning
> decisions would almost always need to be automated, due to the short
> timeframe). This is a useful insight, and I don't think it's been
> brought up before.
>
> 2. The original specification of how it's done (redistribution, no
> cost to voting) does seem exploitable. This can be fixed by reducing
> the incentive (burning instead of redistributing) and/or adding a risk
> to the orphaning attempts (a vote that fails destroys X bitcoins'
> worth from each voting block's own coinbase). The incentives can be
> tailored to mirror those of orphaning a block, to reduce the risk of
> abuse. Then the only difference from orphaning are 1) More limited
> rewriting of history (only the coinbase, vs all transactions in the
> block), and 2) More time to coordinate a response.
>
> 3. This proposal may be used for things other than punishing
> double-spend pools. In fact it might be used to punish miners for
> doing anything a significant percentage of hashpower dislikes (large
> OP_RETURNs, large blocks, gambling transactions, transactions banned
> by a government). But we can make the threshold higher than 51%, so
> that this doesn't turn into a significant risk (if 75% of hashpower is
> willing to enforce a rule, we're already likely to see it enforced
> through orphaning).
>
> On Wed, Apr 23, 2014 at 11:38 AM, Alex Mizrahi <alex.mizrahi at gmail.com>
> wrote:
> >
> >>
> >> And it still would. Non-collusive miners cast votes based on the outcome
> >> of their own attempts to double spend.
> >
> >
> > Individually rational strategy is to vote for coinbase reallocation on
> every
> > block.
> >
> > Yes, in that case nobody will get reward. It is similar to prisoner's
> > dilemma: equilibrium has worst pay-off.
> > In practice that would mean that simple game-theoretic models are no
> longer
> > applicable, as they lead to absurd results.
> >
> >>
> >> I'm using it in the same sense Satoshi used it. Honest miners work to
> >> prevent double spends. That's the entire justification for their
> existence.
> >> Miners that are deliberately trying to double spend are worse than
> useless.
> >
> >
> > Miners work to get rewards.
> > It absolutely doesn't matter whether they are deliberately trying to
> > double-spend or not: they won't be able to double-spend without a
> collusion.
> >
> >
> ------------------------------------------------------------------------------
> > Start Your Social Network Today - Download eXo Platform
> > Build your Enterprise Intranet with eXo Platform Software
> > Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> > Get Started Now And Turn Your Intranet Into A Collaboration Platform
> > http://p.sf.net/sfu/ExoPlatform
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/48d8a89a/attachment.html>

From mike at plan99.net  Wed Apr 23 16:21:56 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 23 Apr 2014 18:21:56 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANOOu=85-6p-v8ZWPC=zGAY9TdjgR1WK_fOOJYnyFJMj+dvHUQ@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>
	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>
	<CAE28kUQqFJUJSiSV4PSF2QK04D3GuL1n2EF46Yo3o_-LYsgSTA@mail.gmail.com>
	<CANOOu=85-6p-v8ZWPC=zGAY9TdjgR1WK_fOOJYnyFJMj+dvHUQ@mail.gmail.com>
Message-ID: <CANEZrP2FyCe68cqi4cpj=8EEr_7R+6TXuNZWtkgwkP2qwX1X4A@mail.gmail.com>

I think the cost to mines is the same as what's possible today, actually.

Consider a group of miners who wish to do this with no changes to the rule
set. They can coordinate out of band and figure out if they have a majority
of hashpower behind the decision to orphan a block, e.g. by signing a nonce
with their coinbase keys. If they reach quorum, then they begin work on a
parallel chain. Because they have majority they are guaranteed to
eventually win, though depending on luck it may take a while. Because of
this, assuming the external quorum system is public, the moment consensus
is reached the other miners should all abandon the existing branch and
start work on the parallel chain too, lest they waste work mining on a
branch that is surely doomed.

The end result would be that the chain stops making progress, disrupting
end users and generally creating uncertainty as the new chain is forged.
Also, miners who built on top of the orphaned block end up being punished
even if they did nothing wrong. Both these side effects are undesirable and
unnecessary.

So the more I think about this scheme, the more it seems like a simple
improvement on the current status quo. Miners can do what they could
already do, but with a more reliable in-band signalling mechanism that
doesn't require things like coinbase keys to be online, and them doing so
does not disrupt existing users or waste energy.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/97196da4/attachment.html>

From kevinsisco61784 at gmail.com  Wed Apr 23 16:33:56 2014
From: kevinsisco61784 at gmail.com (Kevin)
Date: Wed, 23 Apr 2014 12:33:56 -0400
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CANOOu=85-6p-v8ZWPC=zGAY9TdjgR1WK_fOOJYnyFJMj+dvHUQ@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>	<CAE28kUQqFJUJSiSV4PSF2QK04D3GuL1n2EF46Yo3o_-LYsgSTA@mail.gmail.com>
	<CANOOu=85-6p-v8ZWPC=zGAY9TdjgR1WK_fOOJYnyFJMj+dvHUQ@mail.gmail.com>
Message-ID: <5357EB74.1030806@gmail.com>

On 4/23/2014 12:04 PM, Christophe Biocca wrote:
> It's not necessary that this "coinbase retribution" be either
> profitable or risk-free for this scheme to work. I think we should
> separate out the different layers of the proposal:
>
> 1. Attacking the coinbase instead of orphaning allows for 100 blocks'
> time for a consensus to be reached, rather than 10 minutes. This
> allows for human verification/intervention if needed (orphaning
> decisions would almost always need to be automated, due to the short
> timeframe). This is a useful insight, and I don't think it's been
> brought up before.
>
> 2. The original specification of how it's done (redistribution, no
> cost to voting) does seem exploitable. This can be fixed by reducing
> the incentive (burning instead of redistributing) and/or adding a risk
> to the orphaning attempts (a vote that fails destroys X bitcoins'
> worth from each voting block's own coinbase). The incentives can be
> tailored to mirror those of orphaning a block, to reduce the risk of
> abuse. Then the only difference from orphaning are 1) More limited
> rewriting of history (only the coinbase, vs all transactions in the
> block), and 2) More time to coordinate a response.
>
> 3. This proposal may be used for things other than punishing
> double-spend pools. In fact it might be used to punish miners for
> doing anything a significant percentage of hashpower dislikes (large
> OP_RETURNs, large blocks, gambling transactions, transactions banned
> by a government). But we can make the threshold higher than 51%, so
> that this doesn't turn into a significant risk (if 75% of hashpower is
> willing to enforce a rule, we're already likely to see it enforced
> through orphaning).
>
> On Wed, Apr 23, 2014 at 11:38 AM, Alex Mizrahi <alex.mizrahi at gmail.com> wrote:
>>> And it still would. Non-collusive miners cast votes based on the outcome
>>> of their own attempts to double spend.
>>
>> Individually rational strategy is to vote for coinbase reallocation on every
>> block.
>>
>> Yes, in that case nobody will get reward. It is similar to prisoner's
>> dilemma: equilibrium has worst pay-off.
>> In practice that would mean that simple game-theoretic models are no longer
>> applicable, as they lead to absurd results.
>>
>>> I'm using it in the same sense Satoshi used it. Honest miners work to
>>> prevent double spends. That's the entire justification for their existence.
>>> Miners that are deliberately trying to double spend are worse than useless.
>>
>> Miners work to get rewards.
>> It absolutely doesn't matter whether they are deliberately trying to
>> double-spend or not: they won't be able to double-spend without a collusion.
>>
>> ------------------------------------------------------------------------------
>> Start Your Social Network Today - Download eXo Platform
>> Build your Enterprise Intranet with eXo Platform Software
>> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
>> Get Started Now And Turn Your Intranet Into A Collaboration Platform
>> http://p.sf.net/sfu/ExoPlatform
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
This all sounds verry restrictive.  Is it possible to do a "sweep" in 
order to "clean up" double spending?  Why punish miners for the sake of 
punishing them?


-- 
Kevin




From justusranvier at gmail.com  Wed Apr 23 17:19:48 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Wed, 23 Apr 2014 17:19:48 +0000
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CANEZrP0dxAOWxg8Nu9LqV1SGE1C1WD2m+EPhg3sFCnFQQVv4kQ@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>	<5357D394.7010908@gmail.com>
	<CANEZrP0dxAOWxg8Nu9LqV1SGE1C1WD2m+EPhg3sFCnFQQVv4kQ@mail.gmail.com>
Message-ID: <5357F634.2070300@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 04/23/2014 03:07 PM, Mike Hearn wrote:
> On Wed, Apr 23, 2014 at 4:52 PM, Justus Ranvier
> <justusranvier at gmail.com>wrote:
> 
>> If enough miners don't like a block that has been mined, they can
>> all work to orphan it without any change to the protocol
>> whatsoever.
>> 
> 
> As was already pointed out, yes. However this requires them to
> immediate establish a majority consensus and be absolutely sure it
> really is the majority. You suggest an out of band mechanism for
> that, but why is this better than using the actual consensus
> mechanism you're trying to measure?
> 
> 
>> Once you've changed the network such that it is no longer a
>> machine that faithfully processes scripts
> 
> 
> Bitcoin imposes far more rules than just execution of the
> scripting language, many of which are entirely arbitrary and the
> result of (controversial) human judgement, like the inflation
> schedule. You can't claim Bitcoin implements only some kind of
> natural law.
> 

I've formulated my replies to you and this proposal in a more public
venue, where such discussions of existential changes to the protocol
more rightfully belong:

http://bitcoinism.blogspot.com/2014/04/dirty-deals-in-smoke-filled-rooms.html

- -- 
Support online privacy by using email encryption whenever possible.
Learn how here: http://www.youtube.com/watch?v=bakOKJFtB-k
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTV/Y0AAoJECoisBQbQ4v08NcH/RfkaBAcS5eAKmwePqFuqIUN
xJKyIWo+tyY1vPYgArCVNsYr3YM8Wc5fkpqLNxCaM7S0/UmO8YaOdiD7XJyl7bF9
xAveyRt1mfHhx9x6hnPLYbe8WKqtjssSt6MglN8OXtf0EDO+eIxPj6Ya8OZ5YJrL
N8SMHaDs2J+qy3Qfec9keE5dyhYLNRC6PjYPVvrRAyqFSjt/8r4Z2a4r0oqvv3Yt
mYU1Tx+WoXMKXWY/Dwql1NLbuspZsOhPx/ncROZ5KVryCdrcW/GEIEQ6P0AIdHvT
TKYJzh1bdRDYDmVS5z8nUG6waxJwuWPStQo7UYdg26daRUw5qPzjO9SMLLFZPCU=
=OOck
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x1B438BF4.asc
Type: application/pgp-keys
Size: 21191 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/4c0947ef/attachment.bin>

From pieter.wuille at gmail.com  Wed Apr 23 17:42:58 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 23 Apr 2014 19:42:58 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAJna-Hib6umrkG0pAQzQvsyBMxOU6P675TURsVuWSU_ci9+X_A@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<F2C8C044-EF92-4CCE-9235-28CA7FCE3526@bitsofproof.com>
	<CAJHLa0PPAsBLgsy0vgPpUp=UzeR_fWUEzFb5+xtmODEk4MGPVQ@mail.gmail.com>
	<CAJfRnm7V6fgcj=TMfa2ZTYWOKtE5aoUT1xnVtKUSyriB=6cagQ@mail.gmail.com>
	<CAPg+sBjwf1TcK1CGKVKFzYbV-78j8t-pav7=PEgG7Yqi6-yE7A@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>
	<CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>
	<CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>
	<CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>
	<CAJna-Hib6umrkG0pAQzQvsyBMxOU6P675TURsVuWSU_ci9+X_A@mail.gmail.com>
Message-ID: <CAPg+sBiwzfXDAM0FKsBPi8d6E5y_nK5FDyfPvPhOTAA+f8654Q@mail.gmail.com>

On Tue, Apr 8, 2014 at 5:41 PM, slush <slush at centrum.cz> wrote:
> I've discussed the solution of "Litecoin seed" in BIP32 HMAC with Litecoin
> devs already, and after long discussion we've concluded that it is generally
> bad idea.
>
> When changing "Bitcoin seed" constant to something different, same *entropy*
> will produce different *master node*. That's actually the opposite what's
> requested, because xprv serialization format stores *node*, not *entropy*.
> By changing HMAC constant, you still won't be able to store one node and
> derive wallets for multiple coins at same time.

Storing the seed is superior to storing the master node already
(whether coin specific or not), as it is smaller.

All this changes is making the seed the "super master" which allows
generating the coin-specific masters (which get an actual useful
function: revealing your entire-tree, but only one coin's subset of
it).

>> * Every encoded node (including master nodes) has a chain-specific
>> serialization magic.
>>
>> This is in practice almost the same as your suggestion, except that
>> the m/cointype' in m/cointype'/account'/change/n is replaced by
>> different masters. The only disadvantage I see is that you do not have
>> a way to encode the "super master" that is the parent of all
>> chain-specific masters. You can - and with the same security
>> properties - encode the seed, though.
>>
>
> Actually I don't understand why there's such disagreement about "cointype"
> level here, what it breaks? I see it as the cleanest solution so far. It is
> forward and backward compatible, does need any special extension to bip32
> (to be strict, bip32 says "Bitcoin seed", so client using "Litecoin seed"
> cannot be "bip32 compatible").

Fair enough, it would break strictly BIP32. Then again, BIP32 is a
*Bitcoin* improvement proposal, and not something that necessarily
applies to other coins (they can adopt it of course, I don't care).

What I dislike is that this removes the ability of using the magic in
the serialization to prevent importing a chain from the wrong coin.
The standard could just say that instead of "Bitcoin seed", you'd use
"Coin seed: " + magic, so you don't need an extra mapping from
cointype to seed strings.

-- 
Pieter



From gavinandresen at gmail.com  Wed Apr 23 17:47:47 2014
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Wed, 23 Apr 2014 13:47:47 -0400
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <5357F634.2070300@gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<5357D394.7010908@gmail.com>
	<CANEZrP0dxAOWxg8Nu9LqV1SGE1C1WD2m+EPhg3sFCnFQQVv4kQ@mail.gmail.com>
	<5357F634.2070300@gmail.com>
Message-ID: <CABsx9T12e7rbbza9XFi1EY20+0xciWXMiXrOHjTMdj=7Pzsrxw@mail.gmail.com>

>
>
> I've formulated my replies to you and this proposal in a more public
> venue, where such discussions of existential changes to the protocol
> more rightfully belong
>
>
I strongly disagree.  It makes perfect sense to discuss changes here,
first, where there are lots of people who understand how the system works
at a very detailed level.

And why do you think your blog is more public than this open, publicly
archived mailing list???

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/94b199e3/attachment.html>

From justusranvier at gmail.com  Wed Apr 23 17:49:38 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Wed, 23 Apr 2014 17:49:38 +0000
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CABsx9T12e7rbbza9XFi1EY20+0xciWXMiXrOHjTMdj=7Pzsrxw@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>	<5357D394.7010908@gmail.com>	<CANEZrP0dxAOWxg8Nu9LqV1SGE1C1WD2m+EPhg3sFCnFQQVv4kQ@mail.gmail.com>	<5357F634.2070300@gmail.com>
	<CABsx9T12e7rbbza9XFi1EY20+0xciWXMiXrOHjTMdj=7Pzsrxw@mail.gmail.com>
Message-ID: <5357FD32.40200@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 04/23/2014 05:47 PM, Gavin Andresen wrote:
> And why do you think your blog is more public than this open,
> publicly archived mailing list???
> 

Non-developers are more comfortable using social media tools. Blog
posts can be shared, Tweeted, and commented upon using nothing more
than a web browser.

The barrier to participation on a mailing list is higher, and the
visibility is lower.

- -- 
Support online privacy by using email encryption whenever possible.
Learn how here: http://www.youtube.com/watch?v=bakOKJFtB-k
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTV/0yAAoJECoisBQbQ4v0Fm8H/j0fG7s/iEQUDlV2+5mxeiBO
eoPY2gwuDSTjXc74/3olPHrL/BTGtGg90zwFmlwruUJOaW2m3xvbTD78S8e3HmCC
fqqFKQLg+gOQYud2oiHVNW6H++QqKgSJXu4Lr87ZTkpiRGTgr5PWyhe+4sLeXxam
InqcFmtTHiUMKlmiPj/FUaPHxYT+n+FaPuiZRUYt0Wfxcc9b1n6gEpV7r36Wh8gl
e3rMeDwTfsj/0R4+E+oFEgPl7XBGIJWAf4Nzebuog4ABlqzm4B/RlclZ/5N3W2zZ
6ym6dGpFwN+RuDY2/S2kah6dAeKyk2mAsAChoSOj+vfhCW9wKzclVyM2FNV6lwE=
=djWj
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x1B438BF4.asc
Type: application/pgp-keys
Size: 21191 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/3e5c938c/attachment.bin>

From mike at plan99.net  Wed Apr 23 17:57:20 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 23 Apr 2014 19:57:20 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <5357FD32.40200@gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<5357D394.7010908@gmail.com>
	<CANEZrP0dxAOWxg8Nu9LqV1SGE1C1WD2m+EPhg3sFCnFQQVv4kQ@mail.gmail.com>
	<5357F634.2070300@gmail.com>
	<CABsx9T12e7rbbza9XFi1EY20+0xciWXMiXrOHjTMdj=7Pzsrxw@mail.gmail.com>
	<5357FD32.40200@gmail.com>
Message-ID: <CANEZrP3JV2sCK7-4P40wh9EXQfn2GCc3D=095wCo75Wh0LvMBQ@mail.gmail.com>

>
> Non-developers are more comfortable using social media tools. Blog
> posts can be shared, Tweeted, and commented upon using nothing more
> than a web browser.
>

I don't think Twitter is an appropriate medium for discussing the details
of byzantine consensus algorithms.

I'm not going to bother arguing in replies to a blog post. Suffice it to
say, miners are already handsomely compensated via both inflation and fees
for doing their job of preventing double spends. Your suggestion is people
should pay them EVEN MORE for simply not being corrupt. My proposal is
simpler - how about we find the ones that are claiming people's money via
coinbases yet not doing their jobs correctly, and take the money back (or
destroy it). I think I prefer that one. Miners that are maliciously double
spending cannot justify their existence, they offer no useful service and
do not deserve compensation as a result.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/2ba5d5ad/attachment.html>

From slush at centrum.cz  Wed Apr 23 18:01:57 2014
From: slush at centrum.cz (slush)
Date: Wed, 23 Apr 2014 20:01:57 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAPg+sBiwzfXDAM0FKsBPi8d6E5y_nK5FDyfPvPhOTAA+f8654Q@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<F2C8C044-EF92-4CCE-9235-28CA7FCE3526@bitsofproof.com>
	<CAJHLa0PPAsBLgsy0vgPpUp=UzeR_fWUEzFb5+xtmODEk4MGPVQ@mail.gmail.com>
	<CAJfRnm7V6fgcj=TMfa2ZTYWOKtE5aoUT1xnVtKUSyriB=6cagQ@mail.gmail.com>
	<CAPg+sBjwf1TcK1CGKVKFzYbV-78j8t-pav7=PEgG7Yqi6-yE7A@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>
	<CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>
	<CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>
	<CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>
	<CAJna-Hib6umrkG0pAQzQvsyBMxOU6P675TURsVuWSU_ci9+X_A@mail.gmail.com>
	<CAPg+sBiwzfXDAM0FKsBPi8d6E5y_nK5FDyfPvPhOTAA+f8654Q@mail.gmail.com>
Message-ID: <CAJna-HhPm0U2odPgRji7zJqCZCWuXKT_=ayC2tsajjRX5TiCXg@mail.gmail.com>

On Wed, Apr 23, 2014 at 7:42 PM, Pieter Wuille <pieter.wuille at gmail.com>wrote:
>
> Storing the seed is superior to storing the master node already
> (whether coin specific or not), as it is smaller.
>
>
...Except that you're loosing flexibility (serialization, deserialization)
which gives you BIP32 node.

I see "bip32 seed" as some transitional, internal state from raw entropy to
bip32 master node and this seed should not be handled by the end user in
any form. In the oposite, well-serialized bip32 node (in xpriv, or even in
mnemonic format) can be used very widely and have no downsides against
using raw "bip32 seed".


>
> Fair enough, it would break strictly BIP32. Then again, BIP32 is a
> *Bitcoin* improvement proposal, and not something that necessarily
> applies to other coins (they can adopt it of course, I don't care).
>
>
I also don't care too much about altcoins, but people want them so me, as
infrastructure developer, need to think about it. And I don't see any
reason for breaking compatibility between Bitcoin and other altcoins. I
would be happier if there will be another sentence than "Bitcoin seed", but
honestly, who cares. It is just some magic string for hashing the raw
seed...


> What I dislike is that this removes the ability of using the magic in
> the serialization to prevent importing a chain from the wrong coin.
>

The truth is that even existing software which handle bip32 don't care
about 'version' at all. I think that "xpub/xprv" distinction is the only
useful feature of version, so user se if it stores public or private
information.

But using prefixes which doesn't enforce anything is even more dangerous.
If somebody exports node "dogeblablabla", it creates false exceptations
that there's only dogecoin stored.

 Marek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/8d56414d/attachment.html>

From justusranvier at gmail.com  Wed Apr 23 18:04:49 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Wed, 23 Apr 2014 18:04:49 +0000
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CANEZrP3JV2sCK7-4P40wh9EXQfn2GCc3D=095wCo75Wh0LvMBQ@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>	<5357D394.7010908@gmail.com>	<CANEZrP0dxAOWxg8Nu9LqV1SGE1C1WD2m+EPhg3sFCnFQQVv4kQ@mail.gmail.com>	<5357F634.2070300@gmail.com>	<CABsx9T12e7rbbza9XFi1EY20+0xciWXMiXrOHjTMdj=7Pzsrxw@mail.gmail.com>	<5357FD32.40200@gmail.com>
	<CANEZrP3JV2sCK7-4P40wh9EXQfn2GCc3D=095wCo75Wh0LvMBQ@mail.gmail.com>
Message-ID: <535800C1.9060604@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 04/23/2014 05:57 PM, Mike Hearn wrote:
> I'm not going to bother arguing in replies to a blog post. Suffice
> it to say, miners are already handsomely compensated via both
> inflation and fees for doing their job of preventing double spends.
> Your suggestion is people should pay them EVEN MORE for simply not
> being corrupt. My proposal is simpler - how about we find the ones
> that are claiming people's money via coinbases yet not doing their
> jobs correctly, and take the money back (or destroy it). I think I
> prefer that one. Miners that are maliciously double spending cannot
> justify their existence, they offer no useful service and do not
> deserve compensation as a result.
> 


The integrity of Bitcoin is more important than you and your personal
preferences.


You don't have the right to decide which valid scripts in the
blockchain will be disregarded, and neither does anyone else.


If you don't like what's in the blockchain, you and everybody else can
work within the protocol to orphan the offending block.


But if you fail, then what's written in the blockchain is final and
the sole purpose of the network is to enforce it - deal with it.


PS: We don't even know who runs BitUndo. They seem to have lots of
money to spend on web design - I wonder where it came from?


- -- 
Support online privacy by using email encryption whenever possible.
Learn how here: http://www.youtube.com/watch?v=bakOKJFtB-k
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTWADBAAoJECoisBQbQ4v0A/0H/25j9bvZaEqfyLJSHNh7PGwC
TpMu0s8D94nX/ipwaOjeY1QMtnWnX9b2H/lDZSnk1rm7IXJTq1c+R/50Uqx5U9QI
oYnsKX1TiB+T5Uv0C5PaIptEMgPkcNyHwsdXyaaUcu2djB0/YhFRlWR7WCH2QyNG
3LR5XWLGJz7v6rDxwvMXEHJWO5950bASP1xCVLc/N0PI7BoEUmeRzAoDa1mGJ9yw
XkVUVDV03B85uTSEriBuQ49ASvv9faAhcehwRwvFFp2krVz6Ov5Jxrv7UN+B61R2
sgZhI3vaTsyRf+8+pkp0dvSpbwwJ7ESBm+BRMPGTnV1AlwJKqjzDYHgowSe01Nw=
=COsH
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x1B438BF4.asc
Type: application/pgp-keys
Size: 21191 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/22a72186/attachment.bin>

From pete at petertodd.org  Wed Apr 23 18:15:45 2014
From: pete at petertodd.org (Peter Todd)
Date: Wed, 23 Apr 2014 14:15:45 -0400
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <535800C1.9060604@gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<5357D394.7010908@gmail.com>
	<CANEZrP0dxAOWxg8Nu9LqV1SGE1C1WD2m+EPhg3sFCnFQQVv4kQ@mail.gmail.com>
	<5357F634.2070300@gmail.com>
	<CABsx9T12e7rbbza9XFi1EY20+0xciWXMiXrOHjTMdj=7Pzsrxw@mail.gmail.com>
	<5357FD32.40200@gmail.com>
	<CANEZrP3JV2sCK7-4P40wh9EXQfn2GCc3D=095wCo75Wh0LvMBQ@mail.gmail.com>
	<535800C1.9060604@gmail.com>
Message-ID: <20140423181545.GA5434@savin>

On Wed, Apr 23, 2014 at 06:04:49PM +0000, Justus Ranvier wrote:
> The integrity of Bitcoin is more important than you and your personal
> preferences.
> 
> 
> You don't have the right to decide which valid scripts in the
> blockchain will be disregarded, and neither does anyone else.
> 
> 
> If you don't like what's in the blockchain, you and everybody else can
> work within the protocol to orphan the offending block.
> 
> 
> But if you fail, then what's written in the blockchain is final and
> the sole purpose of the network is to enforce it - deal with it.

Agreed, although I think waxwing put it better: Bitcoin's most
fundamental property is its neutrality. If it loses this, it is not
Bitcoin.

But I also agree with Gavin that the bitcoin-development email list is a
perfectly good place to have these types of discussions. I myself have
used it repeatedly to publish ideas specifically due to wide readership
and multiple independent archives.

> PS: We don't even know who runs BitUndo. They seem to have lots of
> money to spend on web design - I wonder where it came from?

Actually we do: Eric Springer

See

http://www.coindesk.com/double-spending-unconfirmed-transactions-concern-bitcoin/

https://github.com/espringe - joined Feb 11 2010

Anyway that's just twitter bootstrap or something; I hear the wizards
can pump out a site like that in a few hours.

-- 
'peter'[:-1]@petertodd.org
000000000000000004af1fb3b77c0f7ffe640982e440ac3eb085fa51d8207838
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/f0ab2011/attachment.sig>

From slush at centrum.cz  Wed Apr 23 18:18:16 2014
From: slush at centrum.cz (slush)
Date: Wed, 23 Apr 2014 20:18:16 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAJna-HhPm0U2odPgRji7zJqCZCWuXKT_=ayC2tsajjRX5TiCXg@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<F2C8C044-EF92-4CCE-9235-28CA7FCE3526@bitsofproof.com>
	<CAJHLa0PPAsBLgsy0vgPpUp=UzeR_fWUEzFb5+xtmODEk4MGPVQ@mail.gmail.com>
	<CAJfRnm7V6fgcj=TMfa2ZTYWOKtE5aoUT1xnVtKUSyriB=6cagQ@mail.gmail.com>
	<CAPg+sBjwf1TcK1CGKVKFzYbV-78j8t-pav7=PEgG7Yqi6-yE7A@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>
	<CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>
	<CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>
	<CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>
	<CAJna-Hib6umrkG0pAQzQvsyBMxOU6P675TURsVuWSU_ci9+X_A@mail.gmail.com>
	<CAPg+sBiwzfXDAM0FKsBPi8d6E5y_nK5FDyfPvPhOTAA+f8654Q@mail.gmail.com>
	<CAJna-HhPm0U2odPgRji7zJqCZCWuXKT_=ayC2tsajjRX5TiCXg@mail.gmail.com>
Message-ID: <CAJna-Hh2t-E=fm9V0EH+qOQTx+qsmcBemEJmML0G9PgsrJr5eg@mail.gmail.com>

For those who don't follow github pull requests regularly; there's pull
request for BIP64 defining HD wallet structure as discussed in this thread:

https://github.com/bitcoin/bips/pull/52



On Wed, Apr 23, 2014 at 8:01 PM, slush <slush at centrum.cz> wrote:

>
>
>
> On Wed, Apr 23, 2014 at 7:42 PM, Pieter Wuille <pieter.wuille at gmail.com>wrote:
>>
>> Storing the seed is superior to storing the master node already
>> (whether coin specific or not), as it is smaller.
>>
>>
> ...Except that you're loosing flexibility (serialization, deserialization)
> which gives you BIP32 node.
>
> I see "bip32 seed" as some transitional, internal state from raw entropy
> to bip32 master node and this seed should not be handled by the end user in
> any form. In the oposite, well-serialized bip32 node (in xpriv, or even in
> mnemonic format) can be used very widely and have no downsides against
> using raw "bip32 seed".
>
>
>>
>> Fair enough, it would break strictly BIP32. Then again, BIP32 is a
>> *Bitcoin* improvement proposal, and not something that necessarily
>> applies to other coins (they can adopt it of course, I don't care).
>>
>>
> I also don't care too much about altcoins, but people want them so me, as
> infrastructure developer, need to think about it. And I don't see any
> reason for breaking compatibility between Bitcoin and other altcoins. I
> would be happier if there will be another sentence than "Bitcoin seed", but
> honestly, who cares. It is just some magic string for hashing the raw
> seed...
>
>
>> What I dislike is that this removes the ability of using the magic in
>> the serialization to prevent importing a chain from the wrong coin.
>>
>
> The truth is that even existing software which handle bip32 don't care
> about 'version' at all. I think that "xpub/xprv" distinction is the only
> useful feature of version, so user se if it stores public or private
> information.
>
> But using prefixes which doesn't enforce anything is even more dangerous.
> If somebody exports node "dogeblablabla", it creates false exceptations
> that there's only dogecoin stored.
>
>  Marek
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/ffd687fd/attachment.html>

From justusranvier at gmail.com  Wed Apr 23 18:20:02 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Wed, 23 Apr 2014 18:20:02 +0000
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <20140423181545.GA5434@savin>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<5357D394.7010908@gmail.com>
	<CANEZrP0dxAOWxg8Nu9LqV1SGE1C1WD2m+EPhg3sFCnFQQVv4kQ@mail.gmail.com>
	<5357F634.2070300@gmail.com>
	<CABsx9T12e7rbbza9XFi1EY20+0xciWXMiXrOHjTMdj=7Pzsrxw@mail.gmail.com>
	<5357FD32.40200@gmail.com>
	<CANEZrP3JV2sCK7-4P40wh9EXQfn2GCc3D=095wCo75Wh0LvMBQ@mail.gmail.com>
	<535800C1.9060604@gmail.com> <20140423181545.GA5434@savin>
Message-ID: <53580452.3030705@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 04/23/2014 06:15 PM, Peter Todd wrote:

> But I also agree with Gavin that the bitcoin-development email list
> is a perfectly good place to have these types of discussions. I
> myself have used it repeatedly to publish ideas specifically due to
> wide readership and multiple independent archives.

A development list is a great place to decide how to implement a
technical feature, one that feature has been deemed desirable.

The chief scientist has a platform via which he can publicly announce
proposed protocol changes. Anyone else could do the same.

There are conference happening all the time where people can announce
ideas like this, to give time for the community to hear the idea and
generate feedback.

There is absolutely nothing so urgent about this attack that requires
the consensus process to start here, in a place that most Bitcoin
users don't even know about and wouldn't even know which search terms
to apply to look for such a discussion if they did.

>> PS: We don't even know who runs BitUndo. They seem to have lots
>> of money to spend on web design - I wonder where it came from?
> 
> Actually we do: Eric Springer
> 
> See
> 
> http://www.coindesk.com/double-spending-unconfirmed-transactions-concern-bitcoin/
>
>  https://github.com/espringe - joined Feb 11 2010
> 
> Anyway that's just twitter bootstrap or something; I hear the
> wizards can pump out a site like that in a few hours.
> 

I stand corrected.

- -- 
Support online privacy by using email encryption whenever possible.
Learn how here: http://www.youtube.com/watch?v=bakOKJFtB-k
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTWARRAAoJECoisBQbQ4v08kkIAKMSSCn9mBCMj6RwWHK6abud
UlaKOAh4LNAaJ+pIQD103EGH3JE9pzeaDouupTbdIHqb8CxVO3dn9UFXdfkDW1cf
YsOOfE0N5crfaODd+NU6jjaf5jXOgmT2ibCU3sSjmphDBMstZfrSaCljtyaj290Y
urnW1pdL5ZA0zLAUjNO2kXSbuHaE3CTz72s4dWsiRBsQLVAD8j5C5o8gxFVeZd7s
Ba4yGtGAsd0HWikUjE2L4G/J8RzbxUrm5w31A4lawkF+SqtJcFiwoxrXX+FVdi/8
rfAY/l0EBoRrkW+cajcj29eq1eOOIER0Zcu2FzpPc45Xywh9RCh8C3zgWitOvcI=
=IR+Y
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x1B438BF4.asc
Type: application/pgp-keys
Size: 21191 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/bf90e17d/attachment.bin>

From mike at plan99.net  Wed Apr 23 18:37:27 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 23 Apr 2014 20:37:27 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <53580452.3030705@gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<5357D394.7010908@gmail.com>
	<CANEZrP0dxAOWxg8Nu9LqV1SGE1C1WD2m+EPhg3sFCnFQQVv4kQ@mail.gmail.com>
	<5357F634.2070300@gmail.com>
	<CABsx9T12e7rbbza9XFi1EY20+0xciWXMiXrOHjTMdj=7Pzsrxw@mail.gmail.com>
	<5357FD32.40200@gmail.com>
	<CANEZrP3JV2sCK7-4P40wh9EXQfn2GCc3D=095wCo75Wh0LvMBQ@mail.gmail.com>
	<535800C1.9060604@gmail.com> <20140423181545.GA5434@savin>
	<53580452.3030705@gmail.com>
Message-ID: <CANEZrP1dP3m79bUfgWqi3XZVgnKEW7KoKjBvYSwcQD785QZxGg@mail.gmail.com>

If you want to try and argue that the development list is the wrong place
to discuss development, please do so on another thread (or your blog).
Let's keep this thread for discussion of the original proposal - ideally,
discussed with the dryness that a topic as nerdy as distributed consensus
algorithms deserves ;)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/249fc6b8/attachment.html>

From tier.nolan at gmail.com  Wed Apr 23 18:39:40 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Wed, 23 Apr 2014 19:39:40 +0100
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAJna-Hh2t-E=fm9V0EH+qOQTx+qsmcBemEJmML0G9PgsrJr5eg@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<F2C8C044-EF92-4CCE-9235-28CA7FCE3526@bitsofproof.com>
	<CAJHLa0PPAsBLgsy0vgPpUp=UzeR_fWUEzFb5+xtmODEk4MGPVQ@mail.gmail.com>
	<CAJfRnm7V6fgcj=TMfa2ZTYWOKtE5aoUT1xnVtKUSyriB=6cagQ@mail.gmail.com>
	<CAPg+sBjwf1TcK1CGKVKFzYbV-78j8t-pav7=PEgG7Yqi6-yE7A@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>
	<CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>
	<CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>
	<CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>
	<CAJna-Hib6umrkG0pAQzQvsyBMxOU6P675TURsVuWSU_ci9+X_A@mail.gmail.com>
	<CAPg+sBiwzfXDAM0FKsBPi8d6E5y_nK5FDyfPvPhOTAA+f8654Q@mail.gmail.com>
	<CAJna-HhPm0U2odPgRji7zJqCZCWuXKT_=ayC2tsajjRX5TiCXg@mail.gmail.com>
	<CAJna-Hh2t-E=fm9V0EH+qOQTx+qsmcBemEJmML0G9PgsrJr5eg@mail.gmail.com>
Message-ID: <CAE-z3OVCL34FMECHDC3d8OiRKYhVSkzZFU0cGHV0ifu09bCbJA@mail.gmail.com>

Different users could have different gap limit requirements.  20 seems very
low as the default.

A merchant could easily send 20 addresses in a row to customers and none of
them bother to actually buy anything.

Setting the gap limit to high is just a small extra cost in that case.

Bip-32 serialization doesn't have a way of adding meta data though.


On Wed, Apr 23, 2014 at 7:18 PM, slush <slush at centrum.cz> wrote:

> For those who don't follow github pull requests regularly; there's pull
> request for BIP64 defining HD wallet structure as discussed in this thread:
>
> https://github.com/bitcoin/bips/pull/52
>
>
>
> On Wed, Apr 23, 2014 at 8:01 PM, slush <slush at centrum.cz> wrote:
>
>>
>>
>>
>> On Wed, Apr 23, 2014 at 7:42 PM, Pieter Wuille <pieter.wuille at gmail.com>wrote:
>>>
>>> Storing the seed is superior to storing the master node already
>>> (whether coin specific or not), as it is smaller.
>>>
>>>
>> ...Except that you're loosing flexibility (serialization,
>> deserialization) which gives you BIP32 node.
>>
>> I see "bip32 seed" as some transitional, internal state from raw entropy
>> to bip32 master node and this seed should not be handled by the end user in
>> any form. In the oposite, well-serialized bip32 node (in xpriv, or even in
>> mnemonic format) can be used very widely and have no downsides against
>> using raw "bip32 seed".
>>
>>
>>>
>>> Fair enough, it would break strictly BIP32. Then again, BIP32 is a
>>> *Bitcoin* improvement proposal, and not something that necessarily
>>> applies to other coins (they can adopt it of course, I don't care).
>>>
>>>
>> I also don't care too much about altcoins, but people want them so me, as
>> infrastructure developer, need to think about it. And I don't see any
>> reason for breaking compatibility between Bitcoin and other altcoins. I
>> would be happier if there will be another sentence than "Bitcoin seed", but
>> honestly, who cares. It is just some magic string for hashing the raw
>> seed...
>>
>>
>>> What I dislike is that this removes the ability of using the magic in
>>> the serialization to prevent importing a chain from the wrong coin.
>>>
>>
>> The truth is that even existing software which handle bip32 don't care
>> about 'version' at all. I think that "xpub/xprv" distinction is the only
>> useful feature of version, so user se if it stores public or private
>> information.
>>
>> But using prefixes which doesn't enforce anything is even more dangerous.
>> If somebody exports node "dogeblablabla", it creates false exceptations
>> that there's only dogecoin stored.
>>
>>  Marek
>>
>
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/dd62bab3/attachment.html>

From stick at gk2.sk  Wed Apr 23 18:46:11 2014
From: stick at gk2.sk (Pavol Rusnak)
Date: Wed, 23 Apr 2014 20:46:11 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAE-z3OVCL34FMECHDC3d8OiRKYhVSkzZFU0cGHV0ifu09bCbJA@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>	<53344FF8.7030204@gk2.sk>	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>	<CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>	<CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>	<CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>	<CAJna-Hib6umrkG0pAQzQvsyBMxOU6P675TURsVuWSU_ci9+X_A@mail.gmail.com>	<CAPg+sBiwzfXDAM0FKsBPi8d6E5y_nK5FDyfPvPhOTAA+f8654Q@mail.gmail.com>	<CAJna-HhPm0U2odPgRji7zJqCZCWuXKT_=ayC2tsajjRX5TiCXg@mail.gmail.com>	<CAJna-Hh2t-E=fm9V0EH+qOQTx+qsmcBemEJmML0G9PgsrJr5eg@mail.gmail.com>
	<CAE-z3OVCL34FMECHDC3d8OiRKYhVSkzZFU0cGHV0ifu09bCbJA@mail.gmail.com>
Message-ID: <53580A73.9070208@gk2.sk>

On 04/23/2014 08:39 PM, Tier Nolan wrote:
> A merchant could easily send 20 addresses in a row to customers and none of
> them bother to actually buy anything.

Such merchant would surely use some merchant system instead of generic
wallet software.

> Setting the gap limit to high is just a small extra cost in that case.

Not if you have 100 accounts on 10 different devices.

-- 
Best Regards / S pozdravom,

Pavol Rusnak <stick at gk2.sk>



From tamas at bitsofproof.com  Wed Apr 23 18:48:22 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Wed, 23 Apr 2014 20:48:22 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAE-z3OVCL34FMECHDC3d8OiRKYhVSkzZFU0cGHV0ifu09bCbJA@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<F2C8C044-EF92-4CCE-9235-28CA7FCE3526@bitsofproof.com>
	<CAJHLa0PPAsBLgsy0vgPpUp=UzeR_fWUEzFb5+xtmODEk4MGPVQ@mail.gmail.com>
	<CAJfRnm7V6fgcj=TMfa2ZTYWOKtE5aoUT1xnVtKUSyriB=6cagQ@mail.gmail.com>
	<CAPg+sBjwf1TcK1CGKVKFzYbV-78j8t-pav7=PEgG7Yqi6-yE7A@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>
	<CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>
	<CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>
	<CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>
	<CAJna-Hib6umrkG0pAQzQvsyBMxOU6P675TURsVuWSU_ci9+X_A@mail.gmail.com>
	<CAPg+sBiwzfXDAM0FKsBPi8d6E5y_nK5FDyfPvPhOTAA+f8654Q@mail.gmail.com>
	<CAJna-HhPm0U2odPgRji7zJqCZCWuXKT_=ayC2tsajjRX5TiCXg@mail.gmail.com>
	<CAJna-Hh2t-E=fm9V0EH+qOQTx+qsmcBemEJmML0G9PgsrJr5eg@mail.gmail.com>
	<CAE-z3OVCL34FMECHDC3d8OiRKYhVSkzZFU0cGHV0ifu09bCbJA@mail.gmail.com>
Message-ID: <4D1F31F6-8EF3-443F-94F2-76DA4408D6CD@bitsofproof.com>

The most useful meta data to optimize chain scan is the key birth date, then the allowed gap size. 

Tamas Blummer
http://bitsofproof.com

On 23.04.2014, at 20:39, Tier Nolan <tier.nolan at gmail.com> wrote:

> Different users could have different gap limit requirements.  20 seems very low as the default.
> 
> A merchant could easily send 20 addresses in a row to customers and none of them bother to actually buy anything.
> 
> Setting the gap limit to high is just a small extra cost in that case.
> 
> Bip-32 serialization doesn't have a way of adding meta data though.
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/88279ae3/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/88279ae3/attachment.sig>

From justusranvier at gmail.com  Wed Apr 23 18:49:10 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Wed, 23 Apr 2014 18:49:10 +0000
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CANEZrP1dP3m79bUfgWqi3XZVgnKEW7KoKjBvYSwcQD785QZxGg@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>	<5357D394.7010908@gmail.com>	<CANEZrP0dxAOWxg8Nu9LqV1SGE1C1WD2m+EPhg3sFCnFQQVv4kQ@mail.gmail.com>	<5357F634.2070300@gmail.com>	<CABsx9T12e7rbbza9XFi1EY20+0xciWXMiXrOHjTMdj=7Pzsrxw@mail.gmail.com>	<5357FD32.40200@gmail.com>	<CANEZrP3JV2sCK7-4P40wh9EXQfn2GCc3D=095wCo75Wh0LvMBQ@mail.gmail.com>	<535800C1.9060604@gmail.com>	<20140423181545.GA5434@savin>	<53580452.3030705@gmail.com>
	<CANEZrP1dP3m79bUfgWqi3XZVgnKEW7KoKjBvYSwcQD785QZxGg@mail.gmail.com>
Message-ID: <53580B26.7050008@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 04/23/2014 06:37 PM, Mike Hearn wrote:
> If you want to try and argue that the development list is the wrong
> place to discuss development, please do so on another thread (or
> your blog). Let's keep this thread for discussion of the original
> proposal - ideally, discussed with the dryness that a topic as
> nerdy as distributed consensus algorithms deserves ;)
> 

Is that what you say to yourself to quiet your conscience at night
(assuming you're one of the non-sociopathic humans who does indeed
have one)? It's "just a nerdy distributed consensus problem"?

The things you're talking about fucking around with have real life
implications for quite a few people and your casual dismissal of this
is precisely why I responded in the way that I did.

What you're doing is reckless endangerment and you're not got to get
away with brushing it off as a mere technical detail.

Sunlight is the best disinfectant, and this episode is demonstrating
to the world exactly how averse you are do that kind of transparency.

- -- 
Support online privacy by using email encryption whenever possible.
Learn how here: http://www.youtube.com/watch?v=bakOKJFtB-k
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTWAsmAAoJECoisBQbQ4v0XTcIAL70+EAkSMUgvGeTN+mROkkd
3ap5NhUYehfW33gEEEyO3a6ofrb6k1a8EbHlzDyq7qPZ925kdvbnwqXDQm7auAh1
V8IPAwp+JfCgVDVAxtHuUBUvTuuCn1Mrxnf6ppwzFywBxU6l6KYK9zac1HoX3EVY
QxME15zrBmtJfo9/ed9yWz8ZXl6nsx47D3r0VE8FiENJRgxLfZ7Odsr/sGvgL71N
aYPv7vMxRBNXDvrMhEuYKa3L83W5kv4JJxzueUyO/0bww/aaeZMZr850u/hUjMgU
ui37M+kiFHug3semWGKs1yJiKsEPsEPaU4j6WSDrd0bNbc73bBjvHm9SGYRHzDQ=
=L5nX
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x1B438BF4.asc
Type: application/pgp-keys
Size: 21191 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/a3c7daac/attachment.bin>

From gmaxwell at gmail.com  Wed Apr 23 18:57:01 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 23 Apr 2014 11:57:01 -0700
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
Message-ID: <CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>

On Wed, Apr 23, 2014 at 12:55 AM, Mike Hearn <mike at plan99.net> wrote:
> Lately someone launched Finney attacks as a service (BitUndo). As a reminder
> for newcomers, Finney attacks are where a miner secretly works on a block
> containing a double spend.

Hm? I didn't think this is at all what they did.  What they claim to
do is to prioritize transactions in their mempool from people who pay
them, potentially over and above other transactions which they may or
may not have received first.

This may still be bad news for someone taking an irreversible action
in response to an unconfirmed payment and it may or may not be really
ill advised in general, but I think it's less sinister than it sounds
in your posts.  Is there some reason to believe it isn't what it
claims to be?

I think we have very clear evidence that the Bitcoin community doesn't
care if miners reorder transactions in their mempool to profitable
ends: In https://bitcointalk.org/index.php?topic=327767.0 it's
demonstrated that GHash.IO, currently the largest publicly identified
pool was used to rip off Betcoin dice via double-spends.

> first started using Bitcoin, nowadays most of my purchases with it are for
> food and drink. If Bitcoin could not support such purchases, I would use it
> much less.

Accepting zero-conf inherently has some risk (well, so does all
business, but there is substantially more in a zero-conf payment).
Even in a spherical-cow Bitcoin absent anything like Bitundo someone
can just give a double spend to a large miner and currently give the
whole rest of the network the one paying the merchant.  They will,
with high success rate be successful.   Worse, it may _appear_ to the
network that the miner was a "bitundo" but they really were not.   The
blockchain exists to establish consensus ordering, prior to the
blockchain there is no order, and so it is not easy to really say
which transaction came first in any meaningful sense.

But in business we balance risks and the risk that sometimes a
transaction will be reversed exists in every electronic payment system
available today, in most of them the risk persists for _months_ rather
than minutes.  Businesses can still operate in the face of these
risks.

More importantly, it's possible to deploy technological approaches to
make zero-conf very secure against reversal: Things like performing
multi-sig with a anti-double-spending system, or using an external
federated payment network... but this stuff requires substantial
development work? though it's not work thats likely to happen if
people are still confused about the level of security that zero-conf
has.

> Miners can vote to reallocate the coinbase value of bad blocks before they
> mature.

I think miners 'voting' to reallocate coins, even if they're
thoroughly convinced that the owner of the coins is a nasty party, is
a much greater violation of the Bitcoin social contract than some
twiddling with the unspecified unconfirmed transaction ordering.

Doubly so because a 'nasty' party with non-trivial hash-power can
doublespend their own transactions with a pretty good success rate (as
was the case for the GHash.io betcoin spends) including not-just
zero-conf (though with obviously reduced effectiveness), and all of
your reliable detection depends on it being a public service.

A much better defense is having the control of hash power very well
distributed and so there isn't any central point that excerts enough
influence to change the risk statistics much.  Giving miners the
ability to steal each others payments is, if anything, a force away
from that decentralization.



From tier.nolan at gmail.com  Wed Apr 23 18:58:16 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Wed, 23 Apr 2014 19:58:16 +0100
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP1dP3m79bUfgWqi3XZVgnKEW7KoKjBvYSwcQD785QZxGg@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<5357D394.7010908@gmail.com>
	<CANEZrP0dxAOWxg8Nu9LqV1SGE1C1WD2m+EPhg3sFCnFQQVv4kQ@mail.gmail.com>
	<5357F634.2070300@gmail.com>
	<CABsx9T12e7rbbza9XFi1EY20+0xciWXMiXrOHjTMdj=7Pzsrxw@mail.gmail.com>
	<5357FD32.40200@gmail.com>
	<CANEZrP3JV2sCK7-4P40wh9EXQfn2GCc3D=095wCo75Wh0LvMBQ@mail.gmail.com>
	<535800C1.9060604@gmail.com> <20140423181545.GA5434@savin>
	<53580452.3030705@gmail.com>
	<CANEZrP1dP3m79bUfgWqi3XZVgnKEW7KoKjBvYSwcQD785QZxGg@mail.gmail.com>
Message-ID: <CAE-z3OWmT8z=Mj7uYWBPt8yLKepesJnh3nA66p3ucRvk23n3_w@mail.gmail.com>

Bitcoin has various checks and balances that help keep everything honest.

Even if a pool had 60% of the hashing power, they couldn't reverse 6 blocks
without anyone noticing that it had happened.

There are sites which monitor the blocks and estimate the percentage of the
blocks found by each pool.

In a way, bitcoin doesn't depend on the majority of miners following the
protocol, it depends on miners believing that a majority of the other
miners will follow the protocol.

If a miner has 5% of the hashing power and believes that the other 95% will
follow the protocol, then the system should be set up so that it is in that
miner's interests to follow the protocol too.

This is why soft forks work.  The formal process convinces all the miners
that the new rules are locked in.

In a system where miners can vote to cancel coinbases, each pool has an
incentive to vote to reject everyone else's blocks.

Pools on the receiving end will be less profitable and lose customers.

It is possible that "predatory" pools would lose hashing power as miners
switch to other pools, in protest.

The proposal allows "established" pools to vote to disallow new entrants.
They could even justify it by saying that those pools haven't invested in
"anti-double spending" infrastructure.

The proposal doesn't suddenly give the majority the ability to do it, but
it isn't clear that making the process less disruptive is a good thing.



On Wed, Apr 23, 2014 at 7:37 PM, Mike Hearn <mike at plan99.net> wrote:

> If you want to try and argue that the development list is the wrong place
> to discuss development, please do so on another thread (or your blog).
> Let's keep this thread for discussion of the original proposal - ideally,
> discussed with the dryness that a topic as nerdy as distributed consensus
> algorithms deserves ;)
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/2d0343ba/attachment.html>

From tier.nolan at gmail.com  Wed Apr 23 19:00:41 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Wed, 23 Apr 2014 20:00:41 +0100
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <53580A73.9070208@gk2.sk>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>
	<CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>
	<CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>
	<CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>
	<CAJna-Hib6umrkG0pAQzQvsyBMxOU6P675TURsVuWSU_ci9+X_A@mail.gmail.com>
	<CAPg+sBiwzfXDAM0FKsBPi8d6E5y_nK5FDyfPvPhOTAA+f8654Q@mail.gmail.com>
	<CAJna-HhPm0U2odPgRji7zJqCZCWuXKT_=ayC2tsajjRX5TiCXg@mail.gmail.com>
	<CAJna-Hh2t-E=fm9V0EH+qOQTx+qsmcBemEJmML0G9PgsrJr5eg@mail.gmail.com>
	<CAE-z3OVCL34FMECHDC3d8OiRKYhVSkzZFU0cGHV0ifu09bCbJA@mail.gmail.com>
	<53580A73.9070208@gk2.sk>
Message-ID: <CAE-z3OUMp_uO07+_R_x2yRLbSCzK1J5isbVUYEY3KF4Tx16K2Q@mail.gmail.com>

On Wed, Apr 23, 2014 at 7:46 PM, Pavol Rusnak <stick at gk2.sk> wrote:

>
> > Setting the gap limit to high is just a small extra cost in that case.
>
> Not if you have 100 accounts on 10 different devices.
>

I meant for a merchant with a server that is handing out hundreds of
addresses.

The point is to have a single system that is compatible over a large number
of systems.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/77da2094/attachment.html>

From drak at zikula.org  Wed Apr 23 19:01:58 2014
From: drak at zikula.org (Drak)
Date: Wed, 23 Apr 2014 20:01:58 +0100
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <53580B26.7050008@gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<5357D394.7010908@gmail.com>
	<CANEZrP0dxAOWxg8Nu9LqV1SGE1C1WD2m+EPhg3sFCnFQQVv4kQ@mail.gmail.com>
	<5357F634.2070300@gmail.com>
	<CABsx9T12e7rbbza9XFi1EY20+0xciWXMiXrOHjTMdj=7Pzsrxw@mail.gmail.com>
	<5357FD32.40200@gmail.com>
	<CANEZrP3JV2sCK7-4P40wh9EXQfn2GCc3D=095wCo75Wh0LvMBQ@mail.gmail.com>
	<535800C1.9060604@gmail.com> <20140423181545.GA5434@savin>
	<53580452.3030705@gmail.com>
	<CANEZrP1dP3m79bUfgWqi3XZVgnKEW7KoKjBvYSwcQD785QZxGg@mail.gmail.com>
	<53580B26.7050008@gmail.com>
Message-ID: <CANAnSg0XR+UV0R35Y0AWQN=8LV9Nfahk-aoanCR-S66r5cVBtg@mail.gmail.com>

Cut it out with the ad hominem attacks please. If you cant be civil, please
go away until you learn some manners.

I think the issue being discussed is do you orphan an entire block causing
distress to users as well, or try to just cause distress just to the evil
miner? This discussion is about exploring the ramifications of all these
options.

I think you are also forgetting that, miners can implement their own
filters and behaviours without anyone's consent. So having an open
discussion and exploring all possibilities can only be a good thing before
someone goes off an implements a change without taking into account other
points of view they may not have considered yet.
 On 23 Apr 2014 19:51, "Justus Ranvier" <justusranvier at gmail.com> wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> On 04/23/2014 06:37 PM, Mike Hearn wrote:
> > If you want to try and argue that the development list is the wrong
> > place to discuss development, please do so on another thread (or
> > your blog). Let's keep this thread for discussion of the original
> > proposal - ideally, discussed with the dryness that a topic as
> > nerdy as distributed consensus algorithms deserves ;)
> >
>
> Is that what you say to yourself to quiet your conscience at night
> (assuming you're one of the non-sociopathic humans who does indeed
> have one)? It's "just a nerdy distributed consensus problem"?
>
> The things you're talking about fucking around with have real life
> implications for quite a few people and your casual dismissal of this
> is precisely why I responded in the way that I did.
>
> What you're doing is reckless endangerment and you're not got to get
> away with brushing it off as a mere technical detail.
>
> Sunlight is the best disinfectant, and this episode is demonstrating
> to the world exactly how averse you are do that kind of transparency.
>
> - --
> Support online privacy by using email encryption whenever possible.
> Learn how here: http://www.youtube.com/watch?v=bakOKJFtB-k
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v2.0.22 (GNU/Linux)
> Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/
>
> iQEcBAEBAgAGBQJTWAsmAAoJECoisBQbQ4v0XTcIAL70+EAkSMUgvGeTN+mROkkd
> 3ap5NhUYehfW33gEEEyO3a6ofrb6k1a8EbHlzDyq7qPZ925kdvbnwqXDQm7auAh1
> V8IPAwp+JfCgVDVAxtHuUBUvTuuCn1Mrxnf6ppwzFywBxU6l6KYK9zac1HoX3EVY
> QxME15zrBmtJfo9/ed9yWz8ZXl6nsx47D3r0VE8FiENJRgxLfZ7Odsr/sGvgL71N
> aYPv7vMxRBNXDvrMhEuYKa3L83W5kv4JJxzueUyO/0bww/aaeZMZr850u/hUjMgU
> ui37M+kiFHug3semWGKs1yJiKsEPsEPaU4j6WSDrd0bNbc73bBjvHm9SGYRHzDQ=
> =L5nX
> -----END PGP SIGNATURE-----
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/1fa69efc/attachment.html>

From tamas at bitsofproof.com  Wed Apr 23 19:07:00 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Wed, 23 Apr 2014 21:07:00 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAE-z3OUMp_uO07+_R_x2yRLbSCzK1J5isbVUYEY3KF4Tx16K2Q@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>
	<CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>
	<CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>
	<CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>
	<CAJna-Hib6umrkG0pAQzQvsyBMxOU6P675TURsVuWSU_ci9+X_A@mail.gmail.com>
	<CAPg+sBiwzfXDAM0FKsBPi8d6E5y_nK5FDyfPvPhOTAA+f8654Q@mail.gmail.com>
	<CAJna-HhPm0U2odPgRji7zJqCZCWuXKT_=ayC2tsajjRX5TiCXg@mail.gmail.com>
	<CAJna-Hh2t-E=fm9V0EH+qOQTx+qsmcBemEJmML0G9PgsrJr5eg@mail.gmail.com>
	<CAE-z3OVCL34FMECHDC3d8OiRKYhVSkzZFU0cGHV0ifu09bCbJA@mail.gmail.com>
	<53580A73.9070208@gk2.sk>
	<CAE-z3OUMp_uO07+_R_x2yRLbSCzK1J5isbVUYEY3KF4Tx16K2Q@mail.gmail.com>
Message-ID: <A083DAFD-415C-4B37-8C4B-78D1899DCCDF@bitsofproof.com>

I built such a merchant system handing out BIP32 addresses. 

The gap size problem does not arise there since such a system has to have an extra database keeping track of requests, so there is no added cost of storing the key coordinates used by them. A scan is not needed the keys can be accessed at random order.

Tamas Blummer
http://bitsofproof.com

On 23.04.2014, at 21:00, Tier Nolan <tier.nolan at gmail.com> wrote:

> On Wed, Apr 23, 2014 at 7:46 PM, Pavol Rusnak <stick at gk2.sk> wrote:
> 
> > Setting the gap limit to high is just a small extra cost in that case.
> 
> Not if you have 100 accounts on 10 different devices.
> 
> I meant for a merchant with a server that is handing out hundreds of addresses.
>  
> The point is to have a single system that is compatible over a large number of systems.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/693f3869/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/693f3869/attachment.sig>

From slush at centrum.cz  Wed Apr 23 19:06:02 2014
From: slush at centrum.cz (slush)
Date: Wed, 23 Apr 2014 21:06:02 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAE-z3OUMp_uO07+_R_x2yRLbSCzK1J5isbVUYEY3KF4Tx16K2Q@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>
	<CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>
	<CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>
	<CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>
	<CAJna-Hib6umrkG0pAQzQvsyBMxOU6P675TURsVuWSU_ci9+X_A@mail.gmail.com>
	<CAPg+sBiwzfXDAM0FKsBPi8d6E5y_nK5FDyfPvPhOTAA+f8654Q@mail.gmail.com>
	<CAJna-HhPm0U2odPgRji7zJqCZCWuXKT_=ayC2tsajjRX5TiCXg@mail.gmail.com>
	<CAJna-Hh2t-E=fm9V0EH+qOQTx+qsmcBemEJmML0G9PgsrJr5eg@mail.gmail.com>
	<CAE-z3OVCL34FMECHDC3d8OiRKYhVSkzZFU0cGHV0ifu09bCbJA@mail.gmail.com>
	<53580A73.9070208@gk2.sk>
	<CAE-z3OUMp_uO07+_R_x2yRLbSCzK1J5isbVUYEY3KF4Tx16K2Q@mail.gmail.com>
Message-ID: <CAJna-HhqYYHOKNiewssmk74E1vQQEwdO=v2_PmAKk-fQa0gADQ@mail.gmail.com>

Using higher gap limit in the software is not prohibited, but then it
breaks the standard "as is", in mean that importing such wallet to another
BIP64 wallet won't recover the funds properly, without proper settings of
gap limit...

Gap limit 20 is the most sane defaults for majority of users (actually I
think it is a bit higher than is really necessary for 99% users) and
majority of users won't need to change it at any time.

Marek


On Wed, Apr 23, 2014 at 9:00 PM, Tier Nolan <tier.nolan at gmail.com> wrote:

> On Wed, Apr 23, 2014 at 7:46 PM, Pavol Rusnak <stick at gk2.sk> wrote:
>
>>
>> > Setting the gap limit to high is just a small extra cost in that case.
>>
>> Not if you have 100 accounts on 10 different devices.
>>
>
> I meant for a merchant with a server that is handing out hundreds of
> addresses.
>
> The point is to have a single system that is compatible over a large
> number of systems.
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/73fa1ccd/attachment.html>

From mike at plan99.net  Wed Apr 23 19:19:24 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 23 Apr 2014 21:19:24 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
Message-ID: <CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>

On Wed, Apr 23, 2014 at 8:57 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> Hm? I didn't think this is at all what they did.  What they claim to
> do is to prioritize transactions in their mempool from people who pay
> them
>

That's the definition of a Finney attack, right? A tx is broadcast and
nodes normally take the first one they saw, allowing you to measure
propagation and use double spend alerts to get pretty good confidence,
pretty quick. A Finney attacker doesn't do that and includes a double
spend, so the one in the mempool gets overridden.

I mean, I hope that's the definition of a Finney attack, given that I
coined the term :)


> I think we have very clear evidence that the Bitcoin community doesn't
> care if miners reorder transactions in their mempool to profitable
> ends: In https://bitcointalk.org/index.php?topic=327767.0 it's
> demonstrated that GHash.IO, currently the largest publicly identified
> pool was used to rip off Betcoin dice via double-spends.
>

Yes, very disappointing. Though I'd hope that if this sort of thing was
sustained over months and merchants started dropping Bitcoin as a result,
miners would pay more attention.

Right now I suspect miners don't pay attention to anything other than
hardware builds though.

Yes, Bitcoin is imperfect at stopping double spends today. It can certainly
be improved! There are plenty of oft-discussed measures like double spend
alerts and discouraging Finney-attack blocks as was debated extensively in
2011. This thread is just a third such proposal.

More importantly, it's possible to deploy technological approaches to
> make zero-conf very secure against reversal: Things like performing
> multi-sig with a anti-double-spending system
>

These sorts of proposals are all just ways of saying block chains kind of
suck and we should go back to using trusted third parties.

That may well be how the Bitcoin experiment ends, but I think we all agree
here that block chains and decentralised consensus are quite spiffy and we
should try hard to make them work as well as possible before just shrugging
and say "find a trusted third party". Otherwise why not just go back to
using MasterCard? Any TTP that enforces anti double spending rules will be
a lot more centralised than miners, given the difficulty of finding them,
their need for a strong brand/reputation, and the difficulty of getting
everyone to agree on them.

Not to mention that this solution makes Bitcoin sound like a joke currency.
It's a super duper low fee totally decentralised financial system .....
unless you want to buy something in, you know, a shop. And walk out. Then
you need to sign up with this company that looks suspiciously like a bank,
and pay their fees, and yeah there's like 3 to pick from. Totally
decentralised!


> Doubly so because a 'nasty' party with non-trivial hash-power can
> doublespend their own transactions
>

If a miner is vertically integrated and defrauding merchants themselves,
with no service component, pretty quickly people would talk to each other,
notice this pattern and stop trading with them, making their coins rather
useless. Also if their real identity is ever revealed they could be liable
and there'd be a lot of people wanting to sue them.

So I think the ability to resell double spending to lots of different
people around the world seems important to practicality.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/06e5e291/attachment.html>

From stick at gk2.sk  Wed Apr 23 19:29:04 2014
From: stick at gk2.sk (Pavol Rusnak)
Date: Wed, 23 Apr 2014 21:29:04 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAE-z3OUMp_uO07+_R_x2yRLbSCzK1J5isbVUYEY3KF4Tx16K2Q@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>	<CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>	<CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>	<CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>	<CAJna-Hib6umrkG0pAQzQvsyBMxOU6P675TURsVuWSU_ci9+X_A@mail.gmail.com>	<CAPg+sBiwzfXDAM0FKsBPi8d6E5y_nK5FDyfPvPhOTAA+f8654Q@mail.gmail.com>	<CAJna-HhPm0U2odPgRji7zJqCZCWuXKT_=ayC2tsajjRX5TiCXg@mail.gmail.com>	<CAJna-Hh2t-E=fm9V0EH+qOQTx+qsmcBemEJmML0G9PgsrJr5eg@mail.gmail.com>	<CAE-z3OVCL34FMECHDC3d8OiRKYhVSkzZFU0cGHV0ifu09bCbJA@mail.gmail.com>	<53580A73.9070208@gk2.sk>
	<CAE-z3OUMp_uO07+_R_x2yRLbSCzK1J5isbVUYEY3KF4Tx16K2Q@mail.gmail.com>
Message-ID: <53581480.5060103@gk2.sk>

On 04/23/2014 09:00 PM, Tier Nolan wrote:
> The point is to have a single system that is compatible over a large number
> of systems.

There is such system and it is called BIP32.

On the other hand, in BIP64 we try to put a set of restrictions and
rules on top of BIP32. There will always be some special usecases where
BIP64 is not a good fit and there's no reason why you cannot use BIP32
in a different manner using a different "purpose" field.

Examples: Electrum does not want to use accounts and they start to use
scheme m/65'/change/address (where change = 0 or 1). Or Andreas
Schildbach wants to have refunds chain so he uses m/66'/chain/address
(where chain = 0, 1 or 2).

We wanted to find one good solution that fits all, but unfortunately it
turned out everyone wants something a little bit different.

The point of the whole effort is that you can have ONE SINGLE BACKUP
(master node) for all these independent purposes and suddenly claims
such as "my wallet is BIP64 and BIP66 compatible" actually mean
something as opposed to "BIP32 compatible" which actually means nothing
except that the wallet author is capable of using HMAC in context of
generating the tree.

-- 
Best Regards / S pozdravom,

Pavol Rusnak <stick at gk2.sk>



From tamas at bitsofproof.com  Wed Apr 23 19:36:39 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Wed, 23 Apr 2014 21:36:39 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAJna-HhqYYHOKNiewssmk74E1vQQEwdO=v2_PmAKk-fQa0gADQ@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>
	<CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>
	<CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>
	<CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>
	<CAJna-Hib6umrkG0pAQzQvsyBMxOU6P675TURsVuWSU_ci9+X_A@mail.gmail.com>
	<CAPg+sBiwzfXDAM0FKsBPi8d6E5y_nK5FDyfPvPhOTAA+f8654Q@mail.gmail.com>
	<CAJna-HhPm0U2odPgRji7zJqCZCWuXKT_=ayC2tsajjRX5TiCXg@mail.gmail.com>
	<CAJna-Hh2t-E=fm9V0EH+qOQTx+qsmcBemEJmML0G9PgsrJr5eg@mail.gmail.com>
	<CAE-z3OVCL34FMECHDC3d8OiRKYhVSkzZFU0cGHV0ifu09bCbJA@mail.gmail.com>
	<53580A73.9070208@gk2.sk>
	<CAE-z3OUMp_uO07+_R_x2yRLbSCzK1J5isbVUYEY3KF4Tx16K2Q@mail.gmail.com>
	<CAJna-HhqYYHOKNiewssmk74E1vQQEwdO=v2_PmAKk-fQa0gADQ@mail.gmail.com>
Message-ID: <474624AD-9374-46A8-98E1-863EC290252D@bitsofproof.com>

Pieter suggested in IRC couple of months ago to append key birth to key serialization in xprv?. at unixtime format.

What about picking this idea up in BIP64? It would greatly help the importing client.

Regards,

Tamas Blummer
http://bitsofproof.com


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/a787e044/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/a787e044/attachment.sig>

From luke at dashjr.org  Wed Apr 23 19:44:13 2014
From: luke at dashjr.org (Luke-Jr)
Date: Wed, 23 Apr 2014 19:44:13 +0000
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <53581480.5060103@gk2.sk>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<CAE-z3OUMp_uO07+_R_x2yRLbSCzK1J5isbVUYEY3KF4Tx16K2Q@mail.gmail.com>
	<53581480.5060103@gk2.sk>
Message-ID: <201404231944.14256.luke@dashjr.org>

On Wednesday, April 23, 2014 7:29:04 PM Pavol Rusnak wrote:
> On 04/23/2014 09:00 PM, Tier Nolan wrote:
> > The point is to have a single system that is compatible over a large
> > number of systems.
> 
> There is such system and it is called BIP32.
> 
> On the other hand, in BIP64 we try to put a set of restrictions and
> rules on top of BIP32. There will always be some special usecases where
> BIP64 is not a good fit and there's no reason why you cannot use BIP32
> in a different manner using a different "purpose" field.
> 
> Examples: Electrum does not want to use accounts and they start to use
> scheme m/65'/change/address (where change = 0 or 1). Or Andreas
> Schildbach wants to have refunds chain so he uses m/66'/chain/address
> (where chain = 0, 1 or 2).
> 
> We wanted to find one good solution that fits all, but unfortunately it
> turned out everyone wants something a little bit different.

Why do clients need to use the features in BIP 64? If Electrum doesn't want to 
use accounts, then it can just use account 0 for everything. Refund chains are 
definitely a third case that should be added to the external and 
internal/change address division... and a wallet not implementing refund 
addresses would simply not use that chain.

Luke



From sergiolerner at certimix.com  Wed Apr 23 19:33:24 2014
From: sergiolerner at certimix.com (Sergio Lerner)
Date: Wed, 23 Apr 2014 16:33:24 -0300
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks]
In-Reply-To: <20140423152954.GG19430@savin>
References: <20140423152954.GG19430@savin>
Message-ID: <53581584.307@certimix.com>

(this e-mail is cc to the bitcoin-research list)

Hi everyone from the bitcoin-development mailing list!
I decided to join this legendary list because it seems that all the
research fun is taking place in here, and I don't want to miss the
research party.

Regarding the discussion about BitUndo, a year ago I posted about an
attack (which I called the the Bitcoin Eternal Choice for the Dark Side
Attack or ECDSA)
that tries to erode the confidence in Bitcoin by offering double-spends
as a service.

I think it's related to the last post from Peter Todd about the problems
with BitUndo.

Here is the link if anyone is interested in reading about it...
http://bitslog.wordpress.com/2013/06/26/the-bitcoin-eternal-choice-for-the-dark-side-attack-ecdsa/

Sergio D. Lerner.



On 23/04/2014 12:29 p.m., Peter Todd wrote:
> Interesting discussion re: incentive compatibility happening on the
> bitcoin-development email list:
>
> ----- Forwarded message from Mike Hearn <mike at plan99.net> -----
>
> Date: Wed, 23 Apr 2014 09:55:30 +0200
> From: Mike Hearn <mike at plan99.net>
> To: Bitcoin Dev <bitcoin-development at lists.sourceforge.net>
> Subject: [Bitcoin-development] Coinbase reallocation to discourage Finney attacks
>
> Lately someone launched Finney attacks as a service (BitUndo). As a
> reminder for newcomers, Finney attacks are where a miner secretly works on
> a block containing a double spend. When they eventually find a block, they
> run to the merchant and pay, then broadcast the block. In a simpler variant
> of this attack you make purchases as normal with a modified wallet that
> always submits a double spend to the service, and then N% of the time where
> N is the percentage of overall hash power the dishonest miners have, you
> get your money back minus their fee.
>
> N does not need to be very high to render Bitcoin much less useful. Real
> time transactions are very important. Although I never expected it when I
> first started using Bitcoin, nowadays most of my purchases with it are for
> food and drink. If Bitcoin could not support such purchases, I would use it
> much less.
> Even with their woeful security many merchants see <1-2% credit card
> chargeback rates, and chargebacks can be disputed. In fact merchants win
> about 40% of chargeback disputes. So if N was only, say, 5%, and there was
> a large enough population of users who were systematically trying to
> defraud merchants, we'd already be having worse security than magstripe
> credit cards. EMV transactions have loss rates in the noise, so for
> merchants who take those Bitcoin would be dramatically less secure.
>
> The idea of discouraging blocks that perform Finney attacks by having
> honest miners refuse to build on them has been proposed. But it has a
> couple of problems:
>
>    1. It's hard to automatically detect Finney attacks. Looking for blocks
>    that contain unseen transactions that override the mempool doesn't work -
>    the dishonest users could broadcast all their double spends once a Finney
>    block was found and then broadcast the block immediately afterwards, thus
>    making the block look like any other would in the presence of double spends.
>
>    2. If they could be automatically identified, it possibly could be
>    converted into a DoS on the network by broadcasting double spends in such a
>    way that the system races, and every miner produces a block that looks like
>    a Finney attack to some of the others. The chain would stop advancing.
>
>    3. Miners who want to vote "no" on a block take a big risk, they could
>    be on the losing side of the fork and end up wasting their work.
>
> We can resolve these problems with a couple of tweaks:
>
>    1. Dishonest blocks can be identified out of band, by having honest
>    miners submit double spends against themselves to the service anonymously
>    using a separate tool. When their own double spend appears they know the
>    block is bad.
>
>    2. Miners can vote to reallocate the coinbase value of bad blocks before
>    they mature. If a majority of blocks leading up to maturity vote for
>    reallocation, the value goes into a pot that subsequent blocks are allowed
>    to claim for themselves. Thus there is no risk to voting "no" on a block,
>    the work done by the Finney attacker is not wasted, and users do not have
>    to suffer through huge reorgs.
>
> This may seem a radical suggestion, but I think it's much less radical than
> some of the others being thrown around.
>
> The above approach works as long as the majority of hashpower is honest,
> defined to mean, working to stop double spending. This is the same security
> property as described in the white paper, thus this introduces no new
> security assumptions. Note that assuming *all* miners are dishonest and are
> willing to double spend automatically resolves the Bitcoin experiment as a
> failure, because that would invalidate the entire theory upon which the
> system is built. That doesn't mean the assumption is wrong! It may be that
> an entirely unregulated market for double spending prevention cannot work
> and the participants eventually all end up trashing the commons - but the
> hope is that smart incentives can replace the traditional reliance on law
> and regulation to avoid this.
>
> The voting mechanism would only apply to coinbases, not arbitrary
> transactions, thus it cannot be used to steal arbitrary users bitcoins. A
> majority of miners can already reallocate coinbases by forking them out,
> but this wastes energy and work presenting a significant discouragement to
> vote unless you already know via some out of band mechanism that you have a
> solid majority. Placing votes into the coinbase scriptSig as is done with
> other things avoids that problem.
>
> The identification of Finney blocks relies on miners to take explicit
> action, like downloading and running a tool that submits votes via RPC. It
> can be expected that double spending services would try to identify and
> block the sentinel transactions, which is why it's better to have the code
> that fights this arms race be out of process and developed externally to
> Bitcoin Core itself, which should ultimately just enforce the new (forking)
> rule change.
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
> ----- End forwarded message -----




From slush at centrum.cz  Wed Apr 23 19:46:39 2014
From: slush at centrum.cz (slush)
Date: Wed, 23 Apr 2014 21:46:39 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <474624AD-9374-46A8-98E1-863EC290252D@bitsofproof.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<53344FF8.7030204@gk2.sk>
	<CAPg+sBhbx5vy_hewAkFPaiXHzSMNH0qLhEYGjPmQMjR5StP-tw@mail.gmail.com>
	<CAJna-Hi0JnrF2_rUx0rGkdnsuCoaD01e3Gobpn+QqbL=D1Uivg@mail.gmail.com>
	<CAJna-HirtsGLfAhfUf9dAYEGWo6g=o=eAU187c2pdW8vDFGkPw@mail.gmail.com>
	<CAPg+sBg8wDH9yTUoyhRbuzVtbD8hGxya8tOnV4pMToHy3gLrzw@mail.gmail.com>
	<CAJna-HiN_1KQmpDJFFX6mGvM63RC0xwXxvfuorpihnzYf4=fsQ@mail.gmail.com>
	<CAJna-HgfpyHX_0AHwt1Hkj0qhD_-xOcpxsZ9KXq=7CPgwse1hA@mail.gmail.com>
	<CAPg+sBguSQ8dk1xXKinX+ez4BmdM3sz-huruuhD6NCTsp0kRBQ@mail.gmail.com>
	<CAJna-Hib6umrkG0pAQzQvsyBMxOU6P675TURsVuWSU_ci9+X_A@mail.gmail.com>
	<CAPg+sBiwzfXDAM0FKsBPi8d6E5y_nK5FDyfPvPhOTAA+f8654Q@mail.gmail.com>
	<CAJna-HhPm0U2odPgRji7zJqCZCWuXKT_=ayC2tsajjRX5TiCXg@mail.gmail.com>
	<CAJna-Hh2t-E=fm9V0EH+qOQTx+qsmcBemEJmML0G9PgsrJr5eg@mail.gmail.com>
	<CAE-z3OVCL34FMECHDC3d8OiRKYhVSkzZFU0cGHV0ifu09bCbJA@mail.gmail.com>
	<53580A73.9070208@gk2.sk>
	<CAJna-HhqYYHOKNiewssmk74E1vQQEwdO=v2_PmAKk-fQa0gADQ@mail.gmail.com>
	<474624AD-9374-46A8-98E1-863EC290252D@bitsofproof.com>
Message-ID: <CAJna-HicOeMhH2_YrDBjQ_pxY9QZV3F4u9FOuXVYbgG950T80Q@mail.gmail.com>

We do not want BIP64 to be incompatible with BIP32 in any way. BIP64 is
just set of some recommendations for wallet developers how to browse bip32
tree.

Modifying serialization format would break the compatibility.

However we have our solution for storing wallet birth time, which is out of
scope of BIP64, but we'll communicate it as soon as we'll write down that
idea to some more specific format.

Marek


On Wed, Apr 23, 2014 at 9:36 PM, Tamas Blummer <tamas at bitsofproof.com>wrote:

> Pieter suggested in IRC couple of months ago to append key birth to key
> serialization in xprv.... at unixtime format.
>
> What about picking this idea up in BIP64? It would greatly help the
> importing client.
>
> Regards,
>
> Tamas Blummer
> http://bitsofproof.com
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/db8776a4/attachment.html>

From gmaxwell at gmail.com  Wed Apr 23 19:47:46 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 23 Apr 2014 12:47:46 -0700
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
Message-ID: <CAAS2fgTJpFQKeVTQsAeqe0UK-2XhrLZG4oocEHM11_spWLtrEA@mail.gmail.com>

On Wed, Apr 23, 2014 at 12:19 PM, Mike Hearn <mike at plan99.net> wrote:
> That's the definition of a Finney attack, right?

A finney attack is where you attempt to mine a block with a
transaction paying you, and as soon as you are successful you quickly
make a transaction spending that coin to someone else, then release
the block after they've taken an irreversible action. If everything is
automated it should have something like a 99% success rate, though it
has a cost of some small increase in the number of orphan blocks you
experience.

> I mean, I hope that's the definition of a Finney attack, given that I coined
> the term :)

You might have coined the term, but I don't think the attack you're
describing is the attack Hal described:
https://bitcointalk.org/index.php?topic=3441.msg48384#msg48384

What you're talking about is just disagreement about the content of
the memory pool, but we have no consensus mechanism there (the
blockchain _is_ the consensus mechanism).  Mempools are sometimes
inconsistent all on their own, without any attacker being involved.

> These sorts of proposals are all just ways of saying block chains kind of
> suck and we should go back to using trusted third parties.

I think thats an unsophisticated view.

Consider this protocol.

I take some of my funds and assign them to a 2 of 2 multisig with
myself and Oscar. I do not announce this transaction until I get Oscar
to sign a timelocked anyonecanpay refund to send the coin back to me
(say in 3 months).  Oscar gives me my refund and I announce the
transaction.

Later I can make instant payments with oscar signing up until the
refund time comes clue to anyone who trusts Oscar to never double
spend.  For the receiver this is purely additive with regular
blockchain security: in that even with Oscar's help I cannot double
spend except where I would have been successful absent Oscar. On the
sender side, Oscar cannot up and steal my funds and he can't try to
extort me (except by creating a delay up to the refund time).

Oscar himself can be implemented as a majority M parties to further
increase confidence, though if you're talking about using this for low
value retail transactions? the fact that any cheating by oscar is
cryptographically provable (just show them the double signatures)
maybe be strong enough alone. (Though there is a multitude of other
proposals to provide more evidence of Oscar's honesty). There are also
ways to blind Oscar so he can't reliably identify which transactions
are ones he signed for.

I don't think this is at all a "return to trusted third parties"? that
it's a shrug and an admission of defeat. Its a very narrowly scoped
trust, filling in precisely where large scale decentralized consensus
is fundamentally weak... the result is something which combines
advantages from both classes and is stronger than either trust or
blockchains alone.  (I'm also not trying to say that an implementation
of this is _simple_ by any means, working out all the details is
hard.)

By contrast, I think proposals which overly depend on colluding miners
to behave in very specific ways are themselves just a way of saying
block chains suck unless we turn the miners themselves into a trusted
third party. I'm much more in favor of adding a little bit of
mastercard to transactions where mastercard is really what people
want, than turning mining? and thus bitcoin itself? into mastercard,
especially since miners? self selecting as they are? are a pretty poor
set of parties to act as trusted agents. :)

>> Doubly so because a 'nasty' party with non-trivial hash-power can
>> doublespend their own transactions
> If a miner is vertically integrated and defrauding merchants themselves,
> with no service component, pretty quickly people would talk to each other,
> notice this pattern and stop trading with them, making their coins rather
> useless. Also if their real identity is ever revealed they could be liable
> and there'd be a lot of people wanting to sue them.

We have an existence proof that it isn't so? you can say that it
wasn't consistent enough, but what is? There wasn't any major doubt
that they were actually doing it. They're the largest identifiable
pool as we speak.

I think, instead, that strong zero-conf security isn't a part of what
many people think of when they think of Bitcoin's characteristics.
Zero conf is risky, and I think for a lot of people thats okay.  If it
isn't there are ways to improve it that don't involve asking miners to
participate in a majority vote to take away funds from people.



From stick at gk2.sk  Wed Apr 23 19:49:38 2014
From: stick at gk2.sk (Pavol Rusnak)
Date: Wed, 23 Apr 2014 21:49:38 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <201404231944.14256.luke@dashjr.org>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<CAE-z3OUMp_uO07+_R_x2yRLbSCzK1J5isbVUYEY3KF4Tx16K2Q@mail.gmail.com>
	<53581480.5060103@gk2.sk> <201404231944.14256.luke@dashjr.org>
Message-ID: <53581952.1050602@gk2.sk>

On 04/23/2014 09:44 PM, Luke-Jr wrote:
> Why do clients need to use the features in BIP 64? If Electrum doesn't want to 
> use accounts, then it can just use account 0 for everything. Refund chains are 

As Andreas wrote earlier in this thread: "There is no "bare minimum".
Either you implement the "BIP" fully or not."

What you suggest does not follow the principle of least surprise.
Suppose user imports his BIP64 compatible wallet into Electrum, which
claims it is BIP64 compatible, but actually implements just a subset of
the spec (sticking account index to 0). The user now sees just a
fraction of his coins and is puzzled.

-- 
Best Regards / S pozdravom,

Pavol Rusnak <stick at gk2.sk>



From luke at dashjr.org  Wed Apr 23 19:55:08 2014
From: luke at dashjr.org (Luke-Jr)
Date: Wed, 23 Apr 2014 19:55:08 +0000
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <53581952.1050602@gk2.sk>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404231944.14256.luke@dashjr.org> <53581952.1050602@gk2.sk>
Message-ID: <201404231955.09287.luke@dashjr.org>

On Wednesday, April 23, 2014 7:49:38 PM Pavol Rusnak wrote:
> On 04/23/2014 09:44 PM, Luke-Jr wrote:
> > Why do clients need to use the features in BIP 64? If Electrum doesn't
> > want to use accounts, then it can just use account 0 for everything.
> > Refund chains are
> 
> As Andreas wrote earlier in this thread: "There is no "bare minimum".
> Either you implement the "BIP" fully or not."
> 
> What you suggest does not follow the principle of least surprise.
> Suppose user imports his BIP64 compatible wallet into Electrum, which
> claims it is BIP64 compatible, but actually implements just a subset of
> the spec (sticking account index to 0). The user now sees just a
> fraction of his coins and is puzzled.

Any wallet should import all the coins just fine, it just wouldn't *use* any 
account other than 0. Remember addresses are used to receive bitcoins; once 
the UTXOs are in the wallet, they are no longer associated with the address or 
any other details of how they were received.

Luke



From slush at centrum.cz  Wed Apr 23 19:57:46 2014
From: slush at centrum.cz (slush)
Date: Wed, 23 Apr 2014 21:57:46 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <201404231955.09287.luke@dashjr.org>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404231944.14256.luke@dashjr.org> <53581952.1050602@gk2.sk>
	<201404231955.09287.luke@dashjr.org>
Message-ID: <CAJna-Hhm-BDneR_qVzFtrGaMzs-7R-z5V49CVVv79mdOfBCD-w@mail.gmail.com>

On Wed, Apr 23, 2014 at 9:55 PM, Luke-Jr <luke at dashjr.org> wrote:

> Any wallet should import all the coins just fine, it just wouldn't *use*
> any
> account other than 0. Remember addresses are used to receive bitcoins; once
> the UTXOs are in the wallet, they are no longer associated with the
> address or
> any other details of how they were received.
>

Wallet don't see UTXO until it scans all branches/accounts on HD node
import.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/d88cb7b2/attachment.html>

From mike at plan99.net  Wed Apr 23 19:59:14 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 23 Apr 2014 21:59:14 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CAAS2fgTJpFQKeVTQsAeqe0UK-2XhrLZG4oocEHM11_spWLtrEA@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAAS2fgTJpFQKeVTQsAeqe0UK-2XhrLZG4oocEHM11_spWLtrEA@mail.gmail.com>
Message-ID: <CANEZrP0fUhiFeH4A1Y9sLCORpggJs3dxHz+exgpKaLQe9rgFeA@mail.gmail.com>

>
> What you're talking about is just disagreement about the content of
> the memory pool
>

That's the same thing. Whilst you're mining your double spend tx, it's in
your mempool but you don't broadcast it as per normal. Then when you find
the block you broadcast it to override everyone elses mempool. So yours and
theirs were inconsistent.

The only slight way BitUndo differs is, they provide it as a service, and I
don't know if they inform you when they found a block (probably not), so
you have to do the purchase and then hope BitUndo finds the next block.
Otherwise the purchase clears. But they could certainly add a
pre-notification before they broadcast to get back to the exact scheme
originally described, they have everything else in place.


> Oscar himself can be implemented as a majority M parties to further
> increase confidence


This just brings us back to square one. Who are these parties and what if I
pay them to be corrupt? What if they offer to be corrupt as a service?

Let's say I succeed in finding some parties who are incorruptible no matter
how large of a percentage I offer them. At this point, why bother with
miners at all? Why pay for double spend protection twice, once to a group
of Oscar's who are trustworthy and once to a group of miners who are not?

The point of the broadcast network and mining is so there can be lots of
Oscar's and I don't have to know who they are or sign up with them or put
any effort into evaluating their reputation.


> value retail transactions? the fact that any cheating by oscar is
> cryptographically provable (just show them the double signatures)
> maybe be strong enough alone.
>

But as you point out, cheating my GHash.io did not result in any obvious
negative consequence to them, despite that preventing double spending is
their sole task. Why would Oscar be different to GHash.io?

Trying to solve the problem of dishonest miners is effectively trying to
solve the "automatically find trusted third parties" problem at scale.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/8dac5331/attachment.html>

From tamas at bitsofproof.com  Wed Apr 23 20:01:16 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Wed, 23 Apr 2014 22:01:16 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <201404231955.09287.luke@dashjr.org>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404231944.14256.luke@dashjr.org> <53581952.1050602@gk2.sk>
	<201404231955.09287.luke@dashjr.org>
Message-ID: <26C186B9-B60D-4092-BA78-7039B23B7AE1@bitsofproof.com>


On 23.04.2014, at 21:55, Luke-Jr <luke at dashjr.org> wrote:
> Any wallet should import all the coins just fine, it just wouldn't *use* any 
> account other than 0. Remember addresses are used to receive bitcoins; once 
> the UTXOs are in the wallet, they are no longer associated with the address or 
> any other details of how they were received.

This is a bit idealistic. 
The wallet has to know how it got the UTXO in order to be able to spend it.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/baa76914/attachment.sig>

From luke at dashjr.org  Wed Apr 23 20:01:05 2014
From: luke at dashjr.org (Luke-Jr)
Date: Wed, 23 Apr 2014 20:01:05 +0000
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAJna-Hhm-BDneR_qVzFtrGaMzs-7R-z5V49CVVv79mdOfBCD-w@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404231955.09287.luke@dashjr.org>
	<CAJna-Hhm-BDneR_qVzFtrGaMzs-7R-z5V49CVVv79mdOfBCD-w@mail.gmail.com>
Message-ID: <201404232001.06679.luke@dashjr.org>

On Wednesday, April 23, 2014 7:57:46 PM slush wrote:
> On Wed, Apr 23, 2014 at 9:55 PM, Luke-Jr <luke at dashjr.org> wrote:
> > Any wallet should import all the coins just fine, it just wouldn't *use*
> > any
> > account other than 0. Remember addresses are used to receive bitcoins;
> > once the UTXOs are in the wallet, they are no longer associated with the
> > address or
> > any other details of how they were received.
> 
> Wallet don't see UTXO until it scans all branches/accounts on HD node
> import.

Yes, it should scan all possible (under the BIP-defined structure) branches 
regardless of which features it supports.

Luke



From luke at dashjr.org  Wed Apr 23 20:02:11 2014
From: luke at dashjr.org (Luke-Jr)
Date: Wed, 23 Apr 2014 20:02:11 +0000
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <26C186B9-B60D-4092-BA78-7039B23B7AE1@bitsofproof.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404231955.09287.luke@dashjr.org>
	<26C186B9-B60D-4092-BA78-7039B23B7AE1@bitsofproof.com>
Message-ID: <201404232002.12688.luke@dashjr.org>

On Wednesday, April 23, 2014 8:01:16 PM Tamas Blummer wrote:
> On 23.04.2014, at 21:55, Luke-Jr <luke at dashjr.org> wrote:
> > Any wallet should import all the coins just fine, it just wouldn't *use*
> > any account other than 0. Remember addresses are used to receive
> > bitcoins; once the UTXOs are in the wallet, they are no longer
> > associated with the address or any other details of how they were
> > received.
> 
> This is a bit idealistic.
> The wallet has to know how it got the UTXO in order to be able to spend it.

No it doesn't... Just the assigned scriptPubKey and secret(s) required to 
satisfy it.



From tamas at bitsofproof.com  Wed Apr 23 20:04:35 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Wed, 23 Apr 2014 22:04:35 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <201404232002.12688.luke@dashjr.org>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404231955.09287.luke@dashjr.org>
	<26C186B9-B60D-4092-BA78-7039B23B7AE1@bitsofproof.com>
	<201404232002.12688.luke@dashjr.org>
Message-ID: <FA51C5A4-245F-4135-8054-66BE0EE03C76@bitsofproof.com>

On 23.04.2014, at 22:02, Luke-Jr <luke at dashjr.org> wrote:

> On Wednesday, April 23, 2014 8:01:16 PM Tamas Blummer wrote:
>> On 23.04.2014, at 21:55, Luke-Jr <luke at dashjr.org> wrote:
>>> Any wallet should import all the coins just fine, it just wouldn't *use*
>>> any account other than 0. Remember addresses are used to receive
>>> bitcoins; once the UTXOs are in the wallet, they are no longer
>>> associated with the address or any other details of how they were
>>> received.
>> 
>> This is a bit idealistic.
>> The wallet has to know how it got the UTXO in order to be able to spend it.
> 
> No it doesn't... Just the assigned scriptPubKey and secret(s) required to 
> satisfy it.
> 

To know the secret it needs to know which key coordinate to use that is logically the same as knowing the address it used to receive it.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/5bc05ae4/attachment.sig>

From stick at gk2.sk  Wed Apr 23 20:04:03 2014
From: stick at gk2.sk (Pavol Rusnak)
Date: Wed, 23 Apr 2014 22:04:03 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <201404232001.06679.luke@dashjr.org>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404231955.09287.luke@dashjr.org>
	<CAJna-Hhm-BDneR_qVzFtrGaMzs-7R-z5V49CVVv79mdOfBCD-w@mail.gmail.com>
	<201404232001.06679.luke@dashjr.org>
Message-ID: <53581CB3.2000109@gk2.sk>

On 04/23/2014 10:01 PM, Luke-Jr wrote:
> Yes, it should scan all possible (under the BIP-defined structure) branches 
> regardless of which features it supports.

So you suggest to scan for accounts, show balances but don't allow user
to spend them? Does not seem right to me.

-- 
Best Regards / S pozdravom,

Pavol Rusnak <stick at gk2.sk>



From kristovatlas at gmail.com  Wed Apr 23 20:05:49 2014
From: kristovatlas at gmail.com (Kristov Atlas)
Date: Wed, 23 Apr 2014 16:05:49 -0400
Subject: [Bitcoin-development] Development Roadmap of Bitcoin Core 0.9.2
In-Reply-To: <CAEz79PrAg=yydd3UOk51wGQUWey-KZHUH1Npzwb=qL+6zTj+pQ@mail.gmail.com>
References: <CAEz79PrAg=yydd3UOk51wGQUWey-KZHUH1Npzwb=qL+6zTj+pQ@mail.gmail.com>
Message-ID: <53581D1D.1000709@gmail.com>

On 04/22/2014 09:30 AM, Warren Togami Jr. wrote:
> Bitcoin-Translators mailing list is an announce-only mailing list for 
> developers to communicate to translators at particular times when new 
> translations are needed.  Replies and discussion would go to the 
> bitcoin dev list.  Subscriptions to this list would additionally be 
> valuable to the project as it allows for a convenient way to ask for 
> translations of other related projects like bitcoin.org 
> <http://bitcoin.org> that are hosted on theTransifex platform. 
>  Whenever source strings of significance are changed or deadlines are 
> announced, translators will learn of work to be done in Transifex 
> quickly as they will all be subscribed to this announce list. 
>  Discussion of translation issues should be on the Bitcoin-Development 
> list.
>
> Development Roadmap of Bitcoin Core 0.9.2
>
> The Bitcoin Core developers have a desire to do a mostly bug-fix and 
> translation update release in v0.9.2. A feature and string freeze will 
> start about 3 weeks from now.
>
>
> The purpose of this development roadmap is to communicate the project 
> intent and to better organize volunteers. Hopefully doing so will make 
> clear when particular types of contributions are most welcome and help 
> to push the release process forward in a more timely manner while also 
> improving the quality of the release.  Missing a target goal is OK. 
> The developers may decide to delay particular goals if there are good 
> reasons on a case-by-case basis. While schedules may slip, it is 
> generally a good thing for a goal to have existed.
>
>
> Schedule (subject to change)
>
> 13 May 2014:Feature freeze.  Source string freeze.  Release candidate.
>
> 20 May 2014: Testing of a release candidate is roughly a week. More 
> time can be added at the discretion of the developers to allow for 
> testing if further release candidates are deemed necessary due to 
> subsequent changes.
>
>
> Nightly Gitian Builds
>
> https://bitcointalk.org/index.php?topic=571414.0
>
> To make it easier for non-developers and translators to get involved 
> in testing unofficial deterministic nightly builds are now available.
>
>
> Warren Togami

I see that the latest nightly build (thanks for that, Warren) is still 
not compatible with Tails/Debian Squeeze. Is there still an intention to 
address this issue? Might it be fixed by 0.9.2?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/1be17057/attachment.html>

From pieter.wuille at gmail.com  Wed Apr 23 20:08:18 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 23 Apr 2014 22:08:18 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <201404232001.06679.luke@dashjr.org>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404231955.09287.luke@dashjr.org>
	<CAJna-Hhm-BDneR_qVzFtrGaMzs-7R-z5V49CVVv79mdOfBCD-w@mail.gmail.com>
	<201404232001.06679.luke@dashjr.org>
Message-ID: <CAPg+sBhhYDMuVa0ahqNutUCsJV213dYDL9QCkaD+Q02EoRMw=g@mail.gmail.com>

That's the point. BIP64 specifies such a structure, and you have to scan
all that it defines.

If you want to write wallet software that does not have the complexity to
deal with just one account, it is not BIP64 compliant. It could try to
define its own purpose system, with a hierarchy without accounts in it. I'm
not sure this is a very interesting use case, but I like how strict it is.
Construction of related chains for multisig addresses is perhaps a better
example of a different purpose structure.
 On 23 Apr 2014 22:03, "Luke-Jr" <luke at dashjr.org> wrote:

> On Wednesday, April 23, 2014 7:57:46 PM slush wrote:
> > On Wed, Apr 23, 2014 at 9:55 PM, Luke-Jr <luke at dashjr.org> wrote:
> > > Any wallet should import all the coins just fine, it just wouldn't
> *use*
> > > any
> > > account other than 0. Remember addresses are used to receive bitcoins;
> > > once the UTXOs are in the wallet, they are no longer associated with
> the
> > > address or
> > > any other details of how they were received.
> >
> > Wallet don't see UTXO until it scans all branches/accounts on HD node
> > import.
>
> Yes, it should scan all possible (under the BIP-defined structure) branches
> regardless of which features it supports.
>
> Luke
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/056fd594/attachment.html>

From luke at dashjr.org  Wed Apr 23 20:09:07 2014
From: luke at dashjr.org (Luke-Jr)
Date: Wed, 23 Apr 2014 20:09:07 +0000
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <53581CB3.2000109@gk2.sk>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404232001.06679.luke@dashjr.org> <53581CB3.2000109@gk2.sk>
Message-ID: <201404232009.08791.luke@dashjr.org>

On Wednesday, April 23, 2014 8:04:03 PM Pavol Rusnak wrote:
> On 04/23/2014 10:01 PM, Luke-Jr wrote:
> > Yes, it should scan all possible (under the BIP-defined structure)
> > branches regardless of which features it supports.
> 
> So you suggest to scan for accounts, show balances but don't allow user
> to spend them? Does not seem right to me.

Scan all branches for UTXOs, then you have the balance for the wallet. Account 
balances are metadata, so cannot be known from the seed alone. If you want to 
have a way to restore accounts, you must define some more detailed wallet file 
format (which could be built on top of this).

On Wednesday, April 23, 2014 8:04:35 PM you wrote:
> On 23.04.2014, at 22:02, Luke-Jr <luke at dashjr.org> wrote:
> > On Wednesday, April 23, 2014 8:01:16 PM Tamas Blummer wrote:
> >> The wallet has to know how it got the UTXO in order to be able to spend
> >> it.
> > 
> > No it doesn't... Just the assigned scriptPubKey and secret(s) required to
> > satisfy it.
> 
> To know the secret it needs to know which key coordinate to use that is
> logically the same as knowing the address it used to receive it.

Sure, it *knows* what address was used to receive it. But at the point it's a 
UTXO, that address is no longer relevant.

Luke



From pieter.wuille at gmail.com  Wed Apr 23 20:12:37 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 23 Apr 2014 22:12:37 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <53581CB3.2000109@gk2.sk>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404231955.09287.luke@dashjr.org>
	<CAJna-Hhm-BDneR_qVzFtrGaMzs-7R-z5V49CVVv79mdOfBCD-w@mail.gmail.com>
	<201404232001.06679.luke@dashjr.org> <53581CB3.2000109@gk2.sk>
Message-ID: <CAPg+sBgssdOSuzGaWy2j1ed+s-oNseH9Yti8NZoHc_sBtr7fvQ@mail.gmail.com>

I believe Luke means scanning chains as defined by the structure, but not
handing out addresses from other accounts than the first one.

That's certainly a possibly way to compatibly implement BIP64, but it
doesn't reduce all that much complexity. I hope people would choose that
over defining their own accountless structure though.
On 23 Apr 2014 22:06, "Pavol Rusnak" <stick at gk2.sk> wrote:

> On 04/23/2014 10:01 PM, Luke-Jr wrote:
> > Yes, it should scan all possible (under the BIP-defined structure)
> branches
> > regardless of which features it supports.
>
> So you suggest to scan for accounts, show balances but don't allow user
> to spend them? Does not seem right to me.
>
> --
> Best Regards / S pozdravom,
>
> Pavol Rusnak <stick at gk2.sk>
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/05488236/attachment.html>

From tamas at bitsofproof.com  Wed Apr 23 20:17:12 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Wed, 23 Apr 2014 22:17:12 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <201404232009.08791.luke@dashjr.org>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404232001.06679.luke@dashjr.org> <53581CB3.2000109@gk2.sk>
	<201404232009.08791.luke@dashjr.org>
Message-ID: <34401F0D-FDB9-4C95-AC57-660DC3E5331B@bitsofproof.com>

On 23.04.2014, at 22:09, Luke-Jr <luke at dashjr.org> wrote:

> On Wednesday, April 23, 2014 8:04:03 PM Pavol Rusnak wrote:
>> On 04/23/2014 10:01 PM, Luke-Jr wrote:
>>> Yes, it should scan all possible (under the BIP-defined structure)
>>> branches regardless of which features it supports.
>> 
>> So you suggest to scan for accounts, show balances but don't allow user
>> to spend them? Does not seem right to me.
> 
> Scan all branches for UTXOs, then you have the balance for the wallet. Account 
> balances are metadata, so cannot be known from the seed alone. If you want to 
> have a way to restore accounts, you must define some more detailed wallet file 
> format (which could be built on top of this).
> 
> On Wednesday, April 23, 2014 8:04:35 PM you wrote:
>> On 23.04.2014, at 22:02, Luke-Jr <luke at dashjr.org> wrote:
>>> On Wednesday, April 23, 2014 8:01:16 PM Tamas Blummer wrote:
>>>> The wallet has to know how it got the UTXO in order to be able to spend
>>>> it.
>>> 
>>> No it doesn't... Just the assigned scriptPubKey and secret(s) required to
>>> satisfy it.
>> 
>> To know the secret it needs to know which key coordinate to use that is
>> logically the same as knowing the address it used to receive it.
> 
> Sure, it *knows* what address was used to receive it. But at the point it's a 
> UTXO, that address is no longer relevant.
> 

In context of BIP32 one does not store secrets but re-create them on-the-fly if needed using key coordinates known to the UTXO.
Individual secrets per UTXO are about as irrelevant and accessible as addresses.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/73badbe8/attachment.sig>

From stick at gk2.sk  Wed Apr 23 20:16:45 2014
From: stick at gk2.sk (Pavol Rusnak)
Date: Wed, 23 Apr 2014 22:16:45 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <201404232009.08791.luke@dashjr.org>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404232001.06679.luke@dashjr.org> <53581CB3.2000109@gk2.sk>
	<201404232009.08791.luke@dashjr.org>
Message-ID: <53581FAD.5010806@gk2.sk>

On 04/23/2014 10:09 PM, Luke-Jr wrote:
> Scan all branches for UTXOs, then you have the balance for the wallet. Account 
> balances are metadata, so cannot be known from the seed alone. If you want to 
> have a way to restore accounts, you must define some more detailed wallet file 
> format (which could be built on top of this).

I think one of the following is happening:

a) you have not read the document
b) you don't understand what accounts are, because you have not read
   the document
c) you don't understand how restoring accounts work, because you
   have not read the document
d) you don't understand that accounts funds are not meant to be mixed
   together, because you have not read the document
e) I got your emails wrong because I am not a native speaker,
   but please read the the document ;-)

-- 
Best Regards / S pozdravom,

Pavol Rusnak <stick at gk2.sk>



From gmaxwell at gmail.com  Wed Apr 23 20:24:09 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 23 Apr 2014 13:24:09 -0700
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP0fUhiFeH4A1Y9sLCORpggJs3dxHz+exgpKaLQe9rgFeA@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAAS2fgTJpFQKeVTQsAeqe0UK-2XhrLZG4oocEHM11_spWLtrEA@mail.gmail.com>
	<CANEZrP0fUhiFeH4A1Y9sLCORpggJs3dxHz+exgpKaLQe9rgFeA@mail.gmail.com>
Message-ID: <CAAS2fgR1dRFVqhTNn55dZ6FS5zDM0aHs4ROPSD37hWwzLUKfCg@mail.gmail.com>

On Wed, Apr 23, 2014 at 12:59 PM, Mike Hearn <mike at plan99.net> wrote:
>> What you're talking about is just disagreement about the content of
>> the memory pool
> That's the same thing. Whilst you're mining your double spend tx, it's in
> your mempool but you don't broadcast it as per normal. Then when you find
> the block you broadcast it to override everyone elses mempool. So yours and
> theirs were inconsistent.

The difference is when you transact.  In the attack Hal described you
transact with your victim only after finding a block but before
announcing it.

> don't know if they inform you when they found a block (probably not), so you
> have to do the purchase and then hope BitUndo finds the next block.

Right, this works in the Bitcoin network today absent any collusion by
the miners. You give one miner a transaction and you give every other
node you can reach another transaction.  You then hope your selected
miner finds the next block and 'undoes' the transaction you gave the
rest of the network.

> This just brings us back to square one. Who are these parties and what if I
> pay them to be corrupt? What if they offer to be corrupt as a service?
>
> Let's say I succeed in finding some parties who are incorruptible no matter
> how large of a percentage I offer them. At this point, why bother with
> miners at all? Why pay for double spend protection twice, once to a group of
> Oscar's who are trustworthy and once to a group of miners who are not?
>
> The point of the broadcast network and mining is so there can be lots of
> Oscar's and I don't have to know who they are or sign up with them or put
> any effort into evaluating their reputation.

But it isn't at all the same thing.  Miners select themselves based on
controlling hash-power. You can distrust a miner all you like but all
your distrust does not prevent him from participating in the
consensus, potentially to your detriment.  Moreover, the set of miners
has to be the same for everyone or otherwise the network doesn't
converge. There are miners I _know_ to be scoundrels, but there is
nothing I can do about it.

Someone you ask to not double spend is an entirely separate matter.
They aren't self-selecting: you select who you trust to not make
double spends and there is no need for this trust to be globally
consistent. If they behave in an untrustworthy way you can instantly
stop honoring them because the bad action is provable beyond any doubt
and never trust them again (unlike mempool consistency)... and you can
do this even if everyone else is too foolish to do so for some reason.

The trustworthness of oscars needs only be limited and is different in
kind from the kind of 'trust' we need over the history? they
arbitrating over the ordering of some subset of transactions right at
the tip of the chain, and only those transaction of people who have
specifically chosen to use them, of lower value transactions where you
need instant settlement.  Why pay twice? Because you're actually
getting a different part of your security from each, and the result is
additive.

There is no such thing as an uncorruptable party, invoking that is a
useless strawman. Instead we can consider how difficult the corruption
is and what can happen if they're corrupted and hope to balance the
risks and the controls for those risks.  Any self-selectingness as
anonymity (in the not-previously-enumerated sense) of mining is
important for censorship security but it's terrible for other things
like getting reliable mempool behavior.

> But as you point out, cheating my GHash.io did not result in any obvious
> negative consequence to them, despite that preventing double spending is
> their sole task. Why would Oscar be different to GHash.io?

Because you can choose to stop trusting an oscar while you?
individually? can't choose anything about ghash.io.  To stop GHash.io
we would have to take away their hardware or change the Bitcoin
protocol to make their hardware useless, and in the latter case we'd
_all_ have to agree to do this not just some (perhaps quite large)
subset of us who doesn't want to trust them, and even though it is
quite apparent what they did there is still some room to claim doubt.

> Trying to solve the problem of dishonest miners is effectively trying to
> solve the "automatically find trusted third parties" problem at scale.

Mining is universal? everyone must use the same miners, trust seldom
is seldom universal and shouldn't be. The trust we have in mining is
exceptionally limited, I think any effort to increase it is doomed to
fail? both because trust heavy systems stink, because mining is a bad
fit for trust, and because increasing the requirements create other
exposures and vulnerabilities.



From laanwj at gmail.com  Wed Apr 23 20:28:27 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 23 Apr 2014 22:28:27 +0200
Subject: [Bitcoin-development] Development Roadmap of Bitcoin Core 0.9.2
In-Reply-To: <53581D1D.1000709@gmail.com>
References: <CAEz79PrAg=yydd3UOk51wGQUWey-KZHUH1Npzwb=qL+6zTj+pQ@mail.gmail.com>
	<53581D1D.1000709@gmail.com>
Message-ID: <CA+s+GJD2X2JWorkisuJRG6s0HqorL7EyR1ruHB+AmLYDsJTVLA@mail.gmail.com>

> I see that the latest nightly build (thanks for that, Warren) is still not
> compatible with Tails/Debian Squeeze. Is there still an intention to address
> this issue? Might it be fixed by 0.9.2?

Can you be more specific as to what problem you're having?

Wladimir



From luke at dashjr.org  Wed Apr 23 20:32:07 2014
From: luke at dashjr.org (Luke-Jr)
Date: Wed, 23 Apr 2014 20:32:07 +0000
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <53581FAD.5010806@gk2.sk>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404232009.08791.luke@dashjr.org> <53581FAD.5010806@gk2.sk>
Message-ID: <201404232032.08740.luke@dashjr.org>

On Wednesday, April 23, 2014 8:16:45 PM Pavol Rusnak wrote:
> On 04/23/2014 10:09 PM, Luke-Jr wrote:
> > Scan all branches for UTXOs, then you have the balance for the wallet.
> > Account balances are metadata, so cannot be known from the seed alone.
> > If you want to have a way to restore accounts, you must define some more
> > detailed wallet file format (which could be built on top of this).
> 
> I think one of the following is happening:
> 
> a) you have not read the document
> b) you don't understand what accounts are, because you have not read
>    the document
> c) you don't understand how restoring accounts work, because you
>    have not read the document
> d) you don't understand that accounts funds are not meant to be mixed
>    together, because you have not read the document
> e) I got your emails wrong because I am not a native speaker,
>    but please read the the document ;-)

You missed one:
f) I missed the part where BIP 32 redefined "account" to mean "subwallet" 
instead of what has traditionally been called "account" in Bitcoin.

:)

In that case, single-subwallet wallet software probably needs to have the user 
provide a subwallet number in addition to the seed.

Luke



From stick at gk2.sk  Wed Apr 23 20:35:50 2014
From: stick at gk2.sk (Pavol Rusnak)
Date: Wed, 23 Apr 2014 22:35:50 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <201404232032.08740.luke@dashjr.org>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404232009.08791.luke@dashjr.org> <53581FAD.5010806@gk2.sk>
	<201404232032.08740.luke@dashjr.org>
Message-ID: <53582426.4030601@gk2.sk>

On 04/23/2014 10:32 PM, Luke-Jr wrote:
> f) I missed the part where BIP 32 redefined "account" to mean "subwallet" 
> instead of what has traditionally been called "account" in Bitcoin.

Ah, okay. The last time I saw Bitcoin-qt it was still using independent
addresses.

> In that case, single-subwallet wallet software probably needs to have the user 
> provide a subwallet number in addition to the seed.

Which brings us back to my original complaint that the user can be
confused because he doesn't see all his funds.

-- 
Best Regards / S pozdravom,

Pavol Rusnak <stick at gk2.sk>



From mike at plan99.net  Wed Apr 23 20:37:20 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 23 Apr 2014 22:37:20 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CAAS2fgR1dRFVqhTNn55dZ6FS5zDM0aHs4ROPSD37hWwzLUKfCg@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAAS2fgTJpFQKeVTQsAeqe0UK-2XhrLZG4oocEHM11_spWLtrEA@mail.gmail.com>
	<CANEZrP0fUhiFeH4A1Y9sLCORpggJs3dxHz+exgpKaLQe9rgFeA@mail.gmail.com>
	<CAAS2fgR1dRFVqhTNn55dZ6FS5zDM0aHs4ROPSD37hWwzLUKfCg@mail.gmail.com>
Message-ID: <CANEZrP2t09bzmDkkWK3V2GpqEt54KhFnUQ8_u9ULMqniMaOA8Q@mail.gmail.com>

On Wed, Apr 23, 2014 at 10:24 PM, Gregory Maxwell <gmaxwell at gmail.com>wrote:

> Right, this works in the Bitcoin network today absent any collusion by
> the miners. You give one miner a transaction and you give every other
> node you can reach another transaction.
>

Yes, but that can be fixed with double spend alerts.


> Someone you ask to not double spend is an entirely separate matter.
> They aren't self-selecting: you select who you trust to not make
> double spends and there is no need for this trust to be globally
> consistent.
>

No? It's not just your decision that matters, the receiver also has to
trust them. They're like a dispute mediator in this regard. You can pick
whoever you want, but that doesn't matter if the receiver doesn't recognise
them or trust them. You have to find an overlap to make an instant trade.

In practice if people have to think about this, evaluate brands etc then
you'd get a very small number of parties because the value of global
agreement is so high. Then it becomes hard to remove ones that have a lot
of momentum.

The censorship resistance of the block chain doesn't matter if your double
spending partners refuse to help you spend your money (because they're
being coerced). The censorship can just happen at a different place.


> To stop GHash.io we would have to take away their hardware or change the
> Bitcoin
> protocol to make their hardware useless
>

..... or, have a majority decide to zero out their coinbase rewards for
blocks that double spent against dice sites. That wouldn't undo the double
spend, but you can't do that with the multisig scheme either. All you can
do is punish the corrupted party post-hoc, either by not using them again,
or by "unpaying" them for the service they did not provide.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/91399fa1/attachment.html>

From wtogami at gmail.com  Wed Apr 23 20:39:21 2014
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Wed, 23 Apr 2014 10:39:21 -1000
Subject: [Bitcoin-development] Development Roadmap of Bitcoin Core 0.9.2
In-Reply-To: <53581D1D.1000709@gmail.com>
References: <CAEz79PrAg=yydd3UOk51wGQUWey-KZHUH1Npzwb=qL+6zTj+pQ@mail.gmail.com>
	<53581D1D.1000709@gmail.com>
Message-ID: <CAEz79Poy0XEVyC=nOdhYNVOASvfB-2zHJcjU2hvjA7iDWGDDyw@mail.gmail.com>

On Wed, Apr 23, 2014 at 10:05 AM, Kristov Atlas <kristovatlas at gmail.com>wrote:

> I see that the latest nightly build (thanks for that, Warren) is still not
> compatible with Tails/Debian Squeeze. Is there still an intention to
> address this issue? Might it be fixed by 0.9.2?
>

If I understand the situation, bitcoind does work but not bitcoin-qt due to
qt-4.6?  If that is so, then the official Bitcoin 0.8.6 binaries didn't
work on Squeeze either this is not a regression.

The priority is for bitcoind to work on as many distributions as reasonably
possible as older stable distributions are most often headless.  If you are
a rare user who needs Bitcoin-Qt on an incompatible system you can at least
build it from source.

Warren
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/b39f21e4/attachment.html>

From luke at dashjr.org  Wed Apr 23 20:41:13 2014
From: luke at dashjr.org (Luke-Jr)
Date: Wed, 23 Apr 2014 20:41:13 +0000
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <53582426.4030601@gk2.sk>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404232032.08740.luke@dashjr.org> <53582426.4030601@gk2.sk>
Message-ID: <201404232041.14664.luke@dashjr.org>

On Wednesday, April 23, 2014 8:35:50 PM Pavol Rusnak wrote:
> On 04/23/2014 10:32 PM, Luke-Jr wrote:
> > f) I missed the part where BIP 32 redefined "account" to mean "subwallet"
> > instead of what has traditionally been called "account" in Bitcoin.
> 
> Ah, okay. The last time I saw Bitcoin-qt it was still using independent
> addresses.

It is. Accounts have been a bitcoind feature since before 0.4.

> > In that case, single-subwallet wallet software probably needs to have the
> > user provide a subwallet number in addition to the seed.
> 
> Which brings us back to my original complaint that the user can be
> confused because he doesn't see all his funds.

I don't see how. The user knows he has money in different subwallets. As long 
as he has a way to specify which subwallet he is accessing in single-subwallet 
clients, there shouldn't be a problem.

Luke



From stick at gk2.sk  Wed Apr 23 20:43:57 2014
From: stick at gk2.sk (Pavol Rusnak)
Date: Wed, 23 Apr 2014 22:43:57 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <201404232041.14664.luke@dashjr.org>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404232032.08740.luke@dashjr.org> <53582426.4030601@gk2.sk>
	<201404232041.14664.luke@dashjr.org>
Message-ID: <5358260D.9040607@gk2.sk>

On 04/23/2014 10:41 PM, Luke-Jr wrote:
> I don't see how. The user knows he has money in different subwallets. As long 
> as he has a way to specify which subwallet he is accessing in single-subwallet 
> clients, there shouldn't be a problem.

Right. But these clients have no right to call themselves BIP64
compatible then.

-- 
Best Regards / S pozdravom,

Pavol Rusnak <stick at gk2.sk>



From aritter at gmail.com  Wed Apr 23 20:44:29 2014
From: aritter at gmail.com (Adam Ritter)
Date: Wed, 23 Apr 2014 22:44:29 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP2t09bzmDkkWK3V2GpqEt54KhFnUQ8_u9ULMqniMaOA8Q@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAAS2fgTJpFQKeVTQsAeqe0UK-2XhrLZG4oocEHM11_spWLtrEA@mail.gmail.com>
	<CANEZrP0fUhiFeH4A1Y9sLCORpggJs3dxHz+exgpKaLQe9rgFeA@mail.gmail.com>
	<CAAS2fgR1dRFVqhTNn55dZ6FS5zDM0aHs4ROPSD37hWwzLUKfCg@mail.gmail.com>
	<CANEZrP2t09bzmDkkWK3V2GpqEt54KhFnUQ8_u9ULMqniMaOA8Q@mail.gmail.com>
Message-ID: <CAKuKjyV+FQs1goNK1uWXVg7ky4aGiROcTZ5idM3Ug2-+5bTc2w@mail.gmail.com>

Isn't a faster blockchain for transactions (maybe as a sidechain) solving
the problem? If there would be a safe way for 0-confirmation transactions,
the Bitcoin blockchain wouldn't even be needed.


On Wed, Apr 23, 2014 at 10:37 PM, Mike Hearn <mike at plan99.net> wrote:

> On Wed, Apr 23, 2014 at 10:24 PM, Gregory Maxwell <gmaxwell at gmail.com>wrote:
>
>> Right, this works in the Bitcoin network today absent any collusion by
>> the miners. You give one miner a transaction and you give every other
>> node you can reach another transaction.
>>
>
> Yes, but that can be fixed with double spend alerts.
>
>
>> Someone you ask to not double spend is an entirely separate matter.
>> They aren't self-selecting: you select who you trust to not make
>> double spends and there is no need for this trust to be globally
>> consistent.
>>
>
> No? It's not just your decision that matters, the receiver also has to
> trust them. They're like a dispute mediator in this regard. You can pick
> whoever you want, but that doesn't matter if the receiver doesn't recognise
> them or trust them. You have to find an overlap to make an instant trade.
>
> In practice if people have to think about this, evaluate brands etc then
> you'd get a very small number of parties because the value of global
> agreement is so high. Then it becomes hard to remove ones that have a lot
> of momentum.
>
> The censorship resistance of the block chain doesn't matter if your double
> spending partners refuse to help you spend your money (because they're
> being coerced). The censorship can just happen at a different place.
>
>
>> To stop GHash.io we would have to take away their hardware or change the
>> Bitcoin
>> protocol to make their hardware useless
>>
>
> ..... or, have a majority decide to zero out their coinbase rewards for
> blocks that double spent against dice sites. That wouldn't undo the double
> spend, but you can't do that with the multisig scheme either. All you can
> do is punish the corrupted party post-hoc, either by not using them again,
> or by "unpaying" them for the service they did not provide.
>
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/381deca8/attachment.html>

From mike at plan99.net  Wed Apr 23 20:51:36 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 23 Apr 2014 22:51:36 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CAKuKjyV+FQs1goNK1uWXVg7ky4aGiROcTZ5idM3Ug2-+5bTc2w@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAAS2fgTJpFQKeVTQsAeqe0UK-2XhrLZG4oocEHM11_spWLtrEA@mail.gmail.com>
	<CANEZrP0fUhiFeH4A1Y9sLCORpggJs3dxHz+exgpKaLQe9rgFeA@mail.gmail.com>
	<CAAS2fgR1dRFVqhTNn55dZ6FS5zDM0aHs4ROPSD37hWwzLUKfCg@mail.gmail.com>
	<CANEZrP2t09bzmDkkWK3V2GpqEt54KhFnUQ8_u9ULMqniMaOA8Q@mail.gmail.com>
	<CAKuKjyV+FQs1goNK1uWXVg7ky4aGiROcTZ5idM3Ug2-+5bTc2w@mail.gmail.com>
Message-ID: <CANEZrP0pJgjCzEZg19-Xnf20PD7FCRqF8=jQ_VBrznq=w_vQGQ@mail.gmail.com>

On Wed, Apr 23, 2014 at 10:44 PM, Adam Ritter <aritter at gmail.com> wrote:

> Isn't a faster blockchain for transactions (maybe as a sidechain) solving
> the problem? If there would be a safe way for 0-confirmation transactions,
> the Bitcoin blockchain wouldn't even be needed.
>

The 10 minute average comes from a desire to balance wasted work due to
natural chain splits with latency. With a very fast block interval you end
up with lots of forks and things take longer to converge, also, it can make
attacks easier because an attacker is building on his own blocks so he
doesn't suffer propagation delays and the attendant splits.

It's not clear you can just make a faster block chain. 10 minutes is
somewhat arbitrary, it could be 5 minutes and the system would still work,
but it probably can't be 5 seconds.

Unfortunately for best physical-world usability you really need very fast
payments. A few seconds is competitive with modern credit cards. The new
contactless cards seem to be able to reliably manage <1 sec which is
impressive. Waiting for blocks in a block chain can't really work. Waiting
for propagation can work and has been working so far. Hence, the question
of how that mechanism can be kept working in the face of malicious miners,
before you end up having to fall back to trusted third parties and
recentralisation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/642547fe/attachment.html>

From kristovatlas at gmail.com  Wed Apr 23 20:52:31 2014
From: kristovatlas at gmail.com (Kristov Atlas)
Date: Wed, 23 Apr 2014 16:52:31 -0400
Subject: [Bitcoin-development] Development Roadmap of Bitcoin Core 0.9.2
In-Reply-To: <CAEz79Poy0XEVyC=nOdhYNVOASvfB-2zHJcjU2hvjA7iDWGDDyw@mail.gmail.com>
References: <CAEz79PrAg=yydd3UOk51wGQUWey-KZHUH1Npzwb=qL+6zTj+pQ@mail.gmail.com>	<53581D1D.1000709@gmail.com>
	<CAEz79Poy0XEVyC=nOdhYNVOASvfB-2zHJcjU2hvjA7iDWGDDyw@mail.gmail.com>
Message-ID: <5358280F.2050108@gmail.com>

On 04/23/2014 04:39 PM, Warren Togami Jr. wrote:
> On Wed, Apr 23, 2014 at 10:05 AM, Kristov Atlas 
> <kristovatlas at gmail.com <mailto:kristovatlas at gmail.com>> wrote:
>
>     I see that the latest nightly build (thanks for that, Warren) is
>     still not compatible with Tails/Debian Squeeze. Is there still an
>     intention to address this issue? Might it be fixed by 0.9.2?
>
>
> If I understand the situation, bitcoind does work but not bitcoin-qt 
> due to qt-4.6?  If that is so, then the official Bitcoin 0.8.6 
> binaries didn't work on Squeeze either this is not a regression.
>
> The priority is for bitcoind to work on as many distributions as 
> reasonably possible as older stable distributions are most often 
> headless.  If you are a rare user who needs Bitcoin-Qt on an 
> incompatible system you can at least build it from source.
>
> Warren

Bitcoin-Qt 0.8.6 worked fine on Tails (and Debian Squeeze, I assume). 
So, it is a regression.

Here's output from the latest nightly build for Linux:

amnesia at amnesia:~/bitcoin-0.9.99.0-20140422-2bbecc8-linux/bin/32$ ./bitcoin-qt
./bitcoin-qt: symbol lookup error: ./bitcoin-qt: undefined symbol: _ZN19QAbstractProxyModel11setItemDataERK11QModelIndexRK4QMapIi8QVariantE

Since Tails has many simple development tools like "make" stripped out 
for security reasons, one could not simply build from source in Tails. 
It might be possible to build in Debian Squeeze and transplant that, 
however. I'll have to give that a shot some time. I'd argue that Tails 
is an incredibly important -- and hardly obscure -- Linux distribution 
that Bitcoin should endeavour to support. See: 
https://tails.boum.org/press/index.en.html

-Kristov
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/be54ba9b/attachment.html>

From gmaxwell at gmail.com  Wed Apr 23 20:53:59 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 23 Apr 2014 13:53:59 -0700
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CAKuKjyV+FQs1goNK1uWXVg7ky4aGiROcTZ5idM3Ug2-+5bTc2w@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAAS2fgTJpFQKeVTQsAeqe0UK-2XhrLZG4oocEHM11_spWLtrEA@mail.gmail.com>
	<CANEZrP0fUhiFeH4A1Y9sLCORpggJs3dxHz+exgpKaLQe9rgFeA@mail.gmail.com>
	<CAAS2fgR1dRFVqhTNn55dZ6FS5zDM0aHs4ROPSD37hWwzLUKfCg@mail.gmail.com>
	<CANEZrP2t09bzmDkkWK3V2GpqEt54KhFnUQ8_u9ULMqniMaOA8Q@mail.gmail.com>
	<CAKuKjyV+FQs1goNK1uWXVg7ky4aGiROcTZ5idM3Ug2-+5bTc2w@mail.gmail.com>
Message-ID: <CAAS2fgRWfcxYaLRY69=LE_+sDfYLNUTcimw4cE-2Byw7QonC=w@mail.gmail.com>

On Wed, Apr 23, 2014 at 1:44 PM, Adam Ritter <aritter at gmail.com> wrote:
> Isn't a faster blockchain for transactions (maybe as a sidechain) solving
> the problem? If there would be a safe way for 0-confirmation transactions,
> the Bitcoin blockchain wouldn't even be needed.

Large scale consensus can't generally provide instantly irreversible
transactions directly: Increasing the block speed can't help past the
point where the time starts getting close to the network diameter...
you simply can't tell what a consensus of a group of nodes is until
several times the light cone that includes all of them.  And if you
start getting close to the limit you dilute the power working on the
consensus and potentially make life easier for a large attacker.

Maybe other chains with different parameters could achieve a different
tradeoff which was better suited to low value retail transactions
(e.g. where you want a soft confirmation fast). A choice of tradeoffs
could be very useful, and maybe you can practically get close enough
(e.g. would knowing you lost a zero-conf double spend within 30
seconds 90% of the time be good enough?)... but I'm not aware of any
silver bullet there which gives you something identical to what a
centralized service can give you without invoking at least a little
bit of centralization.



From pieter.wuille at gmail.com  Wed Apr 23 20:54:48 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 23 Apr 2014 22:54:48 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <5358260D.9040607@gk2.sk>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404232032.08740.luke@dashjr.org> <53582426.4030601@gk2.sk>
	<201404232041.14664.luke@dashjr.org> <5358260D.9040607@gk2.sk>
Message-ID: <CAPg+sBjk4M6+9R=McwWcWda0Pw4u9oGiBR5NDAwpq3dntG6vtg@mail.gmail.com>

On Wed, Apr 23, 2014 at 10:43 PM, Pavol Rusnak <stick at gk2.sk> wrote:
> On 04/23/2014 10:41 PM, Luke-Jr wrote:
>> I don't see how. The user knows he has money in different subwallets. As long
>> as he has a way to specify which subwallet he is accessing in single-subwallet
>> clients, there shouldn't be a problem.
>
> Right. But these clients have no right to call themselves BIP64
> compatible then.

Would you consider software which scans all accounts as specified by
BIP64, but has no user interface option to distinguish them in any
way, view them independently, and has no ability to keep the coins
apart... compatible with BIP64?

According to the argument here mentioned earlier ("all or nothing"),
it is, as it will not break interoperability with other BIP64
software. Still, it doesn't support the accounts feature, and perhaps
that's fine?

-- 
Pieter



From luke at dashjr.org  Wed Apr 23 20:59:08 2014
From: luke at dashjr.org (Luke-Jr)
Date: Wed, 23 Apr 2014 20:59:08 +0000
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <5358260D.9040607@gk2.sk>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404232041.14664.luke@dashjr.org> <5358260D.9040607@gk2.sk>
Message-ID: <201404232059.09283.luke@dashjr.org>

On Wednesday, April 23, 2014 8:43:57 PM Pavol Rusnak wrote:
> On 04/23/2014 10:41 PM, Luke-Jr wrote:
> > I don't see how. The user knows he has money in different subwallets. As
> > long as he has a way to specify which subwallet he is accessing in
> > single-subwallet clients, there shouldn't be a problem.
> 
> Right. But these clients have no right to call themselves BIP64
> compatible then.

Then BIP 64 is pretty restrictive. Most end users really have no need for 
subwallet support.



From stick at gk2.sk  Wed Apr 23 21:06:26 2014
From: stick at gk2.sk (Pavol Rusnak)
Date: Wed, 23 Apr 2014 23:06:26 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAPg+sBjk4M6+9R=McwWcWda0Pw4u9oGiBR5NDAwpq3dntG6vtg@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>	<201404232032.08740.luke@dashjr.org>	<53582426.4030601@gk2.sk>	<201404232041.14664.luke@dashjr.org>	<5358260D.9040607@gk2.sk>
	<CAPg+sBjk4M6+9R=McwWcWda0Pw4u9oGiBR5NDAwpq3dntG6vtg@mail.gmail.com>
Message-ID: <53582B52.70205@gk2.sk>

On 04/23/2014 10:54 PM, Pieter Wuille wrote:
> Would you consider software which scans all accounts as specified by
> BIP64, but has no user interface option to distinguish them in any
> way, view them independently, and has no ability to keep the coins
> apart... compatible with BIP64?

This is not a desired behavior. Do you have any idea how to make it even
more explicit in the spec? Currently we just have (in Account sectrion):

"This level splits the key space into independent user identities, so
the wallet never mixes the coins across different accounts."


I would like to make it obvious from the spec that if you mix funds
accross the accounts you are not doing a right thing and you are not
compliant to the spec.

-- 
Best Regards / S pozdravom,

Pavol Rusnak <stick at gk2.sk>



From slush at centrum.cz  Wed Apr 23 21:07:36 2014
From: slush at centrum.cz (slush)
Date: Wed, 23 Apr 2014 23:07:36 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAPg+sBjk4M6+9R=McwWcWda0Pw4u9oGiBR5NDAwpq3dntG6vtg@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<201404232032.08740.luke@dashjr.org> <53582426.4030601@gk2.sk>
	<201404232041.14664.luke@dashjr.org> <5358260D.9040607@gk2.sk>
	<CAPg+sBjk4M6+9R=McwWcWda0Pw4u9oGiBR5NDAwpq3dntG6vtg@mail.gmail.com>
Message-ID: <CAJna-HhrTOzJiUj3FjhYftKyfA5MzE=O1w3jYxOg96c=JSr4sQ@mail.gmail.com>

On Wed, Apr 23, 2014 at 10:54 PM, Pieter Wuille <pieter.wuille at gmail.com>wrote:

>
> Would you consider software which scans all accounts as specified by
> BIP64, but has no user interface option to distinguish them in any
> way, view them independently, and has no ability to keep the coins
> apart... compatible with BIP64?
>
>
No, because one of requirement of BIP64 is to do not mix addressess between
accounts. Without handling those accounts fully, it won't pass this
requirement.

("This level [accounts] splits the key space into independent user
identities, so the wallet never mixes the coins across different accounts.")


Marek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/a6be1997/attachment.html>

From daniel.krawisz at thingobjectentity.net  Wed Apr 23 20:41:50 2014
From: daniel.krawisz at thingobjectentity.net (Daniel Krawisz)
Date: Wed, 23 Apr 2014 15:41:50 -0500
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP0fUhiFeH4A1Y9sLCORpggJs3dxHz+exgpKaLQe9rgFeA@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAAS2fgTJpFQKeVTQsAeqe0UK-2XhrLZG4oocEHM11_spWLtrEA@mail.gmail.com>
	<CANEZrP0fUhiFeH4A1Y9sLCORpggJs3dxHz+exgpKaLQe9rgFeA@mail.gmail.com>
Message-ID: <CA+nkog349i3VQMUW_JmxX29-tOvzprtT6vcjFayNJgRt0vSCtg@mail.gmail.com>

The memory pool is just talk. There is no expectation that the memory pool
has to satisfy some standard as to what will eventually exist in the block
chain, and there are any number of ways that people could communicate
transactions to one another without putting them in the memory pool. The
memory pool can't be treated like a contract because there is no
cryptography to enforce it--there is no contract until the transactions
appear in the block chain, inherently.

Mike Hearn's proposal is nonsense because it requires miners to develop a
concensus on which blocks in the block chain are dishonest. There is no way
to prove cryptographically that a block is dishonest because the block
chain itself is the concensus system--before there is concensus, there is
no concept of dishonesty, at least as far as double-spending goes. In order
to decide that a block is dishonest and reallocate the coinbase, a prior
consensus mechanism would be required. Of course, such a consensus
mechanism would also be subject to attacks just like the block chain.

Maxwell's proposal is very good. One only trusts the oscar not to double
spend, which is perfectly reasonable if oscar is a well-known service.
Normal everyday wallets for immediate payments would simply require a
little more infrastructure.

Daniel Krawisz


On Wed, Apr 23, 2014 at 2:59 PM, Mike Hearn <mike at plan99.net> wrote:

> What you're talking about is just disagreement about the content of
>>  the memory pool
>>
>
> That's the same thing. Whilst you're mining your double spend tx, it's in
> your mempool but you don't broadcast it as per normal. Then when you find
> the block you broadcast it to override everyone elses mempool. So yours and
> theirs were inconsistent.
>
> The only slight way BitUndo differs is, they provide it as a service, and
> I don't know if they inform you when they found a block (probably not), so
> you have to do the purchase and then hope BitUndo finds the next block.
> Otherwise the purchase clears. But they could certainly add a
> pre-notification before they broadcast to get back to the exact scheme
> originally described, they have everything else in place.
>
>
>> Oscar himself can be implemented as a majority M parties to further
>> increase confidence
>
>
> This just brings us back to square one. Who are these parties and what if
> I pay them to be corrupt? What if they offer to be corrupt as a service?
>
>  Let's say I succeed in finding some parties who are incorruptible no
> matter how large of a percentage I offer them. At this point, why bother
> with miners at all? Why pay for double spend protection twice, once to a
> group of Oscar's who are trustworthy and once to a group of miners who are
> not?
>
> The point of the broadcast network and mining is so there can be lots of
> Oscar's and I don't have to know who they are or sign up with them or put
> any effort into evaluating their reputation.
>
>
>> value retail transactions? the fact that any cheating by oscar is
>> cryptographically provable (just show them the double signatures)
>> maybe be strong enough alone.
>>
>
> But as you point out, cheating my GHash.io did not result in any obvious
> negative consequence to them, despite that preventing double spending is
> their sole task. Why would Oscar be different to GHash.io?
>
> Trying to solve the problem of dishonest miners is effectively trying to
> solve the "automatically find trusted third parties" problem at scale.
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/fdc513e7/attachment.html>

From luke at dashjr.org  Wed Apr 23 21:18:57 2014
From: luke at dashjr.org (Luke-Jr)
Date: Wed, 23 Apr 2014 21:18:57 +0000
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <53582B52.70205@gk2.sk>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<CAPg+sBjk4M6+9R=McwWcWda0Pw4u9oGiBR5NDAwpq3dntG6vtg@mail.gmail.com>
	<53582B52.70205@gk2.sk>
Message-ID: <201404232118.58316.luke@dashjr.org>

On Wednesday, April 23, 2014 9:06:26 PM Pavol Rusnak wrote:
> On 04/23/2014 10:54 PM, Pieter Wuille wrote:
> > Would you consider software which scans all accounts as specified by
> > BIP64, but has no user interface option to distinguish them in any
> > way, view them independently, and has no ability to keep the coins
> > apart... compatible with BIP64?
> 
> This is not a desired behavior. Do you have any idea how to make it even
> more explicit in the spec? Currently we just have (in Account sectrion):
> 
> "This level splits the key space into independent user identities, so
> the wallet never mixes the coins across different accounts."
> 
> 
> I would like to make it obvious from the spec that if you mix funds
> accross the accounts you are not doing a right thing and you are not
> compliant to the spec.

How do you get the more expected/usual behaviour of mixing funds between 
accounts? Only a very niche user base needs funds isolated...

Luke



From gmaxwell at gmail.com  Wed Apr 23 21:22:44 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 23 Apr 2014 14:22:44 -0700
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <201404232118.58316.luke@dashjr.org>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<CAPg+sBjk4M6+9R=McwWcWda0Pw4u9oGiBR5NDAwpq3dntG6vtg@mail.gmail.com>
	<53582B52.70205@gk2.sk> <201404232118.58316.luke@dashjr.org>
Message-ID: <CAAS2fgTwuBjGJjTC0UyYG5n603m=tf6226FGRo4cyVi93kzKkA@mail.gmail.com>

On Wed, Apr 23, 2014 at 2:18 PM, Luke-Jr <luke at dashjr.org> wrote:
> How do you get the more expected/usual behaviour of mixing funds between
> accounts? Only a very niche user base needs funds isolated...

Hopefully it would be clarified as only a MUST NOT do so silently...
"I have funds split across two wallets and it WONT LET ME SPEND THEM"
sounds like a terrible user experience. :)



From tier.nolan at gmail.com  Wed Apr 23 21:23:08 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Wed, 23 Apr 2014 22:23:08 +0100
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CAAS2fgRWfcxYaLRY69=LE_+sDfYLNUTcimw4cE-2Byw7QonC=w@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAAS2fgTJpFQKeVTQsAeqe0UK-2XhrLZG4oocEHM11_spWLtrEA@mail.gmail.com>
	<CANEZrP0fUhiFeH4A1Y9sLCORpggJs3dxHz+exgpKaLQe9rgFeA@mail.gmail.com>
	<CAAS2fgR1dRFVqhTNn55dZ6FS5zDM0aHs4ROPSD37hWwzLUKfCg@mail.gmail.com>
	<CANEZrP2t09bzmDkkWK3V2GpqEt54KhFnUQ8_u9ULMqniMaOA8Q@mail.gmail.com>
	<CAKuKjyV+FQs1goNK1uWXVg7ky4aGiROcTZ5idM3Ug2-+5bTc2w@mail.gmail.com>
	<CAAS2fgRWfcxYaLRY69=LE_+sDfYLNUTcimw4cE-2Byw7QonC=w@mail.gmail.com>
Message-ID: <CAE-z3OX7AppQeBcMBArccELQxnZBPNCefiRJvTt0gYYjxKAQuQ@mail.gmail.com>

An interesting experiment would be a transaction "proof of publication"
chain.

Each transaction would be added to that chain when it is received.  It
could be merge mined with the main chain.

If the size was limited, then it doesn't even require spam protection.

Blocks could be "discouraged" if they have transactions which violate the
ordering in that chain.  Miners could still decide which transactions they
include, but couldn't include transactions which are double spends.

The locktime/final field could be used for transactions which want to be
replaceable.

The chain could use some of the fast block proposals.  For example, it
could include orphans of a block when computing the block's POW.



On Wed, Apr 23, 2014 at 9:53 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> On Wed, Apr 23, 2014 at 1:44 PM, Adam Ritter <aritter at gmail.com> wrote:
> > Isn't a faster blockchain for transactions (maybe as a sidechain) solving
> > the problem? If there would be a safe way for 0-confirmation
> transactions,
> > the Bitcoin blockchain wouldn't even be needed.
>
> Large scale consensus can't generally provide instantly irreversible
> transactions directly: Increasing the block speed can't help past the
> point where the time starts getting close to the network diameter...
> you simply can't tell what a consensus of a group of nodes is until
> several times the light cone that includes all of them.  And if you
> start getting close to the limit you dilute the power working on the
> consensus and potentially make life easier for a large attacker.
>
> Maybe other chains with different parameters could achieve a different
> tradeoff which was better suited to low value retail transactions
> (e.g. where you want a soft confirmation fast). A choice of tradeoffs
> could be very useful, and maybe you can practically get close enough
> (e.g. would knowing you lost a zero-conf double spend within 30
> seconds 90% of the time be good enough?)... but I'm not aware of any
> silver bullet there which gives you something identical to what a
> centralized service can give you without invoking at least a little
> bit of centralization.
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/bf4cfe10/attachment.html>

From stick at gk2.sk  Wed Apr 23 21:24:43 2014
From: stick at gk2.sk (Pavol Rusnak)
Date: Wed, 23 Apr 2014 23:24:43 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <201404232118.58316.luke@dashjr.org>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<CAPg+sBjk4M6+9R=McwWcWda0Pw4u9oGiBR5NDAwpq3dntG6vtg@mail.gmail.com>
	<53582B52.70205@gk2.sk> <201404232118.58316.luke@dashjr.org>
Message-ID: <53582F9B.1010302@gk2.sk>

On 04/23/2014 11:18 PM, Luke-Jr wrote:
> Only a very niche user base needs funds isolated...

Our users do and we are creating this BIP for them, because we love them. ;)

-- 
Best Regards / S pozdravom,

Pavol Rusnak <stick at gk2.sk>



From stick at gk2.sk  Wed Apr 23 21:33:48 2014
From: stick at gk2.sk (Pavol Rusnak)
Date: Wed, 23 Apr 2014 23:33:48 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAAS2fgTwuBjGJjTC0UyYG5n603m=tf6226FGRo4cyVi93kzKkA@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>	<CAPg+sBjk4M6+9R=McwWcWda0Pw4u9oGiBR5NDAwpq3dntG6vtg@mail.gmail.com>	<53582B52.70205@gk2.sk>
	<201404232118.58316.luke@dashjr.org>
	<CAAS2fgTwuBjGJjTC0UyYG5n603m=tf6226FGRo4cyVi93kzKkA@mail.gmail.com>
Message-ID: <535831BC.1090707@gk2.sk>

On 04/23/2014 11:22 PM, Gregory Maxwell wrote:
> Hopefully it would be clarified as only a MUST NOT do so silently...
> "I have funds split across two wallets and it WONT LET ME SPEND THEM"
> sounds like a terrible user experience. :)

That is a subjective matter. To me it makes PERFECT SENSE that funds
across accounts NEVER MIX. One can still send funds from one account to
another and then perform another spend.

That's what I consider a consistent and thus GOOD user experience.
What's the purpose of Accounts if wallet mixes coins among them anyway?

I know it's not good to use classic bank accounts as analogy, but that's
exactly how they work. Or have you every done ONE transaction from two
bank accounts simultaneously?

-- 
Best Regards / S pozdravom,

Pavol Rusnak <stick at gk2.sk>



From gmaxwell at gmail.com  Wed Apr 23 21:39:26 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 23 Apr 2014 14:39:26 -0700
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CAE-z3OX7AppQeBcMBArccELQxnZBPNCefiRJvTt0gYYjxKAQuQ@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAAS2fgTJpFQKeVTQsAeqe0UK-2XhrLZG4oocEHM11_spWLtrEA@mail.gmail.com>
	<CANEZrP0fUhiFeH4A1Y9sLCORpggJs3dxHz+exgpKaLQe9rgFeA@mail.gmail.com>
	<CAAS2fgR1dRFVqhTNn55dZ6FS5zDM0aHs4ROPSD37hWwzLUKfCg@mail.gmail.com>
	<CANEZrP2t09bzmDkkWK3V2GpqEt54KhFnUQ8_u9ULMqniMaOA8Q@mail.gmail.com>
	<CAKuKjyV+FQs1goNK1uWXVg7ky4aGiROcTZ5idM3Ug2-+5bTc2w@mail.gmail.com>
	<CAAS2fgRWfcxYaLRY69=LE_+sDfYLNUTcimw4cE-2Byw7QonC=w@mail.gmail.com>
	<CAE-z3OX7AppQeBcMBArccELQxnZBPNCefiRJvTt0gYYjxKAQuQ@mail.gmail.com>
Message-ID: <CAAS2fgQQyY=BGcM21EJiMkwBH0G5J57ahYEiD=bQTuprLHrHPA@mail.gmail.com>

On Wed, Apr 23, 2014 at 2:23 PM, Tier Nolan <tier.nolan at gmail.com> wrote:
> An interesting experiment would be a transaction "proof of publication"
> chain.
>
> Each transaction would be added to that chain when it is received.  It could
> be merge mined with the main chain.
>
> If the size was limited, then it doesn't even require spam protection.
>
> Blocks could be "discouraged" if they have transactions which violate the
> ordering in that chain.  Miners could still decide which transactions they
> include, but couldn't include transactions which are double spends.
>
> The locktime/final field could be used for transactions which want to be
> replaceable.
>
> The chain could use some of the fast block proposals.  For example, it could
> include orphans of a block when computing the block's POW.

You can see me proposing this kind of thing in a number of places (e.g.
http://download.wpsoftware.net/bitcoin/wizards/2014-04-15.txt "p2pool
only forces the subsidy today, but the same mechnism could instead
force transactions.. e.g. to get you fast confirmation.", or
previously on BCT for the last couple years) but there are still
limits here:  If you don't follow the fast-confirmation share chain
you cannot mine third party transactions because you'll be at risk of
mining a double spend that gets you orphaned, or building on a prior
block that other miners have decided is bad.  This means that if the
latency or data rate requirements of the share chain are too large
relative to ordinary mining it may create some centralization
pressure.

That said, I think using a fast confirmation share-chain is much
better than decreasing block times and could be a very useful tool if
we believe that there are many applications which could be improved
with e.g. a 30 second or 1 minute interblock time.  Mostly my thinking
has been that these retail applications really want sub-second
confirmation, which can't reasonably be provided in this manner so I
didn't mention it in this thread.

One of the neat things about this is that you can introduce it totally
separately from Bitcoin without any consensus or approval from anyone
else? E.g. P2pool builds such a chain today though it doesn't enforce
transactions.  It would immediately provide the useful service of
demonstrating that some chunk of hashpower was currently working on
including a particular set of transactions.  Once the details were
worked out it could be added as a soft-forking requirement to the
commonly run system.



From pieter.wuille at gmail.com  Wed Apr 23 21:42:30 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 23 Apr 2014 23:42:30 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <535831BC.1090707@gk2.sk>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<CAPg+sBjk4M6+9R=McwWcWda0Pw4u9oGiBR5NDAwpq3dntG6vtg@mail.gmail.com>
	<53582B52.70205@gk2.sk> <201404232118.58316.luke@dashjr.org>
	<CAAS2fgTwuBjGJjTC0UyYG5n603m=tf6226FGRo4cyVi93kzKkA@mail.gmail.com>
	<535831BC.1090707@gk2.sk>
Message-ID: <CAPg+sBg3Ln-xyG6qdXE=Tf8AgnhsZKbygh1z5pk9zuO4AaHDiw@mail.gmail.com>

On Wed, Apr 23, 2014 at 11:33 PM, Pavol Rusnak <stick at gk2.sk> wrote:
> On 04/23/2014 11:22 PM, Gregory Maxwell wrote:
>> Hopefully it would be clarified as only a MUST NOT do so silently...
>> "I have funds split across two wallets and it WONT LET ME SPEND THEM"
>> sounds like a terrible user experience. :)
>
> That is a subjective matter. To me it makes PERFECT SENSE that funds
> across accounts NEVER MIX. One can still send funds from one account to
> another and then perform another spend.

In that case, maybe it makes sense to define another purpose id
without accounts as well already.

I believe many simple wallets will find multiple subwallets too
burdening for the user experience, or not worth the technical
complexity.

-- 
Pieter



From stick at gk2.sk  Wed Apr 23 21:44:20 2014
From: stick at gk2.sk (Pavol Rusnak)
Date: Wed, 23 Apr 2014 23:44:20 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAPg+sBg3Ln-xyG6qdXE=Tf8AgnhsZKbygh1z5pk9zuO4AaHDiw@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>	<CAPg+sBjk4M6+9R=McwWcWda0Pw4u9oGiBR5NDAwpq3dntG6vtg@mail.gmail.com>	<53582B52.70205@gk2.sk>	<201404232118.58316.luke@dashjr.org>	<CAAS2fgTwuBjGJjTC0UyYG5n603m=tf6226FGRo4cyVi93kzKkA@mail.gmail.com>	<535831BC.1090707@gk2.sk>
	<CAPg+sBg3Ln-xyG6qdXE=Tf8AgnhsZKbygh1z5pk9zuO4AaHDiw@mail.gmail.com>
Message-ID: <53583434.5080601@gk2.sk>

On 04/23/2014 11:42 PM, Pieter Wuille wrote:
> In that case, maybe it makes sense to define another purpose id
> without accounts as well already.
> 
> I believe many simple wallets will find multiple subwallets too
> burdening for the user experience, or not worth the technical
> complexity.

Right. See my previous email where I describe hypothetical creation of
BIP65 and BIP66 which the exact thing you describe.

-- 
Best Regards / S pozdravom,

Pavol Rusnak <stick at gk2.sk>



From gmaxwell at gmail.com  Wed Apr 23 21:48:41 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 23 Apr 2014 14:48:41 -0700
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAPg+sBg3Ln-xyG6qdXE=Tf8AgnhsZKbygh1z5pk9zuO4AaHDiw@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<CAPg+sBjk4M6+9R=McwWcWda0Pw4u9oGiBR5NDAwpq3dntG6vtg@mail.gmail.com>
	<53582B52.70205@gk2.sk> <201404232118.58316.luke@dashjr.org>
	<CAAS2fgTwuBjGJjTC0UyYG5n603m=tf6226FGRo4cyVi93kzKkA@mail.gmail.com>
	<535831BC.1090707@gk2.sk>
	<CAPg+sBg3Ln-xyG6qdXE=Tf8AgnhsZKbygh1z5pk9zuO4AaHDiw@mail.gmail.com>
Message-ID: <CAAS2fgTiCjoZd6-3DzMeeTSSsTeZjoN3pmt-5PHAfeZtCieTpw@mail.gmail.com>

On Wed, Apr 23, 2014 at 2:42 PM, Pieter Wuille <pieter.wuille at gmail.com> wrote:
> In that case, maybe it makes sense to define another purpose id
> without accounts as well already.
>
> I believe many simple wallets will find multiple subwallets too
> burdening for the user experience, or not worth the technical
> complexity.

Or implement them but in a form where the different wallets can have
different security policies and thus wouldn't share a common piece of
private key material.  I can see it being pretty confusing to have
multiple wallets which are both sharing a private key and not sharing
a private key.



From luke at dashjr.org  Wed Apr 23 21:53:05 2014
From: luke at dashjr.org (Luke-Jr)
Date: Wed, 23 Apr 2014 21:53:05 +0000
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <535831BC.1090707@gk2.sk>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<CAAS2fgTwuBjGJjTC0UyYG5n603m=tf6226FGRo4cyVi93kzKkA@mail.gmail.com>
	<535831BC.1090707@gk2.sk>
Message-ID: <201404232153.06471.luke@dashjr.org>

On Wednesday, April 23, 2014 9:33:48 PM Pavol Rusnak wrote:
> On 04/23/2014 11:22 PM, Gregory Maxwell wrote:
> > Hopefully it would be clarified as only a MUST NOT do so silently...
> > "I have funds split across two wallets and it WONT LET ME SPEND THEM"
> > sounds like a terrible user experience. :)
> 
> That is a subjective matter. To me it makes PERFECT SENSE that funds
> across accounts NEVER MIX. One can still send funds from one account to
> another and then perform another spend.

Only by crossing the blockchain unnecessarily.

> That's what I consider a consistent and thus GOOD user experience.
> What's the purpose of Accounts if wallet mixes coins among them anyway?

To keep balances separated. For example, I might have an account for each of 
my children, move their allowance money to it every day/week (off-chain), and 
they can spend only what they have in their account. Or an exchange might have 
an account for each user's deposits. In neither case, would it make sense to 
pay special attention to which UTXOs are consumed in transactions from any of 
the account.

The only use case that requires tracking UTXOs per-account is when you want to 
have multiple uncoordinated copies of the wallet in use at the same time, and 
therefore need to immediately identify which account a transaction came from 
based on the UTXOs it consumed - although even then, you could still mix funds 
as long as you use only the first UTXO for tracking, so maybe there isn't even 
a niche use case! In any case, Trezor, being a hardware wallet, should never 
overlap with this niche...?

> I know it's not good to use classic bank accounts as analogy, but that's
> exactly how they work. Or have you every done ONE transaction from two
> bank accounts simultaneously?

Bad analogy. Banks *always* mix funds. You don't expect your bank wire to use 
exactly the specific dollar bills you deposited, do you??

Luke



From alex.mizrahi at gmail.com  Wed Apr 23 22:06:48 2014
From: alex.mizrahi at gmail.com (Alex Mizrahi)
Date: Thu, 24 Apr 2014 01:06:48 +0300
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
Message-ID: <CAE28kUSLXG0y350gMiwnv0CoOHUorMgLup9TG77Mjj+BJcuowA@mail.gmail.com>

>
> These sorts of proposals are all just ways of saying block chains kind of
> suck and we should go back to using trusted third parties.
>

No.
Different approaches have different trade-offs, and thus different areas of
applicability.

Proof-of-work's inherent disadvantage is that it takes some time until
transaction becomes practically irreversible. On the other hand, it has
advantages like neutrality, censorship-resistance, high degree of security,
etc.

TTP can be very efficient, but doesn't have advantages mentioned above.

It is possible to combine several different approaches into one hybrid
systems. For example, classic Bitcoin PoW blockchain can be used for
settlements, large transactions, savings and so on. While TTP-based payment
system will be used for small-value transaction like buying coffee.

In this case you get benefits of both approaches. Censorship-resistance is
irrelevant when one buys a cup of coffee with his pocket money, isn't it?

For some reason, instead of considering these hybrid solutions (which can
also address scalability problems), you want to make PoW-based system more
complex to be applicable for real-time transaction too.

This will, likely, weaken advantages provided by PoW, and also it won't
provide any hard guarantees, and, if implemented, will undermine
development of alternative solutions.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/e3509046/attachment.html>

From tier.nolan at gmail.com  Wed Apr 23 22:26:08 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Wed, 23 Apr 2014 23:26:08 +0100
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CAAS2fgQQyY=BGcM21EJiMkwBH0G5J57ahYEiD=bQTuprLHrHPA@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAAS2fgTJpFQKeVTQsAeqe0UK-2XhrLZG4oocEHM11_spWLtrEA@mail.gmail.com>
	<CANEZrP0fUhiFeH4A1Y9sLCORpggJs3dxHz+exgpKaLQe9rgFeA@mail.gmail.com>
	<CAAS2fgR1dRFVqhTNn55dZ6FS5zDM0aHs4ROPSD37hWwzLUKfCg@mail.gmail.com>
	<CANEZrP2t09bzmDkkWK3V2GpqEt54KhFnUQ8_u9ULMqniMaOA8Q@mail.gmail.com>
	<CAKuKjyV+FQs1goNK1uWXVg7ky4aGiROcTZ5idM3Ug2-+5bTc2w@mail.gmail.com>
	<CAAS2fgRWfcxYaLRY69=LE_+sDfYLNUTcimw4cE-2Byw7QonC=w@mail.gmail.com>
	<CAE-z3OX7AppQeBcMBArccELQxnZBPNCefiRJvTt0gYYjxKAQuQ@mail.gmail.com>
	<CAAS2fgQQyY=BGcM21EJiMkwBH0G5J57ahYEiD=bQTuprLHrHPA@mail.gmail.com>
Message-ID: <CAE-z3OX3mC5bvBAXCoT3oECP6C=c=tLUD1QNVvdTcqLgQRyhcA@mail.gmail.com>

On Wed, Apr 23, 2014 at 10:39 PM, Gregory Maxwell <gmaxwell at gmail.com>wrote:

> You can see me proposing this kind of thing in a number of places (e.g.
> http://download.wpsoftware.net/bitcoin/wizards/2014-04-15.txt "p2pool
> only forces the subsidy today, but the same mechnism could instead
> force transactions..


Interesting.  You set the share-block size to 16kB and set the share POW to
1/64 of the main target.

Each share-block would be allowed to append up to 16kB on the previous
share-block.

This would keep the bandwidth the same, but on average blocks would be only
512kB.

e.g. to get you fast confirmation.", or
> previously on BCT for the last couple years) but there are still
> limits here:  If you don't follow the fast-confirmation share chain
> you cannot mine third party transactions because you'll be at risk of
> mining a double spend that gets you orphaned, or building on a prior
> block that other miners have decided is bad.  This means that if the
> latency or data rate requirements of the share chain are too large
> relative to ordinary mining it may create some centralization
> pressure.
>

This effect could be reduced by having "colours" for blocks and
transactions.

The block colour would be a loop based on block height.

You could have 16 transaction "colours" based on the lowest 4 bits in the
txId.

A transaction is only valid if all inputs into the transaction are the
correct colour for that block.

This allows blocks to be created in advance.  If you are processing colour
7 at the moment, you can have a colour 8 block ready.

16 colours is probably to many.   It would only be necessary for things
like 1 second block rates.

The disadvantage is that wallets would have to make sure that they have
coins for each of the 16 colours.

If you spend the wrong colour, you add 16 block times of latency.


>
> That said, I think using a fast confirmation share-chain is much
> better than decreasing block times and could be a very useful tool if
> we believe that there are many applications which could be improved
> with e.g. a 30 second or 1 minute interblock time.  Mostly my thinking
> has been that these retail applications really want sub-second
> confirmation, which can't reasonably be provided in this manner so I
> didn't mention it in this thread.
>

In a shop setting, you could set it up so that the person scans a QR-code
to setup a channel with the shop.

They can then scan all their stuff and by the time they have done that, the
channel would be ready.

If there was a queue, it could be done when the person enters the queue.

In fact, there could be QR-codes at multiple locations.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/e2f80e85/attachment.html>

From gmaxwell at gmail.com  Wed Apr 23 22:28:02 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 23 Apr 2014 15:28:02 -0700
Subject: [Bitcoin-development] Development Roadmap of Bitcoin Core 0.9.2
In-Reply-To: <CAEz79Poy0XEVyC=nOdhYNVOASvfB-2zHJcjU2hvjA7iDWGDDyw@mail.gmail.com>
References: <CAEz79PrAg=yydd3UOk51wGQUWey-KZHUH1Npzwb=qL+6zTj+pQ@mail.gmail.com>
	<53581D1D.1000709@gmail.com>
	<CAEz79Poy0XEVyC=nOdhYNVOASvfB-2zHJcjU2hvjA7iDWGDDyw@mail.gmail.com>
Message-ID: <CAAS2fgSQ6rh1XKao6pv8BmpeRbtqWfUOVF+C1Fi3LEzY1YcPiA@mail.gmail.com>

On Wed, Apr 23, 2014 at 1:39 PM, Warren Togami Jr. <wtogami at gmail.com> wrote:
> If you are
> a rare user who needs Bitcoin-Qt on an incompatible system you can at least
> build it from source.

Tails users usually can't really build it from source? talks is a live
boot mostly stateless linux distribution for privacy applications.
It's really good in general.

I agree that we shouldn't be statically linking QT on linux generally
(due to things like theming), though maybe we could just have the
build process dump out a seperate extra static QT binary just for
these other cases? I feel like the work maintaining it would be less
than what we've had in answering questions/complaints about it.



From tomh at thinlink.com  Wed Apr 23 22:29:33 2014
From: tomh at thinlink.com (Tom Harding)
Date: Wed, 23 Apr 2014 15:29:33 -0700
Subject: [Bitcoin-development] Double-spending unconfirmed transactions
 is a lot easier than most people realise
In-Reply-To: <1533579.cuHiT41BQ7@crushinator>
References: <20140422213128.GB2578@savin> <53574581.3040004@thinlink.com>
	<1533579.cuHiT41BQ7@crushinator>
Message-ID: <53583ECD.5000105@thinlink.com>

On 4/22/2014 9:03 PM, Matt Whitlock wrote:
> On Tuesday, 22 April 2014, at 8:45 pm, Tom Harding wrote:
>> A network where transaction submitters consider their (final)
>> transactions to be unchangeable the moment they are transmitted, and
>> where the network's goal is to confirm only transactions all of whose
>> UTXO's have not yet been seen in a final transaction's input, has a
>> chance to be such a network.
> Respectfully, this is not the goal of miners. The goal of miners is to maximize profits. Always will be. If they can do that by enabling replace-by-fee (and they can), then they will. Altruism does not factor into business.

The rational miner works hard digging hashes out of the ether, and wants 
the reward to be great.  How much more valuable would his reward be if 
he were paid in something that is spendable like cash on a 1-minute 
network for coffee and other innumerable real-time transactions, versus 
something that is only spendable on a 15-minute network?

There is a prisoner's dilemma, to be sure, but do the fees from helping 
people successfully double-spend their coffee supplier really outweigh 
the increased value to the entire network - including himself - of 
ensuring that digital cash actually works like cash?





From simon at superduper.net  Thu Apr 24 00:42:20 2014
From: simon at superduper.net (Simon Barber)
Date: Wed, 23 Apr 2014 17:42:20 -0700
Subject: [Bitcoin-development] Double-spending unconfirmed transactions
 is a lot easier than most people realise
In-Reply-To: <53583ECD.5000105@thinlink.com>
References: <20140422213128.GB2578@savin>
	<53574581.3040004@thinlink.com>	<1533579.cuHiT41BQ7@crushinator>
	<53583ECD.5000105@thinlink.com>
Message-ID: <53585DEC.3030909@superduper.net>

Miners earn bitcoins, and clearly a network where reasonable certainty 
can be achieved with 0-confirm transactions is more useful, thus will 
result in those bitcoins being more valuable. One would expect rational 
miners (or pool operators) to want to collaborate to reduce the 
possibilities for double spend attacks as much as possible.

Simon

On 4/23/2014 3:29 PM, Tom Harding wrote:
> On 4/22/2014 9:03 PM, Matt Whitlock wrote:
>> On Tuesday, 22 April 2014, at 8:45 pm, Tom Harding wrote:
>>> A network where transaction submitters consider their (final)
>>> transactions to be unchangeable the moment they are transmitted, and
>>> where the network's goal is to confirm only transactions all of whose
>>> UTXO's have not yet been seen in a final transaction's input, has a
>>> chance to be such a network.
>> Respectfully, this is not the goal of miners. The goal of miners is to maximize profits. Always will be. If they can do that by enabling replace-by-fee (and they can), then they will. Altruism does not factor into business.
> The rational miner works hard digging hashes out of the ether, and wants
> the reward to be great.  How much more valuable would his reward be if
> he were paid in something that is spendable like cash on a 1-minute
> network for coffee and other innumerable real-time transactions, versus
> something that is only spendable on a 15-minute network?
>
> There is a prisoner's dilemma, to be sure, but do the fees from helping
> people successfully double-spend their coffee supplier really outweigh
> the increased value to the entire network - including himself - of
> ensuring that digital cash actually works like cash?
>
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From tomh at thinlink.com  Thu Apr 24 00:55:18 2014
From: tomh at thinlink.com (Tom Harding)
Date: Wed, 23 Apr 2014 17:55:18 -0700
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CAE-z3OX7AppQeBcMBArccELQxnZBPNCefiRJvTt0gYYjxKAQuQ@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>	<CAAS2fgTJpFQKeVTQsAeqe0UK-2XhrLZG4oocEHM11_spWLtrEA@mail.gmail.com>	<CANEZrP0fUhiFeH4A1Y9sLCORpggJs3dxHz+exgpKaLQe9rgFeA@mail.gmail.com>	<CAAS2fgR1dRFVqhTNn55dZ6FS5zDM0aHs4ROPSD37hWwzLUKfCg@mail.gmail.com>	<CANEZrP2t09bzmDkkWK3V2GpqEt54KhFnUQ8_u9ULMqniMaOA8Q@mail.gmail.com>	<CAKuKjyV+FQs1goNK1uWXVg7ky4aGiROcTZ5idM3Ug2-+5bTc2w@mail.gmail.com>	<CAAS2fgRWfcxYaLRY69=LE_+sDfYLNUTcimw4cE-2Byw7QonC=w@mail.gmail.com>
	<CAE-z3OX7AppQeBcMBArccELQxnZBPNCefiRJvTt0gYYjxKAQuQ@mail.gmail.com>
Message-ID: <535860F6.20205@thinlink.com>


On 4/23/2014 2:23 PM, Tier Nolan wrote:
> An interesting experiment would be a transaction "proof of 
> publication" chain.

What if a transaction could simply point back to an earlier transaction, 
forming a chain?  Not a separately mined blockchain, just a way to 
establish an official publication (execution) order. Double spends would 
be immediately actionable with such a sequence. Transactions in a block 
could eventually be required to be connected in such a chain.  Miners 
would have to keep or reject a whole mempool chain, since they lack the 
keys to change the sequence.  They would have to prune a whole tx 
subchain to insert a double spend (and this would still require private 
keys to the double spend utxo's).

This idea seemed promising, until I realized that with the collision 
rebasing required, it would barely scale to today's transaction rate.  
Something that scales to 10,000's of transactions per second, and really 
without limit, is needed.

Anyway, I wrote it up here: 
https://github.com/dgenr8/out-there/blob/master/tx-chains.md




From author at anonymousbitcoinbook.com  Thu Apr 24 01:56:23 2014
From: author at anonymousbitcoinbook.com (Kristov Atlas)
Date: Wed, 23 Apr 2014 21:56:23 -0400
Subject: [Bitcoin-development] Development Roadmap of Bitcoin Core 0.9.2
In-Reply-To: <CAAS2fgSQ6rh1XKao6pv8BmpeRbtqWfUOVF+C1Fi3LEzY1YcPiA@mail.gmail.com>
References: <CAEz79PrAg=yydd3UOk51wGQUWey-KZHUH1Npzwb=qL+6zTj+pQ@mail.gmail.com>	<53581D1D.1000709@gmail.com>	<CAEz79Poy0XEVyC=nOdhYNVOASvfB-2zHJcjU2hvjA7iDWGDDyw@mail.gmail.com>
	<CAAS2fgSQ6rh1XKao6pv8BmpeRbtqWfUOVF+C1Fi3LEzY1YcPiA@mail.gmail.com>
Message-ID: <53586F47.1000606@anonymousbitcoinbook.com>


On 04/23/2014 06:28 PM, Gregory Maxwell wrote:
> Tails users usually can't really build it from source? talks is a live
> boot mostly stateless linux distribution for privacy applications.
> It's really good in general.
>
> I agree that we shouldn't be statically linking QT on linux generally
> (due to things like theming), though maybe we could just have the
> build process dump out a seperate extra static QT binary just for
> these other cases? I feel like the work maintaining it would be less
> than what we've had in answering questions/complaints about it.
>
> ------------------------------------------------------------------------------
Dumping out a separate, extra static QT binary is a great idea.



From wtogami at gmail.com  Thu Apr 24 05:47:07 2014
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Wed, 23 Apr 2014 19:47:07 -1000
Subject: [Bitcoin-development] Translators Needed for Bitcoin Core
Message-ID: <CAEz79PqWawZjD+w0CO7XmJay+tuaa2pKabUJieGatxcxekOXMg@mail.gmail.com>

You do not need to be a developer to help in the improvement of Bitcoin.

http://sourceforge.net/p/bitcoin/mailman/message/32255092/
Bitcoin Core 0.9.2 feature freeze is May 13th, 2014.  Now is the time for
native non-English speakers to join Transifex to clean up the translations
in all languages.  This is important for more than just Bitcoin because
Litecoin will use these same translations.

*What should volunteer translators do?*
https://bitcointalk.org/index.php?topic=571414
Try the nightly builds of Bitcoin Core as it heads toward 0.9.2.  Not
recommended for your production wallet.

https://www.transifex.com/projects/p/bitcoin/
Join Transifex as a translator and add your account to your language.

https://groups.google.com/forum/#!forum/bitcoin-translators
Join the Translator mailing list to receive announcements when translations
are needed for Bitcoin.  You will also receive notifications if other
Bitcoin Project things in Transifex need translations (likely bitcoin.org).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/b3edb6a0/attachment.html>

From thomasv1 at gmx.de  Thu Apr 24 06:54:23 2014
From: thomasv1 at gmx.de (Thomas Voegtlin)
Date: Thu, 24 Apr 2014 08:54:23 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <201404231944.14256.luke@dashjr.org>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>	<CAE-z3OUMp_uO07+_R_x2yRLbSCzK1J5isbVUYEY3KF4Tx16K2Q@mail.gmail.com>	<53581480.5060103@gk2.sk>
	<201404231944.14256.luke@dashjr.org>
Message-ID: <5358B51F.8010202@gmx.de>



Le 23/04/2014 21:44, Luke-Jr a ?crit :
> On Wednesday, April 23, 2014 7:29:04 PM Pavol Rusnak wrote:
>>
>> Examples: Electrum does not want to use accounts [...]

> Why do clients need to use the features in BIP 64? If Electrum doesn't want to 
> use accounts, [...]

To clarify:
Electrum plans to have bip32 accounts; Multibit will not, afaik.

I think Pavol just wanted to make an example.



From pieter.wuille at gmail.com  Thu Apr 24 07:10:48 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Thu, 24 Apr 2014 09:10:48 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <5358B51F.8010202@gmx.de>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<CAE-z3OUMp_uO07+_R_x2yRLbSCzK1J5isbVUYEY3KF4Tx16K2Q@mail.gmail.com>
	<53581480.5060103@gk2.sk> <201404231944.14256.luke@dashjr.org>
	<5358B51F.8010202@gmx.de>
Message-ID: <CAPg+sBj68d5ZBDZ4uWvQYHMeq=bwTCaMNbwxfWGVL5MPh=7g2g@mail.gmail.com>

On Thu, Apr 24, 2014 at 8:54 AM, Thomas Voegtlin <thomasv1 at gmx.de> wrote:
>> Why do clients need to use the features in BIP 64? If Electrum doesn't want to
>> use accounts, [...]
>
> To clarify:
> Electrum plans to have bip32 accounts; Multibit will not, afaik.

To clarify:
BIP64 has a much stricter definition for accounts than BIP32.

In BIP32, it is not well specified what accounts are used for. They
can be used for "subwallets", "receive accounts" (as in bitcoind's
account feature), "recurring payments", part of a chain used as
multisig addresses, ... determined individually for each index.

In BIP64, they are strictly used for subwallets, and can't be used by
anything else.

-- 
Pieter



From gmaxwell at gmail.com  Thu Apr 24 07:21:28 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Thu, 24 Apr 2014 00:21:28 -0700
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAPg+sBj68d5ZBDZ4uWvQYHMeq=bwTCaMNbwxfWGVL5MPh=7g2g@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<CAE-z3OUMp_uO07+_R_x2yRLbSCzK1J5isbVUYEY3KF4Tx16K2Q@mail.gmail.com>
	<53581480.5060103@gk2.sk> <201404231944.14256.luke@dashjr.org>
	<5358B51F.8010202@gmx.de>
	<CAPg+sBj68d5ZBDZ4uWvQYHMeq=bwTCaMNbwxfWGVL5MPh=7g2g@mail.gmail.com>
Message-ID: <CAAS2fgS1bsp+T94c2D+uzU4aDsux+BRCSHu5zb0Xaz+LCg0xqA@mail.gmail.com>

On Thu, Apr 24, 2014 at 12:10 AM, Pieter Wuille <pieter.wuille at gmail.com> wrote:
> On Thu, Apr 24, 2014 at 8:54 AM, Thomas Voegtlin <thomasv1 at gmx.de> wrote:
>>> Why do clients need to use the features in BIP 64? If Electrum doesn't want to
>>> use accounts, [...]
>>
>> To clarify:
>> Electrum plans to have bip32 accounts; Multibit will not, afaik.
>
> To clarify:
> BIP64 has a much stricter definition for accounts than BIP32.
>
> In BIP32, it is not well specified what accounts are used for. They
> can be used for "subwallets", "receive accounts" (as in bitcoind's
> account feature), "recurring payments", part of a chain used as
> multisig addresses, ... determined individually for each index.
>
> In BIP64, they are strictly used for subwallets, and can't be used by
> anything else.

It doesn't appear to me that reoccurring payments, receive accounts,
multisig addresses, etc can be used with this proposal, but instead
you must use a different purpose code and another BIP and are not
compatible with the draft here.

Am I misunderstanding it?   Will Electrum be limiting itself in this
way?  I'd consider it a unfortunate loss of functionality if wallets
couldn't implement reoccurring payment chains without making users
generate entirely different wallets (which they couldn't share funds
across) since addresses for recurring payments was one of the main
motivations in BIP32.



From thomasv1 at gmx.de  Thu Apr 24 07:42:30 2014
From: thomasv1 at gmx.de (Thomas Voegtlin)
Date: Thu, 24 Apr 2014 09:42:30 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAPg+sBj68d5ZBDZ4uWvQYHMeq=bwTCaMNbwxfWGVL5MPh=7g2g@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>	<CAE-z3OUMp_uO07+_R_x2yRLbSCzK1J5isbVUYEY3KF4Tx16K2Q@mail.gmail.com>	<53581480.5060103@gk2.sk>	<201404231944.14256.luke@dashjr.org>	<5358B51F.8010202@gmx.de>
	<CAPg+sBj68d5ZBDZ4uWvQYHMeq=bwTCaMNbwxfWGVL5MPh=7g2g@mail.gmail.com>
Message-ID: <5358C066.3020500@gmx.de>



Le 24/04/2014 09:10, Pieter Wuille a ?crit :
> To clarify:
> BIP64 has a much stricter definition for accounts than BIP32.
> 
> In BIP32, it is not well specified what accounts are used for. They
> can be used for "subwallets", "receive accounts" (as in bitcoind's
> account feature), "recurring payments", part of a chain used as
> multisig addresses, ... determined individually for each index.
> 
> In BIP64, they are strictly used for subwallets, and can't be used by
> anything else.
> 

yes, I saw that.

In particular, bip64 stipulates that the wallet "never mixes coins
across different accounts". This is not what Electrum does currently.
The UI allows you to chose between two modes: activate a single account
(and the wallet will only use UTXOs from that acccount), or activate all
accounts (and spend from all of them simultaneously).

Concerning multisig addresses, I have changed my mind: Electrum will use
parallel BIP32 trees. A wallet will not mix standard and multisig
accounts. I think that is better in terms of UX.

I agree with Mike Hearn's view that wallets with multiple accounts are
probably too difficult to deal with for most users. If a user feels the
need to have different "accounting identities", they will probably
create different wallet files, instead of creating bip32 subwallets.

However, since multiple subwallets have been asked by many users,
Electrum will propose them. But this should not be the default. More
important, multiple accounts should never be required (in my previous
implementation, they were required for multisig, because the wallet was
creating multisig addresses in dedicated multisig accounts)

Thomas



From mike at plan99.net  Thu Apr 24 07:58:42 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 24 Apr 2014 09:58:42 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CAE28kUSLXG0y350gMiwnv0CoOHUorMgLup9TG77Mjj+BJcuowA@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAE28kUSLXG0y350gMiwnv0CoOHUorMgLup9TG77Mjj+BJcuowA@mail.gmail.com>
Message-ID: <CANEZrP0j0KoLUB+SE+W3fL8vTKay0niqoeQ38RKnU9cyGgvvYw@mail.gmail.com>

On Thu, Apr 24, 2014 at 12:06 AM, Alex Mizrahi <alex.mizrahi at gmail.com>wrote:
>
> Different approaches have different trade-offs, and thus different areas
> of applicability.
>
> Proof-of-work's inherent disadvantage is that it takes some time until
> transaction becomes practically irreversible. On the other hand, it has
> advantages like neutrality, censorship-resistance, high degree of security,
> etc.
>

Sure, they have different tradeoffs. My assertion is this:  the costs and
disadvantages that come with building what is in effect an entirely
parallel and separate system for stopping double spends, are much much
worse than making simple tweaks to strengthen the mechanism we already have.

Put another way, the cost/benefit ratio of this proposal seems much better
to me than the alternatives.


> In this case you get benefits of both approaches.
>

You also get the costs of both approaches, which are extremely significant.

 Censorship-resistance is irrelevant when one buys a cup of coffee with his
> pocket money, isn't it?


That's like saying banks can't censor you because you can always withdraw
all your money in cash. But in practice:

   1. That's a huge pain in the ass so nobody does it
   2. Many merchants will refuse non-trivial payments in cash and demand
   bank money because it's simpler for them

Analogously, having to wait some large expiry period to extract your money
from the "double spending prevention service" (a.k.a. bitbank) is a pain in
the ass, and many merchants would refuse to take your newly double
spendable money even if theoretically they could, because it keeps their
operations much simpler if they can just assume a sale is final and can't
be reversed.

So I think such a scheme would rapidly return to the a world that looks
much like the one we have now.


> For some reason, instead of considering these hybrid solutions (which can
> also address scalability problems), you want to make PoW-based system more
> complex to be applicable for real-time transaction too.
>

The complexity overhead is trivial - we already used coinbase scriptSigs
for voting on P2SH, I'm sure it'll be used for voting on other things in
future too. So that's already in place. Counting up votes and editing the
UTXO set is the sort of patch one guy can create, it's not very big. And
it's conceptually just the same as what miners can do today by re-orging
out blocks, but with much less impact on end users and less implementation
complexity (no giant reorgs that might themselves have to split recursively
whilst they're being built).

On the other hand, building an entirely separate system, with separate
trusted companies that have trusted brand names, adding support to all the
wallets, getting all sellers on board, making everything use an extended
BIP 70 (as that's the only real way to implement it), trying to explain to
users why they're now expected to pay extra fees when they previously
didn't and then discovering that you got a choice of only a handful of
double-spend-preventers everyone could agree on with little potential for
more .... that's hugely complex and messy.


> This will, likely, weaken advantages provided by PoW
>

Why? Remember deleting coinbases with nothing more than a simple majority
is already possible in the existing protocol and always has been.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/e9fea46d/attachment.html>

From laanwj at gmail.com  Thu Apr 24 08:02:52 2014
From: laanwj at gmail.com (Wladimir)
Date: Thu, 24 Apr 2014 10:02:52 +0200
Subject: [Bitcoin-development] Development Roadmap of Bitcoin Core 0.9.2
In-Reply-To: <CAAS2fgSQ6rh1XKao6pv8BmpeRbtqWfUOVF+C1Fi3LEzY1YcPiA@mail.gmail.com>
References: <CAEz79PrAg=yydd3UOk51wGQUWey-KZHUH1Npzwb=qL+6zTj+pQ@mail.gmail.com>
	<53581D1D.1000709@gmail.com>
	<CAEz79Poy0XEVyC=nOdhYNVOASvfB-2zHJcjU2hvjA7iDWGDDyw@mail.gmail.com>
	<CAAS2fgSQ6rh1XKao6pv8BmpeRbtqWfUOVF+C1Fi3LEzY1YcPiA@mail.gmail.com>
Message-ID: <CA+s+GJDY6c2-fjbL=JcrF3umM4ji8Y5j5ppxX_mAzZdTh1_QRw@mail.gmail.com>

On Thu, Apr 24, 2014 at 12:28 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> On Wed, Apr 23, 2014 at 1:39 PM, Warren Togami Jr. <wtogami at gmail.com> wrote:
>> If you are
>> a rare user who needs Bitcoin-Qt on an incompatible system you can at least
>> build it from source.
>
> Tails users usually can't really build it from source? talks is a live
> boot mostly stateless linux distribution for privacy applications.
> It's really good in general.

Aside: But is Bitcoin Core a well-suited application for those uses? I
cannot imagine someone running a full node on a stateless system.

Anyhow: As this is only one symbol, we can probably get rid of it (as
we didn't use it in 0.8.6?), or put it behind some #ifdef
COMPATIBILITY_BUILD...

Another option: Instead of statically building it'd be easy enough to
build against the 4.6 Qt headers instead without even swapping the
library. Qt is, after all, forward-compatible - between the 4.x
versions. This will lose some GUI features but if compatibility is
more important here that's a choice that can be made.

Wladimir



From laanwj at gmail.com  Thu Apr 24 08:07:22 2014
From: laanwj at gmail.com (Wladimir)
Date: Thu, 24 Apr 2014 10:07:22 +0200
Subject: [Bitcoin-development] Development Roadmap of Bitcoin Core 0.9.2
In-Reply-To: <CA+s+GJDY6c2-fjbL=JcrF3umM4ji8Y5j5ppxX_mAzZdTh1_QRw@mail.gmail.com>
References: <CAEz79PrAg=yydd3UOk51wGQUWey-KZHUH1Npzwb=qL+6zTj+pQ@mail.gmail.com>
	<53581D1D.1000709@gmail.com>
	<CAEz79Poy0XEVyC=nOdhYNVOASvfB-2zHJcjU2hvjA7iDWGDDyw@mail.gmail.com>
	<CAAS2fgSQ6rh1XKao6pv8BmpeRbtqWfUOVF+C1Fi3LEzY1YcPiA@mail.gmail.com>
	<CA+s+GJDY6c2-fjbL=JcrF3umM4ji8Y5j5ppxX_mAzZdTh1_QRw@mail.gmail.com>
Message-ID: <CA+s+GJAtGRQWKw9tL=CdN48qa7LPKCfdzisyKj7x6YmZ+5M+FQ@mail.gmail.com>

On Thu, Apr 24, 2014 at 10:02 AM, Wladimir <laanwj at gmail.com> wrote:
> On Thu, Apr 24, 2014 at 12:28 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
>> On Wed, Apr 23, 2014 at 1:39 PM, Warren Togami Jr. <wtogami at gmail.com> wrote:
>>> If you are
> > Another option: Instead of statically building it'd be easy enough to
> build against the 4.6 Qt headers instead without even swapping the
> library. Qt is, after all, forward-compatible - between the 4.x
> versions. This will lose some GUI features but if compatibility is
> more important here that's a choice that can be made.

Are you sure this is Qt 4.6 at all? Not Qt 4.7?

I'd expect *much* more symbols if this was a Qt 4.8 versus 4.6
conflict. Qt 4.7 introduced a lot of new things (see all the
occurences of  #if QT_VERSION >= 0x040700 - things like
setPlaceHolderText would be expected to pop up too), but 4.8 did not.

Can you check?

Wladimir



From mike at plan99.net  Thu Apr 24 08:09:26 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 24 Apr 2014 10:09:26 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAPg+sBj68d5ZBDZ4uWvQYHMeq=bwTCaMNbwxfWGVL5MPh=7g2g@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>
	<CAE-z3OUMp_uO07+_R_x2yRLbSCzK1J5isbVUYEY3KF4Tx16K2Q@mail.gmail.com>
	<53581480.5060103@gk2.sk> <201404231944.14256.luke@dashjr.org>
	<5358B51F.8010202@gmx.de>
	<CAPg+sBj68d5ZBDZ4uWvQYHMeq=bwTCaMNbwxfWGVL5MPh=7g2g@mail.gmail.com>
Message-ID: <CANEZrP19rdDmsCM17-GADyWajxXy8_AeBY-6et0nzG_EMXe2jg@mail.gmail.com>

Right. So part of this is my fault, I'm afraid, because I do not intend to
implement any kind of subwallet/account support in bitcoinj. My reasons are:

   1. The bitcoinj API already lets you create and use multiple wallets.
   What's more, because of the desire to do key rotation (think rotating a
   previously unencrypted wallet to an encrypted one that is stored on SSD's
   that cannot reliably erase data), a bitcoinj wallet can actually contain
   multiple BIP32 seeds and hierarchies at once, although only the last one
   will be used for vending addresses. So adding subwallet support onto this
   makes it even more complicated.

   2. If there was a much better user experience to be enabled by this, it
   may be worth it, but I believe many people will find subwallets rather
   confusing. They don't match the analogy of bank accounts in several ways.
   For instance, transferring money across them leaks private data and costs
   miners fees, neither of which are true with banks.

   Also it differs in a more important way. People have different bank
   accounts because those accounts implement different policies. Current
   accounts may pay a lower interest rate than savings accounts, but have
   different features, and accounts can be used as security boundaries i.e. no
   card withdrawals from savings. But "subwallets" are not like this. The only
   justification for their existence is to avoid outputs being merged together
   to make payments - a subtle technical detail of the protocol that users are
   ill equipped to understand. If someone asked me "why should I create a
   second account" I would be unable to give them a satisfying answer without
   first teaching them about how the Bitcoin protocol works and the privacy
   implications of that, which is practically a lecture sized topic.

   3. MultiBit did support multiple wallets for a long time (just by
   creating multiple wallet files and using the support in bitcoinj for
   running them in parallel), but they decided to remove this feature in
   MultiBit HD because it caused support headaches. People would stash money
   in one wallet or the other, close the wallet and then forget and think they
   had lost it, etc. It may be that TREZOR type subwallets don't suffer this
   confusion because they can't be moved around or "closed" in the same way a
   file can be, but still, this is a data point against multiple simultaneous
   wallets. At least for products targeting entry level consumers.

Whilst I can well believe there are TREZOR users who are asking for this
feature today, currently the costs feel a bit higher than the benefits.

It would be rather nice to be able to type in a mnemonic code that myTREZOR
was initialised with and duplicate that wallet into a bitcoinj based wallet
app. But if I have to implement subwallets and expose this in the API, and
if all wallet authors that want to be able to share a wallet with myTREZOR
have to expose subwallets in their GUIs too, even though the concept may
prove confusing and hard to explain, then it might be more tempting to just
tell users that want to switch wallet apps to send the money via the block
chain instead.




On Thu, Apr 24, 2014 at 9:10 AM, Pieter Wuille <pieter.wuille at gmail.com>wrote:

> On Thu, Apr 24, 2014 at 8:54 AM, Thomas Voegtlin <thomasv1 at gmx.de> wrote:
> >> Why do clients need to use the features in BIP 64? If Electrum doesn't
> want to
> >> use accounts, [...]
> >
> > To clarify:
> > Electrum plans to have bip32 accounts; Multibit will not, afaik.
>
> To clarify:
> BIP64 has a much stricter definition for accounts than BIP32.
>
> In BIP32, it is not well specified what accounts are used for. They
> can be used for "subwallets", "receive accounts" (as in bitcoind's
> account feature), "recurring payments", part of a chain used as
> multisig addresses, ... determined individually for each index.
>
> In BIP64, they are strictly used for subwallets, and can't be used by
> anything else.
>
> --
> Pieter
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/095c0435/attachment.html>

From wtogami at gmail.com  Thu Apr 24 08:15:11 2014
From: wtogami at gmail.com (Warren Togami Jr.)
Date: Wed, 23 Apr 2014 22:15:11 -1000
Subject: [Bitcoin-development] Development Roadmap of Bitcoin Core 0.9.2
In-Reply-To: <CA+s+GJDY6c2-fjbL=JcrF3umM4ji8Y5j5ppxX_mAzZdTh1_QRw@mail.gmail.com>
References: <CAEz79PrAg=yydd3UOk51wGQUWey-KZHUH1Npzwb=qL+6zTj+pQ@mail.gmail.com>
	<53581D1D.1000709@gmail.com>
	<CAEz79Poy0XEVyC=nOdhYNVOASvfB-2zHJcjU2hvjA7iDWGDDyw@mail.gmail.com>
	<CAAS2fgSQ6rh1XKao6pv8BmpeRbtqWfUOVF+C1Fi3LEzY1YcPiA@mail.gmail.com>
	<CA+s+GJDY6c2-fjbL=JcrF3umM4ji8Y5j5ppxX_mAzZdTh1_QRw@mail.gmail.com>
Message-ID: <CAEz79PqoWOUEwrsaaHjX58QqYbFUdS6k5jg2V9XvOAAUBw00Ug@mail.gmail.com>

On Wed, Apr 23, 2014 at 10:02 PM, Wladimir <laanwj at gmail.com> wrote:

> On Thu, Apr 24, 2014 at 12:28 AM, Gregory Maxwell <gmaxwell at gmail.com>
> wrote:
> > On Wed, Apr 23, 2014 at 1:39 PM, Warren Togami Jr. <wtogami at gmail.com>
> wrote:
> >> If you are
> >> a rare user who needs Bitcoin-Qt on an incompatible system you can at
> least
> >> build it from source.
> >
> > Tails users usually can't really build it from source? talks is a live
> > boot mostly stateless linux distribution for privacy applications.
> > It's really good in general.
>
> Aside: But is Bitcoin Core a well-suited application for those uses? I
> cannot imagine someone running a full node on a stateless system.
>
> Anyhow: As this is only one symbol, we can probably get rid of it (as
> we didn't use it in 0.8.6?), or put it behind some #ifdef
> COMPATIBILITY_BUILD...
>
> Another option: Instead of statically building it'd be easy enough to
> build against the 4.6 Qt headers instead without even swapping the
> library. Qt is, after all, forward-compatible - between the 4.x
> versions. This will lose some GUI features but if compatibility is
> more important here that's a choice that can be made.
>
> Wladimir
>

I now see how it worked with Bitcoin 0.8.6.  Lucid has qt-4.6.2.

It is more than one symbol.  It does not seem to be a wise thing to replace
functions beyond the trivial in glibc and libstdc++.

I personally think we need to decide upon a cut-off point beyond which it
makes no sense to add the risk of increased complexity.  RHEL6 had qt-4.6.2
as well and I don't think I've heard a single complaint about bitcoin-qt
being broken there given almost nobody uses it as a desktop.

Warren
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/feeeee08/attachment.html>

From thomasv1 at gmx.de  Thu Apr 24 08:15:18 2014
From: thomasv1 at gmx.de (Thomas Voegtlin)
Date: Thu, 24 Apr 2014 10:15:18 +0200
Subject: [Bitcoin-development] New BIP32 structure
In-Reply-To: <CAAS2fgS1bsp+T94c2D+uzU4aDsux+BRCSHu5zb0Xaz+LCg0xqA@mail.gmail.com>
References: <CANEZrP2hbBVGqytmXR1rAcVama4ONnR586Se-Ch=dsxOzy2O4w@mail.gmail.com>	<CAE-z3OUMp_uO07+_R_x2yRLbSCzK1J5isbVUYEY3KF4Tx16K2Q@mail.gmail.com>	<53581480.5060103@gk2.sk>	<201404231944.14256.luke@dashjr.org>	<5358B51F.8010202@gmx.de>	<CAPg+sBj68d5ZBDZ4uWvQYHMeq=bwTCaMNbwxfWGVL5MPh=7g2g@mail.gmail.com>
	<CAAS2fgS1bsp+T94c2D+uzU4aDsux+BRCSHu5zb0Xaz+LCg0xqA@mail.gmail.com>
Message-ID: <5358C816.8020707@gmx.de>



Le 24/04/2014 09:21, Gregory Maxwell a ?crit :
> 
> It doesn't appear to me that reoccurring payments, receive accounts,
> multisig addresses, etc can be used with this proposal, but instead
> you must use a different purpose code and another BIP and are not
> compatible with the draft here.
> 
> Am I misunderstanding it?   Will Electrum be limiting itself in this
> way?  I'd consider it a unfortunate loss of functionality if wallets
> couldn't implement reoccurring payment chains without making users
> generate entirely different wallets (which they couldn't share funds
> across) since addresses for recurring payments was one of the main
> motivations in BIP32.
> 
> 

No, Electrum will not be limiting itself in this way. I believe that we
are only at the beginning of exploring the different possibilities
opened by HD wallets. It will probably take years until we have clear
ideas on what users need, what choices they make, and how to organize
everything. Therefore it is too early to take decisions that might limit
future functionality.

I can see that it is very difficult today to find a consensus on wallet
structure between wallet developers. In addition, I changed my mind
several times on these questions, so I guess I will probably need to
change things again in the future.

This is why I decided to include a version number in Electrum seeds. The
version number will be updated everytime the wallet structure changes. I
know many developers do not follow me on this, but that is something I
am quite sure Electrum needs, despite all the other things I am not sure
about :)

I think it is too early to aim for inter-wallet compatibility today. I
guess we should postpone this goal, and move on with software releases.
As Andreas pointed out, we should just make sure that we do not import
an incompatible seed in another wallet, because not recovering all your
bitcoins would be a terrible user experience; the version number built
in the seed will ensure that for Electrum.



From gmaxwell at gmail.com  Thu Apr 24 08:19:20 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Thu, 24 Apr 2014 01:19:20 -0700
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP0j0KoLUB+SE+W3fL8vTKay0niqoeQ38RKnU9cyGgvvYw@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAE28kUSLXG0y350gMiwnv0CoOHUorMgLup9TG77Mjj+BJcuowA@mail.gmail.com>
	<CANEZrP0j0KoLUB+SE+W3fL8vTKay0niqoeQ38RKnU9cyGgvvYw@mail.gmail.com>
Message-ID: <CAAS2fgQV0=QfCWhwVh6-mw=eg9MDd1E21P_7rFAnGp0P43c1Fw@mail.gmail.com>

On Thu, Apr 24, 2014 at 12:58 AM, Mike Hearn <mike at plan99.net> wrote:
> The complexity overhead is trivial - we already used coinbase scriptSigs for
> voting on P2SH, I'm sure it'll be used for voting on other things in future
> too.

We use coinbase sigs to gauge the safety of enforcing a soft fork
several times and not just for P2SH, to determine when enforcement of
it will be decisive and not result in risking a partition in the
network that might permit transaction reversals. This is not voting.
As a feature decision mechanism his is a rather coercive thing because
it gives the highest hash-power bidders control even when their
interests may be rather thoroughly unaligned with population that owns
and uses bitcoin in general, but as a plain indicator of when its safe
to enforce a new rule (same mechanism, different motivation? though a
point is that safe usage means using much more than 50% as the
threshold) it works pretty well.

> .... that's hugely complex and messy.

Yes, making really distributed systems that work in a complex world is
hard. It certantly would be /easier/ to just declare miners "trusted
parties" and require them to always collude to produce a single
consensus view of the world that is always honest and never
contradictory, except that it doesn't work. Because they aren't
individually trusted or even trustworthy.

> Why? Remember deleting coinbases with nothing more than a simple majority is
> already possible in the existing protocol and always has been.

Temporarily censoring transactions by orphaning otherwise valid blocks
that contain them for as long as you retain a majority is possible and
impossible to prevent in this architecture. This isn't the same as
deleting.  Deleting suggests the common misconception that a majority
of miners can do anything they want.



From laanwj at gmail.com  Thu Apr 24 08:25:43 2014
From: laanwj at gmail.com (Wladimir)
Date: Thu, 24 Apr 2014 10:25:43 +0200
Subject: [Bitcoin-development] Development Roadmap of Bitcoin Core 0.9.2
In-Reply-To: <CAEz79PqoWOUEwrsaaHjX58QqYbFUdS6k5jg2V9XvOAAUBw00Ug@mail.gmail.com>
References: <CAEz79PrAg=yydd3UOk51wGQUWey-KZHUH1Npzwb=qL+6zTj+pQ@mail.gmail.com>
	<53581D1D.1000709@gmail.com>
	<CAEz79Poy0XEVyC=nOdhYNVOASvfB-2zHJcjU2hvjA7iDWGDDyw@mail.gmail.com>
	<CAAS2fgSQ6rh1XKao6pv8BmpeRbtqWfUOVF+C1Fi3LEzY1YcPiA@mail.gmail.com>
	<CA+s+GJDY6c2-fjbL=JcrF3umM4ji8Y5j5ppxX_mAzZdTh1_QRw@mail.gmail.com>
	<CAEz79PqoWOUEwrsaaHjX58QqYbFUdS6k5jg2V9XvOAAUBw00Ug@mail.gmail.com>
Message-ID: <CA+s+GJB6Fucjvcve8QQoWdOz=FG-DMJ7z16PLRS2Q_5ReP4o4A@mail.gmail.com>

On Thu, Apr 24, 2014 at 10:15 AM, Warren Togami Jr. <wtogami at gmail.com> wrote:

> I now see how it worked with Bitcoin 0.8.6.  Lucid has qt-4.6.2.
>
> It is more than one symbol.  It does not seem to be a wise thing to replace
> functions beyond the trivial in glibc and libstdc++.

Qt is not part of the compiler/build environment. Thus we don't need
to resort to those kind of tricks.

As I said: we can easily build against Qt 4.6 instead. As said, that
wouldn't even need building Qt on linux, just unpacking and exporting
the headers.

But indeed we need to decide on a cut-off point. I'd have preferred
4.7 or 4.8. Qt 4.6 is *ancient* - it was released in februari 2010.
Apart from tails it doesn't seem like anyone is using those old stable
distributions on the desktop.

Wladimir



From mike at plan99.net  Thu Apr 24 08:39:41 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 24 Apr 2014 10:39:41 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CAAS2fgQV0=QfCWhwVh6-mw=eg9MDd1E21P_7rFAnGp0P43c1Fw@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAE28kUSLXG0y350gMiwnv0CoOHUorMgLup9TG77Mjj+BJcuowA@mail.gmail.com>
	<CANEZrP0j0KoLUB+SE+W3fL8vTKay0niqoeQ38RKnU9cyGgvvYw@mail.gmail.com>
	<CAAS2fgQV0=QfCWhwVh6-mw=eg9MDd1E21P_7rFAnGp0P43c1Fw@mail.gmail.com>
Message-ID: <CANEZrP3vT6Q72X6PrcDQ8_fDeF90WmV4-M045Ac=kJY+PhuAdg@mail.gmail.com>

On Thu, Apr 24, 2014 at 10:19 AM, Gregory Maxwell <gmaxwell at gmail.com>wrote:

> This is not voting.
>

It absolutely is! It was widely discussed as such at the time, here is a
thread where people ask how to vote and the operator of Eclipse said he was
removing his vote for P2SH:

https://bitcointalk.org/index.php?topic=60937.0

You might not feel it's a particularly fair or representative vote, but
it's still miners saying "I support enforcement of this new rule" or "I do
not support this" where the majority of cast votes wins. Some miners have
more votes than others, but it's still a vote.


> Yes, making really distributed systems that work in a complex world is
> hard. It certantly would be /easier/ to just declare miners "trusted
> parties"
>

Miners *are* trusted parties, they are just not all trusted simultaneously.
Bitcoin can tolerate a small number of dishonest miners whilst producing a
degraded service. It cannot work if all miners are dishonest or decide to
deviate from their intended operation, like if they all produce empty
blocks. The white paper made this clear from the start, and it's also
common sense.

Allowing the majority of honest miners to keep the dishonest ones in check
is what Bitcoin is all about. I don't understand this view that a very
small change to the existing protocol is somehow terrible or impossible,
but expecting everyone to simply build an entirely new system from scratch
is easy and inevitable. I'd much prefer to just keep the existing system
working as well as it has so far, and I think that is true of most users
too.


> Temporarily censoring transactions by orphaning otherwise valid blocks
> that contain them for as long as you retain a majority is possible


No, coinbases are deletable. If some miners fork the chain and build a
longer one, the others will all switch to it and the coinbases blocks they
previously mined will never become spendable (effectively they were
"deleted" before maturity). Only if the other miners also blacklist the
majorities fork and never join it, then the majority for some reason gives
up and rejoins the minority, is what you described correct. But why would
they do that? If they're the majority then all the other nodes will follow
them. They have no incentive to throw away their fork and rejoin the
minority chain ever again.

I think the root of this disagreement is whether the block chain algorithm
left by Satoshi is somehow immutable and itself the end, or whether it's
(as I see it) just a means to an end and therefore an algorithm that can be
tweaked and improved, to get us closer to the goal.

If the end is a useful payments system, as decentralised as possible, that
prevents double spending, then this proposal is a simple enhancement of the
current system that ensures corrupt miners don't get paid by honest users
for services they didn't provide, thus discouraging a particular kind of
attack.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/53211318/attachment.html>

From andyparkins at gmail.com  Thu Apr 24 09:21:26 2014
From: andyparkins at gmail.com (Andy Parkins)
Date: Thu, 24 Apr 2014 10:21:26 +0100
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP1A_yb8JB3hdrVYPrDrY0VXEVuH34rKTex6R1wRiVkepg@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<201404231421.53349.andyparkins@gmail.com>
	<CANEZrP1A_yb8JB3hdrVYPrDrY0VXEVuH34rKTex6R1wRiVkepg@mail.gmail.com>
Message-ID: <27973999.1P2WQtRr33@momentum>

On Wednesday 23 April 2014 15:31:38 Mike Hearn wrote:
> > There _are_ consequences though: 95% of the time, you end up buying
> > something and paying for it.
> 
> Yeah, I was imagining a situation in which people who use Bitcoin regularly
> do buy things they actually want, but wouldn't say no to occasionally
> getting them for free (think coffees at starbucks etc). So if their double
> spend fails, no big deal, they're no worse off than if they didn't try.

Again true enough; but then we're back to evenly distributed dishonesty, and 
so you still don't get the potential 5% scam being used at 100% capacity.


Andy

-- 
Dr Andy Parkins
andyparkins at gmail.com




From gmaxwell at gmail.com  Thu Apr 24 09:25:02 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Thu, 24 Apr 2014 02:25:02 -0700
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP3vT6Q72X6PrcDQ8_fDeF90WmV4-M045Ac=kJY+PhuAdg@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAE28kUSLXG0y350gMiwnv0CoOHUorMgLup9TG77Mjj+BJcuowA@mail.gmail.com>
	<CANEZrP0j0KoLUB+SE+W3fL8vTKay0niqoeQ38RKnU9cyGgvvYw@mail.gmail.com>
	<CAAS2fgQV0=QfCWhwVh6-mw=eg9MDd1E21P_7rFAnGp0P43c1Fw@mail.gmail.com>
	<CANEZrP3vT6Q72X6PrcDQ8_fDeF90WmV4-M045Ac=kJY+PhuAdg@mail.gmail.com>
Message-ID: <CAAS2fgQFx7-0vZ2AR3RnLORZZCqjBFHyUBqj688Jrz8OuMYPKA@mail.gmail.com>

On Thu, Apr 24, 2014 at 1:39 AM, Mike Hearn <mike at plan99.net> wrote:
> It absolutely is!
> https://bitcointalk.org/index.php?topic=60937.0

May I direct your attention to the third post in that thread?

Luke attempting to ret-con the enforcement flag into a vote didn't
make it one, and certantly wouldn't make it a fair, just, or sane
method of one. And so much for the effectiveness? you didn't implement
it for years even after it was deployed.

And yes, you can take any decision system and draw comparisons to
voting and call it a vote but that doesn't mean is serves the same
role or was intended for that purpose.

> No, coinbases are deletable. If some miners fork the chain and build a
> longer one, the others will all switch to it and the coinbases blocks they

Yes, you can reorg out the blocks and actually remove them, but I
understood that you were _not_ proposing that quite specifically. But
instead proposed without reorging taking txouts that were previously
assigned to one party and simply assigning them to others.

> I think the root of this disagreement is whether the block chain algorithm
> left by Satoshi is somehow immutable and itself the end, or whether it's (as
> I see it) just a means to an end and therefore an algorithm that can be
> tweaked and improved, to get us closer to the goal.

I don't think thats the root of the the disagreement at all. I think
all sorts of changes are interesting, especially ones that increase
flexibility or fix bugs but less so ones that would impose significant
changes on parties without their consent especially things that look
like taking someone's coins and assigning them to someone else.

I think the root is that you believe that the miners are, should be,
or even could be trustworthy in ways that I do not,  and as a result
you expect to be able to extract the performance of a trusted
centralized system out of them that I do not. Bitcoin is a system
where the incentives are well enough aligned that you appear to only
need a small amount of altruism to make it reliable. ... and even
summoning that altruism is a challenge? as miners hand over control of
their hash-power to centralized pools (some known to have behaved
poorly in the past), etc.

I would like that performance if it came at no cost: But proposals
that miners conspiring to blacklist transactions/blocks produced by
other people is something with a risk of a worse violation of the
system's promises than some disagreement of the ordering of
unconfirmed transactions.  Pretty much immediately after your post
Peter Todd? in his trouble making manner? went and posted on reddit
proposing the mechanism be used to claw back mining income from a
hardware vendor accused of violating its agreements on the amount of
self mining / mining on customers hardware.  While Peter's suggestion
was no doubt intentionally trouble making? I'm not clear on where the
line is here: Harm from reordering pretty much non-existent currently
and is highly speculative, while the harm to miners by hardware
vendors who've promised to not compete with their own customers or use
their equipment is not at all speculative and very salient to miners.

This especially in light of the fact that the system already has an
equitable method to decide what order transactions should be in... but
instead you propose an additional complex heuristic system where based
on some unspecified collusion some majority of miners take a
minorities coins and assign them to themselves.

Unlike reorginization this form of wealth transferal has no collateral
damage meaning that a majority cabal can use it to deprive a minority
outsider of some or all income without risking disrupting the network,
it would also lay the groundwork for additional forms of censorship
which I believe would be at odds with the purpose and architecture of
the system... and, as I noted above, it wouldn't actually prevent
theft, it would just mean that no single block could make its theft
services available to all comers (or even any of the public at all).
The simple mechenism of allowing only only a small number of paid
reordering transactions per block would prevent forming a quorum on
the decision to revoke the coinbase, and you'd even get additional
income from the probe transactions without even helping any real
double spends at all. The incentives seem very hard to analyze.



From mike at plan99.net  Thu Apr 24 09:56:23 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 24 Apr 2014 11:56:23 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CAAS2fgQFx7-0vZ2AR3RnLORZZCqjBFHyUBqj688Jrz8OuMYPKA@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAE28kUSLXG0y350gMiwnv0CoOHUorMgLup9TG77Mjj+BJcuowA@mail.gmail.com>
	<CANEZrP0j0KoLUB+SE+W3fL8vTKay0niqoeQ38RKnU9cyGgvvYw@mail.gmail.com>
	<CAAS2fgQV0=QfCWhwVh6-mw=eg9MDd1E21P_7rFAnGp0P43c1Fw@mail.gmail.com>
	<CANEZrP3vT6Q72X6PrcDQ8_fDeF90WmV4-M045Ac=kJY+PhuAdg@mail.gmail.com>
	<CAAS2fgQFx7-0vZ2AR3RnLORZZCqjBFHyUBqj688Jrz8OuMYPKA@mail.gmail.com>
Message-ID: <CANEZrP18=Y5EBcfR-sHumVvU3-yqYr1tuhr_J4ieG817HOpE=g@mail.gmail.com>

>
> Yes, you can reorg out the blocks and actually remove them, but I
>
understood that you were _not_ proposing that quite specifically. But
> instead proposed without reorging taking txouts that were previously
> assigned to one party and simply assigning them to others.
>

Well, my original thought was just to delete the coinbases. But then some
people don't like the idea of destroying money (equivalently, reducing the
system's resolution) so I proposed reallocating it instead. I'm not sure
which is better though. Deletion is closer to what the existing system
allows, for sure.

Would you feel differently if the consequence was UTXO deletion rather than
reallocation? I think the difference makes no impact to the goal of
discouraging double spending.


> ... proposing the mechanism be used to claw back mining income from a
> hardware vendor accused of violating its agreements on the amount of
> self mining / mining on customers hardware.
>

I think this would not be doable in practice, unless there was a way to
identify that a block was mined with pre-sold equipment. Peter points out
that the pool in question is marking their blocks by reusing addresses -
ditto for the double spending against dice sites - but that's a trivial
thing for them to fix. Then it'd be difficult (impossible?) for miners to
identify KnC blocks even if there was a strong majority consensus to delete
their coinbases.

The reason I think this particular change is doable is that it should be
possible to quite reliably identify blocks that are Finney attacking for
profit. That doesn't generalise to any policy though. Blocks are intended
to be structurally identical to each other if best practices are followed
and even with the dire pool situation a big chunk of mining hash power
today is effectively anonymous.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/33b9083b/attachment.html>

From jtimon at monetize.io  Thu Apr 24 11:22:24 2014
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Thu, 24 Apr 2014 13:22:24 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>
	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>
Message-ID: <CAC1+kJNE+k4kcTj3Ap0-A=PdD1=+-k5hN4431Z99A+S7M3=BoQ@mail.gmail.com>

On 4/23/14, Mike Hearn <mike at plan99.net> wrote:
>> I guess word "honest" might have different meanings, that can be a source
>> of confusing.
>> 1. Honest -- not trying to destroy bitcoin
>> 2. Honest -- following rules which are not required by the protocol
>>
>
> I'm using it in the same sense Satoshi used it. Honest miners work to
> prevent double spends. That's the entire justification for their existence.

I thought the mechanism they used to prevent double-spends was proof of work.
Therefore dishonest miners where only those who mine on top of a block
which is not the longest valid chain they've seen.
To distinguish this definition from your own "honest miners are those
who decide on double-spends by mining the transaction they saw first"
definition I propose to give another new name to the later, instead of
changing the definition of the former.
So inside the group of honest miners we have some that decide on
transactions based on reception times and others that simply maximize
their revenue while respecting the protocol rules.
I suggest "stupid miners" and "smart miners" respectively as more
clear terms for what we're talking about here.

> Miners that are deliberately trying to double spend are worse than useless.

I completely disagree.
Miner's proof of work makes transactions irreversible. Even if zero
confirmation transactions weren't possible in a replace-by-fee
environment, that's very useful.
Even if you always had to wait for transactions to be confirmed with
some irreversible proof of work (as described in Satoshi's
whitepaper), it doesn't follow that "automatically resolves the
Bitcoin experiment as a failure". I don't understand how can you
conclude that.

But in fact 0 conf txs are possible *precisely* using replace-by-fee,
as described in the "
0 confirmation txs using replace-by-fee and game theory" thread. So
that conclusion is definitely wrong.

On your concrete proposal, it seems to me that you're trying to
prevent double-spending without relying on proof of work, which I
think it impossible in the context of a truly p2p system.
I don't think your current proposal is secure and I fear that at best
you will end up with an "invite only" transaction processing network
like Ripple.com has with their consensus algorithm and Unique Node
Lists: that's not really p2p.

-- 
Jorge Tim?n

http://freico.in/



From mike at plan99.net  Thu Apr 24 11:43:20 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 24 Apr 2014 13:43:20 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CAC1+kJNE+k4kcTj3Ap0-A=PdD1=+-k5hN4431Z99A+S7M3=BoQ@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>
	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>
	<CAC1+kJNE+k4kcTj3Ap0-A=PdD1=+-k5hN4431Z99A+S7M3=BoQ@mail.gmail.com>
Message-ID: <CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>

On Thu, Apr 24, 2014 at 1:22 PM, Jorge Tim?n <jtimon at monetize.io> wrote:

> > I'm using it in the same sense Satoshi used it. Honest miners work to
> > prevent double spends. That's the entire justification for their
> existence.
>
> I thought the mechanism they used to prevent double-spends was proof of
> work.
> Therefore dishonest miners where only those who mine on top of a block
> which is not the longest valid chain they've seen.
>

No! This is a misunderstanding. The mechanism they use to prevent double
spends is to *ignore double spends*. The blocks they created indicate the
ordering of transactions they saw and proof of work is used to arrive at a
shared consensus ordering given the possibility that transactions arrived
at different times.

I'm continually amazed at how many people seem to see the current algorithm
as the goal in and of itself, instead of an imperfect but workable means of
achieving the actual goal.

To distinguish this definition from your own "honest miners are those
> who decide on double-spends by mining the transaction they saw first"
>

This definition of honesty is not my own, the one Bitcoin has always used.
Obviously if Satoshi had wanted transactions to be double spendable by fee
in the mempool he would have made Bitcoin work that way, instead of coming
up with the nSequence based replacement scheme instead.

First-seen *is* a protocol rule, as much as Set-Cookie storing data in a
browser is an HTTP protocol rule. The fact that auditing compliance with it
is harder to do than some others does not make it less of a rule.

I completely disagree.
> Miner's proof of work makes transactions irreversible.


Again you are hopelessly confused. Miners that are trying to double spend
are *by definition* not making transactions irreversible, they are trying
to make transactions reversible.

Look at it this way. There is no inherent reason BitUndo has to undo only
Finney attacks. If it gets sufficient hash power it could offer undoing of
1-confirm transactions too, right? Sure it'll mostly fail but that's
already a part of its business model. Sometimes it'll get two blocks in a
row and succeed. It's a very minor tweak to what they're doing. Would you
argue these miners are still useful? After all, it's impossible to be
certain after the fact that miners built on top of the "wrong" block
because forks occur naturally.


> Even if you always had to wait for transactions to be confirmed with
> some irreversible proof of work (as described in Satoshi's
> whitepaper), it doesn't follow that "automatically resolves the
> Bitcoin experiment as a failure". I don't understand how can you
> conclude that.
>

What I said is, if you believe all miners are willing to double spend for a
fee then this resolves the experiment as a failure. This is also obvious -
if you can pay miners to go back and rewrite the chain at will, Bitcoin
doesn't work.

Consider the incentives. Let's say all miners are "smart" in your
estimation and are willing to double spend transactions for higher fees.
Because all miners follow this ridiculous policy, they should be willing to
fork the chain at any point to claim the higher fee on the new tx. After
all, although they will throw away the work they did on the previous chain,
if the fee on the new tx is high enough to balance this then it can be
profitable for them to do it.

Because a double spender can afford to give nearly all of his new tx away
in fees, this means even txns well buried in the chain can be profitably
double spent: even if the double spender gets back only 10% of the
transferred amount, if it was a big transfer for some expensive object,
they still win! They got object + 10%

Do you see now why your definition of honesty is completely broken?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/65f8c640/attachment.html>

From jtimon at monetize.io  Thu Apr 24 10:48:54 2014
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Thu, 24 Apr 2014 12:48:54 +0200
Subject: [Bitcoin-development] 0 confirmation txs using replace-by-fee and
	game theory
Message-ID: <CAC1+kJM3pSq8YfwbX167rQ0=0Y_hozRQ3pggDN524=LUfOdTqg@mail.gmail.com>

Here is a solution to the problem of having 0 confirmation
transactions that relies on game
theory and most miners implementing replace-by-fee and child-pays-for-parent.

This has been proposed before
http://sourceforge.net/p/bitcoin/mailman/message/30876033/
I'm just going to describe the general idea in more detail.

Here's a small draft on how this could work:

Alice goes to Bob's store and wants to buy something cheaper than a
car, say a smartphone.
So Bob says, "it's 200 usd in btc, please pay me 400 usd in btc"
So Alice signs a tx with 400 and no fee with her old phone and she
just sends it to Bob rather than the network.
Bob creates a child transaction keeping 200 and giving 199.9 (0.1 usd
fee) back to Alice.

But you know, Alice wants to double spend.
She double spends 399.8 to herself (0.2 fee)
Bob thinks "last chance", he double-spends the child: 200 to Bob, back
199 to Alice (1 usd fee).
Alice is stubborn: 398 to Alice (2 usd fee).
Bob is really pissed off, double spends the child: 400 in fees.

So, ok, Bob lost the phone and got nothing but Alice has paid twice as
she needed for the phone.
Nobody's happy thus everybody's happy.

This is similar to the general game theory "stag hunt" case.
The payoff matrix could be something like this:

                        Bob returns change   Bob burns in fees
 ---------------------+--------------------+-------------------
  Alice behaves         + 1 , + 1            - 1, + 1
 ---------------------+--------------------+-------------------
  Alice double-spends   + 3, - 1             - 1, - 1

The game has two Nash equilibria, but cooperation is Pareto efficient.

Replace-by-fee and child-pays-for parent cannot be prohibited by a
protocol rule.
I believe all miners will eventually implement these policies because
it is the more rational way for them to prioritize transactions.
Finally I hope they do because it would make 0-confirmation
transactions possible as described in this post.
So I can't find any reasoning against replace-by-fee unless my example
is terribly flawed.
Am I missing something?

-- 
Jorge Tim?n

http://freico.in/



From mike at plan99.net  Thu Apr 24 11:54:19 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 24 Apr 2014 13:54:19 +0200
Subject: [Bitcoin-development] 0 confirmation txs using replace-by-fee
 and game theory
In-Reply-To: <CAC1+kJM3pSq8YfwbX167rQ0=0Y_hozRQ3pggDN524=LUfOdTqg@mail.gmail.com>
References: <CAC1+kJM3pSq8YfwbX167rQ0=0Y_hozRQ3pggDN524=LUfOdTqg@mail.gmail.com>
Message-ID: <CANEZrP1f9WV-Mp9SGm4q88h82xxBnwqg8M7JJhnqGOHCWf65xg@mail.gmail.com>

>
> Am I missing something?


The scheme you described does nothing about Finney attacks, which is the
issue presently faced.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/9afc906e/attachment.html>

From ctpacia at gmail.com  Thu Apr 24 12:07:10 2014
From: ctpacia at gmail.com (Chris Pacia)
Date: Thu, 24 Apr 2014 08:07:10 -0400
Subject: [Bitcoin-development] 0 confirmation txs using replace-by-fee
 and game theory
In-Reply-To: <CANEZrP1f9WV-Mp9SGm4q88h82xxBnwqg8M7JJhnqGOHCWf65xg@mail.gmail.com>
References: <CAC1+kJM3pSq8YfwbX167rQ0=0Y_hozRQ3pggDN524=LUfOdTqg@mail.gmail.com>
	<CANEZrP1f9WV-Mp9SGm4q88h82xxBnwqg8M7JJhnqGOHCWf65xg@mail.gmail.com>
Message-ID: <CAB+qUq7=o05GgCNdTtH=cuW56qbjg5v0ZpxvCYmCPj1AvFui+g@mail.gmail.com>

This scheme would discourage people from attempting a Finney attack because
they would end up worse off if they did.

It would work but it's an ugly hack IMO. What do people do if they don't
have extra to pay when making a purchase? I have 200 mbtc and want to buy a
200 mbtc phone but I can't because I need 400 mbtc. Sucks for me.

I would much prefer the hassle of a green address notary than always having
to make sure I have double what I need to make a purchase.
On Apr 24, 2014 7:55 AM, "Mike Hearn" <mike at plan99.net> wrote:

> Am I missing something?
>
>
> The scheme you described does nothing about Finney attacks, which is the
> issue presently faced.
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/af5cd2cc/attachment.html>

From mike at plan99.net  Thu Apr 24 12:15:13 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 24 Apr 2014 14:15:13 +0200
Subject: [Bitcoin-development] 0 confirmation txs using replace-by-fee
 and game theory
In-Reply-To: <CAB+qUq7=o05GgCNdTtH=cuW56qbjg5v0ZpxvCYmCPj1AvFui+g@mail.gmail.com>
References: <CAC1+kJM3pSq8YfwbX167rQ0=0Y_hozRQ3pggDN524=LUfOdTqg@mail.gmail.com>
	<CANEZrP1f9WV-Mp9SGm4q88h82xxBnwqg8M7JJhnqGOHCWf65xg@mail.gmail.com>
	<CAB+qUq7=o05GgCNdTtH=cuW56qbjg5v0ZpxvCYmCPj1AvFui+g@mail.gmail.com>
Message-ID: <CANEZrP0fjzuUKh0Jmk9c99ne81hdxZdTnhw6sq47Na7AC4n04A@mail.gmail.com>

>
> This scheme would discourage people from attempting a Finney attack
> because they would end up worse off if they did.
>
Phrased another way, it simply makes every block a Finney attack that
charges the maximum double spending fee possible. This doesn't solve the
problem.

Beyond needing to double balances, what if the shop is selling me a phone
on contract? So the actual cost of the phone is lower than the real price
on the assumption of future revenue. Alice double spends (aka steals) the
phone, paying double the artifically lower cost but still making a good
saving. Bob does not end up with "nothing", he ends up in the red.

But there's a much simpler way to dispose with this idea. Jorge, go down to
your local bars and cafes, and ask them if they'd be willing to accept a
form of payment that allows anyone to steal from them by simply paying
double the purchase price to some other random guy. They *will* look at you
as if you're crazy. Why would they ever do that?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/04073c89/attachment.html>

From laanwj at gmail.com  Thu Apr 24 12:18:51 2014
From: laanwj at gmail.com (Wladimir)
Date: Thu, 24 Apr 2014 14:18:51 +0200
Subject: [Bitcoin-development] Development Roadmap of Bitcoin Core 0.9.2
In-Reply-To: <CA+s+GJB6Fucjvcve8QQoWdOz=FG-DMJ7z16PLRS2Q_5ReP4o4A@mail.gmail.com>
References: <CAEz79PrAg=yydd3UOk51wGQUWey-KZHUH1Npzwb=qL+6zTj+pQ@mail.gmail.com>
	<53581D1D.1000709@gmail.com>
	<CAEz79Poy0XEVyC=nOdhYNVOASvfB-2zHJcjU2hvjA7iDWGDDyw@mail.gmail.com>
	<CAAS2fgSQ6rh1XKao6pv8BmpeRbtqWfUOVF+C1Fi3LEzY1YcPiA@mail.gmail.com>
	<CA+s+GJDY6c2-fjbL=JcrF3umM4ji8Y5j5ppxX_mAzZdTh1_QRw@mail.gmail.com>
	<CAEz79PqoWOUEwrsaaHjX58QqYbFUdS6k5jg2V9XvOAAUBw00Ug@mail.gmail.com>
	<CA+s+GJB6Fucjvcve8QQoWdOz=FG-DMJ7z16PLRS2Q_5ReP4o4A@mail.gmail.com>
Message-ID: <CA+s+GJDwKzn1X2uR+1uB19+KTpXW+FEOQiWTLcTXJiAJKfdXDA@mail.gmail.com>

On Thu, Apr 24, 2014 at 10:25 AM, Wladimir <laanwj at gmail.com> wrote:
> On Thu, Apr 24, 2014 at 10:15 AM, Warren Togami Jr. <wtogami at gmail.com> wrote:
>
> But indeed we need to decide on a cut-off point. I'd have preferred
> 4.7 or 4.8. Qt 4.6 is *ancient* - it was released in februari 2010.
> Apart from tails it doesn't seem like anyone is using those old stable
> distributions on the desktop.

Does anyone know of the timeframe in which tails will switch to a
newer version of Qt?

As it's debian based: will switch to a Wheezy/7.4. Wheezy has Qt 4.8
so is decidedly unproblematic.

I see they're working on migration at least:

- https://tails.boum.org/blueprint/Wheezy/
- https://git-tails.immerda.ch/tails/log/?h=feature/wheezy

Wladimir



From pete at petertodd.org  Thu Apr 24 12:59:53 2014
From: pete at petertodd.org (Peter Todd)
Date: Thu, 24 Apr 2014 08:59:53 -0400
Subject: [Bitcoin-development] 0 confirmation txs using replace-by-fee
 and game theory
In-Reply-To: <CAC1+kJM3pSq8YfwbX167rQ0=0Y_hozRQ3pggDN524=LUfOdTqg@mail.gmail.com>
References: <CAC1+kJM3pSq8YfwbX167rQ0=0Y_hozRQ3pggDN524=LUfOdTqg@mail.gmail.com>
Message-ID: <20140424125953.GC16884@savin>

On Thu, Apr 24, 2014 at 12:48:54PM +0200, Jorge Tim?n wrote:
> Here is a solution to the problem of having 0 confirmation
> transactions

FWIW I'm running an experiment right now to detect how easy it is to
doublespend 0-conf transactions I need to collect more data, but initial
results indicate that transaction propagation is sufficiently unreliable
that double-spending frequently works without miners using
replace-by-fee even when both transactions pay high fees, there is a 60
second delay between first and second, and there's only about four
replace-by-fee nodes on the network.

With replace-by-fee scorched-earth the success rate of such
double-spends would be significantly reduced as the attacker would need
to get lucky with bad propagation not just once, but twice in a row.

> that relies on game
> theory and most miners implementing replace-by-fee and child-pays-for-parent.
> 
> This has been proposed before
> http://sourceforge.net/p/bitcoin/mailman/message/30876033/
> I'm just going to describe the general idea in more detail.

Just to be clear, while that post is mine, original credit for the idea
actually goes to John Dillon as far as I know; I first heard about it
from him in private discussion.

> Replace-by-fee and child-pays-for parent cannot be prohibited by a
> protocol rule.
> I believe all miners will eventually implement these policies because
> it is the more rational way for them to prioritize transactions.
> Finally I hope they do because it would make 0-confirmation
> transactions possible as described in this post.
> So I can't find any reasoning against replace-by-fee unless my example
> is terribly flawed.
> Am I missing something?

A few things:

1) Replace-by-fee doesn't protect against sybil attacks; only
confirmations are solid evidence that a transaction has actually reached
the mining power and your communication channel to that mining power
isn't being blocked. Keep in mind that Bitcoin depends on the existence
of a jam-free network, and very importantly, lets you detect when that
network has failed and you are being jammed. No unconfirmed transaction
scheme can solve this problem in a decentralized network.

2) Replace-by-fee scorched earth does require you to keep private keys
online to sign the replacements. Not a big deal, but it's yet another
reason why you wouldn't want to use it for high-value stuff.

3) It doesn't directly solve finney attacks(1) where the miner mines the
transaction in private. However finney attacks are only relevant if
there is high centralization of hashing power, and all other proposed
mechanisms, e.g. coinbase reallocation, themselves do a lot of harm to
decentralization. (just look at how coinbase reallocation lets large
pools bully smaller miners out of business by blacklisting their blocks)

One interesting thing with regard to finney attacks and replace-by-fee
though is that enforcing hasher visibility of the blocks they are mining
- what getblocktemplate was meant to do voluntarily - lets any hasher
detect a finney attack double-spend and broadcast it. They have a weak
incentive to do so - the scorched earth reply is a high-fee transaction
of course and pre-broadcasting transactions makes blocks propagate
faster - at which point you're back to a public double-spend.  Enforcing
visibility of block contents to hashers is definitely a good thing for
decentralization.

1) https://bitcointalk.org/index.php?topic=3441.msg48384#msg48384

-- 
'peter'[:-1]@petertodd.org
000000000000000093d8af23978adc9e201a1f2e2dc52844f9013a1da3621572
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/5fb4a89a/attachment.sig>

From pete at petertodd.org  Thu Apr 24 13:44:41 2014
From: pete at petertodd.org (Peter Todd)
Date: Thu, 24 Apr 2014 09:44:41 -0400
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CANEZrP18=Y5EBcfR-sHumVvU3-yqYr1tuhr_J4ieG817HOpE=g@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAE28kUSLXG0y350gMiwnv0CoOHUorMgLup9TG77Mjj+BJcuowA@mail.gmail.com>
	<CANEZrP0j0KoLUB+SE+W3fL8vTKay0niqoeQ38RKnU9cyGgvvYw@mail.gmail.com>
	<CAAS2fgQV0=QfCWhwVh6-mw=eg9MDd1E21P_7rFAnGp0P43c1Fw@mail.gmail.com>
	<CANEZrP3vT6Q72X6PrcDQ8_fDeF90WmV4-M045Ac=kJY+PhuAdg@mail.gmail.com>
	<CAAS2fgQFx7-0vZ2AR3RnLORZZCqjBFHyUBqj688Jrz8OuMYPKA@mail.gmail.com>
	<CANEZrP18=Y5EBcfR-sHumVvU3-yqYr1tuhr_J4ieG817HOpE=g@mail.gmail.com>
Message-ID: <20140424134441.GE16884@savin>

On Thu, Apr 24, 2014 at 11:56:23AM +0200, Mike Hearn wrote:
> > ... proposing the mechanism be used to claw back mining income from a
> > hardware vendor accused of violating its agreements on the amount of
> > self mining / mining on customers hardware.
> >
> 
> I think this would not be doable in practice, unless there was a way to
> identify that a block was mined with pre-sold equipment. Peter points out
> that the pool in question is marking their blocks by reusing addresses -
> ditto for the double spending against dice sites - but that's a trivial
> thing for them to fix. Then it'd be difficult (impossible?) for miners to
> identify KnC blocks even if there was a strong majority consensus to delete
> their coinbases.

Like I said before, that leads to the obvious next step of
deleting/stealing their coinbases if they don't identify themselves.

Another likely outcome would be for coinbase blacklisting to be used as
a way to force a minority of miners to adopt a transaction blacklist
that the majority of miners had adopted. Any block containing
transactions spending coins on the txout blacklist would itself be
punished by having the block reward either blacklisted or taken.

> The reason I think this particular change is doable is that it should be
> possible to quite reliably identify blocks that are Finney attacking for
> profit. That doesn't generalise to any policy though.

It's not possible to produce a cryptographic proof that a given block
engaged in a Finney attack. You're proposed coinbase blacklisting/reallocation
mechanism is simply a way of voting on what coinbases to either
blacklist or reallocation, nothing more.

-- 
'peter'[:-1]@petertodd.org
00000000000000003d5f2a2a68690093cd99f8af1bc8395061251017019cc30a
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/082da52b/attachment.sig>

From jtimon at monetize.io  Thu Apr 24 13:57:04 2014
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Thu, 24 Apr 2014 15:57:04 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>
	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>
	<CAC1+kJNE+k4kcTj3Ap0-A=PdD1=+-k5hN4431Z99A+S7M3=BoQ@mail.gmail.com>
	<CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>
Message-ID: <CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>

On 4/24/14, Mike Hearn <mike at plan99.net> wrote:
> No! This is a misunderstanding. The mechanism they use to prevent double
> spends is to *ignore double spends*. The blocks they created indicate the
> ordering of transactions they saw and proof of work is used to arrive at a
> shared consensus ordering given the possibility that transactions arrived
> at different times.
>
> I'm continually amazed at how many people seem to see the current algorithm
> as the goal in and of itself, instead of an imperfect but workable means of
> achieving the actual goal.

I'm not saying proof of work is the goal, the goal is still p2p
transaction serialization.
And that's achieved through proof of work, not through "miner's honesty".

> This definition of honesty is not my own, the one Bitcoin has always used.

Whatever, let's keep calling stupid miners "honest miners", smart
miners "dishonest-by-replace-by fee miners" and miners that do replace
by fee and also hash on top of old blocks "utterly dishonest miners".

> Obviously if Satoshi had wanted transactions to be double spendable by fee
> in the mempool he would have made Bitcoin work that way, instead of coming
> up with the nSequence based replacement scheme instead.

Maybe Satoshi hadn't thought in depth about replace-by-fee when he
wrote the code.
Why should we care?
If nSequence was a design mistake Satoshi did, should we maintain it
to somehow honor him?
Maybe the payment protocol shouldn't have been developed because he
had some weird ideas about paying to ips? Maybe we shouldn't write any
tests because he didn't do so?
This persistent argument from authority is annoying.

> First-seen *is* a protocol rule, as much as Set-Cookie storing data in a
> browser is an HTTP protocol rule. The fact that auditing compliance with it
> is harder to do than some others does not make it less of a rule.

It is not a protocol rule that validators can use to discriminate the
longest valid chain and therefore is not enforceable. Not even through
a softfork because miners can't know which transactions other miners
saw first.
So if it is a protocol rule, I think it shouldn't be.

> Again you are hopelessly confused. Miners that are trying to double spend
> are *by definition* not making transactions irreversible, they are trying
> to make transactions reversible.

Miners that mine on top of the longest valid chain are helping in
making transactions irreversible whether they implement a first-saw or
a replace-by-fee policy.

> Look at it this way. There is no inherent reason BitUndo has to undo only
> Finney attacks. If it gets sufficient hash power it could offer undoing of
> 1-confirm transactions too, right? Sure it'll mostly fail but that's
> already a part of its business model. Sometimes it'll get two blocks in a
> row and succeed. It's a very minor tweak to what they're doing. Would you
> argue these miners are still useful? After all, it's impossible to be
> certain after the fact that miners built on top of the "wrong" block
> because forks occur naturally.

That's not what I'm saying. Miners that don't mine on top of the
longest chain are dishonest by my own definition as well.
You want to equate replace-by-fee "dishonesty" with
trying-to-rewrite-history dishonesty by saying that the transactions
that "have been seen" in the network are already history and that's
where we disagree. I think only what's in the chain is history and I
also think that's the whole point of proof of work.
And I also disagree that all the people who think this way are
"hopelessly confused". We may be confused, but I think there's always
hope for removing confusions provided that there's will to learn,
which I think it is at least my case.

> What I said is, if you believe all miners are willing to double spend for a
> fee then this resolves the experiment as a failure. This is also obvious -
> if you can pay miners to go back and rewrite the chain at will, Bitcoin
> doesn't work.

This is in fact quite polemic and thus obviously not obvious.
Bitcoin works because rewriting the chain gets exponentially more
expensive as time passes.

> Because all miners follow this ridiculous policy, they should be willing to
> fork the chain at any point to claim the higher fee on the new tx. After
> ...
>
> Do you see now why your definition of honesty is completely broken?

I see now that I may have not properly expressed myself in the earlier
post since you clearly misunderstood what I meant by "smart miners".
By that I mean miners implementing replace-by-fee and
child-pays-for-parent policies Not miners trying to rewrite history,
which I agree is about as smart as mining on top of orphan blocks.



From mike at plan99.net  Thu Apr 24 14:09:31 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 24 Apr 2014 16:09:31 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <20140424134441.GE16884@savin>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAE28kUSLXG0y350gMiwnv0CoOHUorMgLup9TG77Mjj+BJcuowA@mail.gmail.com>
	<CANEZrP0j0KoLUB+SE+W3fL8vTKay0niqoeQ38RKnU9cyGgvvYw@mail.gmail.com>
	<CAAS2fgQV0=QfCWhwVh6-mw=eg9MDd1E21P_7rFAnGp0P43c1Fw@mail.gmail.com>
	<CANEZrP3vT6Q72X6PrcDQ8_fDeF90WmV4-M045Ac=kJY+PhuAdg@mail.gmail.com>
	<CAAS2fgQFx7-0vZ2AR3RnLORZZCqjBFHyUBqj688Jrz8OuMYPKA@mail.gmail.com>
	<CANEZrP18=Y5EBcfR-sHumVvU3-yqYr1tuhr_J4ieG817HOpE=g@mail.gmail.com>
	<20140424134441.GE16884@savin>
Message-ID: <CANEZrP0Qmmrs5dzQ8N6FGL1K3W0A0XWBqtkPTFOgU_rXDvc+sQ@mail.gmail.com>

>
> Like I said before, that leads to the obvious next step of
> deleting/stealing their coinbases if they don't identify themselves.
>

And as I said before, that's a huge leap. A majority of miners deciding
double spending needs tougher enforcement doesn't imply they also think all
miners should identify themselves. Those are unrelated things.

This kind of totally unsupported "obvious next step" argument can be
applied to any proposal in any walk of life. We developed SPV clients? The
obvious next step is that miners have to stop being anonymous. We developed
floating fees? The obvious next step is that miners have to stop being
anonymous. The prior arguments sound absurd exactly because they're not
obvious or even logical - same as this.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/d53d354b/attachment.html>

From jtimon at monetize.io  Thu Apr 24 14:20:10 2014
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Thu, 24 Apr 2014 16:20:10 +0200
Subject: [Bitcoin-development] 0 confirmation txs using replace-by-fee
 and game theory
In-Reply-To: <20140424125953.GC16884@savin>
References: <CAC1+kJM3pSq8YfwbX167rQ0=0Y_hozRQ3pggDN524=LUfOdTqg@mail.gmail.com>
	<20140424125953.GC16884@savin>
Message-ID: <CAC1+kJMREKv6ke1wQNxcHtt0G+2r7c7G7WjfVzV0tOwuLo8JNg@mail.gmail.com>

On 4/24/14, Peter Todd <pete at petertodd.org> wrote:
> ...
> With replace-by-fee scorched-earth the success rate of such
> double-spends would be significantly reduced as the attacker would need
> to get lucky with bad propagation not just once, but twice in a row.

Interesting.

>> Replace-by-fee and child-pays-for parent cannot be prohibited by a
>> protocol rule.
>> I believe all miners will eventually implement these policies because
>> it is the more rational way for them to prioritize transactions.
>> Finally I hope they do because it would make 0-confirmation
>> transactions possible as described in this post.
>> So I can't find any reasoning against replace-by-fee unless my example
>> is terribly flawed.
>> Am I missing something?
>
> A few things:
>
> 1) Replace-by-fee doesn't protect against sybil attacks; only

No worse than the current situation.

> 2) Replace-by-fee scorched earth does require you to keep private keys
> online to sign the replacements. Not a big deal, but it's yet another
> reason why you wouldn't want to use it for high-value stuff.

High-value transactions should wait for several confirmations.

> 3) It doesn't directly solve finney attacks(1) where the miner mines the
> transaction in private. However finney attacks are only relevant if
> there is high centralization of hashing power, and all other proposed
> mechanisms, e.g. coinbase reallocation, themselves do a lot of harm to
> decentralization. (just look at how coinbase reallocation lets large
> pools bully smaller miners out of business by blacklisting their blocks)

Again, no worse than the current situation. And regular double-spends
attacks are much simpler than finney attacks.

> One interesting thing with regard to finney attacks and replace-by-fee
> though is that enforcing hasher visibility of the blocks they are mining
> - what getblocktemplate was meant to do voluntarily - lets any hasher
> detect a finney attack double-spend and broadcast it. They have a weak
> incentive to do so - the scorched earth reply is a high-fee transaction
> of course and pre-broadcasting transactions makes blocks propagate
> faster - at which point you're back to a public double-spend.  Enforcing
> visibility of block contents to hashers is definitely a good thing for
> decentralization.

Where can I read more about "enforcing hashing visibility of block contents"?
Sounds somewhat similar to p2pool to me but I'm not sure I understand it.



From mike at plan99.net  Thu Apr 24 14:28:54 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 24 Apr 2014 16:28:54 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>
	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>
	<CAC1+kJNE+k4kcTj3Ap0-A=PdD1=+-k5hN4431Z99A+S7M3=BoQ@mail.gmail.com>
	<CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>
	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>
Message-ID: <CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>

>
> And that's achieved through proof of work, not through "miner's honesty".
>

You can't disentangle the two. Proof of work just makes a block chain hard
to tamper with. What it contains is arbitrary. Honest miners build a block
chain that's intended to stop double spending. Dishonest miners don't.
They're both engaging in proof of work, to different ends.


> Whatever, let's keep calling stupid miners "honest miners"
>

No, let's not. Your definition of "smart miner" is one I'd called "stupid
miner" (or possibly "short bitcoin miner"). They are miners who would
reduce the value of their coins, by making their own system less useful.
That's not smart, that's simply short termism taken to an extreme, sort of
like a business owner who puts so much pressure on his employees they all
quit. He might have gained a bit more profit in the short term, but only at
the cost of destroying his business that would have given lower but
sustainable returns over the long term.


> This persistent argument from authority is annoying.
>

Peter always says this too, but it's again an incorrect position. This is
not an argument from authority.

Why are we here? We are here because we were brought together by shared
goals.

What are those goals? They were defined at the start of the project by the
creator of the project.

Why do we issue 21 million coins and not 42? Because 21 million is the goal
everyone signed up for.

Why did everyone sign up for 21 million coins? Because that's what Satoshi
picked.


If someone asked us to change from 21 to 42 million coins, we'd probably
say no and the justification would be that this is the number we started
with. That's not "argument from authority", it's just recognition that the
parameters of a shared project has to be defined somehow, and for Bitcoin
it was defined at the start.

Now the argument Gregory makes is that changing the block chain algorithm
in this way would be a violation of the social contract. This is a generic
outcome to be legitimately worried about - we don't want to change what
Bitcoin is in ways that would dismay its users. That just leads to a fork.

I argue that this isn't such a change because it makes nothing possible
that was previously impossible, it just makes it less disruptive, and the
*actual* shared goal of Bitcoin is not "preserve the block chain algorithm
exactly as found in v0.1" but rather "stop double spending".

You are arguing elsewhere that Bitcoin should allow double spending for a
fee. That *would* be a clear violation of the social contract!


> That's not what I'm saying. Miners that don't mine on top of the
> longest chain are dishonest by my own definition as well.
>

Right, but I don't accept this definition of honesty. That's not a
definition any man on the street would use:

    "If you pay for something with forged bank notes and walk out
immediately, you are honest. But if you pay for something with forged bank
notes and hang around for longer than 10 minutes, you are dishonest"

That would sound silly to anyone because what's so special about 10
minutes? It's the act of passing counterfeit money and stealing from the
merchant that's the dishonest act, how long it takes is irrelevant.

In Bitcoin, the dishonest act by the user is signing for the same output
twice (ignoring special protocols here), and the dishonest act by the miner
is deviating from normal behaviour for a fee to try and trick the recipient
into believing they have been paid. The exact details are something
computer scientists care about, but the average Bitcoin user would not.


> And I also disagree that all the people who think this way are
> "hopelessly confused". We may be confused, but I think there's always
> hope for removing confusions provided that there's will to learn,
> which I think it is at least my case.
>

Indeed and that's why we have these threads! These are fundamental issues
that simply must be debated.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/77b3e511/attachment.html>

From christophe.biocca at gmail.com  Thu Apr 24 14:47:35 2014
From: christophe.biocca at gmail.com (Christophe Biocca)
Date: Thu, 24 Apr 2014 10:47:35 -0400
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP0Qmmrs5dzQ8N6FGL1K3W0A0XWBqtkPTFOgU_rXDvc+sQ@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAE28kUSLXG0y350gMiwnv0CoOHUorMgLup9TG77Mjj+BJcuowA@mail.gmail.com>
	<CANEZrP0j0KoLUB+SE+W3fL8vTKay0niqoeQ38RKnU9cyGgvvYw@mail.gmail.com>
	<CAAS2fgQV0=QfCWhwVh6-mw=eg9MDd1E21P_7rFAnGp0P43c1Fw@mail.gmail.com>
	<CANEZrP3vT6Q72X6PrcDQ8_fDeF90WmV4-M045Ac=kJY+PhuAdg@mail.gmail.com>
	<CAAS2fgQFx7-0vZ2AR3RnLORZZCqjBFHyUBqj688Jrz8OuMYPKA@mail.gmail.com>
	<CANEZrP18=Y5EBcfR-sHumVvU3-yqYr1tuhr_J4ieG817HOpE=g@mail.gmail.com>
	<20140424134441.GE16884@savin>
	<CANEZrP0Qmmrs5dzQ8N6FGL1K3W0A0XWBqtkPTFOgU_rXDvc+sQ@mail.gmail.com>
Message-ID: <CANOOu=8XLdS-v-xULrv8Y5XukapCafTLDGa0M0q_W1speb2Ykg@mail.gmail.com>

Actually Peter, coinbase confiscations are a much worse mechanism for
enforcement of widespread censorship rules than simple orphaning. They
lose their power when the transaction miners are punished for can
build up over time without losing their usefulness:

Assume a world where 75% of the hashpower is coerced into
stealing/burning the coinbases of miners who allow transactions to and
from a particular set of addresses (the actual rule isn't that
important). Then the following would be a rational behaviour from the
remaining 25%:

- Mine according to the enforced rules most of the time.
- Accept banned transactions paying you with an output (no real
miners' fees) and keep them in an ever-accumulating pool.
- When there's so much of those to make it worth your while, mine a
block filled with them.

If miners don't orphan your block, you made money. They can't
retaliate further, because you can publish the block anonymously, not
tying it to your previous identity. Hell, some of the 75% might be
able to do the same right under the authorities' noses (it would be
really hard to spot by an external observer).

Note that I, banned user, can submit to all these non-enforcing miners
at once (with a different fee txout for each). I get a severe
degradation of service, especially if I'm part of an extremely small
minority, but ultimately as long as a single miner can accumulate
enough transactions with enough fees, I'll eventually get through.

Of course, in such a dystopian future, orphaning would be the
enforcement mechanism. It would be stupid to rely on coinbase
reallocation/burning to do this task when the existing tools work so
much better.

What's interesting is that this mechanism is especially tailored to
blocking time sensitive transactions (that need to be confirmed
now/soon, or are worthless), such that their total out-of-band fees
can't build up over time. Double spending is one such category. I'm at
a loss to come up with something else, but maybe someone has a good
example?

On Thu, Apr 24, 2014 at 10:09 AM, Mike Hearn <mike at plan99.net> wrote:
>> Like I said before, that leads to the obvious next step of
>> deleting/stealing their coinbases if they don't identify themselves.
>
>
> And as I said before, that's a huge leap. A majority of miners deciding
> double spending needs tougher enforcement doesn't imply they also think all
> miners should identify themselves. Those are unrelated things.
>
> This kind of totally unsupported "obvious next step" argument can be applied
> to any proposal in any walk of life. We developed SPV clients? The obvious
> next step is that miners have to stop being anonymous. We developed floating
> fees? The obvious next step is that miners have to stop being anonymous. The
> prior arguments sound absurd exactly because they're not obvious or even
> logical - same as this.
>
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From jtimon at monetize.io  Thu Apr 24 14:49:31 2014
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Thu, 24 Apr 2014 16:49:31 +0200
Subject: [Bitcoin-development] 0 confirmation txs using replace-by-fee
 and game theory
In-Reply-To: <CANEZrP0fjzuUKh0Jmk9c99ne81hdxZdTnhw6sq47Na7AC4n04A@mail.gmail.com>
References: <CAC1+kJM3pSq8YfwbX167rQ0=0Y_hozRQ3pggDN524=LUfOdTqg@mail.gmail.com>
	<CANEZrP1f9WV-Mp9SGm4q88h82xxBnwqg8M7JJhnqGOHCWf65xg@mail.gmail.com>
	<CAB+qUq7=o05GgCNdTtH=cuW56qbjg5v0ZpxvCYmCPj1AvFui+g@mail.gmail.com>
	<CANEZrP0fjzuUKh0Jmk9c99ne81hdxZdTnhw6sq47Na7AC4n04A@mail.gmail.com>
Message-ID: <CAC1+kJNTpHpG5EpRKj21PEy3z2iAouuH6Yiix8m20uji3b6Lgg@mail.gmail.com>

On 4/24/14, Mike Hearn <mike at plan99.net> wrote:
>>
>> This scheme would discourage people from attempting a Finney attack
>> because they would end up worse off if they did.
>>
> Phrased another way, it simply makes every block a Finney attack that
> charges the maximum double spending fee possible. This doesn't solve the
> problem.

This solves regular double-spends, not Finney attacks, but finney
attacks (which are not really the easiest attacks in the world) don't
get any worse.

On 4/24/14, Chris Pacia <ctpacia at gmail.com> wrote:
> It would work but it's an ugly hack IMO. What do people do if they don't
> have extra to pay when making a purchase? I have 200 mbtc and want to buy a
> 200 mbtc phone but I can't because I need 400 mbtc. Sucks for me.
>
> I would much prefer the hassle of a green address notary than always having
> to make sure I have double what I need to make a purchase.

This scheme wouldn't be mandatory. You can still wait for
confirmations or rely somehow on existing trust instead if that's
better for you on that situation.

> Beyond needing to double balances, what if the shop is selling me a phone
> on contract? So the actual cost of the phone is lower than the real price
> on the assumption of future revenue. Alice double spends (aka steals) the
> phone, paying double the artifically lower cost but still making a good
> saving. Bob does not end up with "nothing", he ends up in the red.

Sybil attacks aside, Alice can't save anything, period. If she tries
she will end up losing it all.
I don't see how signing a longer term contract protects her in any way.

> But there's a much simpler way to dispose with this idea. Jorge, go down to
> your local bars and cafes, and ask them if they'd be willing to accept a
> form of payment that allows anyone to steal from them by simply paying
> double the purchase price to some other random guy. They *will* look at you
> as if you're crazy. Why would they ever do that?

They would do that to avoid having to wait for a confirmation or two
(I think one is good enough for most small purchases) when being paid
by people they don't trust just before they leave.
Maybe they prefer to just make people wait if they think that will
make them pay up-front.
This is completely optional and only an improvement on the current situation.

Of course if we're not comparing this with Bitcoin today and we're
comparing it to some theoretical mechanism for instant p2p
serialization without requiring proof of work then, yes, this concept
is not very interesting.



From aritter at gmail.com  Thu Apr 24 14:52:14 2014
From: aritter at gmail.com (Adam Ritter)
Date: Thu, 24 Apr 2014 16:52:14 +0200
Subject: [Bitcoin-development] Fwd: Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CAKuKjyWDniyP503XSw8=tK9XQW-T58j+VD6ajXCxz=HihN93mQ@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAAS2fgTJpFQKeVTQsAeqe0UK-2XhrLZG4oocEHM11_spWLtrEA@mail.gmail.com>
	<CANEZrP0fUhiFeH4A1Y9sLCORpggJs3dxHz+exgpKaLQe9rgFeA@mail.gmail.com>
	<CAAS2fgR1dRFVqhTNn55dZ6FS5zDM0aHs4ROPSD37hWwzLUKfCg@mail.gmail.com>
	<CANEZrP2t09bzmDkkWK3V2GpqEt54KhFnUQ8_u9ULMqniMaOA8Q@mail.gmail.com>
	<CAKuKjyV+FQs1goNK1uWXVg7ky4aGiROcTZ5idM3Ug2-+5bTc2w@mail.gmail.com>
	<CAAS2fgRWfcxYaLRY69=LE_+sDfYLNUTcimw4cE-2Byw7QonC=w@mail.gmail.com>
	<CAKuKjyWDniyP503XSw8=tK9XQW-T58j+VD6ajXCxz=HihN93mQ@mail.gmail.com>
Message-ID: <CAKuKjyVxQGezxo-2-063oMavQhi6cTOPwPacmLGkSJQ488UA2w@mail.gmail.com>

I wouldn't mind having $5 of my money held at
Apple/Google/VISA/Mastercard/BitPay (and I wouldn't be sad of losing $5 if
any of these companies go bankrupt).
Actually I had in mind creating a centralized version of Bitcoin for
ultra-fast payments. With keeping all addresses on SSDs, asking for 1 cent
/ address month, 1 cent / transaction should be possible to reach even with
6x replication. Companies could compete in price as long as the API is
standardized. Automatic top-up should be simple as well.


On Wed, Apr 23, 2014 at 10:53 PM, Gregory Maxwell <gmaxwell at gmail.com>wrote:

> On Wed, Apr 23, 2014 at 1:44 PM, Adam Ritter <aritter at gmail.com> wrote:
> > Isn't a faster blockchain for transactions (maybe as a sidechain) solving
> > the problem? If there would be a safe way for 0-confirmation
> transactions,
> > the Bitcoin blockchain wouldn't even be needed.
>
> Large scale consensus can't generally provide instantly irreversible
> transactions directly: Increasing the block speed can't help past the
> point where the time starts getting close to the network diameter...
> you simply can't tell what a consensus of a group of nodes is until
> several times the light cone that includes all of them.  And if you
> start getting close to the limit you dilute the power working on the
> consensus and potentially make life easier for a large attacker.
>
> Maybe other chains with different parameters could achieve a different
> tradeoff which was better suited to low value retail transactions
> (e.g. where you want a soft confirmation fast). A choice of tradeoffs
> could be very useful, and maybe you can practically get close enough
> (e.g. would knowing you lost a zero-conf double spend within 30
> seconds 90% of the time be good enough?)... but I'm not aware of any
> silver bullet there which gives you something identical to what a
> centralized service can give you without invoking at least a little
> bit of centralization.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/7ace8643/attachment.html>

From pete at petertodd.org  Thu Apr 24 15:03:37 2014
From: pete at petertodd.org (Peter Todd)
Date: Thu, 24 Apr 2014 11:03:37 -0400
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CANOOu=8XLdS-v-xULrv8Y5XukapCafTLDGa0M0q_W1speb2Ykg@mail.gmail.com>
References: <CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAE28kUSLXG0y350gMiwnv0CoOHUorMgLup9TG77Mjj+BJcuowA@mail.gmail.com>
	<CANEZrP0j0KoLUB+SE+W3fL8vTKay0niqoeQ38RKnU9cyGgvvYw@mail.gmail.com>
	<CAAS2fgQV0=QfCWhwVh6-mw=eg9MDd1E21P_7rFAnGp0P43c1Fw@mail.gmail.com>
	<CANEZrP3vT6Q72X6PrcDQ8_fDeF90WmV4-M045Ac=kJY+PhuAdg@mail.gmail.com>
	<CAAS2fgQFx7-0vZ2AR3RnLORZZCqjBFHyUBqj688Jrz8OuMYPKA@mail.gmail.com>
	<CANEZrP18=Y5EBcfR-sHumVvU3-yqYr1tuhr_J4ieG817HOpE=g@mail.gmail.com>
	<20140424134441.GE16884@savin>
	<CANEZrP0Qmmrs5dzQ8N6FGL1K3W0A0XWBqtkPTFOgU_rXDvc+sQ@mail.gmail.com>
	<CANOOu=8XLdS-v-xULrv8Y5XukapCafTLDGa0M0q_W1speb2Ykg@mail.gmail.com>
Message-ID: <20140424150337.GA24314@savin>

On Thu, Apr 24, 2014 at 10:47:35AM -0400, Christophe Biocca wrote:
> Actually Peter, coinbase confiscations are a much worse mechanism for
> enforcement of widespread censorship rules than simple orphaning. They
> lose their power when the transaction miners are punished for can
> build up over time without losing their usefulness:
<snip>
> Of course, in such a dystopian future, orphaning would be the
> enforcement mechanism. It would be stupid to rely on coinbase
> reallocation/burning to do this task when the existing tools work so
> much better.

I don't disagree with you at an end stage, but the thing with coinbase
blacklists/confiscation is because it's a voting mechanism the initial
stages of enforcing widespread censorship rules with it are much easier.
For instance, if a 10% pool that has been forced/wants to blacklist
certain transactions can do so, and then vote to blacklist blocks that
do not abide by that blacklist. Casting that vote does them no harm.
Every time another pool joins the blacklist, there's no harm to them to
doing so.  At some point they will reach a majority, which causes the
blacklist to actually apply. The whole process happens smoothly, letting
the blacklist be applied safely and easily.  With orphaning/reorging on
the other hand you just can't be sure that the other miners will
actually adopt it, making adoption risky.

Of course, that's above and beyond the fact that you can't prove a
Finney attack happened to a third-party, making it easy to attack
smaller miners with Sybil attacks, get them creating blocks with
double-spends in them, and using that as an excuse to punish them.

> What's interesting is that this mechanism is especially tailored to
> blocking time sensitive transactions (that need to be confirmed
> now/soon, or are worthless), such that their total out-of-band fees
> can't build up over time. Double spending is one such category. I'm at
> a loss to come up with something else, but maybe someone has a good
> example?

Decentralized markets are a great example: the bids and orders they
depend on are time-senstive and become much less valuable if they get
delayed greatly.

-- 
'peter'[:-1]@petertodd.org
0000000000000000091ae589c034bc0466e2feca51dc018bb2c3303e8ab8648b
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/5f1845c6/attachment.sig>

From sergiolerner at certimix.com  Thu Apr 24 15:13:40 2014
From: sergiolerner at certimix.com (Sergio Lerner)
Date: Thu, 24 Apr 2014 12:13:40 -0300
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CANEZrP0pJgjCzEZg19-Xnf20PD7FCRqF8=jQ_VBrznq=w_vQGQ@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAAS2fgTJpFQKeVTQsAeqe0UK-2XhrLZG4oocEHM11_spWLtrEA@mail.gmail.com>
	<CANEZrP0fUhiFeH4A1Y9sLCORpggJs3dxHz+exgpKaLQe9rgFeA@mail.gmail.com>
	<CAAS2fgR1dRFVqhTNn55dZ6FS5zDM0aHs4ROPSD37hWwzLUKfCg@mail.gmail.com>
	<CANEZrP2t09bzmDkkWK3V2GpqEt54KhFnUQ8_u9ULMqniMaOA8Q@mail.gmail.com>
	<CAKuKjyV+FQs1goNK1uWXVg7ky4aGiROcTZ5idM3Ug2-+5bTc2w@mail.gmail.com>
	<CANEZrP0pJgjCzEZg19-Xnf20PD7FCRqF8=jQ_VBrznq=w_vQGQ@mail.gmail.com>
Message-ID: <53592A24.5000007@certimix.com>


On 23/04/2014 05:51 p.m., Mike Hearn wrote:
> On Wed, Apr 23, 2014 at 10:44 PM, Adam Ritter <aritter at gmail.com
> <mailto:aritter at gmail.com>> wrote:
>
>     Isn't a faster blockchain for transactions (maybe as a sidechain)
>     solving the problem? If there would be a safe way for
>     0-confirmation transactions, the Bitcoin blockchain wouldn't even
>     be needed.
>
>
> The 10 minute average comes from a desire to balance wasted work due
> to natural chain splits with latency. With a very fast block interval
> you end up with lots of forks and things take longer to converge,
> also, it can make attacks easier because an attacker is building on
> his own blocks so he doesn't suffer propagation delays and the
> attendant splits.
>
> It's not clear you can just make a faster block chain. 10 minutes is
> somewhat arbitrary, it could be 5 minutes and the system would still
> work, but it probably can't be 5 seconds.
5 seconds block interval is possible. I've simulate it with great
success and I encourage anyone to repeat or check my simulations.

There are a very few protocol modifications that are required to allow 5
seconds block, and most of them have already been discussed in the forums.
For more information you can check my post:
http://bitslog.wordpress.com/2014/02/17/5-sec-block-interval/
Also NimbleCoin is a new alt-coin that uses 5-sec block intervals,
allows 100 tps and .... it's based on BitcoinJ (NimbleCoinJ now). So not
only it is possible, but it was coded by Mike itself.
Important note: the 5-sec block interval method probably requires a
block reward forever. It doesn't work well if there is no block reward
at all.

>
> Unfortunately for best physical-world usability you really need very
> fast payments. A few seconds is competitive with modern credit cards.
Another solution to achieve <5 secs block intervals is this:
http://bitslog.wordpress.com/2014/03/20/mincen-a-new-protocol-to-achieve-instant-payments/

So the problem with 0-confirmations is solely of Bitcoin and other
alt-coins, new alt-coins may achieve instant transactions and no not
have to rely on 0-confirmations.

Best regards,
 Sergio.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/516c9e13/attachment.html>

From mike at plan99.net  Thu Apr 24 15:34:39 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 24 Apr 2014 17:34:39 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <53592A24.5000007@certimix.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAAS2fgTS65b0mfJakEA5s3xJHuWU2BDW8MbEVgMFMNz8YAmEiA@mail.gmail.com>
	<CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAAS2fgTJpFQKeVTQsAeqe0UK-2XhrLZG4oocEHM11_spWLtrEA@mail.gmail.com>
	<CANEZrP0fUhiFeH4A1Y9sLCORpggJs3dxHz+exgpKaLQe9rgFeA@mail.gmail.com>
	<CAAS2fgR1dRFVqhTNn55dZ6FS5zDM0aHs4ROPSD37hWwzLUKfCg@mail.gmail.com>
	<CANEZrP2t09bzmDkkWK3V2GpqEt54KhFnUQ8_u9ULMqniMaOA8Q@mail.gmail.com>
	<CAKuKjyV+FQs1goNK1uWXVg7ky4aGiROcTZ5idM3Ug2-+5bTc2w@mail.gmail.com>
	<CANEZrP0pJgjCzEZg19-Xnf20PD7FCRqF8=jQ_VBrznq=w_vQGQ@mail.gmail.com>
	<53592A24.5000007@certimix.com>
Message-ID: <CANEZrP0buAhUTxy1ieiZ2XAMuh52ZN3tntGrQNq=Lx=4vmECMQ@mail.gmail.com>

Thanks Sergio!

On Thu, Apr 24, 2014 at 5:13 PM, Sergio Lerner <sergiolerner at certimix.com>wrote:

> For more information you can check my post:
> http://bitslog.wordpress.com/2014/02/17/5-sec-block-interval/
> Also NimbleCoin is a new alt-coin that uses 5-sec block intervals, allows
> 100 tps and .... it's based on BitcoinJ (NimbleCoinJ now). So not only it
> is possible, but it was coded by Mike itself.
>

Fascinating! I think that's the first time I heard of an alt coin entirely
based on bitcoinj as its core implementation. Looking forward to your
release.

My understanding is that dogecoin suffers somewhat from having so many
headers. SPV clients have to download them all in sequence so the more
blocks you have, the more data they must download and thus the slower they
sync. Sync times for SPV wallets today are fast enough that unless you
spend six months in the jungle with your phone switched off, you probably
won't notice. With 5 second block times unless there's some other solution
you'd have much worse UX.

BTW, Pieter experimented with relaying blocks as hash lists (actually
merkleblocks) and I believe he found that it could often fail and be slower
if the mempools were not quite synced. At any rate, it was apparently more
complicated than it looked. That may be a side effect of trying to reuse
the Bloom filtering code however.


> Another solution to achieve <5 secs block intervals is this:
> http://bitslog.wordpress.com/2014/03/20/mincen-a-new-protocol-to-achieve-instant-payments/
>

MinCen looks like a rather interesting idea. I will read the paper.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/fb39a1e7/attachment.html>

From jtimon at monetize.io  Thu Apr 24 15:37:22 2014
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Thu, 24 Apr 2014 17:37:22 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>
	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>
	<CAC1+kJNE+k4kcTj3Ap0-A=PdD1=+-k5hN4431Z99A+S7M3=BoQ@mail.gmail.com>
	<CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>
	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>
	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>
Message-ID: <CAC1+kJOO1DyfWTex5OgsWx2ypsbBzz+r==-2JRDvRFymA0Ww1w@mail.gmail.com>

On 4/24/14, Mike Hearn <mike at plan99.net> wrote:
> You can't disentangle the two. Proof of work just makes a block chain hard
> to tamper with. What it contains is arbitrary. Honest miners build a block
> chain that's intended to stop double spending. Dishonest miners don't.
> They're both engaging in proof of work, to different ends.

Yes, you can disentangle replace-by-fee policies from "rewriting
history" attacks.
That's exactly what I'm saying.
Proof of work is the most important thing that makes the blockchain
hard to tamper with.

>> Whatever, let's keep calling stupid miners "honest miners"
>>
>
> No, let's not. Your definition of "smart miner" is one I'd called "stupid
> miner" (or possibly "short bitcoin miner"). They are miners who would
> reduce the value of their coins, by making their own system less useful.
> That's not smart, that's simply short termism taken to an extreme, sort of
> like a business owner who puts so much pressure on his employees they all
> quit. He might have gained a bit more profit in the short term, but only at
> the cost of destroying his business that would have given lower but
> sustainable returns over the long term.

Whatever, pick the terms yourself but let's just stick to the same ones, please.
I've read this argument before, but I simply don't buy it because I
disagree with the premise that replace-by-fee reduces the value of the
coins (not to mention we shouldn't assume miners stock coins for
long).
I think replace-by-fee policies are actually an improvement over
first-saw-first-included policies.

>> This persistent argument from authority is annoying.
>>
>
> Peter always says this too, but it's again an incorrect position. This is
> not an argument from authority.

I don't know about other occasions with other people but what you just
used with me was an argument from authority fallacy. Now you're using
a false analogy to try to convince us you didn't.

If I was saying "we should change the maximum from 21 M to 100 M
because mining subsidies could continue for longer".
"Mining subsidies aren't necessarily a good thing" or
"That's no justification for a hardfork" or
"That could destroy people's confidence in the currency"
would be logical arguments.

"No, because Satoshi picked 21 M" would be an argument from authority fallacy.

>> That's not what I'm saying. Miners that don't mine on top of the
>> longest chain are dishonest by my own definition as well.
>>
>
> Right, but I don't accept this definition of honesty. That's not a
> definition any man on the street would use:

Whatever let's use whatever definitions you want, if I don't like your
definition of honesty I will just invent a new term to define my own.

>     "If you pay for something with forged bank notes and walk out
> immediately, you are honest. But if you pay for something with forged bank
> notes and hang around for longer than 10 minutes, you are dishonest"

Sorry, I don't see the analogy.

> That would sound silly to anyone because what's so special about 10
> minutes? It's the act of passing counterfeit money and stealing from the
> merchant that's the dishonest act, how long it takes is irrelevant.

10 minutes is what Satoshi picked. Just kidding...

> In Bitcoin, the dishonest act by the user is signing for the same output
> twice (ignoring special protocols here), and the dishonest act by the miner
> is deviating from normal behaviour for a fee to try and trick the recipient
> into believing they have been paid. The exact details are something
> computer scientists care about, but the average Bitcoin user would not.

People need to understand that Bitcoin transactions are not instant.
For instants transactions you need to rely somehow on trust, use some
trust-less offchain mechanism or use a payment protocol that would
make double-spending irrational (like the one described in the other
thread that uses replace-by-fee).
So I think miner's default behavior should be replace-by-fee. But that
doesn't imply that I want miners to rewrite pow-validated history.



From mike at plan99.net  Thu Apr 24 15:45:36 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 24 Apr 2014 17:45:36 +0200
Subject: [Bitcoin-development] 0 confirmation txs using replace-by-fee
 and game theory
In-Reply-To: <CAC1+kJNTpHpG5EpRKj21PEy3z2iAouuH6Yiix8m20uji3b6Lgg@mail.gmail.com>
References: <CAC1+kJM3pSq8YfwbX167rQ0=0Y_hozRQ3pggDN524=LUfOdTqg@mail.gmail.com>
	<CANEZrP1f9WV-Mp9SGm4q88h82xxBnwqg8M7JJhnqGOHCWf65xg@mail.gmail.com>
	<CAB+qUq7=o05GgCNdTtH=cuW56qbjg5v0ZpxvCYmCPj1AvFui+g@mail.gmail.com>
	<CANEZrP0fjzuUKh0Jmk9c99ne81hdxZdTnhw6sq47Na7AC4n04A@mail.gmail.com>
	<CAC1+kJNTpHpG5EpRKj21PEy3z2iAouuH6Yiix8m20uji3b6Lgg@mail.gmail.com>
Message-ID: <CANEZrP2Bhq5+ECNoEgupsq3_0RfmDG+6KOxvffsOgqaRn9=_LA@mail.gmail.com>

>
> Of course if we're not comparing this with Bitcoin today and we're
> comparing it to some theoretical mechanism for instant p2p
> serialization without requiring proof of work then, yes, this concept
> is not very interesting.
>

Bitcoin's competition is not some theoretical perfect p2p system but
rather, bank notes and credit cards.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/05f0277e/attachment.html>

From christophe.biocca at gmail.com  Thu Apr 24 16:05:55 2014
From: christophe.biocca at gmail.com (Christophe Biocca)
Date: Thu, 24 Apr 2014 12:05:55 -0400
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <20140424150337.GA24314@savin>
References: <CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAE28kUSLXG0y350gMiwnv0CoOHUorMgLup9TG77Mjj+BJcuowA@mail.gmail.com>
	<CANEZrP0j0KoLUB+SE+W3fL8vTKay0niqoeQ38RKnU9cyGgvvYw@mail.gmail.com>
	<CAAS2fgQV0=QfCWhwVh6-mw=eg9MDd1E21P_7rFAnGp0P43c1Fw@mail.gmail.com>
	<CANEZrP3vT6Q72X6PrcDQ8_fDeF90WmV4-M045Ac=kJY+PhuAdg@mail.gmail.com>
	<CAAS2fgQFx7-0vZ2AR3RnLORZZCqjBFHyUBqj688Jrz8OuMYPKA@mail.gmail.com>
	<CANEZrP18=Y5EBcfR-sHumVvU3-yqYr1tuhr_J4ieG817HOpE=g@mail.gmail.com>
	<20140424134441.GE16884@savin>
	<CANEZrP0Qmmrs5dzQ8N6FGL1K3W0A0XWBqtkPTFOgU_rXDvc+sQ@mail.gmail.com>
	<CANOOu=8XLdS-v-xULrv8Y5XukapCafTLDGa0M0q_W1speb2Ykg@mail.gmail.com>
	<20140424150337.GA24314@savin>
Message-ID: <CANOOu=9WuDgqVBL-gikSamZK54D2GVkjAAf10y1ok=idR_X6xg@mail.gmail.com>

> Casting that vote does them no harm.
> Every time another pool joins the blacklist, there's no harm to them to doing so.

I actually agree that this is a problem, but that's actually not
inherent in the proposed enforcement mechanism (just the current
voting rules).

Here's an alternate:

- To start a vote, you set aside a part of your coinbase with amount X
<= their entire coinbase amount.
- Then you need 51 blocks with a "yes" vote before the coinbase
maturity of the target for the vote to be considered a success.
- Success means target coinbase has X coins reallocated/burned.
- Failure means vote-initiating coinbase has X coins reallocated/burned.

The incentives for voting miners are to vote yes if and only if they
dislike the targeted miner more than the initiator (all other monetary
effects are identical). That isn't a bulletproof way to force miners
to only punish double spenders (rather than anything they dislike in
general), but it removes the risk free nature of trying to take away
another miner's coinbase.

It means that you'll need a high level of confidence other miners are
on your side before taking a risk, but, because you've got a much
longer time frame than 10 minutes, you can get manual confirmation
from other miners.

On Thu, Apr 24, 2014 at 11:03 AM, Peter Todd <pete at petertodd.org> wrote:
> On Thu, Apr 24, 2014 at 10:47:35AM -0400, Christophe Biocca wrote:
>> Actually Peter, coinbase confiscations are a much worse mechanism for
>> enforcement of widespread censorship rules than simple orphaning. They
>> lose their power when the transaction miners are punished for can
>> build up over time without losing their usefulness:
> <snip>
>> Of course, in such a dystopian future, orphaning would be the
>> enforcement mechanism. It would be stupid to rely on coinbase
>> reallocation/burning to do this task when the existing tools work so
>> much better.
>
> I don't disagree with you at an end stage, but the thing with coinbase
> blacklists/confiscation is because it's a voting mechanism the initial
> stages of enforcing widespread censorship rules with it are much easier.
> For instance, if a 10% pool that has been forced/wants to blacklist
> certain transactions can do so, and then vote to blacklist blocks that
> do not abide by that blacklist. Casting that vote does them no harm.
> Every time another pool joins the blacklist, there's no harm to them to
> doing so.  At some point they will reach a majority, which causes the
> blacklist to actually apply. The whole process happens smoothly, letting
> the blacklist be applied safely and easily.  With orphaning/reorging on
> the other hand you just can't be sure that the other miners will
> actually adopt it, making adoption risky.
>
> Of course, that's above and beyond the fact that you can't prove a
> Finney attack happened to a third-party, making it easy to attack
> smaller miners with Sybil attacks, get them creating blocks with
> double-spends in them, and using that as an excuse to punish them.
>
>> What's interesting is that this mechanism is especially tailored to
>> blocking time sensitive transactions (that need to be confirmed
>> now/soon, or are worthless), such that their total out-of-band fees
>> can't build up over time. Double spending is one such category. I'm at
>> a loss to come up with something else, but maybe someone has a good
>> example?
>
> Decentralized markets are a great example: the bids and orders they
> depend on are time-senstive and become much less valuable if they get
> delayed greatly.
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000091ae589c034bc0466e2feca51dc018bb2c3303e8ab8648b



From mike at plan99.net  Thu Apr 24 16:14:41 2014
From: mike at plan99.net (Mike Hearn)
Date: Thu, 24 Apr 2014 18:14:41 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <20140424150337.GA24314@savin>
References: <CANEZrP15DDdfT+o5jVKMO=tGTvHYx53yzhXfaVyzq7imfwJsZQ@mail.gmail.com>
	<CAE28kUSLXG0y350gMiwnv0CoOHUorMgLup9TG77Mjj+BJcuowA@mail.gmail.com>
	<CANEZrP0j0KoLUB+SE+W3fL8vTKay0niqoeQ38RKnU9cyGgvvYw@mail.gmail.com>
	<CAAS2fgQV0=QfCWhwVh6-mw=eg9MDd1E21P_7rFAnGp0P43c1Fw@mail.gmail.com>
	<CANEZrP3vT6Q72X6PrcDQ8_fDeF90WmV4-M045Ac=kJY+PhuAdg@mail.gmail.com>
	<CAAS2fgQFx7-0vZ2AR3RnLORZZCqjBFHyUBqj688Jrz8OuMYPKA@mail.gmail.com>
	<CANEZrP18=Y5EBcfR-sHumVvU3-yqYr1tuhr_J4ieG817HOpE=g@mail.gmail.com>
	<20140424134441.GE16884@savin>
	<CANEZrP0Qmmrs5dzQ8N6FGL1K3W0A0XWBqtkPTFOgU_rXDvc+sQ@mail.gmail.com>
	<CANOOu=8XLdS-v-xULrv8Y5XukapCafTLDGa0M0q_W1speb2Ykg@mail.gmail.com>
	<20140424150337.GA24314@savin>
Message-ID: <CANEZrP2Y4nC_a51zn0S1t5nRTHKU-ZstS7O3umOSXKYQAJSVHQ@mail.gmail.com>

>
> Casting that vote does them no harm.
> Every time another pool joins the blacklist, there's no harm to them to
> doing so.  At some point they will reach a majority


These statements do not follow from each other.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/4db223f2/attachment.html>

From justusranvier at gmail.com  Thu Apr 24 17:07:34 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Thu, 24 Apr 2014 17:07:34 +0000
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CAC1+kJOO1DyfWTex5OgsWx2ypsbBzz+r==-2JRDvRFymA0Ww1w@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>	<CAC1+kJNE+k4kcTj3Ap0-A=PdD1=+-k5hN4431Z99A+S7M3=BoQ@mail.gmail.com>	<CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>
	<CAC1+kJOO1DyfWTex5OgsWx2ypsbBzz+r==-2JRDvRFymA0Ww1w@mail.gmail.com>
Message-ID: <535944D6.2000801@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 04/24/2014 03:37 PM, Jorge Tim?n wrote:


The 21 million bitcoin limit is not important because of its exact
value, nor is it important because Satoshi picked it.

The 21 million limit is important because users hold bitcoin based on
the promise that the block reward will never be adjusted ex post
facto. The behavior users are relying on is "The bitcoins you hold are
forever a calculable fraction of all the bitcoins that will ever be
issued."

That's what bitcoin holders agreed to, and that's what can never be
changed.

The fact that the number is arbitrary is not relevant. We can agree to
meet for lunch at some arbitrarily chosen time, and the fact that the
time was chosen arbitrary in no way means that one party arbitrarily
choosing not to show up doesn't break the agreement.

- -- 
Support online privacy by using email encryption whenever possible.
Learn how here: http://www.youtube.com/watch?v=bakOKJFtB-k
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTWUTWAAoJECoisBQbQ4v0JiwIALQtf4GrNaIdEidJr+f3z8G3
smDgU5xXhN4+1Eo5xU/ZmQy03tU5E00/PRiMTHz1RNXeO+w/iu4PlAJN7pk5oy75
QzDtaCzDjKMCN+1PCQ5VNCL04ws8JifU6QLxSgXgsShBnv19FlxiejgvjNWg+Lzc
uHxyP0PlvfF5BWTiEV68KYcfQPbamOH7Vb8v4tQ4/j/ioA7mYso+Q0jX0Y4ae1FN
XNs4KnTsIFTsXWzBIYFlFPwQ5d+mdG84W7FpmwwcXaRWQxMwdJq8QjlUuFng439B
6OgQqtq4wmvwoPjKS5nOesfdrdH9Scx2zg6uwhaY0zKMtPW/CEzzLFUfq+cZ6q0=
=r+t0
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x1B438BF4.asc
Type: application/pgp-keys
Size: 21191 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/6283c3e0/attachment.bin>

From s9jafroe at stud.uni-saarland.de  Thu Apr 24 17:13:08 2014
From: s9jafroe at stud.uni-saarland.de (Jannis Froese)
Date: Thu, 24 Apr 2014 19:13:08 +0200
Subject: [Bitcoin-development] 0 confirmation txs using replace-by-fee
 and game theory
In-Reply-To: <CANEZrP0fjzuUKh0Jmk9c99ne81hdxZdTnhw6sq47Na7AC4n04A@mail.gmail.com>
References: <CAC1+kJM3pSq8YfwbX167rQ0=0Y_hozRQ3pggDN524=LUfOdTqg@mail.gmail.com>	<CANEZrP1f9WV-Mp9SGm4q88h82xxBnwqg8M7JJhnqGOHCWf65xg@mail.gmail.com>	<CAB+qUq7=o05GgCNdTtH=cuW56qbjg5v0ZpxvCYmCPj1AvFui+g@mail.gmail.com>
	<CANEZrP0fjzuUKh0Jmk9c99ne81hdxZdTnhw6sq47Na7AC4n04A@mail.gmail.com>
Message-ID: <53594624.70807@stud.uni-saarland.de>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 24.04.2014 14:15, Mike Hearn wrote:
> Beyond needing to double balances, what if the shop is selling me a
> phone on contract? So the actual cost of the phone is lower than
> the real price on the assumption of future revenue. Alice double
> spends (aka steals) the phone, paying double the artifically lower
> cost but still making a good saving. Bob does not end up with
> "nothing", he ends up in the red.

Nearly every payment system in existence has this problem: you have to
be able to enforce the contract out-of-band. The scenario you describe
is no worse than a payment network with instant, secure confirmations
because Alice could just as well refuse to make the second payment.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (MingW32)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQIcBAEBAgAGBQJTWUYdAAoJEBrvn3PsoRcmT28QAJNbxjLRPYvkIfizeHoAFRH2
pNfd9458/AECJ6muGAs+tYeDw9uhYMVPnbMLZOwzgPl8HE5NN9XbGjCpwpNzsEK4
a8zb5CsonBh+xBNgbx1CIjCNYYQLd2qmgxMVaH4R7VWS+DgVBjfKq5MnM0vdSNcw
SSzb9dMEjgl1cOZa07CG4GuPwEUIFiCVygjYSrGP2E8qCepKvH+0webIXk7COqZK
SyhTdhS+dsdgGW5Mm8cA8zIVPaWYXMo88kOq2S4fIs5HiWtnVXQ9ljJ4r2Py1SEO
H3u4lMWc7Hu0PUW6b6K+uDQfyJtRNi0diJSswseA37v6BeQW4zYMNfL40AsnG+Fv
MusJFtBqHzXKhAeE/zpwi5QWs/qHvRYlETifIMKMrQldssDJo15ed/M8wNCZRobv
Q7K3XKOt228nUUP2FrZl1I4wGWwkBMpzP89t8HMrTZYV2EFWqE+lu9oXcEjz9k12
64UXiWXU0jRAhMiCAvQUL7fKaOb9TXfGPy+3+bZOAtKM5M582+0d94EObA67SBsm
O4H5vLTwS041x1cndW0NDxDbtM+IAuu2Jorzqzcie3ld7cqsKAyDbSk3i1C7zQzG
hvI6FxIy0n6GA9ciw8RM44Q4zPVxYQ4e/MMby9ko7otmL5HLlOCnOUmJ/JHn+QJG
Z7MDRkKAslLUUEqzgQWb
=HNO6
-----END PGP SIGNATURE-----



From will.yager at gmail.com  Thu Apr 24 19:39:52 2014
From: will.yager at gmail.com (William Yager)
Date: Thu, 24 Apr 2014 14:39:52 -0500
Subject: [Bitcoin-development] [RFC] Proposal: Base58 encoded HD Wallet
 root key with optional encryption
In-Reply-To: <CAG8oi1NDfoDBT_DmcBVhc0tMMhO55oDcrQBbGmqh9OfgsnG4Lg@mail.gmail.com>
References: <CAG8oi1NDfoDBT_DmcBVhc0tMMhO55oDcrQBbGmqh9OfgsnG4Lg@mail.gmail.com>
Message-ID: <CAG8oi1NRq-=+8oRx00B0XvhUatnXqNZukCGs4NatLgZMw4RK1Q@mail.gmail.com>

Gmaxwell pointed out that we could safely front-load all the key
pre-stretching. The spec has been updated to take advantage of this.

The user's password is now protected by 10,000 rounds of salted
PBKDF2-HMAC-SHA512, as well as the main KDF (which ranges from scrypt
2^14/8/8 to scrypt 2^18/16/16 and PBKDF2-HMAC-SHA512 2^16 to 2^21).

Will

On Mon, Apr 21, 2014 at 7:05 PM, William Yager <will.yager at gmail.com> wrote:

>
> The idea is that more powerful devices (mobile phones, laptops, etc.) can
> do all the key-stretching on their own, whereas weaker devices with access
> to another device with more computing power (like Trezors) do a fair amount
> of key-stretching on their own, but can safely export the rest of the
> key-stretching to the other device.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140424/22603d98/attachment.html>

From stephenreed at yahoo.com  Thu Apr 24 23:32:15 2014
From: stephenreed at yahoo.com (Stephen Reed)
Date: Thu, 24 Apr 2014 16:32:15 -0700 (PDT)
Subject: [Bitcoin-development] Proof-of-Stake branch?
Message-ID: <1398382335.20219.YahooMailNeo@web160503.mail.bf1.yahoo.com>

Hello all.

I understand that Proof-of-Stake as a replacement for Proof-of-Work is a prohibited yet disputed change to Bitcoin Core. I would like to create a Bitcoin branch that provides a sandboxed testbed for researching the best PoS implementations. In the years to come, perhaps circumstances might arise, such as shifting of user opinion as to whether PoS should be moved from the prohibited list to the hard-fork list.
-----

A poll I conducted today on bitcointalk,?https://bitcointalk.org/index.php?topic=581635.0?with an attention-grabbing title suggests some minority support for Bitcoin Proof-of-Stake. I invite any of you to critically comment on that thread.

"Annual 10% bitcoin dividends can be ours if  Proof-of-Stake full nodes outnumber existing Proof-of-Work full nodes by three-to-one. What is your choice?"

"I do not care or do not know enough." - 5 (16.1%)?
"I would download and run the existing Proof-of-Work program to fight the change." - 14 (45.2%)?
"I would download and run the new Proof-of-Stake program to favor the change. " - 12 (38.7%)?
Total Voters: 31 
-----

Before I branch the source code and learn the proper way of doing things in this community, I ask you simply if creating the branch is harmful? My goal is to develop, test and document PoS, while exploring its vulnerabilities and fixing them in a transparent fashion.

Thanks for taking a bit of your time to read this message.

-Steve

Stephen L. Reed

Austin, Texas, USA
512.791.7860?



From odinn.cyberguerrilla at riseup.net  Fri Apr 25 01:56:27 2014
From: odinn.cyberguerrilla at riseup.net (Odinn Cyberguerrilla)
Date: Thu, 24 Apr 2014 18:56:27 -0700
Subject: [Bitcoin-development] Translators Needed for Bitcoin Core
In-Reply-To: <CAEz79PqWawZjD+w0CO7XmJay+tuaa2pKabUJieGatxcxekOXMg@mail.gmail.com>
References: <CAEz79PqWawZjD+w0CO7XmJay+tuaa2pKabUJieGatxcxekOXMg@mail.gmail.com>
Message-ID: <248cf7b76c6d2da935745a30f7818c17.squirrel@fruiteater.riseup.net>

Thanks for this reminder, I will bring this up with some others who I
think may be able to help in this area and dedicate some time.  I may be
able to free up some time with a little language work as well.

> You do not need to be a developer to help in the improvement of Bitcoin.
>
> http://sourceforge.net/p/bitcoin/mailman/message/32255092/
> Bitcoin Core 0.9.2 feature freeze is May 13th, 2014.  Now is the time for
> native non-English speakers to join Transifex to clean up the translations
> in all languages.  This is important for more than just Bitcoin because
> Litecoin will use these same translations.
>
> *What should volunteer translators do?*
> https://bitcointalk.org/index.php?topic=571414
> Try the nightly builds of Bitcoin Core as it heads toward 0.9.2.  Not
> recommended for your production wallet.
>
> https://www.transifex.com/projects/p/bitcoin/
> Join Transifex as a translator and add your account to your language.
>
> https://groups.google.com/forum/#!forum/bitcoin-translators
> Join the Translator mailing list to receive announcements when
> translations
> are needed for Bitcoin.  You will also receive notifications if other
> Bitcoin Project things in Transifex need translations (likely
> bitcoin.org).
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform_______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>





From gacrux at gmail.com  Fri Apr 25 04:31:05 2014
From: gacrux at gmail.com (Gareth Williams)
Date: Fri, 25 Apr 2014 14:31:05 +1000
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>	<CAC1+kJNE+k4kcTj3Ap0-A=PdD1=+-k5hN4431Z99A+S7M3=BoQ@mail.gmail.com>	<CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>
	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>
Message-ID: <5359E509.4080907@gmail.com>

On 25/04/14 00:28, Mike Hearn wrote:
> Why are we here? We are here because we were brought together by shared
> goals.
> 
> What are those goals? They were defined at the start of the project by
> the creator of the project.
> 
> Why do we issue 21 million coins and not 42? Because 21 million is the
> goal everyone signed up for.

Mike: the blockchain is a public document, with a very public and well
defined interpretation, which we've all signed up for too.

What's the point of piling PoW on top of some data to make it difficult
to modify if the interpretation itself is open to modification?

There is an important distinction to draw between a hard fork via a
change in block validation rules, and a hard fork via a change in the
/interpretation of the blockchain itself/.

Bitcoin validates data /before/ it makes it into a block; we can all be
confident that, short of a reorg, /if it's in a block, it's the law/. As
much as the 21m cap is the law anyway.

Proving that you can convince the economic majority that the
interpretation of existing blocks is in any way up for grabs would set a
dangerous precedent, and shake some people's faith in Bitcoin's overall
robustness and security (well, mine anyway.)

My 2 bits.

-Gareth

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/864fe1bb/attachment.sig>

From gacrux at gmail.com  Fri Apr 25 04:51:23 2014
From: gacrux at gmail.com (Gareth Williams)
Date: Fri, 25 Apr 2014 14:51:23 +1000
Subject: [Bitcoin-development] 0 confirmation txs using replace-by-fee
 and game theory
In-Reply-To: <CAB+qUq7=o05GgCNdTtH=cuW56qbjg5v0ZpxvCYmCPj1AvFui+g@mail.gmail.com>
References: <CAC1+kJM3pSq8YfwbX167rQ0=0Y_hozRQ3pggDN524=LUfOdTqg@mail.gmail.com>	<CANEZrP1f9WV-Mp9SGm4q88h82xxBnwqg8M7JJhnqGOHCWf65xg@mail.gmail.com>
	<CAB+qUq7=o05GgCNdTtH=cuW56qbjg5v0ZpxvCYmCPj1AvFui+g@mail.gmail.com>
Message-ID: <5359E9CB.9050703@gmail.com>

On 24/04/14 22:07, Chris Pacia wrote:
> It would work but it's an ugly hack IMO. What do people do if they don't
> have extra to pay when making a purchase? I have 200 mbtc and want to
> buy a 200 mbtc phone but I can't because I need 400 mbtc. Sucks for me.

I don't see why it couldn't work with just 200mBTC.
* you sign a 200mBTC TX to me, walk out of my shop with the phone
* you immediately sign & broadcast a double-spend TX with higher fee
* my POS computer (or BitPay's) sees the double spend, immediately
spends the initial TX to fees, and sounds the shoplifting alarm.

You don't get any money back, but you do get an angry shopkeeper chasing
you down the street / calling the police / blacklisting you from the
store. Assuming my POS computer's behaviour was completely automated and
widespread - and therefore predictable on your part - why would you ever
try this?

The number of people irrational enough to try this /knowing it never
works/ is likely to be way lower than the number who just stuff the
phone in their pocket and shoplift the old fashioned way. So I'd be
comfortable without the extra 200mBTC collateral :-)





-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/6303edf4/attachment.sig>

From sergiolerner at certimix.com  Fri Apr 25 04:52:44 2014
From: sergiolerner at certimix.com (Sergio Lerner)
Date: Fri, 25 Apr 2014 01:52:44 -0300
Subject: [Bitcoin-development] =?windows-1252?q?SmartSPV_=96_A_better_Simp?=
 =?windows-1252?q?lified_Payment_Verification_for_Smartphones?=
Message-ID: <5359EA1C.6050404@certimix.com>

In a previous e-mail Mike Hearn asked me how I was going to handle 17K
block headers a day in my NimbleCoin currency in a the SPV mode.
I designed a variation of the standard headers-only SPV mode I called
SmartSPV. This mode could also be implemented by BitcoinJ for Bitcoin.

The method is explained here:
http://bitslog.wordpress.com/2014/04/25/smartspv-a-better-simplified-payment-verification-for-smartphones/

But I copy the whole blog post in this e-mail so you don't need to click
on it.


    SmartSPV ? A better Simplified Payment Verification for Smartphones

NimbleCoin <http://NimbleCoin.com> is a new cryptocurrency I?ll be
hopefully launching soon. One of its nice features is that it uses the
FastBlock5
<http://bitslog.wordpress.com/2014/02/17/5-sec-block-interval/> protocol
(a 5 seconds block interval) to achieve near instant payments. Because
NimbleCoin also implements merged mining
<http://bitslog.wordpress.com/2014/02/20/safe-merged-mining/>, each
block header can be as large as 700 bytes (including Merkle branch and
coinbase transaction). Yesterday Mike Hearn asked my a difficult
question: how would NimbleCoin SPV nodes (such as the ones running on
smartphones) process tons of headers if the bandwidth is limited or the
clients are disconnected from the Internet for long periods?

The answer is Smart-SPV, a variation of the standard SPV headers-only
<https://en.bitcoin.it/wiki/Thin_Client_Security> mode that allows a
smartphone to keep a fairly accurate state of the wallet balance without
downloading all the missing headers and without sacrificing battery life
and time.

Headers-only SPV clients
<http://bitcoin.stackexchange.com/questions/11054/understanding-spv-simple-payment-verification>
downloads a complete copy of the headers for all blocks in the entire
blockchain but not all the transactions. In order to update the user
wallet, SPV clients ask their peers to filter those blocks that contains
transactions that the SPV is interested in, such as those that have
payments to their own bitcoin addresses. This is done using bloom
filters <https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki>.

In Smart-SPV mode, when a client is missing block headers two things
happen simultaneously:

1. The client starts downloading block headers from the last one solved
backwards.

2. The client starts downloading the blocks headers from the first
missing header, forward.

While the client catches up with all the missing blocks, the wallet
balance may not be fully reliable. Nevertheless if a new payment is
received and confirmed, or a new payment is made, the wallet will
increased the balance and show it. This is what the user expects.

*How it works*

A live block is a block which is the last block of the block-chain and
it?s received on time (it has a time-stamp near the current time). Each
time a live block is received, it is flagged as LIVE and this flag is
stored permanently with the block.  A live transaction is a transaction
that is included in a live block. When a live transaction is confirmed
by 6 blocks flagged as LIVE the transaction is considered mature. A
mature transaction may be included in a block that is still orphan. All
mature transactions are scanned and used to compute the balance of the
wallet. Also all transactions that are included in blocks rooted at the
last checkpoint and finishing in the last live block are also considered
mature (this is the standard condition). Since the wallet always
modifies the balance according to mature transactions, an payment is
received and acknowledged even if the branch where it is included is
still orphaned. If the SPV client clock is correctly synchronized, the
Smart-SPV protocol does not pose any additional security risk different
from the known SPV limitations.






-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/952ccb87/attachment.html>

From gmaxwell at gmail.com  Fri Apr 25 04:59:39 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Thu, 24 Apr 2014 21:59:39 -0700
Subject: [Bitcoin-development]
	=?utf-8?q?SmartSPV_=E2=80=93_A_better_Simpl?=
	=?utf-8?q?ified_Payment_Verification_for_Smartphones?=
In-Reply-To: <5359EA1C.6050404@certimix.com>
References: <5359EA1C.6050404@certimix.com>
Message-ID: <CAAS2fgQCX5jgHa43s2uAKWK2uPH_nH=AZu+ksJYm48mpQT9vCg@mail.gmail.com>

On Thu, Apr 24, 2014 at 9:52 PM, Sergio Lerner
<sergiolerner at certimix.com> wrote:
> In a previous e-mail Mike Hearn asked me how I was going to handle 17K block
> headers a day in my NimbleCoin currency in a the SPV mode.
> I designed a variation of the standard headers-only SPV mode I called
> SmartSPV. This mode could also be implemented by BitcoinJ for Bitcoin.

If you are freely specifying things, and you control the headers than
you can can already make SPV evaluations of work have log(n) scaling.

See: https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg04318.html


(wrt headers in reverse, perhaps you might also want to mine
https://en.bitcoin.it/wiki/User:Gmaxwell/Reverse_header-fetching_sync
for ideas).



From hozer at hozed.org  Fri Apr 25 07:33:34 2014
From: hozer at hozed.org (Troy Benjegerdes)
Date: Fri, 25 Apr 2014 02:33:34 -0500
Subject: [Bitcoin-development] Proof-of-Stake branch?
In-Reply-To: <1398382335.20219.YahooMailNeo@web160503.mail.bf1.yahoo.com>
References: <1398382335.20219.YahooMailNeo@web160503.mail.bf1.yahoo.com>
Message-ID: <20140425073334.GV3180@nl.grid.coop>

Do it. Someone will scream harm. The loudest voices screaming how it would
be harmful are doing the most harm.

The only way to know is build it, and test it. If the network breaks, then
it is better we find out sooner rather than later.

My only suggestion is call it 'bitstake' or something to clearly differentiate
it from Bitcoin. This also might be an interesting application of the side
chains concept Peter Todd has discussed.

On Thu, Apr 24, 2014 at 04:32:15PM -0700, Stephen Reed wrote:
> Hello all.
> 
> I understand that Proof-of-Stake as a replacement for Proof-of-Work is a prohibited yet disputed change to Bitcoin Core. I would like to create a Bitcoin branch that provides a sandboxed testbed for researching the best PoS implementations. In the years to come, perhaps circumstances might arise, such as shifting of user opinion as to whether PoS should be moved from the prohibited list to the hard-fork list.
> -----
> 
> A poll I conducted today on bitcointalk,?https://bitcointalk.org/index.php?topic=581635.0?with an attention-grabbing title suggests some minority support for Bitcoin Proof-of-Stake. I invite any of you to critically comment on that thread.
> 
> "Annual 10% bitcoin dividends can be ours if  Proof-of-Stake full nodes outnumber existing Proof-of-Work full nodes by three-to-one. What is your choice?"
> 
> "I do not care or do not know enough." - 5 (16.1%)?
> "I would download and run the existing Proof-of-Work program to fight the change." - 14 (45.2%)?
> "I would download and run the new Proof-of-Stake program to favor the change. " - 12 (38.7%)?
> Total Voters: 31 
> -----
> 
> Before I branch the source code and learn the proper way of doing things in this community, I ask you simply if creating the branch is harmful? My goal is to develop, test and document PoS, while exploring its vulnerabilities and fixing them in a transparent fashion.
> 
> Thanks for taking a bit of your time to read this message.




-- 
----------------------------------------------------------------------------
Troy Benjegerdes                 'da hozer'                  hozer at hozed.org
7 elements      earth::water::air::fire::mind::spirit::soul        grid.coop

      Never pick a fight with someone who buys ink by the barrel,
         nor try buy a hacker who makes money by the megahash




From mike at plan99.net  Fri Apr 25 10:17:34 2014
From: mike at plan99.net (Mike Hearn)
Date: Fri, 25 Apr 2014 12:17:34 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <5359E509.4080907@gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>
	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>
	<CAC1+kJNE+k4kcTj3Ap0-A=PdD1=+-k5hN4431Z99A+S7M3=BoQ@mail.gmail.com>
	<CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>
	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>
	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>
	<5359E509.4080907@gmail.com>
Message-ID: <CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>

>
> Proving that you can convince the economic majority that the
>
interpretation of existing blocks is in any way up for grabs would set a
> dangerous precedent, and shake some people's faith in Bitcoin's overall
> robustness and security (well, mine anyway.)


Hmm, then I think your faith needs to be shaken. Bitcoin  is money, and
money is a purely artificial social construct. The interpretation of what a
bitcoin means, or what a dollar means, has always been and always will be a
human decision taken in order to achieve some socially useful goal. How
could it be any other way? Do you want humanity to be enslaved by its own
money?

This notion that the block chain encodes some kind of natural, immovable
law that's above human judgement is a very strange one to me - I guess it
comes from the fact that encryption *is* based on some kind of natural law.
Without the key you can't decrypt a message no matter how strong the
consensus is. But Bitcoin doesn't use encryption anywhere, just digital
signatures. The only thing approaching natural law, that stops majority
consensus controlling everything, is lack of information. Hence all the
discussion around privacy and anonymity that goes on all the time.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/49fa90a7/attachment.html>

From mike at plan99.net  Fri Apr 25 10:19:12 2014
From: mike at plan99.net (Mike Hearn)
Date: Fri, 25 Apr 2014 12:19:12 +0200
Subject: [Bitcoin-development] 0 confirmation txs using replace-by-fee
 and game theory
In-Reply-To: <5359E9CB.9050703@gmail.com>
References: <CAC1+kJM3pSq8YfwbX167rQ0=0Y_hozRQ3pggDN524=LUfOdTqg@mail.gmail.com>
	<CANEZrP1f9WV-Mp9SGm4q88h82xxBnwqg8M7JJhnqGOHCWf65xg@mail.gmail.com>
	<CAB+qUq7=o05GgCNdTtH=cuW56qbjg5v0ZpxvCYmCPj1AvFui+g@mail.gmail.com>
	<5359E9CB.9050703@gmail.com>
Message-ID: <CANEZrP2FJ8m-kKeLiEZw-hb9teeVXay0FqzsJ0wJTtbNABetpA@mail.gmail.com>

>
> You don't get any money back, but you do get an angry shopkeeper chasing
> you down the street / calling the police / blacklisting you from the
> store.
>

If they could do that they'd just take the stolen property back and you
would have failed to spend your money twice. So this is by definition, not
a successful double spend. We are worried about the cases when you could
successfully double spend, and the only thing stopping you is Bitcoin.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/0678d3da/attachment.html>

From andreas at schildbach.de  Fri Apr 25 10:23:05 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Fri, 25 Apr 2014 12:23:05 +0200
Subject: [Bitcoin-development] BIP32 "wallet structure" in use? Remove it?
Message-ID: <ljdd29$522$1@ger.gmane.org>

Does anyone use or plan to use the "wallet structure" part of the BIP32
document?

I suggest removing it from the document and maybe instead point at
BIP43. That new specification proposal just defines a "purpose" and
leaves everything else to the inventor of that purpose. The idea it that
over time a standard will evolve naturally rather than top-down.

https://github.com/bitcoin/bips/blob/master/bip-0043.mediawiki

I'd volunteer to submit a pull request if I can see some level of
consent here.




From stephenreed at yahoo.com  Fri Apr 25 10:35:00 2014
From: stephenreed at yahoo.com (Stephen Reed)
Date: Fri, 25 Apr 2014 03:35:00 -0700 (PDT)
Subject: [Bitcoin-development] Proof-of-Stake branch?
In-Reply-To: <D95AE4AB-DC67-4136-901A-D8F712EB7357@acidhou.se>
References: <1398382335.20219.YahooMailNeo@web160503.mail.bf1.yahoo.com>
	<20140425073334.GV3180@nl.grid.coop>
	<D95AE4AB-DC67-4136-901A-D8F712EB7357@acidhou.se>
Message-ID: <1398422100.68438.YahooMailNeo@web160505.mail.bf1.yahoo.com>

My understanding is that sidechains require merged mining support and that sidechains create no coinbase transactions themselves. When Bitcoin Core supports the two-way peg then I would update my source code branch to incorporate that or any other change that is released. Ideally, when sidechains can work with PoW Bitcoin, then those same sidechains should work without any changes with PoS Bitcoin running in my testnet.

I will be examining PPC, NXT and whitepapers for ideas that I can implement in such a way as the result can be called Bitcoin. The only difference would be the absence of wasteful Proof-of-Work, and the presence of mining rewards distributed to full nodes in proportion to the amount of bitcoin each is willing to expose to the network. Coin age is a good starting point. A reference peer-to-peer pool developed by me would be responsible for fairly distributing the mining rewards as daily dividend payments to PoS full node pool members.

In a few days, I plan to establish a Proof-of-Stake Bitcoin project thread in the Project Development sub-forum of Bitcointalk. We can continue the technical discussion there, starting with a list of principles.


Stephen L. Reed 
Austin, Texas, USA 
512.791.7860

On Friday, April 25, 2014 4:42 AM, Jeffrey Paul <sneak at acidhou.se> wrote:

Are proof of stake blockchains compatible with the sidechain/two-way peg system invented by Greg (and maybe others - reports unclear)?
>
>http://letstalkbitcoin.com/blockchain-2-0-let-a-thousand-chains-blossom/
>
>It's my limited understanding that any sidechains in such a model are somewhat cryptographically tied to the PoW system that bitcoin's chain uses. I am seriously curious if alternate decentralized consensus algorithms (proof of execution, proof of stake, et c) are compatible with the sidechain universe as envisioned. 
>
>Perhaps someone with a deeper technical understanding could explain how, if so, or if my incomplete hunch (that alternate consensus algorithms cannot retain compatibility with Bitcoin in a two way peg model) is correct.
>
>These sorts of "alternate universe" altcoin experiments with different proof models take on a different cost/benefit ratio if they can't ever interoperate as sidechains, which is why I'm curious. 
>
>Best,
>-jp
>
>-- 
>Jeffrey Paul???+1 (312) 361-0355
>5539 AD00 DE4C 42F3 AFE1 1575 0524 43F4 DF2A 55C2
>
>
>> On 25.04.2014, at 00:33, Troy Benjegerdes <hozer at hozed.org> wrote:
>> 
>> This also might be an interesting application of the side
>> chains concept Peter Todd has discussed.
>
>? 



From gacrux at gmail.com  Fri Apr 25 13:19:58 2014
From: gacrux at gmail.com (Gareth Williams)
Date: Fri, 25 Apr 2014 23:19:58 +1000
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>	<CAC1+kJNE+k4kcTj3Ap0-A=PdD1=+-k5hN4431Z99A+S7M3=BoQ@mail.gmail.com>	<CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>	<5359E509.4080907@gmail.com>
	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>
Message-ID: <535A60FE.10209@gmail.com>


On 25/04/14 20:17, Mike Hearn wrote:
>     Proving that you can convince the economic majority that the
> 
>     interpretation of existing blocks is in any way up for grabs would set a
>     dangerous precedent, and shake some people's faith in Bitcoin's overall
>     robustness and security (well, mine anyway.)
> 
> 
> Hmm, then I think your faith needs to be shaken. Bitcoin  is money, and
> money is a purely artificial social construct. The interpretation of
> what a bitcoin means, or what a dollar means, has always been and always
> will be a human decision taken in order to achieve some socially useful
> goal. 

My argument does not concern what a bitcoin means, just what data in the
blockchain means. People are free to value an individual bitcoin however
they like. But it's useful if we all agree on a standard that defines
who owns them - ie. the protocol as described in Satoshi's whitepaper. I
recognise that your ability to provide a valid scriptSig for /any
existing UTXO in the blockchain/ as proof of your ownership of the
corresponding bitcoin. You want to pick and choose which UTXO (well,
coinbase; same diff) you consider valid and spendable /after they've
become part of the blockchain/, regardless of the fact they're buried
under PoW.

As an illustration, consider Counterparty - an altcoin whose TXns are
embedded as unvalidated data in the bitcoin blockchain. A lot of people
imagine that an XCP transaction buried under 100 blocks and a BTC
transaction buried under the same 100 blocks are equally secure. You
tell me: are they? It's the same PoW chain after all.

Hell no they're not! The way Counterparty interprets that data in the
blockchain is anything but stable or well documented. On more than one
occasion they've gone "whoops, found a bug that caused some transactions
to occur that we don't consider valid - we'll just fix that." A suddenly
the reference client doesn't consider the XCP in your wallet valid
anymore - they just magically disappear - because the parent of the TXn
that paid you was actually invalid. Nobody rewrote history via PoW; they
simply tweaked their interpretation of the existing history.

When you have a *bitcoin* TXn buried under 100 blocks you can be damn
sure that money is yours - but only because the rules for interpreting
data in the blockchain are publicly documented and (hopefully)
immutable. If they're mutable then the PoW alone gives me no confidence
that the money is really mine, and we're left with a much less useful
system. This should be more sacred than the 21m limit.






-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/e6f0b788/attachment.sig>

From gacrux at gmail.com  Fri Apr 25 13:38:06 2014
From: gacrux at gmail.com (Gareth Williams)
Date: Fri, 25 Apr 2014 23:38:06 +1000
Subject: [Bitcoin-development] 0 confirmation txs using replace-by-fee
 and game theory
In-Reply-To: <CANEZrP2FJ8m-kKeLiEZw-hb9teeVXay0FqzsJ0wJTtbNABetpA@mail.gmail.com>
References: <CAC1+kJM3pSq8YfwbX167rQ0=0Y_hozRQ3pggDN524=LUfOdTqg@mail.gmail.com>	<CANEZrP1f9WV-Mp9SGm4q88h82xxBnwqg8M7JJhnqGOHCWf65xg@mail.gmail.com>	<CAB+qUq7=o05GgCNdTtH=cuW56qbjg5v0ZpxvCYmCPj1AvFui+g@mail.gmail.com>	<5359E9CB.9050703@gmail.com>
	<CANEZrP2FJ8m-kKeLiEZw-hb9teeVXay0FqzsJ0wJTtbNABetpA@mail.gmail.com>
Message-ID: <535A653E.1060902@gmail.com>


On 25/04/14 20:19, Mike Hearn wrote:
>     You don't get any money back, but you do get an angry shopkeeper chasing
>     you down the street / calling the police / blacklisting you from the
>     store.
> 
> 
> If they could do that they'd just take the stolen property back and you
> would have failed to spend your money twice. So this is by definition,
> not a successful double spend. We are worried about the cases when you
> could successfully double spend, and the only thing stopping you is Bitcoin.

You might not succeed in catching them, but however small the risk of
getting caught is, they're taking that risk for an assured zero gain.
Any rational attacker would therefore not bother.

I think it's a very elegant solution to the typical "broadcast double
spend" attack. Of course it unfortunately does nothing to stop a
dishonest mining pool from secretly working on your double spend for a
fee. But that breaks down to:
* trade first and hope the dishonest pool finds the next block
* the dishonest pool finds and withholds the block while you trade

We can discount the second one entirely - the orphan risk makes it very
expensive to execute, and people are typically accepting zero-conf for
low value items like cups of coffee. For high value items it is probably
reasonable (and hopefully common practice?) to wait for a block.

So we're left with the first situation. As others have noted, given a
dishonest pool with 5% total hashrate, a dedicated attack is out (unless
you want to end up actually buying goods to 20x the value of the attack
in the process.)

That leaves the opportunists, who press the "attempt to take-back 70% of
this transaction" (remember the pool gets their cut) every time they buy
a coffee and very occasionally get lucky. They're the only unsolvable
problem I can see here. It remains to be seen how many such opportunists
we'll end up with, or how much hashrate the dishonest pool can actually
attract.


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/4eec67b2/attachment.sig>

From jim618 at fastmail.co.uk  Fri Apr 25 14:53:27 2014
From: jim618 at fastmail.co.uk (Jim)
Date: Fri, 25 Apr 2014 15:53:27 +0100
Subject: [Bitcoin-development] BIP32 "wallet structure" in use? Remove
	it?
In-Reply-To: <ljdd29$522$1@ger.gmane.org>
References: <ljdd29$522$1@ger.gmane.org>
Message-ID: <1398437607.23028.110362141.03111A2A@webmail.messagingengine.com>

Oh dear.

For reasons that are perfectly reasonable we are close to losing any chance of intra-client HD compatibility for BIP32 wallets.

In the next 12 months there will probably be collectively millions of users of our new wallets. I don't want them to suffer from vendor lockin.

Can we not agree on a lowest common denominator that we agree to support ?
An "HD Basic" if you like. 
For entry level users we can keep things simple and any "HD Basic" bitcoin will be fully interoperable.

Sure, if you use anything fancy you'll be locked in to a particular wallet but a lot of users just want somewhere safe to put their bitcoin, spend it and receive it.

I appreciate standising everything is very difficult (if not impossible) but if we don't have a minimum of interoperability I think we'll do our users a disservice.






On Fri, Apr 25, 2014, at 11:23 AM, Andreas Schildbach wrote:
> Does anyone use or plan to use the "wallet structure" part of the BIP32
> document?
> 
> I suggest removing it from the document and maybe instead point at
> BIP43. That new specification proposal just defines a "purpose" and
> leaves everything else to the inventor of that purpose. The idea it that
> over time a standard will evolve naturally rather than top-down.
> 
> https://github.com/bitcoin/bips/blob/master/bip-0043.mediawiki
> 
> I'd volunteer to submit a pull request if I can see some level of
> consent here.
> 
> 
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development


-- 
http://bitcoin-solutions.co.uk



From mike at plan99.net  Fri Apr 25 15:28:15 2014
From: mike at plan99.net (Mike Hearn)
Date: Fri, 25 Apr 2014 17:28:15 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <535A60FE.10209@gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>
	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>
	<CAC1+kJNE+k4kcTj3Ap0-A=PdD1=+-k5hN4431Z99A+S7M3=BoQ@mail.gmail.com>
	<CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>
	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>
	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>
	<5359E509.4080907@gmail.com>
	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>
	<535A60FE.10209@gmail.com>
Message-ID: <CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>

>
> When you have a *bitcoin* TXn buried under 100 blocks you can be damn
>
sure that money is yours - but only because the rules for interpreting
> data in the blockchain are publicly documented and (hopefully)
> immutable. If they're mutable then the PoW alone gives me no confidence
> that the money is really mine, and we're left with a much less useful
> system. This should be more sacred than the 21m limit.


Well, I think we should avoid the term "sacred" - nothing is sacred because
we're not building a religion here, we're engineering a tool.

Consider a world in which 1 satoshi is too valuable to represent some kinds
of transactions, so those transactions stop happening even though we all
agree they're useful. The obvious solution is to change the rules so there
can be 210 million coins and 10x everyones UTXOs at some pre-agreed flag
day. We probably wouldn't phrase it like that, it's easier for people to
imagine what's happening if it's phrased as "adding more places after the
decimal point" or something, but at the protocol level coins are
represented using integers, so it'd have to be implemented as a multiply.

Would this be a violation of the social contract? A violation of all that
is sacred? I don't think so, it'd just be sensible engineering and there'd
be strong consensus for that exactly because 21 million *is* so arbitrary.
If all balances and prices multiply 100-fold overnight, no wealth is
reallocated which would be the *actual* violation of the social
contract: we just get more resolution for setting prices.

So. The thing that protects your money from confiscation is not proof of
work. PoW is just a database synchronisation mechanism. The thing that
protects your money from confiscation is a strong group consensus that
theft is bad. But that's a social rule, not a mathematical rule.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/4c07030d/attachment.html>

From gmaxwell at gmail.com  Fri Apr 25 15:46:15 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Fri, 25 Apr 2014 08:46:15 -0700
Subject: [Bitcoin-development] BIP32 "wallet structure" in use? Remove
	it?
In-Reply-To: <1398437607.23028.110362141.03111A2A@webmail.messagingengine.com>
References: <ljdd29$522$1@ger.gmane.org>
	<1398437607.23028.110362141.03111A2A@webmail.messagingengine.com>
Message-ID: <CAAS2fgRiXdOBN2gVZ0Xh4kBeOKiS80AjD5+VxJEut9nWt-0WUg@mail.gmail.com>

On Fri, Apr 25, 2014 at 7:53 AM, Jim <jim618 at fastmail.co.uk> wrote:
> Oh dear.
>
> For reasons that are perfectly reasonable we are close to losing any chance of intra-client HD compatibility for BIP32 wallets.
>
> In the next 12 months there will probably be collectively millions of users of our new wallets. I don't want them to suffer from vendor lockin.
>
> Can we not agree on a lowest common denominator that we agree to support ?
> An "HD Basic" if you like.
> For entry level users we can keep things simple and any "HD Basic" bitcoin will be fully interoperable.
>
> Sure, if you use anything fancy you'll be locked in to a particular wallet but a lot of users just want somewhere safe to put their bitcoin, spend it and receive it.
>
> I appreciate standising everything is very difficult (if not impossible) but if we don't have a minimum of interoperability I think we'll do our users a disservice.

I don't believe that wallet interoperability at this level is possible
in general except as an explicit compatibility feature. I also don't
believe that it is a huge loss that it is so.

The structure of the derivation defines and constrains functionality.
You cannot be structure compatible unless you have the same features
and behavior with respect to key management.  To that extent that
wallets have the same features, I agree its better if they are
compatible? but unless they are dead software they likely won't keep
the same features for long.

Even if their key management were compatible there are many other
things that go into making a wallet portable between systems; the
handling of private keys is just one part:  a complete wallet will
have other (again, functionality specific) metadata.

I agree that it would be it would be possible to support a
compatibility mode where a wallet has just a subset of features which
works when loaded into different systems, but I'm somewhat doubtful
that it would be widely used. The decision to use that mode comes at
the wrong time? when you start, not when you need the features you
chose to disable or when you want to switch programs. But the obvious
thing to do there is to just specify that a linear chain with no
further branching is that mode: then that will be the same mode you
use when someone gives you a master public key and asks you to use it
for reoccurring changes? so at least the software will get used.

Compatibility for something like a recovery tool is another matter,
and BIP32 probably defines enough there that with a bit of extra data
about how the real wallet worked that recovery can be successful.

Calling it "vendor lock in" sounds overblown to me.  If someone wants
to change wallets they can transfer the funds? manual handling of
private keys is seldom advisable, and as is they're going to lose
their metadata in any case.  No one expects to switch banks and to
keep their account records at the new bank. And while less than
perfect, the price of heavily constraining functionality in order to
get another result is just too high.



From mike at plan99.net  Fri Apr 25 15:49:32 2014
From: mike at plan99.net (Mike Hearn)
Date: Fri, 25 Apr 2014 17:49:32 +0200
Subject: [Bitcoin-development] BIP32 "wallet structure" in use? Remove
	it?
In-Reply-To: <CAAS2fgRiXdOBN2gVZ0Xh4kBeOKiS80AjD5+VxJEut9nWt-0WUg@mail.gmail.com>
References: <ljdd29$522$1@ger.gmane.org>
	<1398437607.23028.110362141.03111A2A@webmail.messagingengine.com>
	<CAAS2fgRiXdOBN2gVZ0Xh4kBeOKiS80AjD5+VxJEut9nWt-0WUg@mail.gmail.com>
Message-ID: <CANEZrP0+SBMpjnQwbspZ_A6ZA8GepwW9G98AZU2jfWHuGCtEHg@mail.gmail.com>

I generally agree, but I wonder how popular cloning wallets between devices
will be in future. Right now if someone wants to have a wallet shared
between Hive, blockchain.info and Bitcoin Wallet for Android, we just tell
them they're out of luck and they need to pick one, or split their funds up
manually.

But probably a lot of people would like to use different UI's to access the
same wallets. Sharing key trees is a part of that, though full blown wallet
metadata sync would also be needed.

So I guess we're going to end up with some kind of fairly complex
compatibility matrix. But I agree it may be unavoidable.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/4458e5ba/attachment.html>

From tier.nolan at gmail.com  Fri Apr 25 18:49:35 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Fri, 25 Apr 2014 19:49:35 +0100
Subject: [Bitcoin-development] BIP - Selector Script
Message-ID: <CAE-z3OXe4fG2S274qcgpGsXA=ZhhJQneEDqLYvNWZT8U9y_NLA@mail.gmail.com>

This is a BIP to allow the spender to choose one of multiple standard
scripts to use for spending the output.

https://github.com/TierNolan/bips/blob/bip4x/bip-0045.mediawiki

This is required as part of the atomic cross chain transfer protocol.  It
is required so that outputs can be retrieved, if the process ends before
being committed.

https://bitcointalk.org/index.php?topic=193281.msg2224949#msg2224949

The script allows multiple standard scripts to be included in the
scriptPubKey.

When redeeming the script the spender indicates which of the standard
scripts to use.

Only one standard script is actually executed, so the only cost is the
extra storage required.

A more ambitious change would be a soft fork like P2SH, except the spender
is allowed to select from multiple hashes.  Effectively, it would be
"Multi-P2SH".

This gets much of the benefits of MAST, but it requires a formal soft fork
to implement.

If there is agreement, I can code up the reference implementation as a PR.
The multi-P2SH might actually be easier.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/a77e346c/attachment.html>

From tier.nolan at gmail.com  Fri Apr 25 18:49:37 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Fri, 25 Apr 2014 19:49:37 +0100
Subject: [Bitcoin-development] BIP - Hash Locked Transaction
Message-ID: <CAE-z3OVsQAya3RDzMTvKNK4hLGQVjFOp6Bseo=xK4ApOdPCh8g@mail.gmail.com>

As part of the atomic cross chain system, outputs need to be hash locked.

https://github.com/TierNolan/bips/blob/bip4x/bip-0045.mediawiki

https://bitcointalk.org/index.php?topic=193281.msg2224949#msg2224949

A user needs to provide x corresponding to hash(x) in order to spend an
output.

Under the protocol, one of the participants is required to provide the
secret number in order to spend an output.  Once they do that, the other
participant can use the secret number to spend an output on the other
chain.  This provides a mechanism to link the 2 chains together (in
addition to lock times).  Once the first output is spent, that commits the
transfer.

This is half of the scripting operations required to implement the protocol.

The proposal is to make this an adder on to the other standard
transactions.  It does a check that the hash matches, and then runs the
standard transaction as normal.

Adding the prefix to a P2SH transactions wouldn't work, since the template
wouldn't match.

A script of this form could be embedded into a P2SH output.

I think that is ok, since embedding the "password" in the hashed script
gets all the benefits.

If there is agreement, I can code up the reference implementation as a PR.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/f6e19f03/attachment.html>

From luke at dashjr.org  Fri Apr 25 19:17:48 2014
From: luke at dashjr.org (Luke-Jr)
Date: Fri, 25 Apr 2014 19:17:48 +0000
Subject: [Bitcoin-development] BIP - Selector Script
In-Reply-To: <CAE-z3OXe4fG2S274qcgpGsXA=ZhhJQneEDqLYvNWZT8U9y_NLA@mail.gmail.com>
References: <CAE-z3OXe4fG2S274qcgpGsXA=ZhhJQneEDqLYvNWZT8U9y_NLA@mail.gmail.com>
Message-ID: <201404251917.49826.luke@dashjr.org>

I believe you meant to link here instead?
    https://github.com/TierNolan/bips/blob/bip4x/bip-0046.mediawiki

This looks reasonable from a brief skim over, but does not define any use 
cases (it mentions "necessary for atomic cross chain transfers", but does not 
explain how it is useful for that - perhaps that belongs in another BIP you 
haven't written yet, though). IMO, it should also require P2SH.

Luke


On Friday, April 25, 2014 6:49:35 PM Tier Nolan wrote:
> This is a BIP to allow the spender to choose one of multiple standard
> scripts to use for spending the output.
> 
> https://github.com/TierNolan/bips/blob/bip4x/bip-0045.mediawiki
> 
> This is required as part of the atomic cross chain transfer protocol.  It
> is required so that outputs can be retrieved, if the process ends before
> being committed.
> 
> https://bitcointalk.org/index.php?topic=193281.msg2224949#msg2224949
> 
> The script allows multiple standard scripts to be included in the
> scriptPubKey.
> 
> When redeeming the script the spender indicates which of the standard
> scripts to use.
> 
> Only one standard script is actually executed, so the only cost is the
> extra storage required.
> 
> A more ambitious change would be a soft fork like P2SH, except the spender
> is allowed to select from multiple hashes.  Effectively, it would be
> "Multi-P2SH".
> 
> This gets much of the benefits of MAST, but it requires a formal soft fork
> to implement.
> 
> If there is agreement, I can code up the reference implementation as a PR.
> The multi-P2SH might actually be easier.



From luke at dashjr.org  Fri Apr 25 19:18:43 2014
From: luke at dashjr.org (Luke-Jr)
Date: Fri, 25 Apr 2014 19:18:43 +0000
Subject: [Bitcoin-development] BIP - Hash Locked Transaction
In-Reply-To: <CAE-z3OVsQAya3RDzMTvKNK4hLGQVjFOp6Bseo=xK4ApOdPCh8g@mail.gmail.com>
References: <CAE-z3OVsQAya3RDzMTvKNK4hLGQVjFOp6Bseo=xK4ApOdPCh8g@mail.gmail.com>
Message-ID: <201404251918.44282.luke@dashjr.org>

This one looks entirely useless (it cannot be made secure), and the assertion 
that it is necessary for atomic cross-chain transfers seems unfounded and 
probably wrong...

Luke

On Friday, April 25, 2014 6:49:37 PM Tier Nolan wrote:
> As part of the atomic cross chain system, outputs need to be hash locked.
> 
> https://github.com/TierNolan/bips/blob/bip4x/bip-0045.mediawiki
> 
> https://bitcointalk.org/index.php?topic=193281.msg2224949#msg2224949
> 
> A user needs to provide x corresponding to hash(x) in order to spend an
> output.
> 
> Under the protocol, one of the participants is required to provide the
> secret number in order to spend an output.  Once they do that, the other
> participant can use the secret number to spend an output on the other
> chain.  This provides a mechanism to link the 2 chains together (in
> addition to lock times).  Once the first output is spent, that commits the
> transfer.
> 
> This is half of the scripting operations required to implement the
> protocol.
> 
> The proposal is to make this an adder on to the other standard
> transactions.  It does a check that the hash matches, and then runs the
> standard transaction as normal.
> 
> Adding the prefix to a P2SH transactions wouldn't work, since the template
> wouldn't match.
> 
> A script of this form could be embedded into a P2SH output.
> 
> I think that is ok, since embedding the "password" in the hashed script
> gets all the benefits.
> 
> If there is agreement, I can code up the reference implementation as a PR.



From tier.nolan at gmail.com  Fri Apr 25 19:37:53 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Fri, 25 Apr 2014 20:37:53 +0100
Subject: [Bitcoin-development] BIP - Hash Locked Transaction
In-Reply-To: <201404251918.44282.luke@dashjr.org>
References: <CAE-z3OVsQAya3RDzMTvKNK4hLGQVjFOp6Bseo=xK4ApOdPCh8g@mail.gmail.com>
	<201404251918.44282.luke@dashjr.org>
Message-ID: <CAE-z3OVo9wPbSwfHrpf8bSGWYBR510Q0np6VFfQUZdX3hWoQtA@mail.gmail.com>

On Fri, Apr 25, 2014 at 8:18 PM, Luke-Jr <luke at dashjr.org> wrote:

> This one looks entirely useless (it cannot be made secure)


The hash locking isn't to prevent someone else stealing your coin.  Once a
user broadcasts a transaction with x in it, then everyone has access to x.

It is to release the coin on the other chain.  If you spend the output, you
automatically give the other participant the password to take your coin on
the other chain (completing the trade).

The BIP allows the hash to protect any of other standard transactions
(except P2SH, since that is a template match).

For example, it would allow a script of the form

OP_HASH160 [20-byte-password-hash] OP_EQUAL_VERIFY OP_DUP OP_HASH160
<pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG


To spend it, you would need to provide the password and also sign the
transaction using the private key.



> and the assertion
> that it is necessary for atomic cross-chain transfers seems unfounded and
> probably wrong...
>
>
I meant that it is required for the particular protocol.



> Luke
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/fb4be86e/attachment.html>

From jrn at jrn.me.uk  Fri Apr 25 19:54:05 2014
From: jrn at jrn.me.uk (J Ross Nicoll)
Date: Fri, 25 Apr 2014 20:54:05 +0100
Subject: [Bitcoin-development] Error handling in payment protocol (BIP-0070
	and BIP-0072)
Message-ID: <535ABD5D.7070509@jrn.me.uk>

Dear Gavin, all,

Going over the payment protocol specifications, I've noticed that
there's appears to be a lack of specificity on handling of error states.
In most cases there are reasonably obvious solutions, however it would
seem positive to formalise processes to ensure consistency. I'm
wondering therefore if either you'd be willing to edit the existing BIP,
or advise on whether this is useful to write up as a new BIP?

The main area of concern is handling unexpected problems while sending
the Payment message, or receiving the corresponding PaymentACK message.
For example, in case of a transport layer failure or non-200 HTTP status
code while sending the Payment message, what should the wallet software
do next? Is it safe to re-send the Payment message? I'd propose that for
any transport failure or 500 status code, the client retries after a
delay (suggested at 30-60 seconds). For 400 status codes, the request
should not be repeated, and as such the user should be alerted and a
copy of the Payment message saved to be resent later.

For 300 (redirect and similar) status codes, is it considered safe to
follow redirects? I think we have to, but good to make it clear in the
specification.


On the merchant's side; I think it would be useful for there to be
guidance for handling of errors processing Payment messages. I'd suggest
that Payment messages should have a fixed maximum size to avoid merchant
systems theoretically having to accept files of any size; 10MB would
seem far larger than in any way practical, and therefore a good maximum
size? A defined maximum time to wait (to avoid DDoS via connection
holding) might be useful too, although I'd need to do measurements to
find what values are tolerable.

I would like to have the protocol state that merchant systems should
handle repeatedly receiving the same Payment message, and return an
equivalent (if not identical) PaymentACK to each. This is important in
case of a network failure while the client is sending the Payment
message, as outlined above.

Lastly, I'm wondering about potential timing issues with transactions;
if a merchant system wants to see confirmation of a transaction before
sending a PaymentACK, any thoughts on whether it should hold the
connection, or send a PaymentACK with a memo indicating payment has been
seen on the relay network but is not yet confirmed, or something else?

Happy to write this up as a new BIP if that's more appropriate than
editing the original, and please do tell me if I've missed anything
obvious/prior discussion on this topic.


Ross



From pete at petertodd.org  Fri Apr 25 19:58:38 2014
From: pete at petertodd.org (Peter Todd)
Date: Fri, 25 Apr 2014 15:58:38 -0400
Subject: [Bitcoin-development] BIP - Selector Script
In-Reply-To: <201404251917.49826.luke@dashjr.org>
References: <CAE-z3OXe4fG2S274qcgpGsXA=ZhhJQneEDqLYvNWZT8U9y_NLA@mail.gmail.com>
	<201404251917.49826.luke@dashjr.org>
Message-ID: <20140425195838.GA3965@savin>

On Fri, Apr 25, 2014 at 07:17:48PM +0000, Luke-Jr wrote:
> I believe you meant to link here instead?
>     https://github.com/TierNolan/bips/blob/bip4x/bip-0046.mediawiki
> 
> This looks reasonable from a brief skim over, but does not define any use 
> cases (it mentions "necessary for atomic cross chain transfers", but does not 
> explain how it is useful for that - perhaps that belongs in another BIP you 
> haven't written yet, though). IMO, it should also require P2SH.

Keep in mind that P2SH redeemScripts are limited to just 520 bytes;
there's going to be many cases where more complex transactions just
can't be encoded in P2SH at all.

-- 
'peter'[:-1]@petertodd.org
00000000000000006407c80d5d4506a4253b4b426e0c7702963f8bf91e7971aa
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/15e065b8/attachment.sig>

From tier.nolan at gmail.com  Fri Apr 25 20:02:41 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Fri, 25 Apr 2014 21:02:41 +0100
Subject: [Bitcoin-development] BIP - Selector Script
In-Reply-To: <201404251917.49826.luke@dashjr.org>
References: <CAE-z3OXe4fG2S274qcgpGsXA=ZhhJQneEDqLYvNWZT8U9y_NLA@mail.gmail.com>
	<201404251917.49826.luke@dashjr.org>
Message-ID: <CAE-z3OX5_POg9kFoz-LsGhuLRA6qFPcNXoECLhewe+o-+Pw2gA@mail.gmail.com>

On Fri, Apr 25, 2014 at 8:17 PM, Luke-Jr <luke at dashjr.org> wrote:

> I believe you meant to link here instead?
>     https://github.com/TierNolan/bips/blob/bip4x/bip-0046.mediawiki
>
> Yeah, sorry.


> This looks reasonable from a brief skim over, but does not define any use
> cases (it mentions "necessary for atomic cross chain transfers", but does
> not
> explain how it is useful for that - perhaps that belongs in another BIP you
> haven't written yet, though).


One use case should be enough.  The atomic cross chain proposal has been
discussed for a while.  It feels like bitcoin works on an "ask permission
first" basis.

It always stalls at the fact that non-standard transactions are hard to get
confirmed on other coins.  It is hard to find pools on other coins which
have weaker isStandard() checks.  The timeouts have to be set so that they
are long enough to guarantee that transactions are accepted before they
expire.

A testnet to testnet transfer is the best that would be possible at the
moment.

I don't think the cross chain system needs a BIP (except to justify this
one).

If cross chain transfer become popular, then it would be useful to ensure
that clients are interoperable, but first things first.  If the
transactions aren't accepted in any chains, then everything stalls.

Secure transfers require that the malleability issue is fixed, but that is
a separate issue.  I am assuming that will be fixed at some point in the
future, since micro-payment channels also requires that it is fixed.


> IMO, it should also require P2SH.
>

It could be restricted to only P2SH, I don't think there would be a loss in
doing that.

Personally, I would make it so that P2SH is mandatory after a certain
time.  It makes distributed verification of the block chain easier.
Everything needed to verify a script is present in the transaction (except
that the output actually exists).

A soft fork that expands P2SH functionality would be even better, but I
would rather not let the best be the enemy of the good.

>
>
> Luke
>
>
> On Friday, April 25, 2014 6:49:35 PM Tier Nolan wrote:
> > This is a BIP to allow the spender to choose one of multiple standard
> > scripts to use for spending the output.
> >
> > https://github.com/TierNolan/bips/blob/bip4x/bip-0045.mediawiki
> >
> > This is required as part of the atomic cross chain transfer protocol.  It
> > is required so that outputs can be retrieved, if the process ends before
> > being committed.
> >
> > https://bitcointalk.org/index.php?topic=193281.msg2224949#msg2224949
> >
> > The script allows multiple standard scripts to be included in the
> > scriptPubKey.
> >
> > When redeeming the script the spender indicates which of the standard
> > scripts to use.
> >
> > Only one standard script is actually executed, so the only cost is the
> > extra storage required.
> >
> > A more ambitious change would be a soft fork like P2SH, except the
> spender
> > is allowed to select from multiple hashes.  Effectively, it would be
> > "Multi-P2SH".
> >
> > This gets much of the benefits of MAST, but it requires a formal soft
> fork
> > to implement.
> >
> > If there is agreement, I can code up the reference implementation as a
> PR.
> > The multi-P2SH might actually be easier.
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/fd5c4a56/attachment.html>

From tier.nolan at gmail.com  Fri Apr 25 20:05:02 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Fri, 25 Apr 2014 21:05:02 +0100
Subject: [Bitcoin-development] BIP - Selector Script
In-Reply-To: <20140425195838.GA3965@savin>
References: <CAE-z3OXe4fG2S274qcgpGsXA=ZhhJQneEDqLYvNWZT8U9y_NLA@mail.gmail.com>
	<201404251917.49826.luke@dashjr.org> <20140425195838.GA3965@savin>
Message-ID: <CAE-z3OVxf3GCeL21aVm2svSD=Dr=2gvVbEAZ2ve3F9GQGfSMFw@mail.gmail.com>

On Fri, Apr 25, 2014 at 8:58 PM, Peter Todd <pete at petertodd.org> wrote:

> Keep in mind that P2SH redeemScripts are limited to just 520 bytes;
> there's going to be many cases where more complex transactions just
> can't be encoded in P2SH at all.
>

True.  Having said that, this is just a change to isStandard(), rather than
a protocol change.

These transactions can already be mined into blocks.


> --
> 'peter'[:-1]@petertodd.org
> 00000000000000006407c80d5d4506a4253b4b426e0c7702963f8bf91e7971aa
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/bf9e5583/attachment.html>

From alex.mizrahi at gmail.com  Fri Apr 25 20:06:37 2014
From: alex.mizrahi at gmail.com (Alex Mizrahi)
Date: Fri, 25 Apr 2014 23:06:37 +0300
Subject: [Bitcoin-development] BIP - Hash Locked Transaction
In-Reply-To: <CAE-z3OVsQAya3RDzMTvKNK4hLGQVjFOp6Bseo=xK4ApOdPCh8g@mail.gmail.com>
References: <CAE-z3OVsQAya3RDzMTvKNK4hLGQVjFOp6Bseo=xK4ApOdPCh8g@mail.gmail.com>
Message-ID: <CAE28kUT4rZJHzww5gsdkCyzyKV6q2bV4h4rL_hzAcvhtCpKW4w@mail.gmail.com>

It is also useful for betting: an oracle will associate a hash with each
possible outcome, and when outcome is know, it will reveal a corresponding
preimage which will unlock the transaction.

This approach has several advantages over approach with multi-sig script:
1. oracle doesn't need to be involved in each specific transaction
2. resolution is same for everyone who makes a bet on a specific event
outcome
3. no need for two-way communication
4. no need for a special protocol: oracle might publish unlocking preimage
on a web page, and participants will manually enter it into their clients
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/d8b04816/attachment.html>

From gmaxwell at gmail.com  Fri Apr 25 20:13:25 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Fri, 25 Apr 2014 13:13:25 -0700
Subject: [Bitcoin-development] BIP - Selector Script
In-Reply-To: <CAE-z3OX5_POg9kFoz-LsGhuLRA6qFPcNXoECLhewe+o-+Pw2gA@mail.gmail.com>
References: <CAE-z3OXe4fG2S274qcgpGsXA=ZhhJQneEDqLYvNWZT8U9y_NLA@mail.gmail.com>
	<201404251917.49826.luke@dashjr.org>
	<CAE-z3OX5_POg9kFoz-LsGhuLRA6qFPcNXoECLhewe+o-+Pw2gA@mail.gmail.com>
Message-ID: <CAAS2fgRjtC+v7G6BA2UGtPWWUHQyuViJk24AO5ge6-hKW+H+Ww@mail.gmail.com>

On Fri, Apr 25, 2014 at 1:02 PM, Tier Nolan <tier.nolan at gmail.com> wrote:
>> This looks reasonable from a brief skim over, but does not define any use
>> cases (it mentions "necessary for atomic cross chain transfers", but does
>> not
>> explain how it is useful for that - perhaps that belongs in another BIP
>> you
>> haven't written yet, though).
> One use case should be enough.  The atomic cross chain proposal has been
> discussed for a while.  It feels like bitcoin works on an "ask permission
> first" basis.

You're reading that response the wrong way. It isn't in any way
opposed to the specification, it's pointing out that the specification
is _unclear_ about the applications, it mentions one but doesn't
explain it and it wouldn't be apparent to all readers. Thats all.

It could be clarified by saying something like "allows spending to be
controlled by the publication of information, for example in another
transaction so that they can only be completed atomically [citation to
a revision of the contracts page]".



From pete at petertodd.org  Fri Apr 25 20:14:03 2014
From: pete at petertodd.org (Peter Todd)
Date: Fri, 25 Apr 2014 16:14:03 -0400
Subject: [Bitcoin-development] BIP - Hash Locked Transaction
In-Reply-To: <CAE28kUT4rZJHzww5gsdkCyzyKV6q2bV4h4rL_hzAcvhtCpKW4w@mail.gmail.com>
References: <CAE-z3OVsQAya3RDzMTvKNK4hLGQVjFOp6Bseo=xK4ApOdPCh8g@mail.gmail.com>
	<CAE28kUT4rZJHzww5gsdkCyzyKV6q2bV4h4rL_hzAcvhtCpKW4w@mail.gmail.com>
Message-ID: <20140425201403.GA8994@savin>

On Fri, Apr 25, 2014 at 11:06:37PM +0300, Alex Mizrahi wrote:
> It is also useful for betting: an oracle will associate a hash with each
> possible outcome, and when outcome is know, it will reveal a corresponding
> preimage which will unlock the transaction.
> 
> This approach has several advantages over approach with multi-sig script:
> 1. oracle doesn't need to be involved in each specific transaction
> 2. resolution is same for everyone who makes a bet on a specific event
> outcome
> 3. no need for two-way communication
> 4. no need for a special protocol: oracle might publish unlocking preimage
> on a web page, and participants will manually enter it into their clients

Actually I did some work looking at this problem a few months ago and
other than somewhat larger transactions it looks like implementing
oracles by having the oracle reveal ECC secret keys works better in
every case. Notably the oracle can prove they really do have the key by
signing a challenge message, and with some ECC math the transaction can
include keys that have been derived from the oracle keys, blinding what
purposes the oracle is being used for from the oracle itself.

-- 
'peter'[:-1]@petertodd.org
0000000000000000852baa93672889c1cc0ebe0b886b153410529d6bf404b835
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/03d4db96/attachment.sig>

From gmaxwell at gmail.com  Fri Apr 25 20:19:48 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Fri, 25 Apr 2014 13:19:48 -0700
Subject: [Bitcoin-development] BIP - Hash Locked Transaction
In-Reply-To: <20140425201403.GA8994@savin>
References: <CAE-z3OVsQAya3RDzMTvKNK4hLGQVjFOp6Bseo=xK4ApOdPCh8g@mail.gmail.com>
	<CAE28kUT4rZJHzww5gsdkCyzyKV6q2bV4h4rL_hzAcvhtCpKW4w@mail.gmail.com>
	<20140425201403.GA8994@savin>
Message-ID: <CAAS2fgQc_UgwYgc0kVso-cL6xqP-2MGg2JoWDHYyAUXhQkyaoA@mail.gmail.com>

On Fri, Apr 25, 2014 at 1:14 PM, Peter Todd <pete at petertodd.org> wrote:
> Actually I did some work looking at this problem a few months ago and
> other than somewhat larger transactions it looks like implementing
> oracles by having the oracle reveal ECC secret keys works better in
> every case. Notably the oracle can prove they really do have the key by
> signing a challenge message, and with some ECC math the transaction can
> include keys that have been derived from the oracle keys, blinding what
> purposes the oracle is being used for from the oracle itself.

I think the hash-locked transactions are very useful, and I think
Peter agrees (no?)

But I agree with him that that for the oracle case the EC public
points are superior. (Also: Reality keys works like this.)



From luke at dashjr.org  Fri Apr 25 20:26:55 2014
From: luke at dashjr.org (Luke-Jr)
Date: Fri, 25 Apr 2014 20:26:55 +0000
Subject: [Bitcoin-development] BIP - Selector Script
In-Reply-To: <CAE-z3OX5_POg9kFoz-LsGhuLRA6qFPcNXoECLhewe+o-+Pw2gA@mail.gmail.com>
References: <CAE-z3OXe4fG2S274qcgpGsXA=ZhhJQneEDqLYvNWZT8U9y_NLA@mail.gmail.com>
	<201404251917.49826.luke@dashjr.org>
	<CAE-z3OX5_POg9kFoz-LsGhuLRA6qFPcNXoECLhewe+o-+Pw2gA@mail.gmail.com>
Message-ID: <201404252026.56765.luke@dashjr.org>

On Friday, April 25, 2014 8:02:41 PM Tier Nolan wrote:
> I don't think the cross chain system needs a BIP (except to justify this
> one).
> 
> If cross chain transfer become popular, then it would be useful to ensure
> that clients are interoperable, but first things first.  If the
> transactions aren't accepted in any chains, then everything stalls.

I think you may be misunderstanding what BIPs are. They do not force nodes to 
take on any given relay/mining policy (thus, BIPs should never talk about 
IsStandard at all). They define standard for interoperability between 
software. So, if you want nodes to relay these transactions, you need to 
convince them, not merely write a BIP for the transaction format. Defining a 
BIP for cross-chain trading would be one way to do that.

> Secure transfers require that the malleability issue is fixed, but that is
> a separate issue.  I am assuming that will be fixed at some point in the
> future, since micro-payment channels also requires that it is fixed.

The malleability "issue" has been known for years.
I wouldn't expect any special effort made to fix it...

> A soft fork that expands P2SH functionality would be even better, but I
> would rather not let the best be the enemy of the good.

There is some ongoing discussion of a softfork to basically redo the Script 
language entirely, but it will take quite a bit of time and development before 
we'll see it in the wild.

Luke

P.S. Did the BIP editor assign these numbers? If not, best to keep them 
numberless until assigned, to avoid confusion when people Google the real BIP 
44 and 45...



From laanwj at gmail.com  Fri Apr 25 20:27:56 2014
From: laanwj at gmail.com (Wladimir)
Date: Fri, 25 Apr 2014 22:27:56 +0200
Subject: [Bitcoin-development] Compatibility Bitcoin-Qt with Tails
Message-ID: <CA+s+GJARfPhMo8ucE7E40bE890NsuzuWPq1DQuK6ZVMvps0LVQ@mail.gmail.com>

Kristov,

On Wed, Apr 23, 2014 at 10:05 PM, Kristov Atlas <kristovatlas at gmail.com> wrote:
> On 04/22/2014 09:30 AM, Warren Togami Jr. wrote:
>
> I see that the latest nightly build (thanks for that, Warren) is still not
> compatible with Tails/Debian Squeeze. Is there still an intention to address
> this issue? Might it be fixed by 0.9.2?

I've modified the gitian build so that it builds against Qt 4.6
instead of Qt 4.8 in this pull request:
https://github.com/bitcoin/bitcoin/pull/4094

A test build of master with that pulls gitian descriptor is available:

https://download.visucore.com/bitcoin/linux-4765b8c-gitian-2d48b96.tar.gz
https://download.visucore.com/bitcoin/linux-4765b8c-gitian-2d48b96.tar.gz.sig

These bitcoin-qt executables *should* work on Debian Squeeze / Tails
Linux. Let me know if it is the case.

Wladimir



From author at anonymousbitcoinbook.com  Fri Apr 25 20:09:29 2014
From: author at anonymousbitcoinbook.com (Kristov Atlas)
Date: Fri, 25 Apr 2014 16:09:29 -0400
Subject: [Bitcoin-development] Development Roadmap of Bitcoin Core 0.9.2
In-Reply-To: <CA+s+GJDwKzn1X2uR+1uB19+KTpXW+FEOQiWTLcTXJiAJKfdXDA@mail.gmail.com>
References: <CAEz79PrAg=yydd3UOk51wGQUWey-KZHUH1Npzwb=qL+6zTj+pQ@mail.gmail.com>	<53581D1D.1000709@gmail.com>	<CAEz79Poy0XEVyC=nOdhYNVOASvfB-2zHJcjU2hvjA7iDWGDDyw@mail.gmail.com>	<CAAS2fgSQ6rh1XKao6pv8BmpeRbtqWfUOVF+C1Fi3LEzY1YcPiA@mail.gmail.com>	<CA+s+GJDY6c2-fjbL=JcrF3umM4ji8Y5j5ppxX_mAzZdTh1_QRw@mail.gmail.com>	<CAEz79PqoWOUEwrsaaHjX58QqYbFUdS6k5jg2V9XvOAAUBw00Ug@mail.gmail.com>	<CA+s+GJB6Fucjvcve8QQoWdOz=FG-DMJ7z16PLRS2Q_5ReP4o4A@mail.gmail.com>
	<CA+s+GJDwKzn1X2uR+1uB19+KTpXW+FEOQiWTLcTXJiAJKfdXDA@mail.gmail.com>
Message-ID: <535AC0F9.5080204@anonymousbitcoinbook.com>

Yes. Tails 1.1, based on Wheezy, will be out on June 10: 
https://tails.boum.org/contribute/calendar/

-Kristov Atlas

On 04/24/2014 08:18 AM, Wladimir wrote:
> On Thu, Apr 24, 2014 at 10:25 AM, Wladimir <laanwj at gmail.com> wrote:
>> On Thu, Apr 24, 2014 at 10:15 AM, Warren Togami Jr. <wtogami at gmail.com> wrote:
>>
>> But indeed we need to decide on a cut-off point. I'd have preferred
>> 4.7 or 4.8. Qt 4.6 is *ancient* - it was released in februari 2010.
>> Apart from tails it doesn't seem like anyone is using those old stable
>> distributions on the desktop.
> Does anyone know of the timeframe in which tails will switch to a
> newer version of Qt?
>
> As it's debian based: will switch to a Wheezy/7.4. Wheezy has Qt 4.8
> so is decidedly unproblematic.
>
> I see they're working on migration at least:
>
> - https://tails.boum.org/blueprint/Wheezy/
> - https://git-tails.immerda.ch/tails/log/?h=feature/wheezy
>
> Wladimir
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From laanwj at gmail.com  Fri Apr 25 20:47:31 2014
From: laanwj at gmail.com (Wladimir)
Date: Fri, 25 Apr 2014 22:47:31 +0200
Subject: [Bitcoin-development] Development Roadmap of Bitcoin Core 0.9.2
In-Reply-To: <535AC0F9.5080204@anonymousbitcoinbook.com>
References: <CAEz79PrAg=yydd3UOk51wGQUWey-KZHUH1Npzwb=qL+6zTj+pQ@mail.gmail.com>
	<53581D1D.1000709@gmail.com>
	<CAEz79Poy0XEVyC=nOdhYNVOASvfB-2zHJcjU2hvjA7iDWGDDyw@mail.gmail.com>
	<CAAS2fgSQ6rh1XKao6pv8BmpeRbtqWfUOVF+C1Fi3LEzY1YcPiA@mail.gmail.com>
	<CA+s+GJDY6c2-fjbL=JcrF3umM4ji8Y5j5ppxX_mAzZdTh1_QRw@mail.gmail.com>
	<CAEz79PqoWOUEwrsaaHjX58QqYbFUdS6k5jg2V9XvOAAUBw00Ug@mail.gmail.com>
	<CA+s+GJB6Fucjvcve8QQoWdOz=FG-DMJ7z16PLRS2Q_5ReP4o4A@mail.gmail.com>
	<CA+s+GJDwKzn1X2uR+1uB19+KTpXW+FEOQiWTLcTXJiAJKfdXDA@mail.gmail.com>
	<535AC0F9.5080204@anonymousbitcoinbook.com>
Message-ID: <CA+s+GJCCu_71wxXVV78Dbm7GJ5JYynrZ76qimLKmLH3kPkfyTA@mail.gmail.com>

On Fri, Apr 25, 2014 at 10:09 PM, Kristov Atlas
<author at anonymousbitcoinbook.com> wrote:
> Yes. Tails 1.1, based on Wheezy, will be out on June 10:
> https://tails.boum.org/contribute/calendar/

Thanks!

Wladimir



From tier.nolan at gmail.com  Fri Apr 25 20:48:52 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Fri, 25 Apr 2014 21:48:52 +0100
Subject: [Bitcoin-development] BIP - Selector Script
In-Reply-To: <201404252026.56765.luke@dashjr.org>
References: <CAE-z3OXe4fG2S274qcgpGsXA=ZhhJQneEDqLYvNWZT8U9y_NLA@mail.gmail.com>
	<201404251917.49826.luke@dashjr.org>
	<CAE-z3OX5_POg9kFoz-LsGhuLRA6qFPcNXoECLhewe+o-+Pw2gA@mail.gmail.com>
	<201404252026.56765.luke@dashjr.org>
Message-ID: <CAE-z3OUKwpKcX27N1PKqXEHOKh+r6UD3FHioRt6TMMLVPoLjOw@mail.gmail.com>

On Fri, Apr 25, 2014 at 9:26 PM, Luke-Jr <luke at dashjr.org> wrote:

> They define standard for interoperability between
> software. So, if you want nodes to relay these transactions, you need to
> convince them, not merely write a BIP for the transaction format.


I agree with you in theory, each miner could decide their inclusion rules
for themselves.

In practice, if the reference client is updated, then most miners will
accept those transactions.  In addition, it would eventually propagate to
alt-coins (or at least the supported ones).

I could simply submit the changes as a pull request for the reference
client, but I was hoping that by doing it this way, it would increase the
odds of it being accepted.


> Defining a BIP for cross-chain trading would be one way to do that.
>

I don't think it quite requires the same coordination in the short term.  I
could write up the sequence as an info BIP.

The malleability "issue" has been known for years.
> I wouldn't expect any special effort made to fix it...
>

It is possible to tweak the protocol so that it still works.  However, it
means that 3rd parties are required (that could go in the BIP too).


> There is some ongoing discussion of a softfork to basically redo the Script
> language entirely, but it will take quite a bit of time and development
> before
> we'll see it in the wild.
>

Implementing multi-P2SH gets a lot of the benefits of MAST, in terms of
efficiency.


>
> Luke
>
> P.S. Did the BIP editor assign these numbers? If not, best to keep them
> numberless until assigned, to avoid confusion when people Google the real
> BIP
> 44 and 45...
>

Not yet, but that is just my personal repo.  I did email gmaxwell, but he
said that they can't be assigned until some discussion has happened.

I take your point that the name appears in the link though, so could cause
issues with searching.


>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/86e59f20/attachment.html>

From pete at petertodd.org  Fri Apr 25 21:14:26 2014
From: pete at petertodd.org (Peter Todd)
Date: Fri, 25 Apr 2014 17:14:26 -0400
Subject: [Bitcoin-development] BIP - Hash Locked Transaction
In-Reply-To: <CAAS2fgQc_UgwYgc0kVso-cL6xqP-2MGg2JoWDHYyAUXhQkyaoA@mail.gmail.com>
References: <CAE-z3OVsQAya3RDzMTvKNK4hLGQVjFOp6Bseo=xK4ApOdPCh8g@mail.gmail.com>
	<CAE28kUT4rZJHzww5gsdkCyzyKV6q2bV4h4rL_hzAcvhtCpKW4w@mail.gmail.com>
	<20140425201403.GA8994@savin>
	<CAAS2fgQc_UgwYgc0kVso-cL6xqP-2MGg2JoWDHYyAUXhQkyaoA@mail.gmail.com>
Message-ID: <20140425211426.GD8994@savin>

On Fri, Apr 25, 2014 at 01:19:48PM -0700, Gregory Maxwell wrote:
> On Fri, Apr 25, 2014 at 1:14 PM, Peter Todd <pete at petertodd.org> wrote:
> > Actually I did some work looking at this problem a few months ago and
> > other than somewhat larger transactions it looks like implementing
> > oracles by having the oracle reveal ECC secret keys works better in
> > every case. Notably the oracle can prove they really do have the key by
> > signing a challenge message, and with some ECC math the transaction can
> > include keys that have been derived from the oracle keys, blinding what
> > purposes the oracle is being used for from the oracle itself.
> 
> I think the hash-locked transactions are very useful, and I think
> Peter agrees (no?)

Yup. Revealing EC points is *not* a replacement for the hash-locked
case.

> But I agree with him that that for the oracle case the EC public
> points are superior. (Also: Reality keys works like this.)

Same again, and on top of that the EC public point method still works
better in many circumstances with what are currently non-standard
transactions rather than trying to shoe-horn everything into one big
CHECKMULTISIG.


Along those lines, rather than doing up yet another format specific type
as Tier Nolan is doing with his BIP, why not write a BIP looking at how
the IsStandard() rules could be removed? Last year John Dillon proposed
it be replaced by a P2SH opcode whitelist(1) and I proposed some
extensions(2) to the idea to make sure the whitelist didn't pose
transaction mutability issues; very similar to Pieter Wuille's proposed
soft-fork to stamp-out mutability.(3)

The key reasons to have IsStandard() right now are the following:

1) Mitigate transaction mutability.

Pieter's soft-fork mitigates mutability well, and can be applied even
more easily as an IsStandard() rule.


2) Reduce the potential for scripting bugs to impact the ecosystem.

The scripting system has had a lot more testing since IsStandard() was
implemented. Additionally we have a large pool mining non-standard
transactions anyway, mostly negating the value of IsStandard() for this
purpose.


3) Ensure that after a soft-fork upgrade transactions considered
   IsStandard() by the the remaining non-upgraded hashing power continue
   to be valid.

We don't want that hashing power to be able to be tricked into mining
invalid blocks. Future soft-forks for transactions will most likely be
done by either incrementing the transaction version number, or by
redefining one of the OP_NOPx opcodes with new functionality. We just
need to ignore transactions with version numbers that we are not
familiar with and additionally not include any of the OP_NOPx opcodes in
the whitelist.


One last detail is that sigops should be taken into account when
calculating fees; Luke-Jr's accept non-standard patch has code to do
this already.

1) http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg02606.html
2) http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg02611.html
3) https://github.com/bitcoin/bips/blob/master/bip-0062.mediawiki

-- 
'peter'[:-1]@petertodd.org
0000000000000000231ff812c54986461c6f76414390f88e41476a2c2c877304
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/6cb7df59/attachment.sig>

From tier.nolan at gmail.com  Fri Apr 25 21:52:01 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Fri, 25 Apr 2014 22:52:01 +0100
Subject: [Bitcoin-development] BIP - Hash Locked Transaction
In-Reply-To: <20140425211426.GD8994@savin>
References: <CAE-z3OVsQAya3RDzMTvKNK4hLGQVjFOp6Bseo=xK4ApOdPCh8g@mail.gmail.com>
	<CAE28kUT4rZJHzww5gsdkCyzyKV6q2bV4h4rL_hzAcvhtCpKW4w@mail.gmail.com>
	<20140425201403.GA8994@savin>
	<CAAS2fgQc_UgwYgc0kVso-cL6xqP-2MGg2JoWDHYyAUXhQkyaoA@mail.gmail.com>
	<20140425211426.GD8994@savin>
Message-ID: <CAE-z3OUM6_+qtxzcLg1FkUe8jxCLnJDya=eH9O5+LY_KRrhZpg@mail.gmail.com>

On Fri, Apr 25, 2014 at 10:14 PM, Peter Todd <pete at petertodd.org> wrote:

> Along those lines, rather than doing up yet another format specific type
> as Tier Nolan is doing with his BIP, why not write a BIP looking at how
> the IsStandard() rules could be removed?


Removal of isStandard() would be even better/more flexible.

A whitelist of low risk opcodes seems like a reasonable compromise.

My thoughts behind these two BIPs are that they are a smaller change that
adds functionality required for a particular use-case (and some others).

Changing the entire philosophy behind isStandard() is a much bigger change
than just adding one new type.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/97b0bb8d/attachment.html>

From voisine at gmail.com  Fri Apr 25 21:58:07 2014
From: voisine at gmail.com (Aaron Voisine)
Date: Fri, 25 Apr 2014 14:58:07 -0700
Subject: [Bitcoin-development] BIP32 "wallet structure" in use? Remove
	it?
In-Reply-To: <CANEZrP0+SBMpjnQwbspZ_A6ZA8GepwW9G98AZU2jfWHuGCtEHg@mail.gmail.com>
References: <ljdd29$522$1@ger.gmane.org>
	<1398437607.23028.110362141.03111A2A@webmail.messagingengine.com>
	<CAAS2fgRiXdOBN2gVZ0Xh4kBeOKiS80AjD5+VxJEut9nWt-0WUg@mail.gmail.com>
	<CANEZrP0+SBMpjnQwbspZ_A6ZA8GepwW9G98AZU2jfWHuGCtEHg@mail.gmail.com>
Message-ID: <CACq0ZD64RAw+p+HH=OvHzURg+pJrpRXfJ8jZ3q9v-MF99=mP6Q@mail.gmail.com>

On github I commented on the BIP43 pull request about adding a
"purpose" of 0' which would correspond to the BIP32 recommended tree
structure for a single account wallet. (m/0'/chain) This will allow
for backwards compatibility and interoperability at least for existing
single account BIP32 implementations like my own. The only issue is
that it would involve a new BIP, and it wouldn't follow the BIP43
recommendation of using the BIP number as the "purpose number", unless
I can get BIP0.  :)

Aaron

There's no trick to being a humorist when you have the whole
government working for you -- Will Rodgers


On Fri, Apr 25, 2014 at 8:49 AM, Mike Hearn <mike at plan99.net> wrote:
> I generally agree, but I wonder how popular cloning wallets between devices
> will be in future. Right now if someone wants to have a wallet shared
> between Hive, blockchain.info and Bitcoin Wallet for Android, we just tell
> them they're out of luck and they need to pick one, or split their funds up
> manually.
>
> But probably a lot of people would like to use different UI's to access the
> same wallets. Sharing key trees is a part of that, though full blown wallet
> metadata sync would also be needed.
>
> So I guess we're going to end up with some kind of fairly complex
> compatibility matrix. But I agree it may be unavoidable.
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From manu at bitpay.com  Fri Apr 25 22:27:45 2014
From: manu at bitpay.com (Manuel Araoz)
Date: Fri, 25 Apr 2014 19:27:45 -0300
Subject: [Bitcoin-development] New BIP32 structure for P2SH multisig wallets
Message-ID: <CABQSq2Q98K5zbUbQAqSE4OYez2QuOaWTt+9n5iZmSR2boynf_Q@mail.gmail.com>

Hi, I'm part of the team building copay <https://github.com/bitpay/copay>,
a multisignature P2SH HD wallet. We've been following the discussion
regarding standardizing the structure for branches both on this list and on
github (1 <https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki>,
2 <https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki>,
3<https://github.com/bitcoin/bips/blob/master/bip-0043.mediawiki>,
4 <https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki>,
5<https://github.com/bitcoin/bips/pull/52>).
Soon, we realized the assumptions in the discussions were not true for a
multisig hd wallet, so we wanted to share our current approach to that, to
get feedback and see if we can arrive to a new standard (and possibly a new
BIP)

These are our assumptions:
 - N parties want to share an m-of-n wallet.
 - Each party must generate their master private keys independently.
 - Use multisig P2SH for all addresses.
 - Use BIP32 to derive public keys, then create a multisig script, and use
the P2SH address for that.
 - The address generation process should not require communicating with
other parties. (Thus, all parties must be able to generate all public keys)
 - Transaction creation + signing requires communication between parties,
of course.

-------------------------------------------------

Following BIP43, we're be using:


m / purpose' / *

where *purpose* is the hardened derivation scheme based on the new BIP
number.
We then define the following levels:


m / purpose' / cosigner_index / change / address_index

Each level has a special meaning detailed below:

*cosigner_index* <http://en.wikipedia.org/wiki/Co-signing>: the index of
the party creating this address. The indices can be determined
independently by lexicographically sorting the master public keys of each
cosigner.

*change*: 0 for change, 1 for receive address.

*address_index*: Addresses are numbered from index 0 in sequentially
increasing manner. We're currently syncing the max used index for each
branch between all parties when they connect, but we're open to considering
removing the index sync and doing the more elegant used-address discovery
via a gap limit, as discussed in
BIP44<https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki#address-gap-limit>.
We feel 20 might be too low though.

*Wallet high-level description:*
Each party generates their own extended master keypair and shares the
extended purpose' public key with the others, which is stored encrypted.
Each party can generate any of the other's derived public keys, but only
his own private keys.

*General address generation procedure:*
When generating an address, each party can independently generate the N
needed public keys. They do this by deriving the public key in each of the
different trees, but using the same path. They can then generate the
multisig script and the corresponding p2sh address. In this way, each path
corresponds to an address, but the public keys for that address come from
different trees.

*Receive address case:*
Each cosigner generates addresses only on his own branch. One of the n
cosigners wants to receive a payment, and the others are offline. He knows
the last used index in his own branch, because only he generates addresses
there. Thus, he can generate the public keys for all of the others using
the next index, and calculate the needed script for the address.

*Example: *Cosigner #2 wants to receive a payment to the shared wallet. His
last used index on his own branch is 4. Then, the path for the next receive
address is m/$purpose/2/1/5. He uses this same path in all of the cosigners
trees to generate a public key for each one, and from that he gets the new
p2sh address.

*Change address case:*
Again, each cosigner generates addresses only on his own branch. One of the
n cosigners wants to create an outgoing payment, for which he'll need a
change address. He generates a new address using the same procedure as
above, but using a separate index to track the used change addresses.

*Example: *Cosigner #5 wants to send a payment from the shared wallet, for
which he'll need a change address. His last used change index on his own
branch is 11. Then, the path for the next change address is
m/$purpose/5/0/12. He uses this same path in all of the cosigners trees to
generate a public key for each one, and from that he gets the new p2sh
address.


*Transaction creation and signing:*
When creating a transaction, first one of the parties creates a Transaction
Proposal. This is a transaction that spends some output stored in any of
the p2sh multisig addresses (corresponding to any of the copayers'
branches). This proposal is sent to the other parties, who decide if they
want to sign. If they approve the proposal, they can generate their needed
private key for that specific address (using the same path that generated
the public key in that address, but deriving the private key instead), and
sign it. Once the proposal reaches m signatures, any cosigner can broadcast
it to the network, becoming final. The specifics of how this proposal is
structured, and the protocol to accept or reject it, belong to another BIP,
in my opinion.

*Final comments:*
- We're currently lexicographically sorting the public keys for each
address separately. We've read Mike Belshe's comments about sorting the
master public keys and then using the same order for all derived addresses,
but we couldn't think of any benefits of doing that (I mean, the benefits
of knowing whose public key is which).
- We originally thought we would need a non-hardened version of purpose for
the path, because we needed every party to be able to generate all the
public keys of the others. With the proposed path, is it true that the
cosigners will be able to generate them, by knowing the extended purpose
public key for each copayer? (m/purpose')
- The reason for using separate branches for each cosigner is we don't want
two of them generating the same address and receiving simultaneous payments
to it. The ideal case is that each address receives at most one payment,
requested by the corresponding cosigner.


Thoughts?
Manuel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/65b0a04c/attachment.html>

From andreas at schildbach.de  Fri Apr 25 22:33:36 2014
From: andreas at schildbach.de (Andreas Schildbach)
Date: Sat, 26 Apr 2014 00:33:36 +0200
Subject: [Bitcoin-development] Error handling in payment protocol
	(BIP-0070 and BIP-0072)
In-Reply-To: <535ABD5D.7070509@jrn.me.uk>
References: <535ABD5D.7070509@jrn.me.uk>
Message-ID: <ljens1$1qh$1@ger.gmane.org>

These two BIPs are not accepted yet, so feel free to submit PRs for them.

Note BIP70 is almost agnostic to transport layer. For example, I have
implemented it for NFC, QR-codes, Bluetooth, e-mail and In-app payments
in Bitcoin Wallet -- doesn't make much sense to put HTTP status codes
into the spec.

Max message sizes make sense. I also thought about adding a guarantee
that the payment_url is valid for as long as the payment request is valid.


On 04/25/2014 09:54 PM, J Ross Nicoll wrote:
> Dear Gavin, all,
> 
> Going over the payment protocol specifications, I've noticed that
> there's appears to be a lack of specificity on handling of error states.
> In most cases there are reasonably obvious solutions, however it would
> seem positive to formalise processes to ensure consistency. I'm
> wondering therefore if either you'd be willing to edit the existing BIP,
> or advise on whether this is useful to write up as a new BIP?
> 
> The main area of concern is handling unexpected problems while sending
> the Payment message, or receiving the corresponding PaymentACK message.
> For example, in case of a transport layer failure or non-200 HTTP status
> code while sending the Payment message, what should the wallet software
> do next? Is it safe to re-send the Payment message? I'd propose that for
> any transport failure or 500 status code, the client retries after a
> delay (suggested at 30-60 seconds). For 400 status codes, the request
> should not be repeated, and as such the user should be alerted and a
> copy of the Payment message saved to be resent later.
> 
> For 300 (redirect and similar) status codes, is it considered safe to
> follow redirects? I think we have to, but good to make it clear in the
> specification.
> 
> 
> On the merchant's side; I think it would be useful for there to be
> guidance for handling of errors processing Payment messages. I'd suggest
> that Payment messages should have a fixed maximum size to avoid merchant
> systems theoretically having to accept files of any size; 10MB would
> seem far larger than in any way practical, and therefore a good maximum
> size? A defined maximum time to wait (to avoid DDoS via connection
> holding) might be useful too, although I'd need to do measurements to
> find what values are tolerable.
> 
> I would like to have the protocol state that merchant systems should
> handle repeatedly receiving the same Payment message, and return an
> equivalent (if not identical) PaymentACK to each. This is important in
> case of a network failure while the client is sending the Payment
> message, as outlined above.
> 
> Lastly, I'm wondering about potential timing issues with transactions;
> if a merchant system wants to see confirmation of a transaction before
> sending a PaymentACK, any thoughts on whether it should hold the
> connection, or send a PaymentACK with a memo indicating payment has been
> seen on the relay network but is not yet confirmed, or something else?
> 
> Happy to write this up as a new BIP if that's more appropriate than
> editing the original, and please do tell me if I've missed anything
> obvious/prior discussion on this topic.
> 
> 
> Ross
> 
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> 





From etotheipi at gmail.com  Sat Apr 26 03:02:21 2014
From: etotheipi at gmail.com (Alan Reiner)
Date: Fri, 25 Apr 2014 23:02:21 -0400
Subject: [Bitcoin-development] New BIP32 structure for P2SH multisig
	wallets
In-Reply-To: <CABQSq2Q98K5zbUbQAqSE4OYez2QuOaWTt+9n5iZmSR2boynf_Q@mail.gmail.com>
References: <CABQSq2Q98K5zbUbQAqSE4OYez2QuOaWTt+9n5iZmSR2boynf_Q@mail.gmail.com>
Message-ID: <535B21BD.1080503@gmail.com>

I will just chime in that I've been working on a similar spec for Armory
to implement P2SH multisig and I came up with basically an identical
scheme.  I think you covered most of what is needed.   The one thing I
did differently was try to match the BIP 32 structure, by keeping the
original 3 levels (wallet, chain, addresses), and use 2*N chains to
handle the N different parties generating receiving and change
addresses.  It's not necessary, but it follows more closely the
three-level scheme that BIP 32 originally envisioned.  I also concluded
that the chain indices are ordered by lexicographical sorting of root
public keys, but resorting each individual address.  There are use cases
where it will be necessary for parties to know how to combine public
keys into a multi-sig address without knowing the root keys.

Also, for the purposes of one-off types of escrow multi-sig, we have
included a "wallet locator" field in the transaction that must be passed
around.  This "wallet locator" is stored with each key (perhaps at the
time public keys are collected and merged), and passed around with
transactions to be signed.  This allows lightweight devices like
hardware wallets, to recognize their own keys.  It would encoded in a
VAR_STR, and doesn't have to be meaningful to the other participants --
each device would look at all signing slots in a transaction (either
singlesig or each key in a multisig) and would generate a public key
along each path, and see if the result matches.  If so, it can sign it. 
If not, it must be someone else's.

I bring this up, because this multisig wallet structure you're talking
about has a very simple "wallet locator" scheme -- all parties will use
the same locator for a given receiving address.  But that field should
remain part of the data structure for each key, to accommodate all types
of multisig, not just linked/parallel tree schemes. 

-Alan




On 04/25/2014 06:27 PM, Manuel Araoz wrote:
> Hi, I'm part of the team building copay
> <https://github.com/bitpay/copay>, a multisignature P2SH HD
> wallet. We've been following the discussion regarding standardizing
> the structure for branches both on this list and on github (1
> <https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki>, 2
> <https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki>, 3
> <https://github.com/bitcoin/bips/blob/master/bip-0043.mediawiki>, 4
> <https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki>, 5
> <https://github.com/bitcoin/bips/pull/52>). Soon, we realized the
> assumptions in the discussions were not true for a multisig hd wallet,
> so we wanted to share our current approach to that, to get feedback
> and see if we can arrive to a new standard (and possibly a new BIP)
>
> These are our assumptions: 
>  - N parties want to share an m-of-n wallet.
>  - Each party must generate their master private keys independently.
>  - Use multisig P2SH for all addresses.
>  - Use BIP32 to derive public keys, then create a multisig script, and
> use the P2SH address for that.
>  - The address generation process should not require communicating
> with other parties. (Thus, all parties must be able to generate all
> public keys)
>  - Transaction creation + signing requires communication between
> parties, of course.
>
> -------------------------------------------------
>
> Following BIP43, we're be using:
> m / purpose' / *
> where /purpose/ is the hardened derivation scheme based on the new BIP
> number.
> We then define the following levels:
> m / purpose' / cosigner_index / change / address_index
> Each level has a special meaning detailed below:
>
> /cosigner_index/ <http://en.wikipedia.org/wiki/Co-signing>: the index
> of the party creating this address. The indices can be determined
> independently by lexicographically sorting the master public keys of
> each cosigner.
>
> /change/: 0 for change, 1 for receive address.
>
> /address_index/: Addresses are numbered from index 0 in sequentially
> increasing manner. We're currently syncing the max used index for each
> branch between all parties when they connect, but we're open to
> considering removing the index sync and doing the more elegant
> used-address discovery via a gap limit, as discussed in BIP44
> <https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki#address-gap-limit>.
> We feel 20 might be too low though. 
>
> *Wallet high-level description:*
> Each party generates their own extended master keypair and shares the
> extended purpose' public key with the others, which is stored
> encrypted. Each party can generate any of the other's derived public
> keys, but only his own private keys. 
>
> *General address generation procedure:*
> When generating an address, each party can independently generate the
> N needed public keys. They do this by deriving the public key in each
> of the different trees, but using the same path. They can then
> generate the multisig script and the corresponding p2sh address. In
> this way, each path corresponds to an address, but the public keys for
> that address come from different trees.
>
> *Receive address case:*
> Each cosigner generates addresses only on his own branch. One of the n
> cosigners wants to receive a payment, and the others are offline. He
> knows the last used index in his own branch, because only he generates
> addresses there. Thus, he can generate the public keys for all of the
> others using the next index, and calculate the needed script for the
> address. 
>
> /Example: /Cosigner #2 wants to receive a payment to the shared
> wallet. His last used index on his own branch is 4. Then, the path for
> the next receive address is m/$purpose/2/1/5. He uses this same path
> in all of the cosigners trees to generate a public key for each one,
> and from that he gets the new p2sh address.
>
> *Change address case:*
> Again, each cosigner generates addresses only on his own branch. One
> of the n cosigners wants to create an outgoing payment, for which
> he'll need a change address. He generates a new address using the same
> procedure as above, but using a separate index to track the used
> change addresses. 
> /
> Example: /Cosigner #5 wants to send a payment from the shared wallet,
> for which he'll need a change address. His last used change index on
> his own branch is 11. Then, the path for the next change address is
> m/$purpose/5/0/12. He uses this same path in all of the cosigners
> trees to generate a public key for each one, and from that he gets the
> new p2sh address.
>
>
> *Transaction creation and signing:*
> When creating a transaction, first one of the parties creates a
> Transaction Proposal. This is a transaction that spends some output
> stored in any of the p2sh multisig addresses (corresponding to any of
> the copayers' branches). This proposal is sent to the other parties,
> who decide if they want to sign. If they approve the proposal, they
> can generate their needed private key for that specific address (using
> the same path that generated the public key in that address, but
> deriving the private key instead), and sign it. Once the proposal
> reaches m signatures, any cosigner can broadcast it to the network,
> becoming final. The specifics of how this proposal is structured, and
> the protocol to accept or reject it, belong to another BIP, in my
> opinion. 
>
> *Final comments:*
> - We're currently lexicographically sorting the public keys for each
> address separately. We've read Mike Belshe's comments about sorting
> the master public keys and then using the same order for all derived
> addresses, but we couldn't think of any benefits of doing that (I
> mean, the benefits of knowing whose public key is which).
> - We originally thought we would need a non-hardened version of
> purpose for the path, because we needed every party to be able to
> generate all the public keys of the others. With the proposed path, is
> it true that the cosigners will be able to generate them, by knowing
> the extended purpose public key for each copayer? (m/purpose')
> - The reason for using separate branches for each cosigner is we don't
> want two of them generating the same address and receiving
> simultaneous payments to it. The ideal case is that each address
> receives at most one payment, requested by the corresponding cosigner. 
>
>
> Thoughts?
> Manuel
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140425/c7d5c529/attachment.html>

From mike at plan99.net  Sat Apr 26 09:43:23 2014
From: mike at plan99.net (Mike Hearn)
Date: Sat, 26 Apr 2014 11:43:23 +0200
Subject: [Bitcoin-development] New BIP32 structure for P2SH multisig
	wallets
In-Reply-To: <CABQSq2Q98K5zbUbQAqSE4OYez2QuOaWTt+9n5iZmSR2boynf_Q@mail.gmail.com>
References: <CABQSq2Q98K5zbUbQAqSE4OYez2QuOaWTt+9n5iZmSR2boynf_Q@mail.gmail.com>
Message-ID: <CANEZrP3EGNsOgHm0P6fiU1P7OSgTd=pBYooPBrLQGMKPT9b8Qg@mail.gmail.com>

I'm not sure I understand why you need any special structure for this at
all. The way I'd do it is just use regular HD wallets for everyone, of the
regular form, and then swap the watching keys. Why do people need to be
given a cosigner index at all, given that they all have unique root keys
anyway?


On Sat, Apr 26, 2014 at 12:27 AM, Manuel Araoz <manu at bitpay.com> wrote:

> Hi, I'm part of the team building copay <https://github.com/bitpay/copay>,
> a multisignature P2SH HD wallet. We've been following the discussion
> regarding standardizing the structure for branches both on this list and on
> github (1 <https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki>,
> 2 <https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki>, 3<https://github.com/bitcoin/bips/blob/master/bip-0043.mediawiki>,
> 4 <https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki>, 5<https://github.com/bitcoin/bips/pull/52>).
> Soon, we realized the assumptions in the discussions were not true for a
> multisig hd wallet, so we wanted to share our current approach to that, to
> get feedback and see if we can arrive to a new standard (and possibly a new
> BIP)
>
> These are our assumptions:
>  - N parties want to share an m-of-n wallet.
>  - Each party must generate their master private keys independently.
>  - Use multisig P2SH for all addresses.
>  - Use BIP32 to derive public keys, then create a multisig script, and use
> the P2SH address for that.
>  - The address generation process should not require communicating with
> other parties. (Thus, all parties must be able to generate all public keys)
>  - Transaction creation + signing requires communication between parties,
> of course.
>
> -------------------------------------------------
>
> Following BIP43, we're be using:
>
>
> m / purpose' / *
>
> where *purpose* is the hardened derivation scheme based on the new BIP
> number.
> We then define the following levels:
>
>
> m / purpose' / cosigner_index / change / address_index
>
> Each level has a special meaning detailed below:
>
> *cosigner_index* <http://en.wikipedia.org/wiki/Co-signing>: the index of
> the party creating this address. The indices can be determined
> independently by lexicographically sorting the master public keys of each
> cosigner.
>
> *change*: 0 for change, 1 for receive address.
>
> *address_index*: Addresses are numbered from index 0 in sequentially
> increasing manner. We're currently syncing the max used index for each
> branch between all parties when they connect, but we're open to considering
> removing the index sync and doing the more elegant used-address discovery
> via a gap limit, as discussed in BIP44<https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki#address-gap-limit>.
> We feel 20 might be too low though.
>
> *Wallet high-level description:*
> Each party generates their own extended master keypair and shares the
> extended purpose' public key with the others, which is stored encrypted.
> Each party can generate any of the other's derived public keys, but only
> his own private keys.
>
> *General address generation procedure:*
> When generating an address, each party can independently generate the N
> needed public keys. They do this by deriving the public key in each of the
> different trees, but using the same path. They can then generate the
> multisig script and the corresponding p2sh address. In this way, each path
> corresponds to an address, but the public keys for that address come from
> different trees.
>
> *Receive address case:*
> Each cosigner generates addresses only on his own branch. One of the n
> cosigners wants to receive a payment, and the others are offline. He knows
> the last used index in his own branch, because only he generates addresses
> there. Thus, he can generate the public keys for all of the others using
> the next index, and calculate the needed script for the address.
>
> *Example: *Cosigner #2 wants to receive a payment to the shared wallet.
> His last used index on his own branch is 4. Then, the path for the next
> receive address is m/$purpose/2/1/5. He uses this same path in all of the
> cosigners trees to generate a public key for each one, and from that he
> gets the new p2sh address.
>
> *Change address case:*
> Again, each cosigner generates addresses only on his own branch. One of
> the n cosigners wants to create an outgoing payment, for which he'll need a
> change address. He generates a new address using the same procedure as
> above, but using a separate index to track the used change addresses.
>
> *Example: *Cosigner #5 wants to send a payment from the shared wallet,
> for which he'll need a change address. His last used change index on his
> own branch is 11. Then, the path for the next change address is
> m/$purpose/5/0/12. He uses this same path in all of the cosigners trees to
> generate a public key for each one, and from that he gets the new p2sh
> address.
>
>
> *Transaction creation and signing:*
> When creating a transaction, first one of the parties creates a
> Transaction Proposal. This is a transaction that spends some output stored
> in any of the p2sh multisig addresses (corresponding to any of the
> copayers' branches). This proposal is sent to the other parties, who decide
> if they want to sign. If they approve the proposal, they can generate their
> needed private key for that specific address (using the same path that
> generated the public key in that address, but deriving the private key
> instead), and sign it. Once the proposal reaches m signatures, any cosigner
> can broadcast it to the network, becoming final. The specifics of how this
> proposal is structured, and the protocol to accept or reject it, belong to
> another BIP, in my opinion.
>
> *Final comments:*
> - We're currently lexicographically sorting the public keys for each
> address separately. We've read Mike Belshe's comments about sorting the
> master public keys and then using the same order for all derived addresses,
> but we couldn't think of any benefits of doing that (I mean, the benefits
> of knowing whose public key is which).
> - We originally thought we would need a non-hardened version of purpose
> for the path, because we needed every party to be able to generate all the
> public keys of the others. With the proposed path, is it true that the
> cosigners will be able to generate them, by knowing the extended purpose
> public key for each copayer? (m/purpose')
> - The reason for using separate branches for each cosigner is we don't
> want two of them generating the same address and receiving simultaneous
> payments to it. The ideal case is that each address receives at most one
> payment, requested by the corresponding cosigner.
>
>
> Thoughts?
> Manuel
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/fbf87fbc/attachment.html>

From thomasv1 at gmx.de  Sat Apr 26 10:08:02 2014
From: thomasv1 at gmx.de (Thomas Voegtlin)
Date: Sat, 26 Apr 2014 12:08:02 +0200
Subject: [Bitcoin-development] New BIP32 structure for P2SH multisig
	wallets
In-Reply-To: <CANEZrP3EGNsOgHm0P6fiU1P7OSgTd=pBYooPBrLQGMKPT9b8Qg@mail.gmail.com>
References: <CABQSq2Q98K5zbUbQAqSE4OYez2QuOaWTt+9n5iZmSR2boynf_Q@mail.gmail.com>
	<CANEZrP3EGNsOgHm0P6fiU1P7OSgTd=pBYooPBrLQGMKPT9b8Qg@mail.gmail.com>
Message-ID: <535B8582.80706@gmx.de>



Le 26/04/2014 11:43, Mike Hearn a ?crit :
> I'm not sure I understand why you need any special structure for this at
> all. The way I'd do it is just use regular HD wallets for everyone, of the
> regular form, and then swap the watching keys. Why do people need to be
> given a cosigner index at all, given that they all have unique root keys
> anyway?
> 
> 

I agree with that.

Perhaps the only thing that needs to be standardized is the order of
public keys in the redeem script: I think they should be sorted, so that
the p2sh address does not depend on the order of pubkeys.




From thomasv1 at gmx.de  Sat Apr 26 10:36:51 2014
From: thomasv1 at gmx.de (Thomas Voegtlin)
Date: Sat, 26 Apr 2014 12:36:51 +0200
Subject: [Bitcoin-development] BIP32 "wallet structure" in use? Remove
 it?
In-Reply-To: <CAAS2fgRiXdOBN2gVZ0Xh4kBeOKiS80AjD5+VxJEut9nWt-0WUg@mail.gmail.com>
References: <ljdd29$522$1@ger.gmane.org>	<1398437607.23028.110362141.03111A2A@webmail.messagingengine.com>
	<CAAS2fgRiXdOBN2gVZ0Xh4kBeOKiS80AjD5+VxJEut9nWt-0WUg@mail.gmail.com>
Message-ID: <535B8C43.8030502@gmx.de>

I totally agree with gmaxwell here. The cost of interoperability is too
high. It would force us to freeze all features, and to require a broad
consensus everytime we want to add something new.

In addition, some partial level of compatibility would probably lead to
users not able to recover all their funds when they enter their seed in
another wallet. That is not acceptable, and should be avoided.




Le 25/04/2014 17:46, Gregory Maxwell a ?crit :
> 
> I don't believe that wallet interoperability at this level is possible
> in general except as an explicit compatibility feature. I also don't
> believe that it is a huge loss that it is so.
> 
> The structure of the derivation defines and constrains functionality.
> You cannot be structure compatible unless you have the same features
> and behavior with respect to key management.  To that extent that
> wallets have the same features, I agree its better if they are
> compatible? but unless they are dead software they likely won't keep
> the same features for long.
> 
> Even if their key management were compatible there are many other
> things that go into making a wallet portable between systems; the
> handling of private keys is just one part:  a complete wallet will
> have other (again, functionality specific) metadata.
> 
> I agree that it would be it would be possible to support a
> compatibility mode where a wallet has just a subset of features which
> works when loaded into different systems, but I'm somewhat doubtful
> that it would be widely used. The decision to use that mode comes at
> the wrong time? when you start, not when you need the features you
> chose to disable or when you want to switch programs. But the obvious
> thing to do there is to just specify that a linear chain with no
> further branching is that mode: then that will be the same mode you
> use when someone gives you a master public key and asks you to use it
> for reoccurring changes? so at least the software will get used.
> 
> Compatibility for something like a recovery tool is another matter,
> and BIP32 probably defines enough there that with a bit of extra data
> about how the real wallet worked that recovery can be successful.
> 
> Calling it "vendor lock in" sounds overblown to me.  If someone wants
> to change wallets they can transfer the funds? manual handling of
> private keys is seldom advisable, and as is they're going to lose
> their metadata in any case.  No one expects to switch banks and to
> keep their account records at the new bank. And while less than
> perfect, the price of heavily constraining functionality in order to
> get another result is just too high.
> 
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From tier.nolan at gmail.com  Sat Apr 26 10:48:07 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Sat, 26 Apr 2014 11:48:07 +0100
Subject: [Bitcoin-development] BIP32 "wallet structure" in use? Remove
	it?
In-Reply-To: <535B8C43.8030502@gmx.de>
References: <ljdd29$522$1@ger.gmane.org>
	<1398437607.23028.110362141.03111A2A@webmail.messagingengine.com>
	<CAAS2fgRiXdOBN2gVZ0Xh4kBeOKiS80AjD5+VxJEut9nWt-0WUg@mail.gmail.com>
	<535B8C43.8030502@gmx.de>
Message-ID: <CAE-z3OWcZdQ0J3vNYQ7whGHOZZzMh=wYKxCKtrf1i8VSseZArQ@mail.gmail.com>

Maybe the solution is to have a defined way to import an unknown wallet?

This means that the gap space and a search ordering needs to be defined.

Given a blockchain and a root seed, it should be possible to find all the
addresses for that root seed.

The hierarchy that the wallet actually uses could be anything.


On Sat, Apr 26, 2014 at 11:36 AM, Thomas Voegtlin <thomasv1 at gmx.de> wrote:

> I totally agree with gmaxwell here. The cost of interoperability is too
> high. It would force us to freeze all features, and to require a broad
> consensus everytime we want to add something new.
>
> In addition, some partial level of compatibility would probably lead to
> users not able to recover all their funds when they enter their seed in
> another wallet. That is not acceptable, and should be avoided.
>
>
>
>
> Le 25/04/2014 17:46, Gregory Maxwell a ?crit :
> >
> > I don't believe that wallet interoperability at this level is possible
> > in general except as an explicit compatibility feature. I also don't
> > believe that it is a huge loss that it is so.
> >
> > The structure of the derivation defines and constrains functionality.
> > You cannot be structure compatible unless you have the same features
> > and behavior with respect to key management.  To that extent that
> > wallets have the same features, I agree its better if they are
> > compatible? but unless they are dead software they likely won't keep
> > the same features for long.
> >
> > Even if their key management were compatible there are many other
> > things that go into making a wallet portable between systems; the
> > handling of private keys is just one part:  a complete wallet will
> > have other (again, functionality specific) metadata.
> >
> > I agree that it would be it would be possible to support a
> > compatibility mode where a wallet has just a subset of features which
> > works when loaded into different systems, but I'm somewhat doubtful
> > that it would be widely used. The decision to use that mode comes at
> > the wrong time? when you start, not when you need the features you
> > chose to disable or when you want to switch programs. But the obvious
> > thing to do there is to just specify that a linear chain with no
> > further branching is that mode: then that will be the same mode you
> > use when someone gives you a master public key and asks you to use it
> > for reoccurring changes? so at least the software will get used.
> >
> > Compatibility for something like a recovery tool is another matter,
> > and BIP32 probably defines enough there that with a bit of extra data
> > about how the real wallet worked that recovery can be successful.
> >
> > Calling it "vendor lock in" sounds overblown to me.  If someone wants
> > to change wallets they can transfer the funds? manual handling of
> > private keys is seldom advisable, and as is they're going to lose
> > their metadata in any case.  No one expects to switch banks and to
> > keep their account records at the new bank. And while less than
> > perfect, the price of heavily constraining functionality in order to
> > get another result is just too high.
> >
> >
> ------------------------------------------------------------------------------
> > Start Your Social Network Today - Download eXo Platform
> > Build your Enterprise Intranet with eXo Platform Software
> > Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> > Get Started Now And Turn Your Intranet Into A Collaboration Platform
> > http://p.sf.net/sfu/ExoPlatform
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> >
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/2f2a8298/attachment.html>

From tamas at bitsofproof.com  Sat Apr 26 10:59:41 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Sat, 26 Apr 2014 12:59:41 +0200
Subject: [Bitcoin-development] BIP32 "wallet structure" in use? Remove
	it?
In-Reply-To: <CAE-z3OWcZdQ0J3vNYQ7whGHOZZzMh=wYKxCKtrf1i8VSseZArQ@mail.gmail.com>
References: <ljdd29$522$1@ger.gmane.org>
	<1398437607.23028.110362141.03111A2A@webmail.messagingengine.com>
	<CAAS2fgRiXdOBN2gVZ0Xh4kBeOKiS80AjD5+VxJEut9nWt-0WUg@mail.gmail.com>
	<535B8C43.8030502@gmx.de>
	<CAE-z3OWcZdQ0J3vNYQ7whGHOZZzMh=wYKxCKtrf1i8VSseZArQ@mail.gmail.com>
Message-ID: <FA044E89-AFCE-4E9F-B612-7DE7CBA4BB95@bitsofproof.com>

Yes, it is expensive but possible to discover any funds associated with a seed, provided there are set limits to:

1. gap of address use (e.g. 20)
2. depth of hierarchy (e.g. 6)
3. gap in use of parallel branches (e.g. 0) 

I would pick the limits in brackets above. 

Regards,

Tamas Blummer
http://bitsofproof.com

On 26.04.2014, at 12:48, Tier Nolan <tier.nolan at gmail.com> wrote:

> Maybe the solution is to have a defined way to import an unknown wallet?
> 
> This means that the gap space and a search ordering needs to be defined.
> 
> Given a blockchain and a root seed, it should be possible to find all the addresses for that root seed.
> 
> The hierarchy that the wallet actually uses could be anything.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/e6b66a73/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/e6b66a73/attachment.sig>

From tamas at bitsofproof.com  Sat Apr 26 11:03:14 2014
From: tamas at bitsofproof.com (Tamas Blummer)
Date: Sat, 26 Apr 2014 13:03:14 +0200
Subject: [Bitcoin-development] BIP32 "wallet structure" in use? Remove
	it?
In-Reply-To: <FA044E89-AFCE-4E9F-B612-7DE7CBA4BB95@bitsofproof.com>
References: <ljdd29$522$1@ger.gmane.org>
	<1398437607.23028.110362141.03111A2A@webmail.messagingengine.com>
	<CAAS2fgRiXdOBN2gVZ0Xh4kBeOKiS80AjD5+VxJEut9nWt-0WUg@mail.gmail.com>
	<535B8C43.8030502@gmx.de>
	<CAE-z3OWcZdQ0J3vNYQ7whGHOZZzMh=wYKxCKtrf1i8VSseZArQ@mail.gmail.com>
	<FA044E89-AFCE-4E9F-B612-7DE7CBA4BB95@bitsofproof.com>
Message-ID: <030D56FC-165A-4DC2-B5A2-198A4BE7F4B7@bitsofproof.com>

Actually gap in parallel branches already fails with BIP64 as it starts with m/64'/?. without having m/63'

Regards,

Tamas Blummer
http://bitsofproof.com

On 26.04.2014, at 12:59, Tamas Blummer <tamas at bitsofproof.com> wrote:

> Yes, it is expensive but possible to discover any funds associated with a seed, provided there are set limits to:
> 
> 1. gap of address use (e.g. 20)
> 2. depth of hierarchy (e.g. 6)
> 3. gap in use of parallel branches (e.g. 0) 
> 
> I would pick the limits in brackets above. 
> 
> Regards,
> 
> Tamas Blummer
> http://bitsofproof.com
> 
> On 26.04.2014, at 12:48, Tier Nolan <tier.nolan at gmail.com> wrote:
> 
>> Maybe the solution is to have a defined way to import an unknown wallet?
>> 
>> This means that the gap space and a search ordering needs to be defined.
>> 
>> Given a blockchain and a root seed, it should be possible to find all the addresses for that root seed.
>> 
>> The hierarchy that the wallet actually uses could be anything.
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/16c43082/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/16c43082/attachment.sig>

From jtimon at monetize.io  Sat Apr 26 11:11:37 2014
From: jtimon at monetize.io (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Sat, 26 Apr 2014 13:11:37 +0200
Subject: [Bitcoin-development] BIP - Hash Locked Transaction
In-Reply-To: <CAE-z3OUM6_+qtxzcLg1FkUe8jxCLnJDya=eH9O5+LY_KRrhZpg@mail.gmail.com>
References: <CAE-z3OVsQAya3RDzMTvKNK4hLGQVjFOp6Bseo=xK4ApOdPCh8g@mail.gmail.com>
	<CAE28kUT4rZJHzww5gsdkCyzyKV6q2bV4h4rL_hzAcvhtCpKW4w@mail.gmail.com>
	<20140425201403.GA8994@savin>
	<CAAS2fgQc_UgwYgc0kVso-cL6xqP-2MGg2JoWDHYyAUXhQkyaoA@mail.gmail.com>
	<20140425211426.GD8994@savin>
	<CAE-z3OUM6_+qtxzcLg1FkUe8jxCLnJDya=eH9O5+LY_KRrhZpg@mail.gmail.com>
Message-ID: <CAC1+kJMJOB+OSkL1ZZ_DpGBnYoNPVX7eNR_=adqF6rMaM-LKSA@mail.gmail.com>

Does it make sense to implement a generic Policy interface (abstract
class) which StandardPolicy extends?

Maybe you can then implement a WhitelistPolicy,
ReplacebyFeeStandardPolicy, ReplacebyFeeWhitelistPolicy...

This would make it simpler for miners to implement their own policies
in general.
The following functions (maybe more) could become methods of Policy:

script IsStandard
main IsStandardTx
main AcceptToMemoryPool



From pete at petertodd.org  Sat Apr 26 11:23:12 2014
From: pete at petertodd.org (Peter Todd)
Date: Sat, 26 Apr 2014 07:23:12 -0400
Subject: [Bitcoin-development] Eliminating double-spends with two-party
 self-escrow for high value transactions
Message-ID: <20140426112312.GA17949@savin>

In the majority of high-value transactions the fact that funds will be
sent is known prior to when they actually are. For instance, if Alice is
to meet Bob in person to buy a car or sell some Bitcoins, both parties
know the transaction will probably happen in the near future some time
before it actually does. Existing escrow solutions already take
advantage of this fact; for instance Localbitcoins provides sellers the
ability to escrow their funds with Localbitcoins prior to when the funds
are released to the buyer.

However with nLockTime a third-party escrow agent is *not* required.
Instead prior to Alice sending the funds to the escrow address, she has
Bob sign a refund transaction that unlocks at some time in the future.
Generally the transaction does go through, and Alice and Bob sign a
second transaction sending the funds to Bob. Sometimes it doesn't, and
Alice either gets Bob to sign a transaction sending the funds back to
her, or in the worst-case, just waits for the timeout to elapse.

Note that this technique can be used in addition to a third-party escrow
agent - the third-party then only plays a role in exceptional
circumstances.


Implementation sketch: Mycelium Local Trader
--------------------------------------------

The Mycelium Local Trader(1) is functionality built into the Mycelium
Android wallet that helps users trade cash for bitcoins by finding
traders in their local area. To attempt to prevent double-spends it uses
"transaction confidence", a technique that attempts to determine how
many nodes on the network a given transaction has propagated too. Of
course this technique is fragile and vulnerable to many attacks.

Local Trader already has pre-meetup buyer to seller communication built
in. Within the application the buyers and sellers communicate and
negotiate the amount and price of the Bitcoins prior to arranging a
meeting place. We can extend this to self-escrow as follows:

1) Alice publishes her offer to sell Bitcoins for cash.

2) Bob replies to the offer with an unused pubkey, B.

3) Alice creates tx1 paying a CHECKMULTISIG scriptPubKey spendable by
   the co-operation of her pubkey, A, and Bob's pubkey, B. She signs tx1
   but does not publish it.

4) Alice creates tx_refund which is nLockTime'd until some point in the
   future and returns the output of tx1 to an address she controls. Note
   how tx_refund depends on the signed tx1.

5) Alice sends Bob the hash of tx_refund for him to sign. As Bob does
   not have the actual transaction Bob can't selectivly target tx1 for a
   transaction mutability attack. Bob is free to sign the hash as the
   pubkey has never been used before. Note that the tx_refund hash
   Bob signs should be calculated with SIGHASH_SINGLE|SIGHASH_ANYONECANPAY
   to allow Alice to, for instance, add fees.

6) Bob replies with the signature.

7) Alice checks the validity of the signature, and if satisfied,
   publishes tx1 to the network.

8) Alice and/or Bob travel to actually meet in person. If this takes
   time t the probability of a block being generated during that
   time is P=1-e^(1/10mins*t) For instance, with a travel time of 30
   minutes we get 95% success, 1 hour 99.75%, and 2 hours 99.999%
   success.

9a) If the cash is handed over successfully Alice signs a
    SIGHASH_SINGLE|SIGHASH_ANYONECANPAY signature for the tx1 output
    spending the funds to a scriptPubKey specified by Bob and gives that
    signature to him.

10a) Bob creates a transaction spending the output, adds Alice's
     signature to it, and finally signs it himself. He broadcasts this
     transaction to the network, completing the transfer.

9b) If the cash is NOT handed over successfully Alice and Bob can either
    co-operate to cancel the transaction immediately, sending the
    escrowed funds back to Alice, or Alice can wait until the timeout to
    use the signature she had Bob prepare in advance.


While the above is relatively complex, from the user's point of view the
process is quite similar to how Mycelium already works:

Alice: Publish offer -> Accept offer  -> Travel -> Release funds
Bob:   Browse ads    -> Reserve funds -> Travel -> Accept

The chief difference being that the funds for the transaction have been
reserved, and if the transaction does not go through, will not be
unlocked without the co-operation of the other party, or the expiration
of the timeout.


Transaction Malleability
------------------------

While the above is fairly secure if transactions aren't being mutated
en-mass, better protections would be desirable. First of all adding a
third-party escrow to the two-party escrow is a prudent last ditch
measure to ensure that if malleability is an issue the third-party can
release locked funds manually; note how SIGHASH_SINGLE is used as
opposed to SIGHASH_NONE to prevent that third-party from having access
to the funds. Secondly a future soft-fork such as Pieter Wuille's
BIP62(2) can eliminate malleability. In particular, a soft-fork that
enabled the creation of signatures that did *not* include the txin txid
would be particularly valuable; in step 4 above Bob's refund signature
signed over the scriptPubKey and nLockTime only would cover all possible
cases whre a refund would be needed, such as accidental multiple
payments and previously unknown sources of malleability.


1) http://www.reddit.com/r/Bitcoin/comments/236k5d/mycelium_local_trader_is_now_available/

2) https://github.com/bitcoin/bips/blob/master/bip-0062.mediawiki

-- 
'peter'[:-1]@petertodd.org
00000000000000009c143a1773a5dc24477ec151689bc78ffdd00a232bd533c8
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/97b21175/attachment.sig>

From tier.nolan at gmail.com  Sat Apr 26 11:31:44 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Sat, 26 Apr 2014 12:31:44 +0100
Subject: [Bitcoin-development] BIP - Hash Locked Transaction
In-Reply-To: <CAC1+kJMJOB+OSkL1ZZ_DpGBnYoNPVX7eNR_=adqF6rMaM-LKSA@mail.gmail.com>
References: <CAE-z3OVsQAya3RDzMTvKNK4hLGQVjFOp6Bseo=xK4ApOdPCh8g@mail.gmail.com>
	<CAE28kUT4rZJHzww5gsdkCyzyKV6q2bV4h4rL_hzAcvhtCpKW4w@mail.gmail.com>
	<20140425201403.GA8994@savin>
	<CAAS2fgQc_UgwYgc0kVso-cL6xqP-2MGg2JoWDHYyAUXhQkyaoA@mail.gmail.com>
	<20140425211426.GD8994@savin>
	<CAE-z3OUM6_+qtxzcLg1FkUe8jxCLnJDya=eH9O5+LY_KRrhZpg@mail.gmail.com>
	<CAC1+kJMJOB+OSkL1ZZ_DpGBnYoNPVX7eNR_=adqF6rMaM-LKSA@mail.gmail.com>
Message-ID: <CAE-z3OXmsK2WLSxzHjbvPUdpKSE2J_nVXkWF=J_9+ijruV-U4w@mail.gmail.com>

On Sat, Apr 26, 2014 at 12:11 PM, Jorge Tim?n <jtimon at monetize.io> wrote:

> script IsStandard
> main IsStandardTx
> main AcceptToMemoryPool
>

Accept to memory pool could probably be replaced with an
IsStandard(scriptPubKey, scriptSig) method.  The only "isStandard" part of
the process is the check inputs method (and AcceptToMemoryPool calls
IsStandardTx).

The standard script methods at the moment are also used for extracting
addresses for wallet management.

The standard script check could be made easier if it just checked for
pattern matches.

Is there any objections to this change, other than it doesn't go far enough?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/1255bbc4/attachment.html>

From manu at bitpay.com  Sat Apr 26 11:36:30 2014
From: manu at bitpay.com (Manuel Araoz)
Date: Sat, 26 Apr 2014 08:36:30 -0300
Subject: [Bitcoin-development] New BIP32 structure for P2SH multisig
	wallets
In-Reply-To: <CANEZrP3EGNsOgHm0P6fiU1P7OSgTd=pBYooPBrLQGMKPT9b8Qg@mail.gmail.com>
References: <CABQSq2Q98K5zbUbQAqSE4OYez2QuOaWTt+9n5iZmSR2boynf_Q@mail.gmail.com>
	<CANEZrP3EGNsOgHm0P6fiU1P7OSgTd=pBYooPBrLQGMKPT9b8Qg@mail.gmail.com>
Message-ID: <CABQSq2Sgb+JahuL+PTBa6y4OmupUVrg=TQqpQBVJDG96DSj1hA@mail.gmail.com>

On Apr 26, 2014 6:43 AM, "Mike Hearn" <mike at plan99.net> wrote:
>
> I'm not sure I understand why you need any special structure for this at
all. The way I'd do it is just use regular HD wallets for everyone, of the
regular form, and then swap the watching keys. Why do people need to be
given a cosigner index at all, given that they all have unique root keys
anyway?

I tried to explain that here:

The reason for using separate branches for each cosigner is we don't want
two of them generating the same address and receiving simultaneous payments
to it. The ideal case is that each address receives at most one payment,
requested by the corresponding cosigner.

To clarify, the problem the cosigner_index is trying to solve is race
conditions when receiving payments. Remember that we can't assume all
cosigners to be online at all times. Let's assume we use one shared branch
for everyone. Then two cosigners could need a new receiving address at the
same time, and get the next unused address on that branch. They then each
pass the same address to their payers, and we can get two payments to the
same address. Monitoring balances is not enough in this case because a
cosigner can never know when the others are generating a new address.
Separating branches and having each cosigner only use one branch makes this
problem go away.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/ef3434c6/attachment.html>

From gacrux at gmail.com  Sat Apr 26 12:15:19 2014
From: gacrux at gmail.com (Gareth Williams)
Date: Sat, 26 Apr 2014 22:15:19 +1000
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>	<CAC1+kJNE+k4kcTj3Ap0-A=PdD1=+-k5hN4431Z99A+S7M3=BoQ@mail.gmail.com>	<CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>	<5359E509.4080907@gmail.com>	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>	<535A60FE.10209@gmail.com>
	<CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>
Message-ID: <535BA357.6050607@gmail.com>

On 26/04/14 01:28, Mike Hearn wrote:
>     When you have a *bitcoin* TXn buried under 100 blocks you can be damn
> 
>     sure that money is yours - but only because the rules for interpreting
>     data in the blockchain are publicly documented and (hopefully)
>     immutable. If they're mutable then the PoW alone gives me no confidence
>     that the money is really mine, and we're left with a much less useful
>     system. This should be more sacred than the 21m limit.
> 
> 
> Well, I think we should avoid the term "sacred" - nothing is sacred
> because we're not building a religion here, we're engineering a tool.

Are you sure there isn't room for just a touch of "religion"? :) As you
state below, all that protects my money from confiscation is strong
group consensus that it's mine - "a social rule, not a mathematical one."

Everything ultimately balances on that. People being a little bit
"religious" about following the protocol faithfully are the linchpin of
Bitcoin security, not PoW.


> Consider a world in which 1 satoshi is too valuable to represent some
> kinds of transactions, so those transactions stop happening even though
> we all agree they're useful. The obvious solution is to change the rules
> so there can be 210 million coins and 10x everyones UTXOs at some
> pre-agreed flag day. We probably wouldn't phrase it like that, it's
> easier for people to imagine what's happening if it's phrased as "adding
> more places after the decimal point" or something, but at the protocol
> level coins are represented using integers, so it'd have to be
> implemented as a multiply.

Agree.


> Would this be a violation of the social contract? A violation of all
> that is sacred? I don't think so, it'd just be sensible engineering and
> there'd be strong consensus for that exactly because 21 million /is/ so
> arbitrary. If all balances and prices multiply 100-fold overnight, no
> wealth is reallocated which would be the /actual/ violation of the
> social contract: we just get more resolution for setting prices.

Wholeheartedly agree. "21 million" is just shorthand for the
preservation of artificial scarcity. No rational person could argue that
what you described violates the social contract.

I do see what you're driving at - that there exists a situation where it
would be justified to change the interpretation of data in existing blocks.

But, please consider: if I controlled a single UTXO worth 1% of the
total money supply before your change, the network would still recognise
that I control a single UTXO worth 1% of the total money supply after
your change. So you haven't really changed the interpretation of
existing blocks at all there. It's just semantics :)

Contrast this with invalidating a coinbase before maturity, which
clearly has a very real impact. At the point the vote passes, you're ***
sidestepping the PoW mechanism and rewriting the meaning of an existing,
validated block ***.


> So. The thing that protects your money from confiscation is not proof of
> work. PoW is just a database synchronisation mechanism. The thing that
> protects your money from confiscation is a strong group consensus that
> theft is bad. But that's a social rule, not a mathematical rule.

Agree. That's my whole point :)

I recognise my security is in the hands of the users (the economic
majority.) Tomorrow they could all decide to patch their nodes to
reallocate my UTXOs, and there's not a damn thing I could do about it,
PoW and private keys notwithstanding. I must simply trust that they will
not do this.

So we can have:
1. "Neutral Bitcoin", where everyone is committed to prevention of theft
by following a simple set of mathematical rules which treat all
validated blocks as equal.
Or:
2. "Political Bitcoin", where everyone is committed to prevention of
theft based on human judgements, and the contents of some validated
blocks are more equal than others.

I recognise that the latter allows for a lot of flexibility in combating
fraud, but with (substantial) due respect, it isn't Bitcoin.

-Gareth

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/c5fcc01b/attachment.sig>

From gavinandresen at gmail.com  Sat Apr 26 13:23:03 2014
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Sat, 26 Apr 2014 09:23:03 -0400
Subject: [Bitcoin-development] Error handling in payment protocol
	(BIP-0070 and BIP-0072)
In-Reply-To: <535ABD5D.7070509@jrn.me.uk>
References: <535ABD5D.7070509@jrn.me.uk>
Message-ID: <CABsx9T3boaWYuY8S-Xz=bAxe+ne5iP7m8AnuciaAOmDx_3D4Fg@mail.gmail.com>

>
> The main area of concern is handling unexpected problems while sending
> the Payment message, or receiving the corresponding PaymentACK message.
> For example, in case of a transport layer failure or non-200 HTTP status
> code while sending the Payment message, what should the wallet software
> do next? Is it safe to re-send the Payment message? I'd propose that for
> any transport failure or 500 status code, the client retries after a
> delay (suggested at 30-60 seconds). For 400 status codes, the request
> should not be repeated, and as such the user should be alerted and a
> copy of the Payment message saved to be resent later.
>

Why does error handling have to be standardized?

I generally think that wallet software should be free to do whatever gives
the user the best experience, so I'm in favor of restricting BIPs to things
that must be standardized so that different implementations inter-operate.


> For 300 (redirect and similar) status codes, is it considered safe to
> follow redirects? I think we have to, but good to make it clear in the
> specification.
>

Referencing whatever RFCs defines how to fetch URLs would be the best way
to do this. Submit a pull request.


>
> On the merchant's side; I think it would be useful for there to be
> guidance for handling of errors processing Payment messages. I'd suggest
> that Payment messages should have a fixed maximum size to avoid merchant
> systems theoretically having to accept files of any size; 10MB would
> seem far larger than in any way practical, and therefore a good maximum
> size?


PaymentRequests are limited to 50,000 bytes. I can't think of a reason why
Payment messages would need to be any bigger than that. Submit a pull
request to the existing BIP.


> A defined maximum time to wait (to avoid DDoS via connection
> holding) might be useful too, although I'd need to do measurements to
> find what values are tolerable.
>

Implementation detail that doesn't belong in the spec, in my humble opinion.


> I would like to have the protocol state that merchant systems should
> handle repeatedly receiving the same Payment message, and return an
> equivalent (if not identical) PaymentACK to each. This is important in
> case of a network failure while the client is sending the Payment
> message, as outlined above.
>

I think this should be left to implementations to work out.


> Lastly, I'm wondering about potential timing issues with transactions;
> if a merchant system wants to see confirmation of a transaction before
> sending a PaymentACK...


.... not a good idea. The user should get feedback right away. Poking a
"pay now" button and then waiting more than a second or three to get "your
payment has been received and is being processed" is terrible UI.


-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/612df373/attachment.html>

From stick at gk2.sk  Sat Apr 26 12:24:55 2014
From: stick at gk2.sk (Pavol Rusnak)
Date: Sat, 26 Apr 2014 14:24:55 +0200
Subject: [Bitcoin-development] BIP32 "wallet structure" in use? Remove
 it?
In-Reply-To: <CAE-z3OWcZdQ0J3vNYQ7whGHOZZzMh=wYKxCKtrf1i8VSseZArQ@mail.gmail.com>
References: <ljdd29$522$1@ger.gmane.org>	<1398437607.23028.110362141.03111A2A@webmail.messagingengine.com>	<CAAS2fgRiXdOBN2gVZ0Xh4kBeOKiS80AjD5+VxJEut9nWt-0WUg@mail.gmail.com>	<535B8C43.8030502@gmx.de>
	<CAE-z3OWcZdQ0J3vNYQ7whGHOZZzMh=wYKxCKtrf1i8VSseZArQ@mail.gmail.com>
Message-ID: <535BA597.70708@gk2.sk>

On 04/26/2014 12:48 PM, Tier Nolan wrote:
> Maybe the solution is to have a defined way to import an unknown wallet?

That is nonsense. There is no way how to import the wallet if you don't
know its structure.

> Given a blockchain and a root seed, it should be possible to find all the
> addresses for that root seed.

Unless the keyspace is almost infinite because:

> The hierarchy that the wallet actually uses could be anything.

-- 
Best Regards / S pozdravom,

Pavol Rusnak <stick at gk2.sk>



From pieter.wuille at gmail.com  Sat Apr 26 13:41:56 2014
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Sat, 26 Apr 2014 15:41:56 +0200
Subject: [Bitcoin-development] BIP32 "wallet structure" in use? Remove
	it?
In-Reply-To: <535BA597.70708@gk2.sk>
References: <ljdd29$522$1@ger.gmane.org>
	<1398437607.23028.110362141.03111A2A@webmail.messagingengine.com>
	<CAAS2fgRiXdOBN2gVZ0Xh4kBeOKiS80AjD5+VxJEut9nWt-0WUg@mail.gmail.com>
	<535B8C43.8030502@gmx.de>
	<CAE-z3OWcZdQ0J3vNYQ7whGHOZZzMh=wYKxCKtrf1i8VSseZArQ@mail.gmail.com>
	<535BA597.70708@gk2.sk>
Message-ID: <CAPg+sBjkrG=ZeKxweBzCHqGDMhh8CN0cFQi2g7G-qjRxicQa4g@mail.gmail.com>

On Sat, Apr 26, 2014 at 2:24 PM, Pavol Rusnak <stick at gk2.sk> wrote:
> On 04/26/2014 12:48 PM, Tier Nolan wrote:
>> Maybe the solution is to have a defined way to import an unknown wallet?
>
> That is nonsense. There is no way how to import the wallet if you don't
> know its structure.

I agree. Especially when multiple chains are combined (multisig) for
P2SH usage, defining things like a gap limit becomes impossible
without knowing some metadata.

However, perhaps it is possible to define something like "BIP44
import-compatible", meaning that the application doesn't actually
support all of BIP44 features, but does guarantee not losing any funds
when imported? Similar things could be done for other purpose types.

-- 
Pieter



From jgarzik at bitpay.com  Sat Apr 26 16:03:31 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Sat, 26 Apr 2014 12:03:31 -0400
Subject: [Bitcoin-development] BIP32 "wallet structure" in use? Remove
	it?
In-Reply-To: <CAAS2fgRiXdOBN2gVZ0Xh4kBeOKiS80AjD5+VxJEut9nWt-0WUg@mail.gmail.com>
References: <ljdd29$522$1@ger.gmane.org>
	<1398437607.23028.110362141.03111A2A@webmail.messagingengine.com>
	<CAAS2fgRiXdOBN2gVZ0Xh4kBeOKiS80AjD5+VxJEut9nWt-0WUg@mail.gmail.com>
Message-ID: <CAJHLa0MN=guCAzzJR7ex5dVjUQLJynaYBR3M4De5S0Ug5KBHhw@mail.gmail.com>

It is very young in bitcoin's life.  We don't know what features will
work out best, or need to be radically changed after initial
deployment in the field.

Loose coordination is good.  Good ideas will spread on their own.
Users will demand compatibility with certain features, and fail to
care incompatibilities in other features.

Tight interoperability at this stage is too confining.




On Fri, Apr 25, 2014 at 11:46 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> On Fri, Apr 25, 2014 at 7:53 AM, Jim <jim618 at fastmail.co.uk> wrote:
>> Oh dear.
>>
>> For reasons that are perfectly reasonable we are close to losing any chance of intra-client HD compatibility for BIP32 wallets.
>>
>> In the next 12 months there will probably be collectively millions of users of our new wallets. I don't want them to suffer from vendor lockin.
>>
>> Can we not agree on a lowest common denominator that we agree to support ?
>> An "HD Basic" if you like.
>> For entry level users we can keep things simple and any "HD Basic" bitcoin will be fully interoperable.
>>
>> Sure, if you use anything fancy you'll be locked in to a particular wallet but a lot of users just want somewhere safe to put their bitcoin, spend it and receive it.
>>
>> I appreciate standising everything is very difficult (if not impossible) but if we don't have a minimum of interoperability I think we'll do our users a disservice.
>
> I don't believe that wallet interoperability at this level is possible
> in general except as an explicit compatibility feature. I also don't
> believe that it is a huge loss that it is so.
>
> The structure of the derivation defines and constrains functionality.
> You cannot be structure compatible unless you have the same features
> and behavior with respect to key management.  To that extent that
> wallets have the same features, I agree its better if they are
> compatible-- but unless they are dead software they likely won't keep
> the same features for long.
>
> Even if their key management were compatible there are many other
> things that go into making a wallet portable between systems; the
> handling of private keys is just one part:  a complete wallet will
> have other (again, functionality specific) metadata.
>
> I agree that it would be it would be possible to support a
> compatibility mode where a wallet has just a subset of features which
> works when loaded into different systems, but I'm somewhat doubtful
> that it would be widely used. The decision to use that mode comes at
> the wrong time-- when you start, not when you need the features you
> chose to disable or when you want to switch programs. But the obvious
> thing to do there is to just specify that a linear chain with no
> further branching is that mode: then that will be the same mode you
> use when someone gives you a master public key and asks you to use it
> for reoccurring changes-- so at least the software will get used.
>
> Compatibility for something like a recovery tool is another matter,
> and BIP32 probably defines enough there that with a bit of extra data
> about how the real wallet worked that recovery can be successful.
>
> Calling it "vendor lock in" sounds overblown to me.  If someone wants
> to change wallets they can transfer the funds-- manual handling of
> private keys is seldom advisable, and as is they're going to lose
> their metadata in any case.  No one expects to switch banks and to
> keep their account records at the new bank. And while less than
> perfect, the price of heavily constraining functionality in order to
> get another result is just too high.
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From jrn at jrn.me.uk  Sat Apr 26 16:45:49 2014
From: jrn at jrn.me.uk (Ross Nicoll)
Date: Sat, 26 Apr 2014 17:45:49 +0100
Subject: [Bitcoin-development] Error handling in payment protocol
	(BIP-0070 and BIP-0072)
In-Reply-To: <CABsx9T3boaWYuY8S-Xz=bAxe+ne5iP7m8AnuciaAOmDx_3D4Fg@mail.gmail.com>
References: <535ABD5D.7070509@jrn.me.uk>
	<CABsx9T3boaWYuY8S-Xz=bAxe+ne5iP7m8AnuciaAOmDx_3D4Fg@mail.gmail.com>
Message-ID: <535BE2BD.7010303@jrn.me.uk>

Dear Gavin, Andreas,

I'd see standardisation (or at least suggested standards) for error
handling as positive for consistency of user experience. I do see what
you mean about over-specification, however.

Thanks for the feedback, I've taken the main points and created two pull
requests:

BIP-0070: https://github.com/bitcoin/bips/pull/54/
BIP-0072: https://github.com/bitcoin/bips/pull/55/

Please tell me if these need any further work.

Ross

On 26/04/14 14:23, Gavin Andresen wrote:
>> The main area of concern is handling unexpected problems while sending
>> the Payment message, or receiving the corresponding PaymentACK message.
>> For example, in case of a transport layer failure or non-200 HTTP status
>> code while sending the Payment message, what should the wallet software
>> do next? Is it safe to re-send the Payment message? I'd propose that for
>> any transport failure or 500 status code, the client retries after a
>> delay (suggested at 30-60 seconds). For 400 status codes, the request
>> should not be repeated, and as such the user should be alerted and a
>> copy of the Payment message saved to be resent later.
>>
> Why does error handling have to be standardized?
>
> I generally think that wallet software should be free to do whatever gives
> the user the best experience, so I'm in favor of restricting BIPs to things
> that must be standardized so that different implementations inter-operate.
>
>
>> For 300 (redirect and similar) status codes, is it considered safe to
>> follow redirects? I think we have to, but good to make it clear in the
>> specification.
>>
> Referencing whatever RFCs defines how to fetch URLs would be the best way
> to do this. Submit a pull request.
>
>
>> On the merchant's side; I think it would be useful for there to be
>> guidance for handling of errors processing Payment messages. I'd suggest
>> that Payment messages should have a fixed maximum size to avoid merchant
>> systems theoretically having to accept files of any size; 10MB would
>> seem far larger than in any way practical, and therefore a good maximum
>> size?
>
> PaymentRequests are limited to 50,000 bytes. I can't think of a reason why
> Payment messages would need to be any bigger than that. Submit a pull
> request to the existing BIP.
>
>
>> A defined maximum time to wait (to avoid DDoS via connection
>> holding) might be useful too, although I'd need to do measurements to
>> find what values are tolerable.
>>
> Implementation detail that doesn't belong in the spec, in my humble opinion.
>
>
>> I would like to have the protocol state that merchant systems should
>> handle repeatedly receiving the same Payment message, and return an
>> equivalent (if not identical) PaymentACK to each. This is important in
>> case of a network failure while the client is sending the Payment
>> message, as outlined above.
>>
> I think this should be left to implementations to work out.
>
>
>> Lastly, I'm wondering about potential timing issues with transactions;
>> if a merchant system wants to see confirmation of a transaction before
>> sending a PaymentACK...
>
> .... not a good idea. The user should get feedback right away. Poking a
> "pay now" button and then waiting more than a second or three to get "your
> payment has been received and is being processed" is terrible UI.
>
>




From mark at monetize.io  Sat Apr 26 17:00:23 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Sat, 26 Apr 2014 10:00:23 -0700
Subject: [Bitcoin-development] BIP - Selector Script
In-Reply-To: <CAE-z3OUKwpKcX27N1PKqXEHOKh+r6UD3FHioRt6TMMLVPoLjOw@mail.gmail.com>
References: <CAE-z3OXe4fG2S274qcgpGsXA=ZhhJQneEDqLYvNWZT8U9y_NLA@mail.gmail.com>	<201404251917.49826.luke@dashjr.org>	<CAE-z3OX5_POg9kFoz-LsGhuLRA6qFPcNXoECLhewe+o-+Pw2gA@mail.gmail.com>	<201404252026.56765.luke@dashjr.org>
	<CAE-z3OUKwpKcX27N1PKqXEHOKh+r6UD3FHioRt6TMMLVPoLjOw@mail.gmail.com>
Message-ID: <535BE626.5050109@monetize.io>

I think you're misunderstanding the point. The way you get IsStandard
changed is that you make an application-oriented BIP detailing the use
of some new standard transaction type (say, generalized hash-locked
transactions for atomic swaps). We then discuss that proposal for its
technical merits and reach consensus about the best way to do, for
example, cross-chain atomic swaps. It is then implemented.

So please, focus on some BIP(s) detailing applications of hash-locked
transactions, and we will engage more constructively -- I promise that I
will as cross-chain atomic swaps scratch my itch as well.

On 04/25/2014 01:48 PM, Tier Nolan wrote:
> On Fri, Apr 25, 2014 at 9:26 PM, Luke-Jr <luke at dashjr.org
> <mailto:luke at dashjr.org>> wrote:
> 
>     They define standard for interoperability between
>     software. So, if you want nodes to relay these transactions, you need to
>     convince them, not merely write a BIP for the transaction format.
> 
> 
> I agree with you in theory, each miner could decide their inclusion
> rules for themselves.
> 
> In practice, if the reference client is updated, then most miners will
> accept those transactions.  In addition, it would eventually propagate
> to alt-coins (or at least the supported ones).
> 
> I could simply submit the changes as a pull request for the reference
> client, but I was hoping that by doing it this way, it would increase
> the odds of it being accepted.
>  
> 
>     Defining a BIP for cross-chain trading would be one way to do that.
> 
> 
> I don't think it quite requires the same coordination in the short
> term.  I could write up the sequence as an info BIP.
> 
>     The malleability "issue" has been known for years.
>     I wouldn't expect any special effort made to fix it...
> 
> 
> It is possible to tweak the protocol so that it still works.  However,
> it means that 3rd parties are required (that could go in the BIP too).
>  
> 
>     There is some ongoing discussion of a softfork to basically redo the
>     Script
>     language entirely, but it will take quite a bit of time and
>     development before
>     we'll see it in the wild.
> 
> 
> Implementing multi-P2SH gets a lot of the benefits of MAST, in terms of
> efficiency.
>  
> 
> 
>     Luke
> 
>     P.S. Did the BIP editor assign these numbers? If not, best to keep them
>     numberless until assigned, to avoid confusion when people Google the
>     real BIP
>     44 and 45...
> 
> 
> Not yet, but that is just my personal repo.  I did email gmaxwell, but
> he said that they can't be assigned until some discussion has happened.
>  
> I take your point that the name appears in the link though, so could
> cause issues with searching.
> 
> 
>     ------------------------------------------------------------------------------
>     Start Your Social Network Today - Download eXo Platform
>     Build your Enterprise Intranet with eXo Platform Software
>     Java Based Open Source Intranet - Social, Extensible, Cloud Ready
>     Get Started Now And Turn Your Intranet Into A Collaboration Platform
>     http://p.sf.net/sfu/ExoPlatform
>     _______________________________________________
>     Bitcoin-development mailing list
>     Bitcoin-development at lists.sourceforge.net
>     <mailto:Bitcoin-development at lists.sourceforge.net>
>     https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> 
> 
> 
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> 
> 
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From mike at plan99.net  Sat Apr 26 17:36:26 2014
From: mike at plan99.net (Mike Hearn)
Date: Sat, 26 Apr 2014 19:36:26 +0200
Subject: [Bitcoin-development] Error handling in payment protocol
 (BIP-0070 and BIP-0072)
In-Reply-To: <CABsx9T3boaWYuY8S-Xz=bAxe+ne5iP7m8AnuciaAOmDx_3D4Fg@mail.gmail.com>
References: <535ABD5D.7070509@jrn.me.uk>
	<CABsx9T3boaWYuY8S-Xz=bAxe+ne5iP7m8AnuciaAOmDx_3D4Fg@mail.gmail.com>
Message-ID: <CANEZrP3TuN2LFi3_7z29JncojbOZX=C-1BsJMp1AJ56k8wjgBg@mail.gmail.com>

>
> PaymentRequests are limited to 50,000 bytes. I can't think of a reason why
> Payment messages would need to be any bigger than that. Submit a pull
> request to the existing BIP.
>

In future it might be nice to have images and things in the payment
requests, to make UIs look prettier. But with the current version 50kb
should be plenty indeed.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/cd289a1c/attachment.html>

From jrn at jrn.me.uk  Sat Apr 26 17:43:50 2014
From: jrn at jrn.me.uk (Ross Nicoll)
Date: Sat, 26 Apr 2014 18:43:50 +0100
Subject: [Bitcoin-development] Error handling in payment protocol
 (BIP-0070 and BIP-0072)
In-Reply-To: <CANEZrP3TuN2LFi3_7z29JncojbOZX=C-1BsJMp1AJ56k8wjgBg@mail.gmail.com>
References: <535ABD5D.7070509@jrn.me.uk>	<CABsx9T3boaWYuY8S-Xz=bAxe+ne5iP7m8AnuciaAOmDx_3D4Fg@mail.gmail.com>
	<CANEZrP3TuN2LFi3_7z29JncojbOZX=C-1BsJMp1AJ56k8wjgBg@mail.gmail.com>
Message-ID: <535BF056.6080804@jrn.me.uk>

I'd be very cautious of security implications of embedding files into
the payment request. Even file formats one would presume safe, such as
images, have had security issues (i.e.
https://technet.microsoft.com/library/security/ms11-006 )

Longer term I was wondering about embedding the PaymentRequest into web
pages directly via the <object> tag, which could eliminate need for
BIP0072 and potentially improve user interface integration that way.
Obviously this would require browser plugins, however.

Ross

On 26/04/14 18:36, Mike Hearn wrote:
>> PaymentRequests are limited to 50,000 bytes. I can't think of a reason why
>> Payment messages would need to be any bigger than that. Submit a pull
>> request to the existing BIP.
>>
> In future it might be nice to have images and things in the payment
> requests, to make UIs look prettier. But with the current version 50kb
> should be plenty indeed.
>




From author at anonymousbitcoinbook.com  Sat Apr 26 17:29:00 2014
From: author at anonymousbitcoinbook.com (Kristov Atlas)
Date: Sat, 26 Apr 2014 13:29:00 -0400
Subject: [Bitcoin-development] Compatibility Bitcoin-Qt with Tails
In-Reply-To: <CA+s+GJARfPhMo8ucE7E40bE890NsuzuWPq1DQuK6ZVMvps0LVQ@mail.gmail.com>
References: <CA+s+GJARfPhMo8ucE7E40bE890NsuzuWPq1DQuK6ZVMvps0LVQ@mail.gmail.com>
Message-ID: <535BECDC.9070804@anonymousbitcoinbook.com>

On 04/25/2014 04:27 PM, Wladimir wrote:
> Kristov,
> I've modified the gitian build so that it builds against Qt 4.6
> instead of Qt 4.8 in this pull request:
> https://github.com/bitcoin/bitcoin/pull/4094
>
> A test build of master with that pulls gitian descriptor is available:
>
> https://download.visucore.com/bitcoin/linux-4765b8c-gitian-2d48b96.tar.gz
> https://download.visucore.com/bitcoin/linux-4765b8c-gitian-2d48b96.tar.gz.sig
>
> These bitcoin-qt executables *should* work on Debian Squeeze / Tails
> Linux. Let me know if it is the case.
>
>
Hey Wladimir,

Thanks for building this binary. The initial problem with Qt was 
resolved, and I was able to load the GUI that chooses my datadir. After 
choosing the default datadir, however, it segfaulted.

The segfault came after the usual message that I get when running 
Bitcoin Core in Tails, which is the "sendto: Operation not permitted" 
message since Core will not be able to connect to the internet without 
going through Tails' Tor SOCKS proxy. When I specify the SOCKS proxy 
through the command-line, I get a brief flash of the GUI before it 
segfaults again.

The "Bus::open" and "IBusInputContext::createInputContext" messages are 
atypical and might be related to the segfault.

Sample terminal output for latest Tails (0.23):

amnesia at amnesia:~/linux-4765b8c-gitian-2d48b96/32$ ./bitcoin-qt
Bus::open: Can not get ibus-daemon's address.
IBusInputContext::createInputContext: no connection to ibus-daemon
sendto: Operation not permitted
Segmentation fault
amnesia at amnesia:~/linux-4765b8c-gitian-2d48b96/32$ ./bitcoin-qt
Segmentation fault
amnesia at amnesia:~/linux-4765b8c-gitian-2d48b96/32$ ./bitcoin-qt -proxy=127.0.0.1:9050
Segmentation fault


-Kristov



From mike at plan99.net  Sat Apr 26 18:07:58 2014
From: mike at plan99.net (Mike Hearn)
Date: Sat, 26 Apr 2014 20:07:58 +0200
Subject: [Bitcoin-development] Eliminating double-spends with two-party
 self-escrow for high value transactions
In-Reply-To: <20140426112312.GA17949@savin>
References: <20140426112312.GA17949@savin>
Message-ID: <CANEZrP3VpsW_RNWUpw-gsQhXqLF4deOJJPHxGJUc8Gx_y0B9wA@mail.gmail.com>

What stops the buyer just always waiting to get their money back?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/9de432a1/attachment.html>

From mike at plan99.net  Sat Apr 26 18:18:36 2014
From: mike at plan99.net (Mike Hearn)
Date: Sat, 26 Apr 2014 20:18:36 +0200
Subject: [Bitcoin-development] Proof-of-Stake branch?
In-Reply-To: <1398422100.68438.YahooMailNeo@web160505.mail.bf1.yahoo.com>
References: <1398382335.20219.YahooMailNeo@web160503.mail.bf1.yahoo.com>
	<20140425073334.GV3180@nl.grid.coop>
	<D95AE4AB-DC67-4136-901A-D8F712EB7357@acidhou.se>
	<1398422100.68438.YahooMailNeo@web160505.mail.bf1.yahoo.com>
Message-ID: <CANEZrP36FOqU_+QjjsGiWtbqHg4zQnwz=F+51CE4ngFXb=k+0Q@mail.gmail.com>

Please be aware that your emails are being spamfoldered by Gmail. This is
because Yahoo has enabled DMARC enforcement for mail sent from Yahoo and
that renders it incompatible with Sourceforge mailing lists.

There are two fixes:

1) Don't use Yahoo.

2) The real fix which is, we should stop using Sourceforge mailing list
software

Fundamentally all Yahoo is saying with their policy is that rewriting of
mails sent from their service is not allowed. This is a highly reasonable
policy, akin to forbidding SSL MITM attacks, but for email.

There are several ways to be compatible with this policy: unfortunately
sf.net doesn't do any of them.




On Fri, Apr 25, 2014 at 12:35 PM, Stephen Reed <stephenreed at yahoo.com>wrote:

> My understanding is that sidechains require merged mining support and that
> sidechains create no coinbase transactions themselves. When Bitcoin Core
> supports the two-way peg then I would update my source code branch to
> incorporate that or any other change that is released. Ideally, when
> sidechains can work with PoW Bitcoin, then those same sidechains should
> work without any changes with PoS Bitcoin running in my testnet.
>
> I will be examining PPC, NXT and whitepapers for ideas that I can
> implement in such a way as the result can be called Bitcoin. The only
> difference would be the absence of wasteful Proof-of-Work, and the presence
> of mining rewards distributed to full nodes in proportion to the amount of
> bitcoin each is willing to expose to the network. Coin age is a good
> starting point. A reference peer-to-peer pool developed by me would be
> responsible for fairly distributing the mining rewards as daily dividend
> payments to PoS full node pool members.
>
> In a few days, I plan to establish a Proof-of-Stake Bitcoin project thread
> in the Project Development sub-forum of Bitcointalk. We can continue the
> technical discussion there, starting with a list of principles.
>
>
> Stephen L. Reed
> Austin, Texas, USA
> 512.791.7860
>
> On Friday, April 25, 2014 4:42 AM, Jeffrey Paul <sneak at acidhou.se> wrote:
>
> Are proof of stake blockchains compatible with the sidechain/two-way peg
> system invented by Greg (and maybe others - reports unclear)?
> >
> >http://letstalkbitcoin.com/blockchain-2-0-let-a-thousand-chains-blossom/
> >
> >It's my limited understanding that any sidechains in such a model are
> somewhat cryptographically tied to the PoW system that bitcoin's chain
> uses. I am seriously curious if alternate decentralized consensus
> algorithms (proof of execution, proof of stake, et c) are compatible with
> the sidechain universe as envisioned.
> >
> >Perhaps someone with a deeper technical understanding could explain how,
> if so, or if my incomplete hunch (that alternate consensus algorithms
> cannot retain compatibility with Bitcoin in a two way peg model) is correct.
> >
> >These sorts of "alternate universe" altcoin experiments with different
> proof models take on a different cost/benefit ratio if they can't ever
> interoperate as sidechains, which is why I'm curious.
> >
> >Best,
> >-jp
> >
> >--
> >Jeffrey Paul   +1 (312) 361-0355
> >5539 AD00 DE4C 42F3 AFE1 1575 0524 43F4 DF2A 55C2
> >
> >
> >> On 25.04.2014, at 00:33, Troy Benjegerdes <hozer at hozed.org> wrote:
> >>
> >> This also might be an interesting application of the side
> >> chains concept Peter Todd has discussed.
> >
> >
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/21500d1c/attachment.html>

From pete at petertodd.org  Sat Apr 26 18:31:19 2014
From: pete at petertodd.org (Peter Todd)
Date: Sat, 26 Apr 2014 14:31:19 -0400
Subject: [Bitcoin-development] Eliminating double-spends with two-party
 self-escrow for high value transactions
In-Reply-To: <CANEZrP3VpsW_RNWUpw-gsQhXqLF4deOJJPHxGJUc8Gx_y0B9wA@mail.gmail.com>
References: <20140426112312.GA17949@savin>
	<CANEZrP3VpsW_RNWUpw-gsQhXqLF4deOJJPHxGJUc8Gx_y0B9wA@mail.gmail.com>
Message-ID: <20140426183119.GB16440@savin>

On Sat, Apr 26, 2014 at 08:07:58PM +0200, Mike Hearn wrote:
> What stops the buyer just always waiting to get their money back?

The seller won't hand over the goods of course until they have a valid
transaction signed by the buyer sending them the escrowed funds. (and
the nLockTime deadline is sufficiently far away that the probability of
not being able to get the transaction mined in time is low)

Note how the mechanism I'm proposing is basically just a Jeremy
Spilman-style micropayment channel(1) used for a single payment; I
should have made that clear in my original post.

1) http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg02028.html

-- 
'peter'[:-1]@petertodd.org
000000000000000069ea3b64f8b627bc81c8981ce80e95edf81cd356ad04e1a0
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/35b772e1/attachment.sig>

From mike at plan99.net  Sat Apr 26 18:51:19 2014
From: mike at plan99.net (Mike Hearn)
Date: Sat, 26 Apr 2014 20:51:19 +0200
Subject: [Bitcoin-development] Eliminating double-spends with two-party
 self-escrow for high value transactions
In-Reply-To: <20140426183119.GB16440@savin>
References: <20140426112312.GA17949@savin>
	<CANEZrP3VpsW_RNWUpw-gsQhXqLF4deOJJPHxGJUc8Gx_y0B9wA@mail.gmail.com>
	<20140426183119.GB16440@savin>
Message-ID: <CANEZrP2O74111_PxG-yPYFj0x7wfXTUhCYpre_3=93iYk14fEw@mail.gmail.com>

>
> Note how the mechanism I'm proposing is basically just a Jeremy
> Spilman-style micropayment channel(1) used for a single payment; I
> should have made that clear in my original post.


Right, that does make more sense. Yes, it's a good idea. The question is
whether wallet UI's can support it without being overly complex. We'd be
asking users to take extra steps to work around unintuitive limitations of
the protocol. Products that do that too much tend to get left for something
that "just works". But there may be a slick way to present it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/d3bbc63e/attachment.html>

From pete at petertodd.org  Sat Apr 26 19:37:59 2014
From: pete at petertodd.org (Peter Todd)
Date: Sat, 26 Apr 2014 15:37:59 -0400
Subject: [Bitcoin-development] Eliminating double-spends with two-party
 self-escrow for high value transactions
In-Reply-To: <20140426183119.GB16440@savin>
References: <20140426112312.GA17949@savin>
	<CANEZrP3VpsW_RNWUpw-gsQhXqLF4deOJJPHxGJUc8Gx_y0B9wA@mail.gmail.com>
	<20140426183119.GB16440@savin>
Message-ID: <20140426193759.GC16440@savin>

On Sat, Apr 26, 2014 at 02:31:19PM -0400, Peter Todd wrote:
> On Sat, Apr 26, 2014 at 08:07:58PM +0200, Mike Hearn wrote:
> > What stops the buyer just always waiting to get their money back?
> 
> The seller won't hand over the goods of course until they have a valid
> transaction signed by the buyer sending them the escrowed funds. (and
> the nLockTime deadline is sufficiently far away that the probability of
> not being able to get the transaction mined in time is low)
> 
> Note how the mechanism I'm proposing is basically just a Jeremy
> Spilman-style micropayment channel(1) used for a single payment; I
> should have made that clear in my original post.
> 
> 1) http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg02028.html

I swear, I'm getting alzheimers or something. This and stealth addresses
is now the second time I've totally forgotten I had just read an idea a
week prior:

Reddit user RubenSomsen, ten days ago:

"I would really like it if Mycelium allowed me to temporarily lock my
bitcoins in a 2-of-2 transaction with a potential buyer (of course with
nlocktime back to myself) so the network can start confirming the
transaction before we even meet."
-http://www.reddit.com/r/Bitcoin/comments/236k5d/mycelium_local_trader_is_now_available/cgtxede

Better explanation than mine too for someone wanting a quick intro.

-- 
'peter'[:-1]@petertodd.org
000000000000000038a12e1b8bc9562cddc5cfa24ba7c418f4b945f6b1677e41
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/3e819c34/attachment.sig>

From jrn at jrn.me.uk  Sat Apr 26 20:15:28 2014
From: jrn at jrn.me.uk (Ross Nicoll)
Date: Sat, 26 Apr 2014 21:15:28 +0100
Subject: [Bitcoin-development] BIP0071 media type registration with IANA
Message-ID: <535C13E0.5070701@jrn.me.uk>

Dear all,

Still going through the payment protocol specifications... the MIME
types in BIP0071 aren't IANA registered, and honestly look unlikely to
be accepted if they were submitted as-is.

Latest RFC on media type registration is RFC 6838, which very strictly
restricts what can go in the default "application/" namespace.
Essentially they'd want it to be an ISO standard or similar. There are
vendor namespaces, which look much more feasible (this is how Powerpoint
2007 ended up as
"application/vnd.openxmlformats-officedocument.presentationml.presentation"),
but would be quite a dramatic change to BIP0071.

What's the general feeling on this? Personally I'm in favour of
following the registration process, so register a Bitcoin vendor
namespace with IANA, then allocate MIME types such as:

application/vnd.bitcoin.payment.request
application/vnd.bitcoin.payment.payment
application/vnd.bitcoin.payment.ack

Thoughts?

Ross



From mike at plan99.net  Sat Apr 26 20:17:58 2014
From: mike at plan99.net (Mike Hearn)
Date: Sat, 26 Apr 2014 22:17:58 +0200
Subject: [Bitcoin-development] BIP0071 media type registration with IANA
In-Reply-To: <535C13E0.5070701@jrn.me.uk>
References: <535C13E0.5070701@jrn.me.uk>
Message-ID: <CANEZrP0iNXRu+pXwjXHVihY4YtgOpyUO3bveLx0ZT5yTqyvXJw@mail.gmail.com>

Bitcoin is not a vendor, so I doubt that would work.

I doubt we should spend any time on this. The chance of a string collision
is extremely low. The current mime types are fine.


On Sat, Apr 26, 2014 at 10:15 PM, Ross Nicoll <jrn at jrn.me.uk> wrote:

> Dear all,
>
> Still going through the payment protocol specifications... the MIME
> types in BIP0071 aren't IANA registered, and honestly look unlikely to
> be accepted if they were submitted as-is.
>
> Latest RFC on media type registration is RFC 6838, which very strictly
> restricts what can go in the default "application/" namespace.
> Essentially they'd want it to be an ISO standard or similar. There are
> vendor namespaces, which look much more feasible (this is how Powerpoint
> 2007 ended up as
>
> "application/vnd.openxmlformats-officedocument.presentationml.presentation"),
> but would be quite a dramatic change to BIP0071.
>
> What's the general feeling on this? Personally I'm in favour of
> following the registration process, so register a Bitcoin vendor
> namespace with IANA, then allocate MIME types such as:
>
> application/vnd.bitcoin.payment.request
> application/vnd.bitcoin.payment.payment
> application/vnd.bitcoin.payment.ack
>
> Thoughts?
>
> Ross
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/10d25654/attachment.html>

From mike at plan99.net  Sat Apr 26 20:33:19 2014
From: mike at plan99.net (Mike Hearn)
Date: Sat, 26 Apr 2014 22:33:19 +0200
Subject: [Bitcoin-development] New BIP32 structure for P2SH multisig
	wallets
In-Reply-To: <CABQSq2Sgb+JahuL+PTBa6y4OmupUVrg=TQqpQBVJDG96DSj1hA@mail.gmail.com>
References: <CABQSq2Q98K5zbUbQAqSE4OYez2QuOaWTt+9n5iZmSR2boynf_Q@mail.gmail.com>
	<CANEZrP3EGNsOgHm0P6fiU1P7OSgTd=pBYooPBrLQGMKPT9b8Qg@mail.gmail.com>
	<CABQSq2Sgb+JahuL+PTBa6y4OmupUVrg=TQqpQBVJDG96DSj1hA@mail.gmail.com>
Message-ID: <CANEZrP2_TX8HMOkVRcucfrF7bDoQBTegDwZbRN4932UzZYZ3gg@mail.gmail.com>

>
> Let's assume we use one shared branch for everyone. Then two cosigners
> could need a new receiving address at the same time, and get the next
> unused address on that branch.
>
This is the part I struggle to understand. There is no shared branch
because each user/cosigner has their own unique seed and thus unique key
hierarchy, right? What you described above could be an issue if all
co-signers shared the same seed but then the scheme wouldn't work.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/88fbb7de/attachment.html>

From mark at monetize.io  Sat Apr 26 20:39:28 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Sat, 26 Apr 2014 13:39:28 -0700
Subject: [Bitcoin-development] Proof-of-Stake branch?
In-Reply-To: <20140425073334.GV3180@nl.grid.coop>
References: <1398382335.20219.YahooMailNeo@web160503.mail.bf1.yahoo.com>
	<20140425073334.GV3180@nl.grid.coop>
Message-ID: <535C1980.7000505@monetize.io>

There's no need to be confrontational. I don't think anyone here objects
to the basic concept of proof-of-stake. Some people, myself included,
have proposed protocols which involve some sort of proof of stake
mechanism, and the idea itself originated as a mechanism for eliminating
checkpoints, something which is very much on topic and of concern to
many here.

The problems come when one tries to *replace* proof-of-work mining with
proof-of-stake "mining." You encounter problems related to the fact that
with proof-of-stake nothing is actually at stake. You are free to sign
as many different forks as you wish, and worse have incentive to do so,
because whatever fork does win, you want it to be yours. In the worst
case this results in double-spends at will, and in the best case with
any of the various proposed protections deployed, it merely reduces to
proof-of-work as miners grind blocks until they find one that names them
or one of their sock puppets as the signer of the next block.

I sincerely doubt you will find a solution to this, as it appears to be
a fundamental issue with proof-of-stake, in that it must leverage an
existing mechanism for enforced scarcity (e.g. proof-of-work) in order
to work in a consensus algorithm. Is there some solution that you have
in mind for this?

Mark

On 04/25/2014 12:33 AM, Troy Benjegerdes wrote:
> Do it. Someone will scream harm. The loudest voices screaming how it would
> be harmful are doing the most harm.
> 
> The only way to know is build it, and test it. If the network breaks, then
> it is better we find out sooner rather than later.
> 
> My only suggestion is call it 'bitstake' or something to clearly differentiate
> it from Bitcoin. This also might be an interesting application of the side
> chains concept Peter Todd has discussed.
> 
> On Thu, Apr 24, 2014 at 04:32:15PM -0700, Stephen Reed wrote:
>> Hello all.
>>
>> I understand that Proof-of-Stake as a replacement for Proof-of-Work is a prohibited yet disputed change to Bitcoin Core. I would like to create a Bitcoin branch that provides a sandboxed testbed for researching the best PoS implementations. In the years to come, perhaps circumstances might arise, such as shifting of user opinion as to whether PoS should be moved from the prohibited list to the hard-fork list.
>> -----
>>
>> A poll I conducted today on bitcointalk, https://bitcointalk.org/index.php?topic=581635.0 with an attention-grabbing title suggests some minority support for Bitcoin Proof-of-Stake. I invite any of you to critically comment on that thread.
>>
>> "Annual 10% bitcoin dividends can be ours if  Proof-of-Stake full nodes outnumber existing Proof-of-Work full nodes by three-to-one. What is your choice?"
>>
>> "I do not care or do not know enough." - 5 (16.1%) 
>> "I would download and run the existing Proof-of-Work program to fight the change." - 14 (45.2%) 
>> "I would download and run the new Proof-of-Stake program to favor the change. " - 12 (38.7%) 
>> Total Voters: 31 
>> -----
>>
>> Before I branch the source code and learn the proper way of doing things in this community, I ask you simply if creating the branch is harmful? My goal is to develop, test and document PoS, while exploring its vulnerabilities and fixing them in a transparent fashion.
>>
>> Thanks for taking a bit of your time to read this message.
> 
> 
> 
> 



From etotheipi at gmail.com  Sat Apr 26 21:01:47 2014
From: etotheipi at gmail.com (Alan Reiner)
Date: Sat, 26 Apr 2014 17:01:47 -0400
Subject: [Bitcoin-development] New BIP32 structure for P2SH multisig
	wallets
In-Reply-To: <CANEZrP2_TX8HMOkVRcucfrF7bDoQBTegDwZbRN4932UzZYZ3gg@mail.gmail.com>
References: <CABQSq2Q98K5zbUbQAqSE4OYez2QuOaWTt+9n5iZmSR2boynf_Q@mail.gmail.com>	<CANEZrP3EGNsOgHm0P6fiU1P7OSgTd=pBYooPBrLQGMKPT9b8Qg@mail.gmail.com>	<CABQSq2Sgb+JahuL+PTBa6y4OmupUVrg=TQqpQBVJDG96DSj1hA@mail.gmail.com>
	<CANEZrP2_TX8HMOkVRcucfrF7bDoQBTegDwZbRN4932UzZYZ3gg@mail.gmail.com>
Message-ID: <535C1EBB.5070402@gmail.com>


On 04/26/2014 04:33 PM, Mike Hearn wrote:
>
>     Let's assume we use one shared branch for everyone. Then two
>     cosigners could need a new receiving address at the same time, and
>     get the next unused address on that branch.
>
> This is the part I struggle to understand. There is no shared branch
> because each user/cosigner has their own unique seed and thus unique
> key hierarchy, right? What you described above could be an issue if
> all co-signers shared the same seed but then the scheme wouldn't work.
>
Consider two people with phones, using 2-of-2,  using private seeds k1
and k2.  Every address generated by either party is:

2-of-2(K1/a'/b/c, K2/a'/b/c) 

So for any a, b and c you end up with a 2-of-2 address.  The
seeds/branches will not be used for single-sig receiving... it's always
a multisig 2-of-2.  In fact it behaves much like a regular wallet, you
give an a, b, and c value, and you get an address -- it's just that this
wallet always gives you a P2SH multisig address.

The problem is that if you follow BIP32 in the the most obvious way,
both devices will generate receiving addresses along the last index, 
i.e.   K/a'/b/0, K/a'/b/1, K/a'/b/2,...  If I am at one store and my
wife at another, we might both give out 2-of-2(K1/a'/b/382, K2/a'/b/382)
at the same time not realizing the other one has distributed that
address.  There's not a good way to coordinate the devices well enough
to avoid it.  But we don't have to.

The solution is to use two separate branches -- both phones will
follow/watch both branches, but each only only distributes payment
addresses from one such branch.

The original proposal here suggested adding a level to the tree using
the "cosigner index" as a branch point for doing this...  I recommended
simply having 2*N values for "b", so that each participant has a
receiving line and change line, that won't conflict with other devices. 
However, all devices will still watch all 2*N branches to know the total
balance of the wallet, and will use UTXOs from those branches when
constructing spending transactions/proposals.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/72bca647/attachment.html>

From s9jafroe at stud.uni-saarland.de  Sat Apr 26 21:16:48 2014
From: s9jafroe at stud.uni-saarland.de (Jannis Froese)
Date: Sat, 26 Apr 2014 23:16:48 +0200
Subject: [Bitcoin-development] BIP0071 media type registration with IANA
In-Reply-To: <CANEZrP0iNXRu+pXwjXHVihY4YtgOpyUO3bveLx0ZT5yTqyvXJw@mail.gmail.com>
References: <535C13E0.5070701@jrn.me.uk>
	<CANEZrP0iNXRu+pXwjXHVihY4YtgOpyUO3bveLx0ZT5yTqyvXJw@mail.gmail.com>
Message-ID: <535C2240.6030600@stud.uni-saarland.de>

Am 2014-04-26 22:17, schrieb Mike Hearn:
> Bitcoin is not a vendor, so I doubt that would work.
By my interpretation of RFC 6838, the Bitcoin Foundation or even Gavin 
himself could register a vendor tree for Bitcoin. In the case of the 
foundation registering, getting the subtree named vdn.bitcoin should be 
no problem.

> I doubt we should spend any time on this. The chance of a string 
> collision is extremely low. The current mime types are fine.
It's mostly about the good feeling of having followed the rules and 
proper procedures, I doubt that there is a difference in practice



From mike at plan99.net  Sat Apr 26 21:57:58 2014
From: mike at plan99.net (Mike Hearn)
Date: Sat, 26 Apr 2014 23:57:58 +0200
Subject: [Bitcoin-development] New BIP32 structure for P2SH multisig
	wallets
In-Reply-To: <535C1EBB.5070402@gmail.com>
References: <CABQSq2Q98K5zbUbQAqSE4OYez2QuOaWTt+9n5iZmSR2boynf_Q@mail.gmail.com>
	<CANEZrP3EGNsOgHm0P6fiU1P7OSgTd=pBYooPBrLQGMKPT9b8Qg@mail.gmail.com>
	<CABQSq2Sgb+JahuL+PTBa6y4OmupUVrg=TQqpQBVJDG96DSj1hA@mail.gmail.com>
	<CANEZrP2_TX8HMOkVRcucfrF7bDoQBTegDwZbRN4932UzZYZ3gg@mail.gmail.com>
	<535C1EBB.5070402@gmail.com>
Message-ID: <CANEZrP1k02cRMdGfzXpudvNRsA=9NE7abtc0YddqvDbz8kj1tw@mail.gmail.com>

Ah, I see now. Thanks. And actually now I re-read it, Manuel's explanation
was clear, it just didn't sink in for some reason.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140426/ec0b3b07/attachment.html>

From gacrux at gmail.com  Sat Apr 26 23:44:13 2014
From: gacrux at gmail.com (Gareth Williams)
Date: Sun, 27 Apr 2014 09:44:13 +1000
Subject: [Bitcoin-development] Proof-of-Stake branch?
In-Reply-To: <535C1980.7000505@monetize.io>
References: <1398382335.20219.YahooMailNeo@web160503.mail.bf1.yahoo.com>
	<20140425073334.GV3180@nl.grid.coop> <535C1980.7000505@monetize.io>
Message-ID: <bf916afe-6617-43c9-9738-486316ce308f@email.android.com>

What about using fraud proofs? Your coinbase only matures if nobody publishes proof that you signed a competing block. 

Then something is at least at stake. When it's your chance to sign a block, attempting to sign and publish more than one at the same height reliably punishes you (you effectively waste your chance and receive no reward.)

I can't remember who I saw discussing this idea. Might have been Vitalik Buterin?

On 27 April 2014 6:39:28 AM AEST, Mark Friedenbach <mark at monetize.io> wrote:
>There's no need to be confrontational. I don't think anyone here
>objects
>to the basic concept of proof-of-stake. Some people, myself included,
>have proposed protocols which involve some sort of proof of stake
>mechanism, and the idea itself originated as a mechanism for
>eliminating
>checkpoints, something which is very much on topic and of concern to
>many here.
>
>The problems come when one tries to *replace* proof-of-work mining with
>proof-of-stake "mining." You encounter problems related to the fact
>that
>with proof-of-stake nothing is actually at stake. You are free to sign
>as many different forks as you wish, and worse have incentive to do so,
>because whatever fork does win, you want it to be yours. In the worst
>case this results in double-spends at will, and in the best case with
>any of the various proposed protections deployed, it merely reduces to
>proof-of-work as miners grind blocks until they find one that names
>them
>or one of their sock puppets as the signer of the next block.
>
>I sincerely doubt you will find a solution to this, as it appears to be
>a fundamental issue with proof-of-stake, in that it must leverage an
>existing mechanism for enforced scarcity (e.g. proof-of-work) in order
>to work in a consensus algorithm. Is there some solution that you have
>in mind for this?
>
>Mark
>
>On 04/25/2014 12:33 AM, Troy Benjegerdes wrote:
>> Do it. Someone will scream harm. The loudest voices screaming how it
>would
>> be harmful are doing the most harm.
>> 
>> The only way to know is build it, and test it. If the network breaks,
>then
>> it is better we find out sooner rather than later.
>> 
>> My only suggestion is call it 'bitstake' or something to clearly
>differentiate
>> it from Bitcoin. This also might be an interesting application of the
>side
>> chains concept Peter Todd has discussed.
>> 
>> On Thu, Apr 24, 2014 at 04:32:15PM -0700, Stephen Reed wrote:
>>> Hello all.
>>>
>>> I understand that Proof-of-Stake as a replacement for Proof-of-Work
>is a prohibited yet disputed change to Bitcoin Core. I would like to
>create a Bitcoin branch that provides a sandboxed testbed for
>researching the best PoS implementations. In the years to come, perhaps
>circumstances might arise, such as shifting of user opinion as to
>whether PoS should be moved from the prohibited list to the hard-fork
>list.
>>> -----
>>>
>>> A poll I conducted today on bitcointalk,
>https://bitcointalk.org/index.php?topic=581635.0 with an
>attention-grabbing title suggests some minority support for Bitcoin
>Proof-of-Stake. I invite any of you to critically comment on that
>thread.
>>>
>>> "Annual 10% bitcoin dividends can be ours if  Proof-of-Stake full
>nodes outnumber existing Proof-of-Work full nodes by three-to-one. What
>is your choice?"
>>>
>>> "I do not care or do not know enough." - 5 (16.1%) 
>>> "I would download and run the existing Proof-of-Work program to
>fight the change." - 14 (45.2%) 
>>> "I would download and run the new Proof-of-Stake program to favor
>the change. " - 12 (38.7%) 
>>> Total Voters: 31 
>>> -----
>>>
>>> Before I branch the source code and learn the proper way of doing
>things in this community, I ask you simply if creating the branch is
>harmful? My goal is to develop, test and document PoS, while exploring
>its vulnerabilities and fixing them in a transparent fashion.
>>>
>>> Thanks for taking a bit of your time to read this message.
>> 
>> 
>> 
>> 
>
>------------------------------------------------------------------------------
>Start Your Social Network Today - Download eXo Platform
>Build your Enterprise Intranet with eXo Platform Software
>Java Based Open Source Intranet - Social, Extensible, Cloud Ready
>Get Started Now And Turn Your Intranet Into A Collaboration Platform
>http://p.sf.net/sfu/ExoPlatform
>_______________________________________________
>Bitcoin-development mailing list
>Bitcoin-development at lists.sourceforge.net
>https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-- 
Sent from my Android device with K-9 Mail. Please excuse my brevity.



From sergiolerner at certimix.com  Sun Apr 27 01:08:15 2014
From: sergiolerner at certimix.com (Sergio Lerner)
Date: Sat, 26 Apr 2014 22:08:15 -0300
Subject: [Bitcoin-development] About Compact SPV proofs via block header
	commitments
Message-ID: <535C587F.90005@certimix.com>

I read the post in this threads about Compact SPV proofs via block
header commitments (archived e-mail in
https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg04318.html).
I was working on the same problem almost at the same time, which is
something that's becoming very common nowadays..

The proposal starts with the following claim:

"In simple payment verification (SPV) proofs it is currently necessary
that every intervening block header be provided between two blocks in
order to establish both connectivity and proof of work."

I think this is false. Let's first assume that at the time of an attack
we're connected only to the attacker (no honest nodes). An
non-interactive SPV proof needs to prove that a transaction belongs to
the best chain because creating a counterfeit proof cost more than the
amount of money involved in the proof. Suppose that the proof consist at
least of a block header and a merkle branch to the claimed transaction.

Do the proof need connectivity with the last checkpoint known by the
verifier? (here checkpoint is any block known for sure to be in the best
chain)

Not much, because connectivity only proves that the proof was not
pre-computed before the checkpoint. Only if the checkpoint is very near
(say 10 blocks back) it brings some practical evidence that the attacker
did not have much time to prepare an attack.
 
Do the proof need to know the interleaving proof-of-work?

Not much. If the distance between blocks is less than 2016 blocks, then
the difficulty may have change only by a factor of 4. Currently
difficult adjustments are much lower (I suppose that about 1.1 or so).
Then one can assume that the proof block target difficulty is almost the
same as the last known difficulty if the block distance is less than
2016. If the distance is more, we just load all the interleaving
re-target blocks to detect the actual difficulty.

Do the proof need to have a certain number of  confirmations?

Yes and no, because this is the only evidence that the prover has either
spend money in creating the fake block or took a genuine block.
The cost of creating a fake block can be approximated as the minimum of:
- The current reward of the block (since currently fees are much lower
than the reward)
- The average block fees (when the reward goes to zero)
- The minimum electricity cost of mining the block.

As time passes one could assume that the electricity cost of mining will
approach the other two. 

But there is the problem of parallel synchronized attacks: if an
attacker can reuse the same fake SPV proof to attack several victims,
then the reward for cheating increases proportionally but the cost stays
the same.
For instance, if 6 confirmations are required, and each block can hold
2000 transactions, the attacker can find 2000 victims and re-use the
same 6 block chain to "prove" payments to 2000 victims. Also the cost of
mining 6 blocks can be amortized by mining 7, and attacking in the first
two 4000 victims, etc...

Any scheme than relies on non-interactive SPV proofs will fail if
Bitcoin will scale up-to a point where victims can be easily found and
synchronized.
So I think one should assume that at least one peer is honest...

But if we assume than during the attack least one peer is honest, then
we could directly ask every peer to give us the blocks of their
best-chains at the same heights of the presented proof.  No back-links
are necessary.  If any peer shows a different block, then we should
carefully detect which of the two nodes is the one attacking us and ban
it, by downloading the best-chain headers from the last checkpoint to
the block of the proof.  This would be rare so I don't see when the
back-links can help.

The use case should be:

==Use cases==

For SPV client that has just come online asks peers what is the last block height/time. 
If a peer replies with an old block, then that peer is still downloading the block-chain and it's ignored.
For the remaining peers, the client starts asking for parents blocks until all parents agree (this is the last common parent). 
If (U)TxO hash-tree commitments are available, then the wallet is updated using this data from the common parent block. 

At the same time the client retrieves compact non-interactive proofs-of-inclusion (possibly orphan) for its transactions 
without having to download every intervening block header.

Is there something wrong with this?
 
Best regards,
Sergio.



From mark at monetize.io  Sun Apr 27 01:22:07 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Sat, 26 Apr 2014 18:22:07 -0700
Subject: [Bitcoin-development] Proof-of-Stake branch?
In-Reply-To: <bf916afe-6617-43c9-9738-486316ce308f@email.android.com>
References: <1398382335.20219.YahooMailNeo@web160503.mail.bf1.yahoo.com>	<20140425073334.GV3180@nl.grid.coop>
	<535C1980.7000505@monetize.io>
	<bf916afe-6617-43c9-9738-486316ce308f@email.android.com>
Message-ID: <535C5BBF.30709@monetize.io>

That makes double-spends trivially easy: sign two blocks, withholding
one. Then at a later point in time reveal the second signed block
(demonstrating your own fraud) and force a reorg.

On 04/26/2014 04:44 PM, Gareth Williams wrote:
> What about using fraud proofs? Your coinbase only matures if nobody publishes proof that you signed a competing block. 
> 
> Then something is at least at stake. When it's your chance to sign a block, attempting to sign and publish more than one at the same height reliably punishes you (you effectively waste your chance and receive no reward.)
> 
> I can't remember who I saw discussing this idea. Might have been Vitalik Buterin?
> 
> On 27 April 2014 6:39:28 AM AEST, Mark Friedenbach <mark at monetize.io> wrote:
>> There's no need to be confrontational. I don't think anyone here
>> objects
>> to the basic concept of proof-of-stake. Some people, myself included,
>> have proposed protocols which involve some sort of proof of stake
>> mechanism, and the idea itself originated as a mechanism for
>> eliminating
>> checkpoints, something which is very much on topic and of concern to
>> many here.
>>
>> The problems come when one tries to *replace* proof-of-work mining with
>> proof-of-stake "mining." You encounter problems related to the fact
>> that
>> with proof-of-stake nothing is actually at stake. You are free to sign
>> as many different forks as you wish, and worse have incentive to do so,
>> because whatever fork does win, you want it to be yours. In the worst
>> case this results in double-spends at will, and in the best case with
>> any of the various proposed protections deployed, it merely reduces to
>> proof-of-work as miners grind blocks until they find one that names
>> them
>> or one of their sock puppets as the signer of the next block.
>>
>> I sincerely doubt you will find a solution to this, as it appears to be
>> a fundamental issue with proof-of-stake, in that it must leverage an
>> existing mechanism for enforced scarcity (e.g. proof-of-work) in order
>> to work in a consensus algorithm. Is there some solution that you have
>> in mind for this?
>>
>> Mark
>>
>> On 04/25/2014 12:33 AM, Troy Benjegerdes wrote:
>>> Do it. Someone will scream harm. The loudest voices screaming how it
>> would
>>> be harmful are doing the most harm.
>>>
>>> The only way to know is build it, and test it. If the network breaks,
>> then
>>> it is better we find out sooner rather than later.
>>>
>>> My only suggestion is call it 'bitstake' or something to clearly
>> differentiate
>>> it from Bitcoin. This also might be an interesting application of the
>> side
>>> chains concept Peter Todd has discussed.
>>>
>>> On Thu, Apr 24, 2014 at 04:32:15PM -0700, Stephen Reed wrote:
>>>> Hello all.
>>>>
>>>> I understand that Proof-of-Stake as a replacement for Proof-of-Work
>> is a prohibited yet disputed change to Bitcoin Core. I would like to
>> create a Bitcoin branch that provides a sandboxed testbed for
>> researching the best PoS implementations. In the years to come, perhaps
>> circumstances might arise, such as shifting of user opinion as to
>> whether PoS should be moved from the prohibited list to the hard-fork
>> list.
>>>> -----
>>>>
>>>> A poll I conducted today on bitcointalk,
>> https://bitcointalk.org/index.php?topic=581635.0 with an
>> attention-grabbing title suggests some minority support for Bitcoin
>> Proof-of-Stake. I invite any of you to critically comment on that
>> thread.
>>>>
>>>> "Annual 10% bitcoin dividends can be ours if  Proof-of-Stake full
>> nodes outnumber existing Proof-of-Work full nodes by three-to-one. What
>> is your choice?"
>>>>
>>>> "I do not care or do not know enough." - 5 (16.1%) 
>>>> "I would download and run the existing Proof-of-Work program to
>> fight the change." - 14 (45.2%) 
>>>> "I would download and run the new Proof-of-Stake program to favor
>> the change. " - 12 (38.7%) 
>>>> Total Voters: 31 
>>>> -----
>>>>
>>>> Before I branch the source code and learn the proper way of doing
>> things in this community, I ask you simply if creating the branch is
>> harmful? My goal is to develop, test and document PoS, while exploring
>> its vulnerabilities and fixing them in a transparent fashion.
>>>>
>>>> Thanks for taking a bit of your time to read this message.
>>>
>>>
>>>
>>>
>>
>> ------------------------------------------------------------------------------
>> Start Your Social Network Today - Download eXo Platform
>> Build your Enterprise Intranet with eXo Platform Software
>> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
>> Get Started Now And Turn Your Intranet Into A Collaboration Platform
>> http://p.sf.net/sfu/ExoPlatform
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From christophe.biocca at gmail.com  Sun Apr 27 01:42:55 2014
From: christophe.biocca at gmail.com (Christophe Biocca)
Date: Sat, 26 Apr 2014 21:42:55 -0400
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <535BA357.6050607@gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>
	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>
	<CAC1+kJNE+k4kcTj3Ap0-A=PdD1=+-k5hN4431Z99A+S7M3=BoQ@mail.gmail.com>
	<CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>
	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>
	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>
	<5359E509.4080907@gmail.com>
	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>
	<535A60FE.10209@gmail.com>
	<CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>
	<535BA357.6050607@gmail.com>
Message-ID: <CANOOu=_T82zuV79DWZFGK0Nomhp-Y4tqOhw6ZHhCLb2uGtdR5w@mail.gmail.com>

This seems like splitting hairs, no? A block isn't a guarantee (it can
get orphaned). And as a user of bitcoin (as opposed to a miner), this
change cannot affect any payment you ever receive.

Some of the interpretation is already different for coinbase UTXO's
(need a valid height, locked for 100 blocks). Anyone expecting them to
behave like any other UTXO will get bitten by one of those subtleties
(MtGox's withdrawals had issues with exactly this, IIRC).

On Sat, Apr 26, 2014 at 8:15 AM, Gareth Williams <gacrux at gmail.com> wrote:
> On 26/04/14 01:28, Mike Hearn wrote:
>>     When you have a *bitcoin* TXn buried under 100 blocks you can be damn
>>
>>     sure that money is yours - but only because the rules for interpreting
>>     data in the blockchain are publicly documented and (hopefully)
>>     immutable. If they're mutable then the PoW alone gives me no confidence
>>     that the money is really mine, and we're left with a much less useful
>>     system. This should be more sacred than the 21m limit.
>>
>>
>> Well, I think we should avoid the term "sacred" - nothing is sacred
>> because we're not building a religion here, we're engineering a tool.
>
> Are you sure there isn't room for just a touch of "religion"? :) As you
> state below, all that protects my money from confiscation is strong
> group consensus that it's mine - "a social rule, not a mathematical one."
>
> Everything ultimately balances on that. People being a little bit
> "religious" about following the protocol faithfully are the linchpin of
> Bitcoin security, not PoW.
>
>
>> Consider a world in which 1 satoshi is too valuable to represent some
>> kinds of transactions, so those transactions stop happening even though
>> we all agree they're useful. The obvious solution is to change the rules
>> so there can be 210 million coins and 10x everyones UTXOs at some
>> pre-agreed flag day. We probably wouldn't phrase it like that, it's
>> easier for people to imagine what's happening if it's phrased as "adding
>> more places after the decimal point" or something, but at the protocol
>> level coins are represented using integers, so it'd have to be
>> implemented as a multiply.
>
> Agree.
>
>
>> Would this be a violation of the social contract? A violation of all
>> that is sacred? I don't think so, it'd just be sensible engineering and
>> there'd be strong consensus for that exactly because 21 million /is/ so
>> arbitrary. If all balances and prices multiply 100-fold overnight, no
>> wealth is reallocated which would be the /actual/ violation of the
>> social contract: we just get more resolution for setting prices.
>
> Wholeheartedly agree. "21 million" is just shorthand for the
> preservation of artificial scarcity. No rational person could argue that
> what you described violates the social contract.
>
> I do see what you're driving at - that there exists a situation where it
> would be justified to change the interpretation of data in existing blocks.
>
> But, please consider: if I controlled a single UTXO worth 1% of the
> total money supply before your change, the network would still recognise
> that I control a single UTXO worth 1% of the total money supply after
> your change. So you haven't really changed the interpretation of
> existing blocks at all there. It's just semantics :)
>
> Contrast this with invalidating a coinbase before maturity, which
> clearly has a very real impact. At the point the vote passes, you're ***
> sidestepping the PoW mechanism and rewriting the meaning of an existing,
> validated block ***.
>
>
>> So. The thing that protects your money from confiscation is not proof of
>> work. PoW is just a database synchronisation mechanism. The thing that
>> protects your money from confiscation is a strong group consensus that
>> theft is bad. But that's a social rule, not a mathematical rule.
>
> Agree. That's my whole point :)
>
> I recognise my security is in the hands of the users (the economic
> majority.) Tomorrow they could all decide to patch their nodes to
> reallocate my UTXOs, and there's not a damn thing I could do about it,
> PoW and private keys notwithstanding. I must simply trust that they will
> not do this.
>
> So we can have:
> 1. "Neutral Bitcoin", where everyone is committed to prevention of theft
> by following a simple set of mathematical rules which treat all
> validated blocks as equal.
> Or:
> 2. "Political Bitcoin", where everyone is committed to prevention of
> theft based on human judgements, and the contents of some validated
> blocks are more equal than others.
>
> I recognise that the latter allows for a lot of flexibility in combating
> fraud, but with (substantial) due respect, it isn't Bitcoin.
>
> -Gareth
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From mark at monetize.io  Sun Apr 27 01:43:36 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Sat, 26 Apr 2014 18:43:36 -0700
Subject: [Bitcoin-development] About Compact SPV proofs via block header
 commitments
In-Reply-To: <535C587F.90005@certimix.com>
References: <535C587F.90005@certimix.com>
Message-ID: <535C60C8.5030605@monetize.io>

Sergio,

First of all, let's define what an SPV proof is: it is a succinct
sequence of bits which can be transmitted as part of a non-interactive
protocol that convincingly establishes for a client without access to
the block chain that for some block B, B has an ancestor A at some
specified height and work distance back, and the cost of creating a
false proof is at least as much work as it claims to represent.

The previous email you quote demonstrates how with additional backlink
commitments this can be done in logarithmic space: using an average of
log(N) headers to construct an SPV proof from block A to block B where N
is the height differential. It can be verified without access to the
block chain or other peers. Note that with back links the cost of
creating a fraudulent SPV proof is the same as 51% attacking bitcoin
itself. The protocol you outlined does not have this property.

Other than that, honestly I'm not really sure what you are trying to
accomplish. An interactive proof is does not meet the above requirements
and is not usable for the driving application of two-way pegs. Maybe you
had some other application in mind? I've looked at your SmartSPV
proposal, but fail to see how it doesn't reduce to simply blind trust in
your view of the network from your peers. SPV proofs on the other hand
put an economic cost to fraud.

On 04/26/2014 06:08 PM, Sergio Lerner wrote:
> I read the post in this threads about Compact SPV proofs via block
> header commitments (archived e-mail in
> https://www.mail-archive.com/bitcoin-development at lists.sourceforge.net/msg04318.html).
> I was working on the same problem almost at the same time, which is
> something that's becoming very common nowadays..
> 
> The proposal starts with the following claim:
> 
> "In simple payment verification (SPV) proofs it is currently necessary
> that every intervening block header be provided between two blocks in
> order to establish both connectivity and proof of work."
> 
> I think this is false. Let's first assume that at the time of an attack
> we're connected only to the attacker (no honest nodes). An
> non-interactive SPV proof needs to prove that a transaction belongs to
> the best chain because creating a counterfeit proof cost more than the
> amount of money involved in the proof. Suppose that the proof consist at
> least of a block header and a merkle branch to the claimed transaction.
> 
> Do the proof need connectivity with the last checkpoint known by the
> verifier? (here checkpoint is any block known for sure to be in the best
> chain)
> 
> Not much, because connectivity only proves that the proof was not
> pre-computed before the checkpoint. Only if the checkpoint is very near
> (say 10 blocks back) it brings some practical evidence that the attacker
> did not have much time to prepare an attack.
>  
> Do the proof need to know the interleaving proof-of-work?
> 
> Not much. If the distance between blocks is less than 2016 blocks, then
> the difficulty may have change only by a factor of 4. Currently
> difficult adjustments are much lower (I suppose that about 1.1 or so).
> Then one can assume that the proof block target difficulty is almost the
> same as the last known difficulty if the block distance is less than
> 2016. If the distance is more, we just load all the interleaving
> re-target blocks to detect the actual difficulty.
> 
> Do the proof need to have a certain number of  confirmations?
> 
> Yes and no, because this is the only evidence that the prover has either
> spend money in creating the fake block or took a genuine block.
> The cost of creating a fake block can be approximated as the minimum of:
> - The current reward of the block (since currently fees are much lower
> than the reward)
> - The average block fees (when the reward goes to zero)
> - The minimum electricity cost of mining the block.
> 
> As time passes one could assume that the electricity cost of mining will
> approach the other two. 
> 
> But there is the problem of parallel synchronized attacks: if an
> attacker can reuse the same fake SPV proof to attack several victims,
> then the reward for cheating increases proportionally but the cost stays
> the same.
> For instance, if 6 confirmations are required, and each block can hold
> 2000 transactions, the attacker can find 2000 victims and re-use the
> same 6 block chain to "prove" payments to 2000 victims. Also the cost of
> mining 6 blocks can be amortized by mining 7, and attacking in the first
> two 4000 victims, etc...
> 
> Any scheme than relies on non-interactive SPV proofs will fail if
> Bitcoin will scale up-to a point where victims can be easily found and
> synchronized.
> So I think one should assume that at least one peer is honest...
> 
> But if we assume than during the attack least one peer is honest, then
> we could directly ask every peer to give us the blocks of their
> best-chains at the same heights of the presented proof.  No back-links
> are necessary.  If any peer shows a different block, then we should
> carefully detect which of the two nodes is the one attacking us and ban
> it, by downloading the best-chain headers from the last checkpoint to
> the block of the proof.  This would be rare so I don't see when the
> back-links can help.
> 
> The use case should be:
> 
> ==Use cases==
> 
> For SPV client that has just come online asks peers what is the last block height/time. 
> If a peer replies with an old block, then that peer is still downloading the block-chain and it's ignored.
> For the remaining peers, the client starts asking for parents blocks until all parents agree (this is the last common parent). 
> If (U)TxO hash-tree commitments are available, then the wallet is updated using this data from the common parent block. 
> 
> At the same time the client retrieves compact non-interactive proofs-of-inclusion (possibly orphan) for its transactions 
> without having to download every intervening block header.
> 
> Is there something wrong with this?
>  
> Best regards,
> Sergio.
> 
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From gacrux at gmail.com  Sun Apr 27 02:01:44 2014
From: gacrux at gmail.com (Gareth Williams)
Date: Sun, 27 Apr 2014 12:01:44 +1000
Subject: [Bitcoin-development] Proof-of-Stake branch?
In-Reply-To: <535C5BBF.30709@monetize.io>
References: <1398382335.20219.YahooMailNeo@web160503.mail.bf1.yahoo.com>
	<20140425073334.GV3180@nl.grid.coop> <535C1980.7000505@monetize.io>
	<bf916afe-6617-43c9-9738-486316ce308f@email.android.com>
	<535C5BBF.30709@monetize.io>
Message-ID: <3b9c0704-32da-4b83-844f-7fa2d685f538@email.android.com>

Who said anything about a re-org? The original block remains valid, your block reward is just zero, upon maturity, in light of a valid fraud proof.

ie. the "coinbase confiscation" that I was just arguing against in another thread :P but of course here based on cryptographic proof, not human judgement.

On 27 April 2014 11:22:07 AM AEST, Mark Friedenbach <mark at monetize.io> wrote:
>That makes double-spends trivially easy: sign two blocks, withholding
>one. Then at a later point in time reveal the second signed block
>(demonstrating your own fraud) and force a reorg.
>
>On 04/26/2014 04:44 PM, Gareth Williams wrote:
>> What about using fraud proofs? Your coinbase only matures if nobody
>publishes proof that you signed a competing block. 
>> 
>> Then something is at least at stake. When it's your chance to sign a
>block, attempting to sign and publish more than one at the same height
>reliably punishes you (you effectively waste your chance and receive no
>reward.)
>> 
>> I can't remember who I saw discussing this idea. Might have been
>Vitalik Buterin?
>> 
>> On 27 April 2014 6:39:28 AM AEST, Mark Friedenbach <mark at monetize.io>
>wrote:
>>> There's no need to be confrontational. I don't think anyone here
>>> objects
>>> to the basic concept of proof-of-stake. Some people, myself
>included,
>>> have proposed protocols which involve some sort of proof of stake
>>> mechanism, and the idea itself originated as a mechanism for
>>> eliminating
>>> checkpoints, something which is very much on topic and of concern to
>>> many here.
>>>
>>> The problems come when one tries to *replace* proof-of-work mining
>with
>>> proof-of-stake "mining." You encounter problems related to the fact
>>> that
>>> with proof-of-stake nothing is actually at stake. You are free to
>sign
>>> as many different forks as you wish, and worse have incentive to do
>so,
>>> because whatever fork does win, you want it to be yours. In the
>worst
>>> case this results in double-spends at will, and in the best case
>with
>>> any of the various proposed protections deployed, it merely reduces
>to
>>> proof-of-work as miners grind blocks until they find one that names
>>> them
>>> or one of their sock puppets as the signer of the next block.
>>>
>>> I sincerely doubt you will find a solution to this, as it appears to
>be
>>> a fundamental issue with proof-of-stake, in that it must leverage an
>>> existing mechanism for enforced scarcity (e.g. proof-of-work) in
>order
>>> to work in a consensus algorithm. Is there some solution that you
>have
>>> in mind for this?
>>>
>>> Mark
>>>
>>> On 04/25/2014 12:33 AM, Troy Benjegerdes wrote:
>>>> Do it. Someone will scream harm. The loudest voices screaming how
>it
>>> would
>>>> be harmful are doing the most harm.
>>>>
>>>> The only way to know is build it, and test it. If the network
>breaks,
>>> then
>>>> it is better we find out sooner rather than later.
>>>>
>>>> My only suggestion is call it 'bitstake' or something to clearly
>>> differentiate
>>>> it from Bitcoin. This also might be an interesting application of
>the
>>> side
>>>> chains concept Peter Todd has discussed.
>>>>
>>>> On Thu, Apr 24, 2014 at 04:32:15PM -0700, Stephen Reed wrote:
>>>>> Hello all.
>>>>>
>>>>> I understand that Proof-of-Stake as a replacement for
>Proof-of-Work
>>> is a prohibited yet disputed change to Bitcoin Core. I would like to
>>> create a Bitcoin branch that provides a sandboxed testbed for
>>> researching the best PoS implementations. In the years to come,
>perhaps
>>> circumstances might arise, such as shifting of user opinion as to
>>> whether PoS should be moved from the prohibited list to the
>hard-fork
>>> list.
>>>>> -----
>>>>>
>>>>> A poll I conducted today on bitcointalk,
>>> https://bitcointalk.org/index.php?topic=581635.0 with an
>>> attention-grabbing title suggests some minority support for Bitcoin
>>> Proof-of-Stake. I invite any of you to critically comment on that
>>> thread.
>>>>>
>>>>> "Annual 10% bitcoin dividends can be ours if  Proof-of-Stake full
>>> nodes outnumber existing Proof-of-Work full nodes by three-to-one.
>What
>>> is your choice?"
>>>>>
>>>>> "I do not care or do not know enough." - 5 (16.1%) 
>>>>> "I would download and run the existing Proof-of-Work program to
>>> fight the change." - 14 (45.2%) 
>>>>> "I would download and run the new Proof-of-Stake program to favor
>>> the change. " - 12 (38.7%) 
>>>>> Total Voters: 31 
>>>>> -----
>>>>>
>>>>> Before I branch the source code and learn the proper way of doing
>>> things in this community, I ask you simply if creating the branch is
>>> harmful? My goal is to develop, test and document PoS, while
>exploring
>>> its vulnerabilities and fixing them in a transparent fashion.
>>>>>
>>>>> Thanks for taking a bit of your time to read this message.
>>>>
>>>>
>>>>
>>>>
>>>
>>>
>------------------------------------------------------------------------------
>>> Start Your Social Network Today - Download eXo Platform
>>> Build your Enterprise Intranet with eXo Platform Software
>>> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
>>> Get Started Now And Turn Your Intranet Into A Collaboration Platform
>>> http://p.sf.net/sfu/ExoPlatform
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
>
>------------------------------------------------------------------------------
>Start Your Social Network Today - Download eXo Platform
>Build your Enterprise Intranet with eXo Platform Software
>Java Based Open Source Intranet - Social, Extensible, Cloud Ready
>Get Started Now And Turn Your Intranet Into A Collaboration Platform
>http://p.sf.net/sfu/ExoPlatform
>_______________________________________________
>Bitcoin-development mailing list
>Bitcoin-development at lists.sourceforge.net
>https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-- 
Sent from my Android device with K-9 Mail. Please excuse my brevity.



From sergiolerner at certimix.com  Sun Apr 27 02:39:40 2014
From: sergiolerner at certimix.com (Sergio Lerner)
Date: Sat, 26 Apr 2014 23:39:40 -0300
Subject: [Bitcoin-development] About Compact SPV proofs via block header
 commitments
In-Reply-To: <535C60C8.5030605@monetize.io>
References: <535C587F.90005@certimix.com> <535C60C8.5030605@monetize.io>
Message-ID: <535C6DEC.9040505@certimix.com>

El 26/04/2014 10:43 p.m., Mark Friedenbach escribi?:
> Sergio,
>
> First of all, let's define what an SPV proof is: it is a succinct
> sequence of bits which can be transmitted as part of a non-interactive
> protocol that convincingly establishes for a client without access to
> the block chain that for some block B, B has an ancestor A at some
> specified height and work distance back, and the cost of creating a
> false proof is at least as much work as it claims to represent.
Ok. I was thinking with another definition SPV proof.

For me a SPV proof is a sequence of bits which can be transmitted as
part of a non-interactive protocol that convincingly establishes for a
client without access to the block chain that a block B is part of the
best-chain.

I understand that SPV nodes require SPV proofs as defined in my
definition, but I can't realize how to prove that SPV nodes require SPV
proofs under your definition. So your definition sounds to me like one
possible solution, but not the need.
 
Is your definition something well-established in the community?






From mark at monetize.io  Sun Apr 27 06:43:46 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Sat, 26 Apr 2014 23:43:46 -0700
Subject: [Bitcoin-development] About Compact SPV proofs via block header
 commitments
In-Reply-To: <535C6DEC.9040505@certimix.com>
References: <535C587F.90005@certimix.com> <535C60C8.5030605@monetize.io>
	<535C6DEC.9040505@certimix.com>
Message-ID: <535CA722.1000704@monetize.io>

I don't think there's an official definition of "SPV proof." I wasn't
trying to make a argument "from definition" (that would be fallacious!).
Rather I suspected that we had different concepts in mind and wanted to
check.

That said, I do think that the definition I gave matches how the term is
used in the Satoshi whitepaper, and the way in which SPV clients like
BitcoinJ work. "Best chain" is typically taken to mean the most-work,
*valid* chain. Without invoking moon math or assumptions of honest peers
and jamming-free networks, the only way to know a chain is valid is to
witness the each and every block. SPV nodes on the other hand, simply
trust that the most-work chain is a valid chain, based on economic
arguments about the opportunity cost of mining invalid blocks. These SPV
nodes use block headers as proofs to determine the most-work block
connected to the genesis block or most recent checkpoint. So yes,
operationally at least this is what the community seems to mean by "SPV
proof".

Now regarding your use case:

> For the remaining peers, the client starts asking for parents blocks 
> until all parents agree (this is the last common parent).

This linear scan of block headers is what I would prefer to avoid. By
using back-links you make it have log(N) space usage.

On 04/26/2014 07:39 PM, Sergio Lerner wrote:
> El 26/04/2014 10:43 p.m., Mark Friedenbach escribi?:
>> Sergio,
>> 
>> First of all, let's define what an SPV proof is: it is a succinct 
>> sequence of bits which can be transmitted as part of a 
>> non-interactive protocol that convincingly establishes for a
>> client without access to the block chain that for some block B, B
>> has an ancestor A at some specified height and work distance back,
>> and the cost of creating a false proof is at least as much work as
>> it claims to represent.
> Ok. I was thinking with another definition SPV proof.
> 
> For me a SPV proof is a sequence of bits which can be transmitted as
>  part of a non-interactive protocol that convincingly establishes
> for a client without access to the block chain that a block B is part
> of the best-chain.
> 
> I understand that SPV nodes require SPV proofs as defined in my 
> definition, but I can't realize how to prove that SPV nodes require 
> SPV proofs under your definition. So your definition sounds to me 
> like one possible solution, but not the need.
> 
> Is your definition something well-established in the community?
> 
> 
> 
> 
> ------------------------------------------------------------------------------
>
>
> 
Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software Java Based 
> Open Source Intranet - Social, Extensible, Cloud Ready Get Started 
> Now And Turn Your Intranet Into A Collaboration Platform 
> http://p.sf.net/sfu/ExoPlatform 
> _______________________________________________ Bitcoin-development 
> mailing list Bitcoin-development at lists.sourceforge.net 
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From laanwj at gmail.com  Sun Apr 27 06:52:38 2014
From: laanwj at gmail.com (Wladimir)
Date: Sun, 27 Apr 2014 08:52:38 +0200
Subject: [Bitcoin-development] Compatibility Bitcoin-Qt with Tails
In-Reply-To: <535BECDC.9070804@anonymousbitcoinbook.com>
References: <CA+s+GJARfPhMo8ucE7E40bE890NsuzuWPq1DQuK6ZVMvps0LVQ@mail.gmail.com>
	<535BECDC.9070804@anonymousbitcoinbook.com>
Message-ID: <CA+s+GJBgBiB8LESvy2-3GX_gsdqrTLF9LeQVvR7gTgRrAxq4DQ@mail.gmail.com>

> Sample terminal output for latest Tails (0.23):
>
> amnesia at amnesia:~/linux-4765b8c-gitian-2d48b96/32$ ./bitcoin-qt
> Bus::open: Can not get ibus-daemon's address.
> IBusInputContext::createInputContext: no connection to ibus-daemon
> sendto: Operation not permitted
> Segmentation fault
> amnesia at amnesia:~/linux-4765b8c-gitian-2d48b96/32$ ./bitcoin-qt
> Segmentation fault
> amnesia at amnesia:~/linux-4765b8c-gitian-2d48b96/32$ ./bitcoin-qt -proxy=127.0.0.1:9050
> Segmentation fault

Can you get a traceback?

Wladimir



From timo.hanke at web.de  Sun Apr 27 07:07:32 2014
From: timo.hanke at web.de (Timo Hanke)
Date: Sun, 27 Apr 2014 02:07:32 -0500
Subject: [Bitcoin-development] Proposal for extra nonce in block header
Message-ID: <20140427070732.GA23422@crunch>

I'd like to put the following draft of a BIP up for discussion.

Timo

# Abstract
There are incentives for miners to find cheap, non-standard ways to generate new work, which are not necessarily in the best interest of the protocol.
In order to reduce these incentives this proposal re-assigns 2 bytes from the version field of the block header to a new extra nonce field. 
# Copyright
# Specification
The block version number field in the block header is reduced in size from 4 to 2 bytes. 
The third and fourth byte in the block header are assigned to the new extra nonce field inside the block header.
# Motivation
The motivation of this proposal is to provide miners with a cheap constant-complexity method to create new work that does not require altering the transaction tree.

Furthermore, the motivation is to protect the version and timestamp fields in the block header from abuse.
# Rationale
Traditionally, the extra nonce is part of the coinbase field of the generation transaction, which is always the very first transaction of a block.
After incrementing the extra nonce the minimum amount of work a miner has to do to re-calculate the block header is a) to hash the coinbase transaction and b) to re-calculate the left-most branch of the merkle tree all the way to the merkle root.
This is necessary overhead a miner has to do besides hashing the block header itself.
We shall call the process that leads to a new block header from the same transaction set the _pre-hashing_.

First it should be noted that the relative cost of pre-hashing in its traditional form depends
on the block size, which may create an unwanted incentive for miners
to keep the block size small. However, this is not the main motivation for
the current proposal.

While the block header is hashed by ASICs, pre-hashing typically happens on a CPU because of the greater flexibility required.
Consequently, as ASIC cost per hash performance drops the relative cost of pre-hashing increases.

This creates an incentive for miners to find cheaper ways to create new work than by means of pre-hashing.
An example of this currently happening is the on-device rolling of the timestamp into the future.
These ways of creating new work are unlikely to be in the best interest of the protocol.
For example, rolling the timestamp faster than the real time is unwanted (more so on faster blockchains).

The version number in the block header is a possible target for alteration with the goal of cheaply creating new work.
Currently, blocks with arbitrarily large version numbers get relayed and accepted by the network.
As this is unwanted behaviour, there should not exist any incentive for a miner to abuse the version number in this way. 

The solution is to reduce the range of version numbers from 2^32 to 2^16 and to declare the third and forth bytes of the block header as legitimate space for an extra nonce.
This will reduce the incentive for a miner to abuse the shortened version number by a factor in the order of 2^16. 

As a side effect, this proposal greatly reduces the bandwidth requirements of a blind pool protocol by only submitting the block header to the miner.
# Backwards Compatibility
Old versions of the client will accept blocks of this kind but will throw an alert at the user to upgrade.
The only code change would be a cast of the version number to a short.
Besides the upgrade alert, old and new versions of the client can co-exist and there is no need to introduce a new block version number or to phase-out old block versions.
# Reference Implementation
# Final implementation

-- 
Timo Hanke
PGP 1EFF 69BC 6FB7 8744 14DB  631D 1BB5 D6E3 AB96 7DA8



From kgreenek at gmail.com  Sun Apr 27 07:53:25 2014
From: kgreenek at gmail.com (Kevin Greene)
Date: Sun, 27 Apr 2014 00:53:25 -0700
Subject: [Bitcoin-development] Error handling in payment protocol
 (BIP-0070 and BIP-0072)
In-Reply-To: <535BF056.6080804@jrn.me.uk>
References: <535ABD5D.7070509@jrn.me.uk>
	<CABsx9T3boaWYuY8S-Xz=bAxe+ne5iP7m8AnuciaAOmDx_3D4Fg@mail.gmail.com>
	<CANEZrP3TuN2LFi3_7z29JncojbOZX=C-1BsJMp1AJ56k8wjgBg@mail.gmail.com>
	<535BF056.6080804@jrn.me.uk>
Message-ID: <CAEY8wq69Ev9B9fqJgBUBdjgh3pktWnfELHnau_0x7q6aAFtTEA@mail.gmail.com>

Keep in mind that links don't always come embedded in html. Think of native
mobile apps.



On Sat, Apr 26, 2014 at 10:43 AM, Ross Nicoll <jrn at jrn.me.uk> wrote:

> I'd be very cautious of security implications of embedding files into
> the payment request. Even file formats one would presume safe, such as
> images, have had security issues (i.e.
> https://technet.microsoft.com/library/security/ms11-006 )
>
> Longer term I was wondering about embedding the PaymentRequest into web
> pages directly via the <object> tag, which could eliminate need for
> BIP0072 and potentially improve user interface integration that way.
> Obviously this would require browser plugins, however.
>
> Ross
>
> On 26/04/14 18:36, Mike Hearn wrote:
> >> PaymentRequests are limited to 50,000 bytes. I can't think of a reason
> why
> >> Payment messages would need to be any bigger than that. Submit a pull
> >> request to the existing BIP.
> >>
> > In future it might be nice to have images and things in the payment
> > requests, to make UIs look prettier. But with the current version 50kb
> > should be plenty indeed.
> >
>
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140427/8db5235d/attachment.html>

From melvincarvalho at gmail.com  Sun Apr 27 08:17:11 2014
From: melvincarvalho at gmail.com (Melvin Carvalho)
Date: Sun, 27 Apr 2014 10:17:11 +0200
Subject: [Bitcoin-development] Proposal for extra nonce in block header
In-Reply-To: <20140427070732.GA23422@crunch>
References: <20140427070732.GA23422@crunch>
Message-ID: <CAKaEYh+ajt1QUz9_8v1b4azeajCdPB+WuCdsix3J8hO7vLnTvw@mail.gmail.com>

On 27 April 2014 09:07, Timo Hanke <timo.hanke at web.de> wrote:

> I'd like to put the following draft of a BIP up for discussion.
>
> Timo
>
> # Abstract
> There are incentives for miners to find cheap, non-standard ways to
> generate new work, which are not necessarily in the best interest of the
> protocol.
> In order to reduce these incentives this proposal re-assigns 2 bytes from
> the version field of the block header to a new extra nonce field.
> # Copyright
> # Specification
> The block version number field in the block header is reduced in size from
> 4 to 2 bytes.
> The third and fourth byte in the block header are assigned to the new
> extra nonce field inside the block header.
> # Motivation
> The motivation of this proposal is to provide miners with a cheap
> constant-complexity method to create new work that does not require
> altering the transaction tree.
>
> Furthermore, the motivation is to protect the version and timestamp fields
> in the block header from abuse.
> # Rationale
> Traditionally, the extra nonce is part of the coinbase field of the
> generation transaction, which is always the very first transaction of a
> block.
> After incrementing the extra nonce the minimum amount of work a miner has
> to do to re-calculate the block header is a) to hash the coinbase
> transaction and b) to re-calculate the left-most branch of the merkle tree
> all the way to the merkle root.
> This is necessary overhead a miner has to do besides hashing the block
> header itself.
> We shall call the process that leads to a new block header from the same
> transaction set the _pre-hashing_.
>
> First it should be noted that the relative cost of pre-hashing in its
> traditional form depends
> on the block size, which may create an unwanted incentive for miners
> to keep the block size small. However, this is not the main motivation for
> the current proposal.
>
> While the block header is hashed by ASICs, pre-hashing typically happens
> on a CPU because of the greater flexibility required.
> Consequently, as ASIC cost per hash performance drops the relative cost of
> pre-hashing increases.
>
> This creates an incentive for miners to find cheaper ways to create new
> work than by means of pre-hashing.
> An example of this currently happening is the on-device rolling of the
> timestamp into the future.
> These ways of creating new work are unlikely to be in the best interest of
> the protocol.
> For example, rolling the timestamp faster than the real time is unwanted
> (more so on faster blockchains).
>
> The version number in the block header is a possible target for alteration
> with the goal of cheaply creating new work.
> Currently, blocks with arbitrarily large version numbers get relayed and
> accepted by the network.
> As this is unwanted behaviour, there should not exist any incentive for a
> miner to abuse the version number in this way.
>
> The solution is to reduce the range of version numbers from 2^32 to 2^16
> and to declare the third and forth bytes of the block header as legitimate
> space for an extra nonce.
> This will reduce the incentive for a miner to abuse the shortened version
> number by a factor in the order of 2^16.
>
> As a side effect, this proposal greatly reduces the bandwidth requirements
> of a blind pool protocol by only submitting the block header to the miner.
> # Backwards Compatibility
> Old versions of the client will accept blocks of this kind but will throw
> an alert at the user to upgrade.
> The only code change would be a cast of the version number to a short.
> Besides the upgrade alert, old and new versions of the client can co-exist
> and there is no need to introduce a new block version number or to
> phase-out old block versions.
> # Reference Implementation
> # Final implementation
>

If changing the structure of the block header, wouldnt you also need to
increment the version number to 3?


>
> --
> Timo Hanke
> PGP 1EFF 69BC 6FB7 8744 14DB  631D 1BB5 D6E3 AB96 7DA8
>
>
> ------------------------------------------------------------------------------
> Start Your Social Network Today - Download eXo Platform
> Build your Enterprise Intranet with eXo Platform Software
> Java Based Open Source Intranet - Social, Extensible, Cloud Ready
> Get Started Now And Turn Your Intranet Into A Collaboration Platform
> http://p.sf.net/sfu/ExoPlatform
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140427/2ebc89a7/attachment.html>

From mark at monetize.io  Sun Apr 27 09:38:06 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Sun, 27 Apr 2014 02:38:06 -0700
Subject: [Bitcoin-development] Proposal for extra nonce in block header
In-Reply-To: <20140427070732.GA23422@crunch>
References: <20140427070732.GA23422@crunch>
Message-ID: <535CCFFE.5090809@monetize.io>

I'm not convinced of the necessity of this idea in general, but if it
were to be implemented I would recommend serializing the nVersion field
as a VarInt (Pieter Wuille's multi-byte serialization format) and using
the remaining space of the 4 bytes as your extra nonce.

That would allow serialization of numbers up to 0x1020407f (slightly
over 28 bits) before the 4-byte field is exhausted. For version numbers
less than 0x204080 there will be at least one byte of padding space left
over for extra-nonce usage (two bytes if less than 0x4080, three bytes
if less than 0x80). For version values up to 127, the format is exactly
identical when the padding bytes are zero.

On 04/27/2014 12:07 AM, Timo Hanke wrote:
> I'd like to put the following draft of a BIP up for discussion.
> 
> Timo
> 
> # Abstract
> There are incentives for miners to find cheap, non-standard ways to generate new work, which are not necessarily in the best interest of the protocol.
> In order to reduce these incentives this proposal re-assigns 2 bytes from the version field of the block header to a new extra nonce field. 
> # Copyright
> # Specification
> The block version number field in the block header is reduced in size from 4 to 2 bytes. 
> The third and fourth byte in the block header are assigned to the new extra nonce field inside the block header.
> # Motivation
> The motivation of this proposal is to provide miners with a cheap constant-complexity method to create new work that does not require altering the transaction tree.
> 
> Furthermore, the motivation is to protect the version and timestamp fields in the block header from abuse.
> # Rationale
> Traditionally, the extra nonce is part of the coinbase field of the generation transaction, which is always the very first transaction of a block.
> After incrementing the extra nonce the minimum amount of work a miner has to do to re-calculate the block header is a) to hash the coinbase transaction and b) to re-calculate the left-most branch of the merkle tree all the way to the merkle root.
> This is necessary overhead a miner has to do besides hashing the block header itself.
> We shall call the process that leads to a new block header from the same transaction set the _pre-hashing_.
> 
> First it should be noted that the relative cost of pre-hashing in its traditional form depends
> on the block size, which may create an unwanted incentive for miners
> to keep the block size small. However, this is not the main motivation for
> the current proposal.
> 
> While the block header is hashed by ASICs, pre-hashing typically happens on a CPU because of the greater flexibility required.
> Consequently, as ASIC cost per hash performance drops the relative cost of pre-hashing increases.
> 
> This creates an incentive for miners to find cheaper ways to create new work than by means of pre-hashing.
> An example of this currently happening is the on-device rolling of the timestamp into the future.
> These ways of creating new work are unlikely to be in the best interest of the protocol.
> For example, rolling the timestamp faster than the real time is unwanted (more so on faster blockchains).
> 
> The version number in the block header is a possible target for alteration with the goal of cheaply creating new work.
> Currently, blocks with arbitrarily large version numbers get relayed and accepted by the network.
> As this is unwanted behaviour, there should not exist any incentive for a miner to abuse the version number in this way. 
> 
> The solution is to reduce the range of version numbers from 2^32 to 2^16 and to declare the third and forth bytes of the block header as legitimate space for an extra nonce.
> This will reduce the incentive for a miner to abuse the shortened version number by a factor in the order of 2^16. 
> 
> As a side effect, this proposal greatly reduces the bandwidth requirements of a blind pool protocol by only submitting the block header to the miner.
> # Backwards Compatibility
> Old versions of the client will accept blocks of this kind but will throw an alert at the user to upgrade.
> The only code change would be a cast of the version number to a short.
> Besides the upgrade alert, old and new versions of the client can co-exist and there is no need to introduce a new block version number or to phase-out old block versions.
> # Reference Implementation
> # Final implementation
> 



From sergiolerner at certimix.com  Sun Apr 27 12:36:11 2014
From: sergiolerner at certimix.com (Sergio Lerner)
Date: Sun, 27 Apr 2014 09:36:11 -0300
Subject: [Bitcoin-development] About Compact SPV proofs via block header
 commitments
In-Reply-To: <535CA722.1000704@monetize.io>
References: <535C587F.90005@certimix.com> <535C60C8.5030605@monetize.io>
	<535C6DEC.9040505@certimix.com> <535CA722.1000704@monetize.io>
Message-ID: <535CF9BB.5010209@certimix.com>

El 27/04/2014 03:43 a.m., Mark Friedenbach escribi?:
> I don't think there's an official definition of "SPV proof." I wasn't
> trying to make a argument "from definition" (that would be fallacious!).
> Rather I suspected that we had different concepts in mind and wanted to
> check.
So to disambiguate I define the most general definition as a NPP
(non-interactive payment proof).
> Without invoking moon math or assumptions of honest peers
> and jamming-free networks, the only way to know a chain is valid is to
> witness the each and every block. SPV nodes on the other hand, simply
> trust that the most-work chain is a valid chain, based on economic
> arguments about the opportunity cost of mining invalid blocks. 
I argue that you cannot talk about "the most-work chain" without
actually making an assumption about honest peers.
If you do not make the assumption, you compute the "economic arguments"
wrong.
> Now regarding your use case:
>
>> For the remaining peers, the client starts asking for parents blocks 
>> until all parents agree (this is the last common parent).
> This linear scan of block headers is what I would prefer to avoid. By
> using back-links you make it have log(N) space usage.
First this is a method that uses NPPs, not SPV proofs.
Since the method chooses all peers that are synchronized (have the
latest current block) then going back means only skipping a potential
short fork (which I suppose has never been more than 3 blocks during
normal network conditions). You're looking for a common ancestor, not
the checkpoint.
So the linear scan is actually O(1).
The exact value can be approximated by the sum of the convergent
infinite geometrical sequence of forking probabilities, which it's about
1.03 without considering selfish-mining, and probably less than 2.03
considering it.

 



From gacrux at gmail.com  Sun Apr 27 12:53:08 2014
From: gacrux at gmail.com (Gareth Williams)
Date: Sun, 27 Apr 2014 22:53:08 +1000
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CANOOu=_T82zuV79DWZFGK0Nomhp-Y4tqOhw6ZHhCLb2uGtdR5w@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>	<CAC1+kJNE+k4kcTj3Ap0-A=PdD1=+-k5hN4431Z99A+S7M3=BoQ@mail.gmail.com>	<CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>	<5359E509.4080907@gmail.com>	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>	<535A60FE.10209@gmail.com>	<CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>	<535BA357.6050607@gmail.com>
	<CANOOu=_T82zuV79DWZFGK0Nomhp-Y4tqOhw6ZHhCLb2uGtdR5w@mail.gmail.com>
Message-ID: <535CFDB4.1000200@gmail.com>

On 27/04/14 11:42, Christophe Biocca wrote:> This seems like splitting
hairs, no? A block isn't a guarantee (it can
> get orphaned). And as a user of bitcoin (as opposed to a miner), this
> change cannot affect any payment you ever receive.

Disagree. Maybe we just have a fundamental disagreement about what
Bitcoin is? :)

Bitcoin is this perfect /trustless/ mathematical machine, built - most
unfortunately - upon a foundation of mushy humans.

We depend specifically upon these three assumptions:
1. >50% of hashpower will not cooperate to rewrite history
2. the economic majority will not cooperate to reinterpret history
3. enough people believe in the illusion of artificial scarcity to give
it real value

Given that the above hold, from there up the system operates completely
trustlessly, with predictable security parameters. (Of course a block
isn't a guarantee of anything, but I know the probability that you can
cause a re-org from depth N with X% hashpower, which allows me to reason
about security.)

Now, some people on this thread might point to the above 3 points and
say "that isn't really a trustless system, it's a democratic system."
And then advocate that we can do without assumption 2, replacing it with:
2. the economic majority will not cooperate to reinterpret history
against any good guys, only against bad guys; "please trust their good
judgement."

That moves us away from a pure trustless system built upon a small
democratic foundation (as something of a necessary evil in an imperfect
world where humans run our computers and use our system) and toward a
"democratic system".

You don't have to agree, but I hope you can understand the point I'm
making :-) It's a fundamental shift in the nature of the system, and to
some people a violation of the social contract. Definitely not splitting
hairs.

I feel I've now consumed rather more bytes of everyone's inboxes than I
ought to have with this topic. I appreciate you and Mike taking the time
to reply to a newbie/lurker.

-Gareth




-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140427/421557d1/attachment.sig>

From mike at plan99.net  Sun Apr 27 14:31:05 2014
From: mike at plan99.net (Mike Hearn)
Date: Sun, 27 Apr 2014 16:31:05 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <535CFDB4.1000200@gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>
	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>
	<CAC1+kJNE+k4kcTj3Ap0-A=PdD1=+-k5hN4431Z99A+S7M3=BoQ@mail.gmail.com>
	<CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>
	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>
	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>
	<5359E509.4080907@gmail.com>
	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>
	<535A60FE.10209@gmail.com>
	<CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>
	<535BA357.6050607@gmail.com>
	<CANOOu=_T82zuV79DWZFGK0Nomhp-Y4tqOhw6ZHhCLb2uGtdR5w@mail.gmail.com>
	<535CFDB4.1000200@gmail.com>
Message-ID: <CANEZrP2jTP+uCuXswopheJwBBmMp5ZHdqxua1sAhLF=cOnhPOg@mail.gmail.com>

>
> That moves us away from a pure trustless system built upon a small
> democratic foundation (as something of a necessary evil in an imperfect
> world where humans run our computers and use our system) and toward a
> "democratic system".
>
> You don't have to agree, but I hope you can understand the point I'm
> making :-)


Yep, your point is well made.

I don't have much more to say about this proposal specifically, but I think
this whole question of what changes are OK and what would be a violation of
the social contract will get discussed endlessly over the coming years. Put
another way, what do Bitcoin's users expect and want - a system that
evolves or a system that remains exactly as they found it? There will be
good arguments on both sides, and the answer will probably be different on
a case by case basis. But personally I'm skeptical of any argument that
argues against change for its own sake. It has to be an argument rooted in
a careful analysis of costs and benefits.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140427/acb15bfc/attachment.html>

From mark at monetize.io  Sun Apr 27 17:05:45 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Sun, 27 Apr 2014 10:05:45 -0700
Subject: [Bitcoin-development] About Compact SPV proofs via block header
 commitments
In-Reply-To: <535CF9BB.5010209@certimix.com>
References: <535C587F.90005@certimix.com>
	<535C60C8.5030605@monetize.io>	<535C6DEC.9040505@certimix.com>
	<535CA722.1000704@monetize.io> <535CF9BB.5010209@certimix.com>
Message-ID: <535D38E9.60209@monetize.io>



On 04/27/2014 05:36 AM, Sergio Lerner wrote:
>> Without invoking moon math or assumptions of honest peers and
>> jamming-free networks, the only way to know a chain is valid is to 
>> witness the each and every block. SPV nodes on the other hand,
>> simply trust that the most-work chain is a valid chain, based on
>> economic arguments about the opportunity cost of mining invalid
>> blocks.
> I argue that you cannot talk about "the most-work chain" without 
> actually making an assumption about honest peers.

I should have said "without invoking moon math or interactive protocols
requiring honest peers over jamming-free networks." The interactive
protocol was more the point than the honest peers and jamming-free
network. Yes, without an honest peer and an un-jammed network, you might
never learn about the most-work chain in the first place. But having the
security of the proof not depend on query access to an honest full node
is absolutely necessary for some applications and certainly desirable in
others.

Although strictly speaking what I said may not be 100% true. The single
alternative solution I've seen involves some sort of Fiat?Shamir
transform that could give you a probabilistic proof by including random
additional paths through the block chain chosen based on the combined
hash of the headers. However this is disadvantageous as it massively
increases the proof size and verification time, and you have to include
a lot of data to achieve assurance that more work was required to
generate the fraud than an honest chain.

> If you do not make the assumption, you compute the "economic
> arguments" wrong.

Not necessarily. By requiring connectivity you know that what you are
receiving is built off of the main chain, for example, and you can still
make assumptions about resulting opportunity costs.

> First this is a method that uses NPPs, not SPV proofs. Since the
> method chooses all peers that are synchronized (have the latest
> current block) then going back means only skipping a potential short
> fork (which I suppose has never been more than 3 blocks during normal
> network conditions). You're looking for a common ancestor, not the
> checkpoint. So the linear scan is actually O(1). The exact value can
> be approximated by the sum of the convergent infinite geometrical
> sequence of forking probabilities, which it's about 1.03 without
> considering selfish-mining, and probably less than 2.03 considering
> it.

Unless you're connected to attacker nodes which are wildly divergent
from each other. It's relatively easy to create a massive fake history
of difficulty-1 blocks.

If you assume honest peers things get very easy. But that's not a safe
assumption to be making. With back-link block-history commitments, on
the other hand, an interactive protocol allows you to do a binary search
to find common ancestors, and have trust that the intermediate links
actually exist.



From gacrux at gmail.com  Sun Apr 27 23:10:43 2014
From: gacrux at gmail.com (Gareth Williams)
Date: Mon, 28 Apr 2014 09:10:43 +1000
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP2jTP+uCuXswopheJwBBmMp5ZHdqxua1sAhLF=cOnhPOg@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<CAE28kUQ9WOnHuFR6WYeU6rep3b74zDweTPxffF0L6FjZObXE6A@mail.gmail.com>
	<CANEZrP3WBWi5h04yyQ115vXmVHupoj5MG+-8sx=2zEcCT5a9hg@mail.gmail.com>
	<CAC1+kJNE+k4kcTj3Ap0-A=PdD1=+-k5hN4431Z99A+S7M3=BoQ@mail.gmail.com>
	<CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>
	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>
	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>
	<5359E509.4080907@gmail.com>
	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>
	<535A60FE.10209@gmail.com>
	<CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>
	<535BA357.6050607@gmail.com>
	<CANOOu=_T82zuV79DWZFGK0Nomhp-Y4tqOhw6ZHhCLb2uGtdR5w@mail.gmail.com>
	<535CFDB4.1000200@gmail.com>
	<CANEZrP2jTP+uCuXswopheJwBBmMp5ZHdqxua1sAhLF=cOnhPOg@mail.gmail.com>
Message-ID: <e645bbe6-4ba4-4ecd-9a14-25386e8adbac@email.android.com>

Agreed. I'm a pragmatist, certainly not anti-change (or even anti-zero-conf.) Useful and non-controversial hard forks don't keep me awake at night :) I support your general position on zero-conf payments (that they're useful and we should make them as reliable as practical.)

But the very essence of Bitcoin, to me, is trustlessness. Satoshi's great invention isn't just another payment network - it's /ecash/. Bearer-negotiable, whoever-controls-the-private-keys-owns-it, **ecash**.

If not that, what do you think it is? :-)

I like trustless systems for purely pragmatic, cost-benefit reasons. They allow us to avoid all the costs associated with imperfect humans, while reaping the benefits of reliability and predictability :P


On 28 April 2014 12:31:05 AM AEST, Mike Hearn <mike at plan99.net> wrote:
>>
>> That moves us away from a pure trustless system built upon a small
>> democratic foundation (as something of a necessary evil in an
>imperfect
>> world where humans run our computers and use our system) and toward a
>> "democratic system".
>>
>> You don't have to agree, but I hope you can understand the point I'm
>> making :-)
>
>
>Yep, your point is well made.
>
>I don't have much more to say about this proposal specifically, but I
>think
>this whole question of what changes are OK and what would be a
>violation of
>the social contract will get discussed endlessly over the coming years.
>Put
>another way, what do Bitcoin's users expect and want - a system that
>evolves or a system that remains exactly as they found it? There will
>be
>good arguments on both sides, and the answer will probably be different
>on
>a case by case basis. But personally I'm skeptical of any argument that
>argues against change for its own sake. It has to be an argument rooted
>in
>a careful analysis of costs and benefits.

-- 
Sent from my Android device with K-9 Mail. Please excuse my brevity.



From jgarzik at bitpay.com  Mon Apr 28 01:37:00 2014
From: jgarzik at bitpay.com (Jeff Garzik)
Date: Sun, 27 Apr 2014 21:37:00 -0400
Subject: [Bitcoin-development] New BIP32 structure for P2SH multisig
	wallets
In-Reply-To: <535B8582.80706@gmx.de>
References: <CABQSq2Q98K5zbUbQAqSE4OYez2QuOaWTt+9n5iZmSR2boynf_Q@mail.gmail.com>
	<CANEZrP3EGNsOgHm0P6fiU1P7OSgTd=pBYooPBrLQGMKPT9b8Qg@mail.gmail.com>
	<535B8582.80706@gmx.de>
Message-ID: <CAJHLa0MQ=bC54PEQRfNXM6KpmP4Ut=zTXC1327yVX4sE6FrBrA@mail.gmail.com>

On Sat, Apr 26, 2014 at 6:08 AM, Thomas Voegtlin <thomasv1 at gmx.de> wrote:
> Perhaps the only thing that needs to be standardized is the order of
> public keys in the redeem script: I think they should be sorted, so that
> the p2sh address does not depend on the order of pubkeys.

Yes.  That solution is already implemented in a few wallets.

-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/



From pete at petertodd.org  Mon Apr 28 12:02:09 2014
From: pete at petertodd.org (Peter Todd)
Date: Mon, 28 Apr 2014 08:02:09 -0400
Subject: [Bitcoin-development] Replace-by-fee scorched-earth without
	child-pays-for-parent
Message-ID: <20140428120209.GJ20078@savin>

Someone who wanted to remain anonymous sent me in this idea, which I'll
admit I'm kicking myself for not having thought of earlier. They sent
me this hash so they can claim credit for it later should they choose to
reveal their identity:

bb0de552f81fa356b99fbeef65fa532bb58111184efee2cbe92f66509af8d151


When Alice wants to pay Bob x bitcoins, rather than creating a single
transaction, tx1, that does that, she creates a pair of transactions,
with the second, tx2, spending the same inputs and an input provided by
Bob, but paying x*k bitcoins to fees. Should Bob detect a double-spend
he simply signs the extra input, making it clear that he intended for
the countermeasure to be deployed, and broadcasts tx2.

This mechanism has two advantages: 1) child-pays-for-parent isn't
required at avoiding changes to the relaying code and letting the
counter-transaction propagate quickly. 2) k can be adjusted such that
Alice is guaranteed to be worse off for attempting a double-spend even
taking into account the probability of getting away with it. For
instance, right now if just, say, Eligius adopted replace-by-fee a k
value of 20 would still make double-spends unprofitable.

However it does require payment protocol support. This lead me to
realize that if Alice signs all her inputs with the ANYONECANPAY sighash
bit set Bob can get the same effect by adding his own inputs to bump the
effective fee. While of course the funds to do so come out of his own
pocket, they are balanced out by the payment to him, with the net effect
being the same as the child-pays-for-parent version. Additionally in the
common case of "Bob would like Alice's transaction to go through sooner"
this also gives Bob the flexibility to add small sized inputs at will to
bump fees. (or for that matter Alice, giving a small privacy boost)

Using ANYONECANPAY does have one disadvantage in that transactions using
it are always malleable. However an "attacker" doing so is forced to
spend funds to do that. Secondly after the recent malleability attacks
wallet handling of malleability-related problems has greatly improved.


Finally it's worth noting how the k-overpaying version of scorched-earth
gives Finney attacking(1) miners - such as BitUndo - incentives to
defect knowing that they can earn significantly more fees by publishing
their supposedly secret transactions to the p2p network. Equally even in
the ANYONECANPAY version merchants may decide that discouraging fraud is
worth an overpayment.

1) https://bitcointalk.org/index.php?topic=3441.msg48384#msg48384

-- 
'peter'[:-1]@petertodd.org
0000000000000000603b189f99cf2a95ce01835596b5d5fbd8c5725c11f504ee
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140428/baa6c952/attachment.sig>

From alex.mizrahi at gmail.com  Mon Apr 28 12:03:54 2014
From: alex.mizrahi at gmail.com (Alex Mizrahi)
Date: Mon, 28 Apr 2014 15:03:54 +0300
Subject: [Bitcoin-development] Proof-of-Stake branch?
In-Reply-To: <bf916afe-6617-43c9-9738-486316ce308f@email.android.com>
References: <1398382335.20219.YahooMailNeo@web160503.mail.bf1.yahoo.com>
	<20140425073334.GV3180@nl.grid.coop> <535C1980.7000505@monetize.io>
	<bf916afe-6617-43c9-9738-486316ce308f@email.android.com>
Message-ID: <CAE28kUQ8C=fCrR5DG08xmJAqEuMwgeT98sM-rrv8RiQdGkp7Mg@mail.gmail.com>

>
> I can't remember who I saw discussing this idea. Might have been Vitalik
> Buterin?
>

Yes, he described it in an article a couple of months ago:

http://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/

but it is an old idea.
For example, I've mentioned punishment of this kind in discussion about
PPCoin when it was released in 2012, and, I think, it was described in
Etlase2's Decrit design.

Also, I and Iddo did some research on pure proof-of-stake, and it seems to
be feasible, in the sense that there are no obvious problems like "nothing
is actually at stake". (Unfortunately I can't refer to it now as it isn't
published yet.)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140428/4d1fdaa3/attachment.html>

From gavinandresen at gmail.com  Mon Apr 28 12:39:36 2014
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Mon, 28 Apr 2014 08:39:36 -0400
Subject: [Bitcoin-development] Proposal to change payment protocol signing
Message-ID: <CABsx9T2v=oX5eR9yoBULPVceZFD2_d+xMF7jQJACHYP=FgWK-A@mail.gmail.com>

There is a discussion about clarifying how BIP70 signs payment requests
here:
  https://github.com/bitcoin/bips/pull/41

The issue is what to do with the signature field before signing. The code
Mike and I initially wrote does this:

    request.set_signature(string(""));

(sets signature to the empty string)

I think that is a mistake; it should be:

   request.clear_signature();

(clears signature field, so it is not serialized at all).

So: if you are implementing, or have implemented, the payment protocol,
please chime in. I'd like to change the spec and the reference
implementation NOW, while BIP70 is still a 'Draft'.

Because this type of "hey, I'm implementing your standard and it doesn't
work the way I think it should" mistake is exactly why BIPs take a while
before being declared 'Final.'


-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140428/6ecc6f09/attachment.html>

From sergiolerner at certimix.com  Mon Apr 28 14:32:33 2014
From: sergiolerner at certimix.com (Sergio Lerner)
Date: Mon, 28 Apr 2014 11:32:33 -0300
Subject: [Bitcoin-development] About Compact SPV proofs via block header
 commitments
In-Reply-To: <535D38E9.60209@monetize.io>
References: <535C587F.90005@certimix.com>
	<535C60C8.5030605@monetize.io>	<535C6DEC.9040505@certimix.com>
	<535CA722.1000704@monetize.io> <535CF9BB.5010209@certimix.com>
	<535D38E9.60209@monetize.io>
Message-ID: <535E6681.6000509@certimix.com>


On 27/04/2014 02:05 p.m., Mark Friedenbach wrote:
>
> On 04/27/2014 05:36 AM, Sergio Lerner wrote:
>>> Without invoking moon math or assumptions of honest peers and
>>> jamming-free networks, the only way to know a chain is valid is to 
>>> witness the each and every block. SPV nodes on the other hand,
>>> simply trust that the most-work chain is a valid chain, based on
>>> economic arguments about the opportunity cost of mining invalid
>>> blocks.
>> I argue that you cannot talk about "the most-work chain" without 
>> actually making an assumption about honest peers.
> I should have said "without invoking moon math or interactive protocols
> requiring honest peers over jamming-free networks." The interactive
> protocol was more the point than the honest peers and jamming-free
> network. Yes, without an honest peer and an un-jammed network, you might
> never learn about the most-work chain in the first place. But having the
> security of the proof not depend on query access to an honest full node
> is absolutely necessary for some applications and certainly desirable in
> others.
The problem is not having or not access to a honest full node. The SPV
client MUST have access to a honest full node sometime.
The problem is WHEN. One can make the security assumption that during an
attack (someone gives you a fake block) you also loose the possibility
to reach any honest node. Then SPV proofs come into play.

Here are the security assumptions I added to my post about SmartSPV to
clarify this:

*Security Assumptions
*

First let?s review the main security assumption of headers-only SPV:

  * The attacker does not control all your communications with the
    payment network.

This means that there is at least a single connected peer that behaves
honestly. This assumption is quite strong and may not hold during short
periods of time, such as during application power-on (when only a few
peers have been connected), or when moving to a place where the ISP is
untrusted. For SmartSPV we?ll require weaker security assumptions:

  * The attacker cannot control all your communications with the payment
    network for more than a fixed period of time (e.g. 2016 blocks for
    Bitcoin or approximately 15 days)
  * The attacker is rational: it won?t spend an huge amount of money to
    steal a much smaller amount.

This assumptions imply that the attacker may control all your Internet
connections while he sends you a malicious block branch containing a
fake payment to you.


>
>> First this is a method that uses NPPs, not SPV proofs. Since the
>> method chooses all peers that are synchronized (have the latest
>> current block) then going back means only skipping a potential short
>> fork (which I suppose has never been more than 3 blocks during normal
>> network conditions). You're looking for a common ancestor, not the
>> checkpoint. So the linear scan is actually O(1). The exact value can
>> be approximated by the sum of the convergent infinite geometrical
>> sequence of forking probabilities, which it's about 1.03 without
>> considering selfish-mining, and probably less than 2.03 considering
>> it.
> Unless you're connected to attacker nodes which are wildly divergent
> from each other. It's relatively easy to create a massive fake history
> of difficulty-1 blocks.
Since in my use case (SmartSPV) I proposed you start from the most
recent block and go backwards, the attacker must compete in PoW with the
real current difficulty informed.
Suppose the SPV client looks for 6-block chains backwards starting from
the last current block. Suppose you know or estimate the current network
difficulty. Suppose a malicious peer creates a fake 6-block chain Cm and
the honest peer gives you the 6-block chain Ch. If Ch has not the
expected work it's discarded. If both has the expected work, then you
better not true any of them and walk their parents until you find a
common parent. That's the block you should trust. If you don't have an
honest node connected, then the only decide to trust or not Cm is by
it's accumulated work (and you have already a bound for it)


> If you assume honest peers things get very easy. But that's not a safe
> assumption to be making. With back-link block-history commitments, on
> the other hand, an interactive protocol allows you to do a binary search
> to find common ancestors, and have trust that the intermediate links
> actually exist.
So you agree that:  you need a periodic connection to a honest node, but
during an attack you may loose that connection. This is the assumption
we should be working on, and my use case (described in
http://bitslog.wordpress.com/2014/04/25/smartspv-a-better-simplified-payment-verification-for-smartphones/)
assumes that.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140428/aac02c8f/attachment.html>

From mike at plan99.net  Mon Apr 28 16:14:37 2014
From: mike at plan99.net (Mike Hearn)
Date: Mon, 28 Apr 2014 18:14:37 +0200
Subject: [Bitcoin-development] Proposal to change payment protocol
	signing
In-Reply-To: <CABsx9T2v=oX5eR9yoBULPVceZFD2_d+xMF7jQJACHYP=FgWK-A@mail.gmail.com>
References: <CABsx9T2v=oX5eR9yoBULPVceZFD2_d+xMF7jQJACHYP=FgWK-A@mail.gmail.com>
Message-ID: <CANEZrP1_FtEU3Pf3CibMg3YWn8Jn8E7GEj9_x9b3Ym4_yL-ZfA@mail.gmail.com>

Who cares what it is? Setting to an empty byte array is fine, IMO. The
payment protocol is already rolling out. It's implemented in several
wallets, BitPay implements it, Coinbase is implementing it, etc.

-100000 for changing such a basic thing at this point. It'd cause chaos for
the early adopters, punishing them instead of rewarding them. It'd
seriously hurt adoption of the payment protocol when it's at its most
vulnerable. We should mark BIP 70 as accepted and be done with it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140428/9762e71a/attachment.html>

From mark at monetize.io  Mon Apr 28 17:29:46 2014
From: mark at monetize.io (Mark Friedenbach)
Date: Mon, 28 Apr 2014 10:29:46 -0700
Subject: [Bitcoin-development] About Compact SPV proofs via block header
 commitments
In-Reply-To: <535E6681.6000509@certimix.com>
References: <535C587F.90005@certimix.com>	<535C60C8.5030605@monetize.io>	<535C6DEC.9040505@certimix.com>	<535CA722.1000704@monetize.io>
	<535CF9BB.5010209@certimix.com>	<535D38E9.60209@monetize.io>
	<535E6681.6000509@certimix.com>
Message-ID: <535E900A.90407@monetize.io>

On 04/28/2014 07:32 AM, Sergio Lerner wrote:
> So you agree that:  you need a periodic connection to a honest node, but
> during an attack you may loose that connection. This is the assumption
> we should be working on, and my use case (described in
> http://bitslog.wordpress.com/2014/04/25/smartspv-a-better-simplified-payment-verification-for-smartphones/)
> assumes that.

No, that's sortof tangential. What you are solving is some higher level
application on top of SPV proofs, compact or otherwise. SPV proofs have
many broad applications, such as 2-way pegs where proof-of-work is used
to reach consensus over the most-work side-chain header, and a non-51%
attack is detectable from observed difficulty and interblock times. Do
you need an honest peer to learn about the best chain? Yes. Do you need
to *trust* that you have an honest peer? No, because a non-51% attack
against you is probabilistically detectable with existing tools.

Maybe SmartSPV is useful, maybe not. The application domain is not
something I've been concerned with in the past. But what you describe is
a higher-level protocol that uses block headers to determine which chain
to trust. My simple point from the start has been that you can use
back-link commitments and compact SPV proofs to accomplish what you want
fewer messages, less bandwidth, and equal security. The two proposals
are not in conflict with each other.



From ryan at bitpay.com  Mon Apr 28 20:53:41 2014
From: ryan at bitpay.com (Ryan X. Charles)
Date: Mon, 28 Apr 2014 16:53:41 -0400
Subject: [Bitcoin-development] Proposal to change payment protocol
	signing
In-Reply-To: <CANEZrP1_FtEU3Pf3CibMg3YWn8Jn8E7GEj9_x9b3Ym4_yL-ZfA@mail.gmail.com>
References: <CABsx9T2v=oX5eR9yoBULPVceZFD2_d+xMF7jQJACHYP=FgWK-A@mail.gmail.com>
	<CANEZrP1_FtEU3Pf3CibMg3YWn8Jn8E7GEj9_x9b3Ym4_yL-ZfA@mail.gmail.com>
Message-ID: <535EBFD5.1060806@bitpay.com>

Agreed with Mike. It doesn't really matter what the signature field is
set to. Changing the standard now is too hard with too little benefit.

On 4/28/14, 12:14 PM, Mike Hearn wrote:
> Who cares what it is? Setting to an empty byte array is fine, IMO. The
> payment protocol is already rolling out. It's implemented in several
> wallets, BitPay implements it, Coinbase is implementing it, etc.
> 
> -100000 for changing such a basic thing at this point. It'd cause chaos
> for the early adopters, punishing them instead of rewarding them. It'd
> seriously hurt adoption of the payment protocol when it's at its most
> vulnerable. We should mark BIP 70 as accepted and be done with it. 
> 
> 
> 
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get 
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> 
> 
> 
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

-- 
Ryan X. Charles
Software Engineer, BitPay
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0xA11B4DDE.asc
Type: application/pgp-keys
Size: 5627 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140428/4dded73d/attachment.bin>

From adam at cypherspace.org  Mon Apr 28 21:41:02 2014
From: adam at cypherspace.org (Adam Back)
Date: Mon, 28 Apr 2014 14:41:02 -0700
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <535CFDB4.1000200@gmail.com>
References: <CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>
	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>
	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>
	<5359E509.4080907@gmail.com>
	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>
	<535A60FE.10209@gmail.com>
	<CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>
	<535BA357.6050607@gmail.com>
	<CANOOu=_T82zuV79DWZFGK0Nomhp-Y4tqOhw6ZHhCLb2uGtdR5w@mail.gmail.com>
	<535CFDB4.1000200@gmail.com>
Message-ID: <20140428214102.GA8347@netbook.cypherspace.org>

On Sun, Apr 27, 2014 at 10:53:08PM +1000, Gareth Williams wrote:
>Bitcoin is this perfect /trustless/ mathematical machine [...]
>
>2. the economic majority will not cooperate to reinterpret history
>
> [this proposal was...] replacing it with:
> 
>2. the economic majority will not cooperate to reinterpret history
>against any good guys, only against bad guys; "please trust their good
>judgement."

Nicely put.

I agree the idea of a populist vote to redistribute or remove mining reward
is an inelegant thing which would probably devolve into politics.

I think the reason that it would likely work out badly is that its not
provable, and so no consensus rule can be constructed requiring proof, so
then it risks devolving to a political decision.  

Step 1: Finney attackers for hire anonymize their blocks (publish via Tor,
use a different reward address for each block, and each pool miner). 
Demanding identification of blocks is generally undesirable for the
objective of avoiding centralization and policy abuse.  Dont even think
about demanding identity, there is no identity in a distributed system.

Step 2: people send tracer payments through Finney attackers, and use that
evidence to decide to vote away their reward.  (However the proof is
non-transitive so people can vote anyway they like for any reason).

Step 3: Finney attackers vote down other pools to make the point.

Adam



From eugen at leitl.org  Tue Apr 29 08:13:26 2014
From: eugen at leitl.org (Eugen Leitl)
Date: Tue, 29 Apr 2014 10:13:26 +0200
Subject: [Bitcoin-development] please check my debug.log
Message-ID: <20140429081326.GX26986@leitl.org>

I've put up some bitcoind nodes after the network is
in need of some, and would like some feedback in that
the nodes are fully operational and doing something
useful. Please check the logs and tell me whether
I'm doing good.

debug.log from a node that has been running for a day:

2014-04-29 08:06:18 ERROR: CheckTransaction() : vin empty
2014-04-29 08:06:18 ERROR: AcceptToMemoryPool: : CheckTransaction failed
2014-04-29 08:06:18 Misbehaving: 122.224.182.248:23159 (0 -> 10)
2014-04-29 08:07:00 receive version message: /getaddr.bitnodes.io:0.1/: version 70001, blocks=298263, us=88.198.51.132:8333, them=0.0.0.0:0, peer=148.251.238.178:63657
2014-04-29 08:07:19 receive version message: /bitcoinseeder:0.01/: version 60000, blocks=230000, us=[2a01:4f8:131:13ed::2]:8333, them=0.0.0.0:0, peer=[2a02:348:5e:5a29::1]:53921
2014-04-29 08:09:37 receive version message: /Snoopy:0.1/: version 60001, blocks=0, us=88.198.51.132:8333, them=192.33.90.253:8333, peer=192.33.90.253:43104
2014-04-29 08:09:37 socket recv error 104
2014-04-29 08:10:26 receive version message: /getaddr.bitnodes.io:0.1/: version 70001, blocks=298263, us=[2a01:4f8:131:13ed::2]:8333, them=0.0.0.0:0, peer=[2a01:4f8:202:81b1::2]:50624
2014-04-29 08:10:32 receive version message: /bitcoinseeder:0.01/: version 60000, blocks=230000, us=88.198.51.132:8333, them=0.0.0.0:0, peer=217.78.0.153:37275
2014-04-29 08:10:50 receive version message: /getaddr.bitnodes.io:0.1/: version 70001, blocks=298263, us=88.198.51.132:8333, them=0.0.0.0:0, peer=148.251.238.178:50788

debug.log from a node that I just restarted:

2014-04-29 08:06:16 Opening LevelDB in /home/bitcoind/.bitcoin/blocks/index
2014-04-29 08:06:17 Opened LevelDB successfully
2014-04-29 08:06:17 Opening LevelDB in /home/bitcoind/.bitcoin/chainstate
2014-04-29 08:06:19 Opened LevelDB successfully
2014-04-29 08:06:22 LoadBlockIndexDB(): last block file = 135
2014-04-29 08:06:22 LoadBlockIndexDB(): last block file info: CBlockFileInfo(blocks=631, size=128154379, heights=297633...298263, time=2014-04-25...2014-04-29)
2014-04-29 08:06:22 LoadBlockIndexDB(): transaction index disabled
2014-04-29 08:06:22 LoadBlockIndexDB(): hashBestChain=0000000000000000162f5f571eef4742b70204d983bda3c4b18fc1496ac27f86 height=298263 date=2014-04-29 08:00:23 progress=0.999981
2014-04-29 08:06:22 init message: Verifying blocks...
2014-04-29 08:06:22 Verifying last 288 blocks at level 3
2014-04-29 08:07:42 No coin database inconsistencies in last 289 blocks (111189 transactions)
2014-04-29 08:07:42  block index           86284ms
2014-04-29 08:07:42 init message: Loading wallet...
2014-04-29 08:07:42 nFileVersion = 90100
2014-04-29 08:07:42 Keys: 101 plaintext, 0 encrypted, 101 w/ metadata, 101 total
2014-04-29 08:07:43  wallet                  108ms
2014-04-29 08:07:43 init message: Rescanning...
2014-04-29 08:07:43 Rescanning last 39 blocks (from block 298224)...
2014-04-29 08:07:43  rescan                  204ms
2014-04-29 08:07:43 init message: Loading addresses...
2014-04-29 08:07:43 Loaded 14015 addresses from peers.dat  84ms
2014-04-29 08:07:43 mapBlockIndex.size() = 298264
2014-04-29 08:07:43 nBestHeight = 298263
2014-04-29 08:07:43 setKeyPool.size() = 100
2014-04-29 08:07:43 mapWallet.size() = 0
2014-04-29 08:07:43 mapAddressBook.size() = 1
2014-04-29 08:07:43 AddLocal(213.239.218.20:8333,1)
2014-04-29 08:07:43 IPv4 eth0: 213.239.218.20
2014-04-29 08:07:43 AddLocal([2a01:4f8:a0:74c8::2]:8333,1)
2014-04-29 08:07:43 IPv6 eth0: 2a01:4f8:a0:74c8::2
2014-04-29 08:07:43 ext-ip thread start
2014-04-29 08:07:43 dnsseed thread start
2014-04-29 08:07:43 Loading addresses from DNS seeds (could take a while)
2014-04-29 08:07:43 net thread start
2014-04-29 08:07:43 upnp thread start
2014-04-29 08:07:43 opencon thread start
2014-04-29 08:07:43 addcon thread start
2014-04-29 08:07:43 dumpaddr thread start
2014-04-29 08:07:43 msghand thread start
2014-04-29 08:07:43 init message: Done loading
2014-04-29 08:07:43 GetMyExternalIP() received [213.239.218.20] 213.239.218.20:0
2014-04-29 08:07:43 GetMyExternalIP() returned 213.239.218.20
2014-04-29 08:07:43 AddLocal(213.239.218.20:8333,4)
2014-04-29 08:07:43 ext-ip thread exit
2014-04-29 08:07:44 receive version message: /Satoshi:0.8.6/: version 70001, blocks=298263, us=213.239.218.20:44169, them=166.78.243.104:8333, peer=166.78.243.104:8333
2014-04-29 08:07:44 Added time data, samples 2, offset +8 (+0 minutes)
2014-04-29 08:07:51 No valid UPnP IGDs found
2014-04-29 08:07:51 upnp thread exit
2014-04-29 08:07:53 connect() to 71.23.29.162:8333 failed after select(): No route to host
2014-04-29 08:07:53 receive version message: /Satoshi:0.9.1/: version 70002, blocks=298263, us=213.239.218.20:46921, them=91.238.134.58:8333, peer=91.238.134.58:8333
2014-04-29 08:07:53 Added time data, samples 3, offset +0 (+0 minutes)
2014-04-29 08:07:54 106 addresses found from DNS seeds
2014-04-29 08:07:54 dnsseed thread exit
2014-04-29 08:08:16 receive version message: /Satoshi:0.8.6/: version 70001, blocks=298263, us=213.239.218.20:50533, them=98.218.92.212:8333, peer=98.218.92.212:8333
2014-04-29 08:08:16 Added time data, samples 4, offset +2 (+0 minutes)
2014-04-29 08:08:22 receive version message: /Satoshi:0.8.5/: version 70001, blocks=298263, us=213.239.218.20:35016, them=108.3.172.22:8333, peer=108.3.172.22:8333
2014-04-29 08:08:22 Added time data, samples 5, offset +3 (+0 minutes)
2014-04-29 08:08:22 nTimeOffset = +2  (+0 minutes)
2014-04-29 08:08:27 receive version message: /bitcoinseeder:0.01/: version 60000, blocks=230000, us=213.239.218.20:8333, them=0.0.0.0:0, peer=178.18.90.41:52783
2014-04-29 08:08:27 Added time data, samples 6, offset +0 (+0 minutes)
2014-04-29 08:08:31 connect() to 24.136.254.2:8333 failed after select(): No route to host
2014-04-29 08:08:37 connect() to 187.15.64.129:8333 failed after select(): Connection refused
2014-04-29 08:08:38 receive version message: /Satoshi:0.8.5/: version 70001, blocks=298263, us=213.239.218.20:37793, them=209.99.52.77:8333, peer=209.99.52.77:8333
2014-04-29 08:08:38 Added time data, samples 7, offset -1 (+0 minutes)
2014-04-29 08:08:38 nTimeOffset = +0  (+0 minutes)
2014-04-29 08:08:50 receive version message: /Satoshi:0.9.0/: version 70002, blocks=298263, us=213.239.218.20:54044, them=69.23.94.246:8333, peer=69.23.94.246:8333
2014-04-29 08:08:50 Added time data, samples 8, offset -15 (+0 minutes)
2014-04-29 08:08:50 receive version message: /Satoshi:0.8.6/: version 70001, blocks=298263, us=213.239.218.20:45277, them=84.126.227.120:8333, peer=84.126.227.120:8333
2014-04-29 08:08:50 Added time data, samples 9, offset -1 (+0 minutes)
2014-04-29 08:08:50 nTimeOffset = +0  (+0 minutes)
2014-04-29 08:08:51 receive version message: /Satoshi:0.8.6/: version 70001, blocks=298263, us=213.239.218.20:55627, them=91.66.153.44:8333, peer=91.66.153.44:8333
2014-04-29 08:08:51 Added time data, samples 10, offset -2 (+0 minutes)
2014-04-29 08:09:05 receive version message: /bitcoinseeder:0.01/: version 60000, blocks=230000, us=[2a01:4f8:a0:74c8::2]:8333, them=0.0.0.0:0, peer=[2a02:348:5e:5a29::1]:39788
2014-04-29 08:09:05 Added time data, samples 11, offset +0 (+0 minutes)
2014-04-29 08:09:05 nTimeOffset = +0  (+0 minutes)
2014-04-29 08:09:35 receive version message: Dain 0.0.1: version 70001, blocks=298263, us=213.239.218.20:8333, them=162.242.155.221:8333, peer=162.242.155.221:53878
2014-04-29 08:09:35 Added time data, samples 12, offset +0 (+0 minutes)
2014-04-29 08:09:38 receive version message: /Snoopy:0.1/: version 60001, blocks=0, us=213.239.218.20:8333, them=192.33.90.253:8333, peer=192.33.90.253:34143
2014-04-29 08:09:38 Added time data, samples 13, offset +5 (+0 minutes)
2014-04-29 08:09:38 nTimeOffset = +0  (+0 minutes)
2014-04-29 08:10:16 receive version message: /bitcoinseeder:0.01/: version 60000, blocks=230000, us=213.239.218.20:8333, them=0.0.0.0:0, peer=192.3.11.20:49902
2014-04-29 08:10:16 Added time data, samples 14, offset +36 (+0 minutes)
2014-04-29 08:10:36 receive version message: /getaddr.bitnodes.io:0.1/: version 70001, blocks=298263, us=213.239.218.20:8333, them=0.0.0.0:0, peer=148.251.238.178:13436
2014-04-29 08:10:36 Added time data, samples 15, offset +0 (+0 minutes)
2014-04-29 08:10:36 nTimeOffset = +0  (+0 minutes)
2014-04-29 08:11:11 receive version message: /bitcoinseeder:0.01/: version 60000, blocks=230000, us=213.239.218.20:8333, them=0.0.0.0:0, peer=108.18.18.4:46999
2014-04-29 08:11:11 Added time data, samples 16, offset +36 (+0 minutes)
2014-04-29 08:11:23 receive version message: /getaddr.bitnodes.io:0.1/: version 70001, blocks=298263, us=[2a01:4f8:a0:74c8::2]:8333, them=0.0.0.0:0, peer=[2a01:4f8:202:81b1::2]:54634
2014-04-29 08:11:23 Added time data, samples 17, offset +0 (+0 minutes)
2014-04-29 08:11:23 nTimeOffset = +0  (+0 minutes)




From mike at plan99.net  Tue Apr 29 14:13:28 2014
From: mike at plan99.net (Mike Hearn)
Date: Tue, 29 Apr 2014 16:13:28 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <20140428214102.GA8347@netbook.cypherspace.org>
References: <CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>
	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>
	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>
	<5359E509.4080907@gmail.com>
	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>
	<535A60FE.10209@gmail.com>
	<CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>
	<535BA357.6050607@gmail.com>
	<CANOOu=_T82zuV79DWZFGK0Nomhp-Y4tqOhw6ZHhCLb2uGtdR5w@mail.gmail.com>
	<535CFDB4.1000200@gmail.com>
	<20140428214102.GA8347@netbook.cypherspace.org>
Message-ID: <CANEZrP0E=i6gyJwvLZRTeKvqaVrxR69=UzJWsAqaK2=QSdtn_A@mail.gmail.com>

I do think we need to move beyond this idea of Bitcoin being some kind of
elegant embodiment of natural mathematical law. It just ain't so.

Every time miners and nodes ignore a block that creates >formula() coins
that's a majority vote on a controversial political matter, as evidenced by
the disagreement with mainstream economics and that it's one of the most
common things for alt coins to change. Indeed Satoshi's chosen inflation
formula is a highly political statement on the value of inflation - he
could have programmed Bitcoin to inflate forever and avoided a whole area
of politics, but he chose not to.

So please, let's agree to accept that Bitcoin is ultimately just a piece of
software that encodes rules helping us run our little community in some
specific ways. It's not physics and we should believe our own hype by
pretending it is.

On Mon, Apr 28, 2014 at 11:41 PM, Adam Back <adam at cypherspace.org> wrote:

> I think the reason that it would likely work out badly is that its not
> provable, and so no consensus rule can be constructed requiring proof, so
> then it risks devolving to a political decision.
>

It's the other way around. If miners decide to fork the chain then that
leaves no proof (beyond the old blocks, which could have been a natural
fork - there's no way to know - and nodes don't want to keep them around
anyway). If they explicitly vote to get the same effect but without
actually forking, it leaves a proof in the form of the votes in the
coinbase that can be seen afterwards.


> Step 3: Finney attackers vote down other pools to make the point.


It only works if the majority of hashpower is controlled by attackers, in
which case Bitcoin is already doomed. So it doesn't matter at that point.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140429/d34bb0b1/attachment.html>

From mike at plan99.net  Tue Apr 29 14:15:10 2014
From: mike at plan99.net (Mike Hearn)
Date: Tue, 29 Apr 2014 16:15:10 +0200
Subject: [Bitcoin-development] please check my debug.log
In-Reply-To: <20140429081326.GX26986@leitl.org>
References: <20140429081326.GX26986@leitl.org>
Message-ID: <CANEZrP1hQFzDcZjzg01nj1kd5ktw+332tDUKXkofmxoQjvBm8w@mail.gmail.com>

Looks good to me!

You're not in the DNS seeds yet. If you leave your nodes up for a while
then you'll start getting traffic from bitcoinj clients too.


On Tue, Apr 29, 2014 at 10:13 AM, Eugen Leitl <eugen at leitl.org> wrote:

> I've put up some bitcoind nodes after the network is
> in need of some, and would like some feedback in that
> the nodes are fully operational and doing something
> useful. Please check the logs and tell me whether
> I'm doing good.
>
> debug.log from a node that has been running for a day:
>
> 2014-04-29 08:06:18 ERROR: CheckTransaction() : vin empty
> 2014-04-29 08:06:18 ERROR: AcceptToMemoryPool: : CheckTransaction failed
> 2014-04-29 08:06:18 Misbehaving: 122.224.182.248:23159 (0 -> 10)
> 2014-04-29 08:07:00 receive version message: /getaddr.bitnodes.io:0.1/:
> version 70001, blocks=298263, us=88.198.51.132:8333, them=0.0.0.0:0, peer=
> 148.251.238.178:63657
> 2014-04-29 08:07:19 receive version message: /bitcoinseeder:0.01/: version
> 60000, blocks=230000, us=[2a01:4f8:131:13ed::2]:8333, them=0.0.0.0:0,
> peer=[2a02:348:5e:5a29::1]:53921
> 2014-04-29 08:09:37 receive version message: /Snoopy:0.1/: version 60001,
> blocks=0, us=88.198.51.132:8333, them=192.33.90.253:8333, peer=
> 192.33.90.253:43104
> 2014-04-29 08:09:37 socket recv error 104
> 2014-04-29 08:10:26 receive version message: /getaddr.bitnodes.io:0.1/:
> version 70001, blocks=298263, us=[2a01:4f8:131:13ed::2]:8333, them=
> 0.0.0.0:0, peer=[2a01:4f8:202:81b1::2]:50624
> 2014-04-29 08:10:32 receive version message: /bitcoinseeder:0.01/: version
> 60000, blocks=230000, us=88.198.51.132:8333, them=0.0.0.0:0, peer=
> 217.78.0.153:37275
> 2014-04-29 08:10:50 receive version message: /getaddr.bitnodes.io:0.1/:
> version 70001, blocks=298263, us=88.198.51.132:8333, them=0.0.0.0:0, peer=
> 148.251.238.178:50788
>
> debug.log from a node that I just restarted:
>
> 2014-04-29 08:06:16 Opening LevelDB in /home/bitcoind/.bitcoin/blocks/index
> 2014-04-29 08:06:17 Opened LevelDB successfully
> 2014-04-29 08:06:17 Opening LevelDB in /home/bitcoind/.bitcoin/chainstate
> 2014-04-29 08:06:19 Opened LevelDB successfully
> 2014-04-29 08:06:22 LoadBlockIndexDB(): last block file = 135
> 2014-04-29 08:06:22 LoadBlockIndexDB(): last block file info:
> CBlockFileInfo(blocks=631, size=128154379, heights=297633...298263,
> time=2014-04-25...2014-04-29)
> 2014-04-29 08:06:22 LoadBlockIndexDB(): transaction index disabled
> 2014-04-29 08:06:22 LoadBlockIndexDB():
> hashBestChain=0000000000000000162f5f571eef4742b70204d983bda3c4b18fc1496ac27f86
> height=298263 date=2014-04-29 08:00:23 progress=0.999981
> 2014-04-29 08:06:22 init message: Verifying blocks...
> 2014-04-29 08:06:22 Verifying last 288 blocks at level 3
> 2014-04-29 08:07:42 No coin database inconsistencies in last 289 blocks
> (111189 transactions)
> 2014-04-29 08:07:42  block index           86284ms
> 2014-04-29 08:07:42 init message: Loading wallet...
> 2014-04-29 08:07:42 nFileVersion = 90100
> 2014-04-29 08:07:42 Keys: 101 plaintext, 0 encrypted, 101 w/ metadata, 101
> total
> 2014-04-29 08:07:43  wallet                  108ms
> 2014-04-29 08:07:43 init message: Rescanning...
> 2014-04-29 08:07:43 Rescanning last 39 blocks (from block 298224)...
> 2014-04-29 08:07:43  rescan                  204ms
> 2014-04-29 08:07:43 init message: Loading addresses...
> 2014-04-29 08:07:43 Loaded 14015 addresses from peers.dat  84ms
> 2014-04-29 08:07:43 mapBlockIndex.size() = 298264
> 2014-04-29 08:07:43 nBestHeight = 298263
> 2014-04-29 08:07:43 setKeyPool.size() = 100
> 2014-04-29 08:07:43 mapWallet.size() = 0
> 2014-04-29 08:07:43 mapAddressBook.size() = 1
> 2014-04-29 08:07:43 AddLocal(213.239.218.20:8333,1)
> 2014-04-29 08:07:43 IPv4 eth0: 213.239.218.20
> 2014-04-29 08:07:43 AddLocal([2a01:4f8:a0:74c8::2]:8333,1)
> 2014-04-29 08:07:43 IPv6 eth0: 2a01:4f8:a0:74c8::2
> 2014-04-29 08:07:43 ext-ip thread start
> 2014-04-29 08:07:43 dnsseed thread start
> 2014-04-29 08:07:43 Loading addresses from DNS seeds (could take a while)
> 2014-04-29 08:07:43 net thread start
> 2014-04-29 08:07:43 upnp thread start
> 2014-04-29 08:07:43 opencon thread start
> 2014-04-29 08:07:43 addcon thread start
> 2014-04-29 08:07:43 dumpaddr thread start
> 2014-04-29 08:07:43 msghand thread start
> 2014-04-29 08:07:43 init message: Done loading
> 2014-04-29 08:07:43 GetMyExternalIP() received [213.239.218.20]
> 213.239.218.20:0
> 2014-04-29 08:07:43 GetMyExternalIP() returned 213.239.218.20
> 2014-04-29 08:07:43 AddLocal(213.239.218.20:8333,4)
> 2014-04-29 08:07:43 ext-ip thread exit
> 2014-04-29 08:07:44 receive version message: /Satoshi:0.8.6/: version
> 70001, blocks=298263, us=213.239.218.20:44169, them=166.78.243.104:8333,
> peer=166.78.243.104:8333
> 2014-04-29 08:07:44 Added time data, samples 2, offset +8 (+0 minutes)
> 2014-04-29 08:07:51 No valid UPnP IGDs found
> 2014-04-29 08:07:51 upnp thread exit
> 2014-04-29 08:07:53 connect() to 71.23.29.162:8333 failed after select():
> No route to host
> 2014-04-29 08:07:53 receive version message: /Satoshi:0.9.1/: version
> 70002, blocks=298263, us=213.239.218.20:46921, them=91.238.134.58:8333,
> peer=91.238.134.58:8333
> 2014-04-29 08:07:53 Added time data, samples 3, offset +0 (+0 minutes)
> 2014-04-29 08:07:54 106 addresses found from DNS seeds
> 2014-04-29 08:07:54 dnsseed thread exit
> 2014-04-29 08:08:16 receive version message: /Satoshi:0.8.6/: version
> 70001, blocks=298263, us=213.239.218.20:50533, them=98.218.92.212:8333,
> peer=98.218.92.212:8333
> 2014-04-29 08:08:16 Added time data, samples 4, offset +2 (+0 minutes)
> 2014-04-29 08:08:22 receive version message: /Satoshi:0.8.5/: version
> 70001, blocks=298263, us=213.239.218.20:35016, them=108.3.172.22:8333,
> peer=108.3.172.22:8333
> 2014-04-29 08:08:22 Added time data, samples 5, offset +3 (+0 minutes)
> 2014-04-29 08:08:22 nTimeOffset = +2  (+0 minutes)
> 2014-04-29 08:08:27 receive version message: /bitcoinseeder:0.01/: version
> 60000, blocks=230000, us=213.239.218.20:8333, them=0.0.0.0:0, peer=
> 178.18.90.41:52783
> 2014-04-29 08:08:27 Added time data, samples 6, offset +0 (+0 minutes)
> 2014-04-29 08:08:31 connect() to 24.136.254.2:8333 failed after select():
> No route to host
> 2014-04-29 08:08:37 connect() to 187.15.64.129:8333 failed after
> select(): Connection refused
> 2014-04-29 08:08:38 receive version message: /Satoshi:0.8.5/: version
> 70001, blocks=298263, us=213.239.218.20:37793, them=209.99.52.77:8333,
> peer=209.99.52.77:8333
> 2014-04-29 08:08:38 Added time data, samples 7, offset -1 (+0 minutes)
> 2014-04-29 08:08:38 nTimeOffset = +0  (+0 minutes)
> 2014-04-29 08:08:50 receive version message: /Satoshi:0.9.0/: version
> 70002, blocks=298263, us=213.239.218.20:54044, them=69.23.94.246:8333,
> peer=69.23.94.246:8333
> 2014-04-29 08:08:50 Added time data, samples 8, offset -15 (+0 minutes)
> 2014-04-29 08:08:50 receive version message: /Satoshi:0.8.6/: version
> 70001, blocks=298263, us=213.239.218.20:45277, them=84.126.227.120:8333,
> peer=84.126.227.120:8333
> 2014-04-29 08:08:50 Added time data, samples 9, offset -1 (+0 minutes)
> 2014-04-29 08:08:50 nTimeOffset = +0  (+0 minutes)
> 2014-04-29 08:08:51 receive version message: /Satoshi:0.8.6/: version
> 70001, blocks=298263, us=213.239.218.20:55627, them=91.66.153.44:8333,
> peer=91.66.153.44:8333
> 2014-04-29 08:08:51 Added time data, samples 10, offset -2 (+0 minutes)
> 2014-04-29 08:09:05 receive version message: /bitcoinseeder:0.01/: version
> 60000, blocks=230000, us=[2a01:4f8:a0:74c8::2]:8333, them=0.0.0.0:0,
> peer=[2a02:348:5e:5a29::1]:39788
> 2014-04-29 08:09:05 Added time data, samples 11, offset +0 (+0 minutes)
> 2014-04-29 08:09:05 nTimeOffset = +0  (+0 minutes)
> 2014-04-29 08:09:35 receive version message: Dain 0.0.1: version 70001,
> blocks=298263, us=213.239.218.20:8333, them=162.242.155.221:8333, peer=
> 162.242.155.221:53878
> 2014-04-29 08:09:35 Added time data, samples 12, offset +0 (+0 minutes)
> 2014-04-29 08:09:38 receive version message: /Snoopy:0.1/: version 60001,
> blocks=0, us=213.239.218.20:8333, them=192.33.90.253:8333, peer=
> 192.33.90.253:34143
> 2014-04-29 08:09:38 Added time data, samples 13, offset +5 (+0 minutes)
> 2014-04-29 08:09:38 nTimeOffset = +0  (+0 minutes)
> 2014-04-29 08:10:16 receive version message: /bitcoinseeder:0.01/: version
> 60000, blocks=230000, us=213.239.218.20:8333, them=0.0.0.0:0, peer=
> 192.3.11.20:49902
> 2014-04-29 08:10:16 Added time data, samples 14, offset +36 (+0 minutes)
> 2014-04-29 08:10:36 receive version message: /getaddr.bitnodes.io:0.1/:
> version 70001, blocks=298263, us=213.239.218.20:8333, them=0.0.0.0:0,
> peer=148.251.238.178:13436
> 2014-04-29 08:10:36 Added time data, samples 15, offset +0 (+0 minutes)
> 2014-04-29 08:10:36 nTimeOffset = +0  (+0 minutes)
> 2014-04-29 08:11:11 receive version message: /bitcoinseeder:0.01/: version
> 60000, blocks=230000, us=213.239.218.20:8333, them=0.0.0.0:0, peer=
> 108.18.18.4:46999
> 2014-04-29 08:11:11 Added time data, samples 16, offset +36 (+0 minutes)
> 2014-04-29 08:11:23 receive version message: /getaddr.bitnodes.io:0.1/:
> version 70001, blocks=298263, us=[2a01:4f8:a0:74c8::2]:8333, them=
> 0.0.0.0:0, peer=[2a01:4f8:202:81b1::2]:54634
> 2014-04-29 08:11:23 Added time data, samples 17, offset +0 (+0 minutes)
> 2014-04-29 08:11:23 nTimeOffset = +0  (+0 minutes)
>
>
>
> ------------------------------------------------------------------------------
> "Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.  Get
> unparalleled scalability from the best Selenium testing platform available.
> Simple to use. Nothing to install. Get started now for free."
> http://p.sf.net/sfu/SauceLabs
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140429/21091879/attachment.html>

From gmaxwell at gmail.com  Tue Apr 29 14:21:34 2014
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 29 Apr 2014 07:21:34 -0700
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CANEZrP0E=i6gyJwvLZRTeKvqaVrxR69=UzJWsAqaK2=QSdtn_A@mail.gmail.com>
References: <CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>
	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>
	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>
	<5359E509.4080907@gmail.com>
	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>
	<535A60FE.10209@gmail.com>
	<CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>
	<535BA357.6050607@gmail.com>
	<CANOOu=_T82zuV79DWZFGK0Nomhp-Y4tqOhw6ZHhCLb2uGtdR5w@mail.gmail.com>
	<535CFDB4.1000200@gmail.com>
	<20140428214102.GA8347@netbook.cypherspace.org>
	<CANEZrP0E=i6gyJwvLZRTeKvqaVrxR69=UzJWsAqaK2=QSdtn_A@mail.gmail.com>
Message-ID: <CAAS2fgRbGhMO+KzNQ9NhvpH6QyoaOJH-x9rDjYqEtq0R9=d7Vg@mail.gmail.com>

On Tue, Apr 29, 2014 at 7:13 AM, Mike Hearn <mike at plan99.net> wrote:
> It only works if the majority of hashpower is controlled by attackers, in
> which case Bitcoin is already doomed. So it doesn't matter at that point.

These parties wouldn't generally consider themselves attackers? nor
would many users (presumably everyone who mines on ghash.io, for
example)? rather they'd they may consider someone using hashpower
voting to reassign coins to be an attacker, and reassigning their
coins instead to be a morally justified and pragmatic response.

I think we're capable here of discussing the specifics without needing
to use generalizations which invite definitional arguments... I don't
think that bombastic language like doomed helps the dialog.



From mike at plan99.net  Tue Apr 29 14:26:01 2014
From: mike at plan99.net (Mike Hearn)
Date: Tue, 29 Apr 2014 16:26:01 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <CAAS2fgRbGhMO+KzNQ9NhvpH6QyoaOJH-x9rDjYqEtq0R9=d7Vg@mail.gmail.com>
References: <CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>
	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>
	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>
	<5359E509.4080907@gmail.com>
	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>
	<535A60FE.10209@gmail.com>
	<CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>
	<535BA357.6050607@gmail.com>
	<CANOOu=_T82zuV79DWZFGK0Nomhp-Y4tqOhw6ZHhCLb2uGtdR5w@mail.gmail.com>
	<535CFDB4.1000200@gmail.com>
	<20140428214102.GA8347@netbook.cypherspace.org>
	<CANEZrP0E=i6gyJwvLZRTeKvqaVrxR69=UzJWsAqaK2=QSdtn_A@mail.gmail.com>
	<CAAS2fgRbGhMO+KzNQ9NhvpH6QyoaOJH-x9rDjYqEtq0R9=d7Vg@mail.gmail.com>
Message-ID: <CANEZrP2wDXLHDtdQPvqvz0CLRLzcsGB=uMFwWVYFq2N5CNOLrA@mail.gmail.com>

>
> These parties wouldn't generally consider themselves attackers
>

Of course not, attackers rarely do :)

But they are miners who are taking part in malicious double spending. That
makes them attackers. If miners don't exist to stop double spending, what
do they exist for?

I mean, this is fundamental. What do you think miners exist for?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140429/b3dcfb3b/attachment.html>

From jouke at bitonic.nl  Tue Apr 29 16:44:12 2014
From: jouke at bitonic.nl (Jouke Hofman)
Date: Tue, 29 Apr 2014 18:44:12 +0200
Subject: [Bitcoin-development] Proposal to change payment protocol
	signing
In-Reply-To: <CABsx9T2v=oX5eR9yoBULPVceZFD2_d+xMF7jQJACHYP=FgWK-A@mail.gmail.com>
References: <CABsx9T2v=oX5eR9yoBULPVceZFD2_d+xMF7jQJACHYP=FgWK-A@mail.gmail.com>
Message-ID: <535FD6DC.8000002@bitonic.nl>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

We have BIP70 already in use (over a hundred paid requests).

Could you elaborate on why this needs changing?



On 28-04-14 14:39, Gavin Andresen wrote:
> There is a discussion about clarifying how BIP70 signs payment
> requests here: https://github.com/bitcoin/bips/pull/41
> 
> The issue is what to do with the signature field before signing.
> The code Mike and I initially wrote does this:
> 
> request.set_signature(string(""));
> 
> (sets signature to the empty string)
> 
> I think that is a mistake; it should be:
> 
> request.clear_signature();
> 
> (clears signature field, so it is not serialized at all).
> 
> So: if you are implementing, or have implemented, the payment
> protocol, please chime in. I'd like to change the spec and the
> reference implementation NOW, while BIP70 is still a 'Draft'.
> 
> Because this type of "hey, I'm implementing your standard and it
> doesn't work the way I think it should" mistake is exactly why BIPs
> take a while before being declared 'Final.'
> 
> 
> 
> 
> ------------------------------------------------------------------------------
>
> 
"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE
> Instantly run your Selenium tests across 300+ browser/OS combos.
> Get unparalleled scalability from the best Selenium testing
> platform available. Simple to use. Nothing to install. Get started
> now for free." http://p.sf.net/sfu/SauceLabs
> 
> 
> 
> _______________________________________________ Bitcoin-development
> mailing list Bitcoin-development at lists.sourceforge.net 
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.14 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTX9bcAAoJELhWickZBkAlKqcH/RVFAr6vGgDjJvYah46StMHy
ZhKwpV1oqFCslOts6MyO+bZp9uDRlmYtnAy02CTPmlico3IyK85/+CGCGEdyiGo1
AEI2Ixr5FJs9t8uAVLyUKwOQddUFEJuZuiKXd1Wl9GqfG/z8gwdSxd08Wrq57lSH
JdwUnWOG1xBwyhgm7stqFoXgTrrnFNcE97vwsk6QMIzJG/v0suw7Lp42q7bKYaA/
J9xWSQ1cRKSPdsmu4K45oxXriqUmiqz3EouaTSQqC80OO7y8sfa96DqiHR83Vy3w
KUna5enjGqhhberWCokg3x5lCiH/IfLPrgK23iib4cg6Vm70jSQ2S2Xh/NuoDaM=
=JA5K
-----END PGP SIGNATURE-----



From gavinandresen at gmail.com  Tue Apr 29 19:12:49 2014
From: gavinandresen at gmail.com (Gavin)
Date: Tue, 29 Apr 2014 12:12:49 -0700
Subject: [Bitcoin-development] Proposal to change payment protocol
	signing
In-Reply-To: <535FD6DC.8000002@bitonic.nl>
References: <CABsx9T2v=oX5eR9yoBULPVceZFD2_d+xMF7jQJACHYP=FgWK-A@mail.gmail.com>
	<535FD6DC.8000002@bitonic.nl>
Message-ID: <91F405F1-7F82-42EA-8517-7E2A9444D91A@gmail.com>

Consensus is the spec should be clarified to match current behavior, so it won't change.

--
Gavin Andresen


> On Apr 29, 2014, at 9:44 AM, Jouke Hofman <jouke at bitonic.nl> wrote:
> 
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> We have BIP70 already in use (over a hundred paid requests).
> 
> Could you elaborate on why this needs changing?
> 
> 
> 
>> On 28-04-14 14:39, Gavin Andresen wrote:
>> There is a discussion about clarifying how BIP70 signs payment
>> requests here: https://github.com/bitcoin/bips/pull/41
>> 
>> The issue is what to do with the signature field before signing.
>> The code Mike and I initially wrote does this:
>> 
>> request.set_signature(string(""));
>> 
>> (sets signature to the empty string)
>> 
>> I think that is a mistake; it should be:
>> 
>> request.clear_signature();
>> 
>> (clears signature field, so it is not serialized at all).
>> 
>> So: if you are implementing, or have implemented, the payment
>> protocol, please chime in. I'd like to change the spec and the
>> reference implementation NOW, while BIP70 is still a 'Draft'.
>> 
>> Because this type of "hey, I'm implementing your standard and it
>> doesn't work the way I think it should" mistake is exactly why BIPs
>> take a while before being declared 'Final.'
>> 
>> 
>> 
>> 
>> ---------------------------------------



From luke at dashjr.org  Tue Apr 29 19:14:59 2014
From: luke at dashjr.org (Luke-Jr)
Date: Tue, 29 Apr 2014 19:14:59 +0000
Subject: [Bitcoin-development] GBT 2.0 wishlist
Message-ID: <201404291915.00239.luke@dashjr.org>

Let's try to get GBT 2.0 off the ground finally.. :)

Here's some wishlist items/ideas:
- Extremely low bandwidth use (binary protocol, with compression support)
- UDP-based transport protocol? (so message order need not be preserved at the
  expense of latency)
- Ability to instruct miners to insert (username,hash-of-username,hash-of-
  options-array,hash-of-both,etc) in coinbase at a given position (this
  enables cheaper proof-of-work auditing of a pool's rewards; it can just
  save/publish shares meeting higher targets and anyone can verify the shares
  were found by a given username/hash)
- Always encrypted (once by the server), with optional authentication via
  CA/namecoin/URI
- Incrementing "precommit id" so miners can precommit to settings without 
  needing a new/custom coinbase
- Multiple clients should share bandwidth on a LAN (similar to slush's stratum
  proxy)
- Convey prevblock as block header so we can follow blockchains securely.
- Fee logic: pools can claim as much coinbase distribution as they require
  (with hint from miner); miners are expected to ensure subsidy + transaction 
  fees tally up to the required total; any fees beyond requires total may be
  distributed as the miner wishes. Potentially, pools could allow 50% (or
  similar) participation allowing a miner to use multiple pools at the same
  time.

Rather than polluting the main development mailing list with what is sure to 
have quite a bit of discussion, I have asked kinlo (who hosts the poolowners 
mailing list) to provide a dedicated list for this purpose. Interested parties 
should please subscribe via http://list.pfoe.be/mailman/listinfo/gbt2 and send 
replies to gbt2 at list.pfoe.be (once a draft BIP is ready, the main dev mailing 
list will be once again CC'd).

Luke



From justusranvier at gmail.com  Tue Apr 29 19:29:33 2014
From: justusranvier at gmail.com (Justus Ranvier)
Date: Tue, 29 Apr 2014 19:29:33 +0000
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CANEZrP0E=i6gyJwvLZRTeKvqaVrxR69=UzJWsAqaK2=QSdtn_A@mail.gmail.com>
References: <CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>	<5359E509.4080907@gmail.com>	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>	<535A60FE.10209@gmail.com>	<CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>	<535BA357.6050607@gmail.com>	<CANOOu=_T82zuV79DWZFGK0Nomhp-Y4tqOhw6ZHhCLb2uGtdR5w@mail.gmail.com>	<535CFDB4.1000200@gmail.com>	<20140428214102.GA8347@netbook.cypherspace.org>
	<CANEZrP0E=i6gyJwvLZRTeKvqaVrxR69=UzJWsAqaK2=QSdtn_A@mail.gmail.com>
Message-ID: <535FFD9D.5010107@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 04/29/2014 02:13 PM, Mike Hearn wrote:
> I do think we need to move beyond this idea of Bitcoin being some
> kind of elegant embodiment of natural mathematical law. It just
> ain't so.
> 

I think everybody understands that Bitcoin has a positive net present
value exactly because it, unlike every other digital currency which
came before, does not include a feature that allows for balances to be
confiscated. Implementing any such feature, to any degree at all,
would render Bitcoin completely valueless.

There are two possibilities here:

If you understand this, then your proposal is a malicious attempt to
undermine Bitcoin.

If you don't understand this then you suffer from a very serious case
of economic illiteracy, a case so bad that your continued
participation in Bitcoin represents a clear and present danger to all
Bitcoin users. If you can't even get the easy questions right, then
god help us all if you're ever faced with a difficult one.

I don't have enough evidence to distinguish between the incompetence
hypothesis and the malice hypothesis, but it doesn't matter.
Regardless of your abilities or motives your proposal is unacceptable.
If you want a currency where miners can vote to steal from other
miners then implement it in Hearncoin and leave Bitcoin alone.


- -- 
Support online privacy by using email encryption whenever possible.
Learn how here: http://www.youtube.com/watch?v=bakOKJFtB-k
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTX/2dAAoJECoisBQbQ4v0jAoH/R1oNZ1tVp6DJ5BuPg0ZTav0
Dvzq8EfX/uRbRgmxotCHMwY6FJCoXqJTLyOnl2p670t7l5ZXqd91MdKKP2z7jYPY
GsVbqfGreF0dWKCd0mKTG5DM8pxndNWteGIsw9/sYvY/3p2Vopzp6N7fpl8TEf6p
2nyIzEqTD4aK5QkhM+sNnP1Cyh/l5AjJTES23GqSQIMG6vzLgqE8kyze+ANFVg1U
yka6bz4DX7DO7meyJyyOFaMJu6mgY+m6dSVaR7j/QmQMu22SwlSiPgqe6iO//os3
zcmwe/x4+5CmqJOO/PL5Or28iw/Qdf6vNePiaEIFtBzoKnHBhS2nAtL6jnOL928=
=4yIu
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x1B438BF4.asc
Type: application/pgp-keys
Size: 21678 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140429/b00469ee/attachment.bin>

From laanwj at gmail.com  Wed Apr 30 07:02:23 2014
From: laanwj at gmail.com (Wladimir)
Date: Wed, 30 Apr 2014 09:02:23 +0200
Subject: [Bitcoin-development] Compatibility Bitcoin-Qt with Tails
In-Reply-To: <535BECDC.9070804@anonymousbitcoinbook.com>
References: <CA+s+GJARfPhMo8ucE7E40bE890NsuzuWPq1DQuK6ZVMvps0LVQ@mail.gmail.com>
	<535BECDC.9070804@anonymousbitcoinbook.com>
Message-ID: <CA+s+GJC_1YzKNwQKSreWB73vZVMYmM=+CqonqP7XWcDFP7ZZLw@mail.gmail.com>

On Sat, Apr 26, 2014 at 7:29 PM, Kristov Atlas
<author at anonymousbitcoinbook.com> wrote:
>>
> Hey Wladimir,
>
> Thanks for building this binary. The initial problem with Qt was
> resolved, and I was able to load the GUI that chooses my datadir. After
> choosing the default datadir, however, it segfaulted.

I've fixed the issue; at least on Debian 6 - which is a lot more
conductive to development than tails :-). See
https://github.com/bitcoin/bitcoin/pull/4094 for the gory details. New
test build available:

https://download.visucore.com/bitcoin/linux-gitian-3cbabfa.tar.gz
(sigs: https://download.visucore.com/bitcoin/linux-gitian-3cbabfa.tar.gz.sig
)

Wladimir



From gacrux at gmail.com  Wed Apr 30 13:00:06 2014
From: gacrux at gmail.com (Gareth Williams)
Date: Wed, 30 Apr 2014 23:00:06 +1000
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CANEZrP0E=i6gyJwvLZRTeKvqaVrxR69=UzJWsAqaK2=QSdtn_A@mail.gmail.com>
References: <CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>	<5359E509.4080907@gmail.com>	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>	<535A60FE.10209@gmail.com>	<CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>	<535BA357.6050607@gmail.com>	<CANOOu=_T82zuV79DWZFGK0Nomhp-Y4tqOhw6ZHhCLb2uGtdR5w@mail.gmail.com>	<535CFDB4.1000200@gmail.com>	<20140428214102.GA8347@netbook.cypherspace.org>
	<CANEZrP0E=i6gyJwvLZRTeKvqaVrxR69=UzJWsAqaK2=QSdtn_A@mail.gmail.com>
Message-ID: <5360F3D6.4040002@gmail.com>

On 30/04/14 00:13, Mike Hearn wrote:
> I do think we need to move beyond this idea of Bitcoin being some kind
> of elegant embodiment of natural mathematical law. It just ain't so. 

I haven't seen anybody arguing that it is.

Bitcoin is the elegant embodiment of /artificially contrived/
mathematical rules, which just so happen to be very useful in their
current configuration :-P

Nobody is saying those rules are immutable. Just that it isn't sensible
to undermine them by introducing imprecise and unpredictable elements
like human politics.


> Every time miners and nodes ignore a block that creates >formula() coins
> that's a majority vote on a controversial political matter

No it isn't. That's the node enforcing the protocol. It isn't a matter
of opinion, and it isn't a vote. The protocol is clearly defined: you
either follow it or you're not running a Bitcoin node. If 51% don't
follow it tomorrow /they're/ not running Bitcoin.

Contrast with your "vote to reinterpret the meaning of arbitrary blocks"
mechaism - you're free to vote either way while remaining within the
protocol. That's a /real/ vote - majority decides what the Bitcoin
protocol /and every node that follows it/ will recognise as valid.
Nothing like that currently exists. Thank $deity.



-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140430/3e39d0ea/attachment.sig>

From gacrux at gmail.com  Wed Apr 30 13:12:30 2014
From: gacrux at gmail.com (Gareth Williams)
Date: Wed, 30 Apr 2014 23:12:30 +1000
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CANEZrP2wDXLHDtdQPvqvz0CLRLzcsGB=uMFwWVYFq2N5CNOLrA@mail.gmail.com>
References: <CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>	<5359E509.4080907@gmail.com>	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>	<535A60FE.10209@gmail.com>	<CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>	<535BA357.6050607@gmail.com>	<CANOOu=_T82zuV79DWZFGK0Nomhp-Y4tqOhw6ZHhCLb2uGtdR5w@mail.gmail.com>	<535CFDB4.1000200@gmail.com>	<20140428214102.GA8347@netbook.cypherspace.org>	<CANEZrP0E=i6gyJwvLZRTeKvqaVrxR69=UzJWsAqaK2=QSdtn_A@mail.gmail.com>	<CAAS2fgRbGhMO+KzNQ9NhvpH6QyoaOJH-x9rDjYqEtq0R9=d7Vg@mail.gmail.com>
	<CANEZrP2wDXLHDtdQPvqvz0CLRLzcsGB=uMFwWVYFq2N5CNOLrA@mail.gmail.com>
Message-ID: <5360F6BE.5000703@gmail.com>

On 30/04/14 00:26, Mike Hearn wrote:
>     These parties wouldn't generally consider themselves attackers
> 
> 
> Of course not, attackers rarely do :)

If Bitcoin works correctly nobody should have to care if they consider
themselves attackers, defenders, or little green men from Mars. There
are simply nodes that follow the protocol, and nodes that do not.

The fact that you even need to think about who should and should not be
considered an attacker, in the context of your proposed change, should
be ringing alarm bells :)


> What do you think miners exist for?

Ordering transactions.



-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140430/e5d8bcd3/attachment.sig>

From mike at plan99.net  Wed Apr 30 13:55:56 2014
From: mike at plan99.net (Mike Hearn)
Date: Wed, 30 Apr 2014 15:55:56 +0200
Subject: [Bitcoin-development] Coinbase reallocation to discourage
	Finney attacks
In-Reply-To: <5360F6BE.5000703@gmail.com>
References: <CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>
	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>
	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>
	<5359E509.4080907@gmail.com>
	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>
	<535A60FE.10209@gmail.com>
	<CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>
	<535BA357.6050607@gmail.com>
	<CANOOu=_T82zuV79DWZFGK0Nomhp-Y4tqOhw6ZHhCLb2uGtdR5w@mail.gmail.com>
	<535CFDB4.1000200@gmail.com>
	<20140428214102.GA8347@netbook.cypherspace.org>
	<CANEZrP0E=i6gyJwvLZRTeKvqaVrxR69=UzJWsAqaK2=QSdtn_A@mail.gmail.com>
	<CAAS2fgRbGhMO+KzNQ9NhvpH6QyoaOJH-x9rDjYqEtq0R9=d7Vg@mail.gmail.com>
	<CANEZrP2wDXLHDtdQPvqvz0CLRLzcsGB=uMFwWVYFq2N5CNOLrA@mail.gmail.com>
	<5360F6BE.5000703@gmail.com>
Message-ID: <CANEZrP18tiaiTGFCvqcV=Fmf7T_aCTH9sQGxJ0Ta8n0Pbv_4qQ@mail.gmail.com>

I think we're going around in circles here so this will be my last message
on the thread unless someone comes up with something new.

On Wed, Apr 30, 2014 at 3:12 PM, Gareth Williams <gacrux at gmail.com> wrote:

> If Bitcoin works correctly nobody should have to care if they consider
> themselves attackers, defenders, or little green men from Mars.


One last time, I request that people read the white paper from 2008 before
making statements like this. If the notion of attacker was irrelevant to
Bitcoin, it would not be mentioned in the abstract, would it?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140430/eabdcb7b/attachment.html>

From gacrux at gmail.com  Wed Apr 30 14:08:41 2014
From: gacrux at gmail.com (Gareth Williams)
Date: Thu, 01 May 2014 00:08:41 +1000
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CANEZrP0E=i6gyJwvLZRTeKvqaVrxR69=UzJWsAqaK2=QSdtn_A@mail.gmail.com>
References: <CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>	<5359E509.4080907@gmail.com>	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>	<535A60FE.10209@gmail.com>	<CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>	<535BA357.6050607@gmail.com>	<CANOOu=_T82zuV79DWZFGK0Nomhp-Y4tqOhw6ZHhCLb2uGtdR5w@mail.gmail.com>	<535CFDB4.1000200@gmail.com>	<20140428214102.GA8347@netbook.cypherspace.org>
	<CANEZrP0E=i6gyJwvLZRTeKvqaVrxR69=UzJWsAqaK2=QSdtn_A@mail.gmail.com>
Message-ID: <536103E9.5060706@gmail.com>

On 30/04/14 00:13, Mike Hearn wrote:
> Every time miners and nodes ignore a block that creates >formula() coins
> that's a majority vote on a controversial political matter

Actually, there's one more thing I'd like to add. Apologies to the list,
but it bears repeating:

* rejecting a block at validation

Is /very different/ from:

* reinterpreting a block that has already passed validation

Nodes ignoring a block that creates >formula() coins is rejection at
block *validation*. That's the protocol working as it is supposed to.
It's deliberately an all-or-nothing mechanism; you can't pick and choose
which blocks you like. If 51% of the network say your block is invalid,
they're now on a different fork. The consequences are this drastic on
purpose, for stability.

Nodes reinterpreting a block that has already passed validation is
almost the polar opposite of this. They're /ignoring the protocol/ and
making up their own meaning for stuff. Sidestepping the mechanism in the
paragraph above. I would hope it'd be self evident that this is dangerous.

Adam Back is arguing practicality in this thread. I'm arguing
fundamental principle. (And, er, someone else is randomly throwing
around ad hominems, which we'll politely ignore; Mike could work for
Lucifer himself and his good ideas would still be good, and his bad
ideas would still be bad, so let's just stick to the ideas eh.)

So, fundamental principle: don't reinterpret history!

We have validation for a very good reason. Undermine it and you might as
well have an unvalidated system like Counterparty, which I wouldn't
ever trust with more than the value of a small hamburger.

If the economic majority starts reinterpreting history (through whatever
voting mechanism / side-channel you like) that completely undermines
Bitcoin's validation, and its PoW. It's worse than 51% of miners
deciding to rewrite history.




-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140501/cba8ecc6/attachment.sig>

From gacrux at gmail.com  Wed Apr 30 14:31:08 2014
From: gacrux at gmail.com (Gareth Williams)
Date: Thu, 01 May 2014 00:31:08 +1000
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CANEZrP18tiaiTGFCvqcV=Fmf7T_aCTH9sQGxJ0Ta8n0Pbv_4qQ@mail.gmail.com>
References: <CANEZrP3obO9rXKcX+G7bs2dd3AqEFOsO8pCUF6orrkGeZyr9Ew@mail.gmail.com>	<CAC1+kJPxwTm6qvh2GYT2XMJAPD5O4WHLOGBTRmchRmZ2wS4MSg@mail.gmail.com>	<CANEZrP2PZFVvH3oJyLW80e9W_Fa4bvqQ25E7T-ZFFuG9u-q1hQ@mail.gmail.com>	<5359E509.4080907@gmail.com>	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>	<535A60FE.10209@gmail.com>	<CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>	<535BA357.6050607@gmail.com>	<CANOOu=_T82zuV79DWZFGK0Nomhp-Y4tqOhw6ZHhCLb2uGtdR5w@mail.gmail.com>	<535CFDB4.1000200@gmail.com>	<20140428214102.GA8347@netbook.cypherspace.org>	<CANEZrP0E=i6gyJwvLZRTeKvqaVrxR69=UzJWsAqaK2=QSdtn_A@mail.gmail.com>	<CAAS2fgRbGhMO+KzNQ9NhvpH6QyoaOJH-x9rDjYqEtq0R9=d7Vg@mail.gmail.com>	<CANEZrP2wDXLHDtdQPvqvz0CLRLzcsGB=uMFwWVYFq2N5CNOLrA@mail.gmail.com>	<5360F6BE.5000703@gmail.com>
	<CANEZrP18tiaiTGFCvqcV=Fmf7T_aCTH9sQGxJ0Ta8n0Pbv_4qQ@mail.gmail.com>
Message-ID: <5361092C.4080205@gmail.com>

On 30/04/14 23:55, Mike Hearn wrote:
>     If Bitcoin works correctly nobody should have to care if they consider
>     themselves attackers, defenders, or little green men from Mars.
> 
> 
> One last time, I request that people read the white paper from 2008
> before making statements like this. If the notion of attacker was
> irrelevant to Bitcoin, it would not be mentioned in the abstract, would it? 

I've read it :) The notion of an attacker is obviously relevant to
someone designing the system. It should not be relevant to someone
running a node.

I'll retire from posting on this too, I've posted way too much.

Our fundamental disagreement is simply that you think Bitcoin is, or
should be, a /democratic/ system. I think Bitcoin is, and should be, a
/trustless/ system. If we're going to resort to appeal to authority,
I'll point to the words "Electronic Cash System" in the title of
Satoshi's whitepaper :-P He intended to create ecash; that's widely
understood to mean trustless.

If there was this magic computer up in the sky somewhere, free from
human influence, that would run Satoshi's code for him in perpetuity
(let's overlook the initial upload please, bear with me), then I believe
Satoshi would've built his perfectly trustless ecash to run on that.

For lack of such a magic masterless computer he had to approximate one,
ingeniously using distributed consensus to achieve it. That's his real
invention - the "magic masterless computer" simulator, and the incentive
scheme to get the world to run it for him. (We'll see more of what it
can do if Ethereum ever gets off the ground.)

But for Pete's sake, Bitcoin is trustless. Just because the
infrastructure it sits atop is "democratic" (because there was no other
way to implement it,) doesn't mean you suddenly have to start voting on
everything.


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 555 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140501/afb10d09/attachment.sig>

From hozer at hozed.org  Wed Apr 30 17:06:38 2014
From: hozer at hozed.org (Troy Benjegerdes)
Date: Wed, 30 Apr 2014 12:06:38 -0500
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <5360F3D6.4040002@gmail.com>
References: <5359E509.4080907@gmail.com>
	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>
	<535A60FE.10209@gmail.com>
	<CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>
	<535BA357.6050607@gmail.com>
	<CANOOu=_T82zuV79DWZFGK0Nomhp-Y4tqOhw6ZHhCLb2uGtdR5w@mail.gmail.com>
	<535CFDB4.1000200@gmail.com>
	<20140428214102.GA8347@netbook.cypherspace.org>
	<CANEZrP0E=i6gyJwvLZRTeKvqaVrxR69=UzJWsAqaK2=QSdtn_A@mail.gmail.com>
	<5360F3D6.4040002@gmail.com>
Message-ID: <20140430170638.GE3180@nl.grid.coop>

On Wed, Apr 30, 2014 at 11:00:06PM +1000, Gareth Williams wrote:
> On 30/04/14 00:13, Mike Hearn wrote:
> > I do think we need to move beyond this idea of Bitcoin being some kind
> > of elegant embodiment of natural mathematical law. It just ain't so. 
> 
> I haven't seen anybody arguing that it is.
> 
> Bitcoin is the elegant embodiment of /artificially contrived/
> mathematical rules, which just so happen to be very useful in their
> current configuration :-P
> 
> Nobody is saying those rules are immutable. Just that it isn't sensible
> to undermine them by introducing imprecise and unpredictable elements
> like human politics.

As an end-user of Bitcoin, the whole possible value of a set of mathematical
rules has become completely trashed by the imprecise and unpredictable behavior
of buyers and sellers.

If the rules are not responsive to real human needs, bitcoin is worthless
as a long-term store of value because **my idea of value** changes over time.
This implies, in my mind, an absolutely requirement to attempt to gather 
some useful signal from the human political noise.

How do you determine what that signal is, so you can **change the rules**
and the mathematics so it makes more sense?

You've got to deal with politics, one way or another.


-- 
----------------------------------------------------------------------------
Troy Benjegerdes                 'da hozer'                  hozer at hozed.org
7 elements      earth::water::air::fire::mind::spirit::soul        grid.coop

      Never pick a fight with someone who buys ink by the barrel,
         nor try buy a hacker who makes money by the megahash




From jameson.lopp at gmail.com  Wed Apr 30 17:13:50 2014
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Wed, 30 Apr 2014 13:13:50 -0400
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <20140430170638.GE3180@nl.grid.coop>
References: <5359E509.4080907@gmail.com>	<CANEZrP0bKe-=T5ps0myLZjo60tv2mkm3Bw0o4e-9y7zb1h5eDg@mail.gmail.com>	<535A60FE.10209@gmail.com>	<CANEZrP0y45eSVgbzXYmvYy1WEQNyd=tmC2EpZgGSB28poXSzDw@mail.gmail.com>	<535BA357.6050607@gmail.com>	<CANOOu=_T82zuV79DWZFGK0Nomhp-Y4tqOhw6ZHhCLb2uGtdR5w@mail.gmail.com>	<535CFDB4.1000200@gmail.com>	<20140428214102.GA8347@netbook.cypherspace.org>	<CANEZrP0E=i6gyJwvLZRTeKvqaVrxR69=UzJWsAqaK2=QSdtn_A@mail.gmail.com>	<5360F3D6.4040002@gmail.com>
	<20140430170638.GE3180@nl.grid.coop>
Message-ID: <53612F4E.80708@gmail.com>

Perhaps I missed it somewhere, but I don't recall it ever being a goal of Bitcoin to act as a stable long-term store of value.

- Jameson

On 04/30/2014 01:06 PM, Troy Benjegerdes wrote:
> On Wed, Apr 30, 2014 at 11:00:06PM +1000, Gareth Williams wrote:
>> On 30/04/14 00:13, Mike Hearn wrote:
>>> I do think we need to move beyond this idea of Bitcoin being some kind
>>> of elegant embodiment of natural mathematical law. It just ain't so. 
>>
>> I haven't seen anybody arguing that it is.
>>
>> Bitcoin is the elegant embodiment of /artificially contrived/
>> mathematical rules, which just so happen to be very useful in their
>> current configuration :-P
>>
>> Nobody is saying those rules are immutable. Just that it isn't sensible
>> to undermine them by introducing imprecise and unpredictable elements
>> like human politics.
> 
> As an end-user of Bitcoin, the whole possible value of a set of mathematical
> rules has become completely trashed by the imprecise and unpredictable behavior
> of buyers and sellers.
> 
> If the rules are not responsive to real human needs, bitcoin is worthless
> as a long-term store of value because **my idea of value** changes over time.
> This implies, in my mind, an absolutely requirement to attempt to gather 
> some useful signal from the human political noise.
> 
> How do you determine what that signal is, so you can **change the rules**
> and the mathematics so it makes more sense?
> 
> You've got to deal with politics, one way or another.
> 
> 



From tier.nolan at gmail.com  Wed Apr 30 18:03:59 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Wed, 30 Apr 2014 19:03:59 +0100
Subject: [Bitcoin-development] BIP Draft: Atomic Cross Chain Transfer
	Protocol
Message-ID: <CAE-z3OUE5AQAC2G4MtF=RVHwYEP1TKXTOopO14rmPiGkxC5MQw@mail.gmail.com>

Due to "popular" demand, I have created a BIP for cross chain atomic
transfers.

Unlike the previous version, this version only requires hash locking.   The
previous version required a "selector" transaction based on if statements.

    OP_HASH160 OP_EQUAL_VERIFY [public key] OP_CHECKSIG

    OP_HASH160 OP_EQUAL_VERIFY OP_N [public key 1] ... [public key m]
OP_M OP_CHECK_MULTISIG

https://github.com/TierNolan/bips/blob/bip4x/bip-atom.mediawiki
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140430/b93c1f5d/attachment.html>

From luke at dashjr.org  Wed Apr 30 18:59:07 2014
From: luke at dashjr.org (Luke Dashjr)
Date: Wed, 30 Apr 2014 18:59:07 +0000
Subject: [Bitcoin-development] BIP Draft: Atomic Cross Chain Transfer
	Protocol
In-Reply-To: <CAE-z3OUE5AQAC2G4MtF=RVHwYEP1TKXTOopO14rmPiGkxC5MQw@mail.gmail.com>
References: <CAE-z3OUE5AQAC2G4MtF=RVHwYEP1TKXTOopO14rmPiGkxC5MQw@mail.gmail.com>
Message-ID: <201404301859.07833.luke@dashjr.org>

On Wednesday, April 30, 2014 6:03:59 PM Tier Nolan wrote:
> Due to "popular" demand, I have created a BIP for cross chain atomic
> transfers.
> 
> https://github.com/TierNolan/bips/blob/bip4x/bip-atom.mediawiki

Instead of TX0, TX1, etc, can you put some kind of meaningful identifier for 
these transactions?

TX1 and TX2 *cannot* be signed until after TX0 is completely signed by both 
parties. After TX0 is signed, but before TX2 is signed, either party could 
walk away or otherwise hold the funds hostage. The sequence of signing 
proposed in this BIP is *not possible to perform*. How did you implement and 
test this? :/

What is the purpose of the OP_EQUAL_VERIFY in TX4? I don't see a use...

IMO, there should be separate BIPs for the exchange itself, and the protocol 
to negotiate the exchange. I would recommend changing the latter from JSON-RPC 
to some extension of the Payment Protocol, if possible.

Perhaps it would be good to only support compressed keys, to discourage use of 
uncompressed ones..

Luke



From tier.nolan at gmail.com  Wed Apr 30 20:48:10 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Wed, 30 Apr 2014 21:48:10 +0100
Subject: [Bitcoin-development] BIP Draft: Atomic Cross Chain Transfer
	Protocol
In-Reply-To: <201404301859.07833.luke@dashjr.org>
References: <CAE-z3OUE5AQAC2G4MtF=RVHwYEP1TKXTOopO14rmPiGkxC5MQw@mail.gmail.com>
	<201404301859.07833.luke@dashjr.org>
Message-ID: <CAE-z3OXO2uQb=yhsjfvTUC33kQ9HVvaXxhPsd3Ki4Oy2jE9SCg@mail.gmail.com>

On Wed, Apr 30, 2014 at 7:59 PM, Luke Dashjr <luke at dashjr.org> wrote:

> Instead of TX0, TX1, etc, can you put some kind of meaningful identifier
> for
> these transactions?
>

Sorry, that is the names come from the original thread, where I was
outlining the idea.  I updated the names.


> TX1 and TX2 *cannot* be signed until after TX0 is completely signed by both
> parties.


The bail in transactions are only signed by one of the parties.  They are
kept secret until the refund/payout transactions are all properly signed.

There is a malleability risk though, hence the need for the 3rd party.

It works on the same refund principle as payment channels.

After TX0 is signed, but before TX2 is signed, either party could
> walk away or otherwise hold the funds hostage. The sequence of signing
> proposed in this BIP is *not possible to perform*.


TX0 is not broadcast until the refund transactions are complete.


> How did you implement and test this? :/
>

This is a draft at the moment.

There is an implementation of (almost) this system but not by me.  This
proposal reduces the number of non-standard transaction types required.

A full implement is the next step.


> What is the purpose of the OP_EQUAL_VERIFY in TX4? I don't see a use...
>

That is a typo, I have updated it.


> IMO, there should be separate BIPs for the exchange itself, and the
> protocol
> to negotiate the exchange.


I can do that.


> I would recommend changing the latter from JSON-RPC
> to some extension of the Payment Protocol, if possible.
>

I wanted it to be as simple as possible, but I guess MIME is just a
different way of doing things.

>
> Perhaps it would be good to only support compressed keys, to discourage
> use of
> uncompressed ones..
>

I would have no objection.


>
> Luke
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140430/e5b06326/attachment.html>

From tier.nolan at gmail.com  Wed Apr 30 23:02:41 2014
From: tier.nolan at gmail.com (Tier Nolan)
Date: Thu, 1 May 2014 00:02:41 +0100
Subject: [Bitcoin-development] BIP Draft: Atomic Cross Chain Transfer
	Protocol
In-Reply-To: <CAE-z3OXO2uQb=yhsjfvTUC33kQ9HVvaXxhPsd3Ki4Oy2jE9SCg@mail.gmail.com>
References: <CAE-z3OUE5AQAC2G4MtF=RVHwYEP1TKXTOopO14rmPiGkxC5MQw@mail.gmail.com>
	<201404301859.07833.luke@dashjr.org>
	<CAE-z3OXO2uQb=yhsjfvTUC33kQ9HVvaXxhPsd3Ki4Oy2jE9SCg@mail.gmail.com>
Message-ID: <CAE-z3OWJAGonitgrP87WBBwenztqGrR_6qUYZnR_8PZUaSdm-A@mail.gmail.com>

I updated again.

The new version only requires non-standard transactions on one of the two
networks.

Next step is a simple TCP / RPC server that will implement the protocol to
trade between testnet and mainnet.  Timeouts of much less than 24 hours
should be possible now.


On Wed, Apr 30, 2014 at 9:48 PM, Tier Nolan <tier.nolan at gmail.com> wrote:

> On Wed, Apr 30, 2014 at 7:59 PM, Luke Dashjr <luke at dashjr.org> wrote:
>
>> Instead of TX0, TX1, etc, can you put some kind of meaningful identifier
>> for
>> these transactions?
>>
>
> Sorry, that is the names come from the original thread, where I was
> outlining the idea.  I updated the names.
>
>
>> TX1 and TX2 *cannot* be signed until after TX0 is completely signed by
>> both
>> parties.
>
>
> The bail in transactions are only signed by one of the parties.  They are
> kept secret until the refund/payout transactions are all properly signed.
>
> There is a malleability risk though, hence the need for the 3rd party.
>
> It works on the same refund principle as payment channels.
>
> After TX0 is signed, but before TX2 is signed, either party could
>> walk away or otherwise hold the funds hostage. The sequence of signing
>> proposed in this BIP is *not possible to perform*.
>
>
> TX0 is not broadcast until the refund transactions are complete.
>
>
>> How did you implement and test this? :/
>>
>
> This is a draft at the moment.
>
> There is an implementation of (almost) this system but not by me.  This
> proposal reduces the number of non-standard transaction types required.
>
> A full implement is the next step.
>
>
>> What is the purpose of the OP_EQUAL_VERIFY in TX4? I don't see a use...
>>
>
> That is a typo, I have updated it.
>
>
>> IMO, there should be separate BIPs for the exchange itself, and the
>> protocol
>> to negotiate the exchange.
>
>
> I can do that.
>
>
>> I would recommend changing the latter from JSON-RPC
>> to some extension of the Payment Protocol, if possible.
>>
>
> I wanted it to be as simple as possible, but I guess MIME is just a
> different way of doing things.
>
>>
>> Perhaps it would be good to only support compressed keys, to discourage
>> use of
>> uncompressed ones..
>>
>
> I would have no objection.
>
>
>>
>> Luke
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140501/861be7b5/attachment.html>

