From rusty at rustcorp.com.au  Sat Oct  1 04:01:04 2016
From: rusty at rustcorp.com.au (Rusty Russell)
Date: Sat, 01 Oct 2016 13:31:04 +0930
Subject: [bitcoin-dev] BIP draft: OP_CHECKBLOCKATHEIGHT
In-Reply-To: <201609230957.03138.luke@dashjr.org>
References: <201609230957.03138.luke@dashjr.org>
Message-ID: <87oa34d8fz.fsf@rustcorp.com.au>

Luke Dashjr via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> writes:

> This BIP describes a new opcode (OP_CHECKBLOCKATHEIGHT) for the Bitcoin 
> scripting system to address reissuing bitcoin transactions when the coins they 
> spend have been conflicted/double-spent.
>
> https://github.com/luke-jr/bips/blob/bip-cbah/bip-cbah.mediawiki
>
> Does this seem like a good idea/approach?

Prefer a three-arg version (gbits-to-compare, blocknum, hash):
- If <bits> is 0 or > 256, invalid.
- If the hash length is not (<bits> + 7) / 8, invalid.
- If the hash unused bits are not 0, invalid.
- Otherwise <bits> of hash is compared to lower <bits> of blockhash.

This version also lets you play gambling games on-chain!

Or maybe I've just put another nail in CBAH's coffin?

Cheers,
Rusty.

From luke at dashjr.org  Sat Oct  1 05:02:09 2016
From: luke at dashjr.org (Luke Dashjr)
Date: Sat, 1 Oct 2016 05:02:09 +0000
Subject: [bitcoin-dev] BIP draft: OP_CHECKBLOCKATHEIGHT
In-Reply-To: <87oa34d8fz.fsf@rustcorp.com.au>
References: <201609230957.03138.luke@dashjr.org>
	<87oa34d8fz.fsf@rustcorp.com.au>
Message-ID: <201610010502.09524.luke@dashjr.org>

On Saturday, October 01, 2016 4:01:04 AM Rusty Russell wrote:
> Prefer a three-arg version (gbits-to-compare, blocknum, hash):
> - If <bits> is 0 or > 256, invalid.
> - If the hash length is not (<bits> + 7) / 8, invalid.

This means zero padding on-chain, which would be undesirable.
Rather "at most" and have the consensus implementation do the padding.

> - If the hash unused bits are not 0, invalid.

Why?

> - Otherwise <bits> of hash is compared to lower <bits> of blockhash.

Lower in what endian? Why only that endian? Why only lower? I can see a 
possible use case where one wants to look at only the high bits to ensure 
their transaction is only valid in a block with at least a certain 
difficulty...

> This version also lets you play gambling games on-chain!
> 
> Or maybe I've just put another nail in CBAH's coffin?

Or maybe resurrected it...

Luke

From sergio.d.lerner at gmail.com  Sun Oct  2 15:49:08 2016
From: sergio.d.lerner at gmail.com (Sergio Demian Lerner)
Date: Sun, 2 Oct 2016 12:49:08 -0300
Subject: [bitcoin-dev] Drivechain proposal using OP_COUNT_ACKS
Message-ID: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>

Since ScalingBitcoin is close, I think this is a good moment to publish our
proposal on drivechains. This BIP proposed the drivechain we'd like to use
in RSK (a.k.a. Rootstock) two-way pegged blockchain and see it implemented
in Bitcoin. Until that happens, we're using a federated approach.
I'm sure that adding risk-less Bitcoin extensibility through
sidechains/drivechains is what we all want, but it's of maximum importance
to decide which technology will leads us there.
We hope this work can also be the base of all other new 2-way-pegged
blockchains that can take Bitcoin the currency to new niches and test new
use cases, but cannot yet be realized because of current
limitations/protections.

The full BIP plus a reference implementation can be found here:

BIP (draft):
https://github.com/rootstock/bips/blob/master/BIP-R10.md

Code & Test cases:
https://github.com/rootstock/bitcoin/tree/op-count-acks_devel
(Note: Code is still unaudited)

As a summary, OP_COUNT_ACKS is a new segwit-based and soft-forked opcode
that counts acks and nacks tags in coinbase fields, and push the resulting
totals in the script stack.

The system was designed with the following properties in mind:

1. Interoperability with scripting system
2. Zero risk of invalidating a block
3. No additional computation during blockchain management and
re-organization
4. No change in Bitcoin security model
5. Bounded computation of poll results
6. Strong protection from DoS attacks
7. Minimum block space consumption
8. Zero risk of cross-secondary chain invalidation

Please see the BIP draft for a more-detailed explanation on how we achieve
these goals.

I'll be in ScalingBitcoin in less than a week and I'll be available to
discuss the design rationale, improvements, changes and ideas any of you
may have.

Truly yours,
Sergio Demian Lerner
Bitcoiner and RSK co-founder
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161002/b654e8f3/attachment.html>

From pete at petertodd.org  Sun Oct  2 16:17:17 2016
From: pete at petertodd.org (Peter Todd)
Date: Sun, 2 Oct 2016 12:17:17 -0400
Subject: [bitcoin-dev] Drivechain proposal using OP_COUNT_ACKS
In-Reply-To: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
References: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
Message-ID: <20161002161717.GA13915@fedora-21-dvm>

On Sun, Oct 02, 2016 at 12:49:08PM -0300, Sergio Demian Lerner via bitcoin-dev wrote:

I think your history of patenting(1) Bitcoin consensus relevant technology is
sufficient by itself to be extremely dubious of any proposals coming from you
or your colleagues; patents on Bitcoin consensus technology are a serious
threat to decentralization. Personally, I'm NACKing this proposal on that basis
alone.

You need to rectify this dangerous and unethical behavior in a convincing,
legally binding way. I'd suggest looking into Blockstream's patent pledges as a
way forward:

    https://www.blockstream.com/about/patent_pledge/

I see no reason to have any further discussion of your proposal until this is
rectified.

1) "AsicBoost is a patent-pending method to improve the efficiency and cost of Bitcoin mining by approximately 20%"
   http://www.asicboost.com/single-post/2016/03/24/AsicBoost-Press-Release

> Since ScalingBitcoin is close, I think this is a good moment to publish our
> proposal on drivechains. This BIP proposed the drivechain we'd like to use
> in RSK (a.k.a. Rootstock) two-way pegged blockchain and see it implemented

-- 
https://petertodd.org 'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161002/e1b2f066/attachment.sig>

From sergio.d.lerner at gmail.com  Sun Oct  2 17:00:01 2016
From: sergio.d.lerner at gmail.com (Sergio Demian Lerner)
Date: Sun, 2 Oct 2016 14:00:01 -0300
Subject: [bitcoin-dev] Drivechain proposal using OP_COUNT_ACKS
In-Reply-To: <20161002161717.GA13915@fedora-21-dvm>
References: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
	<20161002161717.GA13915@fedora-21-dvm>
Message-ID: <CAKzdR-qsj80cuq27YP0hCXtSL734G4QatmopLANpynvQYNRU=A@mail.gmail.com>

Peter, are you really going to try to down vote a decent free and
open-source proposal that benefits all the Bitcoin community including
you and your future children because a personal attack to me without any
logic or basis?

Is that the way you collaborate to improving Bitcoin?

I just can't believe it.

Let's open another thread elsewhere to discuss hardware and software
patents, and that particular one, if you wish, this is NOT the place.



On Sun, Oct 2, 2016 at 1:17 PM, Peter Todd <pete at petertodd.org> wrote:

> On Sun, Oct 02, 2016 at 12:49:08PM -0300, Sergio Demian Lerner via
> bitcoin-dev wrote:
>
> I think your history of patenting(1) Bitcoin consensus relevant technology
> is
> sufficient by itself to be extremely dubious of any proposals coming from
> you
> or your colleagues; patents on Bitcoin consensus technology are a serious
> threat to decentralization. Personally, I'm NACKing this proposal on that
> basis
> alone.
>
> You need to rectify this dangerous and unethical behavior in a convincing,
> legally binding way. I'd suggest looking into Blockstream's patent pledges
> as a
> way forward:
>
>     https://www.blockstream.com/about/patent_pledge/
>
> I see no reason to have any further discussion of your proposal until this
> is
> rectified.
>
> 1) "AsicBoost is a patent-pending method to improve the efficiency and
> cost of Bitcoin mining by approximately 20%"
>    http://www.asicboost.com/single-post/2016/03/24/AsicBoost-Press-Release
>
> > Since ScalingBitcoin is close, I think this is a good moment to publish
> our
> > proposal on drivechains. This BIP proposed the drivechain we'd like to
> use
> > in RSK (a.k.a. Rootstock) two-way pegged blockchain and see it
> implemented
>
> --
> https://petertodd.org 'peter'[:-1]@petertodd.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161002/67b00718/attachment.html>

From pete at petertodd.org  Sun Oct  2 17:11:37 2016
From: pete at petertodd.org (Peter Todd)
Date: Sun, 2 Oct 2016 13:11:37 -0400
Subject: [bitcoin-dev] Drivechain proposal using OP_COUNT_ACKS
In-Reply-To: <CAKzdR-qsj80cuq27YP0hCXtSL734G4QatmopLANpynvQYNRU=A@mail.gmail.com>
References: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
	<20161002161717.GA13915@fedora-21-dvm>
	<CAKzdR-qsj80cuq27YP0hCXtSL734G4QatmopLANpynvQYNRU=A@mail.gmail.com>
Message-ID: <20161002171137.GA18452@fedora-21-dvm>

On Sun, Oct 02, 2016 at 02:00:01PM -0300, Sergio Demian Lerner wrote:
> Peter, are you really going to try to down vote a decent free and
> open-source proposal that benefits all the Bitcoin community including
> you and your future children because a personal attack to me without any
> logic or basis?

I've suggested a way that you can rectify this situation so we can continue to
collaborate: Have Rootstock adopt a legally binding patent pledge/license. I'd
suggest you do as Blockstream has done and at minimum adopt the Defensive
Patent License (DPL); I personally will be doing so in the next week or two for
my own consulting company (I'm discussing exactly how to do so with my lawyer
right now).

If Rootstock is not planning on getting any patents for offensive purposes,
then there is no issue with doing so - the DPL in particular is designed in a
minimally intrusive way.

Please fix this issue so we can in fact continue to collaborate to improve
Bitcoin.

-- 
https://petertodd.org 'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161002/26faa19a/attachment.sig>

From sergio.d.lerner at gmail.com  Sun Oct  2 17:13:13 2016
From: sergio.d.lerner at gmail.com (Sergio Demian Lerner)
Date: Sun, 2 Oct 2016 14:13:13 -0300
Subject: [bitcoin-dev] About ASICBoost
Message-ID: <CAKzdR-pAxs_Gim-aFdjd4eQPY6vWsoEVafYwcjmBjit_dsH_wA@mail.gmail.com>

Please Peter Todd explain here all what you want to say about a patent of a
hardware design for an ASIC.

Remember that ASICBoost is not the only patent out there, there are at
least three similar patents, filed by major Bitcoin ASIC manufacturers in
three different countries, on similar technologies.

That suggest that the problem is not ASICBoot's: you cannot blame any
company from doing lawful commerce in a FREE MARKET.

It is a flaw in Bitcoin design that could be corrected if the guidelines I
posted in [1] had been followed.

[1]
https://bitslog.wordpress.com/2014/03/18/the-re-design-of-the-bitcoin-block-header/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161002/9364fb1b/attachment-0001.html>

From pete at petertodd.org  Sun Oct  2 17:24:15 2016
From: pete at petertodd.org (Peter Todd)
Date: Sun, 2 Oct 2016 13:24:15 -0400
Subject: [bitcoin-dev] Drivechain proposal using OP_COUNT_ACKS
In-Reply-To: <CAAy62_+cqR0-DBbKhePo+VqTJc099zXJR0EurLyb1XURUCT36g@mail.gmail.com>
References: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
	<20161002161717.GA13915@fedora-21-dvm>
	<CAKzdR-qsj80cuq27YP0hCXtSL734G4QatmopLANpynvQYNRU=A@mail.gmail.com>
	<20161002171137.GA18452@fedora-21-dvm>
	<CAAy62_+cqR0-DBbKhePo+VqTJc099zXJR0EurLyb1XURUCT36g@mail.gmail.com>
Message-ID: <20161002172415.GA18641@fedora-21-dvm>

On Sun, Oct 02, 2016 at 12:18:08PM -0500, Andrew Johnson wrote:
> The purpose of this list is highly technical discussion, not political
> disagreements.
> 
> Is this particular proposal encumbered by a licensing type, patent, or
> pending patent which would preclude it from being used in the bitcoin
> project?  If not, you're wildly off topic.

I don't know if it is; that's the problem.

Given Sergio's prior behavior of attempting to use patents offensively, it's
perfectly reasonable to suspect that Rootstock does in fact intend to encumber
this proposal with patents. So the obvious thing to do, is for Rootstock to
give us all a legally binding guarantee that they will not be using patents
offensively, eliminating the problem and allowing us to return to productive
collaboration.

Remember that this kind of requirement is very common in standards bodies, e.g.
by having all companies contributing to the standards in question join a patent
pool, or by making legally binding pledges/licenses to ensure any patents they
hold can't be used offensively.

-- 
https://petertodd.org 'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161002/6df6eb19/attachment.sig>

From sergio.d.lerner at gmail.com  Sun Oct  2 17:26:18 2016
From: sergio.d.lerner at gmail.com (Sergio Demian Lerner)
Date: Sun, 2 Oct 2016 14:26:18 -0300
Subject: [bitcoin-dev] Drivechain proposal using OP_COUNT_ACKS
In-Reply-To: <20161002171137.GA18452@fedora-21-dvm>
References: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
	<20161002161717.GA13915@fedora-21-dvm>
	<CAKzdR-qsj80cuq27YP0hCXtSL734G4QatmopLANpynvQYNRU=A@mail.gmail.com>
	<20161002171137.GA18452@fedora-21-dvm>
Message-ID: <CAKzdR-onnOLNu2Lqw7+8nuUCpQ9_cH7-MdkA-Pv-Yhr_upEC0A@mail.gmail.com>

I'm not a lawyer, and my knowledge on patents is limited. I guess RSK WILL
endorse DPL or will make the required actions to make sure the things
developed by RSK remain free and open. This was not a priority until now,
but coding was. For me, coding always is the priority.

I will discuss prioritizing this with the team. Remember it took several
years to BlockStream to decide for DPL and not just publish everything as
they were doing. I suppose the decision it was not a simple one, involving
lawyers advise and all. I guess DPL needs to actually patent the things in
order to open them later, and patenting has a very high cost.

Give us time to decide which open source strategy is the best and cheaper
for RSK. At this point I can assert that RSK has not filed any patent not
is planing to.  This proposal is not encumbered by any patents, and
drivechains is actually not RSK's idea, but Paul Sztorc's.



On Sun, Oct 2, 2016 at 2:11 PM, Peter Todd <pete at petertodd.org> wrote:

> On Sun, Oct 02, 2016 at 02:00:01PM -0300, Sergio Demian Lerner wrote:
> > Peter, are you really going to try to down vote a decent free and
> > open-source proposal that benefits all the Bitcoin community including
> > you and your future children because a personal attack to me without any
> > logic or basis?
>
> I've suggested a way that you can rectify this situation so we can
> continue to
> collaborate: Have Rootstock adopt a legally binding patent pledge/license.
> I'd
> suggest you do as Blockstream has done and at minimum adopt the Defensive
> Patent License (DPL); I personally will be doing so in the next week or
> two for
> my own consulting company (I'm discussing exactly how to do so with my
> lawyer
> right now).
>
> If Rootstock is not planning on getting any patents for offensive purposes,
> then there is no issue with doing so - the DPL in particular is designed
> in a
> minimally intrusive way.
>
> Please fix this issue so we can in fact continue to collaborate to improve
> Bitcoin.
>
> --
> https://petertodd.org 'peter'[:-1]@petertodd.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161002/d3052c9d/attachment.html>

From andrew.johnson83 at gmail.com  Sun Oct  2 17:18:08 2016
From: andrew.johnson83 at gmail.com (Andrew Johnson)
Date: Sun, 2 Oct 2016 12:18:08 -0500
Subject: [bitcoin-dev] Drivechain proposal using OP_COUNT_ACKS
In-Reply-To: <20161002171137.GA18452@fedora-21-dvm>
References: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
	<20161002161717.GA13915@fedora-21-dvm>
	<CAKzdR-qsj80cuq27YP0hCXtSL734G4QatmopLANpynvQYNRU=A@mail.gmail.com>
	<20161002171137.GA18452@fedora-21-dvm>
Message-ID: <CAAy62_+cqR0-DBbKhePo+VqTJc099zXJR0EurLyb1XURUCT36g@mail.gmail.com>

The purpose of this list is highly technical discussion, not political
disagreements.

Is this particular proposal encumbered by a licensing type, patent, or
pending patent which would preclude it from being used in the bitcoin
project?  If not, you're wildly off topic.

On Oct 2, 2016 12:11 PM, "Peter Todd via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Sun, Oct 02, 2016 at 02:00:01PM -0300, Sergio Demian Lerner wrote:
> > Peter, are you really going to try to down vote a decent free and
> > open-source proposal that benefits all the Bitcoin community including
> > you and your future children because a personal attack to me without any
> > logic or basis?
>
> I've suggested a way that you can rectify this situation so we can
> continue to
> collaborate: Have Rootstock adopt a legally binding patent pledge/license.
> I'd
> suggest you do as Blockstream has done and at minimum adopt the Defensive
> Patent License (DPL); I personally will be doing so in the next week or
> two for
> my own consulting company (I'm discussing exactly how to do so with my
> lawyer
> right now).
>
> If Rootstock is not planning on getting any patents for offensive purposes,
> then there is no issue with doing so - the DPL in particular is designed
> in a
> minimally intrusive way.
>
> Please fix this issue so we can in fact continue to collaborate to improve
> Bitcoin.
>
> --
> https://petertodd.org 'peter'[:-1]@petertodd.org
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161002/a23d4ab3/attachment.html>

From pete at petertodd.org  Sun Oct  2 17:34:25 2016
From: pete at petertodd.org (Peter Todd)
Date: Sun, 2 Oct 2016 13:34:25 -0400
Subject: [bitcoin-dev] Drivechain proposal using OP_COUNT_ACKS
In-Reply-To: <CAKzdR-onnOLNu2Lqw7+8nuUCpQ9_cH7-MdkA-Pv-Yhr_upEC0A@mail.gmail.com>
References: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
	<20161002161717.GA13915@fedora-21-dvm>
	<CAKzdR-qsj80cuq27YP0hCXtSL734G4QatmopLANpynvQYNRU=A@mail.gmail.com>
	<20161002171137.GA18452@fedora-21-dvm>
	<CAKzdR-onnOLNu2Lqw7+8nuUCpQ9_cH7-MdkA-Pv-Yhr_upEC0A@mail.gmail.com>
Message-ID: <20161002173425.GA18724@fedora-21-dvm>

On Sun, Oct 02, 2016 at 02:26:18PM -0300, Sergio Demian Lerner wrote:
> I'm not a lawyer, and my knowledge on patents is limited. I guess RSK WILL
> endorse DPL or will make the required actions to make sure the things
> developed by RSK remain free and open. This was not a priority until now,
> but coding was. For me, coding always is the priority.
> 
> I will discuss prioritizing this with the team. Remember it took several
> years to BlockStream to decide for DPL and not just publish everything as
> they were doing. I suppose the decision it was not a simple one, involving
> lawyers advise and all. I guess DPL needs to actually patent the things in
> order to open them later, and patenting has a very high cost.
> 
> Give us time to decide which open source strategy is the best and cheaper
> for RSK. At this point I can assert that RSK has not filed any patent not
> is planing to.  This proposal is not encumbered by any patents, and
> drivechains is actually not RSK's idea, but Paul Sztorc's.

Thanks, please let us all know when this is done so we can continue our
collaborations constructively.

I'll likewise prioritise my own adoption of the DPL and will announce it on
this mailing list.

-- 
https://petertodd.org 'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161002/718ab14d/attachment.sig>

From roconnor at blockstream.io  Sun Oct  2 18:17:12 2016
From: roconnor at blockstream.io (Russell O'Connor)
Date: Sun, 2 Oct 2016 14:17:12 -0400
Subject: [bitcoin-dev] Drivechain proposal using OP_COUNT_ACKS
In-Reply-To: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
References: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
Message-ID: <CAMZUoKmMT7=QMWNEQ+AerUi3yT7z5n3Onm26fH3631U2kSpHtw@mail.gmail.com>

If I understand this BIP correctly, the values pushed onto the stack by the
OP_COUNT_ACKS operation depends on the ack and nack counts relative to the
block that this happens to be included in.

This isn't going to be acceptable.  The validity of a transaction should
always be monotone in the sense that if a transaction was acceptable in a
given block, it must always be acceptable in any subsequent block, with the
only exception being if one of the transaction's inputs get double spent.

The added check lock time and check sequence number operations were
carefully constructed to ensure this property.

On Sun, Oct 2, 2016 at 11:49 AM, Sergio Demian Lerner via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Since ScalingBitcoin is close, I think this is a good moment to publish
> our proposal on drivechains. This BIP proposed the drivechain we'd like to
> use in RSK (a.k.a. Rootstock) two-way pegged blockchain and see it
> implemented in Bitcoin. Until that happens, we're using a federated
> approach.
> I'm sure that adding risk-less Bitcoin extensibility through
> sidechains/drivechains is what we all want, but it's of maximum importance
> to decide which technology will leads us there.
> We hope this work can also be the base of all other new 2-way-pegged
> blockchains that can take Bitcoin the currency to new niches and test new
> use cases, but cannot yet be realized because of current
> limitations/protections.
>
> The full BIP plus a reference implementation can be found here:
>
> BIP (draft):
> https://github.com/rootstock/bips/blob/master/BIP-R10.md
>
> Code & Test cases:
> https://github.com/rootstock/bitcoin/tree/op-count-acks_devel
> (Note: Code is still unaudited)
>
> As a summary, OP_COUNT_ACKS is a new segwit-based and soft-forked opcode
> that counts acks and nacks tags in coinbase fields, and push the resulting
> totals in the script stack.
>
> The system was designed with the following properties in mind:
>
> 1. Interoperability with scripting system
> 2. Zero risk of invalidating a block
> 3. No additional computation during blockchain management and
> re-organization
> 4. No change in Bitcoin security model
> 5. Bounded computation of poll results
> 6. Strong protection from DoS attacks
> 7. Minimum block space consumption
> 8. Zero risk of cross-secondary chain invalidation
>
> Please see the BIP draft for a more-detailed explanation on how we achieve
> these goals.
>
> I'll be in ScalingBitcoin in less than a week and I'll be available to
> discuss the design rationale, improvements, changes and ideas any of you
> may have.
>
> Truly yours,
> Sergio Demian Lerner
> Bitcoiner and RSK co-founder
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161002/8a5f4427/attachment-0001.html>

From btcdrak at gmail.com  Sun Oct  2 19:36:06 2016
From: btcdrak at gmail.com (Btc Drak)
Date: Sun, 2 Oct 2016 20:36:06 +0100
Subject: [bitcoin-dev] About ASICBoost
In-Reply-To: <CAKzdR-pAxs_Gim-aFdjd4eQPY6vWsoEVafYwcjmBjit_dsH_wA@mail.gmail.com>
References: <CAKzdR-pAxs_Gim-aFdjd4eQPY6vWsoEVafYwcjmBjit_dsH_wA@mail.gmail.com>
Message-ID: <CADJgMzuPrvoz5TpO+SvHs_Eix7usFTPuEgxhocjc8tf23LnuOg@mail.gmail.com>

Sergio,

It is critically important to the future of Bitcoin that consensus
code avoid any unnecessary entanglements with patents because "the
free market" allows you and anyone else to make consensus change
proposals that rely on (unknown) patents - but this is something we
should all be working to avoid, as it unnecessarily hinders Bitcoin
development and everyone's ability to deploy. Consensus code must not
be hindered by patents and Bitcoin should retain its permissionless
qualities.

When you proposed the extra nonce space BIP [1], you had already
applied for your ASICBOOST patent [2] without disclosure in the BIP
[1] nor in your Bitcoin Core pull request #5102 [2].

The ASICBOOST patent [2] describes the same process as in the BIP [1]
and proposed code [3] "As we explained in our Provisional Application,
it has been proposed to partition the 4-byte Version field in the
block header (see, Fig. 6) and use, e.g., the high 2-byte portion as
additional nonce range."

Today when you proposed a new sidechain BIP [4], Peter Todd was
(rightly) concerned about the prior lack of disclosure of your patents
related to your prior consensus modification proposal. Hence the
concern is that this might be happening this time as well.

There is no evidence that any of the other filers for the
ASICBOOST-like patents by mining companies other than your own were
going to be using it offensively as those other companies appeared to
understand the decentralization risk of having an advantage enforced
by legal and not technical means.

It's great that you have now committed to looking into the Defensive
Patent License. This seems likely to mitigate some of the patent
concerns. Although it would be a show of good faith if you also agreed
to license ASICBOOST under the DPL.

[1]: BIP: https://github.com/BlockheaderNonce2/bitcoin/wiki
[2]: ASICBOOST PATENT https://www.google.com/patents/WO2015077378A1?cl=en
[3]: Extra nonce pull request: https://github.com/bitcoin/bitcoin/pull/5102
[4]: COUNT_ACKS
[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-October/013174.html

On Sun, Oct 2, 2016 at 6:13 PM, Sergio Demian Lerner via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> Please Peter Todd explain here all what you want to say about a patent of a
> hardware design for an ASIC.
>
> Remember that ASICBoost is not the only patent out there, there are at least
> three similar patents, filed by major Bitcoin ASIC manufacturers in three
> different countries, on similar technologies.
>
> That suggest that the problem is not ASICBoot's: you cannot blame any
> company from doing lawful commerce in a FREE MARKET.
>
> It is a flaw in Bitcoin design that could be corrected if the guidelines I
> posted in [1] had been followed.
>
> [1]
> https://bitslog.wordpress.com/2014/03/18/the-re-design-of-the-bitcoin-block-header/
>
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

From luke at dashjr.org  Sun Oct  2 21:28:51 2016
From: luke at dashjr.org (Luke Dashjr)
Date: Sun, 2 Oct 2016 21:28:51 +0000
Subject: [bitcoin-dev] Drivechain proposal using OP_COUNT_ACKS
In-Reply-To: <CAAy62_+cqR0-DBbKhePo+VqTJc099zXJR0EurLyb1XURUCT36g@mail.gmail.com>
References: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
	<20161002171137.GA18452@fedora-21-dvm>
	<CAAy62_+cqR0-DBbKhePo+VqTJc099zXJR0EurLyb1XURUCT36g@mail.gmail.com>
Message-ID: <201610022128.52401.luke@dashjr.org>

On Sunday, October 02, 2016 5:18:08 PM Andrew Johnson via bitcoin-dev wrote:
> Is this particular proposal encumbered by a licensing type, patent, or
> pending patent which would preclude it from being used in the bitcoin
> project?  If not, you're wildly off topic.

I think that's the concern: we don't - and *can't* - know. Pending patents are 
not publicly visible, as far as I am aware, and the BIP process does not 
(presently) require any patent disclosure.

Of course, it is entirely possible to voluntarily provide a disclosure of 
patents in the BIP (and ideally a free license to such patents, at least those 
for the BIP). This is an alternative possibility to resolve patent concerns if 
Rootstock is not prepared to adopt a defensive patent strategy in general 
(yet?).

On Sunday, October 02, 2016 6:17:12 PM Russell O'Connor via bitcoin-dev wrote:
> If I understand this BIP correctly, the values pushed onto the stack by the
> OP_COUNT_ACKS operation depends on the ack and nack counts relative to the
> block that this happens to be included in.
> 
> This isn't going to be acceptable.  The validity of a transaction should
> always be monotone in the sense that if a transaction was acceptable in a
> given block, it must always be acceptable in any subsequent block, with the
> only exception being if one of the transaction's inputs get double spent.

I don't know if it's possible to implement decentralised sidechains without 
"breaking" this rule. But I would argue that in this scenario, the only way it 
would become invalid is the equivalent of a double-spend... and therefore it 
may be acceptable in relation to this argument.

Luke

From sergio.d.lerner at gmail.com  Sun Oct  2 22:25:52 2016
From: sergio.d.lerner at gmail.com (Sergio Demian Lerner)
Date: Sun, 2 Oct 2016 19:25:52 -0300
Subject: [bitcoin-dev] About ASICBoost
In-Reply-To: <CADJgMzuPrvoz5TpO+SvHs_Eix7usFTPuEgxhocjc8tf23LnuOg@mail.gmail.com>
References: <CAKzdR-pAxs_Gim-aFdjd4eQPY6vWsoEVafYwcjmBjit_dsH_wA@mail.gmail.com>
	<CADJgMzuPrvoz5TpO+SvHs_Eix7usFTPuEgxhocjc8tf23LnuOg@mail.gmail.com>
Message-ID: <CAKzdR-p4gs3nz9efYadTehi-KhCh7xRoVXqPN==U9z1PM9SLpw@mail.gmail.com>

It's good you bring that point, and it's very interesting to analyze what
happened then.

We shared our findings with some core developers much earlier than the BIP
proposal. Wether they kept it secret or they shared it with some ASIC
manufacturers is something I don't know. I even mentioned my wishes to try
to give the patent to public domain.

I remember the reason we proposed the BIP is because ASICBoost actually
does NOT require that BIP at all. And that BIP was not a consensus change,
but just a semantic re-interpretation.

ASICBoost can roll the nVersion field or the Merkle root hash. Doing the
former currently generates a strange warning message on nodes and can be
confusing, but doing the later makes ASICBoost completely stealthy. That
BIP could help the community to monitor its use in non-confusing way to the
users. What is worse? I think forcing it to be stealthy is worse.

I never opposed changing Bitcoin to be more decentralized, but hard-forking
a change to the PoW function may be contentious and that path of thought
must be walked very carefully.

Regards
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161002/3104f53a/attachment.html>

From roconnor at blockstream.io  Sun Oct  2 21:46:43 2016
From: roconnor at blockstream.io (Russell O'Connor)
Date: Sun, 2 Oct 2016 17:46:43 -0400
Subject: [bitcoin-dev] Drivechain proposal using OP_COUNT_ACKS
In-Reply-To: <201610022128.52401.luke@dashjr.org>
References: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
	<20161002171137.GA18452@fedora-21-dvm>
	<CAAy62_+cqR0-DBbKhePo+VqTJc099zXJR0EurLyb1XURUCT36g@mail.gmail.com>
	<201610022128.52401.luke@dashjr.org>
Message-ID: <CAMZUoKkPrVeqv3Xitp42e1mCqxj3pMSOUW_pTTrb36jc9w71Vg@mail.gmail.com>

> But I would argue that in this scenario, the only way it
> would become invalid is the equivalent of a double-spend... and therefore
> it
> may be acceptable in relation to this argument.
>

The values returned by OP_COUNT_ACKS vary in their exact value depending on
which block this transaction ends up in.  While the proposed use of this
operation is somewhat less objectionable (although still objectionable to
me), nothing stops users from using OP_EQUALVERIFY and and causing their
transaction fluctuate between acceptable and unacceptable, with no party
doing anything like a double spend.  This is a major problem with the
proposal.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161002/bc7052b6/attachment.html>

From roconnor at blockstream.io  Sun Oct  2 21:54:08 2016
From: roconnor at blockstream.io (Russell O'Connor)
Date: Sun, 2 Oct 2016 17:54:08 -0400
Subject: [bitcoin-dev] Drivechain proposal using OP_COUNT_ACKS
In-Reply-To: <201610022128.52401.luke@dashjr.org>
References: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
	<20161002171137.GA18452@fedora-21-dvm>
	<CAAy62_+cqR0-DBbKhePo+VqTJc099zXJR0EurLyb1XURUCT36g@mail.gmail.com>
	<201610022128.52401.luke@dashjr.org>
Message-ID: <CAMZUoK=fiLDi9w9PZLT-+Mbg5VFdrfBXm6qA69xjC3YwskW_mQ@mail.gmail.com>

> I don't know if it's possible to implement decentralised sidechains without
> "breaking" this rule.
>

I haven't really been following the sidechain developements, but my
understanding was that redemption from a side chain would be two phase.
The person unpegging the funds provides a proof that they have locked the
funds on the side chain and are eligible to withdraw the funds, plus they
put up a bounty.  Then there is a time-locked period where others can
collect the bounty by providing a fraud proof, that the locked funds given
in the proof have actually been double spent.  This two phase system
doesn't violate this rule.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161002/78830f94/attachment.html>

From sergio.d.lerner at gmail.com  Sun Oct  2 22:36:29 2016
From: sergio.d.lerner at gmail.com (Sergio Demian Lerner)
Date: Sun, 2 Oct 2016 19:36:29 -0300
Subject: [bitcoin-dev] Drivechain proposal using OP_COUNT_ACKS
In-Reply-To: <CAMZUoKkPrVeqv3Xitp42e1mCqxj3pMSOUW_pTTrb36jc9w71Vg@mail.gmail.com>
References: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
	<20161002171137.GA18452@fedora-21-dvm>
	<CAAy62_+cqR0-DBbKhePo+VqTJc099zXJR0EurLyb1XURUCT36g@mail.gmail.com>
	<201610022128.52401.luke@dashjr.org>
	<CAMZUoKkPrVeqv3Xitp42e1mCqxj3pMSOUW_pTTrb36jc9w71Vg@mail.gmail.com>
Message-ID: <CAKzdR-oSQq+P-eibn4-0sraXRrmeC-7K+-xFB2cu4hKtSjHBUA@mail.gmail.com>

On Sun, Oct 2, 2016 at 6:46 PM, Russell O'Connor via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

>
> But I would argue that in this scenario, the only way it
>> would become invalid is the equivalent of a double-spend... and therefore
>> it
>> may be acceptable in relation to this argument.
>>
>
> The values returned by OP_COUNT_ACKS vary in their exact value depending
> on which block this transaction ends up in.  While the proposed use of this
> operation is somewhat less objectionable (although still objectionable to
> me), nothing stops users from using OP_EQUALVERIFY and and causing their
> transaction fluctuate between acceptable and unacceptable, with no party
> doing anything like a double spend.  This is a major problem with the
> proposal.
>

Transactions that redeem an output containing (or referencing by means of
P2WSH) an OP_COUNT_ACKS are not broadcast by the network. That means that
the network cannot be DoS attacked by flooding with a transaction that will
not verify due to being too late.
The only parties that can include the redeem transaction are the miners
themselves.
Therefore I see no problem that an OP_COUNT_ACKS scriptSig transaction is
invalidated after the liveness times expires.
If there is no expiration, then polls can last forever and the system fails
to provide DoS protection for block validation since active polls can
accumulate forever.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161002/c6349d29/attachment-0001.html>

From lf-lists at mattcorallo.com  Sun Oct  2 22:51:06 2016
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Sun, 2 Oct 2016 22:51:06 +0000
Subject: [bitcoin-dev] About ASICBoost
In-Reply-To: <CAKzdR-pAxs_Gim-aFdjd4eQPY6vWsoEVafYwcjmBjit_dsH_wA@mail.gmail.com>
References: <CAKzdR-pAxs_Gim-aFdjd4eQPY6vWsoEVafYwcjmBjit_dsH_wA@mail.gmail.com>
Message-ID: <57F18F5A.6010304@mattcorallo.com>

Replies to comments inline.

Matt

On 10/02/16 17:13, Sergio Demian Lerner via bitcoin-dev wrote:
> Please Peter Todd explain here all what you want to say about a patent
> of a hardware design for an ASIC.
> 
> Remember that ASICBoost is not the only patent out there, there are at
> least three similar patents, filed by major Bitcoin ASIC manufacturers
> in three different countries, on similar technologies.

This is a very misleading comparison. I am not aware of any other
patents on Bitcoin-specific ASIC technology which are practically
enforceable or which the owners have indicated they wish to enforce. Of
the two patents which you point out which were filed on essentially the
same optimization that ASICBoost covers, yours predates both of them,
invalidating both the Spondoolies one (which Guy had indicated he wished
to use only defensively) and the AntMiner one. Of course, as China is
notorious for ignoring international patent law, AntMiner's could
possibly still be enforced in China. Still, AntMiner has, like
Spondoolies did, indicated they have no intention of enforcing their
patent to limit competition, though without any legally-enforceable
commitment. This leaves only your patent as practical and likely to be
enforced in the vast majority of the world.

> That suggest that the problem is not ASICBoot's: you cannot blame any
> company from doing lawful commerce in a FREE MARKET.

If you had acted in a way which indicated even the slightest regard for
centralization pressure and the harm it can do to Bitcoin in the
long-term, then I dont think many would be blaming you. Instead of any
kind of open or transparent licensing policy, with price structures
designed to encourage competition, you chose to hide behind an opaque
website, asking people to simply email you and Timo to negotiate
individually.

> It is a flaw in Bitcoin design that could be corrected if the guidelines
> I posted in [1] had been followed.
> 
> [1]
> https://bitslog.wordpress.com/2014/03/18/the-re-design-of-the-bitcoin-block-header/

Optimizations to the hashing algorithm are not, themselves, "attacks" on
Bitcoin, as you claimed in your post at the time. Only when they are
used in a rent-seeking fashion to push for more centralization and lower
miner revenue do they become so. One of the biggest advantages of SHA256
in the context of mining is exactly that it is a relatively simple
algorithm, allowing for fewer large algorithmic optimizations (or, when
there are, more people are capable of finding them, as happened with
ASICBoost). This opens the doors to more competition in the ASIC market
than if only few people had the knowledge (or a patent) to build
efficient ASICs. While it is certainly true that the high-end
ASIC-manufacturing industry is highly-centralized, making it worse by
limiting those who can build Bitcoin ASICs from anyone with access to
such a fab to only those who can, additionally, negotiate for patent
rights and navigate the modern patent system, is far from ideal.

You claim that Bitcoin should have fixed the problem at the time, but
you posted a proposal for a hard fork, with the only argument given as
to why it should happen being that you thought you had an attack, but
cant yet "really tell if they could affect Bitcoin". Instead of
following up with more information, as you indicated you would, you went
and patented the optimizations and have gone on rent-seeking behavior since.

From timo.hanke at web.de  Sun Oct  2 22:56:48 2016
From: timo.hanke at web.de (Timo Hanke)
Date: Sun, 2 Oct 2016 15:56:48 -0700
Subject: [bitcoin-dev] About ASICBoost
In-Reply-To: <CADJgMzuPrvoz5TpO+SvHs_Eix7usFTPuEgxhocjc8tf23LnuOg@mail.gmail.com>
References: <CAKzdR-pAxs_Gim-aFdjd4eQPY6vWsoEVafYwcjmBjit_dsH_wA@mail.gmail.com>
	<CADJgMzuPrvoz5TpO+SvHs_Eix7usFTPuEgxhocjc8tf23LnuOg@mail.gmail.com>
Message-ID: <CAH6h1LsR30yoy95QuPKAZrCdCDcO=T+0ZPh_7y-DKBO2CVct4A@mail.gmail.com>

> When you proposed the extra nonce space BIP [1], you had already
> applied for your ASICBOOST patent [2] without disclosure in the BIP
> [1] nor in your Bitcoin Core pull request #5102 [2].

There may be quite a few things to clarify here, and a possible
misunderstanding:

The BIP proposal [1] and accompanying pull request [3] does not increase or
decrease the entanglement of Bitcoin consensus code with any patents. This
is indicated by the title of the pull request: "No forking Extra nonce
added to Bitcoin header." It is not a fork at all (soft or hard). The
consensus is not changed.

AsicBoost is possible with or without adoption of that BIP proposal. Of
several ways to implement AsicBoost (all described in the patent
application), making use of the version field is only one. And even that
particular one has always been possible since the beginning of Bitcoin and
is still possible today. It is not the case that the BIP proposal enables
AsicBoost in a way that wasn't possible before.

The rationale behind the BIP proposal was to eliminate incentives to mess
with the merkle root and, in the extreme case, to mine empty blocks. This
incentive is real, and it is real with or without AsicBoost. It costs
hardware manufacturers real $ in additional hardware components right now
to cope with the pre-hashing load.

Timo


On Sun, Oct 2, 2016 at 12:36 PM, Btc Drak via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Sergio,
>
> It is critically important to the future of Bitcoin that consensus
> code avoid any unnecessary entanglements with patents because "the
> free market" allows you and anyone else to make consensus change
> proposals that rely on (unknown) patents - but this is something we
> should all be working to avoid, as it unnecessarily hinders Bitcoin
> development and everyone's ability to deploy. Consensus code must not
> be hindered by patents and Bitcoin should retain its permissionless
> qualities.
>
> When you proposed the extra nonce space BIP [1], you had already
> applied for your ASICBOOST patent [2] without disclosure in the BIP
> [1] nor in your Bitcoin Core pull request #5102 [2].
>
> The ASICBOOST patent [2] describes the same process as in the BIP [1]
> and proposed code [3] "As we explained in our Provisional Application,
> it has been proposed to partition the 4-byte Version field in the
> block header (see, Fig. 6) and use, e.g., the high 2-byte portion as
> additional nonce range."
>
> Today when you proposed a new sidechain BIP [4], Peter Todd was
> (rightly) concerned about the prior lack of disclosure of your patents
> related to your prior consensus modification proposal. Hence the
> concern is that this might be happening this time as well.
>
> There is no evidence that any of the other filers for the
> ASICBOOST-like patents by mining companies other than your own were
> going to be using it offensively as those other companies appeared to
> understand the decentralization risk of having an advantage enforced
> by legal and not technical means.
>
> It's great that you have now committed to looking into the Defensive
> Patent License. This seems likely to mitigate some of the patent
> concerns. Although it would be a show of good faith if you also agreed
> to license ASICBOOST under the DPL.
>
> [1]: BIP: https://github.com/BlockheaderNonce2/bitcoin/wiki
> [2]: ASICBOOST PATENT https://www.google.com/patents/WO2015077378A1?cl=en
> [3]: Extra nonce pull request: https://github.com/bitcoin/
> bitcoin/pull/5102
> [4]: COUNT_ACKS
> [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-October/
> 013174.html
>
> On Sun, Oct 2, 2016 at 6:13 PM, Sergio Demian Lerner via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > Please Peter Todd explain here all what you want to say about a patent
> of a
> > hardware design for an ASIC.
> >
> > Remember that ASICBoost is not the only patent out there, there are at
> least
> > three similar patents, filed by major Bitcoin ASIC manufacturers in three
> > different countries, on similar technologies.
> >
> > That suggest that the problem is not ASICBoot's: you cannot blame any
> > company from doing lawful commerce in a FREE MARKET.
> >
> > It is a flaw in Bitcoin design that could be corrected if the guidelines
> I
> > posted in [1] had been followed.
> >
> > [1]
> > https://bitslog.wordpress.com/2014/03/18/the-re-design-of-
> the-bitcoin-block-header/
> >
> >
> >
> >
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161002/ed3b4e7a/attachment.html>

From sergio.d.lerner at gmail.com  Sun Oct  2 22:57:31 2016
From: sergio.d.lerner at gmail.com (Sergio Demian Lerner)
Date: Sun, 2 Oct 2016 19:57:31 -0300
Subject: [bitcoin-dev] The use OP_COUNT_ACKS for paying for a common good
	for miners
Message-ID: <CAKzdR-r1mFZidZXDSmwVtHZ-KKPwsjZOHZycqR+H+KUBGBFydQ@mail.gmail.com>

One side benefit of OP_COUNT_ACKS is that it enables a completely different
use case:

It allow users to pay for any service miners can provide as group for the
common good (e.g. fee payment smoothing over many blocks). For instance,
users could pay miners to jointly buy better Internet service to improve
bandwidth or reduce latency between them.

By sending bitcoins to a script containing OP_COUNT_ACKS requiring 51% of
miners approval and adding a special text tag to such outputs such as
"FOR-MINERS-TO-BUY-X", users can send bitcoins to miners and ask the
majority of them to vote on the proposal, if accepted create a transaction
to redeem those funds. This could help to address the so-called tragedy of
the commons problem that Bitcoin may face in in long-term, by users
crowdfunding mining of the following n blocks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161002/bbc97441/attachment.html>

From greg at xiph.org  Sun Oct  2 22:58:46 2016
From: greg at xiph.org (Gregory Maxwell)
Date: Sun, 2 Oct 2016 22:58:46 +0000
Subject: [bitcoin-dev] About ASICBoost
In-Reply-To: <CAAS2fgSwgdvb9gWc8A2SPhJAL36Ss4EY_DTtc6sQj=G3X66OWA@mail.gmail.com>
References: <CAKzdR-pAxs_Gim-aFdjd4eQPY6vWsoEVafYwcjmBjit_dsH_wA@mail.gmail.com>
	<57F18F5A.6010304@mattcorallo.com>
	<CAAS2fgSwgdvb9gWc8A2SPhJAL36Ss4EY_DTtc6sQj=G3X66OWA@mail.gmail.com>
Message-ID: <CAAS2fgQ6Xip=6nrdSM82hAhd47CKGPXLCXMOkBohrZWxJyqFoQ@mail.gmail.com>

On Sun, Oct 2, 2016 at 10:51 PM, Matt Corallo via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> If you had acted in a way which indicated even the slightest regard for
> centralization pressure and the harm it can do to Bitcoin in the
> long-term, then I dont think many would be blaming you. Instead of any

Sergio was concerned about centralization pressure in private. He
reached out to the BCF on 2013-11-23 and asked if they would license
the patent from him so they could make it equally available to all
under "fair" terms.  BCF responded that they didn't think it (a
proprietary patent encumbered enhancement that would make its user(s)
30% more effective than others) would be a big deal and basically
encouraged him to go ahead and seek the patent.

From roconnor at blockstream.io  Sun Oct  2 23:00:16 2016
From: roconnor at blockstream.io (Russell O'Connor)
Date: Sun, 2 Oct 2016 19:00:16 -0400
Subject: [bitcoin-dev] Fwd: Re:  Drivechain proposal using OP_COUNT_ACKS
In-Reply-To: <CAMZUoKnE9VNnUHrDTtZOroBp=SC_eY1fEAsEOz=4b1=5v_wHaA@mail.gmail.com>
References: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
	<20161002171137.GA18452@fedora-21-dvm>
	<CAAy62_+cqR0-DBbKhePo+VqTJc099zXJR0EurLyb1XURUCT36g@mail.gmail.com>
	<201610022128.52401.luke@dashjr.org>
	<CAMZUoKkPrVeqv3Xitp42e1mCqxj3pMSOUW_pTTrb36jc9w71Vg@mail.gmail.com>
	<CAKzdR-oSQq+P-eibn4-0sraXRrmeC-7K+-xFB2cu4hKtSjHBUA@mail.gmail.com>
	<CAMZUoKnE9VNnUHrDTtZOroBp=SC_eY1fEAsEOz=4b1=5v_wHaA@mail.gmail.com>
Message-ID: <CAMZUoKmOXm8wVBMS5W+LpEu5u75N7XW65dN+RVFOW7ePkAM5+Q@mail.gmail.com>

I forget to send to bitcoin-dev.

> A related problem is that if this transaction is reorged out during an
innocent reorg, one that doesn't involve a double spend, the transaction
may never get back in unless it occurs at exactly  the same height, which
is not guaranteed.
>
> This affects fungabity of coins generated from these transactions.
>
>
> On Oct 2, 2016 18:37, "Sergio Demian Lerner" <sergio.d.lerner at gmail.com>
wrote:
>>
>>
>>
>> On Sun, Oct 2, 2016 at 6:46 PM, Russell O'Connor via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>
>>>
>>>> But I would argue that in this scenario, the only way it
>>>> would become invalid is the equivalent of a double-spend... and
therefore it
>>>> may be acceptable in relation to this argument.
>>>
>>>
>>> The values returned by OP_COUNT_ACKS vary in their exact value
depending on which block this transaction ends up in.  While the proposed
use of this operation is somewhat less objectionable (although still
objectionable to me), nothing stops users from using OP_EQUALVERIFY and and
causing their transaction fluctuate between acceptable and unacceptable,
with no party doing anything like a double spend.  This is a major problem
with the proposal.
>>
>>
>> Transactions that redeem an output containing (or referencing by means
of P2WSH) an OP_COUNT_ACKS are not broadcast by the network. That means
that the network cannot be DoS attacked by flooding with a transaction that
will not verify due to being too late.
>> The only parties that can include the redeem transaction are the miners
themselves.
>> Therefore I see no problem that an OP_COUNT_ACKS scriptSig transaction
is invalidated after the liveness times expires.
>> If there is no expiration, then polls can last forever and the system
fails to provide DoS protection for block validation since active polls can
accumulate forever.
>>
>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161002/30d18dbb/attachment.html>

From lf-lists at mattcorallo.com  Sun Oct  2 23:19:08 2016
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Sun, 2 Oct 2016 23:19:08 +0000
Subject: [bitcoin-dev] About ASICBoost
In-Reply-To: <CAAS2fgQ6Xip=6nrdSM82hAhd47CKGPXLCXMOkBohrZWxJyqFoQ@mail.gmail.com>
References: <CAKzdR-pAxs_Gim-aFdjd4eQPY6vWsoEVafYwcjmBjit_dsH_wA@mail.gmail.com>
	<57F18F5A.6010304@mattcorallo.com>
	<CAAS2fgSwgdvb9gWc8A2SPhJAL36Ss4EY_DTtc6sQj=G3X66OWA@mail.gmail.com>
	<CAAS2fgQ6Xip=6nrdSM82hAhd47CKGPXLCXMOkBohrZWxJyqFoQ@mail.gmail.com>
Message-ID: <57F195EC.30009@mattcorallo.com>

Even if the Bitcoin Foundation decided to recklessly disregard Bitcoin's
future centralization, I'm not sure going to them and asking them to pay
a license fee in order to keep from holding the rest of the Bitcoin
mining community hostage counts as "regard for centralization pressure".
It also doesn't excuse the lack of transparent licensing being available
today, or the lack of transparency when discussing it in public after
the patent had been filed.

Matt

On 10/02/16 22:58, Gregory Maxwell via bitcoin-dev wrote:
> On Sun, Oct 2, 2016 at 10:51 PM, Matt Corallo via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> If you had acted in a way which indicated even the slightest regard for
>> centralization pressure and the harm it can do to Bitcoin in the
>> long-term, then I dont think many would be blaming you. Instead of any
> 
> Sergio was concerned about centralization pressure in private. He
> reached out to the BCF on 2013-11-23 and asked if they would license
> the patent from him so they could make it equally available to all
> under "fair" terms.  BCF responded that they didn't think it (a
> proprietary patent encumbered enhancement that would make its user(s)
> 30% more effective than others) would be a big deal and basically
> encouraged him to go ahead and seek the patent.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

From greg at xiph.org  Sun Oct  2 23:27:20 2016
From: greg at xiph.org (Gregory Maxwell)
Date: Sun, 2 Oct 2016 23:27:20 +0000
Subject: [bitcoin-dev] About ASICBoost
In-Reply-To: <57F195EC.30009@mattcorallo.com>
References: <CAKzdR-pAxs_Gim-aFdjd4eQPY6vWsoEVafYwcjmBjit_dsH_wA@mail.gmail.com>
	<57F18F5A.6010304@mattcorallo.com>
	<CAAS2fgSwgdvb9gWc8A2SPhJAL36Ss4EY_DTtc6sQj=G3X66OWA@mail.gmail.com>
	<CAAS2fgQ6Xip=6nrdSM82hAhd47CKGPXLCXMOkBohrZWxJyqFoQ@mail.gmail.com>
	<57F195EC.30009@mattcorallo.com>
Message-ID: <CAAS2fgRh1oawCxSnGExyfxjD5fW8L78HtmAxgiNoTqa_cRQu_w@mail.gmail.com>

On Sun, Oct 2, 2016 at 11:19 PM, Matt Corallo <lf-lists at mattcorallo.com> wrote:
> Even if the Bitcoin Foundation decided to recklessly disregard Bitcoin's
> future centralization, I'm not sure going to them and asking them to pay
> a license fee in order to keep from holding the rest of the Bitcoin
> mining community hostage counts as "regard for centralization pressure".
> It also doesn't excuse the lack of transparent licensing being available
> today, or the lack of transparency when discussing it in public after
> the patent had been filed.

We can't change the past (besides, would you want BCF to have owned
that patent? I didn't)-- only the future.

To do so requires collaboration, so lets focus on that.

From jtimon at jtimon.cc  Mon Oct  3 06:17:25 2016
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Mon, 3 Oct 2016 08:17:25 +0200
Subject: [bitcoin-dev] The use OP_COUNT_ACKS for paying for a common
 good for miners
In-Reply-To: <CAKzdR-r1mFZidZXDSmwVtHZ-KKPwsjZOHZycqR+H+KUBGBFydQ@mail.gmail.com>
References: <CAKzdR-r1mFZidZXDSmwVtHZ-KKPwsjZOHZycqR+H+KUBGBFydQ@mail.gmail.com>
Message-ID: <CABm2gDpA=uOw7g-ARn3QoDPj1jRSyjsADsZmTvV2cfx97Q5RWw@mail.gmail.com>

When would miners vote no to receive more funds?
Also, why would they spend the funds buying X once they get them?

On Oct 3, 2016 00:58, "Sergio Demian Lerner via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> One side benefit of OP_COUNT_ACKS is that it enables a completely
> different use case:
>
> It allow users to pay for any service miners can provide as group for the
> common good (e.g. fee payment smoothing over many blocks). For instance,
> users could pay miners to jointly buy better Internet service to improve
> bandwidth or reduce latency between them.
>
> By sending bitcoins to a script containing OP_COUNT_ACKS requiring 51% of
> miners approval and adding a special text tag to such outputs such as
> "FOR-MINERS-TO-BUY-X", users can send bitcoins to miners and ask the
> majority of them to vote on the proposal, if accepted create a transaction
> to redeem those funds. This could help to address the so-called tragedy of
> the commons problem that Bitcoin may face in in long-term, by users
> crowdfunding mining of the following n blocks.
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161003/509de83b/attachment.html>

From roconnor at blockstream.io  Sun Oct  2 23:26:18 2016
From: roconnor at blockstream.io (Russell O'Connor)
Date: Sun, 2 Oct 2016 19:26:18 -0400
Subject: [bitcoin-dev] Drivechain proposal using OP_COUNT_ACKS
In-Reply-To: <CAKzdR-oxpDdXEcPTYtj6os58cVMgwoqyXvu5UMMQzD3QbvMtxA@mail.gmail.com>
References: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
	<20161002171137.GA18452@fedora-21-dvm>
	<CAAy62_+cqR0-DBbKhePo+VqTJc099zXJR0EurLyb1XURUCT36g@mail.gmail.com>
	<201610022128.52401.luke@dashjr.org>
	<CAMZUoKkPrVeqv3Xitp42e1mCqxj3pMSOUW_pTTrb36jc9w71Vg@mail.gmail.com>
	<CAKzdR-oSQq+P-eibn4-0sraXRrmeC-7K+-xFB2cu4hKtSjHBUA@mail.gmail.com>
	<CAMZUoKnE9VNnUHrDTtZOroBp=SC_eY1fEAsEOz=4b1=5v_wHaA@mail.gmail.com>
	<CAKzdR-oxpDdXEcPTYtj6os58cVMgwoqyXvu5UMMQzD3QbvMtxA@mail.gmail.com>
Message-ID: <CAMZUoKn+mTQMsbuomFQ=vG5K88F2gdUe4jwrRAyMLeTr3M1Tyw@mail.gmail.com>

If someone uses OP_EQUALVERIFY after OP_COUNT_ACKS then the transaction
probably won't be able to be included at a different height.

On Oct 2, 2016 19:16, "Sergio Demian Lerner" <sergio.d.lerner at gmail.com>
wrote:

> It can be included at another block at a differnt height. It can be
> included anytime during the liveness period which starts 100 blocks later
> than the poll period ends. I'm reading the BIP now and it's true that this
> is not enterily clear. I will try to clarify.
>
>
> On Sun, Oct 2, 2016 at 7:58 PM, Russell O'Connor <roconnor at blockstream.io>
> wrote:
>
>> A related problem is that if this transaction is reorged out during an
>> innocent reorg, one that doesn't involve a double spend, the transaction
>> may never get back in unless it occurs at exactly  the same height, which
>> is not guaranteed.
>>
>> This affects fungabity of coins generated from these transactions.
>>
>> On Oct 2, 2016 18:37, "Sergio Demian Lerner" <sergio.d.lerner at gmail.com>
>> wrote:
>>
>>>
>>>
>>> On Sun, Oct 2, 2016 at 6:46 PM, Russell O'Connor via bitcoin-dev <
>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>
>>>>
>>>> But I would argue that in this scenario, the only way it
>>>>> would become invalid is the equivalent of a double-spend... and
>>>>> therefore it
>>>>> may be acceptable in relation to this argument.
>>>>>
>>>>
>>>> The values returned by OP_COUNT_ACKS vary in their exact value
>>>> depending on which block this transaction ends up in.  While the proposed
>>>> use of this operation is somewhat less objectionable (although still
>>>> objectionable to me), nothing stops users from using OP_EQUALVERIFY and and
>>>> causing their transaction fluctuate between acceptable and unacceptable,
>>>> with no party doing anything like a double spend.  This is a major problem
>>>> with the proposal.
>>>>
>>>
>>> Transactions that redeem an output containing (or referencing by means
>>> of P2WSH) an OP_COUNT_ACKS are not broadcast by the network. That means
>>> that the network cannot be DoS attacked by flooding with a transaction that
>>> will not verify due to being too late.
>>> The only parties that can include the redeem transaction are the miners
>>> themselves.
>>> Therefore I see no problem that an OP_COUNT_ACKS scriptSig transaction
>>> is invalidated after the liveness times expires.
>>> If there is no expiration, then polls can last forever and the system
>>> fails to provide DoS protection for block validation since active polls can
>>> accumulate forever.
>>>
>>>
>>>
>>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161002/008196f0/attachment-0001.html>

From nathan.cook at gmail.com  Wed Oct  5 02:15:36 2016
From: nathan.cook at gmail.com (Nathan Cook)
Date: Wed, 5 Oct 2016 05:15:36 +0300
Subject: [bitcoin-dev] BIP draft: OP_CHECKBLOCKATHEIGHT
In-Reply-To: <201610010502.09524.luke@dashjr.org>
References: <201609230957.03138.luke@dashjr.org>
	<87oa34d8fz.fsf@rustcorp.com.au>
	<201610010502.09524.luke@dashjr.org>
Message-ID: <CAGNXQMRfCwCcMZavXs87K_cRNjL1_DU3q4Vu-F3w92ncd-Neag@mail.gmail.com>

On 1 October 2016 at 08:02, Luke Dashjr via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Saturday, October 01, 2016 4:01:04 AM Rusty Russell wrote:
>
> > - Otherwise <bits> of hash is compared to lower <bits> of blockhash.
>
> Lower in what endian? Why only that endian? Why only lower? I can see a
> possible use case where one wants to look at only the high bits to ensure
> their transaction is only valid in a block with at least a certain
> difficulty...


Why not use segwit versioning for all this stuff? That lets you re-enable
the bitwise operations like OP_AND, permitting arbitrary bit-masks.
Further, the "at least a certain difficulty" problem suggests a solution by
extending the validity of opcodes like OP_LESSTHAN etc. to 256-bit inputs.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161005/c0497d3f/attachment.html>

From jl2012 at xbt.hk  Thu Oct  6 04:27:38 2016
From: jl2012 at xbt.hk (Johnson Lau)
Date: Thu, 06 Oct 2016 12:27:38 +0800
Subject: [bitcoin-dev] To-be-softfork policy in 0.13.1
Message-ID: <157983f271e.11ede1ded314228.7685460451215283009@xbt.hk>

Coupled with the release of segwit in 0.13.1, there are 3 default relay and mining policy rules that may become softfork proposals in the near future.

Generally, users must not assume that a script spendable in pre-segregated witness system would also be spendable as a P2WPKH or P2WSH script. Before large-scale deployment in the production network, developers should test the scripts on testnet with the default relay policy turned on, and with a small amount of money after BIP141 is activated on mainnet.

The rules include:

1. Only compressed public keys are accepted in P2WPKH and P2WSH (See BIP143 for details)
2. The argument of OP_IF/NOTIF in P2WSH must be minimal (see https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013014.html)
3. Signature(s) must be null vector(s) if an OP_CHECKSIG or OP_CHECKMULTISIG is failed (for both pre-segregated witness script and P2WSH. See BIP146)

The BIP141 and 143 are updated with the aforementioned rules: https://github.com/bitcoin/bips/pull/459/files


From jlrubin at mit.edu  Sun Oct  9 10:26:07 2016
From: jlrubin at mit.edu (Jeremy)
Date: Sun, 9 Oct 2016 12:26:07 +0200
Subject: [bitcoin-dev] 1 Year bitcoin-dev Moderation Review
Message-ID: <CAD5xwhgayR9CgfcypCwGEDyubE4z-mXEjxDmGh09GYO8nhm3Ow@mail.gmail.com>

Hi bitcoin-dev,

I'm well aware that discussion of moderation on bitcoin-dev is
discouraged*. However, I think that we should, as a year of moderation
approaches, discuss openly as a community what the impact of such policy
has been. Making such a post now is timely given that people will have the
opportunity to discuss in-person as well as online as Scaling Bitcoin is
currently underway. On the suggestion of others, I've also CC'd
bitcoin-discuss on this message.

Below, I'll share some of my own personal thoughts as a starter, but would
love to hear others feelings as well.

For me, the bitcoin-dev mailing list was a place where I started
frequenting to learn a lot about bitcoin and the development process and
interact with the community. Since moderation has begun, it seems that the
messages/day has dropped drastically. This may be a nice outcome overall
for our sanity, but I think that it has on the whole made the community
less accessible. I've heard from people (a > 1 number, myself included)
that they now self-censor because they think they will put a lot of work
into their email only for it to get moderated away as trolling/spam. Thus,
while we may not observe a high rate of moderated posts, it does mean the
"chilling effect" of moderation still manifests -- I think that people not
writing emails because they think it may be moderated reduces the rate of
people writing emails which is a generally valuable thing as it offers
people a vehicle through which they try to think through and communicate
their ideas in detail.

Overall, I think that at the time that moderation was added to the list, it
was probably the right thing to do. We're in a different place as a
community now, so I feel we should attempt to open up this valuable
communication channel once again. My sentiment is that we enacted
moderation to protect a resource that we all felt was valuable, but in the
process, the value of the list was damaged, but not irreparably so.

Best,

Jeremy


* From the email introducing the bitcoin-dev moderation policy, "Generally
discouraged: shower thoughts, wild speculation, jokes, +1s, non-technical
bitcoin issues, rehashing settled topics without new data, moderation
 concerns."


--
@JeremyRubin <https://twitter.com/JeremyRubin>
<https://twitter.com/JeremyRubin>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161009/ea20481e/attachment.html>

From bitcoin-dev at rgrant.org  Sun Oct  9 20:31:54 2016
From: bitcoin-dev at rgrant.org (Ryan Grant)
Date: Sun, 9 Oct 2016 22:31:54 +0200
Subject: [bitcoin-dev] 1 Year bitcoin-dev Moderation Review
In-Reply-To: <CAD5xwhgayR9CgfcypCwGEDyubE4z-mXEjxDmGh09GYO8nhm3Ow@mail.gmail.com>
References: <CAD5xwhgayR9CgfcypCwGEDyubE4z-mXEjxDmGh09GYO8nhm3Ow@mail.gmail.com>
Message-ID: <CAMnpzfqiWuivxTLqoC-f=7XuRnU_Rhyves9CnLkA_LPLVwygmg@mail.gmail.com>

Maybe bitcoin-discuss should have been opt-out rather than opt-in.

Dear moderators, what is the subscription count to bitcoin-discuss,
and bitcoin-dev?

From henning.kopp at uni-ulm.de  Mon Oct 10 07:38:06 2016
From: henning.kopp at uni-ulm.de (Henning Kopp)
Date: Mon, 10 Oct 2016 09:38:06 +0200
Subject: [bitcoin-dev] 1 Year bitcoin-dev Moderation Review
In-Reply-To: <CAD5xwhgayR9CgfcypCwGEDyubE4z-mXEjxDmGh09GYO8nhm3Ow@mail.gmail.com>
References: <CAD5xwhgayR9CgfcypCwGEDyubE4z-mXEjxDmGh09GYO8nhm3Ow@mail.gmail.com>
Message-ID: <20161010073806.GA2172@banane.informatik.uni-ulm.de>

Hi all,

I totally agree with the assessment of the situation. Previously I
learned a lot about bitcoin on this list. There were a lot of great
ideas regarding the protocol and the surrounding ecosystem. Now there
is mainly talk about code and BIPs, which is the main purpose of a
developer list.
I do not feel that we should clog bitcoin-dev again with
non-development talk but rather find a way to get bitcoin-discuss
going. My impression is that bitcoin-discuss has not reached a
critical mass of contributors. The question is how we can change that.

All the best
Henning

On Sun, Oct 09, 2016 at 12:26:07PM +0200, Jeremy via bitcoin-dev wrote:
> Hi bitcoin-dev,
> 
> I'm well aware that discussion of moderation on bitcoin-dev is
> discouraged*. However, I think that we should, as a year of moderation
> approaches, discuss openly as a community what the impact of such policy
> has been. Making such a post now is timely given that people will have the
> opportunity to discuss in-person as well as online as Scaling Bitcoin is
> currently underway. On the suggestion of others, I've also CC'd
> bitcoin-discuss on this message.
> 
> Below, I'll share some of my own personal thoughts as a starter, but would
> love to hear others feelings as well.
> 
> For me, the bitcoin-dev mailing list was a place where I started
> frequenting to learn a lot about bitcoin and the development process and
> interact with the community. Since moderation has begun, it seems that the
> messages/day has dropped drastically. This may be a nice outcome overall
> for our sanity, but I think that it has on the whole made the community
> less accessible. I've heard from people (a > 1 number, myself included)
> that they now self-censor because they think they will put a lot of work
> into their email only for it to get moderated away as trolling/spam. Thus,
> while we may not observe a high rate of moderated posts, it does mean the
> "chilling effect" of moderation still manifests -- I think that people not
> writing emails because they think it may be moderated reduces the rate of
> people writing emails which is a generally valuable thing as it offers
> people a vehicle through which they try to think through and communicate
> their ideas in detail.
> 
> Overall, I think that at the time that moderation was added to the list, it
> was probably the right thing to do. We're in a different place as a
> community now, so I feel we should attempt to open up this valuable
> communication channel once again. My sentiment is that we enacted
> moderation to protect a resource that we all felt was valuable, but in the
> process, the value of the list was damaged, but not irreparably so.
> 
> Best,
> 
> Jeremy
> 
> 
> * From the email introducing the bitcoin-dev moderation policy, "Generally
> discouraged: shower thoughts, wild speculation, jokes, +1s, non-technical
> bitcoin issues, rehashing settled topics without new data, moderation
>  concerns."
> 
> 
> --
> @JeremyRubin <https://twitter.com/JeremyRubin>
> <https://twitter.com/JeremyRubin>

> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


-- 
Henning Kopp
Institute of Distributed Systems
Ulm University, Germany

Office: O27 - 3402
Phone: +49 731 50-24138
Web: http://www.uni-ulm.de/in/vs/~kopp

From jtimon at jtimon.cc  Mon Oct 10 14:58:04 2016
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Mon, 10 Oct 2016 16:58:04 +0200
Subject: [bitcoin-dev] Libconsensus completion plan document (with pictures)
Message-ID: <CABm2gDpJ0o-Gea20q9TK7LAL2uogu7rvhTPEaq+FtUwj04OL0w@mail.gmail.com>

Hello, since trying to encapsulate consensus code without exposing
anything else (see my post from january
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012235.html
) wasn't succesful in getting review, I decided to turn "phase 2" into
"expose verifyHeader" again. I was previously starting the document
with pictures but since things we're changing and the pictures were
already deprecated, I decided to wait after segwit was merged and
include those changes in the pictures too.
This time I created a repository so that people can look at it, even
if it's less advanced than previous versions have been:

https://github.com/jtimon/consensus-doc

Here's a branch with the resulting images, latex file and pdf:

https://github.com/jtimon/consensus-doc/tree/generated

And here's the pdf:

https://github.com/jtimon/consensus-doc/blob/generated/libconsensus.pdf

Any questions or comments are welcomed. If some of the images are
wanted for some other more general documentation or you want me to
create a specific diagram to document Bitcoin Core I'm happy to do so
as well.

Note that some phases can be done in different order or in parallel
(ie phase 3 and phase 4 could happen before phase 2, although I
strongly doubt it because phase 2 is the simplest to review and I've
been harassing different people to do it for a while with little
success [thanks to those who reviewed it and gave feedback] ).

An implementation of phase 2 (expose verifyHeader()) can be seen in
https://github.com/bitcoin/bitcoin/pull/8493

From dscotese at litmocracy.com  Mon Oct 10 15:34:17 2016
From: dscotese at litmocracy.com (Dave Scotese)
Date: Mon, 10 Oct 2016 08:34:17 -0700
Subject: [bitcoin-dev] 1 Year bitcoin-dev Moderation Review
In-Reply-To: <20161010073806.GA2172@banane.informatik.uni-ulm.de>
References: <CAD5xwhgayR9CgfcypCwGEDyubE4z-mXEjxDmGh09GYO8nhm3Ow@mail.gmail.com>
	<20161010073806.GA2172@banane.informatik.uni-ulm.de>
Message-ID: <CAGLBAhd4dzUncmdU006rR1+HLon7O-AM30CZZs3qbNMDpgJgJA@mail.gmail.com>

I sent my previous email ONLY to bitcoin-discuss at lists.linuxfoundation.org
and it waited in the moderation queue.  I don't know when moderation was
added to this list, but it seems to me that it's a misstep.

On Mon, Oct 10, 2016 at 12:38 AM, Henning Kopp via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Hi all,
>
> I totally agree with the assessment of the situation. Previously I
> learned a lot about bitcoin on this list. There were a lot of great
> ideas regarding the protocol and the surrounding ecosystem. Now there
> is mainly talk about code and BIPs, which is the main purpose of a
> developer list.
> I do not feel that we should clog bitcoin-dev again with
> non-development talk but rather find a way to get bitcoin-discuss
> going. My impression is that bitcoin-discuss has not reached a
> critical mass of contributors. The question is how we can change that.
>
> All the best
> Henning
>
> On Sun, Oct 09, 2016 at 12:26:07PM +0200, Jeremy via bitcoin-dev wrote:
> > Hi bitcoin-dev,
> >
> > I'm well aware that discussion of moderation on bitcoin-dev is
> > discouraged*. However, I think that we should, as a year of moderation
> > approaches, discuss openly as a community what the impact of such policy
> > has been. Making such a post now is timely given that people will have
> the
> > opportunity to discuss in-person as well as online as Scaling Bitcoin is
> > currently underway. On the suggestion of others, I've also CC'd
> > bitcoin-discuss on this message.
> >
> > Below, I'll share some of my own personal thoughts as a starter, but
> would
> > love to hear others feelings as well.
> >
> > For me, the bitcoin-dev mailing list was a place where I started
> > frequenting to learn a lot about bitcoin and the development process and
> > interact with the community. Since moderation has begun, it seems that
> the
> > messages/day has dropped drastically. This may be a nice outcome overall
> > for our sanity, but I think that it has on the whole made the community
> > less accessible. I've heard from people (a > 1 number, myself included)
> > that they now self-censor because they think they will put a lot of work
> > into their email only for it to get moderated away as trolling/spam.
> Thus,
> > while we may not observe a high rate of moderated posts, it does mean the
> > "chilling effect" of moderation still manifests -- I think that people
> not
> > writing emails because they think it may be moderated reduces the rate of
> > people writing emails which is a generally valuable thing as it offers
> > people a vehicle through which they try to think through and communicate
> > their ideas in detail.
> >
> > Overall, I think that at the time that moderation was added to the list,
> it
> > was probably the right thing to do. We're in a different place as a
> > community now, so I feel we should attempt to open up this valuable
> > communication channel once again. My sentiment is that we enacted
> > moderation to protect a resource that we all felt was valuable, but in
> the
> > process, the value of the list was damaged, but not irreparably so.
> >
> > Best,
> >
> > Jeremy
> >
> >
> > * From the email introducing the bitcoin-dev moderation policy,
> "Generally
> > discouraged: shower thoughts, wild speculation, jokes, +1s, non-technical
> > bitcoin issues, rehashing settled topics without new data, moderation
> >  concerns."
> >
> >
> > --
> > @JeremyRubin <https://twitter.com/JeremyRubin>
> > <https://twitter.com/JeremyRubin>
>
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
> --
> Henning Kopp
> Institute of Distributed Systems
> Ulm University, Germany
>
> Office: O27 - 3402
> Phone: +49 731 50-24138
> Web: http://www.uni-ulm.de/in/vs/~kopp
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>



-- 
I like to provide some work at no charge to prove my value. Do you need a
techie?
I own Litmocracy <http://www.litmocracy.com> and Meme Racing
<http://www.memeracing.net> (in alpha).
I'm the webmaster for The Voluntaryist <http://www.voluntaryist.com> which
now accepts Bitcoin.
I also code for The Dollar Vigilante <http://dollarvigilante.com/>.
"He ought to find it more profitable to play by the rules" - Satoshi
Nakamoto
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161010/b30db2b1/attachment.html>

From john at seebitcoin.com  Tue Oct 11 21:23:44 2016
From: john at seebitcoin.com (John Hardy)
Date: Tue, 11 Oct 2016 21:23:44 +0000
Subject: [bitcoin-dev] Could a sidechain protocol create an addressable
 "Internet of Blockchains" and facilitate scaling?
In-Reply-To: <DUB118-W3025C67626835237E907A9EFC20@phx.gbl>
References: <DUB118-W3025C67626835237E907A9EFC20@phx.gbl>
Message-ID: <DUB118-W404335B158A3BE61A6D164EFDA0@phx.gbl>



Sidechains seem an inevitable tool for scaling. They allow Bitcoins to be transferred from the main blockchain into external blockchains, of which there can be any number with radically different approaches.
In current thinking I have encountered, sidechains are isolated from each other. To move Bitcoin between them would involve a slow transfer back to the mainchain, and then out again to a different sidechain.
Could we instead create a protocol for addressable blockchains, all using a shared proof of work, which effectively acts as an Internet of Blockchains?
Instead of transferring Bitcoin into individual sidechains, you move them into the master sidechain, which I'll call Angel. The Angel blockchain sits at the top of of a tree of blockchains, each of which can have radically different properties, but are all able to transfer Bitcoin and data between each other using a standardised protocol.
Each blockchain has its own address, much like an IP address. The Angel blockchain acts as a registrar, a public record of every blockchain and its properties. Creating a blockchain is as simple as getting a createBlockchain transaction included in an Angel block, with details of parameters such as block creation time, block size limit, etc. A decentralised DNS of sorts.
Mining in Angel uses a standardised format, creating hashes which allow all different blockchains to contribute to the same Angel proof of work. Miners must hash the address of the blockchain they are mining, and if they mine a hash of sufficient difficulty for that blockchain they are able to create a block.
Blockchains can have child blockchains, so a child of Angel might have the address aa9, and a child of aa9 might have the address aa9:e4d. The lower down the tree you go, the lower the security, but the lower the transaction fees. If a miner on a lower level produces a hash of sufficient difficulty, they can use it on any parents, up to and including the Angel blockchain, and claim fees on each.
Children always synchronise and follow all parents (and their reorganisations), and parents are aware of their children. This allows you to do some pretty cool things with security. If a child tries to withdraw to a parent after spending on the child (a double spend attempt) this will be visible instantly, and all child nodes will immediately be able to broadcast proof of the double spend to parent chain nodes so they do not mine on those blocks. This effectively means children can inherit a level of security from their parents without the same PoW difficulty.
There are so many conflicting visions for how to scale Bitcoin. Angel allows the free market to decide which approaches are successful, and for complementary blockchains with different use cases, such as privacy, high transaction volume, and Turing completeness to more seamlessly exist alongside each other, using Bitcoin as the standard medium of exchange.
I wrote this as a TLDR summary for a (still evolving) idea I had on the best approach to scale Bitcoin infinitely. I've written more of my thoughts on the idea at https://seebitcoin.com/2016/09/introducing-buzz-a-turing-complete-concept-for-scaling-bitcoin-to-infinity-and-beyond/
Does anybody think this would be a better, more efficient way of implementing sidechains? It allows infinite scaling, and standardisation allows better pooling of resources.
Thanks,
John Hardyjohn at seebitcoin.com 		 	   		   		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161011/73c81f78/attachment.html>

From natanael.l at gmail.com  Wed Oct 12 01:28:46 2016
From: natanael.l at gmail.com (Natanael)
Date: Wed, 12 Oct 2016 03:28:46 +0200
Subject: [bitcoin-dev] Could a sidechain protocol create an addressable
 "Internet of Blockchains" and facilitate scaling?
In-Reply-To: <DUB118-W404335B158A3BE61A6D164EFDA0@phx.gbl>
References: <DUB118-W3025C67626835237E907A9EFC20@phx.gbl>
	<DUB118-W404335B158A3BE61A6D164EFDA0@phx.gbl>
Message-ID: <CAAt2M19Vkbp82Pat7dSrdunFthNX0zSVsLAvZ+5X=i6Fz+s+ew@mail.gmail.com>

Den 12 okt. 2016 01:33 skrev "John Hardy via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org>:
> Sidechains seem an inevitable tool for scaling. They allow Bitcoins to be
transferred from the main blockchain into external blockchains, of which
there can be any number with radically different approaches.
>
> In current thinking I have encountered, sidechains are isolated from each
other. To move Bitcoin between them would involve a slow transfer back to
the mainchain, and then out again to a different sidechain.
>
> Could we instead create a protocol for addressable blockchains, all using
a shared proof of work, which effectively acts as an Internet of
Blockchains?

More of a treechain / clusterchain, then?

> Instead of transferring Bitcoin into individual sidechains, you move them
into the master sidechain, which I'll call Angel. The Angel blockchain sits
at the top of of a tree of blockchains, each of which can have radically
different properties, but are all able to transfer Bitcoin and data between
each other using a standardised protocol.
>
> Each blockchain has its own address, much like an IP address. The Angel
blockchain acts as a registrar, a public record of every blockchain and its
properties. Creating a blockchain is as simple as getting a
createBlockchain transaction included in an Angel block, with details of
parameters such as block creation time, block size limit, etc. A
decentralised DNS of sorts.
>
> Mining in Angel uses a standardised format, creating hashes which allow
all different blockchains to contribute to the same Angel proof of work.
Miners must hash the address of the blockchain they are mining, and if they
mine a hash of sufficient difficulty for that blockchain they are able to
create a block.
>
> Blockchains can have child blockchains, so a child of Angel might have
the address aa9, and a child of aa9 might have the address aa9:e4d. The
lower down the tree you go, the lower the security, but the lower the
transaction fees. If a miner on a lower level produces a hash of sufficient
difficulty, they can use it on any parents, up to and including the Angel
blockchain, and claim fees on each.
>
> Children always synchronise and follow all parents (and their
reorganisations), and parents are aware of their children. This allows you
to do some pretty cool things with security. If a child tries to withdraw
to a parent after spending on the child (a double spend attempt) this will
be visible instantly, and all child nodes will immediately be able to
broadcast proof of the double spend to parent chain nodes so they do not
mine on those blocks. This effectively means children can inherit a level
of security from their parents without the same PoW difficulty.
>
> There are so many conflicting visions for how to scale Bitcoin. Angel
allows the free market to decide which approaches are successful, and for
complementary blockchains with different use cases, such as privacy, high
transaction volume, and Turing completeness to more seamlessly exist
alongside each other, using Bitcoin as the standard medium of exchange.
>
> I wrote this as a TLDR summary for a (still evolving) idea I had on the
best approach to scale Bitcoin infinitely. I've written more of my thoughts
on the idea at
https://seebitcoin.com/2016/09/introducing-buzz-a-turing-complete-concept-for-scaling-bitcoin-to-infinity-and-beyond/
>
> Does anybody think this would be a better, more efficient way of
implementing sidechains? It allows infinite scaling, and standardisation
allows better pooling of resources.

I've got a similar idea since quite a while back, but I've never really
written it down in full. Here one link:

http://www.metzdowd.com/pipermail/cryptography/2015-January/024338.html

Some thoughts on how to design it;

The basic idea is to compress the validation data maximally, and yet
achieve Turing completeness for an arbitary number of interacting chains,
or "namespaces".

The whole thing is checkpointed and uses Zero-knowledge proofs to enable
secure pruning, making it essentially a rolling blockchain with complete
preservation of history. It grows approximately linearly with
non-deprecated state.

This latest checkpoint's header + the following headers and accompanying
Zero-knowledge proofs would together act as the root for the system.

Having that is all you would need to confirm that any particular piece of
data from the blockchain is correct, given that it comes with enough
metadata to trace it all the way to the root. (Merkle tree hashes, ZKP:s,
etc).

Every chain would be registered under a unique name (the root chain would
essentially just deal with registering chain names + their rules), and
would define its own external API towards other chains, and it would define
its own rules for how its data can be updated and when. Every single
interaction with a chain is done by an atomic program (transaction), and
all sets of validated changes must be conflict-free (especially across
chains). Everything would practically be composed of a hierarchy of
interacting programs.

Every set of programs (transactions) can be transformed into a "diff" on
the blockchain state plus an accompanying Zero-knowledge proof. The proofs
can even be chained, such that groups of users of one chain can create a
proof for their own changes, submit it to some chain coordinator who does
another compressing merge and proof generation, to then send it to the
miners who merges the collective changes for all chains and generates a
proof for the root.

Obviously that validation can get inefficient if many chains interact, as
you can't simply just look for conflicting UTXO:s in programs (unless the
chain designers are *really* smart with their conflict resolution
mechanisms). Either you have to use programmatic locking, very slow block
rates or chose to not guarantee that any particular action has succeeded
(essentially turning validated programs (transactions) into *requests* to
the API up towards the root, to eventually be resolved later with responses
propagated back down, instead of having them be direct changes to the
state).

The latter option requires a lot more interaction by the client to get the
intended behavior in many circumstances. The first two can both kill
performance (nobody wants small programs with a few round-trips to take a
week to execute).

I really do hope it can be resolved effectively. I'm guessing some serious
restrictions on the API:s would be necessary. You would want most programs
to be provably independent (such as not accessing the same resources) to be
able to easily just create a small checkpoint of the global state and
generate a proof for it. Programs simultaneously accessing resources that
don't guarantee commutativity for all actions would likely be to be rate
limited.

Best case scenario: some genius manages to create the equivalent of
Lightning Network (with in-chain arbitration authority assigned to chosen
servers in the chain definitions, and cross-chain negotiation between those
authorities when programs use the API) for processing the programs in near
real-time, and quickly settling on what changes to commit to the root.
Programs would practically need to be designed to be networked
(multi-stage) so that the servers can let them negotiate over their API:s
across all chains, until the server has a complete set of changes without
conflicts to commit to the root.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161012/303bc6d5/attachment-0001.html>

From pete at petertodd.org  Thu Oct 13 08:51:17 2016
From: pete at petertodd.org (Peter Todd)
Date: Thu, 13 Oct 2016 04:51:17 -0400
Subject: [bitcoin-dev] Defensive Patent License Offer Notice
Message-ID: <20161013085117.GA26429@fedora-21-dvm>

Also published at https://petertodd.org/2016/defensive-patent-license-offer,
and Bitcoin txid b4bf94f5c457d080924aa163106d423670373cfe3b10f8ec00742c2234b01b72

    -----BEGIN PGP SIGNED MESSAGE-----
    Hash: SHA256

    I, Peter Todd, hereby declare myself and all technology companies that I
    control as "Defensive" by committing to offer a Defensive Patent License,
    version 1.1, for any of my patents either existing or future, to any DPL User.
    Neither I nor any companies that I control have any patents at this time.

    My contact address is pete at petertodd.org

    -----BEGIN PGP SIGNATURE-----

    iQEcBAEBCAAGBQJX/t11AAoJEGOZARBE6K+yR00H/0xp3oO7FiMvM4pjfoHZPPOa
    m3KjT4RSbFQLa9uniz0u/9bkc5I70CggkY3jtNLtDMbMBTwcMP61ABsvx+5y2gGD
    zE6VZ9DPcHVg/Eup6WSBlQO3HQKuFVz7vXSMuaidG7A+fpkU71SjDpB4M6hdvWnS
    +L9XBQ1GtQe0lSM73s4mld/IvB1giwPN1bOheQ9koYcQjj+B8PWyt2gIUwctxyvA
    7bC+KtCQT4RJPsQHbHx569CDkyIi3dNt0rTjCo5bOeUKrJF7eA3YktYdTJefZ+Rf
    00dbRZMslrg3dW9VWECfC0xC/kn+heStJ7WqJJKqYWo4apm6IiKPZxlwIcVscF0=
    =xrPk
    -----END PGP SIGNATURE-----

# Notes

* On the advice of my lawyer, I'm currently offering only a specific version of
  the DPL. I probably will offer licenses under subsequent versions in the
  future, but I'd prefer to see how the DPL evolves and whether or not the
  license stewards behind it prove trustworthy before committing to doing so.

* The language "all technology companies I control" is there to avoid any
  complications with non-technology companies that I may control in the future,
  e.g. family real-estate holding companies, and the non-profit caving group
  I'm a part of. To my knowledge, I only control one company as of writing, the
  numbered company I do all my consulting through; I consider that company a
  "technology company", and thus the above offer applies to it.

* Equally, if by some stroke of luck I do end up in control of any other
  technology companies - maybe Bill Gate's blockchain smart-contract will
  mysteriously gives me control of Microsoft - then the above offer will apply.

-- 
https://petertodd.org 'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161013/a7fc960f/attachment.sig>

From greg_not_so at hotmail.com  Thu Oct 13 13:03:45 2016
From: greg_not_so at hotmail.com (greg misiorek)
Date: Thu, 13 Oct 2016 09:03:45 -0400
Subject: [bitcoin-dev] Defensive Patent License Offer Notice
Message-ID: <BLU407-EAS131B6644332EB36C06C5780B1DC0@phx.gbl>

Interesting and thx for sharing what a DPL  is.

gm
________________________________
From: Peter Todd via bitcoin-dev<mailto:bitcoin-dev at lists.linuxfoundation.org>
Sent: ?10/?13/?2016 4:51 AM
To: bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
Cc: defensivepatent at gmail.com<mailto:defensivepatent at gmail.com>
Subject: [bitcoin-dev] Defensive Patent License Offer Notice

Also published at https://petertodd.org/2016/defensive-patent-license-offer,
and Bitcoin txid b4bf94f5c457d080924aa163106d423670373cfe3b10f8ec00742c2234b01b72

    -----BEGIN PGP SIGNED MESSAGE-----
    Hash: SHA256

    I, Peter Todd, hereby declare myself and all technology companies that I
    control as "Defensive" by committing to offer a Defensive Patent License,
    version 1.1, for any of my patents either existing or future, to any DPL User.
    Neither I nor any companies that I control have any patents at this time.

    My contact address is pete at petertodd.org

    -----BEGIN PGP SIGNATURE-----

    iQEcBAEBCAAGBQJX/t11AAoJEGOZARBE6K+yR00H/0xp3oO7FiMvM4pjfoHZPPOa
    m3KjT4RSbFQLa9uniz0u/9bkc5I70CggkY3jtNLtDMbMBTwcMP61ABsvx+5y2gGD
    zE6VZ9DPcHVg/Eup6WSBlQO3HQKuFVz7vXSMuaidG7A+fpkU71SjDpB4M6hdvWnS
    +L9XBQ1GtQe0lSM73s4mld/IvB1giwPN1bOheQ9koYcQjj+B8PWyt2gIUwctxyvA
    7bC+KtCQT4RJPsQHbHx569CDkyIi3dNt0rTjCo5bOeUKrJF7eA3YktYdTJefZ+Rf
    00dbRZMslrg3dW9VWECfC0xC/kn+heStJ7WqJJKqYWo4apm6IiKPZxlwIcVscF0=
    =xrPk
    -----END PGP SIGNATURE-----

# Notes

* On the advice of my lawyer, I'm currently offering only a specific version of
  the DPL. I probably will offer licenses under subsequent versions in the
  future, but I'd prefer to see how the DPL evolves and whether or not the
  license stewards behind it prove trustworthy before committing to doing so.

* The language "all technology companies I control" is there to avoid any
  complications with non-technology companies that I may control in the future,
  e.g. family real-estate holding companies, and the non-profit caving group
  I'm a part of. To my knowledge, I only control one company as of writing, the
  numbered company I do all my consulting through; I consider that company a
  "technology company", and thus the above offer applies to it.

* Equally, if by some stroke of luck I do end up in control of any other
  technology companies - maybe Bill Gate's blockchain smart-contract will
  mysteriously gives me control of Microsoft - then the above offer will apply.

--
https://petertodd.org 'peter'[:-1]@petertodd.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161013/ecf32a56/attachment.html>
-------------- next part --------------
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From sergio.d.lerner at gmail.com  Fri Oct 14 10:38:07 2016
From: sergio.d.lerner at gmail.com (Sergio Demian Lerner)
Date: Fri, 14 Oct 2016 07:38:07 -0300
Subject: [bitcoin-dev] DPL is not only not enough,
 but brings unfounded confidence to Bitcoin users
Message-ID: <CAKzdR-oaqUicPhCjfbyX92odVs9LOzvhUOY6nyd9K2RdC_9b_g@mail.gmail.com>

I read the DPL v1.1 and I find it dangerous for Bitcoin users. Current
users may be confident they are protected but in fact they are not, as the
future generations of users can be attacked, making Bitcoin technology
fully proprietary and less valuable.

If you read the DPL v1.1 you will see that companies that join DPL can
enforce their patents against anyone who has chosen not to join the DPL.
(http://defensivepatentlicense.org/content/defensive-patent-license)

So basically most users of Bitcoin could be currently under threat of being
sued by Bitcoin companies and individuals that joined DPL in the same way
they might be under threat by the remaining companies. And even if they
joined DPL, they may be asked to pay royalties for the use of the
inventions prior joining DPL.

DPL changes nothing for most individuals that cannot and will not hire
patent attorneys to advise them on what the DPL benefits are and what
rights they are resigning. Remember that patten attorneys fees may be
prohibitive for individuals in under-developed countries.

Also DPL is revocable by the signers (with only a 180-day notice), so if
Bitcoin Core ends up using ANY DPL covered patent, the company owning the
patent can later force all new Bitcoin users to pay royalties.

Because Bitcoin user base grows all the time with new individuals, the sole
existence of DPL licensed patents in Bitcoin represents a danger to Bitcoin
future almost the same as the existence of non-DPL license patents.

If you're publishing all your ideas and code (public disclosure), you
cannot later go and file a patent in most of the world except the US, where
you have a 1 year grace period. So we need to do something specific to
prevent the publishers filing a US patent.
What we need much more than DPL, we need that every BIP and proposal to the
Bitcoin mailing list contains a note that grants all Bitcoin users a
worldwide, royalty-free, no-charge, non-exclusive, irrevocable license for
the content of the e-mail or BIP.

I'm not a lawyer and this is not an advise of any kind. Please check
yourself the DPL v1.1 and get your own idea. I'm speaking on behalf of
myself, and not any company.
(http://defensivepatentlicense.org/content/defensive-patent-license)

Best regards,
 Sergio.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161014/095eb988/attachment.html>

From pete at petertodd.org  Fri Oct 14 10:57:57 2016
From: pete at petertodd.org (Peter Todd)
Date: Fri, 14 Oct 2016 06:57:57 -0400
Subject: [bitcoin-dev] DPL is not only not enough,
 but brings unfounded confidence to Bitcoin users
In-Reply-To: <CAKzdR-oaqUicPhCjfbyX92odVs9LOzvhUOY6nyd9K2RdC_9b_g@mail.gmail.com>
References: <CAKzdR-oaqUicPhCjfbyX92odVs9LOzvhUOY6nyd9K2RdC_9b_g@mail.gmail.com>
Message-ID: <20161014105757.GA8049@fedora-21-dvm>

On Fri, Oct 14, 2016 at 07:38:07AM -0300, Sergio Demian Lerner via bitcoin-dev wrote:
> I read the DPL v1.1 and I find it dangerous for Bitcoin users. Current
> users may be confident they are protected but in fact they are not, as the
> future generations of users can be attacked, making Bitcoin technology
> fully proprietary and less valuable.

Glad to hear you're taking a conservative approach.

So I assume Rootstock is going to do something stronger then, like
Blockstream's DPL + binding patent pledge to only use patents defensively?

    https://www.blockstream.com/about/patent_pledge/

Because if not, the DPL is still better than the status quo.

> If you read the DPL v1.1 you will see that companies that join DPL can
> enforce their patents against anyone who has chosen not to join the DPL.
> (http://defensivepatentlicense.org/content/defensive-patent-license)
> 
> So basically most users of Bitcoin could be currently under threat of being
> sued by Bitcoin companies and individuals that joined DPL in the same way
> they might be under threat by the remaining companies. And even if they
> joined DPL, they may be asked to pay royalties for the use of the
> inventions prior joining DPL.
> 
> DPL changes nothing for most individuals that cannot and will not hire
> patent attorneys to advise them on what the DPL benefits are and what
> rights they are resigning. Remember that patten attorneys fees may be
> prohibitive for individuals in under-developed countries.
> 
> Also DPL is revocable by the signers (with only a 180-day notice), so if
> Bitcoin Core ends up using ANY DPL covered patent, the company owning the
> patent can later force all new Bitcoin users to pay royalties.

Indeed. However, you're also free to adopt the DPL irrevocably by additionally
stating that you will never invoke that 180-day notice provision (or more
humorously, make it a 100 year notice period to ensure any patents expire!).

If you're concerned about this problem, I'd suggest that Rootstock do exactly
that.

> Because Bitcoin user base grows all the time with new individuals, the sole
> existence of DPL licensed patents in Bitcoin represents a danger to Bitcoin
> future almost the same as the existence of non-DPL license patents.

To be clear, modulo the revocability provision, it's a danger mainly to those
who are unwilling to adopt the DPL themselves, perhaps because they support
software patents.

> If you're publishing all your ideas and code (public disclosure), you
> cannot later go and file a patent in most of the world except the US, where
> you have a 1 year grace period. So we need to do something specific to
> prevent the publishers filing a US patent.

Again, lets remember that you personally proposed a BIP[1] that had the effect
of aiding your ASICBOOST patent[2] without disclosing that fact in your BIP nor
your pull-req[3]. The simple fact is we can't rely solely on voluntary
disclosure - your own behavior is a perfect example of why not.

[1]: BIP: https://github.com/BlockheaderNonce2/bitcoin/wiki
[2]: ASICBOOST PATENT https://www.google.com/patents/WO2015077378A1?cl=en
[3]: Extra nonce pull request: https://github.com/bitcoin/bitcoin/pull/5102

> What we need much more than DPL, we need that every BIP and proposal to the
> Bitcoin mailing list contains a note that grants all Bitcoin users a
> worldwide, royalty-free, no-charge, non-exclusive, irrevocable license for
> the content of the e-mail or BIP.

A serious problem here is the definition of "Bitcoin users". Does Bitcoin
Classic count? Bitcoin Unlimited? What if Bitcoin forks?

Better to grant _everyone_ a irrevocable license.


Along those lines, it'd be reasonable to consider changing the Bitcoin Core
license to something like an Apache2/LGPL3 dual license to ensure the copyright
license also has anti-patent protections.

-- 
https://petertodd.org 'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161014/2ecedac8/attachment.sig>

From pete at petertodd.org  Fri Oct 14 12:31:57 2016
From: pete at petertodd.org (Peter Todd)
Date: Fri, 14 Oct 2016 08:31:57 -0400
Subject: [bitcoin-dev] DPL is not only not enough,
 but brings unfounded confidence to Bitcoin users
In-Reply-To: <CAD438HswfYG6MZ_4cWVNgCL8HwKWhMs+JvhVUFCnDu0+Hu-D-g@mail.gmail.com>
References: <CAKzdR-oaqUicPhCjfbyX92odVs9LOzvhUOY6nyd9K2RdC_9b_g@mail.gmail.com>
	<20161014105757.GA8049@fedora-21-dvm>
	<CAD438HswfYG6MZ_4cWVNgCL8HwKWhMs+JvhVUFCnDu0+Hu-D-g@mail.gmail.com>
Message-ID: <20161014123157.GB8499@fedora-21-dvm>

On Fri, Oct 14, 2016 at 04:51:01AM -0700, Daniel Robinson wrote:
> >
> > Because if not, the DPL is still better than the status quo.
> 
> 
> Agreed. Also worth noting that it has a potential advantage over unilateral
> patent disarmament, analogous to the advantage of copyleft licenses over
> MIT/BSD: it provides an incentive (at least a theoretical one) for other
> companies to adopt it too.

Agreed. That's also one of the reasons (lesser) reasons why I didn't adopt a
patent pledge like blockstream has done. Though frankly the main reason is I'm
unlikely to be able to afford to get any patents anytime soon anyway, so it's
all symbolic and I'd rather spend as little as possible on lawyers. :) Also, my
standard contract that I use with clients prohibits me from getting patents on
work I do (and imposes financial penalties on clients who in turn try to apply
for patents on work derived from mine).

> As many people have proposed, the best option, though one that would
> require a lot of work, might be a dedicated Bitcoin-related defensive
> patent pool?similar to Linux's Open Invention Network?that could
> strategically deploy patent licenses to incentivize cooperation and punish
> aggressors.

Agreed.

> Along those lines, it'd be reasonable to consider changing the Bitcoin
> > Core license to something like an Apache2/LGPL3 dual license to ensure the
> > copyright license also has anti-patent protections.
> 
> 
> I think Apache 2.0 would be a great license for Bitcoin Core. It not only
> contains an explicit patent license grant (rather than MIT's implicit one),
> but terminates that license if the licensee asserts a claim alleging that
> the covered work infringes a patent. That might be an effective deterrent
> against bringing patent claims based on alleged infringement in Bitcoin
> Core.

Indeed. For a codebase that is in large part both a reference implementation
and the very definition of the Bitcoin protocol, we do want a permissive
license to ensure that commercial users are able to use the Bitcoin protocol.
However there is no reason to extend that permissivity to allowing others to
attempt to restrict others' rights to use the Bitcoin protocol via patents.

> (I'm not sure I see a good reason to dual-license under the LGPL3,
> but am curious to hear more.)

Ah, actually I think I misremembered: it'd be Apache2.0/LGPL_v2_ where a dual
license would make sense; Apache2.0 is compatibile with (L)GPL3:

    http://www.dwheeler.com/essays/floss-license-slide.html
    https://www.apache.org/licenses/GPL-compatibility

(L)GPLv2 doesn't have the patent protections that (L)GPLv3 does, so my
suggestion is wrong; Apache2.0 by itself is perfectly good.

> It would probably be feasible to upgrade to the Apache license for new
> releases and contributions (leaving already-existing code and previous
> releases under the MIT license?so basically a copyright "soft-fork"). Has
> this been discussed before? Are there any obstacles or objections?

Yup, that'd be perfectly possible to do. Basically new contributions would be
licensed under the new, MIT-compatible, licenses. I did that myself with
python-bitcoinlib, as part of the codebase was licensed MIT, and part LGPLv2 or
later; to comply with the latter I changed the license for all new work to
LGPLv3 or later. Interestingly, this has lead to the Bitcoin Core unit tests
using an older version of python-bitcoinlib; kudo's goes to Suhas Daftuar for
dilligently respecting the new license.

-- 
https://petertodd.org 'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161014/079c7104/attachment.sig>

From danrobinson010 at gmail.com  Fri Oct 14 11:51:01 2016
From: danrobinson010 at gmail.com (Daniel Robinson)
Date: Fri, 14 Oct 2016 04:51:01 -0700
Subject: [bitcoin-dev] DPL is not only not enough,
 but brings unfounded confidence to Bitcoin users
In-Reply-To: <20161014105757.GA8049@fedora-21-dvm>
References: <CAKzdR-oaqUicPhCjfbyX92odVs9LOzvhUOY6nyd9K2RdC_9b_g@mail.gmail.com>
	<20161014105757.GA8049@fedora-21-dvm>
Message-ID: <CAD438HswfYG6MZ_4cWVNgCL8HwKWhMs+JvhVUFCnDu0+Hu-D-g@mail.gmail.com>

>
> Because if not, the DPL is still better than the status quo.


Agreed. Also worth noting that it has a potential advantage over unilateral
patent disarmament, analogous to the advantage of copyleft licenses over
MIT/BSD: it provides an incentive (at least a theoretical one) for other
companies to adopt it too.

As many people have proposed, the best option, though one that would
require a lot of work, might be a dedicated Bitcoin-related defensive
patent pool?similar to Linux's Open Invention Network?that could
strategically deploy patent licenses to incentivize cooperation and punish
aggressors.

Along those lines, it'd be reasonable to consider changing the Bitcoin
> Core license to something like an Apache2/LGPL3 dual license to ensure the
> copyright license also has anti-patent protections.


I think Apache 2.0 would be a great license for Bitcoin Core. It not only
contains an explicit patent license grant (rather than MIT's implicit one),
but terminates that license if the licensee asserts a claim alleging that
the covered work infringes a patent. That might be an effective deterrent
against bringing patent claims based on alleged infringement in Bitcoin
Core. (I'm not sure I see a good reason to dual-license under the LGPL3,
but am curious to hear more.)

It would probably be feasible to upgrade to the Apache license for new
releases and contributions (leaving already-existing code and previous
releases under the MIT license?so basically a copyright "soft-fork"). Has
this been discussed before? Are there any obstacles or objections?

(These are my personal opinions, do not necessarily reflect the views of
any company, and are definitely not legal advice.)


On Fri, Oct 14, 2016 at 3:58 AM Peter Todd via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Fri, Oct 14, 2016 at 07:38:07AM -0300, Sergio Demian Lerner via
> bitcoin-dev wrote:
> > I read the DPL v1.1 and I find it dangerous for Bitcoin users. Current
> > users may be confident they are protected but in fact they are not, as
> the
> > future generations of users can be attacked, making Bitcoin technology
> > fully proprietary and less valuable.
>
> Glad to hear you're taking a conservative approach.
>
> So I assume Rootstock is going to do something stronger then, like
> Blockstream's DPL + binding patent pledge to only use patents defensively?
>
>     https://www.blockstream.com/about/patent_pledge/
>
> Because if not, the DPL is still better than the status quo.
>
> > If you read the DPL v1.1 you will see that companies that join DPL can
> > enforce their patents against anyone who has chosen not to join the DPL.
> > (http://defensivepatentlicense.org/content/defensive-patent-license)
> >
> > So basically most users of Bitcoin could be currently under threat of
> being
> > sued by Bitcoin companies and individuals that joined DPL in the same way
> > they might be under threat by the remaining companies. And even if they
> > joined DPL, they may be asked to pay royalties for the use of the
> > inventions prior joining DPL.
> >
> > DPL changes nothing for most individuals that cannot and will not hire
> > patent attorneys to advise them on what the DPL benefits are and what
> > rights they are resigning. Remember that patten attorneys fees may be
> > prohibitive for individuals in under-developed countries.
> >
> > Also DPL is revocable by the signers (with only a 180-day notice), so if
> > Bitcoin Core ends up using ANY DPL covered patent, the company owning the
> > patent can later force all new Bitcoin users to pay royalties.
>
> Indeed. However, you're also free to adopt the DPL irrevocably by
> additionally
> stating that you will never invoke that 180-day notice provision (or more
> humorously, make it a 100 year notice period to ensure any patents
> expire!).
>
> If you're concerned about this problem, I'd suggest that Rootstock do
> exactly
> that.
>
> > Because Bitcoin user base grows all the time with new individuals, the
> sole
> > existence of DPL licensed patents in Bitcoin represents a danger to
> Bitcoin
> > future almost the same as the existence of non-DPL license patents.
>
> To be clear, modulo the revocability provision, it's a danger mainly to
> those
> who are unwilling to adopt the DPL themselves, perhaps because they support
> software patents.
>
> > If you're publishing all your ideas and code (public disclosure), you
> > cannot later go and file a patent in most of the world except the US,
> where
> > you have a 1 year grace period. So we need to do something specific to
> > prevent the publishers filing a US patent.
>
> Again, lets remember that you personally proposed a BIP[1] that had the
> effect
> of aiding your ASICBOOST patent[2] without disclosing that fact in your
> BIP nor
> your pull-req[3]. The simple fact is we can't rely solely on voluntary
> disclosure - your own behavior is a perfect example of why not.
>
> [1]: BIP: https://github.com/BlockheaderNonce2/bitcoin/wiki
> [2]: ASICBOOST PATENT https://www.google.com/patents/WO2015077378A1?cl=en
> [3]: Extra nonce pull request: https://github.com/bitcoin/bit
> coin/pull/5102
>
> > What we need much more than DPL, we need that every BIP and proposal to
> the
> > Bitcoin mailing list contains a note that grants all Bitcoin users a
> > worldwide, royalty-free, no-charge, non-exclusive, irrevocable license
> for
> > the content of the e-mail or BIP.
>
> A serious problem here is the definition of "Bitcoin users". Does Bitcoin
> Classic count? Bitcoin Unlimited? What if Bitcoin forks?
>
> Better to grant _everyone_ a irrevocable license.
>
>
> Along those lines, it'd be reasonable to consider changing the Bitcoin Core
> license to something like an Apache2/LGPL3 dual license to ensure the
> copyright
> license also has anti-patent protections.
>
> --
> https://petertodd.org 'peter'[:-1]@petertodd.org
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161014/df3faf83/attachment-0001.html>

From sergio.d.lerner at gmail.com  Fri Oct 14 18:10:45 2016
From: sergio.d.lerner at gmail.com (Sergio Demian Lerner)
Date: Fri, 14 Oct 2016 15:10:45 -0300
Subject: [bitcoin-dev] DPL is not only not enough,
 but brings unfounded confidence to Bitcoin users
In-Reply-To: <20161014105757.GA8049@fedora-21-dvm>
References: <CAKzdR-oaqUicPhCjfbyX92odVs9LOzvhUOY6nyd9K2RdC_9b_g@mail.gmail.com>
	<20161014105757.GA8049@fedora-21-dvm>
Message-ID: <CAKzdR-pp0K-kqHWBP6A_+Ze0x3Ye5c94M+gz+Tue1Q-v4R5hog@mail.gmail.com>

Oh God... here we go again..

>
> Again, lets remember that you personally proposed a BIP[1] that had the
> effect
> of aiding your ASICBOOST patent[2] without disclosing that fact in your
> BIP nor
> your pull-req[3].
>
> This is false. The first sentence of the BIP states: "There are incentives
for miners to find cheap, non-standard ways to generate new work which are
not in the best interest of the protocol".

The BIP actually PROTECTS the network from stealth Shared-Nonce mining and
the fact you rejected it made the Bitcoin network LESS secure because now
we just don't know at what extent it is in use.

Shared-nonce mining can be done with or without that BIP/pull-req.

We didn't disclose more in the BIP because it was not clear if shared-nonce
mining (the fact that Bitcoin had a design flaw) would have a negative
affect on Bitcoin price.

ASICBoost patent may be a patent that protects Bitcoiners from mining
centralization: ASICBoost is the only company that at this point showed
interest in licensing the technology. But I do not control ASICBoost nor
the patent so I cannot do anything about it.

I propose we as a community do a crowdfund to try to license it from that
company (or any other that wants to put theirs in the deal) and put all in
public domain.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161014/e46d79fe/attachment.html>

From nickodell at gmail.com  Fri Oct 14 19:01:13 2016
From: nickodell at gmail.com (Nick ODell)
Date: Fri, 14 Oct 2016 13:01:13 -0600
Subject: [bitcoin-dev] DPL is not only not enough,
 but brings unfounded confidence to Bitcoin users
In-Reply-To: <20161014105757.GA8049@fedora-21-dvm>
References: <CAKzdR-oaqUicPhCjfbyX92odVs9LOzvhUOY6nyd9K2RdC_9b_g@mail.gmail.com>
	<20161014105757.GA8049@fedora-21-dvm>
Message-ID: <CANN4kmefhJ+t9--JV+g1aZgX_wyw+hKqAeBm6=UOUBROVS7VpA@mail.gmail.com>

Pledging to not use patents offensively defeats the point of owning patents.
The point of owning a patent is so that you can use it offensively, either to
prevent competition, or get licensing fees.

Obtaining a patent for defense doesn't make sense. The litigants you need to
worry about do not produce or make anything. Their 'product' is patent lawsuits.

Unless you have a patent on using a mail-merge program to sue people, your
defensive patents are useless in that situation.

On Fri, Oct 14, 2016 at 4:57 AM, Peter Todd via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On Fri, Oct 14, 2016 at 07:38:07AM -0300, Sergio Demian Lerner via bitcoin-dev wrote:
>> I read the DPL v1.1 and I find it dangerous for Bitcoin users. Current
>> users may be confident they are protected but in fact they are not, as the
>> future generations of users can be attacked, making Bitcoin technology
>> fully proprietary and less valuable.
>
> Glad to hear you're taking a conservative approach.
>
> So I assume Rootstock is going to do something stronger then, like
> Blockstream's DPL + binding patent pledge to only use patents defensively?
>
>     https://www.blockstream.com/about/patent_pledge/
>
> Because if not, the DPL is still better than the status quo.
>
>> If you read the DPL v1.1 you will see that companies that join DPL can
>> enforce their patents against anyone who has chosen not to join the DPL.
>> (http://defensivepatentlicense.org/content/defensive-patent-license)
>>
>> So basically most users of Bitcoin could be currently under threat of being
>> sued by Bitcoin companies and individuals that joined DPL in the same way
>> they might be under threat by the remaining companies. And even if they
>> joined DPL, they may be asked to pay royalties for the use of the
>> inventions prior joining DPL.
>>
>> DPL changes nothing for most individuals that cannot and will not hire
>> patent attorneys to advise them on what the DPL benefits are and what
>> rights they are resigning. Remember that patten attorneys fees may be
>> prohibitive for individuals in under-developed countries.
>>
>> Also DPL is revocable by the signers (with only a 180-day notice), so if
>> Bitcoin Core ends up using ANY DPL covered patent, the company owning the
>> patent can later force all new Bitcoin users to pay royalties.
>
> Indeed. However, you're also free to adopt the DPL irrevocably by additionally
> stating that you will never invoke that 180-day notice provision (or more
> humorously, make it a 100 year notice period to ensure any patents expire!).
>
> If you're concerned about this problem, I'd suggest that Rootstock do exactly
> that.
>
>> Because Bitcoin user base grows all the time with new individuals, the sole
>> existence of DPL licensed patents in Bitcoin represents a danger to Bitcoin
>> future almost the same as the existence of non-DPL license patents.
>
> To be clear, modulo the revocability provision, it's a danger mainly to those
> who are unwilling to adopt the DPL themselves, perhaps because they support
> software patents.
>
>> If you're publishing all your ideas and code (public disclosure), you
>> cannot later go and file a patent in most of the world except the US, where
>> you have a 1 year grace period. So we need to do something specific to
>> prevent the publishers filing a US patent.
>
> Again, lets remember that you personally proposed a BIP[1] that had the effect
> of aiding your ASICBOOST patent[2] without disclosing that fact in your BIP nor
> your pull-req[3]. The simple fact is we can't rely solely on voluntary
> disclosure - your own behavior is a perfect example of why not.
>
> [1]: BIP: https://github.com/BlockheaderNonce2/bitcoin/wiki
> [2]: ASICBOOST PATENT https://www.google.com/patents/WO2015077378A1?cl=en
> [3]: Extra nonce pull request: https://github.com/bitcoin/bitcoin/pull/5102
>
>> What we need much more than DPL, we need that every BIP and proposal to the
>> Bitcoin mailing list contains a note that grants all Bitcoin users a
>> worldwide, royalty-free, no-charge, non-exclusive, irrevocable license for
>> the content of the e-mail or BIP.
>
> A serious problem here is the definition of "Bitcoin users". Does Bitcoin
> Classic count? Bitcoin Unlimited? What if Bitcoin forks?
>
> Better to grant _everyone_ a irrevocable license.
>
>
> Along those lines, it'd be reasonable to consider changing the Bitcoin Core
> license to something like an Apache2/LGPL3 dual license to ensure the copyright
> license also has anti-patent protections.
>
> --
> https://petertodd.org 'peter'[:-1]@petertodd.org
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

From danrobinson010 at gmail.com  Fri Oct 14 21:07:01 2016
From: danrobinson010 at gmail.com (Daniel Robinson)
Date: Fri, 14 Oct 2016 21:07:01 +0000
Subject: [bitcoin-dev] DPL is not only not enough,
 but brings unfounded confidence to Bitcoin users
In-Reply-To: <CANN4kmefhJ+t9--JV+g1aZgX_wyw+hKqAeBm6=UOUBROVS7VpA@mail.gmail.com>
References: <CAKzdR-oaqUicPhCjfbyX92odVs9LOzvhUOY6nyd9K2RdC_9b_g@mail.gmail.com>
	<20161014105757.GA8049@fedora-21-dvm>
	<CANN4kmefhJ+t9--JV+g1aZgX_wyw+hKqAeBm6=UOUBROVS7VpA@mail.gmail.com>
Message-ID: <CAD438HtXOJ0QRhckORLfXX13CB=MGq1x5qakMiDhhNKipWDCtg@mail.gmail.com>

First, non-practicing entities are definitely a problem, but they're far
from the only companies involved in software patent litigation. As you say
yourself, one reason companies obtain patents is to "prevent
competition"?meaning they produce a competing product. Look at the
billion-dollar lawsuits in the smartphone patent wars.

(Unless you're referring to "patent privateers" that assert claims and are
only indirectly sponsored and controlled by real tech companies. I don't
think the Defensive Patent License directly addresses that problem?Section
7.1 defines an "affiliate" relatively narrowly?although the Apache 2.0
license arguably does, with its broad definition of "Legal Entity." I don't
profess to know anything about the reasoning behind the DPL's wording, and
I may be missing something; maybe a future version of the DPL will close
that loophole if it becomes an actual problem.)

Second, as several people have noted on this list, patent applications
unfortunately seem to be more effective than defensive publication at
getting prior art under the noses of the patent examiners. So obtaining a
patent for defensive purposes makes it more difficult for others to obtain
patents on the same subject matter.

(Usual disclaimers apply. Nothing you read on bitcoin-dev is legal advice;
don't take legal advice from mailing lists; come on)

On Fri, Oct 14, 2016 at 12:01 PM Nick ODell via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

Pledging to not use patents offensively defeats the point of owning patents.
The point of owning a patent is so that you can use it offensively, either
to
prevent competition, or get licensing fees.

Obtaining a patent for defense doesn't make sense. The litigants you need to
worry about do not produce or make anything. Their 'product' is patent
lawsuits.

Unless you have a patent on using a mail-merge program to sue people, your
defensive patents are useless in that situation.

On Fri, Oct 14, 2016 at 4:57 AM, Peter Todd via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On Fri, Oct 14, 2016 at 07:38:07AM -0300, Sergio Demian Lerner via
bitcoin-dev wrote:
>> I read the DPL v1.1 and I find it dangerous for Bitcoin users. Current
>> users may be confident they are protected but in fact they are not, as
the
>> future generations of users can be attacked, making Bitcoin technology
>> fully proprietary and less valuable.
>
> Glad to hear you're taking a conservative approach.
>
> So I assume Rootstock is going to do something stronger then, like
> Blockstream's DPL + binding patent pledge to only use patents defensively?
>
>     https://www.blockstream.com/about/patent_pledge/
>
> Because if not, the DPL is still better than the status quo.
>
>> If you read the DPL v1.1 you will see that companies that join DPL can
>> enforce their patents against anyone who has chosen not to join the DPL.
>> (http://defensivepatentlicense.org/content/defensive-patent-license)
>>
>> So basically most users of Bitcoin could be currently under threat of
being
>> sued by Bitcoin companies and individuals that joined DPL in the same way
>> they might be under threat by the remaining companies. And even if they
>> joined DPL, they may be asked to pay royalties for the use of the
>> inventions prior joining DPL.
>>
>> DPL changes nothing for most individuals that cannot and will not hire
>> patent attorneys to advise them on what the DPL benefits are and what
>> rights they are resigning. Remember that patten attorneys fees may be
>> prohibitive for individuals in under-developed countries.
>>
>> Also DPL is revocable by the signers (with only a 180-day notice), so if
>> Bitcoin Core ends up using ANY DPL covered patent, the company owning the
>> patent can later force all new Bitcoin users to pay royalties.
>
> Indeed. However, you're also free to adopt the DPL irrevocably by
additionally
> stating that you will never invoke that 180-day notice provision (or more
> humorously, make it a 100 year notice period to ensure any patents
expire!).
>
> If you're concerned about this problem, I'd suggest that Rootstock do
exactly
> that.
>
>> Because Bitcoin user base grows all the time with new individuals, the
sole
>> existence of DPL licensed patents in Bitcoin represents a danger to
Bitcoin
>> future almost the same as the existence of non-DPL license patents.
>
> To be clear, modulo the revocability provision, it's a danger mainly to
those
> who are unwilling to adopt the DPL themselves, perhaps because they
support
> software patents.
>
>> If you're publishing all your ideas and code (public disclosure), you
>> cannot later go and file a patent in most of the world except the US,
where
>> you have a 1 year grace period. So we need to do something specific to
>> prevent the publishers filing a US patent.
>
> Again, lets remember that you personally proposed a BIP[1] that had the
effect
> of aiding your ASICBOOST patent[2] without disclosing that fact in your
BIP nor
> your pull-req[3]. The simple fact is we can't rely solely on voluntary
> disclosure - your own behavior is a perfect example of why not.
>
> [1]: BIP: https://github.com/BlockheaderNonce2/bitcoin/wiki
> [2]: ASICBOOST PATENT https://www.google.com/patents/WO2015077378A1?cl=en
> [3]: Extra nonce pull request:
https://github.com/bitcoin/bitcoin/pull/5102
>
>> What we need much more than DPL, we need that every BIP and proposal to
the
>> Bitcoin mailing list contains a note that grants all Bitcoin users a
>> worldwide, royalty-free, no-charge, non-exclusive, irrevocable license
for
>> the content of the e-mail or BIP.
>
> A serious problem here is the definition of "Bitcoin users". Does Bitcoin
> Classic count? Bitcoin Unlimited? What if Bitcoin forks?
>
> Better to grant _everyone_ a irrevocable license.
>
>
> Along those lines, it'd be reasonable to consider changing the Bitcoin
Core
> license to something like an Apache2/LGPL3 dual license to ensure the
copyright
> license also has anti-patent protections.
>
> --
> https://petertodd.org 'peter'[:-1]@petertodd.org
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161014/7830fb7d/attachment-0001.html>

From tomz at freedommail.ch  Sat Oct 15 10:01:32 2016
From: tomz at freedommail.ch (Tom Zander)
Date: Sat, 15 Oct 2016 12:01:32 +0200
Subject: [bitcoin-dev] DPL is not only not enough,
	but brings unfounded confidence to Bitcoin users
In-Reply-To: <CAD438HswfYG6MZ_4cWVNgCL8HwKWhMs+JvhVUFCnDu0+Hu-D-g@mail.gmail.com>
References: <CAKzdR-oaqUicPhCjfbyX92odVs9LOzvhUOY6nyd9K2RdC_9b_g@mail.gmail.com>
	<20161014105757.GA8049@fedora-21-dvm>
	<CAD438HswfYG6MZ_4cWVNgCL8HwKWhMs+JvhVUFCnDu0+Hu-D-g@mail.gmail.com>
Message-ID: <1481070.m2uoBWnWHP@strawberry>

On Friday, 14 October 2016 04:51:01 CEST Daniel Robinson via bitcoin-dev 
wrote:
> > Because if not, the DPL is still better than the status quo.
> 
> Agreed. Also worth noting that it has a potential advantage over
> unilateral patent disarmament, analogous to the advantage of copyleft
> licenses over MIT/BSD: it provides an incentive (at least a theoretical
> one) for other companies to adopt it too.

This is a very important point and a huge step forward in my opinion.

The downside of MIT/BSD licenses is that companies can take and not give 
back. It doesn't build a community and commonly-shared property. Copyleft 
allows people to take and embrace, but if they extend they have to give 
back. Which is fair, you build it on their stuff...

-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From marco.falke at tum.de  Sat Oct 15 10:25:43 2016
From: marco.falke at tum.de (Marco Falke)
Date: Sat, 15 Oct 2016 12:25:43 +0200
Subject: [bitcoin-dev] BIP 2 revival and rework
In-Reply-To: <2024168.qgaqMetGW1@kiwi>
References: <201609240636.01968.luke@dashjr.org> <2024168.qgaqMetGW1@kiwi>
Message-ID: <CAK51vgAeBBd14enaDdhdL+sC2QmYJrwPrFvkRCoUkbvbOAFViA@mail.gmail.com>

On Sat, Sep 24, 2016 at 11:41 AM, Tom via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> I'd suggest saying that "Share alike" is required and "Attribution" is
> optional.

Please note there is no CC license that requires SA and at the same
time has BY as an option.

Generally, I think CC0 is best suited as license for BIPs. If authors
are scared that they won't get proper attribution, they can choose
MIT/BSD or CC-BY. Other than that I don't think that more restrictive
licenses are suitable for BIPs. The BIP repo seems like the wrong
place to promote Open Access (e.g. by choosing a CC-BY-SA license).
BIP 2 allows such licenses, but does not recommend them, which is
fine.

I think that BIP 2 in its current form (
https://github.com/bitcoin/bips/blob/master/bip-0002.mediawiki
@6e47447b ) looks good and addressed the feedback which was
accumulated last year. If there are no objections I'd suggest to move
forward with BIP 2 in the next couple of days/weeks.

Marco

From tomz at freedommail.ch  Sat Oct 15 11:00:35 2016
From: tomz at freedommail.ch (Tom Zander)
Date: Sat, 15 Oct 2016 13:00:35 +0200
Subject: [bitcoin-dev] BIP 2 revival and rework
In-Reply-To: <CAK51vgAhpOFQRgnSxrNrP1JyhBZA3dr7mWKYKD15h0xgO6rR5A@mail.gmail.com>
References: <201609240636.01968.luke@dashjr.org> <2024168.qgaqMetGW1@kiwi>
	<CAK51vgAhpOFQRgnSxrNrP1JyhBZA3dr7mWKYKD15h0xgO6rR5A@mail.gmail.com>
Message-ID: <1574488.v0vhHDvJj4@strawberry>

On Saturday, 15 October 2016 12:11:02 CEST Marco Falke wrote:
> On Sat, Sep 24, 2016 at 11:41 AM, Tom via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > I'd suggest saying that "Share alike" is required and "Attribution" is
> > optional.
> 
> Please note there is no CC license that requires SA and at the same
> time has BY as an option.
> 
> Generally, I think CC0 is best suited as license for BIPs. If authors
> are scared that they won't get proper attribution, they can choose
> MIT/BSD or CC-BY.

My suggestion (sorry for not explaining it better) was that for BIPS to be a 
public domain (aka CC0) and a CC-BY option and nothing else.

I like you agree with that part, but I see you added two licenses.
Do you have a good reason to add MIT/BSD to that list? Otherwise I think we 
agree.
Using code-specific licenses (including the GPL) for documentation and 
specifically a specification is a really poor fit and doens't make much sense.

> Other than that I don't think that more restrictive
> licenses are suitable for BIPs. The BIP repo seems like the wrong
> place to promote Open Access (e.g. by choosing a CC-BY-SA license).
> BIP 2 allows such licenses, but does not recommend them, which is
> fine.
> 
> I think that BIP 2 in its current form (
> https://github.com/bitcoin/bips/blob/master/bip-0002.mediawiki
> @6e47447b ) 
Well, it has this sentence;

> This BIP is dual-licensed under the Open Publication License and
> BSD 2-clause license. 

Which is a bit odd in light of the initial email from Luke that suggested we 
drop the Open Publication License and we use the CC ones instead in addition 
to the public domain one.

Marco:
> looks good and addressed the feedback which was
> accumulated last year. If there are no objections I'd suggest to move
> forward with BIP 2 in the next couple of days/weeks.

Thats odd, you just stated you like the public domain (aka CC0) license, yet 
you encourage the BIP2 that states we can no longer use public domain for 
BIPs... Did you read it?
It says;
 ?Public domain is not universally recognised as a legitimate action, thus
  it is inadvisable.? [1]


Also;
This list has not seen a lot of traffic, if you want to make sure people keep 
using the BIP process, I think you need to reach out to the rest of the 
community and make sure this has been heard and discussed.
Moving forward the way it is now will likely deminish the importance of the 
BIP process.

I strongly suggest people make very clear any and all changes that are 
proposed and defend each of them with reasons why you want to change things.


1) if you write as a rationale "In some jurisdictions, public domain is not 
recognised as a legitimate legal action" then you can at least name those 
jurisdictions and explain how they *do* support things like GPL. Burden of 
proof is on the man who wants to change things.
It looks fishy when lawyers disagree. See the CC wikipedia page;
 "public domain: cc0 Freeing content globally without restrictions"

-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From marco.falke at tum.de  Sat Oct 15 12:12:09 2016
From: marco.falke at tum.de (Marco Falke)
Date: Sat, 15 Oct 2016 14:12:09 +0200
Subject: [bitcoin-dev] BIP 2 revival and rework
In-Reply-To: <1574488.v0vhHDvJj4@strawberry>
References: <201609240636.01968.luke@dashjr.org> <2024168.qgaqMetGW1@kiwi>
	<CAK51vgAhpOFQRgnSxrNrP1JyhBZA3dr7mWKYKD15h0xgO6rR5A@mail.gmail.com>
	<1574488.v0vhHDvJj4@strawberry>
Message-ID: <CAK51vgAyuW+832F7+O-ZB9pusp=si-u_gATgTJbyEXnrb08Xqg@mail.gmail.com>

On Sat, Oct 15, 2016 at 1:00 PM, Tom Zander via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> My suggestion (sorry for not explaining it better) was that for BIPS to be a
> public domain (aka CC0) and a CC-BY option and nothing else.

Indeed, we agree that BIPs should be licensed as permissive as
possible. Still, I wonder why you chose otherwise with BIP 134.
(Currently OPL and CC-BY-SA)

> I like you agree with that part, but I see you added two licenses.
> Do you have a good reason to add MIT/BSD to that list? Otherwise I think we
> agree.

Licenses that only require attribution are generally compatible with
each other. I don't think we should pick one and only promote/endorse
this one. Let's just leave the decision to the BIP author.


> Well, it has this sentence;
>
>> This BIP is dual-licensed under the Open Publication License and
>> BSD 2-clause license.
>
> Which is a bit odd in light of the initial email from Luke that suggested we
> drop the Open Publication License and we use the CC ones instead in addition
> to the public domain one.

I am pretty sure this is required to host the current text of BIP 2 in
the repo, as currently BIP 1 still applies and still requires for all
BIPs either OPL or PD, which is one of the reasons I think we should
move forward with BIP 2 or amending BIP 1.


> Marco:
>> looks good and addressed the feedback which was
>> accumulated last year. If there are no objections I'd suggest to move
>> forward with BIP 2 in the next couple of days/weeks.
>
> Thats odd, you just stated you like the public domain (aka CC0) license, yet
> you encourage the BIP2 that states we can no longer use public domain for
> BIPs... Did you read it?
> It says;
>  ?Public domain is not universally recognised as a legitimate action, thus
>   it is inadvisable.? [1]

BIP 2 does not forbid you to release your work under PD in
legislations where this is possible. None of the licenses mentioned in
BIP 2 is exclusive, so you can choose as many options as you like. One
of the goals of BIP 2 is to no longer allow PD as the only copyright
option.


>
> Also;
> This list has not seen a lot of traffic, if you want to make sure people keep
> using the BIP process, I think you need to reach out to the rest of the
> community and make sure this has been heard and discussed.
> Moving forward the way it is now will likely deminish the importance of the
> BIP process.
>
> I strongly suggest people make very clear any and all changes that are
> proposed and defend each of them with reasons why you want to change things.
>
>
> 1) if you write as a rationale "In some jurisdictions, public domain is not
> recognised as a legitimate legal action" then you can at least name those
> jurisdictions and explain how they *do* support things like GPL. Burden of
> proof is on the man who wants to change things.
> It looks fishy when lawyers disagree. See the CC wikipedia page;
>  "public domain: cc0 Freeing content globally without restrictions"

Luke is the BIP champion of BIP 2, so please cc him if you have
suggestions on how to improve the process of gathering community
consensus.

Marco

From luke at dashjr.org  Sat Oct 15 13:01:33 2016
From: luke at dashjr.org (Luke Dashjr)
Date: Sat, 15 Oct 2016 13:01:33 +0000
Subject: [bitcoin-dev] BIP 2: BIP process, revised (review please)
Message-ID: <201610151301.35687.luke@dashjr.org>

BIP 2 is currently believed to be a final draft of what will replace BIP 1 in 
specifying how the entire BIP process works. This Process BIP will require 
rough consensus from the Bitcoin-dev mailing list to become Active (see BIP 2 
for the procedure, which I intend to use for its own activation due to absence 
of a clear process defined in BIP 1).

Therefore, if you have any objections to the new BIP process as specified in 
BIP 2, please voice your concerns ASAP.

https://github.com/bitcoin/bips/blob/master/bip-0002.mediawiki

Thanks for your review,

Luke

From luke at dashjr.org  Sat Oct 15 13:01:38 2016
From: luke at dashjr.org (Luke Dashjr)
Date: Sat, 15 Oct 2016 13:01:38 +0000
Subject: [bitcoin-dev] BIP 2 revival and rework
In-Reply-To: <1574488.v0vhHDvJj4@strawberry>
References: <201609240636.01968.luke@dashjr.org>
	<CAK51vgAhpOFQRgnSxrNrP1JyhBZA3dr7mWKYKD15h0xgO6rR5A@mail.gmail.com>
	<1574488.v0vhHDvJj4@strawberry>
Message-ID: <201610151301.39134.luke@dashjr.org>

On Saturday, October 15, 2016 11:00:35 AM Tom Zander via bitcoin-dev wrote:
> My suggestion (sorry for not explaining it better) was that for BIPS to be
> a public domain (aka CC0) and a CC-BY option and nothing else.
> 
> I like you agree with that part, but I see you added two licenses.
> Do you have a good reason to add MIT/BSD to that list? Otherwise I think we
> agree.

BIPs often should include code.

> Well, it has this sentence;
> 
> > This BIP is dual-licensed under the Open Publication License and
> > BSD 2-clause license.
> 
> Which is a bit odd in light of the initial email from Luke that suggested
> we drop the Open Publication License and we use the CC ones instead in
> addition to the public domain one.

The "real" license in this case is the BSD 2-clause. However, BIP 1 only 
allows OPL and public domain, so BIP 2 is available under OPL as well so that 
it is acceptable before/until it activates also.

> Thats odd, you just stated you like the public domain (aka CC0) license,
> yet you encourage the BIP2 that states we can no longer use public domain
> for BIPs... Did you read it?

CC0 and public domain are two different things.

> This list has not seen a lot of traffic, if you want to make sure people
> keep using the BIP process, I think you need to reach out to the rest of
> the community and make sure this has been heard and discussed.
> Moving forward the way it is now will likely deminish the importance of the
> BIP process.

Yes, you're right. I'll post to Lightning-dev and libbitcoin's list about
BIP 2. If you're aware of any other Bitcoin development discussion groups, 
could you please bring BIP 2 to their attention so it gets wider review?

> 1) if you write as a rationale "In some jurisdictions, public domain is not
> recognised as a legitimate legal action" then you can at least name those
> jurisdictions and explain how they *do* support things like GPL. Burden of
> proof is on the man who wants to change things.

As I understand it, presently France and Germany do not recognise public 
domain as a possible status. GPL is merely a copyright license, so it should 
be valid anywhere copyright laws exist.

Luke

From tomz at freedommail.ch  Sat Oct 15 14:21:41 2016
From: tomz at freedommail.ch (Tom Zander)
Date: Sat, 15 Oct 2016 16:21:41 +0200
Subject: [bitcoin-dev] BIP 2 revival and rework
In-Reply-To: <CAK51vgAyuW+832F7+O-ZB9pusp=si-u_gATgTJbyEXnrb08Xqg@mail.gmail.com>
References: <201609240636.01968.luke@dashjr.org>
	<1574488.v0vhHDvJj4@strawberry>
	<CAK51vgAyuW+832F7+O-ZB9pusp=si-u_gATgTJbyEXnrb08Xqg@mail.gmail.com>
Message-ID: <1866359.UpcIIOnrOv@strawberry>

On Saturday, 15 October 2016 14:12:09 CEST Marco Falke wrote:
> On Sat, Oct 15, 2016 at 1:00 PM, Tom Zander via bitcoin-dev
> 
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > My suggestion (sorry for not explaining it better) was that for BIPS to
> > be a public domain (aka CC0) and a CC-BY option and nothing else.
> 
> Indeed, we agree that BIPs should be licensed as permissive as
> possible. Still, I wonder why you chose otherwise with BIP 134.
> (Currently OPL and CC-BY-SA)

OPL was the only allowed option apart from CC0.

I dual licensed it so future acceptance of the CC-BY-SA one may mean someone 
can just remove the OPL from the BIP and no futher action or permission is 
needed from all the authors.

> BIP 2 does not forbid you to release your work under PD in
> legislations where this is possible

It does, actually.

> One
> of the goals of BIP 2 is to no longer allow PD as the only copyright
> option.

That's odd as PD was never the only copyright option.

-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From marco.falke at tum.de  Sat Oct 15 15:02:30 2016
From: marco.falke at tum.de (Marco Falke)
Date: Sat, 15 Oct 2016 17:02:30 +0200
Subject: [bitcoin-dev] BIP 2 revival and rework
In-Reply-To: <1866359.UpcIIOnrOv@strawberry>
References: <201609240636.01968.luke@dashjr.org>
	<1574488.v0vhHDvJj4@strawberry>
	<CAK51vgAyuW+832F7+O-ZB9pusp=si-u_gATgTJbyEXnrb08Xqg@mail.gmail.com>
	<1866359.UpcIIOnrOv@strawberry>
Message-ID: <CAK51vgDRngpTEtnQpwCKN8Jznj2T-HSLEkXD4Z=JiNhV1BOONg@mail.gmail.com>

On Sat, Oct 15, 2016 at 4:21 PM, Tom Zander via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>> > My suggestion (sorry for not explaining it better) was that for BIPS to
>> > be a public domain (aka CC0) and a CC-BY option and nothing else.
>>
>> Indeed, we agree that BIPs should be licensed as permissive as
>> possible. Still, I wonder why you chose otherwise with BIP 134.
>> (Currently OPL and CC-BY-SA)
>
> OPL was the only allowed option apart from CC0.

I think you are misunderstanding what is allowed and what is required...

BIP1: "Each BIP must either be explicitly labelled as placed in the
public domain (see this BIP as an example) or licensed under the Open
Publication License"

So BIP1 *requires* PD or OPL but does not forbid other licenses. For
example, you are free to multi license OPL (and additionally: BSD,
MIT, CC0, ...)

BIP2: "Each new BIP must identify at least one acceptable license in
its preamble."

So BIP2 *requires* an acceptable license but does not forbid other
choices. For example, you are free to choose: BSD (and additionally:
PD, CC-BY-SA, WTFPL, BEER, ...)


>> BIP 2 does not forbid you to release your work under PD in
>> legislations where this is possible
>
> It does, actually.

Huh, I can't find it in the text I read. The text mentions "not
acceptable", but I don't read that as "forbidden".

>
>> One
>> of the goals of BIP 2 is to no longer allow PD as the only copyright
>> option.
>
> That's odd as PD was never the only copyright option.

Right. Though, up to now the majority of the BIP authors chose PD as
the only option.

Marco

From kanzure at gmail.com  Sat Oct 15 18:34:13 2016
From: kanzure at gmail.com (Bryan Bishop)
Date: Sat, 15 Oct 2016 13:34:13 -0500
Subject: [bitcoin-dev] Some transcripts from Scaling Bitcoin 2016
Message-ID: <CABaSBaxN5Whr0hczVXi3JMs9ckVbuY95sEMo_x-r7rkuEzWR=g@mail.gmail.com>

Previously:
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/011862.html

Here are some talks from Milan:
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/fungibility-overview/
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/joinmarket/
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/tumblebit/
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/mimblewimble/

http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/onion-routing-in-lightning/
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/flare-routing-in-lightning/
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/unlinkable-outsourced-channel-monitoring/
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/lightning/

http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/segwit-lessons-learned/
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/schnorr-signatures/
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/bip151-peer-encryption/
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/coin-selection/
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/covenants/
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/on-the-security-and-performance-of-proof-of-work-blockchains/
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/collective-signing/

http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/fast-difficulty-adjustment/
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/jute-braiding/
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/client-side-validation/
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/breaking-the-chain/

http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/day-1-group-summaries/
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/day-2-group-summaries/

These are not always exact transcripts because I am typing while I am
listening, thus there are mistakes including typos and listening
errors, so please keep this discrepancy in mind between what's said
and what's typed.

- Bryan
http://heybryan.org/
1 512 203 0507

From pieter.wuille at gmail.com  Sun Oct 16 14:31:55 2016
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Sun, 16 Oct 2016 16:31:55 +0200
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
Message-ID: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>

Hello all,

We're getting ready for Bitcoin Core's 0.13.1 release - the first one
to include segregated witness (BIP 141, 143, 144, 145) for Bitcoin
mainnet, after being extensively tested on testnet and in other
software. Following the BIP9 recommendation [1] to set the versionbits
start time a month in the future and discussion in the last IRC
meeting [2], I propose we set BIP 141's start time to November 15,
2016, 0:00 UTC (unix time 1479168000).

Note that this is just a lower bound on the time when the versionbits
signalling can begin. Activation on the network requires:
(1) This date to pass
(2) A full retarget window of 2016 blocks with 95% signalling the
version bit (bit 1 for BIP141)
(3) A fallow period consisting of another 2016 blocks.

  [1] https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki
  [2] http://www.erisian.com.au/meetbot/bitcoin-core-dev/2016/bitcoin-core-dev.2016-10-13-19.04.log.html

Cheers,

-- 
Pieter

From tomz at freedommail.ch  Sun Oct 16 14:56:36 2016
From: tomz at freedommail.ch (Tom Zander)
Date: Sun, 16 Oct 2016 16:56:36 +0200
Subject: [bitcoin-dev] BIP 2 revival and rework
In-Reply-To: <CAK51vgDRngpTEtnQpwCKN8Jznj2T-HSLEkXD4Z=JiNhV1BOONg@mail.gmail.com>
References: <201609240636.01968.luke@dashjr.org>
	<1866359.UpcIIOnrOv@strawberry>
	<CAK51vgDRngpTEtnQpwCKN8Jznj2T-HSLEkXD4Z=JiNhV1BOONg@mail.gmail.com>
Message-ID: <1564094.f9m6WVpBae@strawberry>

On Saturday, 15 October 2016 17:02:30 CEST Marco Falke wrote:
> >> BIP 2 does not forbid you to release your work under PD in
> >> legislations where this is possible
> > 
> > It does, actually.
> 
> Huh, I can't find it in the text I read. The text mentions "not
> acceptable", but I don't read that as "forbidden".

You suggest that a person can dual license something under both CC-BY-SA as 
well as under public domain.
That means you don't understand copyright,

See, all licenses are based on you having copyright. In contrast; public 
domain is not a license, it means a certain text does not have copyright. 
Public domain is the lack of copyright.

One text can not at the same time have copyright and not have copyright, 
making your assumption impossible.

Hence, with PD not explicitly being allowed, you can't use PD.

Personally I prefer copyleft licenses, so the lack of PD is fine with me. The 
lack of a good copyleft we can use in BIPs is what got me involved in this 
discussion in the first place.
-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From tomz at freedommail.ch  Sun Oct 16 14:58:26 2016
From: tomz at freedommail.ch (Tom Zander)
Date: Sun, 16 Oct 2016 16:58:26 +0200
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
Message-ID: <1782741.nelbyupFSb@strawberry>

The fallow period sounds waaaay to short. I suggest 2 months at minimum 
since anyone that wants to be safe needs to upgrade.

Also, please comment on why you won't use the much more safe and much 
smaller Flexible Transactions.

On Sunday, 16 October 2016 16:31:55 CEST Pieter Wuille via bitcoin-dev 
wrote:
> Hello all,
> 
> We're getting ready for Bitcoin Core's 0.13.1 release - the first one
> to include segregated witness (BIP 141, 143, 144, 145) for Bitcoin
> mainnet, after being extensively tested on testnet and in other
> software. Following the BIP9 recommendation [1] to set the versionbits
> start time a month in the future and discussion in the last IRC
> meeting [2], I propose we set BIP 141's start time to November 15,
> 2016, 0:00 UTC (unix time 1479168000).
> 
> Note that this is just a lower bound on the time when the versionbits
> signalling can begin. Activation on the network requires:
> (1) This date to pass
> (2) A full retarget window of 2016 blocks with 95% signalling the
> version bit (bit 1 for BIP141)
> (3) A fallow period consisting of another 2016 blocks.
> 
>   [1] https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki
>   [2]
> http://www.erisian.com.au/meetbot/bitcoin-core-dev/2016/bitcoin-core-dev.
> 2016-10-13-19.04.log.html
> 
> Cheers,


-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From belcher at riseup.net  Sun Oct 16 16:08:14 2016
From: belcher at riseup.net (Chris Belcher)
Date: Sun, 16 Oct 2016 17:08:14 +0100
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
Message-ID: <ce9180af-dc83-c79f-4134-941acb626dc5@riseup.net>

Hello,

Excellent news that segregated witness is nearing release for the mainnet.

I know I don't only speak for myself in saying that this has been
eagerly awaited for some time.

For the timing, I'd support segwit being usable on the network as soon
as is technically and safely possible.

We at JoinMarket are very interested in eventually using schnorr which
would allow signature aggregation and so reduce the cost of coinjoins.

Chris Belcher

On 16/10/16 15:31, Pieter Wuille via bitcoin-dev wrote:
> Hello all,
> 
> We're getting ready for Bitcoin Core's 0.13.1 release - the first one
> to include segregated witness (BIP 141, 143, 144, 145) for Bitcoin
> mainnet, after being extensively tested on testnet and in other
> software. Following the BIP9 recommendation [1] to set the versionbits
> start time a month in the future and discussion in the last IRC
> meeting [2], I propose we set BIP 141's start time to November 15,
> 2016, 0:00 UTC (unix time 1479168000).
> 
> Note that this is just a lower bound on the time when the versionbits
> signalling can begin. Activation on the network requires:
> (1) This date to pass
> (2) A full retarget window of 2016 blocks with 95% signalling the
> version bit (bit 1 for BIP141)
> (3) A fallow period consisting of another 2016 blocks.
> 
>   [1] https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki
>   [2] http://www.erisian.com.au/meetbot/bitcoin-core-dev/2016/bitcoin-core-dev.2016-10-13-19.04.log.html
> 
> Cheers,
> 

From gavinandresen at gmail.com  Sun Oct 16 16:35:58 2016
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Sun, 16 Oct 2016 12:35:58 -0400
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <1782741.nelbyupFSb@strawberry>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<1782741.nelbyupFSb@strawberry>
Message-ID: <CABsx9T2sWKFKpRYsjcgcdef+nL7X9-4+3H10hAy1FsXaax38Og@mail.gmail.com>

On Sun, Oct 16, 2016 at 10:58 AM, Tom Zander via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> The fallow period sounds waaaay to short. I suggest 2 months at minimum
> since anyone that wants to be safe needs to upgrade.
>

I asked a lot of businesses and individuals how long it would take them to
upgrade to a new release over the last year or two.

Nobody said it would take them more than two weeks.

If somebody is running their own validation code... then we should assume
they're sophisticated enough to figure out how to mitigate any risks
associated with segwit activation on their own.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161016/d7affd0c/attachment.html>

From tomz at freedommail.ch  Sun Oct 16 16:42:26 2016
From: tomz at freedommail.ch (Tom Zander)
Date: Sun, 16 Oct 2016 18:42:26 +0200
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <CABsx9T2sWKFKpRYsjcgcdef+nL7X9-4+3H10hAy1FsXaax38Og@mail.gmail.com>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<1782741.nelbyupFSb@strawberry>
	<CABsx9T2sWKFKpRYsjcgcdef+nL7X9-4+3H10hAy1FsXaax38Og@mail.gmail.com>
Message-ID: <1476639436.uo9cdjJaci@strawberry>

On Sunday, 16 October 2016 12:35:58 CEST Gavin Andresen wrote:
> On Sun, Oct 16, 2016 at 10:58 AM, Tom Zander via bitcoin-dev <
> 
> bitcoin-dev at lists.linuxfoundation.org> wrote:
> > The fallow period sounds waaaay to short. I suggest 2 months at minimum
> > since anyone that wants to be safe needs to upgrade.
> 
> I asked a lot of businesses and individuals how long it would take them to
> upgrade to a new release over the last year or two.
> 
> Nobody said it would take them more than two weeks.

The question you asked them was likely about the block size. The main 
difference is that SPV users do not need to update after BIP109, but they do 
need to have a new wallet when SegWit transactions are being sent to them.

This upgrade affects also end users, not just businesses etc.

Personally, I'd say that 2 months is even too fast.
 
-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From eric at voskuil.org  Sun Oct 16 16:42:49 2016
From: eric at voskuil.org (Eric Voskuil)
Date: Sun, 16 Oct 2016 09:42:49 -0700
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <CABsx9T2sWKFKpRYsjcgcdef+nL7X9-4+3H10hAy1FsXaax38Og@mail.gmail.com>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<1782741.nelbyupFSb@strawberry>
	<CABsx9T2sWKFKpRYsjcgcdef+nL7X9-4+3H10hAy1FsXaax38Og@mail.gmail.com>
Message-ID: <85294A85-FDB9-4FDF-911B-C06CBA45DA06@voskuil.org>

If somebody is not "running their own validation code"  then they aren't actually using Bitcoin, so their ease in transition is irrelevant. For all they know they are accepting random numbers.

e

> On Oct 16, 2016, at 9:35 AM, Gavin Andresen via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
>> On Sun, Oct 16, 2016 at 10:58 AM, Tom Zander via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> The fallow period sounds waaaay to short. I suggest 2 months at minimum
>> since anyone that wants to be safe needs to upgrade.
> 
> I asked a lot of businesses and individuals how long it would take them to upgrade to a new release over the last year or two.
> 
> Nobody said it would take them more than two weeks.
> 
> If somebody is running their own validation code... then we should assume they're sophisticated enough to figure out how to mitigate any risks associated with segwit activation on their own.
> 
> -- 
> --
> Gavin Andresen
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161016/57ac3ff7/attachment-0001.html>

From jl2012 at xbt.hk  Sun Oct 16 16:57:46 2016
From: jl2012 at xbt.hk (Johnson Lau)
Date: Mon, 17 Oct 2016 00:57:46 +0800
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <1476639436.uo9cdjJaci@strawberry>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<1782741.nelbyupFSb@strawberry>
	<CABsx9T2sWKFKpRYsjcgcdef+nL7X9-4+3H10hAy1FsXaax38Og@mail.gmail.com>
	<1476639436.uo9cdjJaci@strawberry>
Message-ID: <157ce6d84bc.11e801894339218.3134942825886478670@xbt.hk>

This is completely wrong. SPV wallets will work as normal without upgrade. Full nodes will only provide transactions to SPV in a format they understand, and SPV will accept the transaction since they are not doing any validation anyway. 

The only reason an end user may want to upgrade is for lower transaction fee when they are sending transaction. If they don't upgrade, that means the fee is too low for them to care, which is a good news

 ---- On Mon, 17 Oct 2016 00:42:26 +0800 Tom Zander via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote ---- 
 > On Sunday, 16 October 2016 12:35:58 CEST Gavin Andresen wrote: 
 > > On Sun, Oct 16, 2016 at 10:58 AM, Tom Zander via bitcoin-dev < 
 > >  
 > > bitcoin-dev at lists.linuxfoundation.org> wrote: 
 > > > The fallow period sounds waaaay to short. I suggest 2 months at minimum 
 > > > since anyone that wants to be safe needs to upgrade. 
 > >  
 > > I asked a lot of businesses and individuals how long it would take them to 
 > > upgrade to a new release over the last year or two. 
 > >  
 > > Nobody said it would take them more than two weeks. 
 >  
 > The question you asked them was likely about the block size. The main  
 > difference is that SPV users do not need to update after BIP109, but they do  
 > need to have a new wallet when SegWit transactions are being sent to them. 
 >  
 > This upgrade affects also end users, not just businesses etc. 
 >  
 > Personally, I'd say that 2 months is even too fast. 
 >   
 > --  
 > Tom Zander 
 > Blog: https://zander.github.io 
 > Vlog: https://vimeo.com/channels/tomscryptochannel 
 > _______________________________________________ 
 > bitcoin-dev mailing list 
 > bitcoin-dev at lists.linuxfoundation.org 
 > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev 
 > 



From lf-lists at mattcorallo.com  Sun Oct 16 17:04:59 2016
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Sun, 16 Oct 2016 17:04:59 +0000
Subject: [bitcoin-dev] On the security of soft forks
In-Reply-To: <1476639436.uo9cdjJaci@strawberry>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<1782741.nelbyupFSb@strawberry>
	<CABsx9T2sWKFKpRYsjcgcdef+nL7X9-4+3H10hAy1FsXaax38Og@mail.gmail.com>
	<1476639436.uo9cdjJaci@strawberry>
Message-ID: <5803B33B.2090809@mattcorallo.com>

I highly recommend you read the excellent thread on soft fork risks at
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012014.html
and respond there instead of getting off topic for this thread.

Matt

On 10/16/16 16:42, Tom Zander via bitcoin-dev wrote:
> On Sunday, 16 October 2016 12:35:58 CEST Gavin Andresen wrote:
>> On Sun, Oct 16, 2016 at 10:58 AM, Tom Zander via bitcoin-dev <
>>
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>> The fallow period sounds waaaay to short. I suggest 2 months at minimum
>>> since anyone that wants to be safe needs to upgrade.
>>
>> I asked a lot of businesses and individuals how long it would take them to
>> upgrade to a new release over the last year or two.
>>
>> Nobody said it would take them more than two weeks.
> 
> The question you asked them was likely about the block size. The main 
> difference is that SPV users do not need to update after BIP109, but they do 
> need to have a new wallet when SegWit transactions are being sent to them.
> 
> This upgrade affects also end users, not just businesses etc.
> 
> Personally, I'd say that 2 months is even too fast.
>  
> 

From joroark at vt.edu  Sun Oct 16 16:47:40 2016
From: joroark at vt.edu (Douglas Roark)
Date: Sun, 16 Oct 2016 09:47:40 -0700
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <CABsx9T2sWKFKpRYsjcgcdef+nL7X9-4+3H10hAy1FsXaax38Og@mail.gmail.com>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<1782741.nelbyupFSb@strawberry>
	<CABsx9T2sWKFKpRYsjcgcdef+nL7X9-4+3H10hAy1FsXaax38Og@mail.gmail.com>
Message-ID: <2d5abad7-cd9d-4396-4dd2-c687a1a808dc@vt.edu>

On 2016/10/16 09:35, Gavin Andresen via bitcoin-dev wrote:
> I asked a lot of businesses and individuals how long it would take them
> to upgrade to a new release over the last year or two.
> 
> Nobody said it would take them more than two weeks.
> 
> If somebody is running their own validation code... then we should
> assume they're sophisticated enough to figure out how to mitigate any
> risks associated with segwit activation on their own.

In addition, there has been a page up for several months
(https://bitcoincore.org/en/segwit_adoption/) that gauges whether or not
wallets are ready for SegWit. Unfortunately, it appears that the page
hasn't been updated since May. I do know that several wallets have
finished or are close to finishing their support, though.

Would I want anyone to lose money due to faulty wallets? Of course not.
By the same token, devs have had almost a year to tinker with SegWit and
make sure the wallet isn't so poorly written that it'll flame out when
SegWit comes along. It's not like this is some untested, mostly unknown
feature that's being slipped out at the last minute, unlike other
features I could name but won't. :)

-- 
---
Douglas Roark
Cryptocurrency, network security, travel, and art.
https://onename.com/droark
joroark at vt.edu
PGP key ID: 26623924

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161016/f31664df/attachment.sig>

From lf-lists at mattcorallo.com  Sun Oct 16 17:52:09 2016
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Sun, 16 Oct 2016 17:52:09 +0000
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
Message-ID: <3F963D18-00A8-4425-8479-43034811664C@mattcorallo.com>

This start time seems reasonable to me. It is mostly in line with BIP 9's proposed defaults, which seems like an appropriate choice.

On October 16, 2016 10:31:55 AM EDT, Pieter Wuille via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>Hello all,
>
>We're getting ready for Bitcoin Core's 0.13.1 release - the first one
>to include segregated witness (BIP 141, 143, 144, 145) for Bitcoin
>mainnet, after being extensively tested on testnet and in other
>software. Following the BIP9 recommendation [1] to set the versionbits
>start time a month in the future and discussion in the last IRC
>meeting [2], I propose we set BIP 141's start time to November 15,
>2016, 0:00 UTC (unix time 1479168000).
>
>Note that this is just a lower bound on the time when the versionbits
>signalling can begin. Activation on the network requires:
>(1) This date to pass
>(2) A full retarget window of 2016 blocks with 95% signalling the
>version bit (bit 1 for BIP141)
>(3) A fallow period consisting of another 2016 blocks.
>
>  [1] https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki
>[2]
>http://www.erisian.com.au/meetbot/bitcoin-core-dev/2016/bitcoin-core-dev.2016-10-13-19.04.log.html
>
>Cheers,


From tomz at freedommail.ch  Sun Oct 16 18:20:50 2016
From: tomz at freedommail.ch (Tom Zander)
Date: Sun, 16 Oct 2016 20:20:50 +0200
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <2d5abad7-cd9d-4396-4dd2-c687a1a808dc@vt.edu>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<CABsx9T2sWKFKpRYsjcgcdef+nL7X9-4+3H10hAy1FsXaax38Og@mail.gmail.com>
	<2d5abad7-cd9d-4396-4dd2-c687a1a808dc@vt.edu>
Message-ID: <2034434.4WpKWoeOrB@strawberry>

On Sunday, 16 October 2016 09:47:40 CEST Douglas Roark via bitcoin-dev 
wrote:
> Would I want anyone to lose money due to faulty wallets? Of course not.
> By the same token, devs have had almost a year to tinker with SegWit and
> make sure the wallet isn't so poorly written that it'll flame out when
> SegWit comes along. It's not like this is some untested, mostly unknown
> feature that's being slipped out at the last minute

There have been objections to the way that SegWit has been implemented for a 
long time, some wallets are taking a "wait and see" approach.  If you look 
at the page you linked[1], that is a very very sad state of affairs. The 
vast majority is not ready.  Would be interesting to get a more up-to-date 
view.
Wallets probably won't want to invest resources adding support for a feature 
that will never be activated. The fact that we have a much safer alternative 
in the form of Flexible Transactions may mean it will not get activated. We 
won't know until its actually locked in.
Wallets may not act until its actually locked in either. And I think we 
should respect that.

Even if all wallets support it (and thats a big if), they need to be rolled 
out and people need to actually download those updates.
This takes time, 2 months after the lock-in of SegWit would be the minimum 
safe time for people to actually upgrade.

1) https://bitcoincore.org/en/segwit_adoption/
-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From jtimon at jtimon.cc  Sun Oct 16 18:41:34 2016
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sun, 16 Oct 2016 20:41:34 +0200
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <2034434.4WpKWoeOrB@strawberry>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<CABsx9T2sWKFKpRYsjcgcdef+nL7X9-4+3H10hAy1FsXaax38Og@mail.gmail.com>
	<2d5abad7-cd9d-4396-4dd2-c687a1a808dc@vt.edu>
	<2034434.4WpKWoeOrB@strawberry>
Message-ID: <CABm2gDrhCw-5mpCK814hK4Y1sEUcHZyFMHqHziC1b1LLtMWVDA@mail.gmail.com>

As has been mentioned there have been a lot of time to upgrade
software to support segwit. Furthermore, since it is a softfork, there
will be plenty of time after activation too for those taking a "wait
and see" approach.

You keep insisting on "2 months after activation", but that's not how
BIP9 works. We could at most change BIP9's initial date, but if those
who haven't started to work on supporting segwit will keep waiting for
activation, then changing the initial date won't be of any help to
them can only delay those who are ready and waiting.

The new features are not a requirement after activation. And although
it may take some time after activation for the new features to really
get to the users, that's just a fact of life that won't change by
changing the initial BIP9 date.


On Sun, Oct 16, 2016 at 8:20 PM, Tom Zander via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On Sunday, 16 October 2016 09:47:40 CEST Douglas Roark via bitcoin-dev
> wrote:
>> Would I want anyone to lose money due to faulty wallets? Of course not.
>> By the same token, devs have had almost a year to tinker with SegWit and
>> make sure the wallet isn't so poorly written that it'll flame out when
>> SegWit comes along. It's not like this is some untested, mostly unknown
>> feature that's being slipped out at the last minute
>
> There have been objections to the way that SegWit has been implemented for a
> long time, some wallets are taking a "wait and see" approach.  If you look
> at the page you linked[1], that is a very very sad state of affairs. The
> vast majority is not ready.  Would be interesting to get a more up-to-date
> view.
> Wallets probably won't want to invest resources adding support for a feature
> that will never be activated. The fact that we have a much safer alternative
> in the form of Flexible Transactions may mean it will not get activated. We
> won't know until its actually locked in.
> Wallets may not act until its actually locked in either. And I think we
> should respect that.
>
> Even if all wallets support it (and thats a big if), they need to be rolled
> out and people need to actually download those updates.
> This takes time, 2 months after the lock-in of SegWit would be the minimum
> safe time for people to actually upgrade.
>
> 1) https://bitcoincore.org/en/segwit_adoption/
> --
> Tom Zander
> Blog: https://zander.github.io
> Vlog: https://vimeo.com/channels/tomscryptochannel
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From tomz at freedommail.ch  Sun Oct 16 18:54:04 2016
From: tomz at freedommail.ch (Tom Zander)
Date: Sun, 16 Oct 2016 20:54:04 +0200
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <CABm2gDrhCw-5mpCK814hK4Y1sEUcHZyFMHqHziC1b1LLtMWVDA@mail.gmail.com>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<2034434.4WpKWoeOrB@strawberry>
	<CABm2gDrhCw-5mpCK814hK4Y1sEUcHZyFMHqHziC1b1LLtMWVDA@mail.gmail.com>
Message-ID: <9782389.Gd5V7OpbDZ@strawberry>

On Sunday, 16 October 2016 20:41:34 CEST Jorge Tim?n wrote:
> You keep insisting on "2 months after activation", but that's not how
> BIP9 works. We could at most change BIP9's initial date, but if those
> who haven't started to work on supporting segwit will keep waiting for
> activation, then changing the initial date won't be of any help to
> them can only delay those who are ready and waiting.

Then don't use BIP9...

Honestly, if the reason for the too-short-for-safety timespan is that you 
want to use BIP9, then please take a step back and realize that SegWit is a 
contriversial soft-fork that needs to be deployed in a way that is extra 
safe because you can't roll the feature back a week after deployment.
All transactions that were made in the mean time turn into everyone-can-
spent transactions.

I stand by the minimum of 2 months. There is no reason to use BIP9 as it was 
coded in an older client. That is an excuse that I don't buy.
-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From jl2012 at xbt.hk  Sun Oct 16 19:11:23 2016
From: jl2012 at xbt.hk (Johnson Lau)
Date: Mon, 17 Oct 2016 03:11:23 +0800
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <9782389.Gd5V7OpbDZ@strawberry>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<2034434.4WpKWoeOrB@strawberry>
	<CABm2gDrhCw-5mpCK814hK4Y1sEUcHZyFMHqHziC1b1LLtMWVDA@mail.gmail.com>
	<9782389.Gd5V7OpbDZ@strawberry>
Message-ID: <157cee7d85f.d54d998f341542.5677728872543901935@xbt.hk>




 ---- On Mon, 17 Oct 2016 02:54:04 +0800 Tom Zander via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote ---- 

 > Honestly, if the reason for the too-short-for-safety timespan is that you  
 > want to use BIP9, then please take a step back and realize that SegWit is a  
 > contriversial soft-fork that needs to be deployed in a way that is extra  
 > safe because you can't roll the feature back a week after deployment. 
 > All transactions that were made in the mean time turn into everyone-can- 
 > spent transactions. 

No one should use, nor anyone is advised to use, segwit transactions before it is fully activated. Having 2 months or 2 weeks of grace period makes totally no difference in this regard. If anyone tried to use segwit tx during your proposed 2 months grace period, all those txs were still everyone-can-spent.

All you are advocating is just stalling the process with no improvement in security.

 >  
 > I stand by the minimum of 2 months. There is no reason to use BIP9 as it was  
 > coded in an older client. That is an excuse that I don't buy. 
 > --  
 > Tom Zander 
 > Blog: https://zander.github.io 
 > Vlog: https://vimeo.com/channels/tomscryptochannel 
 > _______________________________________________ 
 > bitcoin-dev mailing list 
 > bitcoin-dev at lists.linuxfoundation.org 
 > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev 
 > 



From lf-lists at mattcorallo.com  Sun Oct 16 19:35:52 2016
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Sun, 16 Oct 2016 19:35:52 +0000
Subject: [bitcoin-dev] (no subject)
In-Reply-To: <2034434.4WpKWoeOrB@strawberry>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<CABsx9T2sWKFKpRYsjcgcdef+nL7X9-4+3H10hAy1FsXaax38Og@mail.gmail.com>
	<2d5abad7-cd9d-4396-4dd2-c687a1a808dc@vt.edu>
	<2034434.4WpKWoeOrB@strawberry>
Message-ID: <5803D698.2080102@mattcorallo.com>

You keep calling flexible transactions "safer", and yet you haven't
mentioned that the current codebase is riddled with blatant and massive
security holes. For example, you seem to have misunderstood C++'s memory
model - you would have no less than three out-of-bound, probably
exploitable memory accesses in your 80-LoC deserialize method at
https://github.com/bitcoinclassic/bitcoinclassic/blob/develop/src/primitives/transaction.cpp#L119
if you were to turn on flexible transactions (and I only reviewed that
method for 2 minutes). If you want to propose an alternative to a
community which has been in desperate need of fixes to many problems for
several years, please do so with something which would not take at least
a year to complete given a large team of qualified developers.

You additionally have not yet bothered to address the discussion of
soft-fork security at
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012014.html
which I believe answers all of your claims about upgrades required in a
much more detailed discussion than I will include here. Please take your
off-topic discussions there instead of this thread.

On 10/16/16 18:20, Tom Zander via bitcoin-dev wrote:
> On Sunday, 16 October 2016 09:47:40 CEST Douglas Roark via bitcoin-dev 
> wrote:
>> Would I want anyone to lose money due to faulty wallets? Of course not.
>> By the same token, devs have had almost a year to tinker with SegWit and
>> make sure the wallet isn't so poorly written that it'll flame out when
>> SegWit comes along. It's not like this is some untested, mostly unknown
>> feature that's being slipped out at the last minute
> 
> There have been objections to the way that SegWit has been implemented for a 
> long time, some wallets are taking a "wait and see" approach.  If you look 
> at the page you linked[1], that is a very very sad state of affairs. The 
> vast majority is not ready.  Would be interesting to get a more up-to-date 
> view.
> Wallets probably won't want to invest resources adding support for a feature 
> that will never be activated. The fact that we have a much safer alternative 
> in the form of Flexible Transactions may mean it will not get activated. We 
> won't know until its actually locked in.
> Wallets may not act until its actually locked in either. And I think we 
> should respect that.
> 
> Even if all wallets support it (and thats a big if), they need to be rolled 
> out and people need to actually download those updates.
> This takes time, 2 months after the lock-in of SegWit would be the minimum 
> safe time for people to actually upgrade.
> 
> 1) https://bitcoincore.org/en/segwit_adoption/
> 

From joroark at vt.edu  Sun Oct 16 19:49:47 2016
From: joroark at vt.edu (Douglas Roark)
Date: Sun, 16 Oct 2016 12:49:47 -0700
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <2034434.4WpKWoeOrB@strawberry>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<CABsx9T2sWKFKpRYsjcgcdef+nL7X9-4+3H10hAy1FsXaax38Og@mail.gmail.com>
	<2d5abad7-cd9d-4396-4dd2-c687a1a808dc@vt.edu>
	<2034434.4WpKWoeOrB@strawberry>
Message-ID: <03831fcd-1fd5-b769-0b3b-41e996894e1f@vt.edu>

Before getting to my reply to Tom's message, I forgot to give my
thoughts on the Nov. 15 date. I think it's a reasonable date. With
various holidays coming up in the West, it's probably best to get the
word out now so that work can progress before some people get sucked
into family obligations and such. A month gives a bit of time without
dragging out the waiting game, IMO.

Now then....

On 2016/10/16 11:20, Tom Zander via bitcoin-dev wrote:
> There have been objections to the way that SegWit has been implemented for a 
> long time, some wallets are taking a "wait and see" approach.  If you look 
> at the page you linked[1], that is a very very sad state of affairs. The 
> vast majority is not ready.  Would be interesting to get a more up-to-date 
> view.

It's not the website's fault if wallet devs aren't updating their
statuses. Besides, "WIP" can mean an awful lot of things. For example, I
know Armory made significant progress with SegWit support as part of
their upcoming 0.95 release. I have full confidence they'll be ready
relatively soon. Other wallets may be ready. Other wallets may be stuck
where they were in the spring. In any event, it's a free country. Unlike
consensus rules and such, it's trivial to move one's funds to a wallet
that fully supports SegWit if that's what one desires.

In addition, I was at the wallet workshop at Scaling Bitcoin last week.
An awful lot of things were on the board as potential discussion points.
I think SegWit was mentioned but wasn't really discussed. I don't think
FlexTrans was even mentioned (and it's off-topic anyway). Wallet devs
are far more concerned about things like UI and standards for HW wallets
than they are about their ability to support SegWit. I think wallet devs
are quite capable of making noise if they felt that SegWit was a bad
feature, or a difficult-to-support feature.

> Wallets probably won't want to invest resources adding support for a feature 
> that will never be activated. The fact that we have a much safer alternative 
> in the form of Flexible Transactions may mean it will not get activated. We 
> won't know until its actually locked in.

A lot of devs have already worked on SegWit support. This has been
covered. Even if they don't support SegWit, the wallets will probably
work just fine. (For awhile, Armory did crash when trying to read SegWit
data in Core's blockchain files. That problem was fixed, and it was
probably a rarity since very few wallets rely directly on Core.) As long
as devs use testnet or regtest to iron out their kinks before hitting
mainnet, I can't think of a single good reason to hold back SegWit
solely due to wallet support.

Also, once again, FlexTrans is off-topic. As others have said, you're
basically being stubborn at this point. If you insist on discussing
FlexTrans, start another thread. It sounds like quite a few devs would
be more than happy to say a word or two about your proposal.

-- 
---
Douglas Roark
Cryptocurrency, network security, travel, and art.
https://onename.com/droark
joroark at vt.edu
PGP key ID: 26623924

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161016/7c46263a/attachment.sig>

From tomz at freedommail.ch  Sun Oct 16 20:08:29 2016
From: tomz at freedommail.ch (Tom Zander)
Date: Sun, 16 Oct 2016 22:08:29 +0200
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <157cee7d85f.d54d998f341542.5677728872543901935@xbt.hk>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<9782389.Gd5V7OpbDZ@strawberry>
	<157cee7d85f.d54d998f341542.5677728872543901935@xbt.hk>
Message-ID: <2028733.BSPBufMBT3@strawberry>

On Monday, 17 October 2016 03:11:23 CEST Johnson Lau wrote:
> > Honestly, if the reason for the too-short-for-safety timespan is that
> > you
> > want to use BIP9, then please take a step back and realize that SegWit
> > is a contriversial soft-fork that needs to be deployed in a way that is
> > extra safe because you can't roll the feature back a week after
> > deployment. All transactions that were made in the mean time turn into
> > everyone-can- spent transactions.
> 
> No one should use, nor anyone is advised to use, segwit transactions
> before it is fully activated. 

Naturally, I fully agree.

It seems I choose the wrong words, let me rephrase;

You can't roll the SegWit back a week after people are allowed to send 
segwit transactions (lock-in + fallow period). All transactions that were 
made in the mean time turn into everyone-can- spent transactions.

Because the network as a whole and any implementation is unable to roll back 
in an environment where SegWit is a contriversial soft-fork, it is super 
important to make sure that it is properly supported by all miners. This 
takes time and the risk you take by pushing this is that actual real people 
loose actual real money because of the issue I outlined inthe previous 
paragraph.


> Having 2 months or 2 weeks of grace period
> makes totally no difference in this regard. If anyone tried to use segwit
> tx during your proposed 2 months grace period, all those txs were still
> everyone-can-spent.
> 
> All you are advocating is just stalling the process with no improvement in
> security.

I hope the above explains the actual security issue better.

-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From btcdrak at gmail.com  Sun Oct 16 20:14:15 2016
From: btcdrak at gmail.com (Btc Drak)
Date: Sun, 16 Oct 2016 21:14:15 +0100
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <2034434.4WpKWoeOrB@strawberry>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<CABsx9T2sWKFKpRYsjcgcdef+nL7X9-4+3H10hAy1FsXaax38Og@mail.gmail.com>
	<2d5abad7-cd9d-4396-4dd2-c687a1a808dc@vt.edu>
	<2034434.4WpKWoeOrB@strawberry>
Message-ID: <CADJgMzuYmJgN12FeCy3rT-U=VAr9ubqTWZy434Qcs_u0DhBb=Q@mail.gmail.com>

I can see how it looks but actually most of the underlying libraries have
already been adapted or are almost finished being adapted for segwit. Since
segwit is not live on mainnet, most are not released (either still in PR
form or merged to a development branch). As a software developer, I think
you can appreciate that libraries cant actually release a segwit supported
versions until segwit is released as final in 0.13.1. Obviously consumers
of the libraries cant update for segwit until the libraries are released -
you get the idea. I wouldn't be too concerned about the adoption chart,
it's just very difficult to reflect the actual state of affairs. For
example Trezor is marked as wip, but they have had an updated, but
unreleased firmware version for many months[1]. We are in the process of
planning a migration guide and updating the existing development notes[2].
Additionally, many companies are already planning to update their services
for segwit.

Regarding BIP9, it's purpose is to co-ordinate *miner upgrade* and
activation. The starttime delay is simply designed to avoid miners
signalling before the soft fork has been made available for general
release; so the starttime prevents unreleased software from setting the
version bit prematurely. The whole BIP9 state machine allows predictable
activation. Non mining full nodes are under no constraints to upgrade on a
specific schedule, which is by design of soft forks. Signalling will not
begin until the first diff retarget period after the starttime of 15th Nov.
Practically it means there will be a minimum of 4-6 weeks at the very least
before activation can happen.

[1] https://github.com/bitcoin-core/bitcoincore.org/pull/30#issu
ecomment-217329474
[2] https://bitcoincore.org/en/segwit_wallet_dev/

On Sun, Oct 16, 2016 at 7:20 PM, Tom Zander via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Sunday, 16 October 2016 09:47:40 CEST Douglas Roark via bitcoin-dev
> wrote:
> > Would I want anyone to lose money due to faulty wallets? Of course not.
> > By the same token, devs have had almost a year to tinker with SegWit and
> > make sure the wallet isn't so poorly written that it'll flame out when
> > SegWit comes along. It's not like this is some untested, mostly unknown
> > feature that's being slipped out at the last minute
>
> There have been objections to the way that SegWit has been implemented for
> a
> long time, some wallets are taking a "wait and see" approach.  If you look
> at the page you linked[1], that is a very very sad state of affairs. The
> vast majority is not ready.  Would be interesting to get a more up-to-date
> view.
> Wallets probably won't want to invest resources adding support for a
> feature
> that will never be activated. The fact that we have a much safer
> alternative
> in the form of Flexible Transactions may mean it will not get activated. We
> won't know until its actually locked in.
> Wallets may not act until its actually locked in either. And I think we
> should respect that.
>
> Even if all wallets support it (and thats a big if), they need to be rolled
> out and people need to actually download those updates.
> This takes time, 2 months after the lock-in of SegWit would be the minimum
> safe time for people to actually upgrade.
>
> 1) https://bitcoincore.org/en/segwit_adoption/
> --
> Tom Zander
> Blog: https://zander.github.io
> Vlog: https://vimeo.com/channels/tomscryptochannel
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161016/db56653c/attachment-0001.html>

From tomz at freedommail.ch  Sun Oct 16 20:45:19 2016
From: tomz at freedommail.ch (Tom Zander)
Date: Sun, 16 Oct 2016 22:45:19 +0200
Subject: [bitcoin-dev] (no subject)
In-Reply-To: <5803D698.2080102@mattcorallo.com>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<2034434.4WpKWoeOrB@strawberry> <5803D698.2080102@mattcorallo.com>
Message-ID: <3326159.7vNQY8OkXt@strawberry>

On Sunday, 16 October 2016 19:35:52 CEST Matt Corallo wrote:
> You keep calling flexible transactions "safer", and yet you haven't
> mentioned that the current codebase is riddled with blatant and massive
> security holes.

I am not afraid of people finding issues with my code, I'm only human. Would 
appreciate you reporting actual issues instead of hinting at things here.
Can't fix things otherwise :)

But, glad you brought it up, the reason that FT is safer is because of the 
amount of conceps that SegWit changes in a way that anyone doing development 
on Bitcoin later will need to know about them in order to do proper 
development.
I counted 10 in my latest vlog entry.  FT only changes 2.

Its safer because its simpler.

> For example, you seem to have misunderstood C++'s memory
> model - you would have no less than three out-of-bound, probably
> exploitable memory accesses in your 80-LoC deserialize method at
> https://github.com/bitcoinclassic/bitcoinclassic/blob/develop/src/primitiv
> es/transaction.cpp#L119 if you were to turn on flexible transactions (and
> I only reviewed that method for 2 minutes). 

The unit test doesn't hit any of them. Valgrind only reports such possibly 
exploitable issues in secp256k and CKey::MakeNewKey. The same as in Core.

I don't doubt that your 2 minute look shows stuff that others missed, and 
that valgrind doesn't find either, but I'd be really grateful if you can 
report them specifically to me in an email off list (or github, you know the 
drill).
More feedback will only help to make the proposal stronger and even better. 
Thanks!

> If you want to propose an
> alternative to a community which has been in desperate need of fixes to
> many problems for several years, please do so with something which would
> not take at least a year to complete given a large team of qualified
> developers.

I think FT fits the bill just fine :)  After your 2 minute look, take a bit 
longer and check the rest of the code. You may be surprised with the 
simplicity of the approach.
-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From tomz at freedommail.ch  Sun Oct 16 20:58:31 2016
From: tomz at freedommail.ch (Tom Zander)
Date: Sun, 16 Oct 2016 22:58:31 +0200
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <03831fcd-1fd5-b769-0b3b-41e996894e1f@vt.edu>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<2034434.4WpKWoeOrB@strawberry>
	<03831fcd-1fd5-b769-0b3b-41e996894e1f@vt.edu>
Message-ID: <7939356.11nSWPlGYM@strawberry>

On Sunday, 16 October 2016 12:49:47 CEST Douglas Roark via bitcoin-dev 
wrote:
> It's not the website's fault if wallet devs aren't updating their
> statuses. Besides, "WIP" can mean an awful lot of things.

As I said, it would be nice to get an updated version so we can see more 
than 20% readyness of wallets.
The wallet devs not caring enough to update the status should be a worrying 
sign, though.

> A lot of devs have already worked on SegWit support. This has been
> covered. Even if they don't support SegWit, the wallets will probably
> work just fine. (For awhile, Armory did crash when trying to read SegWit

SegWit is probably the most disruptive and most invasive change ever made to 
Bitcoin. We have miners actively saying they don't like it and this makes it 
a contriversial upgrade which means the network may split and other issues.

Your "wallets will probably work just fine" comment is honestly not the 
answer to make people put faith in the way that this is being vetted and 
checked...

> Also, once again, FlexTrans is off-topic. 

Its an alternative and brought up in that vain. Nothing more. Feel free to 
respond to the BIP discussion (134) right on this list if you have any 
opinions on it. They will be on-topic there. No problems have been found so 
far.

Lets get back to the topic. Having a longer fallow period is a simple way to 
be safe.  Your comments make me even more scared that safety is not taken 
into account the way it would.

People are not even acknowledging the damage a contriversial soft fork of 
the scope and magnitude of SegWit can have, and a simple request to extend 
the fallow time for safety is really not a big deal.
SegWit has been in development for 18 months or so, what is a couple of 
extra week??

I would just like to ask people to take the safety of Bitcoin serious. This 
discussion and refusal to extend the safety period is not a good sign.
-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From kiwigb at yahoo.com  Sun Oct 16 21:03:52 2016
From: kiwigb at yahoo.com (gb)
Date: Mon, 17 Oct 2016 10:03:52 +1300
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <7939356.11nSWPlGYM@strawberry>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<2034434.4WpKWoeOrB@strawberry>
	<03831fcd-1fd5-b769-0b3b-41e996894e1f@vt.edu>
	<7939356.11nSWPlGYM@strawberry>
Message-ID: <1476651832.2406.2.camel@yahoo.com>

It's controversial not contriversial.

And it isn't controversial except among a small clique, which you seem
to be the sole representative of here. It might be time to consider
unsubscribing (again) if you don't seem to know when to shut up and the
moderators are letting you go on an inappropriate crusade here.

On Sun, 2016-10-16 at 22:58 +0200, Tom Zander via bitcoin-dev wrote:
> On Sunday, 16 October 2016 12:49:47 CEST Douglas Roark via bitcoin-dev 
> wrote:
> > It's not the website's fault if wallet devs aren't updating their
> > statuses. Besides, "WIP" can mean an awful lot of things.
> 
> As I said, it would be nice to get an updated version so we can see more 
> than 20% readyness of wallets.
> The wallet devs not caring enough to update the status should be a worrying 
> sign, though.
> 
> > A lot of devs have already worked on SegWit support. This has been
> > covered. Even if they don't support SegWit, the wallets will probably
> > work just fine. (For awhile, Armory did crash when trying to read SegWit
> 
> SegWit is probably the most disruptive and most invasive change ever made to 
> Bitcoin. We have miners actively saying they don't like it and this makes it 
> a contriversial upgrade which means the network may split and other issues.
> 
> Your "wallets will probably work just fine" comment is honestly not the 
> answer to make people put faith in the way that this is being vetted and 
> checked...
> 
> > Also, once again, FlexTrans is off-topic. 
> 
> Its an alternative and brought up in that vain. Nothing more. Feel free to 
> respond to the BIP discussion (134) right on this list if you have any 
> opinions on it. They will be on-topic there. No problems have been found so 
> far.
> 
> Lets get back to the topic. Having a longer fallow period is a simple way to 
> be safe.  Your comments make me even more scared that safety is not taken 
> into account the way it would.
> 
> People are not even acknowledging the damage a contriversial soft fork of 
> the scope and magnitude of SegWit can have, and a simple request to extend 
> the fallow time for safety is really not a big deal.
> SegWit has been in development for 18 months or so, what is a couple of 
> extra week??
> 
> I would just like to ask people to take the safety of Bitcoin serious. This 
> discussion and refusal to extend the safety period is not a good sign.



From marek at palatinus.cz  Sun Oct 16 21:08:08 2016
From: marek at palatinus.cz (Marek Palatinus)
Date: Sun, 16 Oct 2016 23:08:08 +0200
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <7939356.11nSWPlGYM@strawberry>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<2034434.4WpKWoeOrB@strawberry>
	<03831fcd-1fd5-b769-0b3b-41e996894e1f@vt.edu>
	<7939356.11nSWPlGYM@strawberry>
Message-ID: <CAJna-Hh8qoxv0n7XrfJ2-p_K1qDErr=dzakik2vAPcV-+-MYOw@mail.gmail.com>

On Sun, Oct 16, 2016 at 10:58 PM, Tom Zander via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Sunday, 16 October 2016 12:49:47 CEST Douglas Roark via bitcoin-dev
> wrote:
> > It's not the website's fault if wallet devs aren't updating their
> > statuses. Besides, "WIP" can mean an awful lot of things.
>
> As I said, it would be nice to get an updated version so we can see more
> than 20% readyness of wallets.
> The wallet devs not caring enough to update the status should be a worrying
> sign, though.
>

WIP for TREZOR means that we've made that hard part already (firwmare) so
we know it is feasible, yet we didn't spend enough time on finalizing all
the stack like our web wallet because we don't see any actual release date
yet. Considering current battles on BU hashpower, we decided simply sit and
watch (I already have popocorn).


SegWit is probably the most disruptive and most invasive change ever made to
> Bitcoin. We have miners actively saying they don't like it and this makes
> it
> a contriversial upgrade which means the network may split and other issues.
>
>
There're also many wallets which are impatiently waiting for segwit to be
released. Segwit is blessing for hardware wallets for many reasons. I
actually think that rolling out Segwit will increase security, because it
will reduce huge complexity in hardware wallets as it is today.

Slush
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161016/93d827a9/attachment.html>

From achow101 at gmail.com  Sun Oct 16 21:19:37 2016
From: achow101 at gmail.com (Andrew C)
Date: Sun, 16 Oct 2016 17:19:37 -0400
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <7939356.11nSWPlGYM@strawberry>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<2034434.4WpKWoeOrB@strawberry>
	<03831fcd-1fd5-b769-0b3b-41e996894e1f@vt.edu>
	<7939356.11nSWPlGYM@strawberry>
Message-ID: <22046ac7-df36-2e2a-759e-b3dd01601c59@gmail.com>



On 10/16/2016 4:58 PM, Tom Zander via bitcoin-dev wrote:
> Lets get back to the topic. Having a longer fallow period is a simple way to 
> be safe.  Your comments make me even more scared that safety is not taken 
> into account the way it would.

Can you please explain how having a longer grace period makes it any
safer? Once the fork reaches the LOCKED_IN status, the fork will become
active after the period is over. How does having a longer grace period
make this any safer besides just adding more waiting before it goes
active? You said something about rolling back the changes. There is no
mechanism for roll backs, and the whole point of the soft fork
signalling is such that there is no need to roll back anything because
miners have signaled that they are supporting the fork.

From pete at petertodd.org  Sun Oct 16 21:49:57 2016
From: pete at petertodd.org (Peter Todd)
Date: Sun, 16 Oct 2016 17:49:57 -0400
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
Message-ID: <20161016214957.GA16291@fedora-21-dvm>

On Sun, Oct 16, 2016 at 04:31:55PM +0200, Pieter Wuille via bitcoin-dev wrote:
> Hello all,
> 
> We're getting ready for Bitcoin Core's 0.13.1 release - the first one
> to include segregated witness (BIP 141, 143, 144, 145) for Bitcoin
> mainnet, after being extensively tested on testnet and in other
> software. Following the BIP9 recommendation [1] to set the versionbits
> start time a month in the future and discussion in the last IRC
> meeting [2], I propose we set BIP 141's start time to November 15,
> 2016, 0:00 UTC (unix time 1479168000).

Speaking as maintainer of python-bitcoinlib, ACK.

Currently python-bitcoinlib doesn't have any support for segwit, although Bob
McElrath has had a pull-req open for it since July:

    https://github.com/petertodd/python-bitcoinlib/pull/112

I may or may not get time to finishing reviewing and merging that pull-req
before segwit activates - I've been a rather distracted maintainer. But either
way, as has been explained elsewhere ad nauseam, segwit is backwards compatible
with existing nodes and wallets so there's no rush to upgrade.

For example, another project of mine - OpenTimestamps - also makes use of
python-bitcoinlib for the relatively complex and hairy low-level code that
extracts timestamp proofs from blocks, among other things. In fact, in the
development of OpenTimestamps I had to fix a few minor bugs in
python-bitcoinlib, because it exercised parts of the codebase that few other
projects do.

Yet the impact on segwit for OpenTimestamps will be zero - since segwit is a
softfork it's 100% backwards compatible with existing software. Of course, at
some point in the future I'll probably get around to adding segwit support to
the software to reduce transaction fees, but there's no rush to do so. All I'll
be doing for segwit in the near future is upgrading the full nodes on the two
redundant OpenTimestamps calendar servers to v0.13.1, and even there I'll be
able to stagger the upgrades to protect against the unlikely occurance of
v0.13.1 having a bug that v0.13.0 doesn't. Again, staggering full-node upgrades
is only possible because segwit is a soft-fork.

-- 
https://petertodd.org 'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161016/ef7612e8/attachment-0001.sig>

From jl2012 at xbt.hk  Mon Oct 17 03:46:11 2016
From: jl2012 at xbt.hk (Johnson Lau)
Date: Mon, 17 Oct 2016 11:46:11 +0800
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <2028733.BSPBufMBT3@strawberry>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<9782389.Gd5V7OpbDZ@strawberry>
	<157cee7d85f.d54d998f341542.5677728872543901935@xbt.hk>
	<2028733.BSPBufMBT3@strawberry>
Message-ID: <157d0bf2a93.e5a7dc16354163.8523890663577544011@xbt.hk>




 ---- On Mon, 17 Oct 2016 04:08:29 +0800 Tom Zander via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote ---- 
 > On Monday, 17 October 2016 03:11:23 CEST Johnson Lau wrote: 
 > > > Honestly, if the reason for the too-short-for-safety timespan is that 
 > > > you 
 > > > want to use BIP9, then please take a step back and realize that SegWit 
 > > > is a contriversial soft-fork that needs to be deployed in a way that is 
 > > > extra safe because you can't roll the feature back a week after 
 > > > deployment. All transactions that were made in the mean time turn into 
 > > > everyone-can- spent transactions. 
 > >  
 > > No one should use, nor anyone is advised to use, segwit transactions 
 > > before it is fully activated.  
 >  
 > Naturally, I fully agree. 
 >  
 > It seems I choose the wrong words, let me rephrase; 
 >  
 > You can't roll the SegWit back a week after people are allowed to send  
 > segwit transactions (lock-in + fallow period). All transactions that were  
 > made in the mean time turn into everyone-can- spent transactions. 
 > 
 > Because the network as a whole and any implementation is unable to roll back  
 > in an environment where SegWit is a contriversial soft-fork, it is super  
 > important to make sure that it is properly supported by all miners. This  
 > takes time and the risk you take by pushing this is that actual real people  
 > loose actual real money because of the issue I outlined inthe previous  
 > paragraph. 
 
It would only happen if a large proportion of miners are false-signalling, like how BU did with BIP109 and forked your Classic away on testnet

But this is a egg-and-chicken problem and extending the grace period would not have any improvement. Until the rules are fully activated, it is totally impossible to tell if some miners are false signalling. The only method to prevent it, as usual, is the majority of miners will orphan the blocks of malicious miners. Like in the last year, some miners did not correctly implement BIP66 and got punished by losing many blocks.

If your are suggesting >51% of miners may false-signal (like in the BIP109 case), we already have a much bigger problem.

If people are really worrying about that, I would advise them not to use segwit extensively at the beginning, and wait for at least a week to see any sign of false signalling (which will be shown as invalid orphaned blocks). If the grace period was 2 weeks, they need to wait for 3 weeks; if the grace period was 2 months, they need to wait for 2 months and a week. Pre-activation consensus-imposed grace period could never replace post-activation self-imposed observation period


From tomz at freedommail.ch  Mon Oct 17 11:17:39 2016
From: tomz at freedommail.ch (Tom Zander)
Date: Mon, 17 Oct 2016 13:17:39 +0200
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <22046ac7-df36-2e2a-759e-b3dd01601c59@gmail.com>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<7939356.11nSWPlGYM@strawberry>
	<22046ac7-df36-2e2a-759e-b3dd01601c59@gmail.com>
Message-ID: <2381760.VTJ5BOIlGi@strawberry>

On Sunday, 16 October 2016 17:19:37 CEST Andrew C wrote:
> On 10/16/2016 4:58 PM, Tom Zander via bitcoin-dev wrote:
> > Lets get back to the topic. Having a longer fallow period is a simple
> > way to be safe.  Your comments make me even more scared that safety is
> > not taken into account the way it would.
> 
> Can you please explain how having a longer grace period makes it any
> safer? Once the fork reaches the LOCKED_IN status, the fork will become
> active after the period is over. How does having a longer grace period
> make this any safer besides just adding more waiting before it goes
> active? 

As Marek wrote just minutes before your email came in; companies will not 
roll out their updates until it locks in. Peter Todd says the same thing.
So your assumption that the lock-in time is the END of the upgrading is 
false. Thats only the case for miners.

The entire point here is that SegWit is much bigger than just full nodes 
(including miner).
An entire ecosystem of Bitconin will have a need to upgrade.

I understand people saying that non-miners don't *need* to upgrade in order 
to avoid being kicked of the network, but truely, thats a bogus argument.

People want to actually participate in Bitcoin and that means they need to 
understand all of it. Not just see anyone-can-spend transactions.
I think its rather odd to think that developers on this list can decide
the risk profile that Bitcoin using companies or individuals should have.


> You said something about rolling back the changes. There is no
> mechanism for roll backs, and the whole point of the soft fork
> signalling is such that there is no need to roll back anything because
> miners have signaled that they are supporting the fork.

There are a bunch of really large assumptions in there that I disagree with.
First of all, miners running the latest software doesn't mean the software 
is free from flaws. Everyone makes mistakes. People that see a way to abuse 
the system may have found things and are not reporting it because they want 
to abuse the flaw for their own gains. Which is exactly what happened with 
Etherium.

The amount of code and the amount of changes in SegWit makes this a very 
dangerous change in (of?) Bitcoin. I counted 10 core concepts in Bitcoin 
being changed with it. We don't yet know how they will interact. We can?t.

You are asking people to create everyone-can-spend transactions that would 
mean a loss of funds to everyone that used it if we do find a major flaw and 
need to rollback.

The gamble is rather uncomforable to many...
-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From pete at petertodd.org  Mon Oct 17 13:09:27 2016
From: pete at petertodd.org (Peter Todd)
Date: Mon, 17 Oct 2016 09:09:27 -0400
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <2381760.VTJ5BOIlGi@strawberry>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<7939356.11nSWPlGYM@strawberry>
	<22046ac7-df36-2e2a-759e-b3dd01601c59@gmail.com>
	<2381760.VTJ5BOIlGi@strawberry>
Message-ID: <20161017130927.GA19897@fedora-21-dvm>

On Mon, Oct 17, 2016 at 01:17:39PM +0200, Tom Zander via bitcoin-dev wrote:
> On Sunday, 16 October 2016 17:19:37 CEST Andrew C wrote:
> > On 10/16/2016 4:58 PM, Tom Zander via bitcoin-dev wrote:
> > > Lets get back to the topic. Having a longer fallow period is a simple
> > > way to be safe.  Your comments make me even more scared that safety is
> > > not taken into account the way it would.
> > 
> > Can you please explain how having a longer grace period makes it any
> > safer? Once the fork reaches the LOCKED_IN status, the fork will become
> > active after the period is over. How does having a longer grace period
> > make this any safer besides just adding more waiting before it goes
> > active? 
> 
> As Marek wrote just minutes before your email came in; companies will not 
> roll out their updates until it locks in. Peter Todd says the same thing.
> So your assumption that the lock-in time is the END of the upgrading is 
> false. Thats only the case for miners.
> 
> The entire point here is that SegWit is much bigger than just full nodes 
> (including miner).
> An entire ecosystem of Bitconin will have a need to upgrade.
> 
> I understand people saying that non-miners don't *need* to upgrade in order 
> to avoid being kicked of the network, but truely, thats a bogus argument.
> 
> People want to actually participate in Bitcoin and that means they need to 
> understand all of it. Not just see anyone-can-spend transactions.
> I think its rather odd to think that developers on this list can decide
> the risk profile that Bitcoin using companies or individuals should have.

Please don't misleadingly reference/quote me.

I made it quite clear in my last post that because segwit is a backwards
compatible soft-fork, the vast majority of code out there will not have to
change; my own OpenTimestamps being a good example. All I'll have to do to
prepare for segwit is upgrade the (pruned) full nodes that the OpenTimestamps
servers depend on to determine what's the most-work valid chain, and in the
event I was concerned about compatibility issues, I could easily run my
existing nodes behind updated segwit-supporting (pruned) nodes.

Like most users, my OpenTimestamps code doesn't "fully understand" transactions
at all - I rely on my full node to do that for me. What it does understand
about transactions and blocks remains the same in segwit. I can receive
transactions from segwit users with lite-client security without any action at
all, and full-node security once I upgrade my full nodes (or run them behind
upgraded nodes).

Your proposed alternative to segwit - flexible transactions - has none of these
beneficial properties. And as Matt Corallo reported, it's no-where near ready
for deployment: three buffer overflows in 80 lines of code is a serious
problem.

-- 
https://petertodd.org 'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161017/1cc41f27/attachment.sig>

From btcdrak at gmail.com  Mon Oct 17 13:13:25 2016
From: btcdrak at gmail.com (Btc Drak)
Date: Mon, 17 Oct 2016 14:13:25 +0100
Subject: [bitcoin-dev] (no subject)
In-Reply-To: <3326159.7vNQY8OkXt@strawberry>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<2034434.4WpKWoeOrB@strawberry> <5803D698.2080102@mattcorallo.com>
	<3326159.7vNQY8OkXt@strawberry>
Message-ID: <CADJgMzu_0_W5X_+00Rfx=LC88nGcc4Qn9yGU7GEMKic_Sob1LA@mail.gmail.com>

For continuity, Matt took the discussion to the bitcoin-discuss lists here
https://lists.linuxfoundation.org/pipermail/bitcoin-discuss/2016-October/000104.html

On Sun, Oct 16, 2016 at 9:45 PM, Tom Zander via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Sunday, 16 October 2016 19:35:52 CEST Matt Corallo wrote:
> > You keep calling flexible transactions "safer", and yet you haven't
> > mentioned that the current codebase is riddled with blatant and massive
> > security holes.
>
> I am not afraid of people finding issues with my code, I'm only human.
> Would
> appreciate you reporting actual issues instead of hinting at things here.
> Can't fix things otherwise :)
>
> But, glad you brought it up, the reason that FT is safer is because of the
> amount of conceps that SegWit changes in a way that anyone doing
> development
> on Bitcoin later will need to know about them in order to do proper
> development.
> I counted 10 in my latest vlog entry.  FT only changes 2.
>
> Its safer because its simpler.
>
> > For example, you seem to have misunderstood C++'s memory
> > model - you would have no less than three out-of-bound, probably
> > exploitable memory accesses in your 80-LoC deserialize method at
> > https://github.com/bitcoinclassic/bitcoinclassic/
> blob/develop/src/primitiv
> > es/transaction.cpp#L119 if you were to turn on flexible transactions (and
> > I only reviewed that method for 2 minutes).
>
> The unit test doesn't hit any of them. Valgrind only reports such possibly
> exploitable issues in secp256k and CKey::MakeNewKey. The same as in Core.
>
> I don't doubt that your 2 minute look shows stuff that others missed, and
> that valgrind doesn't find either, but I'd be really grateful if you can
> report them specifically to me in an email off list (or github, you know
> the
> drill).
> More feedback will only help to make the proposal stronger and even better.
> Thanks!
>
> > If you want to propose an
> > alternative to a community which has been in desperate need of fixes to
> > many problems for several years, please do so with something which would
> > not take at least a year to complete given a large team of qualified
> > developers.
>
> I think FT fits the bill just fine :)  After your 2 minute look, take a bit
> longer and check the rest of the code. You may be surprised with the
> simplicity of the approach.
> --
> Tom Zander
> Blog: https://zander.github.io
> Vlog: https://vimeo.com/channels/tomscryptochannel
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161017/5149957c/attachment.html>

From achow101 at gmail.com  Mon Oct 17 13:19:29 2016
From: achow101 at gmail.com (Andrew C)
Date: Mon, 17 Oct 2016 09:19:29 -0400
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <2381760.VTJ5BOIlGi@strawberry>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<7939356.11nSWPlGYM@strawberry>
	<22046ac7-df36-2e2a-759e-b3dd01601c59@gmail.com>
	<2381760.VTJ5BOIlGi@strawberry>
Message-ID: <ee5e672d-9bbb-d7f3-2360-64871fc1b6a5@gmail.com>



On 10/17/2016 7:17 AM, Tom Zander via bitcoin-dev wrote:
> As Marek wrote just minutes before your email came in; companies will not 
> roll out their updates until it locks in. Peter Todd says the same thing.
> So your assumption that the lock-in time is the END of the upgrading is 
> false. Thats only the case for miners.
But again, how does having a longer fallow period make this any safer?
As was mentioned before, a lot of the wallets listed as WIP have code
ready and tested, just not officially released, so not listed as ready.
It doesn't take 2 months to roll out a software update that is already
prepared beforehand.
> The entire point here is that SegWit is much bigger than just full nodes 
> (including miner).
> An entire ecosystem of Bitconin will have a need to upgrade.
>
> I understand people saying that non-miners don't *need* to upgrade in order 
> to avoid being kicked of the network, but truely, thats a bogus argument.
>
> People want to actually participate in Bitcoin and that means they need to 
> understand all of it. Not just see anyone-can-spend transactions.
> I think its rather odd to think that developers on this list can decide
> the risk profile that Bitcoin using companies or individuals should have.
I think it's rather odd that no major Bitcoin companies have raised any
such issues with Segwit and in fact many already have the upgrade in the
works. I think it's rather odd that individuals who are not opposed to
segwit would choose to not upgrade even though it has been actively
discussed for the past year.
> There are a bunch of really large assumptions in there that I disagree with.
> First of all, miners running the latest software doesn't mean the software 
> is free from flaws. Everyone makes mistakes. People that see a way to abuse 
> the system may have found things and are not reporting it because they want 
> to abuse the flaw for their own gains. Which is exactly what happened with 
> Etherium.
While flaws can still be found, unlike the DAO, Segwit has been tested
extensively for a much longer period of time. Waiting any longer isn't
likely to help given that so much testing and review has already been
done. Even so, that is a pointless argument as it is impossible to know
whether waiting a little longer would reveal an issue.
>
> The amount of code and the amount of changes in SegWit makes this a very 
> dangerous change in (of?) Bitcoin. I counted 10 core concepts in Bitcoin 
> being changed with it. We don't yet know how they will interact. We can?t.
Really? How so? It's been active on 4 different segwit specific testnets
and it has been active on the Testnet for the past several months.
People have been spamming segwit transactions and extensively testing
Segwit since its deployment on Testnet. I think we know how segwit
transactions and all aspects of the changes work together as it has been
tested as such for several months now.


From btcdrak at gmail.com  Mon Oct 17 13:27:08 2016
From: btcdrak at gmail.com (Btc Drak)
Date: Mon, 17 Oct 2016 14:27:08 +0100
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <ee5e672d-9bbb-d7f3-2360-64871fc1b6a5@gmail.com>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<7939356.11nSWPlGYM@strawberry>
	<22046ac7-df36-2e2a-759e-b3dd01601c59@gmail.com>
	<2381760.VTJ5BOIlGi@strawberry>
	<ee5e672d-9bbb-d7f3-2360-64871fc1b6a5@gmail.com>
Message-ID: <CADJgMztc7BqsnRMRSx0mKN5zD467phU9HqdnZ6hLQKKx=ByGBg@mail.gmail.com>

This thread has strayed extensively off topic from the OP which asked a
simple question about BIP141 signalling start params.

Please move to another thread, or take more general discussion to
bitcoin-discuss.

Thank you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161017/c9f09fb1/attachment.html>

From jtimon at jtimon.cc  Mon Oct 17 13:31:07 2016
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Mon, 17 Oct 2016 15:31:07 +0200
Subject: [bitcoin-dev] Start time for BIP141 (segwit)
In-Reply-To: <2381760.VTJ5BOIlGi@strawberry>
References: <CAPg+sBjdyJ297-GZvVc-wQwCEX-cRAGTNWDd92SgVzdCcD_ZMw@mail.gmail.com>
	<7939356.11nSWPlGYM@strawberry>
	<22046ac7-df36-2e2a-759e-b3dd01601c59@gmail.com>
	<2381760.VTJ5BOIlGi@strawberry>
Message-ID: <CABm2gDqMf16xp8awXB67UNvu9p-R929Bt2VKEpcLZTxy3AAZ6Q@mail.gmail.com>

On Mon, Oct 17, 2016 at 1:17 PM, Tom Zander via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> You are asking people to create everyone-can-spend transactions that would
> mean a loss of funds to everyone that used it if we do find a major flaw and
> need to rollback.

Please, nobody is asking for this.
Nobody should produce segwit transactions until the softfork is
activated, after which those transactions aren't anyone-can-spend
anymore.
After activation, nobody can be forced to use the new format
immediately (or ever) if they don't want to reduce their tx fees.
Maybe because they want to be additionally cautious or maybe because
they haven't implemented the new features yet.
Either way, it is fine that some people upgrade later since, as
repeated by many, this is a backward compatible change.

From murch at murch.one  Fri Oct 21 14:09:57 2016
From: murch at murch.one (Murch)
Date: Fri, 21 Oct 2016 16:09:57 +0200
Subject: [bitcoin-dev] On-going work: Coin Selection Simulation
In-Reply-To: <3b7ff5e7-9803-27ab-af26-df2c743f53d0@murch.one>
References: <358752cc-48f6-eef8-ae9a-e17a0651ed52@murch.one>
	<1aa41a90-2cc6-36c8-d9c5-67d52befabbe@mycelium.com>
	<3b7ff5e7-9803-27ab-af26-df2c743f53d0@murch.one>
Message-ID: <4cee655d-cd31-a8dd-48a6-e7fe72ae223a@murch.one>

Hello Daniel and others,

A recent version of my Coin Selection Simulator is now available on my
GitHub repository:

https://github.com/Xekyo/CoinSelectionSimulator

Please feel free to write an email or open an issue on GitHub, if you
happen to find errors, have questions about using the simulator, or
(especially!) have interesting results running the simulation on your
own data.

Note that a log and a csv-table with results are posted to the console
by the simulator, so you might want to pipe that somewhere. ;)
There are probably some inefficiency issues, and user experience
improvement opportunities left as I'm currently focusing on my thesis,
yet, I've come to the conclusion that some people might be interested in
taking a look nonetheless even though I haven't gotten around to
polishing the code repository up yet.

Regards
Murch

Am 23.09.2016 um 11:11 schrieb Murch via bitcoin-dev:
> Hi Daniel,
> 
> Thank you for your mail.
> My simulation of the Mycelium coin selection does add small change
> outputs to the fee, but I did get your boundary wrong.
> Instead of the 5460, I dropped at the dust boundary which calculates to
> 4440 in my simulation. Therefore, I think that the results in the table
> might be slightly too big, but likely indicative of the actual Mycelium
> behavior.
> I've corrected the boundary in my simulation now and will update my
> simulation results before Scaling Bitcoin. Thank you very much for your
> correction.
> 
> Sorry, the simulation code has not been published yet, I plan to do that
> around Scaling Bitcoin or after I turn in my thesis (End of October). I
> will let you know when I do.
> 
> It is my understanding that Mycelium doesn't create small change outputs
> but rather hardly ever spends them when received.
> 
> You're probably more familiar with the code base (I think you work for
> Mycelium?), so please correct me when I'm wrong:
> Mycelium appears to select UTXO in a FIFO approach, but, after the
> selection, prunes by removing the smallest selected UTXO until the
> excess beyond the spending target is minimized. This post-selection step
> seems the likely reason for Mycelium's small UTXO build-up. (Bitcoin
> Core intermittenly used post-selection pruning also, and apparently this
> did cause a similar increase in UTXO set size then.)
> 
> I assume that this will also cause Mycelium to create a huge transaction
> every once in a while when this build-up is enough to fund a transaction
> without a bigger UTXO being selected.
> 
> As to how it may be mitigated: BreadWallet uses a very similar FIFO
> approach, but doesn't prune. My simulation result indicates that their
> average UTXO set is much smaller. This has the downside that users could
> be spammed with small transaction outputs that they then would pay for
> spending.
> A balanced approach between these two approaches might be that instead
> of pruning all small inputs, a few of the small inputs could be allowed
> to be selected to slowly drain low-value UTXO out of the wallet by
> spending them over time. In order to avoid the privacy issues such as
> e.g. always spending the oldest UTXO, it would for example be possible
> to implement this as a 75% probability to prune an unnecessary output.
> 
> Regards
> Murch
> 
> Am 22.09.2016 um 11:33 schrieb Daniel Weigl via bitcoin-dev:
>> Hi,
>>
>> Is your simulation code available somewhere?
>>
>> I was just wondering why mycelium generates a very big UTXO set for <1000sat, because change outputs will never be smaller than 
>> 5460sat (=TransactionUtils.MINIMUM_OUTPUT_VALUE). If the change would be lower, it simply is skipped and added to the miner fee:
>> 	-> https://github.com/mycelium-com/wallet/blob/master/public/bitlib/src/main/java/com/mrd/bitlib/StandardTransactionBuilder.java#L334
>>
>> Does your simulation account for that?
>>
>> It might also be that the small UTXO came from external tx and we never spend them, bec. of pruning/privacy. Not sure how we could optimize that.
>>
>> Cheers,
>> Daniel
>>
>> On 2016-09-21 14:58, Murch via bitcoin-dev wrote:
>>> Hi,
>>>
>>> I'm currently compiling my Master's thesis about Coin Selection and my
>>> presentation proposal to Scaling Bitcoin has been accepted.
>>>
>>> For my thesis, I have analyzed the Coin Selection problem, created a
>>> framework to simulate wallet behavior on basis of a sequence of
>>> payments, and have re-implemented multiple coin selection strategies of
>>> prominent Bitcoin wallets (Bitcoin Core, Mycelium, Breadwallet, and
>>> Android Wallet for Bitcoin).
>>>
>>> As the Scaling Bitcoin site suggests that research should be made
>>> available to this mailing list, I would like to invite you to have a
>>> look at:
>>>
>>> http://murch.one/wp-content/uploads/2016/09/CoinSelection.pdf
>>>
>>> The PDF (176 kB) contains a two page description of my on-going work,
>>> including preliminary simulation results, and three figures showing the
>>> simulated wallets' UTXO compositions at the end of the simulation.
>>>
>>> I can provide further information as requested, and would welcome any
>>> feedback.
>>>
>>> ?? If anyone has another sequence of incoming and outgoing payment
>>> amounts at hand that I could run my simulation on, I'd love to hear
>>> about it.
>>>
>>> Regards
>>>
>>> Murch
>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

From jl2012 at xbt.hk  Mon Oct 24 17:37:12 2016
From: jl2012 at xbt.hk (Johnson Lau)
Date: Tue, 25 Oct 2016 01:37:12 +0800
Subject: [bitcoin-dev] Drivechain proposal using OP_COUNT_ACKS
In-Reply-To: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
References: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
Message-ID: <157f7c47e65.afdd12df33806.8370403107286597157@xbt.hk>

Some comments and questions

1. In the BIP you mentioned scriptSig 3 times, but I don't think you are really talking about scriptSig. Especially, segwit has aborted the use of scriptSig to fix malleability. From the context I guess you mean redeemScript (see BIP141)

2. It seems that 51% of miners may steal all money from the peg, right? But I think this is unavoidable for all 2-way-peg proposals. To make it safer you still need notaries.

3. Instead of using a OP_NOPx, I suggest you using an unused code such as 0xba. OP_NOPx should be reserved for some simple "VERIFY"-type codes that does not write to the stack.

4. I don't think you should simply replace "(witversion == 0)" with "((witversion == 0) || (witversion == 1))". There are only 16 available versions. It'd be exhausted very soon if we use a version for every new opcode. As a testing prototype this is fine, but the actual softfork should not waste a witversion this way. We need a better way to coordinate the use of new witness version. BIP114 suggests an additional field in the witness to indicate the script version (https://github.com/bitcoin/bips/blob/master/bip-0114.mediawiki)

5. It seems this is the first BIP in markdown format, not mediawiki (but this is allowed by BIP1)

6. The coinbase space is limited to 100 bytes and is already overloaded by many different purposes. I think any additional consensus critical message should go to a dummy scriptPubKey like the witness commitment. You may consider to  have a new OP_RETURN output like BIP141, with different magic bytes. However, please don't make this output mandatory (cf. witness commitment output is optional if the block does not have witness tx)

6a. "..........due to lack of space to include the proper ack tag in a block": this shouldn't happen if you use a OP_RETURN output

7.  "It can be the case that two different secondary blockchains specify the same transaction candidate, but **at least** one of them will clearly be unauthentic."

8. Question: is an ack-poll valid only for 1 transaction? When the transaction is confirmed, could full nodes prune the corresponding ack-poll data? (I think it has to be prunable after spending because ack-poll data is effectively UTXO data) 

9. No matter how you design a softfork, "Zero risk of invalidating a block" couldn't be true for any softfork. For example, even if a miner does not include any txs with OP_COUNT_ACKS, he may still build on top of blocks with invalid OP_COUNT_ACKS operations.

 ---- On Sun, 02 Oct 2016 23:49:08 +0800 Sergio Demian Lerner via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote ---- 
 > Since ScalingBitcoin is close, I think this is a good moment to publish our proposal on drivechains. This BIP proposed the drivechain we'd like to use in RSK (a.k.a. Rootstock) two-way pegged blockchain and see it implemented in Bitcoin. Until that happens, we're using a federated approach. 
 > I'm sure that adding risk-less Bitcoin extensibility through sidechains/drivechains is what we all want, but it's of maximum importance to decide which technology will leads us there.
 > We hope this work can also be the base of all other new 2-way-pegged blockchains that can take Bitcoin the currency to new niches and test new use cases, but cannot yet be realized because of current limitations/protections.
 > 
 > The full BIP plus a reference implementation can be found here:
 > 
 > BIP (draft):
 > https://github.com/rootstock/bips/blob/master/BIP-R10.md
 > 
 > Code & Test cases:
 > https://github.com/rootstock/bitcoin/tree/op-count-acks_devel
 > (Note: Code is still unaudited)
 > 
 > As a summary, OP_COUNT_ACKS is a new segwit-based and soft-forked opcode that counts acks and nacks tags in coinbase fields, and push the resulting totals in the script stack.
 > 
 > The system was designed with the following properties in mind:
 > 
 > 1. Interoperability with scripting system 
 > 2. Zero risk of invalidating a block
 > 3. No additional computation during blockchain management and re-organization
 > 4. No change in Bitcoin security model
 > 5. Bounded computation of poll results
 > 6. Strong protection from DoS attacks
 > 7. Minimum block space consumption
 > 8. Zero risk of cross-secondary chain invalidation
 > 
 > Please see the BIP draft for a more-detailed explanation on how we achieve these goals.
 > 
 > I'll be in ScalingBitcoin in less than a week and I'll be available to discuss the design rationale, improvements, changes and ideas any of you may have.
 > 
 > Truly yours, 
 > Sergio Demian Lerner
 > Bitcoiner and RSK co-founder
 >  
 >  _______________________________________________ 
 > bitcoin-dev mailing list 
 > bitcoin-dev at lists.linuxfoundation.org 
 > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev 
 > 



From sergio.d.lerner at gmail.com  Tue Oct 25 16:38:59 2016
From: sergio.d.lerner at gmail.com (Sergio Demian Lerner)
Date: Tue, 25 Oct 2016 13:38:59 -0300
Subject: [bitcoin-dev] Drivechain proposal using OP_COUNT_ACKS
In-Reply-To: <157f7c47e65.afdd12df33806.8370403107286597157@xbt.hk>
References: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
	<157f7c47e65.afdd12df33806.8370403107286597157@xbt.hk>
Message-ID: <CAKzdR-pDduY_iLkGJVvux2MkP15T5CSZa6HTTqHPBULYKGNxqA@mail.gmail.com>

Responding between lines...

On Mon, Oct 24, 2016 at 2:37 PM, Johnson Lau <jl2012 at xbt.hk> wrote:

> Some comments and questions
>
> 1. In the BIP you mentioned scriptSig 3 times, but I don't think you are
> really talking about scriptSig. Especially, segwit has aborted the use of
> scriptSig to fix malleability. From the context I guess you mean
> redeemScript (see BIP141)
>

You're right.I will change the naming asap.


>
> 2. It seems that 51% of miners may steal all money from the peg, right?
> But I think this is unavoidable for all 2-way-peg proposals. To make it
> safer you still need notaries.
>

Correct, that's inherently a technical limitation. However, there can be
many deterrents from miners stealing money (legal contracts,
mutual-assured-destruction states). Aslo as you mention, you can combine
OP_COUNT_ACK with notary sigantures as AND/OR or a more complex acknowledge
weight distribution.


>
> 3. Instead of using a OP_NOPx, I suggest you using an unused code such as
> 0xba. OP_NOPx should be reserved for some simple "VERIFY"-type codes that
> does not write to the stack.
>

Ok. I'm not sure, but if everyone agrees to it, I will. Also Segwit
versioning allows to create new opcode multiplexing opcodes, so I was
thinking about adding an "opcode index" to a more generic OP_OPERATE. But
that prevents using all NOP space, but prevents easily counting
OP_ACK_COUNT for checksig block limit.


> 4. I don't think you should simply replace "(witversion == 0)" with
> "((witversion == 0) || (witversion == 1))". There are only 16 available
> versions. It'd be exhausted very soon if we use a version for every new
> opcode. As a testing prototype this is fine, but the actual softfork should
> not waste a witversion this way. We need a better way to coordinate the use
> of new witness version. BIP114 suggests an additional field in the witness
> to indicate the script version (https://github.com/bitcoin/
> bips/blob/master/bip-0114.mediawiki)
>
> Good. But currently that version is not enforced, so this BIP cannot make
use of it. I can use (witversion == 1) but add the BIP114 version field so
that the next BIP can make use of it.



> 5. It seems this is the first BIP in markdown format, not mediawiki (but
> this is allowed by BIP1)
>

> 6. The coinbase space is limited to 100 bytes and is already overloaded by
> many different purposes. I think any additional consensus critical message
> should go to a dummy scriptPubKey like the witness commitment. You may
> consider to  have a new OP_RETURN output like BIP141, with different magic
> bytes. However, please don't make this output mandatory (cf. witness
> commitment output is optional if the block does not have witness tx)
>
> 6a. "..........due to lack of space to include the proper ack tag in a
> block": this shouldn't happen if you use a OP_RETURN output
>
> I'm not sure about this. The fact that the space for acknowledge and
proposal is short has been seen by other developers a benefit and not a
drawback. It prevent hundreds of sidechains to be offered, which might hurt
solo miners. 70 bytes allows for approximately 10 active polls.



> 7.  "It can be the case that two different secondary blockchains specify
> the same transaction candidate, but **at least** one of them will clearly
> be unauthentic."
>
> thnks.

8. Question: is an ack-poll valid only for 1 transaction? When the
> transaction is confirmed, could full nodes prune the corresponding ack-poll
> data? (I think it has to be prunable after spending because ack-poll data
> is effectively UTXO data)
>
> Yes, there is no ack-poll data stored except for the coinbase field cache,
which periodically cleans itself by using a FIFO approach.



> 9. No matter how you design a softfork, "Zero risk of invalidating a
> block" couldn't be true for any softfork. For example, even if a miner does
> not include any txs with OP_COUNT_ACKS, he may still build on top of blocks
> with invalid OP_COUNT_ACKS operations.
>
> I'm not sure. I assumed that transactions redeeming a script using
OP_COUNT_ACKS  would be non-standard, so the the problem you point out
would only happen if the block including the transaction would be mined
specifically for the purpose to defeat subsequent miners. A honest pre-fork
miner would never include a redeemScript that that verifies an
OP_COUNT_ACKS, since that transaction would never be received by the p2p
protocol (it could if the miner accepts non-standard txs by a different
channnel).

But I must check this in the BIP source code if OP_COUNT_ACKS is really
non-standard as I designed it to be.

(Thanks Jonhson Lau for taking the time to analyze the BIP.)

Sergio.



>  ---- On Sun, 02 Oct 2016 23:49:08 +0800 Sergio Demian Lerner via
> bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote ----
>  > Since ScalingBitcoin is close, I think this is a good moment to publish
> our proposal on drivechains. This BIP proposed the drivechain we'd like to
> use in RSK (a.k.a. Rootstock) two-way pegged blockchain and see it
> implemented in Bitcoin. Until that happens, we're using a federated
> approach.
>  > I'm sure that adding risk-less Bitcoin extensibility through
> sidechains/drivechains is what we all want, but it's of maximum importance
> to decide which technology will leads us there.
>  > We hope this work can also be the base of all other new 2-way-pegged
> blockchains that can take Bitcoin the currency to new niches and test new
> use cases, but cannot yet be realized because of current
> limitations/protections.
>  >
>  > The full BIP plus a reference implementation can be found here:
>  >
>  > BIP (draft):
>  > https://github.com/rootstock/bips/blob/master/BIP-R10.md
>  >
>  > Code & Test cases:
>  > https://github.com/rootstock/bitcoin/tree/op-count-acks_devel
>  > (Note: Code is still unaudited)
>  >
>  > As a summary, OP_COUNT_ACKS is a new segwit-based and soft-forked
> opcode that counts acks and nacks tags in coinbase fields, and push the
> resulting totals in the script stack.
>  >
>  > The system was designed with the following properties in mind:
>  >
>  > 1. Interoperability with scripting system
>  > 2. Zero risk of invalidating a block
>  > 3. No additional computation during blockchain management and
> re-organization
>  > 4. No change in Bitcoin security model
>  > 5. Bounded computation of poll results
>  > 6. Strong protection from DoS attacks
>  > 7. Minimum block space consumption
>  > 8. Zero risk of cross-secondary chain invalidation
>  >
>  > Please see the BIP draft for a more-detailed explanation on how we
> achieve these goals.
>  >
>  > I'll be in ScalingBitcoin in less than a week and I'll be available to
> discuss the design rationale, improvements, changes and ideas any of you
> may have.
>  >
>  > Truly yours,
>  > Sergio Demian Lerner
>  > Bitcoiner and RSK co-founder
>  >
>  >  _______________________________________________
>  > bitcoin-dev mailing list
>  > bitcoin-dev at lists.linuxfoundation.org
>  > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>  >
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161025/c738134c/attachment.html>

From jl2012 at xbt.hk  Tue Oct 25 17:45:20 2016
From: jl2012 at xbt.hk (Johnson Lau)
Date: Wed, 26 Oct 2016 01:45:20 +0800
Subject: [bitcoin-dev] Drivechain proposal using OP_COUNT_ACKS
In-Reply-To: <CAKzdR-pDduY_iLkGJVvux2MkP15T5CSZa6HTTqHPBULYKGNxqA@mail.gmail.com>
References: <CAKzdR-rsy1m-H4fYFuCim5+YJi_C2kgjxymM8A7_nEuqsZoO+g@mail.gmail.com>
	<157f7c47e65.afdd12df33806.8370403107286597157@xbt.hk>
	<CAKzdR-pDduY_iLkGJVvux2MkP15T5CSZa6HTTqHPBULYKGNxqA@mail.gmail.com>
Message-ID: <157fcf24e9b.cdc5ade3150218.1244531551655145590@xbt.hk>


 >  3. Instead of using a OP_NOPx, I suggest you using an unused code such as 0xba. OP_NOPx should be reserved for some simple "VERIFY"-type codes that does not write to the stack.
 > 
 > Ok. I'm not sure, but if everyone agrees to it, I will. Also Segwit versioning allows to create new opcode multiplexing opcodes, so I was thinking about adding an "opcode index" to a more generic OP_OPERATE. But that prevents using all NOP space, but prevents easily counting OP_ACK_COUNT for checksig block limit.
 
The other reason not to touch NOPx is they are shared by SIGVERSION_BASE and SIGVERSION_WITNESS_V0. If we later decide to introduce new opcodes to legacy versions, we may still use this space.

And yes, I think you should keep OP_ACT_COUNT easily countable for block sigop limit.

 >  
 >  4. I don't think you should simply replace "(witversion == 0)" with "((witversion == 0) || (witversion == 1))". There are only 16 available versions. It'd be exhausted very soon if we use a version for every new opcode. As a testing prototype this is fine, but the actual softfork should not waste a witversion this way. We need a better way to coordinate the use of new witness version. BIP114 suggests an additional field in the witness to indicate the script version (https://github.com/bitcoin/bips/blob/master/bip-0114.mediawiki)
 >  
 > Good. But currently that version is not enforced, so this BIP cannot make use of it. I can use (witversion == 1) but add the BIP114 version field so that the next BIP can make use of it.
 
Probably BIP114 would never be deployed. I don't know. But I think we should try to move the script version to witness, as it is cheaper. The major witness version could be reserved for some fundamental changes in language.

  
 >  6. The coinbase space is limited to 100 bytes and is already overloaded by many different purposes. I think any additional consensus critical message should go to a dummy scriptPubKey like the witness commitment. You may consider to  have a new OP_RETURN output like BIP141, with different magic bytes. However, please don't make this output mandatory (cf. witness commitment output is optional if the block does not have witness tx)
 >  
 >  6a. "..........due to lack of space to include the proper ack tag in a block": this shouldn't happen if you use a OP_RETURN output
 >  
 > I'm not sure about this. The fact that the space for acknowledge and proposal is short has been seen by other developers a benefit and not a drawback. It prevent hundreds of sidechains to be offered, which might hurt solo miners. 70 bytes allows for approximately 10 active polls.

That's 1 active poll per minute on average, which sounds very small if it ever gets really popular. Have you made any forecast? I could foresee people have to bid for the coinbase space for their ack-poll, and they will yell at the devs asking for more poll space (well.....)

We used an OP_RETURN output for segwit as some miners wanted to retain the coinbase space for other purpose like advertisement.  Even if you want to set an artificial limit, you could still use an OP_RETURN output. It just means you will need a OP_COUNT_ACKS2 softfork when you want to expand the space.  Since polls are not fixed size, if an artificial limit is desired, maybe it makes more sense to limit the number of polls, instead of number of bytes.


 >  8. Question: is an ack-poll valid only for 1 transaction? When the transaction is confirmed, could full nodes prune the corresponding ack-poll data? (I think it has to be prunable after spending because ack-poll data is effectively UTXO data)
 >  
 > Yes, there is no ack-poll data stored except for the coinbase field cache, which periodically cleans itself by using a FIFO approach.
 
If the target tx of a ack-poll is never confirmed on the blockchain, I guess you need to keep the data of the poll forever?  It's like creating an unspendable and unprunable UTXO (just want you to clarify. People are spamming the UTXO already so your proposal won't make it worse anyway)
 
 >   9. No matter how you design a softfork, "Zero risk of invalidating a block" couldn't be true for any softfork. For example, even if a miner does not include any txs with OP_COUNT_ACKS, he may still build on top of blocks with invalid OP_COUNT_ACKS operations.
 >  
 > I'm not sure. I assumed that transactions redeeming a script using OP_COUNT_ACKS  would be non-standard, so the the problem you point out would only happen if the block including the transaction would be mined specifically for the purpose to defeat subsequent miners. A honest pre-fork miner would never include a redeemScript that that verifies an OP_COUNT_ACKS, since that transaction would never be received by the p2p protocol (it could if the miner accepts non-standard txs by a different channnel).   
 > 
 > But I must check this in the BIP source code if OP_COUNT_ACKS is really non-standard as I designed it to be.
 
It must be non-standard because witversion != 0 are non-standard already. I mean, you proposal is probably as safe as OP_CSV, but no one sold OP_CSV as "zero risk".

Johnson


From lf-lists at mattcorallo.com  Tue Oct 25 17:47:37 2016
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Tue, 25 Oct 2016 17:47:37 +0000
Subject: [bitcoin-dev] Bitcoin Core 0.13.1 release candidate 3
Message-ID: <580F9AB9.8010907@mattcorallo.com>

Due to a relatively trivial fix for an out-of-place assertion in rc2
(see
https://github.com/bitcoin/bitcoin/commit/58d4fa7da30cb57e5fc3dca62f49a64e126c76cd),
0.13.1rc3 was tagged and is now available on github either via git or at
https://github.com/bitcoin/bitcoin/releases/tag/v0.13.1rc3.

Because of the simplicity of the change, it was decided that 0.13.1
should not be delayed as a result, and thus no official binaries will be
made available for rc3.

However, any additional testing which folks have time for before final
tag on Thursday would be significantly welcomed.

As usual please report bugs using the issue tracker on github at
https://github.com/bitcoin/bitcoin/issues

Thanks,
Matt

From onelineproof at gmail.com  Thu Oct 27 15:38:17 2016
From: onelineproof at gmail.com (Andrew)
Date: Thu, 27 Oct 2016 15:38:17 +0000
Subject: [bitcoin-dev] The Soft Fork Deception
Message-ID: <CAL8tG=mfRHidipraCbG7m6V18khf_czWbe=zZN7F6=Ksdae8AQ@mail.gmail.com>

I have been reading recently through the history of soft forks provided by
Bitcoin Core:
https://bitcoin.stackexchange.com/questions/43538/where-can-i-find-a-record-of-blockchain-soft-forks
.

It has led me to think that there is a deceiving notion that soft forks do
not force Bitcoin users to upgrade software. Yes, it's true that the past
soft forks still allow old nodes to accept blocks under the tighter rules
as valid, but what about miners who are still using old software? What
about users who want to make a transaction using the old rules? Those
people are no longer able to do those things. And if they want to do those
things, a hard fork will result.

Remember what happened when BIP 66 was activated? Luckily, it was short
lived, but this is just the beginning. If you keep tightening the rules,
you are building up more and more pressure for a split in the network to
occur. You can call this split a "hard fork" or just a "fork", but it is
dangerous either way, and it leads to basically the creation of two coins
when before we just had one, people instantly lose value, and the trust in
Bitcoin's store of value dies.

Obviously every one can debate about what should be the definition of a
soft fork, but whatever that is, I think it is unacceptable how sloppily
the past soft forks have been deployed. I can think of many ways in which
we could have these new features that the soft forks provided, but without
forcing the new rules, and simply making them features that can be used on
an individual miner or transaction signer basis. Is there a document from
Bitcoin Core that outlines the philosophy of soft forks and why it is
acceptable to force the tightening of rules and cause such risks? And
please give me another reason other than "it removes a few if statements
from the code".

Now that Segregated witness is scheduled to be deployed on November 15, we
should take a look at this "soft fork" as well. I like the idea of
Segregated Witness, but from conversations on Reddit and IRC, I see people
saying that this soft fork will be like the others: requiring a hard fork
in order to revert it. Is this true? I am getting conflicting messages by
reading the BIP. It says that if all transactions are non-segwit, then a
node will validate the block as before. But if we pass the threshhold
(usually 95 % for 1000 blocks) will miners mining non-segwit blocks be
ignored? This is not good... I really think we should make it optional.
Miners will have an incentive to mine segwit blocks, since it allows for
more transactions per block, so why force them? What if we want to slightly
modify the Segwit protocol in the future? What if we want to replace segwit
with something much different? We will be forced to do a hard fork in order
to do that.

Now, we can't go back in time and fix the deployment of the soft forks, but
I do propose one clean way to fix things: Remove all the previously "soft
forked" rules for non segwit transactions, and require them only for segwit
transactions. But make segwit optional! In addition to what I talked about
above, this may also relieve some tensions of people who are not
comfortable with segwit and are thinking of joining a hard fork like the
Bitcoin Unlimited project.

Unless people can give me a good explanation as to why we are deploying
soft forks in such forceful manner, or Bitcoin Core accepts my proposal,
then I will have no choice but to create a new client (I'm thinking to call
it Bitcoin Authentic), that will be just as Bitcoin Core but will always
follow the chain with the most work regardless of whether soft fork rules
are respected, and I would put at least CHECKLOCKTIMEVERIFY as mandatory
within segwit transactions.

-- 
PGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161027/5d5cc827/attachment.html>

From joroark at vt.edu  Thu Oct 27 16:22:14 2016
From: joroark at vt.edu (Douglas Roark)
Date: Thu, 27 Oct 2016 09:22:14 -0700
Subject: [bitcoin-dev] The Soft Fork Deception
In-Reply-To: <CAL8tG=mfRHidipraCbG7m6V18khf_czWbe=zZN7F6=Ksdae8AQ@mail.gmail.com>
References: <CAL8tG=mfRHidipraCbG7m6V18khf_czWbe=zZN7F6=Ksdae8AQ@mail.gmail.com>
Message-ID: <25040902-d057-8b58-b268-55b2b4579017@vt.edu>

Am attempting to move this over to bitcoin-discuss, as this (IMO) isn't
appropriate for dev and is borderline trolling. I won't be replying on
dev beyond this reply. I'll also try to keep this reply technical in
nature. (If this continues on discuss, no promises. :) )

On 2016/10/27 08:38, Andrew via bitcoin-dev wrote:
> I have been reading recently through the history of soft forks provided
> by Bitcoin Core:
> https://bitcoin.stackexchange.com/questions/43538/where-can-i-find-a-record-of-blockchain-soft-forks.

That list is incomplete.
https://www.reddit.com/r/Bitcoin/comments/2y4mq2/list_of_soft_and_hard_forks/cp68q4q/
is closer to the reality of the situation and is probably still incomplete.

> It has led me to think that there is a deceiving notion that soft forks
> do not force Bitcoin users to upgrade software. Yes, it's true that the
> past soft forks still allow old nodes to accept blocks under the tighter
> rules as valid, but what about miners who are still using old software?
> What about users who want to make a transaction using the old rules?
> Those people are no longer able to do those things. And if they want to
> do those things, a hard fork will result.

I don't see a particularly strong movement rallying for the right to use
sigs without strict DER, previously NOP opcodes that now do something,
etc. I'd imagine that a soft fork that "truly" forced people to do
things they didn't want would be much more controversial than SegWit.

> Remember what happened when BIP 66 was activated?

What, you mean miners who were deploying cheap hacks in order to eke out
a bit more hashpower? They got what they deserved.

> Obviously every one can debate about what should be the definition of a
> soft fork, but whatever that is, I think it is unacceptable how sloppily
> the past soft forks have been deployed. I can think of many ways in
> which we could have these new features that the soft forks provided, but
> without forcing the new rules, and simply making them features that can
> be used on an individual miner or transaction signer basis.

Well then, lay it on us. If your idea is so great, people will come
around to it eventually. As is, the only thing I can see is a load of
switches that would cause the code to act in all manner of weird ways.
New features would have to plan for every single possible use case,
including bizarre use cases that should have no basis in reality.
Congratulations. New feature deployment is now far more complicated, and
Bitcoin, depending on one's viewpoint, will become further stuck in the
mud feature-wise.

> Now that Segregated witness is scheduled to be deployed on November 15,
> we should take a look at this "soft fork" as well. I like the idea of
> Segregated Witness, but from conversations on Reddit and IRC, I see
> people saying that this soft fork will be like the others: requiring a
> hard fork in order to revert it. Is this true? I am getting conflicting
> messages by reading the BIP. It says that if all transactions are
> non-segwit, then a node will validate the block as before. But if we
> pass the threshhold (usually 95 % for 1000 blocks) will miners mining
> non-segwit blocks be ignored? This is not good...

I'd imagine that, if a block has zero SegWit Txes, everything will
function as it did before. It's not like SegWit forces everyone to use
SegWit when sending coins. It's just an optional method for sending coins.

> Now, we can't go back in time and fix the deployment of the soft forks,
> but I do propose one clean way to fix things: Remove all the previously
> "soft forked" rules for non segwit transactions, and require them only
> for segwit transactions. But make segwit optional! In addition to what I
> talked about above, this may also relieve some tensions of people who
> are not comfortable with segwit and are thinking of joining a hard fork
> like the Bitcoin Unlimited project.

Can you clearly define all the rules that you will remove? Are you going
to include things like the original OP_VER opcode (see
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/011938.html
for why this would be, IMO, a bad idea)? What about the multi-byte
opcodes (e.g., OP_PUBKEYHASH), which were hard forked off the network
but were technically soft forks since nobody had actually used them on
the network?

> Unless people can give me a good explanation as to why we are deploying
> soft forks in such forceful manner, or Bitcoin Core accepts my proposal,
> then I will have no choice but to create a new client (I'm thinking to
> call it Bitcoin Authentic), that will be just as Bitcoin Core but will
> always follow the chain with the most work regardless of whether soft
> fork rules are respected, and I would put at least CHECKLOCKTIMEVERIFY
> as mandatory within segwit transactions.

If you're going to create yet another Core fork, you'd better be sure to
define just how "authentic" you want to be. I'm guessing you don't want
the overflow output Tx fix (i.e., "the 92 billion Bitcoin bug") removed,
but that one was arguably a soft fork too. Sure, Satoshi committed it
and didn't even give the miners a chance to vote, but he still "forced"
everyone to deploy it. If freedom ?ber alles is what you seek, you'll
need to revert just about everything Satoshi included too, which will be
difficult since a lot of his fixes have been drastically changed in the
code (albeit in a manner where they still function as intended).

-- 
---
Douglas Roark
Cryptocurrency, network security, travel, and art.
https://onename.com/droark
joroark at vt.edu
PGP key ID: 26623924

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161027/bf440693/attachment.sig>

From laanwj at gmail.com  Thu Oct 27 18:42:35 2016
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Thu, 27 Oct 2016 20:42:35 +0200
Subject: [bitcoin-dev] Bitcoin Core 0.13.1 released
Message-ID: <20161027184235.GA30297@amethyst.visucore.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Bitcoin Core version 0.13.1 is now available from:

  <https://bitcoin.org/bin/bitcoin-core-0.13.1/>

Or through bittorrent:

  magnet:?xt=urn:btih:dbe48c446b1113890644bbef03e361269f69c49a&dn=bitcoin-core-0.13.1&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.publicbt.com%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.ccc.de%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&ws=https%3A%2F%2Fbitcoin.org%2Fbin%2F

This is a new minor version release, including activation parameters for the
segwit softfork, various bugfixes and performance improvements, as well as
updated translations.

Please report bugs using the issue tracker at github:

  <https://github.com/bitcoin/bitcoin/issues>

To receive security and update notifications, please subscribe to:

  <https://bitcoincore.org/en/list/announcements/join/>

Compatibility
==============

Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),
an OS initially released in 2001. This means that not even critical security
updates will be released anymore. Without security updates, using a bitcoin
wallet on a XP machine is irresponsible at least.

In addition to that, with 0.12.x there have been varied reports of Bitcoin Core
randomly crashing on Windows XP. It is [not clear](https://github.com/bitcoin/bitcoin/issues/7681#issuecomment-217439891)
what the source of these crashes is, but it is likely that upstream
libraries such as Qt are no longer being tested on XP.

We do not have time nor resources to provide support for an OS that is
end-of-life. From 0.13.0 on, Windows XP is no longer supported. Users are
suggested to upgrade to a newer version of Windows, or install an alternative OS
that is supported.

No attempt is made to prevent installing or running the software on Windows XP,
you can still do so at your own risk, but do not expect it to work: do not
report issues about Windows XP to the issue tracker.

- From 0.13.1 onwards OS X 10.7 is no longer supported. 0.13.0 was intended to work on 10.7+, 
but severe issues with the libc++ version on 10.7.x keep it from running reliably. 
0.13.1 now requires 10.8+, and will communicate that to 10.7 users, rather than crashing unexpectedly.

Notable changes
===============

Segregated witness soft fork
- ----------------------------

Segregated witness (segwit) is a soft fork that, if activated, will
allow transaction-producing software to separate (segregate) transaction
signatures (witnesses) from the part of the data in a transaction that is
covered by the txid. This provides several immediate benefits:

- - **Elimination of unwanted transaction malleability:** Segregating the witness
  allows both existing and upgraded software to calculate the transaction
  identifier (txid) of transactions without referencing the witness, which can
  sometimes be changed by third-parties (such as miners) or by co-signers in a
  multisig spend. This solves all known cases of unwanted transaction
  malleability, which is a problem that makes programming Bitcoin wallet
  software more difficult and which seriously complicates the design of smart
  contracts for Bitcoin.

- - **Capacity increase:** Segwit transactions contain new fields that are not
  part of the data currently used to calculate the size of a block, which
  allows a block containing segwit transactions to hold more data than allowed
  by the current maximum block size. Estimates based on the transactions
  currently found in blocks indicate that if all wallets switch to using
  segwit, the network will be able to support about 70% more transactions. The
  network will also be able to support more of the advanced-style payments
  (such as multisig) than it can support now because of the different weighting
  given to different parts of a transaction after segwit activates (see the
  following section for details).

- - **Weighting data based on how it affects node performance:** Some parts of
  each Bitcoin block need to be stored by nodes in order to validate future
  blocks; other parts of a block can be immediately forgotten (pruned) or used
  only for helping other nodes sync their copy of the block chain.  One large
  part of the immediately prunable data are transaction signatures (witnesses),
  and segwit makes it possible to give a different "weight" to segregated
  witnesses to correspond with the lower demands they place on node resources.
  Specifically, each byte of a segregated witness is given a weight of 1, each
  other byte in a block is given a weight of 4, and the maximum allowed weight
  of a block is 4 million.  Weighting the data this way better aligns the most
  profitable strategy for creating blocks with the long-term costs of block
  validation.

- - **Signature covers value:** A simple improvement in the way signatures are
  generated in segwit simplifies the design of secure signature generators
  (such as hardware wallets), reduces the amount of data the signature
  generator needs to download, and allows the signature generator to operate
  more quickly.  This is made possible by having the generator sign the amount
  of bitcoins they think they are spending, and by having full nodes refuse to
  accept those signatures unless the amount of bitcoins being spent is exactly
  the same as was signed.  For non-segwit transactions, wallets instead had to
  download the complete previous transactions being spent for every payment
  they made, which could be a slow operation on hardware wallets and in other
  situations where bandwidth or computation speed was constrained.

- - **Linear scaling of sighash operations:** In 2015 a block was produced that
  required about 25 seconds to validate on modern hardware because of the way
  transaction signature hashes are performed.  Other similar blocks, or blocks
  that could take even longer to validate, can still be produced today.  The
  problem that caused this can't be fixed in a soft fork without unwanted
  side-effects, but transactions that opt-in to using segwit will now use a
  different signature method that doesn't suffer from this problem and doesn't
  have any unwanted side-effects.

- - **Increased security for multisig:** Bitcoin addresses (both P2PKH addresses
  that start with a '1' and P2SH addresses that start with a '3') use a hash
  function known as RIPEMD-160.  For P2PKH addresses, this provides about 160
  bits of security---which is beyond what cryptographers believe can be broken
  today.  But because P2SH is more flexible, only about 80 bits of security is
  provided per address. Although 80 bits is very strong security, it is within
  the realm of possibility that it can be broken by a powerful adversary.
  Segwit allows advanced transactions to use the SHA256 hash function instead,
  which provides about 128 bits of security  (that is 281 trillion times as
  much security as 80 bits and is equivalent to the maximum bits of security
  believed to be provided by Bitcoin's choice of parameters for its Elliptic
  Curve Digital Security Algorithm [ECDSA].)

- - **More efficient almost-full-node security** Satoshi Nakamoto's original
  Bitcoin paper describes a method for allowing newly-started full nodes to
  skip downloading and validating some data from historic blocks that are
  protected by large amounts of proof of work.  Unfortunately, Nakamoto's
  method can't guarantee that a newly-started node using this method will
  produce an accurate copy of Bitcoin's current ledger (called the UTXO set),
  making the node vulnerable to falling out of consensus with other nodes.
  Although the problems with Nakamoto's method can't be fixed in a soft fork,
  Segwit accomplishes something similar to his original proposal: it makes it
  possible for a node to optionally skip downloading some blockchain data
  (specifically, the segregated witnesses) while still ensuring that the node
  can build an accurate copy of the UTXO set for the block chain with the most
  proof of work.  Segwit enables this capability at the consensus layer, but
  note that Bitcoin Core does not provide an option to use this capability as
  of this 0.13.1 release.

- - **Script versioning:** Segwit makes it easy for future soft forks to allow
  Bitcoin users to individually opt-in to almost any change in the Bitcoin
  Script language when those users receive new transactions.  Features
  currently being researched by Bitcoin Core contributors that may use this
  capability include support for Schnorr signatures, which can improve the
  privacy and efficiency of multisig transactions (or transactions with
  multiple inputs), and Merklized Abstract Syntax Trees (MAST), which can
  improve the privacy and efficiency of scripts with two or more conditions.
  Other Bitcoin community members are studying several other improvements
  that can be made using script versioning.

Activation for the segwit soft fork is being managed using BIP9
versionbits.  Segwit's version bit is bit 1, and nodes will begin
tracking which blocks signal support for segwit at the beginning of the
first retarget period after segwit's start date of 15 November 2016.  If
95% of blocks within a 2,016-block retarget period (about two weeks)
signal support for segwit, the soft fork will be locked in.  After
another 2,016 blocks, segwit will activate.

For more information about segwit, please see the [segwit FAQ][], the
[segwit wallet developers guide][] or BIPs [141][BIP141], [143][BIP143],
[144][BIP144], and [145][BIP145].  If you're a miner or mining pool
operator, please see the [versionbits FAQ][] for information about
signaling support for a soft fork.

[Segwit FAQ]: https://bitcoincore.org/en/2016/01/26/segwit-benefits/
[segwit wallet developers guide]: https://bitcoincore.org/en/segwit_wallet_dev/
[BIP141]: https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki
[BIP143]: https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki
[BIP144]: https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki
[BIP145]: https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki
[versionbits FAQ]: https://bitcoincore.org/en/2016/06/08/version-bits-miners-faq/


Null dummy soft fork
- -------------------

Combined with the segwit soft fork is an additional change that turns a
long-existing network relay policy into a consensus rule. The
`OP_CHECKMULTISIG` and `OP_CHECKMULTISIGVERIFY` opcodes consume an extra
stack element ("dummy element") after signature validation. The dummy
element is not inspected in any manner, and could be replaced by any
value without invalidating the script.

Because any value can be used for this dummy element, it's possible for
a third-party to insert data into other people's transactions, changing
the transaction's txid (called transaction malleability) and possibly
causing other problems.

Since Bitcoin Core 0.10.0, nodes have defaulted to only relaying and
mining transactions whose dummy element was a null value (0x00, also
called OP_0).  The null dummy soft fork turns this relay rule into a
consensus rule both for non-segwit transactions and segwit transactions,
so that this method of mutating transactions is permanently eliminated
from the network.

Signaling for the null dummy soft fork is done by signaling support
for segwit, and the null dummy soft fork will activate at the same time
as segwit.

For more information, please see [BIP147][].

[BIP147]: https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki

Low-level RPC changes
- ---------------------

- - `importprunedfunds` only accepts two required arguments. Some versions accept
  an optional third arg, which was always ignored. Make sure to never pass more
  than two arguments.


Linux ARM builds
- ----------------

With the 0.13.0 release, pre-built Linux ARM binaries were added to the set of
uploaded executables. Additional detail on the ARM architecture targeted by each
is provided below.

The following extra files can be found in the download directory or torrent:

- - `bitcoin-${VERSION}-arm-linux-gnueabihf.tar.gz`: Linux binaries targeting
  the 32-bit ARMv7-A architecture.
- - `bitcoin-${VERSION}-aarch64-linux-gnu.tar.gz`: Linux binaries targeting
  the 64-bit ARMv8-A architecture.

ARM builds are still experimental. If you have problems on a certain device or
Linux distribution combination please report them on the bug tracker, it may be
possible to resolve them. Note that the device you use must be (backward)
compatible with the architecture targeted by the binary that you use.
For example, a Raspberry Pi 2 Model B or Raspberry Pi 3 Model B (in its 32-bit
execution state) device, can run the 32-bit ARMv7-A targeted binary. However,
no model of Raspberry Pi 1 device can run either binary because they are all
ARMv6 architecture devices that are not compatible with ARMv7-A or ARMv8-A.

Note that Android is not considered ARM Linux in this context. The executables
are not expected to work out of the box on Android.


0.13.1 Change log
=================

Detailed release notes follow. This overview includes changes that affect
behavior, not code moves, refactors and string updates. For convenience in locating
the code changes and accompanying discussion, both the pull request and
git merge commit are mentioned.

### Consensus
- - #8636 `9dfa0c8` Implement NULLDUMMY softfork (BIP147) (jl2012)
- - #8848 `7a34a46` Add NULLDUMMY verify flag in bitcoinconsensus.h (jl2012)
- - #8937 `8b66659` Define start and end time for segwit deployment (sipa)

### RPC and other APIs
- - #8581 `526d2b0` Drop misleading option in importprunedfunds (MarcoFalke)
- - #8699 `a5ec248` Remove createwitnessaddress RPC command (jl2012)
- - #8780 `794b007` Deprecate getinfo (MarcoFalke)
- - #8832 `83ad563` Throw JSONRPCError when utxo set can not be read (MarcoFalke)
- - #8884 `b987348` getblockchaininfo help: pruneheight is the lowest, not highest, block (luke-jr)
- - #8858 `3f508ed` rpc: Generate auth cookie in hex instead of base64 (laanwj)
- - #8951 `7c2bf4b` RPC/Mining: getblocktemplate: Update and fix formatting of help (luke-jr)

### Block and transaction handling
- - #8611 `a9429ca` Reduce default number of blocks to check at startup (sipa)
- - #8634 `3e80ab7` Add policy: null signature for failed CHECK(MULTI)SIG (jl2012)
- - #8525 `1672225` Do not store witness txn in rejection cache (sipa)
- - #8499 `9777fe1` Add several policy limits and disable uncompressed keys for segwit scripts (jl2012)
- - #8526 `0027672` Make non-minimal OP_IF/NOTIF argument non-standard for P2WSH (jl2012)
- - #8524 `b8c79a0` Precompute sighashes (sipa)
- - #8651 `b8c79a0` Predeclare PrecomputedTransactionData as struct (sipa)

### P2P protocol and network code
- - #8740 `42ea51a` No longer send local address in addrMe (laanwj)
- - #8427 `69d1cd2` Ignore `notfound` P2P messages (laanwj)
- - #8573 `4f84082` Set jonasschnellis dns-seeder filter flag (jonasschnelli)
- - #8712 `23feab1` Remove maxuploadtargets recommended minimum (jonasschnelli)
- - #8862 `7ae6242` Fix a few cases where messages were sent after requested disconnect (theuni)
- - #8393 `fe1975a` Support for compact blocks together with segwit (sipa)
- - #8282 `2611ad7` Feeler connections to increase online addrs in the tried table (EthanHeilman)
- - #8612 `2215c22` Check for compatibility with download in FindNextBlocksToDownload (sipa)
- - #8606 `bbf379b` Fix some locks (sipa)
- - #8594 `ab295bb` Do not add random inbound peers to addrman (gmaxwell)
- - #8940 `5b4192b` Add x9 service bit support to dnsseed.bluematt.me, seed.bitcoinstats.com (TheBlueMatt, cdecker)
- - #8944 `685e4c7` Remove bogus assert on number of oubound connections. (TheBlueMatt)
- - #8949 `0dbc48a` Be more agressive in getting connections to peers with relevant services (gmaxwell)

### Build system
- - #8293 `fa5b249` Allow building libbitcoinconsensus without any univalue (luke-jr)
- - #8492 `8b0bdd3` Allow building bench_bitcoin by itself (luke-jr)
- - #8563 `147003c` Add configure check for -latomic (ajtowns)
- - #8626 `ea51b0f` Berkeley DB v6 compatibility fix (netsafe)
- - #8520 `75f2065` Remove check for `openssl/ec.h` (laanwj)

### GUI
- - #8481 `d9f0d4e` Fix minimize and close bugs (adlawren)
- - #8487 `a37cec5` Persist the datadir after option reset (achow101)
- - #8697 `41fd852` Fix op order to append first alert (rodasmith)
- - #8678 `8e03382` Fix UI bug that could result in paying unexpected fee (jonasschnelli)
- - #8911 `7634d8e` Translate all files, even if wallet disabled (laanwj)
- - #8540 `1db3352` Fix random segfault when closing "Choose data directory" dialog (laanwj)
- - #7579 `f1c0d78` Show network/chain errors in the GUI (jonasschnelli)

### Wallet
- - #8443 `464dedd` Trivial cleanup of HD wallet changes (jonasschnelli)
- - #8539 `cb07f19` CDB: fix debug output (crowning-)
- - #8664 `091cdeb` Fix segwit-related wallet bug (sdaftuar)
- - #8693 `c6a6291` Add witness address to address book (instagibbs)
- - #8765 `6288659` Remove "unused" ThreadFlushWalletDB from removeprunedfunds (jonasschnelli)

### Tests and QA
- - #8713 `ae8c7df` create_cache: Delete temp dir when done (MarcoFalke)
- - #8716 `e34374e` Check legacy wallet as well (MarcoFalke)
- - #8750 `d6ebe13` Refactor RPCTestHandler to prevent TimeoutExpired (MarcoFalke)
- - #8652 `63462c2` remove root test directory for RPC tests (yurizhykin)
- - #8724 `da94272` walletbackup: Sync blocks inside the loop (MarcoFalke)
- - #8400 `bea02dc` enable rpcbind_test (yurizhykin)
- - #8417 `f70be14` Add walletdump RPC test (including HD- & encryption-tests) (jonasschnelli)
- - #8419 `a7aa3cc` Enable size accounting in mining unit tests (sdaftuar)
- - #8442 `8bb1efd` Rework hd wallet dump test (MarcoFalke)
- - #8528 `3606b6b` Update p2p-segwit.py to reflect correct behavior (instagibbs)
- - #8531 `a27cdd8` abandonconflict: Use assert_equal (MarcoFalke)
- - #8667 `6b07362` Fix SIGHASH_SINGLE bug in test_framework SignatureHash (jl2012)
- - #8673 `03b0196` Fix obvious assignment/equality error in test (JeremyRubin)
- - #8739 `cef633c` Fix broken sendcmpct test in p2p-compactblocks.py (sdaftuar)
- - #8418 `ff893aa` Add tests for compact blocks (sdaftuar)
- - #8803 `375437c` Ping regularly in p2p-segwit.py to keep connection alive (jl2012)
- - #8827 `9bbe66e` Split up slow RPC calls to avoid pruning test timeouts (sdaftuar)
- - #8829 `2a8bca4` Add bitcoin-tx JSON tests (jnewbery)
- - #8834 `1dd1783` blockstore: Switch to dumb dbm (MarcoFalke)
- - #8835 `d87227d` nulldummy.py: Don't run unused code (MarcoFalke)
- - #8836 `eb18cc1` bitcoin-util-test.py should fail if the output file is empty (jnewbery)
- - #8839 `31ab2f8` Avoid ConnectionResetErrors during RPC tests (laanwj)
- - #8840 `cbc3fe5` Explicitly set encoding to utf8 when opening text files (laanwj)
- - #8841 `3e4abb5` Fix nulldummy test (jl2012)
- - #8854 `624a007` Fix race condition in p2p-compactblocks test (sdaftuar)
- - #8857 `1f60d45` mininode: Only allow named args in wait_until (MarcoFalke)
- - #8860 `0bee740` util: Move wait_bitcoinds() into stop_nodes() (MarcoFalke)
- - #8882 `b73f065` Fix race conditions in p2p-compactblocks.py and sendheaders.py (sdaftuar)
- - #8904 `cc6f551` Fix compact block shortids for a test case (dagurval)

### Documentation
- - #8754 `0e2c6bd` Target protobuf 2.6 in OS X build notes. (fanquake)
- - #8461 `b17a3f9` Document return value of networkhashps for getmininginfo RPC endpoint (jlopp)
- - #8512 `156e305` Corrected JSON typo on setban of net.cpp (sevastos)
- - #8683 `8a7d7ff` Fix incorrect file name bitcoin.qrc  (bitcoinsSG)
- - #8891 `5e0dd9e` Update bips.md for Segregated Witness (fanquake)
- - #8545 `863ae74` Update git-subtree-check.sh README (MarcoFalke)
- - #8607 `486650a` Fix doxygen off-by-one comments, fix typos (MarcoFalke)
- - #8560 `c493f43` Fix two VarInt examples in serialize.h (cbarcenas)
- - #8737 `084cae9` UndoReadFromDisk works on undo files (rev), not on block files (paveljanik)
- - #8625 `0a35573` Clarify statement about parallel jobs in rpc-tests.py (isle2983)
- - #8624 `0e6d753` build: Mention curl (MarcoFalke)
- - #8604 `b09e13c` build,doc: Update for 0.13.0+ and OpenBSD 5.9 (laanwj)
- - #8939 `06d15fb` Update implemented bips for 0.13.1 (sipa)

### Miscellaneous
- - #8742 `d31ac72` Specify Protobuf version 2 in paymentrequest.proto (fanquake)
- - #8414,#8558,#8676,#8700,#8701,#8702 Add missing copyright headers (isle2983, kazcw)
- - #8899 `4ed2627` Fix wake from sleep issue with Boost 1.59.0 (fanquake)
- - #8817 `bcf3806` update bitcoin-tx to output witness data (jnewbery)
- - #8513 `4e5fc31` Fix a type error that would not compile on OSX. (JeremyRubin)
- - #8392 `30eac2d` Fix several node initialization issues (sipa)
- - #8548 `305d8ac` Use `__func__` to get function name for output printing (MarcoFalke)
- - #8291 `a987431` [util] CopyrightHolders: Check for untranslated substitution (MarcoFalke)

Credits
=======

Thanks to everyone who directly contributed to this release:

- - adlawren
- - Alexey Vesnin
- - Anders ?yvind Urke-S?tre
- - Andrew Chow
- - Anthony Towns
- - BtcDrak
- - Chris Stewart
- - Christian Barcenas
- - Christian Decker
- - Cory Fields
- - crowning-
- - Dagur Valberg Johannsson
- - David A. Harding
- - Eric Lombrozo
- - Ethan Heilman
- - fanquake
- - Gaurav Rana
- - Gregory Maxwell
- - instagibbs
- - isle2983
- - Jameson Lopp
- - Jeremy Rubin
- - jnewbery
- - Johnson Lau
- - Jonas Schnelli
- - jonnynewbs
- - Justin Camarena
- - Kaz Wesley
- - leijurv
- - Luke Dashjr
- - MarcoFalke
- - Marty Jones
- - Matt Corallo
- - Micha
- - Michael Ford
- - mruddy
- - Pavel Jan?k
- - Pieter Wuille
- - rodasmith
- - Sev
- - Suhas Daftuar
- - whythat
- - Wladimir J. van der Laan

As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBCgAGBQJYEkpHAAoJEHSBCwEjRsmmgEAH+gNUut+ywWNWp0B13+gHch2s
/d/4OzTQNKAERRCniL9BMh/MEFAK7xDYXcDkQyj9uNS/+G9EhXNysjWEt8aftd/p
HBhzWkGHO5WPSvYtBr6/0k/z3KCNDPrXybMf5x0e5P241S8ufKcqYVEspPUzezMb
aoco+Vr0XePAvCXTo3MPNTjcEFOQ7gHu/NOWC1glgPQp+krNkOjYGbtgwDwbKVIx
kLbi+40+wRQUTLR/fSqs0F/5vjbQ2JCuEREWasxQiTuHDW+6HlcgGnx0AXQyPLo5
p7BkSFAJpHG5ipqKNcymEGcFhcfWXhx/7DfYaBS1ugWQEJlQVk0jn7+cxSzyYAQ=
=vk0C
-----END PGP SIGNATURE-----

From achow101 at gmail.com  Fri Oct 28 15:28:35 2016
From: achow101 at gmail.com (Andrew C)
Date: Fri, 28 Oct 2016 11:28:35 -0400
Subject: [bitcoin-dev] The Soft Fork Deception
In-Reply-To: <CAL8tG=mfRHidipraCbG7m6V18khf_czWbe=zZN7F6=Ksdae8AQ@mail.gmail.com>
References: <CAL8tG=mfRHidipraCbG7m6V18khf_czWbe=zZN7F6=Ksdae8AQ@mail.gmail.com>
Message-ID: <7991eb2d-015c-cedc-518c-988821a2d03f@gmail.com>


On 10/27/2016 11:38 AM, Andrew via bitcoin-dev wrote:
> I have been reading recently through the history of soft forks
> provided by Bitcoin Core:
> https://bitcoin.stackexchange.com/questions/43538/where-can-i-find-a-record-of-blockchain-soft-forks.
>
> It has led me to think that there is a deceiving notion that soft
> forks do not force Bitcoin users to upgrade software. Yes, it's true
> that the past soft forks still allow old nodes to accept blocks under
> the tighter rules as valid, but what about miners who are still using
> old software? What about users who want to make a transaction using
> the old rules? Those people are no longer able to do those things. And
> if they want to do those things, a hard fork will result.
A soft fork means that a transaction using the old rules will still
work. Look at segwit, you can still make the original style of
transactions with P2PK, P2PKH, and P2SH outputs. There is nothing here
to cause a hard fork.

> Remember what happened when BIP 66 was activated? Luckily, it was
> short lived, but this is just the beginning. If you keep tightening
> the rules, you are building up more and more pressure for a split in
> the network to occur. You can call this split a "hard fork" or just a
> "fork", but it is dangerous either way, and it leads to basically the
> creation of two coins when before we just had one, people instantly
> lose value, and the trust in Bitcoin's store of value dies.
BIP 66's hard fork was not due to the soft fork making transactions
invalid. Rather it was because miners were not properly validating
blocks before building on top of them. That fork was because a
non-upgraded miner created a block invalid under the new rules and
upgraded miners did not check the block and built on top of it. That
invalid block was only invalid because the isSuperMajority mechanism
specified that the new version number must be used otherwise the block
was invalid, and that was what happened: the invalid block had the old
version number. This is not an issue for BIP 9 Versionbits soft forks
because no such rule exists.
>
> Obviously every one can debate about what should be the definition of
> a soft fork, but whatever that is, I think it is unacceptable how
> sloppily the past soft forks have been deployed.
In what way have these forks been sloppily deployed? The fork caused by
previous a soft forks (there was only one that caused that had an actual
chain split issue) was due to the isSuperMajority mechanism which is not
a good mechanism for deployment. It has been superseded by BIP 9
Versionbits. Furthermore, that fork was not due to "sloppy deployment"
by the devs but rather due to greedy miners who were SPV mining.
> I can think of many ways in which we could have these new features
> that the soft forks provided, but without forcing the new rules, and
> simply making them features that can be used on an individual miner or
> transaction signer basis. Is there a document from Bitcoin Core that
> outlines the philosophy of soft forks and why it is acceptable to
> force the tightening of rules and cause such risks? And please give me
> another reason other than "it removes a few if statements from the code".
Can you explain what other risks you think there are with soft forks?
>
> Now that Segregated witness is scheduled to be deployed on November
> 15, we should take a look at this "soft fork" as well. I like the idea
> of Segregated Witness, but from conversations on Reddit and IRC, I see
> people saying that this soft fork will be like the others: requiring a
> hard fork in order to revert it. Is this true?
If you are reading r/btc, you are doing something wrong.

Like with all soft forks, the only way to revert them is by a hard fork.
Soft forks make previously valid things invalid, hard forks make
previously invalid things valid. In order to revert a soft fork which
made something invalid, you need to hard fork to make it valid again.
> I am getting conflicting messages by reading the BIP. It says that if
> all transactions are non-segwit, then a node will validate the block
> as before. But if we pass the threshhold (usually 95 % for 1000
> blocks) will miners mining non-segwit blocks be ignored? This is not
> good... I really think we should make it optional. Miners will have an
> incentive to mine segwit blocks, since it allows for more transactions
> per block, so why force them?
No. This is incorrect. There is no requirement to include the witness
commitment in the coinbase if no transactions in the block contain
witnesses. Because transactions that contain witnesses are considered
non-standard transactions by the old rules, if a miner who did not
upgrade continues to follow those standardness rules, their blocks will
not be invalid and they are not forced to upgrade.
> What if we want to slightly modify the Segwit protocol in the future?
> What if we want to replace segwit with something much different? We
> will be forced to do a hard fork in order to do that.
Not necessarily, it depends on the change. Most changes (such as
sighashing, new opcodes, different scripts, etc.) can be done via
another soft fork because segwit introduces script versioning. A new
script version would be created with the necessary changes and that can
be soft forked in.
>
> Now, we can't go back in time and fix the deployment of the soft
> forks, but I do propose one clean way to fix things: Remove all the
> previously "soft forked" rules for non segwit transactions, and
> require them only for segwit transactions. But make segwit optional!
> In addition to what I talked about above, this may also relieve some
> tensions of people who are not comfortable with segwit and are
> thinking of joining a hard fork like the Bitcoin Unlimited project.
Segwit already is optional. If you don't want to use segwit, you don't
have to. If you don't want to mine segwit blocks, you don't have to.

As for removing all previously soft forked things, then you would be
removing a ton of functionality, various fixes, and potentially break a
large number of transactions that already exists but are not confirmed
yet. This would require a hard fork.

As for what is would be reverted, you would be reverting P2SH (multisig
addresses, you still want those right?), OP_CLTV, OP_CSV, block height
requirement in Coinbase, the value overflow incident, removal of
dangerous opcodes, reduction of block size limit, etc. As you can see, a
lot of functionality and various bug fixes would be lost be reverting
every single soft fork.
>
> Unless people can give me a good explanation as to why we are
> deploying soft forks in such forceful manner,
As I have said throughout this response, soft forks are not deployed in
a forceful manner which forces people to upgrade.
> or Bitcoin Core accepts my proposal, then I will have no choice but to
> create a new client (I'm thinking to call it Bitcoin Authentic), that
> will be just as Bitcoin Core but will always follow the chain with the
> most work regardless of whether soft fork rules are respected, and I
> would put at least CHECKLOCKTIMEVERIFY as mandatory within segwit
> transactions.
Great, go ahead. Honestly, I don't think anyone cares about your
"ultimatum". You are a random person on the internet.
>
> -- 
> PGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161028/72db51a8/attachment-0001.html>

