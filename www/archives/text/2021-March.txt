From craigraw at gmail.com  Mon Mar  1 06:22:01 2021
From: craigraw at gmail.com (Craig Raw)
Date: Mon, 1 Mar 2021 08:22:01 +0200
Subject: [bitcoin-dev] A design for Probabilistic Partial Pruning
In-Reply-To: <b895f2e4-513f-0c0d-91ac-52af055f332c@LeoWandersleb.de>
References: <CALeFGL1WSSA69ARvJW3di-UC_gz7NV9q7=6zd7s=CHnmttdQFg@mail.gmail.com>
 <CAJx8jdz3uOCpwed3MZkf1ghkvaZMfy-+vvOCVZdvhz2KAn38DQ@mail.gmail.com>
 <b895f2e4-513f-0c0d-91ac-52af055f332c@LeoWandersleb.de>
Message-ID: <CAPR5oBND9DS1Ea=RMqrhnMBjFqU6wpCpv-sMeX9mxqgyLJGYiQ@mail.gmail.com>

Something to consider adding to this proposal is to keep the idea of
pruning - i.e. retain a sequentially uninterrupted number of the most
recent blocks.

Many users do not run a node for entirely altruistic reasons - they do so,
at least in part, because it allows them to use their wallets privately.
Without this ability, I think the number of users willing to run their node
in this configuration might be reduced.

Another related thought is to have a decreasing density over blocks over
time as you go backwards towards genesis, in order for the data density of
the storage to match the actual usage of the network, in which (I would
imagine) more recent blocks are more heavily requested than early ones.

Craig

On Sun, Feb 28, 2021 at 10:18 AM Leo Wandersleb via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Only headers need to be downloaded sequentially so downloading relevant
> blocks
> from one node is totally possible with gaps in between.
>
> On 2/27/21 4:10 AM, Igor Cota via bitcoin-dev wrote:
> > Hi Keagan,
> >
> > I had a very similar idea. The only difference being for the node to
> decide on
> > a range of blocks to keep beforehand, rather than making the decision
> > block-by-block like you suggest.
> >
> > I felt the other nodes would be better served by ranges due to the
> sequential
> > nature of IBD. Perhaps this would be computationally lighter as well.
> >
> > I also encourage you to read Ryosuke Abe's paper [1] that proposes a DHT
> > scheme to solve this same problem.
> >
> > Cheers,
> > Igor
> >
> > [1] https://arxiv.org/abs/1902.02174
> >
> > On Fri, 26 Feb 2021 at 21:57, Keagan McClelland via bitcoin-dev
> > <bitcoin-dev at lists.linuxfoundation.org
> > <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
> >
> >     Hi all,
> >
> >     I've been thinking for quite some time about the problem of pruned
> nodes
> >     and ongoing storage costs for full nodes. One of the things that
> strikes
> >     me as odd is that we only really have two settings.
> >
> >     A. Prune everything except the most recent blocks, down to the cache
> size
> >     B. Keep everything since genesis
> >
> >     From my observations and conversations with various folks in the
> >     community, they would like to be able to run a "partially" pruned
> node to
> >     help bear the load of bootstrapping other nodes and helping with data
> >     redundancy in the network, but would prefer to not dedicate hundreds
> of
> >     Gigabytes of storage space to the cause.
> >
> >     This led me to the idea that a node could randomly prune some of the
> >     blocks from history if it passed some predicate. A rough sketch of
> this
> >     would look as follows.
> >
> >     1. At node startup, it would generate a random seed, this would be
> unique
> >     to the node but not necessary that it be cryptographically secure.
> >     2. In the node configuration it would also carry a "threshold"
> expressed
> >     as some percentage of blocks it wanted to keep.
> >     3. As IBD occurs, based off of the threshold, the block hash, and the
> >     node's unique seed, the node would either decide to prune the data
> or keep
> >     it. The uniqueness of the node's hash should ensure that no block is
> >     systematically overrepresented in the set of nodes choosing this
> storage
> >     scheme.
> >     4. Once the node's IBD is complete it would advertise this as a peer
> >     service, advertising its seed and threshold, so that nodes could
> >     deterministically deduce which of its peers had which blocks.
> >
> >     The goals are to increase data redundancy in a way that more
> uniformly
> >     shares the load across nodes, alleviating some of the pressure of
> full
> >     archive nodes on the IBD problem. I am working on a draft BIP for
> this
> >     proposal but figured I would submit it as a high level idea in case
> anyone
> >     had any feedback on the initial design before I go into specification
> >     levels of detail.
> >
> >     If you have thoughts on
> >
> >     A. The protocol design itself
> >     B. The barriers to put this kind of functionality into Core
> >
> >     I would love to hear from you,
> >
> >     Cheers,
> >     Keagan
> >     _______________________________________________
> >     bitcoin-dev mailing list
> >     bitcoin-dev at lists.linuxfoundation.org
> >     <mailto:bitcoin-dev at lists.linuxfoundation.org>
> >     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
> >
> >
> > --
> > *Igor Cota*
> > Codex Apertus d.o.o.
> >
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210301/57cba055/attachment-0001.html>

From eric at voskuil.org  Mon Mar  1 09:37:06 2021
From: eric at voskuil.org (eric at voskuil.org)
Date: Mon, 1 Mar 2021 01:37:06 -0800
Subject: [bitcoin-dev] A design for Probabilistic Partial Pruning
In-Reply-To: <CAPR5oBND9DS1Ea=RMqrhnMBjFqU6wpCpv-sMeX9mxqgyLJGYiQ@mail.gmail.com>
References: <CALeFGL1WSSA69ARvJW3di-UC_gz7NV9q7=6zd7s=CHnmttdQFg@mail.gmail.com>
 <CAJx8jdz3uOCpwed3MZkf1ghkvaZMfy-+vvOCVZdvhz2KAn38DQ@mail.gmail.com>
 <b895f2e4-513f-0c0d-91ac-52af055f332c@LeoWandersleb.de>
 <CAPR5oBND9DS1Ea=RMqrhnMBjFqU6wpCpv-sMeX9mxqgyLJGYiQ@mail.gmail.com>
Message-ID: <00b001d70e7e$7204e2f0$560ea8d0$@voskuil.org>

On Sun, Feb 28, 2021 at 10:18 AM Leo Wandersleb via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> > wrote:

 

> Only headers need to be downloaded sequentially so downloading relevant blocks from one node is totally possible with gaps in between.

 

In fact this is exactly how libbitcoin v4 works. We download and store blocks in parallel. In the case of a restart block gaps are repopulated. Given that headers are validated, we go after the most responsive nodes. Based on standard deviation, we drop the slowest peers and rebalance load to new/empty channels. We make ordered but not necessarily sequential requests. There is no distinction between ?initial? block download, a restart, or a single or few blocks at the top. So it?s referred to as continuous parallel block download.

 

But we don?t prune. Personally I consider this counterproductive. Apart from the complexity, it?s not healthy. And the chain grows linearly with storage cost falling exponentially, leading to a straightforward conclusion.

 

e

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210301/568af3cd/attachment.html>

From erik at q32.com  Mon Mar  1 13:54:34 2021
From: erik at q32.com (Erik Aronesty)
Date: Mon, 1 Mar 2021 08:54:34 -0500
Subject: [bitcoin-dev] Yesterday's Taproot activation meeting on
 lockinontimeout (LOT)
In-Reply-To: <CAOv1TnhQcYrc5q6GTUTuQMEi9RAV4dy5mmyNp--HuYTPzEUfJQ@mail.gmail.com>
References: <20210222101632.j5udrgtj2aj5bw6q@erisian.com.au>
 <7B0D8EE4-19D9-4686-906C-F762F29E74D4@mattcorallo.com>
 <CABm2gDrbKdxMuKdwYh0HBXNUxhqWtq1x2oLC0Ni=dbfP8b_a7Q@mail.gmail.com>
 <CABm2gDp5dRTrPEqPfrjOeeYBn6RMS=HFMbtkJ+MM0SMVnSfK5A@mail.gmail.com>
 <CAD5xwhg0pWJykWUusdoNQd60L9_MgCzzky1dvViLERADMcoysQ@mail.gmail.com>
 <CALeFGL1UbXx14aX7RK7nh7b4jwvmfF6AXrvqPJpriSB4ZvYT2A@mail.gmail.com>
 <CAOv1TnhQcYrc5q6GTUTuQMEi9RAV4dy5mmyNp--HuYTPzEUfJQ@mail.gmail.com>
Message-ID: <CAJowKgL07Jo0XyU-XGJ0DOCk8jCj6TbjiQzGKWApqYfKjsPvGQ@mail.gmail.com>

> Today users should start cooperating again to continue using the
> optimal strategy.

the "gradual" method of reducing the % of miners required for lock-in
as time goes on seems to encode this optimal strategy.

On Thu, Feb 25, 2021 at 6:43 AM Ariel Luaces via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> On Tue, Feb 23, 2021 at 12:09 PM Keagan McClelland via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> >
> > If social consensus is what drives technical consensus and not the other way around it seems as if there cannot exist a valid (rational?) reason to oppose Taproot itself, and then by extension with the arguments laid out above, LOT=true seems to be the logical conclusion of all of this, even if Core ships LOT=false at the outset.
> >
> > Where am I wrong here?
> >
> > Keagan
> >
> > On Mon, Feb 22, 2021 at 7:11 PM Jeremy via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> >>
> >> Personally, I think with either plan the ultimate risk of forking is low given probability to activate before timeout, so we should just pick something and move on, accepting that we aren't setting a precedent by which all future forks should abide. Given my understanding of the tradeoffs, I believe that the safest choice is LOT=true, but I wouldn't move to hold back a plan of LOT=false (but would probably take mitigative steps on community advocacy if it looks like there is non majority but non negligible LOT=true uptake).
> >>
> >> Cheers,
> >>
> >> Jeremy
> >>
> >>
> >> _______________________________________________
> >> bitcoin-dev mailing list
> >> bitcoin-dev at lists.linuxfoundation.org
> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
> To favor LOT=true because it seems like the inevitable result is like
> playing the prisoner's dilemma and never cooperating instead of using
> the most optimal strategy which is tit-for-tat (cooperating at first
> and then cheating once for every time your counterparty cheats).
>
> During segwit users started by cooperating (BIP9, or "LOT=false"),
> then a minority of
> miners didn't cooperate (small veto but remember the majority of
> miners cooperated), then users stopped cooperating in response (UASF),
> then miners
> reverted to cooperating (MASF while intolerant miners forked off).
> Today users should start cooperating again to continue using the
> optimal strategy.
>
> Cheers
> Ariel Lorenzo-Luaces
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From aj at erisian.com.au  Mon Mar  1 14:33:33 2021
From: aj at erisian.com.au (Anthony Towns)
Date: Tue, 2 Mar 2021 00:33:33 +1000
Subject: [bitcoin-dev] Exploring alternative activation mechanisms:
 decreasing threshold
In-Reply-To: <202102271755.02271.luke@dashjr.org>
References: <bc69d684-3d6e-624e-a859-c2ef8ad5cb13@posteo.net>
 <202102271755.02271.luke@dashjr.org>
Message-ID: <20210301143333.mzpbmsi4fwwl3msl@erisian.com.au>

On Sat, Feb 27, 2021 at 05:55:00PM +0000, Luke Dashjr via bitcoin-dev wrote:

[on the topic of non-signalled activation; ie "it doesn't matter what
miners do or signal, the rules are active as of height X"]

> This has the same problems BIP149 did: since there is no signalling, it is 
> ambiguous whether the softfork has activated at all. Both anti-SF and pro-SF 
> nodes will remain on the same chain, with conflicting perceptions of the 
> rules, and resolution (if ever) will be chaotic. Absent resolution, however, 
> there is a strong incentive not to rely on the rules, and thus it may never 
> get used, and therefore also never resolved.

I think this might be a bit abstract, and less convincing than it might
otherwise be.

To give a more explicit hypothetical: imagine that instead of making it
impossible to use an optimisation when mining (as segwit did to ASICBoost,
for which a patent had been applied for), a future soft-fork made it
possible/easier to use some mining optimisation, and further that the
optimisation is already patented, and that the patent wasn't widely known,
and the owners of the patent have put everyone that they can under NDA.

Obviously mining optimisations are great for manufacturers -- it means
a new generation of hardware is more efficient, which means miners
want to upgrade to it; but patented mining optimisations are bad for
decentralisation, because the're no competition in who can sell the new
generation of mining hardware, so the patent holder is able to choose
who is able to mine, and because miners control transaction selection,
they could insist that the only people they'll sell to must censor
transactions, and attempt to render miners that don't censor
uncompetitive.

So the incentives there are:

 - the patent holder wants the soft-fork to activate ASAP, and
   does not want to reveal the patent until after it's permanently
   locked in

 - people who want decentralisation/competition and know about the
   patent want to stop the soft-fork from activation, or hard-fork it
   out after it's activated; but they can't talk about the patent because
   of NDA (or other bribes/threats intended to keep them silent)

Suppose further that the anti-patent folks either directly control 20%
of hashpower, or are otherwise able to block the easy consensus path,
and that the patent holder isn't able to get over 50% of hashpower to
commit to orphaning non-signalling blocks to ensure early activation
despite that. (Or, alternatively, that an approach like Matt suggests in
"Straight Flag Day (Height)" is used, and there is no early-activation
via hashpower supermajority option)

So under that scenario you reach the timeout, but without activation
occurring. You also don't have any "reasonable, directed objection":
everyone who could provide a reasonable objection is under NDA.

What's the scenario look like if you say "signalling doesn't matter,
the software enforces the consensus rules"?

I think it'll be obvious there'll be two sets of software out there and
supported and following a single chain; one set that enforces the new
rules, and one set that doesn't, just as we had Bitcoin Unlimited back
in the day. For at least a while, it will be safe to do spends protected
by the new rules, because one set of nodes will enforce them, and any
miners running the other software won't want see it in their mempool,
and won't want to risk manually mining non-compliant transactions in case
it turns out they're in the minority -- just as Bitcoin Unlimited miners
didn't actually attempt to mine big blocks on mainnet back in the day.

So for a while, we have two divergent sets of maintained node software
following the same chain, with advocates of both claiming that they're the
majority. Some people will beleive the people claiming the new rules are
safe, and commit funds to them, and as those funds are demonstrably not
stolen, the number of people thinking it's safe will gradually increase
-- presumably the new rules have some benefit other than to the patent
holder, after all.

Eventually the patent gets revealed, though, just as covert ASICBoost
did. Either NDA's expire, something violates them, someone rediscovers
or reverse-engineers the idea, or the patent holder decides it's time
to start either suing competitors or advertising.

What happens at that point? We have two sets of node software that both
claim to have been in the majority, and one of which is clearly better
for decentralisation.

But if we all just switch to that two things happen: we allow miners to
steal the funds that users entrusted to the new rules, and anyone who
was enforcing the new rules but is not following the day-to-day drama
has a hard-fork event and can no longer follow the main chain until the
find new software to run.

Alternatively, do we all switch to software that protects users funds
and avoids hard-fork events, even though that software is bad for
decentralisation, and do we do that precisely when the people who were
advocating against using that software have just been proven to have
been right all along?

In my opinion, while the first choice would be horrible, the second
choice is completely at odds with human nature, so I think we'd end
up making the horrible choice, and so should avoid getting into that
scenario in the first place.

There's two ways we could avoid it: one is by not making changes any
time there's the possibility of good reasons to be against something:
so in the above, in an ideal world, we might have to delay activation
until any potential NDAs will expire.

I'm not convinced that level of patience is really plausible either
though: when covert ASICBoost became widely known, that was a "reasonable,
directed objection" to segwit -- it made real mining hardware less
efficient. We could have halted segwit deployment at that point and
changed the spec so that it didn't prevent covert ASICBoost -- eg, sorting
the wtxids prior to calculating the witness commitment would have made
segwit compatible with ASICBoost without a large impact in any other way,
and started again, perhaps with a BIP-91-alike to forbid miners signalling
for segwit so that we could begin a second activation attempt sooner.

But we didn't do anything like that; instead we got segwit activated
following the existing plan, and ended up with a hard-forked chain
split in the form of BCH. I'd suggested a lighter weight compromise to
some folks in early June 2017, to which one of the response was "The
time for this soft of ASICBoost compromise would have been right after
Scaling Bitcoin HK, when the mining hardware manufacturers realized the
unintentional effects of segwit on their hardware. But that door has long
since closed and at this point this proposal smells of appeasement." and
I think that ended up being a pretty accurate take.

The other way of avoiding that horrible scenario is committing to the
activation on-chain. That is, if the chain history satisfies property X,
enforce the new rules; if it does not satisify that property, don't
enforce the rules. That avoids the ambiguity: whether the new rules
are active becomes a matter of history, not subject to ongoing debate
and political posturing.

In the above scenario, where no one is able to discover/explain the actual
problems with the soft-fork before it activates, activation by signalling
means it likely activates unambiguously (because the opposition does not
seem reasonable), and once the problems are known they have to be dealt
with directly, there's no option to just pretend it never happened (and
that it's therefore fine to steal any funds from people who thought it
was able to be relied upon). That's much the same as how we've attempted
to fix problems with p2sh in segwit or taproot.



Other failure modes are possible too. 

One is if only a small number of rabid advocates run the code enforcing
the flag day, and someone calls their bluff -- if you're excluding that
failure case because "oh, but if core does it, plenty of people will
run the enforcing code" then you're assuming the market will just do
whatever the dev's say, and that devs are willing to test that assumption.

Another is if people factor in the above scenario and decide that if
there's any ongoing controversy they won't use the new soft fork's rules
-- if there's a chance everyone will switch over to the non-enforcing
software, why take the risk? But that allows you to prevent a soft-fork
from getting any adoption simply by maintaining an alternative client,
and hiring sock puppets to create controversy.



Another thing to consider is that it probably makes sense to support
"user-prohibited soft-forks" in a similar way to "user-activated
soft-forks". Saying "it's active if and only if there's signalling"
moves this action to whether you're required/prohibited from signalling,
which is fairly straightforward, with easy to analyse results. If you
make it be "just do/don't enforce the rules", then a user-prohibited
soft-fork following the same scheme seems like it would be very uncertain.

Cheers,
aj


From aj at erisian.com.au  Mon Mar  1 15:06:14 2021
From: aj at erisian.com.au (Anthony Towns)
Date: Tue, 2 Mar 2021 01:06:14 +1000
Subject: [bitcoin-dev] LOT=False is dangerous and shouldn't be used
In-Reply-To: <202102281933.30691.luke@dashjr.org>
References: <202102281933.30691.luke@dashjr.org>
Message-ID: <20210301150614.vz557ssn2epxknjn@erisian.com.au>

On Sun, Feb 28, 2021 at 07:33:30PM +0000, Luke Dashjr via bitcoin-dev wrote:
> As we saw in 2017 with BIP 9, coordinating activation by miner signal alone, 
> despite its potential benefits, also leaves open the door to a miner veto. 

To the contrary, we saw in 2017 that miners could *not* successfully
veto a BIP 9 activation. It was certainly more effort and risk than was
desirable to override the attempted veto, but the attempt at vetoing
nevertheless failed.

> It wouldn't be much different than adding back the inflation bug 
> (CVE-2018-17144) and trusting miners not to exploit it.

That is ridiculous FUD.

> With LOT=False in the picture, however, things can get messy:

LOT=false is always in the picture if we are talking about a soft-fork:
the defining feature of a soft-fork is that old node software continues
to work, and old node software will be entirely indifferent to whether
activation is signalled or not.

> some users will 
> enforce Taproot(eg) (those running LOT=True), while others will not (those 
> with LOT=False)

If you are following bip8 with lockinontimeout=false, you will enforce
taproot rules if activation occurs, you will simply not reject blocks if
activation does not occur.

> Users with LOT=True will still get all the safety thereof, 
> but those with LOT=False will (in the event of miners deciding to produce a 
> chain split) face an unreliable chain, being replaced by the LOT=True chain 
> every time it overtakes the LOT=False chain in work.

This assumes anyone mining the chain where taproot does not activate is
not able to avoid a reorg, despite having majority hashpower (as implied
by the lot=true chain having to overtake them repeatedly). That's absurd;
avoiding a reorg is trivially achieved via running "invalidateblock", or
via pool software examining block headers, or via a patch along the lines
of MUST_SIGNAL enforcement, but doing the opposite. For concreteness,
here's a sketch of such a patch:

https://github.com/ajtowns/bitcoin/commit/f195688bd1eff3780f200e7a049e23b30ca4fe2f

> For 2 weeks, users with LOT=False would not have a usable network.

That's also ridiculous FUD.

If it were true, it would mean the activation mechanism was not
acceptable, as non-upgraded nodes would also not have a usable network
for the same reason.

Fortunately, it's not true.

More generally, if miners are willing to lose significant amounts of
money mining orphan blocks, they can do that at any time. If they're
not inclined to do so, it's incredibly straightforward for them to avoid
doing so, whatever a minority of other miners might do.

> The overall risk is maximally reduced by LOT=True being the only deployed 
> parameter, and any introduction of LOT=False only increases risk probability 
> and severity.

LOT=false is the default behaviour of everything single piece of node
software out there. That behaviour doesn't need to be introduced, it's
already universal.

Cheers,
aj


From yanmaani at cock.li  Mon Mar  1 16:54:07 2021
From: yanmaani at cock.li (yanmaani at cock.li)
Date: Mon, 01 Mar 2021 16:54:07 +0000
Subject: [bitcoin-dev] LOT=False is dangerous and shouldn't be used
In-Reply-To: <20210301150614.vz557ssn2epxknjn@erisian.com.au>
References: <202102281933.30691.luke@dashjr.org>
 <20210301150614.vz557ssn2epxknjn@erisian.com.au>
Message-ID: <86f87c6e5e4fd05c2295de2209694771@cock.li>

How about a compromise?

With LOT=false, taproot will be activated if at least 95% of the miners 
vote yes.
With LOT=true, taproot will be activated if at least 0% of the miners 
vote yes.
...with LOT=maybe, taproot will be activated if at least ~some% of the 
miners vote yes?

If you want the 'emergency cancel' feature without binding yourself to 
it, couldn't you have some middle-of-the-road solution? "Taproot will be 
enabled if miner support ever goes above 95%, or on flag day if miner 
support is >20% then". That would prevent obstreperous miners from doing 
too much damage, while still hopefully making it possible to bail out of 
a disaster.

On 2021-03-01 15:06, Anthony Towns via bitcoin-dev wrote:
> On Sun, Feb 28, 2021 at 07:33:30PM +0000, Luke Dashjr via bitcoin-dev 
> wrote:
>> As we saw in 2017 with BIP 9, coordinating activation by miner signal 
>> alone,
>> despite its potential benefits, also leaves open the door to a miner 
>> veto.
> 
> To the contrary, we saw in 2017 that miners could *not* successfully
> veto a BIP 9 activation. It was certainly more effort and risk than was
> desirable to override the attempted veto, but the attempt at vetoing
> nevertheless failed.
> 
>> It wouldn't be much different than adding back the inflation bug
>> (CVE-2018-17144) and trusting miners not to exploit it.
> 
> That is ridiculous FUD.
> 
>> With LOT=False in the picture, however, things can get messy:
> 
> LOT=false is always in the picture if we are talking about a soft-fork:
> the defining feature of a soft-fork is that old node software continues
> to work, and old node software will be entirely indifferent to whether
> activation is signalled or not.
> 
>> some users will
>> enforce Taproot(eg) (those running LOT=True), while others will not 
>> (those
>> with LOT=False)
> 
> If you are following bip8 with lockinontimeout=false, you will enforce
> taproot rules if activation occurs, you will simply not reject blocks 
> if
> activation does not occur.
> 
>> Users with LOT=True will still get all the safety thereof,
>> but those with LOT=False will (in the event of miners deciding to 
>> produce a
>> chain split) face an unreliable chain, being replaced by the LOT=True 
>> chain
>> every time it overtakes the LOT=False chain in work.
> 
> This assumes anyone mining the chain where taproot does not activate is
> not able to avoid a reorg, despite having majority hashpower (as 
> implied
> by the lot=true chain having to overtake them repeatedly). That's 
> absurd;
> avoiding a reorg is trivially achieved via running "invalidateblock", 
> or
> via pool software examining block headers, or via a patch along the 
> lines
> of MUST_SIGNAL enforcement, but doing the opposite. For concreteness,
> here's a sketch of such a patch:
> 
> https://github.com/ajtowns/bitcoin/commit/f195688bd1eff3780f200e7a049e23b30ca4fe2f
> 
>> For 2 weeks, users with LOT=False would not have a usable network.
> 
> That's also ridiculous FUD.
> 
> If it were true, it would mean the activation mechanism was not
> acceptable, as non-upgraded nodes would also not have a usable network
> for the same reason.
> 
> Fortunately, it's not true.
> 
> More generally, if miners are willing to lose significant amounts of
> money mining orphan blocks, they can do that at any time. If they're
> not inclined to do so, it's incredibly straightforward for them to 
> avoid
> doing so, whatever a minority of other miners might do.
> 
>> The overall risk is maximally reduced by LOT=True being the only 
>> deployed
>> parameter, and any introduction of LOT=False only increases risk 
>> probability
>> and severity.
> 
> LOT=false is the default behaviour of everything single piece of node
> software out there. That behaviour doesn't need to be introduced, it's
> already universal.
> 
> Cheers,
> aj
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From jlrubin at mit.edu  Mon Mar  1 20:32:34 2021
From: jlrubin at mit.edu (Jeremy)
Date: Mon, 1 Mar 2021 12:32:34 -0800
Subject: [bitcoin-dev] In defense of a configurable LOT if LOT=false is
	released
Message-ID: <CAD5xwhidE-cnNe_g=7PvxUtp2=_RCGfOSadYgtx8FO6Tj634Hw@mail.gmail.com>

The short script* below could function as a cross platform (need only have
python 2 and curl) way to make a LOT=False function like a LOT=true node.
This sort of script was mentioned recently in the ##taproot-activation IRC
channel.

It is unclear to me with this sort of script what happens if a LOT=false
but running this script announces a to-be-marked-bad block to a similar
peer that has already marked that block invalid. It could lead to nodes
partitioning themselves from one another, but I am uncertain of the
particulars of invalidate block's relationship to DoS rules.

Therefore it may be a harm reduction, should core release with LOT=false,
to have opt-in configurability natively. Configurability is superior to a
situation where, near to the timeout with LOT=true seeming more likely,
users unable to switch binaries reach for such a convenience script.

The counterargument would be that running a script is still a hoop to jump
through more difficult than a config flag and we don't want user's choosing
consensus rules via config flags. However, it seems more in the spirit of
user choice to make the core release suitable for either preference.

*completely untested, unverified, never even run mind you -- obviously needs
review before actually running it

1         import sys, json, subprocess
 2         from time import sleep
 3         LOTHEIGHT=600000
 4         LOTSTOP= LOTHEIGHT + 2016
 5         FORK="taproot"
 6         credential="blah:blah"
 7         host = "http://127.0.0.1:8332"
 8         contenttype ='content-type:text/plain;'
 9         def make_command(command, args):
10             return json.dumps({"jsonrpc": "1.0",
11             "id":"curltext",
12             "method": command,
13             "params": args})
14         def call(command, args):
15             res = subprocess.run("curl", ["--user", credential,
"--data-binary", make_command(command, args), "-H", contenttype, host])
16             return res.stdout
17
18         should_sleep = False
19         while True:
20             if should_sleep: sleep(10)
21             should_sleep = True
22             try:
23                 data = json.load(call("getblockchaininfo", []))
24                 possible = True
25                 if data['blocks']  >= LOTHEIGHT and data['blocks'] <
LOTSTOP:
26                     if not
data['softforks'][FORK]['statistics']['possible']:
27                         call("invalidateblock", [data["bestblockhash"]])
28                         should_sleep = False
29             except: pass
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210301/6af8007d/attachment.html>

From michaelfolkson at gmail.com  Mon Mar  1 17:47:57 2021
From: michaelfolkson at gmail.com (Michael Folkson)
Date: Mon, 1 Mar 2021 17:47:57 +0000
Subject: [bitcoin-dev] UASF (LOT=true) kick off meeting - Tuesday March 2nd
 19:00 UTC on ##uasf IRC channel
Message-ID: <CAFvNmHR0WwMp0eNQhvs9uFFSq3wGdHVTFUFmByLLdz7EUjg8uQ@mail.gmail.com>

It is approximately 8 months since Steve Lee formally kicked off the
Taproot activation discussion by setting up the ##taproot-activation
IRC channel. Obviously there was discussion that considerably predates
that but that was the first recognition that there needed to be a
focus towards a solution rather than endless circular debates.

Eight months on it appears there are some who think there is a
philosopher?s stone still out there that will garner 100 percent
consensus and contain zero chain split risk in the worst case
scenario. A philosopher?s stone that us mere mortals have failed to
find in these 8 months.

While I would be delighted if this philosopher?s stone is found (and
all are free to continue looking) I think it is prudent at this point
to step away from the circular arguments and build on the progress we
have made in these last 8 months. We have effectively achieved
overwhelming consensus on the activation mechanism (BIP 8) and all of
the parameters apart from one (lockinontimeout or LOT). Again I?d like
to thank the people who have put hours of work into getting to this
point. It is thankless work and it is probably the last thing any of
us want to be doing.

At this point it is unclear whether Bitcoin Core will be able to
release any activation code whatsoever due to disagreement logjams.
Personally I hope they do but again it is prudent to prepare for the
scenario where Core is unable to. Hence I and others have assessed
that our energies are better spent working on a community release
implementing LOT=true in a similar spirit to 2017?s UASF effort. I say
similar as this time there really is no need for any antagonism.
Approximately 90 percent of mining pools (taprootactivation.com) have
declared support and there is overwhelming community consensus to
activate Taproot. In the absence of a Core release with activation
code I hope and expect all users (including miners) to consider
supporting this UASF release and consider running it to activate
Taproot.

TL;DR Tomorrow (Tuesday) we are holding a kick off meeting for this
UASF (LOT=true) effort on the ##uasf IRC channel at 19:00 UTC. Please
consider attending and supporting this effort to get Taproot
activated. It would be great to get users from the 2017 effort
involved in addition to recent Taproot proponents from all parts of
our community. The future of Bitcoin?s scalability and privacy depends
on, as it always has, on you the user.

-- 
Michael Folkson
Email: michaelfolkson at gmail.com
Keybase: michaelfolkson
PGP: 43ED C999 9F85 1D40 EAF4 9835 92D6 0159 214C FEE3

From keagan.mcclelland at gmail.com  Mon Mar  1 20:55:10 2021
From: keagan.mcclelland at gmail.com (Keagan McClelland)
Date: Mon, 1 Mar 2021 13:55:10 -0700
Subject: [bitcoin-dev] A design for Probabilistic Partial Pruning
In-Reply-To: <00b001d70e7e$7204e2f0$560ea8d0$@voskuil.org>
References: <CALeFGL1WSSA69ARvJW3di-UC_gz7NV9q7=6zd7s=CHnmttdQFg@mail.gmail.com>
 <CAJx8jdz3uOCpwed3MZkf1ghkvaZMfy-+vvOCVZdvhz2KAn38DQ@mail.gmail.com>
 <b895f2e4-513f-0c0d-91ac-52af055f332c@LeoWandersleb.de>
 <CAPR5oBND9DS1Ea=RMqrhnMBjFqU6wpCpv-sMeX9mxqgyLJGYiQ@mail.gmail.com>
 <00b001d70e7e$7204e2f0$560ea8d0$@voskuil.org>
Message-ID: <CALeFGL2=JLo4SZ4eeDWLbRRMhNV7T58-Pe2jYa6aC6XtPWmC9A@mail.gmail.com>

> Personally I consider this counterproductive. Apart from the complexity,
it?s not healthy. And the chain grows linearly with storage cost falling
exponentially, leading to a straightforward conclusion.

The motivation for this change is not to encourage full archival nodes to
prune, but to make it possible for pruned nodes to beef up what kind of
archive they retain. Personally I think using the falling storage costs as
a means of providing access to more users is more important than using it
to justify requiring higher node requirements.

> Something to consider adding to this proposal is to keep the idea of
pruning - i.e. retain a sequentially uninterrupted number of the most
recent blocks.
>
> Many users do not run a node for entirely altruistic reasons - they do
so, at least in part, because it allows them to use their wallets
privately. Without this ability, I think the number of users willing to run
their node in this configuration might be reduced.
>
> Another related thought is to have a decreasing density over blocks over
time as you go backwards towards genesis, in order for the data density of
the storage to match the actual usage of the network, in which (I would
imagine) more recent blocks are more heavily requested than early ones.

Per my above comments, this change is actually capitalizing primarily upon
those who wish to do it for more altruistic reasons. Furthermore, doing
linear block scans when you need to query blocks that you don't keep does
not leak privacy details in the same way that bloom filters do. You are not
signaling to the peer that there is something specific in that block that
you care about, because you don't actually know. You are signalling only
that you do not have that block right now, which from the other parts of
the design you are already leaking. In light of this, I don't think that it
is necessary for the blocks to be in sequential sets at all. If there is no
requirement on them being sequential, uniform randomness will take care of
the density problem automatically.

Keagan


On Mon, Mar 1, 2021 at 4:20 AM Eric Voskuil via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Sun, Feb 28, 2021 at 10:18 AM Leo Wandersleb via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>
>
> > Only headers need to be downloaded sequentially so downloading relevant
> blocks from one node is totally possible with gaps in between.
>
>
>
> In fact this is exactly how libbitcoin v4 works. We download and store
> blocks in parallel. In the case of a restart block gaps are repopulated.
> Given that headers are validated, we go after the most responsive nodes.
> Based on standard deviation, we drop the slowest peers and rebalance load
> to new/empty channels. We make ordered but not necessarily sequential
> requests. There is no distinction between ?initial? block download, a
> restart, or a single or few blocks at the top. So it?s referred to as
> continuous parallel block download.
>
>
>
> But we don?t prune. Personally I consider this counterproductive. Apart
> from the complexity, it?s not healthy. And the chain grows linearly with
> storage cost falling exponentially, leading to a straightforward conclusion.
>
>
>
> e
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210301/21fb11a0/attachment-0001.html>

From john at johnnewbery.com  Mon Mar  1 20:58:46 2021
From: john at johnnewbery.com (John Newbery)
Date: Mon, 1 Mar 2021 20:58:46 +0000
Subject: [bitcoin-dev] Proposal for new "disabletx" p2p message
In-Reply-To: <CAFp6fsE6gb2PaL3ikDRjS-hNnPLjvtWB+8qZJr3trQe2K9YN+g@mail.gmail.com>
References: <CAFp6fsE6gb2PaL3ikDRjS-hNnPLjvtWB+8qZJr3trQe2K9YN+g@mail.gmail.com>
Message-ID: <CAFmfg2sT0sVVHOe5ZbDo5iDwE1Tk2oOXJiCKhNZv_hZVOVLbRw@mail.gmail.com>

Hi Suhas,

Thank you for this proposal. I agree with your aims, but I think a new
P2P message isn't necessary to achieve them.

# Motivation

There are two distinct (but interacting) motivations:

1. Allow a node to accept more incoming connections which will only be
   used for block propagation (no transaction relay or addr gossip),
   while minimizing resource requirements.

2. Prevent `addr` gossip messages from being sent to peers which will
   'black hole' those addrs (i.e. not relay them further).

These motivations interact because if we simply increase the number of
block-relay-only connections that nodes make without making any
allowance for the fact those connections won't gossip addr records, then
we'll increase the number of addr black holes and worsen addr gossip.

# Using fRelay=false to signal no transaction relay.

`fRelay` is an optional field in the `version` message. There are three
BIPs concerned with `fRelay`:

- BIP 37[1] introduced the `fRelay` field to indicate to the recipient
  that they must not relay transactions over the connection until a
  `filteradd` message has been received.

- BIP 60[2] aimed to make the `fRelay` field mandatory. It is not clear
  how widely this BIP has been adopted by implementations.

- BIP 111[3] introduced a `NODE_BLOOM` service bit to indicate that
  bloom filters are served by this node. According to this BIP, "If a
  node does not support bloom filters but receives a "filterload",
  "filteradd", or "filterclear" message from a peer the node should
  disconnect that peer immediately."

Within Bitcoin Core:

- PR 1795[4] (merged in January 2013) added support for BIP 37 Bloom
  filters.

- Since PR 2763[5] (merged in June 2013), Bitcoin Core will _always_
  include the `fRelay` flag in `version` messages that it sends. Bitcoin
  Core will tolerate the `fRelay` field being present or absent in any
  `version` message that it receives[6].

- PR 6579[7] (merged in August 2015) implemented BIP 111. From that
  point on, a Bitcoin Core node would disconnect peers that sent it
  `filter*` messages if it hadn't enabled `NODE_BLOOM`, provided the
  peer's version was >= 70011. In PR 7708[8] (merged in March 2016) this
  was extended to disconnect any peer that sends a `filter*` message,
  regardless of its version (in general, a 'polite disconnect' for any
  peer that requests an unsupported service is probably the best
  behaviour). In PR 16152[9] (merged in July 2019), serving Bloom
  filters was disabled by default, due to potential denial-of-service
  attacks being possible against nodes which serve bloom filters on
  public connections.

- PR 6993[10] (merged in November 2015) started reusing the `fRelay`
  field for the new `-blocksonly` mode. If Bitcoin Core is started with
  `-blocksonly` configured, then it includes `fRelay=false` in all of
  the `version` messages it sends. In PR 15759[11] (merged  in September
  2019), this usage of `fRelay` to permanently disable tx relay was
  extended for use by the new block-relay only connection type.

The net effect is that `fRelay` is already being used to indicate that
transactions should not be relayed over a connection. In the motivation
for your BIP, you write:

> The low-bandwidth / minimal-resource nature of these connections is
> currently known only by the initiator of the connection; this is
> because the transaction relay field in the version message is not a
> permanent setting for the lifetime of the connection.  Consequently, a
> node receiving an inbound connection with transaction relay disabled
> cannot distinguish between a peer that will never enable transaction
> relay (as described in BIP 37) and one that will...

However, as AJ points out in his response [12], the Bitcoin Core node
_does_ know whether transaction relay can be supported as soon as the
`version` message is received:

> [...] you either set m_tx_relay->fRelayTxes to true via the VERSION
> message (either explicitly or by not setting fRelay), or you enable it
> later with FILTERLOAD or FILTERCLEAR, both of which will cause a
> disconnect if bloom filters aren't supported. Bloom filter support is
> (optionally?) indicated via a service bit (BIP 111), so you could
> assume you know whether they're supported as soon as you receive the
> VERSION line.

i.e. if Bitcoin Core node is running under normal configuration with
bloom filters disabled for public connections (which is both the default
setting and highly recommended due to DoS concerns), then as soon as it
receives a `version` message with `fRelay=false`, it can be sure that
there will never be any transaction relay with that peer. If the peer
later tries to enable transaction relay by sending a `filterload`
message, then the node will disconnect that peer immediately.

In summary, we can continue using the `fRelay` field to indicate that
no transaction relay can happen for the entire lifetime of the
connection.  Bitcoin Core can postpone allocating resources for
transaction relay data structures until after the version message has
been received to minimize resource usage for incoming block-relay-only
connections. A rough implementation is here[13]. Obviously, a node that
has been configured to serve bloom filters on public connections would
not be able to take advantage of this and accept additional incoming
block-relay-only peers, but I think that's fine - we already discourage
that configuration.

I think a good counter-argument against simply using `fRelay` for this
purpose is that we shouldn't reuse a protocol feature designed for one
function to achieve a totally different aim. However, we know that nodes
on the network have been using `fRelay` to disable transaction relay
since Bitcoin Core version 0.12 (when `-blocksonly` was added), and that
usage was expanded to _all_ nodes running Bitcoin Core version 0.19 or
later (when block-relay-only connections were introduced), so using
`fRelay` to disable transaction relay is now de facto part of the p2p
protocol.

# Preventing addr black holes

Addresses of potential peers are gossiped around the p2p network using
`addr` messages. When a Bitcoin Core node learns of a new `addr` record,
it will relay that record to one or two of its peers, chosen at
random[14]. The idea is that eventually the `addr` record will reach
most of the nodes on the network.

If there are too many nodes on the network that receive `addr` records
and do not relay those records on to their peers (termed _addr black
hole_ nodes), then propagation of those `addr` records suffers -- any
individual `addr` record is unlikely to reach a large proportion of
nodes on the network.

Since a motivation for block-relay-only connections is to protect
against eclipse attacks and thwart network topology analysis, Bitcoin
Core will not relay `addr` records on those connections, and will ignore
any `addr` record received over those connections. Therefore, increasing
the number of block-relay-only connections without changing the `addr`
gossip logic is likely to increase the prevalence of addr black holes,
and negatively impact addr propagation. This is why BIP 338 includes:

> It is RECOMMENDED that a node that has sent or received a disabletx
> message to/from a peer not send any of these messages to the peer:
>
> - addr/getaddr
> - addrv2 (BIP 155)

I think a better approach would be for Bitcoin Core to only relay addr
records to an inbound peer if it has previously received an `addr` or
`addrv2` message from that peer, since that indicates definitively that
the peer actively gossips `addr` records. This approach was first
suggested by AJ in the original block-relay-only PR[15].

An advantage of this approach is that it will improve addr propagation
immediately and without any change to the P2P protocol, and will prevent
sending `addr` records to all addr black holes (such as light clients),
not just incoming block-relay-only connections.

# Conclusion

We can increase the permitted number of inbound block-relay-only peers
while minimizing resource requirement _and_ improving addr record
propagation, without any changes to the p2p protocol required.

I propose that for Bitcoin Core version 22.0:

- only initialize the transaction relay data structures after the
  `version` message is received, and only if fRelay=true and
  `NODE_BLOOM` is not offered on this connection.
- only initialize the addr data structures for inbound connections when
  an `addr`, `addrv2` or `getaddr` message is received on the
  connection, and only consider a connection for addr relay if its addr
  data structures are initialized.
- update the inbound eviction logic to protect more inbound peers which
  do not have transaction relay data structures.

Then, in version 23.0:

- modestly increase the number of outbound block-relay-only connections.

John

[1] https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki
[2] https://github.com/bitcoin/bips/blob/master/bip-0060.mediawiki
[3] https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki
[4] https://github.com/bitcoin/bitcoin/pull/1795
[5] https://github.com/bitcoin/bitcoin/pull/2763
[6]
https://github.com/bitcoin/bitcoin/blob/e49117470b77fb7d53be122c6490ba163c6e304d/src/net_processing.cpp#L2582-L2583
[7] https://github.com/bitcoin/bitcoin/pull/6579
[8] https://github.com/bitcoin/bitcoin/pull/7708
[9] https://github.com/bitcoin/bitcoin/pull/16152
[10] https://github.com/bitcoin/bitcoin/pull/6993
[11] https://github.com/bitcoin/bitcoin/pull/15759
[12]
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-January/018347.html
[13] https://github.com/jnewbery/bitcoin/tree/2021-02-lazy-init-peer
[14]
https://github.com/bitcoin/bitcoin/blob/e52ce9f2b312b3cf3b0837918e07d7603e241d63/src/net_processing.cpp#L1696-L1700
[15] https://github.com/bitcoin/bitcoin/pull/15759#issuecomment-527012757

> Hi,
>
> I'm proposing the addition of a new, optional p2p message to allow peers
to communicate that they do not want to send or receive (loose)
transactions for the lifetime of a connection.
>
> The goal of this message is to help facilitate connections on the network
over which only block-related data (blocks/headers/compact blocks/etc) are
relayed, to create low-resource connections that help protect against
partition attacks on the network.  In particular, by adding a network
message that communicates that transactions will not be relayed for the
life of the connection, we ease the implementation of software that could
have increased inbound connection limits for such peers, which in turn will
make it easier to add additional persistent block-relay-only connections on
the network -- strengthening network security for little additional
bandwidth.
>
> Software has been deployed for over a year now which makes such
connections, using the BIP37/BIP60 "fRelay" field in the version message to
signal that transactions should not be sent initially.  However, BIP37
allows for transaction relay to be enabled later in the connection's
lifetime, complicating software that would try to distinguish inbound peers
that will never relay transactions from those that might.
>
> This proposal would add a single new p2p message, "disabletx", which (if
used at all) must be sent between version and verack.  I propose that this
message is valid for peers advertising protocol version 70017 or higher.
Software is free to implement this BIP or ignore this message and remain
compatible with software that does implement it.
>
> Full text of the proposed BIP is below.
>
> Thanks,
> Suhas
>
> ---------------------------------------------------
>
> <pre>
>   BIP: XXX
>   Layer: Peer Services
>   Title: Disable transaction relay message
>   Author: Suhas Daftuar <sdaftuar at chaincode.com>
>   Comments-Summary: No comments yet.
>   Comments-URI:
>   Status: Draft
>   Type: Standards Track
>   Created: 2020-09-03
>   License: BSD-2-Clause
> </pre>
>
> ==Abstract==
>
> This BIP describes a change to the p2p protocol to allow a node to tell a
peer
> that a connection will not be used for transaction relay, to support
> block-relay-only connections that are currently in use on the network.
>
> ==Motivation==
>
> For nearly the past year, software has been deployed[1] which initiates
> connections on the Bitcoin network and sets the transaction relay field
> (introduced by BIP 37 and also defined in BIP 60) to false, to prevent
> transaction relay from occurring on the connection. Additionally, addr
messages
> received from the peer are ignored by this software.
>
> The purpose of these connections is two-fold: by making additional
> low-bandwidth connections on which blocks can propagate, the robustness
of a
> node to network partitioning attacks is strengthened.  Additionally, by
not
> relaying transactions and ignoring received addresses, the ability of an
> adversary to learn the complete network graph (or a subgraph) is
reduced[2],
> which in turn increases the cost or difficulty to an attacker seeking to
carry
> out a network partitioning attack (when compared with having such
knowledge).
>
> The low-bandwidth / minimal-resource nature of these connections is
currently
> known only by the initiator of the connection; this is because the
transaction
> relay field in the version message is not a permanent setting for the
lifetime
> of the connection.  Consequently, a node receiving an inbound connection
with
> transaction relay disabled cannot distinguish between a peer that will
never
> enable transaction relay (as described in BIP 37) and one that will.
Moreover,
> the node also cannot determine that the incoming connection will ignore
relayed
> addresses; with that knowledge a node would likely choose other peers to
> receive announced addresses instead.
>
> This proposal adds a new, optional message that a node can send a peer
when
> initiating a connection to that peer, to indicate that connection should
not be
> used for transaction-relay for the connection's lifetime. In addition,
without
> a current mechanism to negotiate whether addresses should be relayed on a
> connection, this BIP suggests that address messages not be sent on links
where
> tx-relay has been disabled.
>
> ==Specification==
>
> # A new disabletx message is added, which is defined as an empty message
where pchCommand == "disabletx".
> # The protocol version of nodes implementing this BIP must be set to
70017 or higher.
> # If a node sets the transaction relay field in the version message to a
peer to false, then the disabletx message MAY also be sent in response to a
version message from that peer if the peer's protocol version is >= 70017.
If sent, the disabletx message MUST be sent prior to sending a verack.
> # A node that has sent or received a disabletx message to/from a peer
MUST NOT send any of these messages to the peer:
> ## inv messages for transactions
> ## getdata messages for transactions
> ## getdata messages for merkleblock (BIP 37)
> ## filteradd/filterload/filterclear (BIP 37)
> ## mempool (BIP 35)
> # It is RECOMMENDED that a node that has sent or received a disabletx
message to/from a peer not send any of these messages to the peer:
> ## addr/getaddr
> ## addrv2 (BIP 155)
> # The behavior regarding sending or processing other message types is not
specified by this BIP.
> # Nodes MAY decide to not remain connected to peers that send this
message (for example, if trying to find a peer that will relay
transactions).
>
> ==Compatibility==
>
> Nodes with protocol version >= 70017 that do not implement this BIP, and
nodes
> with protocol version < 70017, will continue to remain compatible with
> implementing software: transactions would not be relayed to peers sending
the
> disabletx message (provided that BIP 37 or BIP 60 has been implemented),
and while
> periodic address relay may still take place, software implementing this
BIP
> should not be disconnecting such peers solely for that reason.
>
> Disabling address relay is suggested but not required by this BIP, to
allow for
> future protocol extensions that might specify more carefully how address
relay
> is to be negotiated. This BIP's recommendations for software to not relay
> addresses is intended to be interpreted as guidance in the absence of any
such
> future protocol extension, to accommodate existing software behavior.
>
> Note that all messages specified in BIP 152, including blocktxn and
> getblocktxn, are permitted between peers that have sent/received a
disabletx
> message, subject to the feature negotiation of BIP 152.
>
> ==Implementation==
>
> TBD
>
> ==References==
>
> # Bitcoin Core has [https://github.com/bitcoin/bitcoin/pull/15759
implemented this functionality] since version 0.19.0.1, released in
November 2019.
> # For example, see https://www.cs.umd.edu/projects/coinscope/coinscope.pdf
and https://arxiv.org/pdf/1812.00942.pdf.
>
> ==Copyright==
>
> This BIP is licensed under the 2-clause BSD license.

On Wed, Jan 6, 2021 at 4:35 PM Suhas Daftuar via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Hi,
>
> I'm proposing the addition of a new, optional p2p message to allow peers
> to communicate that they do not want to send or receive (loose)
> transactions for the lifetime of a connection.
>
> The goal of this message is to help facilitate connections on the network
> over which only block-related data (blocks/headers/compact blocks/etc) are
> relayed, to create low-resource connections that help protect against
> partition attacks on the network.  In particular, by adding a network
> message that communicates that transactions will not be relayed for the
> life of the connection, we ease the implementation of software that could
> have increased inbound connection limits for such peers, which in turn will
> make it easier to add additional persistent block-relay-only connections on
> the network -- strengthening network security for little additional
> bandwidth.
>
> Software has been deployed for over a year now which makes such
> connections, using the BIP37/BIP60 "fRelay" field in the version message to
> signal that transactions should not be sent initially.  However, BIP37
> allows for transaction relay to be enabled later in the connection's
> lifetime, complicating software that would try to distinguish inbound peers
> that will never relay transactions from those that might.
>
> This proposal would add a single new p2p message, "disabletx", which (if
> used at all) must be sent between version and verack.  I propose that this
> message is valid for peers advertising protocol version 70017 or higher.
> Software is free to implement this BIP or ignore this message and remain
> compatible with software that does implement it.
>
> Full text of the proposed BIP is below.
>
> Thanks,
> Suhas
>
> ---------------------------------------------------
>
> <pre>
>   BIP: XXX
>   Layer: Peer Services
>   Title: Disable transaction relay message
>   Author: Suhas Daftuar <sdaftuar at chaincode.com>
>   Comments-Summary: No comments yet.
>   Comments-URI:
>   Status: Draft
>   Type: Standards Track
>   Created: 2020-09-03
>   License: BSD-2-Clause
> </pre>
>
> ==Abstract==
>
> This BIP describes a change to the p2p protocol to allow a node to tell a peer
> that a connection will not be used for transaction relay, to support
> block-relay-only connections that are currently in use on the network.
>
> ==Motivation==
>
> For nearly the past year, software has been deployed[1] which initiates
> connections on the Bitcoin network and sets the transaction relay field
> (introduced by BIP 37 and also defined in BIP 60) to false, to prevent
> transaction relay from occurring on the connection. Additionally, addr messages
> received from the peer are ignored by this software.
>
> The purpose of these connections is two-fold: by making additional
> low-bandwidth connections on which blocks can propagate, the robustness of a
> node to network partitioning attacks is strengthened.  Additionally, by not
> relaying transactions and ignoring received addresses, the ability of an
> adversary to learn the complete network graph (or a subgraph) is reduced[2],
> which in turn increases the cost or difficulty to an attacker seeking to carry
> out a network partitioning attack (when compared with having such knowledge).
>
> The low-bandwidth / minimal-resource nature of these connections is currently
> known only by the initiator of the connection; this is because the transaction
> relay field in the version message is not a permanent setting for the lifetime
> of the connection.  Consequently, a node receiving an inbound connection with
> transaction relay disabled cannot distinguish between a peer that will never
> enable transaction relay (as described in BIP 37) and one that will.  Moreover,
> the node also cannot determine that the incoming connection will ignore relayed
> addresses; with that knowledge a node would likely choose other peers to
> receive announced addresses instead.
>
> This proposal adds a new, optional message that a node can send a peer when
> initiating a connection to that peer, to indicate that connection should not be
> used for transaction-relay for the connection's lifetime. In addition, without
> a current mechanism to negotiate whether addresses should be relayed on a
> connection, this BIP suggests that address messages not be sent on links where
> tx-relay has been disabled.
>
> ==Specification==
>
> # A new disabletx message is added, which is defined as an empty message where pchCommand == "disabletx".
> # The protocol version of nodes implementing this BIP must be set to 70017 or higher.
> # If a node sets the transaction relay field in the version message to a peer to false, then the disabletx message MAY also be sent in response to a version message from that peer if the peer's protocol version is >= 70017. If sent, the disabletx message MUST be sent prior to sending a verack.
> # A node that has sent or received a disabletx message to/from a peer MUST NOT send any of these messages to the peer:
> ## inv messages for transactions
> ## getdata messages for transactions
> ## getdata messages for merkleblock (BIP 37)
> ## filteradd/filterload/filterclear (BIP 37)
> ## mempool (BIP 35)
> # It is RECOMMENDED that a node that has sent or received a disabletx message to/from a peer not send any of these messages to the peer:
> ## addr/getaddr
> ## addrv2 (BIP 155)
> # The behavior regarding sending or processing other message types is not specified by this BIP.
> # Nodes MAY decide to not remain connected to peers that send this message (for example, if trying to find a peer that will relay transactions).
>
> ==Compatibility==
>
> Nodes with protocol version >= 70017 that do not implement this BIP, and nodes
> with protocol version < 70017, will continue to remain compatible with
> implementing software: transactions would not be relayed to peers sending the
> disabletx message (provided that BIP 37 or BIP 60 has been implemented), and while
> periodic address relay may still take place, software implementing this BIP
> should not be disconnecting such peers solely for that reason.
>
> Disabling address relay is suggested but not required by this BIP, to allow for
> future protocol extensions that might specify more carefully how address relay
> is to be negotiated. This BIP's recommendations for software to not relay
> addresses is intended to be interpreted as guidance in the absence of any such
> future protocol extension, to accommodate existing software behavior.
>
> Note that all messages specified in BIP 152, including blocktxn and
> getblocktxn, are permitted between peers that have sent/received a disabletx
> message, subject to the feature negotiation of BIP 152.
>
> ==Implementation==
>
> TBD
>
> ==References==
>
> # Bitcoin Core has [https://github.com/bitcoin/bitcoin/pull/15759 implemented this functionality] since version 0.19.0.1, released in November 2019.
> # For example, see https://www.cs.umd.edu/projects/coinscope/coinscope.pdf and https://arxiv.org/pdf/1812.00942.pdf.
>
> ==Copyright==
>
> This BIP is licensed under the 2-clause BSD license.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210301/d31013b0/attachment-0001.html>

From emu at emuadmin.com  Mon Mar  1 17:52:54 2021
From: emu at emuadmin.com (Emil Pfeffer)
Date: Mon, 1 Mar 2021 17:52:54 +0000
Subject: [bitcoin-dev] LOT=False is dangerous and shouldn't be used
In-Reply-To: <20210301150614.vz557ssn2epxknjn@erisian.com.au>
References: <202102281933.30691.luke@dashjr.org>
 <20210301150614.vz557ssn2epxknjn@erisian.com.au>
Message-ID: <20210301175254.qjuz6vjppgkzcti7@www01.emuadmin.com>

On Tue, Mar 02, 2021 at 01:06:14AM +1000, Anthony Towns via bitcoin-dev wrote:
> On Sun, Feb 28, 2021 at 07:33:30PM +0000, Luke Dashjr via bitcoin-dev wrote:
> > As we saw in 2017 with BIP 9, coordinating activation by miner signal alone, 
> > despite its potential benefits, also leaves open the door to a miner veto. 
> 
> To the contrary, we saw in 2017 that miners could *not* successfully
> veto a BIP 9 activation. It was certainly more effort and risk than was
> desirable to override the attempted veto, but the attempt at vetoing
> nevertheless failed.

You cannot prove a statement to be false by making another statement.

> 
> > It wouldn't be much different than adding back the inflation bug 
> > (CVE-2018-17144) and trusting miners not to exploit it.
> 
> That is ridiculous FUD.

That is an analogy not FUD. A strong one nevertheless but still an analogy.

> 
> > With LOT=False in the picture, however, things can get messy:
> 
> LOT=false is always in the picture if we are talking about a soft-fork:
> the defining feature of a soft-fork is that old node software continues
> to work, and old node software will be entirely indifferent to whether
> activation is signalled or not.
> 

That is the correct description of how soft-forks should work in principle.

> > some users will 
> > enforce Taproot(eg) (those running LOT=True), while others will not (those 
> > with LOT=False)
> 
> If you are following bip8 with lockinontimeout=false, you will enforce
> taproot rules if activation occurs, you will simply not reject blocks if
> activation does not occur.

Also correct in principle.


> > Users with LOT=True will still get all the safety thereof, 
> > but those with LOT=False will (in the event of miners deciding to produce a 
> > chain split) face an unreliable chain, being replaced by the LOT=True chain 
> > every time it overtakes the LOT=False chain in work.
> 
> This assumes anyone mining the chain where taproot does not activate is
> not able to avoid a reorg, despite having majority hashpower (as implied
> by the lot=true chain having to overtake them repeatedly). That's absurd;
> avoiding a reorg is trivially achieved via running "invalidateblock", or
> via pool software examining block headers, or via a patch along the lines
> of MUST_SIGNAL enforcement, but doing the opposite. For concreteness,
> here's a sketch of such a patch:
> 
> https://github.com/ajtowns/bitcoin/commit/f195688bd1eff3780f200e7a049e23b30ca4fe2f

If lot=true has majority of hashpower it wins.
Having to overtake them repeatedly assumes a 50/50 split one chain taking
over the other repeatedly.
In which case OP's statement that the LOT=True chain is safer holds true.

> 
> > For 2 weeks, users with LOT=False would not have a usable network.
> 
> That's also ridiculous FUD.

In context thats not FUD and most certainly it's not ridiculous FUD.
Assuming a 50/50 hashpower split the Lot=False chain has no stability
till difficulty re-adjustment. 

> 
> If it were true, it would mean the activation mechanism was not
> acceptable, as non-upgraded nodes would also not have a usable network
> for the same reason.
> 
> Fortunately, it's not true.

In the split scenario non-upgraded nodes don't play, right? aka they're part of
both chains.

> 
> More generally, if miners are willing to lose significant amounts of
> money mining orphan blocks, they can do that at any time. If they're
> not inclined to do so, it's incredibly straightforward for them to avoid
> doing so, whatever a minority of other miners might do.

Except that when incentives change so does miner behavior.

> 
> > The overall risk is maximally reduced by LOT=True being the only deployed 
> > parameter, and any introduction of LOT=False only increases risk probability 
> > and severity.
> 
> LOT=false is the default behaviour of everything single piece of node
> software out there. That behaviour doesn't need to be introduced, it's
> already universal.

You are again making an "in principle" statement.

> 
> Cheers,
> aj

If you meant this to be a rebuttal, it is not.
It is mostly blanket statements and attacking OP.

-- 

From willtech at live.com.au  Mon Mar  1 01:34:48 2021
From: willtech at live.com.au (LORD HIS EXCELLENCY JAMES HRMH)
Date: Mon, 1 Mar 2021 01:34:48 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <c4da8a65-a3ba-467b-91d2-a839bc6e9d35@gmail.com>
References: <SL2P216MB00896C65DECD973205D17ABE9D9F9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>,
 <CAD5xwhhxw7RhwMWSxa76HZqefpVcJidVpzE7Vbzk+hsD6zfUHQ@mail.gmail.com>
 <SL2P216MB0089322359FD1FC4C89AB1619D9B9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>,
 <c4da8a65-a3ba-467b-91d2-a839bc6e9d35@gmail.com>
Message-ID: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>

Good Afternoon,

I am going to take tough terms with much of your reply and do appreciate a courteous practice. Having previously made public disclosure of my affiliation with Jambler.io it seems sufficient to disclose my affiliation through the link in my email signature block.

My concern is not increased privacy it is maintaining consensus values and the transparency of the blockchain wherein all transactions are published in an immutable record and that forbids the redaction of information by any obfuscation. A separate concern is the availability of a privacy suitable for cash should a Bitcoin user desire and especially without disturbing the existing consensus.

The use of a Bitcoin Mixer is to enable standard equivalent privacy. As you may experience yourself, you do not allow people to follow you around looking in your purse, suppose you are dealing entirely with cash, and to see where and how much you fill it up, and where you spend. Nonetheless, for an honest person, their wallet is available for government audit as are their financial affairs. This is consistent with the existing operation of consensus.

My full email signature block is a disclosure where I have some affiliation with the referenced website being that it carries at least some information that I have provided or that in some way I am associated perhaps only making use of their services. For example, I hardly make a profit from LinkedIn just my information is there. Also, I have made previous public disclosure of the affiliation. Bitcoin Mixer 2.0 is a partner mixer run by Jambler.io wherein I receive a service referral fee and am not in receipt of any part of the process transaction. The operation block diagram provided by Jambler.io is provided here and attached.
[cid:532a68da-7ec4-45b9-ba93-56f572752081]
[ip.bitcointalk.org.png]-Operation of Jambler.io partner mixer
https://ip.bitcointalk.org/?u=https%3A%2F%2Fjambler.io%2Fimages%2Fscheme-1.png&t=622&c=gTi7r1cfh-yynw
from this thread  https://bitcointalk.org/index.php?topic=5267588


The installation script provided by Jambler.io that is the basis of my referral website is also publicly published,
https://github.com/jambler-io/bitcoin-mixer

The disclosure for the partner program is available from Jambler.io however and is made prominently on my referral website. While it may seem lucrative at first I insist all partner profits are reportable on your personal income.
https://jambler.io/become-partner.php

I am certainly better than confident that you appreciate the difference between an open and transparent blockchain and the ability of the user to not reveal details of the content of their wallet publicly.

If further clarification is required may I suggest you pay a token and mix some Bitcoin wherein our discussion may then have some point of reference.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au
www.go-overt.com
and other projects

earn.com/willtech
linkedin.com/in/damianwilliamson


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
________________________________
From: Ariel Lorenzo-Luaces <arielluaces at gmail.com>
Sent: Monday, 1 March 2021 12:07 AM
To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
Subject: Re: [bitcoin-dev] Taproot NACK

Hello LORD HIS EXCELLENCY JAMES HRMH

I find a striking dichotomy between your concern of increased privacy in bitcoin and your link to a bitcoin mixer in your signature www.go-overt.com<http://www.go-overt.com>

At first your concerns seemed genuine but after seeing your promotion of a bitcoin mixer I'm thinking your concerns may be more profit motivated? I can't tell since you failed to disclose your relationship with the mixer.

Could you please clarify your association with the bitcoin mixer and moving forward could you please always do proper disclosure any time you're publically talking about bitcoin transaction privacy. It's only fair to do so as to not mislead people in an attempt to manipulate at worst and just a courteous practice at best.

Cheers
Ariel Lorenzo-Luaces
On Feb 28, 2021, at 4:36 AM, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
Good Evening,

Thank-you for your advice   @JeremyRubin<https://twitter.com/JeremyRubin>  on the basis you advise, "Taproot does not enable monero-like privacy features", I am prepred to withdraw my NACK notably that the existing feeatures of Bitcoin MUST be maintained, and whereby the UTXO of a transaction is identifiable, the PayTo Address, and the amount all without any obfuscation.

Lightning does not really provide obfuscation, it provides a result of a subset of transactions although the operation of the channel is observable to the parties.

The reports I were reading concerning the supposed operation of Taproot published in a public media channel may have been speculation or misinformation nonetheless it is prudent to conditionally reply as you see that I have. It is important not to allow things to slip through the cracks. As you may believe may astute reviewers could make a full disclosure to this list it is not to be expected.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au
www.go-overt.com
and other projects

earn.com/willtech
linkedin.com/in/damianwilliamson


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
________________________________
From: Jeremy <jlrubin at mit.edu>
Sent: Sunday, 28 February 2021 3:14 AM
To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
Subject: Re: [bitcoin-dev] Taproot NACK

I have good news for you: Taproot does not enable monero-like privacy features any moreso than already exist in Bitcoin today. At its core, taproot is a way to make transactions with embedded smart contracts less expensive, done so in a manner that may marginally improve privacy dependent on user behavior (but not in the monero-like way you mention). For example, it makes it possible for lightning channels to look structurally similar to single key wallets, but it does nothing inherently to obfuscate the transaction graph as in monero.

Such "monero-like" transaction graph obfuscation may already exist in Bitcoin via other techniques (coinjoin, payjoin, coinswap, lightning, etc) with or without Taproot, so the point is further moot.

Do you have a source on your reporting?

You may wish to rescind your nack.


--
@JeremyRubin<https://twitter.com/JeremyRubin> <https://twitter.com/JeremyRubin>


On Sat, Feb 27, 2021 at 5:46 AM LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev < bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
Good Afternoon,

It has been reported that Taproot will enable some Monero like features including the ability to hide transactions.

If that is the case I offer a full NACK and let me explain.

A part of the benefit of using Bitcoin is its honesty. The full transaction is published on the blockchain. If that were to change so that transactions may be obfuscated from scrutiny then any government would have unlimited impetus to ban Bitcoin, and speculation has that is the reason India has been reported to have banned cryptocurrencies already.

I am in support of the expanded use case of Bitcoin without harming the established robust fairness and equal equity offered. The core functionality of Bitcoin, its values, must remain unaltered.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au<http://www.willtech.com.au>
www.go-overt.com<http://www.go-overt.com>
and other projects

earn.com/willtech<http://earn.com/willtech>
linkedin.com/in/damianwilliamson<http://linkedin.com/in/damianwilliamson>


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


________________________________

bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210301/5bc45f97/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ip.bitcointalk.org.png
Type: image/png
Size: 81913 bytes
Desc: ip.bitcointalk.org.png
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210301/5bc45f97/attachment-0002.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ip.bitcointalk.org.png
Type: image/png
Size: 81913 bytes
Desc: ip.bitcointalk.org.png
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210301/5bc45f97/attachment-0003.png>

From eric at voskuil.org  Mon Mar  1 22:37:42 2021
From: eric at voskuil.org (Eric Voskuil)
Date: Mon, 1 Mar 2021 14:37:42 -0800
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
Message-ID: <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>

To be clear, is this a NACK because Taproot reduces ?transparency? (increases privacy) on the chain (?maintaining consensus? is obviously an argument against any protocol change, so that?s a red herring)? 

And is it your theory that only an ?honest? (statute abiding) person should have privacy, and not against the state, and/or that mixers are sufficient privacy?

Personally, I?m not moved by such an argument. What do you think is the value proposition of Bitcoin?

e

> On Mar 1, 2021, at 14:21, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> ?
> Good Afternoon,
> 
> I am going to take tough terms with much of your reply and do appreciate a courteous practice. Having previously made public disclosure of my affiliation with Jambler.io it seems sufficient to disclose my affiliation through the link in my email signature block.
> 
> My concern is not increased privacy it is maintaining consensus values and the transparency of the blockchain wherein all transactions are published in an immutable record and that forbids the redaction of information by any obfuscation. A separate concern is the availability of a privacy suitable for cash should a Bitcoin user desire and especially without disturbing the existing consensus.
> 
> The use of a Bitcoin Mixer is to enable standard equivalent privacy. As you may experience yourself, you do not allow people to follow you around looking in your purse, suppose you are dealing entirely with cash, and to see where and how much you fill it up, and where you spend. Nonetheless, for an honest person, their wallet is available for government audit as are their financial affairs. This is consistent with the existing operation of consensus.
> 
> My full email signature block is a disclosure where I have some affiliation with the referenced website being that it carries at least some information that I have provided or that in some way I am associated perhaps only making use of their services. For example, I hardly make a profit from LinkedIn just my information is there. Also, I have made previous public disclosure of the affiliation. Bitcoin Mixer 2.0 is a partner mixer run by Jambler.io wherein I receive a service referral fee and am not in receipt of any part of the process transaction. The operation block diagram provided by Jambler.io is provided here and attached.
> <ip.bitcointalk.org.png>
> 
> [ip.bitcointalk.org.png]-Operation of Jambler.io partner mixer
> https://ip.bitcointalk.org/?u=https%3A%2F%2Fjambler.io%2Fimages%2Fscheme-1.png&t=622&c=gTi7r1cfh-yynw
> from this thread  https://bitcointalk.org/index.php?topic=5267588
> 
> 
> The installation script provided by Jambler.io that is the basis of my referral website is also publicly published,
> https://github.com/jambler-io/bitcoin-mixer
> 
> The disclosure for the partner program is available from Jambler.io however and is made prominently on my referral website. While it may seem lucrative at first I insist all partner profits are reportable on your personal income.
> https://jambler.io/become-partner.php
> 
> I am certainly better than confident that you appreciate the difference between an open and transparent blockchain and the ability of the user to not reveal details of the content of their wallet publicly.
> 
> If further clarification is required may I suggest you pay a token and mix some Bitcoin wherein our discussion may then have some point of reference.
> 
> KING JAMES HRMH
> Great British Empire
> 
> Regards,
> The Australian
> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> of Hougun Manor & Glencoe & British Empire
> MR. Damian A. James Williamson
> Wills
> 
> et al.
> 
>  
> Willtech
> www.willtech.com.au
> www.go-overt.com
> and other projects
>  
> earn.com/willtech
> linkedin.com/in/damianwilliamson
> 
> 
> m. 0487135719
> f. +61261470192
> 
> 
> This email does not constitute a general advice. Please disregard this email if misdelivered.
> From: Ariel Lorenzo-Luaces <arielluaces at gmail.com>
> Sent: Monday, 1 March 2021 12:07 AM
> To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> Subject: Re: [bitcoin-dev] Taproot NACK
>  
> Hello LORD HIS EXCELLENCY JAMES HRMH
> 
> I find a striking dichotomy between your concern of increased privacy in bitcoin and your link to a bitcoin mixer in your signature www.go-overt.com
> 
> At first your concerns seemed genuine but after seeing your promotion of a bitcoin mixer I'm thinking your concerns may be more profit motivated? I can't tell since you failed to disclose your relationship with the mixer.
> 
> Could you please clarify your association with the bitcoin mixer and moving forward could you please always do proper disclosure any time you're publically talking about bitcoin transaction privacy. It's only fair to do so as to not mislead people in an attempt to manipulate at worst and just a courteous practice at best.
> 
> Cheers
> Ariel Lorenzo-Luaces
> On Feb 28, 2021, at 4:36 AM, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> Good Evening,
> 
> Thank-you for your advice   @JeremyRubin  on the basis you advise, "Taproot does not enable monero-like privacy features", I am prepred to withdraw my NACK notably that the existing feeatures of Bitcoin MUST be maintained, and whereby the UTXO of a transaction is identifiable, the PayTo Address, and the amount all without any obfuscation.
> 
> Lightning does not really provide obfuscation, it provides a result of a subset of transactions although the operation of the channel is observable to the parties.
> 
> The reports I were reading concerning the supposed operation of Taproot published in a public media channel may have been speculation or misinformation nonetheless it is prudent to conditionally reply as you see that I have. It is important not to allow things to slip through the cracks. As you may believe may astute reviewers could make a full disclosure to this list it is not to be expected.
> 
> KING JAMES HRMH
> Great British Empire
> 
> Regards,
> The Australian
> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> of Hougun Manor & Glencoe & British Empire
> MR. Damian A. James Williamson
> Wills
> 
> et al.
> 
>  
> Willtech
> www.willtech.com.au
> www.go-overt.com
> and other projects
>  
> earn.com/willtech
> linkedin.com/in/damianwilliamson
> 
> 
> m. 0487135719
> f. +61261470192
> 
> 
> This email does not constitute a general advice. Please disregard this email if misdelivered.
> From: Jeremy <jlrubin at mit.edu>
> Sent: Sunday, 28 February 2021 3:14 AM
> To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> Subject: Re: [bitcoin-dev] Taproot NACK
>  
> I have good news for you: Taproot does not enable monero-like privacy features any moreso than already exist in Bitcoin today. At its core, taproot is a way to make transactions with embedded smart contracts less expensive, done so in a manner that may marginally improve privacy dependent on user behavior (but not in the monero-like way you mention). For example, it makes it possible for lightning channels to look structurally similar to single key wallets, but it does nothing inherently to obfuscate the transaction graph as in monero. 
> 
> Such "monero-like" transaction graph obfuscation may already exist in Bitcoin via other techniques (coinjoin, payjoin, coinswap, lightning, etc) with or without Taproot, so the point is further moot. 
> 
> Do you have a source on your reporting?
> 
> You may wish to rescind your nack. 
> 
> 
> -- 
> @JeremyRubin
> 
> 
> On Sat, Feb 27, 2021 at 5:46 AM LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev < bitcoin-dev at lists.linuxfoundation.org> wrote: 
> Good Afternoon,
> 
> It has been reported that Taproot will enable some Monero like features including the ability to hide transactions.
> 
> If that is the case I offer a full NACK and let me explain.
> 
> A part of the benefit of using Bitcoin is its honesty. The full transaction is published on the blockchain. If that were to change so that transactions may be obfuscated from scrutiny then any government would have unlimited impetus to ban Bitcoin, and speculation has that is the reason India has been reported to have banned cryptocurrencies already.
> 
> I am in support of the expanded use case of Bitcoin without harming the established robust fairness and equal equity offered. The core functionality of Bitcoin, its values, must remain unaltered. 
> 
> KING JAMES HRMH
> Great British Empire 
> 
> Regards,
> The Australian
> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> of Hougun Manor & Glencoe & British Empire
> MR. Damian A. James Williamson
> Wills
> 
> et al.
> 
>  
> Willtech
> www.willtech.com.au
> www.go-overt.com
> and other projects
>  
> earn.com/willtech
> linkedin.com/in/damianwilliamson
> 
> 
> m. 0487135719
> f. +61261470192
> 
> 
> This email does not constitute a general advice. Please disregard this email if misdelivered.
> _______________________________________________ 
> bitcoin-dev mailing list 
> bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev 
>  
> 
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> <ip.bitcointalk.org.png>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210301/0f83b45c/attachment-0001.html>

From antoine.riard at gmail.com  Mon Mar  1 23:11:51 2021
From: antoine.riard at gmail.com (Antoine Riard)
Date: Mon, 1 Mar 2021 18:11:51 -0500
Subject: [bitcoin-dev] Proposal for new "disabletx" p2p message
In-Reply-To: <CAFmfg2sT0sVVHOe5ZbDo5iDwE1Tk2oOXJiCKhNZv_hZVOVLbRw@mail.gmail.com>
References: <CAFp6fsE6gb2PaL3ikDRjS-hNnPLjvtWB+8qZJr3trQe2K9YN+g@mail.gmail.com>
 <CAFmfg2sT0sVVHOe5ZbDo5iDwE1Tk2oOXJiCKhNZv_hZVOVLbRw@mail.gmail.com>
Message-ID: <CALZpt+HF0NwB=arz_buW1bzk7iT3s_Ytj+ZkEhT+iXpuRgmy2Q@mail.gmail.com>

Hi John,

> I think a good counter-argument against simply using `fRelay` for this
> purpose is that we shouldn't reuse a protocol feature designed for one
> function to achieve a totally different aim. However, we know that nodes
> on the network have been using `fRelay` to disable transaction relay
> since Bitcoin Core version 0.12 (when `-blocksonly` was added), and that
> usage was expanded to _all_ nodes running Bitcoin Core version 0.19 or
> later (when block-relay-only connections were introduced), so using
> `fRelay` to disable transaction relay is now de facto part of the p2p
> protocol.


I don't think this is good practice ecosystem-wise. To understand tx-relay
opt-out from peers correctly, a _non_ Bitcoin Core client has to implement
the `fRelay` subset of BIP37, but ignore the wider part around FILTER*
messages. Or implement those messages, only to disconnect peers sending
them, thus following BIP111 requirements.

Thus, future developers of bitcoin software have the choice between
implementing a standard in a non-compliant way or implementing p2p messages
for a light client protocol in a way of deprecation ? Even further, an
interpretation of BIP 37 ("Being able to opt-out of _inv_ messages until
the filter is set prevents a client being flooded with traffic in the brief
window of time") would make it okay to send TX messages to your inbound
block-relay-only peers. And that your client shouldn't be disconnected for
such behavior.

On the long-term, IMHO, better to have a well-defined standard with a clean
negotiation mechanism rather than relying on code specifics of a given
Bitcoin client. If we don't want to introduce a new message and
corresponding code changes, it would be wise at least to extract VERSION's
`fRelay` and how Core handles it in its own BIP.

> I think a better approach would be for Bitcoin Core to only relay addr
> records to an inbound peer if it has previously received an `addr` or
> `addrv2` message from that peer, since that indicates definitively that
> the peer actively gossips `addr` records. This approach was first
> suggested by AJ in the original block-relay-only PR[15].

If a node is willingly to opt-out from addr-relay from one of its inbound
peers, how is it supposed to do ? Of course, you can drop such messages on
the floor, your peer is just going to waste bandwidth for nothing. IIRC
from past irc p2p meetings, we're really unclear about what a
good-propagation-and-privacy-preserving addr-relay strategy should look
like. Note, that distrusting your inbound peers with your addr-relay might
be a sane direction. Explicit addr-relay negotiation will offer more
flexibility (and more hygienic code paths rather than triggering data
structures initialization in few different locations).

> - update the inbound eviction logic to protect more inbound peers which
> do not have transaction relay data structures.

Given inbound connections might be attacker-controlled and tx-relay opt-out
signaling is also attacker-controlled, wouldn't this give a bias toward an
attacker in occupying our inbound slots ? Compared to honest inbound peers,
which in average are going to be full-relay.

Cheers,
Antoine



Le lun. 1 mars 2021 ? 16:07, John Newbery via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> a ?crit :

> Hi Suhas,
>
> Thank you for this proposal. I agree with your aims, but I think a new
> P2P message isn't necessary to achieve them.
>
> # Motivation
>
> There are two distinct (but interacting) motivations:
>
> 1. Allow a node to accept more incoming connections which will only be
>    used for block propagation (no transaction relay or addr gossip),
>    while minimizing resource requirements.
>
> 2. Prevent `addr` gossip messages from being sent to peers which will
>    'black hole' those addrs (i.e. not relay them further).
>
> These motivations interact because if we simply increase the number of
> block-relay-only connections that nodes make without making any
> allowance for the fact those connections won't gossip addr records, then
> we'll increase the number of addr black holes and worsen addr gossip.
>
> # Using fRelay=false to signal no transaction relay.
>
> `fRelay` is an optional field in the `version` message. There are three
> BIPs concerned with `fRelay`:
>
> - BIP 37[1] introduced the `fRelay` field to indicate to the recipient
>   that they must not relay transactions over the connection until a
>   `filteradd` message has been received.
>
> - BIP 60[2] aimed to make the `fRelay` field mandatory. It is not clear
>   how widely this BIP has been adopted by implementations.
>
> - BIP 111[3] introduced a `NODE_BLOOM` service bit to indicate that
>   bloom filters are served by this node. According to this BIP, "If a
>   node does not support bloom filters but receives a "filterload",
>   "filteradd", or "filterclear" message from a peer the node should
>   disconnect that peer immediately."
>
> Within Bitcoin Core:
>
> - PR 1795[4] (merged in January 2013) added support for BIP 37 Bloom
>   filters.
>
> - Since PR 2763[5] (merged in June 2013), Bitcoin Core will _always_
>   include the `fRelay` flag in `version` messages that it sends. Bitcoin
>   Core will tolerate the `fRelay` field being present or absent in any
>   `version` message that it receives[6].
>
> - PR 6579[7] (merged in August 2015) implemented BIP 111. From that
>   point on, a Bitcoin Core node would disconnect peers that sent it
>   `filter*` messages if it hadn't enabled `NODE_BLOOM`, provided the
>   peer's version was >= 70011. In PR 7708[8] (merged in March 2016) this
>   was extended to disconnect any peer that sends a `filter*` message,
>   regardless of its version (in general, a 'polite disconnect' for any
>   peer that requests an unsupported service is probably the best
>   behaviour). In PR 16152[9] (merged in July 2019), serving Bloom
>   filters was disabled by default, due to potential denial-of-service
>   attacks being possible against nodes which serve bloom filters on
>   public connections.
>
> - PR 6993[10] (merged in November 2015) started reusing the `fRelay`
>   field for the new `-blocksonly` mode. If Bitcoin Core is started with
>   `-blocksonly` configured, then it includes `fRelay=false` in all of
>   the `version` messages it sends. In PR 15759[11] (merged  in September
>   2019), this usage of `fRelay` to permanently disable tx relay was
>   extended for use by the new block-relay only connection type.
>
> The net effect is that `fRelay` is already being used to indicate that
> transactions should not be relayed over a connection. In the motivation
> for your BIP, you write:
>
> > The low-bandwidth / minimal-resource nature of these connections is
> > currently known only by the initiator of the connection; this is
> > because the transaction relay field in the version message is not a
> > permanent setting for the lifetime of the connection.  Consequently, a
> > node receiving an inbound connection with transaction relay disabled
> > cannot distinguish between a peer that will never enable transaction
> > relay (as described in BIP 37) and one that will...
>
> However, as AJ points out in his response [12], the Bitcoin Core node
> _does_ know whether transaction relay can be supported as soon as the
> `version` message is received:
>
> > [...] you either set m_tx_relay->fRelayTxes to true via the VERSION
> > message (either explicitly or by not setting fRelay), or you enable it
> > later with FILTERLOAD or FILTERCLEAR, both of which will cause a
> > disconnect if bloom filters aren't supported. Bloom filter support is
> > (optionally?) indicated via a service bit (BIP 111), so you could
> > assume you know whether they're supported as soon as you receive the
> > VERSION line.
>
> i.e. if Bitcoin Core node is running under normal configuration with
> bloom filters disabled for public connections (which is both the default
> setting and highly recommended due to DoS concerns), then as soon as it
> receives a `version` message with `fRelay=false`, it can be sure that
> there will never be any transaction relay with that peer. If the peer
> later tries to enable transaction relay by sending a `filterload`
> message, then the node will disconnect that peer immediately.
>
> In summary, we can continue using the `fRelay` field to indicate that
> no transaction relay can happen for the entire lifetime of the
> connection.  Bitcoin Core can postpone allocating resources for
> transaction relay data structures until after the version message has
> been received to minimize resource usage for incoming block-relay-only
> connections. A rough implementation is here[13]. Obviously, a node that
> has been configured to serve bloom filters on public connections would
> not be able to take advantage of this and accept additional incoming
> block-relay-only peers, but I think that's fine - we already discourage
> that configuration.
>
> I think a good counter-argument against simply using `fRelay` for this
> purpose is that we shouldn't reuse a protocol feature designed for one
> function to achieve a totally different aim. However, we know that nodes
> on the network have been using `fRelay` to disable transaction relay
> since Bitcoin Core version 0.12 (when `-blocksonly` was added), and that
> usage was expanded to _all_ nodes running Bitcoin Core version 0.19 or
> later (when block-relay-only connections were introduced), so using
> `fRelay` to disable transaction relay is now de facto part of the p2p
> protocol.
>
> # Preventing addr black holes
>
> Addresses of potential peers are gossiped around the p2p network using
> `addr` messages. When a Bitcoin Core node learns of a new `addr` record,
> it will relay that record to one or two of its peers, chosen at
> random[14]. The idea is that eventually the `addr` record will reach
> most of the nodes on the network.
>
> If there are too many nodes on the network that receive `addr` records
> and do not relay those records on to their peers (termed _addr black
> hole_ nodes), then propagation of those `addr` records suffers -- any
> individual `addr` record is unlikely to reach a large proportion of
> nodes on the network.
>
> Since a motivation for block-relay-only connections is to protect
> against eclipse attacks and thwart network topology analysis, Bitcoin
> Core will not relay `addr` records on those connections, and will ignore
> any `addr` record received over those connections. Therefore, increasing
> the number of block-relay-only connections without changing the `addr`
> gossip logic is likely to increase the prevalence of addr black holes,
> and negatively impact addr propagation. This is why BIP 338 includes:
>
> > It is RECOMMENDED that a node that has sent or received a disabletx
> > message to/from a peer not send any of these messages to the peer:
> >
> > - addr/getaddr
> > - addrv2 (BIP 155)
>
> I think a better approach would be for Bitcoin Core to only relay addr
> records to an inbound peer if it has previously received an `addr` or
> `addrv2` message from that peer, since that indicates definitively that
> the peer actively gossips `addr` records. This approach was first
> suggested by AJ in the original block-relay-only PR[15].
>
> An advantage of this approach is that it will improve addr propagation
> immediately and without any change to the P2P protocol, and will prevent
> sending `addr` records to all addr black holes (such as light clients),
> not just incoming block-relay-only connections.
>
> # Conclusion
>
> We can increase the permitted number of inbound block-relay-only peers
> while minimizing resource requirement _and_ improving addr record
> propagation, without any changes to the p2p protocol required.
>
> I propose that for Bitcoin Core version 22.0:
>
> - only initialize the transaction relay data structures after the
>   `version` message is received, and only if fRelay=true and
>   `NODE_BLOOM` is not offered on this connection.
> - only initialize the addr data structures for inbound connections when
>   an `addr`, `addrv2` or `getaddr` message is received on the
>   connection, and only consider a connection for addr relay if its addr
>   data structures are initialized.
> - update the inbound eviction logic to protect more inbound peers which
>   do not have transaction relay data structures.
>
> Then, in version 23.0:
>
> - modestly increase the number of outbound block-relay-only connections.
>
> John
>
> [1] https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki
> [2] https://github.com/bitcoin/bips/blob/master/bip-0060.mediawiki
> [3] https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki
> [4] https://github.com/bitcoin/bitcoin/pull/1795
> [5] https://github.com/bitcoin/bitcoin/pull/2763
> [6]
> https://github.com/bitcoin/bitcoin/blob/e49117470b77fb7d53be122c6490ba163c6e304d/src/net_processing.cpp#L2582-L2583
> [7] https://github.com/bitcoin/bitcoin/pull/6579
> [8] https://github.com/bitcoin/bitcoin/pull/7708
> [9] https://github.com/bitcoin/bitcoin/pull/16152
> [10] https://github.com/bitcoin/bitcoin/pull/6993
> [11] https://github.com/bitcoin/bitcoin/pull/15759
> [12]
> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-January/018347.html
> [13] https://github.com/jnewbery/bitcoin/tree/2021-02-lazy-init-peer
> [14]
> https://github.com/bitcoin/bitcoin/blob/e52ce9f2b312b3cf3b0837918e07d7603e241d63/src/net_processing.cpp#L1696-L1700
> [15] https://github.com/bitcoin/bitcoin/pull/15759#issuecomment-527012757
>
> > Hi,
> >
> > I'm proposing the addition of a new, optional p2p message to allow peers
> to communicate that they do not want to send or receive (loose)
> transactions for the lifetime of a connection.
> >
> > The goal of this message is to help facilitate connections on the
> network over which only block-related data (blocks/headers/compact
> blocks/etc) are relayed, to create low-resource connections that help
> protect against partition attacks on the network.  In particular, by adding
> a network message that communicates that transactions will not be relayed
> for the life of the connection, we ease the implementation of software that
> could have increased inbound connection limits for such peers, which in
> turn will make it easier to add additional persistent block-relay-only
> connections on the network -- strengthening network security for little
> additional bandwidth.
> >
> > Software has been deployed for over a year now which makes such
> connections, using the BIP37/BIP60 "fRelay" field in the version message to
> signal that transactions should not be sent initially.  However, BIP37
> allows for transaction relay to be enabled later in the connection's
> lifetime, complicating software that would try to distinguish inbound peers
> that will never relay transactions from those that might.
> >
> > This proposal would add a single new p2p message, "disabletx", which (if
> used at all) must be sent between version and verack.  I propose that this
> message is valid for peers advertising protocol version 70017 or higher.
> Software is free to implement this BIP or ignore this message and remain
> compatible with software that does implement it.
> >
> > Full text of the proposed BIP is below.
> >
> > Thanks,
> > Suhas
> >
> > ---------------------------------------------------
> >
> > <pre>
> >   BIP: XXX
> >   Layer: Peer Services
> >   Title: Disable transaction relay message
> >   Author: Suhas Daftuar <sdaftuar at chaincode.com>
> >   Comments-Summary: No comments yet.
> >   Comments-URI:
> >   Status: Draft
> >   Type: Standards Track
> >   Created: 2020-09-03
> >   License: BSD-2-Clause
> > </pre>
> >
> > ==Abstract==
> >
> > This BIP describes a change to the p2p protocol to allow a node to tell
> a peer
> > that a connection will not be used for transaction relay, to support
> > block-relay-only connections that are currently in use on the network.
> >
> > ==Motivation==
> >
> > For nearly the past year, software has been deployed[1] which initiates
> > connections on the Bitcoin network and sets the transaction relay field
> > (introduced by BIP 37 and also defined in BIP 60) to false, to prevent
> > transaction relay from occurring on the connection. Additionally, addr
> messages
> > received from the peer are ignored by this software.
> >
> > The purpose of these connections is two-fold: by making additional
> > low-bandwidth connections on which blocks can propagate, the robustness
> of a
> > node to network partitioning attacks is strengthened.  Additionally, by
> not
> > relaying transactions and ignoring received addresses, the ability of an
> > adversary to learn the complete network graph (or a subgraph) is
> reduced[2],
> > which in turn increases the cost or difficulty to an attacker seeking to
> carry
> > out a network partitioning attack (when compared with having such
> knowledge).
> >
> > The low-bandwidth / minimal-resource nature of these connections is
> currently
> > known only by the initiator of the connection; this is because the
> transaction
> > relay field in the version message is not a permanent setting for the
> lifetime
> > of the connection.  Consequently, a node receiving an inbound connection
> with
> > transaction relay disabled cannot distinguish between a peer that will
> never
> > enable transaction relay (as described in BIP 37) and one that will.
> Moreover,
> > the node also cannot determine that the incoming connection will ignore
> relayed
> > addresses; with that knowledge a node would likely choose other peers to
> > receive announced addresses instead.
> >
> > This proposal adds a new, optional message that a node can send a peer
> when
> > initiating a connection to that peer, to indicate that connection should
> not be
> > used for transaction-relay for the connection's lifetime. In addition,
> without
> > a current mechanism to negotiate whether addresses should be relayed on a
> > connection, this BIP suggests that address messages not be sent on links
> where
> > tx-relay has been disabled.
> >
> > ==Specification==
> >
> > # A new disabletx message is added, which is defined as an empty message
> where pchCommand == "disabletx".
> > # The protocol version of nodes implementing this BIP must be set to
> 70017 or higher.
> > # If a node sets the transaction relay field in the version message to a
> peer to false, then the disabletx message MAY also be sent in response to a
> version message from that peer if the peer's protocol version is >= 70017.
> If sent, the disabletx message MUST be sent prior to sending a verack.
> > # A node that has sent or received a disabletx message to/from a peer
> MUST NOT send any of these messages to the peer:
> > ## inv messages for transactions
> > ## getdata messages for transactions
> > ## getdata messages for merkleblock (BIP 37)
> > ## filteradd/filterload/filterclear (BIP 37)
> > ## mempool (BIP 35)
> > # It is RECOMMENDED that a node that has sent or received a disabletx
> message to/from a peer not send any of these messages to the peer:
> > ## addr/getaddr
> > ## addrv2 (BIP 155)
> > # The behavior regarding sending or processing other message types is
> not specified by this BIP.
> > # Nodes MAY decide to not remain connected to peers that send this
> message (for example, if trying to find a peer that will relay
> transactions).
> >
> > ==Compatibility==
> >
> > Nodes with protocol version >= 70017 that do not implement this BIP, and
> nodes
> > with protocol version < 70017, will continue to remain compatible with
> > implementing software: transactions would not be relayed to peers
> sending the
> > disabletx message (provided that BIP 37 or BIP 60 has been implemented),
> and while
> > periodic address relay may still take place, software implementing this
> BIP
> > should not be disconnecting such peers solely for that reason.
> >
> > Disabling address relay is suggested but not required by this BIP, to
> allow for
> > future protocol extensions that might specify more carefully how address
> relay
> > is to be negotiated. This BIP's recommendations for software to not relay
> > addresses is intended to be interpreted as guidance in the absence of
> any such
> > future protocol extension, to accommodate existing software behavior.
> >
> > Note that all messages specified in BIP 152, including blocktxn and
> > getblocktxn, are permitted between peers that have sent/received a
> disabletx
> > message, subject to the feature negotiation of BIP 152.
> >
> > ==Implementation==
> >
> > TBD
> >
> > ==References==
> >
> > # Bitcoin Core has [https://github.com/bitcoin/bitcoin/pull/15759
> implemented this functionality] since version 0.19.0.1, released in
> November 2019.
> > # For example, see
> https://www.cs.umd.edu/projects/coinscope/coinscope.pdf and
> https://arxiv.org/pdf/1812.00942.pdf.
> >
> > ==Copyright==
> >
> > This BIP is licensed under the 2-clause BSD license.
>
> On Wed, Jan 6, 2021 at 4:35 PM Suhas Daftuar via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> Hi,
>>
>> I'm proposing the addition of a new, optional p2p message to allow peers
>> to communicate that they do not want to send or receive (loose)
>> transactions for the lifetime of a connection.
>>
>> The goal of this message is to help facilitate connections on the network
>> over which only block-related data (blocks/headers/compact blocks/etc) are
>> relayed, to create low-resource connections that help protect against
>> partition attacks on the network.  In particular, by adding a network
>> message that communicates that transactions will not be relayed for the
>> life of the connection, we ease the implementation of software that could
>> have increased inbound connection limits for such peers, which in turn will
>> make it easier to add additional persistent block-relay-only connections on
>> the network -- strengthening network security for little additional
>> bandwidth.
>>
>> Software has been deployed for over a year now which makes such
>> connections, using the BIP37/BIP60 "fRelay" field in the version message to
>> signal that transactions should not be sent initially.  However, BIP37
>> allows for transaction relay to be enabled later in the connection's
>> lifetime, complicating software that would try to distinguish inbound peers
>> that will never relay transactions from those that might.
>>
>> This proposal would add a single new p2p message, "disabletx", which (if
>> used at all) must be sent between version and verack.  I propose that this
>> message is valid for peers advertising protocol version 70017 or higher.
>> Software is free to implement this BIP or ignore this message and remain
>> compatible with software that does implement it.
>>
>> Full text of the proposed BIP is below.
>>
>> Thanks,
>> Suhas
>>
>> ---------------------------------------------------
>>
>> <pre>
>>   BIP: XXX
>>   Layer: Peer Services
>>   Title: Disable transaction relay message
>>   Author: Suhas Daftuar <sdaftuar at chaincode.com>
>>   Comments-Summary: No comments yet.
>>   Comments-URI:
>>   Status: Draft
>>   Type: Standards Track
>>   Created: 2020-09-03
>>   License: BSD-2-Clause
>> </pre>
>>
>> ==Abstract==
>>
>> This BIP describes a change to the p2p protocol to allow a node to tell a peer
>> that a connection will not be used for transaction relay, to support
>> block-relay-only connections that are currently in use on the network.
>>
>> ==Motivation==
>>
>> For nearly the past year, software has been deployed[1] which initiates
>> connections on the Bitcoin network and sets the transaction relay field
>> (introduced by BIP 37 and also defined in BIP 60) to false, to prevent
>> transaction relay from occurring on the connection. Additionally, addr messages
>> received from the peer are ignored by this software.
>>
>> The purpose of these connections is two-fold: by making additional
>> low-bandwidth connections on which blocks can propagate, the robustness of a
>> node to network partitioning attacks is strengthened.  Additionally, by not
>> relaying transactions and ignoring received addresses, the ability of an
>> adversary to learn the complete network graph (or a subgraph) is reduced[2],
>> which in turn increases the cost or difficulty to an attacker seeking to carry
>> out a network partitioning attack (when compared with having such knowledge).
>>
>> The low-bandwidth / minimal-resource nature of these connections is currently
>> known only by the initiator of the connection; this is because the transaction
>> relay field in the version message is not a permanent setting for the lifetime
>> of the connection.  Consequently, a node receiving an inbound connection with
>> transaction relay disabled cannot distinguish between a peer that will never
>> enable transaction relay (as described in BIP 37) and one that will.  Moreover,
>> the node also cannot determine that the incoming connection will ignore relayed
>> addresses; with that knowledge a node would likely choose other peers to
>> receive announced addresses instead.
>>
>> This proposal adds a new, optional message that a node can send a peer when
>> initiating a connection to that peer, to indicate that connection should not be
>> used for transaction-relay for the connection's lifetime. In addition, without
>> a current mechanism to negotiate whether addresses should be relayed on a
>> connection, this BIP suggests that address messages not be sent on links where
>> tx-relay has been disabled.
>>
>> ==Specification==
>>
>> # A new disabletx message is added, which is defined as an empty message where pchCommand == "disabletx".
>> # The protocol version of nodes implementing this BIP must be set to 70017 or higher.
>> # If a node sets the transaction relay field in the version message to a peer to false, then the disabletx message MAY also be sent in response to a version message from that peer if the peer's protocol version is >= 70017. If sent, the disabletx message MUST be sent prior to sending a verack.
>> # A node that has sent or received a disabletx message to/from a peer MUST NOT send any of these messages to the peer:
>> ## inv messages for transactions
>> ## getdata messages for transactions
>> ## getdata messages for merkleblock (BIP 37)
>> ## filteradd/filterload/filterclear (BIP 37)
>> ## mempool (BIP 35)
>> # It is RECOMMENDED that a node that has sent or received a disabletx message to/from a peer not send any of these messages to the peer:
>> ## addr/getaddr
>> ## addrv2 (BIP 155)
>> # The behavior regarding sending or processing other message types is not specified by this BIP.
>> # Nodes MAY decide to not remain connected to peers that send this message (for example, if trying to find a peer that will relay transactions).
>>
>> ==Compatibility==
>>
>> Nodes with protocol version >= 70017 that do not implement this BIP, and nodes
>> with protocol version < 70017, will continue to remain compatible with
>> implementing software: transactions would not be relayed to peers sending the
>> disabletx message (provided that BIP 37 or BIP 60 has been implemented), and while
>> periodic address relay may still take place, software implementing this BIP
>> should not be disconnecting such peers solely for that reason.
>>
>> Disabling address relay is suggested but not required by this BIP, to allow for
>> future protocol extensions that might specify more carefully how address relay
>> is to be negotiated. This BIP's recommendations for software to not relay
>> addresses is intended to be interpreted as guidance in the absence of any such
>> future protocol extension, to accommodate existing software behavior.
>>
>> Note that all messages specified in BIP 152, including blocktxn and
>> getblocktxn, are permitted between peers that have sent/received a disabletx
>> message, subject to the feature negotiation of BIP 152.
>>
>> ==Implementation==
>>
>> TBD
>>
>> ==References==
>>
>> # Bitcoin Core has [https://github.com/bitcoin/bitcoin/pull/15759 implemented this functionality] since version 0.19.0.1, released in November 2019.
>> # For example, see https://www.cs.umd.edu/projects/coinscope/coinscope.pdf and https://arxiv.org/pdf/1812.00942.pdf.
>>
>> ==Copyright==
>>
>> This BIP is licensed under the 2-clause BSD license.
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210301/43461c45/attachment-0001.html>

From email at esotericnonsense.com  Tue Mar  2 01:16:29 2021
From: email at esotericnonsense.com (Daniel Edgecumbe)
Date: Tue, 02 Mar 2021 01:16:29 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
Message-ID: <fbc4ce6c-111d-4dcc-8fc7-03ea91855bc4@www.fastmail.com>

Any "transparency" in the blockchain, beyond that required for a participant to determine valid ownership, can only reasonably be thought of as a bug.

Today I spent approximately $5 at a chip shop in North London in cash. Besides the fact that I have voluntarily chosen to share this information, it is absolutely no concern of yourself or any other party that this transaction has occured.

Bitcoin is digital cash.

Daniel Edgecumbe | esotericnonsense
email at esotericnonsense.com | https://esotericnonsense.com

On Mon, Mar 1, 2021, at 22:37, Eric Voskuil via bitcoin-dev wrote:
> To be clear, is this a NACK because Taproot reduces ?transparency? 
> (increases privacy) on the chain (?maintaining consensus? is obviously 
> an argument against any protocol change, so that?s a red herring)? 
> 
> And is it your theory that only an ?honest? (statute abiding) person 
> should have privacy, and not against the state, and/or that mixers are 
> sufficient privacy?
> 
> Personally, I?m not moved by such an argument. What do you think is the 
> value proposition of Bitcoin?
> 
> e
> 
> > On Mar 1, 2021, at 14:21, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > 
> > ? 
> > Good Afternoon,
> > 
> > I am going to take tough terms with much of your reply and do appreciate a courteous practice. Having previously made public disclosure of my affiliation with Jambler.io it seems sufficient to disclose my affiliation through the link in my email signature block.
> > 
> > My concern is not increased privacy it is maintaining consensus values and the transparency of the blockchain wherein all transactions are published in an immutable record and that forbids the redaction of information by any obfuscation. A separate concern is the availability of a privacy suitable for cash should a Bitcoin user desire and especially without disturbing the existing consensus.
> > 
> > The use of a Bitcoin Mixer is to enable standard equivalent privacy. As you may experience yourself, you do not allow people to follow you around looking in your purse, suppose you are dealing entirely with cash, and to see where and how much you fill it up, and where you spend. Nonetheless, for an honest person, their wallet is available for government audit as are their financial affairs. This is consistent with the existing operation of consensus.
> > 
> > My full email signature block is a disclosure where I have some affiliation with the referenced website being that it carries at least some information that I have provided or that in some way I am associated perhaps only making use of their services. For example, I hardly make a profit from LinkedIn just my information is there. Also, I have made previous public disclosure of the affiliation. Bitcoin Mixer 2.0 is a partner mixer run by Jambler.io wherein I receive a service referral fee and am not in receipt of any part of the process transaction. The operation block diagram provided by Jambler.io is provided here and attached.
> > <ip.bitcointalk.org.png>
> > 
> > [ip.bitcointalk.org.png]-Operation of Jambler.io partner mixer
> > https://ip.bitcointalk.org/?u=https%3A%2F%2Fjambler.io%2Fimages%2Fscheme-1.png&t=622&c=gTi7r1cfh-yynw
> > from this thread  https://bitcointalk.org/index.php?topic=5267588
> > 
> > 
> > The installation script provided by Jambler.io that is the basis of my referral website is also publicly published,
> > https://github.com/jambler-io/bitcoin-mixer
> > 
> > The disclosure for the partner program is available from Jambler.io however and is made prominently on my referral website. While it may seem lucrative at first I insist all partner profits are reportable on your personal income.
> > https://jambler.io/become-partner.php
> > 
> > I am certainly better than confident that you appreciate the difference between an open and transparent blockchain and the ability of the user to not reveal details of the content of their wallet publicly.
> > 
> > If further clarification is required may I suggest you pay a token and mix some Bitcoin wherein our discussion may then have some point of reference.
> > 
> > KING JAMES HRMH
> > Great British Empire
> > 
> > Regards,
> > The Australian
> > LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> > of Hougun Manor & Glencoe & British Empire
> > MR. Damian A. James Williamson
> > Wills
> > 
> > et al.
> > 
> >  
> > Willtech
> > www.willtech.com.au
> > www.go-overt.com
> > and other projects
> >  
> > earn.com/willtech
> > linkedin.com/in/damianwilliamson
> > 
> > 
> > m. 0487135719
> > f. +61261470192
> > 
> > 
> > This email does not constitute a general advice. Please disregard this email if misdelivered.
> > *From:* Ariel Lorenzo-Luaces <arielluaces at gmail.com>
> > *Sent:* Monday, 1 March 2021 12:07 AM
> > *To:* LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> > *Subject:* Re: [bitcoin-dev] Taproot NACK 
> >  
> > Hello LORD HIS EXCELLENCY JAMES HRMH
> > 
> > I find a striking dichotomy between your concern of increased privacy in bitcoin and your link to a bitcoin mixer in your signature www.go-overt.com
> > 
> > At first your concerns seemed genuine but after seeing your promotion of a bitcoin mixer I'm thinking your concerns may be more profit motivated? I can't tell since you failed to disclose your relationship with the mixer.
> > 
> > Could you please clarify your association with the bitcoin mixer and moving forward could you please always do proper disclosure any time you're publically talking about bitcoin transaction privacy. It's only fair to do so as to not mislead people in an attempt to manipulate at worst and just a courteous practice at best.
> > 
> > Cheers
> > Ariel Lorenzo-Luaces
> > On Feb 28, 2021, at 4:36 AM, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote: 
> >> Good Evening, 
> >> 
> >> Thank-you for your advice   @JeremyRubin <https://twitter.com/JeremyRubin>  on the basis you advise, "Taproot does not enable monero-like privacy features", I am prepred to withdraw my NACK notably that the existing feeatures of Bitcoin MUST be maintained, and whereby the UTXO of a transaction is identifiable, the PayTo Address, and the amount all without any obfuscation. 
> >> 
> >> Lightning does not really provide obfuscation, it provides a result of a subset of transactions although the operation of the channel is observable to the parties. 
> >> 
> >> The reports I were reading concerning the supposed operation of Taproot published in a public media channel may have been speculation or misinformation nonetheless it is prudent to conditionally reply as you see that I have. It is important not to allow things to slip through the cracks. As you may believe may astute reviewers could make a full disclosure to this list it is not to be expected. 
> >> 
> >> KING JAMES HRMH 
> >> Great British Empire 
> >> 
> >> Regards, 
> >> The Australian 
> >> LORD HIS EXCELLENCY JAMES HRMH (& HMRH) 
> >> of Hougun Manor & Glencoe & British Empire 
> >> MR. Damian A. James Williamson 
> >> Wills 
> >> 
> >> et al. 
> >> 
> >>   
> >> Willtech 
> >> www.willtech.com.au 
> >> www.go-overt.com 
> >> and other projects 
> >>   
> >> earn.com/willtech 
> >> linkedin.com/in/damianwilliamson 
> >> 
> >> 
> >> m. 0487135719 
> >> f. +61261470192 
> >> 
> >> 
> >> This email does not constitute a general advice. Please disregard this email if misdelivered. 
> >> *From:* Jeremy <jlrubin at mit.edu>
> >> *Sent:* Sunday, 28 February 2021 3:14 AM
> >> *To:* LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> >> *Subject:* Re: [bitcoin-dev] Taproot NACK 
> >>   
> >> I have good news for you: Taproot does not enable monero-like privacy features any moreso than already exist in Bitcoin today. At its core, taproot is a way to make transactions with embedded smart contracts less expensive, done so in a manner that may marginally improve privacy dependent on user behavior (but not in the monero-like way you mention). For example, it makes it possible for lightning channels to look structurally similar to single key wallets, but it does nothing inherently to obfuscate the transaction graph as in monero. 
> >> 
> >> Such "monero-like" transaction graph obfuscation may already exist in Bitcoin via other techniques (coinjoin, payjoin, coinswap, lightning, etc) with or without Taproot, so the point is further moot. 
> >> 
> >> Do you have a source on your reporting? 
> >> 
> >> You may wish to rescind your nack. 
> >> 
> >> 
> >> -- 
> >> @JeremyRubin <https://twitter.com/JeremyRubin>  <https://twitter.com/JeremyRubin>
> >> 
> >> 
> >> On Sat, Feb 27, 2021 at 5:46 AM LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev < bitcoin-dev at lists.linuxfoundation.org> wrote: 
> >>> Good Afternoon, 
> >>> 
> >>> It has been reported that Taproot will enable some Monero like features including the ability to hide transactions. 
> >>> 
> >>> If that is the case I offer a full NACK and let me explain. 
> >>> 
> >>> A part of the benefit of using Bitcoin is its honesty. The full transaction is published on the blockchain. If that were to change so that transactions may be obfuscated from scrutiny then any government would have unlimited impetus to ban Bitcoin, and speculation has that is the reason India has been reported to have banned cryptocurrencies already. 
> >>> 
> >>> I am in support of the expanded use case of Bitcoin without harming the established robust fairness and equal equity offered. The core functionality of Bitcoin, its values, must remain unaltered. 
> >>> 
> >>> KING JAMES HRMH 
> >>> Great British Empire 
> >>> 
> >>> Regards, 
> >>> The Australian 
> >>> LORD HIS EXCELLENCY JAMES HRMH (& HMRH) 
> >>> of Hougun Manor & Glencoe & British Empire 
> >>> MR. Damian A. James Williamson 
> >>> Wills 
> >>> 
> >>> et al. 
> >>> 
> >>>   
> >>> Willtech 
> >>> www.willtech.com.au 
> >>> www.go-overt.com 
> >>> and other projects 
> >>>   
> >>> earn.com/willtech 
> >>> linkedin.com/in/damianwilliamson 
> >>> 
> >>> 
> >>> m. 0487135719 
> >>> f. +61261470192 
> >>> 
> >>> 
> >>> This email does not constitute a general advice. Please disregard this email if misdelivered. 
> >>> _______________________________________________ 
> >>> bitcoin-dev mailing list 
> >>> bitcoin-dev at lists.linuxfoundation.org 
> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev 
> >>  
> >> bitcoin-dev mailing list
> >> bitcoin-dev at lists.linuxfoundation.org
> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > <ip.bitcointalk.org.png>
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

From erik at q32.com  Tue Mar  2 06:11:17 2021
From: erik at q32.com (Erik Aronesty)
Date: Tue, 2 Mar 2021 01:11:17 -0500
Subject: [bitcoin-dev] LOT=False is dangerous and shouldn't be used
In-Reply-To: <86f87c6e5e4fd05c2295de2209694771@cock.li>
References: <202102281933.30691.luke@dashjr.org>
 <20210301150614.vz557ssn2epxknjn@erisian.com.au>
 <86f87c6e5e4fd05c2295de2209694771@cock.li>
Message-ID: <CAJowKgLWfc8WJF9guy_3nztBm=iJ9+jWRMEg-Vadj9cdXGvkFA@mail.gmail.com>

This is the declining percentage of signaling activation.

It has all the benefits of both.

Eventually it becomes a LOT=true, so any argument for LOT=true holds

And all of the arguments for LOT=false are satisfied by the cool down
period.



On Mon, Mar 1, 2021, 12:05 PM yanmaani--- via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> How about a compromise?
>
> With LOT=false, taproot will be activated if at least 95% of the miners
> vote yes.
> With LOT=true, taproot will be activated if at least 0% of the miners
> vote yes.
> ...with LOT=maybe, taproot will be activated if at least ~some% of the
> miners vote yes?
>
> If you want the 'emergency cancel' feature without binding yourself to
> it, couldn't you have some middle-of-the-road solution? "Taproot will be
> enabled if miner support ever goes above 95%, or on flag day if miner
> support is >20% then". That would prevent obstreperous miners from doing
> too much damage, while still hopefully making it possible to bail out of
> a disaster.
>
> On 2021-03-01 15:06, Anthony Towns via bitcoin-dev wrote:
> > On Sun, Feb 28, 2021 at 07:33:30PM +0000, Luke Dashjr via bitcoin-dev
> > wrote:
> >> As we saw in 2017 with BIP 9, coordinating activation by miner signal
> >> alone,
> >> despite its potential benefits, also leaves open the door to a miner
> >> veto.
> >
> > To the contrary, we saw in 2017 that miners could *not* successfully
> > veto a BIP 9 activation. It was certainly more effort and risk than was
> > desirable to override the attempted veto, but the attempt at vetoing
> > nevertheless failed.
> >
> >> It wouldn't be much different than adding back the inflation bug
> >> (CVE-2018-17144) and trusting miners not to exploit it.
> >
> > That is ridiculous FUD.
> >
> >> With LOT=False in the picture, however, things can get messy:
> >
> > LOT=false is always in the picture if we are talking about a soft-fork:
> > the defining feature of a soft-fork is that old node software continues
> > to work, and old node software will be entirely indifferent to whether
> > activation is signalled or not.
> >
> >> some users will
> >> enforce Taproot(eg) (those running LOT=True), while others will not
> >> (those
> >> with LOT=False)
> >
> > If you are following bip8 with lockinontimeout=false, you will enforce
> > taproot rules if activation occurs, you will simply not reject blocks
> > if
> > activation does not occur.
> >
> >> Users with LOT=True will still get all the safety thereof,
> >> but those with LOT=False will (in the event of miners deciding to
> >> produce a
> >> chain split) face an unreliable chain, being replaced by the LOT=True
> >> chain
> >> every time it overtakes the LOT=False chain in work.
> >
> > This assumes anyone mining the chain where taproot does not activate is
> > not able to avoid a reorg, despite having majority hashpower (as
> > implied
> > by the lot=true chain having to overtake them repeatedly). That's
> > absurd;
> > avoiding a reorg is trivially achieved via running "invalidateblock",
> > or
> > via pool software examining block headers, or via a patch along the
> > lines
> > of MUST_SIGNAL enforcement, but doing the opposite. For concreteness,
> > here's a sketch of such a patch:
> >
> >
> https://github.com/ajtowns/bitcoin/commit/f195688bd1eff3780f200e7a049e23b30ca4fe2f
> >
> >> For 2 weeks, users with LOT=False would not have a usable network.
> >
> > That's also ridiculous FUD.
> >
> > If it were true, it would mean the activation mechanism was not
> > acceptable, as non-upgraded nodes would also not have a usable network
> > for the same reason.
> >
> > Fortunately, it's not true.
> >
> > More generally, if miners are willing to lose significant amounts of
> > money mining orphan blocks, they can do that at any time. If they're
> > not inclined to do so, it's incredibly straightforward for them to
> > avoid
> > doing so, whatever a minority of other miners might do.
> >
> >> The overall risk is maximally reduced by LOT=True being the only
> >> deployed
> >> parameter, and any introduction of LOT=False only increases risk
> >> probability
> >> and severity.
> >
> > LOT=false is the default behaviour of everything single piece of node
> > software out there. That behaviour doesn't need to be introduced, it's
> > already universal.
> >
> > Cheers,
> > aj
> >
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210302/1ac9853a/attachment-0001.html>

From belcher at riseup.net  Tue Mar  2 11:56:11 2021
From: belcher at riseup.net (Chris Belcher)
Date: Tue, 2 Mar 2021 11:56:11 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
Message-ID: <170b27c0-436f-c440-e3c3-f9577b764972@riseup.net>

The idea of a fully-transparent bitcoin is dead and has been for many
years. This is because of various privacy tech such as CoinJoin,
Lightning Network, PayJoin, change avoidance, avoiding address reuse,
etc, along with a few new ones like CoinSwap and WabiSabi hopefully
coming soon.

On 01/03/2021 22:37, Eric Voskuil via bitcoin-dev wrote:
> To be clear, is this a NACK because Taproot reduces ?transparency? (increases privacy) on the chain (?maintaining consensus? is obviously an argument against any protocol change, so that?s a red herring)? 
> 
> And is it your theory that only an ?honest? (statute abiding) person should have privacy, and not against the state, and/or that mixers are sufficient privacy?
> 
> Personally, I?m not moved by such an argument. What do you think is the value proposition of Bitcoin?
> 
> e
> 
>> On Mar 1, 2021, at 14:21, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>> ?
>> Good Afternoon,
>>
>> I am going to take tough terms with much of your reply and do appreciate a courteous practice. Having previously made public disclosure of my affiliation with Jambler.io it seems sufficient to disclose my affiliation through the link in my email signature block.
>>
>> My concern is not increased privacy it is maintaining consensus values and the transparency of the blockchain wherein all transactions are published in an immutable record and that forbids the redaction of information by any obfuscation. A separate concern is the availability of a privacy suitable for cash should a Bitcoin user desire and especially without disturbing the existing consensus.
>>
>> The use of a Bitcoin Mixer is to enable standard equivalent privacy. As you may experience yourself, you do not allow people to follow you around looking in your purse, suppose you are dealing entirely with cash, and to see where and how much you fill it up, and where you spend. Nonetheless, for an honest person, their wallet is available for government audit as are their financial affairs. This is consistent with the existing operation of consensus.
>>
>> My full email signature block is a disclosure where I have some affiliation with the referenced website being that it carries at least some information that I have provided or that in some way I am associated perhaps only making use of their services. For example, I hardly make a profit from LinkedIn just my information is there. Also, I have made previous public disclosure of the affiliation. Bitcoin Mixer 2.0 is a partner mixer run by Jambler.io wherein I receive a service referral fee and am not in receipt of any part of the process transaction. The operation block diagram provided by Jambler.io is provided here and attached.
>> <ip.bitcointalk.org.png>
>>
>> [ip.bitcointalk.org.png]-Operation of Jambler.io partner mixer
>> https://ip.bitcointalk.org/?u=https%3A%2F%2Fjambler.io%2Fimages%2Fscheme-1.png&t=622&c=gTi7r1cfh-yynw
>> from this thread  https://bitcointalk.org/index.php?topic=5267588
>>
>>
>> The installation script provided by Jambler.io that is the basis of my referral website is also publicly published,
>> https://github.com/jambler-io/bitcoin-mixer
>>
>> The disclosure for the partner program is available from Jambler.io however and is made prominently on my referral website. While it may seem lucrative at first I insist all partner profits are reportable on your personal income.
>> https://jambler.io/become-partner.php
>>
>> I am certainly better than confident that you appreciate the difference between an open and transparent blockchain and the ability of the user to not reveal details of the content of their wallet publicly.
>>
>> If further clarification is required may I suggest you pay a token and mix some Bitcoin wherein our discussion may then have some point of reference.
>>
>> KING JAMES HRMH
>> Great British Empire
>>
>> Regards,
>> The Australian
>> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
>> of Hougun Manor & Glencoe & British Empire
>> MR. Damian A. James Williamson
>> Wills
>>
>> et al.
>>
>>  
>> Willtech
>> www.willtech.com.au
>> www.go-overt.com
>> and other projects
>>  
>> earn.com/willtech
>> linkedin.com/in/damianwilliamson
>>
>>
>> m. 0487135719
>> f. +61261470192
>>
>>
>> This email does not constitute a general advice. Please disregard this email if misdelivered.
>> From: Ariel Lorenzo-Luaces <arielluaces at gmail.com>
>> Sent: Monday, 1 March 2021 12:07 AM
>> To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
>> Subject: Re: [bitcoin-dev] Taproot NACK
>>  
>> Hello LORD HIS EXCELLENCY JAMES HRMH
>>
>> I find a striking dichotomy between your concern of increased privacy in bitcoin and your link to a bitcoin mixer in your signature www.go-overt.com
>>
>> At first your concerns seemed genuine but after seeing your promotion of a bitcoin mixer I'm thinking your concerns may be more profit motivated? I can't tell since you failed to disclose your relationship with the mixer.
>>
>> Could you please clarify your association with the bitcoin mixer and moving forward could you please always do proper disclosure any time you're publically talking about bitcoin transaction privacy. It's only fair to do so as to not mislead people in an attempt to manipulate at worst and just a courteous practice at best.
>>
>> Cheers
>> Ariel Lorenzo-Luaces
>> On Feb 28, 2021, at 4:36 AM, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> Good Evening,
>>
>> Thank-you for your advice   @JeremyRubin  on the basis you advise, "Taproot does not enable monero-like privacy features", I am prepred to withdraw my NACK notably that the existing feeatures of Bitcoin MUST be maintained, and whereby the UTXO of a transaction is identifiable, the PayTo Address, and the amount all without any obfuscation.
>>
>> Lightning does not really provide obfuscation, it provides a result of a subset of transactions although the operation of the channel is observable to the parties.
>>
>> The reports I were reading concerning the supposed operation of Taproot published in a public media channel may have been speculation or misinformation nonetheless it is prudent to conditionally reply as you see that I have. It is important not to allow things to slip through the cracks. As you may believe may astute reviewers could make a full disclosure to this list it is not to be expected.
>>
>> KING JAMES HRMH
>> Great British Empire
>>
>> Regards,
>> The Australian
>> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
>> of Hougun Manor & Glencoe & British Empire
>> MR. Damian A. James Williamson
>> Wills
>>
>> et al.
>>
>>  
>> Willtech
>> www.willtech.com.au
>> www.go-overt.com
>> and other projects
>>  
>> earn.com/willtech
>> linkedin.com/in/damianwilliamson
>>
>>
>> m. 0487135719
>> f. +61261470192
>>
>>
>> This email does not constitute a general advice. Please disregard this email if misdelivered.
>> From: Jeremy <jlrubin at mit.edu>
>> Sent: Sunday, 28 February 2021 3:14 AM
>> To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
>> Subject: Re: [bitcoin-dev] Taproot NACK
>>  
>> I have good news for you: Taproot does not enable monero-like privacy features any moreso than already exist in Bitcoin today. At its core, taproot is a way to make transactions with embedded smart contracts less expensive, done so in a manner that may marginally improve privacy dependent on user behavior (but not in the monero-like way you mention). For example, it makes it possible for lightning channels to look structurally similar to single key wallets, but it does nothing inherently to obfuscate the transaction graph as in monero. 
>>
>> Such "monero-like" transaction graph obfuscation may already exist in Bitcoin via other techniques (coinjoin, payjoin, coinswap, lightning, etc) with or without Taproot, so the point is further moot. 
>>
>> Do you have a source on your reporting?
>>
>> You may wish to rescind your nack. 
>>
>>
>> -- 
>> @JeremyRubin
>>
>>
>> On Sat, Feb 27, 2021 at 5:46 AM LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev < bitcoin-dev at lists.linuxfoundation.org> wrote: 
>> Good Afternoon,
>>
>> It has been reported that Taproot will enable some Monero like features including the ability to hide transactions.
>>
>> If that is the case I offer a full NACK and let me explain.
>>
>> A part of the benefit of using Bitcoin is its honesty. The full transaction is published on the blockchain. If that were to change so that transactions may be obfuscated from scrutiny then any government would have unlimited impetus to ban Bitcoin, and speculation has that is the reason India has been reported to have banned cryptocurrencies already.
>>
>> I am in support of the expanded use case of Bitcoin without harming the established robust fairness and equal equity offered. The core functionality of Bitcoin, its values, must remain unaltered. 
>>
>> KING JAMES HRMH
>> Great British Empire 
>>
>> Regards,
>> The Australian
>> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
>> of Hougun Manor & Glencoe & British Empire
>> MR. Damian A. James Williamson
>> Wills
>>
>> et al.
>>
>>  
>> Willtech
>> www.willtech.com.au
>> www.go-overt.com
>> and other projects
>>  
>> earn.com/willtech
>> linkedin.com/in/damianwilliamson
>>
>>
>> m. 0487135719
>> f. +61261470192
>>
>>
>> This email does not constitute a general advice. Please disregard this email if misdelivered.
>> _______________________________________________ 
>> bitcoin-dev mailing list 
>> bitcoin-dev at lists.linuxfoundation.org 
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev 
>>  
>>
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> <ip.bitcointalk.org.png>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

From john at johnnewbery.com  Tue Mar  2 12:11:23 2021
From: john at johnnewbery.com (John Newbery)
Date: Tue, 2 Mar 2021 12:11:23 +0000
Subject: [bitcoin-dev] Proposal for new "disabletx" p2p message
In-Reply-To: <CALZpt+HF0NwB=arz_buW1bzk7iT3s_Ytj+ZkEhT+iXpuRgmy2Q@mail.gmail.com>
References: <CAFp6fsE6gb2PaL3ikDRjS-hNnPLjvtWB+8qZJr3trQe2K9YN+g@mail.gmail.com>
 <CAFmfg2sT0sVVHOe5ZbDo5iDwE1Tk2oOXJiCKhNZv_hZVOVLbRw@mail.gmail.com>
 <CALZpt+HF0NwB=arz_buW1bzk7iT3s_Ytj+ZkEhT+iXpuRgmy2Q@mail.gmail.com>
Message-ID: <CAFmfg2ubukd4QTRGpB2-aczuiJ94T60xa-Fs1Kn843iQiEfKiQ@mail.gmail.com>

Antoine,

Nothing in my proposal below precludes introducing a more comprehensive
feature negotiation mechanism at some later date. The only changes I'm
proposing are to Bitcoin Core's policy for how it treats its peer
connections.

> If we don't want to introduce a new message and
> corresponding code changes, it would be wise at least to extract VERSION's
> `fRelay` and how Core handles it in its own BIP.

I believe this is what BIP 60 does, or did you have something else in
mind?

> Explicit addr-relay negotiation will offer more
> flexibility

I agree!

> (and more hygienic code paths rather than triggering data
> structures initialization in few different locations).

Not sure what you mean by hygienic here. This seems like a code style
preference.

> Given inbound connections might be attacker-controlled and tx-relay
opt-out
> signaling is also attacker-controlled, wouldn't this give a bias toward an
> attacker in occupying our inbound slots ? Compared to honest inbound
peers,
> which in average are going to be full-relay.

Sorry - I meant that Bitcoin Core should allow a certain number of
inbound peers that do not relay txs. This would be in addition to the
full-relay inbound peers.

John

On Mon, Mar 1, 2021 at 11:11 PM Antoine Riard <antoine.riard at gmail.com>
wrote:

> Hi John,
>
> > I think a good counter-argument against simply using `fRelay` for this
> > purpose is that we shouldn't reuse a protocol feature designed for one
> > function to achieve a totally different aim. However, we know that nodes
> > on the network have been using `fRelay` to disable transaction relay
> > since Bitcoin Core version 0.12 (when `-blocksonly` was added), and that
> > usage was expanded to _all_ nodes running Bitcoin Core version 0.19 or
> > later (when block-relay-only connections were introduced), so using
> > `fRelay` to disable transaction relay is now de facto part of the p2p
> > protocol.
>
>
> I don't think this is good practice ecosystem-wise. To understand tx-relay
> opt-out from peers correctly, a _non_ Bitcoin Core client has to implement
> the `fRelay` subset of BIP37, but ignore the wider part around FILTER*
> messages. Or implement those messages, only to disconnect peers sending
> them, thus following BIP111 requirements.
>
> Thus, future developers of bitcoin software have the choice between
> implementing a standard in a non-compliant way or implementing p2p messages
> for a light client protocol in a way of deprecation ? Even further, an
> interpretation of BIP 37 ("Being able to opt-out of _inv_ messages until
> the filter is set prevents a client being flooded with traffic in the brief
> window of time") would make it okay to send TX messages to your inbound
> block-relay-only peers. And that your client shouldn't be disconnected for
> such behavior.
>
> On the long-term, IMHO, better to have a well-defined standard with a
> clean negotiation mechanism rather than relying on code specifics of a
> given Bitcoin client. If we don't want to introduce a new message and
> corresponding code changes, it would be wise at least to extract VERSION's
> `fRelay` and how Core handles it in its own BIP.
>
> > I think a better approach would be for Bitcoin Core to only relay addr
> > records to an inbound peer if it has previously received an `addr` or
> > `addrv2` message from that peer, since that indicates definitively that
> > the peer actively gossips `addr` records. This approach was first
> > suggested by AJ in the original block-relay-only PR[15].
>
> If a node is willingly to opt-out from addr-relay from one of its inbound
> peers, how is it supposed to do ? Of course, you can drop such messages on
> the floor, your peer is just going to waste bandwidth for nothing. IIRC
> from past irc p2p meetings, we're really unclear about what a
> good-propagation-and-privacy-preserving addr-relay strategy should look
> like. Note, that distrusting your inbound peers with your addr-relay might
> be a sane direction. Explicit addr-relay negotiation will offer more
> flexibility (and more hygienic code paths rather than triggering data
> structures initialization in few different locations).
>
> > - update the inbound eviction logic to protect more inbound peers which
> > do not have transaction relay data structures.
>
> Given inbound connections might be attacker-controlled and tx-relay
> opt-out signaling is also attacker-controlled, wouldn't this give a bias
> toward an attacker in occupying our inbound slots ? Compared to honest
> inbound peers, which in average are going to be full-relay.
>
> Cheers,
> Antoine
>
>
>
> Le lun. 1 mars 2021 ? 16:07, John Newbery via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> a ?crit :
>
>> Hi Suhas,
>>
>> Thank you for this proposal. I agree with your aims, but I think a new
>> P2P message isn't necessary to achieve them.
>>
>> # Motivation
>>
>> There are two distinct (but interacting) motivations:
>>
>> 1. Allow a node to accept more incoming connections which will only be
>>    used for block propagation (no transaction relay or addr gossip),
>>    while minimizing resource requirements.
>>
>> 2. Prevent `addr` gossip messages from being sent to peers which will
>>    'black hole' those addrs (i.e. not relay them further).
>>
>> These motivations interact because if we simply increase the number of
>> block-relay-only connections that nodes make without making any
>> allowance for the fact those connections won't gossip addr records, then
>> we'll increase the number of addr black holes and worsen addr gossip.
>>
>> # Using fRelay=false to signal no transaction relay.
>>
>> `fRelay` is an optional field in the `version` message. There are three
>> BIPs concerned with `fRelay`:
>>
>> - BIP 37[1] introduced the `fRelay` field to indicate to the recipient
>>   that they must not relay transactions over the connection until a
>>   `filteradd` message has been received.
>>
>> - BIP 60[2] aimed to make the `fRelay` field mandatory. It is not clear
>>   how widely this BIP has been adopted by implementations.
>>
>> - BIP 111[3] introduced a `NODE_BLOOM` service bit to indicate that
>>   bloom filters are served by this node. According to this BIP, "If a
>>   node does not support bloom filters but receives a "filterload",
>>   "filteradd", or "filterclear" message from a peer the node should
>>   disconnect that peer immediately."
>>
>> Within Bitcoin Core:
>>
>> - PR 1795[4] (merged in January 2013) added support for BIP 37 Bloom
>>   filters.
>>
>> - Since PR 2763[5] (merged in June 2013), Bitcoin Core will _always_
>>   include the `fRelay` flag in `version` messages that it sends. Bitcoin
>>   Core will tolerate the `fRelay` field being present or absent in any
>>   `version` message that it receives[6].
>>
>> - PR 6579[7] (merged in August 2015) implemented BIP 111. From that
>>   point on, a Bitcoin Core node would disconnect peers that sent it
>>   `filter*` messages if it hadn't enabled `NODE_BLOOM`, provided the
>>   peer's version was >= 70011. In PR 7708[8] (merged in March 2016) this
>>   was extended to disconnect any peer that sends a `filter*` message,
>>   regardless of its version (in general, a 'polite disconnect' for any
>>   peer that requests an unsupported service is probably the best
>>   behaviour). In PR 16152[9] (merged in July 2019), serving Bloom
>>   filters was disabled by default, due to potential denial-of-service
>>   attacks being possible against nodes which serve bloom filters on
>>   public connections.
>>
>> - PR 6993[10] (merged in November 2015) started reusing the `fRelay`
>>   field for the new `-blocksonly` mode. If Bitcoin Core is started with
>>   `-blocksonly` configured, then it includes `fRelay=false` in all of
>>   the `version` messages it sends. In PR 15759[11] (merged  in September
>>   2019), this usage of `fRelay` to permanently disable tx relay was
>>   extended for use by the new block-relay only connection type.
>>
>> The net effect is that `fRelay` is already being used to indicate that
>> transactions should not be relayed over a connection. In the motivation
>> for your BIP, you write:
>>
>> > The low-bandwidth / minimal-resource nature of these connections is
>> > currently known only by the initiator of the connection; this is
>> > because the transaction relay field in the version message is not a
>> > permanent setting for the lifetime of the connection.  Consequently, a
>> > node receiving an inbound connection with transaction relay disabled
>> > cannot distinguish between a peer that will never enable transaction
>> > relay (as described in BIP 37) and one that will...
>>
>> However, as AJ points out in his response [12], the Bitcoin Core node
>> _does_ know whether transaction relay can be supported as soon as the
>> `version` message is received:
>>
>> > [...] you either set m_tx_relay->fRelayTxes to true via the VERSION
>> > message (either explicitly or by not setting fRelay), or you enable it
>> > later with FILTERLOAD or FILTERCLEAR, both of which will cause a
>> > disconnect if bloom filters aren't supported. Bloom filter support is
>> > (optionally?) indicated via a service bit (BIP 111), so you could
>> > assume you know whether they're supported as soon as you receive the
>> > VERSION line.
>>
>> i.e. if Bitcoin Core node is running under normal configuration with
>> bloom filters disabled for public connections (which is both the default
>> setting and highly recommended due to DoS concerns), then as soon as it
>> receives a `version` message with `fRelay=false`, it can be sure that
>> there will never be any transaction relay with that peer. If the peer
>> later tries to enable transaction relay by sending a `filterload`
>> message, then the node will disconnect that peer immediately.
>>
>> In summary, we can continue using the `fRelay` field to indicate that
>> no transaction relay can happen for the entire lifetime of the
>> connection.  Bitcoin Core can postpone allocating resources for
>> transaction relay data structures until after the version message has
>> been received to minimize resource usage for incoming block-relay-only
>> connections. A rough implementation is here[13]. Obviously, a node that
>> has been configured to serve bloom filters on public connections would
>> not be able to take advantage of this and accept additional incoming
>> block-relay-only peers, but I think that's fine - we already discourage
>> that configuration.
>>
>> I think a good counter-argument against simply using `fRelay` for this
>> purpose is that we shouldn't reuse a protocol feature designed for one
>> function to achieve a totally different aim. However, we know that nodes
>> on the network have been using `fRelay` to disable transaction relay
>> since Bitcoin Core version 0.12 (when `-blocksonly` was added), and that
>> usage was expanded to _all_ nodes running Bitcoin Core version 0.19 or
>> later (when block-relay-only connections were introduced), so using
>> `fRelay` to disable transaction relay is now de facto part of the p2p
>> protocol.
>>
>> # Preventing addr black holes
>>
>> Addresses of potential peers are gossiped around the p2p network using
>> `addr` messages. When a Bitcoin Core node learns of a new `addr` record,
>> it will relay that record to one or two of its peers, chosen at
>> random[14]. The idea is that eventually the `addr` record will reach
>> most of the nodes on the network.
>>
>> If there are too many nodes on the network that receive `addr` records
>> and do not relay those records on to their peers (termed _addr black
>> hole_ nodes), then propagation of those `addr` records suffers -- any
>> individual `addr` record is unlikely to reach a large proportion of
>> nodes on the network.
>>
>> Since a motivation for block-relay-only connections is to protect
>> against eclipse attacks and thwart network topology analysis, Bitcoin
>> Core will not relay `addr` records on those connections, and will ignore
>> any `addr` record received over those connections. Therefore, increasing
>> the number of block-relay-only connections without changing the `addr`
>> gossip logic is likely to increase the prevalence of addr black holes,
>> and negatively impact addr propagation. This is why BIP 338 includes:
>>
>> > It is RECOMMENDED that a node that has sent or received a disabletx
>> > message to/from a peer not send any of these messages to the peer:
>> >
>> > - addr/getaddr
>> > - addrv2 (BIP 155)
>>
>> I think a better approach would be for Bitcoin Core to only relay addr
>> records to an inbound peer if it has previously received an `addr` or
>> `addrv2` message from that peer, since that indicates definitively that
>> the peer actively gossips `addr` records. This approach was first
>> suggested by AJ in the original block-relay-only PR[15].
>>
>> An advantage of this approach is that it will improve addr propagation
>> immediately and without any change to the P2P protocol, and will prevent
>> sending `addr` records to all addr black holes (such as light clients),
>> not just incoming block-relay-only connections.
>>
>> # Conclusion
>>
>> We can increase the permitted number of inbound block-relay-only peers
>> while minimizing resource requirement _and_ improving addr record
>> propagation, without any changes to the p2p protocol required.
>>
>> I propose that for Bitcoin Core version 22.0:
>>
>> - only initialize the transaction relay data structures after the
>>   `version` message is received, and only if fRelay=true and
>>   `NODE_BLOOM` is not offered on this connection.
>> - only initialize the addr data structures for inbound connections when
>>   an `addr`, `addrv2` or `getaddr` message is received on the
>>   connection, and only consider a connection for addr relay if its addr
>>   data structures are initialized.
>> - update the inbound eviction logic to protect more inbound peers which
>>   do not have transaction relay data structures.
>>
>> Then, in version 23.0:
>>
>> - modestly increase the number of outbound block-relay-only connections.
>>
>> John
>>
>> [1] https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki
>> [2] https://github.com/bitcoin/bips/blob/master/bip-0060.mediawiki
>> [3] https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki
>> [4] https://github.com/bitcoin/bitcoin/pull/1795
>> [5] https://github.com/bitcoin/bitcoin/pull/2763
>> [6]
>> https://github.com/bitcoin/bitcoin/blob/e49117470b77fb7d53be122c6490ba163c6e304d/src/net_processing.cpp#L2582-L2583
>> [7] https://github.com/bitcoin/bitcoin/pull/6579
>> [8] https://github.com/bitcoin/bitcoin/pull/7708
>> [9] https://github.com/bitcoin/bitcoin/pull/16152
>> [10] https://github.com/bitcoin/bitcoin/pull/6993
>> [11] https://github.com/bitcoin/bitcoin/pull/15759
>> [12]
>> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-January/018347.html
>> [13] https://github.com/jnewbery/bitcoin/tree/2021-02-lazy-init-peer
>> [14]
>> https://github.com/bitcoin/bitcoin/blob/e52ce9f2b312b3cf3b0837918e07d7603e241d63/src/net_processing.cpp#L1696-L1700
>> [15] https://github.com/bitcoin/bitcoin/pull/15759#issuecomment-527012757
>>
>> > Hi,
>> >
>> > I'm proposing the addition of a new, optional p2p message to allow
>> peers to communicate that they do not want to send or receive (loose)
>> transactions for the lifetime of a connection.
>> >
>> > The goal of this message is to help facilitate connections on the
>> network over which only block-related data (blocks/headers/compact
>> blocks/etc) are relayed, to create low-resource connections that help
>> protect against partition attacks on the network.  In particular, by adding
>> a network message that communicates that transactions will not be relayed
>> for the life of the connection, we ease the implementation of software that
>> could have increased inbound connection limits for such peers, which in
>> turn will make it easier to add additional persistent block-relay-only
>> connections on the network -- strengthening network security for little
>> additional bandwidth.
>> >
>> > Software has been deployed for over a year now which makes such
>> connections, using the BIP37/BIP60 "fRelay" field in the version message to
>> signal that transactions should not be sent initially.  However, BIP37
>> allows for transaction relay to be enabled later in the connection's
>> lifetime, complicating software that would try to distinguish inbound peers
>> that will never relay transactions from those that might.
>> >
>> > This proposal would add a single new p2p message, "disabletx", which
>> (if used at all) must be sent between version and verack.  I propose that
>> this message is valid for peers advertising protocol version 70017 or
>> higher.  Software is free to implement this BIP or ignore this message and
>> remain compatible with software that does implement it.
>> >
>> > Full text of the proposed BIP is below.
>> >
>> > Thanks,
>> > Suhas
>> >
>> > ---------------------------------------------------
>> >
>> > <pre>
>> >   BIP: XXX
>> >   Layer: Peer Services
>> >   Title: Disable transaction relay message
>> >   Author: Suhas Daftuar <sdaftuar at chaincode.com>
>> >   Comments-Summary: No comments yet.
>> >   Comments-URI:
>> >   Status: Draft
>> >   Type: Standards Track
>> >   Created: 2020-09-03
>> >   License: BSD-2-Clause
>> > </pre>
>> >
>> > ==Abstract==
>> >
>> > This BIP describes a change to the p2p protocol to allow a node to tell
>> a peer
>> > that a connection will not be used for transaction relay, to support
>> > block-relay-only connections that are currently in use on the network.
>> >
>> > ==Motivation==
>> >
>> > For nearly the past year, software has been deployed[1] which initiates
>> > connections on the Bitcoin network and sets the transaction relay field
>> > (introduced by BIP 37 and also defined in BIP 60) to false, to prevent
>> > transaction relay from occurring on the connection. Additionally, addr
>> messages
>> > received from the peer are ignored by this software.
>> >
>> > The purpose of these connections is two-fold: by making additional
>> > low-bandwidth connections on which blocks can propagate, the robustness
>> of a
>> > node to network partitioning attacks is strengthened.  Additionally, by
>> not
>> > relaying transactions and ignoring received addresses, the ability of an
>> > adversary to learn the complete network graph (or a subgraph) is
>> reduced[2],
>> > which in turn increases the cost or difficulty to an attacker seeking
>> to carry
>> > out a network partitioning attack (when compared with having such
>> knowledge).
>> >
>> > The low-bandwidth / minimal-resource nature of these connections is
>> currently
>> > known only by the initiator of the connection; this is because the
>> transaction
>> > relay field in the version message is not a permanent setting for the
>> lifetime
>> > of the connection.  Consequently, a node receiving an inbound
>> connection with
>> > transaction relay disabled cannot distinguish between a peer that will
>> never
>> > enable transaction relay (as described in BIP 37) and one that will.
>> Moreover,
>> > the node also cannot determine that the incoming connection will ignore
>> relayed
>> > addresses; with that knowledge a node would likely choose other peers to
>> > receive announced addresses instead.
>> >
>> > This proposal adds a new, optional message that a node can send a peer
>> when
>> > initiating a connection to that peer, to indicate that connection
>> should not be
>> > used for transaction-relay for the connection's lifetime. In addition,
>> without
>> > a current mechanism to negotiate whether addresses should be relayed on
>> a
>> > connection, this BIP suggests that address messages not be sent on
>> links where
>> > tx-relay has been disabled.
>> >
>> > ==Specification==
>> >
>> > # A new disabletx message is added, which is defined as an empty
>> message where pchCommand == "disabletx".
>> > # The protocol version of nodes implementing this BIP must be set to
>> 70017 or higher.
>> > # If a node sets the transaction relay field in the version message to
>> a peer to false, then the disabletx message MAY also be sent in response to
>> a version message from that peer if the peer's protocol version is >=
>> 70017. If sent, the disabletx message MUST be sent prior to sending a
>> verack.
>> > # A node that has sent or received a disabletx message to/from a peer
>> MUST NOT send any of these messages to the peer:
>> > ## inv messages for transactions
>> > ## getdata messages for transactions
>> > ## getdata messages for merkleblock (BIP 37)
>> > ## filteradd/filterload/filterclear (BIP 37)
>> > ## mempool (BIP 35)
>> > # It is RECOMMENDED that a node that has sent or received a disabletx
>> message to/from a peer not send any of these messages to the peer:
>> > ## addr/getaddr
>> > ## addrv2 (BIP 155)
>> > # The behavior regarding sending or processing other message types is
>> not specified by this BIP.
>> > # Nodes MAY decide to not remain connected to peers that send this
>> message (for example, if trying to find a peer that will relay
>> transactions).
>> >
>> > ==Compatibility==
>> >
>> > Nodes with protocol version >= 70017 that do not implement this BIP,
>> and nodes
>> > with protocol version < 70017, will continue to remain compatible with
>> > implementing software: transactions would not be relayed to peers
>> sending the
>> > disabletx message (provided that BIP 37 or BIP 60 has been
>> implemented), and while
>> > periodic address relay may still take place, software implementing this
>> BIP
>> > should not be disconnecting such peers solely for that reason.
>> >
>> > Disabling address relay is suggested but not required by this BIP, to
>> allow for
>> > future protocol extensions that might specify more carefully how
>> address relay
>> > is to be negotiated. This BIP's recommendations for software to not
>> relay
>> > addresses is intended to be interpreted as guidance in the absence of
>> any such
>> > future protocol extension, to accommodate existing software behavior.
>> >
>> > Note that all messages specified in BIP 152, including blocktxn and
>> > getblocktxn, are permitted between peers that have sent/received a
>> disabletx
>> > message, subject to the feature negotiation of BIP 152.
>> >
>> > ==Implementation==
>> >
>> > TBD
>> >
>> > ==References==
>> >
>> > # Bitcoin Core has [https://github.com/bitcoin/bitcoin/pull/15759
>> implemented this functionality] since version 0.19.0.1, released in
>> November 2019.
>> > # For example, see
>> https://www.cs.umd.edu/projects/coinscope/coinscope.pdf and
>> https://arxiv.org/pdf/1812.00942.pdf.
>> >
>> > ==Copyright==
>> >
>> > This BIP is licensed under the 2-clause BSD license.
>>
>> On Wed, Jan 6, 2021 at 4:35 PM Suhas Daftuar via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>>> Hi,
>>>
>>> I'm proposing the addition of a new, optional p2p message to allow peers
>>> to communicate that they do not want to send or receive (loose)
>>> transactions for the lifetime of a connection.
>>>
>>> The goal of this message is to help facilitate connections on the
>>> network over which only block-related data (blocks/headers/compact
>>> blocks/etc) are relayed, to create low-resource connections that help
>>> protect against partition attacks on the network.  In particular, by adding
>>> a network message that communicates that transactions will not be relayed
>>> for the life of the connection, we ease the implementation of software that
>>> could have increased inbound connection limits for such peers, which in
>>> turn will make it easier to add additional persistent block-relay-only
>>> connections on the network -- strengthening network security for little
>>> additional bandwidth.
>>>
>>> Software has been deployed for over a year now which makes such
>>> connections, using the BIP37/BIP60 "fRelay" field in the version message to
>>> signal that transactions should not be sent initially.  However, BIP37
>>> allows for transaction relay to be enabled later in the connection's
>>> lifetime, complicating software that would try to distinguish inbound peers
>>> that will never relay transactions from those that might.
>>>
>>> This proposal would add a single new p2p message, "disabletx", which (if
>>> used at all) must be sent between version and verack.  I propose that this
>>> message is valid for peers advertising protocol version 70017 or higher.
>>> Software is free to implement this BIP or ignore this message and remain
>>> compatible with software that does implement it.
>>>
>>> Full text of the proposed BIP is below.
>>>
>>> Thanks,
>>> Suhas
>>>
>>> ---------------------------------------------------
>>>
>>> <pre>
>>>   BIP: XXX
>>>   Layer: Peer Services
>>>   Title: Disable transaction relay message
>>>   Author: Suhas Daftuar <sdaftuar at chaincode.com>
>>>   Comments-Summary: No comments yet.
>>>   Comments-URI:
>>>   Status: Draft
>>>   Type: Standards Track
>>>   Created: 2020-09-03
>>>   License: BSD-2-Clause
>>> </pre>
>>>
>>> ==Abstract==
>>>
>>> This BIP describes a change to the p2p protocol to allow a node to tell a peer
>>> that a connection will not be used for transaction relay, to support
>>> block-relay-only connections that are currently in use on the network.
>>>
>>> ==Motivation==
>>>
>>> For nearly the past year, software has been deployed[1] which initiates
>>> connections on the Bitcoin network and sets the transaction relay field
>>> (introduced by BIP 37 and also defined in BIP 60) to false, to prevent
>>> transaction relay from occurring on the connection. Additionally, addr messages
>>> received from the peer are ignored by this software.
>>>
>>> The purpose of these connections is two-fold: by making additional
>>> low-bandwidth connections on which blocks can propagate, the robustness of a
>>> node to network partitioning attacks is strengthened.  Additionally, by not
>>> relaying transactions and ignoring received addresses, the ability of an
>>> adversary to learn the complete network graph (or a subgraph) is reduced[2],
>>> which in turn increases the cost or difficulty to an attacker seeking to carry
>>> out a network partitioning attack (when compared with having such knowledge).
>>>
>>> The low-bandwidth / minimal-resource nature of these connections is currently
>>> known only by the initiator of the connection; this is because the transaction
>>> relay field in the version message is not a permanent setting for the lifetime
>>> of the connection.  Consequently, a node receiving an inbound connection with
>>> transaction relay disabled cannot distinguish between a peer that will never
>>> enable transaction relay (as described in BIP 37) and one that will.  Moreover,
>>> the node also cannot determine that the incoming connection will ignore relayed
>>> addresses; with that knowledge a node would likely choose other peers to
>>> receive announced addresses instead.
>>>
>>> This proposal adds a new, optional message that a node can send a peer when
>>> initiating a connection to that peer, to indicate that connection should not be
>>> used for transaction-relay for the connection's lifetime. In addition, without
>>> a current mechanism to negotiate whether addresses should be relayed on a
>>> connection, this BIP suggests that address messages not be sent on links where
>>> tx-relay has been disabled.
>>>
>>> ==Specification==
>>>
>>> # A new disabletx message is added, which is defined as an empty message where pchCommand == "disabletx".
>>> # The protocol version of nodes implementing this BIP must be set to 70017 or higher.
>>> # If a node sets the transaction relay field in the version message to a peer to false, then the disabletx message MAY also be sent in response to a version message from that peer if the peer's protocol version is >= 70017. If sent, the disabletx message MUST be sent prior to sending a verack.
>>> # A node that has sent or received a disabletx message to/from a peer MUST NOT send any of these messages to the peer:
>>> ## inv messages for transactions
>>> ## getdata messages for transactions
>>> ## getdata messages for merkleblock (BIP 37)
>>> ## filteradd/filterload/filterclear (BIP 37)
>>> ## mempool (BIP 35)
>>> # It is RECOMMENDED that a node that has sent or received a disabletx message to/from a peer not send any of these messages to the peer:
>>> ## addr/getaddr
>>> ## addrv2 (BIP 155)
>>> # The behavior regarding sending or processing other message types is not specified by this BIP.
>>> # Nodes MAY decide to not remain connected to peers that send this message (for example, if trying to find a peer that will relay transactions).
>>>
>>> ==Compatibility==
>>>
>>> Nodes with protocol version >= 70017 that do not implement this BIP, and nodes
>>> with protocol version < 70017, will continue to remain compatible with
>>> implementing software: transactions would not be relayed to peers sending the
>>> disabletx message (provided that BIP 37 or BIP 60 has been implemented), and while
>>> periodic address relay may still take place, software implementing this BIP
>>> should not be disconnecting such peers solely for that reason.
>>>
>>> Disabling address relay is suggested but not required by this BIP, to allow for
>>> future protocol extensions that might specify more carefully how address relay
>>> is to be negotiated. This BIP's recommendations for software to not relay
>>> addresses is intended to be interpreted as guidance in the absence of any such
>>> future protocol extension, to accommodate existing software behavior.
>>>
>>> Note that all messages specified in BIP 152, including blocktxn and
>>> getblocktxn, are permitted between peers that have sent/received a disabletx
>>> message, subject to the feature negotiation of BIP 152.
>>>
>>> ==Implementation==
>>>
>>> TBD
>>>
>>> ==References==
>>>
>>> # Bitcoin Core has [https://github.com/bitcoin/bitcoin/pull/15759 implemented this functionality] since version 0.19.0.1, released in November 2019.
>>> # For example, see https://www.cs.umd.edu/projects/coinscope/coinscope.pdf and https://arxiv.org/pdf/1812.00942.pdf.
>>>
>>> ==Copyright==
>>>
>>> This BIP is licensed under the 2-clause BSD license.
>>>
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210302/ff7e2b23/attachment-0001.html>

From aj at erisian.com.au  Tue Mar  2 16:31:27 2021
From: aj at erisian.com.au (Anthony Towns)
Date: Wed, 3 Mar 2021 02:31:27 +1000
Subject: [bitcoin-dev] Proposal for new "disabletx" p2p message
In-Reply-To: <CAFmfg2sT0sVVHOe5ZbDo5iDwE1Tk2oOXJiCKhNZv_hZVOVLbRw@mail.gmail.com>
References: <CAFp6fsE6gb2PaL3ikDRjS-hNnPLjvtWB+8qZJr3trQe2K9YN+g@mail.gmail.com>
 <CAFmfg2sT0sVVHOe5ZbDo5iDwE1Tk2oOXJiCKhNZv_hZVOVLbRw@mail.gmail.com>
Message-ID: <20210302163127.bjmzcyzdwrsm36fh@erisian.com.au>

On Mon, Mar 01, 2021 at 08:58:46PM +0000, John Newbery via bitcoin-dev wrote:
> We can increase the permitted number of inbound block-relay-only peers
> while minimizing resource requirement _and_ improving addr record
> propagation, without any changes to the p2p protocol required.

+1.

I found this diagram:

https://raw.githubusercontent.com/amitiuttarwar/bitcoin-notes/main/scale-block-relay-only.png

helpful for analysing the possibilities. The greyed-circles indicate
when one node doesn't need to send txs to the other node, and thus can
avoid allocating the tx relay data structures.

> I propose that for Bitcoin Core version 22.0:
> 
> - only initialize the transaction relay data structures after the
> ? `version` message is received, and only if fRelay=true and
> ? `NODE_BLOOM` is not offered on this connection.

The tx relay data structure should *always* be initialised if you offer
NODE_BLOOM services on the connection.

> - only initialize the addr data structures for inbound connections when
> ? an `addr`, `addrv2` or `getaddr` message is received on the
> ? connection, and only consider a connection for addr relay if its addr
> ? data structures are initialized.

I think it's simpler to initialize the addr data structures for all
connections, and add a bool to register "we've received an ADDR messages
from this peer, so will consider it for announcements". The data structure
is lightweight enough that this should be fine, I think.

I think the ideal rules are slightly more complicated:

Address relay:
  * do GETADDR on every outbound connection except block-relay-only
  * do self announcements on every connection but only having received a
    *ADDR* message of some kind

Set fRelay=false when:
  * running with -blocksonly=1
  * making a block-relay-only outbound connection
  * accepting an inbound connection but you're out of normal slots
    and can only offer a lightweight slot

Tx relay:
  * inbound (you accept the connection):
    + if you advertised bloom services to the node, full tx relay always
    + accept inbound txs, unless you advertised fRelay=false
    + send outbound txs if they didn't specify fRelay=false
      *or* you've run out of normal slots and can only offer a
      lightweight slot

  * outbound (you make the connection to someone else):
    + accept inbound txs, unless you advertised fRelay=false
    + send outbound txs if they didn't specify fRelay=false
      *and* you're not using them as a blocks-relay-only node

Note (because I keep getting them confused): the net.h TxRelay structure
needs to be initialised in order to *send* outbound txs; the txrequest.h
TxRequest structure is used for accepting inbound txs.

I think to support -blocksonly=1 nodes who want to relay their own wallet
addresses occassionally, assigning inbound txs who have fRelay=false to
a *much* lower MAX_PEER_TX_ANNOUNCEMENTS (perhaps 10 or 20, instead of
5000) and not allocating TxRelay for them at all would ensure they're
both functional and lightweight.

Cheers,
aj


From belcher at riseup.net  Tue Mar  2 18:21:59 2021
From: belcher at riseup.net (Chris Belcher)
Date: Tue, 2 Mar 2021 18:21:59 +0000
Subject: [bitcoin-dev] LOT=False is dangerous and shouldn't be used
In-Reply-To: <202102281933.30691.luke@dashjr.org>
References: <202102281933.30691.luke@dashjr.org>
Message-ID: <c7784af1-7f69-2607-ba3a-c34f2b2fe995@riseup.net>

It is wrong to say that using miner signalling alone for activation
(LOT=false) is a bug.

As we vividly saw in the events of the 2017 UASF, the purpose of miner
signalling isn't to activate or enforce the new rules but to stop a
chain split. A majority of miners can stop a chain split by essentially
doing a 51% attack. Such attacks have been known about since day one,
and even the whitepaper writes about them.

So they are not a bug but an inherent part of the way bitcoin works. If
fixing this issue was a simple as setting a consensus rule parameter
then bitcoin would have been invented decades earlier than it was.

And certainly miner signalling cannot be compared to an inflation bug.
The inflation rules are enforced by the economy using full nodes, but
chain splits or lack of them is enforced by miners. They are two
different parts of the bitcoin system. Back in 2010 there was an
inflation bug CVE-2010-5139 (the "Value overflow incident") which proves
my point. Even though miners created a block which printed 184 billion
bitcoins, the economy quickly adopted a patch which fixed the bug and
miners switched over to the correct chain which soon overtook the bugged
chain (there was a reorg of 53 blocks).




Also another point: in a hypothetical chain split it's true that the
LOT=false chain would be vulnerable to reorgs, but it's also true that
the LOT=true would suffer from slow blocks.

So for example, imagine trading bitcoin for cash in person, but instead
of waiting on average 10 minutes for a confirmation you have to wait 2
hours. Imagine depositing coins to an exchange which requires 3
confirmation, then instead of waiting ~30 minutes you have to actually
wait 6 hours. This is a significant degradation in usability. The
situation is a mirror image of how the LOT=false chain is vulnerable to
reorgs. Both chains suffer if a chain split happens which is why they
are pretty important to avoid. That's why its inaccurate to portray
LOT=true chain as safe with no downsides at all.




On 28/02/2021 19:33, Luke Dashjr via bitcoin-dev wrote:
> (Note: I am writing this as a general case against LOT=False, but using 
> Taproot simply as an example softfork. Note that this is addressing 
> activation under the assumption that the softfork is ethical and has 
> sufficient community support. If those criteria have not been met, no 
> activation should be deployed at all, of any type.)
> 
> As we saw in 2017 with BIP 9, coordinating activation by miner signal alone, 
> despite its potential benefits, also leaves open the door to a miner veto. 
> This was never the intended behaviour, and a bug, which took a rushed 
> deployment of BIP148 to address. LOT=False would reintroduce that same bug.
> It wouldn't be much different than adding back the inflation bug 
> (CVE-2018-17144) and trusting miners not to exploit it.
> 
> Some have tried to spin LOT=True as some kind of punishment for miners or 
> reactive "counter-attack". Rather, it is simply a fallback to avoid 
> regression on this and other bugs. "Flag day" activation is not fundamentally 
> flawed or dangerous, just slow since everyone needs time to upgrade.
> BIP 8(LOT=True) combines the certainty of such a flag day, with the speed 
> improvement of a MASF, so that softforks can be activated both reasonably 
> quick and safely.
> 
> In the normal path, and that which BIP8(True) best incentivises, miners will 
> simply upgrade and signal, and activation can occur as soon as the economic 
> majority is expected to have had time to upgrade. In the worst-case path, the 
> behaviour of LOT=True is the least-harmful result: unambiguous activation and 
> enforcement by the economy, with miners either deciding to make an 
> anti-Taproot(eg) altcoin, or continue mining Bitcoin. Even if ALL the miners 
> revolt against the softfork, the LOT=True nodes are simply faced with a 
> choice to hardfork (replacing the miners with a PoW change) or concede - they 
> do not risk vulnerability or loss.
> 
> With LOT=False in the picture, however, things can get messy: some users will 
> enforce Taproot(eg) (those running LOT=True), while others will not (those 
> with LOT=False). Users with LOT=True will still get all the safety thereof, 
> but those with LOT=False will (in the event of miners deciding to produce a 
> chain split) face an unreliable chain, being replaced by the LOT=True chain 
> every time it overtakes the LOT=False chain in work. For 2 weeks, users with 
> LOT=False would not have a usable network. The only way to resolve this would 
> be to upgrade to LOT=True or to produce a softfork that makes an activated 
> chain invalid (thereby taking the anti-Taproot path). Even if nobody ran 
> LOT=True (very unlikely), LOT=False would still fail because users would be 
> faced with either accepting the loss of Taproot(eg), or re-deploying from 
> scratch with LOT=True. It accomplishes nothing compared to just deploying 
> LOT=True from the beginning. Furthermore, this process creates a lot of 
> confusion for users ("Yep, I upgraded for Taproot(eg). Wait, you mean I have 
> to do it AGAIN?"), and in some scenarios additional code may be needed to 
> handle the subsequent upgrade cleanly.
> 
> To make matters worse for LOT=False, giving miners a veto also creates an 
> incentive to second-guess the decision to activate and/or hold the activation 
> hostage. This is a direct result of the bug giving them a power they weren't 
> intended to have. Even if we trust miners to act ethically, that does not 
> justify sustaining the bug creating both a possibility and incentive to 
> behave unethically.
> 
> So in all possible scenarios, LOT=False puts users and the network at 
> significant risk. In all possible scenarios, LOT=True minimises risk to 
> everyone and has no risk to users running LOT=True.
> 
> The overall risk is maximally reduced by LOT=True being the only deployed 
> parameter, and any introduction of LOT=False only increases risk probability 
> and severity.
> 
> For all these reasons, I regret adding LOT as an option to BIP 8, and think it 
> would be best to remove it entirely, with all deployments in the future 
> behaving as LOT=True. I do also recognise that there is not yet consensus on 
> this, and for that reason I have not taken action (nor intend to) to remove 
> LOT from BIP 8. However, the fact remains that LOT=False should not be used, 
> and it is best if every softfork is deployed with LOT=True.
> 
> Luke
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

From arielluaces at gmail.com  Tue Mar  2 18:22:35 2021
From: arielluaces at gmail.com (Ariel Lorenzo-Luaces)
Date: Tue, 02 Mar 2021 10:22:35 -0800
Subject: [bitcoin-dev] UASF (LOT=true) kick off meeting - Tuesday March
	2nd 19:00 UTC on ##uasf IRC channel
In-Reply-To: <CAFvNmHR0WwMp0eNQhvs9uFFSq3wGdHVTFUFmByLLdz7EUjg8uQ@mail.gmail.com>
References: <CAFvNmHR0WwMp0eNQhvs9uFFSq3wGdHVTFUFmByLLdz7EUjg8uQ@mail.gmail.com>
Message-ID: <b56bd582-e605-4389-96ce-c1cb0c58f1ad@gmail.com>

It's becoming increasingly clear that core might not be able to release activation code.

Anyone advocating for a UASF must do tremendous amounts of work to convince users, miners, and service providers to run a UASF client. Anyone advocating against a UASF or indifferent will take the path of least resistance and ignore the rogue client. If the movement fails to materialize we will be looking at a minor chain split one year later and a year of wasted time. At that moment LOT=false can be finally released and calmer heads can activate on the majority chain.

The choice has never been LOT=false versus LOT=true. It has always been about the order. Some think LOT=true should be attempted first and some think LOT=false should be attempted first. And the grand majority are indifferent to the choice (won't upgrade until core says it's safe).

I'm realizing that a clear advantage of LOT=false is that it can happen without the need for a social movement. All that is really needed is the convincing of 95% miners. Apathetic users will never notice any kind of service disruption no matter the success or failure of the activation. This is obviously why it naturally became the default activation method.

While LOT=true, on the other hand, must be able to 51% the blockchain to win the apathetic users. But then the reorgs will not be pretty. Or if it ever clearly gets over the 51% hurdle then all apathetic users now need to scramble to use the rogue client to be safe from reorgs. Either way it's disruptive.

Please, I'm begging you, let's just try LOT=false first. Let's halt the fight for this new UASF movement until it's needed. Social movements are hard. Especially hard when the people you're trying to convince don't have a material threat to their beliefs or freedoms. It would be a shame to meet back here a year later after the risk of verbal conflicts, misdirection, lies, vilinization, reorgs, double spends, PoW changes, and threats galore.

P.S. I don't think I'm being so apocalyptic this time. I actually see all of those things as *necessary* to the UASF movement. Otherwise people won't be convinced to take a side.

Cheers
Ariel Lorenzo-Luaces


On Mar 1, 2021, 1:06 PM, at 1:06 PM, Michael Folkson via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>It is approximately 8 months since Steve Lee formally kicked off the
>Taproot activation discussion by setting up the ##taproot-activation
>IRC channel. Obviously there was discussion that considerably predates
>that but that was the first recognition that there needed to be a
>focus towards a solution rather than endless circular debates.
>
>Eight months on it appears there are some who think there is a
>philosopher?s stone still out there that will garner 100 percent
>consensus and contain zero chain split risk in the worst case
>scenario. A philosopher?s stone that us mere mortals have failed to
>find in these 8 months.
>
>While I would be delighted if this philosopher?s stone is found (and
>all are free to continue looking) I think it is prudent at this point
>to step away from the circular arguments and build on the progress we
>have made in these last 8 months. We have effectively achieved
>overwhelming consensus on the activation mechanism (BIP 8) and all of
>the parameters apart from one (lockinontimeout or LOT). Again I?d like
>to thank the people who have put hours of work into getting to this
>point. It is thankless work and it is probably the last thing any of
>us want to be doing.
>
>At this point it is unclear whether Bitcoin Core will be able to
>release any activation code whatsoever due to disagreement logjams.
>Personally I hope they do but again it is prudent to prepare for the
>scenario where Core is unable to. Hence I and others have assessed
>that our energies are better spent working on a community release
>implementing LOT=true in a similar spirit to 2017?s UASF effort. I say
>similar as this time there really is no need for any antagonism.
>Approximately 90 percent of mining pools (taprootactivation.com) have
>declared support and there is overwhelming community consensus to
>activate Taproot. In the absence of a Core release with activation
>code I hope and expect all users (including miners) to consider
>supporting this UASF release and consider running it to activate
>Taproot.
>
>TL;DR Tomorrow (Tuesday) we are holding a kick off meeting for this
>UASF (LOT=true) effort on the ##uasf IRC channel at 19:00 UTC. Please
>consider attending and supporting this effort to get Taproot
>activated. It would be great to get users from the 2017 effort
>involved in addition to recent Taproot proponents from all parts of
>our community. The future of Bitcoin?s scalability and privacy depends
>on, as it always has, on you the user.
>
>-- 
>Michael Folkson
>Email: michaelfolkson at gmail.com
>Keybase: michaelfolkson
>PGP: 43ED C999 9F85 1D40 EAF4 9835 92D6 0159 214C FEE3
>_______________________________________________
>bitcoin-dev mailing list
>bitcoin-dev at lists.linuxfoundation.org
>https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210302/1722c7a2/attachment-0001.html>

From arielluaces at gmail.com  Tue Mar  2 18:32:00 2021
From: arielluaces at gmail.com (Ariel Lorenzo-Luaces)
Date: Tue, 02 Mar 2021 10:32:00 -0800
Subject: [bitcoin-dev] Yesterday's Taproot activation meeting on
	lockinontimeout (LOT)
In-Reply-To: <CAJowKgL07Jo0XyU-XGJ0DOCk8jCj6TbjiQzGKWApqYfKjsPvGQ@mail.gmail.com>
References: <20210222101632.j5udrgtj2aj5bw6q@erisian.com.au>
 <7B0D8EE4-19D9-4686-906C-F762F29E74D4@mattcorallo.com>
 <CABm2gDrbKdxMuKdwYh0HBXNUxhqWtq1x2oLC0Ni=dbfP8b_a7Q@mail.gmail.com>
 <CABm2gDp5dRTrPEqPfrjOeeYBn6RMS=HFMbtkJ+MM0SMVnSfK5A@mail.gmail.com>
 <CAD5xwhg0pWJykWUusdoNQd60L9_MgCzzky1dvViLERADMcoysQ@mail.gmail.com>
 <CALeFGL1UbXx14aX7RK7nh7b4jwvmfF6AXrvqPJpriSB4ZvYT2A@mail.gmail.com>
 <CAOv1TnhQcYrc5q6GTUTuQMEi9RAV4dy5mmyNp--HuYTPzEUfJQ@mail.gmail.com>
 <CAJowKgL07Jo0XyU-XGJ0DOCk8jCj6TbjiQzGKWApqYfKjsPvGQ@mail.gmail.com>
Message-ID: <f2f36ee6-e08e-4e1a-bb07-00884dc29174@gmail.com>

I agree.

Thank you Erik for proposing it. It's a pretty good idea.

P.S. I wouldn't want a chain split of a low percentage of users though. The minority will be at the mercy of massive PoW swings and the chain will lose friends so it's not good for anyone. I recommend changing the final percentage to %50 because that's the hurdle where non-upgraded users *must* activate to avoid the risk of being reorged. The number of running users will quickly jump to 90%+ if it ever gets near 50%.

Cheers
Ariel Lorenzo-Luaces



On Mar 1, 2021, 5:54 AM, at 5:54 AM, Erik Aronesty <erik at q32.com> wrote:
>> Today users should start cooperating again to continue using the
>> optimal strategy.
>
>the "gradual" method of reducing the % of miners required for lock-in
>as time goes on seems to encode this optimal strategy.
>
>On Thu, Feb 25, 2021 at 6:43 AM Ariel Luaces via bitcoin-dev
><bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>> On Tue, Feb 23, 2021 at 12:09 PM Keagan McClelland via bitcoin-dev
>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> >
>> > If social consensus is what drives technical consensus and not the
>other way around it seems as if there cannot exist a valid (rational?)
>reason to oppose Taproot itself, and then by extension with the
>arguments laid out above, LOT=true seems to be the logical conclusion
>of all of this, even if Core ships LOT=false at the outset.
>> >
>> > Where am I wrong here?
>> >
>> > Keagan
>> >
>> > On Mon, Feb 22, 2021 at 7:11 PM Jeremy via bitcoin-dev
><bitcoin-dev at lists.linuxfoundation.org> wrote:
>> >>
>> >> Personally, I think with either plan the ultimate risk of forking
>is low given probability to activate before timeout, so we should just
>pick something and move on, accepting that we aren't setting a
>precedent by which all future forks should abide. Given my
>understanding of the tradeoffs, I believe that the safest choice is
>LOT=true, but I wouldn't move to hold back a plan of LOT=false (but
>would probably take mitigative steps on community advocacy if it looks
>like there is non majority but non negligible LOT=true uptake).
>> >>
>> >> Cheers,
>> >>
>> >> Jeremy
>> >>
>> >>
>> >> _______________________________________________
>> >> bitcoin-dev mailing list
>> >> bitcoin-dev at lists.linuxfoundation.org
>> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> >
>> > _______________________________________________
>> > bitcoin-dev mailing list
>> > bitcoin-dev at lists.linuxfoundation.org
>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>> To favor LOT=true because it seems like the inevitable result is like
>> playing the prisoner's dilemma and never cooperating instead of using
>> the most optimal strategy which is tit-for-tat (cooperating at first
>> and then cheating once for every time your counterparty cheats).
>>
>> During segwit users started by cooperating (BIP9, or "LOT=false"),
>> then a minority of
>> miners didn't cooperate (small veto but remember the majority of
>> miners cooperated), then users stopped cooperating in response
>(UASF),
>> then miners
>> reverted to cooperating (MASF while intolerant miners forked off).
>> Today users should start cooperating again to continue using the
>> optimal strategy.
>>
>> Cheers
>> Ariel Lorenzo-Luaces
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210302/711495d9/attachment.html>

From luke at dashjr.org  Tue Mar  2 18:57:38 2021
From: luke at dashjr.org (Luke Dashjr)
Date: Tue, 2 Mar 2021 18:57:38 +0000
Subject: [bitcoin-dev] UASF (LOT=true) kick off meeting - Tuesday March
	2nd 19:00 UTC on ##uasf IRC channel
In-Reply-To: <b56bd582-e605-4389-96ce-c1cb0c58f1ad@gmail.com>
References: <CAFvNmHR0WwMp0eNQhvs9uFFSq3wGdHVTFUFmByLLdz7EUjg8uQ@mail.gmail.com>
 <b56bd582-e605-4389-96ce-c1cb0c58f1ad@gmail.com>
Message-ID: <202103021857.39275.luke@dashjr.org>

On Tuesday 02 March 2021 18:22:35 Ariel Lorenzo-Luaces via bitcoin-dev wrote:
> I'm realizing that a clear advantage of LOT=false is that it can happen
> without the need for a social movement. All that is really needed is the
> convincing of 95% miners. Apathetic users will never notice any kind of
> service disruption no matter the success or failure of the activation. This
> is obviously why it naturally became the default activation method.

No. Miners enforcing rules without the social support is a 51% attack, not a 
softfork.

> While LOT=true, on the other hand, must be able to 51% the blockchain to
> win the apathetic users. But then the reorgs will not be pretty. Or if it
> ever clearly gets over the 51% hurdle then all apathetic users now need to
> scramble to use the rogue client to be safe from reorgs. Either way it's
> disruptive.

No, LOT=True doesn't do this. It only happens if miners choose to create an 
invalid chain, which they could do at any time with or without a softfork 
involved.

Luke

From eric at voskuil.org  Tue Mar  2 20:07:16 2021
From: eric at voskuil.org (Eric Voskuil)
Date: Tue, 2 Mar 2021 12:07:16 -0800
Subject: [bitcoin-dev] LOT=False is dangerous and shouldn't be used
In-Reply-To: <c7784af1-7f69-2607-ba3a-c34f2b2fe995@riseup.net>
References: <c7784af1-7f69-2607-ba3a-c34f2b2fe995@riseup.net>
Message-ID: <2944FA84-5BE6-4690-9C10-0E43A4954403@voskuil.org>

To clarify, it is the soft fork enforcement by majority hash power that is the 51% attack, not the stopping of it. Majority hash power censors non-conforming transactions. To counter it requires only a non-censoring majority to continue mining.

It is correct that the purpose of supermajority signaling is to reduce the chance of a chain split. It is misleading to call it a bug and to imply that user activation isn?t actually intended to create, or at least threaten, a chain split. It?s a game of chicken.

e

> On Mar 2, 2021, at 10:22, Chris Belcher via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> ?It is wrong to say that using miner signalling alone for activation
> (LOT=false) is a bug.
> 
> As we vividly saw in the events of the 2017 UASF, the purpose of miner
> signalling isn't to activate or enforce the new rules but to stop a
> chain split. A majority of miners can stop a chain split by essentially
> doing a 51% attack. Such attacks have been known about since day one,
> and even the whitepaper writes about them.
> 
> So they are not a bug but an inherent part of the way bitcoin works. If
> fixing this issue was a simple as setting a consensus rule parameter
> then bitcoin would have been invented decades earlier than it was.
> 
> And certainly miner signalling cannot be compared to an inflation bug.
> The inflation rules are enforced by the economy using full nodes, but
> chain splits or lack of them is enforced by miners. They are two
> different parts of the bitcoin system. Back in 2010 there was an
> inflation bug CVE-2010-5139 (the "Value overflow incident") which proves
> my point. Even though miners created a block which printed 184 billion
> bitcoins, the economy quickly adopted a patch which fixed the bug and
> miners switched over to the correct chain which soon overtook the bugged
> chain (there was a reorg of 53 blocks).
> 
> 
> 
> 
> Also another point: in a hypothetical chain split it's true that the
> LOT=false chain would be vulnerable to reorgs, but it's also true that
> the LOT=true would suffer from slow blocks.
> 
> So for example, imagine trading bitcoin for cash in person, but instead
> of waiting on average 10 minutes for a confirmation you have to wait 2
> hours. Imagine depositing coins to an exchange which requires 3
> confirmation, then instead of waiting ~30 minutes you have to actually
> wait 6 hours. This is a significant degradation in usability. The
> situation is a mirror image of how the LOT=false chain is vulnerable to
> reorgs. Both chains suffer if a chain split happens which is why they
> are pretty important to avoid. That's why its inaccurate to portray
> LOT=true chain as safe with no downsides at all.
> 
> 
> 
> 
>> On 28/02/2021 19:33, Luke Dashjr via bitcoin-dev wrote:
>> (Note: I am writing this as a general case against LOT=False, but using 
>> Taproot simply as an example softfork. Note that this is addressing 
>> activation under the assumption that the softfork is ethical and has 
>> sufficient community support. If those criteria have not been met, no 
>> activation should be deployed at all, of any type.)
>> 
>> As we saw in 2017 with BIP 9, coordinating activation by miner signal alone, 
>> despite its potential benefits, also leaves open the door to a miner veto. 
>> This was never the intended behaviour, and a bug, which took a rushed 
>> deployment of BIP148 to address. LOT=False would reintroduce that same bug.
>> It wouldn't be much different than adding back the inflation bug 
>> (CVE-2018-17144) and trusting miners not to exploit it.
>> 
>> Some have tried to spin LOT=True as some kind of punishment for miners or 
>> reactive "counter-attack". Rather, it is simply a fallback to avoid 
>> regression on this and other bugs. "Flag day" activation is not fundamentally 
>> flawed or dangerous, just slow since everyone needs time to upgrade.
>> BIP 8(LOT=True) combines the certainty of such a flag day, with the speed 
>> improvement of a MASF, so that softforks can be activated both reasonably 
>> quick and safely.
>> 
>> In the normal path, and that which BIP8(True) best incentivises, miners will 
>> simply upgrade and signal, and activation can occur as soon as the economic 
>> majority is expected to have had time to upgrade. In the worst-case path, the 
>> behaviour of LOT=True is the least-harmful result: unambiguous activation and 
>> enforcement by the economy, with miners either deciding to make an 
>> anti-Taproot(eg) altcoin, or continue mining Bitcoin. Even if ALL the miners 
>> revolt against the softfork, the LOT=True nodes are simply faced with a 
>> choice to hardfork (replacing the miners with a PoW change) or concede - they 
>> do not risk vulnerability or loss.
>> 
>> With LOT=False in the picture, however, things can get messy: some users will 
>> enforce Taproot(eg) (those running LOT=True), while others will not (those 
>> with LOT=False). Users with LOT=True will still get all the safety thereof, 
>> but those with LOT=False will (in the event of miners deciding to produce a 
>> chain split) face an unreliable chain, being replaced by the LOT=True chain 
>> every time it overtakes the LOT=False chain in work. For 2 weeks, users with 
>> LOT=False would not have a usable network. The only way to resolve this would 
>> be to upgrade to LOT=True or to produce a softfork that makes an activated 
>> chain invalid (thereby taking the anti-Taproot path). Even if nobody ran 
>> LOT=True (very unlikely), LOT=False would still fail because users would be 
>> faced with either accepting the loss of Taproot(eg), or re-deploying from 
>> scratch with LOT=True. It accomplishes nothing compared to just deploying 
>> LOT=True from the beginning. Furthermore, this process creates a lot of 
>> confusion for users ("Yep, I upgraded for Taproot(eg). Wait, you mean I have 
>> to do it AGAIN?"), and in some scenarios additional code may be needed to 
>> handle the subsequent upgrade cleanly.
>> 
>> To make matters worse for LOT=False, giving miners a veto also creates an 
>> incentive to second-guess the decision to activate and/or hold the activation 
>> hostage. This is a direct result of the bug giving them a power they weren't 
>> intended to have. Even if we trust miners to act ethically, that does not 
>> justify sustaining the bug creating both a possibility and incentive to 
>> behave unethically.
>> 
>> So in all possible scenarios, LOT=False puts users and the network at 
>> significant risk. In all possible scenarios, LOT=True minimises risk to 
>> everyone and has no risk to users running LOT=True.
>> 
>> The overall risk is maximally reduced by LOT=True being the only deployed 
>> parameter, and any introduction of LOT=False only increases risk probability 
>> and severity.
>> 
>> For all these reasons, I regret adding LOT as an option to BIP 8, and think it 
>> would be best to remove it entirely, with all deployments in the future 
>> behaving as LOT=True. I do also recognise that there is not yet consensus on 
>> this, and for that reason I have not taken action (nor intend to) to remove 
>> LOT from BIP 8. However, the fact remains that LOT=False should not be used, 
>> and it is best if every softfork is deployed with LOT=True.
>> 
>> Luke
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From eric at voskuil.org  Tue Mar  2 20:19:41 2021
From: eric at voskuil.org (Eric Voskuil)
Date: Tue, 2 Mar 2021 12:19:41 -0800
Subject: [bitcoin-dev] UASF (LOT=true) kick off meeting - Tuesday March
	2nd 19:00 UTC on ##uasf IRC channel
In-Reply-To: <202103021857.39275.luke@dashjr.org>
References: <202103021857.39275.luke@dashjr.org>
Message-ID: <D84DD0C3-60EC-43DF-B250-FF039814331B@voskuil.org>

I personally don?t like the term 51% attack as applied to censorship. A miner is free to mine or not mine any transactions it wants (censor). The term attack is better reserved for stealing from someone (reclaiming spends using hash power), as it implies a moral distinction.

But 51% attack is the term in common use for a majority censor and using it helps people understand the mechanism of hash power soft fork enforcement. It?s not intended as a pejorative. 

However ?without social support? is a political term. It confuses the actual behavior to imply the mechanism is somehow not the same because there is some ill-defined level of agreement.

e


> On Mar 2, 2021, at 10:58, Luke Dashjr via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> ?On Tuesday 02 March 2021 18:22:35 Ariel Lorenzo-Luaces via bitcoin-dev wrote:
>> I'm realizing that a clear advantage of LOT=false is that it can happen
>> without the need for a social movement. All that is really needed is the
>> convincing of 95% miners. Apathetic users will never notice any kind of
>> service disruption no matter the success or failure of the activation. This
>> is obviously why it naturally became the default activation method.
> 
> No. Miners enforcing rules without the social support is a 51% attack, not a 
> softfork.
> 
>> While LOT=true, on the other hand, must be able to 51% the blockchain to
>> win the apathetic users. But then the reorgs will not be pretty. Or if it
>> ever clearly gets over the 51% hurdle then all apathetic users now need to
>> scramble to use the rogue client to be safe from reorgs. Either way it's
>> disruptive.
> 
> No, LOT=True doesn't do this. It only happens if miners choose to create an 
> invalid chain, which they could do at any time with or without a softfork 
> involved.
> 
> Luke
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From arielluaces at gmail.com  Tue Mar  2 19:36:54 2021
From: arielluaces at gmail.com (Ariel Lorenzo-Luaces)
Date: Tue, 02 Mar 2021 11:36:54 -0800
Subject: [bitcoin-dev] UASF (LOT=true) kick off meeting - Tuesday March
	2nd 19:00 UTC on ##uasf IRC channel
In-Reply-To: <202103021857.39275.luke@dashjr.org>
References: <CAFvNmHR0WwMp0eNQhvs9uFFSq3wGdHVTFUFmByLLdz7EUjg8uQ@mail.gmail.com>
 <b56bd582-e605-4389-96ce-c1cb0c58f1ad@gmail.com>
 <202103021857.39275.luke@dashjr.org>
Message-ID: <99431100-cf4a-48f7-afd1-37ab7fa92c0a@gmail.com>

You can try to redefine all you want but it doesn't make what you're saying true.

A soft fork is a constriction of rules

A 51% attack is a soft fork with majority mining power.

I didn't say that LOT=true does it I said that it must achieve 51% miner support to pose reorg risks to force apathetic users into paying attention. Please read my message again.

Your definition of invalid has no power here. We are all painfully aware of your semantic mental gymnastics.

Cheers
Ariel Lorenzo-Luaces


On Mar 2, 2021, 10:58 AM, at 10:58 AM, Luke Dashjr <luke at dashjr.org> wrote:
>On Tuesday 02 March 2021 18:22:35 Ariel Lorenzo-Luaces via bitcoin-dev
>wrote:
>> I'm realizing that a clear advantage of LOT=false is that it can
>happen
>> without the need for a social movement. All that is really needed is
>the
>> convincing of 95% miners. Apathetic users will never notice any kind
>of
>> service disruption no matter the success or failure of the
>activation. This
>> is obviously why it naturally became the default activation method.
>
>No. Miners enforcing rules without the social support is a 51% attack,
>not a 
>softfork.
>
>> While LOT=true, on the other hand, must be able to 51% the blockchain
>to
>> win the apathetic users. But then the reorgs will not be pretty. Or
>if it
>> ever clearly gets over the 51% hurdle then all apathetic users now
>need to
>> scramble to use the rogue client to be safe from reorgs. Either way
>it's
>> disruptive.
>
>No, LOT=True doesn't do this. It only happens if miners choose to
>create an 
>invalid chain, which they could do at any time with or without a
>softfork 
>involved.
>
>Luke
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210302/faf383dd/attachment.html>

From antoine.riard at gmail.com  Tue Mar  2 22:42:14 2021
From: antoine.riard at gmail.com (Antoine Riard)
Date: Tue, 2 Mar 2021 17:42:14 -0500
Subject: [bitcoin-dev] Proposal for new "disabletx" p2p message
In-Reply-To: <CAFmfg2ubukd4QTRGpB2-aczuiJ94T60xa-Fs1Kn843iQiEfKiQ@mail.gmail.com>
References: <CAFp6fsE6gb2PaL3ikDRjS-hNnPLjvtWB+8qZJr3trQe2K9YN+g@mail.gmail.com>
 <CAFmfg2sT0sVVHOe5ZbDo5iDwE1Tk2oOXJiCKhNZv_hZVOVLbRw@mail.gmail.com>
 <CALZpt+HF0NwB=arz_buW1bzk7iT3s_Ytj+ZkEhT+iXpuRgmy2Q@mail.gmail.com>
 <CAFmfg2ubukd4QTRGpB2-aczuiJ94T60xa-Fs1Kn843iQiEfKiQ@mail.gmail.com>
Message-ID: <CALZpt+H_+aWfKdxDwbhrkx=7nz8Q_1V8taUx6_Qxq=i-CuwN6g@mail.gmail.com>

> I believe this is what BIP 60 does, or did you have something else in
> mind?

Right, it achieves the first goal of dissociating `fRelay` from BIP37 but
it doesn't document Core specific behavior of disconnecting peers for raw
TX messages reception
from outbound block-relay-only peers, as implemented by PR 15759. I think
BIP 60 is as much unclear as BIP37 "Whether the remote peer should announce
relayed transactions or not, see BIP 0037, since version >= 70001". A first
interpretation could be that all tx-relay messages are disabled. A second
interpretation could be that only _tx-announcement_ messages (e.g INV(TX))
are disabled.

It could be argued that #15759 introduced incompatible changes between a
Bitcon Core 0.19.0 node and a BIP37 compliant peer on the p2p network.
Post-15759, the message space allowed to a BIP37 peer has been
reduced...Note that BIP60 isn't listed as implemented in
bitcoin/doc/bips.md.

I believe that BIP338 has the merit of making those subjects clear and easy
to follow by any Bitcoin software. Instead of spawning discussion around
old, lightclient-related BIPs or Core undocumented disabling transaction
relay mechanism being de facto part of the p2p protocol.

> Sorry - I meant that Bitcoin Core should allow a certain number of
> inbound peers that do not relay txs. This would be in addition to the
> full-relay inbound peers.

Yes, I agree on the purpose. But I don't think we need to "allow" further
disabled-tx peers by our inbound connection selection or eviction logics.
Turning a few bits in a protocol message sounds a too-cheap burden on
potential attackers contrary to most of our current eviction heuristics,
forcing some work ("announce transaction fast, "be located in some subnet",
"announce block fast"). Though better to discuss this later, not the main
point of your proposal.

Antoine

Le mar. 2 mars 2021 ? 07:22, John Newbery via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> a ?crit :

> Antoine,
>
> Nothing in my proposal below precludes introducing a more comprehensive
> feature negotiation mechanism at some later date. The only changes I'm
> proposing are to Bitcoin Core's policy for how it treats its peer
> connections.
>
> > If we don't want to introduce a new message and
> > corresponding code changes, it would be wise at least to extract
> VERSION's
> > `fRelay` and how Core handles it in its own BIP.
>
> I believe this is what BIP 60 does, or did you have something else in
> mind?
>
> > Explicit addr-relay negotiation will offer more
> > flexibility
>
> I agree!
>
> > (and more hygienic code paths rather than triggering data
> > structures initialization in few different locations).
>
> Not sure what you mean by hygienic here. This seems like a code style
> preference.
>
> > Given inbound connections might be attacker-controlled and tx-relay
> opt-out
> > signaling is also attacker-controlled, wouldn't this give a bias toward
> an
> > attacker in occupying our inbound slots ? Compared to honest inbound
> peers,
> > which in average are going to be full-relay.
>
> Sorry - I meant that Bitcoin Core should allow a certain number of
> inbound peers that do not relay txs. This would be in addition to the
> full-relay inbound peers.
>
> John
>
> On Mon, Mar 1, 2021 at 11:11 PM Antoine Riard <antoine.riard at gmail.com>
> wrote:
>
>> Hi John,
>>
>> > I think a good counter-argument against simply using `fRelay` for this
>> > purpose is that we shouldn't reuse a protocol feature designed for one
>> > function to achieve a totally different aim. However, we know that nodes
>> > on the network have been using `fRelay` to disable transaction relay
>> > since Bitcoin Core version 0.12 (when `-blocksonly` was added), and that
>> > usage was expanded to _all_ nodes running Bitcoin Core version 0.19 or
>> > later (when block-relay-only connections were introduced), so using
>> > `fRelay` to disable transaction relay is now de facto part of the p2p
>> > protocol.
>>
>>
>> I don't think this is good practice ecosystem-wise. To understand
>> tx-relay opt-out from peers correctly, a _non_ Bitcoin Core client has to
>> implement the `fRelay` subset of BIP37, but ignore the wider part around
>> FILTER* messages. Or implement those messages, only to disconnect peers
>> sending them, thus following BIP111 requirements.
>>
>> Thus, future developers of bitcoin software have the choice between
>> implementing a standard in a non-compliant way or implementing p2p messages
>> for a light client protocol in a way of deprecation ? Even further, an
>> interpretation of BIP 37 ("Being able to opt-out of _inv_ messages until
>> the filter is set prevents a client being flooded with traffic in the brief
>> window of time") would make it okay to send TX messages to your inbound
>> block-relay-only peers. And that your client shouldn't be disconnected for
>> such behavior.
>>
>> On the long-term, IMHO, better to have a well-defined standard with a
>> clean negotiation mechanism rather than relying on code specifics of a
>> given Bitcoin client. If we don't want to introduce a new message and
>> corresponding code changes, it would be wise at least to extract VERSION's
>> `fRelay` and how Core handles it in its own BIP.
>>
>> > I think a better approach would be for Bitcoin Core to only relay addr
>> > records to an inbound peer if it has previously received an `addr` or
>> > `addrv2` message from that peer, since that indicates definitively that
>> > the peer actively gossips `addr` records. This approach was first
>> > suggested by AJ in the original block-relay-only PR[15].
>>
>> If a node is willingly to opt-out from addr-relay from one of its inbound
>> peers, how is it supposed to do ? Of course, you can drop such messages on
>> the floor, your peer is just going to waste bandwidth for nothing. IIRC
>> from past irc p2p meetings, we're really unclear about what a
>> good-propagation-and-privacy-preserving addr-relay strategy should look
>> like. Note, that distrusting your inbound peers with your addr-relay might
>> be a sane direction. Explicit addr-relay negotiation will offer more
>> flexibility (and more hygienic code paths rather than triggering data
>> structures initialization in few different locations).
>>
>> > - update the inbound eviction logic to protect more inbound peers which
>> > do not have transaction relay data structures.
>>
>> Given inbound connections might be attacker-controlled and tx-relay
>> opt-out signaling is also attacker-controlled, wouldn't this give a bias
>> toward an attacker in occupying our inbound slots ? Compared to honest
>> inbound peers, which in average are going to be full-relay.
>>
>> Cheers,
>> Antoine
>>
>>
>>
>> Le lun. 1 mars 2021 ? 16:07, John Newbery via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> a ?crit :
>>
>>> Hi Suhas,
>>>
>>> Thank you for this proposal. I agree with your aims, but I think a new
>>> P2P message isn't necessary to achieve them.
>>>
>>> # Motivation
>>>
>>> There are two distinct (but interacting) motivations:
>>>
>>> 1. Allow a node to accept more incoming connections which will only be
>>>    used for block propagation (no transaction relay or addr gossip),
>>>    while minimizing resource requirements.
>>>
>>> 2. Prevent `addr` gossip messages from being sent to peers which will
>>>    'black hole' those addrs (i.e. not relay them further).
>>>
>>> These motivations interact because if we simply increase the number of
>>> block-relay-only connections that nodes make without making any
>>> allowance for the fact those connections won't gossip addr records, then
>>> we'll increase the number of addr black holes and worsen addr gossip.
>>>
>>> # Using fRelay=false to signal no transaction relay.
>>>
>>> `fRelay` is an optional field in the `version` message. There are three
>>> BIPs concerned with `fRelay`:
>>>
>>> - BIP 37[1] introduced the `fRelay` field to indicate to the recipient
>>>   that they must not relay transactions over the connection until a
>>>   `filteradd` message has been received.
>>>
>>> - BIP 60[2] aimed to make the `fRelay` field mandatory. It is not clear
>>>   how widely this BIP has been adopted by implementations.
>>>
>>> - BIP 111[3] introduced a `NODE_BLOOM` service bit to indicate that
>>>   bloom filters are served by this node. According to this BIP, "If a
>>>   node does not support bloom filters but receives a "filterload",
>>>   "filteradd", or "filterclear" message from a peer the node should
>>>   disconnect that peer immediately."
>>>
>>> Within Bitcoin Core:
>>>
>>> - PR 1795[4] (merged in January 2013) added support for BIP 37 Bloom
>>>   filters.
>>>
>>> - Since PR 2763[5] (merged in June 2013), Bitcoin Core will _always_
>>>   include the `fRelay` flag in `version` messages that it sends. Bitcoin
>>>   Core will tolerate the `fRelay` field being present or absent in any
>>>   `version` message that it receives[6].
>>>
>>> - PR 6579[7] (merged in August 2015) implemented BIP 111. From that
>>>   point on, a Bitcoin Core node would disconnect peers that sent it
>>>   `filter*` messages if it hadn't enabled `NODE_BLOOM`, provided the
>>>   peer's version was >= 70011. In PR 7708[8] (merged in March 2016) this
>>>   was extended to disconnect any peer that sends a `filter*` message,
>>>   regardless of its version (in general, a 'polite disconnect' for any
>>>   peer that requests an unsupported service is probably the best
>>>   behaviour). In PR 16152[9] (merged in July 2019), serving Bloom
>>>   filters was disabled by default, due to potential denial-of-service
>>>   attacks being possible against nodes which serve bloom filters on
>>>   public connections.
>>>
>>> - PR 6993[10] (merged in November 2015) started reusing the `fRelay`
>>>   field for the new `-blocksonly` mode. If Bitcoin Core is started with
>>>   `-blocksonly` configured, then it includes `fRelay=false` in all of
>>>   the `version` messages it sends. In PR 15759[11] (merged  in September
>>>   2019), this usage of `fRelay` to permanently disable tx relay was
>>>   extended for use by the new block-relay only connection type.
>>>
>>> The net effect is that `fRelay` is already being used to indicate that
>>> transactions should not be relayed over a connection. In the motivation
>>> for your BIP, you write:
>>>
>>> > The low-bandwidth / minimal-resource nature of these connections is
>>> > currently known only by the initiator of the connection; this is
>>> > because the transaction relay field in the version message is not a
>>> > permanent setting for the lifetime of the connection.  Consequently, a
>>> > node receiving an inbound connection with transaction relay disabled
>>> > cannot distinguish between a peer that will never enable transaction
>>> > relay (as described in BIP 37) and one that will...
>>>
>>> However, as AJ points out in his response [12], the Bitcoin Core node
>>> _does_ know whether transaction relay can be supported as soon as the
>>> `version` message is received:
>>>
>>> > [...] you either set m_tx_relay->fRelayTxes to true via the VERSION
>>> > message (either explicitly or by not setting fRelay), or you enable it
>>> > later with FILTERLOAD or FILTERCLEAR, both of which will cause a
>>> > disconnect if bloom filters aren't supported. Bloom filter support is
>>> > (optionally?) indicated via a service bit (BIP 111), so you could
>>> > assume you know whether they're supported as soon as you receive the
>>> > VERSION line.
>>>
>>> i.e. if Bitcoin Core node is running under normal configuration with
>>> bloom filters disabled for public connections (which is both the default
>>> setting and highly recommended due to DoS concerns), then as soon as it
>>> receives a `version` message with `fRelay=false`, it can be sure that
>>> there will never be any transaction relay with that peer. If the peer
>>> later tries to enable transaction relay by sending a `filterload`
>>> message, then the node will disconnect that peer immediately.
>>>
>>> In summary, we can continue using the `fRelay` field to indicate that
>>> no transaction relay can happen for the entire lifetime of the
>>> connection.  Bitcoin Core can postpone allocating resources for
>>> transaction relay data structures until after the version message has
>>> been received to minimize resource usage for incoming block-relay-only
>>> connections. A rough implementation is here[13]. Obviously, a node that
>>> has been configured to serve bloom filters on public connections would
>>> not be able to take advantage of this and accept additional incoming
>>> block-relay-only peers, but I think that's fine - we already discourage
>>> that configuration.
>>>
>>> I think a good counter-argument against simply using `fRelay` for this
>>> purpose is that we shouldn't reuse a protocol feature designed for one
>>> function to achieve a totally different aim. However, we know that nodes
>>> on the network have been using `fRelay` to disable transaction relay
>>> since Bitcoin Core version 0.12 (when `-blocksonly` was added), and that
>>> usage was expanded to _all_ nodes running Bitcoin Core version 0.19 or
>>> later (when block-relay-only connections were introduced), so using
>>> `fRelay` to disable transaction relay is now de facto part of the p2p
>>> protocol.
>>>
>>> # Preventing addr black holes
>>>
>>> Addresses of potential peers are gossiped around the p2p network using
>>> `addr` messages. When a Bitcoin Core node learns of a new `addr` record,
>>> it will relay that record to one or two of its peers, chosen at
>>> random[14]. The idea is that eventually the `addr` record will reach
>>> most of the nodes on the network.
>>>
>>> If there are too many nodes on the network that receive `addr` records
>>> and do not relay those records on to their peers (termed _addr black
>>> hole_ nodes), then propagation of those `addr` records suffers -- any
>>> individual `addr` record is unlikely to reach a large proportion of
>>> nodes on the network.
>>>
>>> Since a motivation for block-relay-only connections is to protect
>>> against eclipse attacks and thwart network topology analysis, Bitcoin
>>> Core will not relay `addr` records on those connections, and will ignore
>>> any `addr` record received over those connections. Therefore, increasing
>>> the number of block-relay-only connections without changing the `addr`
>>> gossip logic is likely to increase the prevalence of addr black holes,
>>> and negatively impact addr propagation. This is why BIP 338 includes:
>>>
>>> > It is RECOMMENDED that a node that has sent or received a disabletx
>>> > message to/from a peer not send any of these messages to the peer:
>>> >
>>> > - addr/getaddr
>>> > - addrv2 (BIP 155)
>>>
>>> I think a better approach would be for Bitcoin Core to only relay addr
>>> records to an inbound peer if it has previously received an `addr` or
>>> `addrv2` message from that peer, since that indicates definitively that
>>> the peer actively gossips `addr` records. This approach was first
>>> suggested by AJ in the original block-relay-only PR[15].
>>>
>>> An advantage of this approach is that it will improve addr propagation
>>> immediately and without any change to the P2P protocol, and will prevent
>>> sending `addr` records to all addr black holes (such as light clients),
>>> not just incoming block-relay-only connections.
>>>
>>> # Conclusion
>>>
>>> We can increase the permitted number of inbound block-relay-only peers
>>> while minimizing resource requirement _and_ improving addr record
>>> propagation, without any changes to the p2p protocol required.
>>>
>>> I propose that for Bitcoin Core version 22.0:
>>>
>>> - only initialize the transaction relay data structures after the
>>>   `version` message is received, and only if fRelay=true and
>>>   `NODE_BLOOM` is not offered on this connection.
>>> - only initialize the addr data structures for inbound connections when
>>>   an `addr`, `addrv2` or `getaddr` message is received on the
>>>   connection, and only consider a connection for addr relay if its addr
>>>   data structures are initialized.
>>> - update the inbound eviction logic to protect more inbound peers which
>>>   do not have transaction relay data structures.
>>>
>>> Then, in version 23.0:
>>>
>>> - modestly increase the number of outbound block-relay-only connections.
>>>
>>> John
>>>
>>> [1] https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki
>>> [2] https://github.com/bitcoin/bips/blob/master/bip-0060.mediawiki
>>> [3] https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki
>>> [4] https://github.com/bitcoin/bitcoin/pull/1795
>>> [5] https://github.com/bitcoin/bitcoin/pull/2763
>>> [6]
>>> https://github.com/bitcoin/bitcoin/blob/e49117470b77fb7d53be122c6490ba163c6e304d/src/net_processing.cpp#L2582-L2583
>>> [7] https://github.com/bitcoin/bitcoin/pull/6579
>>> [8] https://github.com/bitcoin/bitcoin/pull/7708
>>> [9] https://github.com/bitcoin/bitcoin/pull/16152
>>> [10] https://github.com/bitcoin/bitcoin/pull/6993
>>> [11] https://github.com/bitcoin/bitcoin/pull/15759
>>> [12]
>>> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-January/018347.html
>>> [13] https://github.com/jnewbery/bitcoin/tree/2021-02-lazy-init-peer
>>> [14]
>>> https://github.com/bitcoin/bitcoin/blob/e52ce9f2b312b3cf3b0837918e07d7603e241d63/src/net_processing.cpp#L1696-L1700
>>> [15]
>>> https://github.com/bitcoin/bitcoin/pull/15759#issuecomment-527012757
>>>
>>> > Hi,
>>> >
>>> > I'm proposing the addition of a new, optional p2p message to allow
>>> peers to communicate that they do not want to send or receive (loose)
>>> transactions for the lifetime of a connection.
>>> >
>>> > The goal of this message is to help facilitate connections on the
>>> network over which only block-related data (blocks/headers/compact
>>> blocks/etc) are relayed, to create low-resource connections that help
>>> protect against partition attacks on the network.  In particular, by adding
>>> a network message that communicates that transactions will not be relayed
>>> for the life of the connection, we ease the implementation of software that
>>> could have increased inbound connection limits for such peers, which in
>>> turn will make it easier to add additional persistent block-relay-only
>>> connections on the network -- strengthening network security for little
>>> additional bandwidth.
>>> >
>>> > Software has been deployed for over a year now which makes such
>>> connections, using the BIP37/BIP60 "fRelay" field in the version message to
>>> signal that transactions should not be sent initially.  However, BIP37
>>> allows for transaction relay to be enabled later in the connection's
>>> lifetime, complicating software that would try to distinguish inbound peers
>>> that will never relay transactions from those that might.
>>> >
>>> > This proposal would add a single new p2p message, "disabletx", which
>>> (if used at all) must be sent between version and verack.  I propose that
>>> this message is valid for peers advertising protocol version 70017 or
>>> higher.  Software is free to implement this BIP or ignore this message and
>>> remain compatible with software that does implement it.
>>> >
>>> > Full text of the proposed BIP is below.
>>> >
>>> > Thanks,
>>> > Suhas
>>> >
>>> > ---------------------------------------------------
>>> >
>>> > <pre>
>>> >   BIP: XXX
>>> >   Layer: Peer Services
>>> >   Title: Disable transaction relay message
>>> >   Author: Suhas Daftuar <sdaftuar at chaincode.com>
>>> >   Comments-Summary: No comments yet.
>>> >   Comments-URI:
>>> >   Status: Draft
>>> >   Type: Standards Track
>>> >   Created: 2020-09-03
>>> >   License: BSD-2-Clause
>>> > </pre>
>>> >
>>> > ==Abstract==
>>> >
>>> > This BIP describes a change to the p2p protocol to allow a node to
>>> tell a peer
>>> > that a connection will not be used for transaction relay, to support
>>> > block-relay-only connections that are currently in use on the network.
>>> >
>>> > ==Motivation==
>>> >
>>> > For nearly the past year, software has been deployed[1] which initiates
>>> > connections on the Bitcoin network and sets the transaction relay field
>>> > (introduced by BIP 37 and also defined in BIP 60) to false, to prevent
>>> > transaction relay from occurring on the connection. Additionally, addr
>>> messages
>>> > received from the peer are ignored by this software.
>>> >
>>> > The purpose of these connections is two-fold: by making additional
>>> > low-bandwidth connections on which blocks can propagate, the
>>> robustness of a
>>> > node to network partitioning attacks is strengthened.  Additionally,
>>> by not
>>> > relaying transactions and ignoring received addresses, the ability of
>>> an
>>> > adversary to learn the complete network graph (or a subgraph) is
>>> reduced[2],
>>> > which in turn increases the cost or difficulty to an attacker seeking
>>> to carry
>>> > out a network partitioning attack (when compared with having such
>>> knowledge).
>>> >
>>> > The low-bandwidth / minimal-resource nature of these connections is
>>> currently
>>> > known only by the initiator of the connection; this is because the
>>> transaction
>>> > relay field in the version message is not a permanent setting for the
>>> lifetime
>>> > of the connection.  Consequently, a node receiving an inbound
>>> connection with
>>> > transaction relay disabled cannot distinguish between a peer that will
>>> never
>>> > enable transaction relay (as described in BIP 37) and one that will.
>>> Moreover,
>>> > the node also cannot determine that the incoming connection will
>>> ignore relayed
>>> > addresses; with that knowledge a node would likely choose other peers
>>> to
>>> > receive announced addresses instead.
>>> >
>>> > This proposal adds a new, optional message that a node can send a peer
>>> when
>>> > initiating a connection to that peer, to indicate that connection
>>> should not be
>>> > used for transaction-relay for the connection's lifetime. In addition,
>>> without
>>> > a current mechanism to negotiate whether addresses should be relayed
>>> on a
>>> > connection, this BIP suggests that address messages not be sent on
>>> links where
>>> > tx-relay has been disabled.
>>> >
>>> > ==Specification==
>>> >
>>> > # A new disabletx message is added, which is defined as an empty
>>> message where pchCommand == "disabletx".
>>> > # The protocol version of nodes implementing this BIP must be set to
>>> 70017 or higher.
>>> > # If a node sets the transaction relay field in the version message to
>>> a peer to false, then the disabletx message MAY also be sent in response to
>>> a version message from that peer if the peer's protocol version is >=
>>> 70017. If sent, the disabletx message MUST be sent prior to sending a
>>> verack.
>>> > # A node that has sent or received a disabletx message to/from a peer
>>> MUST NOT send any of these messages to the peer:
>>> > ## inv messages for transactions
>>> > ## getdata messages for transactions
>>> > ## getdata messages for merkleblock (BIP 37)
>>> > ## filteradd/filterload/filterclear (BIP 37)
>>> > ## mempool (BIP 35)
>>> > # It is RECOMMENDED that a node that has sent or received a disabletx
>>> message to/from a peer not send any of these messages to the peer:
>>> > ## addr/getaddr
>>> > ## addrv2 (BIP 155)
>>> > # The behavior regarding sending or processing other message types is
>>> not specified by this BIP.
>>> > # Nodes MAY decide to not remain connected to peers that send this
>>> message (for example, if trying to find a peer that will relay
>>> transactions).
>>> >
>>> > ==Compatibility==
>>> >
>>> > Nodes with protocol version >= 70017 that do not implement this BIP,
>>> and nodes
>>> > with protocol version < 70017, will continue to remain compatible with
>>> > implementing software: transactions would not be relayed to peers
>>> sending the
>>> > disabletx message (provided that BIP 37 or BIP 60 has been
>>> implemented), and while
>>> > periodic address relay may still take place, software implementing
>>> this BIP
>>> > should not be disconnecting such peers solely for that reason.
>>> >
>>> > Disabling address relay is suggested but not required by this BIP, to
>>> allow for
>>> > future protocol extensions that might specify more carefully how
>>> address relay
>>> > is to be negotiated. This BIP's recommendations for software to not
>>> relay
>>> > addresses is intended to be interpreted as guidance in the absence of
>>> any such
>>> > future protocol extension, to accommodate existing software behavior.
>>> >
>>> > Note that all messages specified in BIP 152, including blocktxn and
>>> > getblocktxn, are permitted between peers that have sent/received a
>>> disabletx
>>> > message, subject to the feature negotiation of BIP 152.
>>> >
>>> > ==Implementation==
>>> >
>>> > TBD
>>> >
>>> > ==References==
>>> >
>>> > # Bitcoin Core has [https://github.com/bitcoin/bitcoin/pull/15759
>>> implemented this functionality] since version 0.19.0.1, released in
>>> November 2019.
>>> > # For example, see
>>> https://www.cs.umd.edu/projects/coinscope/coinscope.pdf and
>>> https://arxiv.org/pdf/1812.00942.pdf.
>>> >
>>> > ==Copyright==
>>> >
>>> > This BIP is licensed under the 2-clause BSD license.
>>>
>>> On Wed, Jan 6, 2021 at 4:35 PM Suhas Daftuar via bitcoin-dev <
>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>
>>>> Hi,
>>>>
>>>> I'm proposing the addition of a new, optional p2p message to allow
>>>> peers to communicate that they do not want to send or receive (loose)
>>>> transactions for the lifetime of a connection.
>>>>
>>>> The goal of this message is to help facilitate connections on the
>>>> network over which only block-related data (blocks/headers/compact
>>>> blocks/etc) are relayed, to create low-resource connections that help
>>>> protect against partition attacks on the network.  In particular, by adding
>>>> a network message that communicates that transactions will not be relayed
>>>> for the life of the connection, we ease the implementation of software that
>>>> could have increased inbound connection limits for such peers, which in
>>>> turn will make it easier to add additional persistent block-relay-only
>>>> connections on the network -- strengthening network security for little
>>>> additional bandwidth.
>>>>
>>>> Software has been deployed for over a year now which makes such
>>>> connections, using the BIP37/BIP60 "fRelay" field in the version message to
>>>> signal that transactions should not be sent initially.  However, BIP37
>>>> allows for transaction relay to be enabled later in the connection's
>>>> lifetime, complicating software that would try to distinguish inbound peers
>>>> that will never relay transactions from those that might.
>>>>
>>>> This proposal would add a single new p2p message, "disabletx", which
>>>> (if used at all) must be sent between version and verack.  I propose that
>>>> this message is valid for peers advertising protocol version 70017 or
>>>> higher.  Software is free to implement this BIP or ignore this message and
>>>> remain compatible with software that does implement it.
>>>>
>>>> Full text of the proposed BIP is below.
>>>>
>>>> Thanks,
>>>> Suhas
>>>>
>>>> ---------------------------------------------------
>>>>
>>>> <pre>
>>>>   BIP: XXX
>>>>   Layer: Peer Services
>>>>   Title: Disable transaction relay message
>>>>   Author: Suhas Daftuar <sdaftuar at chaincode.com>
>>>>   Comments-Summary: No comments yet.
>>>>   Comments-URI:
>>>>   Status: Draft
>>>>   Type: Standards Track
>>>>   Created: 2020-09-03
>>>>   License: BSD-2-Clause
>>>> </pre>
>>>>
>>>> ==Abstract==
>>>>
>>>> This BIP describes a change to the p2p protocol to allow a node to tell a peer
>>>> that a connection will not be used for transaction relay, to support
>>>> block-relay-only connections that are currently in use on the network.
>>>>
>>>> ==Motivation==
>>>>
>>>> For nearly the past year, software has been deployed[1] which initiates
>>>> connections on the Bitcoin network and sets the transaction relay field
>>>> (introduced by BIP 37 and also defined in BIP 60) to false, to prevent
>>>> transaction relay from occurring on the connection. Additionally, addr messages
>>>> received from the peer are ignored by this software.
>>>>
>>>> The purpose of these connections is two-fold: by making additional
>>>> low-bandwidth connections on which blocks can propagate, the robustness of a
>>>> node to network partitioning attacks is strengthened.  Additionally, by not
>>>> relaying transactions and ignoring received addresses, the ability of an
>>>> adversary to learn the complete network graph (or a subgraph) is reduced[2],
>>>> which in turn increases the cost or difficulty to an attacker seeking to carry
>>>> out a network partitioning attack (when compared with having such knowledge).
>>>>
>>>> The low-bandwidth / minimal-resource nature of these connections is currently
>>>> known only by the initiator of the connection; this is because the transaction
>>>> relay field in the version message is not a permanent setting for the lifetime
>>>> of the connection.  Consequently, a node receiving an inbound connection with
>>>> transaction relay disabled cannot distinguish between a peer that will never
>>>> enable transaction relay (as described in BIP 37) and one that will.  Moreover,
>>>> the node also cannot determine that the incoming connection will ignore relayed
>>>> addresses; with that knowledge a node would likely choose other peers to
>>>> receive announced addresses instead.
>>>>
>>>> This proposal adds a new, optional message that a node can send a peer when
>>>> initiating a connection to that peer, to indicate that connection should not be
>>>> used for transaction-relay for the connection's lifetime. In addition, without
>>>> a current mechanism to negotiate whether addresses should be relayed on a
>>>> connection, this BIP suggests that address messages not be sent on links where
>>>> tx-relay has been disabled.
>>>>
>>>> ==Specification==
>>>>
>>>> # A new disabletx message is added, which is defined as an empty message where pchCommand == "disabletx".
>>>> # The protocol version of nodes implementing this BIP must be set to 70017 or higher.
>>>> # If a node sets the transaction relay field in the version message to a peer to false, then the disabletx message MAY also be sent in response to a version message from that peer if the peer's protocol version is >= 70017. If sent, the disabletx message MUST be sent prior to sending a verack.
>>>> # A node that has sent or received a disabletx message to/from a peer MUST NOT send any of these messages to the peer:
>>>> ## inv messages for transactions
>>>> ## getdata messages for transactions
>>>> ## getdata messages for merkleblock (BIP 37)
>>>> ## filteradd/filterload/filterclear (BIP 37)
>>>> ## mempool (BIP 35)
>>>> # It is RECOMMENDED that a node that has sent or received a disabletx message to/from a peer not send any of these messages to the peer:
>>>> ## addr/getaddr
>>>> ## addrv2 (BIP 155)
>>>> # The behavior regarding sending or processing other message types is not specified by this BIP.
>>>> # Nodes MAY decide to not remain connected to peers that send this message (for example, if trying to find a peer that will relay transactions).
>>>>
>>>> ==Compatibility==
>>>>
>>>> Nodes with protocol version >= 70017 that do not implement this BIP, and nodes
>>>> with protocol version < 70017, will continue to remain compatible with
>>>> implementing software: transactions would not be relayed to peers sending the
>>>> disabletx message (provided that BIP 37 or BIP 60 has been implemented), and while
>>>> periodic address relay may still take place, software implementing this BIP
>>>> should not be disconnecting such peers solely for that reason.
>>>>
>>>> Disabling address relay is suggested but not required by this BIP, to allow for
>>>> future protocol extensions that might specify more carefully how address relay
>>>> is to be negotiated. This BIP's recommendations for software to not relay
>>>> addresses is intended to be interpreted as guidance in the absence of any such
>>>> future protocol extension, to accommodate existing software behavior.
>>>>
>>>> Note that all messages specified in BIP 152, including blocktxn and
>>>> getblocktxn, are permitted between peers that have sent/received a disabletx
>>>> message, subject to the feature negotiation of BIP 152.
>>>>
>>>> ==Implementation==
>>>>
>>>> TBD
>>>>
>>>> ==References==
>>>>
>>>> # Bitcoin Core has [https://github.com/bitcoin/bitcoin/pull/15759 implemented this functionality] since version 0.19.0.1, released in November 2019.
>>>> # For example, see https://www.cs.umd.edu/projects/coinscope/coinscope.pdf and https://arxiv.org/pdf/1812.00942.pdf.
>>>>
>>>> ==Copyright==
>>>>
>>>> This BIP is licensed under the 2-clause BSD license.
>>>>
>>>> _______________________________________________
>>>> bitcoin-dev mailing list
>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210302/8fc95c00/attachment-0001.html>

From willtech at live.com.au  Wed Mar  3 03:06:09 2021
From: willtech at live.com.au (LORD HIS EXCELLENCY JAMES HRMH)
Date: Wed, 3 Mar 2021 03:06:09 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <fbc4ce6c-111d-4dcc-8fc7-03ea91855bc4@www.fastmail.com>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>,
 <fbc4ce6c-111d-4dcc-8fc7-03ea91855bc4@www.fastmail.com>
Message-ID: <SL2P216MB00899B7B3C67C0DD9E9376B09D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>

"Today I spent approximately $5 at a chip shop in North London in cash. Besides the fact that I have voluntarily chosen to share this information, it is absolutely no concern of yourself or any other party that this transaction has occured."

Good Afternoon,

Requiring little argument I concur, privacy allows that you do not have snoops and researchers following you around looking in your purse as you transact. For the general public, how much you carry in your purse and where you get it from is none of their business. However, your employer is required to report to the government a record of pay, or at least maintain that record, and the store where you made a purchase similarly to keep records so that taxes can be paid. From their perspective, you do not need to know how much they keep in their drawer. Bitcoin directly allows your purse to be private and for the transaction ledger to take the scrutiny anyone should be able to apply to prove the ledger is honest. Maintaining an argument that consensus requires the ledger to be honest does not prove that it is honest.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au
www.go-overt.com
and other projects

earn.com/willtech
linkedin.com/in/damianwilliamson


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
________________________________
From: bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on behalf of Daniel Edgecumbe via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
Sent: Tuesday, 2 March 2021 12:16 PM
To: M.K. Safi via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
Subject: Re: [bitcoin-dev] Taproot NACK

Any "transparency" in the blockchain, beyond that required for a participant to determine valid ownership, can only reasonably be thought of as a bug.

Today I spent approximately $5 at a chip shop in North London in cash. Besides the fact that I have voluntarily chosen to share this information, it is absolutely no concern of yourself or any other party that this transaction has occured.

Bitcoin is digital cash.

Daniel Edgecumbe | esotericnonsense
email at esotericnonsense.com | https://esotericnonsense.com

On Mon, Mar 1, 2021, at 22:37, Eric Voskuil via bitcoin-dev wrote:
> To be clear, is this a NACK because Taproot reduces ?transparency?
> (increases privacy) on the chain (?maintaining consensus? is obviously
> an argument against any protocol change, so that?s a red herring)?
>
> And is it your theory that only an ?honest? (statute abiding) person
> should have privacy, and not against the state, and/or that mixers are
> sufficient privacy?
>
> Personally, I?m not moved by such an argument. What do you think is the
> value proposition of Bitcoin?
>
> e
>
> > On Mar 1, 2021, at 14:21, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> >
> > ?
> > Good Afternoon,
> >
> > I am going to take tough terms with much of your reply and do appreciate a courteous practice. Having previously made public disclosure of my affiliation with Jambler.io it seems sufficient to disclose my affiliation through the link in my email signature block.
> >
> > My concern is not increased privacy it is maintaining consensus values and the transparency of the blockchain wherein all transactions are published in an immutable record and that forbids the redaction of information by any obfuscation. A separate concern is the availability of a privacy suitable for cash should a Bitcoin user desire and especially without disturbing the existing consensus.
> >
> > The use of a Bitcoin Mixer is to enable standard equivalent privacy. As you may experience yourself, you do not allow people to follow you around looking in your purse, suppose you are dealing entirely with cash, and to see where and how much you fill it up, and where you spend. Nonetheless, for an honest person, their wallet is available for government audit as are their financial affairs. This is consistent with the existing operation of consensus.
> >
> > My full email signature block is a disclosure where I have some affiliation with the referenced website being that it carries at least some information that I have provided or that in some way I am associated perhaps only making use of their services. For example, I hardly make a profit from LinkedIn just my information is there. Also, I have made previous public disclosure of the affiliation. Bitcoin Mixer 2.0 is a partner mixer run by Jambler.io wherein I receive a service referral fee and am not in receipt of any part of the process transaction. The operation block diagram provided by Jambler.io is provided here and attached.
> > <ip.bitcointalk.org.png>
> >
> > [ip.bitcointalk.org.png]-Operation of Jambler.io partner mixer
> > https://ip.bitcointalk.org/?u=https%3A%2F%2Fjambler.io%2Fimages%2Fscheme-1.png&t=622&c=gTi7r1cfh-yynw
> > from this thread  https://bitcointalk.org/index.php?topic=5267588
> >
> >
> > The installation script provided by Jambler.io that is the basis of my referral website is also publicly published,
> > https://github.com/jambler-io/bitcoin-mixer
> >
> > The disclosure for the partner program is available from Jambler.io however and is made prominently on my referral website. While it may seem lucrative at first I insist all partner profits are reportable on your personal income.
> > https://jambler.io/become-partner.php
> >
> > I am certainly better than confident that you appreciate the difference between an open and transparent blockchain and the ability of the user to not reveal details of the content of their wallet publicly.
> >
> > If further clarification is required may I suggest you pay a token and mix some Bitcoin wherein our discussion may then have some point of reference.
> >
> > KING JAMES HRMH
> > Great British Empire
> >
> > Regards,
> > The Australian
> > LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> > of Hougun Manor & Glencoe & British Empire
> > MR. Damian A. James Williamson
> > Wills
> >
> > et al.
> >
> >
> > Willtech
> > www.willtech.com.au<http://www.willtech.com.au>
> > www.go-overt.com<http://www.go-overt.com>
> > and other projects
> >
> > earn.com/willtech
> > linkedin.com/in/damianwilliamson
> >
> >
> > m. 0487135719
> > f. +61261470192
> >
> >
> > This email does not constitute a general advice. Please disregard this email if misdelivered.
> > *From:* Ariel Lorenzo-Luaces <arielluaces at gmail.com>
> > *Sent:* Monday, 1 March 2021 12:07 AM
> > *To:* LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> > *Subject:* Re: [bitcoin-dev] Taproot NACK
> >
> > Hello LORD HIS EXCELLENCY JAMES HRMH
> >
> > I find a striking dichotomy between your concern of increased privacy in bitcoin and your link to a bitcoin mixer in your signature www.go-overt.com<http://www.go-overt.com>
> >
> > At first your concerns seemed genuine but after seeing your promotion of a bitcoin mixer I'm thinking your concerns may be more profit motivated? I can't tell since you failed to disclose your relationship with the mixer.
> >
> > Could you please clarify your association with the bitcoin mixer and moving forward could you please always do proper disclosure any time you're publically talking about bitcoin transaction privacy. It's only fair to do so as to not mislead people in an attempt to manipulate at worst and just a courteous practice at best.
> >
> > Cheers
> > Ariel Lorenzo-Luaces
> > On Feb 28, 2021, at 4:36 AM, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> >> Good Evening,
> >>
> >> Thank-you for your advice   @JeremyRubin <https://twitter.com/JeremyRubin>  on the basis you advise, "Taproot does not enable monero-like privacy features", I am prepred to withdraw my NACK notably that the existing feeatures of Bitcoin MUST be maintained, and whereby the UTXO of a transaction is identifiable, the PayTo Address, and the amount all without any obfuscation.
> >>
> >> Lightning does not really provide obfuscation, it provides a result of a subset of transactions although the operation of the channel is observable to the parties.
> >>
> >> The reports I were reading concerning the supposed operation of Taproot published in a public media channel may have been speculation or misinformation nonetheless it is prudent to conditionally reply as you see that I have. It is important not to allow things to slip through the cracks. As you may believe may astute reviewers could make a full disclosure to this list it is not to be expected.
> >>
> >> KING JAMES HRMH
> >> Great British Empire
> >>
> >> Regards,
> >> The Australian
> >> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> >> of Hougun Manor & Glencoe & British Empire
> >> MR. Damian A. James Williamson
> >> Wills
> >>
> >> et al.
> >>
> >>
> >> Willtech
> >> www.willtech.com.au<http://www.willtech.com.au>
> >> www.go-overt.com<http://www.go-overt.com>
> >> and other projects
> >>
> >> earn.com/willtech
> >> linkedin.com/in/damianwilliamson
> >>
> >>
> >> m. 0487135719
> >> f. +61261470192
> >>
> >>
> >> This email does not constitute a general advice. Please disregard this email if misdelivered.
> >> *From:* Jeremy <jlrubin at mit.edu>
> >> *Sent:* Sunday, 28 February 2021 3:14 AM
> >> *To:* LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> >> *Subject:* Re: [bitcoin-dev] Taproot NACK
> >>
> >> I have good news for you: Taproot does not enable monero-like privacy features any moreso than already exist in Bitcoin today. At its core, taproot is a way to make transactions with embedded smart contracts less expensive, done so in a manner that may marginally improve privacy dependent on user behavior (but not in the monero-like way you mention). For example, it makes it possible for lightning channels to look structurally similar to single key wallets, but it does nothing inherently to obfuscate the transaction graph as in monero.
> >>
> >> Such "monero-like" transaction graph obfuscation may already exist in Bitcoin via other techniques (coinjoin, payjoin, coinswap, lightning, etc) with or without Taproot, so the point is further moot.
> >>
> >> Do you have a source on your reporting?
> >>
> >> You may wish to rescind your nack.
> >>
> >>
> >> --
> >> @JeremyRubin <https://twitter.com/JeremyRubin>  <https://twitter.com/JeremyRubin>
> >>
> >>
> >> On Sat, Feb 27, 2021 at 5:46 AM LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev < bitcoin-dev at lists.linuxfoundation.org> wrote:
> >>> Good Afternoon,
> >>>
> >>> It has been reported that Taproot will enable some Monero like features including the ability to hide transactions.
> >>>
> >>> If that is the case I offer a full NACK and let me explain.
> >>>
> >>> A part of the benefit of using Bitcoin is its honesty. The full transaction is published on the blockchain. If that were to change so that transactions may be obfuscated from scrutiny then any government would have unlimited impetus to ban Bitcoin, and speculation has that is the reason India has been reported to have banned cryptocurrencies already.
> >>>
> >>> I am in support of the expanded use case of Bitcoin without harming the established robust fairness and equal equity offered. The core functionality of Bitcoin, its values, must remain unaltered.
> >>>
> >>> KING JAMES HRMH
> >>> Great British Empire
> >>>
> >>> Regards,
> >>> The Australian
> >>> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> >>> of Hougun Manor & Glencoe & British Empire
> >>> MR. Damian A. James Williamson
> >>> Wills
> >>>
> >>> et al.
> >>>
> >>>
> >>> Willtech
> >>> www.willtech.com.au<http://www.willtech.com.au>
> >>> www.go-overt.com<http://www.go-overt.com>
> >>> and other projects
> >>>
> >>> earn.com/willtech
> >>> linkedin.com/in/damianwilliamson
> >>>
> >>>
> >>> m. 0487135719
> >>> f. +61261470192
> >>>
> >>>
> >>> This email does not constitute a general advice. Please disregard this email if misdelivered.
> >>> _______________________________________________
> >>> bitcoin-dev mailing list
> >>> bitcoin-dev at lists.linuxfoundation.org
> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >>
> >> bitcoin-dev mailing list
> >> bitcoin-dev at lists.linuxfoundation.org
> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > <ip.bitcointalk.org.png>
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210303/ab749c44/attachment-0001.html>

From willtech at live.com.au  Wed Mar  3 02:54:42 2021
From: willtech at live.com.au (LORD HIS EXCELLENCY JAMES HRMH)
Date: Wed, 3 Mar 2021 02:54:42 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>,
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
Message-ID: <SL2P216MB00895015DAD709E1E12EA7EA9D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>

Good Afternoon,

All people are entitled to privacy in their purse, and all transactions should be open to the scrutiny of an honest government. You can debate whether any government is honest. Mixing does not remove the record from the public ledger, where it is possible to see that any Bitcoin has transferred from an UTXO to some Pay-To address even with some amount of transaction in between them. The value proposition is the same https://www.youtube.com/watch?v=l9jOJk30eQs - because people will trust the system; people trust the existing consensus.

Let us dispense with the screen and deal with the issue only. If it is not necessary to maintain consensus then what is consensus?

The intrinsic value of Bitcoin is because of the existing consensus. Even if any proposal gains consensus there is no objective way to show it improves the intrinsic value without trialing and the possibility of failure and so protecting the existing consensus should be the highest value. This understanding is the reason BCH exists in addition to BTC Bitcoin.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au
www.go-overt.com
and other projects

earn.com/willtech
linkedin.com/in/damianwilliamson


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
________________________________
From: Eric Voskuil <eric at voskuil.org>
Sent: Tuesday, 2 March 2021 9:37 AM
To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
Cc: Ariel Lorenzo-Luaces <arielluaces at gmail.com>
Subject: Re: [bitcoin-dev] Taproot NACK

To be clear, is this a NACK because Taproot reduces ?transparency? (increases privacy) on the chain (?maintaining consensus? is obviously an argument against any protocol change, so that?s a red herring)?

And is it your theory that only an ?honest? (statute abiding) person should have privacy, and not against the state, and/or that mixers are sufficient privacy?

Personally, I?m not moved by such an argument. What do you think is the value proposition of Bitcoin?

e

On Mar 1, 2021, at 14:21, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:

?
Good Afternoon,

I am going to take tough terms with much of your reply and do appreciate a courteous practice. Having previously made public disclosure of my affiliation with Jambler.io it seems sufficient to disclose my affiliation through the link in my email signature block.

My concern is not increased privacy it is maintaining consensus values and the transparency of the blockchain wherein all transactions are published in an immutable record and that forbids the redaction of information by any obfuscation. A separate concern is the availability of a privacy suitable for cash should a Bitcoin user desire and especially without disturbing the existing consensus.

The use of a Bitcoin Mixer is to enable standard equivalent privacy. As you may experience yourself, you do not allow people to follow you around looking in your purse, suppose you are dealing entirely with cash, and to see where and how much you fill it up, and where you spend. Nonetheless, for an honest person, their wallet is available for government audit as are their financial affairs. This is consistent with the existing operation of consensus.

My full email signature block is a disclosure where I have some affiliation with the referenced website being that it carries at least some information that I have provided or that in some way I am associated perhaps only making use of their services. For example, I hardly make a profit from LinkedIn just my information is there. Also, I have made previous public disclosure of the affiliation. Bitcoin Mixer 2.0 is a partner mixer run by Jambler.io wherein I receive a service referral fee and am not in receipt of any part of the process transaction. The operation block diagram provided by Jambler.io is provided here and attached.
<ip.bitcointalk.org.png>

[ip.bitcointalk.org.png]-Operation of Jambler.io partner mixer
https://ip.bitcointalk.org/?u=https%3A%2F%2Fjambler.io%2Fimages%2Fscheme-1.png&t=622&c=gTi7r1cfh-yynw
from this thread  https://bitcointalk.org/index.php?topic=5267588


The installation script provided by Jambler.io that is the basis of my referral website is also publicly published,
https://github.com/jambler-io/bitcoin-mixer

The disclosure for the partner program is available from Jambler.io however and is made prominently on my referral website. While it may seem lucrative at first I insist all partner profits are reportable on your personal income.
https://jambler.io/become-partner.php

I am certainly better than confident that you appreciate the difference between an open and transparent blockchain and the ability of the user to not reveal details of the content of their wallet publicly.

If further clarification is required may I suggest you pay a token and mix some Bitcoin wherein our discussion may then have some point of reference.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au
www.go-overt.com
and other projects

earn.com/willtech
linkedin.com/in/damianwilliamson


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
________________________________
From: Ariel Lorenzo-Luaces <arielluaces at gmail.com>
Sent: Monday, 1 March 2021 12:07 AM
To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
Subject: Re: [bitcoin-dev] Taproot NACK

Hello LORD HIS EXCELLENCY JAMES HRMH

I find a striking dichotomy between your concern of increased privacy in bitcoin and your link to a bitcoin mixer in your signature www.go-overt.com<http://www.go-overt.com>

At first your concerns seemed genuine but after seeing your promotion of a bitcoin mixer I'm thinking your concerns may be more profit motivated? I can't tell since you failed to disclose your relationship with the mixer.

Could you please clarify your association with the bitcoin mixer and moving forward could you please always do proper disclosure any time you're publically talking about bitcoin transaction privacy. It's only fair to do so as to not mislead people in an attempt to manipulate at worst and just a courteous practice at best.

Cheers
Ariel Lorenzo-Luaces
On Feb 28, 2021, at 4:36 AM, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
Good Evening,

Thank-you for your advice   @JeremyRubin<https://twitter.com/JeremyRubin>  on the basis you advise, "Taproot does not enable monero-like privacy features", I am prepred to withdraw my NACK notably that the existing feeatures of Bitcoin MUST be maintained, and whereby the UTXO of a transaction is identifiable, the PayTo Address, and the amount all without any obfuscation.

Lightning does not really provide obfuscation, it provides a result of a subset of transactions although the operation of the channel is observable to the parties.

The reports I were reading concerning the supposed operation of Taproot published in a public media channel may have been speculation or misinformation nonetheless it is prudent to conditionally reply as you see that I have. It is important not to allow things to slip through the cracks. As you may believe may astute reviewers could make a full disclosure to this list it is not to be expected.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au
www.go-overt.com
and other projects

earn.com/willtech
linkedin.com/in/damianwilliamson


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
________________________________
From: Jeremy <jlrubin at mit.edu>
Sent: Sunday, 28 February 2021 3:14 AM
To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
Subject: Re: [bitcoin-dev] Taproot NACK

I have good news for you: Taproot does not enable monero-like privacy features any moreso than already exist in Bitcoin today. At its core, taproot is a way to make transactions with embedded smart contracts less expensive, done so in a manner that may marginally improve privacy dependent on user behavior (but not in the monero-like way you mention). For example, it makes it possible for lightning channels to look structurally similar to single key wallets, but it does nothing inherently to obfuscate the transaction graph as in monero.

Such "monero-like" transaction graph obfuscation may already exist in Bitcoin via other techniques (coinjoin, payjoin, coinswap, lightning, etc) with or without Taproot, so the point is further moot.

Do you have a source on your reporting?

You may wish to rescind your nack.


--
@JeremyRubin<https://twitter.com/JeremyRubin> <https://twitter.com/JeremyRubin>


On Sat, Feb 27, 2021 at 5:46 AM LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev < bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
Good Afternoon,

It has been reported that Taproot will enable some Monero like features including the ability to hide transactions.

If that is the case I offer a full NACK and let me explain.

A part of the benefit of using Bitcoin is its honesty. The full transaction is published on the blockchain. If that were to change so that transactions may be obfuscated from scrutiny then any government would have unlimited impetus to ban Bitcoin, and speculation has that is the reason India has been reported to have banned cryptocurrencies already.

I am in support of the expanded use case of Bitcoin without harming the established robust fairness and equal equity offered. The core functionality of Bitcoin, its values, must remain unaltered.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au<http://www.willtech.com.au>
www.go-overt.com<http://www.go-overt.com>
and other projects

earn.com/willtech<http://earn.com/willtech>
linkedin.com/in/damianwilliamson<http://linkedin.com/in/damianwilliamson>


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


________________________________

bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

<ip.bitcointalk.org.png>
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210303/d020f58e/attachment-0001.html>

From willtech at live.com.au  Wed Mar  3 11:22:18 2021
From: willtech at live.com.au (LORD HIS EXCELLENCY JAMES HRMH)
Date: Wed, 3 Mar 2021 11:22:18 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <170b27c0-436f-c440-e3c3-f9577b764972@riseup.net>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>,
 <170b27c0-436f-c440-e3c3-f9577b764972@riseup.net>
Message-ID: <SL2P216MB00896086AA80DE1A98293C469D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>

Good Afternoon,

No-one has yet demonstrated that Conjoin or using Wasabi wallet is secure if it relies on third-parties. Are the transaction not forwarded partially signed as with an SPV wallet? So it is possible the SPV server cannot redirect funds if dishonest? SPV wallets are secure producing fully signed transactions. A ConJoin transaction signs for the UTXO and forwards it to be included signed for in another larger transaction with many inputs and outputs. Also, none of those you mention is inherently a Privacy Technology. Transparency is one of the key articles of value in Bitcoin because it prevents fraud.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au
www.go-overt.com
and other projects

earn.com/willtech
linkedin.com/in/damianwilliamson


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
________________________________
From: bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on behalf of Chris Belcher via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
Sent: Tuesday, 2 March 2021 10:56 PM
To: bitcoin-dev at lists.linuxfoundation.org <bitcoin-dev at lists.linuxfoundation.org>
Subject: Re: [bitcoin-dev] Taproot NACK

The idea of a fully-transparent bitcoin is dead and has been for many
years. This is because of various privacy tech such as CoinJoin,
Lightning Network, PayJoin, change avoidance, avoiding address reuse,
etc, along with a few new ones like CoinSwap and WabiSabi hopefully
coming soon.

On 01/03/2021 22:37, Eric Voskuil via bitcoin-dev wrote:
> To be clear, is this a NACK because Taproot reduces ?transparency? (increases privacy) on the chain (?maintaining consensus? is obviously an argument against any protocol change, so that?s a red herring)?
>
> And is it your theory that only an ?honest? (statute abiding) person should have privacy, and not against the state, and/or that mixers are sufficient privacy?
>
> Personally, I?m not moved by such an argument. What do you think is the value proposition of Bitcoin?
>
> e
>
>> On Mar 1, 2021, at 14:21, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>> ?
>> Good Afternoon,
>>
>> I am going to take tough terms with much of your reply and do appreciate a courteous practice. Having previously made public disclosure of my affiliation with Jambler.io it seems sufficient to disclose my affiliation through the link in my email signature block.
>>
>> My concern is not increased privacy it is maintaining consensus values and the transparency of the blockchain wherein all transactions are published in an immutable record and that forbids the redaction of information by any obfuscation. A separate concern is the availability of a privacy suitable for cash should a Bitcoin user desire and especially without disturbing the existing consensus.
>>
>> The use of a Bitcoin Mixer is to enable standard equivalent privacy. As you may experience yourself, you do not allow people to follow you around looking in your purse, suppose you are dealing entirely with cash, and to see where and how much you fill it up, and where you spend. Nonetheless, for an honest person, their wallet is available for government audit as are their financial affairs. This is consistent with the existing operation of consensus.
>>
>> My full email signature block is a disclosure where I have some affiliation with the referenced website being that it carries at least some information that I have provided or that in some way I am associated perhaps only making use of their services. For example, I hardly make a profit from LinkedIn just my information is there. Also, I have made previous public disclosure of the affiliation. Bitcoin Mixer 2.0 is a partner mixer run by Jambler.io wherein I receive a service referral fee and am not in receipt of any part of the process transaction. The operation block diagram provided by Jambler.io is provided here and attached.
>> <ip.bitcointalk.org.png>
>>
>> [ip.bitcointalk.org.png]-Operation of Jambler.io partner mixer
>> https://ip.bitcointalk.org/?u=https%3A%2F%2Fjambler.io%2Fimages%2Fscheme-1.png&t=622&c=gTi7r1cfh-yynw
>> from this thread  https://bitcointalk.org/index.php?topic=5267588
>>
>>
>> The installation script provided by Jambler.io that is the basis of my referral website is also publicly published,
>> https://github.com/jambler-io/bitcoin-mixer
>>
>> The disclosure for the partner program is available from Jambler.io however and is made prominently on my referral website. While it may seem lucrative at first I insist all partner profits are reportable on your personal income.
>> https://jambler.io/become-partner.php
>>
>> I am certainly better than confident that you appreciate the difference between an open and transparent blockchain and the ability of the user to not reveal details of the content of their wallet publicly.
>>
>> If further clarification is required may I suggest you pay a token and mix some Bitcoin wherein our discussion may then have some point of reference.
>>
>> KING JAMES HRMH
>> Great British Empire
>>
>> Regards,
>> The Australian
>> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
>> of Hougun Manor & Glencoe & British Empire
>> MR. Damian A. James Williamson
>> Wills
>>
>> et al.
>>
>>
>> Willtech
>> www.willtech.com.au<http://www.willtech.com.au>
>> www.go-overt.com<http://www.go-overt.com>
>> and other projects
>>
>> earn.com/willtech
>> linkedin.com/in/damianwilliamson
>>
>>
>> m. 0487135719
>> f. +61261470192
>>
>>
>> This email does not constitute a general advice. Please disregard this email if misdelivered.
>> From: Ariel Lorenzo-Luaces <arielluaces at gmail.com>
>> Sent: Monday, 1 March 2021 12:07 AM
>> To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
>> Subject: Re: [bitcoin-dev] Taproot NACK
>>
>> Hello LORD HIS EXCELLENCY JAMES HRMH
>>
>> I find a striking dichotomy between your concern of increased privacy in bitcoin and your link to a bitcoin mixer in your signature www.go-overt.com<http://www.go-overt.com>
>>
>> At first your concerns seemed genuine but after seeing your promotion of a bitcoin mixer I'm thinking your concerns may be more profit motivated? I can't tell since you failed to disclose your relationship with the mixer.
>>
>> Could you please clarify your association with the bitcoin mixer and moving forward could you please always do proper disclosure any time you're publically talking about bitcoin transaction privacy. It's only fair to do so as to not mislead people in an attempt to manipulate at worst and just a courteous practice at best.
>>
>> Cheers
>> Ariel Lorenzo-Luaces
>> On Feb 28, 2021, at 4:36 AM, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> Good Evening,
>>
>> Thank-you for your advice   @JeremyRubin  on the basis you advise, "Taproot does not enable monero-like privacy features", I am prepred to withdraw my NACK notably that the existing feeatures of Bitcoin MUST be maintained, and whereby the UTXO of a transaction is identifiable, the PayTo Address, and the amount all without any obfuscation.
>>
>> Lightning does not really provide obfuscation, it provides a result of a subset of transactions although the operation of the channel is observable to the parties.
>>
>> The reports I were reading concerning the supposed operation of Taproot published in a public media channel may have been speculation or misinformation nonetheless it is prudent to conditionally reply as you see that I have. It is important not to allow things to slip through the cracks. As you may believe may astute reviewers could make a full disclosure to this list it is not to be expected.
>>
>> KING JAMES HRMH
>> Great British Empire
>>
>> Regards,
>> The Australian
>> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
>> of Hougun Manor & Glencoe & British Empire
>> MR. Damian A. James Williamson
>> Wills
>>
>> et al.
>>
>>
>> Willtech
>> www.willtech.com.au<http://www.willtech.com.au>
>> www.go-overt.com<http://www.go-overt.com>
>> and other projects
>>
>> earn.com/willtech
>> linkedin.com/in/damianwilliamson
>>
>>
>> m. 0487135719
>> f. +61261470192
>>
>>
>> This email does not constitute a general advice. Please disregard this email if misdelivered.
>> From: Jeremy <jlrubin at mit.edu>
>> Sent: Sunday, 28 February 2021 3:14 AM
>> To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
>> Subject: Re: [bitcoin-dev] Taproot NACK
>>
>> I have good news for you: Taproot does not enable monero-like privacy features any moreso than already exist in Bitcoin today. At its core, taproot is a way to make transactions with embedded smart contracts less expensive, done so in a manner that may marginally improve privacy dependent on user behavior (but not in the monero-like way you mention). For example, it makes it possible for lightning channels to look structurally similar to single key wallets, but it does nothing inherently to obfuscate the transaction graph as in monero.
>>
>> Such "monero-like" transaction graph obfuscation may already exist in Bitcoin via other techniques (coinjoin, payjoin, coinswap, lightning, etc) with or without Taproot, so the point is further moot.
>>
>> Do you have a source on your reporting?
>>
>> You may wish to rescind your nack.
>>
>>
>> --
>> @JeremyRubin
>>
>>
>> On Sat, Feb 27, 2021 at 5:46 AM LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev < bitcoin-dev at lists.linuxfoundation.org> wrote:
>> Good Afternoon,
>>
>> It has been reported that Taproot will enable some Monero like features including the ability to hide transactions.
>>
>> If that is the case I offer a full NACK and let me explain.
>>
>> A part of the benefit of using Bitcoin is its honesty. The full transaction is published on the blockchain. If that were to change so that transactions may be obfuscated from scrutiny then any government would have unlimited impetus to ban Bitcoin, and speculation has that is the reason India has been reported to have banned cryptocurrencies already.
>>
>> I am in support of the expanded use case of Bitcoin without harming the established robust fairness and equal equity offered. The core functionality of Bitcoin, its values, must remain unaltered.
>>
>> KING JAMES HRMH
>> Great British Empire
>>
>> Regards,
>> The Australian
>> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
>> of Hougun Manor & Glencoe & British Empire
>> MR. Damian A. James Williamson
>> Wills
>>
>> et al.
>>
>>
>> Willtech
>> www.willtech.com.au<http://www.willtech.com.au>
>> www.go-overt.com<http://www.go-overt.com>
>> and other projects
>>
>> earn.com/willtech
>> linkedin.com/in/damianwilliamson
>>
>>
>> m. 0487135719
>> f. +61261470192
>>
>>
>> This email does not constitute a general advice. Please disregard this email if misdelivered.
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> <ip.bitcointalk.org.png>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210303/71bdad2a/attachment-0001.html>

From belcher at riseup.net  Wed Mar  3 14:39:23 2021
From: belcher at riseup.net (Chris Belcher)
Date: Wed, 3 Mar 2021 14:39:23 +0000
Subject: [bitcoin-dev] Making the case for flag day activation of taproot
Message-ID: <3286a7eb-9deb-77d6-4527-58e0c5882ae2@riseup.net>

The bitcoin world is close to total gridlock on the question of how to
activate taproot. There's no agreement on activation[1][2], and if an
agreement isn't reached then nothing happens. That would be really
terrible because we'd miss out on the benefits of taproot and
potentially other future soft forks.

A major problem with BIP8 is that it would result to a situation where
different parts of the bitcoin ecosystem run different consensus rules.
Some people will run LOT=true and others LOT=false. Worst of all, it
becomes vulnerable to a twitter/reddit/social media blitz which could
attempt to move the date of miner activation around.

Twitter and reddit drama provide a perfect cover for social attacks on
bitcoin.

Forced signalling leads to brinksmanship. Where two or more sides
(backed up by social media drama) enter into a game of chicken with
deployed nodes. If one of them doesn't concede then we get a damaging
chain split. And the $1 trillion in value that the bitcoin network
protects is put at risk. From the point of view of a miner or big
exchange stuck in the middle, if they look at the ecosystem of twitter
and reddit (especially if you think about all the problems with bots and
sockpuppets) they have no idea which consensus rules they should
actually follow and exactly what date they take effect. Miners,
exchanges, merchants and the rest of the ecosystem exist to serve their
customers and users, and trouble happens when they don't know what their
customers really want. Social media attacks are not just a theoretical
concern; back during the block size drama, the bitcoin reddits were
targetted by bots, sockpuppets and brigading[3].

Enter flag day activation. With a flag day there can be no
brinksmanship. A social media blitz cant do anything except have its own
followers fork away. Crucially, miner signalling cant be used to change
the activation date for nodes that didn't choose to and just passively
follow signalling. Changing the activation date requires all those users
to actually run different node software.

Flag day activation works simply: we choose a block height and after
that block height the new taproot rules become enforced.


Supporters of the permissionless, "users rule" approach of LOT=true
should be happy because it completely takes miners out of activation.

Supporters of the safe, conservative approach of LOT=false can be made
happy with a few ways of derisking:

* Getting mining pools, businesses and users to look at the code and ask
if they (a) think its either neutral or good for their business or use
case and (b) they believe others view it similarly and that the
consensus changes proposed have a good social consensus around them.

* Setting the flag day far in the future (18 months or 2 years in the
original proposal[3]).


== What if flag day activation is used maliciously? ==

What if one day the Core developer team is co-opted and uses the flag
day method to do something bad? For example, a soft fork where sending
to certain blacklisted addresses is not allowed. The bitcoin user
community who wants to resist this can create their own
counter-soft-fork full node, where the first block after the flag day
MUST pay to one of those addresses on the blacklist. This forces a chain
split between the censorship rules and the no-censorship rules, and its
pretty obvious that the real bitcoin which most people follow will be
the chain without censorship.

For example, if a group of users didn't agree with taproot then they
could create their own counter-flag-day-activation which requires that a
transaction is included that does an invalid-spend from a taproot output
in the first block after the flag day height.

This is always possible with any user activated soft fork. In BIP8
LOT=true it could be done by rejecting block headers with certain
version bits signalled.


== But it will take so long! ==

We seem to be at a deadlock now. This will take less time than any other
method, because other methods might never happen. BIP8 is dead and from
what I see there's no other credible plan.

We've already waited years for taproot. I remember listening to talks
about bitcoin from 2015 of people discussing Schnorr signatures. And
given how slow segwit and p2sh adoption were its pretty likely that
we'll waiting a while for taproot to be actually adopted.


== A social media blitz could still try to activate it early ==

The brinksmanship only works because miner signalling can make many
other nodes activate early, even if those other nodes didn't do
anything. There can't be a game of chicken that puts the bitcoin network
at risk.

If a group of people did adopt alternative node software which has a
shorter flag day, they actually have a risk of slow blocks. Because they
cant trick or force any other nodes to come along with them, they are
likely to only have a small economy and therefore would lose a lot of
hashrate. Imagine trading bitcoins for cash in person and instead of
waiting 10 minutes for a confirmation you have to wait 3 hours because
the blocks are slow.

Also, the argument for downloading and running a different software only
to speed up activation is pretty weak. Taproot would activate in ~18
months, so why are you so impatient that you need it in 6 months? And
risk slow blocks for you while doing so? The big difference with BIP148
the segwit UASF, is that people *had to* run some other software
otherwise they would get *no soft fork at all*.


== Without miner signalling how do we know the new rules are even
activated? ==

When did you see miners signalling their support for the inflation schedule?

Bitcoin's rules are enforced by wallets backed by full nodes. You'll
always know if your own full node is enforcing the new rules. The thing
that matters isnt miner signalling but your own full node, and the nodes
of those you trade with.

Flag day activation is quite similar to the way block reward halvenings
work. At and after block height 630000 miners are only allowed to create
6.25 BTC rather than 12.5 BTC. Everyone knows that if miners continued
to create 12.5 BTC or more they would be unable to sell or spend those
coins anywhere.

In 2017 when segwit was being activated people created a huge list of
various bitcoin companies, merchants and wallets:
https://web.archive.org/web/20171228111943/https://bitcoincore.org/en/segwit_adoption/
Looking at that list, you would know that if someone stole coins from a
segwit address they would be unable to deposit them in many exchanges
and merchants: Bitrefill, Bitstamp, Kraken, Localbitcoins, Paxful,
Vaultoro, HitBTC, etc.

Then what happened is only a month after S2X was beaten this guy moved
40000 BTC to a segwit address, confident about the power of the network
to protect his coins.
https://old.reddit.com/r/Bitcoin/comments/7tcmi4/bitcointalks_famous_user_loaded_moved_his_40k_btc/

If there's ever any doubt about flag day activation we can always draw
up a similar list, although if there's broad consensus about it then
there's no reason why bitcoin businesses wouldn't upgrade to the latest
Core, like they did with every other previous soft fork.


== This gives the impression that Core developers control the protocol ==

This objection has a mirror image argument: BIP8 with LOT=false gives
the impression that miners control the protocol(!)

Eventually some group has to make a decision. We will ask the bitcoin
economy and users what they think of flag day activation. It's pretty
clear that nobody seriously objects to taproot, and as described above
if Core developers did something evil the community could resist it with
a counter-flag-day-activation.



== TL;DR ==

I believe flag day activation is the way forward. It should answer all
the objections and risks which make other methods too controversial.
Let's go ahead and bring taproot to bitcoin!



== References ==

[1] -
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018498.html
      luke-jr posts saying LOT=false in his view reintroduces a bug, he
compares it to introducing an inflation bug and just hoping that miners
will not exploit it.

[2] -
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018425.html
      This whole thread has many people disagreeing with LOT=true

[3] -
https://old.reddit.com/r/Bitcoin/comments/4biob5/research_into_instantaneous_vote_behavior_in/

https://old.reddit.com/r/Bitcoin/comments/3v04pd/can_we_please_have_a_civil_discussion_about/cxjnz1d/?context=1

https://old.reddit.com/r/Bitcoin/comments/41ykkt/members_trying_to_destroy_bitcoin_on_this_thread/cz6ccka/?context=3

[4] -
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018495.html
      Matt Corallo's flag day activation proposal

From aj at erisian.com.au  Wed Mar  3 14:59:02 2021
From: aj at erisian.com.au (Anthony Towns)
Date: Thu, 4 Mar 2021 00:59:02 +1000
Subject: [bitcoin-dev] Straight Flag Day (Height) Taproot Activation
In-Reply-To: <c35e1761-43ca-e157-6a5c-72d27f2c6c6e@mattcorallo.com>
References: <c35e1761-43ca-e157-6a5c-72d27f2c6c6e@mattcorallo.com>
Message-ID: <20210303145902.cl4mzg6l7avjboil@erisian.com.au>

On Sun, Feb 28, 2021 at 11:45:22AM -0500, Matt Corallo via bitcoin-dev wrote:
> Given this, it seems one way to keep the network in consensus would be to
> simply activate taproot through a traditional, no-frills, flag-day (or
> -height) activation with a flag day of roughly August, 2022. Going back to
> my criteria laid out in [1],

The timeout height proposed in:

 https://en.bitcoin.it/wiki/Taproot_activation_proposal_202102

is block 745920, so bip8/lockinontimeout=true with that param would ensure
activation by block 747936. That's 74,940 blocks away at present, which
would be ~6th August 2022 if the block interval averaged at 10 minutes.

So I think I'm going to treat this as reusing the same parameter, just
dropping the consensus-critical signalling and hence the possibilty
of early activation.

I believe this sort of unsignalled flag day could be implemented
fairly easily by merging PR #19438, adding "int TaprootHeight;" to
Conensus::Params, moving "DEPLOYMENT_TAPROOT" from DeploymentPos
to BuriedDeployment, adjusting DeploymentHeight(), and setting
TaprootHeight=747936 for MAINNET. Might need to add a config param like
"-segwitheight" for regtest in order to keep the tests working.

I think it would be worthwhile to also update getblocktemplate so that
miners signal uptake for something like three or four retarget periods
prior to activation, without that signalling having any consensus-level
effect. That should allow miners and businesses to adjust their
expectations for how much hashpower might not be enforcing taproot rules
when generating blocks -- potentially allowing miners to switch pools
to one running an up to date node, pools to reduce the amount of time
they spend mining on top of unvalidated headers, businesses to increase
confirmation requirements or prepare for the possibility of an increase
in invalid-block entries in their logs, etc.

> 2) The high node-level-adoption bar is one of the most critical goals, and
> the one most currently in jeopardy in a BIP 8 approach.

A couple of days ago I would have disagreed with this; but with Luke
now strongly pushing against implementing lot=false, I can at least see
your point...

Cheers,
aj


From eric at voskuil.org  Wed Mar  3 11:58:35 2021
From: eric at voskuil.org (eric at voskuil.org)
Date: Wed, 3 Mar 2021 03:58:35 -0800
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <SL2P216MB00899B7B3C67C0DD9E9376B09D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>,
 <fbc4ce6c-111d-4dcc-8fc7-03ea91855bc4@www.fastmail.com>
 <SL2P216MB00899B7B3C67C0DD9E9376B09D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
Message-ID: <00f301d71024$8ac14cf0$a043e6d0$@voskuil.org>

> consensus requires the ledger to be honest does not prove that it is honest.

 

Actually, that?s exactly what it does. A logical/mathematical requirement (necessity) is also called a proof.

 

e

 

From: bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> On Behalf Of LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev
Sent: Tuesday, March 2, 2021 7:06 PM
To: M.K. Safi via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>; Daniel Edgecumbe <email at esotericnonsense.com>
Subject: Re: [bitcoin-dev] Taproot NACK

 

"Today I spent approximately $5 at a chip shop in North London in cash. Besides the fact that I have voluntarily chosen to share this information, it is absolutely no concern of yourself or any other party that this transaction has occured."

 

Good Afternoon,

 

Requiring little argument I concur, privacy allows that you do not have snoops and researchers following you around looking in your purse as you transact. For the general public, how much you carry in your purse and where you get it from is none of their business. However, your employer is required to report to the government a record of pay, or at least maintain that record, and the store where you made a purchase similarly to keep records so that taxes can be paid. From their perspective, you do not need to know how much they keep in their drawer. Bitcoin directly allows your purse to be private and for the transaction ledger to take the scrutiny anyone should be able to apply to prove the ledger is honest. Maintaining an argument that consensus requires the ledger to be honest does not prove that it is honest.

 

KING JAMES HRMH

Great British Empire

 

Regards,

The Australian

LORD HIS EXCELLENCY JAMES HRMH (& HMRH)

of Hougun Manor & Glencoe & British Empire

MR. Damian A. James Williamson

Wills

 

et al.

 

 

Willtech

www.willtech.com.au <http://www.willtech.com.au> 

www.go-overt.com <http://www.go-overt.com> 

and other projects

 

earn.com/willtech

linkedin.com/in/damianwilliamson

 

 

m. 0487135719

f. +61261470192

 

 

This email does not constitute a general advice. Please disregard this email if misdelivered.

  _____  

From: bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on behalf of Daniel Edgecumbe via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> >
Sent: Tuesday, 2 March 2021 12:16 PM
To: M.K. Safi via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> >
Subject: Re: [bitcoin-dev] Taproot NACK 

 

Any "transparency" in the blockchain, beyond that required for a participant to determine valid ownership, can only reasonably be thought of as a bug.

Today I spent approximately $5 at a chip shop in North London in cash. Besides the fact that I have voluntarily chosen to share this information, it is absolutely no concern of yourself or any other party that this transaction has occured.

Bitcoin is digital cash.

Daniel Edgecumbe | esotericnonsense
email at esotericnonsense.com <mailto:email at esotericnonsense.com>  | https://esotericnonsense.com

On Mon, Mar 1, 2021, at 22:37, Eric Voskuil via bitcoin-dev wrote:
> To be clear, is this a NACK because Taproot reduces ?transparency? 
> (increases privacy) on the chain (?maintaining consensus? is obviously 
> an argument against any protocol change, so that?s a red herring)? 
> 
> And is it your theory that only an ?honest? (statute abiding) person 
> should have privacy, and not against the state, and/or that mixers are 
> sufficient privacy?
> 
> Personally, I?m not moved by such an argument. What do you think is the 
> value proposition of Bitcoin?
> 
> e
> 
> > On Mar 1, 2021, at 14:21, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> > wrote:
> > 
> > ? 
> > Good Afternoon,
> > 
> > I am going to take tough terms with much of your reply and do appreciate a courteous practice. Having previously made public disclosure of my affiliation with Jambler.io it seems sufficient to disclose my affiliation through the link in my email signature block.
> > 
> > My concern is not increased privacy it is maintaining consensus values and the transparency of the blockchain wherein all transactions are published in an immutable record and that forbids the redaction of information by any obfuscation. A separate concern is the availability of a privacy suitable for cash should a Bitcoin user desire and especially without disturbing the existing consensus.
> > 
> > The use of a Bitcoin Mixer is to enable standard equivalent privacy. As you may experience yourself, you do not allow people to follow you around looking in your purse, suppose you are dealing entirely with cash, and to see where and how much you fill it up, and where you spend. Nonetheless, for an honest person, their wallet is available for government audit as are their financial affairs. This is consistent with the existing operation of consensus.
> > 
> > My full email signature block is a disclosure where I have some affiliation with the referenced website being that it carries at least some information that I have provided or that in some way I am associated perhaps only making use of their services. For example, I hardly make a profit from LinkedIn just my information is there. Also, I have made previous public disclosure of the affiliation. Bitcoin Mixer 2.0 is a partner mixer run by Jambler.io wherein I receive a service referral fee and am not in receipt of any part of the process transaction. The operation block diagram provided by Jambler.io is provided here and attached.
> > <ip.bitcointalk.org.png>
> > 
> > [ip.bitcointalk.org.png]-Operation of Jambler.io partner mixer
> > https://ip.bitcointalk.org/?u=https%3A%2F%2Fjambler.io%2Fimages%2Fscheme-1.png <https://ip.bitcointalk.org/?u=https%3A%2F%2Fjambler.io%2Fimages%2Fscheme-1.png&t=622&c=gTi7r1cfh-yynw> &t=622&c=gTi7r1cfh-yynw
> > from this thread  https://bitcointalk.org/index.php?topic=5267588
> > 
> > 
> > The installation script provided by Jambler.io that is the basis of my referral website is also publicly published,
> > https://github.com/jambler-io/bitcoin-mixer
> > 
> > The disclosure for the partner program is available from Jambler.io however and is made prominently on my referral website. While it may seem lucrative at first I insist all partner profits are reportable on your personal income.
> > https://jambler.io/become-partner.php
> > 
> > I am certainly better than confident that you appreciate the difference between an open and transparent blockchain and the ability of the user to not reveal details of the content of their wallet publicly.
> > 
> > If further clarification is required may I suggest you pay a token and mix some Bitcoin wherein our discussion may then have some point of reference.
> > 
> > KING JAMES HRMH
> > Great British Empire
> > 
> > Regards,
> > The Australian
> > LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> > of Hougun Manor & Glencoe & British Empire
> > MR. Damian A. James Williamson
> > Wills
> > 
> > et al.
> > 
> >  
> > Willtech
> > www.willtech.com.au <http://www.willtech.com.au> 
> > www.go-overt.com <http://www.go-overt.com> 
> > and other projects
> >  
> > earn.com/willtech
> > linkedin.com/in/damianwilliamson
> > 
> > 
> > m. 0487135719
> > f. +61261470192
> > 
> > 
> > This email does not constitute a general advice. Please disregard this email if misdelivered.
> > *From:* Ariel Lorenzo-Luaces <arielluaces at gmail.com <mailto:arielluaces at gmail.com> >
> > *Sent:* Monday, 1 March 2021 12:07 AM
> > *To:* LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au <mailto:willtech at live.com.au> >; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> >
> > *Subject:* Re: [bitcoin-dev] Taproot NACK 
> >  
> > Hello LORD HIS EXCELLENCY JAMES HRMH
> > 
> > I find a striking dichotomy between your concern of increased privacy in bitcoin and your link to a bitcoin mixer in your signature www.go-overt.com <http://www.go-overt.com> 
> > 
> > At first your concerns seemed genuine but after seeing your promotion of a bitcoin mixer I'm thinking your concerns may be more profit motivated? I can't tell since you failed to disclose your relationship with the mixer.
> > 
> > Could you please clarify your association with the bitcoin mixer and moving forward could you please always do proper disclosure any time you're publically talking about bitcoin transaction privacy. It's only fair to do so as to not mislead people in an attempt to manipulate at worst and just a courteous practice at best.
> > 
> > Cheers
> > Ariel Lorenzo-Luaces
> > On Feb 28, 2021, at 4:36 AM, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> > wrote: 
> >> Good Evening, 
> >> 
> >> Thank-you for your advice   @JeremyRubin <https://twitter.com/JeremyRubin>  on the basis you advise, "Taproot does not enable monero-like privacy features", I am prepred to withdraw my NACK notably that the existing feeatures of Bitcoin MUST be maintained, and whereby the UTXO of a transaction is identifiable, the PayTo Address, and the amount all without any obfuscation. 
> >> 
> >> Lightning does not really provide obfuscation, it provides a result of a subset of transactions although the operation of the channel is observable to the parties. 
> >> 
> >> The reports I were reading concerning the supposed operation of Taproot published in a public media channel may have been speculation or misinformation nonetheless it is prudent to conditionally reply as you see that I have. It is important not to allow things to slip through the cracks. As you may believe may astute reviewers could make a full disclosure to this list it is not to be expected. 
> >> 
> >> KING JAMES HRMH 
> >> Great British Empire 
> >> 
> >> Regards, 
> >> The Australian 
> >> LORD HIS EXCELLENCY JAMES HRMH (& HMRH) 
> >> of Hougun Manor & Glencoe & British Empire 
> >> MR. Damian A. James Williamson 
> >> Wills 
> >> 
> >> et al. 
> >> 
> >>   
> >> Willtech 
> >> www.willtech.com.au <http://www.willtech.com.au>  
> >> www.go-overt.com <http://www.go-overt.com>  
> >> and other projects 
> >>   
> >> earn.com/willtech 
> >> linkedin.com/in/damianwilliamson 
> >> 
> >> 
> >> m. 0487135719 
> >> f. +61261470192 
> >> 
> >> 
> >> This email does not constitute a general advice. Please disregard this email if misdelivered. 
> >> *From:* Jeremy <jlrubin at mit.edu <mailto:jlrubin at mit.edu> >
> >> *Sent:* Sunday, 28 February 2021 3:14 AM
> >> *To:* LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au <mailto:willtech at live.com.au> >; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> >
> >> *Subject:* Re: [bitcoin-dev] Taproot NACK 
> >>   
> >> I have good news for you: Taproot does not enable monero-like privacy features any moreso than already exist in Bitcoin today. At its core, taproot is a way to make transactions with embedded smart contracts less expensive, done so in a manner that may marginally improve privacy dependent on user behavior (but not in the monero-like way you mention). For example, it makes it possible for lightning channels to look structurally similar to single key wallets, but it does nothing inherently to obfuscate the transaction graph as in monero. 
> >> 
> >> Such "monero-like" transaction graph obfuscation may already exist in Bitcoin via other techniques (coinjoin, payjoin, coinswap, lightning, etc) with or without Taproot, so the point is further moot. 
> >> 
> >> Do you have a source on your reporting? 
> >> 
> >> You may wish to rescind your nack. 
> >> 
> >> 
> >> -- 
> >> @JeremyRubin <https://twitter.com/JeremyRubin>  <https://twitter.com/JeremyRubin>
> >> 
> >> 
> >> On Sat, Feb 27, 2021 at 5:46 AM LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev < bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> > wrote: 
> >>> Good Afternoon, 
> >>> 
> >>> It has been reported that Taproot will enable some Monero like features including the ability to hide transactions. 
> >>> 
> >>> If that is the case I offer a full NACK and let me explain. 
> >>> 
> >>> A part of the benefit of using Bitcoin is its honesty. The full transaction is published on the blockchain. If that were to change so that transactions may be obfuscated from scrutiny then any government would have unlimited impetus to ban Bitcoin, and speculation has that is the reason India has been reported to have banned cryptocurrencies already. 
> >>> 
> >>> I am in support of the expanded use case of Bitcoin without harming the established robust fairness and equal equity offered. The core functionality of Bitcoin, its values, must remain unaltered. 
> >>> 
> >>> KING JAMES HRMH 
> >>> Great British Empire 
> >>> 
> >>> Regards, 
> >>> The Australian 
> >>> LORD HIS EXCELLENCY JAMES HRMH (& HMRH) 
> >>> of Hougun Manor & Glencoe & British Empire 
> >>> MR. Damian A. James Williamson 
> >>> Wills 
> >>> 
> >>> et al. 
> >>> 
> >>>   
> >>> Willtech 
> >>> www.willtech.com.au <http://www.willtech.com.au>  
> >>> www.go-overt.com <http://www.go-overt.com>  
> >>> and other projects 
> >>>   
> >>> earn.com/willtech 
> >>> linkedin.com/in/damianwilliamson 
> >>> 
> >>> 
> >>> m. 0487135719 
> >>> f. +61261470192 
> >>> 
> >>> 
> >>> This email does not constitute a general advice. Please disregard this email if misdelivered. 
> >>> _______________________________________________ 
> >>> bitcoin-dev mailing list 
> >>> bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>  
> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev 
> >>  
> >> bitcoin-dev mailing list
> >> bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> 
> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > <ip.bitcointalk.org.png>
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> 
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> 
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210303/51f2aabd/attachment-0001.html>

From lf-lists at mattcorallo.com  Wed Mar  3 16:49:57 2021
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Wed, 3 Mar 2021 11:49:57 -0500
Subject: [bitcoin-dev] Straight Flag Day (Height) Taproot Activation
In-Reply-To: <20210303145902.cl4mzg6l7avjboil@erisian.com.au>
References: <c35e1761-43ca-e157-6a5c-72d27f2c6c6e@mattcorallo.com>
 <20210303145902.cl4mzg6l7avjboil@erisian.com.au>
Message-ID: <281679eb-860b-c6cb-7e7a-5ae28b60f149@mattcorallo.com>



On 3/3/21 09:59, Anthony Towns wrote:
> I think it would be worthwhile to also update getblocktemplate so that
> miners signal uptake for something like three or four retarget periods
> prior to activation, without that signalling having any consensus-level
> effect. That should allow miners and businesses to adjust their
> expectations for how much hashpower might not be enforcing taproot rules
> when generating blocks -- potentially allowing miners to switch pools
> to one running an up to date node, pools to reduce the amount of time
> they spend mining on top of unvalidated headers, businesses to increase
> confirmation requirements or prepare for the possibility of an increase
> in invalid-block entries in their logs, etc.

I strongly agree. Ideally such signaling could be placed in the witness nonce, however this may require pool updates to 
ensure pool server software is not assuming the 32-byte-0-nonce in wide use today. It is a worthwhile change in any 
case, as it avoids the need to change pool software for future forks which place commitments in the nonce.

>> 2) The high node-level-adoption bar is one of the most critical goals, and
>> the one most currently in jeopardy in a BIP 8 approach.
> 
> A couple of days ago I would have disagreed with this; but with Luke
> now strongly pushing against implementing lot=false, I can at least see
> your point...

Right. It may be the case that the minority group threatening to fork off onto a lot=true chain is not large enough to 
give a second thought to. However, I'm not certain that its worth the risk, and, as Chris noted in his post this 
morning, that approach is likely to include more drama.

Matt

From eric at voskuil.org  Wed Mar  3 11:55:38 2021
From: eric at voskuil.org (eric at voskuil.org)
Date: Wed, 3 Mar 2021 03:55:38 -0800
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <SL2P216MB00895015DAD709E1E12EA7EA9D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>,
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
 <SL2P216MB00895015DAD709E1E12EA7EA9D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
Message-ID: <00ee01d71024$2145ab40$63d101c0$@voskuil.org>

> and all transactions should be open to the scrutiny of an honest government.

 

>From what do you derive the moral judgement ?should? in this context?

 

> The value proposition is ? because people will trust the system?

 

So, it?s valuable because it?s trusted? Trusted to do what exactly? What that government money doesn?t already do, specifically.

 

> If it is not necessary to maintain consensus then what is consensus?

 

Nothing is ?necessary?. Consensus is an agreement among people. It?s voluntary. Any person can choose to leave, create or join another consensus, or stay where they are.

 

> BCH exists in addition to BTC Bitcoin.

 

Exactly, people are free to do what they want. Nobody ?should? do anything except that which they want to do. This and this alone is the ?highest value? if one accepts the moral principle of non-aggression. You do not appear to, and I?m afraid that may be well outside the consensus view among core bitcoin developers (the people you are talking to).

 

e

 

From: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au> 
Sent: Tuesday, March 2, 2021 6:55 PM
To: Eric Voskuil <eric at voskuil.org>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
Cc: Ariel Lorenzo-Luaces <arielluaces at gmail.com>
Subject: Re: [bitcoin-dev] Taproot NACK

 

Good Afternoon, 

 

All people are entitled to privacy in their purse, and all transactions should be open to the scrutiny of an honest government. You can debate whether any government is honest. Mixing does not remove the record from the public ledger, where it is possible to see that any Bitcoin has transferred from an UTXO to some Pay-To address even with some amount of transaction in between them. The value proposition is the same  <https://www.youtube.com/watch?v=l9jOJk30eQs> https://www.youtube.com/watch?v=l9jOJk30eQs - because people will trust the system; people trust the existing consensus.

 

Let us dispense with the screen and deal with the issue only. If it is not necessary to maintain consensus then what is consensus?

 

The intrinsic value of Bitcoin is because of the existing consensus. Even if any proposal gains consensus there is no objective way to show it improves the intrinsic value without trialing and the possibility of failure and so protecting the existing consensus should be the highest value. This understanding is the reason BCH exists in addition to BTC Bitcoin.

 

KING JAMES HRMH

Great British Empire

 

Regards,

The Australian

LORD HIS EXCELLENCY JAMES HRMH (& HMRH)

of Hougun Manor & Glencoe & British Empire

MR. Damian A. James Williamson

Wills

 

et al.

 

 

Willtech

www.willtech.com.au

www.go-overt.com

and other projects

 

earn.com/willtech

linkedin.com/in/damianwilliamson

 

 

m. 0487135719

f. +61261470192

 

 

This email does not constitute a general advice. Please disregard this email if misdelivered. 

  _____  

From: Eric Voskuil <eric at voskuil.org <mailto:eric at voskuil.org> >
Sent: Tuesday, 2 March 2021 9:37 AM
To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au <mailto:willtech at live.com.au> >; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> >
Cc: Ariel Lorenzo-Luaces <arielluaces at gmail.com <mailto:arielluaces at gmail.com> >
Subject: Re: [bitcoin-dev] Taproot NACK 

 

To be clear, is this a NACK because Taproot reduces ?transparency? (increases privacy) on the chain (?maintaining consensus? is obviously an argument against any protocol change, so that?s a red herring)? 

 

And is it your theory that only an ?honest? (statute abiding) person should have privacy, and not against the state, and/or that mixers are sufficient privacy?

 

Personally, I?m not moved by such an argument. What do you think is the value proposition of Bitcoin?

 

e





On Mar 1, 2021, at 14:21, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> > wrote:

? 

Good Afternoon,

 

I am going to take tough terms with much of your reply and do appreciate a courteous practice. Having previously made public disclosure of my affiliation with Jambler.io it seems sufficient to disclose my affiliation through the link in my email signature block.

 

My concern is not increased privacy it is maintaining consensus values and the transparency of the blockchain wherein all transactions are published in an immutable record and that forbids the redaction of information by any obfuscation. A separate concern is the availability of a privacy suitable for cash should a Bitcoin user desire and especially without disturbing the existing consensus.

 

The use of a Bitcoin Mixer is to enable standard equivalent privacy. As you may experience yourself, you do not allow people to follow you around looking in your purse, suppose you are dealing entirely with cash, and to see where and how much you fill it up, and where you spend. Nonetheless, for an honest person, their wallet is available for government audit as are their financial affairs. This is consistent with the existing operation of consensus.

 

My full email signature block is a disclosure where I have some affiliation with the referenced website being that it carries at least some information that I have provided or that in some way I am associated perhaps only making use of their services. For example, I hardly make a profit from LinkedIn just my information is there. Also, I have made previous public disclosure of the affiliation. Bitcoin Mixer 2.0 is a partner mixer run by Jambler.io wherein I receive a service referral fee and am not in receipt of any part of the process transaction. The operation block diagram provided by Jambler.io is provided here and attached.

<ip.bitcointalk.org.png>

 

[ip.bitcointalk.org.png]-Operation of Jambler.io partner mixer

https://ip.bitcointalk.org/?u=https%3A%2F%2Fjambler.io%2Fimages%2Fscheme-1.png <https://ip.bitcointalk.org/?u=https%3A%2F%2Fjambler.io%2Fimages%2Fscheme-1.png&t=622&c=gTi7r1cfh-yynw> &t=622&c=gTi7r1cfh-yynw

from this thread  https://bitcointalk.org/index.php?topic=5267588

 

 

The installation script provided by Jambler.io that is the basis of my referral website is also publicly published,

https://github.com/jambler-io/bitcoin-mixer

 

The disclosure for the partner program is available from Jambler.io however and is made prominently on my referral website. While it may seem lucrative at first I insist all partner profits are reportable on your personal income.

https://jambler.io/become-partner.php

 

I am certainly better than confident that you appreciate the difference between an open and transparent blockchain and the ability of the user to not reveal details of the content of their wallet publicly.

 

If further clarification is required may I suggest you pay a token and mix some Bitcoin wherein our discussion may then have some point of reference.

 

KING JAMES HRMH

Great British Empire

 

Regards,

The Australian

LORD HIS EXCELLENCY JAMES HRMH (& HMRH)

of Hougun Manor & Glencoe & British Empire

MR. Damian A. James Williamson

Wills

 

et al.

 

 

Willtech

www.willtech.com.au <http://www.willtech.com.au> 

www.go-overt.com <http://www.go-overt.com> 

and other projects

 

earn.com/willtech

linkedin.com/in/damianwilliamson

 

 

m. 0487135719

f. +61261470192

 

 

This email does not constitute a general advice. Please disregard this email if misdelivered.

  _____  

From: Ariel Lorenzo-Luaces <arielluaces at gmail.com <mailto:arielluaces at gmail.com> >
Sent: Monday, 1 March 2021 12:07 AM
To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au <mailto:willtech at live.com.au> >; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> >
Subject: Re: [bitcoin-dev] Taproot NACK 

 

Hello LORD HIS EXCELLENCY JAMES HRMH

I find a striking dichotomy between your concern of increased privacy in bitcoin and your link to a bitcoin mixer in your signature www.go-overt.com <http://www.go-overt.com> 

At first your concerns seemed genuine but after seeing your promotion of a bitcoin mixer I'm thinking your concerns may be more profit motivated? I can't tell since you failed to disclose your relationship with the mixer.

Could you please clarify your association with the bitcoin mixer and moving forward could you please always do proper disclosure any time you're publically talking about bitcoin transaction privacy. It's only fair to do so as to not mislead people in an attempt to manipulate at worst and just a courteous practice at best.

Cheers

Ariel Lorenzo-Luaces

On Feb 28, 2021, at 4:36 AM, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> > wrote: 

Good Evening, 

 

Thank-you for your advice   @JeremyRubin <https://twitter.com/JeremyRubin>   on the basis you advise, "Taproot does not enable monero-like privacy features", I am prepred to withdraw my NACK notably that the existing feeatures of Bitcoin MUST be maintained, and whereby the UTXO of a transaction is identifiable, the PayTo Address, and the amount all without any obfuscation. 

 

Lightning does not really provide obfuscation, it provides a result of a subset of transactions although the operation of the channel is observable to the parties. 

 

The reports I were reading concerning the supposed operation of Taproot published in a public media channel may have been speculation or misinformation nonetheless it is prudent to conditionally reply as you see that I have. It is important not to allow things to slip through the cracks. As you may believe may astute reviewers could make a full disclosure to this list it is not to be expected. 

 

KING JAMES HRMH 

Great British Empire 

 

Regards, 

The Australian 

LORD HIS EXCELLENCY JAMES HRMH (& HMRH) 

of Hougun Manor & Glencoe & British Empire 

MR. Damian A. James Williamson 

Wills 

 

et al. 

 

  

Willtech 

www.willtech.com.au 

www.go-overt.com 

and other projects 

  

earn.com/willtech 

linkedin.com/in/damianwilliamson 

 

 

m. 0487135719 

f. +61261470192 

 

 

This email does not constitute a general advice. Please disregard this email if misdelivered. 

  _____  

From: Jeremy <jlrubin at mit.edu>
Sent: Sunday, 28 February 2021 3:14 AM
To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au <mailto:willtech at live.com.au> >; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> >
Subject: Re: [bitcoin-dev] Taproot NACK 

  

I have good news for you: Taproot does not enable monero-like privacy features any moreso than already exist in Bitcoin today. At its core, taproot is a way to make transactions with embedded smart contracts less expensive, done so in a manner that may marginally improve privacy dependent on user behavior (but not in the monero-like way you mention). For example, it makes it possible for lightning channels to look structurally similar to single key wallets, but it does nothing inherently to obfuscate the transaction graph as in monero. 

 

Such "monero-like" transaction graph obfuscation may already exist in Bitcoin via other techniques (coinjoin, payjoin, coinswap, lightning, etc) with or without Taproot, so the point is further moot. 

 

Do you have a source on your reporting? 

 

You may wish to rescind your nack. 


 

 

-- 
@JeremyRubin <https://twitter.com/JeremyRubin>  

 

 

On Sat, Feb 27, 2021 at 5:46 AM LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev < bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> > wrote: 

Good Afternoon, 

 

It has been reported that Taproot will enable some Monero like features including the ability to hide transactions. 

 

If that is the case I offer a full NACK and let me explain. 

 

A part of the benefit of using Bitcoin is its honesty. The full transaction is published on the blockchain. If that were to change so that transactions may be obfuscated from scrutiny then any government would have unlimited impetus to ban Bitcoin, and speculation has that is the reason India has been reported to have banned cryptocurrencies already. 

 

I am in support of the expanded use case of Bitcoin without harming the established robust fairness and equal equity offered. The core functionality of Bitcoin, its values, must remain unaltered. 

 

KING JAMES HRMH 

Great British Empire 

 

Regards, 

The Australian 

LORD HIS EXCELLENCY JAMES HRMH (& HMRH) 

of Hougun Manor & Glencoe & British Empire 

MR. Damian A. James Williamson 

Wills 

 

et al. 

 

  

Willtech 

www.willtech.com.au <http://www.willtech.com.au>  

www.go-overt.com <http://www.go-overt.com>  

and other projects 

  

earn.com/willtech <http://earn.com/willtech>  

linkedin.com/in/damianwilliamson <http://linkedin.com/in/damianwilliamson>  

 

 

m. 0487135719 

f. +61261470192 

 

 

This email does not constitute a general advice. Please disregard this email if misdelivered. 

_______________________________________________ 
bitcoin-dev mailing list 
bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>  
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev 

 


  _____  


bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> 
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

<ip.bitcointalk.org.png>

_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> 
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210303/3091d805/attachment-0001.html>

From emu at emuadmin.com  Wed Mar  3 16:27:24 2021
From: emu at emuadmin.com (Emil Pfeffer)
Date: Wed, 3 Mar 2021 16:27:24 +0000
Subject: [bitcoin-dev] LOT=False is dangerous and shouldn't be used
In-Reply-To: <c7784af1-7f69-2607-ba3a-c34f2b2fe995@riseup.net>
References: <202102281933.30691.luke@dashjr.org>
 <c7784af1-7f69-2607-ba3a-c34f2b2fe995@riseup.net>
Message-ID: <20210303162724.vt5kienze5gbqyzp@www01.emuadmin.com>

On Tue, Mar 02, 2021 at 06:21:59PM +0000, Chris Belcher via bitcoin-dev wrote:
> It is wrong to say that using miner signalling alone for activation
> (LOT=false) is a bug.

That depends on the definition you choose to work with but since the community
had to produce a fix that implies something was broken so we can call it a
bug in a broad sense.

> 
> As we vividly saw in the events of the 2017 UASF, the purpose of miner
> signalling isn't to activate or enforce the new rules but to stop a
> chain split. A majority of miners can stop a chain split by essentially
> doing a 51% attack. Such attacks have been known about since day one,
> and even the whitepaper writes about them.
> 
> So they are not a bug but an inherent part of the way bitcoin works. If
> fixing this issue was a simple as setting a consensus rule parameter
> then bitcoin would have been invented decades earlier than it was.
> 
> And certainly miner signalling cannot be compared to an inflation bug.

Certainly and neither did the OP.

> The inflation rules are enforced by the economy using full nodes, but
> chain splits or lack of them is enforced by miners. They are two
> different parts of the bitcoin system. Back in 2010 there was an
> inflation bug CVE-2010-5139 (the "Value overflow incident") which proves
> my point. Even though miners created a block which printed 184 billion
> bitcoins, the economy quickly adopted a patch which fixed the bug and
> miners switched over to the correct chain which soon overtook the bugged
> chain (there was a reorg of 53 blocks).
> 
> 
> 
> 
> Also another point: in a hypothetical chain split it's true that the
> LOT=false chain would be vulnerable to reorgs, but it's also true that
> the LOT=true would suffer from slow blocks.

That is true but this would happen for both chains and cannot be used
to put either one of them in a better light.

> 
> So for example, imagine trading bitcoin for cash in person, but instead
> of waiting on average 10 minutes for a confirmation you have to wait 2
> hours. Imagine depositing coins to an exchange which requires 3
> confirmation, then instead of waiting ~30 minutes you have to actually
> wait 6 hours. This is a significant degradation in usability. 

> The situation is a mirror image of how the LOT=false chain is vulnerable to
> reorgs.

No, the LOT=false chain is also vulnerable to this and reorgs.

> Both chains suffer if a chain split happens which is why they
> are pretty important to avoid.

That's correct however that is worst case scenario and it can happen regardless
of which lot bitcoin ships with.

> That's why its inaccurate to portray LOT=true chain as safe 
> with no downsides at all.

It was not, it was portrayed as safer which holds true.

> 
> 
> On 28/02/2021 19:33, Luke Dashjr via bitcoin-dev wrote:
> > (Note: I am writing this as a general case against LOT=False, but using 
> > Taproot simply as an example softfork. Note that this is addressing 
> > activation under the assumption that the softfork is ethical and has 
> > sufficient community support. If those criteria have not been met, no 
> > activation should be deployed at all, of any type.)
> > 
> > As we saw in 2017 with BIP 9, coordinating activation by miner signal alone, 
> > despite its potential benefits, also leaves open the door to a miner veto. 
> > This was never the intended behaviour, and a bug, which took a rushed 
> > deployment of BIP148 to address. LOT=False would reintroduce that same bug.
> > It wouldn't be much different than adding back the inflation bug 
> > (CVE-2018-17144) and trusting miners not to exploit it.
> > 
> > Some have tried to spin LOT=True as some kind of punishment for miners or 
> > reactive "counter-attack". Rather, it is simply a fallback to avoid 
> > regression on this and other bugs. "Flag day" activation is not fundamentally 
> > flawed or dangerous, just slow since everyone needs time to upgrade.
> > BIP 8(LOT=True) combines the certainty of such a flag day, with the speed 
> > improvement of a MASF, so that softforks can be activated both reasonably 
> > quick and safely.
> > 
> > In the normal path, and that which BIP8(True) best incentivises, miners will 
> > simply upgrade and signal, and activation can occur as soon as the economic 
> > majority is expected to have had time to upgrade. In the worst-case path, the 
> > behaviour of LOT=True is the least-harmful result: unambiguous activation and 
> > enforcement by the economy, with miners either deciding to make an 
> > anti-Taproot(eg) altcoin, or continue mining Bitcoin. Even if ALL the miners 
> > revolt against the softfork, the LOT=True nodes are simply faced with a 
> > choice to hardfork (replacing the miners with a PoW change) or concede - they 
> > do not risk vulnerability or loss.
> > 
> > With LOT=False in the picture, however, things can get messy: some users will 
> > enforce Taproot(eg) (those running LOT=True), while others will not (those 
> > with LOT=False). Users with LOT=True will still get all the safety thereof, 
> > but those with LOT=False will (in the event of miners deciding to produce a 
> > chain split) face an unreliable chain, being replaced by the LOT=True chain 
> > every time it overtakes the LOT=False chain in work. For 2 weeks, users with 
> > LOT=False would not have a usable network. The only way to resolve this would 
> > be to upgrade to LOT=True or to produce a softfork that makes an activated 
> > chain invalid (thereby taking the anti-Taproot path). Even if nobody ran 
> > LOT=True (very unlikely), LOT=False would still fail because users would be 
> > faced with either accepting the loss of Taproot(eg), or re-deploying from 
> > scratch with LOT=True. It accomplishes nothing compared to just deploying 
> > LOT=True from the beginning. Furthermore, this process creates a lot of 
> > confusion for users ("Yep, I upgraded for Taproot(eg). Wait, you mean I have 
> > to do it AGAIN?"), and in some scenarios additional code may be needed to 
> > handle the subsequent upgrade cleanly.
> > 
> > To make matters worse for LOT=False, giving miners a veto also creates an 
> > incentive to second-guess the decision to activate and/or hold the activation 
> > hostage. This is a direct result of the bug giving them a power they weren't 
> > intended to have. Even if we trust miners to act ethically, that does not 
> > justify sustaining the bug creating both a possibility and incentive to 
> > behave unethically.
> > 
> > So in all possible scenarios, LOT=False puts users and the network at 
> > significant risk. In all possible scenarios, LOT=True minimises risk to 
> > everyone and has no risk to users running LOT=True.
> > 
> > The overall risk is maximally reduced by LOT=True being the only deployed 
> > parameter, and any introduction of LOT=False only increases risk probability 
> > and severity.
> > 
> > For all these reasons, I regret adding LOT as an option to BIP 8, and think it 
> > would be best to remove it entirely, with all deployments in the future 
> > behaving as LOT=True. I do also recognise that there is not yet consensus on 
> > this, and for that reason I have not taken action (nor intend to) to remove 
> > LOT from BIP 8. However, the fact remains that LOT=False should not be used, 
> > and it is best if every softfork is deployed with LOT=True.
> > 
> > Luke
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-- 

From yanmaani at cock.li  Wed Mar  3 17:30:20 2021
From: yanmaani at cock.li (yanmaani at cock.li)
Date: Wed, 03 Mar 2021 17:30:20 +0000
Subject: [bitcoin-dev] Making the case for flag day activation of taproot
In-Reply-To: <3286a7eb-9deb-77d6-4527-58e0c5882ae2@riseup.net>
References: <3286a7eb-9deb-77d6-4527-58e0c5882ae2@riseup.net>
Message-ID: <85745a38e4464541d6357408fae1cfed@cock.li>

On 2021-03-03 14:39, Chris Belcher via bitcoin-dev wrote:
> Enter flag day activation. With a flag day there can be no
> brinksmanship. A social media blitz cant do anything except have its 
> own
> followers fork away. Crucially, miner signalling cant be used to change
> the activation date for nodes that didn't choose to and just passively
> follow signalling. Changing the activation date requires all those 
> users
> to actually run different node software.

Is that supposed to be a good thing? "We should do X because it'll work" 
doesn't prove X is actually good. These things can be evil, but they can 
also be legitimate opposition to a change. Taking away the power of a 
"social media blitz" is not guaranteed to be a good thing!

> What if one day the Core developer team uses the flag
> day method to do something bad? The bitcoin user
> community who wants to resist this can create their own
> counter-soft-fork full node. This forces a chain
> split. The real bitcoin which most people follow will be
> the chain without censorship.

[edited for brevity]

That will only work for really egregious changes. In practice, most 
people will trust Core on all other (non-egregious) decisions, because 
of the inertia inherent in disobeying them.

What you suggest may be an efficient way to ram taproot through, but is 
it inherently good? Nothing is free. This seems like de-facto forcing 
people to go along with you, because you're convinced you're right. In 
this case, you are, but you'd be convinced you'd be right even if you 
weren't so.

You're right in suggesting that it will work, but the reason why it will 
work is because nobody wants to disobey Core. It seems immoral to 
exploit this fact.

At least you shouldn't hard-code it and require dissenters to fork away. 
I exhort you to consider making all this controversial stuff settings 
that can be changed by RPC command or command-line flag; set the default 
value sure, but requiring a fork to change it is, in my opinion, 
oppressive.

(Also consider some compromise, such as ">95% miner support before flag 
day or >33% on flag day")

Best wishes
Yanmaani

From michaelfolkson at gmail.com  Wed Mar  3 12:15:02 2021
From: michaelfolkson at gmail.com (Michael Folkson)
Date: Wed, 3 Mar 2021 12:15:02 +0000
Subject: [bitcoin-dev] =?utf-8?b?WWVzdGVyZGF54oCZcyBVQVNGIChMT1Q9dHJ1ZSkg?=
	=?utf-8?q?kick_off_meeting?=
Message-ID: <CAFvNmHS8_5riG1FvzQvbWS_twxxTq82GFnT2gLGXirz23Q=pcw@mail.gmail.com>

Yesterday we held a UASF (LOT=true) kick off meeting on the ##uasf IRC channel.

The conversation log is here: http://gnusha.org/uasf/2021-03-02.log

It was announced (at short notice admittedly) here:
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-March/018515.html

It is clear frustration is building but it is also clear that this
isn?t a conducive environment for development and review. The high
level activation discussion has been done to death. Barring a miracle
the only thing Core will ship is BIP 8 (1 year, LOT=false). The
alternative appears Core ships nothing.

At this point in time it also appears the greatest risk to Taproot
dying a slow death is a small group of developers who think talking in
conservative tones and talking about endless philosophy makes Bitcoin
a conservative system. (It doesn?t, it just makes it a dying, decaying
one).

We have a trillion dollar industry (all signed up to this upgrade)
wasting time monitoring these arguments rather than preparing for an
upgrade and preparing for the small but manageable risks that any such
upgrade entails later in the year. Development projects on hold
because there is no end in sight for Taproot activation.

We need to give miners and users the ability to activate this year
(2021). If we fail to do that through whatever means (Core, UASF
release) etc I personally will assume Taproot will never activate. I
will also assume Bitcoin is not a project for the incredibly able
people who have designed and shipped a complex upgrade (Taproot) that
miraculously has overwhelming consensus amongst the entire community.
Failing to ship activation code (a very small code change in
comparison) is a joke.

We need to get this done this year. A UASF (LOT=true) project needs to
be ready to assemble just like it was in 2017 to make sure a small
group of individuals don?t block progress. But Core also needs to be
given the opportunity to ship a BIP 8(1 year, LOT=false) activation
that can be used to activate this year that is as well reviewed and
well tested as any other Core consensus code change.

Once things have calmed down I think we should revisit what progress
has been made and take it from there.

-- 
Michael Folkson
Email: michaelfolkson at gmail.com
Keybase: michaelfolkson
PGP: 43ED C999 9F85 1D40 EAF4 9835 92D6 0159 214C FEE3

From micaroni at gmail.com  Wed Mar  3 16:30:53 2021
From: micaroni at gmail.com (micaroni at gmail.com)
Date: Wed, 3 Mar 2021 13:30:53 -0300
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <00f301d71024$8ac14cf0$a043e6d0$@voskuil.org>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
 <fbc4ce6c-111d-4dcc-8fc7-03ea91855bc4@www.fastmail.com>
 <SL2P216MB00899B7B3C67C0DD9E9376B09D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <00f301d71024$8ac14cf0$a043e6d0$@voskuil.org>
Message-ID: <CAHvMVPQQZrybjvZvcPnYxsGf0y7ya6wRzquhxnyvd+T87YJXsQ@mail.gmail.com>

Dear LORD HIS EXCELLENCY JAMES HRMH (& HMRH), a.k.a. "The Australian",

This discussion list is serious stuff, please stop making noise.
Fungibility is a desirable property, anyway.

Thank you!

On Wed, Mar 3, 2021 at 12:04 PM Eric Voskuil via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> > consensus requires the ledger to be honest does not prove that it is
> honest.
>
>
>
> Actually, that?s exactly what it does. A logical/mathematical requirement
> (necessity) is also called a proof.
>
>
>
> e
>
>
>
> *From:* bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> *On
> Behalf Of *LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev
> *Sent:* Tuesday, March 2, 2021 7:06 PM
> *To:* M.K. Safi via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>;
> Daniel Edgecumbe <email at esotericnonsense.com>
> *Subject:* Re: [bitcoin-dev] Taproot NACK
>
>
>
> "Today I spent approximately $5 at a chip shop in North London in cash.
> Besides the fact that I have voluntarily chosen to share this information,
> it is absolutely no concern of yourself or any other party that this
> transaction has occured."
>
>
>
> Good Afternoon,
>
>
>
> Requiring little argument I concur, privacy allows that you do not have
> snoops and researchers following you around looking in your purse as you
> transact. For the general public, how much you carry in your purse and
> where you get it from is none of their business. However, your employer is
> required to report to the government a record of pay, or at least maintain
> that record, and the store where you made a purchase similarly to keep
> records so that taxes can be paid. From their perspective, you do not need
> to know how much they keep in their drawer. Bitcoin directly allows your
> purse to be private and for the transaction ledger to take the scrutiny
> anyone should be able to apply to prove the ledger is honest. Maintaining
> an argument that consensus requires the ledger to be honest does not prove
> that it is honest.
>
>
>
> KING JAMES HRMH
>
> Great British Empire
>
>
>
> Regards,
>
> The Australian
>
> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
>
> of Hougun Manor & Glencoe & British Empire
>
> MR. Damian A. James Williamson
>
> Wills
>
>
>
> et al.
>
>
>
>
>
> Willtech
>
> www.willtech.com.au
>
> www.go-overt.com
>
> and other projects
>
>
>
> earn.com/willtech
>
> linkedin.com/in/damianwilliamson
>
>
>
>
>
> m. 0487135719
>
> f. +61261470192
>
>
>
>
>
> This email does not constitute a general advice. Please disregard this
> email if misdelivered.
> ------------------------------
>
> *From:* bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on
> behalf of Daniel Edgecumbe via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org>
> *Sent:* Tuesday, 2 March 2021 12:16 PM
> *To:* M.K. Safi via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
> *Subject:* Re: [bitcoin-dev] Taproot NACK
>
>
>
> Any "transparency" in the blockchain, beyond that required for a
> participant to determine valid ownership, can only reasonably be thought of
> as a bug.
>
> Today I spent approximately $5 at a chip shop in North London in cash.
> Besides the fact that I have voluntarily chosen to share this information,
> it is absolutely no concern of yourself or any other party that this
> transaction has occured.
>
> Bitcoin is digital cash.
>
> Daniel Edgecumbe | esotericnonsense
> email at esotericnonsense.com | https://esotericnonsense.com
>
> On Mon, Mar 1, 2021, at 22:37, Eric Voskuil via bitcoin-dev wrote:
> > To be clear, is this a NACK because Taproot reduces ?transparency?
> > (increases privacy) on the chain (?maintaining consensus? is obviously
> > an argument against any protocol change, so that?s a red herring)?
> >
> > And is it your theory that only an ?honest? (statute abiding) person
> > should have privacy, and not against the state, and/or that mixers are
> > sufficient privacy?
> >
> > Personally, I?m not moved by such an argument. What do you think is the
> > value proposition of Bitcoin?
> >
> > e
> >
> > > On Mar 1, 2021, at 14:21, LORD HIS EXCELLENCY JAMES HRMH via
> bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > >
> > > ?
> > > Good Afternoon,
> > >
> > > I am going to take tough terms with much of your reply and do
> appreciate a courteous practice. Having previously made public disclosure
> of my affiliation with Jambler.io it seems sufficient to disclose my
> affiliation through the link in my email signature block.
> > >
> > > My concern is not increased privacy it is maintaining consensus values
> and the transparency of the blockchain wherein all transactions are
> published in an immutable record and that forbids the redaction of
> information by any obfuscation. A separate concern is the availability of a
> privacy suitable for cash should a Bitcoin user desire and especially
> without disturbing the existing consensus.
> > >
> > > The use of a Bitcoin Mixer is to enable standard equivalent privacy.
> As you may experience yourself, you do not allow people to follow you
> around looking in your purse, suppose you are dealing entirely with cash,
> and to see where and how much you fill it up, and where you spend.
> Nonetheless, for an honest person, their wallet is available for government
> audit as are their financial affairs. This is consistent with the existing
> operation of consensus.
> > >
> > > My full email signature block is a disclosure where I have some
> affiliation with the referenced website being that it carries at least some
> information that I have provided or that in some way I am associated
> perhaps only making use of their services. For example, I hardly make a
> profit from LinkedIn just my information is there. Also, I have made
> previous public disclosure of the affiliation. Bitcoin Mixer 2.0 is a
> partner mixer run by Jambler.io wherein I receive a service referral fee
> and am not in receipt of any part of the process transaction. The operation
> block diagram provided by Jambler.io is provided here and attached.
> > > <ip.bitcointalk.org.png>
> > >
> > > [ip.bitcointalk.org.png]-Operation of Jambler.io partner mixer
> > >
> https://ip.bitcointalk.org/?u=https%3A%2F%2Fjambler.io%2Fimages%2Fscheme-1.png&t=622&c=gTi7r1cfh-yynw
> > > from this thread  https://bitcointalk.org/index.php?topic=5267588
> > >
> > >
> > > The installation script provided by Jambler.io that is the basis of my
> referral website is also publicly published,
> > > https://github.com/jambler-io/bitcoin-mixer
> > >
> > > The disclosure for the partner program is available from Jambler.io
> however and is made prominently on my referral website. While it may seem
> lucrative at first I insist all partner profits are reportable on your
> personal income.
> > > https://jambler.io/become-partner.php
> > >
> > > I am certainly better than confident that you appreciate the
> difference between an open and transparent blockchain and the ability of
> the user to not reveal details of the content of their wallet publicly.
> > >
> > > If further clarification is required may I suggest you pay a token and
> mix some Bitcoin wherein our discussion may then have some point of
> reference.
> > >
> > > KING JAMES HRMH
> > > Great British Empire
> > >
> > > Regards,
> > > The Australian
> > > LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> > > of Hougun Manor & Glencoe & British Empire
> > > MR. Damian A. James Williamson
> > > Wills
> > >
> > > et al.
> > >
> > >
> > > Willtech
> > > www.willtech.com.au
> > > www.go-overt.com
> > > and other projects
> > >
> > > earn.com/willtech
> > > linkedin.com/in/damianwilliamson
> > >
> > >
> > > m. 0487135719
> > > f. +61261470192
> > >
> > >
> > > This email does not constitute a general advice. Please disregard this
> email if misdelivered.
> > > *From:* Ariel Lorenzo-Luaces <arielluaces at gmail.com>
> > > *Sent:* Monday, 1 March 2021 12:07 AM
> > > *To:* LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin
> Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> > > *Subject:* Re: [bitcoin-dev] Taproot NACK
> > >
> > > Hello LORD HIS EXCELLENCY JAMES HRMH
> > >
> > > I find a striking dichotomy between your concern of increased privacy
> in bitcoin and your link to a bitcoin mixer in your signature
> www.go-overt.com
> > >
> > > At first your concerns seemed genuine but after seeing your promotion
> of a bitcoin mixer I'm thinking your concerns may be more profit motivated?
> I can't tell since you failed to disclose your relationship with the mixer.
> > >
> > > Could you please clarify your association with the bitcoin mixer and
> moving forward could you please always do proper disclosure any time you're
> publically talking about bitcoin transaction privacy. It's only fair to do
> so as to not mislead people in an attempt to manipulate at worst and just a
> courteous practice at best.
> > >
> > > Cheers
> > > Ariel Lorenzo-Luaces
> > > On Feb 28, 2021, at 4:36 AM, LORD HIS EXCELLENCY JAMES HRMH via
> bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > >> Good Evening,
> > >>
> > >> Thank-you for your advice   @JeremyRubin <
> https://twitter.com/JeremyRubin>  on the basis you advise, "Taproot does
> not enable monero-like privacy features", I am prepred to withdraw my NACK
> notably that the existing feeatures of Bitcoin MUST be maintained, and
> whereby the UTXO of a transaction is identifiable, the PayTo Address, and
> the amount all without any obfuscation.
> > >>
> > >> Lightning does not really provide obfuscation, it provides a result
> of a subset of transactions although the operation of the channel is
> observable to the parties.
> > >>
> > >> The reports I were reading concerning the supposed operation of
> Taproot published in a public media channel may have been speculation or
> misinformation nonetheless it is prudent to conditionally reply as you see
> that I have. It is important not to allow things to slip through the
> cracks. As you may believe may astute reviewers could make a full
> disclosure to this list it is not to be expected.
> > >>
> > >> KING JAMES HRMH
> > >> Great British Empire
> > >>
> > >> Regards,
> > >> The Australian
> > >> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> > >> of Hougun Manor & Glencoe & British Empire
> > >> MR. Damian A. James Williamson
> > >> Wills
> > >>
> > >> et al.
> > >>
> > >>
> > >> Willtech
> > >> www.willtech.com.au
> > >> www.go-overt.com
> > >> and other projects
> > >>
> > >> earn.com/willtech
> > >> linkedin.com/in/damianwilliamson
> > >>
> > >>
> > >> m. 0487135719
> > >> f. +61261470192
> > >>
> > >>
> > >> This email does not constitute a general advice. Please disregard
> this email if misdelivered.
> > >> *From:* Jeremy <jlrubin at mit.edu>
> > >> *Sent:* Sunday, 28 February 2021 3:14 AM
> > >> *To:* LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin
> Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> > >> *Subject:* Re: [bitcoin-dev] Taproot NACK
> > >>
> > >> I have good news for you: Taproot does not enable monero-like privacy
> features any moreso than already exist in Bitcoin today. At its core,
> taproot is a way to make transactions with embedded smart contracts less
> expensive, done so in a manner that may marginally improve privacy
> dependent on user behavior (but not in the monero-like way you mention).
> For example, it makes it possible for lightning channels to look
> structurally similar to single key wallets, but it does nothing inherently
> to obfuscate the transaction graph as in monero.
> > >>
> > >> Such "monero-like" transaction graph obfuscation may already exist in
> Bitcoin via other techniques (coinjoin, payjoin, coinswap, lightning, etc)
> with or without Taproot, so the point is further moot.
> > >>
> > >> Do you have a source on your reporting?
> > >>
> > >> You may wish to rescind your nack.
> > >>
> > >>
> > >> --
> > >> @JeremyRubin <https://twitter.com/JeremyRubin>  <
> https://twitter.com/JeremyRubin>
> > >>
> > >>
> > >> On Sat, Feb 27, 2021 at 5:46 AM LORD HIS EXCELLENCY JAMES HRMH via
> bitcoin-dev < bitcoin-dev at lists.linuxfoundation.org> wrote:
> > >>> Good Afternoon,
> > >>>
> > >>> It has been reported that Taproot will enable some Monero like
> features including the ability to hide transactions.
> > >>>
> > >>> If that is the case I offer a full NACK and let me explain.
> > >>>
> > >>> A part of the benefit of using Bitcoin is its honesty. The full
> transaction is published on the blockchain. If that were to change so that
> transactions may be obfuscated from scrutiny then any government would have
> unlimited impetus to ban Bitcoin, and speculation has that is the reason
> India has been reported to have banned cryptocurrencies already.
> > >>>
> > >>> I am in support of the expanded use case of Bitcoin without harming
> the established robust fairness and equal equity offered. The core
> functionality of Bitcoin, its values, must remain unaltered.
> > >>>
> > >>> KING JAMES HRMH
> > >>> Great British Empire
> > >>>
> > >>> Regards,
> > >>> The Australian
> > >>> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> > >>> of Hougun Manor & Glencoe & British Empire
> > >>> MR. Damian A. James Williamson
> > >>> Wills
> > >>>
> > >>> et al.
> > >>>
> > >>>
> > >>> Willtech
> > >>> www.willtech.com.au
> > >>> www.go-overt.com
> > >>> and other projects
> > >>>
> > >>> earn.com/willtech
> > >>> linkedin.com/in/damianwilliamson
> > >>>
> > >>>
> > >>> m. 0487135719
> > >>> f. +61261470192
> > >>>
> > >>>
> > >>> This email does not constitute a general advice. Please disregard
> this email if misdelivered.
> > >>> _______________________________________________
> > >>> bitcoin-dev mailing list
> > >>> bitcoin-dev at lists.linuxfoundation.org
> > >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > >>
> > >> bitcoin-dev mailing list
> > >> bitcoin-dev at lists.linuxfoundation.org
> > >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > > <ip.bitcointalk.org.png>
> > > _______________________________________________
> > > bitcoin-dev mailing list
> > > bitcoin-dev at lists.linuxfoundation.org
> > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210303/4f0b78d2/attachment-0001.html>

From belcher at riseup.net  Wed Mar  3 20:48:17 2021
From: belcher at riseup.net (Chris Belcher)
Date: Wed, 3 Mar 2021 20:48:17 +0000
Subject: [bitcoin-dev] Making the case for flag day activation of taproot
In-Reply-To: <85745a38e4464541d6357408fae1cfed@cock.li>
References: <3286a7eb-9deb-77d6-4527-58e0c5882ae2@riseup.net>
 <85745a38e4464541d6357408fae1cfed@cock.li>
Message-ID: <839ee260-7ac0-9c78-5348-28e80b69799f@riseup.net>

It is good that social media drama can only make its own followers fork
away. In bitcoin people represent themselves, if they want certain rules
enforced they should have to actually tell their software to do that.
The problem with BIP8 is that social media drama has a incentive to
promote brinksmanship.


It is not correct to say that this will work because "nobody will
disobey Core". In reality it will work because basically everyone either
wants taproot or has no opinion about taproot.

Your argument depends heavily on the word "egregious". I've shown that
for harmful changes like censorship can be resisted by the bitcoin
community. Can you come up with an example of a bad change which won't
be resisted?


Here's another example of an easily-resisted change: A Core team that's
been compromised might do a flag-day UASF where transactions are only
confirmed if they pay a minimum of 1000 sat/vbyte in miner fee. The
community could resist this by doing a counter-UASF where a transaction
paying just 1 sat/vbyte is required to be included in the first block
after the flay day.

What alternative do you suggest? If you advocate allowing miners to
activate soft forks then that still won't protect users. Because miners
won't save users in my above example of a 1000 sat/vbyte price floor, in
fact miners would see their income greatly increased if the soft fork
was successful. So in fact the ability to do a counter-UASF is always
what actually protected users, miner protection is nothing something to
count on.



On 03/03/2021 17:30, yanmaani at cock.li wrote:
> On 2021-03-03 14:39, Chris Belcher via bitcoin-dev wrote:
>> Enter flag day activation. With a flag day there can be no
>> brinksmanship. A social media blitz cant do anything except have its own
>> followers fork away. Crucially, miner signalling cant be used to change
>> the activation date for nodes that didn't choose to and just passively
>> follow signalling. Changing the activation date requires all those users
>> to actually run different node software.
> 
> Is that supposed to be a good thing? "We should do X because it'll work"
> doesn't prove X is actually good. These things can be evil, but they can
> also be legitimate opposition to a change. Taking away the power of a
> "social media blitz" is not guaranteed to be a good thing!
> 
>> What if one day the Core developer team uses the flag
>> day method to do something bad? The bitcoin user
>> community who wants to resist this can create their own
>> counter-soft-fork full node. This forces a chain
>> split. The real bitcoin which most people follow will be
>> the chain without censorship.
> 
> [edited for brevity]
> 
> That will only work for really egregious changes. In practice, most
> people will trust Core on all other (non-egregious) decisions, because
> of the inertia inherent in disobeying them.
> 
> What you suggest may be an efficient way to ram taproot through, but is
> it inherently good? Nothing is free. This seems like de-facto forcing
> people to go along with you, because you're convinced you're right. In
> this case, you are, but you'd be convinced you'd be right even if you
> weren't so.
> 
> You're right in suggesting that it will work, but the reason why it will
> work is because nobody wants to disobey Core. It seems immoral to
> exploit this fact.
> 
> At least you shouldn't hard-code it and require dissenters to fork away.
> I exhort you to consider making all this controversial stuff settings
> that can be changed by RPC command or command-line flag; set the default
> value sure, but requiring a fork to change it is, in my opinion,
> oppressive.
> 
> (Also consider some compromise, such as ">95% miner support before flag
> day or >33% on flag day")
> 
> Best wishes
> Yanmaani

From roconnor at blockstream.com  Wed Mar  3 19:08:21 2021
From: roconnor at blockstream.com (Russell O'Connor)
Date: Wed, 3 Mar 2021 14:08:21 -0500
Subject: [bitcoin-dev] Making the case for flag day activation of taproot
In-Reply-To: <3286a7eb-9deb-77d6-4527-58e0c5882ae2@riseup.net>
References: <3286a7eb-9deb-77d6-4527-58e0c5882ae2@riseup.net>
Message-ID: <CAMZUoKkWmdwi-VH3WUvFfG+5MDK3xhvZUac3eBQbxXX_b_btWw@mail.gmail.com>

While I support essentially any proposed taproot activation method,
including a flag day activation, I think it is premature to call BIP8 dead.

Even today, I still think that starting with BIP8 LOT=false is, generally
speaking, considered a reasonably safe activation method in the sense that
I think it will be widely considered as a "not wholly unacceptable"
approach to activation.

After a normal and successful Core update with LOT=false, we will have more
data showing broad community support for the taproot upgrade in hand.  In
the next release, 6 months later or so, Core could then confidently deploy
a BIP8 LOT=true client, should it prove to be necessary.  A second Core
deployment of LOT=true would mitigate some of the concerns with LOT=false,
but still provide a period beforehand to objective actions taken by the
community in support of taproot.  We don't even have to have agreement
today on a second deployment of LOT=true after 6 months to start the
process of a LOT=false deployment. The later deployment will almost
certainly be moot, and we will have 6 months to spend debating the LOT=true
deployment versus doing a flag day activation or something else.

I don't think we need to start self-sabotaging our efforts to get taproot
activated this year just yet.  Let's cherry-pick the commits of PR #19573
to split it up into non-MUST_SIGNAL and MUST_SIGNAL components, and get
some reviews on that first.  Then afterwards we can decide if BIP8 is dead
or not.

On Wed, Mar 3, 2021 at 9:39 AM Chris Belcher via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> The bitcoin world is close to total gridlock on the question of how to
> activate taproot. There's no agreement on activation[1][2], and if an
> agreement isn't reached then nothing happens. That would be really
> terrible because we'd miss out on the benefits of taproot and
> potentially other future soft forks.
>
> A major problem with BIP8 is that it would result to a situation where
> different parts of the bitcoin ecosystem run different consensus rules.
> Some people will run LOT=true and others LOT=false. Worst of all, it
> becomes vulnerable to a twitter/reddit/social media blitz which could
> attempt to move the date of miner activation around.
>
> Twitter and reddit drama provide a perfect cover for social attacks on
> bitcoin.
>
> Forced signalling leads to brinksmanship. Where two or more sides
> (backed up by social media drama) enter into a game of chicken with
> deployed nodes. If one of them doesn't concede then we get a damaging
> chain split. And the $1 trillion in value that the bitcoin network
> protects is put at risk. From the point of view of a miner or big
> exchange stuck in the middle, if they look at the ecosystem of twitter
> and reddit (especially if you think about all the problems with bots and
> sockpuppets) they have no idea which consensus rules they should
> actually follow and exactly what date they take effect. Miners,
> exchanges, merchants and the rest of the ecosystem exist to serve their
> customers and users, and trouble happens when they don't know what their
> customers really want. Social media attacks are not just a theoretical
> concern; back during the block size drama, the bitcoin reddits were
> targetted by bots, sockpuppets and brigading[3].
>
> Enter flag day activation. With a flag day there can be no
> brinksmanship. A social media blitz cant do anything except have its own
> followers fork away. Crucially, miner signalling cant be used to change
> the activation date for nodes that didn't choose to and just passively
> follow signalling. Changing the activation date requires all those users
> to actually run different node software.
>
> Flag day activation works simply: we choose a block height and after
> that block height the new taproot rules become enforced.
>
>
> Supporters of the permissionless, "users rule" approach of LOT=true
> should be happy because it completely takes miners out of activation.
>
> Supporters of the safe, conservative approach of LOT=false can be made
> happy with a few ways of derisking:
>
> * Getting mining pools, businesses and users to look at the code and ask
> if they (a) think its either neutral or good for their business or use
> case and (b) they believe others view it similarly and that the
> consensus changes proposed have a good social consensus around them.
>
> * Setting the flag day far in the future (18 months or 2 years in the
> original proposal[3]).
>
>
> == What if flag day activation is used maliciously? ==
>
> What if one day the Core developer team is co-opted and uses the flag
> day method to do something bad? For example, a soft fork where sending
> to certain blacklisted addresses is not allowed. The bitcoin user
> community who wants to resist this can create their own
> counter-soft-fork full node, where the first block after the flag day
> MUST pay to one of those addresses on the blacklist. This forces a chain
> split between the censorship rules and the no-censorship rules, and its
> pretty obvious that the real bitcoin which most people follow will be
> the chain without censorship.
>
> For example, if a group of users didn't agree with taproot then they
> could create their own counter-flag-day-activation which requires that a
> transaction is included that does an invalid-spend from a taproot output
> in the first block after the flag day height.
>
> This is always possible with any user activated soft fork. In BIP8
> LOT=true it could be done by rejecting block headers with certain
> version bits signalled.
>
>
> == But it will take so long! ==
>
> We seem to be at a deadlock now. This will take less time than any other
> method, because other methods might never happen. BIP8 is dead and from
> what I see there's no other credible plan.
>
> We've already waited years for taproot. I remember listening to talks
> about bitcoin from 2015 of people discussing Schnorr signatures. And
> given how slow segwit and p2sh adoption were its pretty likely that
> we'll waiting a while for taproot to be actually adopted.
>
>
> == A social media blitz could still try to activate it early ==
>
> The brinksmanship only works because miner signalling can make many
> other nodes activate early, even if those other nodes didn't do
> anything. There can't be a game of chicken that puts the bitcoin network
> at risk.
>
> If a group of people did adopt alternative node software which has a
> shorter flag day, they actually have a risk of slow blocks. Because they
> cant trick or force any other nodes to come along with them, they are
> likely to only have a small economy and therefore would lose a lot of
> hashrate. Imagine trading bitcoins for cash in person and instead of
> waiting 10 minutes for a confirmation you have to wait 3 hours because
> the blocks are slow.
>
> Also, the argument for downloading and running a different software only
> to speed up activation is pretty weak. Taproot would activate in ~18
> months, so why are you so impatient that you need it in 6 months? And
> risk slow blocks for you while doing so? The big difference with BIP148
> the segwit UASF, is that people *had to* run some other software
> otherwise they would get *no soft fork at all*.
>
>
> == Without miner signalling how do we know the new rules are even
> activated? ==
>
> When did you see miners signalling their support for the inflation
> schedule?
>
> Bitcoin's rules are enforced by wallets backed by full nodes. You'll
> always know if your own full node is enforcing the new rules. The thing
> that matters isnt miner signalling but your own full node, and the nodes
> of those you trade with.
>
> Flag day activation is quite similar to the way block reward halvenings
> work. At and after block height 630000 miners are only allowed to create
> 6.25 BTC rather than 12.5 BTC. Everyone knows that if miners continued
> to create 12.5 BTC or more they would be unable to sell or spend those
> coins anywhere.
>
> In 2017 when segwit was being activated people created a huge list of
> various bitcoin companies, merchants and wallets:
>
> https://web.archive.org/web/20171228111943/https://bitcoincore.org/en/segwit_adoption/
> Looking at that list, you would know that if someone stole coins from a
> segwit address they would be unable to deposit them in many exchanges
> and merchants: Bitrefill, Bitstamp, Kraken, Localbitcoins, Paxful,
> Vaultoro, HitBTC, etc.
>
> Then what happened is only a month after S2X was beaten this guy moved
> 40000 BTC to a segwit address, confident about the power of the network
> to protect his coins.
>
> https://old.reddit.com/r/Bitcoin/comments/7tcmi4/bitcointalks_famous_user_loaded_moved_his_40k_btc/
>
> If there's ever any doubt about flag day activation we can always draw
> up a similar list, although if there's broad consensus about it then
> there's no reason why bitcoin businesses wouldn't upgrade to the latest
> Core, like they did with every other previous soft fork.
>
>
> == This gives the impression that Core developers control the protocol ==
>
> This objection has a mirror image argument: BIP8 with LOT=false gives
> the impression that miners control the protocol(!)
>
> Eventually some group has to make a decision. We will ask the bitcoin
> economy and users what they think of flag day activation. It's pretty
> clear that nobody seriously objects to taproot, and as described above
> if Core developers did something evil the community could resist it with
> a counter-flag-day-activation.
>
>
>
> == TL;DR ==
>
> I believe flag day activation is the way forward. It should answer all
> the objections and risks which make other methods too controversial.
> Let's go ahead and bring taproot to bitcoin!
>
>
>
> == References ==
>
> [1] -
>
> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018498.html
>       luke-jr posts saying LOT=false in his view reintroduces a bug, he
> compares it to introducing an inflation bug and just hoping that miners
> will not exploit it.
>
> [2] -
>
> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018425.html
>       This whole thread has many people disagreeing with LOT=true
>
> [3] -
>
> https://old.reddit.com/r/Bitcoin/comments/4biob5/research_into_instantaneous_vote_behavior_in/
>
>
> https://old.reddit.com/r/Bitcoin/comments/3v04pd/can_we_please_have_a_civil_discussion_about/cxjnz1d/?context=1
>
>
> https://old.reddit.com/r/Bitcoin/comments/41ykkt/members_trying_to_destroy_bitcoin_on_this_thread/cz6ccka/?context=3
>
> [4] -
>
> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018495.html
>       Matt Corallo's flag day activation proposal
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210303/f33b24c3/attachment-0001.html>

From yanmaani at cock.li  Wed Mar  3 21:39:33 2021
From: yanmaani at cock.li (yanmaani at cock.li)
Date: Wed, 03 Mar 2021 21:39:33 +0000
Subject: [bitcoin-dev] Making the case for flag day activation of taproot
In-Reply-To: <839ee260-7ac0-9c78-5348-28e80b69799f@riseup.net>
References: <3286a7eb-9deb-77d6-4527-58e0c5882ae2@riseup.net>
 <85745a38e4464541d6357408fae1cfed@cock.li>
 <839ee260-7ac0-9c78-5348-28e80b69799f@riseup.net>
Message-ID: <4b89f7feb5d5442527644852188def49@cock.li>

On 2021-03-03 20:48, Chris Belcher wrote:
> On 03/03/2021 17:30, yanmaani at cock.li wrote:
>> Is that supposed to be a good thing? "We should do X because it'll 
>> work"
>> doesn't prove X is actually good. These things can be evil, but they 
>> can
>> also be legitimate opposition to a change. Taking away the power of a
>> "social media blitz" is not guaranteed to be a good thing!
> It is good that social media drama can only make its own followers fork
> away. In bitcoin people represent themselves, if they want certain 
> rules
> enforced they should have to actually tell their software to do that.
> The problem with BIP8 is that social media drama has a incentive to
> promote brinksmanship.

Tell their software to do it, yes, but fork it? That seems like a big 
"I'm sorry Dave, I'm afraid I can't do that" moment. If I tell Bitcoin 
Core to do something, it seems like a bad thing that it would favor the 
Core devs' wishes ("Get Taproot done") over mine.

>> That will only work for really egregious changes. In practice, most
>> people will trust Core on all other (non-egregious) decisions, because
>> of the inertia inherent in disobeying them.
[...]
>> You're right in suggesting that it will work, but the reason why it 
>> will
>> work is because nobody wants to disobey Core. It seems immoral to
>> exploit this fact.

> It is not correct to say that this will work because "nobody will
> disobey Core". In reality it will work because basically everyone 
> either
> wants taproot or has no opinion about taproot.

Both can be true at the same time. This is going to work because 
basically nobody opposes Taproot. But if you did have some people 
opposing Taproot, it would still work, because nobody would want to 
disobey Core.

> Your argument depends heavily on the word "egregious". I've shown that
> for harmful changes like censorship can be resisted by the bitcoin
> community. Can you come up with an example of a bad change which won't
> be resisted?

Example 1: There is currently a specific mining pool planning to 
blacklist addresses on sanctions lists. If they were to 
convince/bribe/threaten Core to soft-fork so as to burn one specific 
UTXO worth $1, the only direct victim of that would be the holder of 
that UTXO, who loses only $1 from it.

Example 2: A soft fork to decrease the block size by 0.1%.

If we assume that the current block size is optimal and censorship is 
bad, it seems simultaneously true that
1) it would be bad to decrease the block size or to burn that UTXO
2) nobody would be wiling to fight a war over a 0.1% decrease or a $1 
loss to one guy

You might say that these are minor changes. Sure. But that's what I'm 
saying: if the change is big ("egregious") enough to seriously 
inconvenience people, they would fight it, but if it's trivial (thought 
still bad), the inertia of Core would force them to accept it.

> Here's another example of an easily-resisted change: A Core team that's
> been compromised might do a flag-day UASF where transactions are only
> confirmed if they pay a minimum of 1000 sat/vbyte in miner fee. The
> community could resist this by doing a counter-UASF where a transaction
> paying just 1 sat/vbyte is required to be included in the first block
> after the flay day.

(Nitpick: Miners would probably not support it, because less people 
would be willing to pay that fee.)

Sure, and this change would be resisted because it seriously 
inconveniences people. But what if it's just 2sat/vbyte?

>> At least you shouldn't hard-code it and require dissenters to fork 
>> away.
>> I exhort you to consider making all this controversial stuff settings
>> that can be changed by RPC command or command-line flag; set the 
>> default
>> value sure, but requiring a fork to change it is, in my opinion,
>> oppressive.
> What alternative do you suggest? If you advocate allowing miners to
> activate soft forks then that still won't protect users. Because miners
> won't save users in my above example of a 1000 sat/vbyte price floor, 
> in
> fact miners would see their income greatly increased if the soft fork
> was successful. So in fact the ability to do a counter-UASF is always
> what actually protected users, miner protection is nothing something to
> count on.

I don't disagree. The ability to do a counter-UASF should also be added, 
if it's envisioned somebody might want to do that.

Basically, I think that Core should provide users with the tools to 
express their views and to exercise their economic power, and they could 
give them default values according to what they think best.

However, they shouldn't force people to use a forked client if they want 
to disobey them. That would be to abuse the power vested in the 
development group.

>> On 2021-03-03 14:39, Chris Belcher via bitcoin-dev wrote:
>>> Enter flag day activation. With a flag day there can be no
>>> brinksmanship. A social media blitz cant do anything except have its 
>>> own
>>> followers fork away. Crucially, miner signalling cant be used to 
>>> change
>>> the activation date for nodes that didn't choose to and just 
>>> passively
>>> follow signalling. Changing the activation date requires all those 
>>> users
>>> to actually run different node software.
>> 
>> 
>>> What if one day the Core developer team uses the flag
>>> day method to do something bad? The bitcoin user
>>> community who wants to resist this can create their own
>>> counter-soft-fork full node. This forces a chain
>>> split. The real bitcoin which most people follow will be
>>> the chain without censorship.
>> 
>> [edited for brevity]
>> 
>> 
>> What you suggest may be an efficient way to ram taproot through, but 
>> is
>> it inherently good? Nothing is free. This seems like de-facto forcing
>> people to go along with you, because you're convinced you're right. In
>> this case, you are, but you'd be convinced you'd be right even if you
>> weren't so.
>> 

>> 

>> 
>> (Also consider some compromise, such as ">95% miner support before 
>> flag
>> day or >33% on flag day")
>> 
>> Best wishes
>> Yanmaani

From lf-lists at mattcorallo.com  Wed Mar  3 22:14:10 2021
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Wed, 3 Mar 2021 17:14:10 -0500
Subject: [bitcoin-dev] Making the case for flag day activation of taproot
In-Reply-To: <CAMZUoKkWmdwi-VH3WUvFfG+5MDK3xhvZUac3eBQbxXX_b_btWw@mail.gmail.com>
References: <3286a7eb-9deb-77d6-4527-58e0c5882ae2@riseup.net>
 <CAMZUoKkWmdwi-VH3WUvFfG+5MDK3xhvZUac3eBQbxXX_b_btWw@mail.gmail.com>
Message-ID: <4947b02e-90fb-9044-4552-767de805ff14@mattcorallo.com>



On 3/3/21 14:08, Russell O'Connor via bitcoin-dev wrote:
> While I support essentially any proposed taproot activation method, including a flag day activation, I think it is 
> premature to call BIP8 dead.
> 
> Even today, I still think that starting with BIP8 LOT=false is, generally speaking, considered a reasonably safe 
> activation method in the sense that I think it will be widely considered as a "not wholly unacceptable" approach to 
> activation.

How do you propose avoiding divergent consensus rules on the network, something which a number of commentors on this 
list have publicly committed to?

> After a normal and successful Core update with LOT=false, we will have more data showing broad community support for the 
> taproot upgrade in hand.

I think this is one of the strongest arguments against a flag day activation, but, as I described in more detail in the 
thread "Straight Flag Day (Height) Taproot Activation", I'm not sure we aren't there enough already.

> In the next release, 6 months later or so, Core could then confidently deploy a BIP8 LOT=true 

Could you clarify what an acceptable timeline is, then? Six months from release of new consensus rules to activation (in 
the case of a one-year original window) seems incredibly agressive for a flag-day activation, let alone one with 
forced-signaling, which would require significantly higher level of adoption to avoid network split risk. In such a 
world, we'd probably get Taproot faster with a flag day from day one.

> client, should it prove to be necessary.? A second Core deployment of LOT=true would mitigate some of the concerns with 
> LOT=false, but still provide a period beforehand to objective actions taken by the community in support of taproot.? We 
> don't even have to have agreement today on a second deployment of LOT=true after 6 months to start the process of a 
> LOT=false deployment. The later deployment will almost certainly be moot, and we will have 6 months to spend debating 
> the LOT=true deployment versus doing a flag day activation or something else.

That was precisely the original goal with the LOT=false movement - do something easy and avoid having to hash out all 
the technical details of a second deployment. Sadly, that's no longer tennable as a number of people are publicly 
committed to deploying LOT=true software on the network ASAP.

Matt

From lkcl at lkcl.net  Wed Mar  3 22:12:21 2021
From: lkcl at lkcl.net (Luke Kenneth Casson Leighton)
Date: Wed, 3 Mar 2021 22:12:21 +0000
Subject: [bitcoin-dev] Making the case for flag day activation of taproot
In-Reply-To: <mailman.66954.1614808879.32591.bitcoin-dev@lists.linuxfoundation.org>
References: <mailman.66954.1614808879.32591.bitcoin-dev@lists.linuxfoundation.org>
Message-ID: <CAPweEDzavOzQpkiep4-yu6wMFmg2FiVe2LWt75e0LEnRSdQM9g@mail.gmail.com>

would it help by first setting a regular period of e.g. 6 months when
only at that time would consensus rules ever be changed?  not, "6
months from now taproot will be introduced', a rule, "*any* consensus
change regardless of what they are (including NO change) will *ONLY*
be made at regular interval period X months".

this stops dead efforts by bots to announce "consensus! rules! are
changing!" because if it's not at the exact time-period it's clearly
bullshit.

l.

From yanmaani at cock.li  Wed Mar  3 22:58:10 2021
From: yanmaani at cock.li (yanmaani at cock.li)
Date: Wed, 03 Mar 2021 22:58:10 +0000
Subject: [bitcoin-dev] LOT=False is dangerous and shouldn't be used
In-Reply-To: <CAJowKgLWfc8WJF9guy_3nztBm=iJ9+jWRMEg-Vadj9cdXGvkFA@mail.gmail.com>
References: <202102281933.30691.luke@dashjr.org>
 <20210301150614.vz557ssn2epxknjn@erisian.com.au>
 <86f87c6e5e4fd05c2295de2209694771@cock.li>
 <CAJowKgLWfc8WJF9guy_3nztBm=iJ9+jWRMEg-Vadj9cdXGvkFA@mail.gmail.com>
Message-ID: <57ab51611ab99f29f82f7355bb936f67@cock.li>

No, it's not the same. This approach is not guaranteed to activate. On 
flag day, it'd check for (say) 20% miner support, and activate if so. If 
 >80% of miners oppose, it'd fail. LOT=true (and declining percentage) will activate unconditionally.

Also, the day before lock-in, this would still have 95% as the limit, 
not a linear interpolation between 95% and the lock-in limit.

This checks: if miner support > 95% support it (ever) or miner support > 
X% (on flag day), activate
DP checks: if miner support > lerp(95%, 0%) (ever), activate
LOT=true checks: on flag day, activate unconditionally

(Erik: I forgot to hit reply all on my last e-mail, that's why you're 
seeing this twice)

On 2021-03-02 06:11, Erik Aronesty wrote:
> This is the declining percentage of signaling activation.
> 
> It has all the benefits of both.
> 
> Eventually it becomes a LOT=true, so any argument for LOT=true holds
> 
> And all of the arguments for LOT=false are satisfied by the cool down
> period.
> 
> On Mon, Mar 1, 2021, 12:05 PM yanmaani--- via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
>> How about a compromise?
>> 
>> With LOT=false, taproot will be activated if at least 95% of the
>> miners
>> vote yes.
>> With LOT=true, taproot will be activated if at least 0% of the
>> miners
>> vote yes.
>> ...with LOT=maybe, taproot will be activated if at least ~some% of
>> the
>> miners vote yes?
>> 
>> If you want the 'emergency cancel' feature without binding yourself
>> to
>> it, couldn't you have some middle-of-the-road solution? "Taproot
>> will be
>> enabled if miner support ever goes above 95%, or on flag day if
>> miner
>> support is >20% then". That would prevent obstreperous miners from
>> doing
>> too much damage, while still hopefully making it possible to bail
>> out of
>> a disaster.
>> 
>> On 2021-03-01 15:06, Anthony Towns via bitcoin-dev wrote:
>>> On Sun, Feb 28, 2021 at 07:33:30PM +0000, Luke Dashjr via
>> bitcoin-dev
>>> wrote:
>>>> As we saw in 2017 with BIP 9, coordinating activation by miner
>> signal
>>>> alone,
>>>> despite its potential benefits, also leaves open the door to a
>> miner
>>>> veto.
>>> 
>>> To the contrary, we saw in 2017 that miners could *not*
>> successfully
>>> veto a BIP 9 activation. It was certainly more effort and risk
>> than was
>>> desirable to override the attempted veto, but the attempt at
>> vetoing
>>> nevertheless failed.
>>> 
>>>> It wouldn't be much different than adding back the inflation bug
>>>> (CVE-2018-17144) and trusting miners not to exploit it.
>>> 
>>> That is ridiculous FUD.
>>> 
>>>> With LOT=False in the picture, however, things can get messy:
>>> 
>>> LOT=false is always in the picture if we are talking about a
>> soft-fork:
>>> the defining feature of a soft-fork is that old node software
>> continues
>>> to work, and old node software will be entirely indifferent to
>> whether
>>> activation is signalled or not.
>>> 
>>>> some users will
>>>> enforce Taproot(eg) (those running LOT=True), while others will
>> not
>>>> (those
>>>> with LOT=False)
>>> 
>>> If you are following bip8 with lockinontimeout=false, you will
>> enforce
>>> taproot rules if activation occurs, you will simply not reject
>> blocks
>>> if
>>> activation does not occur.
>>> 
>>>> Users with LOT=True will still get all the safety thereof,
>>>> but those with LOT=False will (in the event of miners deciding to
>> 
>>>> produce a
>>>> chain split) face an unreliable chain, being replaced by the
>> LOT=True
>>>> chain
>>>> every time it overtakes the LOT=False chain in work.
>>> 
>>> This assumes anyone mining the chain where taproot does not
>> activate is
>>> not able to avoid a reorg, despite having majority hashpower (as
>>> implied
>>> by the lot=true chain having to overtake them repeatedly). That's
>>> absurd;
>>> avoiding a reorg is trivially achieved via running
>> "invalidateblock",
>>> or
>>> via pool software examining block headers, or via a patch along
>> the
>>> lines
>>> of MUST_SIGNAL enforcement, but doing the opposite. For
>> concreteness,
>>> here's a sketch of such a patch:
>>> 
>>> 
>> 
> https://github.com/ajtowns/bitcoin/commit/f195688bd1eff3780f200e7a049e23b30ca4fe2f
>>> 
>>>> For 2 weeks, users with LOT=False would not have a usable
>> network.
>>> 
>>> That's also ridiculous FUD.
>>> 
>>> If it were true, it would mean the activation mechanism was not
>>> acceptable, as non-upgraded nodes would also not have a usable
>> network
>>> for the same reason.
>>> 
>>> Fortunately, it's not true.
>>> 
>>> More generally, if miners are willing to lose significant amounts
>> of
>>> money mining orphan blocks, they can do that at any time. If
>> they're
>>> not inclined to do so, it's incredibly straightforward for them to
>> 
>>> avoid
>>> doing so, whatever a minority of other miners might do.
>>> 
>>>> The overall risk is maximally reduced by LOT=True being the only
>>>> deployed
>>>> parameter, and any introduction of LOT=False only increases risk
>>>> probability
>>>> and severity.
>>> 
>>> LOT=false is the default behaviour of everything single piece of
>> node
>>> software out there. That behaviour doesn't need to be introduced,
>> it's
>>> already universal.
>>> 
>>> Cheers,
>>> aj
>>> 
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From eric at voskuil.org  Thu Mar  4 07:46:30 2021
From: eric at voskuil.org (Eric Voskuil)
Date: Wed, 3 Mar 2021 23:46:30 -0800
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <SL2P216MB008922741210CC853A51A5A19D979@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
References: <SL2P216MB008922741210CC853A51A5A19D979@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
Message-ID: <0FC5D37F-9CB8-4E78-892A-5C8768E90EAD@voskuil.org>

Your Excellency,

You don?t seem to understand how Bitcoin currently works. A signature is a mathematical /probabilistical proof that the person who signed (the output) is the same person who created the script (the input) that was paid to (i.e. not fraud). You cannot see that he is that person, you can only do the math - giving yourself a reasonable assurance that it is not a fraud.

Taproot is not a proposed change to this design, so I?m not sure to what exactly you are objecting. The math continues to be the sole assurance and visibility that the money was created and transferred in accordance with the agreed rules (consensus). There is no other way for anyone to ?look at? potential fraud on the chain.

If you are aware of any flaw in the existing or proposed mathematics that would enable fraudulent creation or transfer of bitcoin, please spell it out for us.

e

> On Mar 3, 2021, at 21:10, LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au> wrote:
> 
> Good Afternoon,
> 
> I will reply privately here, what do you say I am not in support of fungibility? This fungibility is because of consensus including transparency. Otherwise, if it is just a fraud no-one can look at it.
> 
> KING JAMES HRMH
> 
> Regards,
> The Australian
> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> of Hougun Manor & Glencoe & British Empire
> MR. Damian A. James Williamson
> Wills
> 
> et al.
> 
>  
> Willtech
> www.willtech.com.au
> www.go-overt.com
> and other projects
>  
> earn.com/willtech
> linkedin.com/in/damianwilliamson
> 
> 
> m. 0487135719
> f. +61261470192
> 
> 
> This email does not constitute a general advice. Please disregard this email if misdelivered.
> From: bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on behalf of Felipe Micaroni Lalli via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
> Sent: Thursday, 4 March 2021 3:30 AM
> To: eric at voskuil.org <eric at voskuil.org>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> Subject: Re: [bitcoin-dev] Taproot NACK
>  
> Dear LORD HIS EXCELLENCY JAMES HRMH (& HMRH), a.k.a. "The Australian",
> 
> This discussion list is serious stuff, please stop making noise. Fungibility is a desirable property, anyway.
> 
> Thank you!
> 
>> On Wed, Mar 3, 2021 at 12:04 PM Eric Voskuil via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > consensus requires the ledger to be honest does not prove that it is honest.
> 
> Actually, that?s exactly what it does. A logical/mathematical requirement (necessity) is also called a proof.
> 
> e
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210303/9eda8a92/attachment-0001.html>

From arielluaces at gmail.com  Thu Mar  4 02:18:29 2021
From: arielluaces at gmail.com (Ariel Luaces)
Date: Wed, 3 Mar 2021 18:18:29 -0800
Subject: [bitcoin-dev]
	=?utf-8?b?WWVzdGVyZGF54oCZcyBVQVNGIChMT1Q9dHJ1ZSkg?=
	=?utf-8?q?kick_off_meeting?=
In-Reply-To: <CAFvNmHS8_5riG1FvzQvbWS_twxxTq82GFnT2gLGXirz23Q=pcw@mail.gmail.com>
References: <CAFvNmHS8_5riG1FvzQvbWS_twxxTq82GFnT2gLGXirz23Q=pcw@mail.gmail.com>
Message-ID: <CAOv1TnhbQZ2mfT3Hi75bCuPQ2TOM54iC+rHAV6HDbw7pPYvdzQ@mail.gmail.com>

On Wed, Mar 3, 2021 at 12:25 PM Michael Folkson via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> At this point in time it also appears the greatest risk to Taproot
> dying a slow death is a small group of developers who think talking in
> conservative tones and talking about endless philosophy makes Bitcoin
> a conservative system. (It doesn?t, it just makes it a dying, decaying
> one).

The current risk to taproot and all future activations is a loud
minority of users who are threatening to co-opt a LOT=false activation
by switching the parameter and organizing a marketing blitz that could
end in a fork if things don't go well.
As long as that threat persists consensus won't be reached. Then an
activation client probably won't be released because I don't expect
many devs will have an appetite for writing code that either doesn't
have consensus or code that will be manipulated into creating
consensus conflicts.
I think Bitcoin is fine staying as is until that minority forks off
with their own alt-node. If the UASF minority is dead set on creating
the alt-node then I only hope it's released quickly so the deadlock
can break. A quick UASF fork allows for an early LOT=false activation.

Cheers
Ariel Lorenzo-Luaces

> --
> Michael Folkson
> Email: michaelfolkson at gmail.com
> Keybase: michaelfolkson
> PGP: 43ED C999 9F85 1D40 EAF4 9835 92D6 0159 214C FEE3
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From johnqrand at gmail.com  Wed Mar  3 23:02:14 2021
From: johnqrand at gmail.com (John Rand)
Date: Wed, 3 Mar 2021 23:02:14 +0000
Subject: [bitcoin-dev] activation mechanism considerations
Message-ID: <CAJXtxW=Rix7Q-ra=CADsB00r13pr5DC_76QMGcYrt74FxAWEbQ@mail.gmail.com>

Consensus is important for both taproot and separately for the activation
mechanism.  There are more soft-forks that Bitcoin will need, so it is
important to achieve positive progress on the activation topic also, not
get impatient and rush something ill-considered.  Not all future soft-forks
maybe as widely supported as taproot, and yet it could become existentially
critical that Bitcoin prevails in achieving a future upgrade in dramatic
circumstances, even against powerful interests counter to Bitcoin user and
investors interests.  We should treat the activation topic in a considered
way and with decorum, provide tight non-emotive reasoning devoid of
frustration and impatience.  This is a low drama and convenient time to
incrementally improve activation.  People have varied views about the
deciding factor, or even which factors resulted in segwit activating after
BIP 141 failed using BIP 9.  We do not have to solve everything in one
step, incremental improvement is good, for complex unintuitive topics, to
learn as we go - and it should not be hard to do less badly than what
transpired leading up to BIP 148 and BIP 91.  Failure to upgrade if
permanent, or demoralizing to protocol researchers could be a systemic risk
in itself as there are more upgrades Bitcoin will need.  We are not Ents
but we should use our collective ingenuity to find an incremental
improvement for activation.

John R
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210303/fb745775/attachment.html>

From michaelfolkson at gmail.com  Thu Mar  4 10:54:19 2021
From: michaelfolkson at gmail.com (Michael Folkson)
Date: Thu, 4 Mar 2021 10:54:19 +0000
Subject: [bitcoin-dev]
	=?utf-8?b?WWVzdGVyZGF54oCZcyBVQVNGIChMT1Q9dHJ1ZSkg?=
	=?utf-8?q?kick_off_meeting?=
In-Reply-To: <CAOv1TnhbQZ2mfT3Hi75bCuPQ2TOM54iC+rHAV6HDbw7pPYvdzQ@mail.gmail.com>
References: <CAFvNmHS8_5riG1FvzQvbWS_twxxTq82GFnT2gLGXirz23Q=pcw@mail.gmail.com>
 <CAOv1TnhbQZ2mfT3Hi75bCuPQ2TOM54iC+rHAV6HDbw7pPYvdzQ@mail.gmail.com>
Message-ID: <CAFvNmHTu6PbJMF5TTLEVS1RzK2uTzNvOWn6Grksm_Rt9RTYWPQ@mail.gmail.com>

Hi Ariel

> I think Bitcoin is fine staying as is until that minority forks off with
their own alt-node....  A quick UASF fork allows for an early LOT=false
activation.

I think you misunderstand BIP 8 (LOT=true). Although no timetable has been
finalized as of yet (and hence we are in the realm of speculation rather
than facts), the earliest the MUST_SIGNAL period would kick in is around
July 2022. That doesn't sound very quick to me if you seek a LOT=false
release after a LOT=true release has failed to activate.

> The current risk to taproot and all future activations is a loud minority
of users who are threatening to co-opt a LOT=false activation by switching
the parameter

As I've said in previous emails to this list, some people are determined to
ignore the discussion and (open to all) meetings of recent weeks and block
progress until they find their philosopher's stone. They seek to ignore all
the work people have done laying out the options, communicating those
options to the community and narrowing them down. Instead they bring up
alternative proposals which were discussed and rejected weeks or months
ago. With this mindset we'll still be arguing about Taproot activation in
2030.

I get that there isn't overwhelming consensus on the LOT parameter, this is
a fact. But there won't be overwhelming consensus on any activation
mechanism, that has become clear. I am of the view that consensus on one
parameter of an activation mechanism does not need to be as high as it is
on the actual soft fork that is being activated (which does have
overwhelming consensus). And of course if and when a LOT=true (UASF)
version is released you are absolutely free not to run it. I hope (and
suspect) you would reconsider if July 2022 (or later) was approaching and
it was the only way to activate Taproot.

Thanks
Michael





On Thu, Mar 4, 2021 at 2:18 AM Ariel Luaces <arielluaces at gmail.com> wrote:

> On Wed, Mar 3, 2021 at 12:25 PM Michael Folkson via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> >
> > At this point in time it also appears the greatest risk to Taproot
> > dying a slow death is a small group of developers who think talking in
> > conservative tones and talking about endless philosophy makes Bitcoin
> > a conservative system. (It doesn?t, it just makes it a dying, decaying
> > one).
>
> The current risk to taproot and all future activations is a loud
> minority of users who are threatening to co-opt a LOT=false activation
> by switching the parameter and organizing a marketing blitz that could
> end in a fork if things don't go well.
> As long as that threat persists consensus won't be reached. Then an
> activation client probably won't be released because I don't expect
> many devs will have an appetite for writing code that either doesn't
> have consensus or code that will be manipulated into creating
> consensus conflicts.
> I think Bitcoin is fine staying as is until that minority forks off
> with their own alt-node. If the UASF minority is dead set on creating
> the alt-node then I only hope it's released quickly so the deadlock
> can break. A quick UASF fork allows for an early LOT=false activation.
>
> Cheers
> Ariel Lorenzo-Luaces
>
> > --
> > Michael Folkson
> > Email: michaelfolkson at gmail.com
> > Keybase: michaelfolkson
> > PGP: 43ED C999 9F85 1D40 EAF4 9835 92D6 0159 214C FEE3
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>


-- 
Michael Folkson
Email: michaelfolkson at gmail.com
Keybase: michaelfolkson
PGP: 43ED C999 9F85 1D40 EAF4 9835 92D6 0159 214C FEE3
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210304/c84b6744/attachment-0001.html>

From melvincarvalho at gmail.com  Thu Mar  4 09:25:41 2021
From: melvincarvalho at gmail.com (Melvin Carvalho)
Date: Thu, 4 Mar 2021 10:25:41 +0100
Subject: [bitcoin-dev] activation mechanism considerations
In-Reply-To: <CAJXtxW=Rix7Q-ra=CADsB00r13pr5DC_76QMGcYrt74FxAWEbQ@mail.gmail.com>
References: <CAJXtxW=Rix7Q-ra=CADsB00r13pr5DC_76QMGcYrt74FxAWEbQ@mail.gmail.com>
Message-ID: <CAKaEYhKszo_0KHdMzmFtBVO2sL5Bh382e+koAL-0KMEtR29Opg@mail.gmail.com>

On Thu, 4 Mar 2021 at 10:07, John Rand via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Consensus is important for both taproot and separately for the activation
> mechanism.  There are more soft-forks that Bitcoin will need, so it is
> important to achieve positive progress on the activation topic also, not
> get impatient and rush something ill-considered.  Not all future soft-forks
> maybe as widely supported as taproot, and yet it could become existentially
> critical that Bitcoin prevails in achieving a future upgrade in dramatic
> circumstances, even against powerful interests counter to Bitcoin user and
> investors interests.  We should treat the activation topic in a considered
> way and with decorum, provide tight non-emotive reasoning devoid of
> frustration and impatience.  This is a low drama and convenient time to
> incrementally improve activation.  People have varied views about the
> deciding factor, or even which factors resulted in segwit activating after
> BIP 141 failed using BIP 9.  We do not have to solve everything in one
> step, incremental improvement is good, for complex unintuitive topics, to
> learn as we go - and it should not be hard to do less badly than what
> transpired leading up to BIP 148 and BIP 91.  Failure to upgrade if
> permanent, or demoralizing to protocol researchers could be a systemic risk
> in itself as there are more upgrades Bitcoin will need.  We are not Ents
> but we should use our collective ingenuity to find an incremental
> improvement for activation.
>

Great high level thoughts

The Ents themselves were created in Tolkien's fork of Shakespeare, when he
was frustrated to learn that trees didnt actually march :)

Having followed standards for 10+ years consensus can be tricky

IIRC last time with segwit there was a straw poll in the wiki where devs
could express leanings in an informal, async way.  Something like that
could be of value.

There's an insightful spec written at the IETF "On Consensus and Humming in
the IETF", then IMHO is worth reading

https://tools.ietf.org/html/rfc7282

That said, if we could find an incorruptible machine that could gather the
highest fee tx from the mempool and post it every 10 minutes, bitcoin would
largely run itself.  So, while understanding the gravity of each change, we
could perhaps have the mindset that there are a finite number, such that
when complete bitcoin will move to an endgame where for the user it 'just
works', much like the internet.  If devs and changes are needed less, that
could be viewed as a sign of success.  This is a hand wavy way of saying
that forks could potentially be a diminishing issue over time

Just my 2 satoshis


>
> John R
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210304/54504948/attachment-0001.html>

From roconnor at blockstream.com  Thu Mar  4 13:47:13 2021
From: roconnor at blockstream.com (Russell O'Connor)
Date: Thu, 4 Mar 2021 08:47:13 -0500
Subject: [bitcoin-dev] Making the case for flag day activation of taproot
In-Reply-To: <4947b02e-90fb-9044-4552-767de805ff14@mattcorallo.com>
References: <3286a7eb-9deb-77d6-4527-58e0c5882ae2@riseup.net>
 <CAMZUoKkWmdwi-VH3WUvFfG+5MDK3xhvZUac3eBQbxXX_b_btWw@mail.gmail.com>
 <4947b02e-90fb-9044-4552-767de805ff14@mattcorallo.com>
Message-ID: <CAMZUoKmTL+2GMpv8Qr5uOUC2bMgyuzMPw1zjdjuD+XNE23-65A@mail.gmail.com>

Appologies as I've rearranged your comments in my reply.

On Wed, Mar 3, 2021 at 5:14 PM Matt Corallo <lf-lists at mattcorallo.com>
wrote:

>
> On 3/3/21 14:08, Russell O'Connor via bitcoin-dev wrote:
>
> After a normal and successful Core update with LOT=false, we will have
> more data showing broad community support for the
> > taproot upgrade in hand.
>
> I think this is one of the strongest arguments against a flag day
> activation, but, as I described in more detail in the
> thread "Straight Flag Day (Height) Taproot Activation", I'm not sure we
> aren't there enough already.
>

I agree with you.  I also think we have plenty of evidence to proceed with
taproot and could proceed with a PR for such a flag day activation.  If
there is support for it to be merged, that would be fantastic.  I think we
should proceed along these lines forthwith.

However, the existence and/or release of a flag day activation code does
not in of itself preclude concurrently developing and/or releasing a BIP8
LOT=false deployment.  Activating taproot is "idempotent" after all. We
could even do a Core release with a flag day activation while we continue
to discuss BIP8 LOT=false if that gets the ball rolling.  Certainly having
a flag day activation code merged would take a lot of pressure off further
BIP8 LOT=false work.

As Aaron noted on IRC, if the sticking point here is the MUST_SIGNAL state,
then running BIP8 LOT=false alongside a flag day activation at timeout may
be the way to go.  Once a flag day deployment is released, the LOT=true
people would have their guaranteed activation and would be less interested
in an alternative client. And without a MUST_SIGNAL state, I believe the
LOT=false deployment won't lead any hashpower that is following
standardness rules to create invalid blocks.


> > In the next release, 6 months later or so, Core could then confidently
> deploy a BIP8 LOT=true
>
> Could you clarify what an acceptable timeline is, then? Six months from
> release of new consensus rules to activation (in
> the case of a one-year original window) seems incredibly agressive for a
> flag-day activation, let alone one with
> forced-signaling, which would require significantly higher level of
> adoption to avoid network split risk. In such a
> world, we'd probably get Taproot faster with a flag day from day one.
>

Whatever timeline people are in favour of.  I think having a year or more
between the LOT=true or flag day more and the anticipated second release
date is fair myself.
That would suggest a 2-year timeout from the start to give plenty of room.

Of course, if we start with a flag day from the start then we can just do 1
year and we don't need a second deployment.

We could also do a "Let?s see what happens" with a short 3 or 4-month
deployment and still do a follow up activation if that is more agreeable.
That would give a net of about 1.5 years or so because we don't need to
anticipate the second relase date.

I'm good with whatever, and I'm happy to make more concrete suggestions if
that is necessary.  I think there exist acceptable timelines here.


> > client, should it prove to be necessary.  A second Core deployment of
> LOT=true would mitigate some of the concerns with
> > LOT=false, but still provide a period beforehand to objective actions
> taken by the community in support of taproot.  We
> > don't even have to have agreement today on a second deployment of
> LOT=true after 6 months to start the process of a
> > LOT=false deployment. The later deployment will almost certainly be
> moot, and we will have 6 months to spend debating
> > the LOT=true deployment versus doing a flag day activation or something
> else.
>


> That was precisely the original goal with the LOT=false movement - do
> something easy and avoid having to hash out all
> the technical details of a second deployment. Sadly, that's no longer
> tennable as a number of people are publicly
> committed to deploying LOT=true software on the network ASAP.
>



First things last:

> Even today, I still think that starting with BIP8 LOT=false is, generally
> speaking, considered a reasonably safe
> > activation method in the sense that I think it will be widely considered
> as a "not wholly unacceptable" approach to
> > activation.
>
> How do you propose avoiding divergent consensus rules on the network,
> something which a number of commentors on this
> list have publicly committed to?
>

Firstly, it is an open network.  Anyone can join and run whatever consensus
rules they want.  People have run divergent consensus rules on the network
in the past and it will continue to do so in the future.
It is troublesome when it happens in mass, but it isn't fatal.  We can't
prevent it, and we should continue working to keep the protocol robust in
the face of it.
And we certainly shouldn't be bullied by anyone who comes threatening their
own soft-fork.

Even simply doing nothing may not prevent divergent consensus from
appearing on the network.  Playing conservative isn't playing it safe
because there is nothing more conservative than doing nothing, which isn't
guaranteed to be safe in this sense.

Secondly, for the specific concern of people running BIP8 LOT=true clients,
we could start with "Let?s see what happens" with a short 3 or 4 month
signaling period.  A short enough signaling period is not "hijackable".  We
could add a longer LOCKED_IN period if there are worries about getting
enough nodes upgraded in time for activation.  I see other options as well.

I keep being told that miners are ready and willing to activate, and
taproot will probably activate in two months. All we have to do is get
something out the door that does that.  If taproot activates in two months,
great.  If it fails to activate we will learn so much in so little time.
UASF's will get to say "I told you so" without waiting a year.  Users will
get to take active, meaningful and observable steps to demonstrate their
desire for a taproot upgrade.  Very little time will be wasted, in
particular we don't have to finish debating how best to handle the unlikely
scenario where taproot doesn't activate right away for whatever reason that
is, an scenario that isn't even likely to occur.

I'm still very optimistic.  I see multiple plausible and potentially
acceptable paths towards activation still open and we don't even have to
choose only one.  I can hardly wait to look at the forthcoming PRs for
these possibilities.


> Matt
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210304/c752f684/attachment.html>

From steven.j.lee at gmail.com  Thu Mar  4 16:00:08 2021
From: steven.j.lee at gmail.com (Steve Lee)
Date: Thu, 4 Mar 2021 08:00:08 -0800
Subject: [bitcoin-dev] activation mechanism considerations
In-Reply-To: <CAKaEYhKszo_0KHdMzmFtBVO2sL5Bh382e+koAL-0KMEtR29Opg@mail.gmail.com>
References: <CAJXtxW=Rix7Q-ra=CADsB00r13pr5DC_76QMGcYrt74FxAWEbQ@mail.gmail.com>
 <CAKaEYhKszo_0KHdMzmFtBVO2sL5Bh382e+koAL-0KMEtR29Opg@mail.gmail.com>
Message-ID: <CABu3BAd-xZu1QohwbJS3sRpHYOHz2T1ZUUSoYUKZ7yf9Tarc=A@mail.gmail.com>

+1 for calm and patience as we navigate the activation mechanism.

On Thu, Mar 4, 2021 at 3:24 AM Melvin Carvalho via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

>
>
> On Thu, 4 Mar 2021 at 10:07, John Rand via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> Consensus is important for both taproot and separately for the activation
>> mechanism.  There are more soft-forks that Bitcoin will need, so it is
>> important to achieve positive progress on the activation topic also, not
>> get impatient and rush something ill-considered.  Not all future soft-forks
>> maybe as widely supported as taproot, and yet it could become existentially
>> critical that Bitcoin prevails in achieving a future upgrade in dramatic
>> circumstances, even against powerful interests counter to Bitcoin user and
>> investors interests.  We should treat the activation topic in a considered
>> way and with decorum, provide tight non-emotive reasoning devoid of
>> frustration and impatience.  This is a low drama and convenient time to
>> incrementally improve activation.  People have varied views about the
>> deciding factor, or even which factors resulted in segwit activating after
>> BIP 141 failed using BIP 9.  We do not have to solve everything in one
>> step, incremental improvement is good, for complex unintuitive topics, to
>> learn as we go - and it should not be hard to do less badly than what
>> transpired leading up to BIP 148 and BIP 91.  Failure to upgrade if
>> permanent, or demoralizing to protocol researchers could be a systemic risk
>> in itself as there are more upgrades Bitcoin will need.  We are not Ents
>> but we should use our collective ingenuity to find an incremental
>> improvement for activation.
>>
>
> Great high level thoughts
>
> The Ents themselves were created in Tolkien's fork of Shakespeare, when he
> was frustrated to learn that trees didnt actually march :)
>
> Having followed standards for 10+ years consensus can be tricky
>
> IIRC last time with segwit there was a straw poll in the wiki where devs
> could express leanings in an informal, async way.  Something like that
> could be of value.
>
> There's an insightful spec written at the IETF "On Consensus and Humming
> in the IETF", then IMHO is worth reading
>
> https://tools.ietf.org/html/rfc7282
>
> That said, if we could find an incorruptible machine that could gather the
> highest fee tx from the mempool and post it every 10 minutes, bitcoin would
> largely run itself.  So, while understanding the gravity of each change, we
> could perhaps have the mindset that there are a finite number, such that
> when complete bitcoin will move to an endgame where for the user it 'just
> works', much like the internet.  If devs and changes are needed less, that
> could be viewed as a sign of success.  This is a hand wavy way of saying
> that forks could potentially be a diminishing issue over time
>
> Just my 2 satoshis
>
>
>>
>> John R
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210304/cf754497/attachment-0001.html>

From philipglazman at gmail.com  Thu Mar  4 15:56:10 2021
From: philipglazman at gmail.com (P G)
Date: Thu, 4 Mar 2021 07:56:10 -0800
Subject: [bitcoin-dev] BIP70 is dead. What now?
In-Reply-To: <CAPeP9hkhJPu_wEa0_qudiUQNb8Lkb7L6Ue1aTVLGrPD0mF6yFw@mail.gmail.com>
References: <63e9654c-44b8-740b-79a7-bb58f7bd198c@electrum.org>
 <b60a7654-0252-90af-7ec1-b3de3ed74ae7@degreesofzero.com>
 <CACvH2ek=bM=0vH-skjhr2VnaF47U3eht5P3ukJ7CUnB3V8ZGQQ@mail.gmail.com>
 <CAPeP9hkhJPu_wEa0_qudiUQNb8Lkb7L6Ue1aTVLGrPD0mF6yFw@mail.gmail.com>
Message-ID: <CABkoRmpOJcrtiv+FU7SE8H2FXGV-+-6t+xjEDnmtJZgZk9bvZA@mail.gmail.com>

Hi Thomas,

> Nevertheless, there is ONE feature of BIP70 that I find useful: the fact
that payment requests were signed.

In addition to signing the actual payment request, a nice addition to a new
payment protocol is an assurance that the receiving address can in fact
spend later on. Many users send "test" transactions to a wallet address
before sending their intended full amount. If the protocol includes a
response containing a signature using BIP322, there is better assurance for
the sender. Outside of the merchant context, a sender can use the protocol
to have peace of mind when sending between their own wallets. This should
likely be an optional parameter given cold storage setups cannot return a
signature quickly.

- Philip


On Sun, Feb 21, 2021 at 5:26 AM Eoin McQuinn via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> What is a 'pull request'?
>
> On Fri, Feb 19, 2021 at 1:49 PM Andrew Kozlik via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> Hi Thomas,
>>
>> I am working on an experimental implementation [1] of a new payment
>> request format in Trezor T. In some respects it's similar to BIP-70. The
>> main differences are:
>>
>> 1. There is no reliance on X.509, since that seems to have been the main
>> reason for BIP-70's downfall. The signature is mandatory, since for us the
>> main feature is protection against a man-in-the-middle attack. So in this
>> sense it's more similar to BOLT11.
>>
>> 2. It can be used to solve a similar problem with coin exchange. When you
>> are sending BTC to a trusted exchange service and expecting another
>> cryptocurrency in return, say LTC, you want to be sure that you not only
>> have the correct BTC address, but also that the exchange service has your
>> correct LTC address.
>>
>> 3. It uses an optional nonce for replay protection.
>>
>> The two interesting parts in [1] are probably the `TxAckPaymentRequest`
>> protobuf message [2] and the signature verification [3]. The protobuf
>> message is only for communication between Trezor and the host software
>> running on the user's computer. It's not intended for interchange between
>> wallets. We haven't defined the interchange format yet. I intend to create
>> a SLIP documenting all this.
>>
>> Andrew
>>
>> [1]
>> https://github.com/trezor/trezor-firmware/compare/andrewkozlik/payreq2
>> [2]
>> https://github.com/trezor/trezor-firmware/blob/andrewkozlik/payreq2/common/protob/messages-bitcoin.proto#L403-L427
>> [3]
>> https://github.com/trezor/trezor-firmware/blob/andrewkozlik/payreq2/core/src/apps/bitcoin/sign_tx/payment_request.py
>>
>> On Fri, Feb 19, 2021 at 1:43 PM Charles Hill via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>>> Hi, Thomas,
>>>
>>> I developed a URL signing scheme for use with LNURL as a method for
>>> authorizing payments on behalf of offline devices /applications. It's
>>> not specifically off-chain or on-chain related, but could be repurposed.
>>> The gist of the scheme is as follows:
>>>
>>> Before any signing is done:
>>>
>>> 0) Generate an API key (ID/reference, secret, encoding) to be shared
>>> between a server and an offline device or application.
>>>
>>> To generate a signature:
>>>
>>> 1) Generate a random nonce (unique per API key)
>>>
>>> 2) Build a query string with the `id`, `nonce`, `tag`, "Server
>>> parameters" (see [Subprotocols](#subprotocols) above), and any custom
>>> parameters. The `id` parameter should be equal to the API key's ID.
>>> Example:
>>> `id=b6cb8e81e3&nonce=d585674cf991dbbab42b&tag=withdrawRequest&minWithdrawable=5000&maxWithdrawable=7000&defaultDescription=example&custom1=CUSTOM1_PARAM_VALUE&custom2=CUSTOM2_PARAM_VALUE`.
>>>
>>> Note that both the keys and values for query parameters should be URL
>>> encoded. The following characters should be __unescaped__: `A-Z a-z 0-9
>>> - _ . ! ~ * ' ( )`. See
>>> [encodeURIComponent](
>>> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent#description)
>>>
>>> for more details.
>>>
>>> 3) Sort the query parameters by key (alphabetically). This is referred
>>> to as the "payload". Example:
>>>
>>> `custom1=CUSTOM1_PARAM_VALUE&custom2=CUSTOM2_PARAM_VALUE&defaultDescription=example&id=b6cb8e81e3&maxWithdrawable=7000&minWithdrawable=5000&nonce=d585674cf991dbbab42b&tag=withdrawRequest`
>>>
>>> 4) Sign the payload (the sorted query string) using the API key secret.
>>> Signatures are generated using HMAC-SHA256, where the API key secret is
>>> the key.
>>>
>>> 5) Append the signature to the payload as follows:
>>>
>>> `custom1=CUSTOM1_PARAM_VALUE&custom2=CUSTOM2_PARAM_VALUE&defaultDescription=example&id=b6cb8e81e3&maxWithdrawable=7000&minWithdrawable=5000&nonce=d585674cf991dbbab42b&tag=withdrawRequest&signature=HMAC_SHA256_SIGNATURE`.
>>>
>>> You can find more details here:
>>>
>>>
>>> https://github.com/chill117/lnurl-node#how-to-implement-url-signing-scheme
>>>
>>>
>>> I would change a few things with this scheme to fit better with the
>>> use-case you describe. For example:
>>>
>>> * Remove the "tag" and LNURL-specific parameters
>>>
>>> * Instead of HMAC-SHA256 with a shared secret, it could use pub/priv key
>>> signing instead. The lnurl-auth subprotocol has an interesting approach
>>> to protecting user privacy while allowing verification of signatures.
>>> See for more details on that:
>>>
>>> https://github.com/fiatjaf/lnurl-rfc/blob/master/lnurl-auth.md
>>>
>>>
>>> - chill
>>>
>>>
>>> On 2/19/21 10:14 AM, Thomas Voegtlin via bitcoin-dev wrote:
>>> > I never liked BIP70. It was too complex, had too many features, and
>>> when
>>> > people discuss it, they do not even agree on what the main feature was.
>>> >
>>> > Nevertheless, there is ONE feature of BIP70 that I find useful: the
>>> fact
>>> > that payment requests were signed. I am making this post to discuss
>>> this.
>>> >
>>> > When I send bitcoins to an exchange, I would like to receive a signed
>>> > request. I want to have a proof that the exchange asked me to send
>>> coins
>>> > to that address, in case it has been hijacked by some intern working
>>> > there. If that feature was implemented by an exchange, it would guide
>>> my
>>> > decision to use that exchange over its competitors.
>>> >
>>> > I do not think that a single exchange ever implemented that, but I
>>> guess
>>> > this is because BIP70 is a terrible standard. LN payment requests are
>>> > signed, do not require SSL, do not require interactivity, and therefore
>>> > exchanges use them. Can't we achieve the same for on-chain payments? Is
>>> > anyone working on that?
>>> >
>>> > I would be more than happy to remove BIP70 support from Electrum, if
>>> > there was another standard for signed requests.
>>> >
>>> > Thomas
>>> >
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
>
> --
> eoin.substack.com
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210304/2bfa35a6/attachment-0001.html>

From johnqrand at gmail.com  Thu Mar  4 14:25:41 2021
From: johnqrand at gmail.com (John Rand)
Date: Thu, 4 Mar 2021 14:25:41 +0000
Subject: [bitcoin-dev] MASF=true + LOT=informational
Message-ID: <CAJXtxWmwtmGSA5zG0bWmNi0=ZRMZ=kZKr3SpzBr_dQcDrRhsqA@mail.gmail.com>

With reference to considerations
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-March/018555.html
and motivation to find consensus on incrementally improving Bitcoin
soft-fork activation mechanisms.  (TL;DR Consensus is important for the
activation mechanism as there are more soft-forks that Bitcoin will need.
We need to incrementally improve activation mechanisms.  It could become
critical that Bitcoin prevails in achieving a future upgrade even against
powerful interests.)

These activation configurations have been discussed with rationales.

1) MASF=true + LOT=false

https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018380.html

Try LOT=false first, with a potential to change to LOT=true if pools and
miners were to unreasonably delay MASF activation.  (By later deploying a
revised activation mechanism with LOT=true or other.)

Arguments against have included a major concern about perpetuating the risk
demonstrated by the BIP 141 / BIP 9 with potential for misuse and
misunderstanding of a normative mechanism as a political veto.  Such veto
can be overridden by the market, but the forced need to do so increases
drama and risk.

Arguments in favor include being defensive to avoid misinterpretation about
developer control, and being considered and incremental in starting with a
safe conservative approach
https://old.reddit.com/r/Bitcoin/comments/lcjhl6/taproot_activation_pools_will_be_able_to_veto/gm2l02w/


Though it should be acknowledged and taken into account that disagreement
and potential for partly incompatible clients with different activation
configuration, changes the risk calculation for LOT=false.  So that
LOT=false may not be safer in practice, and does not wash reference client
developers hands of contributing to the combined risk.

2) MASF=true + LOT=true

https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-March/018545.html

Arguments in favor, inverse of above.  But if LOT=true is a hidden flag in
bitcoin reference code, or released by another project, then
misinterpretation of developer control is avoided.

Would there be consensus for the reference implementation doing nothing,
and signal intent to follow the market if a non-contentious LOT=true gains
traction?  With explicit communication of this intent and reason for
initial non-inclusion.

There were also concerns about offending miners.  This concern seems
dubious to many, given pools indicated ~90% support
https://taprootactivation.com/ and are less detail oriented.  But also BIP
148/ BIP 91 sequence events was enormously dangerous and worth minor social
cohesion to avoid as a category of risk.

Against the realism of developer control, if there were a market need to
reject a soft-fork, that can also be done with a UASF.  But UASF is
dramatic and the signaling direction against should be reserved for the low
probability outcome.

3) MASF=false + LOT=informational

https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018495.html

No miner activation.  This is interesting in using the non-standardness
part of schnorr to activate at a flag height without normative signaling in
version bits.  But the combined removal in this proposal of (normative
signaled) MASF is problematic for the needless delay it creates.

It seems probable that the delay itself would motivate users to switch to
clients with MASF+UASF (LOT=true) in protest.  It is true that schnorr
requires wallet work, but that overlooks the philosophical nature of the
rejection of unneeded delay and empirical evidence shows rather
conclusively that ecosystem players are predominantly selectively lazy and
only work on Bitcoin infrastructure upgrades after the fact.

Subsequent posts on the thread with this proposal discuss that
informational signaling be substituted so that users and the market can
benefit from the information about miner intent.  As it is non-normative it
seems hard to argue against: more information is better.

4) MASF=true + LOT=informational

>From the above it would be interesting to see discussion of a combination
of MASF=true (same mechanism as 1 or 2) with LOT=informational (mechanism
from 3).  Where, again, informational means signaling is provided but in an
optional and informational sense, that is not normative for consensus code,
but to inform the ecosystem about a hashrate verified opt-in assertion of
readiness from pools.  In some way that could be more reliable in signaling
a willing readiness rather than a UASF under duress mandatory signal.

Consider also with 2 or 4) alike (or 1 after switching to 2), in the event
that activation were unreasonably delayed, forced miner signaling from 2)
could be argued to be less reliable as the mechanism for signaling on pools
has no automated link to fullnode software version.  In the MASF delay
eventuality, where the flag height is relied upon, users and services would
be well advised to ensure they are running schnorr validating fullnodes,
and for SPV users to verify their wallet relies on schnorr upgraded
fullnodes.

John R
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210304/0bf18cf7/attachment-0001.html>

From erik at q32.com  Thu Mar  4 18:40:18 2021
From: erik at q32.com (Erik Aronesty)
Date: Thu, 4 Mar 2021 13:40:18 -0500
Subject: [bitcoin-dev] MASF=true + LOT=informational
In-Reply-To: <CAJXtxWmwtmGSA5zG0bWmNi0=ZRMZ=kZKr3SpzBr_dQcDrRhsqA@mail.gmail.com>
References: <CAJXtxWmwtmGSA5zG0bWmNi0=ZRMZ=kZKr3SpzBr_dQcDrRhsqA@mail.gmail.com>
Message-ID: <CAJowKg+Bs7HyrOH8ANs3nXxQ5mtmRnfHrHoRNL=hfOm+JTSuQA@mail.gmail.com>

And of course:

1) MASF=true + LOT=eventually true

Using a declining activation threshold over time gives miners control
only over the timing of activation, not the eventuality.   This is
essentially the same as LOT=true, however, it has a greater chance of
activation without requiring intervening releases or changes to the
code.

On Thu, Mar 4, 2021 at 1:15 PM John Rand via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> With reference to considerations https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-March/018555.html and motivation to find consensus on incrementally improving Bitcoin soft-fork activation mechanisms.  (TL;DR Consensus is important for the activation mechanism as there are more soft-forks that Bitcoin will need.  We need to incrementally improve activation mechanisms.  It could become critical that Bitcoin prevails in achieving a future upgrade even against powerful interests.)
>
> These activation configurations have been discussed with rationales.
>
> 1) MASF=true + LOT=false
>
> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018380.html
>
> Try LOT=false first, with a potential to change to LOT=true if pools and miners were to unreasonably delay MASF activation.  (By later deploying a revised activation mechanism with LOT=true or other.)
>
> Arguments against have included a major concern about perpetuating the risk demonstrated by the BIP 141 / BIP 9 with potential for misuse and misunderstanding of a normative mechanism as a political veto.  Such veto can be overridden by the market, but the forced need to do so increases drama and risk.
>
> Arguments in favor include being defensive to avoid misinterpretation about developer control, and being considered and incremental in starting with a safe conservative approach https://old.reddit.com/r/Bitcoin/comments/lcjhl6/taproot_activation_pools_will_be_able_to_veto/gm2l02w/
>
> Though it should be acknowledged and taken into account that disagreement and potential for partly incompatible clients with different activation configuration, changes the risk calculation for LOT=false.  So that LOT=false may not be safer in practice, and does not wash reference client developers hands of contributing to the combined risk.
>
> 2) MASF=true + LOT=true
>
> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-March/018545.html
>
> Arguments in favor, inverse of above.  But if LOT=true is a hidden flag in bitcoin reference code, or released by another project, then misinterpretation of developer control is avoided.
>
> Would there be consensus for the reference implementation doing nothing, and signal intent to follow the market if a non-contentious LOT=true gains traction?  With explicit communication of this intent and reason for initial non-inclusion.
>
> There were also concerns about offending miners.  This concern seems dubious to many, given pools indicated ~90% support https://taprootactivation.com/ and are less detail oriented.  But also BIP 148/ BIP 91 sequence events was enormously dangerous and worth minor social cohesion to avoid as a category of risk.
>
> Against the realism of developer control, if there were a market need to reject a soft-fork, that can also be done with a UASF.  But UASF is dramatic and the signaling direction against should be reserved for the low probability outcome.
>
> 3) MASF=false + LOT=informational
>
> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018495.html
>
> No miner activation.  This is interesting in using the non-standardness part of schnorr to activate at a flag height without normative signaling in version bits.  But the combined removal in this proposal of (normative signaled) MASF is problematic for the needless delay it creates.
>
> It seems probable that the delay itself would motivate users to switch to clients with MASF+UASF (LOT=true) in protest.  It is true that schnorr requires wallet work, but that overlooks the philosophical nature of the rejection of unneeded delay and empirical evidence shows rather conclusively that ecosystem players are predominantly selectively lazy and only work on Bitcoin infrastructure upgrades after the fact.
>
> Subsequent posts on the thread with this proposal discuss that informational signaling be substituted so that users and the market can benefit from the information about miner intent.  As it is non-normative it seems hard to argue against: more information is better.
>
> 4) MASF=true + LOT=informational
>
> From the above it would be interesting to see discussion of a combination of MASF=true (same mechanism as 1 or 2) with LOT=informational (mechanism from 3).  Where, again, informational means signaling is provided but in an optional and informational sense, that is not normative for consensus code, but to inform the ecosystem about a hashrate verified opt-in assertion of readiness from pools.  In some way that could be more reliable in signaling a willing readiness rather than a UASF under duress mandatory signal.
>
> Consider also with 2 or 4) alike (or 1 after switching to 2), in the event that activation were unreasonably delayed, forced miner signaling from 2) could be argued to be less reliable as the mechanism for signaling on pools has no automated link to fullnode software version.  In the MASF delay eventuality, where the flag height is relied upon, users and services would be well advised to ensure they are running schnorr validating fullnodes, and for SPV users to verify their wallet relies on schnorr upgraded fullnodes.
>
> John R
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From keagan.mcclelland at gmail.com  Thu Mar  4 18:23:21 2021
From: keagan.mcclelland at gmail.com (Keagan McClelland)
Date: Thu, 4 Mar 2021 11:23:21 -0700
Subject: [bitcoin-dev] Making the case for flag day activation of taproot
In-Reply-To: <CAMZUoKmTL+2GMpv8Qr5uOUC2bMgyuzMPw1zjdjuD+XNE23-65A@mail.gmail.com>
References: <3286a7eb-9deb-77d6-4527-58e0c5882ae2@riseup.net>
 <CAMZUoKkWmdwi-VH3WUvFfG+5MDK3xhvZUac3eBQbxXX_b_btWw@mail.gmail.com>
 <4947b02e-90fb-9044-4552-767de805ff14@mattcorallo.com>
 <CAMZUoKmTL+2GMpv8Qr5uOUC2bMgyuzMPw1zjdjuD+XNE23-65A@mail.gmail.com>
Message-ID: <CALeFGL2oh5WZi0y64Q0-FjANE8W3GoBrXFNo=9a1OpjcssT30w@mail.gmail.com>

As one of the folks that prefers LOT=true I can certainly attest to the
fact that at least some of us would be willing to do a flag day activation
instead. As far as I'm concerned, flag day does not give a very small
percentage of the user base (5-10% of minerz) the ability to veto a change
that has broad support and is non-invasive.

However, I must question the incongruence between those who oppose LOT=true
and support a possible flag day activation. In my mind, all that LOT=true
does is concatenate a flag day activation after a LOT=false deployment,
where, as Russell noted, activation is an idempotent operation.

So that leads me to believe here that the folks who oppose LOT=true
primarily have an issue with forced signaling, which personally I don't
care about as much, not the idea of committing to a UASF from the get go.

More generally, I want to remind everyone that this is a change everyone
supports (so far). So letting the activation method kill the proposal
altogether would be tragic. If those with specific objections to various
activation methods can be clear about what those objections are, and, even
better, suggest small adjustments to various proposals on those grounds, I
think we have a far more optimistic path forward on getting Taproot
activated. Bitcoin may not have voting, but it certainly can have
compromise to come to consensus on these things. I don't think anyone in
the UASF crowd is impatient with respect to the actual guaranteed
activation timeline, what I get the sense of is a burnout on the arguments,
paired with no action. To the degree that we can make progress on coming to
an agreement that makes people comfortable, even if you don't get
everything you want, I think.

Keagan

On Thu, Mar 4, 2021 at 11:04 AM Russell O'Connor via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Appologies as I've rearranged your comments in my reply.
>
> On Wed, Mar 3, 2021 at 5:14 PM Matt Corallo <lf-lists at mattcorallo.com>
> wrote:
>
>>
>> On 3/3/21 14:08, Russell O'Connor via bitcoin-dev wrote:
>>
> > After a normal and successful Core update with LOT=false, we will have
>> more data showing broad community support for the
>> > taproot upgrade in hand.
>>
>> I think this is one of the strongest arguments against a flag day
>> activation, but, as I described in more detail in the
>> thread "Straight Flag Day (Height) Taproot Activation", I'm not sure we
>> aren't there enough already.
>>
>
> I agree with you.  I also think we have plenty of evidence to proceed with
> taproot and could proceed with a PR for such a flag day activation.  If
> there is support for it to be merged, that would be fantastic.  I think we
> should proceed along these lines forthwith.
>
> However, the existence and/or release of a flag day activation code does
> not in of itself preclude concurrently developing and/or releasing a BIP8
> LOT=false deployment.  Activating taproot is "idempotent" after all. We
> could even do a Core release with a flag day activation while we continue
> to discuss BIP8 LOT=false if that gets the ball rolling.  Certainly having
> a flag day activation code merged would take a lot of pressure off further
> BIP8 LOT=false work.
>
> As Aaron noted on IRC, if the sticking point here is the MUST_SIGNAL
> state, then running BIP8 LOT=false alongside a flag day activation at
> timeout may be the way to go.  Once a flag day deployment is released, the
> LOT=true people would have their guaranteed activation and would be less
> interested in an alternative client. And without a MUST_SIGNAL state, I
> believe the LOT=false deployment won't lead any hashpower that is following
> standardness rules to create invalid blocks.
>
>
>> > In the next release, 6 months later or so, Core could then confidently
>> deploy a BIP8 LOT=true
>>
>> Could you clarify what an acceptable timeline is, then? Six months from
>> release of new consensus rules to activation (in
>> the case of a one-year original window) seems incredibly agressive for a
>> flag-day activation, let alone one with
>> forced-signaling, which would require significantly higher level of
>> adoption to avoid network split risk. In such a
>> world, we'd probably get Taproot faster with a flag day from day one.
>>
>
> Whatever timeline people are in favour of.  I think having a year or more
> between the LOT=true or flag day more and the anticipated second release
> date is fair myself.
> That would suggest a 2-year timeout from the start to give plenty of room.
>
> Of course, if we start with a flag day from the start then we can just do
> 1 year and we don't need a second deployment.
>
> We could also do a "Let?s see what happens" with a short 3 or 4-month
> deployment and still do a follow up activation if that is more agreeable.
> That would give a net of about 1.5 years or so because we don't need to
> anticipate the second relase date.
>
> I'm good with whatever, and I'm happy to make more concrete suggestions if
> that is necessary.  I think there exist acceptable timelines here.
>
>
>> > client, should it prove to be necessary.  A second Core deployment of
>> LOT=true would mitigate some of the concerns with
>> > LOT=false, but still provide a period beforehand to objective actions
>> taken by the community in support of taproot.  We
>> > don't even have to have agreement today on a second deployment of
>> LOT=true after 6 months to start the process of a
>> > LOT=false deployment. The later deployment will almost certainly be
>> moot, and we will have 6 months to spend debating
>> > the LOT=true deployment versus doing a flag day activation or something
>> else.
>>
>
>
>> That was precisely the original goal with the LOT=false movement - do
>> something easy and avoid having to hash out all
>> the technical details of a second deployment. Sadly, that's no longer
>> tennable as a number of people are publicly
>> committed to deploying LOT=true software on the network ASAP.
>>
>
>
>
> First things last:
>
> > Even today, I still think that starting with BIP8 LOT=false is,
>> generally speaking, considered a reasonably safe
>> > activation method in the sense that I think it will be widely
>> considered as a "not wholly unacceptable" approach to
>> > activation.
>>
>> How do you propose avoiding divergent consensus rules on the network,
>> something which a number of commentors on this
>> list have publicly committed to?
>>
>
> Firstly, it is an open network.  Anyone can join and run whatever
> consensus rules they want.  People have run divergent consensus rules on
> the network in the past and it will continue to do so in the future.
> It is troublesome when it happens in mass, but it isn't fatal.  We can't
> prevent it, and we should continue working to keep the protocol robust in
> the face of it.
> And we certainly shouldn't be bullied by anyone who comes threatening
> their own soft-fork.
>
> Even simply doing nothing may not prevent divergent consensus from
> appearing on the network.  Playing conservative isn't playing it safe
> because there is nothing more conservative than doing nothing, which isn't
> guaranteed to be safe in this sense.
>
> Secondly, for the specific concern of people running BIP8 LOT=true
> clients, we could start with "Let?s see what happens" with a short 3 or 4
> month signaling period.  A short enough signaling period is not
> "hijackable".  We could add a longer LOCKED_IN period if there are worries
> about getting enough nodes upgraded in time for activation.  I see other
> options as well.
>
> I keep being told that miners are ready and willing to activate, and
> taproot will probably activate in two months. All we have to do is get
> something out the door that does that.  If taproot activates in two months,
> great.  If it fails to activate we will learn so much in so little time.
> UASF's will get to say "I told you so" without waiting a year.  Users will
> get to take active, meaningful and observable steps to demonstrate their
> desire for a taproot upgrade.  Very little time will be wasted, in
> particular we don't have to finish debating how best to handle the unlikely
> scenario where taproot doesn't activate right away for whatever reason that
> is, an scenario that isn't even likely to occur.
>
> I'm still very optimistic.  I see multiple plausible and potentially
> acceptable paths towards activation still open and we don't even have to
> choose only one.  I can hardly wait to look at the forthcoming PRs for
> these possibilities.
>
>
>> Matt
>>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210304/c4aea744/attachment-0001.html>

From erik at q32.com  Wed Mar  3 14:49:08 2021
From: erik at q32.com (Erik Aronesty)
Date: Wed, 3 Mar 2021 09:49:08 -0500
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <SL2P216MB00899B7B3C67C0DD9E9376B09D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
 <fbc4ce6c-111d-4dcc-8fc7-03ea91855bc4@www.fastmail.com>
 <SL2P216MB00899B7B3C67C0DD9E9376B09D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
Message-ID: <CAJowKg+UY4AN_9otk+6doNsP6NVeHZti_89rCAOTfVaQahre+A@mail.gmail.com>

taproot does not enable anything that cannot already be done today.

it only enables larger and more complex scripts to be done more
efficiently - using less ledger space.

so any objections you can have should be leveled at bitcoin, not at taproot.

On Wed, Mar 3, 2021 at 6:39 AM LORD HIS EXCELLENCY JAMES HRMH via
bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> "Today I spent approximately $5 at a chip shop in North London in cash. Besides the fact that I have voluntarily chosen to share this information, it is absolutely no concern of yourself or any other party that this transaction has occured."
>
> Good Afternoon,
>
> Requiring little argument I concur, privacy allows that you do not have snoops and researchers following you around looking in your purse as you transact. For the general public, how much you carry in your purse and where you get it from is none of their business. However, your employer is required to report to the government a record of pay, or at least maintain that record, and the store where you made a purchase similarly to keep records so that taxes can be paid. From their perspective, you do not need to know how much they keep in their drawer. Bitcoin directly allows your purse to be private and for the transaction ledger to take the scrutiny anyone should be able to apply to prove the ledger is honest. Maintaining an argument that consensus requires the ledger to be honest does not prove that it is honest.
>
> KING JAMES HRMH
> Great British Empire
>
> Regards,
> The Australian
> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> of Hougun Manor & Glencoe & British Empire
> MR. Damian A. James Williamson
> Wills
>
> et al.
>
>
> Willtech
> www.willtech.com.au
> www.go-overt.com
> and other projects
>
> earn.com/willtech
> linkedin.com/in/damianwilliamson
>
>
> m. 0487135719
> f. +61261470192
>
>
> This email does not constitute a general advice. Please disregard this email if misdelivered.
> ________________________________
> From: bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on behalf of Daniel Edgecumbe via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
> Sent: Tuesday, 2 March 2021 12:16 PM
> To: M.K. Safi via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
> Subject: Re: [bitcoin-dev] Taproot NACK
>
> Any "transparency" in the blockchain, beyond that required for a participant to determine valid ownership, can only reasonably be thought of as a bug.
>
> Today I spent approximately $5 at a chip shop in North London in cash. Besides the fact that I have voluntarily chosen to share this information, it is absolutely no concern of yourself or any other party that this transaction has occured.
>
> Bitcoin is digital cash.
>
> Daniel Edgecumbe | esotericnonsense
> email at esotericnonsense.com | https://esotericnonsense.com
>
> On Mon, Mar 1, 2021, at 22:37, Eric Voskuil via bitcoin-dev wrote:
> > To be clear, is this a NACK because Taproot reduces ?transparency?
> > (increases privacy) on the chain (?maintaining consensus? is obviously
> > an argument against any protocol change, so that?s a red herring)?
> >
> > And is it your theory that only an ?honest? (statute abiding) person
> > should have privacy, and not against the state, and/or that mixers are
> > sufficient privacy?
> >
> > Personally, I?m not moved by such an argument. What do you think is the
> > value proposition of Bitcoin?
> >
> > e
> >
> > > On Mar 1, 2021, at 14:21, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > >
> > > ?
> > > Good Afternoon,
> > >
> > > I am going to take tough terms with much of your reply and do appreciate a courteous practice. Having previously made public disclosure of my affiliation with Jambler.io it seems sufficient to disclose my affiliation through the link in my email signature block.
> > >
> > > My concern is not increased privacy it is maintaining consensus values and the transparency of the blockchain wherein all transactions are published in an immutable record and that forbids the redaction of information by any obfuscation. A separate concern is the availability of a privacy suitable for cash should a Bitcoin user desire and especially without disturbing the existing consensus.
> > >
> > > The use of a Bitcoin Mixer is to enable standard equivalent privacy. As you may experience yourself, you do not allow people to follow you around looking in your purse, suppose you are dealing entirely with cash, and to see where and how much you fill it up, and where you spend. Nonetheless, for an honest person, their wallet is available for government audit as are their financial affairs. This is consistent with the existing operation of consensus.
> > >
> > > My full email signature block is a disclosure where I have some affiliation with the referenced website being that it carries at least some information that I have provided or that in some way I am associated perhaps only making use of their services. For example, I hardly make a profit from LinkedIn just my information is there. Also, I have made previous public disclosure of the affiliation. Bitcoin Mixer 2.0 is a partner mixer run by Jambler.io wherein I receive a service referral fee and am not in receipt of any part of the process transaction. The operation block diagram provided by Jambler.io is provided here and attached.
> > > <ip.bitcointalk.org.png>
> > >
> > > [ip.bitcointalk.org.png]-Operation of Jambler.io partner mixer
> > > https://ip.bitcointalk.org/?u=https%3A%2F%2Fjambler.io%2Fimages%2Fscheme-1.png&t=622&c=gTi7r1cfh-yynw
> > > from this thread  https://bitcointalk.org/index.php?topic=5267588
> > >
> > >
> > > The installation script provided by Jambler.io that is the basis of my referral website is also publicly published,
> > > https://github.com/jambler-io/bitcoin-mixer
> > >
> > > The disclosure for the partner program is available from Jambler.io however and is made prominently on my referral website. While it may seem lucrative at first I insist all partner profits are reportable on your personal income.
> > > https://jambler.io/become-partner.php
> > >
> > > I am certainly better than confident that you appreciate the difference between an open and transparent blockchain and the ability of the user to not reveal details of the content of their wallet publicly.
> > >
> > > If further clarification is required may I suggest you pay a token and mix some Bitcoin wherein our discussion may then have some point of reference.
> > >
> > > KING JAMES HRMH
> > > Great British Empire
> > >
> > > Regards,
> > > The Australian
> > > LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> > > of Hougun Manor & Glencoe & British Empire
> > > MR. Damian A. James Williamson
> > > Wills
> > >
> > > et al.
> > >
> > >
> > > Willtech
> > > www.willtech.com.au
> > > www.go-overt.com
> > > and other projects
> > >
> > > earn.com/willtech
> > > linkedin.com/in/damianwilliamson
> > >
> > >
> > > m. 0487135719
> > > f. +61261470192
> > >
> > >
> > > This email does not constitute a general advice. Please disregard this email if misdelivered.
> > > *From:* Ariel Lorenzo-Luaces <arielluaces at gmail.com>
> > > *Sent:* Monday, 1 March 2021 12:07 AM
> > > *To:* LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> > > *Subject:* Re: [bitcoin-dev] Taproot NACK
> > >
> > > Hello LORD HIS EXCELLENCY JAMES HRMH
> > >
> > > I find a striking dichotomy between your concern of increased privacy in bitcoin and your link to a bitcoin mixer in your signature www.go-overt.com
> > >
> > > At first your concerns seemed genuine but after seeing your promotion of a bitcoin mixer I'm thinking your concerns may be more profit motivated? I can't tell since you failed to disclose your relationship with the mixer.
> > >
> > > Could you please clarify your association with the bitcoin mixer and moving forward could you please always do proper disclosure any time you're publically talking about bitcoin transaction privacy. It's only fair to do so as to not mislead people in an attempt to manipulate at worst and just a courteous practice at best.
> > >
> > > Cheers
> > > Ariel Lorenzo-Luaces
> > > On Feb 28, 2021, at 4:36 AM, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > >> Good Evening,
> > >>
> > >> Thank-you for your advice   @JeremyRubin <https://twitter.com/JeremyRubin>  on the basis you advise, "Taproot does not enable monero-like privacy features", I am prepred to withdraw my NACK notably that the existing feeatures of Bitcoin MUST be maintained, and whereby the UTXO of a transaction is identifiable, the PayTo Address, and the amount all without any obfuscation.
> > >>
> > >> Lightning does not really provide obfuscation, it provides a result of a subset of transactions although the operation of the channel is observable to the parties.
> > >>
> > >> The reports I were reading concerning the supposed operation of Taproot published in a public media channel may have been speculation or misinformation nonetheless it is prudent to conditionally reply as you see that I have. It is important not to allow things to slip through the cracks. As you may believe may astute reviewers could make a full disclosure to this list it is not to be expected.
> > >>
> > >> KING JAMES HRMH
> > >> Great British Empire
> > >>
> > >> Regards,
> > >> The Australian
> > >> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> > >> of Hougun Manor & Glencoe & British Empire
> > >> MR. Damian A. James Williamson
> > >> Wills
> > >>
> > >> et al.
> > >>
> > >>
> > >> Willtech
> > >> www.willtech.com.au
> > >> www.go-overt.com
> > >> and other projects
> > >>
> > >> earn.com/willtech
> > >> linkedin.com/in/damianwilliamson
> > >>
> > >>
> > >> m. 0487135719
> > >> f. +61261470192
> > >>
> > >>
> > >> This email does not constitute a general advice. Please disregard this email if misdelivered.
> > >> *From:* Jeremy <jlrubin at mit.edu>
> > >> *Sent:* Sunday, 28 February 2021 3:14 AM
> > >> *To:* LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> > >> *Subject:* Re: [bitcoin-dev] Taproot NACK
> > >>
> > >> I have good news for you: Taproot does not enable monero-like privacy features any moreso than already exist in Bitcoin today. At its core, taproot is a way to make transactions with embedded smart contracts less expensive, done so in a manner that may marginally improve privacy dependent on user behavior (but not in the monero-like way you mention). For example, it makes it possible for lightning channels to look structurally similar to single key wallets, but it does nothing inherently to obfuscate the transaction graph as in monero.
> > >>
> > >> Such "monero-like" transaction graph obfuscation may already exist in Bitcoin via other techniques (coinjoin, payjoin, coinswap, lightning, etc) with or without Taproot, so the point is further moot.
> > >>
> > >> Do you have a source on your reporting?
> > >>
> > >> You may wish to rescind your nack.
> > >>
> > >>
> > >> --
> > >> @JeremyRubin <https://twitter.com/JeremyRubin>  <https://twitter.com/JeremyRubin>
> > >>
> > >>
> > >> On Sat, Feb 27, 2021 at 5:46 AM LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev < bitcoin-dev at lists.linuxfoundation.org> wrote:
> > >>> Good Afternoon,
> > >>>
> > >>> It has been reported that Taproot will enable some Monero like features including the ability to hide transactions.
> > >>>
> > >>> If that is the case I offer a full NACK and let me explain.
> > >>>
> > >>> A part of the benefit of using Bitcoin is its honesty. The full transaction is published on the blockchain. If that were to change so that transactions may be obfuscated from scrutiny then any government would have unlimited impetus to ban Bitcoin, and speculation has that is the reason India has been reported to have banned cryptocurrencies already.
> > >>>
> > >>> I am in support of the expanded use case of Bitcoin without harming the established robust fairness and equal equity offered. The core functionality of Bitcoin, its values, must remain unaltered.
> > >>>
> > >>> KING JAMES HRMH
> > >>> Great British Empire
> > >>>
> > >>> Regards,
> > >>> The Australian
> > >>> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> > >>> of Hougun Manor & Glencoe & British Empire
> > >>> MR. Damian A. James Williamson
> > >>> Wills
> > >>>
> > >>> et al.
> > >>>
> > >>>
> > >>> Willtech
> > >>> www.willtech.com.au
> > >>> www.go-overt.com
> > >>> and other projects
> > >>>
> > >>> earn.com/willtech
> > >>> linkedin.com/in/damianwilliamson
> > >>>
> > >>>
> > >>> m. 0487135719
> > >>> f. +61261470192
> > >>>
> > >>>
> > >>> This email does not constitute a general advice. Please disregard this email if misdelivered.
> > >>> _______________________________________________
> > >>> bitcoin-dev mailing list
> > >>> bitcoin-dev at lists.linuxfoundation.org
> > >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > >>
> > >> bitcoin-dev mailing list
> > >> bitcoin-dev at lists.linuxfoundation.org
> > >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > > <ip.bitcointalk.org.png>
> > > _______________________________________________
> > > bitcoin-dev mailing list
> > > bitcoin-dev at lists.linuxfoundation.org
> > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From thomashartman1 at gmail.com  Wed Mar  3 14:32:27 2021
From: thomashartman1 at gmail.com (Thomas Hartman)
Date: Wed, 3 Mar 2021 09:32:27 -0500
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <SL2P216MB00895015DAD709E1E12EA7EA9D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
 <SL2P216MB00895015DAD709E1E12EA7EA9D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
Message-ID: <2818F4D7-A23D-4C51-94CA-52B3D894ED41@gmail.com>

?all transactions should be open to the scrutiny of an honest government?

I agree with this. However, scrutiny does not imply dragnet surveillance.

Bitcoin returns us, or at least aspires to return, to the days of a gold standard.[0] You will be familiar with this, from your time in Her Majesty?s empire.

In these days, scrutiny implied detectives asking questions. Perhaps they would ask questions of multiple parties and see if certain numbers matched. There was no dragnet surveillance, and this as god intended.

We return to these days soon.

I agree with your point about consensus as well. You are free to run a node supporting a dragnet surveillance fork, and sell your coins that support gold-like privacy to accumulate more dragnet surveillance coins. I wish you success with that. 

[0]: https://taaalk.co/t/bitcoin-maxima-other-crypto-things


> On Mar 2, 2021, at 9:54 PM, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> Good Afternoon,
> 
> All people are entitled to privacy in their purse, and all transactions should be open to the scrutiny of an honest government. You can debate whether any government is honest. Mixing does not remove the record from the public ledger, where it is possible to see that any Bitcoin has transferred from an UTXO to some Pay-To address even with some amount of transaction in between them. The value proposition is the samehttps://www.youtube.com/watch?v=l9jOJk30eQs <https://www.youtube.com/watch?v=l9jOJk30eQs> - because people will trust the system; people trust the existing consensus.
> 
> Let us dispense with the screen and deal with the issue only. If it is not necessary to maintain consensus then what is consensus?
> 
> The intrinsic value of Bitcoin is because of the existing consensus. Even if any proposal gains consensus there is no objective way to show it improves the intrinsic value without trialing and the possibility of failure and so protecting the existing consensus should be the highest value. This understanding is the reason BCH exists in addition to BTC Bitcoin.
> 
> KING JAMES HRMH
> Great British Empire
> 
> Regards,
> The Australian
> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> of Hougun Manor & Glencoe & British Empire
> MR. Damian A. James Williamson
> Wills
> 
> et al.
> 
>  
> Willtech
> www.willtech.com.au <x-msg://6/www.willtech.com.au>
> www.go-overt.com <x-msg://6/www.go-overt.com>
> and other projects
>  
> earn.com/willtech <http://earn.com/willtech>
> linkedin.com/in/damianwilliamson <http://linkedin.com/in/damianwilliamson>
> 
> 
> m. 0487135719
> f. +61261470192
> 
> 
> This email does not constitute a general advice. Please disregard this email if misdelivered.
> From: Eric Voskuil <eric at voskuil.org>
> Sent: Tuesday, 2 March 2021 9:37 AM
> To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> Cc: Ariel Lorenzo-Luaces <arielluaces at gmail.com>
> Subject: Re: [bitcoin-dev] Taproot NACK
>  
> To be clear, is this a NACK because Taproot reduces ?transparency? (increases privacy) on the chain (?maintaining consensus? is obviously an argument against any protocol change, so that?s a red herring)? 
> 
> And is it your theory that only an ?honest? (statute abiding) person should have privacy, and not against the state, and/or that mixers are sufficient privacy?
> 
> Personally, I?m not moved by such an argument. What do you think is the value proposition of Bitcoin?
> 
> e
> 
>> On Mar 1, 2021, at 14:21, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> 
>> ?
>> Good Afternoon,
>> 
>> I am going to take tough terms with much of your reply and do appreciate a courteous practice. Having previously made public disclosure of my affiliation with Jambler.io it seems sufficient to disclose my affiliation through the link in my email signature block.
>> 
>> My concern is not increased privacy it is maintaining consensus values and the transparency of the blockchain wherein all transactions are published in an immutable record and that forbids the redaction of information by any obfuscation. A separate concern is the availability of a privacy suitable for cash should a Bitcoin user desire and especially without disturbing the existing consensus.
>> 
>> The use of a Bitcoin Mixer is to enable standard equivalent privacy. As you may experience yourself, you do not allow people to follow you around looking in your purse, suppose you are dealing entirely with cash, and to see where and how much you fill it up, and where you spend. Nonetheless, for an honest person, their wallet is available for government audit as are their financial affairs. This is consistent with the existing operation of consensus.
>> 
>> My full email signature block is a disclosure where I have some affiliation with the referenced website being that it carries at least some information that I have provided or that in some way I am associated perhaps only making use of their services. For example, I hardly make a profit from LinkedIn just my information is there. Also, I have made previous public disclosure of the affiliation. Bitcoin Mixer 2.0 is a partner mixer run by Jambler.io wherein I receive a service referral fee and am not in receipt of any part of the process transaction. The operation block diagram provided by Jambler.io is provided here and attached.
>> <ip.bitcointalk.org.png>
>> 
>> [ip.bitcointalk.org.png]-Operation of Jambler.io partner mixer
>> https://ip.bitcointalk.org/?u=https%3A%2F%2Fjambler.io%2Fimages%2Fscheme-1.png&t=622&c=gTi7r1cfh-yynw <https://ip.bitcointalk.org/?u=https%3A%2F%2Fjambler.io%2Fimages%2Fscheme-1.png&t=622&c=gTi7r1cfh-yynw>
>> from this thread  https://bitcointalk.org/index.php?topic=5267588 <https://bitcointalk.org/index.php?topic=5267588>
>> 
>> 
>> The installation script provided by Jambler.io that is the basis of my referral website is also publicly published,
>> https://github.com/jambler-io/bitcoin-mixer <https://github.com/jambler-io/bitcoin-mixer>
>> 
>> The disclosure for the partner program is available from Jambler.io however and is made prominently on my referral website. While it may seem lucrative at first I insist all partner profits are reportable on your personal income.
>> https://jambler.io/become-partner.php <https://jambler.io/become-partner.php>
>> 
>> I am certainly better than confident that you appreciate the difference between an open and transparent blockchain and the ability of the user to not reveal details of the content of their wallet publicly.
>> 
>> If further clarification is required may I suggest you pay a token and mix some Bitcoin wherein our discussion may then have some point of reference.
>> 
>> KING JAMES HRMH
>> Great British Empire
>> 
>> Regards,
>> The Australian
>> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
>> of Hougun Manor & Glencoe & British Empire
>> MR. Damian A. James Williamson
>> Wills
>> 
>> et al.
>> 
>>  
>> Willtech
>> www.willtech.com.au
>> www.go-overt.com
>> and other projects
>>  
>> earn.com/willtech
>> linkedin.com/in/damianwilliamson
>> 
>> 
>> m. 0487135719
>> f. +61261470192
>> 
>> 
>> This email does not constitute a general advice. Please disregard this email if misdelivered.
>> From: Ariel Lorenzo-Luaces <arielluaces at gmail.com>
>> Sent: Monday, 1 March 2021 12:07 AM
>> To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
>> Subject: Re: [bitcoin-dev] Taproot NACK
>>  
>> Hello LORD HIS EXCELLENCY JAMES HRMH
>> 
>> I find a striking dichotomy between your concern of increased privacy in bitcoin and your link to a bitcoin mixer in your signature www.go-overt.com <http://www.go-overt.com/>
>> 
>> At first your concerns seemed genuine but after seeing your promotion of a bitcoin mixer I'm thinking your concerns may be more profit motivated? I can't tell since you failed to disclose your relationship with the mixer.
>> 
>> Could you please clarify your association with the bitcoin mixer and moving forward could you please always do proper disclosure any time you're publically talking about bitcoin transaction privacy. It's only fair to do so as to not mislead people in an attempt to manipulate at worst and just a courteous practice at best.
>> 
>> Cheers
>> Ariel Lorenzo-Luaces
>> On Feb 28, 2021, at 4:36 AM, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
>> Good Evening,
>> 
>> Thank-you for your advice  @JeremyRubin <https://twitter.com/JeremyRubin>  on the basis you advise, "Taproot does not enable monero-like privacy features", I am prepred to withdraw my NACK notably that the existing feeatures of Bitcoin MUST be maintained, and whereby the UTXO of a transaction is identifiable, the PayTo Address, and the amount all without any obfuscation.
>> 
>> Lightning does not really provide obfuscation, it provides a result of a subset of transactions although the operation of the channel is observable to the parties.
>> 
>> The reports I were reading concerning the supposed operation of Taproot published in a public media channel may have been speculation or misinformation nonetheless it is prudent to conditionally reply as you see that I have. It is important not to allow things to slip through the cracks. As you may believe may astute reviewers could make a full disclosure to this list it is not to be expected.
>> 
>> KING JAMES HRMH 
>> Great British Empire 
>> 
>> Regards, 
>> The Australian 
>> LORD HIS EXCELLENCY JAMES HRMH (& HMRH) 
>> of Hougun Manor & Glencoe & British Empire 
>> MR. Damian A. James Williamson 
>> Wills 
>> 
>> et al. 
>> 
>>   
>> Willtech 
>> www.willtech.com.au <applewebdata://11E32DCD-CD1E-4591-8DD3-704BCD700ABC>
>> www.go-overt.com <applewebdata://11E32DCD-CD1E-4591-8DD3-704BCD700ABC>
>> and other projects 
>>   
>> earn.com/willtech 
>> linkedin.com/in/damianwilliamson 
>> 
>> 
>> m. 0487135719 
>> f. +61261470192 
>> 
>> 
>> This email does not constitute a general advice. Please disregard this email if misdelivered.
>> From: Jeremy <jlrubin at mit.edu>
>> Sent: Sunday, 28 February 2021 3:14 AM
>> To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
>> Subject: Re: [bitcoin-dev] Taproot NACK
>>   
>> I have good news for you: Taproot does not enable monero-like privacy features any moreso than already exist in Bitcoin today. At its core, taproot is a way to make transactions with embedded smart contracts less expensive, done so in a manner that may marginally improve privacy dependent on user behavior (but not in the monero-like way you mention). For example, it makes it possible for lightning channels to look structurally similar to single key wallets, but it does nothing inherently to obfuscate the transaction graph as in monero. 
>> 
>> Such "monero-like" transaction graph obfuscation may already exist in Bitcoin via other techniques (coinjoin, payjoin, coinswap, lightning, etc) with or without Taproot, so the point is further moot. 
>> 
>> Do you have a source on your reporting? 
>> 
>> You may wish to rescind your nack. 
>> 
>> 
>> -- 
>> @JeremyRubin <https://twitter.com/JeremyRubin> <https://twitter.com/JeremyRubin>
>> 
>> On Sat, Feb 27, 2021 at 5:46 AM LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote: 
>> Good Afternoon, 
>> 
>> It has been reported that Taproot will enable some Monero like features including the ability to hide transactions.
>> 
>> If that is the case I offer a full NACK and let me explain. 
>> 
>> A part of the benefit of using Bitcoin is its honesty. The full transaction is published on the blockchain. If that were to change so that transactions may be obfuscated from scrutiny then any government would have unlimited impetus to ban Bitcoin, and speculation has that is the reason India has been reported to have banned cryptocurrencies already.
>> 
>> I am in support of the expanded use case of Bitcoin without harming the established robust fairness and equal equity offered. The core functionality of Bitcoin, its values, must remain unaltered. 
>> 
>> KING JAMES HRMH
>> Great British Empire 
>> 
>> Regards,
>> The Australian 
>> LORD HIS EXCELLENCY JAMES HRMH (& HMRH) 
>> of Hougun Manor & Glencoe & British Empire 
>> MR. Damian A. James Williamson 
>> Wills 
>> 
>> et al. 
>> 
>>   
>> Willtech
>> www.willtech.com.au <http://www.willtech.com.au/>
>> www.go-overt.com <http://www.go-overt.com/>
>> and other projects 
>>   
>> earn.com/willtech <http://earn.com/willtech>
>> linkedin.com/in/damianwilliamson <http://linkedin.com/in/damianwilliamson>
>> 
>> 
>> m. 0487135719 
>> f. +61261470192 
>> 
>> 
>> This email does not constitute a general advice. Please disregard this email if misdelivered.
>> _______________________________________________ 
>> bitcoin-dev mailing list 
>> bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org> 
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev> 
>>  
>> 
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
>> <ip.bitcointalk.org.png>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210303/1d806698/attachment-0001.html>

From willtech at live.com.au  Thu Mar  4 05:06:55 2021
From: willtech at live.com.au (LORD HIS EXCELLENCY JAMES HRMH)
Date: Thu, 4 Mar 2021 05:06:55 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <CAJowKg+UY4AN_9otk+6doNsP6NVeHZti_89rCAOTfVaQahre+A@mail.gmail.com>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
 <fbc4ce6c-111d-4dcc-8fc7-03ea91855bc4@www.fastmail.com>
 <SL2P216MB00899B7B3C67C0DD9E9376B09D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>,
 <CAJowKg+UY4AN_9otk+6doNsP6NVeHZti_89rCAOTfVaQahre+A@mail.gmail.com>
Message-ID: <SL2P216MB00893A9FE7A43CDC373197889D979@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>

Good Afternoon,

So this I have been advised as you say.

My concern was that the more complex scripts allow obfuscation of the Pay To address thereby removing the probity that Bitcoin can only be honest since the public ledger can be subject to limitless scrutiny. I did see another party mention this publicly on a social media channel and the back is supposed to be conditional both in the application and in lifting.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au
www.go-overt.com
and other projects

earn.com/willtech
linkedin.com/in/damianwilliamson


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
________________________________
From: Erik Aronesty <erik at q32.com>
Sent: Thursday, 4 March 2021 1:49 AM
To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
Cc: Daniel Edgecumbe <email at esotericnonsense.com>
Subject: Re: [bitcoin-dev] Taproot NACK

taproot does not enable anything that cannot already be done today.

it only enables larger and more complex scripts to be done more
efficiently - using less ledger space.

so any objections you can have should be leveled at bitcoin, not at taproot.

On Wed, Mar 3, 2021 at 6:39 AM LORD HIS EXCELLENCY JAMES HRMH via
bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> "Today I spent approximately $5 at a chip shop in North London in cash. Besides the fact that I have voluntarily chosen to share this information, it is absolutely no concern of yourself or any other party that this transaction has occured."
>
> Good Afternoon,
>
> Requiring little argument I concur, privacy allows that you do not have snoops and researchers following you around looking in your purse as you transact. For the general public, how much you carry in your purse and where you get it from is none of their business. However, your employer is required to report to the government a record of pay, or at least maintain that record, and the store where you made a purchase similarly to keep records so that taxes can be paid. From their perspective, you do not need to know how much they keep in their drawer. Bitcoin directly allows your purse to be private and for the transaction ledger to take the scrutiny anyone should be able to apply to prove the ledger is honest. Maintaining an argument that consensus requires the ledger to be honest does not prove that it is honest.
>
> KING JAMES HRMH
> Great British Empire
>
> Regards,
> The Australian
> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> of Hougun Manor & Glencoe & British Empire
> MR. Damian A. James Williamson
> Wills
>
> et al.
>
>
> Willtech
> www.willtech.com.au<http://www.willtech.com.au>
> www.go-overt.com<http://www.go-overt.com>
> and other projects
>
> earn.com/willtech
> linkedin.com/in/damianwilliamson
>
>
> m. 0487135719
> f. +61261470192
>
>
> This email does not constitute a general advice. Please disregard this email if misdelivered.
> ________________________________
> From: bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on behalf of Daniel Edgecumbe via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
> Sent: Tuesday, 2 March 2021 12:16 PM
> To: M.K. Safi via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
> Subject: Re: [bitcoin-dev] Taproot NACK
>
> Any "transparency" in the blockchain, beyond that required for a participant to determine valid ownership, can only reasonably be thought of as a bug.
>
> Today I spent approximately $5 at a chip shop in North London in cash. Besides the fact that I have voluntarily chosen to share this information, it is absolutely no concern of yourself or any other party that this transaction has occured.
>
> Bitcoin is digital cash.
>
> Daniel Edgecumbe | esotericnonsense
> email at esotericnonsense.com | https://esotericnonsense.com
>
> On Mon, Mar 1, 2021, at 22:37, Eric Voskuil via bitcoin-dev wrote:
> > To be clear, is this a NACK because Taproot reduces ?transparency?
> > (increases privacy) on the chain (?maintaining consensus? is obviously
> > an argument against any protocol change, so that?s a red herring)?
> >
> > And is it your theory that only an ?honest? (statute abiding) person
> > should have privacy, and not against the state, and/or that mixers are
> > sufficient privacy?
> >
> > Personally, I?m not moved by such an argument. What do you think is the
> > value proposition of Bitcoin?
> >
> > e
> >
> > > On Mar 1, 2021, at 14:21, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > >
> > > ?
> > > Good Afternoon,
> > >
> > > I am going to take tough terms with much of your reply and do appreciate a courteous practice. Having previously made public disclosure of my affiliation with Jambler.io it seems sufficient to disclose my affiliation through the link in my email signature block.
> > >
> > > My concern is not increased privacy it is maintaining consensus values and the transparency of the blockchain wherein all transactions are published in an immutable record and that forbids the redaction of information by any obfuscation. A separate concern is the availability of a privacy suitable for cash should a Bitcoin user desire and especially without disturbing the existing consensus.
> > >
> > > The use of a Bitcoin Mixer is to enable standard equivalent privacy. As you may experience yourself, you do not allow people to follow you around looking in your purse, suppose you are dealing entirely with cash, and to see where and how much you fill it up, and where you spend. Nonetheless, for an honest person, their wallet is available for government audit as are their financial affairs. This is consistent with the existing operation of consensus.
> > >
> > > My full email signature block is a disclosure where I have some affiliation with the referenced website being that it carries at least some information that I have provided or that in some way I am associated perhaps only making use of their services. For example, I hardly make a profit from LinkedIn just my information is there. Also, I have made previous public disclosure of the affiliation. Bitcoin Mixer 2.0 is a partner mixer run by Jambler.io wherein I receive a service referral fee and am not in receipt of any part of the process transaction. The operation block diagram provided by Jambler.io is provided here and attached.
> > > <ip.bitcointalk.org.png>
> > >
> > > [ip.bitcointalk.org.png]-Operation of Jambler.io partner mixer
> > > https://ip.bitcointalk.org/?u=https%3A%2F%2Fjambler.io%2Fimages%2Fscheme-1.png&t=622&c=gTi7r1cfh-yynw
> > > from this thread  https://bitcointalk.org/index.php?topic=5267588
> > >
> > >
> > > The installation script provided by Jambler.io that is the basis of my referral website is also publicly published,
> > > https://github.com/jambler-io/bitcoin-mixer
> > >
> > > The disclosure for the partner program is available from Jambler.io however and is made prominently on my referral website. While it may seem lucrative at first I insist all partner profits are reportable on your personal income.
> > > https://jambler.io/become-partner.php
> > >
> > > I am certainly better than confident that you appreciate the difference between an open and transparent blockchain and the ability of the user to not reveal details of the content of their wallet publicly.
> > >
> > > If further clarification is required may I suggest you pay a token and mix some Bitcoin wherein our discussion may then have some point of reference.
> > >
> > > KING JAMES HRMH
> > > Great British Empire
> > >
> > > Regards,
> > > The Australian
> > > LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> > > of Hougun Manor & Glencoe & British Empire
> > > MR. Damian A. James Williamson
> > > Wills
> > >
> > > et al.
> > >
> > >
> > > Willtech
> > > www.willtech.com.au<http://www.willtech.com.au>
> > > www.go-overt.com<http://www.go-overt.com>
> > > and other projects
> > >
> > > earn.com/willtech
> > > linkedin.com/in/damianwilliamson
> > >
> > >
> > > m. 0487135719
> > > f. +61261470192
> > >
> > >
> > > This email does not constitute a general advice. Please disregard this email if misdelivered.
> > > *From:* Ariel Lorenzo-Luaces <arielluaces at gmail.com>
> > > *Sent:* Monday, 1 March 2021 12:07 AM
> > > *To:* LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> > > *Subject:* Re: [bitcoin-dev] Taproot NACK
> > >
> > > Hello LORD HIS EXCELLENCY JAMES HRMH
> > >
> > > I find a striking dichotomy between your concern of increased privacy in bitcoin and your link to a bitcoin mixer in your signature www.go-overt.com<http://www.go-overt.com>
> > >
> > > At first your concerns seemed genuine but after seeing your promotion of a bitcoin mixer I'm thinking your concerns may be more profit motivated? I can't tell since you failed to disclose your relationship with the mixer.
> > >
> > > Could you please clarify your association with the bitcoin mixer and moving forward could you please always do proper disclosure any time you're publically talking about bitcoin transaction privacy. It's only fair to do so as to not mislead people in an attempt to manipulate at worst and just a courteous practice at best.
> > >
> > > Cheers
> > > Ariel Lorenzo-Luaces
> > > On Feb 28, 2021, at 4:36 AM, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > >> Good Evening,
> > >>
> > >> Thank-you for your advice   @JeremyRubin <https://twitter.com/JeremyRubin>  on the basis you advise, "Taproot does not enable monero-like privacy features", I am prepred to withdraw my NACK notably that the existing feeatures of Bitcoin MUST be maintained, and whereby the UTXO of a transaction is identifiable, the PayTo Address, and the amount all without any obfuscation.
> > >>
> > >> Lightning does not really provide obfuscation, it provides a result of a subset of transactions although the operation of the channel is observable to the parties.
> > >>
> > >> The reports I were reading concerning the supposed operation of Taproot published in a public media channel may have been speculation or misinformation nonetheless it is prudent to conditionally reply as you see that I have. It is important not to allow things to slip through the cracks. As you may believe may astute reviewers could make a full disclosure to this list it is not to be expected.
> > >>
> > >> KING JAMES HRMH
> > >> Great British Empire
> > >>
> > >> Regards,
> > >> The Australian
> > >> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> > >> of Hougun Manor & Glencoe & British Empire
> > >> MR. Damian A. James Williamson
> > >> Wills
> > >>
> > >> et al.
> > >>
> > >>
> > >> Willtech
> > >> www.willtech.com.au<http://www.willtech.com.au>
> > >> www.go-overt.com<http://www.go-overt.com>
> > >> and other projects
> > >>
> > >> earn.com/willtech
> > >> linkedin.com/in/damianwilliamson
> > >>
> > >>
> > >> m. 0487135719
> > >> f. +61261470192
> > >>
> > >>
> > >> This email does not constitute a general advice. Please disregard this email if misdelivered.
> > >> *From:* Jeremy <jlrubin at mit.edu>
> > >> *Sent:* Sunday, 28 February 2021 3:14 AM
> > >> *To:* LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> > >> *Subject:* Re: [bitcoin-dev] Taproot NACK
> > >>
> > >> I have good news for you: Taproot does not enable monero-like privacy features any moreso than already exist in Bitcoin today. At its core, taproot is a way to make transactions with embedded smart contracts less expensive, done so in a manner that may marginally improve privacy dependent on user behavior (but not in the monero-like way you mention). For example, it makes it possible for lightning channels to look structurally similar to single key wallets, but it does nothing inherently to obfuscate the transaction graph as in monero.
> > >>
> > >> Such "monero-like" transaction graph obfuscation may already exist in Bitcoin via other techniques (coinjoin, payjoin, coinswap, lightning, etc) with or without Taproot, so the point is further moot.
> > >>
> > >> Do you have a source on your reporting?
> > >>
> > >> You may wish to rescind your nack.
> > >>
> > >>
> > >> --
> > >> @JeremyRubin <https://twitter.com/JeremyRubin>  <https://twitter.com/JeremyRubin>
> > >>
> > >>
> > >> On Sat, Feb 27, 2021 at 5:46 AM LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev < bitcoin-dev at lists.linuxfoundation.org> wrote:
> > >>> Good Afternoon,
> > >>>
> > >>> It has been reported that Taproot will enable some Monero like features including the ability to hide transactions.
> > >>>
> > >>> If that is the case I offer a full NACK and let me explain.
> > >>>
> > >>> A part of the benefit of using Bitcoin is its honesty. The full transaction is published on the blockchain. If that were to change so that transactions may be obfuscated from scrutiny then any government would have unlimited impetus to ban Bitcoin, and speculation has that is the reason India has been reported to have banned cryptocurrencies already.
> > >>>
> > >>> I am in support of the expanded use case of Bitcoin without harming the established robust fairness and equal equity offered. The core functionality of Bitcoin, its values, must remain unaltered.
> > >>>
> > >>> KING JAMES HRMH
> > >>> Great British Empire
> > >>>
> > >>> Regards,
> > >>> The Australian
> > >>> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> > >>> of Hougun Manor & Glencoe & British Empire
> > >>> MR. Damian A. James Williamson
> > >>> Wills
> > >>>
> > >>> et al.
> > >>>
> > >>>
> > >>> Willtech
> > >>> www.willtech.com.au<http://www.willtech.com.au>
> > >>> www.go-overt.com<http://www.go-overt.com>
> > >>> and other projects
> > >>>
> > >>> earn.com/willtech
> > >>> linkedin.com/in/damianwilliamson
> > >>>
> > >>>
> > >>> m. 0487135719
> > >>> f. +61261470192
> > >>>
> > >>>
> > >>> This email does not constitute a general advice. Please disregard this email if misdelivered.
> > >>> _______________________________________________
> > >>> bitcoin-dev mailing list
> > >>> bitcoin-dev at lists.linuxfoundation.org
> > >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > >>
> > >> bitcoin-dev mailing list
> > >> bitcoin-dev at lists.linuxfoundation.org
> > >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > > <ip.bitcointalk.org.png>
> > > _______________________________________________
> > > bitcoin-dev mailing list
> > > bitcoin-dev at lists.linuxfoundation.org
> > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210304/a92ed715/attachment-0001.html>

From willtech at live.com.au  Thu Mar  4 04:53:17 2021
From: willtech at live.com.au (LORD HIS EXCELLENCY JAMES HRMH)
Date: Thu, 4 Mar 2021 04:53:17 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <00ee01d71024$2145ab40$63d101c0$@voskuil.org>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>,
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
 <SL2P216MB00895015DAD709E1E12EA7EA9D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>,
 <00ee01d71024$2145ab40$63d101c0$@voskuil.org>
Message-ID: <SL2P216MB00895FC9061C771890BDAA109D979@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>

Good Afternoon,

I will reply this to the list. Knit picking is not constructive. The basic principle of Bitcoin it all transactions are published to the public ledger, the blockchain. What is valuable is the system that consensus enshrines as we have it, not what it may become tomorrow. If ther eis not consensus then there is no Bitcoin, there is a scattering of alt-coins one of which may retain the Bitcoin name and BTC lookup but without consensus it is not what is valued by the current consensus. Consensus is exactly why Bitcoin is pushing AU$70K again last night because we agree it has value, and BCH is less than AU$700 - that is why it is important to defend consensus, those who disagree are free to do what they want, mostly, elsewhere. We have agreed Bitcoin has certain properties including being immutable, transparent, publicly published. Consensus provides we make software to operate in accordance with consensus. If we do not value Bitcoin to defend consensus, instead preferring to have the product exhibit our own mistrust or flaws, then go play with BCH and make it like DOGE, they will klike you at DOGE.

Eric, you are intelligent, obviously, but you mistake from you other email the tenet of honset for the actual case of honesty. The ledger is not ascertained to be honest until it can be proven when it is checked, the very reason for publishing to the public blockchain without obfuscation, and one of the actual reasons Bitcoin has inherent value. The value is agreed in an exchange, yet without the properties of the consensus that value is lost.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au<mail://local/Sent/www.willtech.com.au>
www.go-overt.com<mail://local/Sent/www.go-overt.com>
and other projects

earn.com/willtech
linkedin.com/in/damianwilliamson


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
________________________________
From: eric at voskuil.org <eric at voskuil.org>
Sent: Wednesday, 3 March 2021 10:55 PM
To: 'LORD HIS EXCELLENCY JAMES HRMH' <willtech at live.com.au>; 'Bitcoin Protocol Discussion' <bitcoin-dev at lists.linuxfoundation.org>
Cc: 'Ariel Lorenzo-Luaces' <arielluaces at gmail.com>
Subject: RE: [bitcoin-dev] Taproot NACK


> and all transactions should be open to the scrutiny of an honest government.



From what do you derive the moral judgement ?should? in this context?



> The value proposition is ? because people will trust the system?



So, it?s valuable because it?s trusted? Trusted to do what exactly? What that government money doesn?t already do, specifically.



> If it is not necessary to maintain consensus then what is consensus?



Nothing is ?necessary?. Consensus is an agreement among people. It?s voluntary. Any person can choose to leave, create or join another consensus, or stay where they are.



> BCH exists in addition to BTC Bitcoin.



Exactly, people are free to do what they want. Nobody ?should? do anything except that which they want to do. This and this alone is the ?highest value? if one accepts the moral principle of non-aggression. You do not appear to, and I?m afraid that may be well outside the consensus view among core bitcoin developers (the people you are talking to).



e



From: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>
Sent: Tuesday, March 2, 2021 6:55 PM
To: Eric Voskuil <eric at voskuil.org>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
Cc: Ariel Lorenzo-Luaces <arielluaces at gmail.com>
Subject: Re: [bitcoin-dev] Taproot NACK



Good Afternoon,



All people are entitled to privacy in their purse, and all transactions should be open to the scrutiny of an honest government. You can debate whether any government is honest. Mixing does not remove the record from the public ledger, where it is possible to see that any Bitcoin has transferred from an UTXO to some Pay-To address even with some amount of transaction in between them. The value proposition is the same https://www.youtube.com/watch?v=l9jOJk30eQs - because people will trust the system; people trust the existing consensus.



Let us dispense with the screen and deal with the issue only. If it is not necessary to maintain consensus then what is consensus?



The intrinsic value of Bitcoin is because of the existing consensus. Even if any proposal gains consensus there is no objective way to show it improves the intrinsic value without trialing and the possibility of failure and so protecting the existing consensus should be the highest value. This understanding is the reason BCH exists in addition to BTC Bitcoin.



KING JAMES HRMH

Great British Empire



Regards,

The Australian

LORD HIS EXCELLENCY JAMES HRMH (& HMRH)

of Hougun Manor & Glencoe & British Empire

MR. Damian A. James Williamson

Wills



et al.





Willtech

www.willtech.com.au

www.go-overt.com

and other projects



earn.com/willtech

linkedin.com/in/damianwilliamson





m. 0487135719

f. +61261470192





This email does not constitute a general advice. Please disregard this email if misdelivered.

________________________________

From: Eric Voskuil <eric at voskuil.org<mailto:eric at voskuil.org>>
Sent: Tuesday, 2 March 2021 9:37 AM
To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au<mailto:willtech at live.com.au>>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>>
Cc: Ariel Lorenzo-Luaces <arielluaces at gmail.com<mailto:arielluaces at gmail.com>>
Subject: Re: [bitcoin-dev] Taproot NACK



To be clear, is this a NACK because Taproot reduces ?transparency? (increases privacy) on the chain (?maintaining consensus? is obviously an argument against any protocol change, so that?s a red herring)?



And is it your theory that only an ?honest? (statute abiding) person should have privacy, and not against the state, and/or that mixers are sufficient privacy?



Personally, I?m not moved by such an argument. What do you think is the value proposition of Bitcoin?



e



On Mar 1, 2021, at 14:21, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:

?

Good Afternoon,



I am going to take tough terms with much of your reply and do appreciate a courteous practice. Having previously made public disclosure of my affiliation with Jambler.io it seems sufficient to disclose my affiliation through the link in my email signature block.



My concern is not increased privacy it is maintaining consensus values and the transparency of the blockchain wherein all transactions are published in an immutable record and that forbids the redaction of information by any obfuscation. A separate concern is the availability of a privacy suitable for cash should a Bitcoin user desire and especially without disturbing the existing consensus.



The use of a Bitcoin Mixer is to enable standard equivalent privacy. As you may experience yourself, you do not allow people to follow you around looking in your purse, suppose you are dealing entirely with cash, and to see where and how much you fill it up, and where you spend. Nonetheless, for an honest person, their wallet is available for government audit as are their financial affairs. This is consistent with the existing operation of consensus.



My full email signature block is a disclosure where I have some affiliation with the referenced website being that it carries at least some information that I have provided or that in some way I am associated perhaps only making use of their services. For example, I hardly make a profit from LinkedIn just my information is there. Also, I have made previous public disclosure of the affiliation. Bitcoin Mixer 2.0 is a partner mixer run by Jambler.io wherein I receive a service referral fee and am not in receipt of any part of the process transaction. The operation block diagram provided by Jambler.io is provided here and attached.

<ip.bitcointalk.org.png>



[ip.bitcointalk.org.png]-Operation of Jambler.io partner mixer

https://ip.bitcointalk.org/?u=https%3A%2F%2Fjambler.io%2Fimages%2Fscheme-1.png&t=622&c=gTi7r1cfh-yynw

from this thread  https://bitcointalk.org/index.php?topic=5267588





The installation script provided by Jambler.io that is the basis of my referral website is also publicly published,

https://github.com/jambler-io/bitcoin-mixer



The disclosure for the partner program is available from Jambler.io however and is made prominently on my referral website. While it may seem lucrative at first I insist all partner profits are reportable on your personal income.

https://jambler.io/become-partner.php



I am certainly better than confident that you appreciate the difference between an open and transparent blockchain and the ability of the user to not reveal details of the content of their wallet publicly.



If further clarification is required may I suggest you pay a token and mix some Bitcoin wherein our discussion may then have some point of reference.



KING JAMES HRMH

Great British Empire



Regards,

The Australian

LORD HIS EXCELLENCY JAMES HRMH (& HMRH)

of Hougun Manor & Glencoe & British Empire

MR. Damian A. James Williamson

Wills



et al.





Willtech

www.willtech.com.au<http://www.willtech.com.au>

www.go-overt.com<http://www.go-overt.com>

and other projects



earn.com/willtech

linkedin.com/in/damianwilliamson





m. 0487135719

f. +61261470192





This email does not constitute a general advice. Please disregard this email if misdelivered.

________________________________

From: Ariel Lorenzo-Luaces <arielluaces at gmail.com<mailto:arielluaces at gmail.com>>
Sent: Monday, 1 March 2021 12:07 AM
To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au<mailto:willtech at live.com.au>>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>>
Subject: Re: [bitcoin-dev] Taproot NACK



Hello LORD HIS EXCELLENCY JAMES HRMH

I find a striking dichotomy between your concern of increased privacy in bitcoin and your link to a bitcoin mixer in your signature www.go-overt.com<http://www.go-overt.com>

At first your concerns seemed genuine but after seeing your promotion of a bitcoin mixer I'm thinking your concerns may be more profit motivated? I can't tell since you failed to disclose your relationship with the mixer.

Could you please clarify your association with the bitcoin mixer and moving forward could you please always do proper disclosure any time you're publically talking about bitcoin transaction privacy. It's only fair to do so as to not mislead people in an attempt to manipulate at worst and just a courteous practice at best.

Cheers

Ariel Lorenzo-Luaces

On Feb 28, 2021, at 4:36 AM, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:

Good Evening,



Thank-you for your advice   @JeremyRubin<https://twitter.com/JeremyRubin>  on the basis you advise, "Taproot does not enable monero-like privacy features", I am prepred to withdraw my NACK notably that the existing feeatures of Bitcoin MUST be maintained, and whereby the UTXO of a transaction is identifiable, the PayTo Address, and the amount all without any obfuscation.



Lightning does not really provide obfuscation, it provides a result of a subset of transactions although the operation of the channel is observable to the parties.



The reports I were reading concerning the supposed operation of Taproot published in a public media channel may have been speculation or misinformation nonetheless it is prudent to conditionally reply as you see that I have. It is important not to allow things to slip through the cracks. As you may believe may astute reviewers could make a full disclosure to this list it is not to be expected.



KING JAMES HRMH

Great British Empire



Regards,

The Australian

LORD HIS EXCELLENCY JAMES HRMH (& HMRH)

of Hougun Manor & Glencoe & British Empire

MR. Damian A. James Williamson

Wills



et al.





Willtech

www.willtech.com.au

www.go-overt.com

and other projects



earn.com/willtech

linkedin.com/in/damianwilliamson





m. 0487135719

f. +61261470192





This email does not constitute a general advice. Please disregard this email if misdelivered.

________________________________

From: Jeremy <jlrubin at mit.edu<mailto:jlrubin at mit.edu>>
Sent: Sunday, 28 February 2021 3:14 AM
To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au<mailto:willtech at live.com.au>>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>>
Subject: Re: [bitcoin-dev] Taproot NACK



I have good news for you: Taproot does not enable monero-like privacy features any moreso than already exist in Bitcoin today. At its core, taproot is a way to make transactions with embedded smart contracts less expensive, done so in a manner that may marginally improve privacy dependent on user behavior (but not in the monero-like way you mention). For example, it makes it possible for lightning channels to look structurally similar to single key wallets, but it does nothing inherently to obfuscate the transaction graph as in monero.



Such "monero-like" transaction graph obfuscation may already exist in Bitcoin via other techniques (coinjoin, payjoin, coinswap, lightning, etc) with or without Taproot, so the point is further moot.



Do you have a source on your reporting?



You may wish to rescind your nack.





--
@JeremyRubin<https://twitter.com/JeremyRubin>





On Sat, Feb 27, 2021 at 5:46 AM LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev < bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:

Good Afternoon,



It has been reported that Taproot will enable some Monero like features including the ability to hide transactions.



If that is the case I offer a full NACK and let me explain.



A part of the benefit of using Bitcoin is its honesty. The full transaction is published on the blockchain. If that were to change so that transactions may be obfuscated from scrutiny then any government would have unlimited impetus to ban Bitcoin, and speculation has that is the reason India has been reported to have banned cryptocurrencies already.



I am in support of the expanded use case of Bitcoin without harming the established robust fairness and equal equity offered. The core functionality of Bitcoin, its values, must remain unaltered.



KING JAMES HRMH

Great British Empire



Regards,

The Australian

LORD HIS EXCELLENCY JAMES HRMH (& HMRH)

of Hougun Manor & Glencoe & British Empire

MR. Damian A. James Williamson

Wills



et al.





Willtech

www.willtech.com.au<http://www.willtech.com.au>

www.go-overt.com<http://www.go-overt.com>

and other projects



earn.com/willtech<http://earn.com/willtech>

linkedin.com/in/damianwilliamson<http://linkedin.com/in/damianwilliamson>





m. 0487135719

f. +61261470192





This email does not constitute a general advice. Please disregard this email if misdelivered.

_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev



________________________________

bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

<ip.bitcointalk.org.png>

_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210304/c7b5c5dd/attachment-0001.html>

From willtech at live.com.au  Thu Mar  4 05:05:58 2021
From: willtech at live.com.au (LORD HIS EXCELLENCY JAMES HRMH)
Date: Thu, 4 Mar 2021 05:05:58 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <2818F4D7-A23D-4C51-94CA-52B3D894ED41@gmail.com>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
 <SL2P216MB00895015DAD709E1E12EA7EA9D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>,
 <2818F4D7-A23D-4C51-94CA-52B3D894ED41@gmail.com>
Message-ID: <SL2P216MB00898333D5525E5096B249659D979@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>

Good Afternoon,

Gold is not all off the record if you suppose, it is all the King's property if His Excellency likes. If you suppose for underground gold perhaps fork Bitcoin and make Encryptitcoin and notice governments are hostile to hidden money. Bitcoin also has value because it is transparent and therefore fraud-proof if we must only accept honest blocks.

If you want dragnet surveillance, I have already lodged my taxes up to date.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au
www.go-overt.com
and other projects

earn.com/willtech
linkedin.com/in/damianwilliamson


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
________________________________
From: Thomas Hartman <thomashartman1 at gmail.com>
Sent: Thursday, 4 March 2021 1:32 AM
To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
Subject: Re: [bitcoin-dev] Taproot NACK

?all transactions should be open to the scrutiny of an honest government?

I agree with this. However, scrutiny does not imply dragnet surveillance.

Bitcoin returns us, or at least aspires to return, to the days of a gold standard.[0] You will be familiar with this, from your time in Her Majesty?s empire.

In these days, scrutiny implied detectives asking questions. Perhaps they would ask questions of multiple parties and see if certain numbers matched. There was no dragnet surveillance, and this as god intended.

We return to these days soon.

I agree with your point about consensus as well. You are free to run a node supporting a dragnet surveillance fork, and sell your coins that support gold-like privacy to accumulate more dragnet surveillance coins. I wish you success with that.

[0]: https://taaalk.co/t/bitcoin-maxima-other-crypto-things


On Mar 2, 2021, at 9:54 PM, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:

Good Afternoon,

All people are entitled to privacy in their purse, and all transactions should be open to the scrutiny of an honest government. You can debate whether any government is honest. Mixing does not remove the record from the public ledger, where it is possible to see that any Bitcoin has transferred from an UTXO to some Pay-To address even with some amount of transaction in between them. The value proposition is the samehttps://www.youtube.com/watch?v=l9jOJk30eQs - because people will trust the system; people trust the existing consensus.

Let us dispense with the screen and deal with the issue only. If it is not necessary to maintain consensus then what is consensus?

The intrinsic value of Bitcoin is because of the existing consensus. Even if any proposal gains consensus there is no objective way to show it improves the intrinsic value without trialing and the possibility of failure and so protecting the existing consensus should be the highest value. This understanding is the reason BCH exists in addition to BTC Bitcoin.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au
www.go-overt.com
and other projects

earn.com/willtech<http://earn.com/willtech>
linkedin.com/in/damianwilliamson<http://linkedin.com/in/damianwilliamson>


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
________________________________
From: Eric Voskuil <eric at voskuil.org<mailto:eric at voskuil.org>>
Sent: Tuesday, 2 March 2021 9:37 AM
To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au<mailto:willtech at live.com.au>>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>>
Cc: Ariel Lorenzo-Luaces <arielluaces at gmail.com<mailto:arielluaces at gmail.com>>
Subject: Re: [bitcoin-dev] Taproot NACK

To be clear, is this a NACK because Taproot reduces ?transparency? (increases privacy) on the chain (?maintaining consensus? is obviously an argument against any protocol change, so that?s a red herring)?

And is it your theory that only an ?honest? (statute abiding) person should have privacy, and not against the state, and/or that mixers are sufficient privacy?

Personally, I?m not moved by such an argument. What do you think is the value proposition of Bitcoin?

e

On Mar 1, 2021, at 14:21, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:

?
Good Afternoon,

I am going to take tough terms with much of your reply and do appreciate a courteous practice. Having previously made public disclosure of my affiliation with Jambler.io<http://Jambler.io> it seems sufficient to disclose my affiliation through the link in my email signature block.

My concern is not increased privacy it is maintaining consensus values and the transparency of the blockchain wherein all transactions are published in an immutable record and that forbids the redaction of information by any obfuscation. A separate concern is the availability of a privacy suitable for cash should a Bitcoin user desire and especially without disturbing the existing consensus.

The use of a Bitcoin Mixer is to enable standard equivalent privacy. As you may experience yourself, you do not allow people to follow you around looking in your purse, suppose you are dealing entirely with cash, and to see where and how much you fill it up, and where you spend. Nonetheless, for an honest person, their wallet is available for government audit as are their financial affairs. This is consistent with the existing operation of consensus.

My full email signature block is a disclosure where I have some affiliation with the referenced website being that it carries at least some information that I have provided or that in some way I am associated perhaps only making use of their services. For example, I hardly make a profit from LinkedIn just my information is there. Also, I have made previous public disclosure of the affiliation. Bitcoin Mixer 2.0 is a partner mixer run by Jambler.io<http://Jambler.io> wherein I receive a service referral fee and am not in receipt of any part of the process transaction. The operation block diagram provided by Jambler.io<http://Jambler.io> is provided here and attached.
<ip.bitcointalk.org.png>

[ip.bitcointalk.org.png]-Operation of Jambler.io<http://Jambler.io> partner mixer
https://ip.bitcointalk.org/?u=https%3A%2F%2Fjambler.io%2Fimages%2Fscheme-1.png&t=622&c=gTi7r1cfh-yynw
from this thread  https://bitcointalk.org/index.php?topic=5267588


The installation script provided by Jambler.io<http://Jambler.io> that is the basis of my referral website is also publicly published,
https://github.com/jambler-io/bitcoin-mixer

The disclosure for the partner program is available from Jambler.io<http://Jambler.io> however and is made prominently on my referral website. While it may seem lucrative at first I insist all partner profits are reportable on your personal income.
https://jambler.io/become-partner.php

I am certainly better than confident that you appreciate the difference between an open and transparent blockchain and the ability of the user to not reveal details of the content of their wallet publicly.

If further clarification is required may I suggest you pay a token and mix some Bitcoin wherein our discussion may then have some point of reference.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au<http://www.willtech.com.au>
www.go-overt.com<http://www.go-overt.com>
and other projects

earn.com/willtech<http://earn.com/willtech>
linkedin.com/in/damianwilliamson<http://linkedin.com/in/damianwilliamson>


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
________________________________
From: Ariel Lorenzo-Luaces <arielluaces at gmail.com<mailto:arielluaces at gmail.com>>
Sent: Monday, 1 March 2021 12:07 AM
To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au<mailto:willtech at live.com.au>>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>>
Subject: Re: [bitcoin-dev] Taproot NACK

Hello LORD HIS EXCELLENCY JAMES HRMH

I find a striking dichotomy between your concern of increased privacy in bitcoin and your link to a bitcoin mixer in your signature www.go-overt.com<http://www.go-overt.com/>

At first your concerns seemed genuine but after seeing your promotion of a bitcoin mixer I'm thinking your concerns may be more profit motivated? I can't tell since you failed to disclose your relationship with the mixer.

Could you please clarify your association with the bitcoin mixer and moving forward could you please always do proper disclosure any time you're publically talking about bitcoin transaction privacy. It's only fair to do so as to not mislead people in an attempt to manipulate at worst and just a courteous practice at best.

Cheers
Ariel Lorenzo-Luaces
On Feb 28, 2021, at 4:36 AM, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
Good Evening,

Thank-you for your advice  @JeremyRubin<https://twitter.com/JeremyRubin>  on the basis you advise, "Taproot does not enable monero-like privacy features", I am prepred to withdraw my NACK notably that the existing feeatures of Bitcoin MUST be maintained, and whereby the UTXO of a transaction is identifiable, the PayTo Address, and the amount all without any obfuscation.

Lightning does not really provide obfuscation, it provides a result of a subset of transactions although the operation of the channel is observable to the parties.

The reports I were reading concerning the supposed operation of Taproot published in a public media channel may have been speculation or misinformation nonetheless it is prudent to conditionally reply as you see that I have. It is important not to allow things to slip through the cracks. As you may believe may astute reviewers could make a full disclosure to this list it is not to be expected.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au
www.go-overt.com
and other projects

earn.com/willtech<http://earn.com/willtech>
linkedin.com/in/damianwilliamson<http://linkedin.com/in/damianwilliamson>


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
________________________________
From: Jeremy <jlrubin at mit.edu<mailto:jlrubin at mit.edu>>
Sent: Sunday, 28 February 2021 3:14 AM
To: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au<mailto:willtech at live.com.au>>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>>
Subject: Re: [bitcoin-dev] Taproot NACK

I have good news for you: Taproot does not enable monero-like privacy features any moreso than already exist in Bitcoin today. At its core, taproot is a way to make transactions with embedded smart contracts less expensive, done so in a manner that may marginally improve privacy dependent on user behavior (but not in the monero-like way you mention). For example, it makes it possible for lightning channels to look structurally similar to single key wallets, but it does nothing inherently to obfuscate the transaction graph as in monero.

Such "monero-like" transaction graph obfuscation may already exist in Bitcoin via other techniques (coinjoin, payjoin, coinswap, lightning, etc) with or without Taproot, so the point is further moot.

Do you have a source on your reporting?

You may wish to rescind your nack.


--
@JeremyRubin<https://twitter.com/JeremyRubin><https://twitter.com/JeremyRubin>


On Sat, Feb 27, 2021 at 5:46 AM LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
Good Afternoon,

It has been reported that Taproot will enable some Monero like features including the ability to hide transactions.

If that is the case I offer a full NACK and let me explain.

A part of the benefit of using Bitcoin is its honesty. The full transaction is published on the blockchain. If that were to change so that transactions may be obfuscated from scrutiny then any government would have unlimited impetus to ban Bitcoin, and speculation has that is the reason India has been reported to have banned cryptocurrencies already.

I am in support of the expanded use case of Bitcoin without harming the established robust fairness and equal equity offered. The core functionality of Bitcoin, its values, must remain unaltered.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au<http://www.willtech.com.au/>
www.go-overt.com<http://www.go-overt.com/>
and other projects

earn.com/willtech<http://earn.com/willtech>
linkedin.com/in/damianwilliamson<http://linkedin.com/in/damianwilliamson>


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


________________________________

bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

<ip.bitcointalk.org.png>
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210304/cd307d8a/attachment-0001.html>

From vincent.truong at procabiak.com  Wed Mar  3 16:19:42 2021
From: vincent.truong at procabiak.com (Vincent Truong)
Date: Thu, 4 Mar 2021 03:19:42 +1100
Subject: [bitcoin-dev] Making the case for flag day activation of taproot
In-Reply-To: <3286a7eb-9deb-77d6-4527-58e0c5882ae2@riseup.net>
References: <3286a7eb-9deb-77d6-4527-58e0c5882ae2@riseup.net>
Message-ID: <CACrzPemtN4+fJ7ALAr=BvsMjmE8nXbOY4COyT-XdBMQbBy5r4Q@mail.gmail.com>

I must remind everyone of Mike Hearn's proposal not many years ago, which
ought to be on everyone's mind right now. "Every soft fork should be a hard
fork, and that soft forks are inherently dangerous because old nodes are
tricked to not know what the new nodes are doing" (paraphrased). Whether
taproot is dangerous is not the issue; whether old nodes should or should
not ignore new rules, is.

Flag day activation of a soft fork is basically proposing a hard fork, but
without saying or doing it at full commitment. May as well just do a flag
day hard fork.

Bitcoin Cash/Bcash has already tested for you how a market driven hard fork
should work. Bitcoin didn't die. We should be learning from the mistakes
made in those early hard forks to not repeat them when Bitcoin hard forks -
like having replay protection written before deployment.

If it's not evident within the first 6-12 blocks which fork is winning,
then the market will trade it out. Just like what happened with Bitcoin
Cash/Bcash.

Not only that, it stops the drama of Bitcoin Core devs from "being in
control" of consensus. The market will choose, you just create the safest
way for users to participate. The market is consensus. Rough consensus is
just the conversation starter.


On Thu, 4 Mar 2021, 1:39 am Chris Belcher via bitcoin-dev, <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> The bitcoin world is close to total gridlock on the question of how to
> activate taproot. There's no agreement on activation[1][2], and if an
> agreement isn't reached then nothing happens. That would be really
> terrible because we'd miss out on the benefits of taproot and
> potentially other future soft forks.
>
> A major problem with BIP8 is that it would result to a situation where
> different parts of the bitcoin ecosystem run different consensus rules.
> Some people will run LOT=true and others LOT=false. Worst of all, it
> becomes vulnerable to a twitter/reddit/social media blitz which could
> attempt to move the date of miner activation around.
>
> Twitter and reddit drama provide a perfect cover for social attacks on
> bitcoin.
>
> Forced signalling leads to brinksmanship. Where two or more sides
> (backed up by social media drama) enter into a game of chicken with
> deployed nodes. If one of them doesn't concede then we get a damaging
> chain split. And the $1 trillion in value that the bitcoin network
> protects is put at risk. From the point of view of a miner or big
> exchange stuck in the middle, if they look at the ecosystem of twitter
> and reddit (especially if you think about all the problems with bots and
> sockpuppets) they have no idea which consensus rules they should
> actually follow and exactly what date they take effect. Miners,
> exchanges, merchants and the rest of the ecosystem exist to serve their
> customers and users, and trouble happens when they don't know what their
> customers really want. Social media attacks are not just a theoretical
> concern; back during the block size drama, the bitcoin reddits were
> targetted by bots, sockpuppets and brigading[3].
>
> Enter flag day activation. With a flag day there can be no
> brinksmanship. A social media blitz cant do anything except have its own
> followers fork away. Crucially, miner signalling cant be used to change
> the activation date for nodes that didn't choose to and just passively
> follow signalling. Changing the activation date requires all those users
> to actually run different node software.
>
> Flag day activation works simply: we choose a block height and after
> that block height the new taproot rules become enforced.
>
>
> Supporters of the permissionless, "users rule" approach of LOT=true
> should be happy because it completely takes miners out of activation.
>
> Supporters of the safe, conservative approach of LOT=false can be made
> happy with a few ways of derisking:
>
> * Getting mining pools, businesses and users to look at the code and ask
> if they (a) think its either neutral or good for their business or use
> case and (b) they believe others view it similarly and that the
> consensus changes proposed have a good social consensus around them.
>
> * Setting the flag day far in the future (18 months or 2 years in the
> original proposal[3]).
>
>
> == What if flag day activation is used maliciously? ==
>
> What if one day the Core developer team is co-opted and uses the flag
> day method to do something bad? For example, a soft fork where sending
> to certain blacklisted addresses is not allowed. The bitcoin user
> community who wants to resist this can create their own
> counter-soft-fork full node, where the first block after the flag day
> MUST pay to one of those addresses on the blacklist. This forces a chain
> split between the censorship rules and the no-censorship rules, and its
> pretty obvious that the real bitcoin which most people follow will be
> the chain without censorship.
>
> For example, if a group of users didn't agree with taproot then they
> could create their own counter-flag-day-activation which requires that a
> transaction is included that does an invalid-spend from a taproot output
> in the first block after the flag day height.
>
> This is always possible with any user activated soft fork. In BIP8
> LOT=true it could be done by rejecting block headers with certain
> version bits signalled.
>
>
> == But it will take so long! ==
>
> We seem to be at a deadlock now. This will take less time than any other
> method, because other methods might never happen. BIP8 is dead and from
> what I see there's no other credible plan.
>
> We've already waited years for taproot. I remember listening to talks
> about bitcoin from 2015 of people discussing Schnorr signatures. And
> given how slow segwit and p2sh adoption were its pretty likely that
> we'll waiting a while for taproot to be actually adopted.
>
>
> == A social media blitz could still try to activate it early ==
>
> The brinksmanship only works because miner signalling can make many
> other nodes activate early, even if those other nodes didn't do
> anything. There can't be a game of chicken that puts the bitcoin network
> at risk.
>
> If a group of people did adopt alternative node software which has a
> shorter flag day, they actually have a risk of slow blocks. Because they
> cant trick or force any other nodes to come along with them, they are
> likely to only have a small economy and therefore would lose a lot of
> hashrate. Imagine trading bitcoins for cash in person and instead of
> waiting 10 minutes for a confirmation you have to wait 3 hours because
> the blocks are slow.
>
> Also, the argument for downloading and running a different software only
> to speed up activation is pretty weak. Taproot would activate in ~18
> months, so why are you so impatient that you need it in 6 months? And
> risk slow blocks for you while doing so? The big difference with BIP148
> the segwit UASF, is that people *had to* run some other software
> otherwise they would get *no soft fork at all*.
>
>
> == Without miner signalling how do we know the new rules are even
> activated? ==
>
> When did you see miners signalling their support for the inflation
> schedule?
>
> Bitcoin's rules are enforced by wallets backed by full nodes. You'll
> always know if your own full node is enforcing the new rules. The thing
> that matters isnt miner signalling but your own full node, and the nodes
> of those you trade with.
>
> Flag day activation is quite similar to the way block reward halvenings
> work. At and after block height 630000 miners are only allowed to create
> 6.25 BTC rather than 12.5 BTC. Everyone knows that if miners continued
> to create 12.5 BTC or more they would be unable to sell or spend those
> coins anywhere.
>
> In 2017 when segwit was being activated people created a huge list of
> various bitcoin companies, merchants and wallets:
>
> https://web.archive.org/web/20171228111943/https://bitcoincore.org/en/segwit_adoption/
> Looking at that list, you would know that if someone stole coins from a
> segwit address they would be unable to deposit them in many exchanges
> and merchants: Bitrefill, Bitstamp, Kraken, Localbitcoins, Paxful,
> Vaultoro, HitBTC, etc.
>
> Then what happened is only a month after S2X was beaten this guy moved
> 40000 BTC to a segwit address, confident about the power of the network
> to protect his coins.
>
> https://old.reddit.com/r/Bitcoin/comments/7tcmi4/bitcointalks_famous_user_loaded_moved_his_40k_btc/
>
> If there's ever any doubt about flag day activation we can always draw
> up a similar list, although if there's broad consensus about it then
> there's no reason why bitcoin businesses wouldn't upgrade to the latest
> Core, like they did with every other previous soft fork.
>
>
> == This gives the impression that Core developers control the protocol ==
>
> This objection has a mirror image argument: BIP8 with LOT=false gives
> the impression that miners control the protocol(!)
>
> Eventually some group has to make a decision. We will ask the bitcoin
> economy and users what they think of flag day activation. It's pretty
> clear that nobody seriously objects to taproot, and as described above
> if Core developers did something evil the community could resist it with
> a counter-flag-day-activation.
>
>
>
> == TL;DR ==
>
> I believe flag day activation is the way forward. It should answer all
> the objections and risks which make other methods too controversial.
> Let's go ahead and bring taproot to bitcoin!
>
>
>
> == References ==
>
> [1] -
>
> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018498.html
>       luke-jr posts saying LOT=false in his view reintroduces a bug, he
> compares it to introducing an inflation bug and just hoping that miners
> will not exploit it.
>
> [2] -
>
> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018425.html
>       This whole thread has many people disagreeing with LOT=true
>
> [3] -
>
> https://old.reddit.com/r/Bitcoin/comments/4biob5/research_into_instantaneous_vote_behavior_in/
>
>
> https://old.reddit.com/r/Bitcoin/comments/3v04pd/can_we_please_have_a_civil_discussion_about/cxjnz1d/?context=1
>
>
> https://old.reddit.com/r/Bitcoin/comments/41ykkt/members_trying_to_destroy_bitcoin_on_this_thread/cz6ccka/?context=3
>
> [4] -
>
> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018495.html
>       Matt Corallo's flag day activation proposal
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210304/8c0b88e9/attachment.html>

From eric at voskuil.org  Thu Mar  4 23:45:11 2021
From: eric at voskuil.org (Eric Voskuil)
Date: Thu, 4 Mar 2021 15:45:11 -0800
Subject: [bitcoin-dev] Making the case for flag day activation of taproot
In-Reply-To: <CACrzPemtN4+fJ7ALAr=BvsMjmE8nXbOY4COyT-XdBMQbBy5r4Q@mail.gmail.com>
References: <CACrzPemtN4+fJ7ALAr=BvsMjmE8nXbOY4COyT-XdBMQbBy5r4Q@mail.gmail.com>
Message-ID: <847E2B79-4215-4528-A494-C676457B03F8@voskuil.org>

Mike was wrong about a number of things, and in the end decided that Bitcoin was pointless, as people could not defend it against the state. He used this as the basis for his defense of large blocks and centralized mining. When that didn?t work out he quit, to work on centralized systems.

People can of course do what they want, but unnecessarily splitting from the existing chain reduces utility, which seems counterproductive. BCH is a good example of this.

Compatibility isn?t ?dangerous?. Old nodes don?t need to know what new nodes are doing. If the person operating one needs to validate a taproot payment to himself, he would have to upgrade. Otherwise it?s of no consequence, his node is economic (relevant) only in relation to the legacy payments he receives, which he can continue to validate.

e

> On Mar 4, 2021, at 15:22, Vincent Truong via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> ?
> 
> I must remind everyone of Mike Hearn's proposal not many years ago, which ought to be on everyone's mind right now. "Every soft fork should be a hard fork, and that soft forks are inherently dangerous because old nodes are tricked to not know what the new nodes are doing" (paraphrased). Whether taproot is dangerous is not the issue; whether old nodes should or should not ignore new rules, is.
> 
> Flag day activation of a soft fork is basically proposing a hard fork, but without saying or doing it at full commitment. May as well just do a flag day hard fork.
> 
> Bitcoin Cash/Bcash has already tested for you how a market driven hard fork should work. Bitcoin didn't die. We should be learning from the mistakes made in those early hard forks to not repeat them when Bitcoin hard forks - like having replay protection written before deployment.
> 
> If it's not evident within the first 6-12 blocks which fork is winning, then the market will trade it out. Just like what happened with Bitcoin Cash/Bcash.
> 
> Not only that, it stops the drama of Bitcoin Core devs from "being in control" of consensus. The market will choose, you just create the safest way for users to participate. The market is consensus. Rough consensus is just the conversation starter.
> 
> 
>> On Thu, 4 Mar 2021, 1:39 am Chris Belcher via bitcoin-dev, <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> The bitcoin world is close to total gridlock on the question of how to
>> activate taproot. There's no agreement on activation[1][2], and if an
>> agreement isn't reached then nothing happens. That would be really
>> terrible because we'd miss out on the benefits of taproot and
>> potentially other future soft forks.
>> 
>> A major problem with BIP8 is that it would result to a situation where
>> different parts of the bitcoin ecosystem run different consensus rules.
>> Some people will run LOT=true and others LOT=false. Worst of all, it
>> becomes vulnerable to a twitter/reddit/social media blitz which could
>> attempt to move the date of miner activation around.
>> 
>> Twitter and reddit drama provide a perfect cover for social attacks on
>> bitcoin.
>> 
>> Forced signalling leads to brinksmanship. Where two or more sides
>> (backed up by social media drama) enter into a game of chicken with
>> deployed nodes. If one of them doesn't concede then we get a damaging
>> chain split. And the $1 trillion in value that the bitcoin network
>> protects is put at risk. From the point of view of a miner or big
>> exchange stuck in the middle, if they look at the ecosystem of twitter
>> and reddit (especially if you think about all the problems with bots and
>> sockpuppets) they have no idea which consensus rules they should
>> actually follow and exactly what date they take effect. Miners,
>> exchanges, merchants and the rest of the ecosystem exist to serve their
>> customers and users, and trouble happens when they don't know what their
>> customers really want. Social media attacks are not just a theoretical
>> concern; back during the block size drama, the bitcoin reddits were
>> targetted by bots, sockpuppets and brigading[3].
>> 
>> Enter flag day activation. With a flag day there can be no
>> brinksmanship. A social media blitz cant do anything except have its own
>> followers fork away. Crucially, miner signalling cant be used to change
>> the activation date for nodes that didn't choose to and just passively
>> follow signalling. Changing the activation date requires all those users
>> to actually run different node software.
>> 
>> Flag day activation works simply: we choose a block height and after
>> that block height the new taproot rules become enforced.
>> 
>> 
>> Supporters of the permissionless, "users rule" approach of LOT=true
>> should be happy because it completely takes miners out of activation.
>> 
>> Supporters of the safe, conservative approach of LOT=false can be made
>> happy with a few ways of derisking:
>> 
>> * Getting mining pools, businesses and users to look at the code and ask
>> if they (a) think its either neutral or good for their business or use
>> case and (b) they believe others view it similarly and that the
>> consensus changes proposed have a good social consensus around them.
>> 
>> * Setting the flag day far in the future (18 months or 2 years in the
>> original proposal[3]).
>> 
>> 
>> == What if flag day activation is used maliciously? ==
>> 
>> What if one day the Core developer team is co-opted and uses the flag
>> day method to do something bad? For example, a soft fork where sending
>> to certain blacklisted addresses is not allowed. The bitcoin user
>> community who wants to resist this can create their own
>> counter-soft-fork full node, where the first block after the flag day
>> MUST pay to one of those addresses on the blacklist. This forces a chain
>> split between the censorship rules and the no-censorship rules, and its
>> pretty obvious that the real bitcoin which most people follow will be
>> the chain without censorship.
>> 
>> For example, if a group of users didn't agree with taproot then they
>> could create their own counter-flag-day-activation which requires that a
>> transaction is included that does an invalid-spend from a taproot output
>> in the first block after the flag day height.
>> 
>> This is always possible with any user activated soft fork. In BIP8
>> LOT=true it could be done by rejecting block headers with certain
>> version bits signalled.
>> 
>> 
>> == But it will take so long! ==
>> 
>> We seem to be at a deadlock now. This will take less time than any other
>> method, because other methods might never happen. BIP8 is dead and from
>> what I see there's no other credible plan.
>> 
>> We've already waited years for taproot. I remember listening to talks
>> about bitcoin from 2015 of people discussing Schnorr signatures. And
>> given how slow segwit and p2sh adoption were its pretty likely that
>> we'll waiting a while for taproot to be actually adopted.
>> 
>> 
>> == A social media blitz could still try to activate it early ==
>> 
>> The brinksmanship only works because miner signalling can make many
>> other nodes activate early, even if those other nodes didn't do
>> anything. There can't be a game of chicken that puts the bitcoin network
>> at risk.
>> 
>> If a group of people did adopt alternative node software which has a
>> shorter flag day, they actually have a risk of slow blocks. Because they
>> cant trick or force any other nodes to come along with them, they are
>> likely to only have a small economy and therefore would lose a lot of
>> hashrate. Imagine trading bitcoins for cash in person and instead of
>> waiting 10 minutes for a confirmation you have to wait 3 hours because
>> the blocks are slow.
>> 
>> Also, the argument for downloading and running a different software only
>> to speed up activation is pretty weak. Taproot would activate in ~18
>> months, so why are you so impatient that you need it in 6 months? And
>> risk slow blocks for you while doing so? The big difference with BIP148
>> the segwit UASF, is that people *had to* run some other software
>> otherwise they would get *no soft fork at all*.
>> 
>> 
>> == Without miner signalling how do we know the new rules are even
>> activated? ==
>> 
>> When did you see miners signalling their support for the inflation schedule?
>> 
>> Bitcoin's rules are enforced by wallets backed by full nodes. You'll
>> always know if your own full node is enforcing the new rules. The thing
>> that matters isnt miner signalling but your own full node, and the nodes
>> of those you trade with.
>> 
>> Flag day activation is quite similar to the way block reward halvenings
>> work. At and after block height 630000 miners are only allowed to create
>> 6.25 BTC rather than 12.5 BTC. Everyone knows that if miners continued
>> to create 12.5 BTC or more they would be unable to sell or spend those
>> coins anywhere.
>> 
>> In 2017 when segwit was being activated people created a huge list of
>> various bitcoin companies, merchants and wallets:
>> https://web.archive.org/web/20171228111943/https://bitcoincore.org/en/segwit_adoption/
>> Looking at that list, you would know that if someone stole coins from a
>> segwit address they would be unable to deposit them in many exchanges
>> and merchants: Bitrefill, Bitstamp, Kraken, Localbitcoins, Paxful,
>> Vaultoro, HitBTC, etc.
>> 
>> Then what happened is only a month after S2X was beaten this guy moved
>> 40000 BTC to a segwit address, confident about the power of the network
>> to protect his coins.
>> https://old.reddit.com/r/Bitcoin/comments/7tcmi4/bitcointalks_famous_user_loaded_moved_his_40k_btc/
>> 
>> If there's ever any doubt about flag day activation we can always draw
>> up a similar list, although if there's broad consensus about it then
>> there's no reason why bitcoin businesses wouldn't upgrade to the latest
>> Core, like they did with every other previous soft fork.
>> 
>> 
>> == This gives the impression that Core developers control the protocol ==
>> 
>> This objection has a mirror image argument: BIP8 with LOT=false gives
>> the impression that miners control the protocol(!)
>> 
>> Eventually some group has to make a decision. We will ask the bitcoin
>> economy and users what they think of flag day activation. It's pretty
>> clear that nobody seriously objects to taproot, and as described above
>> if Core developers did something evil the community could resist it with
>> a counter-flag-day-activation.
>> 
>> 
>> 
>> == TL;DR ==
>> 
>> I believe flag day activation is the way forward. It should answer all
>> the objections and risks which make other methods too controversial.
>> Let's go ahead and bring taproot to bitcoin!
>> 
>> 
>> 
>> == References ==
>> 
>> [1] -
>> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018498.html
>>       luke-jr posts saying LOT=false in his view reintroduces a bug, he
>> compares it to introducing an inflation bug and just hoping that miners
>> will not exploit it.
>> 
>> [2] -
>> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018425.html
>>       This whole thread has many people disagreeing with LOT=true
>> 
>> [3] -
>> https://old.reddit.com/r/Bitcoin/comments/4biob5/research_into_instantaneous_vote_behavior_in/
>> 
>> https://old.reddit.com/r/Bitcoin/comments/3v04pd/can_we_please_have_a_civil_discussion_about/cxjnz1d/?context=1
>> 
>> https://old.reddit.com/r/Bitcoin/comments/41ykkt/members_trying_to_destroy_bitcoin_on_this_thread/cz6ccka/?context=3
>> 
>> [4] -
>> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018495.html
>>       Matt Corallo's flag day activation proposal
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210304/c4f49241/attachment-0001.html>

From loneroassociation at gmail.com  Thu Mar  4 23:42:40 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Thu, 4 Mar 2021 18:42:40 -0500
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST Datastore
 for Energy Efficient Mining
Message-ID: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>

Hello, I want to start a new BIP proposal aiming to tackle some of the
energy efficiency issues w/ Bitcoin mining. Excuse my ignorance given this
is my first time making a BIP proposal, but is there a specific format I
need to follow? Do I just make a draft on my personal GitHub or need to
attach the README?

Anyways my idea is centered around a hybrid mining integration w/ POW/PoST
for BTC's SHA-256 hash algorithm. The integration is actually a
cryptography proof. While I would prefer a soft fork integration, a vastly
different cryptography proof without affecting the current node integration
is less than feasible.

Anyways, I do want to submit my document explaining everything and how all
this would work. I am mostly a Quantum Engineer and Bioinformatics
consultant for a living, so I think what I can propose to an extent may be
of interest to some.

Best regards,
Andrew M. K. Nassief
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210304/08d19bfa/attachment.html>

From bitcoin-dev at rgrant.org  Fri Mar  5 13:42:22 2021
From: bitcoin-dev at rgrant.org (Ryan Grant)
Date: Fri, 5 Mar 2021 13:42:22 +0000
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
Message-ID: <CAMnpzfop8ttqjMAKoS37zpQV6WiZfi1Bn+y_e-HaepTiD4Vm1Q@mail.gmail.com>

On Fri, Mar 5, 2021 at 9:39 AM Lonero Foundation via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> Hello, I want to start a new BIP proposal aiming to tackle some of
> the energy efficiency issues w/ Bitcoin mining. Excuse my ignorance
> given this is my first time making a BIP proposal, but is there a
> specific format I need to follow?

Hi Andrew,

I would like to discourage you from writing a BIP on this topic, as
any such proposal is guaranteed to be rejected based on prior
discussions in the community.

Please update your priors with the following:

  https://github.com/bitcoin/bips/blob/master/bip-0002.mediawiki
    BIP: 2
    Title: BIP process, revised

  https://www.truthcoin.info/blog/pow-cheapest/
    "Nothing is Cheaper than Proof of Work"
    on | 04 Aug 2015

Your topic brings up an interesting edge case, which is whether the
BIP repository is an open forum for all possible arguments that are
technically well constructed.  Obviously: no; but by what
non-arbitrary process do we decide?

I propose that the BIP Editor's role should include preserving signal
in the table of contents generated from our proposal repository, by
unilaterally rejecting - without any fuhrer comment - technically well
constructed proposals which are guaranteed to be rejected based on
prior discussions in the community, as spam.  I think this is already
how it works, but we haven't actually written down this part of the
norms.

Since censorship is always a concern, it would be appropriate to
maintain a moderation log of spam BIPs, so that observers could judge
whether the BIP Editor is misusing the BIP assignment process to
censor proposals with some merit.  Since one of the requirements for
submitting a BIP is to notify bitcoin-dev, the log is already
maintained.  Since bitcoin-dev is moderated, the moderators take on a
low level of responsibility for gauging spam proposals (and they are
pretty relaxed about it, since it is better to err on the side of
inclusion for new developers, except for obvious patent bombing).
Since the bitcoin-dev moderation log is public and anyone can
subscribe to it, protective transparency is again achieved.

  https://lists.ozlabs.org/pipermail/bitcoin-dev-moderation/

From bitcoin-dev at rgrant.org  Fri Mar  5 14:04:40 2021
From: bitcoin-dev at rgrant.org (Ryan Grant)
Date: Fri, 5 Mar 2021 14:04:40 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <SL2P216MB00893A9FE7A43CDC373197889D979@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
 <fbc4ce6c-111d-4dcc-8fc7-03ea91855bc4@www.fastmail.com>
 <SL2P216MB00899B7B3C67C0DD9E9376B09D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <CAJowKg+UY4AN_9otk+6doNsP6NVeHZti_89rCAOTfVaQahre+A@mail.gmail.com>
 <SL2P216MB00893A9FE7A43CDC373197889D979@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
Message-ID: <CAMnpzfpJSy6Jib_467c7zhE02cSNhjG7T8ASJ=X-b_j4F1Zmgg@mail.gmail.com>

On Thu, Mar 4, 2021 at 8:48 PM LORD HIS EXCELLENCY JAMES HRMH via
bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> My concern was that the more complex scripts allow obfuscation of the Pay To address

This is no different from options available in P2SH, or from the
obfuscation achieved by generating a new address for a payment.

From bitcoin-dev at rgrant.org  Fri Mar  5 14:51:12 2021
From: bitcoin-dev at rgrant.org (Ryan Grant)
Date: Fri, 5 Mar 2021 14:51:12 +0000
Subject: [bitcoin-dev] Making the case for flag day activation of taproot
In-Reply-To: <CALeFGL2oh5WZi0y64Q0-FjANE8W3GoBrXFNo=9a1OpjcssT30w@mail.gmail.com>
References: <3286a7eb-9deb-77d6-4527-58e0c5882ae2@riseup.net>
 <CAMZUoKkWmdwi-VH3WUvFfG+5MDK3xhvZUac3eBQbxXX_b_btWw@mail.gmail.com>
 <4947b02e-90fb-9044-4552-767de805ff14@mattcorallo.com>
 <CAMZUoKmTL+2GMpv8Qr5uOUC2bMgyuzMPw1zjdjuD+XNE23-65A@mail.gmail.com>
 <CALeFGL2oh5WZi0y64Q0-FjANE8W3GoBrXFNo=9a1OpjcssT30w@mail.gmail.com>
Message-ID: <CAMnpzfrTkP=9JXHg2+1Xz03q34w-YoB_Nff5trw9OyqOSqB_0A@mail.gmail.com>

On Thu, Mar 4, 2021 at 7:32 PM Keagan McClelland via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> So that leads me to believe here that the folks who oppose LOT=true
> primarily have an issue with forced signaling, which personally I
> don't care about as much, not the idea of committing to a UASF from
> the get go.

The biggest disconnect is between two goals: modern soft-fork
activation's "Don't (needlessly) lose hashpower to un-upgraded
miners"; and UASF's must-signal strategy to prevent inaction.

  https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017547.html

This question dives to the heart of Bitcoin's far-out future.
Of two important principles, which principle is more important:

  - to allow everyone (even miners) to operate on the contract they
    accepted when entering the system; or

  - to protect against protocol sclerosis for the project as a whole?

Do miners have a higher obligation to evaluate upgrades than economic
nodes implementing cold storage and infrequent spends?  If they do,
then so far it has been implicit.  LOT=true would make that obligation
explicit.

From loneroassociation at gmail.com  Fri Mar  5 15:12:19 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Fri, 5 Mar 2021 10:12:19 -0500
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CAB0O3SVNyr_t23Y0LyT0mSaf6LONFRLYJ8qzO7rcdJFnrGccFw@mail.gmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CAMnpzfop8ttqjMAKoS37zpQV6WiZfi1Bn+y_e-HaepTiD4Vm1Q@mail.gmail.com>
 <CAB0O3SVNyr_t23Y0LyT0mSaf6LONFRLYJ8qzO7rcdJFnrGccFw@mail.gmail.com>
Message-ID: <CA+YkXXwkSCu=2UOEhzFBzGDHo1c=Ewqsnxp632ke3jdH1ff5WA@mail.gmail.com>

Hi, this isn't about the energy efficient argument in regards to renewables
or mining devices but a better cryptography layer to get the most out of
your hashing for validation. I do understand the arbitrariness of it, but
do want to still propose a document. Do I use the Media Wiki format on
GitHub and just attach it as my proposal?

Best regards, Andrew

On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net> wrote:

> Hi Ryan and Andrew,
>
> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>>
>>   https://www.truthcoin.info/blog/pow-cheapest/
>>     "Nothing is Cheaper than Proof of Work"
>>     on | 04 Aug 2015
>>
>>
> Just to belabor this a bit, the paper demonstrates that the mining market
> will tend to expend resources equivalent to miner reward.  It does not
> prove that mining work has to expend *energy* as a primary cost.
>
> Some might argue that energy expenditure has negative externalities and
> that we should move to other resources.  I would argue that the negative
> externalities will go away soon because of the move to renewables, so the
> point is likely moot.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210305/c345b12f/attachment.html>

From luke at dashjr.org  Fri Mar  5 18:17:40 2021
From: luke at dashjr.org (Luke Dashjr)
Date: Fri, 5 Mar 2021 18:17:40 +0000
Subject: [bitcoin-dev] Making the case for flag day activation of taproot
In-Reply-To: <CAMnpzfrTkP=9JXHg2+1Xz03q34w-YoB_Nff5trw9OyqOSqB_0A@mail.gmail.com>
References: <3286a7eb-9deb-77d6-4527-58e0c5882ae2@riseup.net>
 <CALeFGL2oh5WZi0y64Q0-FjANE8W3GoBrXFNo=9a1OpjcssT30w@mail.gmail.com>
 <CAMnpzfrTkP=9JXHg2+1Xz03q34w-YoB_Nff5trw9OyqOSqB_0A@mail.gmail.com>
Message-ID: <202103051817.40615.luke@dashjr.org>

On Friday 05 March 2021 14:51:12 Ryan Grant via bitcoin-dev wrote:
> On Thu, Mar 4, 2021 at 7:32 PM Keagan McClelland via bitcoin-dev
>
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > So that leads me to believe here that the folks who oppose LOT=true
> > primarily have an issue with forced signaling, which personally I
> > don't care about as much, not the idea of committing to a UASF from
> > the get go.
>
> The biggest disconnect is between two goals: modern soft-fork
> activation's "Don't (needlessly) lose hashpower to un-upgraded
> miners"; and UASF's must-signal strategy to prevent inaction.
>
>  
> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017547
>.html
>
> This question dives to the heart of Bitcoin's far-out future.
> Of two important principles, which principle is more important:
>
>   - to allow everyone (even miners) to operate on the contract they
>     accepted when entering the system; or

There was never any such a contract. Even full nodes must upgrade in a 
softfork, or they lose their security and become comparable to light wallets.

>   - to protect against protocol sclerosis for the project as a whole?

What?

> Do miners have a higher obligation to evaluate upgrades than economic
> nodes implementing cold storage and infrequent spends?  If they do,
> then so far it has been implicit.  LOT=true would make that obligation
> explicit.

Miners either make valid blocks or they don't.
The only thing they "need" to evaluate is the market for their work.

Luke

From loneroassociation at gmail.com  Fri Mar  5 16:16:13 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Fri, 5 Mar 2021 11:16:13 -0500
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CA+YkXXwkSCu=2UOEhzFBzGDHo1c=Ewqsnxp632ke3jdH1ff5WA@mail.gmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CAMnpzfop8ttqjMAKoS37zpQV6WiZfi1Bn+y_e-HaepTiD4Vm1Q@mail.gmail.com>
 <CAB0O3SVNyr_t23Y0LyT0mSaf6LONFRLYJ8qzO7rcdJFnrGccFw@mail.gmail.com>
 <CA+YkXXwkSCu=2UOEhzFBzGDHo1c=Ewqsnxp632ke3jdH1ff5WA@mail.gmail.com>
Message-ID: <CA+YkXXwfS7eer5Za_ed9tCNdfOp4c3nV_X=mfXzoDxMm6BrizQ@mail.gmail.com>

Also in regards to my other email, I forgot to iterate that my cryptography
proposal helps behind the efficiency category but also tackles problems
such as NP-Completeness or Halting which is something the BTC network could
be vulnerable to in the future. For sake of simplicity, I do want to do
this BIP because it tackles lots of the issues in regards to this manner
and can provide useful insight to the community. If things such as bigger
block height have been proposed as hard forks, I feel at the very least an
upgrade regarding the hashing algorithm and cryptography does at least
warrant some discussion. Anyways I hope I can send you my BIP, just let me
know on the preferred format?

Best regards, Andrew

On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <loneroassociation at gmail.com>
wrote:

> Hi, this isn't about the energy efficient argument in regards to
> renewables or mining devices but a better cryptography layer to get the
> most out of your hashing for validation. I do understand the arbitrariness
> of it, but do want to still propose a document. Do I use the Media Wiki
> format on GitHub and just attach it as my proposal?
>
> Best regards, Andrew
>
> On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net> wrote:
>
>> Hi Ryan and Andrew,
>>
>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>>>
>>>   https://www.truthcoin.info/blog/pow-cheapest/
>>>     "Nothing is Cheaper than Proof of Work"
>>>     on | 04 Aug 2015
>>>
>>>
>> Just to belabor this a bit, the paper demonstrates that the mining market
>> will tend to expend resources equivalent to miner reward.  It does not
>> prove that mining work has to expend *energy* as a primary cost.
>>
>> Some might argue that energy expenditure has negative externalities and
>> that we should move to other resources.  I would argue that the negative
>> externalities will go away soon because of the move to renewables, so the
>> point is likely moot.
>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210305/a6a1e694/attachment-0001.html>

From eric at voskuil.org  Fri Mar  5 20:53:02 2021
From: eric at voskuil.org (Eric Voskuil)
Date: Fri, 5 Mar 2021 12:53:02 -0800
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
	Datastore for Energy Efficient Mining
Message-ID: <E2C43378-B527-4C36-8726-E7E2BC380B3B@voskuil.org>

?Hi Andrew,

Do you mean that you can reduce the cost of executing the cryptography at a comparable level of security? If so this will only have the effect of increasing the amount of it that is required to consume the same cost.

https://github.com/libbitcoin/libbitcoin-system/wiki/Efficiency-Paradox

You mentioned a staking hybrid in your original post.

https://github.com/libbitcoin/libbitcoin-system/wiki/Hybrid-Mining-Fallacy

This would be a change to dynamics - the economic forces at work. Staking is not censorship resistant

https://github.com/libbitcoin/libbitcoin-system/wiki/Proof-of-Stake-Fallacy

and is therefore what I refer to as cryptodynamically insecure.

https://github.com/libbitcoin/libbitcoin-system/wiki/Cryptodynamic-Principles

As such it wouldn?t likely be considered as a contribution to Bitcoin. It might of course be useful in some other context.

https://github.com/libbitcoin/libbitcoin-system/wiki/Shitcoin-Definition

But BIPs are proposals aimed at Bitcoin improvement.

https://github.com/bitcoin/bips/blob/master/bip-0001.mediawiki#What_is_a_BIP

Non-staking attempts to improve energy efficiency are either proof of work in disguise, such as proof of memory:

https://github.com/libbitcoin/libbitcoin-system/wiki/Proof-of-Memory-Fallacy

or attempts to repurpose ?wasteful? computing, such as by finding prime numbers, which does not imply a reduction in dedicated energy consumption.

https://github.com/libbitcoin/libbitcoin-system/wiki/Dedicated-Cost-Principle

Finally, waste and renewable energy approaches at ?carbon? (vs energy) reduction must still consume the same in cost as the reward. In other words, the apparent benefit represents a temporary market shift, with advantage to first movers. The market will still consume what it consumes. If the hashing energy was free all reward consumption would shift to operations.

https://github.com/libbitcoin/libbitcoin-system/wiki/Byproduct-Mining-Fallacy

The motivation behind these attempts is naively understandable, but based on a false premise.

https://github.com/libbitcoin/libbitcoin-system/wiki/Energy-Waste-Fallacy

The one thing that reduces Bitcoin energy consumption is an increase in energy cost relative to block reward.

https://github.com/libbitcoin/libbitcoin-system/wiki/Energy-Exhaustion-Fallacy

e

> On Mar 5, 2021, at 07:30, Lonero Foundation via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> ?
> Hi, this isn't about the energy efficient argument in regards to renewables or mining devices but a better cryptography layer to get the most out of your hashing for validation. I do understand the arbitrariness of it, but do want to still propose a document. Do I use the Media Wiki format on GitHub and just attach it as my proposal?
> 
> Best regards, Andrew
> 
> On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net> wrote:
>> Hi Ryan and Andrew,
>> 
>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>> 
>>>   https://www.truthcoin.info/blog/pow-cheapest/
>>>     "Nothing is Cheaper than Proof of Work"
>>>     on | 04 Aug 2015
>> 
>> Just to belabor this a bit, the paper demonstrates that the mining market will tend to expend resources equivalent to miner reward.  It does not prove that mining work has to expend *energy* as a primary cost.
>> 
>> Some might argue that energy expenditure has negative externalities and that we should move to other resources.  I would argue that the negative externalities will go away soon because of the move to renewables, so the point is likely moot. 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210305/a6aaba91/attachment.html>

From keagan.mcclelland at gmail.com  Fri Mar  5 21:11:02 2021
From: keagan.mcclelland at gmail.com (Keagan McClelland)
Date: Fri, 5 Mar 2021 14:11:02 -0700
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CA+YkXXwfS7eer5Za_ed9tCNdfOp4c3nV_X=mfXzoDxMm6BrizQ@mail.gmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CAMnpzfop8ttqjMAKoS37zpQV6WiZfi1Bn+y_e-HaepTiD4Vm1Q@mail.gmail.com>
 <CAB0O3SVNyr_t23Y0LyT0mSaf6LONFRLYJ8qzO7rcdJFnrGccFw@mail.gmail.com>
 <CA+YkXXwkSCu=2UOEhzFBzGDHo1c=Ewqsnxp632ke3jdH1ff5WA@mail.gmail.com>
 <CA+YkXXwfS7eer5Za_ed9tCNdfOp4c3nV_X=mfXzoDxMm6BrizQ@mail.gmail.com>
Message-ID: <CALeFGL31M5DAULLRtCwjPYHaPVqsVqREUg6WQ2-cuj23SNk=BA@mail.gmail.com>

It is important to understand that it is critical for the work to be
"useless" in order for the security model to be the same. If the work was
useful it provides an avenue for actors to have nothing at stake when
submitting a proof of work, since the marginal cost of block construction
will be lessened by the fact that the work was useful in a different
context and therefore would have been done anyway. This actually degrades
the security of the network in the process.

As a separate issue, proposing a hard fork in the hashing algorithm will
invalidate the enormous amount of capital expenditure by mining entities
and disincentivize future capital expenditure into mining hardware that may
compute these more "useful" proofs of work. This is because any change in
the POW algorithm will be considered unstable and subject to change in the
future. This puts the entire network at even more risk meaning that no
entity is tying their own interests to that of the bitcoin network at
large. It also puts the developers in a position where they can be bribed
by entities with a vested interest in deciding what the new "useful" proof
of work should be.

All of these things make the Bitcoin network worse off.

Keagan

On Fri, Mar 5, 2021 at 1:48 PM Lonero Foundation via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Also in regards to my other email, I forgot to iterate that my
> cryptography proposal helps behind the efficiency category but also tackles
> problems such as NP-Completeness or Halting which is something the BTC
> network could be vulnerable to in the future. For sake of simplicity, I do
> want to do this BIP because it tackles lots of the issues in regards to
> this manner and can provide useful insight to the community. If things such
> as bigger block height have been proposed as hard forks, I feel at the very
> least an upgrade regarding the hashing algorithm and cryptography does at
> least warrant some discussion. Anyways I hope I can send you my BIP, just
> let me know on the preferred format?
>
> Best regards, Andrew
>
> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <
> loneroassociation at gmail.com> wrote:
>
>> Hi, this isn't about the energy efficient argument in regards to
>> renewables or mining devices but a better cryptography layer to get the
>> most out of your hashing for validation. I do understand the arbitrariness
>> of it, but do want to still propose a document. Do I use the Media Wiki
>> format on GitHub and just attach it as my proposal?
>>
>> Best regards, Andrew
>>
>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net>
>> wrote:
>>
>>> Hi Ryan and Andrew,
>>>
>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <
>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>
>>>>
>>>>   https://www.truthcoin.info/blog/pow-cheapest/
>>>>     "Nothing is Cheaper than Proof of Work"
>>>>     on | 04 Aug 2015
>>>>
>>>>
>>> Just to belabor this a bit, the paper demonstrates that the mining
>>> market will tend to expend resources equivalent to miner reward.  It does
>>> not prove that mining work has to expend *energy* as a primary cost.
>>>
>>> Some might argue that energy expenditure has negative externalities and
>>> that we should move to other resources.  I would argue that the negative
>>> externalities will go away soon because of the move to renewables, so the
>>> point is likely moot.
>>>
>>> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210305/24e78df4/attachment-0001.html>

From loneroassociation at gmail.com  Fri Mar  5 21:21:12 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Fri, 5 Mar 2021 16:21:12 -0500
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CALeFGL31M5DAULLRtCwjPYHaPVqsVqREUg6WQ2-cuj23SNk=BA@mail.gmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CAMnpzfop8ttqjMAKoS37zpQV6WiZfi1Bn+y_e-HaepTiD4Vm1Q@mail.gmail.com>
 <CAB0O3SVNyr_t23Y0LyT0mSaf6LONFRLYJ8qzO7rcdJFnrGccFw@mail.gmail.com>
 <CA+YkXXwkSCu=2UOEhzFBzGDHo1c=Ewqsnxp632ke3jdH1ff5WA@mail.gmail.com>
 <CA+YkXXwfS7eer5Za_ed9tCNdfOp4c3nV_X=mfXzoDxMm6BrizQ@mail.gmail.com>
 <CALeFGL31M5DAULLRtCwjPYHaPVqsVqREUg6WQ2-cuj23SNk=BA@mail.gmail.com>
Message-ID: <CA+YkXXwBMG6YUAhf-2U5EV5Ep5RgG2foc9chramNFN5=AQ=-EA@mail.gmail.com>

Actually I mentioned a proof of space and time hybrid which is much
different than staking. Sorry to draw for the confusion as PoC is more
commonly used then PoST.
There is a way to make PoC cryptographically compatible w/ Proof of Work as
it normally stands: https://en.wikipedia.org/wiki/Proof_of_space
It has rarely been done though given the technological complexity of being
both CPU compatible and memory-hard compatible. There are lots of benefits
outside of the realm of efficiency, and I already looked into numerous
fault tolerant designs as well and what others in the cryptography
community attempted to propose. The actual argument you have only against
this is the Proof of Memory fallacy, which is only partially true. Given
how the current hashing algorithm works, hard memory allocation wouldn't be
of much benefit given it is more optimized for CPU/ASIC specific mining.
I'm working towards a hybrid mechanism that fixes that. BTW: The way
Bitcoin currently stands in its cryptography still needs updating
regardless. If someone figures out NP hardness or the halting problem the
traditional rule of millions of years to break all of Bitcoin's
cryptography now comes down to minutes. Bitcoin is going to have to
eventually radically upgrade their cryptography and hashing algo in the
future regardless. I want to integrate some form of NP complexity in
regards to the hybrid cryptography I'm aiming to provide which includes a
polynomial time algorithm in the cryptography. More than likely the first
version of my BTC hard fork will be coded in a way where integrating such
complexity in the future only requires a soft fork or minor upgrade to its
chain.

In regards to the argument, "As a separate issue, proposing a hard fork in
the hashing algorithm will invalidate the enormous amount of capital
expenditure by mining entities and disincentivize future capital
expenditure into mining hardware that may compute these more "useful"
proofs of work."

A large portion of BTC is already mined through AWS servers and non-asic
specific hardware anyways. A majority of them would benefit from a hybrid
proof, and the fact that it is hybrid in that manner wouldn't
disenfranchise currently optimized mining entities as well.

There are other reasons why a cryptography upgrade like this is beneficial.
Theoretically one can argue BItcoin isn't fully decentralized. It is few
unsolved mathematical proofs away from being entirely broken. My goal
outside of efficiency is to build cryptography in a way that prevents such
an event from happening in the future, if it was to ever happen. I have
various research in regards to this area and work alot with distributed
computing. I believe if the BTC community likes such a proposal, I would
single handedly be able to build the cryptographic proof myself (though
would like as many open source contributors as I can get :)

Anyways just something to consider. We are in the same space in regards to
what warrants a shitcoin or the whole argument against staking.
https://hackernoon.com/ethereum-you-are-a-centralized-cryptocurrency-stop-telling-us-that-you-arent-pi3s3yjl

Best regards,  Andrew

On Fri, Mar 5, 2021 at 4:11 PM Keagan McClelland <
keagan.mcclelland at gmail.com> wrote:

> It is important to understand that it is critical for the work to be
> "useless" in order for the security model to be the same. If the work was
> useful it provides an avenue for actors to have nothing at stake when
> submitting a proof of work, since the marginal cost of block construction
> will be lessened by the fact that the work was useful in a different
> context and therefore would have been done anyway. This actually degrades
> the security of the network in the process.
>
> As a separate issue, proposing a hard fork in the hashing algorithm will
> invalidate the enormous amount of capital expenditure by mining entities
> and disincentivize future capital expenditure into mining hardware that may
> compute these more "useful" proofs of work. This is because any change in
> the POW algorithm will be considered unstable and subject to change in the
> future. This puts the entire network at even more risk meaning that no
> entity is tying their own interests to that of the bitcoin network at
> large. It also puts the developers in a position where they can be bribed
> by entities with a vested interest in deciding what the new "useful" proof
> of work should be.
>
> All of these things make the Bitcoin network worse off.
>
> Keagan
>
> On Fri, Mar 5, 2021 at 1:48 PM Lonero Foundation via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> Also in regards to my other email, I forgot to iterate that my
>> cryptography proposal helps behind the efficiency category but also tackles
>> problems such as NP-Completeness or Halting which is something the BTC
>> network could be vulnerable to in the future. For sake of simplicity, I do
>> want to do this BIP because it tackles lots of the issues in regards to
>> this manner and can provide useful insight to the community. If things such
>> as bigger block height have been proposed as hard forks, I feel at the very
>> least an upgrade regarding the hashing algorithm and cryptography does at
>> least warrant some discussion. Anyways I hope I can send you my BIP, just
>> let me know on the preferred format?
>>
>> Best regards, Andrew
>>
>> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <
>> loneroassociation at gmail.com> wrote:
>>
>>> Hi, this isn't about the energy efficient argument in regards to
>>> renewables or mining devices but a better cryptography layer to get the
>>> most out of your hashing for validation. I do understand the arbitrariness
>>> of it, but do want to still propose a document. Do I use the Media Wiki
>>> format on GitHub and just attach it as my proposal?
>>>
>>> Best regards, Andrew
>>>
>>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net>
>>> wrote:
>>>
>>>> Hi Ryan and Andrew,
>>>>
>>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <
>>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>
>>>>>
>>>>>   https://www.truthcoin.info/blog/pow-cheapest/
>>>>>     "Nothing is Cheaper than Proof of Work"
>>>>>     on | 04 Aug 2015
>>>>>
>>>>>
>>>> Just to belabor this a bit, the paper demonstrates that the mining
>>>> market will tend to expend resources equivalent to miner reward.  It does
>>>> not prove that mining work has to expend *energy* as a primary cost.
>>>>
>>>> Some might argue that energy expenditure has negative externalities and
>>>> that we should move to other resources.  I would argue that the negative
>>>> externalities will go away soon because of the move to renewables, so the
>>>> point is likely moot.
>>>>
>>>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210305/686f42d2/attachment-0001.html>

From loneroassociation at gmail.com  Fri Mar  5 22:03:21 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Fri, 5 Mar 2021 17:03:21 -0500
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <12480994-451A-4256-8EFA-4741B3EC2006@voskuil.org>
References: <CA+YkXXzfEyeXYMyPKL20S+2VVRZVuHRT6eRgX56FBgG_A+uVSw@mail.gmail.com>
 <12480994-451A-4256-8EFA-4741B3EC2006@voskuil.org>
Message-ID: <CA+YkXXxzURKiD5r9ATG8CefRzyh9CKzF4Cwzd3-Mr5v5XrzinA@mail.gmail.com>

Hi, Eric. Chia's network is a bad example. They go after energy consumption
in the wrong way entirely. True, it requires a comparable cost of hardware.
I am trying to tackle cryptography in a way that goes much beyond that.
Part of what I am doing includes lowering invalided proofs while trying to
get the best of both worlds in regards to PoW and PoC. It is an efficiency
issue to the core. In regards to the mechanisms of how I will do that, I
suggest you look at the entire proposal which is why I am hoping the BIP
team would be so gracious as to allow me to draft it out on GitHub.

Best regards, Andrew

On Fri, Mar 5, 2021, 4:42 PM Eric Voskuil <eric at voskuil.org> wrote:

> How is the argument against PoM only partially true?
>
> I wrote this as soon as I saw Chia. Had two debates on Twitter with Brahm,
> before he blocked me. Two years later, after they finally realized I was
> correct, one of their PhDs contacted me and told me. Better to flesh this
> out early. They had already raised $20 and done their research, so he
> wasn?t exactly in a listening mode.
>
> e
>
> On Mar 5, 2021, at 13:20, Lonero Foundation <loneroassociation at gmail.com>
> wrote:
>
> ?
> Actually I mentioned a proof of space and time hybrid which is much
> different than staking. Sorry to draw for the confusion as PoC is more
> commonly used then PoST.
> There is a way to make PoC cryptographically compatible w/ Proof of Work
> as it normally stands: https://en.wikipedia.org/wiki/Proof_of_space
> It has rarely been done though given the technological complexity of being
> both CPU compatible and memory-hard compatible. There are lots of benefits
> outside of the realm of efficiency, and I already looked into numerous
> fault tolerant designs as well and what others in the cryptography
> community attempted to propose. The actual argument you have only against
> this is the Proof of Memory fallacy, which is only partially true. Given
> how the current hashing algorithm works, hard memory allocation wouldn't be
> of much benefit given it is more optimized for CPU/ASIC specific mining.
> I'm working towards a hybrid mechanism that fixes that. BTW: The way
> Bitcoin currently stands in its cryptography still needs updating
> regardless. If someone figures out NP hardness or the halting problem the
> traditional rule of millions of years to break all of Bitcoin's
> cryptography now comes down to minutes. Bitcoin is going to have to
> eventually radically upgrade their cryptography and hashing algo in the
> future regardless. I want to integrate some form of NP complexity in
> regards to the hybrid cryptography I'm aiming to provide which includes a
> polynomial time algorithm in the cryptography. More than likely the first
> version of my BTC hard fork will be coded in a way where integrating such
> complexity in the future only requires a soft fork or minor upgrade to its
> chain.
>
> In regards to the argument, "As a separate issue, proposing a hard fork in
> the hashing algorithm will invalidate the enormous amount of capital
> expenditure by mining entities and disincentivize future capital
> expenditure into mining hardware that may compute these more "useful"
> proofs of work."
>
> A large portion of BTC is already mined through AWS servers and non-asic
> specific hardware anyways. A majority of them would benefit from a hybrid
> proof, and the fact that it is hybrid in that manner wouldn't
> disenfranchise currently optimized mining entities as well.
>
> There are other reasons why a cryptography upgrade like this is
> beneficial. Theoretically one can argue BItcoin isn't fully decentralized.
> It is few unsolved mathematical proofs away from being entirely broken. My
> goal outside of efficiency is to build cryptography in a way that prevents
> such an event from happening in the future, if it was to ever happen. I
> have various research in regards to this area and work alot with
> distributed computing. I believe if the BTC community likes such a
> proposal, I would single handedly be able to build the cryptographic proof
> myself (though would like as many open source contributors as I can get :)
>
> Anyways just something to consider. We are in the same space in regards to
> what warrants a shitcoin or the whole argument against staking.
>
> https://hackernoon.com/ethereum-you-are-a-centralized-cryptocurrency-stop-telling-us-that-you-arent-pi3s3yjl
>
> Best regards,  Andrew
>
> On Fri, Mar 5, 2021 at 3:53 PM Eric Voskuil <eric at voskuil.org> wrote:
>
>> ?Hi Andrew,
>>
>> Do you mean that you can reduce the cost of executing the cryptography at
>> a comparable level of security? If so this will only have the effect of
>> increasing the amount of it that is required to consume the same cost.
>>
>> https://github.com/libbitcoin/libbitcoin-system/wiki/Efficiency-Paradox
>>
>> You mentioned a staking hybrid in your original post.
>>
>> https://github.com/libbitcoin/libbitcoin-system/wiki/Hybrid-Mining-Fallacy
>>
>> This would be a change to dynamics - the economic forces at work. Staking
>> is not censorship resistant
>>
>>
>> https://github.com/libbitcoin/libbitcoin-system/wiki/Proof-of-Stake-Fallacy
>>
>> and is therefore what I refer to as cryptodynamically insecure.
>>
>>
>> https://github.com/libbitcoin/libbitcoin-system/wiki/Cryptodynamic-Principles
>>
>> As such it wouldn?t likely be considered as a contribution to Bitcoin. It
>> might of course be useful in some other context.
>>
>> https://github.com/libbitcoin/libbitcoin-system/wiki/Shitcoin-Definition
>>
>> But BIPs are proposals aimed at Bitcoin improvement.
>>
>>
>> https://github.com/bitcoin/bips/blob/master/bip-0001.mediawiki#What_is_a_BIP
>>
>> Non-staking attempts to improve energy efficiency are either proof of
>> work in disguise, such as proof of memory:
>>
>>
>> https://github.com/libbitcoin/libbitcoin-system/wiki/Proof-of-Memory-Fallacy
>>
>> or attempts to repurpose ?wasteful? computing, such as by finding prime
>> numbers, which does not imply a reduction in dedicated energy
>> consumption.
>>
>>
>> https://github.com/libbitcoin/libbitcoin-system/wiki/Dedicated-Cost-Principle
>>
>> Finally, waste and renewable energy approaches at ?carbon? (vs energy)
>> reduction must still consume the same in cost as the reward. In other
>> words, the apparent benefit represents a temporary market shift, with
>> advantage to first movers. The market will still consume what it consumes.
>> If the hashing energy was free all reward consumption would shift to
>> operations.
>>
>>
>> https://github.com/libbitcoin/libbitcoin-system/wiki/Byproduct-Mining-Fallacy
>>
>> The motivation behind these attempts is naively understandable, but based
>> on a false premise.
>>
>> https://github.com/libbitcoin/libbitcoin-system/wiki/Energy-Waste-Fallacy
>>
>> The one thing that reduces Bitcoin energy consumption is an increase in
>> energy cost relative to block reward.
>>
>>
>> https://github.com/libbitcoin/libbitcoin-system/wiki/Energy-Exhaustion-Fallacy
>>
>> e
>>
>> On Mar 5, 2021, at 07:30, Lonero Foundation via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>> ?
>> Hi, this isn't about the energy efficient argument in regards to
>> renewables or mining devices but a better cryptography layer to get the
>> most out of your hashing for validation. I do understand the arbitrariness
>> of it, but do want to still propose a document. Do I use the Media Wiki
>> format on GitHub and just attach it as my proposal?
>>
>> Best regards, Andrew
>>
>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net>
>> wrote:
>>
>>> Hi Ryan and Andrew,
>>>
>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <
>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>
>>>>
>>>>   https://www.truthcoin.info/blog/pow-cheapest/
>>>>     "Nothing is Cheaper than Proof of Work"
>>>>     on | 04 Aug 2015
>>>>
>>>>
>>> Just to belabor this a bit, the paper demonstrates that the mining
>>> market will tend to expend resources equivalent to miner reward.  It does
>>> not prove that mining work has to expend *energy* as a primary cost.
>>>
>>> Some might argue that energy expenditure has negative externalities and
>>> that we should move to other resources.  I would argue that the negative
>>> externalities will go away soon because of the move to renewables, so the
>>> point is likely moot.
>>>
>>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210305/13a6ebae/attachment-0001.html>

From eric at voskuil.org  Fri Mar  5 22:49:57 2021
From: eric at voskuil.org (Eric Voskuil)
Date: Fri, 5 Mar 2021 14:49:57 -0800
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
	Datastore for Energy Efficient Mining
In-Reply-To: <CA+YkXXxzURKiD5r9ATG8CefRzyh9CKzF4Cwzd3-Mr5v5XrzinA@mail.gmail.com>
References: <CA+YkXXxzURKiD5r9ATG8CefRzyh9CKzF4Cwzd3-Mr5v5XrzinA@mail.gmail.com>
Message-ID: <974C7CF0-5087-4120-B860-35FAEF39EA95@voskuil.org>

FYI it?s generally considered bad form repost a private thread, especially one you initiate.

...

It?s typically more effective to generate some community support before actually submitting a BIP. Otherwise the process gets easily overwhelmed. This is likely why you aren?t getting a response. You can draft the BIP in your own repo and collect feedback from interested parties.

Posting a link to your research/code is a good start. I?d be happy to look at an overview of the central principles. I?m not a cryptographer. I write code, but I look at these things from economic principles. So far all I have to go on is that you go ?much beyond? Chia. That?s not really anything.

e

> On Mar 5, 2021, at 14:03, Lonero Foundation <loneroassociation at gmail.com> wrote:
> 
> ?
> Hi, Eric. Chia's network is a bad example. They go after energy consumption in the wrong way entirely. True, it requires a comparable cost of hardware. I am trying to tackle cryptography in a way that goes much beyond that. Part of what I am doing includes lowering invalided proofs while trying to get the best of both worlds in regards to PoW and PoC. It is an efficiency issue to the core. In regards to the mechanisms of how I will do that, I suggest you look at the entire proposal which is why I am hoping the BIP team would be so gracious as to allow me to draft it out on GitHub.
> 
> Best regards, Andrew
> 
>> On Fri, Mar 5, 2021, 4:42 PM Eric Voskuil <eric at voskuil.org> wrote:
>> How is the argument against PoM only partially true?
>> 
>> I wrote this as soon as I saw Chia. Had two debates on Twitter with Brahm, before he blocked me. Two years later, after they finally realized I was correct, one of their PhDs contacted me and told me. Better to flesh this out early. They had already raised $20 and done their research, so he wasn?t exactly in a listening mode.
>> 
>> e
>> 
>>>> On Mar 5, 2021, at 13:20, Lonero Foundation <loneroassociation at gmail.com> wrote:
>>>> 
>>> ?
>>> Actually I mentioned a proof of space and time hybrid which is much different than staking. Sorry to draw for the confusion as PoC is more commonly used then PoST.
>>> There is a way to make PoC cryptographically compatible w/ Proof of Work as it normally stands: https://en.wikipedia.org/wiki/Proof_of_space
>>> It has rarely been done though given the technological complexity of being both CPU compatible and memory-hard compatible. There are lots of benefits outside of the realm of efficiency, and I already looked into numerous fault tolerant designs as well and what others in the cryptography community attempted to propose. The actual argument you have only against this is the Proof of Memory fallacy, which is only partially true. Given how the current hashing algorithm works, hard memory allocation wouldn't be of much benefit given it is more optimized for CPU/ASIC specific mining. I'm working towards a hybrid mechanism that fixes that. BTW: The way Bitcoin currently stands in its cryptography still needs updating regardless. If someone figures out NP hardness or the halting problem the traditional rule of millions of years to break all of Bitcoin's cryptography now comes down to minutes. Bitcoin is going to have to eventually radically upgrade their cryptography and hashing algo in the future regardless. I want to integrate some form of NP complexity in regards to the hybrid cryptography I'm aiming to provide which includes a polynomial time algorithm in the cryptography. More than likely the first version of my BTC hard fork will be coded in a way where integrating such complexity in the future only requires a soft fork or minor upgrade to its chain.
>>> 
>>> In regards to the argument, "As a separate issue, proposing a hard fork in the hashing algorithm will invalidate the enormous amount of capital expenditure by mining entities and disincentivize future capital expenditure into mining hardware that may compute these more "useful" proofs of work."
>>> 
>>> A large portion of BTC is already mined through AWS servers and non-asic specific hardware anyways. A majority of them would benefit from a hybrid proof, and the fact that it is hybrid in that manner wouldn't disenfranchise currently optimized mining entities as well.
>>> 
>>> There are other reasons why a cryptography upgrade like this is beneficial. Theoretically one can argue BItcoin isn't fully decentralized. It is few unsolved mathematical proofs away from being entirely broken. My goal outside of efficiency is to build cryptography in a way that prevents such an event from happening in the future, if it was to ever happen. I have various research in regards to this area and work alot with distributed computing. I believe if the BTC community likes such a proposal, I would single handedly be able to build the cryptographic proof myself (though would like as many open source contributors as I can get :)
>>> 
>>> Anyways just something to consider. We are in the same space in regards to what warrants a shitcoin or the whole argument against staking.
>>> https://hackernoon.com/ethereum-you-are-a-centralized-cryptocurrency-stop-telling-us-that-you-arent-pi3s3yjl
>>> 
>>> Best regards,  Andrew
>>> 
>>>> On Fri, Mar 5, 2021 at 3:53 PM Eric Voskuil <eric at voskuil.org> wrote:
>>>> ?Hi Andrew,
>>>> 
>>>> Do you mean that you can reduce the cost of executing the cryptography at a comparable level of security? If so this will only have the effect of increasing the amount of it that is required to consume the same cost.
>>>> 
>>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Efficiency-Paradox
>>>> 
>>>> You mentioned a staking hybrid in your original post.
>>>> 
>>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Hybrid-Mining-Fallacy
>>>> 
>>>> This would be a change to dynamics - the economic forces at work. Staking is not censorship resistant
>>>> 
>>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Proof-of-Stake-Fallacy
>>>> 
>>>> and is therefore what I refer to as cryptodynamically insecure.
>>>> 
>>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Cryptodynamic-Principles
>>>> 
>>>> As such it wouldn?t likely be considered as a contribution to Bitcoin. It might of course be useful in some other context.
>>>> 
>>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Shitcoin-Definition
>>>> 
>>>> But BIPs are proposals aimed at Bitcoin improvement.
>>>> 
>>>> https://github.com/bitcoin/bips/blob/master/bip-0001.mediawiki#What_is_a_BIP
>>>> 
>>>> Non-staking attempts to improve energy efficiency are either proof of work in disguise, such as proof of memory:
>>>> 
>>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Proof-of-Memory-Fallacy
>>>> 
>>>> or attempts to repurpose ?wasteful? computing, such as by finding prime numbers, which does not imply a reduction in dedicated energy consumption.
>>>> 
>>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Dedicated-Cost-Principle
>>>> 
>>>> Finally, waste and renewable energy approaches at ?carbon? (vs energy) reduction must still consume the same in cost as the reward. In other words, the apparent benefit represents a temporary market shift, with advantage to first movers. The market will still consume what it consumes. If the hashing energy was free all reward consumption would shift to operations.
>>>> 
>>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Byproduct-Mining-Fallacy
>>>> 
>>>> The motivation behind these attempts is naively understandable, but based on a false premise.
>>>> 
>>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Energy-Waste-Fallacy
>>>> 
>>>> The one thing that reduces Bitcoin energy consumption is an increase in energy cost relative to block reward.
>>>> 
>>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Energy-Exhaustion-Fallacy
>>>> 
>>>> e
>>>> 
>>>>>> On Mar 5, 2021, at 07:30, Lonero Foundation via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>>> 
>>>>> ?
>>>>> Hi, this isn't about the energy efficient argument in regards to renewables or mining devices but a better cryptography layer to get the most out of your hashing for validation. I do understand the arbitrariness of it, but do want to still propose a document. Do I use the Media Wiki format on GitHub and just attach it as my proposal?
>>>>> 
>>>>> Best regards, Andrew
>>>>> 
>>>>>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net> wrote:
>>>>>> Hi Ryan and Andrew,
>>>>>> 
>>>>>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>>>> 
>>>>>>>   https://www.truthcoin.info/blog/pow-cheapest/
>>>>>>>     "Nothing is Cheaper than Proof of Work"
>>>>>>>     on | 04 Aug 2015
>>>>>>> 
>>>>>> 
>>>>>> Just to belabor this a bit, the paper demonstrates that the mining market will tend to expend resources equivalent to miner reward.  It does not prove that mining work has to expend *energy* as a primary cost.
>>>>>> 
>>>>>> Some might argue that energy expenditure has negative externalities and that we should move to other resources.  I would argue that the negative externalities will go away soon because of the move to renewables, so the point is likely moot. 
>>>>>> 
>>>>> _______________________________________________
>>>>> bitcoin-dev mailing list
>>>>> bitcoin-dev at lists.linuxfoundation.org
>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210305/20099e8b/attachment-0001.html>

From dave at dtrt.org  Sat Mar  6 03:43:43 2021
From: dave at dtrt.org (David A. Harding)
Date: Fri, 5 Mar 2021 17:43:43 -1000
Subject: [bitcoin-dev] Taproot activation proposal "Speedy Trial"
Message-ID: <20210306034343.fhwrxmq6gbb2os5m@ganymede>

On the ##taproot-activation IRC channel, Russell O'Connor recently
proposed a modification of the "Let's see what happens" activation
proposal.[1] The idea received significant discussion and seemed
acceptable to several people who could not previously agree on a
proposal (although this doesn't necessarily make it their first
choice).  The following is my attempt at a description.

1. Start soon: shortly after the release of software containing this
   proposed activation logic, nodes will begin counting blocks towards
   the 90% threshold required to lock in taproot.[2]

2. Stop soon: if the lockin threshold isn't reached within approximately
   three months, the activation attempt fails.  There is no mandatory
   activation and everyone is encouraged to try again using different
   activation parameters.
   
2. Delayed activation: in the happy occasion where the lockin threshold
   is reached, taproot is guaranteed to eventually activate---but not
   until approximately six months after signal tracking started.

## Example timeline

(All dates approximate; see the section below about BIP9 vs BIP8.)

- T+0: release of one or more full nodes with activation code
- T+14: signal tracking begins
- T+28: earliest possible lock in
- T+104: locked in by this date or need to try a different activation process
- T+194: activation (if lockin occurred)

## Analysis

The goal of Speedy Trial is to allow a taproot activation attempt to
either quickly succeed or quickly fail---without compromising safety in
either case.  Details below:

### Mitigating the problems of early success

New rules added in a soft fork need to be enforced by a large part of
the economy or there's a risk that a long chain of blocks breaking the
rules will be accepted by some users and rejected by others, causing a
chain split that can result in large direct losses to transaction
receivers and potentially even larger indirect losses to holders due to
reduced confidence in the safety of the Bitcoin system.

One step developers have taken in the past to ensure widespread adoption
of new consensus rules is programming in a delay between the time software
with those rules is expected to be released and when the software starts
tracking which blocks signal for activation.  For example:

    Soft fork        | Release    | Start      | Delta 
    -----------------+------------+------------+----------
    BIP68 (v0.12.1)  | 2016-04-15 | 2016-05-11 | 26 days 
    BIP141 (v0.13.1) | 2016-10-27 | 2016-11-18 | 24 days

    Sources: BitcoinCore.org, https://gist.github.com/ajtowns/1c5e3b8bdead01124c04c45f01c817bc

Speedy Trial replaces most of that upfront delay with a backend delay.
No matter how fast taproot's activation threshold is reached by miners,
there will be six months between the time signal tracking starts and when
nodes will begin enforcing taproot's rules.  This gives the userbase even
more time to upgrade than if we had used the most recently proposed start
date for a BIP8 activation (~July 23rd).[2] 

### Succeed, or fail fast

The earlier version of this proposal was documented over 200 days ago[3]
and taproot's underlying code was merged into Bitcoin Core over 140 days
ago.[4]  If we had started Speedy Trial at the time taproot
was merged (which is a bit unrealistic), we would've either be less than
two months away from having taproot or we would have moved on to the
next activation attempt over a month ago.

Instead, we've debated at length and don't appear to be any closer to
what I think is a widely acceptable solution than when the mailing list
began discussing post-segwit activation schemes over a year ago.[5]  I
think Speedy Trial is a way to generate fast progress that will either
end the debate (for now, if activation is successful) or give us some
actual data upon which to base future taproot activation proposals.

Of course, for those who enjoy the debate, discussion can continue while
waiting for the results of Speedy Trial.

### Base activation protocol

The idea can be implemented on top of either Bitcoin Core's existing
BIP9 code or its proposed BIP8 patchset.[6]

- BIP9 uses two time-based[7] parameters, starttime and timeout.  Using
  these values plus a time-based parameter for the minimum activation
  delay would give three months for miners to activate taproot, but some
  of that time near the start or the end might not be usable due to
  signals only being measured in full retarget periods.  However, the
  six month time for users to upgrade their node would be not be
  affected by either slow or fast block production.
  
    BIP9 is already part of Bitcoin Core and I think the changes being
    proposed would be relatively small, resulting in a small patch that
    could be easy to review.

- BIP8 uses two height-based parameters, startheight and timeoutheight.
  Using height values would ensure miners had a certain number of
  retarget periods (6) to lock in taproot and that there'd be a certain
  number of blocks (about 24,000) until activation, although latest lock
  in and expected activation could occur moderately earlier or later
  than the estimated three and six months.
  
    BIP8 would likely be used if Speedy Trial fails, so it could be
    advantageous to base this proposal on BIP8 so that we gain
    experience running that code in production.

For additional discussion about using times versus heights, see today's
log for ##taproot-activation.[11]

### Additional concerns

- Encourages false signaling: false signaling is when miners signal
  readiness to enforce rules that their nodes don't actually support.
  This was partially responsible for a six-block reorg shortly after the
  final BIP66 activation[8] and was found to still be a problem during
  the BIP68 lockin period despite BIP9 being designed to avoid it.[9]

  Because Speedy Trial only gives miners a maximum of three months to
  signal support for taproot, it may encourage such false signaling.  If
  taproot locks in as a result of their signaling but most of them fail
  to upgrade by the activation date several months later, unprepared
  miners could lose large amounts of money and users could see long
  reorgs (with unupgraded nodes and SPV lite clients potentially losing
  money).

  Compared to other activation proposals, I think the only difference is
  Speedy Trial's short timeline.  False signaling is possible with any
  other proposal and the same problems can occur if miners fail to
  upgrade for any mandatory activation.

### Additional advantages

- No mandatory signaling: at no time are miners required to signal by
  Speedy Trial.  This includes no mandatory signaling during the
  locked_in period(s), although such signaling will be encouraged (as it
  was with BIP9[10]).

- Party time: to a lesser degree, a benefit mentioned for flag day
  activation may also apply here: we could get up to six months
  advanced notice of taproot activation, allowing users, developers, and
  organizations to prepare software, announcements, and celebrations for
  that event.

## Implementation details and next steps

Initial discussion about implementation may be found in today's
##taproot-activation log.[11] If it appears Speedy Trial may have
traction, Russell O'Connor has offered to work on a patch against BIP8
implementing it.

## Acknowledgments

The original idea for a short-duration attempt was discussed in the
##taproot-activation IRC channel last July and the revised idea saw
additional evaluation there this week.  Despite growing frustration,
discussion has been overwhelmingly constructive, for which all the
contributors should be commended.  Although this should not in any way
imply endorsement, I'm grateful for the review and comments on a draft
of this email by Adam Gibson, Andrew Chow, Anthony Towns, Chris Belcher,
Jeremy Rubin, Jonas Nick, Luke Dashjr, Michael Folkson, Russell
O'Connor, and IRC users maybehuman and proofofkeags

## Footnotes

[1] https://en.bitcoin.it/wiki/Taproot_activation_proposals#Let.E2.80.99s_see_what_happens.2C_BIP8.28false.2C_3m.29

[2] A threshold of 1,815/2,016 blocks (90%) in a single retarget period
    seemed to have near-universal support during the 2021-02-16 IRC
    meeting.  See: https://en.bitcoin.it/wiki/Taproot_activation_proposal_202102

[3] https://en.bitcoin.it/w/index.php?title=Taproot_activation_proposals&oldid=68062

[4] https://github.com/bitcoin/bitcoin/pull/19953

[5] https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017547.html

[6] https://github.com/bitcoin/bitcoin/pull/19573

[7] BIP9's times are based on the median of the past 11 blocks, which
    usually trails UTC by about 90 minutes but which can trail behind
    realtime significantly if miners are doing weird things.

[8] https://en.bitcoin.it/wiki/July_2015_chain_forks

[9] https://buildingbitcoin.org/bitcoin-core-dev/log-2016-06-21.html#l-32

[10] https://github.com/bitcoin/bitcoin/blob/ed25cb58f605ba583c735f330482df0bf9348f3a/src/test/versionbits_tests.cpp#L337-L339

[11] http://gnusha.org/taproot-activation/2021-03-05.log
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210305/5c5b4037/attachment.sig>

From jlrubin at mit.edu  Sat Mar  6 04:44:33 2021
From: jlrubin at mit.edu (Jeremy)
Date: Fri, 5 Mar 2021 20:44:33 -0800
Subject: [bitcoin-dev] Taproot activation proposal "Speedy Trial"
In-Reply-To: <20210306034343.fhwrxmq6gbb2os5m@ganymede>
References: <20210306034343.fhwrxmq6gbb2os5m@ganymede>
Message-ID: <CAD5xwhjOFUPpXZ97CWSSpngEiAt7tmTikS+==-0AKbHPzEXieg@mail.gmail.com>

Thank you for resurfacing and collating this concept.

At this time I don't see major issues with this course of action and think
it represents not only a reasonable compromise between all different
perspectives, but also gives us an opportunity to learn more about less
'slow' yet safe consensus upgrades. In particular, I am very happy to see
the earliest activation concept included.

Best,

Jeremy
--
@JeremyRubin <https://twitter.com/JeremyRubin>
<https://twitter.com/JeremyRubin>


On Fri, Mar 5, 2021 at 7:44 PM David A. Harding via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On the ##taproot-activation IRC channel, Russell O'Connor recently
> proposed a modification of the "Let's see what happens" activation
> proposal.[1] The idea received significant discussion and seemed
> acceptable to several people who could not previously agree on a
> proposal (although this doesn't necessarily make it their first
> choice).  The following is my attempt at a description.
>
> 1. Start soon: shortly after the release of software containing this
>    proposed activation logic, nodes will begin counting blocks towards
>    the 90% threshold required to lock in taproot.[2]
>
> 2. Stop soon: if the lockin threshold isn't reached within approximately
>    three months, the activation attempt fails.  There is no mandatory
>    activation and everyone is encouraged to try again using different
>    activation parameters.
>
> 2. Delayed activation: in the happy occasion where the lockin threshold
>    is reached, taproot is guaranteed to eventually activate---but not
>    until approximately six months after signal tracking started.
>
> ## Example timeline
>
> (All dates approximate; see the section below about BIP9 vs BIP8.)
>
> - T+0: release of one or more full nodes with activation code
> - T+14: signal tracking begins
> - T+28: earliest possible lock in
> - T+104: locked in by this date or need to try a different activation
> process
> - T+194: activation (if lockin occurred)
>
> ## Analysis
>
> The goal of Speedy Trial is to allow a taproot activation attempt to
> either quickly succeed or quickly fail---without compromising safety in
> either case.  Details below:
>
> ### Mitigating the problems of early success
>
> New rules added in a soft fork need to be enforced by a large part of
> the economy or there's a risk that a long chain of blocks breaking the
> rules will be accepted by some users and rejected by others, causing a
> chain split that can result in large direct losses to transaction
> receivers and potentially even larger indirect losses to holders due to
> reduced confidence in the safety of the Bitcoin system.
>
> One step developers have taken in the past to ensure widespread adoption
> of new consensus rules is programming in a delay between the time software
> with those rules is expected to be released and when the software starts
> tracking which blocks signal for activation.  For example:
>
>     Soft fork        | Release    | Start      | Delta
>     -----------------+------------+------------+----------
>     BIP68 (v0.12.1)  | 2016-04-15 | 2016-05-11 | 26 days
>     BIP141 (v0.13.1) | 2016-10-27 | 2016-11-18 | 24 days
>
>     Sources: BitcoinCore.org,
> https://gist.github.com/ajtowns/1c5e3b8bdead01124c04c45f01c817bc
>
> Speedy Trial replaces most of that upfront delay with a backend delay.
> No matter how fast taproot's activation threshold is reached by miners,
> there will be six months between the time signal tracking starts and when
> nodes will begin enforcing taproot's rules.  This gives the userbase even
> more time to upgrade than if we had used the most recently proposed start
> date for a BIP8 activation (~July 23rd).[2]
>
> ### Succeed, or fail fast
>
> The earlier version of this proposal was documented over 200 days ago[3]
> and taproot's underlying code was merged into Bitcoin Core over 140 days
> ago.[4]  If we had started Speedy Trial at the time taproot
> was merged (which is a bit unrealistic), we would've either be less than
> two months away from having taproot or we would have moved on to the
> next activation attempt over a month ago.
>
> Instead, we've debated at length and don't appear to be any closer to
> what I think is a widely acceptable solution than when the mailing list
> began discussing post-segwit activation schemes over a year ago.[5]  I
> think Speedy Trial is a way to generate fast progress that will either
> end the debate (for now, if activation is successful) or give us some
> actual data upon which to base future taproot activation proposals.
>
> Of course, for those who enjoy the debate, discussion can continue while
> waiting for the results of Speedy Trial.
>
> ### Base activation protocol
>
> The idea can be implemented on top of either Bitcoin Core's existing
> BIP9 code or its proposed BIP8 patchset.[6]
>
> - BIP9 uses two time-based[7] parameters, starttime and timeout.  Using
>   these values plus a time-based parameter for the minimum activation
>   delay would give three months for miners to activate taproot, but some
>   of that time near the start or the end might not be usable due to
>   signals only being measured in full retarget periods.  However, the
>   six month time for users to upgrade their node would be not be
>   affected by either slow or fast block production.
>
>     BIP9 is already part of Bitcoin Core and I think the changes being
>     proposed would be relatively small, resulting in a small patch that
>     could be easy to review.
>
> - BIP8 uses two height-based parameters, startheight and timeoutheight.
>   Using height values would ensure miners had a certain number of
>   retarget periods (6) to lock in taproot and that there'd be a certain
>   number of blocks (about 24,000) until activation, although latest lock
>   in and expected activation could occur moderately earlier or later
>   than the estimated three and six months.
>
>     BIP8 would likely be used if Speedy Trial fails, so it could be
>     advantageous to base this proposal on BIP8 so that we gain
>     experience running that code in production.
>
> For additional discussion about using times versus heights, see today's
> log for ##taproot-activation.[11]
>
> ### Additional concerns
>
> - Encourages false signaling: false signaling is when miners signal
>   readiness to enforce rules that their nodes don't actually support.
>   This was partially responsible for a six-block reorg shortly after the
>   final BIP66 activation[8] and was found to still be a problem during
>   the BIP68 lockin period despite BIP9 being designed to avoid it.[9]
>
>   Because Speedy Trial only gives miners a maximum of three months to
>   signal support for taproot, it may encourage such false signaling.  If
>   taproot locks in as a result of their signaling but most of them fail
>   to upgrade by the activation date several months later, unprepared
>   miners could lose large amounts of money and users could see long
>   reorgs (with unupgraded nodes and SPV lite clients potentially losing
>   money).
>
>   Compared to other activation proposals, I think the only difference is
>   Speedy Trial's short timeline.  False signaling is possible with any
>   other proposal and the same problems can occur if miners fail to
>   upgrade for any mandatory activation.
>
> ### Additional advantages
>
> - No mandatory signaling: at no time are miners required to signal by
>   Speedy Trial.  This includes no mandatory signaling during the
>   locked_in period(s), although such signaling will be encouraged (as it
>   was with BIP9[10]).
>
> - Party time: to a lesser degree, a benefit mentioned for flag day
>   activation may also apply here: we could get up to six months
>   advanced notice of taproot activation, allowing users, developers, and
>   organizations to prepare software, announcements, and celebrations for
>   that event.
>
> ## Implementation details and next steps
>
> Initial discussion about implementation may be found in today's
> ##taproot-activation log.[11] If it appears Speedy Trial may have
> traction, Russell O'Connor has offered to work on a patch against BIP8
> implementing it.
>
> ## Acknowledgments
>
> The original idea for a short-duration attempt was discussed in the
> ##taproot-activation IRC channel last July and the revised idea saw
> additional evaluation there this week.  Despite growing frustration,
> discussion has been overwhelmingly constructive, for which all the
> contributors should be commended.  Although this should not in any way
> imply endorsement, I'm grateful for the review and comments on a draft
> of this email by Adam Gibson, Andrew Chow, Anthony Towns, Chris Belcher,
> Jeremy Rubin, Jonas Nick, Luke Dashjr, Michael Folkson, Russell
> O'Connor, and IRC users maybehuman and proofofkeags
>
> ## Footnotes
>
> [1]
> https://en.bitcoin.it/wiki/Taproot_activation_proposals#Let.E2.80.99s_see_what_happens.2C_BIP8.28false.2C_3m.29
>
> [2] A threshold of 1,815/2,016 blocks (90%) in a single retarget period
>     seemed to have near-universal support during the 2021-02-16 IRC
>     meeting.  See:
> https://en.bitcoin.it/wiki/Taproot_activation_proposal_202102
>
> [3]
> https://en.bitcoin.it/w/index.php?title=Taproot_activation_proposals&oldid=68062
>
> [4] https://github.com/bitcoin/bitcoin/pull/19953
>
> [5]
> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017547.html
>
> [6] https://github.com/bitcoin/bitcoin/pull/19573
>
> [7] BIP9's times are based on the median of the past 11 blocks, which
>     usually trails UTC by about 90 minutes but which can trail behind
>     realtime significantly if miners are doing weird things.
>
> [8] https://en.bitcoin.it/wiki/July_2015_chain_forks
>
> [9] https://buildingbitcoin.org/bitcoin-core-dev/log-2016-06-21.html#l-32
>
> [10]
> https://github.com/bitcoin/bitcoin/blob/ed25cb58f605ba583c735f330482df0bf9348f3a/src/test/versionbits_tests.cpp#L337-L339
>
> [11] http://gnusha.org/taproot-activation/2021-03-05.log
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210305/13bc9b4e/attachment-0001.html>

From achow101-lists at achow101.com  Sat Mar  6 06:04:22 2021
From: achow101-lists at achow101.com (Andrew Chow)
Date: Sat, 06 Mar 2021 06:04:22 +0000
Subject: [bitcoin-dev] Taproot activation proposal "Speedy Trial"
In-Reply-To: <20210306034343.fhwrxmq6gbb2os5m@ganymede>
References: <20210306034343.fhwrxmq6gbb2os5m@ganymede>
Message-ID: <5be46169-8f38-da73-4112-fba2aff6dfcb@achow101.com>

I like this idea.

In terms of actual parameters, I propose that we base this Speedy Trial
off of BIP 8 with the following parameters:
* start height = 681408
* timeout height = 695520
* lockinontimeout = False
* signaling bit = 2
* threshold = 1815/2016 blocks (90%)

For the extended lockin period, I propose 14112 blocks, which is 7
retarget periods. Thus the earliest activation height will be 697536 and
the latest activation height will be 709632.

This will give us an approximate start time of May 1st 2021 and an
approximate timeout time of August 7th 2021, for a total activation
period of just over 3 months. The extended lockin period is the same
number of blocks as the activation period so that will also be just over
3 months, giving us the latest activation time of November 13th, 2021.
If miners activated as soon as possible, the earliest activation time
would be August 21st 2021.

Additionally, this timeline assumes a mid-April release of Bitcoin Core
0.21.1 containing these parameters. They could be changed to move up if
the expected release date were sooner.


Andrew Chow

On 3/5/21 10:43 PM, David A. Harding via bitcoin-dev wrote:
> On the ##taproot-activation IRC channel, Russell O'Connor recently
> proposed a modification of the "Let's see what happens" activation
> proposal.[1] The idea received significant discussion and seemed
> acceptable to several people who could not previously agree on a
> proposal (although this doesn't necessarily make it their first
> choice).  The following is my attempt at a description.
>
> 1. Start soon: shortly after the release of software containing this
>     proposed activation logic, nodes will begin counting blocks towards
>     the 90% threshold required to lock in taproot.[2]
>
> 2. Stop soon: if the lockin threshold isn't reached within approximately
>     three months, the activation attempt fails.  There is no mandatory
>     activation and everyone is encouraged to try again using different
>     activation parameters.
>
> 2. Delayed activation: in the happy occasion where the lockin threshold
>     is reached, taproot is guaranteed to eventually activate---but not
>     until approximately six months after signal tracking started.
>
> ## Example timeline
>
> (All dates approximate; see the section below about BIP9 vs BIP8.)
>
> - T+0: release of one or more full nodes with activation code
> - T+14: signal tracking begins
> - T+28: earliest possible lock in
> - T+104: locked in by this date or need to try a different activation process
> - T+194: activation (if lockin occurred)
>
> ## Analysis
>
> The goal of Speedy Trial is to allow a taproot activation attempt to
> either quickly succeed or quickly fail---without compromising safety in
> either case.  Details below:
>
> ### Mitigating the problems of early success
>
> New rules added in a soft fork need to be enforced by a large part of
> the economy or there's a risk that a long chain of blocks breaking the
> rules will be accepted by some users and rejected by others, causing a
> chain split that can result in large direct losses to transaction
> receivers and potentially even larger indirect losses to holders due to
> reduced confidence in the safety of the Bitcoin system.
>
> One step developers have taken in the past to ensure widespread adoption
> of new consensus rules is programming in a delay between the time software
> with those rules is expected to be released and when the software starts
> tracking which blocks signal for activation.  For example:
>
>      Soft fork        | Release    | Start      | Delta
>      -----------------+------------+------------+----------
>      BIP68 (v0.12.1)  | 2016-04-15 | 2016-05-11 | 26 days
>      BIP141 (v0.13.1) | 2016-10-27 | 2016-11-18 | 24 days
>
>      Sources: BitcoinCore.org, https://gist.github.com/ajtowns/1c5e3b8bdead01124c04c45f01c817bc
>
> Speedy Trial replaces most of that upfront delay with a backend delay.
> No matter how fast taproot's activation threshold is reached by miners,
> there will be six months between the time signal tracking starts and when
> nodes will begin enforcing taproot's rules.  This gives the userbase even
> more time to upgrade than if we had used the most recently proposed start
> date for a BIP8 activation (~July 23rd).[2]
>
> ### Succeed, or fail fast
>
> The earlier version of this proposal was documented over 200 days ago[3]
> and taproot's underlying code was merged into Bitcoin Core over 140 days
> ago.[4]  If we had started Speedy Trial at the time taproot
> was merged (which is a bit unrealistic), we would've either be less than
> two months away from having taproot or we would have moved on to the
> next activation attempt over a month ago.
>
> Instead, we've debated at length and don't appear to be any closer to
> what I think is a widely acceptable solution than when the mailing list
> began discussing post-segwit activation schemes over a year ago.[5]  I
> think Speedy Trial is a way to generate fast progress that will either
> end the debate (for now, if activation is successful) or give us some
> actual data upon which to base future taproot activation proposals.
>
> Of course, for those who enjoy the debate, discussion can continue while
> waiting for the results of Speedy Trial.
>
> ### Base activation protocol
>
> The idea can be implemented on top of either Bitcoin Core's existing
> BIP9 code or its proposed BIP8 patchset.[6]
>
> - BIP9 uses two time-based[7] parameters, starttime and timeout.  Using
>    these values plus a time-based parameter for the minimum activation
>    delay would give three months for miners to activate taproot, but some
>    of that time near the start or the end might not be usable due to
>    signals only being measured in full retarget periods.  However, the
>    six month time for users to upgrade their node would be not be
>    affected by either slow or fast block production.
>
>      BIP9 is already part of Bitcoin Core and I think the changes being
>      proposed would be relatively small, resulting in a small patch that
>      could be easy to review.
>
> - BIP8 uses two height-based parameters, startheight and timeoutheight.
>    Using height values would ensure miners had a certain number of
>    retarget periods (6) to lock in taproot and that there'd be a certain
>    number of blocks (about 24,000) until activation, although latest lock
>    in and expected activation could occur moderately earlier or later
>    than the estimated three and six months.
>
>      BIP8 would likely be used if Speedy Trial fails, so it could be
>      advantageous to base this proposal on BIP8 so that we gain
>      experience running that code in production.
>
> For additional discussion about using times versus heights, see today's
> log for ##taproot-activation.[11]
>
> ### Additional concerns
>
> - Encourages false signaling: false signaling is when miners signal
>    readiness to enforce rules that their nodes don't actually support.
>    This was partially responsible for a six-block reorg shortly after the
>    final BIP66 activation[8] and was found to still be a problem during
>    the BIP68 lockin period despite BIP9 being designed to avoid it.[9]
>
>    Because Speedy Trial only gives miners a maximum of three months to
>    signal support for taproot, it may encourage such false signaling.  If
>    taproot locks in as a result of their signaling but most of them fail
>    to upgrade by the activation date several months later, unprepared
>    miners could lose large amounts of money and users could see long
>    reorgs (with unupgraded nodes and SPV lite clients potentially losing
>    money).
>
>    Compared to other activation proposals, I think the only difference is
>    Speedy Trial's short timeline.  False signaling is possible with any
>    other proposal and the same problems can occur if miners fail to
>    upgrade for any mandatory activation.
>
> ### Additional advantages
>
> - No mandatory signaling: at no time are miners required to signal by
>    Speedy Trial.  This includes no mandatory signaling during the
>    locked_in period(s), although such signaling will be encouraged (as it
>    was with BIP9[10]).
>
> - Party time: to a lesser degree, a benefit mentioned for flag day
>    activation may also apply here: we could get up to six months
>    advanced notice of taproot activation, allowing users, developers, and
>    organizations to prepare software, announcements, and celebrations for
>    that event.
>
> ## Implementation details and next steps
>
> Initial discussion about implementation may be found in today's
> ##taproot-activation log.[11] If it appears Speedy Trial may have
> traction, Russell O'Connor has offered to work on a patch against BIP8
> implementing it.
>
> ## Acknowledgments
>
> The original idea for a short-duration attempt was discussed in the
> ##taproot-activation IRC channel last July and the revised idea saw
> additional evaluation there this week.  Despite growing frustration,
> discussion has been overwhelmingly constructive, for which all the
> contributors should be commended.  Although this should not in any way
> imply endorsement, I'm grateful for the review and comments on a draft
> of this email by Adam Gibson, Andrew Chow, Anthony Towns, Chris Belcher,
> Jeremy Rubin, Jonas Nick, Luke Dashjr, Michael Folkson, Russell
> O'Connor, and IRC users maybehuman and proofofkeags
>
> ## Footnotes
>
> [1] https://en.bitcoin.it/wiki/Taproot_activation_proposals#Let.E2.80.99s_see_what_happens.2C_BIP8.28false.2C_3m.29
>
> [2] A threshold of 1,815/2,016 blocks (90%) in a single retarget period
>      seemed to have near-universal support during the 2021-02-16 IRC
>      meeting.  See: https://en.bitcoin.it/wiki/Taproot_activation_proposal_202102
>
> [3] https://en.bitcoin.it/w/index.php?title=Taproot_activation_proposals&oldid=68062
>
> [4] https://github.com/bitcoin/bitcoin/pull/19953
>
> [5] https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017547.html
>
> [6] https://github.com/bitcoin/bitcoin/pull/19573
>
> [7] BIP9's times are based on the median of the past 11 blocks, which
>      usually trails UTC by about 90 minutes but which can trail behind
>      realtime significantly if miners are doing weird things.
>
> [8] https://en.bitcoin.it/wiki/July_2015_chain_forks
>
> [9] https://buildingbitcoin.org/bitcoin-core-dev/log-2016-06-21.html#l-32
>
> [10] https://github.com/bitcoin/bitcoin/blob/ed25cb58f605ba583c735f330482df0bf9348f3a/src/test/versionbits_tests.cpp#L337-L339
>
> [11] http://gnusha.org/taproot-activation/2021-03-05.log
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev



From loneroassociation at gmail.com  Fri Mar  5 23:10:43 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Fri, 5 Mar 2021 18:10:43 -0500
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <974C7CF0-5087-4120-B860-35FAEF39EA95@voskuil.org>
References: <CA+YkXXxzURKiD5r9ATG8CefRzyh9CKzF4Cwzd3-Mr5v5XrzinA@mail.gmail.com>
 <974C7CF0-5087-4120-B860-35FAEF39EA95@voskuil.org>
Message-ID: <CA+YkXXyFr3JKdONXdqbQwJd=z0KQHy9MAVn2wZDfdLufZRNDag@mail.gmail.com>

Hi, in regards to my research this is just one of my patents:
https://patents.google.com/patent/CN110825707A
This isn't related to this proposal but gives you a general depth of
understanding in regards to the technology and field I'm working on in
reducing redundancy and efficiency. You aren't a cryptographer, but there
are easy ways to validate my proposal if it was to be made. In regards to
popularity, many people have wanted to upgrade BTC's cryptography in a
similar manner. I believe it is at the very least a topic of interest to
you and others in the community. I would like to draft it out. Lastly, I
wasn't sure if you wanted to create a private thread or meant reply all so
that is my fault. The recent reply is to the BTC Dev list so I wanted to
provide my insight in regards to your inquiry.

Best regards, Andrew

On Fri, Mar 5, 2021, 5:50 PM Eric Voskuil <eric at voskuil.org> wrote:

> FYI it?s generally considered bad form repost a private thread, especially
> one you initiate.
>
> ...
>
> It?s typically more effective to generate some community support before
> actually submitting a BIP. Otherwise the process gets easily overwhelmed.
> This is likely why you aren?t getting a response. You can draft the BIP in
> your own repo and collect feedback from interested parties.
>
> Posting a link to your research/code is a good start. I?d be happy to look
> at an overview of the central principles. I?m not a cryptographer. I write
> code, but I look at these things from economic principles. So far all I
> have to go on is that you go ?much beyond? Chia. That?s not really anything.
>
> e
>
> On Mar 5, 2021, at 14:03, Lonero Foundation <loneroassociation at gmail.com>
> wrote:
>
> ?
> Hi, Eric. Chia's network is a bad example. They go after energy
> consumption in the wrong way entirely. True, it requires a comparable cost
> of hardware. I am trying to tackle cryptography in a way that goes much
> beyond that. Part of what I am doing includes lowering invalided proofs
> while trying to get the best of both worlds in regards to PoW and PoC. It
> is an efficiency issue to the core. In regards to the mechanisms of how I
> will do that, I suggest you look at the entire proposal which is why I am
> hoping the BIP team would be so gracious as to allow me to draft it out on
> GitHub.
>
> Best regards, Andrew
>
> On Fri, Mar 5, 2021, 4:42 PM Eric Voskuil <eric at voskuil.org> wrote:
>
>> How is the argument against PoM only partially true?
>>
>> I wrote this as soon as I saw Chia. Had two debates on Twitter with
>> Brahm, before he blocked me. Two years later, after they finally realized I
>> was correct, one of their PhDs contacted me and told me. Better to flesh
>> this out early. They had already raised $20 and done their research, so he
>> wasn?t exactly in a listening mode.
>>
>> e
>>
>> On Mar 5, 2021, at 13:20, Lonero Foundation <loneroassociation at gmail.com>
>> wrote:
>>
>> ?
>> Actually I mentioned a proof of space and time hybrid which is much
>> different than staking. Sorry to draw for the confusion as PoC is more
>> commonly used then PoST.
>> There is a way to make PoC cryptographically compatible w/ Proof of Work
>> as it normally stands: https://en.wikipedia.org/wiki/Proof_of_space
>> It has rarely been done though given the technological complexity of
>> being both CPU compatible and memory-hard compatible. There are lots of
>> benefits outside of the realm of efficiency, and I already looked into
>> numerous fault tolerant designs as well and what others in the cryptography
>> community attempted to propose. The actual argument you have only against
>> this is the Proof of Memory fallacy, which is only partially true. Given
>> how the current hashing algorithm works, hard memory allocation wouldn't be
>> of much benefit given it is more optimized for CPU/ASIC specific mining.
>> I'm working towards a hybrid mechanism that fixes that. BTW: The way
>> Bitcoin currently stands in its cryptography still needs updating
>> regardless. If someone figures out NP hardness or the halting problem the
>> traditional rule of millions of years to break all of Bitcoin's
>> cryptography now comes down to minutes. Bitcoin is going to have to
>> eventually radically upgrade their cryptography and hashing algo in the
>> future regardless. I want to integrate some form of NP complexity in
>> regards to the hybrid cryptography I'm aiming to provide which includes a
>> polynomial time algorithm in the cryptography. More than likely the first
>> version of my BTC hard fork will be coded in a way where integrating such
>> complexity in the future only requires a soft fork or minor upgrade to its
>> chain.
>>
>> In regards to the argument, "As a separate issue, proposing a hard fork
>> in the hashing algorithm will invalidate the enormous amount of capital
>> expenditure by mining entities and disincentivize future capital
>> expenditure into mining hardware that may compute these more "useful"
>> proofs of work."
>>
>> A large portion of BTC is already mined through AWS servers and non-asic
>> specific hardware anyways. A majority of them would benefit from a hybrid
>> proof, and the fact that it is hybrid in that manner wouldn't
>> disenfranchise currently optimized mining entities as well.
>>
>> There are other reasons why a cryptography upgrade like this is
>> beneficial. Theoretically one can argue BItcoin isn't fully decentralized.
>> It is few unsolved mathematical proofs away from being entirely broken. My
>> goal outside of efficiency is to build cryptography in a way that prevents
>> such an event from happening in the future, if it was to ever happen. I
>> have various research in regards to this area and work alot with
>> distributed computing. I believe if the BTC community likes such a
>> proposal, I would single handedly be able to build the cryptographic proof
>> myself (though would like as many open source contributors as I can get :)
>>
>> Anyways just something to consider. We are in the same space in regards
>> to what warrants a shitcoin or the whole argument against staking.
>>
>> https://hackernoon.com/ethereum-you-are-a-centralized-cryptocurrency-stop-telling-us-that-you-arent-pi3s3yjl
>>
>> Best regards,  Andrew
>>
>> On Fri, Mar 5, 2021 at 3:53 PM Eric Voskuil <eric at voskuil.org> wrote:
>>
>>> ?Hi Andrew,
>>>
>>> Do you mean that you can reduce the cost of executing the cryptography
>>> at a comparable level of security? If so this will only have the effect of
>>> increasing the amount of it that is required to consume the same cost.
>>>
>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Efficiency-Paradox
>>>
>>> You mentioned a staking hybrid in your original post.
>>>
>>>
>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Hybrid-Mining-Fallacy
>>>
>>> This would be a change to dynamics - the economic forces at work.
>>> Staking is not censorship resistant
>>>
>>>
>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Proof-of-Stake-Fallacy
>>>
>>> and is therefore what I refer to as cryptodynamically insecure.
>>>
>>>
>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Cryptodynamic-Principles
>>>
>>> As such it wouldn?t likely be considered as a contribution to Bitcoin.
>>> It might of course be useful in some other context.
>>>
>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Shitcoin-Definition
>>>
>>> But BIPs are proposals aimed at Bitcoin improvement.
>>>
>>>
>>> https://github.com/bitcoin/bips/blob/master/bip-0001.mediawiki#What_is_a_BIP
>>>
>>> Non-staking attempts to improve energy efficiency are either proof of
>>> work in disguise, such as proof of memory:
>>>
>>>
>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Proof-of-Memory-Fallacy
>>>
>>> or attempts to repurpose ?wasteful? computing, such as by finding prime
>>> numbers, which does not imply a reduction in dedicated energy
>>> consumption.
>>>
>>>
>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Dedicated-Cost-Principle
>>>
>>> Finally, waste and renewable energy approaches at ?carbon? (vs energy)
>>> reduction must still consume the same in cost as the reward. In other
>>> words, the apparent benefit represents a temporary market shift, with
>>> advantage to first movers. The market will still consume what it consumes.
>>> If the hashing energy was free all reward consumption would shift to
>>> operations.
>>>
>>>
>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Byproduct-Mining-Fallacy
>>>
>>> The motivation behind these attempts is naively understandable, but
>>> based on a false premise.
>>>
>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Energy-Waste-Fallacy
>>>
>>> The one thing that reduces Bitcoin energy consumption is an increase in
>>> energy cost relative to block reward.
>>>
>>>
>>> https://github.com/libbitcoin/libbitcoin-system/wiki/Energy-Exhaustion-Fallacy
>>>
>>> e
>>>
>>> On Mar 5, 2021, at 07:30, Lonero Foundation via bitcoin-dev <
>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>
>>> ?
>>> Hi, this isn't about the energy efficient argument in regards to
>>> renewables or mining devices but a better cryptography layer to get the
>>> most out of your hashing for validation. I do understand the arbitrariness
>>> of it, but do want to still propose a document. Do I use the Media Wiki
>>> format on GitHub and just attach it as my proposal?
>>>
>>> Best regards, Andrew
>>>
>>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net>
>>> wrote:
>>>
>>>> Hi Ryan and Andrew,
>>>>
>>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <
>>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>
>>>>>
>>>>>   https://www.truthcoin.info/blog/pow-cheapest/
>>>>>     "Nothing is Cheaper than Proof of Work"
>>>>>     on | 04 Aug 2015
>>>>>
>>>>>
>>>> Just to belabor this a bit, the paper demonstrates that the mining
>>>> market will tend to expend resources equivalent to miner reward.  It does
>>>> not prove that mining work has to expend *energy* as a primary cost.
>>>>
>>>> Some might argue that energy expenditure has negative externalities and
>>>> that we should move to other resources.  I would argue that the negative
>>>> externalities will go away soon because of the move to renewables, so the
>>>> point is likely moot.
>>>>
>>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210305/1a32baa0/attachment-0001.html>

From arielluaces at gmail.com  Fri Mar  5 23:39:24 2021
From: arielluaces at gmail.com (Ariel Luaces)
Date: Fri, 5 Mar 2021 15:39:24 -0800
Subject: [bitcoin-dev] Supermajority then simple majority Taproot Activation
Message-ID: <CAOv1TniX-tkGQuLvHB23QcUSJ+VwzzopTnEgchVYDDGuLbB92w@mail.gmail.com>

I found a hint of common ground in reddit that I absolutely loves and
just had to share here on the ML to discuss


Luke's suggestion: To minimise the signal from 90% to 50%+1 during the
MUST_SIGNAL phase.
https://www.reddit.com/r/Bitcoin/comments/lwvg78/making_the_case_for_flag_day_activation_of_taproot/gpkbdcg/


I think this proposal is a natural evolution:
>From the creation of BIP9 to enable soft fork activations with low
risk under widespread miner support
https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki
To miner aggression against segwit, resulting in shaolinfry's
releasing the BIP148 and BIP91 proposals and a UASF client, resulting
in the Bitcoin civil war, resulting in settlement through economic
pressure.
To shaolinfry's creation of BIP8 to force a soft fork when
encountering minority miner apathy/malice and a desire for the majoity
of users to deploy
https://github.com/bitcoin/bips/blob/master/bip-0008.mediawiki
To Greg Maxwell's suggestion of two round activation with BIP9
followed by a flag-day activation (couldn't find the link, it's
mention in Matt's Modern Soft Fork Activation proposal)
To Matt Corallo's suggestion to do a BIP9 deployment followed by a
BIP8 deployment with a six month waiting period in between (Modern
Soft Fork Activation)
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017547.html
To Luke Dashjr's addition of lockinontimeout to BIP8 to consolidate
the functionality of BIP8 and BIP9
https://github.com/bitcoin/bips/pull/550
To AJ Towns' suggestion of a gradually decreasing activation threshold
and a user configurable option between conditional activation and
guaranteed activation at the end
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-July/018043.html
To Gregorio Guidi's suggestion of decreasing the threshold to 1.2% as
the locked in date approaches, allowing for activation failure and
removing of the LOT flag
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018476.html
To Ariel Lorenzo-Luaces' (me)  suggestion of switching the final
threshold to 50% to pose a reorg threat to non-upgraded miners instead
of risking a minority fork
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-March/018529.html
To Luke Dashjr's suggestion of switching thresholds to 51% during the
MUST_SIGNAL phase instead of a gradualy decreasing threshold
https://old.reddit.com/r/Bitcoin/comments/lwvg78/making_the_case_for_flag_day_activation_of_taproot/gpkejqt/
(I hope I'm not missing anything)
To Matt Corallo seemingly liking the idea? It's hard to tell.


I think Luke's proposal fixes a lot of concerns on both sides of the
LOT discussion.
I went through all the Taproot activation discussion I could find, as
well as some old segwit activation discussions, and here I summarize
points that will hopefully convince all supporters from all sides of
the Taproot activation discussion.
Some points are repeated but framed differently based on the reader's
predisposition (LOT=true or LOT=false or flag day).
Something to note is that this is not a compromise, I mention it at the bottom.


The case for this new proposal for supporters of LOT=true first:
1. no veto bug) Miners wouldn't have veto power. If 51% of miners are
signaling during MUST_SIGNAL phase Taproot activates. This proposal
follows the will of the community. (point 5 on Matt's Modern Soft Fork
Activation proposal
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017547.html)
2. signaling used for coordination instead of voting) The requirement
for a 95% supermajority vote disappears since those, what would have
previously been seen as, votes are irrelevant during the MUST_SIGNAL
phase. The 51% threshold is also seen as a coordination mechanism for
users to gauge miner support to automatically split from an unupgraded
miner minority.
4. low threshold UASF) It's much much easier to do a UASF marketing
blitz since only 51% of mining power needs to enforce the new rules
and the supermajority is not required. Mining power (51% of it needed)
will probably be convinced if exchanges, wallet software, and a
moderate number of users are on the Taproot activation side
(significant economic activity). This was a major problem in 2017
because it was uncertain whether signaling miners were running BIP9 or
UASF.
5. no UASF minority chain) If LOT=true is released and it never
achieves 50% signaling then there would be a fork and the UASF chain
will be exposed to attacks or destabilization due to miners switching
between chains. This proposal avoids that situation because it
guarantees that a majority of mining power is supporting Taproot so
the chain can't be attacked. You never really wanted to fork off from
your friends right?
3. nodes stay in consensus) If Taproot does not achieve a
supermajority but does achieve a simple majority (>51% PoW) at the end
of activation then upgraded users, upgraded miners, and non-upgraded
will all follow the taproot-active ruleset, leaving a minority of
miners to be exposed to reorgs if they don't enforce the new Taproot
rules. At this point the economic majority will very clearly be in the
taproot-activated chain so this creates strong pressure for the
minority of miners to capitulate or hard/soft fork off. (I imagine
they will capitulate... unless they want to have fun being poor)
6. no double spends) No need to stress about writing code to prevent
double spends the chain will stay together.
7. no PoW change) No need to stress about changing the PoW unless the
miner majority doesn't signal. In that case a flag day is needed with
a PoW change so the forked chain is safe. It's too risky to have to
re-upgrade, in the middle of Taproot deployment, to a new client to
deploy a PoW change in the event that the majority mining power is not
on board.
7. minority miners forced to comply or fork off) Zealous miners
against the proposed feature are forced to hard fork with an
anti-Taproot fork if signaling is greater than 51%. The hard fork will
have 49% in the worst case, probably much less if we assume humans are
greedy. The miner minority may attack if they are confident they will
succeed. But their success is unlikely due Nakamoto consensus.
8. no early adopter dilema) There is no reluctance of upgrading
because it's more likely the new version will be on the chain with the
most PoW. This fixes the early adopter dilemma.
9. no late adopter stress) Since the result of activation keeps all
users together and minority miners are forced off, late adopters don't
need to worry about upgrading their client to not risk being reorged.
They will be on the taproot activated chain.
10. majority attracts the undecided) At 51% of mining power and an
economic majority I would say Greg Maxwell's "opposed unless there is
clear consensus on LOT=true" is very well satisfied. (paraphrase
provided by michaelfolkson
http://gnusha.org/taproot-activation/2021-02-16.log)
11. discovered bugs can back out deployment) With forced activation
there is no way to back out activation unless all users revert to
using a previous version or upgrade to using a new fixed version. But
it's not guaranteed that all users will revert or upgrade. This
proposal allows a cancelation if we force the majority of miners to
not signal.
12. no alt-nodes) A UASF media blitz can achieve activation with 51%
miner support and can be executed with a client released by core
instead of an alt-node.
13. no dev+miner forced changes) Users maintain sovereignty in future
soft forks by maintaining the option of creating anti-feature hard
fork or soft fork movements as long as they have enough mining power
to maintain a safe chain. Miners and devs don't have ultimate power.
(unless a supermajority of both groups agree to an anti-user feature
but I find that unthinkable right now since the economic majority
wouldn't comply easily, may happen in the future, who knows)
14. no dev forced changes) Avoid a power grab from core developers and
a minority of users. They can't force a feature change because miners
and an economic majority together can veto. At minimum the forced
feature requires 51% mining power and zero user support, even in that
case majority users still have options. (point 10)
15. less miner polling pre-deployment) One of the rationales to lower
the activation threshold from 95% to 90% is due to 89% verbal miner
support https://taprootactivation.com/ . I saw some people wanted to
go as low as 85% or 80%, hell someone on the ##uasf channel wanted to
drop threshold to 65% to incentivize non-upgraded nodes to join the
UASF alt-node http://gnusha.org/uasf/2021-03-04.log . With this
proposal it doesn't matter if miners don't overwhelmingly support the
feature so their verbal input is less significant. Deployment can
happen as soon as 51% of mining power express verbal support, unlike
what's happening right now where miner apathy is delaying deployment
because no one is sure whether a supermajority is achievable.
16. new status quo) I'm not sure I understand when Luke says LOT=true
is status quo but this proposal probably fixes that too? This proposal
kind of acts like a flag day with the protection of a majority PoW.


The case for this new proposal for supporters of LOT=false first:
1. discovered bugs can back out deployment) The activation can be
canceled and the chain will remain united if any problem is found.
(point 1 on Matt's Modern Soft Fork Activation proposal
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017547.html)
2. miner minority can't cancel) Only 51% of mining power can cancel if
a bug is found so a minority of miners can't abuse the threat of
canceling for political reasons.
3. no need for miner promises) In the back of the minds of LOT=false
supporters there is always the doubt of "what if we really can't trust
miners?". We can ask them and make them promise that they will support
the upgrade but we can never really know. With this proposal we don't
need to worry about a miner minority promising to signal and then
breaking the promise.
4. no UASF aggression at the start) Miners aren't antagonized because
they are still part of the signaling process and they keep their right
to run any client they want without the threat of a UASF. Though they
will eventually mine orphan blocks if they don't upgrade, which is
probably true for a handful of miners even today.
5. UASF is optional) If miners seem to be stalling or not signaling
users have the option of running a media blitz without having to
coordinate the release of a new UASF client. This removes the
complications of multiple client releases interacting to activate the
same feature.
6. UASF is reactive) Forcing miners to upgrade with a media blitz and
a threat to create a hard fork later will be after miners are shown to
be apathetic or malicious. Users have time to gather information while
the MUST_SIGNAL period approaches.
7. no user forced changes) Removes the precedent of users forcing
changes on miners because they must attain 51% miner support. If users
have less than 51% miner support they must hard fork instead.
8. safe supermajority activation) The threshold will remain in
supermajority territory 95% before the MUST_SIGNAL phase. When a
supermajority is achieved there will be minimal disruption and minimal
detriment to Bitcoin's security. (point 3 on Matt's Modern Soft Fork
Activation proposal
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017547.html)
9. users have time to upgrade) Users will have an appropriate amount
of time to upgrade. (whatever time it takes to achieve supermajority)
(point 2 on Matt's Modern Soft Fork Activation proposal
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017547.html)
10. no long deployments) In case of miners not reaching a
supermajority due to apathy we won't have to wait six months and then
another release and another long deployment.
11. no UASF minority chain) Users won't be reorged because if at the
end of activation support is below 51% taproot wont activate and users
will stay together.
12. no big reorgs) If more than 51% of miners support Taproot then
upgraded users, non-upgraded users, and minority miners will stay on
the same chain. Some non-upgraded users and miners will be at risk of
creating and following orphan blocks. But the likelihood is that the
miner minority will upgrade if we assume that they are self-interested
and don't want to mine orphan blocks. This results in a small risk of
chain split and small risk of big reorgs. (point 4 on Matt's Modern
Soft Fork Activation proposal
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017547.html)
13. no late adopter stress) If mining power majority is not achieved
during activation then all miners stay on the same chain and late
adopters don't need to worry about the risk of some UASF chain
overtaking theirs.
14. no divergent consensus rules) The chain can stay together and our
friends won't fork off because we will all be running the same client
and the client will be backwards compatible.
15. no need for redeployment) If activation fails it's clear that it
happened due to a lack of a majority of clients supporting the change
and a lack of a strong enough economic group to force miners to
upgrade. So if activation fails we can be sure that we won't be
releasing the feature again or the feature must be released as a hard
fork if a group of users really really want it.
16. no co-optable deployment) No more LOT flag so code can't be easily
modified to create divergent consensus from a core release.
17. no incentive to force signaling) A big reason for users to force
signaling is for reorg protection in case they are in a minority
chain. With this proposal the UASF chain is protected from reorgs by a
miner majority so no need to force signaling.
18. no configurable consensus) No more LOT flag so no need for a
parameter/config value to force users to pick a side on upgrade.
Forcing the choice on users guarantees there will be users running a
UASF but at the same time reduces the likelihood of a successful UASF
due to other users running LOT=false.
19. no alt-nodes) If this proposal gains consensus and it can be
released in core then we will avoid the issue of fracturing groups of
core forks jockeying for user support.
20. miners can test features before deployment) If changes can be
written to core without contention or risk of divergent consensus.
Core can release RCs for miners and users to test the feature. I think
it would have helped to know the segwit-ASIC boost conflict before
segwit signaling even though there is no guarantee that it would have
been disclosed. But maybe having this ability will be useful for other
features.
21. no false flagging interference) No need for two activation periods
so no need to worry about buggy miner signaling software (false
flagging) that may continue to signal for the prior deployment. This
is a potential issue for modern soft fork activation. (this issue is
mentioned by AJ Towns in the decreasing threshold proposal
https://github.com/ajtowns/bips/blob/202007-activation-dec-thresh/bip-decthresh.mediawiki)
22. no dev vilification) Core developers can't be portrayed as having
ultimate power because they at least require 51% miner support.
23. safe supermajority threshold) Since the threshold will drop to 51%
during MUST_SIGNAL we could take the luxury of raising the
supermajority threshold back to 95% instead of 90%. This increases the
risk of miner stalling but that's the worst that could happen, which
is pretty good IMO.
24. no flag day) Avoids the pressure of devs pulling the trigger on a
flag day because this proposal removes (reduces?) the likelihood that
there will be a future chain split. This takes a lot of pressure off
of devs releasing this deployment.
25. no Taproot death) If we go with LOT=false first and it fails,
there is no getting around the fact that one group will want LOT=true
and the other group will want to drop Taproot altogether. I think devs
will still have a hard time deploying LOT=true after LOT=false.
26. no procrastinating) Since the deployment period doesn't need to be
too long for a safe LOT=true (after a failed LOT=false signaling
period) then there isn't a risk of users and miners procrastinating
upgrades until the last 3 or so months before the flag day.
27. another activation failure does not kill the MASF method) If
LOT=false fails again it was likely we would have never used it again.
That would be the death of quick MASF. But with this proposal the only
way to fail is if a majority of miners are against the feature and
have been unconvinced by an economic minority media blitz. In which
case the feature is contentious but the activation method remains
intact.


The case for this proposal for supporters of a straight flag-day:
1. no divergent consensus rules) all nodes will be compatible and
backwards compatible so they will all stay with the same consensus
rules.
2. discovered bugs can back out deployment) A flag day can't be
canceled. With this proposal if we find a bug it's easy for miners to
revert to an old version to get signaling below 51%.
3. signaling is available) With signaling we can all see the progress
of the activation. We will know if it's near a supermajority, we will
know if it's near the 51% milestone. Without signaling we might fail
to gather adoption and not even know which miners were actually
running the new version.
4. majority hash power will stay together) All users and the majority
mining power will stay on the same chain. It's possible that a
minority of mining power will fall out of consensus if they don't
enforce Taproot rules but if we assume they will act in their best
interest then they will upgrade once the simple majority of mining
power is signaling. Minority miners that are staunchly against
upgrading or are just really really really lazy and maybe take mining
as a hobby will fork off. But It's not possible to force those
minority miners anyway. For example there could be a minority of
miners running pre-segwit software today.
5. no redeploy to move the date) With a 95% threshold and a 51% at the
end we can be certain that the change will or won't activate. So no
need to scramble to move dates or potentially release a LOT=false
client earler than the flag day. Any of that scrambing is gone because
we just wait. The worst that could happen is a 6% miner minority can
delay the change until the MUST_SIGNAL period.
6. it's clear who wins under contention) Flag day activations need as
much economic adoption as any other method. With a flag day, any
contention in the feature will lead to entrenched groups and a split
is inevitable. With this proposal the economic majority decides by
forcing miners to signal one way or another by threatening a hard
fork. But with this proposal it's clear that who wins the debate is
who wins 51% miner support so the economic majority (if it's very
small will likely reconsider not forking off). With a flag day, who
wins the debate is only clear years after the flag day based on market
capitalization.
7. can start building early) Developers will have high assurance that
the change will activate after the 51% threshold is reached so they
can start building after 51% and don't need to wait until the
supermajority.
8. MASF is available) Activation can happen very early with a
supermajority since Taproot is not contentious. (still the most likely
outcome, by far!)
9. no dev forced changes) Avoid a power grab from core developers to
rush a flag day that doesn't have enough economic majority. Once the
client is released the chain split is nearly guaranteed. With this
proposal devs would need a miner majority and a supporting economic
majority or an apathetic economy supermajority.


The case for this new proposal for supporters of gradual decreasing
activation threshold:
1. no gaming thresholds) Miners can't suddenly signal at 55% threshold
to force 45% of non-signaling miners to scramble an update.


The case for this new proposal for supporters on all sides:
1. conservative enough for core) If we can fix all the kinks and
achieve some consensus I think this proposal will be safe enough to be
supported by core devs.
2. remove activation contention) If things go well we might get a few
more rounds of soft fork activation without contention.
3. no ambiguity on which chain is bitcoin) If there is a minority
group that forks off then the chain called Bitcoin will be the one
with the most economic support and miner support. With this come the
benefits that 21 million stays 21 million and $1 trillion stays $1
trillion. Unless a majority of mining power is trying to force a soft
fork that antagonizes the economic majority. Tthis miner oppression
would then be considered a 51% attack and maybe a PoW change is in
order.
4. *this is a real solution not a compromise*) I think this solution
fixes so many issues on both sides of the LOT debate that I see it as
better than either solution independently. This is a real solution and
the added benefit is that it's a solution that coincidentally brings
both sides of the debate together.
5. only contentious changes make contentious activation) Contentious
activations will be ones that have near 50/50 miner support. Features
like that will probably never even get to the activation stage and
Taproot is not one of them.
6. no LOT drama) The LOT flag is removed so no more default to argue
over. No more drama. And no cover for social attacks on bitcoin.
7. no mid-deployment changes) Deployment is on complete autopilot so
users don't need to change any configuration in the middle of
deployment period.


Leave it to bitcoiners to turn bitcoin's biggest flaw (51% attacks)
into a feature (51% upgrade pressure). The Bitcoin space is so
fascinating.
I hope there isn't some giant obvious flaw I'm missing. Please tell me
if I am. Or add to the arguments if you'd like.


Cheers
Ariel Lorenzo-Luaces

From keagan.mcclelland at gmail.com  Sat Mar  6 00:41:36 2021
From: keagan.mcclelland at gmail.com (Keagan McClelland)
Date: Fri, 5 Mar 2021 17:41:36 -0700
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CA+YkXXwBMG6YUAhf-2U5EV5Ep5RgG2foc9chramNFN5=AQ=-EA@mail.gmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CAMnpzfop8ttqjMAKoS37zpQV6WiZfi1Bn+y_e-HaepTiD4Vm1Q@mail.gmail.com>
 <CAB0O3SVNyr_t23Y0LyT0mSaf6LONFRLYJ8qzO7rcdJFnrGccFw@mail.gmail.com>
 <CA+YkXXwkSCu=2UOEhzFBzGDHo1c=Ewqsnxp632ke3jdH1ff5WA@mail.gmail.com>
 <CA+YkXXwfS7eer5Za_ed9tCNdfOp4c3nV_X=mfXzoDxMm6BrizQ@mail.gmail.com>
 <CALeFGL31M5DAULLRtCwjPYHaPVqsVqREUg6WQ2-cuj23SNk=BA@mail.gmail.com>
 <CA+YkXXwBMG6YUAhf-2U5EV5Ep5RgG2foc9chramNFN5=AQ=-EA@mail.gmail.com>
Message-ID: <CALeFGL3E-rWW9aJkwre_3UF44vbNxPH2436DvaQdHoqEQ5b+eg@mail.gmail.com>

> A large portion of BTC is already mined through AWS servers and non-asic
specific hardware anyways. A majority of them would benefit from a hybrid
proof, and the fact that it is hybrid in that manner wouldn't
disenfranchise currently optimized mining entities as well.

My instincts tell me that this is an outlandish claim. Do you have
supporting evidence for this?

Keagan

On Fri, Mar 5, 2021 at 3:22 PM Lonero Foundation via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Actually I mentioned a proof of space and time hybrid which is much
> different than staking. Sorry to draw for the confusion as PoC is more
> commonly used then PoST.
> There is a way to make PoC cryptographically compatible w/ Proof of Work
> as it normally stands: https://en.wikipedia.org/wiki/Proof_of_space
> It has rarely been done though given the technological complexity of being
> both CPU compatible and memory-hard compatible. There are lots of benefits
> outside of the realm of efficiency, and I already looked into numerous
> fault tolerant designs as well and what others in the cryptography
> community attempted to propose. The actual argument you have only against
> this is the Proof of Memory fallacy, which is only partially true. Given
> how the current hashing algorithm works, hard memory allocation wouldn't be
> of much benefit given it is more optimized for CPU/ASIC specific mining.
> I'm working towards a hybrid mechanism that fixes that. BTW: The way
> Bitcoin currently stands in its cryptography still needs updating
> regardless. If someone figures out NP hardness or the halting problem the
> traditional rule of millions of years to break all of Bitcoin's
> cryptography now comes down to minutes. Bitcoin is going to have to
> eventually radically upgrade their cryptography and hashing algo in the
> future regardless. I want to integrate some form of NP complexity in
> regards to the hybrid cryptography I'm aiming to provide which includes a
> polynomial time algorithm in the cryptography. More than likely the first
> version of my BTC hard fork will be coded in a way where integrating such
> complexity in the future only requires a soft fork or minor upgrade to its
> chain.
>
> In regards to the argument, "As a separate issue, proposing a hard fork in
> the hashing algorithm will invalidate the enormous amount of capital
> expenditure by mining entities and disincentivize future capital
> expenditure into mining hardware that may compute these more "useful"
> proofs of work."
>
> A large portion of BTC is already mined through AWS servers and non-asic
> specific hardware anyways. A majority of them would benefit from a hybrid
> proof, and the fact that it is hybrid in that manner wouldn't
> disenfranchise currently optimized mining entities as well.
>
> There are other reasons why a cryptography upgrade like this is
> beneficial. Theoretically one can argue BItcoin isn't fully decentralized.
> It is few unsolved mathematical proofs away from being entirely broken. My
> goal outside of efficiency is to build cryptography in a way that prevents
> such an event from happening in the future, if it was to ever happen. I
> have various research in regards to this area and work alot with
> distributed computing. I believe if the BTC community likes such a
> proposal, I would single handedly be able to build the cryptographic proof
> myself (though would like as many open source contributors as I can get :)
>
> Anyways just something to consider. We are in the same space in regards to
> what warrants a shitcoin or the whole argument against staking.
>
> https://hackernoon.com/ethereum-you-are-a-centralized-cryptocurrency-stop-telling-us-that-you-arent-pi3s3yjl
>
> Best regards,  Andrew
>
> On Fri, Mar 5, 2021 at 4:11 PM Keagan McClelland <
> keagan.mcclelland at gmail.com> wrote:
>
>> It is important to understand that it is critical for the work to be
>> "useless" in order for the security model to be the same. If the work was
>> useful it provides an avenue for actors to have nothing at stake when
>> submitting a proof of work, since the marginal cost of block construction
>> will be lessened by the fact that the work was useful in a different
>> context and therefore would have been done anyway. This actually degrades
>> the security of the network in the process.
>>
>> As a separate issue, proposing a hard fork in the hashing algorithm will
>> invalidate the enormous amount of capital expenditure by mining entities
>> and disincentivize future capital expenditure into mining hardware that may
>> compute these more "useful" proofs of work. This is because any change in
>> the POW algorithm will be considered unstable and subject to change in the
>> future. This puts the entire network at even more risk meaning that no
>> entity is tying their own interests to that of the bitcoin network at
>> large. It also puts the developers in a position where they can be bribed
>> by entities with a vested interest in deciding what the new "useful" proof
>> of work should be.
>>
>> All of these things make the Bitcoin network worse off.
>>
>> Keagan
>>
>> On Fri, Mar 5, 2021 at 1:48 PM Lonero Foundation via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>>> Also in regards to my other email, I forgot to iterate that my
>>> cryptography proposal helps behind the efficiency category but also tackles
>>> problems such as NP-Completeness or Halting which is something the BTC
>>> network could be vulnerable to in the future. For sake of simplicity, I do
>>> want to do this BIP because it tackles lots of the issues in regards to
>>> this manner and can provide useful insight to the community. If things such
>>> as bigger block height have been proposed as hard forks, I feel at the very
>>> least an upgrade regarding the hashing algorithm and cryptography does at
>>> least warrant some discussion. Anyways I hope I can send you my BIP, just
>>> let me know on the preferred format?
>>>
>>> Best regards, Andrew
>>>
>>> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <
>>> loneroassociation at gmail.com> wrote:
>>>
>>>> Hi, this isn't about the energy efficient argument in regards to
>>>> renewables or mining devices but a better cryptography layer to get the
>>>> most out of your hashing for validation. I do understand the arbitrariness
>>>> of it, but do want to still propose a document. Do I use the Media Wiki
>>>> format on GitHub and just attach it as my proposal?
>>>>
>>>> Best regards, Andrew
>>>>
>>>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net>
>>>> wrote:
>>>>
>>>>> Hi Ryan and Andrew,
>>>>>
>>>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <
>>>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>>
>>>>>>
>>>>>>   https://www.truthcoin.info/blog/pow-cheapest/
>>>>>>     "Nothing is Cheaper than Proof of Work"
>>>>>>     on | 04 Aug 2015
>>>>>>
>>>>>>
>>>>> Just to belabor this a bit, the paper demonstrates that the mining
>>>>> market will tend to expend resources equivalent to miner reward.  It does
>>>>> not prove that mining work has to expend *energy* as a primary cost.
>>>>>
>>>>> Some might argue that energy expenditure has negative externalities
>>>>> and that we should move to other resources.  I would argue that the
>>>>> negative externalities will go away soon because of the move to renewables,
>>>>> so the point is likely moot.
>>>>>
>>>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210305/654d8299/attachment-0001.html>

From loneroassociation at gmail.com  Sat Mar  6 00:57:36 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Fri, 5 Mar 2021 19:57:36 -0500
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CALeFGL3E-rWW9aJkwre_3UF44vbNxPH2436DvaQdHoqEQ5b+eg@mail.gmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CAMnpzfop8ttqjMAKoS37zpQV6WiZfi1Bn+y_e-HaepTiD4Vm1Q@mail.gmail.com>
 <CAB0O3SVNyr_t23Y0LyT0mSaf6LONFRLYJ8qzO7rcdJFnrGccFw@mail.gmail.com>
 <CA+YkXXwkSCu=2UOEhzFBzGDHo1c=Ewqsnxp632ke3jdH1ff5WA@mail.gmail.com>
 <CA+YkXXwfS7eer5Za_ed9tCNdfOp4c3nV_X=mfXzoDxMm6BrizQ@mail.gmail.com>
 <CALeFGL31M5DAULLRtCwjPYHaPVqsVqREUg6WQ2-cuj23SNk=BA@mail.gmail.com>
 <CA+YkXXwBMG6YUAhf-2U5EV5Ep5RgG2foc9chramNFN5=AQ=-EA@mail.gmail.com>
 <CALeFGL3E-rWW9aJkwre_3UF44vbNxPH2436DvaQdHoqEQ5b+eg@mail.gmail.com>
Message-ID: <CA+YkXXyBmOootb=Kt6CH3yquYVnAZd=fJQqiF_A3p_pkB8QC3g@mail.gmail.com>

I know Ethereum had an outlandishly large percentage of nodes running on
AWS, I heard the same thing is for Bitcoin but for mining. Had trouble
finding the article online so take it with a grain of salt. The point
though is that both servers and ASIC specific hardware would still be able
to benefit from the cryptography upgrade I am proposing, as this was in
relation to the disinfranchisemet point.

That said, I think the best way to move forward is to submit a BIP pull
request for a draft via GitHub using BIP #2's draft format and any
questions people have can be answered in the reqeust's comments. That way
people don't have to get emails everytime there is a reply, but replies
still get seen as opposed to offline discussion. Since the instructions say
to email bitcoin-dev before doing a bip draft, I have done that. Since
people want to see the draft beforehand and it isn't merged manually
anyways, I think it is the easiest way to handle this.

I'm also okay w/ continuing the discussion on bitcoin-dev but rather form a
discussion on git instead given I don't want to accidentally impolitely
bother people given this is a moderated list and we already established
some interest for at least a draft.

Does that seem fine?

Best regards, Andrew

On Fri, Mar 5, 2021, 7:41 PM Keagan McClelland <keagan.mcclelland at gmail.com>
wrote:

> > A large portion of BTC is already mined through AWS servers and non-asic
> specific hardware anyways. A majority of them would benefit from a hybrid
> proof, and the fact that it is hybrid in that manner wouldn't
> disenfranchise currently optimized mining entities as well.
>
> My instincts tell me that this is an outlandish claim. Do you have
> supporting evidence for this?
>
> Keagan
>
> On Fri, Mar 5, 2021 at 3:22 PM Lonero Foundation via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> Actually I mentioned a proof of space and time hybrid which is much
>> different than staking. Sorry to draw for the confusion as PoC is more
>> commonly used then PoST.
>> There is a way to make PoC cryptographically compatible w/ Proof of Work
>> as it normally stands: https://en.wikipedia.org/wiki/Proof_of_space
>> It has rarely been done though given the technological complexity of
>> being both CPU compatible and memory-hard compatible. There are lots of
>> benefits outside of the realm of efficiency, and I already looked into
>> numerous fault tolerant designs as well and what others in the cryptography
>> community attempted to propose. The actual argument you have only against
>> this is the Proof of Memory fallacy, which is only partially true. Given
>> how the current hashing algorithm works, hard memory allocation wouldn't be
>> of much benefit given it is more optimized for CPU/ASIC specific mining.
>> I'm working towards a hybrid mechanism that fixes that. BTW: The way
>> Bitcoin currently stands in its cryptography still needs updating
>> regardless. If someone figures out NP hardness or the halting problem the
>> traditional rule of millions of years to break all of Bitcoin's
>> cryptography now comes down to minutes. Bitcoin is going to have to
>> eventually radically upgrade their cryptography and hashing algo in the
>> future regardless. I want to integrate some form of NP complexity in
>> regards to the hybrid cryptography I'm aiming to provide which includes a
>> polynomial time algorithm in the cryptography. More than likely the first
>> version of my BTC hard fork will be coded in a way where integrating such
>> complexity in the future only requires a soft fork or minor upgrade to its
>> chain.
>>
>> In regards to the argument, "As a separate issue, proposing a hard fork
>> in the hashing algorithm will invalidate the enormous amount of capital
>> expenditure by mining entities and disincentivize future capital
>> expenditure into mining hardware that may compute these more "useful"
>> proofs of work."
>>
>> A large portion of BTC is already mined through AWS servers and non-asic
>> specific hardware anyways. A majority of them would benefit from a hybrid
>> proof, and the fact that it is hybrid in that manner wouldn't
>> disenfranchise currently optimized mining entities as well.
>>
>> There are other reasons why a cryptography upgrade like this is
>> beneficial. Theoretically one can argue BItcoin isn't fully decentralized.
>> It is few unsolved mathematical proofs away from being entirely broken. My
>> goal outside of efficiency is to build cryptography in a way that prevents
>> such an event from happening in the future, if it was to ever happen. I
>> have various research in regards to this area and work alot with
>> distributed computing. I believe if the BTC community likes such a
>> proposal, I would single handedly be able to build the cryptographic proof
>> myself (though would like as many open source contributors as I can get :)
>>
>> Anyways just something to consider. We are in the same space in regards
>> to what warrants a shitcoin or the whole argument against staking.
>>
>> https://hackernoon.com/ethereum-you-are-a-centralized-cryptocurrency-stop-telling-us-that-you-arent-pi3s3yjl
>>
>> Best regards,  Andrew
>>
>> On Fri, Mar 5, 2021 at 4:11 PM Keagan McClelland <
>> keagan.mcclelland at gmail.com> wrote:
>>
>>> It is important to understand that it is critical for the work to be
>>> "useless" in order for the security model to be the same. If the work was
>>> useful it provides an avenue for actors to have nothing at stake when
>>> submitting a proof of work, since the marginal cost of block construction
>>> will be lessened by the fact that the work was useful in a different
>>> context and therefore would have been done anyway. This actually degrades
>>> the security of the network in the process.
>>>
>>> As a separate issue, proposing a hard fork in the hashing algorithm will
>>> invalidate the enormous amount of capital expenditure by mining entities
>>> and disincentivize future capital expenditure into mining hardware that may
>>> compute these more "useful" proofs of work. This is because any change in
>>> the POW algorithm will be considered unstable and subject to change in the
>>> future. This puts the entire network at even more risk meaning that no
>>> entity is tying their own interests to that of the bitcoin network at
>>> large. It also puts the developers in a position where they can be bribed
>>> by entities with a vested interest in deciding what the new "useful" proof
>>> of work should be.
>>>
>>> All of these things make the Bitcoin network worse off.
>>>
>>> Keagan
>>>
>>> On Fri, Mar 5, 2021 at 1:48 PM Lonero Foundation via bitcoin-dev <
>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>
>>>> Also in regards to my other email, I forgot to iterate that my
>>>> cryptography proposal helps behind the efficiency category but also tackles
>>>> problems such as NP-Completeness or Halting which is something the BTC
>>>> network could be vulnerable to in the future. For sake of simplicity, I do
>>>> want to do this BIP because it tackles lots of the issues in regards to
>>>> this manner and can provide useful insight to the community. If things such
>>>> as bigger block height have been proposed as hard forks, I feel at the very
>>>> least an upgrade regarding the hashing algorithm and cryptography does at
>>>> least warrant some discussion. Anyways I hope I can send you my BIP, just
>>>> let me know on the preferred format?
>>>>
>>>> Best regards, Andrew
>>>>
>>>> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <
>>>> loneroassociation at gmail.com> wrote:
>>>>
>>>>> Hi, this isn't about the energy efficient argument in regards to
>>>>> renewables or mining devices but a better cryptography layer to get the
>>>>> most out of your hashing for validation. I do understand the arbitrariness
>>>>> of it, but do want to still propose a document. Do I use the Media Wiki
>>>>> format on GitHub and just attach it as my proposal?
>>>>>
>>>>> Best regards, Andrew
>>>>>
>>>>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net>
>>>>> wrote:
>>>>>
>>>>>> Hi Ryan and Andrew,
>>>>>>
>>>>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <
>>>>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>>>
>>>>>>>
>>>>>>>   https://www.truthcoin.info/blog/pow-cheapest/
>>>>>>>     "Nothing is Cheaper than Proof of Work"
>>>>>>>     on | 04 Aug 2015
>>>>>>>
>>>>>>>
>>>>>> Just to belabor this a bit, the paper demonstrates that the mining
>>>>>> market will tend to expend resources equivalent to miner reward.  It does
>>>>>> not prove that mining work has to expend *energy* as a primary cost.
>>>>>>
>>>>>> Some might argue that energy expenditure has negative externalities
>>>>>> and that we should move to other resources.  I would argue that the
>>>>>> negative externalities will go away soon because of the move to renewables,
>>>>>> so the point is likely moot.
>>>>>>
>>>>>> _______________________________________________
>>>> bitcoin-dev mailing list
>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>
>>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210305/598bc471/attachment.html>

From aj at erisian.com.au  Sat Mar  6 09:29:31 2021
From: aj at erisian.com.au (Anthony Towns)
Date: Sat, 6 Mar 2021 19:29:31 +1000
Subject: [bitcoin-dev] Taproot activation proposal "Speedy Trial"
In-Reply-To: <20210306034343.fhwrxmq6gbb2os5m@ganymede>
References: <20210306034343.fhwrxmq6gbb2os5m@ganymede>
Message-ID: <20210306092931.6jmw6o2u7a2gewwb@erisian.com.au>

On Fri, Mar 05, 2021 at 05:43:43PM -1000, David A. Harding via bitcoin-dev wrote:
> ## Example timeline
> - T+0: release of one or more full nodes with activation code
> - T+14: signal tracking begins
> - T+28: earliest possible lock in
> - T+104: locked in by this date or need to try a different activation process
> - T+194: activation (if lockin occurred)

> ### Base activation protocol
> The idea can be implemented on top of either Bitcoin Core's existing
> BIP9 code or its proposed BIP8 patchset.[6]
>     BIP9 is already part of Bitcoin Core and I think the changes being
>     proposed would be relatively small, resulting in a small patch that
>     could be easy to review.

To get to specifics, here's a PR, based on #21334, that updates bip9
to support an extra parameter to delay the transition from LOCKED_IN
to ACTIVE until a particular timestamp is reached, and to reduce the
activation threshold to 90%:

  https://github.com/bitcoin/bitcoin/pull/21377

With that in mind, I think the example timeline above could translate
to taproot parameters of:

  nStartTime = 1618358400; // April 14, 2021
  nTimeout = 1626220800; // July 14 2021
  activation_time = 1633046400; // October 1 2021

That is, signalling begins with the first retarget period whose parent's
median time is at least April 14th; and concludes with the last retarget
period whose final block's median time is prior to July 14th; that's
91 days which should be about ~6.5 retarget periods, so should cover 6
full retarget periods, but could only cover 5.  Activation is delayed
until the first retarget period where the final block of the previous
retarget period has a timestamp of at least October 1st.

Note that the timeout there is prior to the expected timestamp of the
startheight block specified in the proposal for bip8 parameters:

  https://en.bitcoin.it/wiki/Taproot_activation_proposal_202102

and earliest activation is after the expected release of 22.0 and hence
the maintenance end of 0.20.

Note also that the PR above specifies the delay as a deadline, not a
delta between lockin and activation; so earlier lockin does not produce
an earlier activation with the code referenced above.

Cheers,
aj


From eric at voskuil.org  Sat Mar  6 10:26:32 2021
From: eric at voskuil.org (Eric Voskuil)
Date: Sat, 6 Mar 2021 02:26:32 -0800
Subject: [bitcoin-dev] Taproot activation proposal "Speedy Trial"
In-Reply-To: <20210306092931.6jmw6o2u7a2gewwb@erisian.com.au>
References: <20210306092931.6jmw6o2u7a2gewwb@erisian.com.au>
Message-ID: <BFE9416D-BAC6-4772-ABA0-DC3B4784C7B7@voskuil.org>

The most sensible approach I?ve seen yet.

e

> On Mar 6, 2021, at 01:29, Anthony Towns via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> ?On Fri, Mar 05, 2021 at 05:43:43PM -1000, David A. Harding via bitcoin-dev wrote:
>> ## Example timeline
>> - T+0: release of one or more full nodes with activation code
>> - T+14: signal tracking begins
>> - T+28: earliest possible lock in
>> - T+104: locked in by this date or need to try a different activation process
>> - T+194: activation (if lockin occurred)
> 
>> ### Base activation protocol
>> The idea can be implemented on top of either Bitcoin Core's existing
>> BIP9 code or its proposed BIP8 patchset.[6]
>>    BIP9 is already part of Bitcoin Core and I think the changes being
>>    proposed would be relatively small, resulting in a small patch that
>>    could be easy to review.
> 
> To get to specifics, here's a PR, based on #21334, that updates bip9
> to support an extra parameter to delay the transition from LOCKED_IN
> to ACTIVE until a particular timestamp is reached, and to reduce the
> activation threshold to 90%:
> 
>  https://github.com/bitcoin/bitcoin/pull/21377
> 
> With that in mind, I think the example timeline above could translate
> to taproot parameters of:
> 
>  nStartTime = 1618358400; // April 14, 2021
>  nTimeout = 1626220800; // July 14 2021
>  activation_time = 1633046400; // October 1 2021
> 
> That is, signalling begins with the first retarget period whose parent's
> median time is at least April 14th; and concludes with the last retarget
> period whose final block's median time is prior to July 14th; that's
> 91 days which should be about ~6.5 retarget periods, so should cover 6
> full retarget periods, but could only cover 5.  Activation is delayed
> until the first retarget period where the final block of the previous
> retarget period has a timestamp of at least October 1st.
> 
> Note that the timeout there is prior to the expected timestamp of the
> startheight block specified in the proposal for bip8 parameters:
> 
>  https://en.bitcoin.it/wiki/Taproot_activation_proposal_202102
> 
> and earliest activation is after the expected release of 22.0 and hence
> the maintenance end of 0.20.
> 
> Note also that the PR above specifies the delay as a deadline, not a
> delta between lockin and activation; so earlier lockin does not produce
> an earlier activation with the code referenced above.
> 
> Cheers,
> aj
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From aj at erisian.com.au  Sat Mar  6 11:33:26 2021
From: aj at erisian.com.au (Anthony Towns)
Date: Sat, 6 Mar 2021 21:33:26 +1000
Subject: [bitcoin-dev] Straight Flag Day (Height) Taproot Activation
In-Reply-To: <281679eb-860b-c6cb-7e7a-5ae28b60f149@mattcorallo.com>
References: <c35e1761-43ca-e157-6a5c-72d27f2c6c6e@mattcorallo.com>
 <20210303145902.cl4mzg6l7avjboil@erisian.com.au>
 <281679eb-860b-c6cb-7e7a-5ae28b60f149@mattcorallo.com>
Message-ID: <20210306113326.mrftlkmmloy2dsag@erisian.com.au>

On Wed, Mar 03, 2021 at 11:49:57AM -0500, Matt Corallo wrote:
> On 3/3/21 09:59, Anthony Towns wrote:
> > A couple of days ago I would have disagreed with this; but with Luke
> > now strongly pushing against implementing lot=false, I can at least see
> > your point...
> Right. It may be the case that the minority group threatening to fork off
> onto a lot=true chain is not large enough to give a second thought to.
> However, I'm not certain that its worth the risk, and, as Chris noted in his
> post this morning, that approach is likely to include more drama.

I think there's two different interpretations of what a "user-activated
fork" means:

 1) if people try to take bitcoin in a direction that risks destroying
    it, it's possible to ignore both devs and hashpower entirely and force
    a chain split to ensure it's possible to continue transacting with
    "the real bitcoin".

 2) removing miners' influence over consensus rules entirely -- so that
    not only can users overcome miner objections by risking a chain split,
    but so that miners don't have any greater ability to object than
    anyone else in the ecosystem.

In my opinion, bip8's optional lockinontimeout setting and must-signal
approach is well-designed for case 1; if miners object for good reasons,
then there is no need to override them (if there's a good reason not to do
something, it shouldn't be done!), while still having the possibility to
override them if they object for bad reasons. Because hashpower disagrees,
there's always a risk of a chain split in that case, so the additional
risk introduced by a signalling requirement is pretty minimal. That the
lockinontimeout value is a setting means it can be switched only when
we're sure there aren't good reasons for the objection.

There is a lot of work to be done to make bitcoind have an acceptable
chance of gracefully *surviving* a network split introduced by this sort
of conflict; but provided no one started setting lockinontimeout=true
until we were six or so months into an activation attempt (and hence
had the opportunity to judge whether the reasons for not activating
were bad), that would likely be enough time to start implementing some
safety mechanisms.

But there seems to be much more signficant support for the case 2 than I
expected; as evidenced by the "let's do lockinontimeout=true immediately"
advocacy, eg:

  I am not willing to go to war for Taproot. I'll be honest the reason
  I'm interested at all is that devs I respect spent a lot of energy and
  time on it and I was reluctant to let their marginally beneficial work
  go to waste.

  I am, however, willing to go to war against LOT=False.

   -- https://twitter.com/francispouliot_/status/1363876292169465856

I don't think bip8 is well-designed for that approach: most importantly,
with early adoption of lockinontimeout=true, bip8 *encourages* a consensus
split in the event that good reasons for not activating are discovered
afterwards, because lockinontimeout=false nodes remain able to abandon
the activation attempt. Consensus splits are terrible; they should be
a last resort used only in the event that bitcoin's fundamental nature
is threatened, not a standard risk if bugs happened to be discovered
late. But additionally, if we are worried miners might not be acting
in the interests of all bitcoin users, there are other games they could
play, such as "if you want X activated quickly, also give us Y; otherwise
we'll delay it as long as possible".

Losing the opportunity to abandon an activation attempt, by whatever
mechanism, also puts a lot more pressure on being absolutely sure of the
desirability of the change at the point when it's merged; because miners,
third-party devs, businesses, and users don't even have the option of
attempting to influence miners, all objections needs to be raised when
the activation parameters are merged, which raises the stakes for that
event substantially.

I think my conclusions from that are:

 * as it stands, people are expecting to run bip8/lot=true nodes on the
   network immediately; so deploying bip8/lot=false with compatible
   parameters risks causing consensus splits, and should not be done

 * David Harding's "speedy trial" approach probably doesn't suffer from
   the problems -- running a lot=true variant would require enforcing
   signalling prior to the end of July, which is an unreasonable timeframe
   to expect the majority of economic nodes to upgrade in; if bip9 is
   used, then the risk of enforcement occuring with minority hashrate
   (and thus having fewer retarget periods before the timeout is
   reached) would also make a bip148/lot=true variant difficulty

 * if people want a "taproot is guaranteed to activate no later than X"
   PR merged, someone needs to do a *lot* more outreach to be sure that
   that's the right outcome, and it's not just devs/maintainers making
   the call

 * IMO, Matt's proposed approach is both a better and simpler approach
   to avoid giving miners undue influence on consensus; as such I've
   drafted up a sample implementation:

     https://github.com/bitcoin/bitcoin/pull/21378

   (Backporting it to 0.21 just requires backporting #19438, which is
   straightforward)

So I think that means my preference is to do the "speedy trial" with
signalling first, and if that fails, then either we've established there
are real problems with taproot and will go back to the drawing board to
fix them, or if we have not found problems by that time we should simply
switch to a straight flag day activation as Matt proposes. Presumably
we'll have established broard community consensus for activation if no
objections are discovered during the speedy trial.

Cheers,
aj


From patrickshirkey at protonmail.com  Sat Mar  6 12:58:25 2021
From: patrickshirkey at protonmail.com (Patrick Shirkey)
Date: Sat, 06 Mar 2021 12:58:25 +0000
Subject: [bitcoin-dev] Hardening against hash reversal attacks
Message-ID: <GmGlyaNk3JAtDK2R6C-cLMWQd2OxPJCj9MAZdKnjKfIRm0dowKWoo4h3dOCZeipQEHvX3wo4u1eV_xmSculSnC_n3AYLp1O2nIVa2Gfcg5Q=@protonmail.com>

Hi,

Given recent discussions around possible cracks to RSA, ECDSA and even sha256 we have been looking at possible options for hardening Bitcoin against those potential attack vectors. While most consider it a low priority, IMO it is better to discuss this issue than ignore it especially given recent developments. Possible solutions may not be quick to implement, test, deploy and prevention is better than the cure.

We humbly present a few seeds of ideas which might be viable defenses. These are not deeply thought out at the technical level but may inspire some useful discussion for a few new BIPs.

We have discussed these ideas in private before submitting to shake out weaknesses. We are aware that the ideas are challenging and probably contentious. We are not seeking didruption. The goal is to defeat potential attacks. Apologies if these ideas are not new and have already been dismissed.

Possible defense strategies:

1. Alternate hashing methods. Not sha256. Exposing them sooner rather than later to enable a smooth transition.

2. Per address seed phrases. In addiition to mulitisig, segwit, P2SH, schnorr, taproot.

3. Removing private keys from a wallet for safe storage in a seperate location.

4. Completely removing wallets from the blockchain for 'absolute' cold storage*. If possible there would no longer be any trace of the wallet or associated addresses. Possibly in combination with the next suggestion.

- Bonus for general maintenance.

5. Burning old coins and generating 'new' coins to 'reset' tx history.

A 'Burn and Reissue' FIFO queue with set miner fees. Satoshis submitted to the queue are permanently 'disabled and no longer in use. Replacement satoshis are added to new blocks and distributed by queue priority. Suggest a set fee to avoid excessively high processessing fees and/or getting stuck in the queue.

* We realise this would require some significant changes that may not be technically possible.

--
Patrick Shirkey
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210306/cb59c212/attachment.html>

From roconnor at blockstream.com  Sat Mar  6 14:44:44 2021
From: roconnor at blockstream.com (Russell O'Connor)
Date: Sat, 6 Mar 2021 09:44:44 -0500
Subject: [bitcoin-dev] Taproot activation proposal "Speedy Trial"
In-Reply-To: <5be46169-8f38-da73-4112-fba2aff6dfcb@achow101.com>
References: <20210306034343.fhwrxmq6gbb2os5m@ganymede>
 <5be46169-8f38-da73-4112-fba2aff6dfcb@achow101.com>
Message-ID: <CAMZUoKmxkHE_d2jTy-a2F9Xr7HxNNb3oyAZ4Wr=4kf8qTP5bdw@mail.gmail.com>

Hi Andrew,

This is a slight misunderstanding of the proposal.  Rather than an extended
lockin period (a term I've erroneously used in the past) it is really a
minimum activation height.

Thus using your figures it would instead be:

* start height = 681408 /* about May 1st */
* timeout height = 695520 /* about Aug 7th */
* min activation height = 709632 /* about Nov 13th */
* lockinontimeout = False
* signaling bit = 2
* threshold = 1815/2016 blocks (90%)

This guarantees 7 retargeting periods between start height and timeout
height.

Being able to make a guarantee about how many retargeting periods we get is
perhaps something worth pursuing given that the signaling period is so
short for this trial.

On Sat, Mar 6, 2021 at 1:04 AM Andrew Chow via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> I like this idea.
>
> In terms of actual parameters, I propose that we base this Speedy Trial
> off of BIP 8 with the following parameters:
> * start height = 681408
> * timeout height = 695520
> * lockinontimeout = False
> * signaling bit = 2
> * threshold = 1815/2016 blocks (90%)
>
> For the extended lockin period, I propose 14112 blocks, which is 7
> retarget periods. Thus the earliest activation height will be 697536 and
> the latest activation height will be 709632.
>
> This will give us an approximate start time of May 1st 2021 and an
> approximate timeout time of August 7th 2021, for a total activation
> period of just over 3 months. The extended lockin period is the same
> number of blocks as the activation period so that will also be just over
> 3 months, giving us the latest activation time of November 13th, 2021.
> If miners activated as soon as possible, the earliest activation time
> would be August 21st 2021.
>
> Additionally, this timeline assumes a mid-April release of Bitcoin Core
> 0.21.1 containing these parameters. They could be changed to move up if
> the expected release date were sooner.
>
>
> Andrew Chow
>
> On 3/5/21 10:43 PM, David A. Harding via bitcoin-dev wrote:
> > On the ##taproot-activation IRC channel, Russell O'Connor recently
> > proposed a modification of the "Let's see what happens" activation
> > proposal.[1] The idea received significant discussion and seemed
> > acceptable to several people who could not previously agree on a
> > proposal (although this doesn't necessarily make it their first
> > choice).  The following is my attempt at a description.
> >
> > 1. Start soon: shortly after the release of software containing this
> >     proposed activation logic, nodes will begin counting blocks towards
> >     the 90% threshold required to lock in taproot.[2]
> >
> > 2. Stop soon: if the lockin threshold isn't reached within approximately
> >     three months, the activation attempt fails.  There is no mandatory
> >     activation and everyone is encouraged to try again using different
> >     activation parameters.
> >
> > 2. Delayed activation: in the happy occasion where the lockin threshold
> >     is reached, taproot is guaranteed to eventually activate---but not
> >     until approximately six months after signal tracking started.
> >
> > ## Example timeline
> >
> > (All dates approximate; see the section below about BIP9 vs BIP8.)
> >
> > - T+0: release of one or more full nodes with activation code
> > - T+14: signal tracking begins
> > - T+28: earliest possible lock in
> > - T+104: locked in by this date or need to try a different activation
> process
> > - T+194: activation (if lockin occurred)
> >
> > ## Analysis
> >
> > The goal of Speedy Trial is to allow a taproot activation attempt to
> > either quickly succeed or quickly fail---without compromising safety in
> > either case.  Details below:
> >
> > ### Mitigating the problems of early success
> >
> > New rules added in a soft fork need to be enforced by a large part of
> > the economy or there's a risk that a long chain of blocks breaking the
> > rules will be accepted by some users and rejected by others, causing a
> > chain split that can result in large direct losses to transaction
> > receivers and potentially even larger indirect losses to holders due to
> > reduced confidence in the safety of the Bitcoin system.
> >
> > One step developers have taken in the past to ensure widespread adoption
> > of new consensus rules is programming in a delay between the time
> software
> > with those rules is expected to be released and when the software starts
> > tracking which blocks signal for activation.  For example:
> >
> >      Soft fork        | Release    | Start      | Delta
> >      -----------------+------------+------------+----------
> >      BIP68 (v0.12.1)  | 2016-04-15 | 2016-05-11 | 26 days
> >      BIP141 (v0.13.1) | 2016-10-27 | 2016-11-18 | 24 days
> >
> >      Sources: BitcoinCore.org,
> https://gist.github.com/ajtowns/1c5e3b8bdead01124c04c45f01c817bc
> >
> > Speedy Trial replaces most of that upfront delay with a backend delay.
> > No matter how fast taproot's activation threshold is reached by miners,
> > there will be six months between the time signal tracking starts and when
> > nodes will begin enforcing taproot's rules.  This gives the userbase even
> > more time to upgrade than if we had used the most recently proposed start
> > date for a BIP8 activation (~July 23rd).[2]
> >
> > ### Succeed, or fail fast
> >
> > The earlier version of this proposal was documented over 200 days ago[3]
> > and taproot's underlying code was merged into Bitcoin Core over 140 days
> > ago.[4]  If we had started Speedy Trial at the time taproot
> > was merged (which is a bit unrealistic), we would've either be less than
> > two months away from having taproot or we would have moved on to the
> > next activation attempt over a month ago.
> >
> > Instead, we've debated at length and don't appear to be any closer to
> > what I think is a widely acceptable solution than when the mailing list
> > began discussing post-segwit activation schemes over a year ago.[5]  I
> > think Speedy Trial is a way to generate fast progress that will either
> > end the debate (for now, if activation is successful) or give us some
> > actual data upon which to base future taproot activation proposals.
> >
> > Of course, for those who enjoy the debate, discussion can continue while
> > waiting for the results of Speedy Trial.
> >
> > ### Base activation protocol
> >
> > The idea can be implemented on top of either Bitcoin Core's existing
> > BIP9 code or its proposed BIP8 patchset.[6]
> >
> > - BIP9 uses two time-based[7] parameters, starttime and timeout.  Using
> >    these values plus a time-based parameter for the minimum activation
> >    delay would give three months for miners to activate taproot, but some
> >    of that time near the start or the end might not be usable due to
> >    signals only being measured in full retarget periods.  However, the
> >    six month time for users to upgrade their node would be not be
> >    affected by either slow or fast block production.
> >
> >      BIP9 is already part of Bitcoin Core and I think the changes being
> >      proposed would be relatively small, resulting in a small patch that
> >      could be easy to review.
> >
> > - BIP8 uses two height-based parameters, startheight and timeoutheight.
> >    Using height values would ensure miners had a certain number of
> >    retarget periods (6) to lock in taproot and that there'd be a certain
> >    number of blocks (about 24,000) until activation, although latest lock
> >    in and expected activation could occur moderately earlier or later
> >    than the estimated three and six months.
> >
> >      BIP8 would likely be used if Speedy Trial fails, so it could be
> >      advantageous to base this proposal on BIP8 so that we gain
> >      experience running that code in production.
> >
> > For additional discussion about using times versus heights, see today's
> > log for ##taproot-activation.[11]
> >
> > ### Additional concerns
> >
> > - Encourages false signaling: false signaling is when miners signal
> >    readiness to enforce rules that their nodes don't actually support.
> >    This was partially responsible for a six-block reorg shortly after the
> >    final BIP66 activation[8] and was found to still be a problem during
> >    the BIP68 lockin period despite BIP9 being designed to avoid it.[9]
> >
> >    Because Speedy Trial only gives miners a maximum of three months to
> >    signal support for taproot, it may encourage such false signaling.  If
> >    taproot locks in as a result of their signaling but most of them fail
> >    to upgrade by the activation date several months later, unprepared
> >    miners could lose large amounts of money and users could see long
> >    reorgs (with unupgraded nodes and SPV lite clients potentially losing
> >    money).
> >
> >    Compared to other activation proposals, I think the only difference is
> >    Speedy Trial's short timeline.  False signaling is possible with any
> >    other proposal and the same problems can occur if miners fail to
> >    upgrade for any mandatory activation.
> >
> > ### Additional advantages
> >
> > - No mandatory signaling: at no time are miners required to signal by
> >    Speedy Trial.  This includes no mandatory signaling during the
> >    locked_in period(s), although such signaling will be encouraged (as it
> >    was with BIP9[10]).
> >
> > - Party time: to a lesser degree, a benefit mentioned for flag day
> >    activation may also apply here: we could get up to six months
> >    advanced notice of taproot activation, allowing users, developers, and
> >    organizations to prepare software, announcements, and celebrations for
> >    that event.
> >
> > ## Implementation details and next steps
> >
> > Initial discussion about implementation may be found in today's
> > ##taproot-activation log.[11] If it appears Speedy Trial may have
> > traction, Russell O'Connor has offered to work on a patch against BIP8
> > implementing it.
> >
> > ## Acknowledgments
> >
> > The original idea for a short-duration attempt was discussed in the
> > ##taproot-activation IRC channel last July and the revised idea saw
> > additional evaluation there this week.  Despite growing frustration,
> > discussion has been overwhelmingly constructive, for which all the
> > contributors should be commended.  Although this should not in any way
> > imply endorsement, I'm grateful for the review and comments on a draft
> > of this email by Adam Gibson, Andrew Chow, Anthony Towns, Chris Belcher,
> > Jeremy Rubin, Jonas Nick, Luke Dashjr, Michael Folkson, Russell
> > O'Connor, and IRC users maybehuman and proofofkeags
> >
> > ## Footnotes
> >
> > [1]
> https://en.bitcoin.it/wiki/Taproot_activation_proposals#Let.E2.80.99s_see_what_happens.2C_BIP8.28false.2C_3m.29
> >
> > [2] A threshold of 1,815/2,016 blocks (90%) in a single retarget period
> >      seemed to have near-universal support during the 2021-02-16 IRC
> >      meeting.  See:
> https://en.bitcoin.it/wiki/Taproot_activation_proposal_202102
> >
> > [3]
> https://en.bitcoin.it/w/index.php?title=Taproot_activation_proposals&oldid=68062
> >
> > [4] https://github.com/bitcoin/bitcoin/pull/19953
> >
> > [5]
> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017547.html
> >
> > [6] https://github.com/bitcoin/bitcoin/pull/19573
> >
> > [7] BIP9's times are based on the median of the past 11 blocks, which
> >      usually trails UTC by about 90 minutes but which can trail behind
> >      realtime significantly if miners are doing weird things.
> >
> > [8] https://en.bitcoin.it/wiki/July_2015_chain_forks
> >
> > [9]
> https://buildingbitcoin.org/bitcoin-core-dev/log-2016-06-21.html#l-32
> >
> > [10]
> https://github.com/bitcoin/bitcoin/blob/ed25cb58f605ba583c735f330482df0bf9348f3a/src/test/versionbits_tests.cpp#L337-L339
> >
> > [11] http://gnusha.org/taproot-activation/2021-03-05.log
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210306/ac5abbef/attachment-0001.html>

From lf-lists at mattcorallo.com  Sat Mar  6 17:57:22 2021
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Sat, 6 Mar 2021 12:57:22 -0500
Subject: [bitcoin-dev] Making the case for flag day activation of taproot
In-Reply-To: <CAMZUoKmTL+2GMpv8Qr5uOUC2bMgyuzMPw1zjdjuD+XNE23-65A@mail.gmail.com>
References: <3286a7eb-9deb-77d6-4527-58e0c5882ae2@riseup.net>
 <CAMZUoKkWmdwi-VH3WUvFfG+5MDK3xhvZUac3eBQbxXX_b_btWw@mail.gmail.com>
 <4947b02e-90fb-9044-4552-767de805ff14@mattcorallo.com>
 <CAMZUoKmTL+2GMpv8Qr5uOUC2bMgyuzMPw1zjdjuD+XNE23-65A@mail.gmail.com>
Message-ID: <686cc38a-6ab7-1370-971e-69f6b8f834dc@mattcorallo.com>

Replies inline. Several sections removed, where I basically agree.

On 3/4/21 08:47, Russell O'Connor wrote:
> Appologies as I've rearranged your comments in my reply.
> I agree with you.? I also think we have plenty of evidence to proceed with taproot and could proceed with a PR for such 
> a flag day activation.? If there is support for it to be merged, that would be fantastic.? I think we should proceed 
> along these lines forthwith.
> 
> However, the existence and/or release of a flag day activation code does not in of itself preclude concurrently 
> developing and/or releasing a BIP8 LOT=false deployment.? Activating taproot is "idempotent" after all. We could even do 
> a Core release with a flag day activation while we continue to discuss BIP8 LOT=false if that gets the ball rolling.  
> Certainly having a flag day activation code merged would take a lot of pressure off further BIP8 LOT=false work.

Hmm, while this is certainly true at a technical level, it adds a lot of complexity both in terms of discussion, and for 
users - "I already upgraded to Taproot, why did I just see a fork with an invalid Taproot spend?".

> As Aaron noted on IRC, if the sticking point here is the MUST_SIGNAL state, then running BIP8 LOT=false alongside a flag 
> day activation at timeout may be the way to go.? Once a flag day deployment is released, the LOT=true people would have 
> their guaranteed activation and would be less interested in an alternative client. And without a MUST_SIGNAL state, I 
> believe the LOT=false deployment won't lead any hashpower that is following standardness rules to create invalid blocks.

This is indeed a significant improvement over BIP 8 in my opinion. However, as I pointed out on a Reddit discussion with 
Aaron, I'm still incredibly worried about users pushing for some UASF-style forced-signaling guerilla faster-activation. 
It may absolutely be the case that Taproot activates quickly or that such users are a tiny minority of transacting. 
However, as we saw with BIP 148/UASF, even a tiny minority of transacting users can set the tone and claim victory over 
how a soft-fork activates. I worry that even your approach here runs the risk of yet further normalization of consensus 
rule diversity on the network.

Maybe my worry is overblown, and I'm certainly not going to try to solely stand in the way on this one, but now that 
we're stuck in yet another overblown debate, we might as well take it as an opportunity to reinforce the idea that 
consensus rule diversity runs the risk of consensus failure, and isn't a reasonable risk.
> 
>      > Even today, I still think that starting with BIP8 LOT=false is, generally speaking, considered a reasonably safe
>      > activation method in the sense that I think it will be widely considered as a "not wholly unacceptable" approach to
>      > activation.
> 
>     How do you propose avoiding divergent consensus rules on the network, something which a number of commentors on this
>     list have publicly committed to?
> 
> 
> Firstly, it is an open network.? Anyone can join and run whatever consensus rules they want.? People have run divergent 
> consensus rules on the network in the past and it will continue to do so in the future.
> It is troublesome when it happens in mass, but it isn't fatal.? We can't prevent it, and we should continue working to 
> keep the protocol robust in the face of it.
> And we certainly shouldn't be bullied by anyone who comes threatening their own soft-fork.

Apologies. I should have phrased my comment better. My worry, at a broad level is that
(a) people have taken the events around the Segwit BIP 148 UASF to mean that a very small minority of users can (and 
maybe should) push consensus rules through threats of breaking consensus and
(b) there is a very vocal group today which is reinforcing this belief by ignoring the complex context around Segwit and 
behaving similarly with regards to Taproot.

Indeed, there is nothing we can, or should, do to actively prevent people from running their own software which 
interprets Bitcoin's consensus rules in...creative ways. But that isn't to say there is no use worrying about it. 95% of 
Bitcoin users aren't aware that this debate is even happening. Of the remaining 5%, 90% haven't had the time to research 
and think deeply enough to form an opinion. Our responsibility is to the 99.5% of users.

Sure, individuals running different consensus rules won't cause immediate harm to others, but the net effect of many 
users doing so and especially the community normalizing such behavior very significantly can. Ill-informed transactors 
running such software (including wallet providers with users who were unaware of the events) can be screwed out of their 
Bitcoin. This outcome very well could have occurred in the case of the BIP 148 UASF, and repeating the same pattern many 
times will not help to de-risk that.

> Even simply doing nothing may not prevent divergent consensus from appearing on the network.? Playing conservative isn't 
> playing it safe because there is nothing more conservative than doing nothing, which isn't guaranteed to be safe in this 
> sense.

Indeed. The obvious most conservative action is not activating Taproot at all. Obviously this is unlikely to solve the 
issue :).

> Secondly, for the specific concern of people running BIP8 LOT=true clients, we could start with "Let?s see what happens" 
> with a short 3 or 4 month signaling period.? A short enough signaling period is not "hijackable".? We could add a longer 
> LOCKED_IN period if there are worries about getting enough nodes upgraded in time for activation.? I see other options 
> as well.

Potentially indeed. Though I'm not so sure that several months represents a period that is not "hijackable", given the 
speed at which someone can hack together naive activation code.

> I keep being told that miners are ready and willing to activate, and taproot will probably activate in two months. All 
> we have to do is get something out the door that does that.? If taproot activates in two months, great.? If it fails to 
> activate we will learn so much in so little time.? UASF's will get to say "I told you so" without waiting a year.? Users 
> will get to take active, meaningful and observable steps to demonstrate their desire for a taproot upgrade.? Very little 
> time will be wasted, in particular we don't have to finish debating how best to handle the unlikely scenario where 
> taproot doesn't activate right away for whatever reason that is, an scenario that isn't even likely to occur.

Indeed, I've always suggested a miner activation window first to "learn something" about the state of it. However, I do 
think we've passed the point where that should be a chief concern. The strength and diversity of public statements in 
support of Taproot as a change to the network is rather overwhelming.

> I'm still very optimistic.? I see multiple plausible and potentially acceptable paths towards activation still open and 
> we don't even have to choose only one.? I can hardly wait to look at the forthcoming PRs for these possibilities.

I agree :).

From lf-lists at mattcorallo.com  Sat Mar  6 18:11:01 2021
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Sat, 6 Mar 2021 13:11:01 -0500
Subject: [bitcoin-dev] Taproot activation proposal "Speedy Trial"
In-Reply-To: <20210306034343.fhwrxmq6gbb2os5m@ganymede>
References: <20210306034343.fhwrxmq6gbb2os5m@ganymede>
Message-ID: <2a6955d6-d242-89f5-d622-82889d499cc0@mattcorallo.com>

I'm really unsure that three months is a short enough time window that there wouldn't be a material effort to split the 
network with divergent consensus rules. Instead, a three month window is certainly long enough to organize and make a 
lot of noise around such an effort, given BIP 148 was organized and reached its peak within a similar such window.

Worse, because the obvious alternative after a three month activation failure is a significant delay prior to 
activation, the vocal UASF minority may be encouraged to pursue such a route to avoid such a delay.

One alternative may be to reduce the signaling windows involved and start slightly later. Instead of the likelihood of 
failure growing on the horizon, simply have two signaling windows (maybe two weeks, maybe a moth each?). In order to 
ensure success remains likely, begin them somewhat later after software release to give pools and miners a chance to 
configure their mining software in advance.

Matt

On 3/5/21 22:43, David A. Harding via bitcoin-dev wrote:
> On the ##taproot-activation IRC channel, Russell O'Connor recently
> proposed a modification of the "Let's see what happens" activation
> proposal.[1] The idea received significant discussion and seemed
> acceptable to several people who could not previously agree on a
> proposal (although this doesn't necessarily make it their first
> choice).  The following is my attempt at a description.
> 
> 1. Start soon: shortly after the release of software containing this
>     proposed activation logic, nodes will begin counting blocks towards
>     the 90% threshold required to lock in taproot.[2]
> 
> 2. Stop soon: if the lockin threshold isn't reached within approximately
>     three months, the activation attempt fails.  There is no mandatory
>     activation and everyone is encouraged to try again using different
>     activation parameters.
>     
> 2. Delayed activation: in the happy occasion where the lockin threshold
>     is reached, taproot is guaranteed to eventually activate---but not
>     until approximately six months after signal tracking started.
> 
> ## Example timeline
> 
> (All dates approximate; see the section below about BIP9 vs BIP8.)
> 
> - T+0: release of one or more full nodes with activation code
> - T+14: signal tracking begins
> - T+28: earliest possible lock in
> - T+104: locked in by this date or need to try a different activation process
> - T+194: activation (if lockin occurred)
> 
> ## Analysis
> 
> The goal of Speedy Trial is to allow a taproot activation attempt to
> either quickly succeed or quickly fail---without compromising safety in
> either case.  Details below:
> 
> ### Mitigating the problems of early success
> 
> New rules added in a soft fork need to be enforced by a large part of
> the economy or there's a risk that a long chain of blocks breaking the
> rules will be accepted by some users and rejected by others, causing a
> chain split that can result in large direct losses to transaction
> receivers and potentially even larger indirect losses to holders due to
> reduced confidence in the safety of the Bitcoin system.
> 
> One step developers have taken in the past to ensure widespread adoption
> of new consensus rules is programming in a delay between the time software
> with those rules is expected to be released and when the software starts
> tracking which blocks signal for activation.  For example:
> 
>      Soft fork        | Release    | Start      | Delta
>      -----------------+------------+------------+----------
>      BIP68 (v0.12.1)  | 2016-04-15 | 2016-05-11 | 26 days
>      BIP141 (v0.13.1) | 2016-10-27 | 2016-11-18 | 24 days
> 
>      Sources: BitcoinCore.org, https://gist.github.com/ajtowns/1c5e3b8bdead01124c04c45f01c817bc
> 
> Speedy Trial replaces most of that upfront delay with a backend delay.
> No matter how fast taproot's activation threshold is reached by miners,
> there will be six months between the time signal tracking starts and when
> nodes will begin enforcing taproot's rules.  This gives the userbase even
> more time to upgrade than if we had used the most recently proposed start
> date for a BIP8 activation (~July 23rd).[2]
> 
> ### Succeed, or fail fast
> 
> The earlier version of this proposal was documented over 200 days ago[3]
> and taproot's underlying code was merged into Bitcoin Core over 140 days
> ago.[4]  If we had started Speedy Trial at the time taproot
> was merged (which is a bit unrealistic), we would've either be less than
> two months away from having taproot or we would have moved on to the
> next activation attempt over a month ago.
> 
> Instead, we've debated at length and don't appear to be any closer to
> what I think is a widely acceptable solution than when the mailing list
> began discussing post-segwit activation schemes over a year ago.[5]  I
> think Speedy Trial is a way to generate fast progress that will either
> end the debate (for now, if activation is successful) or give us some
> actual data upon which to base future taproot activation proposals.
> 
> Of course, for those who enjoy the debate, discussion can continue while
> waiting for the results of Speedy Trial.
> 
> ### Base activation protocol
> 
> The idea can be implemented on top of either Bitcoin Core's existing
> BIP9 code or its proposed BIP8 patchset.[6]
> 
> - BIP9 uses two time-based[7] parameters, starttime and timeout.  Using
>    these values plus a time-based parameter for the minimum activation
>    delay would give three months for miners to activate taproot, but some
>    of that time near the start or the end might not be usable due to
>    signals only being measured in full retarget periods.  However, the
>    six month time for users to upgrade their node would be not be
>    affected by either slow or fast block production.
>    
>      BIP9 is already part of Bitcoin Core and I think the changes being
>      proposed would be relatively small, resulting in a small patch that
>      could be easy to review.
> 
> - BIP8 uses two height-based parameters, startheight and timeoutheight.
>    Using height values would ensure miners had a certain number of
>    retarget periods (6) to lock in taproot and that there'd be a certain
>    number of blocks (about 24,000) until activation, although latest lock
>    in and expected activation could occur moderately earlier or later
>    than the estimated three and six months.
>    
>      BIP8 would likely be used if Speedy Trial fails, so it could be
>      advantageous to base this proposal on BIP8 so that we gain
>      experience running that code in production.
> 
> For additional discussion about using times versus heights, see today's
> log for ##taproot-activation.[11]
> 
> ### Additional concerns
> 
> - Encourages false signaling: false signaling is when miners signal
>    readiness to enforce rules that their nodes don't actually support.
>    This was partially responsible for a six-block reorg shortly after the
>    final BIP66 activation[8] and was found to still be a problem during
>    the BIP68 lockin period despite BIP9 being designed to avoid it.[9]
> 
>    Because Speedy Trial only gives miners a maximum of three months to
>    signal support for taproot, it may encourage such false signaling.  If
>    taproot locks in as a result of their signaling but most of them fail
>    to upgrade by the activation date several months later, unprepared
>    miners could lose large amounts of money and users could see long
>    reorgs (with unupgraded nodes and SPV lite clients potentially losing
>    money).
> 
>    Compared to other activation proposals, I think the only difference is
>    Speedy Trial's short timeline.  False signaling is possible with any
>    other proposal and the same problems can occur if miners fail to
>    upgrade for any mandatory activation.
> 
> ### Additional advantages
> 
> - No mandatory signaling: at no time are miners required to signal by
>    Speedy Trial.  This includes no mandatory signaling during the
>    locked_in period(s), although such signaling will be encouraged (as it
>    was with BIP9[10]).
> 
> - Party time: to a lesser degree, a benefit mentioned for flag day
>    activation may also apply here: we could get up to six months
>    advanced notice of taproot activation, allowing users, developers, and
>    organizations to prepare software, announcements, and celebrations for
>    that event.
> 
> ## Implementation details and next steps
> 
> Initial discussion about implementation may be found in today's
> ##taproot-activation log.[11] If it appears Speedy Trial may have
> traction, Russell O'Connor has offered to work on a patch against BIP8
> implementing it.
> 
> ## Acknowledgments
> 
> The original idea for a short-duration attempt was discussed in the
> ##taproot-activation IRC channel last July and the revised idea saw
> additional evaluation there this week.  Despite growing frustration,
> discussion has been overwhelmingly constructive, for which all the
> contributors should be commended.  Although this should not in any way
> imply endorsement, I'm grateful for the review and comments on a draft
> of this email by Adam Gibson, Andrew Chow, Anthony Towns, Chris Belcher,
> Jeremy Rubin, Jonas Nick, Luke Dashjr, Michael Folkson, Russell
> O'Connor, and IRC users maybehuman and proofofkeags
> 
> ## Footnotes
> 
> [1] https://en.bitcoin.it/wiki/Taproot_activation_proposals#Let.E2.80.99s_see_what_happens.2C_BIP8.28false.2C_3m.29
> 
> [2] A threshold of 1,815/2,016 blocks (90%) in a single retarget period
>      seemed to have near-universal support during the 2021-02-16 IRC
>      meeting.  See: https://en.bitcoin.it/wiki/Taproot_activation_proposal_202102
> 
> [3] https://en.bitcoin.it/w/index.php?title=Taproot_activation_proposals&oldid=68062
> 
> [4] https://github.com/bitcoin/bitcoin/pull/19953
> 
> [5] https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017547.html
> 
> [6] https://github.com/bitcoin/bitcoin/pull/19573
> 
> [7] BIP9's times are based on the median of the past 11 blocks, which
>      usually trails UTC by about 90 minutes but which can trail behind
>      realtime significantly if miners are doing weird things.
> 
> [8] https://en.bitcoin.it/wiki/July_2015_chain_forks
> 
> [9] https://buildingbitcoin.org/bitcoin-core-dev/log-2016-06-21.html#l-32
> 
> [10] https://github.com/bitcoin/bitcoin/blob/ed25cb58f605ba583c735f330482df0bf9348f3a/src/test/versionbits_tests.cpp#L337-L339
> 
> [11] http://gnusha.org/taproot-activation/2021-03-05.log
> 
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

From ricardojdfilipe at gmail.com  Sat Mar  6 15:21:12 2021
From: ricardojdfilipe at gmail.com (Ricardo Filipe)
Date: Sat, 6 Mar 2021 15:21:12 +0000
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CA+YkXXyBmOootb=Kt6CH3yquYVnAZd=fJQqiF_A3p_pkB8QC3g@mail.gmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CAMnpzfop8ttqjMAKoS37zpQV6WiZfi1Bn+y_e-HaepTiD4Vm1Q@mail.gmail.com>
 <CAB0O3SVNyr_t23Y0LyT0mSaf6LONFRLYJ8qzO7rcdJFnrGccFw@mail.gmail.com>
 <CA+YkXXwkSCu=2UOEhzFBzGDHo1c=Ewqsnxp632ke3jdH1ff5WA@mail.gmail.com>
 <CA+YkXXwfS7eer5Za_ed9tCNdfOp4c3nV_X=mfXzoDxMm6BrizQ@mail.gmail.com>
 <CALeFGL31M5DAULLRtCwjPYHaPVqsVqREUg6WQ2-cuj23SNk=BA@mail.gmail.com>
 <CA+YkXXwBMG6YUAhf-2U5EV5Ep5RgG2foc9chramNFN5=AQ=-EA@mail.gmail.com>
 <CALeFGL3E-rWW9aJkwre_3UF44vbNxPH2436DvaQdHoqEQ5b+eg@mail.gmail.com>
 <CA+YkXXyBmOootb=Kt6CH3yquYVnAZd=fJQqiF_A3p_pkB8QC3g@mail.gmail.com>
Message-ID: <CALC81CMDQf4PqxRisQw58OL7QSFeMcQTvLMvmtOGJ_ya4-dhLg@mail.gmail.com>

As said before, you are free to create the BIP in your own repository
and bring it to discussion on the mailing list. then you can do a PR

Lonero Foundation via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> escreveu no dia s?bado,
6/03/2021 ?(s) 08:58:
>
> I know Ethereum had an outlandishly large percentage of nodes running on AWS, I heard the same thing is for Bitcoin but for mining. Had trouble finding the article online so take it with a grain of salt. The point though is that both servers and ASIC specific hardware would still be able to benefit from the cryptography upgrade I am proposing, as this was in relation to the disinfranchisemet point.
>
> That said, I think the best way to move forward is to submit a BIP pull request for a draft via GitHub using BIP #2's draft format and any questions people have can be answered in the reqeust's comments. That way people don't have to get emails everytime there is a reply, but replies still get seen as opposed to offline discussion. Since the instructions say to email bitcoin-dev before doing a bip draft, I have done that. Since people want to see the draft beforehand and it isn't merged manually anyways, I think it is the easiest way to handle this.
>
> I'm also okay w/ continuing the discussion on bitcoin-dev but rather form a discussion on git instead given I don't want to accidentally impolitely bother people given this is a moderated list and we already established some interest for at least a draft.
>
> Does that seem fine?
>
> Best regards, Andrew
>
> On Fri, Mar 5, 2021, 7:41 PM Keagan McClelland <keagan.mcclelland at gmail.com> wrote:
>>
>> > A large portion of BTC is already mined through AWS servers and non-asic specific hardware anyways. A majority of them would benefit from a hybrid proof, and the fact that it is hybrid in that manner wouldn't disenfranchise currently optimized mining entities as well.
>>
>> My instincts tell me that this is an outlandish claim. Do you have supporting evidence for this?
>>
>> Keagan
>>
>> On Fri, Mar 5, 2021 at 3:22 PM Lonero Foundation via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>
>>> Actually I mentioned a proof of space and time hybrid which is much different than staking. Sorry to draw for the confusion as PoC is more commonly used then PoST.
>>> There is a way to make PoC cryptographically compatible w/ Proof of Work as it normally stands: https://en.wikipedia.org/wiki/Proof_of_space
>>> It has rarely been done though given the technological complexity of being both CPU compatible and memory-hard compatible. There are lots of benefits outside of the realm of efficiency, and I already looked into numerous fault tolerant designs as well and what others in the cryptography community attempted to propose. The actual argument you have only against this is the Proof of Memory fallacy, which is only partially true. Given how the current hashing algorithm works, hard memory allocation wouldn't be of much benefit given it is more optimized for CPU/ASIC specific mining. I'm working towards a hybrid mechanism that fixes that. BTW: The way Bitcoin currently stands in its cryptography still needs updating regardless. If someone figures out NP hardness or the halting problem the traditional rule of millions of years to break all of Bitcoin's cryptography now comes down to minutes. Bitcoin is going to have to eventually radically upgrade their cryptography and hashing algo in the future regardless. I want to integrate some form of NP complexity in regards to the hybrid cryptography I'm aiming to provide which includes a polynomial time algorithm in the cryptography. More than likely the first version of my BTC hard fork will be coded in a way where integrating such complexity in the future only requires a soft fork or minor upgrade to its chain.
>>>
>>> In regards to the argument, "As a separate issue, proposing a hard fork in the hashing algorithm will invalidate the enormous amount of capital expenditure by mining entities and disincentivize future capital expenditure into mining hardware that may compute these more "useful" proofs of work."
>>>
>>> A large portion of BTC is already mined through AWS servers and non-asic specific hardware anyways. A majority of them would benefit from a hybrid proof, and the fact that it is hybrid in that manner wouldn't disenfranchise currently optimized mining entities as well.
>>>
>>> There are other reasons why a cryptography upgrade like this is beneficial. Theoretically one can argue BItcoin isn't fully decentralized. It is few unsolved mathematical proofs away from being entirely broken. My goal outside of efficiency is to build cryptography in a way that prevents such an event from happening in the future, if it was to ever happen. I have various research in regards to this area and work alot with distributed computing. I believe if the BTC community likes such a proposal, I would single handedly be able to build the cryptographic proof myself (though would like as many open source contributors as I can get :)
>>>
>>> Anyways just something to consider. We are in the same space in regards to what warrants a shitcoin or the whole argument against staking.
>>> https://hackernoon.com/ethereum-you-are-a-centralized-cryptocurrency-stop-telling-us-that-you-arent-pi3s3yjl
>>>
>>> Best regards,  Andrew
>>>
>>> On Fri, Mar 5, 2021 at 4:11 PM Keagan McClelland <keagan.mcclelland at gmail.com> wrote:
>>>>
>>>> It is important to understand that it is critical for the work to be "useless" in order for the security model to be the same. If the work was useful it provides an avenue for actors to have nothing at stake when submitting a proof of work, since the marginal cost of block construction will be lessened by the fact that the work was useful in a different context and therefore would have been done anyway. This actually degrades the security of the network in the process.
>>>>
>>>> As a separate issue, proposing a hard fork in the hashing algorithm will invalidate the enormous amount of capital expenditure by mining entities and disincentivize future capital expenditure into mining hardware that may compute these more "useful" proofs of work. This is because any change in the POW algorithm will be considered unstable and subject to change in the future. This puts the entire network at even more risk meaning that no entity is tying their own interests to that of the bitcoin network at large. It also puts the developers in a position where they can be bribed by entities with a vested interest in deciding what the new "useful" proof of work should be.
>>>>
>>>> All of these things make the Bitcoin network worse off.
>>>>
>>>> Keagan
>>>>
>>>> On Fri, Mar 5, 2021 at 1:48 PM Lonero Foundation via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>>
>>>>> Also in regards to my other email, I forgot to iterate that my cryptography proposal helps behind the efficiency category but also tackles problems such as NP-Completeness or Halting which is something the BTC network could be vulnerable to in the future. For sake of simplicity, I do want to do this BIP because it tackles lots of the issues in regards to this manner and can provide useful insight to the community. If things such as bigger block height have been proposed as hard forks, I feel at the very least an upgrade regarding the hashing algorithm and cryptography does at least warrant some discussion. Anyways I hope I can send you my BIP, just let me know on the preferred format?
>>>>>
>>>>> Best regards, Andrew
>>>>>
>>>>> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <loneroassociation at gmail.com> wrote:
>>>>>>
>>>>>> Hi, this isn't about the energy efficient argument in regards to renewables or mining devices but a better cryptography layer to get the most out of your hashing for validation. I do understand the arbitrariness of it, but do want to still propose a document. Do I use the Media Wiki format on GitHub and just attach it as my proposal?
>>>>>>
>>>>>> Best regards, Andrew
>>>>>>
>>>>>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net> wrote:
>>>>>>>
>>>>>>> Hi Ryan and Andrew,
>>>>>>>
>>>>>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>>>>>
>>>>>>>>
>>>>>>>>   https://www.truthcoin.info/blog/pow-cheapest/
>>>>>>>>     "Nothing is Cheaper than Proof of Work"
>>>>>>>>     on | 04 Aug 2015
>>>>>>>>
>>>>>>>
>>>>>>> Just to belabor this a bit, the paper demonstrates that the mining market will tend to expend resources equivalent to miner reward.  It does not prove that mining work has to expend *energy* as a primary cost.
>>>>>>>
>>>>>>> Some might argue that energy expenditure has negative externalities and that we should move to other resources.  I would argue that the negative externalities will go away soon because of the move to renewables, so the point is likely moot.
>>>>>>>
>>>>> _______________________________________________
>>>>> bitcoin-dev mailing list
>>>>> bitcoin-dev at lists.linuxfoundation.org
>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From dave at dtrt.org  Sat Mar  6 20:23:50 2021
From: dave at dtrt.org (David A. Harding)
Date: Sat, 6 Mar 2021 10:23:50 -1000
Subject: [bitcoin-dev] Taproot activation proposal "Speedy Trial"
In-Reply-To: <2a6955d6-d242-89f5-d622-82889d499cc0@mattcorallo.com>
References: <20210306034343.fhwrxmq6gbb2os5m@ganymede>
 <2a6955d6-d242-89f5-d622-82889d499cc0@mattcorallo.com>
Message-ID: <20210306202350.qdcpvxgedn6qhuxa@ganymede>

On Sat, Mar 06, 2021 at 01:11:01PM -0500, Matt Corallo wrote:
> I'm really unsure that three months is a short enough time window that there
> wouldn't be a material effort to split the network with divergent consensus
> rules. 

I oppose designing activation mechanisms with the goal of preventing
other people from effectively exercising self determination over what
consensus rules their nodes enforce.

Three months was chosen because it's long enough to give miners a
reasonable enough amount of time to activate taproot but it's also short
enough that it doesn't delay any of the existing proposals with roughly
one-year timelines.  As such, I think it has the potential to gain
acceptance from multiple current factions (even if it doesn't ever gain
their full approval), allowing us to move forward with rough social
consensus and to gain useful information from the attempt that can
inform future decisions.

-Dave
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210306/69399d40/attachment.sig>

From michaelfolkson at gmail.com  Sat Mar  6 19:56:02 2021
From: michaelfolkson at gmail.com (Michael Folkson)
Date: Sat, 6 Mar 2021 19:56:02 +0000
Subject: [bitcoin-dev] Taproot activation proposal "Speedy Trial"
Message-ID: <CAFvNmHQKrw=UsUqNfBy2pO-LyfH=7VwO8z1VaHPvimXGReUyBQ@mail.gmail.com>

Hi Matt

> I'm really unsure that three months is a short enough time window that
there wouldn't be a material effort to split the network with divergent
consensus rules. Instead, a three month window is certainly long enough to
organize and make a lot of noise around such an effort, given BIP 148 was
organized and reached its peak within a similar such window.

I'm not sure either. I can't control anyone other than myself. I think (and
Luke has also stated on IRC) that trying a UASF (LOT=true) during a "Speedy
Trial" deployment would be crazy. I would certainly recommend no one tries
that but I can't stop anyone. I'll repeat that soft forks have and always
will contain some limited chain split risk regardless of activation
mechanism. I think you are well intentioned but I'm not sure if you've
fully grasped that yet. Maybe you have and I'm missing something.

> Worse, because the obvious alternative after a three month activation
failure is a significant delay prior to activation, the vocal UASF minority
may be encouraged to pursue such a route to avoid such a delay.

Again I can only speak for myself but I wouldn't support a UASF until this
"fail fast" Speedy Trial has completed and failed. Luke agrees with that
and other people (eg proofofkeags) on the ##uasf IRC channel have also
supported this "Speedy Trial" proposal. If you want me (or anyone else for
that matter) to guarantee there won't be an attempted UASF during a Speedy
Trial deployment obviously nobody can do that. All I can say is that
personally I won't support one.

> One alternative may be to reduce the signaling windows involved and start
slightly later. Instead of the likelihood of failure growing on the
horizon, simply have two signaling windows (maybe two weeks, maybe a moth
each?). In order to ensure success remains likely, begin them somewhat
later after software release to give pools and miners a chance to configure
their mining software in advance.

The parameters for Speedy Trial are being hammered out on IRC as we speak.
I'd encourage you to engage with those discussions. I'd really like to
avoid a scenario where we have broad consensus on the details of Speedy
Trial and then you come out the woodwork weeks later with either an
alternative proposal or a criticism for how the details of Speedy Trial
were finalized.

I've read your email as you're concerned about a UASF during a Speedy Trial
deployment. Other than that I think (?) you support it and you are free to
join the discussion on IRC if you have particular views on parameters.
Personally I don't think those parameters should be chosen assuming there
will be a UASF during the deployment but you can argue that case on IRC if
you wish. All proposals you have personally put forward suffer from chain
split risk in the face of a competing incompatible activation mechanism.


-- 
Michael Folkson
Email: michaelfolkson at gmail.com
Keybase: michaelfolkson
PGP: 43ED C999 9F85 1D40 EAF4 9835 92D6 0159 214C FEE3
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210306/fe5ea3fe/attachment.html>

From arielluaces at gmail.com  Sat Mar  6 20:44:48 2021
From: arielluaces at gmail.com (Ariel Luaces)
Date: Sat, 6 Mar 2021 12:44:48 -0800
Subject: [bitcoin-dev] Taproot activation proposal "Speedy Trial"
In-Reply-To: <2a6955d6-d242-89f5-d622-82889d499cc0@mattcorallo.com>
References: <20210306034343.fhwrxmq6gbb2os5m@ganymede>
 <2a6955d6-d242-89f5-d622-82889d499cc0@mattcorallo.com>
Message-ID: <CAOv1TngCYTLzQZXNRkwFdAdPsgqNikZZETgx+iUpY+kPcJx6qg@mail.gmail.com>

On Sat, Mar 6, 2021 at 10:11 AM Matt Corallo via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> I'm really unsure that three months is a short enough time window that there wouldn't be a material effort to split the
> network with divergent consensus rules. Instead, a three month window is certainly long enough to organize and make a
> lot of noise around such an effort, given BIP 148 was organized and reached its peak within a similar such window.
>
> Worse, because the obvious alternative after a three month activation failure is a significant delay prior to
> activation, the vocal UASF minority may be encouraged to pursue such a route to avoid such a delay.
>

I agree with your concern, a three month window motivates a small
group to constantly tell people to upgrade as soon as possible. Which
is mostly fine, but if this group gets near 51% mining support in the
three months it will embolden them to switch the messaging from
"upgrade the client" to "run this new client that has the LOT flag
switched to true" (UASF)
This marketing group will attempt a UASF regardless of the timelines
because there is no cost if they fail a UASF and there is great reward
if they succeed by activating in 3 months. They can run an alt-node,
scare everyone else of being reorged, pretend they have a majority,
and say their chain is the safe one. I say there is no cost because
the leaders of that movement are likely savvy enough to give up the
effort and move back to running core even after the chain split. The
ones who get hurt are the followers of the UASF movement that don't
fully understand the discussion and drink the kool aid.
A short time window doesn't preclude this group from attempting a UASF.

> One alternative may be to reduce the signaling windows involved and start slightly later. Instead of the likelihood of
> failure growing on the horizon, simply have two signaling windows (maybe two weeks, maybe a moth each?). In order to
> ensure success remains likely, begin them somewhat later after software release to give pools and miners a chance to
> configure their mining software in advance.
>
> Matt

The shorter the signaling windows the more unlikely they are to reach
a mining power supermajority.
With a short signaling window the supermajority threshold will
probably be configured to low levels (80% 70% 60%). Which makes the
activation period dangerous because it forces the other miners (20%
30% 40%) to upgrade really suddenly once the threshold is reached.
Unless the LOCKED_IN period is made really long (1 year) but then we
have to wait a really long time.
As long as the mining power running the soft fork is above 50% the
chain will stay together. Anything above that is just a safety margin
to prevent orphan blocks.

So why not encode this 50%+ dynamic into the activation logic.
Spread the deployment window out to a year, make the activation
threshold 95%, and at the end of the window the feature can activate
if there is above 51% signaling.
By definition, the activation will happen if either 95% is reached
early or if at the end of the deployment window mining support is
between 51% and 95%. With this setup the chain is guaranteed to stay
together and no need to rush miners and users.

Cheers
Ariel Lorenzo-Luaces

>
> On 3/5/21 22:43, David A. Harding via bitcoin-dev wrote:
> > On the ##taproot-activation IRC channel, Russell O'Connor recently
> > proposed a modification of the "Let's see what happens" activation
> > proposal.[1] The idea received significant discussion and seemed
> > acceptable to several people who could not previously agree on a
> > proposal (although this doesn't necessarily make it their first
> > choice).  The following is my attempt at a description.
> >
> > 1. Start soon: shortly after the release of software containing this
> >     proposed activation logic, nodes will begin counting blocks towards
> >     the 90% threshold required to lock in taproot.[2]
> >
> > 2. Stop soon: if the lockin threshold isn't reached within approximately
> >     three months, the activation attempt fails.  There is no mandatory
> >     activation and everyone is encouraged to try again using different
> >     activation parameters.
> >
> > 2. Delayed activation: in the happy occasion where the lockin threshold
> >     is reached, taproot is guaranteed to eventually activate---but not
> >     until approximately six months after signal tracking started.
> >
> > ## Example timeline
> >
> > (All dates approximate; see the section below about BIP9 vs BIP8.)
> >
> > - T+0: release of one or more full nodes with activation code
> > - T+14: signal tracking begins
> > - T+28: earliest possible lock in
> > - T+104: locked in by this date or need to try a different activation process
> > - T+194: activation (if lockin occurred)
> >
> > ## Analysis
> >
> > The goal of Speedy Trial is to allow a taproot activation attempt to
> > either quickly succeed or quickly fail---without compromising safety in
> > either case.  Details below:
> >
> > ### Mitigating the problems of early success
> >
> > New rules added in a soft fork need to be enforced by a large part of
> > the economy or there's a risk that a long chain of blocks breaking the
> > rules will be accepted by some users and rejected by others, causing a
> > chain split that can result in large direct losses to transaction
> > receivers and potentially even larger indirect losses to holders due to
> > reduced confidence in the safety of the Bitcoin system.
> >
> > One step developers have taken in the past to ensure widespread adoption
> > of new consensus rules is programming in a delay between the time software
> > with those rules is expected to be released and when the software starts
> > tracking which blocks signal for activation.  For example:
> >
> >      Soft fork        | Release    | Start      | Delta
> >      -----------------+------------+------------+----------
> >      BIP68 (v0.12.1)  | 2016-04-15 | 2016-05-11 | 26 days
> >      BIP141 (v0.13.1) | 2016-10-27 | 2016-11-18 | 24 days
> >
> >      Sources: BitcoinCore.org, https://gist.github.com/ajtowns/1c5e3b8bdead01124c04c45f01c817bc
> >
> > Speedy Trial replaces most of that upfront delay with a backend delay.
> > No matter how fast taproot's activation threshold is reached by miners,
> > there will be six months between the time signal tracking starts and when
> > nodes will begin enforcing taproot's rules.  This gives the userbase even
> > more time to upgrade than if we had used the most recently proposed start
> > date for a BIP8 activation (~July 23rd).[2]
> >
> > ### Succeed, or fail fast
> >
> > The earlier version of this proposal was documented over 200 days ago[3]
> > and taproot's underlying code was merged into Bitcoin Core over 140 days
> > ago.[4]  If we had started Speedy Trial at the time taproot
> > was merged (which is a bit unrealistic), we would've either be less than
> > two months away from having taproot or we would have moved on to the
> > next activation attempt over a month ago.
> >
> > Instead, we've debated at length and don't appear to be any closer to
> > what I think is a widely acceptable solution than when the mailing list
> > began discussing post-segwit activation schemes over a year ago.[5]  I
> > think Speedy Trial is a way to generate fast progress that will either
> > end the debate (for now, if activation is successful) or give us some
> > actual data upon which to base future taproot activation proposals.
> >
> > Of course, for those who enjoy the debate, discussion can continue while
> > waiting for the results of Speedy Trial.
> >
> > ### Base activation protocol
> >
> > The idea can be implemented on top of either Bitcoin Core's existing
> > BIP9 code or its proposed BIP8 patchset.[6]
> >
> > - BIP9 uses two time-based[7] parameters, starttime and timeout.  Using
> >    these values plus a time-based parameter for the minimum activation
> >    delay would give three months for miners to activate taproot, but some
> >    of that time near the start or the end might not be usable due to
> >    signals only being measured in full retarget periods.  However, the
> >    six month time for users to upgrade their node would be not be
> >    affected by either slow or fast block production.
> >
> >      BIP9 is already part of Bitcoin Core and I think the changes being
> >      proposed would be relatively small, resulting in a small patch that
> >      could be easy to review.
> >
> > - BIP8 uses two height-based parameters, startheight and timeoutheight.
> >    Using height values would ensure miners had a certain number of
> >    retarget periods (6) to lock in taproot and that there'd be a certain
> >    number of blocks (about 24,000) until activation, although latest lock
> >    in and expected activation could occur moderately earlier or later
> >    than the estimated three and six months.
> >
> >      BIP8 would likely be used if Speedy Trial fails, so it could be
> >      advantageous to base this proposal on BIP8 so that we gain
> >      experience running that code in production.
> >
> > For additional discussion about using times versus heights, see today's
> > log for ##taproot-activation.[11]
> >
> > ### Additional concerns
> >
> > - Encourages false signaling: false signaling is when miners signal
> >    readiness to enforce rules that their nodes don't actually support.
> >    This was partially responsible for a six-block reorg shortly after the
> >    final BIP66 activation[8] and was found to still be a problem during
> >    the BIP68 lockin period despite BIP9 being designed to avoid it.[9]
> >
> >    Because Speedy Trial only gives miners a maximum of three months to
> >    signal support for taproot, it may encourage such false signaling.  If
> >    taproot locks in as a result of their signaling but most of them fail
> >    to upgrade by the activation date several months later, unprepared
> >    miners could lose large amounts of money and users could see long
> >    reorgs (with unupgraded nodes and SPV lite clients potentially losing
> >    money).
> >
> >    Compared to other activation proposals, I think the only difference is
> >    Speedy Trial's short timeline.  False signaling is possible with any
> >    other proposal and the same problems can occur if miners fail to
> >    upgrade for any mandatory activation.
> >
> > ### Additional advantages
> >
> > - No mandatory signaling: at no time are miners required to signal by
> >    Speedy Trial.  This includes no mandatory signaling during the
> >    locked_in period(s), although such signaling will be encouraged (as it
> >    was with BIP9[10]).
> >
> > - Party time: to a lesser degree, a benefit mentioned for flag day
> >    activation may also apply here: we could get up to six months
> >    advanced notice of taproot activation, allowing users, developers, and
> >    organizations to prepare software, announcements, and celebrations for
> >    that event.
> >
> > ## Implementation details and next steps
> >
> > Initial discussion about implementation may be found in today's
> > ##taproot-activation log.[11] If it appears Speedy Trial may have
> > traction, Russell O'Connor has offered to work on a patch against BIP8
> > implementing it.
> >
> > ## Acknowledgments
> >
> > The original idea for a short-duration attempt was discussed in the
> > ##taproot-activation IRC channel last July and the revised idea saw
> > additional evaluation there this week.  Despite growing frustration,
> > discussion has been overwhelmingly constructive, for which all the
> > contributors should be commended.  Although this should not in any way
> > imply endorsement, I'm grateful for the review and comments on a draft
> > of this email by Adam Gibson, Andrew Chow, Anthony Towns, Chris Belcher,
> > Jeremy Rubin, Jonas Nick, Luke Dashjr, Michael Folkson, Russell
> > O'Connor, and IRC users maybehuman and proofofkeags
> >
> > ## Footnotes
> >
> > [1] https://en.bitcoin.it/wiki/Taproot_activation_proposals#Let.E2.80.99s_see_what_happens.2C_BIP8.28false.2C_3m.29
> >
> > [2] A threshold of 1,815/2,016 blocks (90%) in a single retarget period
> >      seemed to have near-universal support during the 2021-02-16 IRC
> >      meeting.  See: https://en.bitcoin.it/wiki/Taproot_activation_proposal_202102
> >
> > [3] https://en.bitcoin.it/w/index.php?title=Taproot_activation_proposals&oldid=68062
> >
> > [4] https://github.com/bitcoin/bitcoin/pull/19953
> >
> > [5] https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017547.html
> >
> > [6] https://github.com/bitcoin/bitcoin/pull/19573
> >
> > [7] BIP9's times are based on the median of the past 11 blocks, which
> >      usually trails UTC by about 90 minutes but which can trail behind
> >      realtime significantly if miners are doing weird things.
> >
> > [8] https://en.bitcoin.it/wiki/July_2015_chain_forks
> >
> > [9] https://buildingbitcoin.org/bitcoin-core-dev/log-2016-06-21.html#l-32
> >
> > [10] https://github.com/bitcoin/bitcoin/blob/ed25cb58f605ba583c735f330482df0bf9348f3a/src/test/versionbits_tests.cpp#L337-L339
> >
> > [11] http://gnusha.org/taproot-activation/2021-03-05.log
> >
> >
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From lf-lists at mattcorallo.com  Sat Mar  6 21:48:45 2021
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Sat, 6 Mar 2021 16:48:45 -0500
Subject: [bitcoin-dev] Taproot activation proposal "Speedy Trial"
In-Reply-To: <20210306202350.qdcpvxgedn6qhuxa@ganymede>
References: <20210306034343.fhwrxmq6gbb2os5m@ganymede>
 <2a6955d6-d242-89f5-d622-82889d499cc0@mattcorallo.com>
 <20210306202350.qdcpvxgedn6qhuxa@ganymede>
Message-ID: <a76b9eee-0015-105c-2c8d-6131a91e95e3@mattcorallo.com>

I don't think anyone is proposing anything to "prevent" other people from doing anything they wish. My understanding of 
the goal of this proposal, itself, was to keep the community together by proposing a solution that was palatable to all. 
My point was that I'm not sure that this proposal achieves its own goal, and that there may be solutions which are even 
more likely to keep the community of nodes together.

Matt

On 3/6/21 15:23, David A. Harding wrote:
> On Sat, Mar 06, 2021 at 01:11:01PM -0500, Matt Corallo wrote:
>> I'm really unsure that three months is a short enough time window that there
>> wouldn't be a material effort to split the network with divergent consensus
>> rules.
> 
> I oppose designing activation mechanisms with the goal of preventing
> other people from effectively exercising self determination over what
> consensus rules their nodes enforce.
> 
> Three months was chosen because it's long enough to give miners a
> reasonable enough amount of time to activate taproot but it's also short
> enough that it doesn't delay any of the existing proposals with roughly
> one-year timelines.  As such, I think it has the potential to gain
> acceptance from multiple current factions (even if it doesn't ever gain
> their full approval), allowing us to move forward with rough social
> consensus and to gain useful information from the attempt that can
> inform future decisions.
> 
> -Dave
> 

From lf-lists at mattcorallo.com  Sat Mar  6 21:55:18 2021
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Sat, 6 Mar 2021 16:55:18 -0500
Subject: [bitcoin-dev] Taproot activation proposal "Speedy Trial"
In-Reply-To: <CAFvNmHQKrw=UsUqNfBy2pO-LyfH=7VwO8z1VaHPvimXGReUyBQ@mail.gmail.com>
References: <CAFvNmHQKrw=UsUqNfBy2pO-LyfH=7VwO8z1VaHPvimXGReUyBQ@mail.gmail.com>
Message-ID: <df906a63-6a13-c6f6-86c5-d08ecc84a71d@mattcorallo.com>



On 3/6/21 14:56, Michael Folkson wrote:
> Hi Matt
> 
>  > I'm really unsure that three months is a short enough time window that there wouldn't be a material effort to split 
> the network with divergent consensus rules. Instead, a three month window is certainly long enough to organize and make 
> a lot of noise around such an effort, given BIP 148 was organized and reached its peak within a similar such window.
> 
> I'm not sure either. I can't control anyone other than myself. I think (and Luke has also stated on IRC) that trying a 
> UASF (LOT=true) during a "Speedy Trial" deployment would be crazy. I would certainly recommend no one tries that but I 
> can't stop anyone. I'll repeat that soft forks have and always will contain some limited chain split risk regardless of 
> activation mechanism. I think you are well intentioned but I'm not sure if you've fully grasped that yet. Maybe you have 
> and I'm missing something.
> 
>  > Worse, because the obvious alternative after a three month activation failure is a significant delay prior to 
> activation, the vocal UASF minority may be encouraged to pursue such a route to avoid such a delay.
> 
> Again I can only speak for myself but I wouldn't support a UASF until this "fail fast" Speedy Trial has completed and 
> failed. Luke agrees with that and other people (eg proofofkeags) on the ##uasf IRC channel have also supported this 
> "Speedy Trial" proposal. If you want me (or anyone else for that matter) to guarantee there won't be an attempted UASF 
> during a Speedy Trial deployment obviously nobody can do that. All I can say is that personally I won't support one.

That's great to hear.

> The parameters for Speedy Trial are being hammered out on IRC as we speak. I'd encourage you to engage with those 
> discussions. I'd really like to avoid a scenario where we have broad consensus on the details of Speedy Trial and then 
> you come out the woodwork weeks later with either an alternative proposal or a criticism for how the details of Speedy 
> Trial were finalized.
 >
> I've read your email as you're concerned about a UASF during a Speedy Trial deployment. Other than that I think (?) you 
> support it and you are free to join the discussion on IRC if you have particular views on parameters. Personally I don't 
> think those parameters should be chosen assuming there will be a UASF during the deployment but you can argue that case 
> on IRC if you wish. All proposals you have personally put forward suffer from chain split risk in the face of a 
> competing incompatible activation mechanism.

The conversations around the activation of Taproot have far outgrown a single IRC channel, let alone a single live 
conversation. Nor is having a discussion with under a few days latency "coming out of the wordwork weeks later". 
Frankly, I find this more than a little insulting. Bitcoin's consensus has never been decided in such a manner and I see 
no reason to start now.

From keagan.mcclelland at gmail.com  Sat Mar  6 20:55:37 2021
From: keagan.mcclelland at gmail.com (Keagan McClelland)
Date: Sat, 6 Mar 2021 13:55:37 -0700
Subject: [bitcoin-dev] Taproot activation proposal "Speedy Trial"
In-Reply-To: <CAOv1TngCYTLzQZXNRkwFdAdPsgqNikZZETgx+iUpY+kPcJx6qg@mail.gmail.com>
References: <20210306034343.fhwrxmq6gbb2os5m@ganymede>
 <2a6955d6-d242-89f5-d622-82889d499cc0@mattcorallo.com>
 <CAOv1TngCYTLzQZXNRkwFdAdPsgqNikZZETgx+iUpY+kPcJx6qg@mail.gmail.com>
Message-ID: <CALeFGL0ywp2btE=3MebtaQK-a-5O_ukkqj-TYsnRmRkE2EBS-A@mail.gmail.com>

The assumption of malice on the part of those of us supporting a UASF is
tragic and frankly ridiculous. Many of us backed off of the effort the
second that this Speedy Trial solution was proposed in order to dislodge
the gridlock on the LOT value. I can't say for certain that 100% of those
working towards a UASF will abandon the effort but I can say for certain
that a good portion of the would be contributors to Bitcoin Activation have
already said that they would switch over to this Speedy Trial if it
actually materialized.

Given that the opposition towards the UASF to begin with was to not assume
malice out of miners I would expect that the same good will be extended to
those who were supporting a LOT=true client in good faith *given that Core
already said they wouldn't ship any activation code at all.*

Keagan

On Sat, Mar 6, 2021 at 1:49 PM Ariel Luaces via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Sat, Mar 6, 2021 at 10:11 AM Matt Corallo via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> >
> > I'm really unsure that three months is a short enough time window that
> there wouldn't be a material effort to split the
> > network with divergent consensus rules. Instead, a three month window is
> certainly long enough to organize and make a
> > lot of noise around such an effort, given BIP 148 was organized and
> reached its peak within a similar such window.
> >
> > Worse, because the obvious alternative after a three month activation
> failure is a significant delay prior to
> > activation, the vocal UASF minority may be encouraged to pursue such a
> route to avoid such a delay.
> >
>
> I agree with your concern, a three month window motivates a small
> group to constantly tell people to upgrade as soon as possible. Which
> is mostly fine, but if this group gets near 51% mining support in the
> three months it will embolden them to switch the messaging from
> "upgrade the client" to "run this new client that has the LOT flag
> switched to true" (UASF)
> This marketing group will attempt a UASF regardless of the timelines
> because there is no cost if they fail a UASF and there is great reward
> if they succeed by activating in 3 months. They can run an alt-node,
> scare everyone else of being reorged, pretend they have a majority,
> and say their chain is the safe one. I say there is no cost because
> the leaders of that movement are likely savvy enough to give up the
> effort and move back to running core even after the chain split. The
> ones who get hurt are the followers of the UASF movement that don't
> fully understand the discussion and drink the kool aid.
> A short time window doesn't preclude this group from attempting a UASF.
>
> > One alternative may be to reduce the signaling windows involved and
> start slightly later. Instead of the likelihood of
> > failure growing on the horizon, simply have two signaling windows (maybe
> two weeks, maybe a moth each?). In order to
> > ensure success remains likely, begin them somewhat later after software
> release to give pools and miners a chance to
> > configure their mining software in advance.
> >
> > Matt
>
> The shorter the signaling windows the more unlikely they are to reach
> a mining power supermajority.
> With a short signaling window the supermajority threshold will
> probably be configured to low levels (80% 70% 60%). Which makes the
> activation period dangerous because it forces the other miners (20%
> 30% 40%) to upgrade really suddenly once the threshold is reached.
> Unless the LOCKED_IN period is made really long (1 year) but then we
> have to wait a really long time.
> As long as the mining power running the soft fork is above 50% the
> chain will stay together. Anything above that is just a safety margin
> to prevent orphan blocks.
>
> So why not encode this 50%+ dynamic into the activation logic.
> Spread the deployment window out to a year, make the activation
> threshold 95%, and at the end of the window the feature can activate
> if there is above 51% signaling.
> By definition, the activation will happen if either 95% is reached
> early or if at the end of the deployment window mining support is
> between 51% and 95%. With this setup the chain is guaranteed to stay
> together and no need to rush miners and users.
>
> Cheers
> Ariel Lorenzo-Luaces
>
> >
> > On 3/5/21 22:43, David A. Harding via bitcoin-dev wrote:
> > > On the ##taproot-activation IRC channel, Russell O'Connor recently
> > > proposed a modification of the "Let's see what happens" activation
> > > proposal.[1] The idea received significant discussion and seemed
> > > acceptable to several people who could not previously agree on a
> > > proposal (although this doesn't necessarily make it their first
> > > choice).  The following is my attempt at a description.
> > >
> > > 1. Start soon: shortly after the release of software containing this
> > >     proposed activation logic, nodes will begin counting blocks towards
> > >     the 90% threshold required to lock in taproot.[2]
> > >
> > > 2. Stop soon: if the lockin threshold isn't reached within
> approximately
> > >     three months, the activation attempt fails.  There is no mandatory
> > >     activation and everyone is encouraged to try again using different
> > >     activation parameters.
> > >
> > > 2. Delayed activation: in the happy occasion where the lockin threshold
> > >     is reached, taproot is guaranteed to eventually activate---but not
> > >     until approximately six months after signal tracking started.
> > >
> > > ## Example timeline
> > >
> > > (All dates approximate; see the section below about BIP9 vs BIP8.)
> > >
> > > - T+0: release of one or more full nodes with activation code
> > > - T+14: signal tracking begins
> > > - T+28: earliest possible lock in
> > > - T+104: locked in by this date or need to try a different activation
> process
> > > - T+194: activation (if lockin occurred)
> > >
> > > ## Analysis
> > >
> > > The goal of Speedy Trial is to allow a taproot activation attempt to
> > > either quickly succeed or quickly fail---without compromising safety in
> > > either case.  Details below:
> > >
> > > ### Mitigating the problems of early success
> > >
> > > New rules added in a soft fork need to be enforced by a large part of
> > > the economy or there's a risk that a long chain of blocks breaking the
> > > rules will be accepted by some users and rejected by others, causing a
> > > chain split that can result in large direct losses to transaction
> > > receivers and potentially even larger indirect losses to holders due to
> > > reduced confidence in the safety of the Bitcoin system.
> > >
> > > One step developers have taken in the past to ensure widespread
> adoption
> > > of new consensus rules is programming in a delay between the time
> software
> > > with those rules is expected to be released and when the software
> starts
> > > tracking which blocks signal for activation.  For example:
> > >
> > >      Soft fork        | Release    | Start      | Delta
> > >      -----------------+------------+------------+----------
> > >      BIP68 (v0.12.1)  | 2016-04-15 | 2016-05-11 | 26 days
> > >      BIP141 (v0.13.1) | 2016-10-27 | 2016-11-18 | 24 days
> > >
> > >      Sources: BitcoinCore.org,
> https://gist.github.com/ajtowns/1c5e3b8bdead01124c04c45f01c817bc
> > >
> > > Speedy Trial replaces most of that upfront delay with a backend delay.
> > > No matter how fast taproot's activation threshold is reached by miners,
> > > there will be six months between the time signal tracking starts and
> when
> > > nodes will begin enforcing taproot's rules.  This gives the userbase
> even
> > > more time to upgrade than if we had used the most recently proposed
> start
> > > date for a BIP8 activation (~July 23rd).[2]
> > >
> > > ### Succeed, or fail fast
> > >
> > > The earlier version of this proposal was documented over 200 days
> ago[3]
> > > and taproot's underlying code was merged into Bitcoin Core over 140
> days
> > > ago.[4]  If we had started Speedy Trial at the time taproot
> > > was merged (which is a bit unrealistic), we would've either be less
> than
> > > two months away from having taproot or we would have moved on to the
> > > next activation attempt over a month ago.
> > >
> > > Instead, we've debated at length and don't appear to be any closer to
> > > what I think is a widely acceptable solution than when the mailing list
> > > began discussing post-segwit activation schemes over a year ago.[5]  I
> > > think Speedy Trial is a way to generate fast progress that will either
> > > end the debate (for now, if activation is successful) or give us some
> > > actual data upon which to base future taproot activation proposals.
> > >
> > > Of course, for those who enjoy the debate, discussion can continue
> while
> > > waiting for the results of Speedy Trial.
> > >
> > > ### Base activation protocol
> > >
> > > The idea can be implemented on top of either Bitcoin Core's existing
> > > BIP9 code or its proposed BIP8 patchset.[6]
> > >
> > > - BIP9 uses two time-based[7] parameters, starttime and timeout.  Using
> > >    these values plus a time-based parameter for the minimum activation
> > >    delay would give three months for miners to activate taproot, but
> some
> > >    of that time near the start or the end might not be usable due to
> > >    signals only being measured in full retarget periods.  However, the
> > >    six month time for users to upgrade their node would be not be
> > >    affected by either slow or fast block production.
> > >
> > >      BIP9 is already part of Bitcoin Core and I think the changes being
> > >      proposed would be relatively small, resulting in a small patch
> that
> > >      could be easy to review.
> > >
> > > - BIP8 uses two height-based parameters, startheight and timeoutheight.
> > >    Using height values would ensure miners had a certain number of
> > >    retarget periods (6) to lock in taproot and that there'd be a
> certain
> > >    number of blocks (about 24,000) until activation, although latest
> lock
> > >    in and expected activation could occur moderately earlier or later
> > >    than the estimated three and six months.
> > >
> > >      BIP8 would likely be used if Speedy Trial fails, so it could be
> > >      advantageous to base this proposal on BIP8 so that we gain
> > >      experience running that code in production.
> > >
> > > For additional discussion about using times versus heights, see today's
> > > log for ##taproot-activation.[11]
> > >
> > > ### Additional concerns
> > >
> > > - Encourages false signaling: false signaling is when miners signal
> > >    readiness to enforce rules that their nodes don't actually support.
> > >    This was partially responsible for a six-block reorg shortly after
> the
> > >    final BIP66 activation[8] and was found to still be a problem during
> > >    the BIP68 lockin period despite BIP9 being designed to avoid it.[9]
> > >
> > >    Because Speedy Trial only gives miners a maximum of three months to
> > >    signal support for taproot, it may encourage such false signaling.
> If
> > >    taproot locks in as a result of their signaling but most of them
> fail
> > >    to upgrade by the activation date several months later, unprepared
> > >    miners could lose large amounts of money and users could see long
> > >    reorgs (with unupgraded nodes and SPV lite clients potentially
> losing
> > >    money).
> > >
> > >    Compared to other activation proposals, I think the only difference
> is
> > >    Speedy Trial's short timeline.  False signaling is possible with any
> > >    other proposal and the same problems can occur if miners fail to
> > >    upgrade for any mandatory activation.
> > >
> > > ### Additional advantages
> > >
> > > - No mandatory signaling: at no time are miners required to signal by
> > >    Speedy Trial.  This includes no mandatory signaling during the
> > >    locked_in period(s), although such signaling will be encouraged (as
> it
> > >    was with BIP9[10]).
> > >
> > > - Party time: to a lesser degree, a benefit mentioned for flag day
> > >    activation may also apply here: we could get up to six months
> > >    advanced notice of taproot activation, allowing users, developers,
> and
> > >    organizations to prepare software, announcements, and celebrations
> for
> > >    that event.
> > >
> > > ## Implementation details and next steps
> > >
> > > Initial discussion about implementation may be found in today's
> > > ##taproot-activation log.[11] If it appears Speedy Trial may have
> > > traction, Russell O'Connor has offered to work on a patch against BIP8
> > > implementing it.
> > >
> > > ## Acknowledgments
> > >
> > > The original idea for a short-duration attempt was discussed in the
> > > ##taproot-activation IRC channel last July and the revised idea saw
> > > additional evaluation there this week.  Despite growing frustration,
> > > discussion has been overwhelmingly constructive, for which all the
> > > contributors should be commended.  Although this should not in any way
> > > imply endorsement, I'm grateful for the review and comments on a draft
> > > of this email by Adam Gibson, Andrew Chow, Anthony Towns, Chris
> Belcher,
> > > Jeremy Rubin, Jonas Nick, Luke Dashjr, Michael Folkson, Russell
> > > O'Connor, and IRC users maybehuman and proofofkeags
> > >
> > > ## Footnotes
> > >
> > > [1]
> https://en.bitcoin.it/wiki/Taproot_activation_proposals#Let.E2.80.99s_see_what_happens.2C_BIP8.28false.2C_3m.29
> > >
> > > [2] A threshold of 1,815/2,016 blocks (90%) in a single retarget period
> > >      seemed to have near-universal support during the 2021-02-16 IRC
> > >      meeting.  See:
> https://en.bitcoin.it/wiki/Taproot_activation_proposal_202102
> > >
> > > [3]
> https://en.bitcoin.it/w/index.php?title=Taproot_activation_proposals&oldid=68062
> > >
> > > [4] https://github.com/bitcoin/bitcoin/pull/19953
> > >
> > > [5]
> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017547.html
> > >
> > > [6] https://github.com/bitcoin/bitcoin/pull/19573
> > >
> > > [7] BIP9's times are based on the median of the past 11 blocks, which
> > >      usually trails UTC by about 90 minutes but which can trail behind
> > >      realtime significantly if miners are doing weird things.
> > >
> > > [8] https://en.bitcoin.it/wiki/July_2015_chain_forks
> > >
> > > [9]
> https://buildingbitcoin.org/bitcoin-core-dev/log-2016-06-21.html#l-32
> > >
> > > [10]
> https://github.com/bitcoin/bitcoin/blob/ed25cb58f605ba583c735f330482df0bf9348f3a/src/test/versionbits_tests.cpp#L337-L339
> > >
> > > [11] http://gnusha.org/taproot-activation/2021-03-05.log
> > >
> > >
> > > _______________________________________________
> > > bitcoin-dev mailing list
> > > bitcoin-dev at lists.linuxfoundation.org
> > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > >
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210306/f8facf3a/attachment-0001.html>

From jlrubin at mit.edu  Sat Mar  6 23:58:17 2021
From: jlrubin at mit.edu (Jeremy)
Date: Sat, 6 Mar 2021 15:58:17 -0800
Subject: [bitcoin-dev] Taproot: What are you building?
Message-ID: <CAD5xwhiNsXSmCiayLOL8f4-C=Z39AioJehQE-mRsvsZzh4aSSA@mail.gmail.com>

Hi!

As a minor diversion while discussing activation parameters, I felt it
would be meaningful to collect a survey on what people are already using
Taproot for in either conceptual, prototype, or implemented/spec phases.

I suspect there are a lot of people tinkering with Taproot one way or
another, and getting insight into what sort of things people are excited
about could remind us what this is all for anyways.

If you have something to share, please add it to the Wiki here:

https://en.bitcoin.it/wiki/Taproot_Uses

Cheers,

Jeremy

--
@JeremyRubin <https://twitter.com/JeremyRubin>
<https://twitter.com/JeremyRubin>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210306/70bdd18b/attachment.html>

From michaelfolkson at gmail.com  Sun Mar  7 13:27:22 2021
From: michaelfolkson at gmail.com (Michael Folkson)
Date: Sun, 7 Mar 2021 13:27:22 +0000
Subject: [bitcoin-dev] Measuring the support (or lack of support) for Speedy
	Trial
Message-ID: <CAFvNmHT3wUkSsdMyHFb=AgNAFZNgKJ=X4-UVU4nC-NL5UB21jA@mail.gmail.com>

I have set up a document (a gist) to measure the support (or lack of
support) for the Speedy Trial activation proposal.

Please contribute a ACK or NACK (with a qualification or additional
context if necessary)

https://gist.github.com/michaelfolkson/92899f27f1ab30aa2ebee82314f8fe7f

This is not a vote as a vote is easily sybillable. But it does provide
some data (especially if GitHub pseudonyms are associated with
particular individuals)

Personally I welcome any efforts to collect community feedback on this
proposal. I do not need to be the only individual doing this nor does
this gist need to be the only collection method. This is merely my
personal attempt to collect that feedback. Please try your own and
report back to this mailing list or to the ##taproot-activation IRC
channel. Alternatively please distribute this gist to all online
discussion forums that you personally use.

Thank you for your help.

--
Michael Folkson
Email: michaelfolkson at gmail.com
Keybase: michaelfolkson
PGP: 43ED C999 9F85 1D40 EAF4 9835 92D6 0159 214C FEE3

From carlo at spiller.com  Sun Mar  7 09:58:30 2021
From: carlo at spiller.com (Carlo Spiller)
Date: Sun, 7 Mar 2021 10:58:30 +0100
Subject: [bitcoin-dev] Yet another Taproot activation logic
Message-ID: <5a779c13-8ebf-5052-5bf7-846f970c21ef@spiller.com>

Hi everybody

I'm new to this list, but not new to Bitcoin, having skin in the game 
since 2014. I was there for the scaling war and the drama around SegWit, 
as a simple user. This time, I run my own full node and follow 
development. I hope to bring something new to the table.

Having witnessed the miner's unwillingness to activate SegWit truly 
makes me concerened for a simple LOT=false. After reading the discussion 
now for some time and thinking about it myself, I have come to the 
following proposal.

Initially deploy with LOT=false and an activation threshold of 95% of 
miner signaling.

*IFF* after 6 months Taproot is not activated by MASF, BUT at least 80% 
of hashpower signaled for the upgrade, LOT gets a lock-in date another 6 
months later and the threshold for MASF is lowered to 90%.

If after the initial 6 months of signaling with LOT=false, 80% is not 
reached, the proposal expires.

This way, a small percent of hashpower does not get to stall activation, 
rather, 80% of hashpower can activate LOT=true, and later, 90% can 
activate Taproot. If a flaw is found in Taproot in the first six months 
(unlikely anyway), miners simply don't signal and the proposal expires. 
If miners don't signal at all, only six months are lost, before a new 
activation logic can be deployed.

Don't mind this if something similar was already proposed somewhere else.

Best

Carlo


From arielluaces at gmail.com  Sun Mar  7 21:13:47 2021
From: arielluaces at gmail.com (Ariel Lorenzo-Luaces)
Date: Sun, 07 Mar 2021 13:13:47 -0800
Subject: [bitcoin-dev] Yet another Taproot activation logic
In-Reply-To: <5a779c13-8ebf-5052-5bf7-846f970c21ef@spiller.com>
References: <5a779c13-8ebf-5052-5bf7-846f970c21ef@spiller.com>
Message-ID: <baad4898-6605-4edc-ad13-0f74289484ae@gmail.com>

Hi Carlo

This your proposal is similar to the Simple Majority Activation proposal (SMA). The difference is that your proposal has the final activation threshold set to 80% and SMA has it set to 51% https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-March/018587.html

The problem with what you're proposing is what do users do if signaling is somewhere between 51% to 79%? Users that want to promote a UASF know that their miner majority can activate Taproot and activate without the 21% to 49% of miners needing to signal (or purposefully stalling). A UASF knows they have majority mining power so there is little risk to them and a big reward (activating Taproot) so they are incentivized to do a UASF.

A UASF with a miner majority can scare everyone else about them being at risk of big reorgs to gain traction and followers.

With the same proposal but the final threshold set to 51% instead of 80% there can't be risk of a UASF because if 51% is not reached they know they don't have enough miner support to keep the chain together.

If support is less than 50% a UASF movement needs to hard fork anyway to change the PoW (for protection) and change addresses to prevent double spends.

I really like the SMA proposal with 51% because it removes the incentive to do a UASF.

Cheers
Ariel Lorenzo-Luaces


On Mar 7, 2021, 6:37 AM, at 6:37 AM, Carlo Spiller via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>Hi everybody
>
>I'm new to this list, but not new to Bitcoin, having skin in the game 
>since 2014. I was there for the scaling war and the drama around
>SegWit, 
>as a simple user. This time, I run my own full node and follow 
>development. I hope to bring something new to the table.
>
>Having witnessed the miner's unwillingness to activate SegWit truly 
>makes me concerened for a simple LOT=false. After reading the
>discussion 
>now for some time and thinking about it myself, I have come to the 
>following proposal.
>
>Initially deploy with LOT=false and an activation threshold of 95% of 
>miner signaling.
>
>*IFF* after 6 months Taproot is not activated by MASF, BUT at least 80%
>
>of hashpower signaled for the upgrade, LOT gets a lock-in date another
>6 
>months later and the threshold for MASF is lowered to 90%.
>
>If after the initial 6 months of signaling with LOT=false, 80% is not 
>reached, the proposal expires.
>
>This way, a small percent of hashpower does not get to stall
>activation, 
>rather, 80% of hashpower can activate LOT=true, and later, 90% can 
>activate Taproot. If a flaw is found in Taproot in the first six months
>
>(unlikely anyway), miners simply don't signal and the proposal expires.
>
>If miners don't signal at all, only six months are lost, before a new 
>activation logic can be deployed.
>
>Don't mind this if something similar was already proposed somewhere
>else.
>
>Best
>
>Carlo
>
>_______________________________________________
>bitcoin-dev mailing list
>bitcoin-dev at lists.linuxfoundation.org
>https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210307/f99a9224/attachment.html>

From carlo at spiller.com  Mon Mar  8 08:24:15 2021
From: carlo at spiller.com (Carlo Spiller)
Date: Mon, 8 Mar 2021 09:24:15 +0100
Subject: [bitcoin-dev] Yet another Taproot activation logic
In-Reply-To: <baad4898-6605-4edc-ad13-0f74289484ae@gmail.com>
References: <5a779c13-8ebf-5052-5bf7-846f970c21ef@spiller.com>
 <baad4898-6605-4edc-ad13-0f74289484ae@gmail.com>
Message-ID: <f1613726-527c-360f-f1c2-c34f8f933626@spiller.com>

Hi Ariel

Thanks for your reply with the link to the SMA proposal, which I had 
missed previoulsy. It is indeed very similar.

I see that Speedy trial is currently gaining broad support, which is 
good. I think my proposal with the threshold set to 51% instead of 80% 
to change LOT=false to LOT=true is also pretty similar to ST, with the 
key difference being that the next step after a fail of MASF is already 
baked in.

Excited to see how it all plays out.

Best

Carlo

Carlo Spiller
+41 79 368 85 06
www.carlospiller.com

Am 07.03.21 um 22:13 schrieb Ariel Lorenzo-Luaces:
> Hi Carlo
>
> This your proposal is similar to the Simple Majority Activation 
> proposal (SMA). The difference is that your proposal has the final 
> activation threshold set to 80% and SMA has it set to 51% 
> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-March/018587.html 
> <https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-March/018587.html>
>
> The problem with what you're proposing is what do users do if 
> signaling is somewhere between 51% to 79%? Users that want to promote 
> a UASF know that their miner majority can activate Taproot and 
> activate without the 21% to 49% of miners needing to signal (or 
> purposefully stalling). A UASF knows they have majority mining power 
> so there is little risk to them and a big reward (activating Taproot) 
> so they are incentivized to do a UASF.
>
> A UASF with a miner majority can scare everyone else about them being 
> at risk of big reorgs to gain traction and followers.
>
> With the same proposal but the final threshold set to 51% instead of 
> 80% there can't be risk of a UASF because if 51% is not reached they 
> know they don't have enough miner support to keep the chain together.
>
> If support is less than 50% a UASF movement needs to hard fork anyway 
> to change the PoW (for protection) and change addresses to prevent 
> double spends.
>
> I really like the SMA proposal with 51% because it removes the 
> incentive to do a UASF.
>
> Cheers
> Ariel Lorenzo-Luaces
> On Mar 7, 2021, at 6:37 AM, Carlo Spiller via bitcoin-dev 
> <bitcoin-dev at lists.linuxfoundation.org 
> <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
>
>     Hi everybody
>
>     I'm new to this list, but not new to Bitcoin, having skin in the game
>     since 2014. I was there for the scaling war and the drama around SegWit,
>     as a simple user. This time, I run my own full node and follow
>     development. I hope to bring something new to the table.
>
>     Having witnessed the miner's unwillingness to activate SegWit truly
>     makes me concerened for a simple LOT=false. After reading the discussion
>     now for some time and thinking about it myself, I have come to the
>     following proposal.
>
>     Initially deploy with LOT=false and an activation threshold of 95% of
>     miner signaling.
>
>     *IFF* after 6 months Taproot is not activated by MASF, BUT at least 80%
>     of hashpower signaled for the upgrade, LOT gets a lock-in date another 6
>     months later and the threshold for MASF is lowered to 90%.
>
>     If after the initial 6 months of signaling with LOT=false, 80% is not
>     reached, the proposal expires.
>
>     This way, a small percent of hashpower does not get to stall activation,
>     rather, 80% of hashpower can activate LOT=true, and later, 90% can
>     activate Taproot. If a flaw is found in Taproot in the first six months
>     (unlikely anyway), miners simply don't signal and the proposal expires.
>     If miners don't signal at all, only six months are lost, before a new
>     activation logic can be deployed.
>
>     Don't mind this if something similar was already proposed somewhere else.
>
>     Best
>
>     Carlo
>
>     ------------------------------------------------------------------------
>
>     bitcoin-dev mailing list
>     bitcoin-dev at lists.linuxfoundation.org
>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev  <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210308/1f9edeb5/attachment-0001.html>

From jtimon at jtimon.cc  Mon Mar  8 12:51:50 2021
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Mon, 8 Mar 2021 13:51:50 +0100
Subject: [bitcoin-dev] Straight Flag Day (Height) Taproot Activation
In-Reply-To: <20210306113326.mrftlkmmloy2dsag@erisian.com.au>
References: <c35e1761-43ca-e157-6a5c-72d27f2c6c6e@mattcorallo.com>
 <20210303145902.cl4mzg6l7avjboil@erisian.com.au>
 <281679eb-860b-c6cb-7e7a-5ae28b60f149@mattcorallo.com>
 <20210306113326.mrftlkmmloy2dsag@erisian.com.au>
Message-ID: <CABm2gDpky7W-e_Vp5bFZ-k+y40-wFsNZ_-Cj-JNxi7PjTB2nxQ@mail.gmail.com>

Concept nack.
This has no advantage over bip8(true).
Bip9(false) is just bip9.
Thr only reasonable argument against bip8(true) is "some people may do
bip8(false) instead", which is a stypid argument applyable to any
activation method.

People against taproot should want code to forbid its activation rather
than limiting themselves to suport bip9/bip8(false) and hope it doesn't get
activated it.

Some other arguments seem to be based on the wrong assumption that miners
should decide the rules.

Thisproposal solves nothing, just adds to the noise and thus is really
disappointing.


On Sat, Mar 6, 2021, 12:33 Anthony Towns via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Wed, Mar 03, 2021 at 11:49:57AM -0500, Matt Corallo wrote:
> > On 3/3/21 09:59, Anthony Towns wrote:
> > > A couple of days ago I would have disagreed with this; but with Luke
> > > now strongly pushing against implementing lot=false, I can at least see
> > > your point...
> > Right. It may be the case that the minority group threatening to fork off
> > onto a lot=true chain is not large enough to give a second thought to.
> > However, I'm not certain that its worth the risk, and, as Chris noted in
> his
> > post this morning, that approach is likely to include more drama.
>
> I think there's two different interpretations of what a "user-activated
> fork" means:
>
>  1) if people try to take bitcoin in a direction that risks destroying
>     it, it's possible to ignore both devs and hashpower entirely and force
>     a chain split to ensure it's possible to continue transacting with
>     "the real bitcoin".
>
>  2) removing miners' influence over consensus rules entirely -- so that
>     not only can users overcome miner objections by risking a chain split,
>     but so that miners don't have any greater ability to object than
>     anyone else in the ecosystem.
>
> In my opinion, bip8's optional lockinontimeout setting and must-signal
> approach is well-designed for case 1; if miners object for good reasons,
> then there is no need to override them (if there's a good reason not to do
> something, it shouldn't be done!), while still having the possibility to
> override them if they object for bad reasons. Because hashpower disagrees,
> there's always a risk of a chain split in that case, so the additional
> risk introduced by a signalling requirement is pretty minimal. That the
> lockinontimeout value is a setting means it can be switched only when
> we're sure there aren't good reasons for the objection.
>
> There is a lot of work to be done to make bitcoind have an acceptable
> chance of gracefully *surviving* a network split introduced by this sort
> of conflict; but provided no one started setting lockinontimeout=true
> until we were six or so months into an activation attempt (and hence
> had the opportunity to judge whether the reasons for not activating
> were bad), that would likely be enough time to start implementing some
> safety mechanisms.
>
> But there seems to be much more signficant support for the case 2 than I
> expected; as evidenced by the "let's do lockinontimeout=true immediately"
> advocacy, eg:
>
>   I am not willing to go to war for Taproot. I'll be honest the reason
>   I'm interested at all is that devs I respect spent a lot of energy and
>   time on it and I was reluctant to let their marginally beneficial work
>   go to waste.
>
>   I am, however, willing to go to war against LOT=False.
>
>    -- https://twitter.com/francispouliot_/status/1363876292169465856
>
> I don't think bip8 is well-designed for that approach: most importantly,
> with early adoption of lockinontimeout=true, bip8 *encourages* a consensus
> split in the event that good reasons for not activating are discovered
> afterwards, because lockinontimeout=false nodes remain able to abandon
> the activation attempt. Consensus splits are terrible; they should be
> a last resort used only in the event that bitcoin's fundamental nature
> is threatened, not a standard risk if bugs happened to be discovered
> late. But additionally, if we are worried miners might not be acting
> in the interests of all bitcoin users, there are other games they could
> play, such as "if you want X activated quickly, also give us Y; otherwise
> we'll delay it as long as possible".
>
> Losing the opportunity to abandon an activation attempt, by whatever
> mechanism, also puts a lot more pressure on being absolutely sure of the
> desirability of the change at the point when it's merged; because miners,
> third-party devs, businesses, and users don't even have the option of
> attempting to influence miners, all objections needs to be raised when
> the activation parameters are merged, which raises the stakes for that
> event substantially.
>
> I think my conclusions from that are:
>
>  * as it stands, people are expecting to run bip8/lot=true nodes on the
>    network immediately; so deploying bip8/lot=false with compatible
>    parameters risks causing consensus splits, and should not be done
>
>  * David Harding's "speedy trial" approach probably doesn't suffer from
>    the problems -- running a lot=true variant would require enforcing
>    signalling prior to the end of July, which is an unreasonable timeframe
>    to expect the majority of economic nodes to upgrade in; if bip9 is
>    used, then the risk of enforcement occuring with minority hashrate
>    (and thus having fewer retarget periods before the timeout is
>    reached) would also make a bip148/lot=true variant difficulty
>
>  * if people want a "taproot is guaranteed to activate no later than X"
>    PR merged, someone needs to do a *lot* more outreach to be sure that
>    that's the right outcome, and it's not just devs/maintainers making
>    the call
>
>  * IMO, Matt's proposed approach is both a better and simpler approach
>    to avoid giving miners undue influence on consensus; as such I've
>    drafted up a sample implementation:
>
>      https://github.com/bitcoin/bitcoin/pull/21378
>
>    (Backporting it to 0.21 just requires backporting #19438, which is
>    straightforward)
>
> So I think that means my preference is to do the "speedy trial" with
> signalling first, and if that fails, then either we've established there
> are real problems with taproot and will go back to the drawing board to
> fix them, or if we have not found problems by that time we should simply
> switch to a straight flag day activation as Matt proposes. Presumably
> we'll have established broard community consensus for activation if no
> objections are discovered during the speedy trial.
>
> Cheers,
> aj
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210308/f7fd146c/attachment.html>

From eric at voskuil.org  Mon Mar  8 14:13:44 2021
From: eric at voskuil.org (eric at voskuil.org)
Date: Mon, 8 Mar 2021 06:13:44 -0800
Subject: [bitcoin-dev] Straight Flag Day (Height) Taproot Activation
In-Reply-To: <CABm2gDpky7W-e_Vp5bFZ-k+y40-wFsNZ_-Cj-JNxi7PjTB2nxQ@mail.gmail.com>
References: <c35e1761-43ca-e157-6a5c-72d27f2c6c6e@mattcorallo.com>
 <20210303145902.cl4mzg6l7avjboil@erisian.com.au>
 <281679eb-860b-c6cb-7e7a-5ae28b60f149@mattcorallo.com>
 <20210306113326.mrftlkmmloy2dsag@erisian.com.au>
 <CABm2gDpky7W-e_Vp5bFZ-k+y40-wFsNZ_-Cj-JNxi7PjTB2nxQ@mail.gmail.com>
Message-ID: <011601d71425$40221580$c0664080$@voskuil.org>

One should not assume that those trying to avoid a chain split are against Taproot.

 

There is a concerning widespread misperception in the community at large that soft forks are inherently ?backward compatible?. To many people this seems to mean that, even without hash power enforcement, activation will not create a chain split. This is no doubt reinforced by loose wording in past proposals, such as the unqualified, ?As a soft fork, older software will continue to operate without modification.? (BIP141). If operating means not crashing, then hard forks also qualify. Many people do not understand that hash power enforcement is also required for a soft fork to avoid a chain split.

 

This misperception has also been fed by devs who should know better claiming that BIP16 was not signaled by supermajority hash power before it was activated. The only distinction being that an *automated* activation method had not yet been developed. Starting with BIP16 *all active soft forks* have been activated by supermajority hash power signaling. I was told publicly by someone who should certainly know better that SegWit missed its BIP9 activation window and that BIP9 failed. Yet SegWit activated under BIP9 2.5 months before its activation window closed. It never entered its FAILED state and remains in its ACTIVE state (BIP90 being presumed to be merely a code optimization). This type of misinformation is a root cause of much of the conflict.

 

Yes, some people threatened to split themselves off with BIP148, and yes miners used BIP91 to accelerate SegWit enforcement, preventing that split well before the SegWit the activation window was set to expire. So those people claim BIP9 failed. It?s a false narrative. BIP9 could have failed, but did not. Soft fork activation could be unsupported by miners, but to date no such activation attempt has failed. No doubt it will someday. But why are people picking a fight where there isn?t one.

 

This should not about who gets to ?decide the rules?, but that is exactly what it has become. It?s the only explanation for the conflict. Otherwise there does not appear to be any whatsoever. Miner activation is used if at all possible because it avoids a chain split. It?s as simple as that. Anyone can of course decide what rules they run. But telling them that they can do so without splitting is flatly irresponsible. If it comes to that, inform people properly and let them decide.

 

The reason for BIP8 is clearly to codify activation without hash power support. You are right that BIP8(LOT=false) is just BIP9. The other differences are immaterial. Given that there are other differences, it seems advisable to use what has already been coded, tested, deployed, and successful in the past. It?s also understandable that many devs no not want to be responsible for shipping code to large numbers of people who are misinformed about its behavior, potentially causing a chain split and loss of both money and faith in the system.

 

If one needs to consider this a question of who gets to decide, it?s not clear to me why one would side with exchanges over miners given that the latter are able to prevent a chain split. HODLer nodes are non-economic, to the extent they even exist. This isn?t a David vs. Goliath scenario, and even if it was, the supposed giant appears to overwhelmingly support Taproot.

 

e

 

From: bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> On Behalf Of Jorge Tim?n via bitcoin-dev
Sent: Monday, March 8, 2021 4:52 AM
To: Anthony Towns <aj at erisian.com.au>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
Subject: Re: [bitcoin-dev] Straight Flag Day (Height) Taproot Activation

 

Concept nack.

This has no advantage over bip8(true).

Bip9(false) is just bip9.

Thr only reasonable argument against bip8(true) is "some people may do bip8(false) instead", which is a stypid argument applyable to any activation method.

 

People against taproot should want code to forbid its activation rather than limiting themselves to suport bip9/bip8(false) and hope it doesn't get activated it.

 

Some other arguments seem to be based on the wrong assumption that miners should decide the rules.

 

Thisproposal solves nothing, just adds to the noise and thus is really disappointing.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210308/8f977f39/attachment-0001.html>

From loneroassociation at gmail.com  Mon Mar  8 23:40:50 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Mon, 8 Mar 2021 18:40:50 -0500
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CA+YkXXyP=BQ_a42J=RE7HJFcJ73atyrt4KWKUG8LbsbW=u4b5w@mail.gmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CAMnpzfop8ttqjMAKoS37zpQV6WiZfi1Bn+y_e-HaepTiD4Vm1Q@mail.gmail.com>
 <CAB0O3SVNyr_t23Y0LyT0mSaf6LONFRLYJ8qzO7rcdJFnrGccFw@mail.gmail.com>
 <CA+YkXXwkSCu=2UOEhzFBzGDHo1c=Ewqsnxp632ke3jdH1ff5WA@mail.gmail.com>
 <CA+YkXXwfS7eer5Za_ed9tCNdfOp4c3nV_X=mfXzoDxMm6BrizQ@mail.gmail.com>
 <CALeFGL31M5DAULLRtCwjPYHaPVqsVqREUg6WQ2-cuj23SNk=BA@mail.gmail.com>
 <CA+YkXXwBMG6YUAhf-2U5EV5Ep5RgG2foc9chramNFN5=AQ=-EA@mail.gmail.com>
 <CALeFGL3E-rWW9aJkwre_3UF44vbNxPH2436DvaQdHoqEQ5b+eg@mail.gmail.com>
 <CA+YkXXyBmOootb=Kt6CH3yquYVnAZd=fJQqiF_A3p_pkB8QC3g@mail.gmail.com>
 <CALC81CMDQf4PqxRisQw58OL7QSFeMcQTvLMvmtOGJ_ya4-dhLg@mail.gmail.com>
 <CA+YkXXyP=BQ_a42J=RE7HJFcJ73atyrt4KWKUG8LbsbW=u4b5w@mail.gmail.com>
Message-ID: <CA+YkXXw1AiMqCoPk_pUOdDMfkGF_T+aURGAjGK=MTa7jtAQchg@mail.gmail.com>

Hi, here is the list to the BIP proposal on my own repo:
https://github.com/Mentors4EDU/bip-amkn-posthyb/blob/main/bip-draft.mediawiki
Can I submit a pull request on the BIPs repo for this to go into draft
mode? Also, I think this provides at least some more insight on what I want
to work on.

Best regards, Andrew

On Sat, Mar 6, 2021, 10:42 AM Lonero Foundation <loneroassociation at gmail.com>
wrote:

> [off-list]
>
> Okay. I will do so and post the link here for discussion before doing a
> pull request on BIP's repo as the best way to handle it.
>
> Best regards, Andrew
>
> On Sat, Mar 6, 2021, 10:21 AM Ricardo Filipe <ricardojdfilipe at gmail.com>
> wrote:
>
>> As said before, you are free to create the BIP in your own repository
>> and bring it to discussion on the mailing list. then you can do a PR
>>
>> Lonero Foundation via bitcoin-dev
>> <bitcoin-dev at lists.linuxfoundation.org> escreveu no dia s?bado,
>> 6/03/2021 ?(s) 08:58:
>> >
>> > I know Ethereum had an outlandishly large percentage of nodes running
>> on AWS, I heard the same thing is for Bitcoin but for mining. Had trouble
>> finding the article online so take it with a grain of salt. The point
>> though is that both servers and ASIC specific hardware would still be able
>> to benefit from the cryptography upgrade I am proposing, as this was in
>> relation to the disinfranchisemet point.
>> >
>> > That said, I think the best way to move forward is to submit a BIP pull
>> request for a draft via GitHub using BIP #2's draft format and any
>> questions people have can be answered in the reqeust's comments. That way
>> people don't have to get emails everytime there is a reply, but replies
>> still get seen as opposed to offline discussion. Since the instructions say
>> to email bitcoin-dev before doing a bip draft, I have done that. Since
>> people want to see the draft beforehand and it isn't merged manually
>> anyways, I think it is the easiest way to handle this.
>> >
>> > I'm also okay w/ continuing the discussion on bitcoin-dev but rather
>> form a discussion on git instead given I don't want to accidentally
>> impolitely bother people given this is a moderated list and we already
>> established some interest for at least a draft.
>> >
>> > Does that seem fine?
>> >
>> > Best regards, Andrew
>> >
>> > On Fri, Mar 5, 2021, 7:41 PM Keagan McClelland <
>> keagan.mcclelland at gmail.com> wrote:
>> >>
>> >> > A large portion of BTC is already mined through AWS servers and
>> non-asic specific hardware anyways. A majority of them would benefit from a
>> hybrid proof, and the fact that it is hybrid in that manner wouldn't
>> disenfranchise currently optimized mining entities as well.
>> >>
>> >> My instincts tell me that this is an outlandish claim. Do you have
>> supporting evidence for this?
>> >>
>> >> Keagan
>> >>
>> >> On Fri, Mar 5, 2021 at 3:22 PM Lonero Foundation via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>> >>>
>> >>> Actually I mentioned a proof of space and time hybrid which is much
>> different than staking. Sorry to draw for the confusion as PoC is more
>> commonly used then PoST.
>> >>> There is a way to make PoC cryptographically compatible w/ Proof of
>> Work as it normally stands: https://en.wikipedia.org/wiki/Proof_of_space
>> >>> It has rarely been done though given the technological complexity of
>> being both CPU compatible and memory-hard compatible. There are lots of
>> benefits outside of the realm of efficiency, and I already looked into
>> numerous fault tolerant designs as well and what others in the cryptography
>> community attempted to propose. The actual argument you have only against
>> this is the Proof of Memory fallacy, which is only partially true. Given
>> how the current hashing algorithm works, hard memory allocation wouldn't be
>> of much benefit given it is more optimized for CPU/ASIC specific mining.
>> I'm working towards a hybrid mechanism that fixes that. BTW: The way
>> Bitcoin currently stands in its cryptography still needs updating
>> regardless. If someone figures out NP hardness or the halting problem the
>> traditional rule of millions of years to break all of Bitcoin's
>> cryptography now comes down to minutes. Bitcoin is going to have to
>> eventually radically upgrade their cryptography and hashing algo in the
>> future regardless. I want to integrate some form of NP complexity in
>> regards to the hybrid cryptography I'm aiming to provide which includes a
>> polynomial time algorithm in the cryptography. More than likely the first
>> version of my BTC hard fork will be coded in a way where integrating such
>> complexity in the future only requires a soft fork or minor upgrade to its
>> chain.
>> >>>
>> >>> In regards to the argument, "As a separate issue, proposing a hard
>> fork in the hashing algorithm will invalidate the enormous amount of
>> capital expenditure by mining entities and disincentivize future capital
>> expenditure into mining hardware that may compute these more "useful"
>> proofs of work."
>> >>>
>> >>> A large portion of BTC is already mined through AWS servers and
>> non-asic specific hardware anyways. A majority of them would benefit from a
>> hybrid proof, and the fact that it is hybrid in that manner wouldn't
>> disenfranchise currently optimized mining entities as well.
>> >>>
>> >>> There are other reasons why a cryptography upgrade like this is
>> beneficial. Theoretically one can argue BItcoin isn't fully decentralized.
>> It is few unsolved mathematical proofs away from being entirely broken. My
>> goal outside of efficiency is to build cryptography in a way that prevents
>> such an event from happening in the future, if it was to ever happen. I
>> have various research in regards to this area and work alot with
>> distributed computing. I believe if the BTC community likes such a
>> proposal, I would single handedly be able to build the cryptographic proof
>> myself (though would like as many open source contributors as I can get :)
>> >>>
>> >>> Anyways just something to consider. We are in the same space in
>> regards to what warrants a shitcoin or the whole argument against staking.
>> >>>
>> https://hackernoon.com/ethereum-you-are-a-centralized-cryptocurrency-stop-telling-us-that-you-arent-pi3s3yjl
>> >>>
>> >>> Best regards,  Andrew
>> >>>
>> >>> On Fri, Mar 5, 2021 at 4:11 PM Keagan McClelland <
>> keagan.mcclelland at gmail.com> wrote:
>> >>>>
>> >>>> It is important to understand that it is critical for the work to be
>> "useless" in order for the security model to be the same. If the work was
>> useful it provides an avenue for actors to have nothing at stake when
>> submitting a proof of work, since the marginal cost of block construction
>> will be lessened by the fact that the work was useful in a different
>> context and therefore would have been done anyway. This actually degrades
>> the security of the network in the process.
>> >>>>
>> >>>> As a separate issue, proposing a hard fork in the hashing algorithm
>> will invalidate the enormous amount of capital expenditure by mining
>> entities and disincentivize future capital expenditure into mining hardware
>> that may compute these more "useful" proofs of work. This is because any
>> change in the POW algorithm will be considered unstable and subject to
>> change in the future. This puts the entire network at even more risk
>> meaning that no entity is tying their own interests to that of the bitcoin
>> network at large. It also puts the developers in a position where they can
>> be bribed by entities with a vested interest in deciding what the new
>> "useful" proof of work should be.
>> >>>>
>> >>>> All of these things make the Bitcoin network worse off.
>> >>>>
>> >>>> Keagan
>> >>>>
>> >>>> On Fri, Mar 5, 2021 at 1:48 PM Lonero Foundation via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>> >>>>>
>> >>>>> Also in regards to my other email, I forgot to iterate that my
>> cryptography proposal helps behind the efficiency category but also tackles
>> problems such as NP-Completeness or Halting which is something the BTC
>> network could be vulnerable to in the future. For sake of simplicity, I do
>> want to do this BIP because it tackles lots of the issues in regards to
>> this manner and can provide useful insight to the community. If things such
>> as bigger block height have been proposed as hard forks, I feel at the very
>> least an upgrade regarding the hashing algorithm and cryptography does at
>> least warrant some discussion. Anyways I hope I can send you my BIP, just
>> let me know on the preferred format?
>> >>>>>
>> >>>>> Best regards, Andrew
>> >>>>>
>> >>>>> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <
>> loneroassociation at gmail.com> wrote:
>> >>>>>>
>> >>>>>> Hi, this isn't about the energy efficient argument in regards to
>> renewables or mining devices but a better cryptography layer to get the
>> most out of your hashing for validation. I do understand the arbitrariness
>> of it, but do want to still propose a document. Do I use the Media Wiki
>> format on GitHub and just attach it as my proposal?
>> >>>>>>
>> >>>>>> Best regards, Andrew
>> >>>>>>
>> >>>>>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net>
>> wrote:
>> >>>>>>>
>> >>>>>>> Hi Ryan and Andrew,
>> >>>>>>>
>> >>>>>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>> >>>>>>>>
>> >>>>>>>>
>> >>>>>>>>   https://www.truthcoin.info/blog/pow-cheapest/
>> >>>>>>>>     "Nothing is Cheaper than Proof of Work"
>> >>>>>>>>     on | 04 Aug 2015
>> >>>>>>>>
>> >>>>>>>
>> >>>>>>> Just to belabor this a bit, the paper demonstrates that the
>> mining market will tend to expend resources equivalent to miner reward.  It
>> does not prove that mining work has to expend *energy* as a primary cost.
>> >>>>>>>
>> >>>>>>> Some might argue that energy expenditure has negative
>> externalities and that we should move to other resources.  I would argue
>> that the negative externalities will go away soon because of the move to
>> renewables, so the point is likely moot.
>> >>>>>>>
>> >>>>> _______________________________________________
>> >>>>> bitcoin-dev mailing list
>> >>>>> bitcoin-dev at lists.linuxfoundation.org
>> >>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> >>>
>> >>> _______________________________________________
>> >>> bitcoin-dev mailing list
>> >>> bitcoin-dev at lists.linuxfoundation.org
>> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> >
>> > _______________________________________________
>> > bitcoin-dev mailing list
>> > bitcoin-dev at lists.linuxfoundation.org
>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210308/848af606/attachment-0001.html>

From lloyd.fourn at gmail.com  Wed Mar 10 00:20:58 2021
From: lloyd.fourn at gmail.com (Lloyd Fournier)
Date: Wed, 10 Mar 2021 11:20:58 +1100
Subject: [bitcoin-dev] New PSBT version proposal
In-Reply-To: <1dd8c285-e3f4-4f03-d608-103a5026146d@achow101.com>
References: <1dd8c285-e3f4-4f03-d608-103a5026146d@achow101.com>
Message-ID: <CAH5Bsr22oQ_yOD1eom6gZhUVbr+bMj2W8rfWO=Edujhj9bNsEg@mail.gmail.com>

Hi Andrew & all,

I've been working with PSBTs for a little while now. FWIW I agree with the
change of removing the global tx and having the input/output data stored
together in the new unified structures.

One thing I've been wondering about is how output descriptors could fit
into PSBTs. They are useful since they allow you to determine the maximum
satisfaction weight for inputs so you can properly align fees as things get
added. I haven't seen any discussion about including them in this revision.
Is it simply a matter of time before they make it into a subsequent PSBT
spec or is there something I'm missing conceptually?

Cheers,

LL

On Thu, 10 Dec 2020 at 09:33, Andrew Chow via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Hi All,
>
> I would like to propose a new PSBT version that addresses a few
> deficiencies in the current PSBT v0. As this will be backwards
> incompatible, a new PSBT version will be used, v1.
>
> The primary change is to truly have all input and output data for each
> in their respective maps. Instead of having to parse an unsigned
> transaction and lookup some data from there, and other data from the
> correct map, all of the data for an input will be contained in its map.
> Doing so also disallows PSBT_GLOBAL_UNSIGNED_TX in this new version.
> Thus I propose that the following fields be added:
>
> Global:
> * PSBT_GLOBAL_TX_VERSION = 0x02
>    * Key: empty
>    * Value: 32-bit little endian unsigned integer for the transaction
> version number. Must be provided in PSBT v1 and omitted in v0.
> * PSBT_GLOBAL_PREFERRED_LOCKTIME = 0x03
>    * Key: empty
>    * Value: 32 bit little endian unsigned integer for the preferred
> transaction lock time. Must be omitted in PSBT v0. May be provided in
> PSBT v1, assumed to be 0 if not provided.
> * PSBT_GLOBAL_INPUT_COUNT = 0x04
>    * Key: empty
>    * Value: Compact size unsigned integer. Number of inputs in this
> PSBT. Must be provided in PSBT v1 and omitted in v0.
> * PSBT_GLOBAL_OUTPUT_COUNT = 0x05
>    * Key: empty
>    * Value: Compact size unsigned integer. Number of outputs in this
> PSBT. Must be provided in PSBT v1 and omitted in v0.
>
> Input:
> * PSBT_IN_PREVIOUS_TXID = 0x0e
>    * Key: empty
>    * Value: 32 byte txid of the previous transaction whose output at
> PSBT_IN_OUTPUT_INDEX is being spent. Must be provided in PSBT v1 and
> omitted in v0.
> * PSBT_IN_OUTPUT_INDEX = 0x0f
>    * Key: empty
>    * Value: 32 bit little endian integer for the index of the output
> being spent. Must be provided in PSBT v1 and omitted in v0.
> * PSBT_IN_SEQUENCE = 0x0f
>    * Key: empty
>    * Value: 32 bit unsigned little endian integer for the sequence
> number. Must be omitted in PSBT v0. May be provided in PSBT v1 assumed
> to be max sequence (0xffffffff) if not provided.
> * PSBT_IN_REQUIRED_LOCKTIME = 0x10
>    * Key: empty
>    * Value: 32 bit unsigned little endian integer for the lock time that
> this input requires. Must be omitted in PSBT v0. May be provided in PSBT
> v1, assumed to be 0 if not provided.
>
> Output:
> * PSBT_OUT_VALUE = 0x03
>    * Key: empty
>    * Value: 64-bit unsigned little endian integer for the output's
> amount in satoshis. Must be provided in PSBT v1 and omitted in v0.
> * PSBT_OUT_OUTPUT_SCRIPT = 0x04
>    * Key: empty
>    * Value: The script for this output. Otherwise known as the
> scriptPubKey. Must be provided in PSBT v1 and omitted in v0.
>
> This change allows for PSBT to be used in the construction of
> transactions. With these new fields, inputs and outputs can be added as
> needed. One caveat is that there is no longer a unique transaction
> identifier so more care must be taken when combining PSBTs.
> Additionally, adding new inputs and outputs must be done such that
> signatures are not invalidated. This may be harder to specify.
>
> An important thing to note in this proposal are the fields
> PSBT_GLOBAL_PREFERRED_LOCKTIME and PSBT_IN_REQUIRED_LOCKTIME. A Bitcoin
> transaction only has a single locktime yet a PSBT may have multiple
> locktimes. To choose the locktime for the transaction, finalizers must
> choose the maximum of all of the *_LOCKTIME fields.
> PSBT_IN_REQUIRED_LOCKTIME is added because some inputs, such as those
> involving OP_CHECKLOCKTIMEVERIFY, require a specific minimum locktime to
> be set. This field allows finalizers to choose a locktime that is high
> enough for all inputs without needing to understand the scripts
> involved. The PSBT_GLOBAL_PREFERRED_LOCKTIME is the locktime to use if
> no inputs require a particular locktime.
>
> As these changes disallow the PSBT_GLOBAL_UNSIGNED_TX field, PSBT v1
> needs the version number bump to enforce backwards incompatibility.
> However once the inputs and outputs of a PSBT are decided, a PSBT could
> be "downgraded" back to v0 by creating the unsigned transaction from the
> above fields, and then dropping these new fields.
>
> If the list finds that these changes are reasonable, I will write a PR
> to modify BIP 174 to incorporate them.
>
> Thanks,
> Andrew Chow
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210310/a1f27c51/attachment.html>

From prayank at tutanota.de  Wed Mar 10 02:39:54 2021
From: prayank at tutanota.de (Prayank)
Date: Wed, 10 Mar 2021 03:39:54 +0100 (CET)
Subject: [bitcoin-dev] Mining Pools in Bitcoin and their involvement in
 Bitcoin development
Message-ID: <MVP-Ixb--3-2@tutanota.de>

Hello World,

Lets start with facts instead of opinion. Mining pool distribution in last 24 hours:

Binance - 16%
F2Pool - 15%
Huobi - 11%
AntPool - 10%
ViaBTC - 10%
Poolin - 9%
BTC.com - 8%

This is 80% and things are not really different even if look at last 2 weeks. Most of the pools have been reusing address for coinbase transaction and sharing name in coinbase text.?

Their opinion on "Taproot":?https://taprootactivation.com/

I won't comment on the origin of these mining pools or history. Maybe things will improve with Stratum v2, lets look at miners but its difficult to know the exact location of miners considering no such details in protocol and people can use Tor, VPN, proxy etc. Mining pools can be non-KYC or have their own understanding with miners. Few countries increased their involvement in Bitcoin mining recently and governments:

Russia
Iran
Venezuela
Pakistan

China, US and few others are already involved from  years. Maybe others that we don't know and were not highlighted in mainstream media. What are the risks and rewards involved in bitcoin mining:

Rewards:

 Block reward (6.25 BTC right now) + transaction fees
Freedom to include transactions (can censor few transactions if they want)
Involved in signaling for soft forks (Bitcoin Development)

Risks:

BTCUSD (Can be hedged)
Hashrate and Difficulty (Can be hedged)

What are the opportunities we provide when mining pools (businesses) are asked to agree/disagree on some soft fork, follow with communication and then signaling?

Politics and misinformation for few months or years
Forked coin as add-on in some cases
Delay Bitcoin development
Maybe convince everyone Bitcoin needs no improvement
Others
Who can sponsor for the above mentioned things?

Government
Scammers with money and time who were even able to remove whitepaper
Altcoin foundations
Is this FUD? No. These are possible issues related to mining pools and we need to plan accordingly. Many people are concerned about UASF and prefer future markets. I don't agree with them and reasons are simple. Changes in Bitcoin Protocol doesn't need futures markets or tokens, both can be easily manipulated by traders and exchanges to make profits. Where is the "Adversarial Thinking" involved in changing Bitcoin Protocol and considering involvement of mining pools?

Already a long email so will share the link to a recent question I asked on "Bitcoin" Stackexchange about identifying which mining pool mined a block:?https://bitcoin.stackexchange.com/questions/103409/identify-which-mining-pool-mined-a-block

I am hopeful things will improve and interested to contribute more. Will be helpful if someone could also answer why do we have 30% vulnerable nodes in Bitcoin network?

https://www.reddit.com/r/Bitcoin/comments/lb6dpi/vulnerable_bitcoin_nodes/

Thanks.

Will end the email on a positive note with something that inspires me a lot:

Satoshi's lesson is that you don't need to be the next Einstein in order to change the world. Nor do you need to have much money, or influence with the world's "movers & shakers". You just need to put in the effort. Satoshi, probably just an ordinary hobbyist like anyone here, saw that something was lacking in the Universe, and he fought tooth-and-nail for 2+ years until this imperfection was corrected. This is what makes Satoshi and his work my greatest inspiration.
 
https://bitcointalk.org/index.php?topic=5092492.0
-- 
 Prayank
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210310/4166cdc0/attachment-0001.html>

From willtech at live.com.au  Wed Mar 10 06:34:35 2021
From: willtech at live.com.au (LORD HIS EXCELLENCY JAMES HRMH)
Date: Wed, 10 Mar 2021 06:34:35 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <CAMnpzfpJSy6Jib_467c7zhE02cSNhjG7T8ASJ=X-b_j4F1Zmgg@mail.gmail.com>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
 <fbc4ce6c-111d-4dcc-8fc7-03ea91855bc4@www.fastmail.com>
 <SL2P216MB00899B7B3C67C0DD9E9376B09D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <CAJowKg+UY4AN_9otk+6doNsP6NVeHZti_89rCAOTfVaQahre+A@mail.gmail.com>
 <SL2P216MB00893A9FE7A43CDC373197889D979@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>,
 <CAMnpzfpJSy6Jib_467c7zhE02cSNhjG7T8ASJ=X-b_j4F1Zmgg@mail.gmail.com>
Message-ID: <SL2P216MB0089B36FF0EFAB9958E4DA5B9D919@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>

Good Afternoon,

You cannot liken the ability to scrutinise the public ledger to be the same as hiding information, it is like showing your palm while you are pointing at the back of your hand. The advice that I have is P2SH is scrutable once the UTXO is spent. Also, there is no public ledger obfuscation in creating new addresses, there is a plausible reduction in transaction linkage.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au
www.go-overt.com
and other projects

earn.com/willtech
linkedin.com/in/damianwilliamson


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
________________________________
From: bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on behalf of Ryan Grant via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
Sent: Saturday, 6 March 2021 1:04 AM
To: Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
Subject: Re: [bitcoin-dev] Taproot NACK

On Thu, Mar 4, 2021 at 8:48 PM LORD HIS EXCELLENCY JAMES HRMH via
bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> My concern was that the more complex scripts allow obfuscation of the Pay To address

This is no different from options available in P2SH, or from the
obfuscation achieved by generating a new address for a payment.
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210310/629032b3/attachment-0001.html>

From jlrubin at mit.edu  Wed Mar 10 23:55:43 2021
From: jlrubin at mit.edu (Jeremy)
Date: Wed, 10 Mar 2021 15:55:43 -0800
Subject: [bitcoin-dev] Delegated signatures in Bitcoin within existing rules,
	no fork required
Message-ID: <CAD5xwhhC1Y13p7KazfUOXFZ5vi5MA9EQ-scyafv4aNkjskoXBg@mail.gmail.com>

I'm aware that some folks (I think nullc, sipa, myself... maybe more?) are
aware of how to do script delegation in Bitcoin today (without any
modifications to Bitcoin), but realized in a conversation with Andrew P
that the technique is not widely known. So I figured it made sense to do a
brief explainer of how this works for the archives / so the technique is
documented. If someone has other citations for this, please respond below.

If you like cartoons follow along here:

https://docs.google.com/presentation/d/1ikcthy3p-Ah59pJyss0TLEj-Q2FF6tv7BXhkORzErAE/edit#slide=id.p

Technically what we are doing is delegating a UTXO to a specific UTXO, and
not to a script.


Suppose you have a coin on UTXO A. You would like to delegate it to script
S. You can either scan the chain for any UTXOs bound to S or use some
arbitrary coin B to create a transaction X with an output D that has script
S (doesn't have to have any value, but let's say it has a nominal amount to
avoid dust issues). Because tx X is not malleable, we don't need to
actually broadcast it and spend B till we want to use the delegation, and
it can be created (for the TXID) without B's owner being online. However
you get the UTXO, and if it exists or not yet, let's call it D.

*Note: if you're using a delegation script multiple times, you can optimize
the creation step a bit*

Now, using A, you sign a transaction with 2 inputs (one of them being D)
and SIGHASH_NONE. This signs all of the inputs (but not their sequences!)
but none of the outputs. Let's call this transaction stub G.

Now, using S, you sign D's input on G with SIGHASH_ALL and the outputs you
want to create (whatever they may be). Let's call the finished transaction
F.

Effectively, the holder of A has delegated the control of their coin to a
specific instance of the script S. Once delegated, S may authorize almost
any transaction they want (complicated if they want to sign a multiple
input transaction; but there are good substitutes).

Advanced Topics:

*Revocation*: There are multiple ways to revoke, either moving A, moving D,
refusing to sign and create D (when D is derived from B), etc. Because
these are UTXO-bound they are revocable. (the cartoon may help here)
*Cross input delegation*: A set of N coins may create a sighash_none
transaction with 1 additional input for the delegating script
*Partial Spending Authorizations*: Replacing sighash_none with
sighash_single allows an input to specify a single change address (plug --
OP_CTV covenants can be thought of as a way to get around sighash_single to
allow sighash_single to cover signing a set of outputs)
*Delegation after time*: Because the lock_time field is covered,
delegations can be set up to only be valid at some point in the future.
Only a single sequence lock per delegated coin may be used directly.
*Multiple Delegates: *By signing a txn with several delegate outputs, it is
possible to enforce multiple disparate conditions. Normally this is
superfluous -- why not just concatenate S1 and S2? The answer is that you
may have S1 require a relative height lock and S2 require a relative time
lock (this was one of the mechanisms investigated for powswap.com).
*Sequenced Contingent Delegation*: By constructing a specific TXID that may
delegate the coins, you can make a coin's delegation contingent on some
other contract reaching a specific state. For example, suppose I had a
contract that had 100 different possible end states, all with fixed
outpoints at the end. I could delegate coins in different arrangements to
be claimable only if the contract reaches that state. Note that such a
model requires some level of coordination between the main and observing
contract as each Coin delegate can only be claimed one time.
*CTV Specific P2SH Non Coin Delegation: *OP_CTV allows for a similar form
of delegation where by a Segwit P2SH address, as a part of the CTV
committed data, can be used without binding it to any specific UTXO. With
the addition of OP_CAT, it would be possible to both programmatically
change the outputs (rather than just approving the fixed txn) and to
dynamically select the script.
*Redelegating: *This is where A delegates to S, S delegates to S'. This
type of mechanism most likely requires the coin to be moved on-chain to the
script (A OR S or S'), but the on-chain movement may be delayed (via
presigned transactions) until S' actually wants to do something with the
coin.

There are obviously many other things you can do with delegation in
general, the above are specific to how coin delegation is done. I'm
probably missing some of the fun stuff -- please riff on this!

Best,

Jeremy

--
@JeremyRubin <https://twitter.com/JeremyRubin>
<https://twitter.com/JeremyRubin>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210310/b7929d50/attachment.html>

From keagan.mcclelland at gmail.com  Thu Mar 11 00:47:37 2021
From: keagan.mcclelland at gmail.com (Keagan McClelland)
Date: Wed, 10 Mar 2021 17:47:37 -0700
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <SL2P216MB0089B36FF0EFAB9958E4DA5B9D919@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
 <fbc4ce6c-111d-4dcc-8fc7-03ea91855bc4@www.fastmail.com>
 <SL2P216MB00899B7B3C67C0DD9E9376B09D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <CAJowKg+UY4AN_9otk+6doNsP6NVeHZti_89rCAOTfVaQahre+A@mail.gmail.com>
 <SL2P216MB00893A9FE7A43CDC373197889D979@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <CAMnpzfpJSy6Jib_467c7zhE02cSNhjG7T8ASJ=X-b_j4F1Zmgg@mail.gmail.com>
 <SL2P216MB0089B36FF0EFAB9958E4DA5B9D919@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
Message-ID: <CALeFGL2oNzuUx=aYbqtEknhJ1wviof2neB7eFwBBJ_4iA0wOMw@mail.gmail.com>

LORD HIS EXCELLENCY,

This isn't different with Taproot either. When you spend a P2SH output you
reveal the script. In Taproot you reveal the portion of the script that is
relevant to allowing you to spend it. There is no value to specifying the
other possible conditions that could have moved the coins because, after
all, you aren't invoking those clauses to move the coins. I am showing you
my fingertip, and pointing to my finger tip, the palm is not relevant.

Keagan

On Wed, Mar 10, 2021 at 2:11 AM LORD HIS EXCELLENCY JAMES HRMH via
bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:

> Good Afternoon,
>
> You cannot liken the ability to scrutinise the public ledger to be the
> same as hiding information, it is like showing your palm while you are
> pointing at the back of your hand. The advice that I have is P2SH is
> scrutable once the UTXO is spent. Also, there is no public ledger
> obfuscation in creating new addresses, there is a plausible reduction in
> transaction linkage.
>
> KING JAMES HRMH
> Great British Empire
>
> Regards,
> The Australian
> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> of Hougun Manor & Glencoe & British Empire
> MR. Damian A. James Williamson
> Wills
>
> et al.
>
>
> Willtech
> www.willtech.com.au
> www.go-overt.com
> and other projects
>
> earn.com/willtech
> linkedin.com/in/damianwilliamson
>
>
> m. 0487135719
> f. +61261470192
>
>
> This email does not constitute a general advice. Please disregard this
> email if misdelivered.
> ------------------------------
> *From:* bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on
> behalf of Ryan Grant via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org>
> *Sent:* Saturday, 6 March 2021 1:04 AM
> *To:* Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> *Subject:* Re: [bitcoin-dev] Taproot NACK
>
> On Thu, Mar 4, 2021 at 8:48 PM LORD HIS EXCELLENCY JAMES HRMH via
> bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > My concern was that the more complex scripts allow obfuscation of the
> Pay To address
>
> This is no different from options available in P2SH, or from the
> obfuscation achieved by generating a new address for a payment.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210310/9f72b3f9/attachment-0001.html>

From loneroassociation at gmail.com  Thu Mar 11 15:29:38 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Thu, 11 Mar 2021 10:29:38 -0500
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CA+YkXXw1AiMqCoPk_pUOdDMfkGF_T+aURGAjGK=MTa7jtAQchg@mail.gmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CAMnpzfop8ttqjMAKoS37zpQV6WiZfi1Bn+y_e-HaepTiD4Vm1Q@mail.gmail.com>
 <CAB0O3SVNyr_t23Y0LyT0mSaf6LONFRLYJ8qzO7rcdJFnrGccFw@mail.gmail.com>
 <CA+YkXXwkSCu=2UOEhzFBzGDHo1c=Ewqsnxp632ke3jdH1ff5WA@mail.gmail.com>
 <CA+YkXXwfS7eer5Za_ed9tCNdfOp4c3nV_X=mfXzoDxMm6BrizQ@mail.gmail.com>
 <CALeFGL31M5DAULLRtCwjPYHaPVqsVqREUg6WQ2-cuj23SNk=BA@mail.gmail.com>
 <CA+YkXXwBMG6YUAhf-2U5EV5Ep5RgG2foc9chramNFN5=AQ=-EA@mail.gmail.com>
 <CALeFGL3E-rWW9aJkwre_3UF44vbNxPH2436DvaQdHoqEQ5b+eg@mail.gmail.com>
 <CA+YkXXyBmOootb=Kt6CH3yquYVnAZd=fJQqiF_A3p_pkB8QC3g@mail.gmail.com>
 <CALC81CMDQf4PqxRisQw58OL7QSFeMcQTvLMvmtOGJ_ya4-dhLg@mail.gmail.com>
 <CA+YkXXyP=BQ_a42J=RE7HJFcJ73atyrt4KWKUG8LbsbW=u4b5w@mail.gmail.com>
 <CA+YkXXw1AiMqCoPk_pUOdDMfkGF_T+aURGAjGK=MTa7jtAQchg@mail.gmail.com>
Message-ID: <CA+YkXXy1Y407UDdEjRVjzBFOCmaUKDoZkvqtXkxkmXmMdNrwBQ@mail.gmail.com>

Hi, I have submitted the BIP Pull Request here:
https://github.com/bitcoin/bips/pull/1084

Hoping to receive a BIP # for the draft prior to development/reference
implementation.

Best regards, Andrew

On Mon, Mar 8, 2021, 6:40 PM Lonero Foundation <loneroassociation at gmail.com>
wrote:

> Hi, here is the list to the BIP proposal on my own repo:
> https://github.com/Mentors4EDU/bip-amkn-posthyb/blob/main/bip-draft.mediawiki
> Can I submit a pull request on the BIPs repo for this to go into draft
> mode? Also, I think this provides at least some more insight on what I want
> to work on.
>
> Best regards, Andrew
>
> On Sat, Mar 6, 2021, 10:42 AM Lonero Foundation <
> loneroassociation at gmail.com> wrote:
>
>> [off-list]
>>
>> Okay. I will do so and post the link here for discussion before doing a
>> pull request on BIP's repo as the best way to handle it.
>>
>> Best regards, Andrew
>>
>> On Sat, Mar 6, 2021, 10:21 AM Ricardo Filipe <ricardojdfilipe at gmail.com>
>> wrote:
>>
>>> As said before, you are free to create the BIP in your own repository
>>> and bring it to discussion on the mailing list. then you can do a PR
>>>
>>> Lonero Foundation via bitcoin-dev
>>> <bitcoin-dev at lists.linuxfoundation.org> escreveu no dia s?bado,
>>> 6/03/2021 ?(s) 08:58:
>>> >
>>> > I know Ethereum had an outlandishly large percentage of nodes running
>>> on AWS, I heard the same thing is for Bitcoin but for mining. Had trouble
>>> finding the article online so take it with a grain of salt. The point
>>> though is that both servers and ASIC specific hardware would still be able
>>> to benefit from the cryptography upgrade I am proposing, as this was in
>>> relation to the disinfranchisemet point.
>>> >
>>> > That said, I think the best way to move forward is to submit a BIP
>>> pull request for a draft via GitHub using BIP #2's draft format and any
>>> questions people have can be answered in the reqeust's comments. That way
>>> people don't have to get emails everytime there is a reply, but replies
>>> still get seen as opposed to offline discussion. Since the instructions say
>>> to email bitcoin-dev before doing a bip draft, I have done that. Since
>>> people want to see the draft beforehand and it isn't merged manually
>>> anyways, I think it is the easiest way to handle this.
>>> >
>>> > I'm also okay w/ continuing the discussion on bitcoin-dev but rather
>>> form a discussion on git instead given I don't want to accidentally
>>> impolitely bother people given this is a moderated list and we already
>>> established some interest for at least a draft.
>>> >
>>> > Does that seem fine?
>>> >
>>> > Best regards, Andrew
>>> >
>>> > On Fri, Mar 5, 2021, 7:41 PM Keagan McClelland <
>>> keagan.mcclelland at gmail.com> wrote:
>>> >>
>>> >> > A large portion of BTC is already mined through AWS servers and
>>> non-asic specific hardware anyways. A majority of them would benefit from a
>>> hybrid proof, and the fact that it is hybrid in that manner wouldn't
>>> disenfranchise currently optimized mining entities as well.
>>> >>
>>> >> My instincts tell me that this is an outlandish claim. Do you have
>>> supporting evidence for this?
>>> >>
>>> >> Keagan
>>> >>
>>> >> On Fri, Mar 5, 2021 at 3:22 PM Lonero Foundation via bitcoin-dev <
>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>> >>>
>>> >>> Actually I mentioned a proof of space and time hybrid which is much
>>> different than staking. Sorry to draw for the confusion as PoC is more
>>> commonly used then PoST.
>>> >>> There is a way to make PoC cryptographically compatible w/ Proof of
>>> Work as it normally stands: https://en.wikipedia.org/wiki/Proof_of_space
>>> >>> It has rarely been done though given the technological complexity of
>>> being both CPU compatible and memory-hard compatible. There are lots of
>>> benefits outside of the realm of efficiency, and I already looked into
>>> numerous fault tolerant designs as well and what others in the cryptography
>>> community attempted to propose. The actual argument you have only against
>>> this is the Proof of Memory fallacy, which is only partially true. Given
>>> how the current hashing algorithm works, hard memory allocation wouldn't be
>>> of much benefit given it is more optimized for CPU/ASIC specific mining.
>>> I'm working towards a hybrid mechanism that fixes that. BTW: The way
>>> Bitcoin currently stands in its cryptography still needs updating
>>> regardless. If someone figures out NP hardness or the halting problem the
>>> traditional rule of millions of years to break all of Bitcoin's
>>> cryptography now comes down to minutes. Bitcoin is going to have to
>>> eventually radically upgrade their cryptography and hashing algo in the
>>> future regardless. I want to integrate some form of NP complexity in
>>> regards to the hybrid cryptography I'm aiming to provide which includes a
>>> polynomial time algorithm in the cryptography. More than likely the first
>>> version of my BTC hard fork will be coded in a way where integrating such
>>> complexity in the future only requires a soft fork or minor upgrade to its
>>> chain.
>>> >>>
>>> >>> In regards to the argument, "As a separate issue, proposing a hard
>>> fork in the hashing algorithm will invalidate the enormous amount of
>>> capital expenditure by mining entities and disincentivize future capital
>>> expenditure into mining hardware that may compute these more "useful"
>>> proofs of work."
>>> >>>
>>> >>> A large portion of BTC is already mined through AWS servers and
>>> non-asic specific hardware anyways. A majority of them would benefit from a
>>> hybrid proof, and the fact that it is hybrid in that manner wouldn't
>>> disenfranchise currently optimized mining entities as well.
>>> >>>
>>> >>> There are other reasons why a cryptography upgrade like this is
>>> beneficial. Theoretically one can argue BItcoin isn't fully decentralized.
>>> It is few unsolved mathematical proofs away from being entirely broken. My
>>> goal outside of efficiency is to build cryptography in a way that prevents
>>> such an event from happening in the future, if it was to ever happen. I
>>> have various research in regards to this area and work alot with
>>> distributed computing. I believe if the BTC community likes such a
>>> proposal, I would single handedly be able to build the cryptographic proof
>>> myself (though would like as many open source contributors as I can get :)
>>> >>>
>>> >>> Anyways just something to consider. We are in the same space in
>>> regards to what warrants a shitcoin or the whole argument against staking.
>>> >>>
>>> https://hackernoon.com/ethereum-you-are-a-centralized-cryptocurrency-stop-telling-us-that-you-arent-pi3s3yjl
>>> >>>
>>> >>> Best regards,  Andrew
>>> >>>
>>> >>> On Fri, Mar 5, 2021 at 4:11 PM Keagan McClelland <
>>> keagan.mcclelland at gmail.com> wrote:
>>> >>>>
>>> >>>> It is important to understand that it is critical for the work to
>>> be "useless" in order for the security model to be the same. If the work
>>> was useful it provides an avenue for actors to have nothing at stake when
>>> submitting a proof of work, since the marginal cost of block construction
>>> will be lessened by the fact that the work was useful in a different
>>> context and therefore would have been done anyway. This actually degrades
>>> the security of the network in the process.
>>> >>>>
>>> >>>> As a separate issue, proposing a hard fork in the hashing algorithm
>>> will invalidate the enormous amount of capital expenditure by mining
>>> entities and disincentivize future capital expenditure into mining hardware
>>> that may compute these more "useful" proofs of work. This is because any
>>> change in the POW algorithm will be considered unstable and subject to
>>> change in the future. This puts the entire network at even more risk
>>> meaning that no entity is tying their own interests to that of the bitcoin
>>> network at large. It also puts the developers in a position where they can
>>> be bribed by entities with a vested interest in deciding what the new
>>> "useful" proof of work should be.
>>> >>>>
>>> >>>> All of these things make the Bitcoin network worse off.
>>> >>>>
>>> >>>> Keagan
>>> >>>>
>>> >>>> On Fri, Mar 5, 2021 at 1:48 PM Lonero Foundation via bitcoin-dev <
>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>> >>>>>
>>> >>>>> Also in regards to my other email, I forgot to iterate that my
>>> cryptography proposal helps behind the efficiency category but also tackles
>>> problems such as NP-Completeness or Halting which is something the BTC
>>> network could be vulnerable to in the future. For sake of simplicity, I do
>>> want to do this BIP because it tackles lots of the issues in regards to
>>> this manner and can provide useful insight to the community. If things such
>>> as bigger block height have been proposed as hard forks, I feel at the very
>>> least an upgrade regarding the hashing algorithm and cryptography does at
>>> least warrant some discussion. Anyways I hope I can send you my BIP, just
>>> let me know on the preferred format?
>>> >>>>>
>>> >>>>> Best regards, Andrew
>>> >>>>>
>>> >>>>> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <
>>> loneroassociation at gmail.com> wrote:
>>> >>>>>>
>>> >>>>>> Hi, this isn't about the energy efficient argument in regards to
>>> renewables or mining devices but a better cryptography layer to get the
>>> most out of your hashing for validation. I do understand the arbitrariness
>>> of it, but do want to still propose a document. Do I use the Media Wiki
>>> format on GitHub and just attach it as my proposal?
>>> >>>>>>
>>> >>>>>> Best regards, Andrew
>>> >>>>>>
>>> >>>>>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <
>>> c1.devrandom at niftybox.net> wrote:
>>> >>>>>>>
>>> >>>>>>> Hi Ryan and Andrew,
>>> >>>>>>>
>>> >>>>>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <
>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>> >>>>>>>>
>>> >>>>>>>>
>>> >>>>>>>>   https://www.truthcoin.info/blog/pow-cheapest/
>>> >>>>>>>>     "Nothing is Cheaper than Proof of Work"
>>> >>>>>>>>     on | 04 Aug 2015
>>> >>>>>>>>
>>> >>>>>>>
>>> >>>>>>> Just to belabor this a bit, the paper demonstrates that the
>>> mining market will tend to expend resources equivalent to miner reward.  It
>>> does not prove that mining work has to expend *energy* as a primary cost.
>>> >>>>>>>
>>> >>>>>>> Some might argue that energy expenditure has negative
>>> externalities and that we should move to other resources.  I would argue
>>> that the negative externalities will go away soon because of the move to
>>> renewables, so the point is likely moot.
>>> >>>>>>>
>>> >>>>> _______________________________________________
>>> >>>>> bitcoin-dev mailing list
>>> >>>>> bitcoin-dev at lists.linuxfoundation.org
>>> >>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>> >>>
>>> >>> _______________________________________________
>>> >>> bitcoin-dev mailing list
>>> >>> bitcoin-dev at lists.linuxfoundation.org
>>> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>> >
>>> > _______________________________________________
>>> > bitcoin-dev mailing list
>>> > bitcoin-dev at lists.linuxfoundation.org
>>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210311/cf8f16b7/attachment-0001.html>

From rebroad+linuxfoundation.org at gmail.com  Fri Mar 12 13:04:05 2021
From: rebroad+linuxfoundation.org at gmail.com (R E Broadley)
Date: Fri, 12 Mar 2021 13:04:05 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <CALeFGL2oNzuUx=aYbqtEknhJ1wviof2neB7eFwBBJ_4iA0wOMw@mail.gmail.com>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
 <fbc4ce6c-111d-4dcc-8fc7-03ea91855bc4@www.fastmail.com>
 <SL2P216MB00899B7B3C67C0DD9E9376B09D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <CAJowKg+UY4AN_9otk+6doNsP6NVeHZti_89rCAOTfVaQahre+A@mail.gmail.com>
 <SL2P216MB00893A9FE7A43CDC373197889D979@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <CAMnpzfpJSy6Jib_467c7zhE02cSNhjG7T8ASJ=X-b_j4F1Zmgg@mail.gmail.com>
 <SL2P216MB0089B36FF0EFAB9958E4DA5B9D919@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <CALeFGL2oNzuUx=aYbqtEknhJ1wviof2neB7eFwBBJ_4iA0wOMw@mail.gmail.com>
Message-ID: <CAFBxzAAO1u=C8wpwvRs5evE657V0NdnSE9PYAbanpJt5ZdSkdA@mail.gmail.com>

Can I just point out (to those addressing James as Lord/Excelency/etc
that he isn't noble nor a Lord, so just wanted to mention this in case
people were giving him more attention than the average person would be
afforded.

My 2p (an equal 2p) on Taproot is ACK, by the way.

On Thu, 11 Mar 2021 at 00:49, Keagan McClelland via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> LORD HIS EXCELLENCY,
>
> This isn't different with Taproot either. When you spend a P2SH output you reveal the script. In Taproot you reveal the portion of the script that is relevant to allowing you to spend it. There is no value to specifying the other possible conditions that could have moved the coins because, after all, you aren't invoking those clauses to move the coins. I am showing you my fingertip, and pointing to my finger tip, the palm is not relevant.
>
> Keagan
>
> On Wed, Mar 10, 2021 at 2:11 AM LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>> Good Afternoon,
>>
>> You cannot liken the ability to scrutinise the public ledger to be the same as hiding information, it is like showing your palm while you are pointing at the back of your hand. The advice that I have is P2SH is scrutable once the UTXO is spent. Also, there is no public ledger obfuscation in creating new addresses, there is a plausible reduction in transaction linkage.
>>
>> KING JAMES HRMH
>> Great British Empire
>>
>> Regards,
>> The Australian
>> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
>> of Hougun Manor & Glencoe & British Empire
>> MR. Damian A. James Williamson
>> Wills
>>
>> et al.
>>
>>
>> Willtech
>> www.willtech.com.au
>> www.go-overt.com
>> and other projects
>>
>> earn.com/willtech
>> linkedin.com/in/damianwilliamson
>>
>>
>> m. 0487135719
>> f. +61261470192
>>
>>
>> This email does not constitute a general advice. Please disregard this email if misdelivered.
>> ________________________________
>> From: bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on behalf of Ryan Grant via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
>> Sent: Saturday, 6 March 2021 1:04 AM
>> To: Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
>> Subject: Re: [bitcoin-dev] Taproot NACK
>>
>> On Thu, Mar 4, 2021 at 8:48 PM LORD HIS EXCELLENCY JAMES HRMH via
>> bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> > My concern was that the more complex scripts allow obfuscation of the Pay To address
>>
>> This is no different from options available in P2SH, or from the
>> obfuscation achieved by generating a new address for a payment.
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From erik at q32.com  Fri Mar 12 15:02:48 2021
From: erik at q32.com (Erik Aronesty)
Date: Fri, 12 Mar 2021 10:02:48 -0500
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CA+YkXXy1Y407UDdEjRVjzBFOCmaUKDoZkvqtXkxkmXmMdNrwBQ@mail.gmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CAMnpzfop8ttqjMAKoS37zpQV6WiZfi1Bn+y_e-HaepTiD4Vm1Q@mail.gmail.com>
 <CAB0O3SVNyr_t23Y0LyT0mSaf6LONFRLYJ8qzO7rcdJFnrGccFw@mail.gmail.com>
 <CA+YkXXwkSCu=2UOEhzFBzGDHo1c=Ewqsnxp632ke3jdH1ff5WA@mail.gmail.com>
 <CA+YkXXwfS7eer5Za_ed9tCNdfOp4c3nV_X=mfXzoDxMm6BrizQ@mail.gmail.com>
 <CALeFGL31M5DAULLRtCwjPYHaPVqsVqREUg6WQ2-cuj23SNk=BA@mail.gmail.com>
 <CA+YkXXwBMG6YUAhf-2U5EV5Ep5RgG2foc9chramNFN5=AQ=-EA@mail.gmail.com>
 <CALeFGL3E-rWW9aJkwre_3UF44vbNxPH2436DvaQdHoqEQ5b+eg@mail.gmail.com>
 <CA+YkXXyBmOootb=Kt6CH3yquYVnAZd=fJQqiF_A3p_pkB8QC3g@mail.gmail.com>
 <CALC81CMDQf4PqxRisQw58OL7QSFeMcQTvLMvmtOGJ_ya4-dhLg@mail.gmail.com>
 <CA+YkXXyP=BQ_a42J=RE7HJFcJ73atyrt4KWKUG8LbsbW=u4b5w@mail.gmail.com>
 <CA+YkXXw1AiMqCoPk_pUOdDMfkGF_T+aURGAjGK=MTa7jtAQchg@mail.gmail.com>
 <CA+YkXXy1Y407UDdEjRVjzBFOCmaUKDoZkvqtXkxkmXmMdNrwBQ@mail.gmail.com>
Message-ID: <CAJowKgKPga1Cr3B7vHgGWrLdTzt-DqgbcngWNdyYF7QoAcER8w@mail.gmail.com>

secp236k1 isn't a hashing algo.   your BIP needs about 10 more pages
and some degree of technical merit.

i suggest you start here:

https://en.bitcoin.it/wiki/Proof_of_burn
https://bitcointalk.org/index.php?topic=225690.0

proof-of-burn is a nice alternative to proof-of-work.   i always
suspected that, if designed correctly, it could be a proven
equivalent.   you could spin up a fork of bitcoin that allows aged,
burned, coins instead of POW that would probably work just fine.

- erik

On Thu, Mar 11, 2021 at 11:56 AM Lonero Foundation via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> Hi, I have submitted the BIP Pull Request here: https://github.com/bitcoin/bips/pull/1084
>
> Hoping to receive a BIP # for the draft prior to development/reference implementation.
>
> Best regards, Andrew
>
> On Mon, Mar 8, 2021, 6:40 PM Lonero Foundation <loneroassociation at gmail.com> wrote:
>>
>> Hi, here is the list to the BIP proposal on my own repo: https://github.com/Mentors4EDU/bip-amkn-posthyb/blob/main/bip-draft.mediawiki
>> Can I submit a pull request on the BIPs repo for this to go into draft mode? Also, I think this provides at least some more insight on what I want to work on.
>>
>> Best regards, Andrew
>>
>> On Sat, Mar 6, 2021, 10:42 AM Lonero Foundation <loneroassociation at gmail.com> wrote:
>>>
>>> [off-list]
>>>
>>> Okay. I will do so and post the link here for discussion before doing a pull request on BIP's repo as the best way to handle it.
>>>
>>> Best regards, Andrew
>>>
>>> On Sat, Mar 6, 2021, 10:21 AM Ricardo Filipe <ricardojdfilipe at gmail.com> wrote:
>>>>
>>>> As said before, you are free to create the BIP in your own repository
>>>> and bring it to discussion on the mailing list. then you can do a PR
>>>>
>>>> Lonero Foundation via bitcoin-dev
>>>> <bitcoin-dev at lists.linuxfoundation.org> escreveu no dia s?bado,
>>>> 6/03/2021 ?(s) 08:58:
>>>> >
>>>> > I know Ethereum had an outlandishly large percentage of nodes running on AWS, I heard the same thing is for Bitcoin but for mining. Had trouble finding the article online so take it with a grain of salt. The point though is that both servers and ASIC specific hardware would still be able to benefit from the cryptography upgrade I am proposing, as this was in relation to the disinfranchisemet point.
>>>> >
>>>> > That said, I think the best way to move forward is to submit a BIP pull request for a draft via GitHub using BIP #2's draft format and any questions people have can be answered in the reqeust's comments. That way people don't have to get emails everytime there is a reply, but replies still get seen as opposed to offline discussion. Since the instructions say to email bitcoin-dev before doing a bip draft, I have done that. Since people want to see the draft beforehand and it isn't merged manually anyways, I think it is the easiest way to handle this.
>>>> >
>>>> > I'm also okay w/ continuing the discussion on bitcoin-dev but rather form a discussion on git instead given I don't want to accidentally impolitely bother people given this is a moderated list and we already established some interest for at least a draft.
>>>> >
>>>> > Does that seem fine?
>>>> >
>>>> > Best regards, Andrew
>>>> >
>>>> > On Fri, Mar 5, 2021, 7:41 PM Keagan McClelland <keagan.mcclelland at gmail.com> wrote:
>>>> >>
>>>> >> > A large portion of BTC is already mined through AWS servers and non-asic specific hardware anyways. A majority of them would benefit from a hybrid proof, and the fact that it is hybrid in that manner wouldn't disenfranchise currently optimized mining entities as well.
>>>> >>
>>>> >> My instincts tell me that this is an outlandish claim. Do you have supporting evidence for this?
>>>> >>
>>>> >> Keagan
>>>> >>
>>>> >> On Fri, Mar 5, 2021 at 3:22 PM Lonero Foundation via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>> >>>
>>>> >>> Actually I mentioned a proof of space and time hybrid which is much different than staking. Sorry to draw for the confusion as PoC is more commonly used then PoST.
>>>> >>> There is a way to make PoC cryptographically compatible w/ Proof of Work as it normally stands: https://en.wikipedia.org/wiki/Proof_of_space
>>>> >>> It has rarely been done though given the technological complexity of being both CPU compatible and memory-hard compatible. There are lots of benefits outside of the realm of efficiency, and I already looked into numerous fault tolerant designs as well and what others in the cryptography community attempted to propose. The actual argument you have only against this is the Proof of Memory fallacy, which is only partially true. Given how the current hashing algorithm works, hard memory allocation wouldn't be of much benefit given it is more optimized for CPU/ASIC specific mining. I'm working towards a hybrid mechanism that fixes that. BTW: The way Bitcoin currently stands in its cryptography still needs updating regardless. If someone figures out NP hardness or the halting problem the traditional rule of millions of years to break all of Bitcoin's cryptography now comes down to minutes. Bitcoin is going to have to eventually radically upgrade their cryptography and hashing algo in the future regardless. I want to integrate some form of NP complexity in regards to the hybrid cryptography I'm aiming to provide which includes a polynomial time algorithm in the cryptography. More than likely the first version of my BTC hard fork will be coded in a way where integrating such complexity in the future only requires a soft fork or minor upgrade to its chain.
>>>> >>>
>>>> >>> In regards to the argument, "As a separate issue, proposing a hard fork in the hashing algorithm will invalidate the enormous amount of capital expenditure by mining entities and disincentivize future capital expenditure into mining hardware that may compute these more "useful" proofs of work."
>>>> >>>
>>>> >>> A large portion of BTC is already mined through AWS servers and non-asic specific hardware anyways. A majority of them would benefit from a hybrid proof, and the fact that it is hybrid in that manner wouldn't disenfranchise currently optimized mining entities as well.
>>>> >>>
>>>> >>> There are other reasons why a cryptography upgrade like this is beneficial. Theoretically one can argue BItcoin isn't fully decentralized. It is few unsolved mathematical proofs away from being entirely broken. My goal outside of efficiency is to build cryptography in a way that prevents such an event from happening in the future, if it was to ever happen. I have various research in regards to this area and work alot with distributed computing. I believe if the BTC community likes such a proposal, I would single handedly be able to build the cryptographic proof myself (though would like as many open source contributors as I can get :)
>>>> >>>
>>>> >>> Anyways just something to consider. We are in the same space in regards to what warrants a shitcoin or the whole argument against staking.
>>>> >>> https://hackernoon.com/ethereum-you-are-a-centralized-cryptocurrency-stop-telling-us-that-you-arent-pi3s3yjl
>>>> >>>
>>>> >>> Best regards,  Andrew
>>>> >>>
>>>> >>> On Fri, Mar 5, 2021 at 4:11 PM Keagan McClelland <keagan.mcclelland at gmail.com> wrote:
>>>> >>>>
>>>> >>>> It is important to understand that it is critical for the work to be "useless" in order for the security model to be the same. If the work was useful it provides an avenue for actors to have nothing at stake when submitting a proof of work, since the marginal cost of block construction will be lessened by the fact that the work was useful in a different context and therefore would have been done anyway. This actually degrades the security of the network in the process.
>>>> >>>>
>>>> >>>> As a separate issue, proposing a hard fork in the hashing algorithm will invalidate the enormous amount of capital expenditure by mining entities and disincentivize future capital expenditure into mining hardware that may compute these more "useful" proofs of work. This is because any change in the POW algorithm will be considered unstable and subject to change in the future. This puts the entire network at even more risk meaning that no entity is tying their own interests to that of the bitcoin network at large. It also puts the developers in a position where they can be bribed by entities with a vested interest in deciding what the new "useful" proof of work should be.
>>>> >>>>
>>>> >>>> All of these things make the Bitcoin network worse off.
>>>> >>>>
>>>> >>>> Keagan
>>>> >>>>
>>>> >>>> On Fri, Mar 5, 2021 at 1:48 PM Lonero Foundation via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>> >>>>>
>>>> >>>>> Also in regards to my other email, I forgot to iterate that my cryptography proposal helps behind the efficiency category but also tackles problems such as NP-Completeness or Halting which is something the BTC network could be vulnerable to in the future. For sake of simplicity, I do want to do this BIP because it tackles lots of the issues in regards to this manner and can provide useful insight to the community. If things such as bigger block height have been proposed as hard forks, I feel at the very least an upgrade regarding the hashing algorithm and cryptography does at least warrant some discussion. Anyways I hope I can send you my BIP, just let me know on the preferred format?
>>>> >>>>>
>>>> >>>>> Best regards, Andrew
>>>> >>>>>
>>>> >>>>> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <loneroassociation at gmail.com> wrote:
>>>> >>>>>>
>>>> >>>>>> Hi, this isn't about the energy efficient argument in regards to renewables or mining devices but a better cryptography layer to get the most out of your hashing for validation. I do understand the arbitrariness of it, but do want to still propose a document. Do I use the Media Wiki format on GitHub and just attach it as my proposal?
>>>> >>>>>>
>>>> >>>>>> Best regards, Andrew
>>>> >>>>>>
>>>> >>>>>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net> wrote:
>>>> >>>>>>>
>>>> >>>>>>> Hi Ryan and Andrew,
>>>> >>>>>>>
>>>> >>>>>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>> >>>>>>>>
>>>> >>>>>>>>
>>>> >>>>>>>>   https://www.truthcoin.info/blog/pow-cheapest/
>>>> >>>>>>>>     "Nothing is Cheaper than Proof of Work"
>>>> >>>>>>>>     on | 04 Aug 2015
>>>> >>>>>>>>
>>>> >>>>>>>
>>>> >>>>>>> Just to belabor this a bit, the paper demonstrates that the mining market will tend to expend resources equivalent to miner reward.  It does not prove that mining work has to expend *energy* as a primary cost.
>>>> >>>>>>>
>>>> >>>>>>> Some might argue that energy expenditure has negative externalities and that we should move to other resources.  I would argue that the negative externalities will go away soon because of the move to renewables, so the point is likely moot.
>>>> >>>>>>>
>>>> >>>>> _______________________________________________
>>>> >>>>> bitcoin-dev mailing list
>>>> >>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> >>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>> >>>
>>>> >>> _______________________________________________
>>>> >>> bitcoin-dev mailing list
>>>> >>> bitcoin-dev at lists.linuxfoundation.org
>>>> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>> >
>>>> > _______________________________________________
>>>> > bitcoin-dev mailing list
>>>> > bitcoin-dev at lists.linuxfoundation.org
>>>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From loneroassociation at gmail.com  Fri Mar 12 16:54:49 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Fri, 12 Mar 2021 11:54:49 -0500
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CAJowKgKPga1Cr3B7vHgGWrLdTzt-DqgbcngWNdyYF7QoAcER8w@mail.gmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CAMnpzfop8ttqjMAKoS37zpQV6WiZfi1Bn+y_e-HaepTiD4Vm1Q@mail.gmail.com>
 <CAB0O3SVNyr_t23Y0LyT0mSaf6LONFRLYJ8qzO7rcdJFnrGccFw@mail.gmail.com>
 <CA+YkXXwkSCu=2UOEhzFBzGDHo1c=Ewqsnxp632ke3jdH1ff5WA@mail.gmail.com>
 <CA+YkXXwfS7eer5Za_ed9tCNdfOp4c3nV_X=mfXzoDxMm6BrizQ@mail.gmail.com>
 <CALeFGL31M5DAULLRtCwjPYHaPVqsVqREUg6WQ2-cuj23SNk=BA@mail.gmail.com>
 <CA+YkXXwBMG6YUAhf-2U5EV5Ep5RgG2foc9chramNFN5=AQ=-EA@mail.gmail.com>
 <CALeFGL3E-rWW9aJkwre_3UF44vbNxPH2436DvaQdHoqEQ5b+eg@mail.gmail.com>
 <CA+YkXXyBmOootb=Kt6CH3yquYVnAZd=fJQqiF_A3p_pkB8QC3g@mail.gmail.com>
 <CALC81CMDQf4PqxRisQw58OL7QSFeMcQTvLMvmtOGJ_ya4-dhLg@mail.gmail.com>
 <CA+YkXXyP=BQ_a42J=RE7HJFcJ73atyrt4KWKUG8LbsbW=u4b5w@mail.gmail.com>
 <CA+YkXXw1AiMqCoPk_pUOdDMfkGF_T+aURGAjGK=MTa7jtAQchg@mail.gmail.com>
 <CA+YkXXy1Y407UDdEjRVjzBFOCmaUKDoZkvqtXkxkmXmMdNrwBQ@mail.gmail.com>
 <CAJowKgKPga1Cr3B7vHgGWrLdTzt-DqgbcngWNdyYF7QoAcER8w@mail.gmail.com>
Message-ID: <CA+YkXXz9aHfZtt-it_8w4ovF=-QaZ4_9vwDS0Kz36qhHwVDC5Q@mail.gmail.com>

Hi, I awkwardly phrased that part, I was referring to key validation in
relation to that section as well as the hashing related to those keys. I
might rephrase it.

In regards to technical merit, the main purpose of the BIP is to get a
sense of the idea. Once I get assigned a BIP draft #, I am willing to
follow it up with many preprints or publications to go in the references
implementation section and start dev work before upgrading to final status.

This will take about 400 hours of my time, but is something I am personally
looking into developing as a hard fork.

Keep in mind this is a draft, so after it is assigned a number to
references I do at the very least hope to describe various parts of the
cryptographic proofs and algorithmic structure I am hoping for.

Best regards, Andrew

On Fri, Mar 12, 2021, 10:03 AM Erik Aronesty <erik at q32.com> wrote:

> secp236k1 isn't a hashing algo.   your BIP needs about 10 more pages
> and some degree of technical merit.
>
> i suggest you start here:
>
> https://en.bitcoin.it/wiki/Proof_of_burn
> https://bitcointalk.org/index.php?topic=225690.0
>
> proof-of-burn is a nice alternative to proof-of-work.   i always
> suspected that, if designed correctly, it could be a proven
> equivalent.   you could spin up a fork of bitcoin that allows aged,
> burned, coins instead of POW that would probably work just fine.
>
> - erik
>
> On Thu, Mar 11, 2021 at 11:56 AM Lonero Foundation via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> >
> > Hi, I have submitted the BIP Pull Request here:
> https://github.com/bitcoin/bips/pull/1084
> >
> > Hoping to receive a BIP # for the draft prior to development/reference
> implementation.
> >
> > Best regards, Andrew
> >
> > On Mon, Mar 8, 2021, 6:40 PM Lonero Foundation <
> loneroassociation at gmail.com> wrote:
> >>
> >> Hi, here is the list to the BIP proposal on my own repo:
> https://github.com/Mentors4EDU/bip-amkn-posthyb/blob/main/bip-draft.mediawiki
> >> Can I submit a pull request on the BIPs repo for this to go into draft
> mode? Also, I think this provides at least some more insight on what I want
> to work on.
> >>
> >> Best regards, Andrew
> >>
> >> On Sat, Mar 6, 2021, 10:42 AM Lonero Foundation <
> loneroassociation at gmail.com> wrote:
> >>>
> >>> [off-list]
> >>>
> >>> Okay. I will do so and post the link here for discussion before doing
> a pull request on BIP's repo as the best way to handle it.
> >>>
> >>> Best regards, Andrew
> >>>
> >>> On Sat, Mar 6, 2021, 10:21 AM Ricardo Filipe <
> ricardojdfilipe at gmail.com> wrote:
> >>>>
> >>>> As said before, you are free to create the BIP in your own repository
> >>>> and bring it to discussion on the mailing list. then you can do a PR
> >>>>
> >>>> Lonero Foundation via bitcoin-dev
> >>>> <bitcoin-dev at lists.linuxfoundation.org> escreveu no dia s?bado,
> >>>> 6/03/2021 ?(s) 08:58:
> >>>> >
> >>>> > I know Ethereum had an outlandishly large percentage of nodes
> running on AWS, I heard the same thing is for Bitcoin but for mining. Had
> trouble finding the article online so take it with a grain of salt. The
> point though is that both servers and ASIC specific hardware would still be
> able to benefit from the cryptography upgrade I am proposing, as this was
> in relation to the disinfranchisemet point.
> >>>> >
> >>>> > That said, I think the best way to move forward is to submit a BIP
> pull request for a draft via GitHub using BIP #2's draft format and any
> questions people have can be answered in the reqeust's comments. That way
> people don't have to get emails everytime there is a reply, but replies
> still get seen as opposed to offline discussion. Since the instructions say
> to email bitcoin-dev before doing a bip draft, I have done that. Since
> people want to see the draft beforehand and it isn't merged manually
> anyways, I think it is the easiest way to handle this.
> >>>> >
> >>>> > I'm also okay w/ continuing the discussion on bitcoin-dev but
> rather form a discussion on git instead given I don't want to accidentally
> impolitely bother people given this is a moderated list and we already
> established some interest for at least a draft.
> >>>> >
> >>>> > Does that seem fine?
> >>>> >
> >>>> > Best regards, Andrew
> >>>> >
> >>>> > On Fri, Mar 5, 2021, 7:41 PM Keagan McClelland <
> keagan.mcclelland at gmail.com> wrote:
> >>>> >>
> >>>> >> > A large portion of BTC is already mined through AWS servers and
> non-asic specific hardware anyways. A majority of them would benefit from a
> hybrid proof, and the fact that it is hybrid in that manner wouldn't
> disenfranchise currently optimized mining entities as well.
> >>>> >>
> >>>> >> My instincts tell me that this is an outlandish claim. Do you have
> supporting evidence for this?
> >>>> >>
> >>>> >> Keagan
> >>>> >>
> >>>> >> On Fri, Mar 5, 2021 at 3:22 PM Lonero Foundation via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
> >>>> >>>
> >>>> >>> Actually I mentioned a proof of space and time hybrid which is
> much different than staking. Sorry to draw for the confusion as PoC is more
> commonly used then PoST.
> >>>> >>> There is a way to make PoC cryptographically compatible w/ Proof
> of Work as it normally stands:
> https://en.wikipedia.org/wiki/Proof_of_space
> >>>> >>> It has rarely been done though given the technological complexity
> of being both CPU compatible and memory-hard compatible. There are lots of
> benefits outside of the realm of efficiency, and I already looked into
> numerous fault tolerant designs as well and what others in the cryptography
> community attempted to propose. The actual argument you have only against
> this is the Proof of Memory fallacy, which is only partially true. Given
> how the current hashing algorithm works, hard memory allocation wouldn't be
> of much benefit given it is more optimized for CPU/ASIC specific mining.
> I'm working towards a hybrid mechanism that fixes that. BTW: The way
> Bitcoin currently stands in its cryptography still needs updating
> regardless. If someone figures out NP hardness or the halting problem the
> traditional rule of millions of years to break all of Bitcoin's
> cryptography now comes down to minutes. Bitcoin is going to have to
> eventually radically upgrade their cryptography and hashing algo in the
> future regardless. I want to integrate some form of NP complexity in
> regards to the hybrid cryptography I'm aiming to provide which includes a
> polynomial time algorithm in the cryptography. More than likely the first
> version of my BTC hard fork will be coded in a way where integrating such
> complexity in the future only requires a soft fork or minor upgrade to its
> chain.
> >>>> >>>
> >>>> >>> In regards to the argument, "As a separate issue, proposing a
> hard fork in the hashing algorithm will invalidate the enormous amount of
> capital expenditure by mining entities and disincentivize future capital
> expenditure into mining hardware that may compute these more "useful"
> proofs of work."
> >>>> >>>
> >>>> >>> A large portion of BTC is already mined through AWS servers and
> non-asic specific hardware anyways. A majority of them would benefit from a
> hybrid proof, and the fact that it is hybrid in that manner wouldn't
> disenfranchise currently optimized mining entities as well.
> >>>> >>>
> >>>> >>> There are other reasons why a cryptography upgrade like this is
> beneficial. Theoretically one can argue BItcoin isn't fully decentralized.
> It is few unsolved mathematical proofs away from being entirely broken. My
> goal outside of efficiency is to build cryptography in a way that prevents
> such an event from happening in the future, if it was to ever happen. I
> have various research in regards to this area and work alot with
> distributed computing. I believe if the BTC community likes such a
> proposal, I would single handedly be able to build the cryptographic proof
> myself (though would like as many open source contributors as I can get :)
> >>>> >>>
> >>>> >>> Anyways just something to consider. We are in the same space in
> regards to what warrants a shitcoin or the whole argument against staking.
> >>>> >>>
> https://hackernoon.com/ethereum-you-are-a-centralized-cryptocurrency-stop-telling-us-that-you-arent-pi3s3yjl
> >>>> >>>
> >>>> >>> Best regards,  Andrew
> >>>> >>>
> >>>> >>> On Fri, Mar 5, 2021 at 4:11 PM Keagan McClelland <
> keagan.mcclelland at gmail.com> wrote:
> >>>> >>>>
> >>>> >>>> It is important to understand that it is critical for the work
> to be "useless" in order for the security model to be the same. If the work
> was useful it provides an avenue for actors to have nothing at stake when
> submitting a proof of work, since the marginal cost of block construction
> will be lessened by the fact that the work was useful in a different
> context and therefore would have been done anyway. This actually degrades
> the security of the network in the process.
> >>>> >>>>
> >>>> >>>> As a separate issue, proposing a hard fork in the hashing
> algorithm will invalidate the enormous amount of capital expenditure by
> mining entities and disincentivize future capital expenditure into mining
> hardware that may compute these more "useful" proofs of work. This is
> because any change in the POW algorithm will be considered unstable and
> subject to change in the future. This puts the entire network at even more
> risk meaning that no entity is tying their own interests to that of the
> bitcoin network at large. It also puts the developers in a position where
> they can be bribed by entities with a vested interest in deciding what the
> new "useful" proof of work should be.
> >>>> >>>>
> >>>> >>>> All of these things make the Bitcoin network worse off.
> >>>> >>>>
> >>>> >>>> Keagan
> >>>> >>>>
> >>>> >>>> On Fri, Mar 5, 2021 at 1:48 PM Lonero Foundation via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> >>>> >>>>>
> >>>> >>>>> Also in regards to my other email, I forgot to iterate that my
> cryptography proposal helps behind the efficiency category but also tackles
> problems such as NP-Completeness or Halting which is something the BTC
> network could be vulnerable to in the future. For sake of simplicity, I do
> want to do this BIP because it tackles lots of the issues in regards to
> this manner and can provide useful insight to the community. If things such
> as bigger block height have been proposed as hard forks, I feel at the very
> least an upgrade regarding the hashing algorithm and cryptography does at
> least warrant some discussion. Anyways I hope I can send you my BIP, just
> let me know on the preferred format?
> >>>> >>>>>
> >>>> >>>>> Best regards, Andrew
> >>>> >>>>>
> >>>> >>>>> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <
> loneroassociation at gmail.com> wrote:
> >>>> >>>>>>
> >>>> >>>>>> Hi, this isn't about the energy efficient argument in regards
> to renewables or mining devices but a better cryptography layer to get the
> most out of your hashing for validation. I do understand the arbitrariness
> of it, but do want to still propose a document. Do I use the Media Wiki
> format on GitHub and just attach it as my proposal?
> >>>> >>>>>>
> >>>> >>>>>> Best regards, Andrew
> >>>> >>>>>>
> >>>> >>>>>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <
> c1.devrandom at niftybox.net> wrote:
> >>>> >>>>>>>
> >>>> >>>>>>> Hi Ryan and Andrew,
> >>>> >>>>>>>
> >>>> >>>>>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
> >>>> >>>>>>>>
> >>>> >>>>>>>>
> >>>> >>>>>>>>   https://www.truthcoin.info/blog/pow-cheapest/
> >>>> >>>>>>>>     "Nothing is Cheaper than Proof of Work"
> >>>> >>>>>>>>     on | 04 Aug 2015
> >>>> >>>>>>>>
> >>>> >>>>>>>
> >>>> >>>>>>> Just to belabor this a bit, the paper demonstrates that the
> mining market will tend to expend resources equivalent to miner reward.  It
> does not prove that mining work has to expend *energy* as a primary cost.
> >>>> >>>>>>>
> >>>> >>>>>>> Some might argue that energy expenditure has negative
> externalities and that we should move to other resources.  I would argue
> that the negative externalities will go away soon because of the move to
> renewables, so the point is likely moot.
> >>>> >>>>>>>
> >>>> >>>>> _______________________________________________
> >>>> >>>>> bitcoin-dev mailing list
> >>>> >>>>> bitcoin-dev at lists.linuxfoundation.org
> >>>> >>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >>>> >>>
> >>>> >>> _______________________________________________
> >>>> >>> bitcoin-dev mailing list
> >>>> >>> bitcoin-dev at lists.linuxfoundation.org
> >>>> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >>>> >
> >>>> > _______________________________________________
> >>>> > bitcoin-dev mailing list
> >>>> > bitcoin-dev at lists.linuxfoundation.org
> >>>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210312/c34e738f/attachment-0001.html>

From eric at voskuil.org  Fri Mar 12 22:30:19 2021
From: eric at voskuil.org (Eric Voskuil)
Date: Fri, 12 Mar 2021 14:30:19 -0800
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <CAFBxzAAO1u=C8wpwvRs5evE657V0NdnSE9PYAbanpJt5ZdSkdA@mail.gmail.com>
References: <CAFBxzAAO1u=C8wpwvRs5evE657V0NdnSE9PYAbanpJt5ZdSkdA@mail.gmail.com>
Message-ID: <3504919A-6D19-4858-B00C-9C0FEB090DB5@voskuil.org>

I?m pretty sure it?s subtle mockery. Even a legit title doesn?t warrant additional attention.

e

> On Mar 12, 2021, at 14:02, R E Broadley via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> ?Can I just point out (to those addressing James as Lord/Excelency/etc
> that he isn't noble nor a Lord, so just wanted to mention this in case
> people were giving him more attention than the average person would be
> afforded.
> 
> My 2p (an equal 2p) on Taproot is ACK, by the way.

From loneroassociation at gmail.com  Fri Mar 12 23:21:36 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Fri, 12 Mar 2021 18:21:36 -0500
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <3d65-604bed00-17d-6093c680@171273340>
References: <CA+YkXXz9aHfZtt-it_8w4ovF=-QaZ4_9vwDS0Kz36qhHwVDC5Q@mail.gmail.com>
 <3d65-604bed00-17d-6093c680@171273340>
Message-ID: <CA+YkXXzNAWrPPJfDtB-DXaSf9yoojkuEXeCXzkB2_cMtyHfFXA@mail.gmail.com>

Hi, I also want to emphasize that my main point isn't just to create a BTC
hardfork or become another Bitcoin Cash, Gold, or SV. The main point in
regards to this BIP actually expands POW rather than replaces or creates an
alternative. Many of the problems faced in regards to security in the
future as well as sustainability is something I believe lots of the changes
I am proposing can fix. In regards to technological implementation, once
this is assigned draft status I am more than willing to create preprints
explaining the cryptography, hashing algorithm improvements, and consensus
that I am working on. This is a highly technologically complex idea that I
am willing to "call my bluff on" and expand upon. As for it being a draft,
I think this is a good starting point at least for draft status prior to
working on technological implementation.

Best regards, Andrew

On Fri, Mar 12, 2021 at 5:37 PM email at yancy.lol <email at yancy.lol> wrote:

> I think Andrew himself is an algo.  The crypto training set must not be
> very good.
>
> Cheers,
> -Yancy
>
> On Friday, March 12, 2021 17:54 CET, Lonero Foundation via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>
> Hi, I awkwardly phrased that part, I was referring to key validation in
> relation to that section as well as the hashing related to those keys. I
> might rephrase it.
>
> In regards to technical merit, the main purpose of the BIP is to get a
> sense of the idea. Once I get assigned a BIP draft #, I am willing to
> follow it up with many preprints or publications to go in the references
> implementation section and start dev work before upgrading to final status.
>
> This will take about 400 hours of my time, but is something I am
> personally looking into developing as a hard fork.
>
> Keep in mind this is a draft, so after it is assigned a number to
> references I do at the very least hope to describe various parts of the
> cryptographic proofs and algorithmic structure I am hoping for.
>
> Best regards, Andrew
>
> On Fri, Mar 12, 2021, 10:03 AM Erik Aronesty <erik at q32.com> wrote:
>
>> secp236k1 isn't a hashing algo.   your BIP needs about 10 more pages
>> and some degree of technical merit.
>>
>> i suggest you start here:
>>
>> https://en.bitcoin.it/wiki/Proof_of_burn
>> https://bitcointalk.org/index.php?topic=225690.0
>>
>> proof-of-burn is a nice alternative to proof-of-work.   i always
>> suspected that, if designed correctly, it could be a proven
>> equivalent.   you could spin up a fork of bitcoin that allows aged,
>> burned, coins instead of POW that would probably work just fine.
>>
>> - erik
>>
>> On Thu, Mar 11, 2021 at 11:56 AM Lonero Foundation via bitcoin-dev
>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> >
>> > Hi, I have submitted the BIP Pull Request here:
>> https://github.com/bitcoin/bips/pull/1084
>> >
>> > Hoping to receive a BIP # for the draft prior to development/reference
>> implementation.
>> >
>> > Best regards, Andrew
>> >
>> > On Mon, Mar 8, 2021, 6:40 PM Lonero Foundation <
>> loneroassociation at gmail.com> wrote:
>> >>
>> >> Hi, here is the list to the BIP proposal on my own repo:
>> https://github.com/Mentors4EDU/bip-amkn-posthyb/blob/main/bip-draft.mediawiki
>> >> Can I submit a pull request on the BIPs repo for this to go into draft
>> mode? Also, I think this provides at least some more insight on what I want
>> to work on.
>> >>
>> >> Best regards, Andrew
>> >>
>> >> On Sat, Mar 6, 2021, 10:42 AM Lonero Foundation <
>> loneroassociation at gmail.com> wrote:
>> >>>
>> >>> [off-list]
>> >>>
>> >>> Okay. I will do so and post the link here for discussion before doing
>> a pull request on BIP's repo as the best way to handle it.
>> >>>
>> >>> Best regards, Andrew
>> >>>
>> >>> On Sat, Mar 6, 2021, 10:21 AM Ricardo Filipe <
>> ricardojdfilipe at gmail.com> wrote:
>> >>>>
>> >>>> As said before, you are free to create the BIP in your own repository
>> >>>> and bring it to discussion on the mailing list. then you can do a PR
>> >>>>
>> >>>> Lonero Foundation via bitcoin-dev
>> >>>> <bitcoin-dev at lists.linuxfoundation.org> escreveu no dia s?bado,
>> >>>> 6/03/2021 ?(s) 08:58:
>> >>>> >
>> >>>> > I know Ethereum had an outlandishly large percentage of nodes
>> running on AWS, I heard the same thing is for Bitcoin but for mining. Had
>> trouble finding the article online so take it with a grain of salt. The
>> point though is that both servers and ASIC specific hardware would still be
>> able to benefit from the cryptography upgrade I am proposing, as this was
>> in relation to the disinfranchisemet point.
>> >>>> >
>> >>>> > That said, I think the best way to move forward is to submit a BIP
>> pull request for a draft via GitHub using BIP #2's draft format and any
>> questions people have can be answered in the reqeust's comments. That way
>> people don't have to get emails everytime there is a reply, but replies
>> still get seen as opposed to offline discussion. Since the instructions say
>> to email bitcoin-dev before doing a bip draft, I have done that. Since
>> people want to see the draft beforehand and it isn't merged manually
>> anyways, I think it is the easiest way to handle this.
>> >>>> >
>> >>>> > I'm also okay w/ continuing the discussion on bitcoin-dev but
>> rather form a discussion on git instead given I don't want to accidentally
>> impolitely bother people given this is a moderated list and we already
>> established some interest for at least a draft.
>> >>>> >
>> >>>> > Does that seem fine?
>> >>>> >
>> >>>> > Best regards, Andrew
>> >>>> >
>> >>>> > On Fri, Mar 5, 2021, 7:41 PM Keagan McClelland <
>> keagan.mcclelland at gmail.com> wrote:
>> >>>> >>
>> >>>> >> > A large portion of BTC is already mined through AWS servers and
>> non-asic specific hardware anyways. A majority of them would benefit from a
>> hybrid proof, and the fact that it is hybrid in that manner wouldn't
>> disenfranchise currently optimized mining entities as well.
>> >>>> >>
>> >>>> >> My instincts tell me that this is an outlandish claim. Do you
>> have supporting evidence for this?
>> >>>> >>
>> >>>> >> Keagan
>> >>>> >>
>> >>>> >> On Fri, Mar 5, 2021 at 3:22 PM Lonero Foundation via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>> >>>> >>>
>> >>>> >>> Actually I mentioned a proof of space and time hybrid which is
>> much different than staking. Sorry to draw for the confusion as PoC is more
>> commonly used then PoST.
>> >>>> >>> There is a way to make PoC cryptographically compatible w/ Proof
>> of Work as it normally stands:
>> https://en.wikipedia.org/wiki/Proof_of_space
>> >>>> >>> It has rarely been done though given the technological
>> complexity of being both CPU compatible and memory-hard compatible. There
>> are lots of benefits outside of the realm of efficiency, and I already
>> looked into numerous fault tolerant designs as well and what others in the
>> cryptography community attempted to propose. The actual argument you have
>> only against this is the Proof of Memory fallacy, which is only partially
>> true. Given how the current hashing algorithm works, hard memory allocation
>> wouldn't be of much benefit given it is more optimized for CPU/ASIC
>> specific mining. I'm working towards a hybrid mechanism that fixes that.
>> BTW: The way Bitcoin currently stands in its cryptography still needs
>> updating regardless. If someone figures out NP hardness or the halting
>> problem the traditional rule of millions of years to break all of Bitcoin's
>> cryptography now comes down to minutes. Bitcoin is going to have to
>> eventually radically upgrade their cryptography and hashing algo in the
>> future regardless. I want to integrate some form of NP complexity in
>> regards to the hybrid cryptography I'm aiming to provide which includes a
>> polynomial time algorithm in the cryptography. More than likely the first
>> version of my BTC hard fork will be coded in a way where integrating such
>> complexity in the future only requires a soft fork or minor upgrade to its
>> chain.
>> >>>> >>>
>> >>>> >>> In regards to the argument, "As a separate issue, proposing a
>> hard fork in the hashing algorithm will invalidate the enormous amount of
>> capital expenditure by mining entities and disincentivize future capital
>> expenditure into mining hardware that may compute these more "useful"
>> proofs of work."
>> >>>> >>>
>> >>>> >>> A large portion of BTC is already mined through AWS servers and
>> non-asic specific hardware anyways. A majority of them would benefit from a
>> hybrid proof, and the fact that it is hybrid in that manner wouldn't
>> disenfranchise currently optimized mining entities as well.
>> >>>> >>>
>> >>>> >>> There are other reasons why a cryptography upgrade like this is
>> beneficial. Theoretically one can argue BItcoin isn't fully decentralized.
>> It is few unsolved mathematical proofs away from being entirely broken. My
>> goal outside of efficiency is to build cryptography in a way that prevents
>> such an event from happening in the future, if it was to ever happen. I
>> have various research in regards to this area and work alot with
>> distributed computing. I believe if the BTC community likes such a
>> proposal, I would single handedly be able to build the cryptographic proof
>> myself (though would like as many open source contributors as I can get :)
>> >>>> >>>
>> >>>> >>> Anyways just something to consider. We are in the same space in
>> regards to what warrants a shitcoin or the whole argument against staking.
>> >>>> >>>
>> https://hackernoon.com/ethereum-you-are-a-centralized-cryptocurrency-stop-telling-us-that-you-arent-pi3s3yjl
>> >>>> >>>
>> >>>> >>> Best regards,  Andrew
>> >>>> >>>
>> >>>> >>> On Fri, Mar 5, 2021 at 4:11 PM Keagan McClelland <
>> keagan.mcclelland at gmail.com> wrote:
>> >>>> >>>>
>> >>>> >>>> It is important to understand that it is critical for the work
>> to be "useless" in order for the security model to be the same. If the work
>> was useful it provides an avenue for actors to have nothing at stake when
>> submitting a proof of work, since the marginal cost of block construction
>> will be lessened by the fact that the work was useful in a different
>> context and therefore would have been done anyway. This actually degrades
>> the security of the network in the process.
>> >>>> >>>>
>> >>>> >>>> As a separate issue, proposing a hard fork in the hashing
>> algorithm will invalidate the enormous amount of capital expenditure by
>> mining entities and disincentivize future capital expenditure into mining
>> hardware that may compute these more "useful" proofs of work. This is
>> because any change in the POW algorithm will be considered unstable and
>> subject to change in the future. This puts the entire network at even more
>> risk meaning that no entity is tying their own interests to that of the
>> bitcoin network at large. It also puts the developers in a position where
>> they can be bribed by entities with a vested interest in deciding what the
>> new "useful" proof of work should be.
>> >>>> >>>>
>> >>>> >>>> All of these things make the Bitcoin network worse off.
>> >>>> >>>>
>> >>>> >>>> Keagan
>> >>>> >>>>
>> >>>> >>>> On Fri, Mar 5, 2021 at 1:48 PM Lonero Foundation via
>> bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> >>>> >>>>>
>> >>>> >>>>> Also in regards to my other email, I forgot to iterate that my
>> cryptography proposal helps behind the efficiency category but also tackles
>> problems such as NP-Completeness or Halting which is something the BTC
>> network could be vulnerable to in the future. For sake of simplicity, I do
>> want to do this BIP because it tackles lots of the issues in regards to
>> this manner and can provide useful insight to the community. If things such
>> as bigger block height have been proposed as hard forks, I feel at the very
>> least an upgrade regarding the hashing algorithm and cryptography does at
>> least warrant some discussion. Anyways I hope I can send you my BIP, just
>> let me know on the preferred format?
>> >>>> >>>>>
>> >>>> >>>>> Best regards, Andrew
>> >>>> >>>>>
>> >>>> >>>>> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <
>> loneroassociation at gmail.com> wrote:
>> >>>> >>>>>>
>> >>>> >>>>>> Hi, this isn't about the energy efficient argument in regards
>> to renewables or mining devices but a better cryptography layer to get the
>> most out of your hashing for validation. I do understand the arbitrariness
>> of it, but do want to still propose a document. Do I use the Media Wiki
>> format on GitHub and just attach it as my proposal?
>> >>>> >>>>>>
>> >>>> >>>>>> Best regards, Andrew
>> >>>> >>>>>>
>> >>>> >>>>>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <
>> c1.devrandom at niftybox.net> wrote:
>> >>>> >>>>>>>
>> >>>> >>>>>>> Hi Ryan and Andrew,
>> >>>> >>>>>>>
>> >>>> >>>>>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>> >>>> >>>>>>>>
>> >>>> >>>>>>>>
>> >>>> >>>>>>>>   https://www.truthcoin.info/blog/pow-cheapest/
>> >>>> >>>>>>>>     "Nothing is Cheaper than Proof of Work"
>> >>>> >>>>>>>>     on | 04 Aug 2015
>> >>>> >>>>>>>>
>> >>>> >>>>>>>
>> >>>> >>>>>>> Just to belabor this a bit, the paper demonstrates that the
>> mining market will tend to expend resources equivalent to miner reward.  It
>> does not prove that mining work has to expend *energy* as a primary cost.
>> >>>> >>>>>>>
>> >>>> >>>>>>> Some might argue that energy expenditure has negative
>> externalities and that we should move to other resources.  I would argue
>> that the negative externalities will go away soon because of the move to
>> renewables, so the point is likely moot.
>> >>>> >>>>>>>
>> >>>> >>>>> _______________________________________________
>> >>>> >>>>> bitcoin-dev mailing list
>> >>>> >>>>> bitcoin-dev at lists.linuxfoundation.org
>> >>>> >>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> >>>> >>>
>> >>>> >>> _______________________________________________
>> >>>> >>> bitcoin-dev mailing list
>> >>>> >>> bitcoin-dev at lists.linuxfoundation.org
>> >>>> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> >>>> >
>> >>>> > _______________________________________________
>> >>>> > bitcoin-dev mailing list
>> >>>> > bitcoin-dev at lists.linuxfoundation.org
>> >>>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> >
>> > _______________________________________________
>> > bitcoin-dev mailing list
>> > bitcoin-dev at lists.linuxfoundation.org
>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210312/062e551b/attachment-0001.html>

From loneroassociation at gmail.com  Fri Mar 12 23:31:51 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Fri, 12 Mar 2021 18:31:51 -0500
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CA+YkXXzNAWrPPJfDtB-DXaSf9yoojkuEXeCXzkB2_cMtyHfFXA@mail.gmail.com>
References: <CA+YkXXz9aHfZtt-it_8w4ovF=-QaZ4_9vwDS0Kz36qhHwVDC5Q@mail.gmail.com>
 <3d65-604bed00-17d-6093c680@171273340>
 <CA+YkXXzNAWrPPJfDtB-DXaSf9yoojkuEXeCXzkB2_cMtyHfFXA@mail.gmail.com>
Message-ID: <CA+YkXXw5uh4yfvqDiBBEXcq188PEGku-NFFAq7uNuAFTG3ooTQ@mail.gmail.com>

Also, I already stated I was referring to signature validation cryptography
in that aspect:
https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/digital-signatures/ecdsa-sign-verify-examples.html
My BIP has a primary purpose in regards to what I want to develop proofs
for and the different cryptographic elements I want to develop proofs for.
That said to those who disagree with the premise, I do prefer constructive
feedback over insults or making fun of one another. After all this is an
improvement proposal with a specific purpose aiming to develop a specific
thing, not a guy who is just wanting to copy and paste a repository and
call it a day.

Best regards, Andrew

On Fri, Mar 12, 2021 at 6:21 PM Lonero Foundation <
loneroassociation at gmail.com> wrote:

> Hi, I also want to emphasize that my main point isn't just to create a BTC
> hardfork or become another Bitcoin Cash, Gold, or SV. The main point in
> regards to this BIP actually expands POW rather than replaces or creates an
> alternative. Many of the problems faced in regards to security in the
> future as well as sustainability is something I believe lots of the changes
> I am proposing can fix. In regards to technological implementation, once
> this is assigned draft status I am more than willing to create preprints
> explaining the cryptography, hashing algorithm improvements, and consensus
> that I am working on. This is a highly technologically complex idea that I
> am willing to "call my bluff on" and expand upon. As for it being a draft,
> I think this is a good starting point at least for draft status prior to
> working on technological implementation.
>
> Best regards, Andrew
>
> On Fri, Mar 12, 2021 at 5:37 PM email at yancy.lol <email at yancy.lol> wrote:
>
>> I think Andrew himself is an algo.  The crypto training set must not be
>> very good.
>>
>> Cheers,
>> -Yancy
>>
>> On Friday, March 12, 2021 17:54 CET, Lonero Foundation via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>>
>> Hi, I awkwardly phrased that part, I was referring to key validation in
>> relation to that section as well as the hashing related to those keys. I
>> might rephrase it.
>>
>> In regards to technical merit, the main purpose of the BIP is to get a
>> sense of the idea. Once I get assigned a BIP draft #, I am willing to
>> follow it up with many preprints or publications to go in the references
>> implementation section and start dev work before upgrading to final status.
>>
>> This will take about 400 hours of my time, but is something I am
>> personally looking into developing as a hard fork.
>>
>> Keep in mind this is a draft, so after it is assigned a number to
>> references I do at the very least hope to describe various parts of the
>> cryptographic proofs and algorithmic structure I am hoping for.
>>
>> Best regards, Andrew
>>
>> On Fri, Mar 12, 2021, 10:03 AM Erik Aronesty <erik at q32.com> wrote:
>>
>>> secp236k1 isn't a hashing algo.   your BIP needs about 10 more pages
>>> and some degree of technical merit.
>>>
>>> i suggest you start here:
>>>
>>> https://en.bitcoin.it/wiki/Proof_of_burn
>>> https://bitcointalk.org/index.php?topic=225690.0
>>>
>>> proof-of-burn is a nice alternative to proof-of-work.   i always
>>> suspected that, if designed correctly, it could be a proven
>>> equivalent.   you could spin up a fork of bitcoin that allows aged,
>>> burned, coins instead of POW that would probably work just fine.
>>>
>>> - erik
>>>
>>> On Thu, Mar 11, 2021 at 11:56 AM Lonero Foundation via bitcoin-dev
>>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>> >
>>> > Hi, I have submitted the BIP Pull Request here:
>>> https://github.com/bitcoin/bips/pull/1084
>>> >
>>> > Hoping to receive a BIP # for the draft prior to development/reference
>>> implementation.
>>> >
>>> > Best regards, Andrew
>>> >
>>> > On Mon, Mar 8, 2021, 6:40 PM Lonero Foundation <
>>> loneroassociation at gmail.com> wrote:
>>> >>
>>> >> Hi, here is the list to the BIP proposal on my own repo:
>>> https://github.com/Mentors4EDU/bip-amkn-posthyb/blob/main/bip-draft.mediawiki
>>> >> Can I submit a pull request on the BIPs repo for this to go into
>>> draft mode? Also, I think this provides at least some more insight on what
>>> I want to work on.
>>> >>
>>> >> Best regards, Andrew
>>> >>
>>> >> On Sat, Mar 6, 2021, 10:42 AM Lonero Foundation <
>>> loneroassociation at gmail.com> wrote:
>>> >>>
>>> >>> [off-list]
>>> >>>
>>> >>> Okay. I will do so and post the link here for discussion before
>>> doing a pull request on BIP's repo as the best way to handle it.
>>> >>>
>>> >>> Best regards, Andrew
>>> >>>
>>> >>> On Sat, Mar 6, 2021, 10:21 AM Ricardo Filipe <
>>> ricardojdfilipe at gmail.com> wrote:
>>> >>>>
>>> >>>> As said before, you are free to create the BIP in your own
>>> repository
>>> >>>> and bring it to discussion on the mailing list. then you can do a PR
>>> >>>>
>>> >>>> Lonero Foundation via bitcoin-dev
>>> >>>> <bitcoin-dev at lists.linuxfoundation.org> escreveu no dia s?bado,
>>> >>>> 6/03/2021 ?(s) 08:58:
>>> >>>> >
>>> >>>> > I know Ethereum had an outlandishly large percentage of nodes
>>> running on AWS, I heard the same thing is for Bitcoin but for mining. Had
>>> trouble finding the article online so take it with a grain of salt. The
>>> point though is that both servers and ASIC specific hardware would still be
>>> able to benefit from the cryptography upgrade I am proposing, as this was
>>> in relation to the disinfranchisemet point.
>>> >>>> >
>>> >>>> > That said, I think the best way to move forward is to submit a
>>> BIP pull request for a draft via GitHub using BIP #2's draft format and any
>>> questions people have can be answered in the reqeust's comments. That way
>>> people don't have to get emails everytime there is a reply, but replies
>>> still get seen as opposed to offline discussion. Since the instructions say
>>> to email bitcoin-dev before doing a bip draft, I have done that. Since
>>> people want to see the draft beforehand and it isn't merged manually
>>> anyways, I think it is the easiest way to handle this.
>>> >>>> >
>>> >>>> > I'm also okay w/ continuing the discussion on bitcoin-dev but
>>> rather form a discussion on git instead given I don't want to accidentally
>>> impolitely bother people given this is a moderated list and we already
>>> established some interest for at least a draft.
>>> >>>> >
>>> >>>> > Does that seem fine?
>>> >>>> >
>>> >>>> > Best regards, Andrew
>>> >>>> >
>>> >>>> > On Fri, Mar 5, 2021, 7:41 PM Keagan McClelland <
>>> keagan.mcclelland at gmail.com> wrote:
>>> >>>> >>
>>> >>>> >> > A large portion of BTC is already mined through AWS servers
>>> and non-asic specific hardware anyways. A majority of them would benefit
>>> from a hybrid proof, and the fact that it is hybrid in that manner wouldn't
>>> disenfranchise currently optimized mining entities as well.
>>> >>>> >>
>>> >>>> >> My instincts tell me that this is an outlandish claim. Do you
>>> have supporting evidence for this?
>>> >>>> >>
>>> >>>> >> Keagan
>>> >>>> >>
>>> >>>> >> On Fri, Mar 5, 2021 at 3:22 PM Lonero Foundation via bitcoin-dev
>>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>> >>>> >>>
>>> >>>> >>> Actually I mentioned a proof of space and time hybrid which is
>>> much different than staking. Sorry to draw for the confusion as PoC is more
>>> commonly used then PoST.
>>> >>>> >>> There is a way to make PoC cryptographically compatible w/
>>> Proof of Work as it normally stands:
>>> https://en.wikipedia.org/wiki/Proof_of_space
>>> >>>> >>> It has rarely been done though given the technological
>>> complexity of being both CPU compatible and memory-hard compatible. There
>>> are lots of benefits outside of the realm of efficiency, and I already
>>> looked into numerous fault tolerant designs as well and what others in the
>>> cryptography community attempted to propose. The actual argument you have
>>> only against this is the Proof of Memory fallacy, which is only partially
>>> true. Given how the current hashing algorithm works, hard memory allocation
>>> wouldn't be of much benefit given it is more optimized for CPU/ASIC
>>> specific mining. I'm working towards a hybrid mechanism that fixes that.
>>> BTW: The way Bitcoin currently stands in its cryptography still needs
>>> updating regardless. If someone figures out NP hardness or the halting
>>> problem the traditional rule of millions of years to break all of Bitcoin's
>>> cryptography now comes down to minutes. Bitcoin is going to have to
>>> eventually radically upgrade their cryptography and hashing algo in the
>>> future regardless. I want to integrate some form of NP complexity in
>>> regards to the hybrid cryptography I'm aiming to provide which includes a
>>> polynomial time algorithm in the cryptography. More than likely the first
>>> version of my BTC hard fork will be coded in a way where integrating such
>>> complexity in the future only requires a soft fork or minor upgrade to its
>>> chain.
>>> >>>> >>>
>>> >>>> >>> In regards to the argument, "As a separate issue, proposing a
>>> hard fork in the hashing algorithm will invalidate the enormous amount of
>>> capital expenditure by mining entities and disincentivize future capital
>>> expenditure into mining hardware that may compute these more "useful"
>>> proofs of work."
>>> >>>> >>>
>>> >>>> >>> A large portion of BTC is already mined through AWS servers and
>>> non-asic specific hardware anyways. A majority of them would benefit from a
>>> hybrid proof, and the fact that it is hybrid in that manner wouldn't
>>> disenfranchise currently optimized mining entities as well.
>>> >>>> >>>
>>> >>>> >>> There are other reasons why a cryptography upgrade like this is
>>> beneficial. Theoretically one can argue BItcoin isn't fully decentralized.
>>> It is few unsolved mathematical proofs away from being entirely broken. My
>>> goal outside of efficiency is to build cryptography in a way that prevents
>>> such an event from happening in the future, if it was to ever happen. I
>>> have various research in regards to this area and work alot with
>>> distributed computing. I believe if the BTC community likes such a
>>> proposal, I would single handedly be able to build the cryptographic proof
>>> myself (though would like as many open source contributors as I can get :)
>>> >>>> >>>
>>> >>>> >>> Anyways just something to consider. We are in the same space in
>>> regards to what warrants a shitcoin or the whole argument against staking.
>>> >>>> >>>
>>> https://hackernoon.com/ethereum-you-are-a-centralized-cryptocurrency-stop-telling-us-that-you-arent-pi3s3yjl
>>> >>>> >>>
>>> >>>> >>> Best regards,  Andrew
>>> >>>> >>>
>>> >>>> >>> On Fri, Mar 5, 2021 at 4:11 PM Keagan McClelland <
>>> keagan.mcclelland at gmail.com> wrote:
>>> >>>> >>>>
>>> >>>> >>>> It is important to understand that it is critical for the work
>>> to be "useless" in order for the security model to be the same. If the work
>>> was useful it provides an avenue for actors to have nothing at stake when
>>> submitting a proof of work, since the marginal cost of block construction
>>> will be lessened by the fact that the work was useful in a different
>>> context and therefore would have been done anyway. This actually degrades
>>> the security of the network in the process.
>>> >>>> >>>>
>>> >>>> >>>> As a separate issue, proposing a hard fork in the hashing
>>> algorithm will invalidate the enormous amount of capital expenditure by
>>> mining entities and disincentivize future capital expenditure into mining
>>> hardware that may compute these more "useful" proofs of work. This is
>>> because any change in the POW algorithm will be considered unstable and
>>> subject to change in the future. This puts the entire network at even more
>>> risk meaning that no entity is tying their own interests to that of the
>>> bitcoin network at large. It also puts the developers in a position where
>>> they can be bribed by entities with a vested interest in deciding what the
>>> new "useful" proof of work should be.
>>> >>>> >>>>
>>> >>>> >>>> All of these things make the Bitcoin network worse off.
>>> >>>> >>>>
>>> >>>> >>>> Keagan
>>> >>>> >>>>
>>> >>>> >>>> On Fri, Mar 5, 2021 at 1:48 PM Lonero Foundation via
>>> bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>> >>>> >>>>>
>>> >>>> >>>>> Also in regards to my other email, I forgot to iterate that
>>> my cryptography proposal helps behind the efficiency category but also
>>> tackles problems such as NP-Completeness or Halting which is something the
>>> BTC network could be vulnerable to in the future. For sake of simplicity, I
>>> do want to do this BIP because it tackles lots of the issues in regards to
>>> this manner and can provide useful insight to the community. If things such
>>> as bigger block height have been proposed as hard forks, I feel at the very
>>> least an upgrade regarding the hashing algorithm and cryptography does at
>>> least warrant some discussion. Anyways I hope I can send you my BIP, just
>>> let me know on the preferred format?
>>> >>>> >>>>>
>>> >>>> >>>>> Best regards, Andrew
>>> >>>> >>>>>
>>> >>>> >>>>> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <
>>> loneroassociation at gmail.com> wrote:
>>> >>>> >>>>>>
>>> >>>> >>>>>> Hi, this isn't about the energy efficient argument in
>>> regards to renewables or mining devices but a better cryptography layer to
>>> get the most out of your hashing for validation. I do understand the
>>> arbitrariness of it, but do want to still propose a document. Do I use the
>>> Media Wiki format on GitHub and just attach it as my proposal?
>>> >>>> >>>>>>
>>> >>>> >>>>>> Best regards, Andrew
>>> >>>> >>>>>>
>>> >>>> >>>>>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <
>>> c1.devrandom at niftybox.net> wrote:
>>> >>>> >>>>>>>
>>> >>>> >>>>>>> Hi Ryan and Andrew,
>>> >>>> >>>>>>>
>>> >>>> >>>>>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <
>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>> >>>> >>>>>>>>
>>> >>>> >>>>>>>>
>>> >>>> >>>>>>>>   https://www.truthcoin.info/blog/pow-cheapest/
>>> >>>> >>>>>>>>     "Nothing is Cheaper than Proof of Work"
>>> >>>> >>>>>>>>     on | 04 Aug 2015
>>> >>>> >>>>>>>>
>>> >>>> >>>>>>>
>>> >>>> >>>>>>> Just to belabor this a bit, the paper demonstrates that the
>>> mining market will tend to expend resources equivalent to miner reward.  It
>>> does not prove that mining work has to expend *energy* as a primary cost.
>>> >>>> >>>>>>>
>>> >>>> >>>>>>> Some might argue that energy expenditure has negative
>>> externalities and that we should move to other resources.  I would argue
>>> that the negative externalities will go away soon because of the move to
>>> renewables, so the point is likely moot.
>>> >>>> >>>>>>>
>>> >>>> >>>>> _______________________________________________
>>> >>>> >>>>> bitcoin-dev mailing list
>>> >>>> >>>>> bitcoin-dev at lists.linuxfoundation.org
>>> >>>> >>>>>
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>> >>>> >>>
>>> >>>> >>> _______________________________________________
>>> >>>> >>> bitcoin-dev mailing list
>>> >>>> >>> bitcoin-dev at lists.linuxfoundation.org
>>> >>>> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>> >>>> >
>>> >>>> > _______________________________________________
>>> >>>> > bitcoin-dev mailing list
>>> >>>> > bitcoin-dev at lists.linuxfoundation.org
>>> >>>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>> >
>>> > _______________________________________________
>>> > bitcoin-dev mailing list
>>> > bitcoin-dev at lists.linuxfoundation.org
>>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>>
>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210312/3ded64b9/attachment-0001.html>

From email at yancy.lol  Fri Mar 12 22:37:23 2021
From: email at yancy.lol (email at yancy.lol)
Date: Fri, 12 Mar 2021 23:37:23 +0100
Subject: [bitcoin-dev]
 =?utf-8?q?BIP_Proposal=3A_Consensus_=28hard_fork=29?=
 =?utf-8?q?_PoST_Datastore_for_Energy_Efficient_Mining?=
In-Reply-To: <CA+YkXXz9aHfZtt-it_8w4ovF=-QaZ4_9vwDS0Kz36qhHwVDC5Q@mail.gmail.com>
Message-ID: <3d65-604bed00-17d-6093c680@171273340>


I think Andrew himself is an algo.? The crypto training set must not be very good.

Cheers,
-Yancy

On Friday, March 12, 2021 17:54 CET, Lonero Foundation via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
?Hi, I awkwardly phrased that part, I was referring to key validation in relation to that section as well as the hashing related to those keys. I might rephrase it.??In regards to technical merit, the main purpose of the BIP is to get a sense of the idea. Once I get assigned a BIP draft #, I am willing to follow it up with many preprints or publications to go in the references implementation section and start dev work before upgrading to final status.?This will take about 400 hours of my time, but is something I am personally looking into developing as a hard fork.?Keep in mind this is a draft, so after it is assigned a number to references I do at the very least hope to describe various parts of the cryptographic proofs and algorithmic structure I am hoping for.?Best regards, Andrew?On Fri, Mar 12, 2021, 10:03 AM Erik Aronesty <erik at q32.com> wrote:secp236k1 isn't a hashing algo.? ?your BIP needs about 10 more pages
and some degree of technical merit.

i suggest you start here:

https://en.bitcoin.it/wiki/Proof_of_burn
https://bitcointalk.org/index.php?topic=225690.0

proof-of-burn is a nice alternative to proof-of-work.? ?i always
suspected that, if designed correctly, it could be a proven
equivalent.? ?you could spin up a fork of bitcoin that allows aged,
burned, coins instead of POW that would probably work just fine.

- erik

On Thu, Mar 11, 2021 at 11:56 AM Lonero Foundation via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> Hi, I have submitted the BIP Pull Request here: https://github.com/bitcoin/bips/pull/1084
>
> Hoping to receive a BIP # for the draft prior to development/reference implementation.
>
> Best regards, Andrew
>
> On Mon, Mar 8, 2021, 6:40 PM Lonero Foundation <loneroassociation at gmail.com> wrote:
>>
>> Hi, here is the list to the BIP proposal on my own repo: https://github.com/Mentors4EDU/bip-amkn-posthyb/blob/main/bip-draft.mediawiki
>> Can I submit a pull request on the BIPs repo for this to go into draft mode? Also, I think this provides at least some more insight on what I want to work on.
>>
>> Best regards, Andrew
>>
>> On Sat, Mar 6, 2021, 10:42 AM Lonero Foundation <loneroassociation at gmail.com> wrote:
>>>
>>> [off-list]
>>>
>>> Okay. I will do so and post the link here for discussion before doing a pull request on BIP's repo as the best way to handle it.
>>>
>>> Best regards, Andrew
>>>
>>> On Sat, Mar 6, 2021, 10:21 AM Ricardo Filipe <ricardojdfilipe at gmail.com> wrote:
>>>>
>>>> As said before, you are free to create the BIP in your own repository
>>>> and bring it to discussion on the mailing list. then you can do a PR
>>>>
>>>> Lonero Foundation via bitcoin-dev
>>>> <bitcoin-dev at lists.linuxfoundation.org> escreveu no dia s?bado,
>>>> 6/03/2021 ?(s) 08:58:
>>>> >
>>>> > I know Ethereum had an outlandishly large percentage of nodes running on AWS, I heard the same thing is for Bitcoin but for mining. Had trouble finding the article online so take it with a grain of salt. The point though is that both servers and ASIC specific hardware would still be able to benefit from the cryptography upgrade I am proposing, as this was in relation to the disinfranchisemet point.
>>>> >
>>>> > That said, I think the best way to move forward is to submit a BIP pull request for a draft via GitHub using BIP #2's draft format and any questions people have can be answered in the reqeust's comments. That way people don't have to get emails everytime there is a reply, but replies still get seen as opposed to offline discussion. Since the instructions say to email bitcoin-dev before doing a bip draft, I have done that. Since people want to see the draft beforehand and it isn't merged manually anyways, I think it is the easiest way to handle this.
>>>> >
>>>> > I'm also okay w/ continuing the discussion on bitcoin-dev but rather form a discussion on git instead given I don't want to accidentally impolitely bother people given this is a moderated list and we already established some interest for at least a draft.
>>>> >
>>>> > Does that seem fine?
>>>> >
>>>> > Best regards, Andrew
>>>> >
>>>> > On Fri, Mar 5, 2021, 7:41 PM Keagan McClelland <keagan.mcclelland at gmail.com> wrote:
>>>> >>
>>>> >> > A large portion of BTC is already mined through AWS servers and non-asic specific hardware anyways. A majority of them would benefit from a hybrid proof, and the fact that it is hybrid in that manner wouldn't disenfranchise currently optimized mining entities as well.
>>>> >>
>>>> >> My instincts tell me that this is an outlandish claim. Do you have supporting evidence for this?
>>>> >>
>>>> >> Keagan
>>>> >>
>>>> >> On Fri, Mar 5, 2021 at 3:22 PM Lonero Foundation via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>> >>>
>>>> >>> Actually I mentioned a proof of space and time hybrid which is much different than staking. Sorry to draw for the confusion as PoC is more commonly used then PoST.
>>>> >>> There is a way to make PoC cryptographically compatible w/ Proof of Work as it normally stands: https://en.wikipedia.org/wiki/Proof_of_space
>>>> >>> It has rarely been done though given the technological complexity of being both CPU compatible and memory-hard compatible. There are lots of benefits outside of the realm of efficiency, and I already looked into numerous fault tolerant designs as well and what others in the cryptography community attempted to propose. The actual argument you have only against this is the Proof of Memory fallacy, which is only partially true. Given how the current hashing algorithm works, hard memory allocation wouldn't be of much benefit given it is more optimized for CPU/ASIC specific mining. I'm working towards a hybrid mechanism that fixes that. BTW: The way Bitcoin currently stands in its cryptography still needs updating regardless. If someone figures out NP hardness or the halting problem the traditional rule of millions of years to break all of Bitcoin's cryptography now comes down to minutes. Bitcoin is going to have to eventually radically upgrade their cryptography and hashing algo in the future regardless. I want to integrate some form of NP complexity in regards to the hybrid cryptography I'm aiming to provide which includes a polynomial time algorithm in the cryptography. More than likely the first version of my BTC hard fork will be coded in a way where integrating such complexity in the future only requires a soft fork or minor upgrade to its chain.
>>>> >>>
>>>> >>> In regards to the argument, "As a separate issue, proposing a hard fork in the hashing algorithm will invalidate the enormous amount of capital expenditure by mining entities and disincentivize future capital expenditure into mining hardware that may compute these more "useful" proofs of work."
>>>> >>>
>>>> >>> A large portion of BTC is already mined through AWS servers and non-asic specific hardware anyways. A majority of them would benefit from a hybrid proof, and the fact that it is hybrid in that manner wouldn't disenfranchise currently optimized mining entities as well.
>>>> >>>
>>>> >>> There are other reasons why a cryptography upgrade like this is beneficial. Theoretically one can argue BItcoin isn't fully decentralized. It is few unsolved mathematical proofs away from being entirely broken. My goal outside of efficiency is to build cryptography in a way that prevents such an event from happening in the future, if it was to ever happen. I have various research in regards to this area and work alot with distributed computing. I believe if the BTC community likes such a proposal, I would single handedly be able to build the cryptographic proof myself (though would like as many open source contributors as I can get :)
>>>> >>>
>>>> >>> Anyways just something to consider. We are in the same space in regards to what warrants a shitcoin or the whole argument against staking.
>>>> >>> https://hackernoon.com/ethereum-you-are-a-centralized-cryptocurrency-stop-telling-us-that-you-arent-pi3s3yjl
>>>> >>>
>>>> >>> Best regards,? Andrew
>>>> >>>
>>>> >>> On Fri, Mar 5, 2021 at 4:11 PM Keagan McClelland <keagan.mcclelland at gmail.com> wrote:
>>>> >>>>
>>>> >>>> It is important to understand that it is critical for the work to be "useless" in order for the security model to be the same. If the work was useful it provides an avenue for actors to have nothing at stake when submitting a proof of work, since the marginal cost of block construction will be lessened by the fact that the work was useful in a different context and therefore would have been done anyway. This actually degrades the security of the network in the process.
>>>> >>>>
>>>> >>>> As a separate issue, proposing a hard fork in the hashing algorithm will invalidate the enormous amount of capital expenditure by mining entities and disincentivize future capital expenditure into mining hardware that may compute these more "useful" proofs of work. This is because any change in the POW algorithm will be considered unstable and subject to change in the future. This puts the entire network at even more risk meaning that no entity is tying their own interests to that of the bitcoin network at large. It also puts the developers in a position where they can be bribed by entities with a vested interest in deciding what the new "useful" proof of work should be.
>>>> >>>>
>>>> >>>> All of these things make the Bitcoin network worse off.
>>>> >>>>
>>>> >>>> Keagan
>>>> >>>>
>>>> >>>> On Fri, Mar 5, 2021 at 1:48 PM Lonero Foundation via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>> >>>>>
>>>> >>>>> Also in regards to my other email, I forgot to iterate that my cryptography proposal helps behind the efficiency category but also tackles problems such as NP-Completeness or Halting which is something the BTC network could be vulnerable to in the future. For sake of simplicity, I do want to do this BIP because it tackles lots of the issues in regards to this manner and can provide useful insight to the community. If things such as bigger block height have been proposed as hard forks, I feel at the very least an upgrade regarding the hashing algorithm and cryptography does at least warrant some discussion. Anyways I hope I can send you my BIP, just let me know on the preferred format?
>>>> >>>>>
>>>> >>>>> Best regards, Andrew
>>>> >>>>>
>>>> >>>>> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <loneroassociation at gmail.com> wrote:
>>>> >>>>>>
>>>> >>>>>> Hi, this isn't about the energy efficient argument in regards to renewables or mining devices but a better cryptography layer to get the most out of your hashing for validation. I do understand the arbitrariness of it, but do want to still propose a document. Do I use the Media Wiki format on GitHub and just attach it as my proposal?
>>>> >>>>>>
>>>> >>>>>> Best regards, Andrew
>>>> >>>>>>
>>>> >>>>>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net> wrote:
>>>> >>>>>>>
>>>> >>>>>>> Hi Ryan and Andrew,
>>>> >>>>>>>
>>>> >>>>>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>> >>>>>>>>
>>>> >>>>>>>>
>>>> >>>>>>>>? ?https://www.truthcoin.info/blog/pow-cheapest/
>>>> >>>>>>>>? ? ?"Nothing is Cheaper than Proof of Work"
>>>> >>>>>>>>? ? ?on | 04 Aug 2015
>>>> >>>>>>>>
>>>> >>>>>>>
>>>> >>>>>>> Just to belabor this a bit, the paper demonstrates that the mining market will tend to expend resources equivalent to miner reward.? It does not prove that mining work has to expend *energy* as a primary cost.
>>>> >>>>>>>
>>>> >>>>>>> Some might argue that energy expenditure has negative externalities and that we should move to other resources.? I would argue that the negative externalities will go away soon because of the move to renewables, so the point is likely moot.
>>>> >>>>>>>
>>>> >>>>> _______________________________________________
>>>> >>>>> bitcoin-dev mailing list
>>>> >>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> >>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>> >>>
>>>> >>> _______________________________________________
>>>> >>> bitcoin-dev mailing list
>>>> >>> bitcoin-dev at lists.linuxfoundation.org
>>>> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>> >
>>>> > _______________________________________________
>>>> > bitcoin-dev mailing list
>>>> > bitcoin-dev at lists.linuxfoundation.org
>>>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210312/2bb54cd8/attachment-0001.html>

From email at yancy.lol  Sat Mar 13 08:13:25 2021
From: email at yancy.lol (email at yancy.lol)
Date: Sat, 13 Mar 2021 09:13:25 +0100
Subject: [bitcoin-dev]
 =?utf-8?q?BIP_Proposal=3A_Consensus_=28hard_fork=29?=
 =?utf-8?q?_PoST_Datastore_for_Energy_Efficient_Mining?=
In-Reply-To: <CA+YkXXw5uh4yfvqDiBBEXcq188PEGku-NFFAq7uNuAFTG3ooTQ@mail.gmail.com>
Message-ID: <1802-604c7400-4d1-7b635e80@91248813>


My email was not intended as an insult.? Your proposal seemed a bit like gibberish and made some obvious mistakes as pointed out before (such as conflating secp256k1 with sha256), and so I was genuinely curious if you were a bot spamming the list.?
Maybe a more interesting topic is, can GPT3 be used to generate a BIP?? How long before our AI overlord produces improvements to Bitcoin?? At what point will the AI have more than 51% of commit frequency?? Will we have lost the war to our new centralized overlord?
Cheers,
-Yancy


On Saturday, March 13, 2021 00:31 CET, Lonero Foundation <loneroassociation at gmail.com> wrote:
?Also, I already stated I was referring to signature validation cryptography in that aspect: https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/digital-signatures/ecdsa-sign-verify-examples.htmlMy BIP has a primary purpose in regards to what I want to develop proofs for and the different cryptographic elements I want to develop proofs for.That said to those who disagree with the premise, I do prefer constructive feedback over insults or making fun of one another. After all this is an improvement proposal with a specific purpose aiming to develop a specific thing, not a guy who is just wanting to copy and paste a repository and call it a day.?Best regards, Andrew?On Fri, Mar 12, 2021 at 6:21 PM Lonero Foundation <loneroassociation at gmail.com> wrote:Hi, I also want to emphasize that my main point isn't just to create a BTC hardfork or become another Bitcoin Cash, Gold, or SV. The main point in regards to this BIP actually expands POW rather than replaces or creates an alternative. Many of the problems faced in regards to security in the future as well as sustainability is something I believe lots of the changes I am proposing can fix. In regards to technological implementation, once this is assigned draft status I am more than willing to create preprints explaining the cryptography, hashing algorithm improvements, and consensus that I am working on. This is a highly technologically complex idea that I am willing to "call my bluff on" and expand upon. As for it being a draft, I think this is a good starting point at least for draft status prior to working on technological implementation.?Best regards, Andrew?On Fri, Mar 12, 2021 at 5:37 PM email at yancy.lol <email at yancy.lol> wrote:I think Andrew himself is an algo.? The crypto training set must not be very good.

Cheers,
-Yancy

On Friday, March 12, 2021 17:54 CET, Lonero Foundation via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
?Hi, I awkwardly phrased that part, I was referring to key validation in relation to that section as well as the hashing related to those keys. I might rephrase it.??In regards to technical merit, the main purpose of the BIP is to get a sense of the idea. Once I get assigned a BIP draft #, I am willing to follow it up with many preprints or publications to go in the references implementation section and start dev work before upgrading to final status.?This will take about 400 hours of my time, but is something I am personally looking into developing as a hard fork.?Keep in mind this is a draft, so after it is assigned a number to references I do at the very least hope to describe various parts of the cryptographic proofs and algorithmic structure I am hoping for.?Best regards, Andrew?On Fri, Mar 12, 2021, 10:03 AM Erik Aronesty <erik at q32.com> wrote:secp236k1 isn't a hashing algo.? ?your BIP needs about 10 more pages
and some degree of technical merit.

i suggest you start here:

https://en.bitcoin.it/wiki/Proof_of_burn
https://bitcointalk.org/index.php?topic=225690.0

proof-of-burn is a nice alternative to proof-of-work.? ?i always
suspected that, if designed correctly, it could be a proven
equivalent.? ?you could spin up a fork of bitcoin that allows aged,
burned, coins instead of POW that would probably work just fine.

- erik

On Thu, Mar 11, 2021 at 11:56 AM Lonero Foundation via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> Hi, I have submitted the BIP Pull Request here: https://github.com/bitcoin/bips/pull/1084
>
> Hoping to receive a BIP # for the draft prior to development/reference implementation.
>
> Best regards, Andrew
>
> On Mon, Mar 8, 2021, 6:40 PM Lonero Foundation <loneroassociation at gmail.com> wrote:
>>
>> Hi, here is the list to the BIP proposal on my own repo: https://github.com/Mentors4EDU/bip-amkn-posthyb/blob/main/bip-draft.mediawiki
>> Can I submit a pull request on the BIPs repo for this to go into draft mode? Also, I think this provides at least some more insight on what I want to work on.
>>
>> Best regards, Andrew
>>
>> On Sat, Mar 6, 2021, 10:42 AM Lonero Foundation <loneroassociation at gmail.com> wrote:
>>>
>>> [off-list]
>>>
>>> Okay. I will do so and post the link here for discussion before doing a pull request on BIP's repo as the best way to handle it.
>>>
>>> Best regards, Andrew
>>>
>>> On Sat, Mar 6, 2021, 10:21 AM Ricardo Filipe <ricardojdfilipe at gmail.com> wrote:
>>>>
>>>> As said before, you are free to create the BIP in your own repository
>>>> and bring it to discussion on the mailing list. then you can do a PR
>>>>
>>>> Lonero Foundation via bitcoin-dev
>>>> <bitcoin-dev at lists.linuxfoundation.org> escreveu no dia s?bado,
>>>> 6/03/2021 ?(s) 08:58:
>>>> >
>>>> > I know Ethereum had an outlandishly large percentage of nodes running on AWS, I heard the same thing is for Bitcoin but for mining. Had trouble finding the article online so take it with a grain of salt. The point though is that both servers and ASIC specific hardware would still be able to benefit from the cryptography upgrade I am proposing, as this was in relation to the disinfranchisemet point.
>>>> >
>>>> > That said, I think the best way to move forward is to submit a BIP pull request for a draft via GitHub using BIP #2's draft format and any questions people have can be answered in the reqeust's comments. That way people don't have to get emails everytime there is a reply, but replies still get seen as opposed to offline discussion. Since the instructions say to email bitcoin-dev before doing a bip draft, I have done that. Since people want to see the draft beforehand and it isn't merged manually anyways, I think it is the easiest way to handle this.
>>>> >
>>>> > I'm also okay w/ continuing the discussion on bitcoin-dev but rather form a discussion on git instead given I don't want to accidentally impolitely bother people given this is a moderated list and we already established some interest for at least a draft.
>>>> >
>>>> > Does that seem fine?
>>>> >
>>>> > Best regards, Andrew
>>>> >
>>>> > On Fri, Mar 5, 2021, 7:41 PM Keagan McClelland <keagan.mcclelland at gmail.com> wrote:
>>>> >>
>>>> >> > A large portion of BTC is already mined through AWS servers and non-asic specific hardware anyways. A majority of them would benefit from a hybrid proof, and the fact that it is hybrid in that manner wouldn't disenfranchise currently optimized mining entities as well.
>>>> >>
>>>> >> My instincts tell me that this is an outlandish claim. Do you have supporting evidence for this?
>>>> >>
>>>> >> Keagan
>>>> >>
>>>> >> On Fri, Mar 5, 2021 at 3:22 PM Lonero Foundation via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>> >>>
>>>> >>> Actually I mentioned a proof of space and time hybrid which is much different than staking. Sorry to draw for the confusion as PoC is more commonly used then PoST.
>>>> >>> There is a way to make PoC cryptographically compatible w/ Proof of Work as it normally stands: https://en.wikipedia.org/wiki/Proof_of_space
>>>> >>> It has rarely been done though given the technological complexity of being both CPU compatible and memory-hard compatible. There are lots of benefits outside of the realm of efficiency, and I already looked into numerous fault tolerant designs as well and what others in the cryptography community attempted to propose. The actual argument you have only against this is the Proof of Memory fallacy, which is only partially true. Given how the current hashing algorithm works, hard memory allocation wouldn't be of much benefit given it is more optimized for CPU/ASIC specific mining. I'm working towards a hybrid mechanism that fixes that. BTW: The way Bitcoin currently stands in its cryptography still needs updating regardless. If someone figures out NP hardness or the halting problem the traditional rule of millions of years to break all of Bitcoin's cryptography now comes down to minutes. Bitcoin is going to have to eventually radically upgrade their cryptography and hashing algo in the future regardless. I want to integrate some form of NP complexity in regards to the hybrid cryptography I'm aiming to provide which includes a polynomial time algorithm in the cryptography. More than likely the first version of my BTC hard fork will be coded in a way where integrating such complexity in the future only requires a soft fork or minor upgrade to its chain.
>>>> >>>
>>>> >>> In regards to the argument, "As a separate issue, proposing a hard fork in the hashing algorithm will invalidate the enormous amount of capital expenditure by mining entities and disincentivize future capital expenditure into mining hardware that may compute these more "useful" proofs of work."
>>>> >>>
>>>> >>> A large portion of BTC is already mined through AWS servers and non-asic specific hardware anyways. A majority of them would benefit from a hybrid proof, and the fact that it is hybrid in that manner wouldn't disenfranchise currently optimized mining entities as well.
>>>> >>>
>>>> >>> There are other reasons why a cryptography upgrade like this is beneficial. Theoretically one can argue BItcoin isn't fully decentralized. It is few unsolved mathematical proofs away from being entirely broken. My goal outside of efficiency is to build cryptography in a way that prevents such an event from happening in the future, if it was to ever happen. I have various research in regards to this area and work alot with distributed computing. I believe if the BTC community likes such a proposal, I would single handedly be able to build the cryptographic proof myself (though would like as many open source contributors as I can get :)
>>>> >>>
>>>> >>> Anyways just something to consider. We are in the same space in regards to what warrants a shitcoin or the whole argument against staking.
>>>> >>> https://hackernoon.com/ethereum-you-are-a-centralized-cryptocurrency-stop-telling-us-that-you-arent-pi3s3yjl
>>>> >>>
>>>> >>> Best regards,? Andrew
>>>> >>>
>>>> >>> On Fri, Mar 5, 2021 at 4:11 PM Keagan McClelland <keagan.mcclelland at gmail.com> wrote:
>>>> >>>>
>>>> >>>> It is important to understand that it is critical for the work to be "useless" in order for the security model to be the same. If the work was useful it provides an avenue for actors to have nothing at stake when submitting a proof of work, since the marginal cost of block construction will be lessened by the fact that the work was useful in a different context and therefore would have been done anyway. This actually degrades the security of the network in the process.
>>>> >>>>
>>>> >>>> As a separate issue, proposing a hard fork in the hashing algorithm will invalidate the enormous amount of capital expenditure by mining entities and disincentivize future capital expenditure into mining hardware that may compute these more "useful" proofs of work. This is because any change in the POW algorithm will be considered unstable and subject to change in the future. This puts the entire network at even more risk meaning that no entity is tying their own interests to that of the bitcoin network at large. It also puts the developers in a position where they can be bribed by entities with a vested interest in deciding what the new "useful" proof of work should be.
>>>> >>>>
>>>> >>>> All of these things make the Bitcoin network worse off.
>>>> >>>>
>>>> >>>> Keagan
>>>> >>>>
>>>> >>>> On Fri, Mar 5, 2021 at 1:48 PM Lonero Foundation via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>> >>>>>
>>>> >>>>> Also in regards to my other email, I forgot to iterate that my cryptography proposal helps behind the efficiency category but also tackles problems such as NP-Completeness or Halting which is something the BTC network could be vulnerable to in the future. For sake of simplicity, I do want to do this BIP because it tackles lots of the issues in regards to this manner and can provide useful insight to the community. If things such as bigger block height have been proposed as hard forks, I feel at the very least an upgrade regarding the hashing algorithm and cryptography does at least warrant some discussion. Anyways I hope I can send you my BIP, just let me know on the preferred format?
>>>> >>>>>
>>>> >>>>> Best regards, Andrew
>>>> >>>>>
>>>> >>>>> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <loneroassociation at gmail.com> wrote:
>>>> >>>>>>
>>>> >>>>>> Hi, this isn't about the energy efficient argument in regards to renewables or mining devices but a better cryptography layer to get the most out of your hashing for validation. I do understand the arbitrariness of it, but do want to still propose a document. Do I use the Media Wiki format on GitHub and just attach it as my proposal?
>>>> >>>>>>
>>>> >>>>>> Best regards, Andrew
>>>> >>>>>>
>>>> >>>>>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net> wrote:
>>>> >>>>>>>
>>>> >>>>>>> Hi Ryan and Andrew,
>>>> >>>>>>>
>>>> >>>>>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>> >>>>>>>>
>>>> >>>>>>>>
>>>> >>>>>>>>? ?https://www.truthcoin.info/blog/pow-cheapest/
>>>> >>>>>>>>? ? ?"Nothing is Cheaper than Proof of Work"
>>>> >>>>>>>>? ? ?on | 04 Aug 2015
>>>> >>>>>>>>
>>>> >>>>>>>
>>>> >>>>>>> Just to belabor this a bit, the paper demonstrates that the mining market will tend to expend resources equivalent to miner reward.? It does not prove that mining work has to expend *energy* as a primary cost.
>>>> >>>>>>>
>>>> >>>>>>> Some might argue that energy expenditure has negative externalities and that we should move to other resources.? I would argue that the negative externalities will go away soon because of the move to renewables, so the point is likely moot.
>>>> >>>>>>>
>>>> >>>>> _______________________________________________
>>>> >>>>> bitcoin-dev mailing list
>>>> >>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> >>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>> >>>
>>>> >>> _______________________________________________
>>>> >>> bitcoin-dev mailing list
>>>> >>> bitcoin-dev at lists.linuxfoundation.org
>>>> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>> >
>>>> > _______________________________________________
>>>> > bitcoin-dev mailing list
>>>> > bitcoin-dev at lists.linuxfoundation.org
>>>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


?


?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210313/997dc9b1/attachment-0001.html>

From loneroassociation at gmail.com  Sat Mar 13 15:02:05 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Sat, 13 Mar 2021 10:02:05 -0500
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <1802-604c7400-4d1-7b635e80@91248813>
References: <CA+YkXXw5uh4yfvqDiBBEXcq188PEGku-NFFAq7uNuAFTG3ooTQ@mail.gmail.com>
 <1802-604c7400-4d1-7b635e80@91248813>
Message-ID: <CA+YkXXzPt8vf=bfpW+NBqH_G7sTiyFcGSZa+j31Fx_O5ir93Cw@mail.gmail.com>

Hi, I know the differences between the cryptographic hashing algorithm and
key validation. I know hashing is for SHA, but was referring to asymmetric
cryptography in regards to the key validation. I should have used a
different term though instead of, "In regards to cryptographic hashing,", I
should have stated in regards to cryptographic key validation. There are a
few other dubious clarifications or minor edits I should make in order to
not draw confusion. I will do a repo update today. Honest mistake, but
enough with the sarcasm.

Best regards, Andrew

On Sat, Mar 13, 2021, 3:13 AM email at yancy.lol <email at yancy.lol> wrote:

> My email was not intended as an insult.  Your proposal seemed a bit like
> gibberish and made some obvious mistakes as pointed out before (such as
> conflating secp256k1 with sha256), and so I was genuinely curious if you
> were a bot spamming the list.
>
>
> Maybe a more interesting topic is, can GPT3 be used to generate a BIP?
> How long before our AI overlord produces improvements to Bitcoin?  At what
> point will the AI have more than 51% of commit frequency?  Will we have
> lost the war to our new centralized overlord?
>
> Cheers,
> -Yancy
>
>
> On Saturday, March 13, 2021 00:31 CET, Lonero Foundation <
> loneroassociation at gmail.com> wrote:
>
>
> Also, I already stated I was referring to signature validation
> cryptography in that aspect:
> https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/digital-signatures/ecdsa-sign-verify-examples.html
> My BIP has a primary purpose in regards to what I want to develop proofs
> for and the different cryptographic elements I want to develop proofs for.
> That said to those who disagree with the premise, I do prefer constructive
> feedback over insults or making fun of one another. After all this is an
> improvement proposal with a specific purpose aiming to develop a specific
> thing, not a guy who is just wanting to copy and paste a repository and
> call it a day.
>
> Best regards, Andrew
>
> On Fri, Mar 12, 2021 at 6:21 PM Lonero Foundation <
> loneroassociation at gmail.com> wrote:
>
>> Hi, I also want to emphasize that my main point isn't just to create a
>> BTC hardfork or become another Bitcoin Cash, Gold, or SV. The main point in
>> regards to this BIP actually expands POW rather than replaces or creates an
>> alternative. Many of the problems faced in regards to security in the
>> future as well as sustainability is something I believe lots of the changes
>> I am proposing can fix. In regards to technological implementation, once
>> this is assigned draft status I am more than willing to create preprints
>> explaining the cryptography, hashing algorithm improvements, and consensus
>> that I am working on. This is a highly technologically complex idea that I
>> am willing to "call my bluff on" and expand upon. As for it being a draft,
>> I think this is a good starting point at least for draft status prior to
>> working on technological implementation.
>>
>> Best regards, Andrew
>>
>> On Fri, Mar 12, 2021 at 5:37 PM email at yancy.lol <email at yancy.lol> wrote:
>>
>>> I think Andrew himself is an algo.  The crypto training set must not be
>>> very good.
>>>
>>> Cheers,
>>> -Yancy
>>>
>>> On Friday, March 12, 2021 17:54 CET, Lonero Foundation via bitcoin-dev <
>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>
>>>
>>> Hi, I awkwardly phrased that part, I was referring to key validation in
>>> relation to that section as well as the hashing related to those keys. I
>>> might rephrase it.
>>>
>>> In regards to technical merit, the main purpose of the BIP is to get a
>>> sense of the idea. Once I get assigned a BIP draft #, I am willing to
>>> follow it up with many preprints or publications to go in the references
>>> implementation section and start dev work before upgrading to final status.
>>>
>>> This will take about 400 hours of my time, but is something I am
>>> personally looking into developing as a hard fork.
>>>
>>> Keep in mind this is a draft, so after it is assigned a number to
>>> references I do at the very least hope to describe various parts of the
>>> cryptographic proofs and algorithmic structure I am hoping for.
>>>
>>> Best regards, Andrew
>>>
>>> On Fri, Mar 12, 2021, 10:03 AM Erik Aronesty <erik at q32.com> wrote:
>>>
>>>> secp236k1 isn't a hashing algo.   your BIP needs about 10 more pages
>>>> and some degree of technical merit.
>>>>
>>>> i suggest you start here:
>>>>
>>>> https://en.bitcoin.it/wiki/Proof_of_burn
>>>> https://bitcointalk.org/index.php?topic=225690.0
>>>>
>>>> proof-of-burn is a nice alternative to proof-of-work.   i always
>>>> suspected that, if designed correctly, it could be a proven
>>>> equivalent.   you could spin up a fork of bitcoin that allows aged,
>>>> burned, coins instead of POW that would probably work just fine.
>>>>
>>>> - erik
>>>>
>>>> On Thu, Mar 11, 2021 at 11:56 AM Lonero Foundation via bitcoin-dev
>>>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>> >
>>>> > Hi, I have submitted the BIP Pull Request here:
>>>> https://github.com/bitcoin/bips/pull/1084
>>>> >
>>>> > Hoping to receive a BIP # for the draft prior to
>>>> development/reference implementation.
>>>> >
>>>> > Best regards, Andrew
>>>> >
>>>> > On Mon, Mar 8, 2021, 6:40 PM Lonero Foundation <
>>>> loneroassociation at gmail.com> wrote:
>>>> >>
>>>> >> Hi, here is the list to the BIP proposal on my own repo:
>>>> https://github.com/Mentors4EDU/bip-amkn-posthyb/blob/main/bip-draft.mediawiki
>>>> >> Can I submit a pull request on the BIPs repo for this to go into
>>>> draft mode? Also, I think this provides at least some more insight on what
>>>> I want to work on.
>>>> >>
>>>> >> Best regards, Andrew
>>>> >>
>>>> >> On Sat, Mar 6, 2021, 10:42 AM Lonero Foundation <
>>>> loneroassociation at gmail.com> wrote:
>>>> >>>
>>>> >>> [off-list]
>>>> >>>
>>>> >>> Okay. I will do so and post the link here for discussion before
>>>> doing a pull request on BIP's repo as the best way to handle it.
>>>> >>>
>>>> >>> Best regards, Andrew
>>>> >>>
>>>> >>> On Sat, Mar 6, 2021, 10:21 AM Ricardo Filipe <
>>>> ricardojdfilipe at gmail.com> wrote:
>>>> >>>>
>>>> >>>> As said before, you are free to create the BIP in your own
>>>> repository
>>>> >>>> and bring it to discussion on the mailing list. then you can do a
>>>> PR
>>>> >>>>
>>>> >>>> Lonero Foundation via bitcoin-dev
>>>> >>>> <bitcoin-dev at lists.linuxfoundation.org> escreveu no dia s?bado,
>>>> >>>> 6/03/2021 ?(s) 08:58:
>>>> >>>> >
>>>> >>>> > I know Ethereum had an outlandishly large percentage of nodes
>>>> running on AWS, I heard the same thing is for Bitcoin but for mining. Had
>>>> trouble finding the article online so take it with a grain of salt. The
>>>> point though is that both servers and ASIC specific hardware would still be
>>>> able to benefit from the cryptography upgrade I am proposing, as this was
>>>> in relation to the disinfranchisemet point.
>>>> >>>> >
>>>> >>>> > That said, I think the best way to move forward is to submit a
>>>> BIP pull request for a draft via GitHub using BIP #2's draft format and any
>>>> questions people have can be answered in the reqeust's comments. That way
>>>> people don't have to get emails everytime there is a reply, but replies
>>>> still get seen as opposed to offline discussion. Since the instructions say
>>>> to email bitcoin-dev before doing a bip draft, I have done that. Since
>>>> people want to see the draft beforehand and it isn't merged manually
>>>> anyways, I think it is the easiest way to handle this.
>>>> >>>> >
>>>> >>>> > I'm also okay w/ continuing the discussion on bitcoin-dev but
>>>> rather form a discussion on git instead given I don't want to accidentally
>>>> impolitely bother people given this is a moderated list and we already
>>>> established some interest for at least a draft.
>>>> >>>> >
>>>> >>>> > Does that seem fine?
>>>> >>>> >
>>>> >>>> > Best regards, Andrew
>>>> >>>> >
>>>> >>>> > On Fri, Mar 5, 2021, 7:41 PM Keagan McClelland <
>>>> keagan.mcclelland at gmail.com> wrote:
>>>> >>>> >>
>>>> >>>> >> > A large portion of BTC is already mined through AWS servers
>>>> and non-asic specific hardware anyways. A majority of them would benefit
>>>> from a hybrid proof, and the fact that it is hybrid in that manner wouldn't
>>>> disenfranchise currently optimized mining entities as well.
>>>> >>>> >>
>>>> >>>> >> My instincts tell me that this is an outlandish claim. Do you
>>>> have supporting evidence for this?
>>>> >>>> >>
>>>> >>>> >> Keagan
>>>> >>>> >>
>>>> >>>> >> On Fri, Mar 5, 2021 at 3:22 PM Lonero Foundation via
>>>> bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>> >>>> >>>
>>>> >>>> >>> Actually I mentioned a proof of space and time hybrid which is
>>>> much different than staking. Sorry to draw for the confusion as PoC is more
>>>> commonly used then PoST.
>>>> >>>> >>> There is a way to make PoC cryptographically compatible w/
>>>> Proof of Work as it normally stands:
>>>> https://en.wikipedia.org/wiki/Proof_of_space
>>>> >>>> >>> It has rarely been done though given the technological
>>>> complexity of being both CPU compatible and memory-hard compatible. There
>>>> are lots of benefits outside of the realm of efficiency, and I already
>>>> looked into numerous fault tolerant designs as well and what others in the
>>>> cryptography community attempted to propose. The actual argument you have
>>>> only against this is the Proof of Memory fallacy, which is only partially
>>>> true. Given how the current hashing algorithm works, hard memory allocation
>>>> wouldn't be of much benefit given it is more optimized for CPU/ASIC
>>>> specific mining. I'm working towards a hybrid mechanism that fixes that.
>>>> BTW: The way Bitcoin currently stands in its cryptography still needs
>>>> updating regardless. If someone figures out NP hardness or the halting
>>>> problem the traditional rule of millions of years to break all of Bitcoin's
>>>> cryptography now comes down to minutes. Bitcoin is going to have to
>>>> eventually radically upgrade their cryptography and hashing algo in the
>>>> future regardless. I want to integrate some form of NP complexity in
>>>> regards to the hybrid cryptography I'm aiming to provide which includes a
>>>> polynomial time algorithm in the cryptography. More than likely the first
>>>> version of my BTC hard fork will be coded in a way where integrating such
>>>> complexity in the future only requires a soft fork or minor upgrade to its
>>>> chain.
>>>> >>>> >>>
>>>> >>>> >>> In regards to the argument, "As a separate issue, proposing a
>>>> hard fork in the hashing algorithm will invalidate the enormous amount of
>>>> capital expenditure by mining entities and disincentivize future capital
>>>> expenditure into mining hardware that may compute these more "useful"
>>>> proofs of work."
>>>> >>>> >>>
>>>> >>>> >>> A large portion of BTC is already mined through AWS servers
>>>> and non-asic specific hardware anyways. A majority of them would benefit
>>>> from a hybrid proof, and the fact that it is hybrid in that manner wouldn't
>>>> disenfranchise currently optimized mining entities as well.
>>>> >>>> >>>
>>>> >>>> >>> There are other reasons why a cryptography upgrade like this
>>>> is beneficial. Theoretically one can argue BItcoin isn't fully
>>>> decentralized. It is few unsolved mathematical proofs away from being
>>>> entirely broken. My goal outside of efficiency is to build cryptography in
>>>> a way that prevents such an event from happening in the future, if it was
>>>> to ever happen. I have various research in regards to this area and work
>>>> alot with distributed computing. I believe if the BTC community likes such
>>>> a proposal, I would single handedly be able to build the cryptographic
>>>> proof myself (though would like as many open source contributors as I can
>>>> get :)
>>>> >>>> >>>
>>>> >>>> >>> Anyways just something to consider. We are in the same space
>>>> in regards to what warrants a shitcoin or the whole argument against
>>>> staking.
>>>> >>>> >>>
>>>> https://hackernoon.com/ethereum-you-are-a-centralized-cryptocurrency-stop-telling-us-that-you-arent-pi3s3yjl
>>>> >>>> >>>
>>>> >>>> >>> Best regards,  Andrew
>>>> >>>> >>>
>>>> >>>> >>> On Fri, Mar 5, 2021 at 4:11 PM Keagan McClelland <
>>>> keagan.mcclelland at gmail.com> wrote:
>>>> >>>> >>>>
>>>> >>>> >>>> It is important to understand that it is critical for the
>>>> work to be "useless" in order for the security model to be the same. If the
>>>> work was useful it provides an avenue for actors to have nothing at stake
>>>> when submitting a proof of work, since the marginal cost of block
>>>> construction will be lessened by the fact that the work was useful in a
>>>> different context and therefore would have been done anyway. This actually
>>>> degrades the security of the network in the process.
>>>> >>>> >>>>
>>>> >>>> >>>> As a separate issue, proposing a hard fork in the hashing
>>>> algorithm will invalidate the enormous amount of capital expenditure by
>>>> mining entities and disincentivize future capital expenditure into mining
>>>> hardware that may compute these more "useful" proofs of work. This is
>>>> because any change in the POW algorithm will be considered unstable and
>>>> subject to change in the future. This puts the entire network at even more
>>>> risk meaning that no entity is tying their own interests to that of the
>>>> bitcoin network at large. It also puts the developers in a position where
>>>> they can be bribed by entities with a vested interest in deciding what the
>>>> new "useful" proof of work should be.
>>>> >>>> >>>>
>>>> >>>> >>>> All of these things make the Bitcoin network worse off.
>>>> >>>> >>>>
>>>> >>>> >>>> Keagan
>>>> >>>> >>>>
>>>> >>>> >>>> On Fri, Mar 5, 2021 at 1:48 PM Lonero Foundation via
>>>> bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>> >>>> >>>>>
>>>> >>>> >>>>> Also in regards to my other email, I forgot to iterate that
>>>> my cryptography proposal helps behind the efficiency category but also
>>>> tackles problems such as NP-Completeness or Halting which is something the
>>>> BTC network could be vulnerable to in the future. For sake of simplicity, I
>>>> do want to do this BIP because it tackles lots of the issues in regards to
>>>> this manner and can provide useful insight to the community. If things such
>>>> as bigger block height have been proposed as hard forks, I feel at the very
>>>> least an upgrade regarding the hashing algorithm and cryptography does at
>>>> least warrant some discussion. Anyways I hope I can send you my BIP, just
>>>> let me know on the preferred format?
>>>> >>>> >>>>>
>>>> >>>> >>>>> Best regards, Andrew
>>>> >>>> >>>>>
>>>> >>>> >>>>> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <
>>>> loneroassociation at gmail.com> wrote:
>>>> >>>> >>>>>>
>>>> >>>> >>>>>> Hi, this isn't about the energy efficient argument in
>>>> regards to renewables or mining devices but a better cryptography layer to
>>>> get the most out of your hashing for validation. I do understand the
>>>> arbitrariness of it, but do want to still propose a document. Do I use the
>>>> Media Wiki format on GitHub and just attach it as my proposal?
>>>> >>>> >>>>>>
>>>> >>>> >>>>>> Best regards, Andrew
>>>> >>>> >>>>>>
>>>> >>>> >>>>>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <
>>>> c1.devrandom at niftybox.net> wrote:
>>>> >>>> >>>>>>>
>>>> >>>> >>>>>>> Hi Ryan and Andrew,
>>>> >>>> >>>>>>>
>>>> >>>> >>>>>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <
>>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>> >>>> >>>>>>>>
>>>> >>>> >>>>>>>>
>>>> >>>> >>>>>>>>   https://www.truthcoin.info/blog/pow-cheapest/
>>>> >>>> >>>>>>>>     "Nothing is Cheaper than Proof of Work"
>>>> >>>> >>>>>>>>     on | 04 Aug 2015
>>>> >>>> >>>>>>>>
>>>> >>>> >>>>>>>
>>>> >>>> >>>>>>> Just to belabor this a bit, the paper demonstrates that
>>>> the mining market will tend to expend resources equivalent to miner
>>>> reward.  It does not prove that mining work has to expend *energy* as a
>>>> primary cost.
>>>> >>>> >>>>>>>
>>>> >>>> >>>>>>> Some might argue that energy expenditure has negative
>>>> externalities and that we should move to other resources.  I would argue
>>>> that the negative externalities will go away soon because of the move to
>>>> renewables, so the point is likely moot.
>>>> >>>> >>>>>>>
>>>> >>>> >>>>> _______________________________________________
>>>> >>>> >>>>> bitcoin-dev mailing list
>>>> >>>> >>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> >>>> >>>>>
>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>> >>>> >>>
>>>> >>>> >>> _______________________________________________
>>>> >>>> >>> bitcoin-dev mailing list
>>>> >>>> >>> bitcoin-dev at lists.linuxfoundation.org
>>>> >>>> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>> >>>> >
>>>> >>>> > _______________________________________________
>>>> >>>> > bitcoin-dev mailing list
>>>> >>>> > bitcoin-dev at lists.linuxfoundation.org
>>>> >>>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>> >
>>>> > _______________________________________________
>>>> > bitcoin-dev mailing list
>>>> > bitcoin-dev at lists.linuxfoundation.org
>>>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>>>
>>>
>>>
>>>
>>
>>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210313/6464de45/attachment-0001.html>

From email at yancy.lol  Sat Mar 13 15:45:47 2021
From: email at yancy.lol (yancy)
Date: Sat, 13 Mar 2021 15:45:47 +0000 (UTC)
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CA+YkXXzPt8vf=bfpW+NBqH_G7sTiyFcGSZa+j31Fx_O5ir93Cw@mail.gmail.com>
References: <CA+YkXXw5uh4yfvqDiBBEXcq188PEGku-NFFAq7uNuAFTG3ooTQ@mail.gmail.com>
 <1802-604c7400-4d1-7b635e80@91248813>
 <CA+YkXXzPt8vf=bfpW+NBqH_G7sTiyFcGSZa+j31Fx_O5ir93Cw@mail.gmail.com>
Message-ID: <31108cac-c3d5-4435-9ca0-41153545855b@yancy.lol>

Ok thanks.? Using the correct terminology helps people understand what you're talking about and take you seriously.

Cheers,
-Yancy

Mar 13, 2021 4:02:18 PM Lonero Foundation <loneroassociation at gmail.com>:

> Hi, I know the differences between the cryptographic hashing algorithm and key validation. I know hashing is for SHA, but was referring to?asymmetric cryptography in regards to the key validation. I should have used a different term though instead of, "In regards to cryptographic hashing,", I should have stated in regards to cryptographic key validation. There are a few other dubious clarifications or minor edits I should make in order to not draw confusion. I will do a repo update today. Honest mistake, but enough with the sarcasm.
> 
> Best regards, Andrew
> 
> On Sat, Mar 13, 2021, 3:13 AM email at yancy.lol <email at yancy.lol> wrote:
>> My email was not intended as an insult.? Your proposal seemed a bit like gibberish and made some obvious mistakes as pointed out before (such as conflating secp256k1 with sha256), and so I was genuinely curious if you were a bot spamming the list.
>> ?
>> Maybe a more interesting topic is, can GPT3 be used to generate a BIP?? How long before our AI overlord produces improvements to Bitcoin?? At what point will the AI have more than 51% of commit frequency?? Will we have lost the war to our new centralized overlord?
>> 
>> Cheers,
>> -Yancy
>> 
>> 
>> On Saturday, March 13, 2021 00:31 CET, Lonero Foundation <loneroassociation at gmail.com> wrote:
>> ?
>>> Also, I already stated I was referring to signature validation cryptography in that aspect: https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/digital-signatures/ecdsa-sign-verify-examples.html
>>> My BIP has a primary purpose in regards to what I want to develop proofs for and the different cryptographic elements I want to develop proofs for.
>>> That said to those who disagree with the premise, I do prefer constructive feedback over insults or making fun of one another. After all this is an improvement proposal with a specific purpose aiming to develop a specific thing, not a guy who is just wanting to copy and paste a repository and call it a day.
>>> ?
>>> Best regards, Andrew
>>> ?
>>> On Fri, Mar 12, 2021 at 6:21 PM Lonero Foundation <loneroassociation at gmail.com> wrote:
>>>> Hi, I also want to emphasize that my main point isn't just to create a BTC hardfork or become another Bitcoin Cash, Gold, or SV. The main point in regards to this BIP actually expands POW rather than replaces or creates an alternative. Many of the problems faced in regards to security in the future as well as sustainability is something I believe lots of the changes I am proposing can fix. In regards to technological implementation, once this is assigned draft status I am more than willing to create preprints explaining the cryptography, hashing algorithm improvements, and consensus that I am working on. This is a highly technologically complex idea that I am willing to "call my bluff on" and expand upon. As for it being a draft, I think this is a good starting point at least for draft status prior to working on technological implementation.
>>>> ?
>>>> Best regards, Andrew
>>>> ?
>>>> On Fri, Mar 12, 2021 at 5:37 PM email at yancy.lol <email at yancy.lol> wrote:
>>>>> I think Andrew himself is an algo.? The crypto training set must not be very good.
>>>>> 
>>>>> Cheers,
>>>>> -Yancy
>>>>> 
>>>>> On Friday, March 12, 2021 17:54 CET, Lonero Foundation via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>> ?
>>>>>> ?
>>>>> 
>>>>> 
>>>>> 
>>>>> ?
>> 
>> 
>> 
>> ?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210313/e3530b2c/attachment-0001.html>

From loneroassociation at gmail.com  Sat Mar 13 17:11:33 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Sat, 13 Mar 2021 12:11:33 -0500
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <31108cac-c3d5-4435-9ca0-41153545855b@yancy.lol>
References: <CA+YkXXw5uh4yfvqDiBBEXcq188PEGku-NFFAq7uNuAFTG3ooTQ@mail.gmail.com>
 <1802-604c7400-4d1-7b635e80@91248813>
 <CA+YkXXzPt8vf=bfpW+NBqH_G7sTiyFcGSZa+j31Fx_O5ir93Cw@mail.gmail.com>
 <31108cac-c3d5-4435-9ca0-41153545855b@yancy.lol>
Message-ID: <CA+YkXXzOre2nhaC9gPWe0Qa30+434_vC+Q0WsVz=kxKk4HjvEg@mail.gmail.com>

Hi, no worries. I made the changes now in the GitHub repository and pull
request. I'm hoping for a BIP # soon. Thanks for the feedback, and I guess
the sense of humor.

Best regards, Andrew

On Sat, Mar 13, 2021, 10:45 AM yancy <email at yancy.lol> wrote:

> Ok thanks.  Using the correct terminology helps people understand what
> you're talking about and take you seriously.
>
> Cheers,
> -Yancy
>
> Mar 13, 2021 4:02:18 PM Lonero Foundation <loneroassociation at gmail.com>:
>
> Hi, I know the differences between the cryptographic hashing algorithm and
> key validation. I know hashing is for SHA, but was referring to asymmetric
> cryptography in regards to the key validation. I should have used a
> different term though instead of, "In regards to cryptographic hashing,", I
> should have stated in regards to cryptographic key validation. There are a
> few other dubious clarifications or minor edits I should make in order to
> not draw confusion. I will do a repo update today. Honest mistake, but
> enough with the sarcasm.
>
> Best regards, Andrew
>
> On Sat, Mar 13, 2021, 3:13 AM email at yancy.lol <email at yancy.lol> wrote:
>
>> My email was not intended as an insult.  Your proposal seemed a bit like
>> gibberish and made some obvious mistakes as pointed out before (such as
>> conflating secp256k1 with sha256), and so I was genuinely curious if you
>> were a bot spamming the list.
>>
>>
>> Maybe a more interesting topic is, can GPT3 be used to generate a BIP?
>> How long before our AI overlord produces improvements to Bitcoin?  At what
>> point will the AI have more than 51% of commit frequency?  Will we have
>> lost the war to our new centralized overlord?
>>
>> Cheers,
>> -Yancy
>>
>>
>> On Saturday, March 13, 2021 00:31 CET, Lonero Foundation <
>> loneroassociation at gmail.com> wrote:
>>
>>
>> Also, I already stated I was referring to signature validation
>> cryptography in that aspect:
>> https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/digital-signatures/ecdsa-sign-verify-examples.html
>> My BIP has a primary purpose in regards to what I want to develop proofs
>> for and the different cryptographic elements I want to develop proofs for.
>> That said to those who disagree with the premise, I do prefer
>> constructive feedback over insults or making fun of one another. After all
>> this is an improvement proposal with a specific purpose aiming to develop a
>> specific thing, not a guy who is just wanting to copy and paste a
>> repository and call it a day.
>>
>> Best regards, Andrew
>>
>> On Fri, Mar 12, 2021 at 6:21 PM Lonero Foundation <
>> loneroassociation at gmail.com> wrote:
>>
>>> Hi, I also want to emphasize that my main point isn't just to create a
>>> BTC hardfork or become another Bitcoin Cash, Gold, or SV. The main point in
>>> regards to this BIP actually expands POW rather than replaces or creates an
>>> alternative. Many of the problems faced in regards to security in the
>>> future as well as sustainability is something I believe lots of the changes
>>> I am proposing can fix. In regards to technological implementation, once
>>> this is assigned draft status I am more than willing to create preprints
>>> explaining the cryptography, hashing algorithm improvements, and consensus
>>> that I am working on. This is a highly technologically complex idea that I
>>> am willing to "call my bluff on" and expand upon. As for it being a draft,
>>> I think this is a good starting point at least for draft status prior to
>>> working on technological implementation.
>>>
>>> Best regards, Andrew
>>>
>>> On Fri, Mar 12, 2021 at 5:37 PM email at yancy.lol <email at yancy.lol>
>>> wrote:
>>>
>>>> I think Andrew himself is an algo.  The crypto training set must not be
>>>> very good.
>>>>
>>>> Cheers,
>>>> -Yancy
>>>>
>>>> On Friday, March 12, 2021 17:54 CET, Lonero Foundation via bitcoin-dev <
>>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>
>>>>
>>>> ?
>>>>
>>>>
>>>>
>>>>
>>>>
>>>
>>>
>>
>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210313/c401c32a/attachment-0001.html>

From email at yancy.lol  Sat Mar 13 19:44:39 2021
From: email at yancy.lol (email at yancy.lol)
Date: Sat, 13 Mar 2021 20:44:39 +0100
Subject: [bitcoin-dev]
 =?utf-8?q?BIP_Proposal=3A_Consensus_=28hard_fork=29?=
 =?utf-8?q?_PoST_Datastore_for_Energy_Efficient_Mining?=
In-Reply-To: <CA+YkXXzOre2nhaC9gPWe0Qa30+434_vC+Q0WsVz=kxKk4HjvEg@mail.gmail.com>
Message-ID: <296-604d1600-db-42a1fb80@93437088>


My mistake for thinking your text was generated text, and my humor was not meant to be directed at you, so apologies if you took it personally.?
PS: The AI overlord is no joke
Cheers,
-Yancy

On Saturday, March 13, 2021 18:11 CET, Lonero Foundation <loneroassociation at gmail.com> wrote:
?Hi, no worries. I made the changes now in the GitHub repository and pull request. I'm hoping for a BIP # soon. Thanks for the feedback, and I guess the sense of humor.?Best regards, Andrew?On Sat, Mar 13, 2021, 10:45 AM yancy <email at yancy.lol> wrote:Ok thanks.? Using the correct terminology helps people understand what you're talking about and take you seriously.

Cheers,
-Yancy?
Mar 13, 2021 4:02:18 PM Lonero Foundation <loneroassociation at gmail.com>:Hi, I know the differences between the cryptographic hashing algorithm and key validation. I know hashing is for SHA, but was referring to?asymmetric cryptography in regards to the key validation. I should have used a different term though instead of, "In regards to cryptographic hashing,", I should have stated in regards to cryptographic key validation. There are a few other dubious clarifications or minor edits I should make in order to not draw confusion. I will do a repo update today. Honest mistake, but enough with the sarcasm.?Best regards, Andrew?On Sat, Mar 13, 2021, 3:13 AM email at yancy.lol <email at yancy.lol> wrote:
My email was not intended as an insult.? Your proposal seemed a bit like gibberish and made some obvious mistakes as pointed out before (such as conflating secp256k1 with sha256), and so I was genuinely curious if you were a bot spamming the list.?
Maybe a more interesting topic is, can GPT3 be used to generate a BIP?? How long before our AI overlord produces improvements to Bitcoin?? At what point will the AI have more than 51% of commit frequency?? Will we have lost the war to our new centralized overlord?
Cheers,
-Yancy


On Saturday, March 13, 2021 00:31 CET, Lonero Foundation <loneroassociation at gmail.com> wrote:
?Also, I already stated I was referring to signature validation cryptography in that aspect: https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/digital-signatures/ecdsa-sign-verify-examples.htmlMy BIP has a primary purpose in regards to what I want to develop proofs for and the different cryptographic elements I want to develop proofs for.That said to those who disagree with the premise, I do prefer constructive feedback over insults or making fun of one another. After all this is an improvement proposal with a specific purpose aiming to develop a specific thing, not a guy who is just wanting to copy and paste a repository and call it a day.?Best regards, Andrew?On Fri, Mar 12, 2021 at 6:21 PM Lonero Foundation <loneroassociation at gmail.com> wrote:Hi, I also want to emphasize that my main point isn't just to create a BTC hardfork or become another Bitcoin Cash, Gold, or SV. The main point in regards to this BIP actually expands POW rather than replaces or creates an alternative. Many of the problems faced in regards to security in the future as well as sustainability is something I believe lots of the changes I am proposing can fix. In regards to technological implementation, once this is assigned draft status I am more than willing to create preprints explaining the cryptography, hashing algorithm improvements, and consensus that I am working on. This is a highly technologically complex idea that I am willing to "call my bluff on" and expand upon. As for it being a draft, I think this is a good starting point at least for draft status prior to working on technological implementation.?Best regards, Andrew?On Fri, Mar 12, 2021 at 5:37 PM email at yancy.lol <email at yancy.lol> wrote:I think Andrew himself is an algo.? The crypto training set must not be very good.

Cheers,
-Yancy

On Friday, March 12, 2021 17:54 CET, Lonero Foundation via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
??


?


?


?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210313/770b3f9d/attachment.html>

From RobertSpigler at protonmail.ch  Sun Mar 14 01:51:15 2021
From: RobertSpigler at protonmail.ch (Robert Spigler)
Date: Sun, 14 Mar 2021 01:51:15 +0000
Subject: [bitcoin-dev] Signature and Script Independent Hierarchy for
	Deterministic Wallets.
Message-ID: <7z-e5nLz7_TTCW9LAKAOgEWBliTvJkq7BTpm0ARmpD_LHp9S4ETlkK1M5jfG8klRSHQiuZHl6zEhqIjbsVPgcvo12Qg6bI2wp28m01x9lXU=@protonmail.ch>

Hello,

I am working on a draft BIP for a signature and script independent hierarchy for deterministic wallets.

I believe with the implementation of descriptor wallets, the typical use case of of a BIP43 `purpose?` level per script type is redundant. The differentiation of separate BIPs for multisignature derivation paths, with BIP45 and ?BIP? 48, is also redundant ? with path levels such as `cosigner_index` and `script_type`. Descriptors can set the order of the public keys with `multi` or have them sorted lexicographically with `sortedmulti`.

I don?t believe we should be mixing keys and scripts in the same layer. The wallet should create extended private/public keys independent of the script or signature type, whereas the descriptor language tells wallets to watch (single or multi-sig) outputs with the specified public keys.

The BIP defines the following 5 levels in the BIP32 path:

m / purpose' / coin_type' / account' / change / address_index

It is crucial that the `account?` level is increased for each new wallet joined or private/public keys created; for both privacy and cryptographic purposes. For example, in multisignature wallets, before sending a new key record to a coordinator, the wallet must increment the `account?` level. Before creating it's own single signature wallet, the `account?` level must again be incremented. This prevents key reuse - across single signature and multisignature wallets, across ECDSA and Schnorr signatures, and inbetween the same wallet types.

For full details, please see the BIP here: https://github.com/Rspigler/bips-1/blob/Sane_Mulitisg_deriv/Modern%20Derivation%20Standard.mediawiki

Please see the PR here: https://github.com/Rspigler/bips-1/pull/1

Looking forward to comments.

Thank you,

Robert Spigler

Personal Fingerprint: BF0D 3C08 A439 5AC6 11C1 5395 B70B 4A77 F850 548F
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210314/1cdda930/attachment.html>

From loneroassociation at gmail.com  Sun Mar 14 05:45:53 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Sun, 14 Mar 2021 00:45:53 -0500
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <296-604d1600-db-42a1fb80@93437088>
References: <CA+YkXXzOre2nhaC9gPWe0Qa30+434_vC+Q0WsVz=kxKk4HjvEg@mail.gmail.com>
 <296-604d1600-db-42a1fb80@93437088>
Message-ID: <CA+YkXXwTEvq=Rk=iSgyrSYr-Q0G=Ov3jdMk8saUnA8q5p-aKuw@mail.gmail.com>

I have added quite a bit more details. I haven't made any UML diagrams just
yet. I did add a basic non-technical infographic though, and more then
likely making a technical UML for the cryptographic mechanisms will be on
my to-do list. I have also updated the terminology and added a bit more
content.

Best regards, Andrew

On Sat, Mar 13, 2021, 2:44 PM email at yancy.lol <email at yancy.lol> wrote:

> My mistake for thinking your text was generated text, and my humor was not
> meant to be directed at you, so apologies if you took it personally.
>
>
> PS: The AI overlord is no joke
>
> Cheers,
> -Yancy
>
> On Saturday, March 13, 2021 18:11 CET, Lonero Foundation <
> loneroassociation at gmail.com> wrote:
>
>
> Hi, no worries. I made the changes now in the GitHub repository and pull
> request. I'm hoping for a BIP # soon. Thanks for the feedback, and I guess
> the sense of humor.
>
> Best regards, Andrew
>
> On Sat, Mar 13, 2021, 10:45 AM yancy <email at yancy.lol> wrote:
>
>> Ok thanks.  Using the correct terminology helps people understand what
>> you're talking about and take you seriously.
>>
>> Cheers,
>> -Yancy
>>
>>
>> Mar 13, 2021 4:02:18 PM Lonero Foundation <loneroassociation at gmail.com>:
>>
>> Hi, I know the differences between the cryptographic hashing algorithm
>> and key validation. I know hashing is for SHA, but was referring to asymmetric
>> cryptography in regards to the key validation. I should have used a
>> different term though instead of, "In regards to cryptographic hashing,", I
>> should have stated in regards to cryptographic key validation. There are a
>> few other dubious clarifications or minor edits I should make in order to
>> not draw confusion. I will do a repo update today. Honest mistake, but
>> enough with the sarcasm.
>>
>> Best regards, Andrew
>>
>> On Sat, Mar 13, 2021, 3:13 AM email at yancy.lol <email at yancy.lol> wrote:
>>
>>> My email was not intended as an insult.  Your proposal seemed a bit like
>>> gibberish and made some obvious mistakes as pointed out before (such as
>>> conflating secp256k1 with sha256), and so I was genuinely curious if you
>>> were a bot spamming the list.
>>>
>>>
>>> Maybe a more interesting topic is, can GPT3 be used to generate a BIP?
>>> How long before our AI overlord produces improvements to Bitcoin?  At what
>>> point will the AI have more than 51% of commit frequency?  Will we have
>>> lost the war to our new centralized overlord?
>>>
>>> Cheers,
>>> -Yancy
>>>
>>>
>>> On Saturday, March 13, 2021 00:31 CET, Lonero Foundation <
>>> loneroassociation at gmail.com> wrote:
>>>
>>>
>>> Also, I already stated I was referring to signature validation
>>> cryptography in that aspect:
>>> https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/digital-signatures/ecdsa-sign-verify-examples.html
>>> My BIP has a primary purpose in regards to what I want to develop proofs
>>> for and the different cryptographic elements I want to develop proofs for.
>>> That said to those who disagree with the premise, I do prefer
>>> constructive feedback over insults or making fun of one another. After all
>>> this is an improvement proposal with a specific purpose aiming to develop a
>>> specific thing, not a guy who is just wanting to copy and paste a
>>> repository and call it a day.
>>>
>>> Best regards, Andrew
>>>
>>> On Fri, Mar 12, 2021 at 6:21 PM Lonero Foundation <
>>> loneroassociation at gmail.com> wrote:
>>>
>>>> Hi, I also want to emphasize that my main point isn't just to create a
>>>> BTC hardfork or become another Bitcoin Cash, Gold, or SV. The main point in
>>>> regards to this BIP actually expands POW rather than replaces or creates an
>>>> alternative. Many of the problems faced in regards to security in the
>>>> future as well as sustainability is something I believe lots of the changes
>>>> I am proposing can fix. In regards to technological implementation, once
>>>> this is assigned draft status I am more than willing to create preprints
>>>> explaining the cryptography, hashing algorithm improvements, and consensus
>>>> that I am working on. This is a highly technologically complex idea that I
>>>> am willing to "call my bluff on" and expand upon. As for it being a draft,
>>>> I think this is a good starting point at least for draft status prior to
>>>> working on technological implementation.
>>>>
>>>> Best regards, Andrew
>>>>
>>>> On Fri, Mar 12, 2021 at 5:37 PM email at yancy.lol <email at yancy.lol>
>>>> wrote:
>>>>
>>>>> I think Andrew himself is an algo.  The crypto training set must not
>>>>> be very good.
>>>>>
>>>>> Cheers,
>>>>> -Yancy
>>>>>
>>>>> On Friday, March 12, 2021 17:54 CET, Lonero Foundation via bitcoin-dev
>>>>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>>
>>>>>
>>>>> ?
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>
>>>>
>>>
>>>
>>>
>>
>>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210314/b10359b6/attachment-0001.html>

From willtech at live.com.au  Sun Mar 14 10:13:01 2021
From: willtech at live.com.au (LORD HIS EXCELLENCY JAMES HRMH)
Date: Sun, 14 Mar 2021 10:13:01 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <3504919A-6D19-4858-B00C-9C0FEB090DB5@voskuil.org>
References: <CAFBxzAAO1u=C8wpwvRs5evE657V0NdnSE9PYAbanpJt5ZdSkdA@mail.gmail.com>,
 <3504919A-6D19-4858-B00C-9C0FEB090DB5@voskuil.org>
Message-ID: <PS2P216MB09147F068F81F31593E06A5F9D6D9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>

Good Afternoon,

Since this is on the list I will open without my thank-you. You will
kindly be advised that my title are recorded in both Scotland and with
England, also provided by record in Australia's account with names
recorded. If you wonder than am I Wills it is because a long time
before we ever saw Wills in print with an article provided reference to
any Prince in the past thirty-years there I am Wills already. Title The
Australian was prepared a long time to my requiest to wait until it was
better presented, with at least some acquired experience in business to
understand a market like BHP services. Thereby you accept a separate
title Lord being with feudal and Lord being with the appointments
direct to the service of the monarch's house Earl and similar up to
Duke and King and higher being heard usually the monarch's preference
Your Excellency or Your Highness being His service. I have never been
any Prince. If any Prince titles came the instructions were they were
retained to be considered not accepted not refused.

If you had each fools to inquire.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au
www.go-overt.com
and other projects

earn.com/willtech
linkedin.com/in/damianwilliamson


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this
email if misdelivered.
________________________________
From: bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on behalf of Eric Voskuil via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
Sent: Saturday, 13 March 2021 9:30 AM
To: R E Broadley <rebroad+linuxfoundation.org at gmail.com>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
Subject: Re: [bitcoin-dev] Taproot NACK

I?m pretty sure it?s subtle mockery. Even a legit title doesn?t warrant additional attention.

e

> On Mar 12, 2021, at 14:02, R E Broadley via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> ?Can I just point out (to those addressing James as Lord/Excelency/etc
> that he isn't noble nor a Lord, so just wanted to mention this in case
> people were giving him more attention than the average person would be
> afforded.
>
> My 2p (an equal 2p) on Taproot is ACK, by the way.
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210314/e7e8d309/attachment-0001.html>

From willtech at live.com.au  Sun Mar 14 12:36:00 2021
From: willtech at live.com.au (LORD HIS EXCELLENCY JAMES HRMH)
Date: Sun, 14 Mar 2021 12:36:00 +0000
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CA+YkXXwfS7eer5Za_ed9tCNdfOp4c3nV_X=mfXzoDxMm6BrizQ@mail.gmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CAMnpzfop8ttqjMAKoS37zpQV6WiZfi1Bn+y_e-HaepTiD4Vm1Q@mail.gmail.com>
 <CAB0O3SVNyr_t23Y0LyT0mSaf6LONFRLYJ8qzO7rcdJFnrGccFw@mail.gmail.com>
 <CA+YkXXwkSCu=2UOEhzFBzGDHo1c=Ewqsnxp632ke3jdH1ff5WA@mail.gmail.com>,
 <CA+YkXXwfS7eer5Za_ed9tCNdfOp4c3nV_X=mfXzoDxMm6BrizQ@mail.gmail.com>
Message-ID: <PS2P216MB0914F0B05E1AAB48D9A765609D6D9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>

Good Afternoon,

It is obvious that something needs to be done to curtail the current cost of mining in kWh per block. I understand proposals are rejected because it is considered censorship and Bitcoin has a consensus to allow anyone to mine but, since mining requires specific hardware and energy requirements it is already a form of censorship where most on the planet except for the top 6% I am guessing here, cannot afford to mine. Without affecting the current algorithm, I have previously begun to explore the process by which mining can be turned into a lottery with only authorized payto addresses able to mine valid blocks, since transaction fees and block rewards exist to pay the miner. It would be better even if the algorithms are improved if there are some ways that only a subset of miners can produce valid blocks for any given period, say for 12 months with four groups starting three months apart to transition, and maybe limit mining to 50 people per continent to produce valid blocks at any one time. Possibly this requires a consortium to oversee the lottery but it is something Bitcoin can handle themselves, and would do better to handle than to wait for government intervention as we have seen previously in China where power was too cheap Bitcoin was banned entirely.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au
www.go-overt.com
and other projects

earn.com/willtech
linkedin.com/in/damianwilliamson


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
________________________________
From: bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on behalf of Lonero Foundation via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
Sent: Saturday, 6 March 2021 3:16 AM
To: Devrandom <c1.devrandom at niftybox.net>
Cc: Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
Subject: Re: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST Datastore for Energy Efficient Mining

Also in regards to my other email, I forgot to iterate that my cryptography proposal helps behind the efficiency category but also tackles problems such as NP-Completeness or Halting which is something the BTC network could be vulnerable to in the future. For sake of simplicity, I do want to do this BIP because it tackles lots of the issues in regards to this manner and can provide useful insight to the community. If things such as bigger block height have been proposed as hard forks, I feel at the very least an upgrade regarding the hashing algorithm and cryptography does at least warrant some discussion. Anyways I hope I can send you my BIP, just let me know on the preferred format?

Best regards, Andrew

On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <loneroassociation at gmail.com<mailto:loneroassociation at gmail.com>> wrote:
Hi, this isn't about the energy efficient argument in regards to renewables or mining devices but a better cryptography layer to get the most out of your hashing for validation. I do understand the arbitrariness of it, but do want to still propose a document. Do I use the Media Wiki format on GitHub and just attach it as my proposal?

Best regards, Andrew

On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net<mailto:c1.devrandom at niftybox.net>> wrote:
Hi Ryan and Andrew,

On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:

  https://www.truthcoin.info/blog/pow-cheapest/
    "Nothing is Cheaper than Proof of Work"
    on | 04 Aug 2015


Just to belabor this a bit, the paper demonstrates that the mining market will tend to expend resources equivalent to miner reward.  It does not prove that mining work has to expend *energy* as a primary cost.

Some might argue that energy expenditure has negative externalities and that we should move to other resources.  I would argue that the negative externalities will go away soon because of the move to renewables, so the point is likely moot.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210314/83f7336d/attachment.html>

From luke at dashjr.org  Mon Mar 15 02:51:46 2021
From: luke at dashjr.org (Luke Dashjr)
Date: Mon, 15 Mar 2021 02:51:46 +0000
Subject: [bitcoin-dev] Taproot activation proposal "Speedy Trial"
In-Reply-To: <5be46169-8f38-da73-4112-fba2aff6dfcb@achow101.com>
References: <20210306034343.fhwrxmq6gbb2os5m@ganymede>
 <5be46169-8f38-da73-4112-fba2aff6dfcb@achow101.com>
Message-ID: <202103150251.46902.luke@dashjr.org>

The last period before timeoutheight here overlaps with the current BIP8(True) 
deployment plan. So if this period specifically were to reach 90% signalling, 
nodes would activate Taproot at height 697536, but ST-only nodes would still 
wait until 709632 instead.

Probably the best solution is to just move this ST window 1 period earlier?

Luke


On Saturday 06 March 2021 06:04:22 Andrew Chow via bitcoin-dev wrote:
> I like this idea.
>
> In terms of actual parameters, I propose that we base this Speedy Trial
> off of BIP 8 with the following parameters:
> * start height = 681408
> * timeout height = 695520
> * lockinontimeout = False
> * signaling bit = 2
> * threshold = 1815/2016 blocks (90%)
>
> For the extended lockin period, I propose 14112 blocks, which is 7
> retarget periods. Thus the earliest activation height will be 697536 and
> the latest activation height will be 709632.
>
> This will give us an approximate start time of May 1st 2021 and an
> approximate timeout time of August 7th 2021, for a total activation
> period of just over 3 months. The extended lockin period is the same
> number of blocks as the activation period so that will also be just over
> 3 months, giving us the latest activation time of November 13th, 2021.
> If miners activated as soon as possible, the earliest activation time
> would be August 21st 2021.
>
> Additionally, this timeline assumes a mid-April release of Bitcoin Core
> 0.21.1 containing these parameters. They could be changed to move up if
> the expected release date were sooner.
>
>
> Andrew Chow
>
> On 3/5/21 10:43 PM, David A. Harding via bitcoin-dev wrote:
> > On the ##taproot-activation IRC channel, Russell O'Connor recently
> > proposed a modification of the "Let's see what happens" activation
> > proposal.[1] The idea received significant discussion and seemed
> > acceptable to several people who could not previously agree on a
> > proposal (although this doesn't necessarily make it their first
> > choice).  The following is my attempt at a description.
> >
> > 1. Start soon: shortly after the release of software containing this
> >     proposed activation logic, nodes will begin counting blocks towards
> >     the 90% threshold required to lock in taproot.[2]
> >
> > 2. Stop soon: if the lockin threshold isn't reached within approximately
> >     three months, the activation attempt fails.  There is no mandatory
> >     activation and everyone is encouraged to try again using different
> >     activation parameters.
> >
> > 2. Delayed activation: in the happy occasion where the lockin threshold
> >     is reached, taproot is guaranteed to eventually activate---but not
> >     until approximately six months after signal tracking started.
> >
> > ## Example timeline
> >
> > (All dates approximate; see the section below about BIP9 vs BIP8.)
> >
> > - T+0: release of one or more full nodes with activation code
> > - T+14: signal tracking begins
> > - T+28: earliest possible lock in
> > - T+104: locked in by this date or need to try a different activation
> > process - T+194: activation (if lockin occurred)
> >
> > ## Analysis
> >
> > The goal of Speedy Trial is to allow a taproot activation attempt to
> > either quickly succeed or quickly fail---without compromising safety in
> > either case.  Details below:
> >
> > ### Mitigating the problems of early success
> >
> > New rules added in a soft fork need to be enforced by a large part of
> > the economy or there's a risk that a long chain of blocks breaking the
> > rules will be accepted by some users and rejected by others, causing a
> > chain split that can result in large direct losses to transaction
> > receivers and potentially even larger indirect losses to holders due to
> > reduced confidence in the safety of the Bitcoin system.
> >
> > One step developers have taken in the past to ensure widespread adoption
> > of new consensus rules is programming in a delay between the time
> > software with those rules is expected to be released and when the
> > software starts tracking which blocks signal for activation.  For
> > example:
> >
> >      Soft fork        | Release    | Start      | Delta
> >      -----------------+------------+------------+----------
> >      BIP68 (v0.12.1)  | 2016-04-15 | 2016-05-11 | 26 days
> >      BIP141 (v0.13.1) | 2016-10-27 | 2016-11-18 | 24 days
> >
> >      Sources: BitcoinCore.org,
> > https://gist.github.com/ajtowns/1c5e3b8bdead01124c04c45f01c817bc
> >
> > Speedy Trial replaces most of that upfront delay with a backend delay.
> > No matter how fast taproot's activation threshold is reached by miners,
> > there will be six months between the time signal tracking starts and when
> > nodes will begin enforcing taproot's rules.  This gives the userbase even
> > more time to upgrade than if we had used the most recently proposed start
> > date for a BIP8 activation (~July 23rd).[2]
> >
> > ### Succeed, or fail fast
> >
> > The earlier version of this proposal was documented over 200 days ago[3]
> > and taproot's underlying code was merged into Bitcoin Core over 140 days
> > ago.[4]  If we had started Speedy Trial at the time taproot
> > was merged (which is a bit unrealistic), we would've either be less than
> > two months away from having taproot or we would have moved on to the
> > next activation attempt over a month ago.
> >
> > Instead, we've debated at length and don't appear to be any closer to
> > what I think is a widely acceptable solution than when the mailing list
> > began discussing post-segwit activation schemes over a year ago.[5]  I
> > think Speedy Trial is a way to generate fast progress that will either
> > end the debate (for now, if activation is successful) or give us some
> > actual data upon which to base future taproot activation proposals.
> >
> > Of course, for those who enjoy the debate, discussion can continue while
> > waiting for the results of Speedy Trial.
> >
> > ### Base activation protocol
> >
> > The idea can be implemented on top of either Bitcoin Core's existing
> > BIP9 code or its proposed BIP8 patchset.[6]
> >
> > - BIP9 uses two time-based[7] parameters, starttime and timeout.  Using
> >    these values plus a time-based parameter for the minimum activation
> >    delay would give three months for miners to activate taproot, but some
> >    of that time near the start or the end might not be usable due to
> >    signals only being measured in full retarget periods.  However, the
> >    six month time for users to upgrade their node would be not be
> >    affected by either slow or fast block production.
> >
> >      BIP9 is already part of Bitcoin Core and I think the changes being
> >      proposed would be relatively small, resulting in a small patch that
> >      could be easy to review.
> >
> > - BIP8 uses two height-based parameters, startheight and timeoutheight.
> >    Using height values would ensure miners had a certain number of
> >    retarget periods (6) to lock in taproot and that there'd be a certain
> >    number of blocks (about 24,000) until activation, although latest lock
> >    in and expected activation could occur moderately earlier or later
> >    than the estimated three and six months.
> >
> >      BIP8 would likely be used if Speedy Trial fails, so it could be
> >      advantageous to base this proposal on BIP8 so that we gain
> >      experience running that code in production.
> >
> > For additional discussion about using times versus heights, see today's
> > log for ##taproot-activation.[11]
> >
> > ### Additional concerns
> >
> > - Encourages false signaling: false signaling is when miners signal
> >    readiness to enforce rules that their nodes don't actually support.
> >    This was partially responsible for a six-block reorg shortly after the
> >    final BIP66 activation[8] and was found to still be a problem during
> >    the BIP68 lockin period despite BIP9 being designed to avoid it.[9]
> >
> >    Because Speedy Trial only gives miners a maximum of three months to
> >    signal support for taproot, it may encourage such false signaling.  If
> >    taproot locks in as a result of their signaling but most of them fail
> >    to upgrade by the activation date several months later, unprepared
> >    miners could lose large amounts of money and users could see long
> >    reorgs (with unupgraded nodes and SPV lite clients potentially losing
> >    money).
> >
> >    Compared to other activation proposals, I think the only difference is
> >    Speedy Trial's short timeline.  False signaling is possible with any
> >    other proposal and the same problems can occur if miners fail to
> >    upgrade for any mandatory activation.
> >
> > ### Additional advantages
> >
> > - No mandatory signaling: at no time are miners required to signal by
> >    Speedy Trial.  This includes no mandatory signaling during the
> >    locked_in period(s), although such signaling will be encouraged (as it
> >    was with BIP9[10]).
> >
> > - Party time: to a lesser degree, a benefit mentioned for flag day
> >    activation may also apply here: we could get up to six months
> >    advanced notice of taproot activation, allowing users, developers, and
> >    organizations to prepare software, announcements, and celebrations for
> >    that event.
> >
> > ## Implementation details and next steps
> >
> > Initial discussion about implementation may be found in today's
> > ##taproot-activation log.[11] If it appears Speedy Trial may have
> > traction, Russell O'Connor has offered to work on a patch against BIP8
> > implementing it.
> >
> > ## Acknowledgments
> >
> > The original idea for a short-duration attempt was discussed in the
> > ##taproot-activation IRC channel last July and the revised idea saw
> > additional evaluation there this week.  Despite growing frustration,
> > discussion has been overwhelmingly constructive, for which all the
> > contributors should be commended.  Although this should not in any way
> > imply endorsement, I'm grateful for the review and comments on a draft
> > of this email by Adam Gibson, Andrew Chow, Anthony Towns, Chris Belcher,
> > Jeremy Rubin, Jonas Nick, Luke Dashjr, Michael Folkson, Russell
> > O'Connor, and IRC users maybehuman and proofofkeags
> >
> > ## Footnotes
> >
> > [1]
> > https://en.bitcoin.it/wiki/Taproot_activation_proposals#Let.E2.80.99s_see
> >_what_happens.2C_BIP8.28false.2C_3m.29
> >
> > [2] A threshold of 1,815/2,016 blocks (90%) in a single retarget period
> >      seemed to have near-universal support during the 2021-02-16 IRC
> >      meeting.  See:
> > https://en.bitcoin.it/wiki/Taproot_activation_proposal_202102
> >
> > [3]
> > https://en.bitcoin.it/w/index.php?title=Taproot_activation_proposals&oldi
> >d=68062
> >
> > [4] https://github.com/bitcoin/bitcoin/pull/19953
> >
> > [5]
> > https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/0175
> >47.html
> >
> > [6] https://github.com/bitcoin/bitcoin/pull/19573
> >
> > [7] BIP9's times are based on the median of the past 11 blocks, which
> >      usually trails UTC by about 90 minutes but which can trail behind
> >      realtime significantly if miners are doing weird things.
> >
> > [8] https://en.bitcoin.it/wiki/July_2015_chain_forks
> >
> > [9] https://buildingbitcoin.org/bitcoin-core-dev/log-2016-06-21.html#l-32
> >
> > [10]
> > https://github.com/bitcoin/bitcoin/blob/ed25cb58f605ba583c735f330482df0bf
> >9348f3a/src/test/versionbits_tests.cpp#L337-L339
> >
> > [11] http://gnusha.org/taproot-activation/2021-03-05.log
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


From achow101-lists at achow101.com  Mon Mar 15 03:14:10 2021
From: achow101-lists at achow101.com (Andrew Chow)
Date: Mon, 15 Mar 2021 03:14:10 +0000
Subject: [bitcoin-dev] Taproot activation proposal "Speedy Trial"
In-Reply-To: <202103150251.46902.luke@dashjr.org>
References: <20210306034343.fhwrxmq6gbb2os5m@ganymede>
 <5be46169-8f38-da73-4112-fba2aff6dfcb@achow101.com>
 <202103150251.46902.luke@dashjr.org>
Message-ID: <f75938e8-6e81-b13b-e085-ca91971ce23f@achow101.com>

I don't think we should have a followup deployment start so close to to
timeout of ST. I think it would be better to schedule the followup
around ST, especially since the details around that are fuzzier and
dependent on the results of ST itself.

That being said, I'm not opposed to moving everything one period earlier
or shortening the activation or locked in periods, but I'm not sure if
that is the best course of action right now.

Andrew

On 3/14/21 10:51 PM, Luke Dashjr wrote:
> The last period before timeoutheight here overlaps with the current BIP8(True)
> deployment plan. So if this period specifically were to reach 90% signalling,
> nodes would activate Taproot at height 697536, but ST-only nodes would still
> wait until 709632 instead.
>
> Probably the best solution is to just move this ST window 1 period earlier?
>
> Luke
>
>
> On Saturday 06 March 2021 06:04:22 Andrew Chow via bitcoin-dev wrote:
>> I like this idea.
>>
>> In terms of actual parameters, I propose that we base this Speedy Trial
>> off of BIP 8 with the following parameters:
>> * start height = 681408
>> * timeout height = 695520
>> * lockinontimeout = False
>> * signaling bit = 2
>> * threshold = 1815/2016 blocks (90%)
>>
>> For the extended lockin period, I propose 14112 blocks, which is 7
>> retarget periods. Thus the earliest activation height will be 697536 and
>> the latest activation height will be 709632.
>>
>> This will give us an approximate start time of May 1st 2021 and an
>> approximate timeout time of August 7th 2021, for a total activation
>> period of just over 3 months. The extended lockin period is the same
>> number of blocks as the activation period so that will also be just over
>> 3 months, giving us the latest activation time of November 13th, 2021.
>> If miners activated as soon as possible, the earliest activation time
>> would be August 21st 2021.
>>
>> Additionally, this timeline assumes a mid-April release of Bitcoin Core
>> 0.21.1 containing these parameters. They could be changed to move up if
>> the expected release date were sooner.
>>
>>
>> Andrew Chow
>>
>> On 3/5/21 10:43 PM, David A. Harding via bitcoin-dev wrote:
>>> On the ##taproot-activation IRC channel, Russell O'Connor recently
>>> proposed a modification of the "Let's see what happens" activation
>>> proposal.[1] The idea received significant discussion and seemed
>>> acceptable to several people who could not previously agree on a
>>> proposal (although this doesn't necessarily make it their first
>>> choice).  The following is my attempt at a description.
>>>
>>> 1. Start soon: shortly after the release of software containing this
>>>      proposed activation logic, nodes will begin counting blocks towards
>>>      the 90% threshold required to lock in taproot.[2]
>>>
>>> 2. Stop soon: if the lockin threshold isn't reached within approximately
>>>      three months, the activation attempt fails.  There is no mandatory
>>>      activation and everyone is encouraged to try again using different
>>>      activation parameters.
>>>
>>> 2. Delayed activation: in the happy occasion where the lockin threshold
>>>      is reached, taproot is guaranteed to eventually activate---but not
>>>      until approximately six months after signal tracking started.
>>>
>>> ## Example timeline
>>>
>>> (All dates approximate; see the section below about BIP9 vs BIP8.)
>>>
>>> - T+0: release of one or more full nodes with activation code
>>> - T+14: signal tracking begins
>>> - T+28: earliest possible lock in
>>> - T+104: locked in by this date or need to try a different activation
>>> process - T+194: activation (if lockin occurred)
>>>
>>> ## Analysis
>>>
>>> The goal of Speedy Trial is to allow a taproot activation attempt to
>>> either quickly succeed or quickly fail---without compromising safety in
>>> either case.  Details below:
>>>
>>> ### Mitigating the problems of early success
>>>
>>> New rules added in a soft fork need to be enforced by a large part of
>>> the economy or there's a risk that a long chain of blocks breaking the
>>> rules will be accepted by some users and rejected by others, causing a
>>> chain split that can result in large direct losses to transaction
>>> receivers and potentially even larger indirect losses to holders due to
>>> reduced confidence in the safety of the Bitcoin system.
>>>
>>> One step developers have taken in the past to ensure widespread adoption
>>> of new consensus rules is programming in a delay between the time
>>> software with those rules is expected to be released and when the
>>> software starts tracking which blocks signal for activation.  For
>>> example:
>>>
>>>       Soft fork        | Release    | Start      | Delta
>>>       -----------------+------------+------------+----------
>>>       BIP68 (v0.12.1)  | 2016-04-15 | 2016-05-11 | 26 days
>>>       BIP141 (v0.13.1) | 2016-10-27 | 2016-11-18 | 24 days
>>>
>>>       Sources: BitcoinCore.org,
>>> https://gist.github.com/ajtowns/1c5e3b8bdead01124c04c45f01c817bc
>>>
>>> Speedy Trial replaces most of that upfront delay with a backend delay.
>>> No matter how fast taproot's activation threshold is reached by miners,
>>> there will be six months between the time signal tracking starts and when
>>> nodes will begin enforcing taproot's rules.  This gives the userbase even
>>> more time to upgrade than if we had used the most recently proposed start
>>> date for a BIP8 activation (~July 23rd).[2]
>>>
>>> ### Succeed, or fail fast
>>>
>>> The earlier version of this proposal was documented over 200 days ago[3]
>>> and taproot's underlying code was merged into Bitcoin Core over 140 days
>>> ago.[4]  If we had started Speedy Trial at the time taproot
>>> was merged (which is a bit unrealistic), we would've either be less than
>>> two months away from having taproot or we would have moved on to the
>>> next activation attempt over a month ago.
>>>
>>> Instead, we've debated at length and don't appear to be any closer to
>>> what I think is a widely acceptable solution than when the mailing list
>>> began discussing post-segwit activation schemes over a year ago.[5]  I
>>> think Speedy Trial is a way to generate fast progress that will either
>>> end the debate (for now, if activation is successful) or give us some
>>> actual data upon which to base future taproot activation proposals.
>>>
>>> Of course, for those who enjoy the debate, discussion can continue while
>>> waiting for the results of Speedy Trial.
>>>
>>> ### Base activation protocol
>>>
>>> The idea can be implemented on top of either Bitcoin Core's existing
>>> BIP9 code or its proposed BIP8 patchset.[6]
>>>
>>> - BIP9 uses two time-based[7] parameters, starttime and timeout.  Using
>>>     these values plus a time-based parameter for the minimum activation
>>>     delay would give three months for miners to activate taproot, but some
>>>     of that time near the start or the end might not be usable due to
>>>     signals only being measured in full retarget periods.  However, the
>>>     six month time for users to upgrade their node would be not be
>>>     affected by either slow or fast block production.
>>>
>>>       BIP9 is already part of Bitcoin Core and I think the changes being
>>>       proposed would be relatively small, resulting in a small patch that
>>>       could be easy to review.
>>>
>>> - BIP8 uses two height-based parameters, startheight and timeoutheight.
>>>     Using height values would ensure miners had a certain number of
>>>     retarget periods (6) to lock in taproot and that there'd be a certain
>>>     number of blocks (about 24,000) until activation, although latest lock
>>>     in and expected activation could occur moderately earlier or later
>>>     than the estimated three and six months.
>>>
>>>       BIP8 would likely be used if Speedy Trial fails, so it could be
>>>       advantageous to base this proposal on BIP8 so that we gain
>>>       experience running that code in production.
>>>
>>> For additional discussion about using times versus heights, see today's
>>> log for ##taproot-activation.[11]
>>>
>>> ### Additional concerns
>>>
>>> - Encourages false signaling: false signaling is when miners signal
>>>     readiness to enforce rules that their nodes don't actually support.
>>>     This was partially responsible for a six-block reorg shortly after the
>>>     final BIP66 activation[8] and was found to still be a problem during
>>>     the BIP68 lockin period despite BIP9 being designed to avoid it.[9]
>>>
>>>     Because Speedy Trial only gives miners a maximum of three months to
>>>     signal support for taproot, it may encourage such false signaling.  If
>>>     taproot locks in as a result of their signaling but most of them fail
>>>     to upgrade by the activation date several months later, unprepared
>>>     miners could lose large amounts of money and users could see long
>>>     reorgs (with unupgraded nodes and SPV lite clients potentially losing
>>>     money).
>>>
>>>     Compared to other activation proposals, I think the only difference is
>>>     Speedy Trial's short timeline.  False signaling is possible with any
>>>     other proposal and the same problems can occur if miners fail to
>>>     upgrade for any mandatory activation.
>>>
>>> ### Additional advantages
>>>
>>> - No mandatory signaling: at no time are miners required to signal by
>>>     Speedy Trial.  This includes no mandatory signaling during the
>>>     locked_in period(s), although such signaling will be encouraged (as it
>>>     was with BIP9[10]).
>>>
>>> - Party time: to a lesser degree, a benefit mentioned for flag day
>>>     activation may also apply here: we could get up to six months
>>>     advanced notice of taproot activation, allowing users, developers, and
>>>     organizations to prepare software, announcements, and celebrations for
>>>     that event.
>>>
>>> ## Implementation details and next steps
>>>
>>> Initial discussion about implementation may be found in today's
>>> ##taproot-activation log.[11] If it appears Speedy Trial may have
>>> traction, Russell O'Connor has offered to work on a patch against BIP8
>>> implementing it.
>>>
>>> ## Acknowledgments
>>>
>>> The original idea for a short-duration attempt was discussed in the
>>> ##taproot-activation IRC channel last July and the revised idea saw
>>> additional evaluation there this week.  Despite growing frustration,
>>> discussion has been overwhelmingly constructive, for which all the
>>> contributors should be commended.  Although this should not in any way
>>> imply endorsement, I'm grateful for the review and comments on a draft
>>> of this email by Adam Gibson, Andrew Chow, Anthony Towns, Chris Belcher,
>>> Jeremy Rubin, Jonas Nick, Luke Dashjr, Michael Folkson, Russell
>>> O'Connor, and IRC users maybehuman and proofofkeags
>>>
>>> ## Footnotes
>>>
>>> [1]
>>> https://en.bitcoin.it/wiki/Taproot_activation_proposals#Let.E2.80.99s_see
>>> _what_happens.2C_BIP8.28false.2C_3m.29
>>>
>>> [2] A threshold of 1,815/2,016 blocks (90%) in a single retarget period
>>>       seemed to have near-universal support during the 2021-02-16 IRC
>>>       meeting.  See:
>>> https://en.bitcoin.it/wiki/Taproot_activation_proposal_202102
>>>
>>> [3]
>>> https://en.bitcoin.it/w/index.php?title=Taproot_activation_proposals&oldi
>>> d=68062
>>>
>>> [4] https://github.com/bitcoin/bitcoin/pull/19953
>>>
>>> [5]
>>> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/0175
>>> 47.html
>>>
>>> [6] https://github.com/bitcoin/bitcoin/pull/19573
>>>
>>> [7] BIP9's times are based on the median of the past 11 blocks, which
>>>       usually trails UTC by about 90 minutes but which can trail behind
>>>       realtime significantly if miners are doing weird things.
>>>
>>> [8] https://en.bitcoin.it/wiki/July_2015_chain_forks
>>>
>>> [9] https://buildingbitcoin.org/bitcoin-core-dev/log-2016-06-21.html#l-32
>>>
>>> [10]
>>> https://github.com/bitcoin/bitcoin/blob/ed25cb58f605ba583c735f330482df0bf
>>> 9348f3a/src/test/versionbits_tests.cpp#L337-L339
>>>
>>> [11] http://gnusha.org/taproot-activation/2021-03-05.log
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev



From luke at dashjr.org  Mon Mar 15 17:20:04 2021
From: luke at dashjr.org (Luke Dashjr)
Date: Mon, 15 Mar 2021 17:20:04 +0000
Subject: [bitcoin-dev] Taproot activation meeting on IRC - Tuesday 16th
	March 19:00 UTC
Message-ID: <202103151720.04687.luke@dashjr.org>

At the previous meeting, there was consensus for BIP8 activation parameters 
except for LOT, assuming a release around this time. Since then, a release 
has not occurred, and the new idea of Speedy Trial has been proposed to 
preempt the original/main activation plan.

It's probably a good idea to meet up again to discuss these things and adjust 
accordingly.

Agenda:

- Speedy Trial: Can we get a comparable consensus on the proposal?
  (Note: current draft conflicts with original plan timeline)

- Main activation, post ST: Moving startheight (and timeoutheight?) later
  is probably a good idea at this point, both because too little progress has
  been made on it, and to avoid the conflict with the current ST draft.

- Making progress: To date, too few people have been involved in materialising
  the main activation plan. If it's going to move forward, more people need to
  get actively involved. This should not wait for ST to complete, unless we
  want another 4-5 month slip of the timeline.

This meeting is tentatively scheduled for *tomorrow*, March 16th at the usual 
time of 19:00 UTC, in freenode's ##Taproot-activation IRC channel. If turnout 
is too low, we can postpone it a week, but it'd be nice to get things 
resolved and moving sooner.

As a reminder, the channel is also open for ongoing discussion 24/7, and there 
is a web chat client here:

https://webchat.freenode.net/?channel=##taproot-activation

Luke

From jlrubin at mit.edu  Mon Mar 15 19:14:02 2021
From: jlrubin at mit.edu (Jeremy)
Date: Mon, 15 Mar 2021 12:14:02 -0700
Subject: [bitcoin-dev] Taproot activation meeting on IRC - Tuesday 16th
 March 19:00 UTC
In-Reply-To: <202103151720.04687.luke@dashjr.org>
References: <202103151720.04687.luke@dashjr.org>
Message-ID: <CAD5xwhginOaKomLnFML77JpGyd3hMRe2+Ep=ZGbVaa2yRj_eKw@mail.gmail.com>

Please announce such meetings with more than ~24 hours notice -- this has
happened several times and while I recognize the pace of development on
this issue I think that slotting a consensus meeting with less than 24
hours is inappropriate.

I think we should proactively postpone it a week so that there isn't an
arbitrary "too low turnout" measure and instead anyone who really wants to
be present for the meeting can plan to be.

So as not to lose momentum on having a discussion, I propose to plan to
hold a general discussion tomorrow at that time and a meeting (with the
intent of resolving issues in a more binding way) next week. It may be a
good idea to hold the time slot every other week for the next while so that
we can avoid this 24 hour thing altogether.

It sucks to lose another week but a precedent of 24 hour notice meetings
for non urgent changes is very negative.

(This isn't any comment on if ST is OK or not -- the schedules proposed for
ST thus far seem acceptable to me)

Best,

Jeremy
--
@JeremyRubin <https://twitter.com/JeremyRubin>
<https://twitter.com/JeremyRubin>


On Mon, Mar 15, 2021 at 10:20 AM Luke Dashjr via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> At the previous meeting, there was consensus for BIP8 activation
> parameters
> except for LOT, assuming a release around this time. Since then, a release
> has not occurred, and the new idea of Speedy Trial has been proposed to
> preempt the original/main activation plan.
>
> It's probably a good idea to meet up again to discuss these things and
> adjust
> accordingly.
>
> Agenda:
>
> - Speedy Trial: Can we get a comparable consensus on the proposal?
>   (Note: current draft conflicts with original plan timeline)
>
> - Main activation, post ST: Moving startheight (and timeoutheight?) later
>   is probably a good idea at this point, both because too little progress
> has
>   been made on it, and to avoid the conflict with the current ST draft.
>
> - Making progress: To date, too few people have been involved in
> materialising
>   the main activation plan. If it's going to move forward, more people
> need to
>   get actively involved. This should not wait for ST to complete, unless we
>   want another 4-5 month slip of the timeline.
>
> This meeting is tentatively scheduled for *tomorrow*, March 16th at the
> usual
> time of 19:00 UTC, in freenode's ##Taproot-activation IRC channel. If
> turnout
> is too low, we can postpone it a week, but it'd be nice to get things
> resolved and moving sooner.
>
> As a reminder, the channel is also open for ongoing discussion 24/7, and
> there
> is a web chat client here:
>
> https://webchat.freenode.net/?channel=##taproot-activation
>
> Luke
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210315/5ed0ac5d/attachment.html>

From luke at dashjr.org  Mon Mar 15 19:37:37 2021
From: luke at dashjr.org (Luke Dashjr)
Date: Mon, 15 Mar 2021 19:37:37 +0000
Subject: [bitcoin-dev] Taproot activation meeting on IRC - Tuesday 16th
	March 19:00 UTC
In-Reply-To: <CAD5xwhginOaKomLnFML77JpGyd3hMRe2+Ep=ZGbVaa2yRj_eKw@mail.gmail.com>
References: <202103151720.04687.luke@dashjr.org>
 <CAD5xwhginOaKomLnFML77JpGyd3hMRe2+Ep=ZGbVaa2yRj_eKw@mail.gmail.com>
Message-ID: <202103151937.38260.luke@dashjr.org>

While I agree 24 hours is too short notice, if someone wishes to insist on 
keeping the current timeline, software supporting it should be released 
_today_. Putting the meeting off a week would almost necessarily imply 
rejection of any desires to stick to the original plan.

So for that reason, I think we need to at least try to have a meeting 
tomorrow, at least to give anyone who won't agree to such a delay a chance to 
speak up before it's too late, and have his argument fairly considered.

We can still have a meeting next week. The idea of having one every other week 
seems like a good idea to avoid this in the future, too.

Luke


On Monday 15 March 2021 19:14:02 Jeremy wrote:
> Please announce such meetings with more than ~24 hours notice -- this has
> happened several times and while I recognize the pace of development on
> this issue I think that slotting a consensus meeting with less than 24
> hours is inappropriate.
>
> I think we should proactively postpone it a week so that there isn't an
> arbitrary "too low turnout" measure and instead anyone who really wants to
> be present for the meeting can plan to be.
>
> So as not to lose momentum on having a discussion, I propose to plan to
> hold a general discussion tomorrow at that time and a meeting (with the
> intent of resolving issues in a more binding way) next week. It may be a
> good idea to hold the time slot every other week for the next while so that
> we can avoid this 24 hour thing altogether.
>
> It sucks to lose another week but a precedent of 24 hour notice meetings
> for non urgent changes is very negative.
>
> (This isn't any comment on if ST is OK or not -- the schedules proposed for
> ST thus far seem acceptable to me)
>
> Best,
>
> Jeremy
> --
> @JeremyRubin <https://twitter.com/JeremyRubin>
> <https://twitter.com/JeremyRubin>
>
>
> On Mon, Mar 15, 2021 at 10:20 AM Luke Dashjr via bitcoin-dev <
>
> bitcoin-dev at lists.linuxfoundation.org> wrote:
> > At the previous meeting, there was consensus for BIP8 activation
> > parameters
> > except for LOT, assuming a release around this time. Since then, a
> > release has not occurred, and the new idea of Speedy Trial has been
> > proposed to preempt the original/main activation plan.
> >
> > It's probably a good idea to meet up again to discuss these things and
> > adjust
> > accordingly.
> >
> > Agenda:
> >
> > - Speedy Trial: Can we get a comparable consensus on the proposal?
> >   (Note: current draft conflicts with original plan timeline)
> >
> > - Main activation, post ST: Moving startheight (and timeoutheight?) later
> >   is probably a good idea at this point, both because too little progress
> > has
> >   been made on it, and to avoid the conflict with the current ST draft.
> >
> > - Making progress: To date, too few people have been involved in
> > materialising
> >   the main activation plan. If it's going to move forward, more people
> > need to
> >   get actively involved. This should not wait for ST to complete, unless
> > we want another 4-5 month slip of the timeline.
> >
> > This meeting is tentatively scheduled for *tomorrow*, March 16th at the
> > usual
> > time of 19:00 UTC, in freenode's ##Taproot-activation IRC channel. If
> > turnout
> > is too low, we can postpone it a week, but it'd be nice to get things
> > resolved and moving sooner.
> >
> > As a reminder, the channel is also open for ongoing discussion 24/7, and
> > there
> > is a web chat client here:
> >
> > https://webchat.freenode.net/?channel=##taproot-activation
> >
> > Luke
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


From jlrubin at mit.edu  Mon Mar 15 20:59:11 2021
From: jlrubin at mit.edu (Jeremy)
Date: Mon, 15 Mar 2021 13:59:11 -0700
Subject: [bitcoin-dev] Taproot activation meeting on IRC - Tuesday 16th
 March 19:00 UTC
In-Reply-To: <202103151937.38260.luke@dashjr.org>
References: <202103151720.04687.luke@dashjr.org>
 <CAD5xwhginOaKomLnFML77JpGyd3hMRe2+Ep=ZGbVaa2yRj_eKw@mail.gmail.com>
 <202103151937.38260.luke@dashjr.org>
Message-ID: <CAD5xwhg7-KXysYb4sT+uvnPBZm+LanERsgyOiZOyEDjo=kRjRA@mail.gmail.com>

Can you expand on the timeline issue? Which timelines are incompatible and
why?

It does seem like a release done *today* cannot happen anyways, so it
sounds like it's already too late... or do you mean beginning the release
process today?
--
@JeremyRubin <https://twitter.com/JeremyRubin>
<https://twitter.com/JeremyRubin>


On Mon, Mar 15, 2021 at 12:38 PM Luke Dashjr <luke at dashjr.org> wrote:

> While I agree 24 hours is too short notice, if someone wishes to insist on
> keeping the current timeline, software supporting it should be released
> _today_. Putting the meeting off a week would almost necessarily imply
> rejection of any desires to stick to the original plan.
>
> So for that reason, I think we need to at least try to have a meeting
> tomorrow, at least to give anyone who won't agree to such a delay a chance
> to
> speak up before it's too late, and have his argument fairly considered.
>
> We can still have a meeting next week. The idea of having one every other
> week
> seems like a good idea to avoid this in the future, too.
>
> Luke
>
>
> On Monday 15 March 2021 19:14:02 Jeremy wrote:
> > Please announce such meetings with more than ~24 hours notice -- this has
> > happened several times and while I recognize the pace of development on
> > this issue I think that slotting a consensus meeting with less than 24
> > hours is inappropriate.
> >
> > I think we should proactively postpone it a week so that there isn't an
> > arbitrary "too low turnout" measure and instead anyone who really wants
> to
> > be present for the meeting can plan to be.
> >
> > So as not to lose momentum on having a discussion, I propose to plan to
> > hold a general discussion tomorrow at that time and a meeting (with the
> > intent of resolving issues in a more binding way) next week. It may be a
> > good idea to hold the time slot every other week for the next while so
> that
> > we can avoid this 24 hour thing altogether.
> >
> > It sucks to lose another week but a precedent of 24 hour notice meetings
> > for non urgent changes is very negative.
> >
> > (This isn't any comment on if ST is OK or not -- the schedules proposed
> for
> > ST thus far seem acceptable to me)
> >
> > Best,
> >
> > Jeremy
> > --
> > @JeremyRubin <https://twitter.com/JeremyRubin>
> > <https://twitter.com/JeremyRubin>
> >
> >
> > On Mon, Mar 15, 2021 at 10:20 AM Luke Dashjr via bitcoin-dev <
> >
> > bitcoin-dev at lists.linuxfoundation.org> wrote:
> > > At the previous meeting, there was consensus for BIP8 activation
> > > parameters
> > > except for LOT, assuming a release around this time. Since then, a
> > > release has not occurred, and the new idea of Speedy Trial has been
> > > proposed to preempt the original/main activation plan.
> > >
> > > It's probably a good idea to meet up again to discuss these things and
> > > adjust
> > > accordingly.
> > >
> > > Agenda:
> > >
> > > - Speedy Trial: Can we get a comparable consensus on the proposal?
> > >   (Note: current draft conflicts with original plan timeline)
> > >
> > > - Main activation, post ST: Moving startheight (and timeoutheight?)
> later
> > >   is probably a good idea at this point, both because too little
> progress
> > > has
> > >   been made on it, and to avoid the conflict with the current ST draft.
> > >
> > > - Making progress: To date, too few people have been involved in
> > > materialising
> > >   the main activation plan. If it's going to move forward, more people
> > > need to
> > >   get actively involved. This should not wait for ST to complete,
> unless
> > > we want another 4-5 month slip of the timeline.
> > >
> > > This meeting is tentatively scheduled for *tomorrow*, March 16th at the
> > > usual
> > > time of 19:00 UTC, in freenode's ##Taproot-activation IRC channel. If
> > > turnout
> > > is too low, we can postpone it a week, but it'd be nice to get things
> > > resolved and moving sooner.
> > >
> > > As a reminder, the channel is also open for ongoing discussion 24/7,
> and
> > > there
> > > is a web chat client here:
> > >
> > > https://webchat.freenode.net/?channel=##taproot-activation
> > >
> > > Luke
> > > _______________________________________________
> > > bitcoin-dev mailing list
> > > bitcoin-dev at lists.linuxfoundation.org
> > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210315/1ffca965/attachment-0001.html>

From luke at dashjr.org  Mon Mar 15 21:46:35 2021
From: luke at dashjr.org (Luke Dashjr)
Date: Mon, 15 Mar 2021 21:46:35 +0000
Subject: [bitcoin-dev] Taproot activation meeting on IRC - Tuesday 16th
	March 19:00 UTC
In-Reply-To: <CAD5xwhg7-KXysYb4sT+uvnPBZm+LanERsgyOiZOyEDjo=kRjRA@mail.gmail.com>
References: <202103151720.04687.luke@dashjr.org>
 <202103151937.38260.luke@dashjr.org>
 <CAD5xwhg7-KXysYb4sT+uvnPBZm+LanERsgyOiZOyEDjo=kRjRA@mail.gmail.com>
Message-ID: <202103152146.35961.luke@dashjr.org>

I am referring to the timeline and recommendation from the meeting on February 
16th, which has been slowly making progress toward a release:

https://en.bitcoin.it/wiki/Taproot_activation_proposal_202102

The first period from height 693504-695520 here overlaps with the last period 
of AChow's ST pull request.

A release today is impossible of course. But 1 or 2 days late is nothing 
compared to waiting a week and not having even gotten started. :)
I expect/hope that there will be consensus to adapt around ST, shifting 
everything later, but I'm just one person.

roconnor pointed out that the best solution is probably to just enclose ST's 
timeline; something like this:

https://github.com/BitcoinActivation/BitcoinTaproot.org/pull/3/files#diff-e43ac101b32b6804209cfdf26da4d122e54b994eb7f1538d4378f6a508dab817L529

Luke



On Monday 15 March 2021 20:59:11 Jeremy wrote:
> Can you expand on the timeline issue? Which timelines are incompatible and
> why?
>
> It does seem like a release done *today* cannot happen anyways, so it
> sounds like it's already too late... or do you mean beginning the release
> process today?
> --
> @JeremyRubin <https://twitter.com/JeremyRubin>
> <https://twitter.com/JeremyRubin>
>
> On Mon, Mar 15, 2021 at 12:38 PM Luke Dashjr <luke at dashjr.org> wrote:
> > While I agree 24 hours is too short notice, if someone wishes to insist
> > on keeping the current timeline, software supporting it should be
> > released _today_. Putting the meeting off a week would almost necessarily
> > imply rejection of any desires to stick to the original plan.
> >
> > So for that reason, I think we need to at least try to have a meeting
> > tomorrow, at least to give anyone who won't agree to such a delay a
> > chance to
> > speak up before it's too late, and have his argument fairly considered.
> >
> > We can still have a meeting next week. The idea of having one every other
> > week
> > seems like a good idea to avoid this in the future, too.
> >
> > Luke
> >
> > On Monday 15 March 2021 19:14:02 Jeremy wrote:
> > > Please announce such meetings with more than ~24 hours notice -- this
> > > has happened several times and while I recognize the pace of
> > > development on this issue I think that slotting a consensus meeting
> > > with less than 24 hours is inappropriate.
> > >
> > > I think we should proactively postpone it a week so that there isn't an
> > > arbitrary "too low turnout" measure and instead anyone who really wants
> >
> > to
> >
> > > be present for the meeting can plan to be.
> > >
> > > So as not to lose momentum on having a discussion, I propose to plan to
> > > hold a general discussion tomorrow at that time and a meeting (with the
> > > intent of resolving issues in a more binding way) next week. It may be
> > > a good idea to hold the time slot every other week for the next while
> > > so
> >
> > that
> >
> > > we can avoid this 24 hour thing altogether.
> > >
> > > It sucks to lose another week but a precedent of 24 hour notice
> > > meetings for non urgent changes is very negative.
> > >
> > > (This isn't any comment on if ST is OK or not -- the schedules proposed
> >
> > for
> >
> > > ST thus far seem acceptable to me)
> > >
> > > Best,
> > >
> > > Jeremy
> > > --
> > > @JeremyRubin <https://twitter.com/JeremyRubin>
> > > <https://twitter.com/JeremyRubin>
> > >
> > >
> > > On Mon, Mar 15, 2021 at 10:20 AM Luke Dashjr via bitcoin-dev <
> > >
> > > bitcoin-dev at lists.linuxfoundation.org> wrote:
> > > > At the previous meeting, there was consensus for BIP8 activation
> > > > parameters
> > > > except for LOT, assuming a release around this time. Since then, a
> > > > release has not occurred, and the new idea of Speedy Trial has been
> > > > proposed to preempt the original/main activation plan.
> > > >
> > > > It's probably a good idea to meet up again to discuss these things
> > > > and adjust
> > > > accordingly.
> > > >
> > > > Agenda:
> > > >
> > > > - Speedy Trial: Can we get a comparable consensus on the proposal?
> > > >   (Note: current draft conflicts with original plan timeline)
> > > >
> > > > - Main activation, post ST: Moving startheight (and timeoutheight?)
> >
> > later
> >
> > > >   is probably a good idea at this point, both because too little
> >
> > progress
> >
> > > > has
> > > >   been made on it, and to avoid the conflict with the current ST
> > > > draft.
> > > >
> > > > - Making progress: To date, too few people have been involved in
> > > > materialising
> > > >   the main activation plan. If it's going to move forward, more
> > > > people need to
> > > >   get actively involved. This should not wait for ST to complete,
> >
> > unless
> >
> > > > we want another 4-5 month slip of the timeline.
> > > >
> > > > This meeting is tentatively scheduled for *tomorrow*, March 16th at
> > > > the usual
> > > > time of 19:00 UTC, in freenode's ##Taproot-activation IRC channel. If
> > > > turnout
> > > > is too low, we can postpone it a week, but it'd be nice to get things
> > > > resolved and moving sooner.
> > > >
> > > > As a reminder, the channel is also open for ongoing discussion 24/7,
> >
> > and
> >
> > > > there
> > > > is a web chat client here:
> > > >
> > > > https://webchat.freenode.net/?channel=##taproot-activation
> > > >
> > > > Luke
> > > > _______________________________________________
> > > > bitcoin-dev mailing list
> > > > bitcoin-dev at lists.linuxfoundation.org
> > > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


From luke at dashjr.org  Mon Mar 15 21:48:15 2021
From: luke at dashjr.org (Luke Dashjr)
Date: Mon, 15 Mar 2021 21:48:15 +0000
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
Message-ID: <202103152148.15477.luke@dashjr.org>

I do not personally see this as a reason to NACK Taproot, but it has become 
clear to me over the past week or so that many others are unaware of this 
tradeoff, so I am sharing it here to ensure the wider community is aware of 
it and can make their own judgements.

Mark Friedenbach explains on his blog:
    https://freicoin.substack.com/p/why-im-against-taproot

In short, Taproot loses an important safety protection against quantum.
Note that in all circumstances, Bitcoin is endangered when QC becomes a 
reality, but pre-Taproot, it is possible for the network to "pause" while a 
full quantum-safe fix is developed, and then resume transacting. With Taproot 
as-is, it could very well become an unrecoverable situation if QC go online 
prior to having a full quantum-safe solution.

Also, what I didn't know myself until today, is that we do not actually gain 
anything from this: the features proposed to make use of the raw keys being 
public prior to spending can be implemented with hashed keys as well.
It would use significantly more CPU time and bandwidth (between private 
parties, not on-chain), but there should be no shortage of that for anyone 
running a full node (indeed, CPU time is freed up by Taproot!); at worst, it 
would create an incentive for more people to use their own full node, which 
is a good thing!

Despite this, I still don't think it's a reason to NACK Taproot: it should be 
fairly trivial to add a hash on top in an additional softfork and fix this.

In addition to the points made by Mark, I also want to add two more, in 
response to Pieter's "you can't claim much security if 37% of the supply is 
at risk" argument. This argument is based in part on the fact that many 
people reuse Bitcoin invoice addresses.

First, so long as we have hash-based addresses as a best practice, we can 
continue to shrink the percentage of bitcoins affected through social efforts 
discouraging address use. If the standard loses the hash, the situation 
cannot be improved, and will indeed only get worse.

Second, when/if quantum does compromise these coins, so long as they are 
neglected or abandoned/lost coins (inherent in the current model), it can be 
seen as equivalent to Bitcoin mining. At the end of the day, 37% of supply 
minable by QCs is really no different than 37% minable by ASICs. (We've seen 
far higher %s available for mining obviously.)

To conclude, I recommend anyone using Bitcoin to read Mark's article, my 
thoughts, and any other arguments on the topic; decide if this is a concern 
to you, and make your own post(s) accordingly. Mark has conceded the argument 
(AFAIK he doesn't have an interest in bitcoins anyway), and I do not consider 
it a showstopper - so if anyone else out there does, please make yourself 
known ASAP since Taproot has already moved on to the activation phase and it 
is likely software will be released within the next month or two as things 
stand.

Luke

From lf-lists at mattcorallo.com  Mon Mar 15 22:05:45 2021
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Mon, 15 Mar 2021 18:05:45 -0400
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <202103152148.15477.luke@dashjr.org>
References: <202103152148.15477.luke@dashjr.org>
Message-ID: <a88cd471-fdc9-de35-86cd-595b387249c8@mattcorallo.com>

There have been many threads on this before, I'm not sure anything new has been brought up here.

Matt

On 3/15/21 17:48, Luke Dashjr via bitcoin-dev wrote:
> I do not personally see this as a reason to NACK Taproot, but it has become
> clear to me over the past week or so that many others are unaware of this
> tradeoff, so I am sharing it here to ensure the wider community is aware of
> it and can make their own judgements.

Note that this is most definitely *not* news to this list, eg, Anthony brought it up in "Schnorr and taproot (etc) 
upgrade" and there was a whole thread on it in "Taproot: Privacy preserving switchable scripting". This issue has been 
beaten to death, I'm not sure why we need to keep hitting the poor horse corpse.

> 
> In short, Taproot loses an important safety protection against quantum.
> Note that in all circumstances, Bitcoin is endangered when QC becomes a
> reality, but pre-Taproot, it is possible for the network to "pause" while a
> full quantum-safe fix is developed, and then resume transacting. With Taproot
> as-is, it could very well become an unrecoverable situation if QC go online
> prior to having a full quantum-safe solution.

This has been discussed ad nauseam, and it all seems to fall apart once its noted just how much Bitcoin could be stolen 
by any QC-wielding attacker due to address reuse. Ultimately, no "pause" can solve this issue, and, if we learned about 
a QC attacker overnight (instead of slowly over time), there isn't anything that a non-Taproot Bitcoin could do that a 
Taproot Bitcoin couldn't.

> Also, what I didn't know myself until today, is that we do not actually gain
> anything from this: the features proposed to make use of the raw keys being
> public prior to spending can be implemented with hashed keys as well.
> It would use significantly more CPU time and bandwidth (between private
> parties, not on-chain), but there should be no shortage of that for anyone
> running a full node (indeed, CPU time is freed up by Taproot!); at worst, it
> would create an incentive for more people to use their own full node, which
> is a good thing!

This is untrue. The storage space required for Taproot transactions is materially reduced by avoiding the hash indirection.

> Despite this, I still don't think it's a reason to NACK Taproot: it should be
> fairly trivial to add a hash on top in an additional softfork and fix this.

For the reason stated above, i think such a fork is unlikely.

> In addition to the points made by Mark, I also want to add two more, in
> response to Pieter's "you can't claim much security if 37% of the supply is
> at risk" argument. This argument is based in part on the fact that many
> people reuse Bitcoin invoice addresses.
> 
> First, so long as we have hash-based addresses as a best practice, we can
> continue to shrink the percentage of bitcoins affected through social efforts
> discouraging address use. If the standard loses the hash, the situation
> cannot be improved, and will indeed only get worse.

I truly wish this were the case, but we've been beating that drum for at least nine years and still haven't solved it. 
Worse, there's a lot of old coins that are unlikely to move any time soon that are exposed whether we like it or not.

> Second, when/if quantum does compromise these coins, so long as they are
> neglected or abandoned/lost coins (inherent in the current model), it can be
> seen as equivalent to Bitcoin mining. At the end of the day, 37% of supply
> minable by QCs is really no different than 37% minable by ASICs. (We've seen
> far higher %s available for mining obviously.)

Except its not? One entity would be able to steal that entire block of supply rather quickly (presumably over the course 
of a few days, at maximum), instead of a slow process with significant upfront real-world cost in the form of electricity.

From jlrubin at mit.edu  Mon Mar 15 22:40:07 2021
From: jlrubin at mit.edu (Jeremy)
Date: Mon, 15 Mar 2021 15:40:07 -0700
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <a88cd471-fdc9-de35-86cd-595b387249c8@mattcorallo.com>
References: <202103152148.15477.luke@dashjr.org>
 <a88cd471-fdc9-de35-86cd-595b387249c8@mattcorallo.com>
Message-ID: <CAD5xwhi82fjRB4Ceb6Gnp+LvTweWjwFRmWU5zD-3o6s_GoEvPw@mail.gmail.com>

I think Luke is pointing out that with the Signature and the Message you
should be able to recover the key.

if your address is H(P) and the message is H(H(P) || txn), then the you can
use the public H(P) and the signature to recover the PK and verify that
H(P) == P (I think you then don't even have to check the signature after
doing that).

Therefore there is no storage benefit.

For the script path case, you might have to pay a little bit extra though
as you'd have to reveal P I think? But perhaps that can be avoided another
way...
--
@JeremyRubin <https://twitter.com/JeremyRubin>
<https://twitter.com/JeremyRubin>


On Mon, Mar 15, 2021 at 3:06 PM Matt Corallo via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> There have been many threads on this before, I'm not sure anything new has
> been brought up here.
>
> Matt
>
> On 3/15/21 17:48, Luke Dashjr via bitcoin-dev wrote:
> > I do not personally see this as a reason to NACK Taproot, but it has
> become
> > clear to me over the past week or so that many others are unaware of this
> > tradeoff, so I am sharing it here to ensure the wider community is aware
> of
> > it and can make their own judgements.
>
> Note that this is most definitely *not* news to this list, eg, Anthony
> brought it up in "Schnorr and taproot (etc)
> upgrade" and there was a whole thread on it in "Taproot: Privacy
> preserving switchable scripting". This issue has been
> beaten to death, I'm not sure why we need to keep hitting the poor horse
> corpse.
>
> >
> > In short, Taproot loses an important safety protection against quantum.
> > Note that in all circumstances, Bitcoin is endangered when QC becomes a
> > reality, but pre-Taproot, it is possible for the network to "pause"
> while a
> > full quantum-safe fix is developed, and then resume transacting. With
> Taproot
> > as-is, it could very well become an unrecoverable situation if QC go
> online
> > prior to having a full quantum-safe solution.
>
> This has been discussed ad nauseam, and it all seems to fall apart once
> its noted just how much Bitcoin could be stolen
> by any QC-wielding attacker due to address reuse. Ultimately, no "pause"
> can solve this issue, and, if we learned about
> a QC attacker overnight (instead of slowly over time), there isn't
> anything that a non-Taproot Bitcoin could do that a
> Taproot Bitcoin couldn't.
>
> > Also, what I didn't know myself until today, is that we do not actually
> gain
> > anything from this: the features proposed to make use of the raw keys
> being
> > public prior to spending can be implemented with hashed keys as well.
> > It would use significantly more CPU time and bandwidth (between private
> > parties, not on-chain), but there should be no shortage of that for
> anyone
> > running a full node (indeed, CPU time is freed up by Taproot!); at
> worst, it
> > would create an incentive for more people to use their own full node,
> which
> > is a good thing!
>
> This is untrue. The storage space required for Taproot transactions is
> materially reduced by avoiding the hash indirection.
>
> > Despite this, I still don't think it's a reason to NACK Taproot: it
> should be
> > fairly trivial to add a hash on top in an additional softfork and fix
> this.
>
> For the reason stated above, i think such a fork is unlikely.
>
> > In addition to the points made by Mark, I also want to add two more, in
> > response to Pieter's "you can't claim much security if 37% of the supply
> is
> > at risk" argument. This argument is based in part on the fact that many
> > people reuse Bitcoin invoice addresses.
> >
> > First, so long as we have hash-based addresses as a best practice, we can
> > continue to shrink the percentage of bitcoins affected through social
> efforts
> > discouraging address use. If the standard loses the hash, the situation
> > cannot be improved, and will indeed only get worse.
>
> I truly wish this were the case, but we've been beating that drum for at
> least nine years and still haven't solved it.
> Worse, there's a lot of old coins that are unlikely to move any time soon
> that are exposed whether we like it or not.
>
> > Second, when/if quantum does compromise these coins, so long as they are
> > neglected or abandoned/lost coins (inherent in the current model), it
> can be
> > seen as equivalent to Bitcoin mining. At the end of the day, 37% of
> supply
> > minable by QCs is really no different than 37% minable by ASICs. (We've
> seen
> > far higher %s available for mining obviously.)
>
> Except its not? One entity would be able to steal that entire block of
> supply rather quickly (presumably over the course
> of a few days, at maximum), instead of a slow process with significant
> upfront real-world cost in the form of electricity.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210315/7b7aea3f/attachment-0001.html>

From lf-lists at mattcorallo.com  Mon Mar 15 22:48:21 2021
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Mon, 15 Mar 2021 18:48:21 -0400
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <CAD5xwhi82fjRB4Ceb6Gnp+LvTweWjwFRmWU5zD-3o6s_GoEvPw@mail.gmail.com>
References: <202103152148.15477.luke@dashjr.org>
 <a88cd471-fdc9-de35-86cd-595b387249c8@mattcorallo.com>
 <CAD5xwhi82fjRB4Ceb6Gnp+LvTweWjwFRmWU5zD-3o6s_GoEvPw@mail.gmail.com>
Message-ID: <a4b9df55-b95b-9c95-62ea-7bf6eeec113d@mattcorallo.com>

Right, you can avoid the storage cost at the cost of significantly higher CPU usage, plus lack of ability to 
batch-validate. As Robert pointed out in a neighboring mail, it also reduces ability to do other, fancier, protocols 
using the fact that public keys are now a public part of a script_pubkey.

Overall, the tradeoffs here seem ludicrous, given that any QC issues in Bitcoin need to be solved in another way, and 
can't practically be solved by just relying on the existing hash indirection.

Matt

On 3/15/21 18:40, Jeremy wrote:
> I think Luke is pointing out that with the Signature and the Message you should be able to recover the key.
> 
> if your address is H(P) and the message is H(H(P) || txn), then the you can use the public H(P) and the signature to 
> recover the PK and verify that H(P) == P (I think you then don't even have to check the signature after doing that).
> 
> Therefore there is no storage benefit.
> 
> For the script path case, you might have to pay a little bit extra though as you'd have to reveal P I think? But perhaps 
> that can be avoided another way...
> --
> @JeremyRubin <https://twitter.com/JeremyRubin><https://twitter.com/JeremyRubin>
> 
> 
> On Mon, Mar 15, 2021 at 3:06 PM Matt Corallo via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org 
> <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
> 
>     There have been many threads on this before, I'm not sure anything new has been brought up here.
> 
>     Matt
> 
>     On 3/15/21 17:48, Luke Dashjr via bitcoin-dev wrote:
>      > I do not personally see this as a reason to NACK Taproot, but it has become
>      > clear to me over the past week or so that many others are unaware of this
>      > tradeoff, so I am sharing it here to ensure the wider community is aware of
>      > it and can make their own judgements.
> 
>     Note that this is most definitely *not* news to this list, eg, Anthony brought it up in "Schnorr and taproot (etc)
>     upgrade" and there was a whole thread on it in "Taproot: Privacy preserving switchable scripting". This issue has been
>     beaten to death, I'm not sure why we need to keep hitting the poor horse corpse.
> 
>      >
>      > In short, Taproot loses an important safety protection against quantum.
>      > Note that in all circumstances, Bitcoin is endangered when QC becomes a
>      > reality, but pre-Taproot, it is possible for the network to "pause" while a
>      > full quantum-safe fix is developed, and then resume transacting. With Taproot
>      > as-is, it could very well become an unrecoverable situation if QC go online
>      > prior to having a full quantum-safe solution.
> 
>     This has been discussed ad nauseam, and it all seems to fall apart once its noted just how much Bitcoin could be stolen
>     by any QC-wielding attacker due to address reuse. Ultimately, no "pause" can solve this issue, and, if we learned about
>     a QC attacker overnight (instead of slowly over time), there isn't anything that a non-Taproot Bitcoin could do that a
>     Taproot Bitcoin couldn't.
> 
>      > Also, what I didn't know myself until today, is that we do not actually gain
>      > anything from this: the features proposed to make use of the raw keys being
>      > public prior to spending can be implemented with hashed keys as well.
>      > It would use significantly more CPU time and bandwidth (between private
>      > parties, not on-chain), but there should be no shortage of that for anyone
>      > running a full node (indeed, CPU time is freed up by Taproot!); at worst, it
>      > would create an incentive for more people to use their own full node, which
>      > is a good thing!
> 
>     This is untrue. The storage space required for Taproot transactions is materially reduced by avoiding the hash
>     indirection.
> 
>      > Despite this, I still don't think it's a reason to NACK Taproot: it should be
>      > fairly trivial to add a hash on top in an additional softfork and fix this.
> 
>     For the reason stated above, i think such a fork is unlikely.
> 
>      > In addition to the points made by Mark, I also want to add two more, in
>      > response to Pieter's "you can't claim much security if 37% of the supply is
>      > at risk" argument. This argument is based in part on the fact that many
>      > people reuse Bitcoin invoice addresses.
>      >
>      > First, so long as we have hash-based addresses as a best practice, we can
>      > continue to shrink the percentage of bitcoins affected through social efforts
>      > discouraging address use. If the standard loses the hash, the situation
>      > cannot be improved, and will indeed only get worse.
> 
>     I truly wish this were the case, but we've been beating that drum for at least nine years and still haven't solved it.
>     Worse, there's a lot of old coins that are unlikely to move any time soon that are exposed whether we like it or not.
> 
>      > Second, when/if quantum does compromise these coins, so long as they are
>      > neglected or abandoned/lost coins (inherent in the current model), it can be
>      > seen as equivalent to Bitcoin mining. At the end of the day, 37% of supply
>      > minable by QCs is really no different than 37% minable by ASICs. (We've seen
>      > far higher %s available for mining obviously.)
> 
>     Except its not? One entity would be able to steal that entire block of supply rather quickly (presumably over the
>     course
>     of a few days, at maximum), instead of a slow process with significant upfront real-world cost in the form of
>     electricity.
>     _______________________________________________
>     bitcoin-dev mailing list
>     bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>
>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>     <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
> 

From karljohan-alm at garage.co.jp  Mon Mar 15 23:01:47 2021
From: karljohan-alm at garage.co.jp (Karl-Johan Alm)
Date: Tue, 16 Mar 2021 08:01:47 +0900
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <a4b9df55-b95b-9c95-62ea-7bf6eeec113d@mattcorallo.com>
References: <202103152148.15477.luke@dashjr.org>
 <a88cd471-fdc9-de35-86cd-595b387249c8@mattcorallo.com>
 <CAD5xwhi82fjRB4Ceb6Gnp+LvTweWjwFRmWU5zD-3o6s_GoEvPw@mail.gmail.com>
 <a4b9df55-b95b-9c95-62ea-7bf6eeec113d@mattcorallo.com>
Message-ID: <CALJw2w4hBk1pZrV7E6FNDPDCWH=T_S6qAHGKvRC6JsT9iZevfg@mail.gmail.com>

On Tue, 16 Mar 2021 at 07:48, Matt Corallo via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> Overall, the tradeoffs here seem ludicrous, given that any QC issues in Bitcoin need to be solved in another way, and
> can't practically be solved by just relying on the existing hash indirection.

The important distinction here is that, with hashes, an attacker has
to race against the spending transaction confirming, whereas with
naked pubkeys, the attacker doesn't have to wait for a spend to occur,
drastically increasing the available time to attack.

It may initially take months to break a single key. In such a
scenario, anyone with a hashed pubkey would be completely safe* (even
at spend time), until that speeds up significantly, while Super Secure
Exchange X with an ultra-cold 38-of-38 multisig setup using Taproot
would have a timer ticking, since the attacker need only find a single
privkey like with any old P2PK output.

(* assuming no address reuse)

From apoelstra at wpsoftware.net  Mon Mar 15 23:12:18 2021
From: apoelstra at wpsoftware.net (Andrew Poelstra)
Date: Mon, 15 Mar 2021 23:12:18 +0000
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <202103152148.15477.luke@dashjr.org>
References: <202103152148.15477.luke@dashjr.org>
Message-ID: <YE/p0u3gp4UYNS7R@camus>

On Mon, Mar 15, 2021 at 09:48:15PM +0000, Luke Dashjr via bitcoin-dev wrote:
> Also, what I didn't know myself until today, is that we do not actually gain 
> anything from this: the features proposed to make use of the raw keys being 
> public prior to spending can be implemented with hashed keys as well.
> It would use significantly more CPU time and bandwidth (between private 
> parties, not on-chain), but there should be no shortage of that for anyone 
> running a full node (indeed, CPU time is freed up by Taproot!); at worst, it 
> would create an incentive for more people to use their own full node, which 
> is a good thing!
> 

"No gain" except to save significant CPU time and bandwidth? As Matt points
out there is also a storage hit (unless you want to _really_ waste CPU time
by using pubkey recovery, eliminating any hope of batch validation while
introducing a new dependency on an algorithm with a very unclear patent
story).

Having exposed keys also lets you do ring signatures over outputs, creating the
ability to do private proof of funds via Provisions.

> Despite this, I still don't think it's a reason to NACK Taproot: it should be 
> fairly trivial to add a hash on top in an additional softfork and fix this.
> 

This would make Bitcoin strictly worse.

> In addition to the points made by Mark, I also want to add two more, in 
> response to Pieter's "you can't claim much security if 37% of the supply is 
> at risk" argument. This argument is based in part on the fact that many 
> people reuse Bitcoin invoice addresses.
> 

37% is a dramatic understatement. Every address which is derived using BIP32
should be assumed compromised to a QC attacker because xpubs are not treated
like secret key material and are trivial to e.g. extract from hardware wallets
or PSBTs. I expect the real number is close to 100%.


In any case, Taproot keys, when used according to the recommendation in
BIP-0341, are already hashes of their internal keys, so (a) Taproot outputs
actually have better quantum resistance than legacy outputs; and (b) adding
another hash would be strictly redundant.

-- 
Andrew Poelstra
Director of Research, Blockstream
Email: apoelstra at wpsoftware.net
Web:   https://www.wpsoftware.net/andrew

The sun is always shining in space
    -Justin Lewis-Webster

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 488 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210315/386e13df/attachment.sig>

From lf-lists at mattcorallo.com  Mon Mar 15 23:19:22 2021
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Mon, 15 Mar 2021 19:19:22 -0400
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <CALJw2w4hBk1pZrV7E6FNDPDCWH=T_S6qAHGKvRC6JsT9iZevfg@mail.gmail.com>
References: <202103152148.15477.luke@dashjr.org>
 <a88cd471-fdc9-de35-86cd-595b387249c8@mattcorallo.com>
 <CAD5xwhi82fjRB4Ceb6Gnp+LvTweWjwFRmWU5zD-3o6s_GoEvPw@mail.gmail.com>
 <a4b9df55-b95b-9c95-62ea-7bf6eeec113d@mattcorallo.com>
 <CALJw2w4hBk1pZrV7E6FNDPDCWH=T_S6qAHGKvRC6JsT9iZevfg@mail.gmail.com>
Message-ID: <36e4177f-77c5-be1d-7fa7-eca3d594bc37@mattcorallo.com>

Right, totally. There was substantial debate on the likelihood of such a QC existing (ie a slow one) on the original 
thread several years ago, but ignoring that, my broader point was about the address reuse issue. Given that, there's 
just not much we can do with the existing hash-indirection.

Matt

On 3/15/21 19:01, Karl-Johan Alm via bitcoin-dev wrote:
> On Tue, 16 Mar 2021 at 07:48, Matt Corallo via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>> Overall, the tradeoffs here seem ludicrous, given that any QC issues in Bitcoin need to be solved in another way, and
>> can't practically be solved by just relying on the existing hash indirection.
> 
> The important distinction here is that, with hashes, an attacker has
> to race against the spending transaction confirming, whereas with
> naked pubkeys, the attacker doesn't have to wait for a spend to occur,
> drastically increasing the available time to attack.
> 
> It may initially take months to break a single key. In such a
> scenario, anyone with a hashed pubkey would be completely safe* (even
> at spend time), until that speeds up significantly, while Super Secure
> Exchange X with an ultra-cold 38-of-38 multisig setup using Taproot
> would have a timer ticking, since the attacker need only find a single
> privkey like with any old P2PK output.
> 
> (* assuming no address reuse)
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

From dave at dtrt.org  Tue Mar 16 00:24:01 2021
From: dave at dtrt.org (David A. Harding)
Date: Mon, 15 Mar 2021 14:24:01 -1000
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <202103152148.15477.luke@dashjr.org>
References: <202103152148.15477.luke@dashjr.org>
Message-ID: <20210316002401.zlfbc3y2s7vbrh35@ganymede>

On Mon, Mar 15, 2021 at 09:48:15PM +0000, Luke Dashjr via bitcoin-dev wrote:
> Note that in all circumstances, Bitcoin is endangered when QC becomes
> a reality [...] it could very well become an unrecoverable situation
> if QC go online prior to having a full quantum-safe solution.

The main concern seems to be someone developing, in secret, a quantum
computer with enough capacity to compromise millions of keys and then
deciding to use the most powerful and (probably) expensive computer ever
developed to steal coins that will almost immediately lose most or all
of their value.

That's certainly a threat we should consider, but like other "movie
plot" threats, I think we should weigh its unlikeliness in comparison
to the people who are losing smaller amounts of money on a regular basis
right now because we don't already have taproot---people who don't use
multisig, or contracts with threshold reduction timeout clauses, or
certain types of covenants because the contingencies these types of
scripts protect against come at too great a cost in fees for the typical
case where no contingencies are needed.

We have many ideas about how to mitigate the risk of effective quantum
computing attacks, from emergency protection to long-term solutions, so
it seems to me that the real risk in the movie plot scenario comes
entirely from *secret advances* in quantum computing.  Other similar
risks for Bitcoin exist, such as secret discoveries about how to
compromise the hash functions Bitcoin depends on.  One way to help
control those risks is to pay a public bounty to anyone who provably and
publicly discloses the secret advance (ideally while allowing the leaker
to remain anonymous).  Several years ago, Peter Todd created a series of
Bitcoin addresses that does exactly that.[1]

For example, if you pay 35Snmmy3uhaer2gTboc81ayCip4m9DT4ko, then
anyone[2] who can prove a collision attack against Bitcoin's primary
hash function, SHA256, will be able to claim the bitcoins you and other
people sent to that address.  Their claim of the funds will publicly
demonstrate that someone can create a SHA256 collision, which is an
attack we currently believe to be impractical.  This system was
demonstrated to work about four years ago[3] when the collision bounty
for the much weaker SHA1 function was claimed.[4]

We can already create an output script with a Nothing Up My Sleeve
(NUMS) point that would provide a trustless bounty to anyone proving the
capability to steal any P2PK-style output with secp256k1's 128-bit
security.  I curious about whether anyone informed about ECC and QC
knows how to create output scripts with lower difficulty that could be
used to measure the progress of QC-based EC key cracking.  E.g.,
NUMS-based ECDSA- or taproot-compatible scripts with a security strength
equivalent to 80, 96, and 112 bit security.

That way the people and businesses concerned about QC advances could
send a few BTC to those addresses to create a QC early warning system
that would allow us to continue confidently working on EC-based
protocols for now but also objectively alert us to when we need to shift
to working on post-QC protocols for the future.

Thank you,

-Dave

[1] https://bitcointalk.org/index.php?topic=293382.0

[2] Anyone claiming the reward may need to mine their own transaction to
    protect it against rewriting.  In the worst case, they may need to
    mine at a depth of several blocks or share their reward with miners
    to prevent sniping reorgs.

[3] https://blockstream.info/tx/8d31992805518fd62daa3bdd2a5c4fd2cd3054c9b3dca1d78055e9528cff6adc

[4] To the best of my knowledge, nothing in Bitcoin ever depended
    significantly on SHA1, and especially not on SHA1 collision
    resistance, which was known to be weak even in 2009 when Nakamoto
    first published the Bitcoin software.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210315/7c7043d8/attachment-0001.sig>

From aj at erisian.com.au  Tue Mar 16 00:50:01 2021
From: aj at erisian.com.au (Anthony Towns)
Date: Tue, 16 Mar 2021 10:50:01 +1000
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <CALJw2w4hBk1pZrV7E6FNDPDCWH=T_S6qAHGKvRC6JsT9iZevfg@mail.gmail.com>
References: <202103152148.15477.luke@dashjr.org>
 <a88cd471-fdc9-de35-86cd-595b387249c8@mattcorallo.com>
 <CAD5xwhi82fjRB4Ceb6Gnp+LvTweWjwFRmWU5zD-3o6s_GoEvPw@mail.gmail.com>
 <a4b9df55-b95b-9c95-62ea-7bf6eeec113d@mattcorallo.com>
 <CALJw2w4hBk1pZrV7E6FNDPDCWH=T_S6qAHGKvRC6JsT9iZevfg@mail.gmail.com>
Message-ID: <20210316005001.GA4304@erisian.com.au>

On Tue, Mar 16, 2021 at 08:01:47AM +0900, Karl-Johan Alm via bitcoin-dev wrote:
> It may initially take months to break a single key. 

>From what I understand, the constraint on using quantum techniques to
break an ECC key is on the number of bits you can entangle and how long
you can keep them coherent -- but those are both essentially thresholds:
you can't use two quantum computers that support a lower number of bits
when you need a higher number, and you can't reuse the state you reached
after you collapsed halfway through to make the next run shorter.

I think that means having a break take a longer time means maintaining
the quantum state for longer, which is *harder* than having it happen
quicker...

So I think the only way you get it taking substantial amounts of time to
break a key is if your quantum attack works quickly but very unreliably:
maybe it takes a minute to reset, and every attempt only has probability
p of succeeding (ie, random probability of managing to maintain the
quantum state until completion of the dlog algorithm), so over t minutes
you end up with probability 1-(1-p)^t of success.

For 50% odds after 1 month with 1 minute per attempt, you'd need a 0.0016%
chance per attempt, for 50% odds after 1 day, you'd need 0.048% chance per
attempt. But those odds assume you've only got one QC making the attempts
-- if you've got 30, you can make a month's worth of attempts in a day;
if you scale up to 720, you can make a month's worth of attempts in an
hour, ie once you've got one, it's a fairly straightforward engineering
challenge at that point.

So a "slow" attack simply doesn't seem likely to me. YMMV, obviously.

Cheers,
aj


From ZmnSCPxj at protonmail.com  Tue Mar 16 02:11:15 2021
From: ZmnSCPxj at protonmail.com (ZmnSCPxj)
Date: Tue, 16 Mar 2021 02:11:15 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <SL2P216MB00896086AA80DE1A98293C469D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
 <170b27c0-436f-c440-e3c3-f9577b764972@riseup.net>
 <SL2P216MB00896086AA80DE1A98293C469D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
Message-ID: <Wz83obOLCjtbO-rIDw9mHM0ObBrE10y1rLg8vbEyp5BIxtfzlUJyLlnPZ-RWnvsKzJaKRe4bo7hnjlJnwL4-g7HyRNa6TvL_Y-gBQ12ifCg=@protonmail.com>

Good morning JAMES,

> No-one has yet demonstrated that Conjoin or using Wasabi wallet is secure if it relies on third-parties. Are the transaction not forwarded partially signed as with an SPV wallet? So it is possible the SPV server cannot redirect funds if dishonest? SPV wallets are secure producing fully signed transactions. A ConJoin transaction signs for the UTXO and forwards it to be included signed for in another larger transaction with many inputs and outputs

The above point was not answered, so let me answer this for elucidation of you and any readers.

A CoinJoin transaction is a single transaction with many inputs and many outputs.

Every input must be signed.

When used to obfuscate, each input has different actual entities owning the coin.

In order to prevent fraud, it is necessary that what total amount each entity puts into the transaction, that entity also gets out (in freshly-generated addresses, which I hope you do not object to) as an output.

When providing its signature, each entity verifies that its provided address exists in some output first before signing out its input.

The provided signature requires all the inputs and all the outputs to exist in the transaction.
Because of this, it is not possible to take a "partial" signature for this transaction, then change the transaction to redirect outputs elsewhere --- the signature of previous participants become invalid for the modified transaction..

Thus, the security of the CoinJoin cannot be damaged by a third party.

Third parties involved in popular implementations of CoinJoin (such as the coordinator in Wasabi) are nothing more than clerical actuaries that take signatures of an immutable document, and any attempt by that clerical actuary to change the document also destroys any signatures of that document, making the modified document (the transaction) invalid.

> . Also, none of those you mention is inherently a Privacy Technology. Transparency is one of the key articles of value in Bitcoin because it prevents fraud.

The prevention of fraud simply requires that all addition is validatable.
It does not require that the actual values involved are visible in cleartext.

Various cryptographic techniques already exist which allow the verifiable addition of encrypted values ("homomorphisms").
You can get 1 * G and 2 * G, add the resulting points, and compare it to 3 * G and see that you get the same point, yet if you did not know exactly what G was used, you would not know that you were checking the addition of 1 + 2 = 3.
That is the basis of a large number of privacy coins.

At the same time, if I wanted to *voluntarily* reveal this 1 + 2 = 3, I could reveal the numbers involved and the point G I used, and any validator (including, say, a government taxing authority) can check that the points recorded on the blockchain match with what I claimed.

For the prevention of fraud, we should strive to be as transparent as *little* as possible, while allowing users to *voluntarily* reveal information.


Regards,
ZmnSCPxj

From ZmnSCPxj at protonmail.com  Tue Mar 16 02:38:55 2021
From: ZmnSCPxj at protonmail.com (ZmnSCPxj)
Date: Tue, 16 Mar 2021 02:38:55 +0000
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <20210316005001.GA4304@erisian.com.au>
References: <202103152148.15477.luke@dashjr.org>
 <a88cd471-fdc9-de35-86cd-595b387249c8@mattcorallo.com>
 <CAD5xwhi82fjRB4Ceb6Gnp+LvTweWjwFRmWU5zD-3o6s_GoEvPw@mail.gmail.com>
 <a4b9df55-b95b-9c95-62ea-7bf6eeec113d@mattcorallo.com>
 <CALJw2w4hBk1pZrV7E6FNDPDCWH=T_S6qAHGKvRC6JsT9iZevfg@mail.gmail.com>
 <20210316005001.GA4304@erisian.com.au>
Message-ID: <JqUah_Mx6T415tjNgDCLVcDdkzQNXZatuMfzshQzZTlUpwbymbEHx7O3iciC-C2aYVl7BnkU0Tk_CvGTBrMpUJ6YQlcJZaHdaMPRs89iSPc=@protonmail.com>

Good morning aj,

> On Tue, Mar 16, 2021 at 08:01:47AM +0900, Karl-Johan Alm via bitcoin-dev wrote:
>
> > It may initially take months to break a single key.
>
> From what I understand, the constraint on using quantum techniques to
> break an ECC key is on the number of bits you can entangle and how long
> you can keep them coherent -- but those are both essentially thresholds:
> you can't use two quantum computers that support a lower number of bits
> when you need a higher number, and you can't reuse the state you reached
> after you collapsed halfway through to make the next run shorter.
>
> I think that means having a break take a longer time means maintaining
> the quantum state for longer, which is harder than having it happen
> quicker...
>
> So I think the only way you get it taking substantial amounts of time to
> break a key is if your quantum attack works quickly but very unreliably:
> maybe it takes a minute to reset, and every attempt only has probability
> p of succeeding (ie, random probability of managing to maintain the
> quantum state until completion of the dlog algorithm), so over t minutes
> you end up with probability 1-(1-p)^t of success.
>
> For 50% odds after 1 month with 1 minute per attempt, you'd need a 0.0016%
> chance per attempt, for 50% odds after 1 day, you'd need 0.048% chance per
> attempt. But those odds assume you've only got one QC making the attempts
> -- if you've got 30, you can make a month's worth of attempts in a day;
> if you scale up to 720, you can make a month's worth of attempts in an
> hour, ie once you've got one, it's a fairly straightforward engineering
> challenge at that point.
>
> So a "slow" attack simply doesn't seem likely to me. YMMV, obviously.

What you describe seems to match mining in its behavior: probabilistic, and scalable by pushing more electricity into more devices.

>From this point-of-view, it seems to me that the amount of energy to mount a "fast" attack may eventually approach the energy required by mining, in which case someone who possesses the ability to mount such an attack may very well find it easier to just 51% the network (since that can be done today without having to pour R&D satoshis into developing practical quantum computers).

Regards,
ZmnSCPxj

From luke at dashjr.org  Tue Mar 16 03:44:25 2021
From: luke at dashjr.org (Luke Dashjr)
Date: Tue, 16 Mar 2021 03:44:25 +0000
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <a88cd471-fdc9-de35-86cd-595b387249c8@mattcorallo.com>
References: <202103152148.15477.luke@dashjr.org>
 <a88cd471-fdc9-de35-86cd-595b387249c8@mattcorallo.com>
Message-ID: <202103160344.26299.luke@dashjr.org>

(To reiterate: I do not intend any of this as a NACK of Taproot.)

On Monday 15 March 2021 22:05:45 Matt Corallo wrote:
> > First, so long as we have hash-based addresses as a best practice, we can
> > continue to shrink the percentage of bitcoins affected through social
> > efforts discouraging address use. If the standard loses the hash, the
> > situation cannot be improved, and will indeed only get worse.
>
> I truly wish this were the case, but we've been beating that drum for at
> least nine years and still haven't solved it.

I think we've made progress over those 9 years, don't you?

> > Second, when/if quantum does compromise these coins, so long as they are
> > neglected or abandoned/lost coins (inherent in the current model), it can
> > be seen as equivalent to Bitcoin mining. At the end of the day, 37% of
> > supply minable by QCs is really no different than 37% minable by ASICs.
> > (We've seen far higher %s available for mining obviously.)
>
> Except its not? One entity would be able to steal that entire block of
> supply rather quickly (presumably over the course of a few days, at
> maximum), instead of a slow process with significant upfront real-world
> cost in the form of electricity.

My understanding is that at least initial successes would likely be very slow.
Hopefully we would have a permanent solution before it got too out of hand.


On Monday 15 March 2021 23:01:47 Karl-Johan Alm via bitcoin-dev wrote:
> The important distinction here is that, with hashes, an attacker has
> to race against the spending transaction confirming, whereas with
> naked pubkeys, the attacker doesn't have to wait for a spend to occur,
> drastically increasing the available time to attack.

More importantly, once an attack is recognised, with hashes, people can simply 
stop sending transactions and await a fix, to protect their stash. Without 
hashes, there is no defense at all (other than sending bitcoins to a 
non-taproot address and hoping they evade the attack in time).


On Monday 15 March 2021 23:12:18 Andrew Poelstra wrote:
> "No gain" except to save significant CPU time and bandwidth?

The CPU time is localised to involved nodes, and (correct me if I'm wrong) 
trivial in comparison to what is required to run a full node in the first 
place. I'm not sure how it looks with bandwidth.

> Having exposed keys also lets you do ring signatures over outputs, creating
> the ability to do private proof of funds via Provisions.

But you can also do comparable proofs behind a hash with Bulletproofs, right?

> > Despite this, I still don't think it's a reason to NACK Taproot: it
> > should be fairly trivial to add a hash on top in an additional softfork
> > and fix this.
>
> This would make Bitcoin strictly worse.

How so? People could just not use it if they don't care, right?
The alternative (if people care enough) is that those concerned about quantum 
risk would be forced to forego the benefits of Taproot and stick to p2pkh or 
such, which seems like an artificial punishment.

> > In addition to the points made by Mark, I also want to add two more, in
> > response to Pieter's "you can't claim much security if 37% of the supply
> > is at risk" argument. This argument is based in part on the fact that
> > many people reuse Bitcoin invoice addresses.
>
> 37% is a dramatic understatement. Every address which is derived using
> BIP32 should be assumed compromised to a QC attacker because xpubs are not
> treated like secret key material and are trivial to e.g. extract from
> hardware wallets or PSBTs. I expect the real number is close to 100%.

xpubs should be treated like secret key material IMO.

A quantum attacker would need to compromise your PC to attack a hardware 
wallet, right?

> In any case, Taproot keys, when used according to the recommendation in
> BIP-0341, are already hashes of their internal keys, so (a) Taproot outputs
> actually have better quantum resistance than legacy outputs; and (b) adding
> another hash would be strictly redundant.

It not only stops the attacker from obtaining the original key, but also 
prevents creating a new private key that can spend the output?


On Tuesday 16 March 2021 02:38:55 ZmnSCPxj via bitcoin-dev wrote:
> From this point-of-view, it seems to me that the amount of energy to mount
> a "fast" attack may eventually approach the energy required by mining, in
> which case someone who possesses the ability to mount such an attack may
> very well find it easier to just 51% the network (since that can be done
> today without having to pour R&D satoshis into developing practical quantum
> computers).

Mining adapts its difficulty to the block rate, so it will slow you down up to 
4x each retarget. An attack on public keys would probably scale better. :)

Luke

From ZmnSCPxj at protonmail.com  Tue Mar 16 06:09:56 2021
From: ZmnSCPxj at protonmail.com (ZmnSCPxj)
Date: Tue, 16 Mar 2021 06:09:56 +0000
Subject: [bitcoin-dev] Delegated signatures in Bitcoin within existing
	rules, no fork required
In-Reply-To: <CAD5xwhhC1Y13p7KazfUOXFZ5vi5MA9EQ-scyafv4aNkjskoXBg@mail.gmail.com>
References: <CAD5xwhhC1Y13p7KazfUOXFZ5vi5MA9EQ-scyafv4aNkjskoXBg@mail.gmail.com>
Message-ID: <plFEi9xoSnZ0TDJ7wH2dJx1F727FCSBrPsa2-26AXtveHKolt9bzTE1tiGIoPSjhgBfToVID2YHEaMGwwVU5dZ3Sozmz9UO-6HvbEDmm67I=@protonmail.com>

Good morning Jeremy,

This is a very cool idea!

> Multiple Delegates: By signing a txn with several delegate outputs, it is possible to enforce multiple disparate conditions. Normally this is superfluous -- why not just concatenate S1 and S2? The answer is that you may have S1 require a relative height lock and S2 require a relative time lock (this was one of the mechanisms investigated for powswap.com).

I am somewhat confused by this.
Do you mean that the delegating transaction (the one signed using the script of A with `SIGHASH_NONE`) has as input (consumes) multiple delegate outputs D1, D2... with individual scripts S1, S2... ?

> Sequenced Contingent Delegation: By constructing a specific TXID that may delegate the coins, you can make a coin's delegation contingent on some other contract reaching a specific state. For example, suppose I had a contract that had 100 different possible end states, all with fixed outpoints at the end. I could delegate coins in different arrangements to be claimable only if the contract reaches that state. Note that such a model requires some level of coordination between the main and observing contract as each Coin delegate can only be claimed one time.

Does this require that each contract end-state have a known TXID at setup time?

> Redelegating: This is where A delegates to S, S delegates to S'. This type of mechanism most likely requires the coin to be moved on-chain to the script (A OR S or S'), but the on-chain movement may be delayed (via presigned transactions) until S' actually wants to do something with the coin.

The script `A || S || S'` suggests that delegation effectively still allows the original owner to still control the coin, right?
Which I suppose is implied by "Revocation" above.

Regards,
ZmnSCPxj


From jlrubin at mit.edu  Tue Mar 16 06:16:23 2021
From: jlrubin at mit.edu (Jeremy)
Date: Mon, 15 Mar 2021 23:16:23 -0700
Subject: [bitcoin-dev] Delegated signatures in Bitcoin within existing
 rules, no fork required
In-Reply-To: <plFEi9xoSnZ0TDJ7wH2dJx1F727FCSBrPsa2-26AXtveHKolt9bzTE1tiGIoPSjhgBfToVID2YHEaMGwwVU5dZ3Sozmz9UO-6HvbEDmm67I=@protonmail.com>
References: <CAD5xwhhC1Y13p7KazfUOXFZ5vi5MA9EQ-scyafv4aNkjskoXBg@mail.gmail.com>
 <plFEi9xoSnZ0TDJ7wH2dJx1F727FCSBrPsa2-26AXtveHKolt9bzTE1tiGIoPSjhgBfToVID2YHEaMGwwVU5dZ3Sozmz9UO-6HvbEDmm67I=@protonmail.com>
Message-ID: <CAD5xwhhMjsYMRebN4Td614qOyAey24h7vQAjZjP_ETzvXJQBLw@mail.gmail.com>

inline responses
--
@JeremyRubin <https://twitter.com/JeremyRubin>
<https://twitter.com/JeremyRubin>


On Mon, Mar 15, 2021 at 11:10 PM ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:

> Good morning Jeremy,
>
> This is a very cool idea!
>
> > Multiple Delegates: By signing a txn with several delegate outputs, it
> is possible to enforce multiple disparate conditions. Normally this is
> superfluous -- why not just concatenate S1 and S2? The answer is that you
> may have S1 require a relative height lock and S2 require a relative time
> lock (this was one of the mechanisms investigated for powswap.com).
>
> I am somewhat confused by this.
> Do you mean that the delegating transaction (the one signed using the
> script of A with `SIGHASH_NONE`) has as input (consumes) multiple delegate
> outputs D1, D2... with individual scripts S1, S2... ?
>
>
Correct -- you can do this if you want multiple independent delegates to be
able to revoke, or if you want S1 and S2 to mix height + time based
relative locks -- bonus points if D1.txid == D2.txid, then you can be sure
they're counting from the same origin point.



> > Sequenced Contingent Delegation: By constructing a specific TXID that
> may delegate the coins, you can make a coin's delegation contingent on some
> other contract reaching a specific state. For example, suppose I had a
> contract that had 100 different possible end states, all with fixed
> outpoints at the end. I could delegate coins in different arrangements to
> be claimable only if the contract reaches that state. Note that such a
> model requires some level of coordination between the main and observing
> contract as each Coin delegate can only be claimed one time.
>
> Does this require that each contract end-state have a known TXID at setup
> time?
>

Without anyprevout or similar, I believe so.



>
> > Redelegating: This is where A delegates to S, S delegates to S'. This
> type of mechanism most likely requires the coin to be moved on-chain to the
> script (A OR S or S'), but the on-chain movement may be delayed (via
> presigned transactions) until S' actually wants to do something with the
> coin.
>
> The script `A || S || S'` suggests that delegation effectively still
> allows the original owner to still control the coin, right?
> Which I suppose is implied by "Revocation" above.
>

Yes, redelegating (or I guess rather recursive delegation?) would mean A,
S, and S' are all in play. if you want to revoke just A, then S must move
to a utxo with S and S'.

>
> Regards,
> ZmnSCPxj
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210315/0827e403/attachment.html>

From ZmnSCPxj at protonmail.com  Tue Mar 16 08:36:09 2021
From: ZmnSCPxj at protonmail.com (ZmnSCPxj)
Date: Tue, 16 Mar 2021 08:36:09 +0000
Subject: [bitcoin-dev] Delegated signatures in Bitcoin within existing
	rules, no fork required
In-Reply-To: <CAD5xwhhMjsYMRebN4Td614qOyAey24h7vQAjZjP_ETzvXJQBLw@mail.gmail.com>
References: <CAD5xwhhC1Y13p7KazfUOXFZ5vi5MA9EQ-scyafv4aNkjskoXBg@mail.gmail.com>
 <plFEi9xoSnZ0TDJ7wH2dJx1F727FCSBrPsa2-26AXtveHKolt9bzTE1tiGIoPSjhgBfToVID2YHEaMGwwVU5dZ3Sozmz9UO-6HvbEDmm67I=@protonmail.com>
 <CAD5xwhhMjsYMRebN4Td614qOyAey24h7vQAjZjP_ETzvXJQBLw@mail.gmail.com>
Message-ID: <_SJunY4b2FhUkCj49-C_D7Uj1VYlS8qqZuO2-NIAEAIkCIfWEWVVgx-pNN0ZXlujGKUiU_hfcV-aq9yK6LHjHoK_5E0pYncVWtW99regZnE=@protonmail.com>

Good morning Jeremy,

Thank you.

Assuming only keys, an easier way of delegating would be simply to give a copy of the privkey outright to the delegatee.

However, an advantage of this technique you described is that the delegator can impose additional restrictions that are programmable via any SCRIPT, an ability that merely handing over the privkey cannot do.
Thus the technique has an ability that mere handover cannot achieve.

If the delegatee is a known single entity, and S is simply the delegatee key plus some additional restrictions, it may be possible to sign with `SIGHASH_ALL` a transaction that spends A and D, and outputs to a singlesig of the delegatee key.
This would avoid the use of `SIGHASH_NONE`, for a mild improvement in privacy.
The output would still allow the delegatee to dispose of the funds by its unilateral decision subject to the fulfillment of the script S (at the cost of yet another transaction).
On the other hand, if S is unusual enough, the enhanced privacy may be moot (the S already marks the transaction as unusual), so this variation has little value.

In terms of offchain technology, if the delegator remains online, the delegatee may present a witness satisfying S to the delegator, and ask the delegator to provide an alternate transaction that spends A directly without spending D and outputs to whatever the delegatee wants.
The delegator cannot refuse since the delegatee can always use the `SIGHASH_NONE` signature and spend to whatever it decides provided it can present a witness satisfying S.
This is basically a typical "close transaction" for layer 2 technology.
On the other hand, one generalized use-case for delegation would be if the delegator suspects it may not be online or able to sign with the delegator key, so this variation has reduced value as well.

Regards,
ZmnSCPxj

From aymeric at peersm.com  Sun Mar 14 18:41:37 2021
From: aymeric at peersm.com (Aymeric Vitte)
Date: Sun, 14 Mar 2021 19:41:37 +0100
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <PS2P216MB09147F068F81F31593E06A5F9D6D9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>
References: <CAFBxzAAO1u=C8wpwvRs5evE657V0NdnSE9PYAbanpJt5ZdSkdA@mail.gmail.com>
 <3504919A-6D19-4858-B00C-9C0FEB090DB5@voskuil.org>
 <PS2P216MB09147F068F81F31593E06A5F9D6D9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>
Message-ID: <93d634e2-4102-78f6-c5bc-48fd2af10666@peersm.com>

It's incredible how this troll keeps trolling and the list (bitcoin-dev
!!) keeping attention


Good troll, really


Le 14/03/2021 ? 11:13, LORD HIS EXCELLENCY JAMES HRMH via bitcoin-dev a
?crit :
> Good Afternoon,
>
> Since this is on the list I will open without my thank-you. You will
> kindly be advised that my title are recorded in both Scotland and with
> England, also provided by record in Australia's account with names
> recorded. If you wonder than am I Wills it is because a long time
> before we ever saw Wills in print with an article provided reference to
> any Prince in the past thirty-years there I am Wills already. Title The
> Australian was prepared a long time to my requiest to wait until it was
> better presented, with at least some acquired experience in business to
> understand a market like BHP services. Thereby you accept a separate
> title Lord being with feudal and Lord being with the appointments
> direct to the service of the monarch's house Earl and similar up to
> Duke and King and higher being heard usually the monarch's preference
> Your Excellency or Your Highness being His service. I have never been
> any Prince. If any Prince titles came the instructions were they were
> retained to be considered not accepted not refused.
>
> If you had each fools to inquire.
>
> KING JAMES HRMH
> Great British Empire
>
> Regards,
> The Australian
> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> of Hougun Manor & Glencoe & British Empire
> MR. Damian A. James Williamson
> Wills
>
> et al.
>
>  
> Willtech
> www.willtech.com.au
> www.go-overt.com
> and other projects
>  
> earn.com/willtech
> linkedin.com/in/damianwilliamson
>
>
> m. 0487135719
> f. +61261470192
>
>
> This email does not constitute a general advice. Please disregard this
> email if misdelivered.
> ------------------------------------------------------------------------
> *From:* bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on
> behalf of Eric Voskuil via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org>
> *Sent:* Saturday, 13 March 2021 9:30 AM
> *To:* R E Broadley <rebroad+linuxfoundation.org at gmail.com>; Bitcoin
> Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> *Subject:* Re: [bitcoin-dev] Taproot NACK
>  
> I?m pretty sure it?s subtle mockery. Even a legit title doesn?t
> warrant additional attention.
>
> e
>
> > On Mar 12, 2021, at 14:02, R E Broadley via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> >
> > ?Can I just point out (to those addressing James as Lord/Excelency/etc
> > that he isn't noble nor a Lord, so just wanted to mention this in case
> > people were giving him more attention than the average person would be
> > afforded.
> >
> > My 2p (an equal 2p) on Taproot is ACK, by the way.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-- 
Sophia-Antipolis, France
LinkedIn: https://fr.linkedin.com/in/aymeric-vitte-05855b26
Move your coins by yourself (browser version): https://peersm.com/wallet
Bitcoin transactions made simple: https://github.com/Ayms/bitcoin-transactions
Zcash wallets made simple: https://github.com/Ayms/zcash-wallets
Bitcoin wallets made simple: https://github.com/Ayms/bitcoin-wallets
Get the torrent dynamic blocklist: http://peersm.com/getblocklist
Check the 10 M passwords list: http://peersm.com/findmyass
Anti-spies and private torrents, dynamic blocklist: http://torrent-live.org
Peersm : http://www.peersm.com
torrent-live: https://github.com/Ayms/torrent-live
node-Tor : https://www.github.com/Ayms/node-Tor
GitHub : https://www.github.com/Ayms

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210314/e2f3f7d7/attachment.html>

From eric at ericmartindale.com  Mon Mar 15 02:02:42 2021
From: eric at ericmartindale.com (Eric Martindale)
Date: Sun, 14 Mar 2021 22:02:42 -0400
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <PS2P216MB0914F0B05E1AAB48D9A765609D6D9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CAMnpzfop8ttqjMAKoS37zpQV6WiZfi1Bn+y_e-HaepTiD4Vm1Q@mail.gmail.com>
 <CAB0O3SVNyr_t23Y0LyT0mSaf6LONFRLYJ8qzO7rcdJFnrGccFw@mail.gmail.com>
 <CA+YkXXwkSCu=2UOEhzFBzGDHo1c=Ewqsnxp632ke3jdH1ff5WA@mail.gmail.com>
 <CA+YkXXwfS7eer5Za_ed9tCNdfOp4c3nV_X=mfXzoDxMm6BrizQ@mail.gmail.com>
 <PS2P216MB0914F0B05E1AAB48D9A765609D6D9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>
Message-ID: <CAAf19Wq+v_2UjxHn8eBuBcL+mgNbD9joQ8eTV6O1+LuDwX=Fng@mail.gmail.com>

Bitcoin's security is derived from the energy consumption of mining, so
reducing the overall expenditure would be an objective decrease in
resilience.  As a miner, your efficiency at converting energy into
hashpower is the driving factor in your profitability, so this and any
other future attempts to decrease the cost of attacking Bitcoin receives a
hard NACK from me.

If you're concerned about missing out on the subsidy or fee revenue, grab
any number of the sub-500mSAT USB miners and get access to cheap power.

Sincerely,

Eric Martindale, relentless maker.
Founder & CEO, Fabric, Inc. <https://fabric.fm>
+1 (919) 374-2020


On Sun, Mar 14, 2021 at 9:41 AM LORD HIS EXCELLENCY JAMES HRMH via
bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:

> Good Afternoon,
>
> It is obvious that something needs to be done to curtail the current cost
> of mining in kWh per block. I understand proposals are rejected because it
> is considered censorship and Bitcoin has a consensus to allow anyone to
> mine but, since mining requires specific hardware and energy requirements
> it is already a form of censorship where most on the planet except for the
> top 6% I am guessing here, cannot afford to mine. Without affecting the
> current algorithm, I have previously begun to explore the process by which
> mining can be turned into a lottery with only authorized payto addresses
> able to mine valid blocks, since transaction fees and block rewards exist
> to pay the miner. It would be better even if the algorithms are improved if
> there are some ways that only a subset of miners can produce valid blocks
> for any given period, say for 12 months with four groups starting three
> months apart to transition, and maybe limit mining to 50 people per
> continent to produce valid blocks at any one time. Possibly this requires a
> consortium to oversee the lottery but it is something Bitcoin can handle
> themselves, and would do better to handle than to wait for government
> intervention as we have seen previously in China where power was too cheap
> Bitcoin was banned entirely.
>
> KING JAMES HRMH
> Great British Empire
>
> Regards,
> The Australian
> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> of Hougun Manor & Glencoe & British Empire
> MR. Damian A. James Williamson
> Wills
>
> et al.
>
>
> Willtech
> www.willtech.com.au
> www.go-overt.com
> and other projects
>
> earn.com/willtech
> linkedin.com/in/damianwilliamson
>
>
> m. 0487135719
> f. +61261470192
>
>
> This email does not constitute a general advice. Please disregard this
> email if misdelivered.
> ------------------------------
> *From:* bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on
> behalf of Lonero Foundation via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org>
> *Sent:* Saturday, 6 March 2021 3:16 AM
> *To:* Devrandom <c1.devrandom at niftybox.net>
> *Cc:* Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> *Subject:* Re: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
> Datastore for Energy Efficient Mining
>
> Also in regards to my other email, I forgot to iterate that my
> cryptography proposal helps behind the efficiency category but also tackles
> problems such as NP-Completeness or Halting which is something the BTC
> network could be vulnerable to in the future. For sake of simplicity, I do
> want to do this BIP because it tackles lots of the issues in regards to
> this manner and can provide useful insight to the community. If things such
> as bigger block height have been proposed as hard forks, I feel at the very
> least an upgrade regarding the hashing algorithm and cryptography does at
> least warrant some discussion. Anyways I hope I can send you my BIP, just
> let me know on the preferred format?
>
> Best regards, Andrew
>
> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <
> loneroassociation at gmail.com> wrote:
>
> Hi, this isn't about the energy efficient argument in regards to
> renewables or mining devices but a better cryptography layer to get the
> most out of your hashing for validation. I do understand the arbitrariness
> of it, but do want to still propose a document. Do I use the Media Wiki
> format on GitHub and just attach it as my proposal?
>
> Best regards, Andrew
>
> On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net> wrote:
>
> Hi Ryan and Andrew,
>
> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>
>   https://www.truthcoin.info/blog/pow-cheapest/
>     "Nothing is Cheaper than Proof of Work"
>     on | 04 Aug 2015
>
>
> Just to belabor this a bit, the paper demonstrates that the mining market
> will tend to expend resources equivalent to miner reward.  It does not
> prove that mining work has to expend *energy* as a primary cost.
>
> Some might argue that energy expenditure has negative externalities and
> that we should move to other resources.  I would argue that the negative
> externalities will go away soon because of the move to renewables, so the
> point is likely moot.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210314/e8b196fe/attachment-0001.html>

From lloyd.fourn at gmail.com  Mon Mar 15 23:46:05 2021
From: lloyd.fourn at gmail.com (Lloyd Fournier)
Date: Tue, 16 Mar 2021 10:46:05 +1100
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <CALJw2w4hBk1pZrV7E6FNDPDCWH=T_S6qAHGKvRC6JsT9iZevfg@mail.gmail.com>
References: <202103152148.15477.luke@dashjr.org>
 <a88cd471-fdc9-de35-86cd-595b387249c8@mattcorallo.com>
 <CAD5xwhi82fjRB4Ceb6Gnp+LvTweWjwFRmWU5zD-3o6s_GoEvPw@mail.gmail.com>
 <a4b9df55-b95b-9c95-62ea-7bf6eeec113d@mattcorallo.com>
 <CALJw2w4hBk1pZrV7E6FNDPDCWH=T_S6qAHGKvRC6JsT9iZevfg@mail.gmail.com>
Message-ID: <CAH5Bsr2Rs=WGAVVjrDdtsYBGARNeeM210ubWacwJLJogMinm+w@mail.gmail.com>

On Tue, 16 Mar 2021 at 09:05, Matt Corallo via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> There have been many threads on this before, I'm not sure anything new has
> been brought up here.
>
> Matt
>
> On 3/15/21 17:48, Luke Dashjr via bitcoin-dev wrote:
> > I do not personally see this as a reason to NACK Taproot, but it has
> become
> > clear to me over the past week or so that many others are unaware of this
> > tradeoff, so I am sharing it here to ensure the wider community is aware
> of
> > it and can make their own judgements.
>
> Note that this is most definitely *not* news to this list, eg, Anthony
> brought it up in "Schnorr and taproot (etc)
> upgrade" and there was a whole thread on it in "Taproot: Privacy
> preserving switchable scripting". This issue has been
> beaten to death, I'm not sure why we need to keep hitting the poor horse
> corpse.
>
>
I read through this thread just now. The QC discussion starts roughly here:
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015620.html

My own (very possibly wrong) interpretation of the situation is:

1. Current addresses are very vulnerable to QC and would require hardfork
to fix (and not fix particularly well).
2. Once a QC resistant spending procedure has been developed it could be
added as a backup spending policy as a new tapleaf version (wallets would
have to opt into it).
3. If QC does get to the point where it can break ECC then we can disable
key-path spends via softfork
4. If everyone has moved their coins to Taproot addresses with a QC
resistant tapleaf backup then we're ok.
5. Since the above is almost certainly not going to happen we can simply
congratulate the new QC owners on the Bitcoin they take from old addresses
(specter of QC encourages moving to taproot which could be thought of as a
good thing).
6. Otherwise we have to hard fork to stop old addresses being spent without
a quantum resistant ZKP (oof!).
7. Once we know what we're up against a new quantum resistant segwit
version can be introduced (if it hasn't already).
8. If QC develop far enough to degrade SHA256 sufficiently (ECC probably
breaks first) then that's a whole other ball game since it affects PoW and
txids and so on and will likely require a hard fork.

The ordering of the above events is not predictable. IMO Mark's post is on
the wildly optimistic side of projected rate of progress from my limited
understanding. Either way it is strictly better to enter a QC world with
Taproot enabled and most people are using it so we can introduce QC
resistant backup spend paths without hardforks before they become
practical. Depending on what happens they may not be needed but it's good
to have the option.

On Tue, 16 Mar 2021 at 10:11, Karl-Johan Alm via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Tue, 16 Mar 2021 at 07:48, Matt Corallo via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> >
> > Overall, the tradeoffs here seem ludicrous, given that any QC issues in
> Bitcoin need to be solved in another way, and
> > can't practically be solved by just relying on the existing hash
> indirection.
>
> The important distinction here is that, with hashes, an attacker has
> to race against the spending transaction confirming, whereas with
> naked pubkeys, the attacker doesn't have to wait for a spend to occur,
> drastically increasing the available time to attack.
>
>
First note that I am enthusiastically ignorant of QC technology so please
take the following with a bowl of salt.
The premise of Mark's post is that QC progress is currently exponential
(debatable) and will continue to be (unknowable) so "months" will turn into
days and into minutes in short time period. Since QC progress is
exponential and the speedup that ECC quantum algorithms offer is
exponential you're not dealing with the typical "Moore's law" progress in
terms of time to solve a particular problem; It's like exponential
exponential (math person help me now). You could easily go from ten
thousand years to break ECC to a few seconds within a year with that rate
of progress so I don't think "slow quantum" is an adversary worth
protecting against. I would love to know if I am wrong on this point.

Cheers,

LL
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210316/62c7381f/attachment.html>

From michaelfolkson at gmail.com  Mon Mar 15 14:06:45 2021
From: michaelfolkson at gmail.com (Michael Folkson)
Date: Mon, 15 Mar 2021 14:06:45 +0000
Subject: [bitcoin-dev] Taproot activation proposal "Speedy Trial"
Message-ID: <CAFvNmHRbH3oRFdvbCHGSaB2zmL2dvo-n71dKK8=Qs7Qa6SGVXg@mail.gmail.com>

> I don't think we should have a followup deployment start so close to to
timeout of ST. I think it would be better to schedule the followup
around ST, especially since the details around that are fuzzier and
dependent on the results of ST itself.

Until Core pull request(s) are merged I don't think we can finalize
startheight (and hence the timeout) for Speedy Trial either.

Speedy Trial seems to have the most community consensus of any
activation proposal thus far and I'm confident it will at some point
in the near future it will be merged into Core.

Community feedback:
https://gist.github.com/michaelfolkson/92899f27f1ab30aa2ebee82314f8fe7f

Therefore I think the onus is on any UASF release to fit around a
Speedy Trial deployment in Core. I haven't thought enough about what
my preference would be assuming activation fails with Speedy Trial re
a follow up deployment in Core and/or a UASF release. However, I would
be 100 percent opposed to any UASF release that conflicts or is not
compatible with a Speedy Trial deployment in Core.

On 3/14/21 10:51 PM, Luke Dashjr wrote:
> The last period before timeoutheight here overlaps with the current BIP8(True)
> deployment plan. So if this period specifically were to reach 90% signalling,
> nodes would activate Taproot at height 697536, but ST-only nodes would still
> wait until 709632 instead.
>
> Probably the best solution is to just move this ST window 1 period earlier?
>
> Luke



-- 
Michael Folkson
Email: michaelfolkson at gmail.com
Keybase: michaelfolkson
PGP: 43ED C999 9F85 1D40 EAF4 9835 92D6 0159 214C FEE3

From somber.night at protonmail.com  Sun Mar 14 15:13:32 2021
From: somber.night at protonmail.com (SomberNight)
Date: Sun, 14 Mar 2021 15:13:32 +0000
Subject: [bitcoin-dev] Signature and Script Independent Hierarchy for
	Deterministic Wallets.
Message-ID: <z1Vokp3jct_xwR8wt3n6r8t24DqtMpnrogF22YFc0_V3riIMWEq3WBiOriJOm2kVrVgtsu5p7wDTMrN3dLdA8DilhITMXb4tHY6wCnk3y1g=@protonmail.com>

See some replies inline. (quoted text from BIP draft)

> Date: Sun, 14 Mar 2021 01:51:15 +0000
> From: Robert Spigler <RobertSpigler at protonmail.ch>
> Subject: [bitcoin-dev] Signature and Script Independent Hierarchy for Deterministic Wallets.

> There are many issues with the current standards. As background, BIP 44/49/84 specifies:
> `m / purpose' / coin_type' / account' / change / address_index`
> where the BIP43 `purpose'` path is separate for each script (P2PKH, P2WPKH-in-P2SH, and P2WPKH respectively).  However, these per-script derivations are made redundant with descriptors

> We should not be mixing keys and scripts in the same layer. The wallet should create extended private/public keys independent of the script or signature type

You say that keys and scripts should not be mixed in the same layer, and imply that this was solely done due to these standards predating output script descriptors. Even if this was the case, it is not the only reason for doing it. BIP44/49/84 mixing scripts and keys in the same layer makes recovery from seed/mnemonic much easier.
Note the significant overlap between the authors of BIP39 and BIP44. I am fairly certain BIP44 was designed with recovering from a BIP39 seed (and no additional information backed up) in mind. Note the "Account discovery" section of BIP44.
(Electrum seeds go even further, as such seeds contain a version number that encodes both the script type and the key derivation path to use.)

> We define the following 5 levels in the BIP32 path:
> `m / purpose' / coin_type' / account' / change / address_index`

> [Account]
> It is crucial that this level is increased for each new wallet joined or private/public keys created; for both privacy and cryptographic purposes.
> For example, in multisignature wallets, before sending a new key record to a coordinator, the wallet must increment the `account'` level.  Before creating it's own single signature wallet, the `account'` level must again be incremented.

Imagine a user who has a BIP39 (or similar) seed. Even today, recovering most non-singlesig scripts from that is obviously infeasible. However, all singlesig scripts at least can be discovered if the keys are using the suggested derivation paths.
By trying to create a standard that mixes discoverable and non-discoverable scripts in the same derivation scheme and incrementing a single index, you are turning all scripts into being non-discoverable.
Note that even if a user only used singlesig scripts and followed this proposal, during recovery from seed the wallet would have to check all script types for all account indices (which is only ever going to get more expensive as new script types come).
The workaround and I imagine your suggested solution is clearly to backup both seed words and output script descriptors; and to keep appending new output script descriptors to existing backups when the account index is incremented. While much less user-friendly than backing up just a seed, it is more generic and extendable.

My point is simply that your proposal is making a tradeoff here. The tradeoff itself seems easy to miss on first read of the text, so I just wanted to explicitly point it out for the record.

ghost43 / SomberNight

From RobertSpigler at protonmail.ch  Mon Mar 15 22:30:35 2021
From: RobertSpigler at protonmail.ch (Robert Spigler)
Date: Mon, 15 Mar 2021 22:30:35 +0000
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <a88cd471-fdc9-de35-86cd-595b387249c8@mattcorallo.com>
References: <202103152148.15477.luke@dashjr.org>
 <a88cd471-fdc9-de35-86cd-595b387249c8@mattcorallo.com>
Message-ID: <0RxHhUWPeVWzk1dqjcfHngM3GBsZveFYR1bMHxOBVhA_xCR964mxEuHjNPk3DQbvA_kKfArFJYTrb_Hg-NhjqFkE5e-wjxBHGi_HvA_jgNk=@protonmail.ch>

I agree with Matt.

The naked pubkey is required for some of the benefits being implemented (snicker coinjoins).

Even with pubkey hashes, bitcoin could still be stolen because the pubkey is published on spend.  Regardless, QC needs to be fixed later on (decades), and shouldn't be a reason to NACK taproot.


Personal Fingerprint:? BF0D 3C08 A439 5AC6 11C1 5395 B70B 4A77 F850 548F


??????? Original Message ???????
On Monday, March 15, 2021 6:05 PM, Matt Corallo via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:

> There have been many threads on this before, I'm not sure anything new has been brought up here.
>
> Matt
>
> On 3/15/21 17:48, Luke Dashjr via bitcoin-dev wrote:
>
> > I do not personally see this as a reason to NACK Taproot, but it has become
> > clear to me over the past week or so that many others are unaware of this
> > tradeoff, so I am sharing it here to ensure the wider community is aware of
> > it and can make their own judgements.
>
> Note that this is most definitelynot news to this list, eg, Anthony brought it up in "Schnorr and taproot (etc)
> upgrade" and there was a whole thread on it in "Taproot: Privacy preserving switchable scripting". This issue has been
> beaten to death, I'm not sure why we need to keep hitting the poor horse corpse.
>
> > In short, Taproot loses an important safety protection against quantum.
> > Note that in all circumstances, Bitcoin is endangered when QC becomes a
> > reality, but pre-Taproot, it is possible for the network to "pause" while a
> > full quantum-safe fix is developed, and then resume transacting. With Taproot
> > as-is, it could very well become an unrecoverable situation if QC go online
> > prior to having a full quantum-safe solution.
>
> This has been discussed ad nauseam, and it all seems to fall apart once its noted just how much Bitcoin could be stolen
> by any QC-wielding attacker due to address reuse. Ultimately, no "pause" can solve this issue, and, if we learned about
> a QC attacker overnight (instead of slowly over time), there isn't anything that a non-Taproot Bitcoin could do that a
> Taproot Bitcoin couldn't.
>
> > Also, what I didn't know myself until today, is that we do not actually gain
> > anything from this: the features proposed to make use of the raw keys being
> > public prior to spending can be implemented with hashed keys as well.
> > It would use significantly more CPU time and bandwidth (between private
> > parties, not on-chain), but there should be no shortage of that for anyone
> > running a full node (indeed, CPU time is freed up by Taproot!); at worst, it
> > would create an incentive for more people to use their own full node, which
> > is a good thing!
>
> This is untrue. The storage space required for Taproot transactions is materially reduced by avoiding the hash indirection.
>
> > Despite this, I still don't think it's a reason to NACK Taproot: it should be
> > fairly trivial to add a hash on top in an additional softfork and fix this.
>
> For the reason stated above, i think such a fork is unlikely.
>
> > In addition to the points made by Mark, I also want to add two more, in
> > response to Pieter's "you can't claim much security if 37% of the supply is
> > at risk" argument. This argument is based in part on the fact that many
> > people reuse Bitcoin invoice addresses.
> > First, so long as we have hash-based addresses as a best practice, we can
> > continue to shrink the percentage of bitcoins affected through social efforts
> > discouraging address use. If the standard loses the hash, the situation
> > cannot be improved, and will indeed only get worse.
>
> I truly wish this were the case, but we've been beating that drum for at least nine years and still haven't solved it.
> Worse, there's a lot of old coins that are unlikely to move any time soon that are exposed whether we like it or not.
>
> > Second, when/if quantum does compromise these coins, so long as they are
> > neglected or abandoned/lost coins (inherent in the current model), it can be
> > seen as equivalent to Bitcoin mining. At the end of the day, 37% of supply
> > minable by QCs is really no different than 37% minable by ASICs. (We've seen
> > far higher %s available for mining obviously.)
>
> Except its not? One entity would be able to steal that entire block of supply rather quickly (presumably over the course
> of a few days, at maximum), instead of a slow process with significant upfront real-world cost in the form of electricity.
>
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev



From RobertSpigler at protonmail.ch  Sun Mar 14 20:46:14 2021
From: RobertSpigler at protonmail.ch (Robert Spigler)
Date: Sun, 14 Mar 2021 20:46:14 +0000
Subject: [bitcoin-dev] Signature and Script Independent Hierarchy for
	Deterministic Wallets.
In-Reply-To: <z1Vokp3jct_xwR8wt3n6r8t24DqtMpnrogF22YFc0_V3riIMWEq3WBiOriJOm2kVrVgtsu5p7wDTMrN3dLdA8DilhITMXb4tHY6wCnk3y1g=@protonmail.com>
References: <z1Vokp3jct_xwR8wt3n6r8t24DqtMpnrogF22YFc0_V3riIMWEq3WBiOriJOm2kVrVgtsu5p7wDTMrN3dLdA8DilhITMXb4tHY6wCnk3y1g=@protonmail.com>
Message-ID: <QZfbtDnhhbNNFo6859MyCotRPeN-sdotrP2qM-Uitq5DYATVzqIgIb_UEtXETGk941M3HWDzxCmO9j84wjzuKndHOo6kxg3A9qCd8WWlAOI=@protonmail.ch>

No, wallets don't and shouldn't have to check all script types on recovery.  Descriptor Wallets solve all of this.

To back up a multisignature wallet, each cosigner stores their xprv (how you do this; BIP39, WIF, etc, is out of scope). and the wallet descriptor.  This is done, for example, in Yeti. To recover, simply combine `M` private keys, and check the script designated in 1 of the descriptor copies.

For single signature wallets, it is the same, except only one signature is needed.  Store xprv and descriptor.

It is not fair nor accurate to say that currently, in order to recover, wallets need "just the seed words".  They also need all public keys, and derivation paths.

Descriptors (and this BIP), is a much cleaner way to handle wallet creation and backup, by separating the two layers (keys and scripts) and getting rid of redundant information.


Personal Fingerprint:? BF0D 3C08 A439 5AC6 11C1 5395 B70B 4A77 F850 548F



??????? Original Message ???????
On Sunday, March 14, 2021 11:13 AM, SomberNight <somber.night at protonmail.com> wrote:

> See some replies inline. (quoted text from BIP draft)
>
> > Date: Sun, 14 Mar 2021 01:51:15 +0000
> > From: Robert Spigler RobertSpigler at protonmail.ch
> > Subject: [bitcoin-dev] Signature and Script Independent Hierarchy for Deterministic Wallets.
>
> > There are many issues with the current standards. As background, BIP 44/49/84 specifies:
> > `m / purpose' / coin_type' / account' / change / address_index`
> > where the BIP43 `purpose'` path is separate for each script (P2PKH, P2WPKH-in-P2SH, and P2WPKH respectively). However, these per-script derivations are made redundant with descriptors
>
> > We should not be mixing keys and scripts in the same layer. The wallet should create extended private/public keys independent of the script or signature type
>
> You say that keys and scripts should not be mixed in the same layer, and imply that this was solely done due to these standards predating output script descriptors. Even if this was the case, it is not the only reason for doing it. BIP44/49/84 mixing scripts and keys in the same layer makes recovery from seed/mnemonic much easier.
> Note the significant overlap between the authors of BIP39 and BIP44. I am fairly certain BIP44 was designed with recovering from a BIP39 seed (and no additional information backed up) in mind. Note the "Account discovery" section of BIP44.
> (Electrum seeds go even further, as such seeds contain a version number that encodes both the script type and the key derivation path to use.)
>
> > We define the following 5 levels in the BIP32 path:
> > `m / purpose' / coin_type' / account' / change / address_index`
>
> > [Account]
> > It is crucial that this level is increased for each new wallet joined or private/public keys created; for both privacy and cryptographic purposes.
> > For example, in multisignature wallets, before sending a new key record to a coordinator, the wallet must increment the `account'` level. Before creating it's own single signature wallet, the `account'` level must again be incremented.
>
> Imagine a user who has a BIP39 (or similar) seed. Even today, recovering most non-singlesig scripts from that is obviously infeasible. However, all singlesig scripts at least can be discovered if the keys are using the suggested derivation paths.
> By trying to create a standard that mixes discoverable and non-discoverable scripts in the same derivation scheme and incrementing a single index, you are turning all scripts into being non-discoverable.
> Note that even if a user only used singlesig scripts and followed this proposal, during recovery from seed the wallet would have to check all script types for all account indices (which is only ever going to get more expensive as new script types come).
> The workaround and I imagine your suggested solution is clearly to backup both seed words and output script descriptors; and to keep appending new output script descriptors to existing backups when the account index is incremented. While much less user-friendly than backing up just a seed, it is more generic and extendable.
>
> My point is simply that your proposal is making a tradeoff here. The tradeoff itself seems easy to miss on first read of the text, so I just wanted to explicitly point it out for the record.
>
> ghost43 / SomberNight



From thomashartman1 at gmail.com  Sun Mar 14 14:32:18 2021
From: thomashartman1 at gmail.com (Thomas Hartman)
Date: Sun, 14 Mar 2021 10:32:18 -0400
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <PS2P216MB0914F0B05E1AAB48D9A765609D6D9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CAMnpzfop8ttqjMAKoS37zpQV6WiZfi1Bn+y_e-HaepTiD4Vm1Q@mail.gmail.com>
 <CAB0O3SVNyr_t23Y0LyT0mSaf6LONFRLYJ8qzO7rcdJFnrGccFw@mail.gmail.com>
 <CA+YkXXwkSCu=2UOEhzFBzGDHo1c=Ewqsnxp632ke3jdH1ff5WA@mail.gmail.com>
 <CA+YkXXwfS7eer5Za_ed9tCNdfOp4c3nV_X=mfXzoDxMm6BrizQ@mail.gmail.com>
 <PS2P216MB0914F0B05E1AAB48D9A765609D6D9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>
Message-ID: <CAHAXnDW4PFwtSxvfJ8KXipXX2h2w9824=q9ptsTLkrchac2QXA@mail.gmail.com>

MY LORD HIS EXCELLENCY:

  It is indeed a contest between free markets and central planning.

  Governments can in effect say, you are permitted to buy energy to
smelt aluminum, but not to mine bitcoin, even if bitcoin is more
profitable.

  To the extent that free markets in energy are suppressed, as you
pointed out in china, bitcoin can indeed be suppressed.

  The solution is not to make bitcoin a centrally managed currency,
but to fight hard for free speech, free markets, and in particular
free markets in energy.

  That being said, bitcoin is designed to thrive even if driven underground.

  Your humble subject etc.





On Sun, Mar 14, 2021 at 9:41 AM LORD HIS EXCELLENCY JAMES HRMH via
bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> Good Afternoon,
>
> It is obvious that something needs to be done to curtail the current cost of mining in kWh per block. I understand proposals are rejected because it is considered censorship and Bitcoin has a consensus to allow anyone to mine but, since mining requires specific hardware and energy requirements it is already a form of censorship where most on the planet except for the top 6% I am guessing here, cannot afford to mine. Without affecting the current algorithm, I have previously begun to explore the process by which mining can be turned into a lottery with only authorized payto addresses able to mine valid blocks, since transaction fees and block rewards exist to pay the miner. It would be better even if the algorithms are improved if there are some ways that only a subset of miners can produce valid blocks for any given period, say for 12 months with four groups starting three months apart to transition, and maybe limit mining to 50 people per continent to produce valid blocks at any one time. Possibly this requires a consortium to oversee the lottery but it is something Bitcoin can handle themselves, and would do better to handle than to wait for government intervention as we have seen previously in China where power was too cheap Bitcoin was banned entirely.
>
> KING JAMES HRMH
> Great British Empire
>
> Regards,
> The Australian
> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> of Hougun Manor & Glencoe & British Empire
> MR. Damian A. James Williamson
> Wills
>
> et al.
>
>
> Willtech
> www.willtech.com.au
> www.go-overt.com
> and other projects
>
> earn.com/willtech
> linkedin.com/in/damianwilliamson
>
>
> m. 0487135719
> f. +61261470192
>
>
> This email does not constitute a general advice. Please disregard this email if misdelivered.
> ________________________________
> From: bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on behalf of Lonero Foundation via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
> Sent: Saturday, 6 March 2021 3:16 AM
> To: Devrandom <c1.devrandom at niftybox.net>
> Cc: Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> Subject: Re: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST Datastore for Energy Efficient Mining
>
> Also in regards to my other email, I forgot to iterate that my cryptography proposal helps behind the efficiency category but also tackles problems such as NP-Completeness or Halting which is something the BTC network could be vulnerable to in the future. For sake of simplicity, I do want to do this BIP because it tackles lots of the issues in regards to this manner and can provide useful insight to the community. If things such as bigger block height have been proposed as hard forks, I feel at the very least an upgrade regarding the hashing algorithm and cryptography does at least warrant some discussion. Anyways I hope I can send you my BIP, just let me know on the preferred format?
>
> Best regards, Andrew
>
> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <loneroassociation at gmail.com> wrote:
>
> Hi, this isn't about the energy efficient argument in regards to renewables or mining devices but a better cryptography layer to get the most out of your hashing for validation. I do understand the arbitrariness of it, but do want to still propose a document. Do I use the Media Wiki format on GitHub and just attach it as my proposal?
>
> Best regards, Andrew
>
> On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net> wrote:
>
> Hi Ryan and Andrew,
>
> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>
>   https://www.truthcoin.info/blog/pow-cheapest/
>     "Nothing is Cheaper than Proof of Work"
>     on | 04 Aug 2015
>
>
> Just to belabor this a bit, the paper demonstrates that the mining market will tend to expend resources equivalent to miner reward.  It does not prove that mining work has to expend *energy* as a primary cost.
>
> Some might argue that energy expenditure has negative externalities and that we should move to other resources.  I would argue that the negative externalities will go away soon because of the move to renewables, so the point is likely moot.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From loneroassociation at gmail.com  Mon Mar 15 02:32:31 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Sun, 14 Mar 2021 22:32:31 -0400
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CAAf19Wq+v_2UjxHn8eBuBcL+mgNbD9joQ8eTV6O1+LuDwX=Fng@mail.gmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CAMnpzfop8ttqjMAKoS37zpQV6WiZfi1Bn+y_e-HaepTiD4Vm1Q@mail.gmail.com>
 <CAB0O3SVNyr_t23Y0LyT0mSaf6LONFRLYJ8qzO7rcdJFnrGccFw@mail.gmail.com>
 <CA+YkXXwkSCu=2UOEhzFBzGDHo1c=Ewqsnxp632ke3jdH1ff5WA@mail.gmail.com>
 <CA+YkXXwfS7eer5Za_ed9tCNdfOp4c3nV_X=mfXzoDxMm6BrizQ@mail.gmail.com>
 <PS2P216MB0914F0B05E1AAB48D9A765609D6D9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>
 <CAAf19Wq+v_2UjxHn8eBuBcL+mgNbD9joQ8eTV6O1+LuDwX=Fng@mail.gmail.com>
Message-ID: <CA+YkXXxN8G6NELXwr_d+_iuqJkBQT5_EBbcOvZhy6iPuURz9bA@mail.gmail.com>

Hi, just to clarify this isn't a trade-off on security. Infact, my proposal
actually increases the level of security that Bitcoin currently has. There
is both an efficiency and cryptography aspect to this proposal. I talked
about the higher levels of security a bit in my BIP, and have talked to a
few about energy consumption.

Outside of consumption of energy however, is the fact that BTC can be more
adaptable towards a major range of hardware without disenfranchising others
or other major trade-offs. There is no need for BTC to specifically be
tailored towards ASICs if the same level of proof of work can be done from
other hardware sources at similar costs. The technology and level of
cryptography between now and when Satoshi started BTC development 14 years
ago is also fastly different. BTC went from you can mine lots of Bitcoin by
literally downloading the whitepaper, to USB miners, to ASICs to now whole
entire mining centers.

This is because of complexity, but that complexity in the near future can
be entirely meaningless if it is vulnerable to some of the things many
cryptography experts are worried about. Keep in mind this is in draft mode,
but over time as further implementation is done, alot of the community
including yourself might start being impressed by the more and more
tangible results.

Best regards, Andrew

On Sun, Mar 14, 2021, 10:02 PM Eric Martindale <eric at ericmartindale.com>
wrote:

> Bitcoin's security is derived from the energy consumption of mining, so
> reducing the overall expenditure would be an objective decrease in
> resilience.  As a miner, your efficiency at converting energy into
> hashpower is the driving factor in your profitability, so this and any
> other future attempts to decrease the cost of attacking Bitcoin receives a
> hard NACK from me.
>
> If you're concerned about missing out on the subsidy or fee revenue, grab
> any number of the sub-500mSAT USB miners and get access to cheap power.
>
> Sincerely,
>
> Eric Martindale, relentless maker.
> Founder & CEO, Fabric, Inc. <https://fabric.fm>
> +1 (919) 374-2020
>
>
> On Sun, Mar 14, 2021 at 9:41 AM LORD HIS EXCELLENCY JAMES HRMH via
> bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> Good Afternoon,
>>
>> It is obvious that something needs to be done to curtail the current cost
>> of mining in kWh per block. I understand proposals are rejected because it
>> is considered censorship and Bitcoin has a consensus to allow anyone to
>> mine but, since mining requires specific hardware and energy requirements
>> it is already a form of censorship where most on the planet except for the
>> top 6% I am guessing here, cannot afford to mine. Without affecting the
>> current algorithm, I have previously begun to explore the process by which
>> mining can be turned into a lottery with only authorized payto addresses
>> able to mine valid blocks, since transaction fees and block rewards exist
>> to pay the miner. It would be better even if the algorithms are improved if
>> there are some ways that only a subset of miners can produce valid blocks
>> for any given period, say for 12 months with four groups starting three
>> months apart to transition, and maybe limit mining to 50 people per
>> continent to produce valid blocks at any one time. Possibly this requires a
>> consortium to oversee the lottery but it is something Bitcoin can handle
>> themselves, and would do better to handle than to wait for government
>> intervention as we have seen previously in China where power was too cheap
>> Bitcoin was banned entirely.
>>
>> KING JAMES HRMH
>> Great British Empire
>>
>> Regards,
>> The Australian
>> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
>> of Hougun Manor & Glencoe & British Empire
>> MR. Damian A. James Williamson
>> Wills
>>
>> et al.
>>
>>
>> Willtech
>> www.willtech.com.au
>> www.go-overt.com
>> and other projects
>>
>> earn.com/willtech
>> linkedin.com/in/damianwilliamson
>>
>>
>> m. 0487135719
>> f. +61261470192
>>
>>
>> This email does not constitute a general advice. Please disregard this
>> email if misdelivered.
>> ------------------------------
>> *From:* bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on
>> behalf of Lonero Foundation via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org>
>> *Sent:* Saturday, 6 March 2021 3:16 AM
>> *To:* Devrandom <c1.devrandom at niftybox.net>
>> *Cc:* Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
>> *Subject:* Re: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
>> Datastore for Energy Efficient Mining
>>
>> Also in regards to my other email, I forgot to iterate that my
>> cryptography proposal helps behind the efficiency category but also tackles
>> problems such as NP-Completeness or Halting which is something the BTC
>> network could be vulnerable to in the future. For sake of simplicity, I do
>> want to do this BIP because it tackles lots of the issues in regards to
>> this manner and can provide useful insight to the community. If things such
>> as bigger block height have been proposed as hard forks, I feel at the very
>> least an upgrade regarding the hashing algorithm and cryptography does at
>> least warrant some discussion. Anyways I hope I can send you my BIP, just
>> let me know on the preferred format?
>>
>> Best regards, Andrew
>>
>> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <
>> loneroassociation at gmail.com> wrote:
>>
>> Hi, this isn't about the energy efficient argument in regards to
>> renewables or mining devices but a better cryptography layer to get the
>> most out of your hashing for validation. I do understand the arbitrariness
>> of it, but do want to still propose a document. Do I use the Media Wiki
>> format on GitHub and just attach it as my proposal?
>>
>> Best regards, Andrew
>>
>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net>
>> wrote:
>>
>> Hi Ryan and Andrew,
>>
>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>>
>>   https://www.truthcoin.info/blog/pow-cheapest/
>>     "Nothing is Cheaper than Proof of Work"
>>     on | 04 Aug 2015
>>
>>
>> Just to belabor this a bit, the paper demonstrates that the mining market
>> will tend to expend resources equivalent to miner reward.  It does not
>> prove that mining work has to expend *energy* as a primary cost.
>>
>> Some might argue that energy expenditure has negative externalities and
>> that we should move to other resources.  I would argue that the negative
>> externalities will go away soon because of the move to renewables, so the
>> point is likely moot.
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210314/c1ddb7c3/attachment-0001.html>

From loneroassociation at gmail.com  Mon Mar 15 02:58:45 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Sun, 14 Mar 2021 22:58:45 -0400
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CA+YkXXyMUQtdSvjuMPQO71LpPb8qFdy-LTSrA8FEbeWMbPWa4w@mail.gmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CAMnpzfop8ttqjMAKoS37zpQV6WiZfi1Bn+y_e-HaepTiD4Vm1Q@mail.gmail.com>
 <CAB0O3SVNyr_t23Y0LyT0mSaf6LONFRLYJ8qzO7rcdJFnrGccFw@mail.gmail.com>
 <CA+YkXXwkSCu=2UOEhzFBzGDHo1c=Ewqsnxp632ke3jdH1ff5WA@mail.gmail.com>
 <CA+YkXXwfS7eer5Za_ed9tCNdfOp4c3nV_X=mfXzoDxMm6BrizQ@mail.gmail.com>
 <PS2P216MB0914F0B05E1AAB48D9A765609D6D9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>
 <CAAf19Wq+v_2UjxHn8eBuBcL+mgNbD9joQ8eTV6O1+LuDwX=Fng@mail.gmail.com>
 <CA+YkXXxN8G6NELXwr_d+_iuqJkBQT5_EBbcOvZhy6iPuURz9bA@mail.gmail.com>
 <CA+YkXXyMUQtdSvjuMPQO71LpPb8qFdy-LTSrA8FEbeWMbPWa4w@mail.gmail.com>
Message-ID: <CA+YkXXyb+ajOY237Q==NOWqOnbMARZ=54_GF62rMMo2XBk-U-A@mail.gmail.com>

Actually disregard my last email, I realize you were replying to somebody
else instead of me. Please for proposals not related to my BIP, such as a
form of "luck chance lottery", post in a different discussion thread as to
not draw confusion.

Best regards, Andrew

On Sun, Mar 14, 2021, 10:51 PM Lonero Foundation <
loneroassociation at gmail.com> wrote:

> I also want to emphasize that Bitcoin's energy consumption is growing at
> an exponential rate because of complexity. That in itself is a good thing
> security-wise. However, there are limitations to the cryptography it is
> using and the efficiency it is going about mining the way it is currently
> done.
>
> Bitcoin can have this massive carbon footprint all become meaningless if
> there is better math. So far we already outpaced many of the the more
> traditional forms of cryptographic protocols Bitcoin is currently using,
> including both for its mining and key validation. The hardware specificness
> is also too limited.
>
> My proposal doesn't redesign the way Bitcoin is structured or its system,
> rather it focuses on improvement or replacing what is outdated, and making
> it more resistant to centralization, forced monopolization or an attack.
>
> On Sun, Mar 14, 2021, 10:32 PM Lonero Foundation <
> loneroassociation at gmail.com> wrote:
>
>> Hi, just to clarify this isn't a trade-off on security. Infact, my
>> proposal actually increases the level of security that Bitcoin currently
>> has. There is both an efficiency and cryptography aspect to this proposal.
>> I talked about the higher levels of security a bit in my BIP, and have
>> talked to a few about energy consumption.
>>
>> Outside of consumption of energy however, is the fact that BTC can be
>> more adaptable towards a major range of hardware without disenfranchising
>> others or other major trade-offs. There is no need for BTC to specifically
>> be tailored towards ASICs if the same level of proof of work can be done
>> from other hardware sources at similar costs. The technology and level of
>> cryptography between now and when Satoshi started BTC development 14 years
>> ago is also fastly different. BTC went from you can mine lots of Bitcoin by
>> literally downloading the whitepaper, to USB miners, to ASICs to now whole
>> entire mining centers.
>>
>> This is because of complexity, but that complexity in the near future can
>> be entirely meaningless if it is vulnerable to some of the things many
>> cryptography experts are worried about. Keep in mind this is in draft mode,
>> but over time as further implementation is done, alot of the community
>> including yourself might start being impressed by the more and more
>> tangible results.
>>
>> Best regards, Andrew
>>
>> On Sun, Mar 14, 2021, 10:02 PM Eric Martindale <eric at ericmartindale.com>
>> wrote:
>>
>>> Bitcoin's security is derived from the energy consumption of mining, so
>>> reducing the overall expenditure would be an objective decrease in
>>> resilience.  As a miner, your efficiency at converting energy into
>>> hashpower is the driving factor in your profitability, so this and any
>>> other future attempts to decrease the cost of attacking Bitcoin receives a
>>> hard NACK from me.
>>>
>>> If you're concerned about missing out on the subsidy or fee revenue,
>>> grab any number of the sub-500mSAT USB miners and get access to cheap power.
>>>
>>> Sincerely,
>>>
>>> Eric Martindale, relentless maker.
>>> Founder & CEO, Fabric, Inc. <https://fabric.fm>
>>> +1 (919) 374-2020
>>>
>>>
>>> On Sun, Mar 14, 2021 at 9:41 AM LORD HIS EXCELLENCY JAMES HRMH via
>>> bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>
>>>> Good Afternoon,
>>>>
>>>> It is obvious that something needs to be done to curtail the current
>>>> cost of mining in kWh per block. I understand proposals are rejected
>>>> because it is considered censorship and Bitcoin has a consensus to allow
>>>> anyone to mine but, since mining requires specific hardware and energy
>>>> requirements it is already a form of censorship where most on the planet
>>>> except for the top 6% I am guessing here, cannot afford to mine. Without
>>>> affecting the current algorithm, I have previously begun to explore the
>>>> process by which mining can be turned into a lottery with only authorized
>>>> payto addresses able to mine valid blocks, since transaction fees and block
>>>> rewards exist to pay the miner. It would be better even if the algorithms
>>>> are improved if there are some ways that only a subset of miners can
>>>> produce valid blocks for any given period, say for 12 months with four
>>>> groups starting three months apart to transition, and maybe limit mining to
>>>> 50 people per continent to produce valid blocks at any one time. Possibly
>>>> this requires a consortium to oversee the lottery but it is something
>>>> Bitcoin can handle themselves, and would do better to handle than to wait
>>>> for government intervention as we have seen previously in China where power
>>>> was too cheap Bitcoin was banned entirely.
>>>>
>>>> KING JAMES HRMH
>>>> Great British Empire
>>>>
>>>> Regards,
>>>> The Australian
>>>> LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
>>>> of Hougun Manor & Glencoe & British Empire
>>>> MR. Damian A. James Williamson
>>>> Wills
>>>>
>>>> et al.
>>>>
>>>>
>>>> Willtech
>>>> www.willtech.com.au
>>>> www.go-overt.com
>>>> and other projects
>>>>
>>>> earn.com/willtech
>>>> linkedin.com/in/damianwilliamson
>>>>
>>>>
>>>> m. 0487135719
>>>> f. +61261470192
>>>>
>>>>
>>>> This email does not constitute a general advice. Please disregard this
>>>> email if misdelivered.
>>>> ------------------------------
>>>> *From:* bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on
>>>> behalf of Lonero Foundation via bitcoin-dev <
>>>> bitcoin-dev at lists.linuxfoundation.org>
>>>> *Sent:* Saturday, 6 March 2021 3:16 AM
>>>> *To:* Devrandom <c1.devrandom at niftybox.net>
>>>> *Cc:* Bitcoin Protocol Discussion <
>>>> bitcoin-dev at lists.linuxfoundation.org>
>>>> *Subject:* Re: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
>>>> Datastore for Energy Efficient Mining
>>>>
>>>> Also in regards to my other email, I forgot to iterate that my
>>>> cryptography proposal helps behind the efficiency category but also tackles
>>>> problems such as NP-Completeness or Halting which is something the BTC
>>>> network could be vulnerable to in the future. For sake of simplicity, I do
>>>> want to do this BIP because it tackles lots of the issues in regards to
>>>> this manner and can provide useful insight to the community. If things such
>>>> as bigger block height have been proposed as hard forks, I feel at the very
>>>> least an upgrade regarding the hashing algorithm and cryptography does at
>>>> least warrant some discussion. Anyways I hope I can send you my BIP, just
>>>> let me know on the preferred format?
>>>>
>>>> Best regards, Andrew
>>>>
>>>> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <
>>>> loneroassociation at gmail.com> wrote:
>>>>
>>>> Hi, this isn't about the energy efficient argument in regards to
>>>> renewables or mining devices but a better cryptography layer to get the
>>>> most out of your hashing for validation. I do understand the arbitrariness
>>>> of it, but do want to still propose a document. Do I use the Media Wiki
>>>> format on GitHub and just attach it as my proposal?
>>>>
>>>> Best regards, Andrew
>>>>
>>>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net>
>>>> wrote:
>>>>
>>>> Hi Ryan and Andrew,
>>>>
>>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <
>>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>
>>>>
>>>>   https://www.truthcoin.info/blog/pow-cheapest/
>>>>     "Nothing is Cheaper than Proof of Work"
>>>>     on | 04 Aug 2015
>>>>
>>>>
>>>> Just to belabor this a bit, the paper demonstrates that the mining
>>>> market will tend to expend resources equivalent to miner reward.  It does
>>>> not prove that mining work has to expend *energy* as a primary cost.
>>>>
>>>> Some might argue that energy expenditure has negative externalities and
>>>> that we should move to other resources.  I would argue that the negative
>>>> externalities will go away soon because of the move to renewables, so the
>>>> point is likely moot.
>>>>
>>>> _______________________________________________
>>>> bitcoin-dev mailing list
>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>
>>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210314/b68c45ef/attachment-0001.html>

From damian at willtech.com.au  Tue Mar 16 11:39:47 2021
From: damian at willtech.com.au (DA Williamson)
Date: Tue, 16 Mar 2021 22:39:47 +1100
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <Wz83obOLCjtbO-rIDw9mHM0ObBrE10y1rLg8vbEyp5BIxtfzlUJyLlnPZ-RWnvsKzJaKRe4bo7hnjlJnwL4-g7HyRNa6TvL_Y-gBQ12ifCg=@protonmail.com>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
 <170b27c0-436f-c440-e3c3-f9577b764972@riseup.net>
 <SL2P216MB00896086AA80DE1A98293C469D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <Wz83obOLCjtbO-rIDw9mHM0ObBrE10y1rLg8vbEyp5BIxtfzlUJyLlnPZ-RWnvsKzJaKRe4bo7hnjlJnwL4-g7HyRNa6TvL_Y-gBQ12ifCg=@protonmail.com>
Message-ID: <932f2f2866cac087a207f8757c9df4b776ccdb04.camel@willtech.com.au>

Good Afternoon,

Verifiable and independantly verifiable are not the same. Independantly
scrutinable means any public can scrutinise blockchain to determine it
is honest. It does not rely on involved parties but insistently on the
data published in the blockchain. The accepted case of P2SH is also a
moot point since we are checking transactions and not where the balance
is but where it has come from. It is not further to P2SH which is not
obfuscation but is indeed publishing to then say that we only need
publicly disclose G3 which is a tangent obfuscation.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES
HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A.
James Williamson
Wills

et al.

 
Willtech
www.willtech.com.au
www.go-overt.com

and other projects
 
earn.com/willtech
linkedin.com/in/damianwilliamson


m.
0487135719
f. +61261470192


This email does not constitute a general
advice. Please disregard this email if misdelivered.
On Tue, 2021-03-16 at 02:11 +0000, ZmnSCPxj via bitcoin-dev wrote:
> Good morning JAMES,
> 
> > No-one has yet demonstrated that Conjoin or using Wasabi wallet is
> > secure if it relies on third-parties. Are the transaction not
> > forwarded partially signed as with an SPV wallet? So it is possible
> > the SPV server cannot redirect funds if dishonest? SPV wallets are
> > secure producing fully signed transactions. A ConJoin transaction
> > signs for the UTXO and forwards it to be included signed for in
> > another larger transaction with many inputs and outputs
> 
> The above point was not answered, so let me answer this for
> elucidation of you and any readers.
> 
> A CoinJoin transaction is a single transaction with many inputs and
> many outputs.
> 
> Every input must be signed.
> 
> When used to obfuscate, each input has different actual entities
> owning the coin.
> 
> In order to prevent fraud, it is necessary that what total amount
> each entity puts into the transaction, that entity also gets out (in
> freshly-generated addresses, which I hope you do not object to) as an
> output.
> 
> When providing its signature, each entity verifies that its provided
> address exists in some output first before signing out its input.
> 
> The provided signature requires all the inputs and all the outputs to
> exist in the transaction.
> Because of this, it is not possible to take a "partial" signature for
> this transaction, then change the transaction to redirect outputs
> elsewhere --- the signature of previous participants become invalid
> for the modified transaction..
> 
> Thus, the security of the CoinJoin cannot be damaged by a third
> party.
> 
> Third parties involved in popular implementations of CoinJoin (such
> as the coordinator in Wasabi) are nothing more than clerical
> actuaries that take signatures of an immutable document, and any
> attempt by that clerical actuary to change the document also destroys
> any signatures of that document, making the modified document (the
> transaction) invalid.
> 
> > . Also, none of those you mention is inherently a Privacy
> > Technology. Transparency is one of the key articles of value in
> > Bitcoin because it prevents fraud.
> 
> The prevention of fraud simply requires that all addition is
> validatable.
> It does not require that the actual values involved are visible in
> cleartext.
> 
> Various cryptographic techniques already exist which allow the
> verifiable addition of encrypted values ("homomorphisms").
> You can get 1 * G and 2 * G, add the resulting points, and compare it
> to 3 * G and see that you get the same point, yet if you did not know
> exactly what G was used, you would not know that you were checking
> the addition of 1 + 2 = 3.
> That is the basis of a large number of privacy coins.
> 
> At the same time, if I wanted to *voluntarily* reveal this 1 + 2 = 3,
> I could reveal the numbers involved and the point G I used, and any
> validator (including, say, a government taxing authority) can check
> that the points recorded on the blockchain match with what I claimed.
> 
> For the prevention of fraud, we should strive to be as transparent as
> *little* as possible, while allowing users to *voluntarily* reveal
> information.
> 
> 
> Regards,
> ZmnSCPxj
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


From apoelstra at wpsoftware.net  Tue Mar 16 13:28:34 2021
From: apoelstra at wpsoftware.net (Andrew Poelstra)
Date: Tue, 16 Mar 2021 13:28:34 +0000
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <202103160344.26299.luke@dashjr.org>
References: <202103152148.15477.luke@dashjr.org>
 <a88cd471-fdc9-de35-86cd-595b387249c8@mattcorallo.com>
 <202103160344.26299.luke@dashjr.org>
Message-ID: <YFCygncy/hyxFRWz@camus>

On Tue, Mar 16, 2021 at 03:44:25AM +0000, Luke Dashjr wrote:
> (To reiterate: I do not intend any of this as a NACK of Taproot.)
>

Thanks, although it's still somewhat frustrating to be rehashing this
discussion again after so many years.
 
> On Monday 15 March 2021 23:12:18 Andrew Poelstra wrote:
> > "No gain" except to save significant CPU time and bandwidth?
> 
> The CPU time is localised to involved nodes, and (correct me if I'm wrong) 
> trivial in comparison to what is required to run a full node in the first 
> place. I'm not sure how it looks with bandwidth.
>

I really can't parse what "localized to involved nodes" means. All Bitcoin
nodes will be affected. Right now for nodes with sufficient bandwidth, signature
validation is the slowest part of validating transactions, which is why it
is disabled for the bulk of the chain during IBD. Taproot, by virtue of
enabling batch verification, would give a 2-3x speedup when validating the
same number of signatures.
 
> > Having exposed keys also lets you do ring signatures over outputs, creating
> > the ability to do private proof of funds via Provisions.
> 
> But you can also do comparable proofs behind a hash with Bulletproofs, right?
>

Yes, if you are willing to accept independent >100000x slowdowns on proving,
verification and code review.
 
> > > Despite this, I still don't think it's a reason to NACK Taproot: it
> > > should be fairly trivial to add a hash on top in an additional softfork
> > > and fix this.
> >
> > This would make Bitcoin strictly worse.
> 
> How so? People could just not use it if they don't care, right?
> The alternative (if people care enough) is that those concerned about quantum 
> risk would be forced to forego the benefits of Taproot and stick to p2pkh or 
> such, which seems like an artificial punishment.
>

People who do use it will reduce their privacy set, reduce the privacy set of
people who aren't using it, create confusion and delays for people implementing
Taproot, and slow down Bitcoin nodes who would have to validate the extra
material.
 
> > > In addition to the points made by Mark, I also want to add two more, in
> > > response to Pieter's "you can't claim much security if 37% of the supply
> > > is at risk" argument. This argument is based in part on the fact that
> > > many people reuse Bitcoin invoice addresses.
> >
> > 37% is a dramatic understatement. Every address which is derived using
> > BIP32 should be assumed compromised to a QC attacker because xpubs are not
> > treated like secret key material and are trivial to e.g. extract from
> > hardware wallets or PSBTs. I expect the real number is close to 100%.
> 
> xpubs should be treated like secret key material IMO.
> 

Your opinion is noted. This is not how xpubs are, in reality, treated. And
it would make them significantly less useful if you could no longer share
descriptors with people you would like to do multiparty transactions with.

> A quantum attacker would need to compromise your PC to attack a hardware 
> wallet, right?
> 

No, I expect you could get xpubs out of hardware wallets using any of the
web endpoints provided by hardware wallet vendors, or by asking it to update
a PSBT with any of its scriptpubkeys.

> > In any case, Taproot keys, when used according to the recommendation in
> > BIP-0341, are already hashes of their internal keys, so (a) Taproot outputs
> > actually have better quantum resistance than legacy outputs; and (b) adding
> > another hash would be strictly redundant.
> 
> It not only stops the attacker from obtaining the original key, but also 
> prevents creating a new private key that can spend the output?
> 

I don't know what you mean by this. If the original key is usable, i.e. a QC
has appeared overnight, then Bitcoin is screwed. (For that matter, the same is
true if there is an overnight break in SHA2, or ECDSA, or any other major
component of Bitcoin. Fortunately this is not how cryptographic breaks have
historically appeared.) There is no new private key that could be created.

If there is a QC where we have some warning, then we need to disable all EC
operations in Script, including keypath spends of Taproot outputs, and this
would be true with or without the redundant extra hash.

Taproot, with or without the redundant hash, has a few distinct benefits over
legacy outputs in this scenario:

  * Taproot keys are hashes of semi-secret data (at least as secret as xpubs)
    in a well-defined and simple way, by virtue of committing to an internal
    key and some script (usually unspendable)
  * By adding secret data to the script, users can provide extra data to prove
    in a QC-hard way, even if their internal key is compromised
  * Taproot keys can be chosen to be provably unspendable except by a DL break,
    as David Harding points out, by using a NUMS point as an internal key.

None of these factors are improved by adding an extra hash.

-- 
Andrew Poelstra
Director of Research, Blockstream
Email: apoelstra at wpsoftware.net
Web:   https://www.wpsoftware.net/andrew

The sun is always shining in space
    -Justin Lewis-Webster

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 488 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210316/75447235/attachment.sig>

From baro77 at gmail.com  Tue Mar 16 14:10:21 2021
From: baro77 at gmail.com (Andrea)
Date: Tue, 16 Mar 2021 15:10:21 +0100
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <YE/p0u3gp4UYNS7R@camus>
References: <202103152148.15477.luke@dashjr.org> <YE/p0u3gp4UYNS7R@camus>
Message-ID: <3d6d308f-3d9f-588a-5b8f-3ab14560974c@gmail.com>



Il 16/03/21 00:12, Andrew Poelstra via bitcoin-dev ha scritto:

> Having exposed keys also lets you do ring signatures over outputs, creating the
> ability to do private proof of funds via Provisions.
> 

Hi! Sorry for the OT, could you provide some references to ring 
signatures over/for/via taproot (I mean the schema or something like 
that)? And what is "Provisions" (the capital letter makes me think it's 
a product/technology)?
I'm a rookie following this mailing since just a few months...

From apoelstra at wpsoftware.net  Tue Mar 16 15:15:21 2021
From: apoelstra at wpsoftware.net (Andrew Poelstra)
Date: Tue, 16 Mar 2021 15:15:21 +0000
Subject: [bitcoin-dev] Provisions (was: PSA: Taproot loss of quantum
 protections)
In-Reply-To: <3d6d308f-3d9f-588a-5b8f-3ab14560974c@gmail.com>
References: <202103152148.15477.luke@dashjr.org> <YE/p0u3gp4UYNS7R@camus>
 <3d6d308f-3d9f-588a-5b8f-3ab14560974c@gmail.com>
Message-ID: <YFDLiR/w1IYiTURU@camus>

On Tue, Mar 16, 2021 at 03:10:21PM +0100, Andrea via bitcoin-dev wrote:
> 
> Hi! Sorry for the OT, could you provide some references to ring signatures
> over/for/via taproot (I mean the schema or something like that)? And what is
> "Provisions" (the capital letter makes me think it's a product/technology)?
> I'm a rookie following this mailing since just a few months...
>

Thanks for posting such a positive message in an otherwise tense thread :)

Provisions is a scheme for providing proof of ownership of funds, developed
by Dagher et al in 2015 at https://eprint.iacr.org/2015/1008 . The way it
works is to collect all of the Bitcoin outputs which have exposed/known
public keys then associate to these keys a Pedersen commitment which commits
to the outputs' amounts in a homomorphic way.

Homomorphic means that even though the commitments hide what the original
amounts are, anyone can add them together (in some sense) to get a new
commitment to the sum of the original amounts.

So Provisions is essentially a zero-knowledge proof of the following statement

    1. I have a commitment to >100BTC (or whatever)...
    2. ...which is a sum of commitments of actual UTXO values...
    3. ...where these UTXOs come from the set of known-public-key UTXOs...
    4. ...and I am able to sign with the public keys associated to them.

which proves ownership of some amount of BTC, without revealing which specific
UTXOs were involved. This zero-knowledge proof can be done fairly efficiently
by exploiting the structure of EC public keys and Pedersen commitments.


Unfortunately, most unspent Bitcoin outputs do not have known public keys,
which means that you can only do a Provisions proof using a small anonymity
set. However, all Taproot outputs, by virtue of having exposed public keys
(which is the point under contention in this thread), will be in the set of
exposed-public-key UTXOs, allowing people to do Provisions proofs where
their anonymity set consists of a large proportion of active coins.


BTW, even without Provisions, there are some similar and simpler things you
can do with Taproot keys along these lines. See for example
https://twitter.com/n1ckler/status/1334240709814136833



-- 
Andrew Poelstra
Director of Research, Blockstream
Email: apoelstra at wpsoftware.net
Web:   https://www.wpsoftware.net/andrew

The sun is always shining in space
    -Justin Lewis-Webster

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 488 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210316/a17a0bd9/attachment-0001.sig>

From lf-lists at mattcorallo.com  Tue Mar 16 17:25:40 2021
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Tue, 16 Mar 2021 13:25:40 -0400
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <202103160344.26299.luke@dashjr.org>
References: <202103152148.15477.luke@dashjr.org>
 <a88cd471-fdc9-de35-86cd-595b387249c8@mattcorallo.com>
 <202103160344.26299.luke@dashjr.org>
Message-ID: <98d63098-dabd-ba9f-38bc-1214631edb77@mattcorallo.com>



On 3/15/21 23:44, Luke Dashjr wrote:
> (To reiterate: I do not intend any of this as a NACK of Taproot.)

Frankly, then why parrot arguments you don't agree with in an already-tense discussion? I'm really not sure what there 
is to gain by dredging up years-old since-settled debates except to cause yet more delay and frustration.

> On Monday 15 March 2021 22:05:45 Matt Corallo wrote:
>>> First, so long as we have hash-based addresses as a best practice, we can
>>> continue to shrink the percentage of bitcoins affected through social
>>> efforts discouraging address use. If the standard loses the hash, the
>>> situation cannot be improved, and will indeed only get worse.
>>
>> I truly wish this were the case, but we've been beating that drum for at
>> least nine years and still haven't solved it.
> 
> I think we've made progress over those 9 years, don't you?

Some, sure, but not anywhere near the amount of progress we'd need to make to have an impact on QC security of the 
overall system.

>> Except its not? One entity would be able to steal that entire block of
>> supply rather quickly (presumably over the course of a few days, at
>> maximum), instead of a slow process with significant upfront real-world
>> cost in the form of electricity.
> 
> My understanding is that at least initial successes would likely be very slow.
> Hopefully we would have a permanent solution before it got too out of hand.

There is a lot of debate on this point in the original thread which discussed this several years ago. But even if it 
were the case, it still doesn't make "let QC owners steal coins" somehow equivalent to mining. There are probably 
several blocks of coins that can be stolen to the tune of much greater rewards than a block reward, but, more broadly, 
what?! QC owners stealing coins from old outputs isn't somehow going to be seen as "OK", not to mention because many old 
outputs do have owners with the keys, they aren't all forgotten or lost.

Matt

From emu at emuadmin.com  Tue Mar 16 17:42:33 2021
From: emu at emuadmin.com (Emil Pfeffer)
Date: Tue, 16 Mar 2021 17:42:33 +0000
Subject: [bitcoin-dev] Taproot activation meeting on IRC - Tuesday 16th
 March 19:00 UTC
In-Reply-To: <202103151720.04687.luke@dashjr.org>
References: <202103151720.04687.luke@dashjr.org>
Message-ID: <20210316174233.pfby4grwz5cudjqb@www01.emuadmin.com>

On Mon, Mar 15, 2021 at 05:20:04PM +0000, Luke Dashjr via bitcoin-dev wrote:
> At the previous meeting, there was consensus for BIP8 activation parameters 
> except for LOT, assuming a release around this time. Since then, a release 
> has not occurred, and the new idea of Speedy Trial has been proposed to 
> preempt the original/main activation plan.
> 
> It's probably a good idea to meet up again to discuss these things and adjust 
> accordingly.
> 
> Agenda:
> 
> - Speedy Trial: Can we get a comparable consensus on the proposal?
>   (Note: current draft conflicts with original plan timeline)

Definitely not. This looks like a hijacking attempt.
We are already bombarded with too much information, the last thing we need is
a rushed upgrade. Even if it works out it is not a good precedent.
The current timeline of 18 months if the minimum that is acceptable for upgrades
such as taproot. We're not changing things that we worked out already. What next?
and how long till we go back and change the coin supply?  
I understand some of you have no patience and would like mass adoption tomorrow
but those are exactly the people that do not have a say in Bitcoin development.
if you want to get rich quick you do not care about Bitcoin. If you want faster
development cycles then you have lightning to play with. 
I have to reiterate: we *DO NOT* change things we already established in the past.
There are reasons everything is as it is and if you want to develop Bitcoin you have
to build upon the already established rules.


> - Main activation, post ST: Moving startheight (and timeoutheight?) later
>   is probably a good idea at this point, both because too little progress has
>   been made on it, and to avoid the conflict with the current ST draft.

There is no conflict. We're not upgrading Bitcoin using fancy new tools.
We're still on track with the already established timeline. 
Although one is better than the other it doesn't really matter because we know
which way is going to go. In order to solve the LOT debate lets give Wladimir the
power to decide on his own and if he has no strong opinions he should just flip a coin.
the MAST threshold can be even lower because it is not representative of an economic
majority and it could speed up the upgrade.

> 
> - Making progress: To date, too few people have been involved in materialising
>   the main activation plan. If it's going to move forward, more people need to
>   get actively involved. This should not wait for ST to complete, unless we
>   want another 4-5 month slip of the timeline.

Nope. This is not the time where people need to get involved. There is no need for 
more noise. People will get involved progressivly as time advances but as long
as Core does not release the parameters of the game there are no incentives for
the actors that will play the Taproot upgrade to show up. If Taproot is what the
market wants then the game theoretics of Bitcoin will get us there but since an
upgrade essentially means a change in consensus then some disturbance is expected and guaranteed. 
At this point involve as few people as possible and get it done. This is just about
the software and the parameters of the new consesus. Theres plenty of time
for the show that's about to come, the market will do what the market does.

Worst case scenario Luke get some people behind and fork off Core with LOT=true and
lower MAST threshold. The market wants to play.

> 
> This meeting is tentatively scheduled for *tomorrow*, March 16th at the usual 
> time of 19:00 UTC, in freenode's ##Taproot-activation IRC channel. If turnout 
> is too low, we can postpone it a week, but it'd be nice to get things 
> resolved and moving sooner.
> 
> As a reminder, the channel is also open for ongoing discussion 24/7, and there 
> is a web chat client here:
> 
> https://webchat.freenode.net/?channel=##taproot-activation
> 
> Luke
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-- 

From loneroassociation at gmail.com  Tue Mar 16 18:22:48 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Tue, 16 Mar 2021 14:22:48 -0400
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CAHAXnDW4PFwtSxvfJ8KXipXX2h2w9824=q9ptsTLkrchac2QXA@mail.gmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CAMnpzfop8ttqjMAKoS37zpQV6WiZfi1Bn+y_e-HaepTiD4Vm1Q@mail.gmail.com>
 <CAB0O3SVNyr_t23Y0LyT0mSaf6LONFRLYJ8qzO7rcdJFnrGccFw@mail.gmail.com>
 <CA+YkXXwkSCu=2UOEhzFBzGDHo1c=Ewqsnxp632ke3jdH1ff5WA@mail.gmail.com>
 <CA+YkXXwfS7eer5Za_ed9tCNdfOp4c3nV_X=mfXzoDxMm6BrizQ@mail.gmail.com>
 <PS2P216MB0914F0B05E1AAB48D9A765609D6D9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>
 <CAHAXnDW4PFwtSxvfJ8KXipXX2h2w9824=q9ptsTLkrchac2QXA@mail.gmail.com>
Message-ID: <CA+YkXXwg1-mRvNukY=a55eJvY8JrXfFy1CoSmNnGX4dwdN5gAg@mail.gmail.com>

In regards to my BIP proposal, I finally added a bit more details to the
draft. So far an interesting discussion to say the least.

Best regards, Andrew

On Tue, Mar 16, 2021, 9:23 AM Thomas Hartman via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> MY LORD HIS EXCELLENCY:
>
>   It is indeed a contest between free markets and central planning.
>
>   Governments can in effect say, you are permitted to buy energy to
> smelt aluminum, but not to mine bitcoin, even if bitcoin is more
> profitable.
>
>   To the extent that free markets in energy are suppressed, as you
> pointed out in china, bitcoin can indeed be suppressed.
>
>   The solution is not to make bitcoin a centrally managed currency,
> but to fight hard for free speech, free markets, and in particular
> free markets in energy.
>
>   That being said, bitcoin is designed to thrive even if driven
> underground.
>
>   Your humble subject etc.
>
>
>
>
>
> On Sun, Mar 14, 2021 at 9:41 AM LORD HIS EXCELLENCY JAMES HRMH via
> bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> >
> > Good Afternoon,
> >
> > It is obvious that something needs to be done to curtail the current
> cost of mining in kWh per block. I understand proposals are rejected
> because it is considered censorship and Bitcoin has a consensus to allow
> anyone to mine but, since mining requires specific hardware and energy
> requirements it is already a form of censorship where most on the planet
> except for the top 6% I am guessing here, cannot afford to mine. Without
> affecting the current algorithm, I have previously begun to explore the
> process by which mining can be turned into a lottery with only authorized
> payto addresses able to mine valid blocks, since transaction fees and block
> rewards exist to pay the miner. It would be better even if the algorithms
> are improved if there are some ways that only a subset of miners can
> produce valid blocks for any given period, say for 12 months with four
> groups starting three months apart to transition, and maybe limit mining to
> 50 people per continent to produce valid blocks at any o
>  ne time. Possibly this requires a consortium to oversee the lottery but
> it is something Bitcoin can handle themselves, and would do better to
> handle than to wait for government intervention as we have seen previously
> in China where power was too cheap Bitcoin was banned entirely.
> >
> > KING JAMES HRMH
> > Great British Empire
> >
> > Regards,
> > The Australian
> > LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
> > of Hougun Manor & Glencoe & British Empire
> > MR. Damian A. James Williamson
> > Wills
> >
> > et al.
> >
> >
> > Willtech
> > www.willtech.com.au
> > www.go-overt.com
> > and other projects
> >
> > earn.com/willtech
> > linkedin.com/in/damianwilliamson
> >
> >
> > m. 0487135719
> > f. +61261470192
> >
> >
> > This email does not constitute a general advice. Please disregard this
> email if misdelivered.
> > ________________________________
> > From: bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on
> behalf of Lonero Foundation via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org>
> > Sent: Saturday, 6 March 2021 3:16 AM
> > To: Devrandom <c1.devrandom at niftybox.net>
> > Cc: Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
> > Subject: Re: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
> Datastore for Energy Efficient Mining
> >
> > Also in regards to my other email, I forgot to iterate that my
> cryptography proposal helps behind the efficiency category but also tackles
> problems such as NP-Completeness or Halting which is something the BTC
> network could be vulnerable to in the future. For sake of simplicity, I do
> want to do this BIP because it tackles lots of the issues in regards to
> this manner and can provide useful insight to the community. If things such
> as bigger block height have been proposed as hard forks, I feel at the very
> least an upgrade regarding the hashing algorithm and cryptography does at
> least warrant some discussion. Anyways I hope I can send you my BIP, just
> let me know on the preferred format?
> >
> > Best regards, Andrew
> >
> > On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <
> loneroassociation at gmail.com> wrote:
> >
> > Hi, this isn't about the energy efficient argument in regards to
> renewables or mining devices but a better cryptography layer to get the
> most out of your hashing for validation. I do understand the arbitrariness
> of it, but do want to still propose a document. Do I use the Media Wiki
> format on GitHub and just attach it as my proposal?
> >
> > Best regards, Andrew
> >
> > On Fri, Mar 5, 2021, 10:07 AM Devrandom <c1.devrandom at niftybox.net>
> wrote:
> >
> > Hi Ryan and Andrew,
> >
> > On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
> >
> >
> >   https://www.truthcoin.info/blog/pow-cheapest/
> >     "Nothing is Cheaper than Proof of Work"
> >     on | 04 Aug 2015
> >
> >
> > Just to belabor this a bit, the paper demonstrates that the mining
> market will tend to expend resources equivalent to miner reward.  It does
> not prove that mining work has to expend *energy* as a primary cost.
> >
> > Some might argue that energy expenditure has negative externalities and
> that we should move to other resources.  I would argue that the negative
> externalities will go away soon because of the move to renewables, so the
> point is likely moot.
> >
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210316/8cd8a2b8/attachment-0001.html>

From erik at q32.com  Wed Mar 17 00:24:35 2021
From: erik at q32.com (Erik Aronesty)
Date: Tue, 16 Mar 2021 20:24:35 -0400
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <CA+YkXXzPt8vf=bfpW+NBqH_G7sTiyFcGSZa+j31Fx_O5ir93Cw@mail.gmail.com>
References: <CA+YkXXw5uh4yfvqDiBBEXcq188PEGku-NFFAq7uNuAFTG3ooTQ@mail.gmail.com>
 <1802-604c7400-4d1-7b635e80@91248813>
 <CA+YkXXzPt8vf=bfpW+NBqH_G7sTiyFcGSZa+j31Fx_O5ir93Cw@mail.gmail.com>
Message-ID: <CAJowKgL836fCjKvC=yu0aFtF4Sot6WvzJY-Uo9Oxh27bfMw5vA@mail.gmail.com>

Any proposed hard fork will wind up being some sort of Bitcoin sv thing

no matter what you propose or no matter how awesome it is they'll be many
people in the community who would prefer to continue business as usual.
which I'd like to point out seems to be working very, very well.

so you should go into it with open eyes and start a fork right from the
get-go.

This is why I'm a fan of proof of burn.   you can also use burned main
chain as a way of mining on the new chain.

the interesting thing is that you can calculate proof of work equivalence
in a meaningful way if you use Bitcoin as a reference, and the total mined
supply of the new coin, as another reference point.

That would enable you to switch it entirely to burned coins as a proxy for
proof of work, and enable people who have Bitcoin to meaningfully
participate in the new network.













On Sat, Mar 13, 2021, 10:02 AM Lonero Foundation <
loneroassociation at gmail.com> wrote:

> Hi, I know the differences between the cryptographic hashing algorithm and
> key validation. I know hashing is for SHA, but was referring to asymmetric
> cryptography in regards to the key validation. I should have used a
> different term though instead of, "In regards to cryptographic hashing,", I
> should have stated in regards to cryptographic key validation. There are a
> few other dubious clarifications or minor edits I should make in order to
> not draw confusion. I will do a repo update today. Honest mistake, but
> enough with the sarcasm.
>
> Best regards, Andrew
>
> On Sat, Mar 13, 2021, 3:13 AM email at yancy.lol <email at yancy.lol> wrote:
>
>> My email was not intended as an insult.  Your proposal seemed a bit like
>> gibberish and made some obvious mistakes as pointed out before (such as
>> conflating secp256k1 with sha256), and so I was genuinely curious if you
>> were a bot spamming the list.
>>
>>
>> Maybe a more interesting topic is, can GPT3 be used to generate a BIP?
>> How long before our AI overlord produces improvements to Bitcoin?  At what
>> point will the AI have more than 51% of commit frequency?  Will we have
>> lost the war to our new centralized overlord?
>>
>> Cheers,
>> -Yancy
>>
>>
>> On Saturday, March 13, 2021 00:31 CET, Lonero Foundation <
>> loneroassociation at gmail.com> wrote:
>>
>>
>> Also, I already stated I was referring to signature validation
>> cryptography in that aspect:
>> https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/digital-signatures/ecdsa-sign-verify-examples.html
>> My BIP has a primary purpose in regards to what I want to develop proofs
>> for and the different cryptographic elements I want to develop proofs for.
>> That said to those who disagree with the premise, I do prefer
>> constructive feedback over insults or making fun of one another. After all
>> this is an improvement proposal with a specific purpose aiming to develop a
>> specific thing, not a guy who is just wanting to copy and paste a
>> repository and call it a day.
>>
>> Best regards, Andrew
>>
>> On Fri, Mar 12, 2021 at 6:21 PM Lonero Foundation <
>> loneroassociation at gmail.com> wrote:
>>
>>> Hi, I also want to emphasize that my main point isn't just to create a
>>> BTC hardfork or become another Bitcoin Cash, Gold, or SV. The main point in
>>> regards to this BIP actually expands POW rather than replaces or creates an
>>> alternative. Many of the problems faced in regards to security in the
>>> future as well as sustainability is something I believe lots of the changes
>>> I am proposing can fix. In regards to technological implementation, once
>>> this is assigned draft status I am more than willing to create preprints
>>> explaining the cryptography, hashing algorithm improvements, and consensus
>>> that I am working on. This is a highly technologically complex idea that I
>>> am willing to "call my bluff on" and expand upon. As for it being a draft,
>>> I think this is a good starting point at least for draft status prior to
>>> working on technological implementation.
>>>
>>> Best regards, Andrew
>>>
>>> On Fri, Mar 12, 2021 at 5:37 PM email at yancy.lol <email at yancy.lol> wrote:
>>>
>>>> I think Andrew himself is an algo.  The crypto training set must not be
>>>> very good.
>>>>
>>>> Cheers,
>>>> -Yancy
>>>>
>>>> On Friday, March 12, 2021 17:54 CET, Lonero Foundation via bitcoin-dev <
>>>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>
>>>>
>>>> Hi, I awkwardly phrased that part, I was referring to key validation in
>>>> relation to that section as well as the hashing related to those keys. I
>>>> might rephrase it.
>>>>
>>>> In regards to technical merit, the main purpose of the BIP is to get a
>>>> sense of the idea. Once I get assigned a BIP draft #, I am willing to
>>>> follow it up with many preprints or publications to go in the references
>>>> implementation section and start dev work before upgrading to final status.
>>>>
>>>> This will take about 400 hours of my time, but is something I am
>>>> personally looking into developing as a hard fork.
>>>>
>>>> Keep in mind this is a draft, so after it is assigned a number to
>>>> references I do at the very least hope to describe various parts of the
>>>> cryptographic proofs and algorithmic structure I am hoping for.
>>>>
>>>> Best regards, Andrew
>>>>
>>>> On Fri, Mar 12, 2021, 10:03 AM Erik Aronesty <erik at q32.com> wrote:
>>>>
>>>>> secp236k1 isn't a hashing algo.   your BIP needs about 10 more pages
>>>>> and some degree of technical merit.
>>>>>
>>>>> i suggest you start here:
>>>>>
>>>>> https://en.bitcoin.it/wiki/Proof_of_burn
>>>>> https://bitcointalk.org/index.php?topic=225690.0
>>>>>
>>>>> proof-of-burn is a nice alternative to proof-of-work.   i always
>>>>> suspected that, if designed correctly, it could be a proven
>>>>> equivalent.   you could spin up a fork of bitcoin that allows aged,
>>>>> burned, coins instead of POW that would probably work just fine.
>>>>>
>>>>> - erik
>>>>>
>>>>> On Thu, Mar 11, 2021 at 11:56 AM Lonero Foundation via bitcoin-dev
>>>>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>> >
>>>>> > Hi, I have submitted the BIP Pull Request here:
>>>>> https://github.com/bitcoin/bips/pull/1084
>>>>> >
>>>>> > Hoping to receive a BIP # for the draft prior to
>>>>> development/reference implementation.
>>>>> >
>>>>> > Best regards, Andrew
>>>>> >
>>>>> > On Mon, Mar 8, 2021, 6:40 PM Lonero Foundation <
>>>>> loneroassociation at gmail.com> wrote:
>>>>> >>
>>>>> >> Hi, here is the list to the BIP proposal on my own repo:
>>>>> https://github.com/Mentors4EDU/bip-amkn-posthyb/blob/main/bip-draft.mediawiki
>>>>> >> Can I submit a pull request on the BIPs repo for this to go into
>>>>> draft mode? Also, I think this provides at least some more insight on what
>>>>> I want to work on.
>>>>> >>
>>>>> >> Best regards, Andrew
>>>>> >>
>>>>> >> On Sat, Mar 6, 2021, 10:42 AM Lonero Foundation <
>>>>> loneroassociation at gmail.com> wrote:
>>>>> >>>
>>>>> >>> [off-list]
>>>>> >>>
>>>>> >>> Okay. I will do so and post the link here for discussion before
>>>>> doing a pull request on BIP's repo as the best way to handle it.
>>>>> >>>
>>>>> >>> Best regards, Andrew
>>>>> >>>
>>>>> >>> On Sat, Mar 6, 2021, 10:21 AM Ricardo Filipe <
>>>>> ricardojdfilipe at gmail.com> wrote:
>>>>> >>>>
>>>>> >>>> As said before, you are free to create the BIP in your own
>>>>> repository
>>>>> >>>> and bring it to discussion on the mailing list. then you can do a
>>>>> PR
>>>>> >>>>
>>>>> >>>> Lonero Foundation via bitcoin-dev
>>>>> >>>> <bitcoin-dev at lists.linuxfoundation.org> escreveu no dia s?bado,
>>>>> >>>> 6/03/2021 ?(s) 08:58:
>>>>> >>>> >
>>>>> >>>> > I know Ethereum had an outlandishly large percentage of nodes
>>>>> running on AWS, I heard the same thing is for Bitcoin but for mining. Had
>>>>> trouble finding the article online so take it with a grain of salt. The
>>>>> point though is that both servers and ASIC specific hardware would still be
>>>>> able to benefit from the cryptography upgrade I am proposing, as this was
>>>>> in relation to the disinfranchisemet point.
>>>>> >>>> >
>>>>> >>>> > That said, I think the best way to move forward is to submit a
>>>>> BIP pull request for a draft via GitHub using BIP #2's draft format and any
>>>>> questions people have can be answered in the reqeust's comments. That way
>>>>> people don't have to get emails everytime there is a reply, but replies
>>>>> still get seen as opposed to offline discussion. Since the instructions say
>>>>> to email bitcoin-dev before doing a bip draft, I have done that. Since
>>>>> people want to see the draft beforehand and it isn't merged manually
>>>>> anyways, I think it is the easiest way to handle this.
>>>>> >>>> >
>>>>> >>>> > I'm also okay w/ continuing the discussion on bitcoin-dev but
>>>>> rather form a discussion on git instead given I don't want to accidentally
>>>>> impolitely bother people given this is a moderated list and we already
>>>>> established some interest for at least a draft.
>>>>> >>>> >
>>>>> >>>> > Does that seem fine?
>>>>> >>>> >
>>>>> >>>> > Best regards, Andrew
>>>>> >>>> >
>>>>> >>>> > On Fri, Mar 5, 2021, 7:41 PM Keagan McClelland <
>>>>> keagan.mcclelland at gmail.com> wrote:
>>>>> >>>> >>
>>>>> >>>> >> > A large portion of BTC is already mined through AWS servers
>>>>> and non-asic specific hardware anyways. A majority of them would benefit
>>>>> from a hybrid proof, and the fact that it is hybrid in that manner wouldn't
>>>>> disenfranchise currently optimized mining entities as well.
>>>>> >>>> >>
>>>>> >>>> >> My instincts tell me that this is an outlandish claim. Do you
>>>>> have supporting evidence for this?
>>>>> >>>> >>
>>>>> >>>> >> Keagan
>>>>> >>>> >>
>>>>> >>>> >> On Fri, Mar 5, 2021 at 3:22 PM Lonero Foundation via
>>>>> bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>> >>>> >>>
>>>>> >>>> >>> Actually I mentioned a proof of space and time hybrid which
>>>>> is much different than staking. Sorry to draw for the confusion as PoC is
>>>>> more commonly used then PoST.
>>>>> >>>> >>> There is a way to make PoC cryptographically compatible w/
>>>>> Proof of Work as it normally stands:
>>>>> https://en.wikipedia.org/wiki/Proof_of_space
>>>>> >>>> >>> It has rarely been done though given the technological
>>>>> complexity of being both CPU compatible and memory-hard compatible. There
>>>>> are lots of benefits outside of the realm of efficiency, and I already
>>>>> looked into numerous fault tolerant designs as well and what others in the
>>>>> cryptography community attempted to propose. The actual argument you have
>>>>> only against this is the Proof of Memory fallacy, which is only partially
>>>>> true. Given how the current hashing algorithm works, hard memory allocation
>>>>> wouldn't be of much benefit given it is more optimized for CPU/ASIC
>>>>> specific mining. I'm working towards a hybrid mechanism that fixes that.
>>>>> BTW: The way Bitcoin currently stands in its cryptography still needs
>>>>> updating regardless. If someone figures out NP hardness or the halting
>>>>> problem the traditional rule of millions of years to break all of Bitcoin's
>>>>> cryptography now comes down to minutes. Bitcoin is going to have to
>>>>> eventually radically upgrade their cryptography and hashing algo in the
>>>>> future regardless. I want to integrate some form of NP complexity in
>>>>> regards to the hybrid cryptography I'm aiming to provide which includes a
>>>>> polynomial time algorithm in the cryptography. More than likely the first
>>>>> version of my BTC hard fork will be coded in a way where integrating such
>>>>> complexity in the future only requires a soft fork or minor upgrade to its
>>>>> chain.
>>>>> >>>> >>>
>>>>> >>>> >>> In regards to the argument, "As a separate issue, proposing a
>>>>> hard fork in the hashing algorithm will invalidate the enormous amount of
>>>>> capital expenditure by mining entities and disincentivize future capital
>>>>> expenditure into mining hardware that may compute these more "useful"
>>>>> proofs of work."
>>>>> >>>> >>>
>>>>> >>>> >>> A large portion of BTC is already mined through AWS servers
>>>>> and non-asic specific hardware anyways. A majority of them would benefit
>>>>> from a hybrid proof, and the fact that it is hybrid in that manner wouldn't
>>>>> disenfranchise currently optimized mining entities as well.
>>>>> >>>> >>>
>>>>> >>>> >>> There are other reasons why a cryptography upgrade like this
>>>>> is beneficial. Theoretically one can argue BItcoin isn't fully
>>>>> decentralized. It is few unsolved mathematical proofs away from being
>>>>> entirely broken. My goal outside of efficiency is to build cryptography in
>>>>> a way that prevents such an event from happening in the future, if it was
>>>>> to ever happen. I have various research in regards to this area and work
>>>>> alot with distributed computing. I believe if the BTC community likes such
>>>>> a proposal, I would single handedly be able to build the cryptographic
>>>>> proof myself (though would like as many open source contributors as I can
>>>>> get :)
>>>>> >>>> >>>
>>>>> >>>> >>> Anyways just something to consider. We are in the same space
>>>>> in regards to what warrants a shitcoin or the whole argument against
>>>>> staking.
>>>>> >>>> >>>
>>>>> https://hackernoon.com/ethereum-you-are-a-centralized-cryptocurrency-stop-telling-us-that-you-arent-pi3s3yjl
>>>>> >>>> >>>
>>>>> >>>> >>> Best regards,  Andrew
>>>>> >>>> >>>
>>>>> >>>> >>> On Fri, Mar 5, 2021 at 4:11 PM Keagan McClelland <
>>>>> keagan.mcclelland at gmail.com> wrote:
>>>>> >>>> >>>>
>>>>> >>>> >>>> It is important to understand that it is critical for the
>>>>> work to be "useless" in order for the security model to be the same. If the
>>>>> work was useful it provides an avenue for actors to have nothing at stake
>>>>> when submitting a proof of work, since the marginal cost of block
>>>>> construction will be lessened by the fact that the work was useful in a
>>>>> different context and therefore would have been done anyway. This actually
>>>>> degrades the security of the network in the process.
>>>>> >>>> >>>>
>>>>> >>>> >>>> As a separate issue, proposing a hard fork in the hashing
>>>>> algorithm will invalidate the enormous amount of capital expenditure by
>>>>> mining entities and disincentivize future capital expenditure into mining
>>>>> hardware that may compute these more "useful" proofs of work. This is
>>>>> because any change in the POW algorithm will be considered unstable and
>>>>> subject to change in the future. This puts the entire network at even more
>>>>> risk meaning that no entity is tying their own interests to that of the
>>>>> bitcoin network at large. It also puts the developers in a position where
>>>>> they can be bribed by entities with a vested interest in deciding what the
>>>>> new "useful" proof of work should be.
>>>>> >>>> >>>>
>>>>> >>>> >>>> All of these things make the Bitcoin network worse off.
>>>>> >>>> >>>>
>>>>> >>>> >>>> Keagan
>>>>> >>>> >>>>
>>>>> >>>> >>>> On Fri, Mar 5, 2021 at 1:48 PM Lonero Foundation via
>>>>> bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>> >>>> >>>>>
>>>>> >>>> >>>>> Also in regards to my other email, I forgot to iterate that
>>>>> my cryptography proposal helps behind the efficiency category but also
>>>>> tackles problems such as NP-Completeness or Halting which is something the
>>>>> BTC network could be vulnerable to in the future. For sake of simplicity, I
>>>>> do want to do this BIP because it tackles lots of the issues in regards to
>>>>> this manner and can provide useful insight to the community. If things such
>>>>> as bigger block height have been proposed as hard forks, I feel at the very
>>>>> least an upgrade regarding the hashing algorithm and cryptography does at
>>>>> least warrant some discussion. Anyways I hope I can send you my BIP, just
>>>>> let me know on the preferred format?
>>>>> >>>> >>>>>
>>>>> >>>> >>>>> Best regards, Andrew
>>>>> >>>> >>>>>
>>>>> >>>> >>>>> On Fri, Mar 5, 2021, 10:12 AM Lonero Foundation <
>>>>> loneroassociation at gmail.com> wrote:
>>>>> >>>> >>>>>>
>>>>> >>>> >>>>>> Hi, this isn't about the energy efficient argument in
>>>>> regards to renewables or mining devices but a better cryptography layer to
>>>>> get the most out of your hashing for validation. I do understand the
>>>>> arbitrariness of it, but do want to still propose a document. Do I use the
>>>>> Media Wiki format on GitHub and just attach it as my proposal?
>>>>> >>>> >>>>>>
>>>>> >>>> >>>>>> Best regards, Andrew
>>>>> >>>> >>>>>>
>>>>> >>>> >>>>>> On Fri, Mar 5, 2021, 10:07 AM Devrandom <
>>>>> c1.devrandom at niftybox.net> wrote:
>>>>> >>>> >>>>>>>
>>>>> >>>> >>>>>>> Hi Ryan and Andrew,
>>>>> >>>> >>>>>>>
>>>>> >>>> >>>>>>> On Fri, Mar 5, 2021 at 5:42 AM Ryan Grant via bitcoin-dev
>>>>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>> >>>> >>>>>>>>
>>>>> >>>> >>>>>>>>
>>>>> >>>> >>>>>>>>   https://www.truthcoin.info/blog/pow-cheapest/
>>>>> >>>> >>>>>>>>     "Nothing is Cheaper than Proof of Work"
>>>>> >>>> >>>>>>>>     on | 04 Aug 2015
>>>>> >>>> >>>>>>>>
>>>>> >>>> >>>>>>>
>>>>> >>>> >>>>>>> Just to belabor this a bit, the paper demonstrates that
>>>>> the mining market will tend to expend resources equivalent to miner
>>>>> reward.  It does not prove that mining work has to expend *energy* as a
>>>>> primary cost.
>>>>> >>>> >>>>>>>
>>>>> >>>> >>>>>>> Some might argue that energy expenditure has negative
>>>>> externalities and that we should move to other resources.  I would argue
>>>>> that the negative externalities will go away soon because of the move to
>>>>> renewables, so the point is likely moot.
>>>>> >>>> >>>>>>>
>>>>> >>>> >>>>> _______________________________________________
>>>>> >>>> >>>>> bitcoin-dev mailing list
>>>>> >>>> >>>>> bitcoin-dev at lists.linuxfoundation.org
>>>>> >>>> >>>>>
>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>> >>>> >>>
>>>>> >>>> >>> _______________________________________________
>>>>> >>>> >>> bitcoin-dev mailing list
>>>>> >>>> >>> bitcoin-dev at lists.linuxfoundation.org
>>>>> >>>> >>>
>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>> >>>> >
>>>>> >>>> > _______________________________________________
>>>>> >>>> > bitcoin-dev mailing list
>>>>> >>>> > bitcoin-dev at lists.linuxfoundation.org
>>>>> >>>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>> >
>>>>> > _______________________________________________
>>>>> > bitcoin-dev mailing list
>>>>> > bitcoin-dev at lists.linuxfoundation.org
>>>>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>>
>>>>
>>>>
>>>>
>>>>
>>>
>>>
>>
>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210316/be40d50c/attachment-0001.html>

From bitcoin-dev at rgrant.org  Wed Mar 17 01:23:50 2021
From: bitcoin-dev at rgrant.org (Ryan Grant)
Date: Wed, 17 Mar 2021 01:23:50 +0000
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <98d63098-dabd-ba9f-38bc-1214631edb77@mattcorallo.com>
References: <202103152148.15477.luke@dashjr.org>
 <a88cd471-fdc9-de35-86cd-595b387249c8@mattcorallo.com>
 <202103160344.26299.luke@dashjr.org>
 <98d63098-dabd-ba9f-38bc-1214631edb77@mattcorallo.com>
Message-ID: <CAMnpzfo6UWYmWGQk2aZnBeGvv6UGSe0=PAAyenqQyE3s5WJLEw@mail.gmail.com>

I enjoyed the reindexing using a distinct subject and I appreciate the
new clarifications by those whose instinct was to put effort into a
response.  Although I try to keep up, some of the taproot QC
mitigations that are possible had escaped my attention thus far.

From ZmnSCPxj at protonmail.com  Wed Mar 17 04:11:26 2021
From: ZmnSCPxj at protonmail.com (ZmnSCPxj)
Date: Wed, 17 Mar 2021 04:11:26 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <932f2f2866cac087a207f8757c9df4b776ccdb04.camel@willtech.com.au>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
 <170b27c0-436f-c440-e3c3-f9577b764972@riseup.net>
 <SL2P216MB00896086AA80DE1A98293C469D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <Wz83obOLCjtbO-rIDw9mHM0ObBrE10y1rLg8vbEyp5BIxtfzlUJyLlnPZ-RWnvsKzJaKRe4bo7hnjlJnwL4-g7HyRNa6TvL_Y-gBQ12ifCg=@protonmail.com>
 <932f2f2866cac087a207f8757c9df4b776ccdb04.camel@willtech.com.au>
Message-ID: <4ltFpTt8QxX44nedimzJ7J4F1bIhwxb9rbqf1DeGlYX8W7CduYCy64miuq2IIjee_K5rBV6ofEPzdYQniEq6IR4I7ZO5ENlk9z-mQPs-YZE=@protonmail.com>

Good morning JAMES,

> Good Afternoon,
>
> Verifiable and independantly verifiable are not the same. Independantly
> scrutinable means any public can scrutinise blockchain to determine it
> is honest. It does not rely on involved parties but insistently on the
> data published in the blockchain.

The involved parties ultimately publish the data on the blockchain, and the result is independently validatable.
All that each involved party has to do is validate for itself that it does not lose any funds, and, by the operation of math, the summary result does not result in any loss (or creation) of funds, thus CoinJoin cannot lead to fraud.

I do not see much of a point in your objection here.
For example, in the case of Lightning, the individual payments made by the participants in the channel cannot be verified by anyone else (they can lie about the payments that occurred on their channel).
But both participants in the channel need to agree on a single result, and it is that summary result that is independently verified onchain and published.

Indeed, one major technique for privacy improvement in Bitcoin is the simple technique of creating summaries of multiple actions without revealing details.
Such a general class of techniques works by reducing the data pushed onchain which provides both (a) scale because less data on chain and (b) privacy because less data is analyzable onchain.

Basically ---

1.  The entire point of a public blockchain is to prevent uncontrolled forgery of the coin.
    Only particular rules allow construction of new coins (in Bitcoin, the mining subsidy).
2.  Various techniques can be used to support the above central point.
    * The simplest is to openly publish every amount value in cleartext.
      * However, this is not necessarily the ***only*** acceptable way to achieve the goal!
      * Remember, the point is to prevent uncontrolled forgery.
        The point is **not** mass surveillance.
    * Another method would be to openly publish **summaries** of transactions, such as by Lightning Network summarizing the result of multiple payments.
      * CoinJoin is really just a way to summarize multiple self-payments.
    * Another method would be to use homomorphisms between a cleartext and a ciphertext, and publish only the ciphertext (which can be independently verified as correctly being added together and that inputs equal outputs plus fees).

No privacy technique worth discussing and development in Bitcoin gets around the above point, and thus fraud cannot be achieved with those (at least if we define fraud simply as "those who control the keys control the coins" --- someone stealing a copy of your privkeys is beyond this definition of fraud).
Any privacy improvement Taproot buys (mostly in LN, but also some additional privacy for CoinSwap) will still not allow fraud.

Regards,
ZmnSCPxj

From ZmnSCPxj at protonmail.com  Wed Mar 17 04:19:28 2021
From: ZmnSCPxj at protonmail.com (ZmnSCPxj)
Date: Wed, 17 Mar 2021 04:19:28 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <93d634e2-4102-78f6-c5bc-48fd2af10666@peersm.com>
References: <CAFBxzAAO1u=C8wpwvRs5evE657V0NdnSE9PYAbanpJt5ZdSkdA@mail.gmail.com>
 <3504919A-6D19-4858-B00C-9C0FEB090DB5@voskuil.org>
 <PS2P216MB09147F068F81F31593E06A5F9D6D9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>
 <93d634e2-4102-78f6-c5bc-48fd2af10666@peersm.com>
Message-ID: <wOCt6DJ8N_0A9iJ43wTFj_4bR7DorXrB6cIGPsPBr6G_qNDP6veoDOVXnu_9wiKT2prQtbcLApzos7dSBXsaU--bv88m4xLXC8PVwpgRIvQ=@protonmail.com>


> It's incredible how this troll keeps trolling and the list (bitcoin-dev !!) keeping attention
>
> Good troll, really

Depending on topic raised, it may be useful to at least answer the troll naively as if it were an honest question, if only so that third parties reading do not get confused and think the troll is bringing up some objection that is actually relevant.

For this particular topic you replied to, it seems to me obviously inane to discuss the "lordship" and "majesty" of the troll.
Even if the claims to such "lordship" are *true*, for most of the world, the relevance of the previous British empire is little more than a reality TV show about the British royal family (oh, some random thing happened to some random descendant of the royal family, how interesting, say did you see that nice new (actually old) technique Jeremy was talking about on the other thread about delegating control of coins to script, it looks like "graftroot without a softfork"?), and any particular claims to nobility or aristocracy are largely moot, thus not worth answering.


Regards,
ZmnSCPxj

From ZmnSCPxj at protonmail.com  Wed Mar 17 04:24:41 2021
From: ZmnSCPxj at protonmail.com (ZmnSCPxj)
Date: Wed, 17 Mar 2021 04:24:41 +0000
Subject: [bitcoin-dev] Provisions (was: PSA: Taproot loss of quantum
	protections)
In-Reply-To: <YFDLiR/w1IYiTURU@camus>
References: <202103152148.15477.luke@dashjr.org> <YE/p0u3gp4UYNS7R@camus>
 <3d6d308f-3d9f-588a-5b8f-3ab14560974c@gmail.com> <YFDLiR/w1IYiTURU@camus>
Message-ID: <qNBklvsZzwYQ7F43vxDvwRuB28nLzGwSIZ2tkYjAQikdNsVW-Zs3exp4otMW_xdl7EoJ2JIl6aZVs7NUM_-7ilxWGJ3HhQvhkYnyz3U7wgg=@protonmail.com>

Good morning Andrew and Andrea,

Further afield: https://en.bitcoin.it/wiki/Taproot_Uses

Taproot ring signatures was also asked by Andrea, above page contains this link (have not actually read it myself): https://github.com/jonasnick/taproot-ringsig

Regards,
ZmnSCPxj

From ZmnSCPxj at protonmail.com  Wed Mar 17 05:05:36 2021
From: ZmnSCPxj at protonmail.com (ZmnSCPxj)
Date: Wed, 17 Mar 2021 05:05:36 +0000
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
	Datastore for Energy Efficient Mining
In-Reply-To: <CA+YkXXy1Y407UDdEjRVjzBFOCmaUKDoZkvqtXkxkmXmMdNrwBQ@mail.gmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CALeFGL31M5DAULLRtCwjPYHaPVqsVqREUg6WQ2-cuj23SNk=BA@mail.gmail.com>
 <CA+YkXXwBMG6YUAhf-2U5EV5Ep5RgG2foc9chramNFN5=AQ=-EA@mail.gmail.com>
 <CALeFGL3E-rWW9aJkwre_3UF44vbNxPH2436DvaQdHoqEQ5b+eg@mail.gmail.com>
 <CA+YkXXyBmOootb=Kt6CH3yquYVnAZd=fJQqiF_A3p_pkB8QC3g@mail.gmail.com>
 <CALC81CMDQf4PqxRisQw58OL7QSFeMcQTvLMvmtOGJ_ya4-dhLg@mail.gmail.com>
 <CA+YkXXyP=BQ_a42J=RE7HJFcJ73atyrt4KWKUG8LbsbW=u4b5w@mail.gmail.com>
 <CA+YkXXw1AiMqCoPk_pUOdDMfkGF_T+aURGAjGK=MTa7jtAQchg@mail.gmail.com>
 <CA+YkXXy1Y407UDdEjRVjzBFOCmaUKDoZkvqtXkxkmXmMdNrwBQ@mail.gmail.com>
Message-ID: <rJRQhaMpP-Rq5oJ8nscd81M3tq8PiaSGfvlF6xr0qIjJgcoN_p3azQ9-a-RAvIxDmRa1cfoBkJZnLXILDzhYKh3SDk9TE08wbX60d6EAjQw=@protonmail.com>

Good morning Andrew,

Looking over the text...

> # I am looking towards integrating memory hard compatibility w/ the mining algorithm. Memory hard computation allows for time and space complexity for data storage functionality, and there is a way this can likely be implemented without disenfranchising current miners or their hardware if done right.

I believe this represents a tradeoff between time and space --- either you use one spatial unit and take a lot of time, or you use multiple spatial units and take smaller units of time.

But such time/space tradeoffs are already possible with the existing mechanism --- if you cannot run your existing SHA256d miner faster (time), you just buy more miners (space).

Thus, I think the requirement for memory hardness is a red herring in the design of proof-of-work algorithms.
Memory hardness *prevents* this tradeoff (you cannot create a smaller miner that takes longer to mine, as you have a memory requirement that prevents trading off space).

It is also helpful to remember that spinning rust consumes electricity as well, and that any operation that requires changes in data being stored requires a lot of energy.
Indeed, in purely computational algorithms (e.g. CPU processing pipelines) a significant amount of energy is spent on *changing* voltage levels, with very little energy (negligible compared to the energy spent in changing voltage levels in modern CMOS hardware) in *maintaining* the voltage levels.

> I don't see a reason why somebody with $2m of regular hardware can't mine the same amount of BTC as somebody with $2m worth of ASICs.

I assume here that "regular hardware" means "general-purpose computing device".

The Futamura projections are a good reason I see: http://blog.sigfpe.com/2009/05/three-projections-of-doctor-futamura.html

Basically, any interpreter + fixed program can be converted, via Futamura projection, to an optimized program that cannot interpret any other program but runs faster and takes less resources.

In short, any hardware interpreter (i.e. general-purpose computing device) + a fixed proof-of-whatever program, can be converted to an optimized hardware that can only perform that proof-of-whatever program, but consuming less energy and space and will (eventually) be cheaper per unit as well, so that $2M of such a specific hardware will outperform $2M of general-purpose computing hardwre.

Thus, all application-specificity (i.e. any fixed program) will always take less resources to run than a generic hardware interpreter that can run any program.

Thus, if you ever nail down the specifics of your algorithm, and if a thousand-Bitcoin industry ever grows around that program, you will find that ASICs ***will*** arise that run that algorithm faster and less energy-consuming than general-purpose hardware that has to interpret a binary.
**For one, memory/disk bus operations are limited only to actual data, without requiring additional bus operations to fetch code.**
Data can be connected directly from the output of one computational sub-unit to the input of another, without requiring (as in the general-purpose hardware case) that the intermediate outputs be placed in general-purpose storage register (which, as noted, takes energy to *change* its contents, and as general-purpose storage will also be used to hold *other* intermediate outputs).
Specialized HDDs can arise as well which are optimized for whatever access pattern your scheme requires, and that would also outperform general-purpose HDDs as well.

Further optimizations may also exist in an ASIC context that are not readily visible but which are likely to be hidden somewhere --- the more complicated your program design, the more likely it is that you will not readily see such hidden optimizations that can be achieved by ASICs (xref ASICBOOST).

In short, even with memory-hardness, an ASIC will arise which might need to be connected to an array of (possibly specialized) HDDs but which will still outperform your general-purpose hardware connected to an array of general-purpose storage.

Indeed, various storage solutions already have different specializations: SMR HDDs replace tape drives, PMR HDDs serve as caches of SMR HDDs, SSDs serve as caches of PMR HDDs.
An optimized technology stack like that can outperform a generic HDD.

You cannot fight the inevitability of ASICs and other specialized hardware, just as you cannot fight specialization.

You puny humans must specialize in order to achieve the heights of your civilization --- I can bet you 547 satoshis that you yourself cannot farm your own food, you specialize in software engineering of some kind and just pay a farmer to harvest your food for you.
Indeed, you probably do not pay a farmer directly, but pay an intermediary that specializes in packing food for transport from the farm to your domicile. which itself probably delegates the actual transporting to another specialist.
Similarly, ASICs will arise and focus on particularly high-value fixed computations, inevitably.



Regards,
ZmnSCPxj


From jlrubin at mit.edu  Wed Mar 17 06:30:23 2021
From: jlrubin at mit.edu (Jeremy)
Date: Tue, 16 Mar 2021 23:30:23 -0700
Subject: [bitcoin-dev] Delegated signatures in Bitcoin within existing
 rules, no fork required
In-Reply-To: <_SJunY4b2FhUkCj49-C_D7Uj1VYlS8qqZuO2-NIAEAIkCIfWEWVVgx-pNN0ZXlujGKUiU_hfcV-aq9yK6LHjHoK_5E0pYncVWtW99regZnE=@protonmail.com>
References: <CAD5xwhhC1Y13p7KazfUOXFZ5vi5MA9EQ-scyafv4aNkjskoXBg@mail.gmail.com>
 <plFEi9xoSnZ0TDJ7wH2dJx1F727FCSBrPsa2-26AXtveHKolt9bzTE1tiGIoPSjhgBfToVID2YHEaMGwwVU5dZ3Sozmz9UO-6HvbEDmm67I=@protonmail.com>
 <CAD5xwhhMjsYMRebN4Td614qOyAey24h7vQAjZjP_ETzvXJQBLw@mail.gmail.com>
 <_SJunY4b2FhUkCj49-C_D7Uj1VYlS8qqZuO2-NIAEAIkCIfWEWVVgx-pNN0ZXlujGKUiU_hfcV-aq9yK6LHjHoK_5E0pYncVWtW99regZnE=@protonmail.com>
Message-ID: <CAD5xwhj73Uq6j_Wu2e6-4VA_-=50mwK4G-Mf24mC87CFvF-LnA@mail.gmail.com>

ZmnSCPxj,

The chief reason to use SIGHASH_NONE (or SIGHASH_SINGLE for partial funds
delegations) is to make it so that the delegator can dynamically choose
things like a change output. Otherwise you need to know exactly what you
want beforehand.

I'd note that you can also achieve a decent amount of scripting capability
for fully pre-signed transactions using layered encryption. E.g., given
script Checksig(Alice) and Checksig(Bob), you can delegate to
2 of CheckMulti(Carol, Dave, Eve) by (for example) encrypting either a
presigned txn or the actual sk's themselves with enc(Carol, enc(Dave, m)),
enc(Carol, enc(Eve, m)), enc(Dave, enc(Eve, m)). This allows you to
post-hoc delegate a presigned (or the keys -- which may or may not be safe
if they are from a HD wallet mind you). You can also do a variant of
timelock encryption by encrypting m using a verifiable delay function (this
actually permits a new kind of relative lock, depending on where you layer
the VDF enc, which would be N seconds from when the two parties agree to
decrypt). The general protocol can also be optimized by giving Carol
enc(Dave, m) and enc(Eve) but then you have to have a confidential channel
to each delegate. You can also do a ZKCP type thing if you prove that a txn
matching a specific format is encrypted with the preimage to a hash.
There's a lot you can do as improvement on simple "hand the key" -- this
sounds kinda similar to scriptless scripts?

W.r.t. privacy, it certainly is a hit. But I think in situations where
privacy is a goal, then the delegation can contact the original signer and
ask to cooperate. However in some circumstances that won't be viable given
access to keys or whatnot. I would suggest in these cases that you can do a
hybrid: delegate to a script and provide a default sighash_all txn, and a
modifiable sighash_none/single. Then the delegates can decide what is best
to use and optimistically get the originals to sign off.

Interestingly, there is a subset of cases where it is desirable to have
privacy *from the original script holder*. Conceivably the tx does need to
be public at some point, but for interest, once delegated to from S to S',
S' could show a signature covering a txn hash from S', and request that S
sign it. S' can reveal partial information -- e.g., which inputs are being
spent, but not which outputs are being created. Maybe not super useful, but
it is interesting to note of course.

Best,

Jeremy
--
@JeremyRubin <https://twitter.com/JeremyRubin>
<https://twitter.com/JeremyRubin>


On Tue, Mar 16, 2021 at 1:36 AM ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:

> Good morning Jeremy,
>
> Thank you.
>
> Assuming only keys, an easier way of delegating would be simply to give a
> copy of the privkey outright to the delegatee.
>
> However, an advantage of this technique you described is that the
> delegator can impose additional restrictions that are programmable via any
> SCRIPT, an ability that merely handing over the privkey cannot do.
> Thus the technique has an ability that mere handover cannot achieve.
>
> If the delegatee is a known single entity, and S is simply the delegatee
> key plus some additional restrictions, it may be possible to sign with
> `SIGHASH_ALL` a transaction that spends A and D, and outputs to a singlesig
> of the delegatee key.
> This would avoid the use of `SIGHASH_NONE`, for a mild improvement in
> privacy.
> The output would still allow the delegatee to dispose of the funds by its
> unilateral decision subject to the fulfillment of the script S (at the cost
> of yet another transaction).
> On the other hand, if S is unusual enough, the enhanced privacy may be
> moot (the S already marks the transaction as unusual), so this variation
> has little value.
>
> In terms of offchain technology, if the delegator remains online, the
> delegatee may present a witness satisfying S to the delegator, and ask the
> delegator to provide an alternate transaction that spends A directly
> without spending D and outputs to whatever the delegatee wants.
> The delegator cannot refuse since the delegatee can always use the
> `SIGHASH_NONE` signature and spend to whatever it decides provided it can
> present a witness satisfying S.
> This is basically a typical "close transaction" for layer 2 technology.
> On the other hand, one generalized use-case for delegation would be if the
> delegator suspects it may not be online or able to sign with the delegator
> key, so this variation has reduced value as well.
>
> Regards,
> ZmnSCPxj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210316/db4de0e9/attachment-0001.html>

From ZmnSCPxj at protonmail.com  Wed Mar 17 06:56:27 2021
From: ZmnSCPxj at protonmail.com (ZmnSCPxj)
Date: Wed, 17 Mar 2021 06:56:27 +0000
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
	Datastore for Energy Efficient Mining
In-Reply-To: <CA+YkXXzv2Q02uwAvdwOPjk=Lkj5jyYb6AtC5B25oGfVej0y6TA@mail.gmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CALeFGL3E-rWW9aJkwre_3UF44vbNxPH2436DvaQdHoqEQ5b+eg@mail.gmail.com>
 <CA+YkXXyBmOootb=Kt6CH3yquYVnAZd=fJQqiF_A3p_pkB8QC3g@mail.gmail.com>
 <CALC81CMDQf4PqxRisQw58OL7QSFeMcQTvLMvmtOGJ_ya4-dhLg@mail.gmail.com>
 <CA+YkXXyP=BQ_a42J=RE7HJFcJ73atyrt4KWKUG8LbsbW=u4b5w@mail.gmail.com>
 <CA+YkXXw1AiMqCoPk_pUOdDMfkGF_T+aURGAjGK=MTa7jtAQchg@mail.gmail.com>
 <CA+YkXXy1Y407UDdEjRVjzBFOCmaUKDoZkvqtXkxkmXmMdNrwBQ@mail.gmail.com>
 <rJRQhaMpP-Rq5oJ8nscd81M3tq8PiaSGfvlF6xr0qIjJgcoN_p3azQ9-a-RAvIxDmRa1cfoBkJZnLXILDzhYKh3SDk9TE08wbX60d6EAjQw=@protonmail.com>
 <CA+YkXXzv2Q02uwAvdwOPjk=Lkj5jyYb6AtC5B25oGfVej0y6TA@mail.gmail.com>
Message-ID: <3eY-dfJ9c5qbmAL2gnRAkTFw_HYki0sNAwTtGptRleabpGhy7r5BApXD7qQs8OA63zAGrLha2ZIfGCbqyn1zHIbCaUgZv6Qmoqkz7M6mKV4=@protonmail.com>

Good morning Andrew,

> I wouldn't fully discount general purpose hardware or hardware outside of the realm of ASICS. BOINC (https://cds.cern.ch/record/800111/files/p1099.pdf) implements a decent distributed computing protocol (granted it isn't a cryptocurrency), but it far computes data at a much cheaper cost compared to the competition w/ decent levels of fault tolerance. I myself am running an extremely large scale open distributed computing pipeline, and can tell you for certain that what is out there is insane. In regards to the argument of generic HDDs and CPUs, the algorithmic implementation I am providing would likely make them more adaptable. More than likely, evidently there would be specialized HDDs similar to BurstCoin Miners, and 128-core CPUs, and all that. This could be inevitable, but the main point is providing access to other forms of computation along w/ ASICs. At the very least, the generic guys can experience it, and other infrastructures can have some form of compatibility.

What would the advantage of this be?

As I see it, changing the underlying algorithm is simply an attempt to reverse history, by requiring a new strain of specialization to be started instead of continuing the trend of optimizing SHA256d very very well.

I think it may be better to push *through* rather than *back*, and instead spread the optimization of SHA256d-specific hardware so widely that anyone with 2 BTC liquidity in one location has no particular advantage over anyone with 2 BTC liquidity in another location.
For one, I expect that there will be fewer patentable surprises remaining with SHA256d than any newer, much more complicated construction.

Regards,
ZmnSCPxj

From eric at voskuil.org  Wed Mar 17 07:14:42 2021
From: eric at voskuil.org (Eric Voskuil)
Date: Wed, 17 Mar 2021 00:14:42 -0700
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <PS2P216MB091436C0E4EA5F587F8EE7879D6A9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>
References: <PS2P216MB091436C0E4EA5F587F8EE7879D6A9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>
Message-ID: <EA543368-EDE2-4407-99C4-22387F930184@voskuil.org>


> If you actually believe the operation of consensus and the discussion relevant to that is a mundane or philosophical dissection of people's ability to grasp a humorous while on-topic but obligatorily unnecessary conversation you may prefer if you enquire how Bitcoin is censorship-resistant.

https://github.com/libbitcoin/libbitcoin-system/wiki/Censorship-Resistance-Property
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210317/c6eeab73/attachment.html>

From ZmnSCPxj at protonmail.com  Wed Mar 17 09:32:18 2021
From: ZmnSCPxj at protonmail.com (ZmnSCPxj)
Date: Wed, 17 Mar 2021 09:32:18 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <PS2P216MB09140E189C0873B4232F54359D6A9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
 <170b27c0-436f-c440-e3c3-f9577b764972@riseup.net>
 <SL2P216MB00896086AA80DE1A98293C469D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <Wz83obOLCjtbO-rIDw9mHM0ObBrE10y1rLg8vbEyp5BIxtfzlUJyLlnPZ-RWnvsKzJaKRe4bo7hnjlJnwL4-g7HyRNa6TvL_Y-gBQ12ifCg=@protonmail.com>
 <932f2f2866cac087a207f8757c9df4b776ccdb04.camel@willtech.com.au>,
 <4ltFpTt8QxX44nedimzJ7J4F1bIhwxb9rbqf1DeGlYX8W7CduYCy64miuq2IIjee_K5rBV6ofEPzdYQniEq6IR4I7ZO5ENlk9z-mQPs-YZE=@protonmail.com>
 <PS2P216MB09140E189C0873B4232F54359D6A9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>
Message-ID: <lQzKUb3esyrfDpI7iAVpOBcpriqEgyPI305Ck08zMrcf8MDlWCn6bwccqgeUghcri2a80b1P4ys_y-W0wubvVpvbihKVUPMJUlYw73ZOl7E=@protonmail.com>

Good morning,

> Good afternoon,
>
> That is not desirable since yourself and I cannot prove the property of the UTXO when it is further spent unless we can ourselves scrutinize it.

What property *needs* to be proven in the first place?

I suspect you are riding too much on your preferences and losing sight of the end goal I am pointing at here.
If your goal is to promote something you prefer (which you selected for other reasons) then the conclusion will be different.

I already laid out the necessary goal that I consider as necessary:

> The entire point of a public blockchain is to prevent uncontrolled forgery of the coin.

Given the above, it is not *necessary* to prove *any* property of *any* UTXO other than the property *this UTXO does not create more coins than what was designed*.
The exact value of that coin, the public key of that coin, *when* the coin was spent and for *what* purpose are not *necessary*, the only thing necessary to prove is that inputs = outputs + fee.
Indeed, the exact values of "inputs" and "outputs" and "fee" are also not needed to be verifiable, only the simple fact "input = outputs + fee" needs to be verifiable (which is why homomorphic encryptions of input, output, and fee are acceptable solutions to this goal).
It is immaterial if you or I *can* or *cannot* prove any *other* property, if the goal is only to prevent uncontrolled forgery.

If your definition of "fraud" is broader, then please lay it out explicitly.
As well, take note that as I understand it, this is largely the primary problem of cryptocurrencies that existed long before Bitcoin did; it is helpful to remember that Chaumian banks and various forms of e-cash existed before Bitcoin.

Regards,
ZmnSCPxj

From baro77 at gmail.com  Wed Mar 17 08:29:22 2021
From: baro77 at gmail.com (Andrea)
Date: Wed, 17 Mar 2021 09:29:22 +0100
Subject: [bitcoin-dev] Provisions (was: PSA: Taproot loss of quantum
 protections)
In-Reply-To: <qNBklvsZzwYQ7F43vxDvwRuB28nLzGwSIZ2tkYjAQikdNsVW-Zs3exp4otMW_xdl7EoJ2JIl6aZVs7NUM_-7ilxWGJ3HhQvhkYnyz3U7wgg=@protonmail.com>
References: <202103152148.15477.luke@dashjr.org> <YE/p0u3gp4UYNS7R@camus>
 <3d6d308f-3d9f-588a-5b8f-3ab14560974c@gmail.com> <YFDLiR/w1IYiTURU@camus>
 <qNBklvsZzwYQ7F43vxDvwRuB28nLzGwSIZ2tkYjAQikdNsVW-Zs3exp4otMW_xdl7EoJ2JIl6aZVs7NUM_-7ilxWGJ3HhQvhkYnyz3U7wgg=@protonmail.com>
Message-ID: <13413c69-7ca1-7dc0-3b44-4109b6b121e8@gmail.com>

Thanks for your time Andrew and ZmnSCPxj,

Jonas contrib was also referenced in twitter post provided by Andrew, 
but the repetion is an effective underlining of its importance :)

I'm busy-at-work for a couple of days, but I'm planning my weekend spare 
time to deal with infos from both of you... I guess I'll have further 
questions :)


Il 17/03/21 05:24, ZmnSCPxj ha scritto:
> Good morning Andrew and Andrea,
> 
> Further afield: https://en.bitcoin.it/wiki/Taproot_Uses
> 
> Taproot ring signatures was also asked by Andrea, above page contains this link (have not actually read it myself): https://github.com/jonasnick/taproot-ringsig
> 
> Regards,
> ZmnSCPxj
> 

From craigraw at gmail.com  Wed Mar 17 07:26:50 2021
From: craigraw at gmail.com (Craig Raw)
Date: Wed, 17 Mar 2021 09:26:50 +0200
Subject: [bitcoin-dev] Signature and Script Independent Hierarchy for
 Deterministic Wallets.
In-Reply-To: <QZfbtDnhhbNNFo6859MyCotRPeN-sdotrP2qM-Uitq5DYATVzqIgIb_UEtXETGk941M3HWDzxCmO9j84wjzuKndHOo6kxg3A9qCd8WWlAOI=@protonmail.ch>
References: <z1Vokp3jct_xwR8wt3n6r8t24DqtMpnrogF22YFc0_V3riIMWEq3WBiOriJOm2kVrVgtsu5p7wDTMrN3dLdA8DilhITMXb4tHY6wCnk3y1g=@protonmail.com>
 <QZfbtDnhhbNNFo6859MyCotRPeN-sdotrP2qM-Uitq5DYATVzqIgIb_UEtXETGk941M3HWDzxCmO9j84wjzuKndHOo6kxg3A9qCd8WWlAOI=@protonmail.ch>
Message-ID: <CAPR5oBNeBgA7c2+RiYa=e4zgf2Z1=4SOoJ6aL+Z52nkFCUJJpw@mail.gmail.com>

The motivation for this BIP proposal states that encoding the script type
in the derivation is redundant because output descriptors are becoming
commonplace. However, I think it's important to note that this shifts more
burden of wallet backup onto the user, who now has an additional item (the
output descriptor) to backup correctly. This is particularly important when
we consider that performing this backup is often laborious, including
stamping onto metal etc.

There are two ways to go here:
1. Use derivation paths that do not encode the script type, and conduct a
global education effort to encourage users to backup output descriptors in
addition to their seed words, without which their funds may be lost.
2. Use a standard set of derivation paths that encode the script type,
ensuring that even if users do not back this up, they can check against a
handful of common derivations and recover the funds.

Option 1 is obviously cleaner and more precise from a technical POV, but I
feel it is less practical. The approach of using common words to encode the
seed was chosen because these words are short and familiar - an output
descriptor on the other hand is technical and longer form, and thus more
difficult to record correctly, particularly on damage-resistant media.

Craig

On Tue, Mar 16, 2021 at 2:19 PM Robert Spigler via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> No, wallets don't and shouldn't have to check all script types on
> recovery.  Descriptor Wallets solve all of this.
>
> To back up a multisignature wallet, each cosigner stores their xprv (how
> you do this; BIP39, WIF, etc, is out of scope). and the wallet descriptor.
> This is done, for example, in Yeti. To recover, simply combine `M` private
> keys, and check the script designated in 1 of the descriptor copies.
>
> For single signature wallets, it is the same, except only one signature is
> needed.  Store xprv and descriptor.
>
> It is not fair nor accurate to say that currently, in order to recover,
> wallets need "just the seed words".  They also need all public keys, and
> derivation paths.
>
> Descriptors (and this BIP), is a much cleaner way to handle wallet
> creation and backup, by separating the two layers (keys and scripts) and
> getting rid of redundant information.
>
>
> Personal Fingerprint:  BF0D 3C08 A439 5AC6 11C1 5395 B70B 4A77 F850 548F
>
>
>
> ??????? Original Message ???????
> On Sunday, March 14, 2021 11:13 AM, SomberNight <
> somber.night at protonmail.com> wrote:
>
> > See some replies inline. (quoted text from BIP draft)
> >
> > > Date: Sun, 14 Mar 2021 01:51:15 +0000
> > > From: Robert Spigler RobertSpigler at protonmail.ch
> > > Subject: [bitcoin-dev] Signature and Script Independent Hierarchy for
> Deterministic Wallets.
> >
> > > There are many issues with the current standards. As background, BIP
> 44/49/84 specifies:
> > > `m / purpose' / coin_type' / account' / change / address_index`
> > > where the BIP43 `purpose'` path is separate for each script (P2PKH,
> P2WPKH-in-P2SH, and P2WPKH respectively). However, these per-script
> derivations are made redundant with descriptors
> >
> > > We should not be mixing keys and scripts in the same layer. The wallet
> should create extended private/public keys independent of the script or
> signature type
> >
> > You say that keys and scripts should not be mixed in the same layer, and
> imply that this was solely done due to these standards predating output
> script descriptors. Even if this was the case, it is not the only reason
> for doing it. BIP44/49/84 mixing scripts and keys in the same layer makes
> recovery from seed/mnemonic much easier.
> > Note the significant overlap between the authors of BIP39 and BIP44. I
> am fairly certain BIP44 was designed with recovering from a BIP39 seed (and
> no additional information backed up) in mind. Note the "Account discovery"
> section of BIP44.
> > (Electrum seeds go even further, as such seeds contain a version number
> that encodes both the script type and the key derivation path to use.)
> >
> > > We define the following 5 levels in the BIP32 path:
> > > `m / purpose' / coin_type' / account' / change / address_index`
> >
> > > [Account]
> > > It is crucial that this level is increased for each new wallet joined
> or private/public keys created; for both privacy and cryptographic purposes.
> > > For example, in multisignature wallets, before sending a new key
> record to a coordinator, the wallet must increment the `account'` level.
> Before creating it's own single signature wallet, the `account'` level must
> again be incremented.
> >
> > Imagine a user who has a BIP39 (or similar) seed. Even today, recovering
> most non-singlesig scripts from that is obviously infeasible. However, all
> singlesig scripts at least can be discovered if the keys are using the
> suggested derivation paths.
> > By trying to create a standard that mixes discoverable and
> non-discoverable scripts in the same derivation scheme and incrementing a
> single index, you are turning all scripts into being non-discoverable.
> > Note that even if a user only used singlesig scripts and followed this
> proposal, during recovery from seed the wallet would have to check all
> script types for all account indices (which is only ever going to get more
> expensive as new script types come).
> > The workaround and I imagine your suggested solution is clearly to
> backup both seed words and output script descriptors; and to keep appending
> new output script descriptors to existing backups when the account index is
> incremented. While much less user-friendly than backing up just a seed, it
> is more generic and extendable.
> >
> > My point is simply that your proposal is making a tradeoff here. The
> tradeoff itself seems easy to miss on first read of the text, so I just
> wanted to explicitly point it out for the record.
> >
> > ghost43 / SomberNight
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210317/5587c0ec/attachment.html>

From prayank at tutanota.de  Wed Mar 17 08:21:39 2021
From: prayank at tutanota.de (Prayank)
Date: Wed, 17 Mar 2021 09:21:39 +0100 (CET)
Subject: [bitcoin-dev] Taproot activation meeting on IRC - Tuesday 16th
 March 19:00 UTC
Message-ID: <MVzGeC---3-2@tutanota.de>

>?the last thing we need is
a rushed upgrade

Why do you think this is rushed? Speedy Trial will have few months and if UASF is required it won't involve activation immediately after ST fails. Taproot by 2022 doesn't look rushed approach IMO.

>?We're not changing things that we worked out already.?

Which things have we worked out that cannot be changed or not changed earlier?

> how long till we go back and change the coin supply?

Coin supply has nothing to do with soft fork activation mechanism IMO.

> I understand?some of you have no patience and would like mass adoption tomorrow but?those are exactly the people that do not have a say in Bitcoin development. If you want to get rich quick you do not care about Bitcoin.

Taproot activation or discussion about activation mechanism does not have 100% correlation with mass adoption. It just improves Bitcoin and helps few projects mentioned in?https://en.bitcoin.it/wiki/Taproot_Uses
Nobody is talking about get rich quick schemes in Taproot Activation related meetings. At least I have not seen anyone.

> If you?want faster development?cycles then you have lightning to play with.

Better development cycles with less delay, less misinformation, less politics, less probability of things being exploited by mining pools or other people, organization etc. with their influence. Lightning Network is a separate project focused on layer 2 and I think it will also benefit from Taproot.

>?we *DO NOT* change things we already established in the past

Interested to know who is "we" in this sentence and what are the "things" that cannot be changed.

>?In order to solve the LOT debate lets give Wladimir the power?to decide on his own and if he has no strong opinions he should just flip a coin.

LOT has become LOL. If this is about Bitcoin Core maintainers deciding things for Bitcoin Core, sure they already do. But users have the freedom to decide if they want to run it with default settings or use other implementation.

>?MAST threshold can be even lower because it is not representative of an economic majority?and it could speed up the upgrade.

Agree

>?At this point involve as few people as possible and get it done. This is just about the?software and the parameters of the new consesus.

Everyone should be welcome to participate in meetings, ask questions, learn more and contribute. I don't see anything wrong with it.
-- 
Prayank
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210317/7b263d63/attachment-0001.html>

From emcquinn8 at gmail.com  Wed Mar 17 11:56:26 2021
From: emcquinn8 at gmail.com (Eoin McQuinn)
Date: Wed, 17 Mar 2021 11:56:26 +0000
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <CAMnpzfo6UWYmWGQk2aZnBeGvv6UGSe0=PAAyenqQyE3s5WJLEw@mail.gmail.com>
References: <202103152148.15477.luke@dashjr.org>
 <a88cd471-fdc9-de35-86cd-595b387249c8@mattcorallo.com>
 <202103160344.26299.luke@dashjr.org>
 <98d63098-dabd-ba9f-38bc-1214631edb77@mattcorallo.com>
 <CAMnpzfo6UWYmWGQk2aZnBeGvv6UGSe0=PAAyenqQyE3s5WJLEw@mail.gmail.com>
Message-ID: <CAPeP9h=j1TCcJJpFy85LJW1T2w7KkfQ=S9_LOZOccoe92kbsYw@mail.gmail.com>

How do people in other non-English-speaking parts of the world use and
develop Bitcoin Core?

On Wed, Mar 17, 2021 at 1:24 AM Ryan Grant via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> I enjoyed the reindexing using a distinct subject and I appreciate the
> new clarifications by those whose instinct was to put effort into a
> response.  Although I try to keep up, some of the taproot QC
> mitigations that are possible had escaped my attention thus far.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210317/acf3a61f/attachment.html>

From loneroassociation at gmail.com  Wed Mar 17 05:59:31 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Wed, 17 Mar 2021 01:59:31 -0400
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <rJRQhaMpP-Rq5oJ8nscd81M3tq8PiaSGfvlF6xr0qIjJgcoN_p3azQ9-a-RAvIxDmRa1cfoBkJZnLXILDzhYKh3SDk9TE08wbX60d6EAjQw=@protonmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CALeFGL31M5DAULLRtCwjPYHaPVqsVqREUg6WQ2-cuj23SNk=BA@mail.gmail.com>
 <CA+YkXXwBMG6YUAhf-2U5EV5Ep5RgG2foc9chramNFN5=AQ=-EA@mail.gmail.com>
 <CALeFGL3E-rWW9aJkwre_3UF44vbNxPH2436DvaQdHoqEQ5b+eg@mail.gmail.com>
 <CA+YkXXyBmOootb=Kt6CH3yquYVnAZd=fJQqiF_A3p_pkB8QC3g@mail.gmail.com>
 <CALC81CMDQf4PqxRisQw58OL7QSFeMcQTvLMvmtOGJ_ya4-dhLg@mail.gmail.com>
 <CA+YkXXyP=BQ_a42J=RE7HJFcJ73atyrt4KWKUG8LbsbW=u4b5w@mail.gmail.com>
 <CA+YkXXw1AiMqCoPk_pUOdDMfkGF_T+aURGAjGK=MTa7jtAQchg@mail.gmail.com>
 <CA+YkXXy1Y407UDdEjRVjzBFOCmaUKDoZkvqtXkxkmXmMdNrwBQ@mail.gmail.com>
 <rJRQhaMpP-Rq5oJ8nscd81M3tq8PiaSGfvlF6xr0qIjJgcoN_p3azQ9-a-RAvIxDmRa1cfoBkJZnLXILDzhYKh3SDk9TE08wbX60d6EAjQw=@protonmail.com>
Message-ID: <CA+YkXXzv2Q02uwAvdwOPjk=Lkj5jyYb6AtC5B25oGfVej0y6TA@mail.gmail.com>

I wouldn't fully discount general purpose hardware or hardware outside of
the realm of ASICS. BOINC (https://cds.cern.ch/record/800111/files/p1099.pdf)
implements a decent distributed computing protocol (granted it isn't a
cryptocurrency), but it far computes data at a much cheaper cost compared
to the competition w/ decent levels of fault tolerance. I myself am running
an extremely large scale open distributed computing pipeline, and can tell
you for certain that what is out there is insane. In regards to the
argument of generic HDDs and CPUs, the algorithmic implementation I am
providing would likely make them more adaptable. More than likely,
evidently there would be specialized HDDs similar to BurstCoin Miners, and
128-core CPUs, and all that. This could be inevitable, but the main point
is providing access to other forms of computation along w/ ASICs. At the
very least, the generic guys can experience it, and other infrastructures
can have some form of compatibility. In regards to ASICBOOST, I am already
well aware of it, as well as mining firmwares, autotuning, multi-threaded
processing setups, overclocking, and even different research firms
involved. I think it is feasible to provide multiple forms of computation
without disenfranchising one over the other. I'm also well aware of the
history of BTC and how you can mine BTC just by downloading the whitepaper,
to USB block erupters, to generic CPUs, to few ASICS, to entire mining
farms. I also have seen experimental projects such as Cuckoo
<https://github.com/tromp/cuckoo>, so I know the arguments regarding
computation vs. memory boundness and whether or not they can be one of the
same. The answer is yes, but it needs to be designed correctly. I think in
regards to the level of improvement, this is just one of the improvements
in my BIPs in regards to making PoW more adaptable. I also have
cryptography improvements I'm looking into as well. Nonetheless, I believe
the implementation I want to do would at the very least be quite
interesting.

Best regards, Andrew

On Wed, Mar 17, 2021 at 1:05 AM ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:

> Good morning Andrew,
>
> Looking over the text...
>
> > # I am looking towards integrating memory hard compatibility w/ the
> mining algorithm. Memory hard computation allows for time and space
> complexity for data storage functionality, and there is a way this can
> likely be implemented without disenfranchising current miners or their
> hardware if done right.
>
> I believe this represents a tradeoff between time and space --- either you
> use one spatial unit and take a lot of time, or you use multiple spatial
> units and take smaller units of time.
>
> But such time/space tradeoffs are already possible with the existing
> mechanism --- if you cannot run your existing SHA256d miner faster (time),
> you just buy more miners (space).
>
> Thus, I think the requirement for memory hardness is a red herring in the
> design of proof-of-work algorithms.
> Memory hardness *prevents* this tradeoff (you cannot create a smaller
> miner that takes longer to mine, as you have a memory requirement that
> prevents trading off space).
>
> It is also helpful to remember that spinning rust consumes electricity as
> well, and that any operation that requires changes in data being stored
> requires a lot of energy.
> Indeed, in purely computational algorithms (e.g. CPU processing pipelines)
> a significant amount of energy is spent on *changing* voltage levels, with
> very little energy (negligible compared to the energy spent in changing
> voltage levels in modern CMOS hardware) in *maintaining* the voltage levels.
>
> > I don't see a reason why somebody with $2m of regular hardware can't
> mine the same amount of BTC as somebody with $2m worth of ASICs.
>
> I assume here that "regular hardware" means "general-purpose computing
> device".
>
> The Futamura projections are a good reason I see:
> http://blog.sigfpe.com/2009/05/three-projections-of-doctor-futamura.html
>
> Basically, any interpreter + fixed program can be converted, via Futamura
> projection, to an optimized program that cannot interpret any other program
> but runs faster and takes less resources.
>
> In short, any hardware interpreter (i.e. general-purpose computing device)
> + a fixed proof-of-whatever program, can be converted to an optimized
> hardware that can only perform that proof-of-whatever program, but
> consuming less energy and space and will (eventually) be cheaper per unit
> as well, so that $2M of such a specific hardware will outperform $2M of
> general-purpose computing hardwre.
>
> Thus, all application-specificity (i.e. any fixed program) will always
> take less resources to run than a generic hardware interpreter that can run
> any program.
>
> Thus, if you ever nail down the specifics of your algorithm, and if a
> thousand-Bitcoin industry ever grows around that program, you will find
> that ASICs ***will*** arise that run that algorithm faster and less
> energy-consuming than general-purpose hardware that has to interpret a
> binary.
> **For one, memory/disk bus operations are limited only to actual data,
> without requiring additional bus operations to fetch code.**
> Data can be connected directly from the output of one computational
> sub-unit to the input of another, without requiring (as in the
> general-purpose hardware case) that the intermediate outputs be placed in
> general-purpose storage register (which, as noted, takes energy to *change*
> its contents, and as general-purpose storage will also be used to hold
> *other* intermediate outputs).
> Specialized HDDs can arise as well which are optimized for whatever access
> pattern your scheme requires, and that would also outperform
> general-purpose HDDs as well.
>
> Further optimizations may also exist in an ASIC context that are not
> readily visible but which are likely to be hidden somewhere --- the more
> complicated your program design, the more likely it is that you will not
> readily see such hidden optimizations that can be achieved by ASICs (xref
> ASICBOOST).
>
> In short, even with memory-hardness, an ASIC will arise which might need
> to be connected to an array of (possibly specialized) HDDs but which will
> still outperform your general-purpose hardware connected to an array of
> general-purpose storage.
>
> Indeed, various storage solutions already have different specializations:
> SMR HDDs replace tape drives, PMR HDDs serve as caches of SMR HDDs, SSDs
> serve as caches of PMR HDDs.
> An optimized technology stack like that can outperform a generic HDD.
>
> You cannot fight the inevitability of ASICs and other specialized
> hardware, just as you cannot fight specialization.
>
> You puny humans must specialize in order to achieve the heights of your
> civilization --- I can bet you 547 satoshis that you yourself cannot farm
> your own food, you specialize in software engineering of some kind and just
> pay a farmer to harvest your food for you.
> Indeed, you probably do not pay a farmer directly, but pay an intermediary
> that specializes in packing food for transport from the farm to your
> domicile. which itself probably delegates the actual transporting to
> another specialist.
> Similarly, ASICs will arise and focus on particularly high-value fixed
> computations, inevitably.
>
>
>
> Regards,
> ZmnSCPxj
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210317/55127781/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Screenshot_2021-03-17 BoincOverview ? BOINC.png
Type: image/png
Size: 57634 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210317/55127781/attachment-0001.png>

From loneroassociation at gmail.com  Wed Mar 17 07:06:32 2021
From: loneroassociation at gmail.com (Lonero Foundation)
Date: Wed, 17 Mar 2021 03:06:32 -0400
Subject: [bitcoin-dev] BIP Proposal: Consensus (hard fork) PoST
 Datastore for Energy Efficient Mining
In-Reply-To: <3eY-dfJ9c5qbmAL2gnRAkTFw_HYki0sNAwTtGptRleabpGhy7r5BApXD7qQs8OA63zAGrLha2ZIfGCbqyn1zHIbCaUgZv6Qmoqkz7M6mKV4=@protonmail.com>
References: <CA+YkXXxUdZFYTa1c-F=-FzoQQVtV3GUmE2Okec-zRAD3xS1qAQ@mail.gmail.com>
 <CALeFGL3E-rWW9aJkwre_3UF44vbNxPH2436DvaQdHoqEQ5b+eg@mail.gmail.com>
 <CA+YkXXyBmOootb=Kt6CH3yquYVnAZd=fJQqiF_A3p_pkB8QC3g@mail.gmail.com>
 <CALC81CMDQf4PqxRisQw58OL7QSFeMcQTvLMvmtOGJ_ya4-dhLg@mail.gmail.com>
 <CA+YkXXyP=BQ_a42J=RE7HJFcJ73atyrt4KWKUG8LbsbW=u4b5w@mail.gmail.com>
 <CA+YkXXw1AiMqCoPk_pUOdDMfkGF_T+aURGAjGK=MTa7jtAQchg@mail.gmail.com>
 <CA+YkXXy1Y407UDdEjRVjzBFOCmaUKDoZkvqtXkxkmXmMdNrwBQ@mail.gmail.com>
 <rJRQhaMpP-Rq5oJ8nscd81M3tq8PiaSGfvlF6xr0qIjJgcoN_p3azQ9-a-RAvIxDmRa1cfoBkJZnLXILDzhYKh3SDk9TE08wbX60d6EAjQw=@protonmail.com>
 <CA+YkXXzv2Q02uwAvdwOPjk=Lkj5jyYb6AtC5B25oGfVej0y6TA@mail.gmail.com>
 <3eY-dfJ9c5qbmAL2gnRAkTFw_HYki0sNAwTtGptRleabpGhy7r5BApXD7qQs8OA63zAGrLha2ZIfGCbqyn1zHIbCaUgZv6Qmoqkz7M6mKV4=@protonmail.com>
Message-ID: <CA+YkXXwua6GBnC92armA_f=p8t2J=2A6wp2BxJ3QXJ+0_orAoQ@mail.gmail.com>

The advantage is simple, access to more computational opportunities means a
more scalable network and other reasons, including further options for
optimization. There are also lots of reasons to believe a huge demand of
unmet needs in this space. Why force people to mine Chia if they want to
mine BTC, and why can't highly specialized HPC clusters mine in similar
ways to many of the large ASIC farms? Like I said the design and
implementation needs to be correct for that to work, and I intended to look
towards improving the algo to get the best of both worlds. In regards to
SHA256d, that is an entirely different discussion, but even if one was to
stick to SHA256d for an hashing algo, there are still implementations of
PoW likely more adaptable.

Best regards, Andrew

On Wed, Mar 17, 2021, 2:56 AM ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:

> Good morning Andrew,
>
> > I wouldn't fully discount general purpose hardware or hardware outside
> of the realm of ASICS. BOINC (
> https://cds.cern.ch/record/800111/files/p1099.pdf) implements a decent
> distributed computing protocol (granted it isn't a cryptocurrency), but it
> far computes data at a much cheaper cost compared to the competition w/
> decent levels of fault tolerance. I myself am running an extremely large
> scale open distributed computing pipeline, and can tell you for certain
> that what is out there is insane. In regards to the argument of generic
> HDDs and CPUs, the algorithmic implementation I am providing would likely
> make them more adaptable. More than likely, evidently there would be
> specialized HDDs similar to BurstCoin Miners, and 128-core CPUs, and all
> that. This could be inevitable, but the main point is providing access to
> other forms of computation along w/ ASICs. At the very least, the generic
> guys can experience it, and other infrastructures can have some form of
> compatibility.
>
> What would the advantage of this be?
>
> As I see it, changing the underlying algorithm is simply an attempt to
> reverse history, by requiring a new strain of specialization to be started
> instead of continuing the trend of optimizing SHA256d very very well.
>
> I think it may be better to push *through* rather than *back*, and instead
> spread the optimization of SHA256d-specific hardware so widely that anyone
> with 2 BTC liquidity in one location has no particular advantage over
> anyone with 2 BTC liquidity in another location.
> For one, I expect that there will be fewer patentable surprises remaining
> with SHA256d than any newer, much more complicated construction.
>
> Regards,
> ZmnSCPxj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210317/1359e0dc/attachment.html>

From willtech at live.com.au  Wed Mar 17 05:46:49 2021
From: willtech at live.com.au (LORD HIS EXCELLENCY JAMES HRMH)
Date: Wed, 17 Mar 2021 05:46:49 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <wOCt6DJ8N_0A9iJ43wTFj_4bR7DorXrB6cIGPsPBr6G_qNDP6veoDOVXnu_9wiKT2prQtbcLApzos7dSBXsaU--bv88m4xLXC8PVwpgRIvQ=@protonmail.com>
References: <CAFBxzAAO1u=C8wpwvRs5evE657V0NdnSE9PYAbanpJt5ZdSkdA@mail.gmail.com>
 <3504919A-6D19-4858-B00C-9C0FEB090DB5@voskuil.org>
 <PS2P216MB09147F068F81F31593E06A5F9D6D9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>
 <93d634e2-4102-78f6-c5bc-48fd2af10666@peersm.com>,
 <wOCt6DJ8N_0A9iJ43wTFj_4bR7DorXrB6cIGPsPBr6G_qNDP6veoDOVXnu_9wiKT2prQtbcLApzos7dSBXsaU--bv88m4xLXC8PVwpgRIvQ=@protonmail.com>
Message-ID: <PS2P216MB091436C0E4EA5F587F8EE7879D6A9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>

Good Afternoon,

If you actually believe the operation of consensus and the discussion relevant to that is a mundane or philosophical dissection of people's ability to grasp a humorous while on-topic but obligatorily unnecessary conversation you may prefer if you enquire how Bitcoin is censorship-resistant.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au
www.go-overt.com
and other projects

earn.com/willtech
linkedin.com/in/damianwilliamson


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
________________________________
From: ZmnSCPxj <ZmnSCPxj at protonmail.com>
Sent: Wednesday, 17 March 2021 3:19 PM
To: Aymeric Vitte <aymeric at peersm.com>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
Cc: LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>; R E Broadley <rebroad+linuxfoundation.org at gmail.com>; Eric Voskuil <eric at voskuil.org>
Subject: Re: [bitcoin-dev] Taproot NACK


> It's incredible how this troll keeps trolling and the list (bitcoin-dev !!) keeping attention
>
> Good troll, really

Depending on topic raised, it may be useful to at least answer the troll naively as if it were an honest question, if only so that third parties reading do not get confused and think the troll is bringing up some objection that is actually relevant.

For this particular topic you replied to, it seems to me obviously inane to discuss the "lordship" and "majesty" of the troll.
Even if the claims to such "lordship" are *true*, for most of the world, the relevance of the previous British empire is little more than a reality TV show about the British royal family (oh, some random thing happened to some random descendant of the royal family, how interesting, say did you see that nice new (actually old) technique Jeremy was talking about on the other thread about delegating control of coins to script, it looks like "graftroot without a softfork"?), and any particular claims to nobility or aristocracy are largely moot, thus not worth answering.


Regards,
ZmnSCPxj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210317/b11b561f/attachment-0001.html>

From willtech at live.com.au  Wed Mar 17 08:13:36 2021
From: willtech at live.com.au (LORD HIS EXCELLENCY JAMES HRMH)
Date: Wed, 17 Mar 2021 08:13:36 +0000
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <4ltFpTt8QxX44nedimzJ7J4F1bIhwxb9rbqf1DeGlYX8W7CduYCy64miuq2IIjee_K5rBV6ofEPzdYQniEq6IR4I7ZO5ENlk9z-mQPs-YZE=@protonmail.com>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
 <170b27c0-436f-c440-e3c3-f9577b764972@riseup.net>
 <SL2P216MB00896086AA80DE1A98293C469D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <Wz83obOLCjtbO-rIDw9mHM0ObBrE10y1rLg8vbEyp5BIxtfzlUJyLlnPZ-RWnvsKzJaKRe4bo7hnjlJnwL4-g7HyRNa6TvL_Y-gBQ12ifCg=@protonmail.com>
 <932f2f2866cac087a207f8757c9df4b776ccdb04.camel@willtech.com.au>,
 <4ltFpTt8QxX44nedimzJ7J4F1bIhwxb9rbqf1DeGlYX8W7CduYCy64miuq2IIjee_K5rBV6ofEPzdYQniEq6IR4I7ZO5ENlk9z-mQPs-YZE=@protonmail.com>
Message-ID: <PS2P216MB09140E189C0873B4232F54359D6A9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>

Good afternoon,

That is not desirable since yourself and I cannot prove the property of the UTXO when it is further spent unless we can ourselves scrutinize it.

We have had this conversation before where you approach your reply to resolve that I have offered disagreement and I try to explain I am not disagreeing and yet there should be found some common ground. Can this improve?

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.


Willtech
www.willtech.com.au
www.go-overt.com
and other projects

earn.com/willtech
linkedin.com/in/damianwilliamson


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this email if misdelivered.
________________________________
From: ZmnSCPxj <ZmnSCPxj at protonmail.com>
Sent: Wednesday, 17 March 2021 3:11 PM
To: DA Williamson <damian at willtech.com.au>
Cc: Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>; LORD HIS EXCELLENCY JAMES HRMH <willtech at live.com.au>
Subject: Re: [bitcoin-dev] Taproot NACK

Good morning JAMES,

> Good Afternoon,
>
> Verifiable and independantly verifiable are not the same. Independantly
> scrutinable means any public can scrutinise blockchain to determine it
> is honest. It does not rely on involved parties but insistently on the
> data published in the blockchain.

The involved parties ultimately publish the data on the blockchain, and the result is independently validatable.
All that each involved party has to do is validate for itself that it does not lose any funds, and, by the operation of math, the summary result does not result in any loss (or creation) of funds, thus CoinJoin cannot lead to fraud.

I do not see much of a point in your objection here.
For example, in the case of Lightning, the individual payments made by the participants in the channel cannot be verified by anyone else (they can lie about the payments that occurred on their channel).
But both participants in the channel need to agree on a single result, and it is that summary result that is independently verified onchain and published.

Indeed, one major technique for privacy improvement in Bitcoin is the simple technique of creating summaries of multiple actions without revealing details.
Such a general class of techniques works by reducing the data pushed onchain which provides both (a) scale because less data on chain and (b) privacy because less data is analyzable onchain.

Basically ---

1.  The entire point of a public blockchain is to prevent uncontrolled forgery of the coin.
    Only particular rules allow construction of new coins (in Bitcoin, the mining subsidy).
2.  Various techniques can be used to support the above central point.
    * The simplest is to openly publish every amount value in cleartext.
      * However, this is not necessarily the ***only*** acceptable way to achieve the goal!
      * Remember, the point is to prevent uncontrolled forgery.
        The point is **not** mass surveillance.
    * Another method would be to openly publish **summaries** of transactions, such as by Lightning Network summarizing the result of multiple payments.
      * CoinJoin is really just a way to summarize multiple self-payments.
    * Another method would be to use homomorphisms between a cleartext and a ciphertext, and publish only the ciphertext (which can be independently verified as correctly being added together and that inputs equal outputs plus fees).

No privacy technique worth discussing and development in Bitcoin gets around the above point, and thus fraud cannot be achieved with those (at least if we define fraud simply as "those who control the keys control the coins" --- someone stealing a copy of your privkeys is beyond this definition of fraud).
Any privacy improvement Taproot buys (mostly in LN, but also some additional privacy for CoinSwap) will still not allow fraud.

Regards,
ZmnSCPxj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210317/47d1616a/attachment-0001.html>

From damian at willtech.com.au  Thu Mar 18 01:10:38 2021
From: damian at willtech.com.au (DA Williamson)
Date: Thu, 18 Mar 2021 12:10:38 +1100
Subject: [bitcoin-dev] Taproot NACK
In-Reply-To: <lQzKUb3esyrfDpI7iAVpOBcpriqEgyPI305Ck08zMrcf8MDlWCn6bwccqgeUghcri2a80b1P4ys_y-W0wubvVpvbihKVUPMJUlYw73ZOl7E=@protonmail.com>
References: <SL2P216MB0089B70AEDD58F2EBC46B4309D9A9@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <A326C6D2-7C6E-42A2-93C9-DC7647BB09B6@voskuil.org>
 <170b27c0-436f-c440-e3c3-f9577b764972@riseup.net>
 <SL2P216MB00896086AA80DE1A98293C469D989@SL2P216MB0089.KORP216.PROD.OUTLOOK.COM>
 <Wz83obOLCjtbO-rIDw9mHM0ObBrE10y1rLg8vbEyp5BIxtfzlUJyLlnPZ-RWnvsKzJaKRe4bo7hnjlJnwL4-g7HyRNa6TvL_Y-gBQ12ifCg=@protonmail.com>
 <932f2f2866cac087a207f8757c9df4b776ccdb04.camel@willtech.com.au> ,
 <4ltFpTt8QxX44nedimzJ7J4F1bIhwxb9rbqf1DeGlYX8W7CduYCy64miuq2IIjee_K5rBV6ofEPzdYQniEq6IR4I7ZO5ENlk9z-mQPs-YZE=@protonmail.com>
 <PS2P216MB09140E189C0873B4232F54359D6A9@PS2P216MB0914.KORP216.PROD.OUTLOOK.COM>
 <lQzKUb3esyrfDpI7iAVpOBcpriqEgyPI305Ck08zMrcf8MDlWCn6bwccqgeUghcri2a80b1P4ys_y-W0wubvVpvbihKVUPMJUlYw73ZOl7E=@protonmail.com>
Message-ID: <209bbf55ec070e24ababec0612334efc1ea60741.camel@willtech.com.au>

Good Morning,

The Bitcoin you are spending must exist in compliance with consensus
so, if the details are obscured then it is not possible for me to
accept your Bitcoin, to say I refuse. Otherwise, it is not possible for
me to see immutably that they exist all the way to coin genesis, they
could be invented in the obfuscation even in the example the received
Bitcoin are discarded as fees and new Bitcoin are invented. In that
case the transaction is not in balance but, without public scrutiny it
is not possible to see.

It is also necesdsary to see who should be able to spend the UTXO to
prevent fraud, so that scrutability allows consensus driven fungibility
to be proven. If the transaction is not available to scrutiny at least
at the level of P2SH where the spend reveals the pay to script with all
the other conditions of consensus then fungibilty does not exist.

KING JAMES HRMH
Great British Empire

Regards,
The Australian
LORD HIS EXCELLENCY JAMES HRMH (& HMRH)
of Hougun Manor & Glencoe & British Empire
MR. Damian A. James Williamson
Wills

et al.

 
Willtech
www.willtech.com.au
www.go-overt.com
and other projects
 
earn.com/willtech
linkedin.com/in/damianwilliamson


m. 0487135719
f. +61261470192


This email does not constitute a general advice. Please disregard this
email if misdelivered.
On Wed, 2021-03-17 at 09:32 +0000, ZmnSCPxj wrote:
> What property *needs* to be proven in the first place?

> Given the above, it is not *necessary* to prove *any* property of
*any* UTXO other than the property *this UTXO does not create more
coins than what was designed*.


From hoenicke at gmail.com  Thu Mar 18 15:29:07 2021
From: hoenicke at gmail.com (Jochen Hoenicke)
Date: Thu, 18 Mar 2021 16:29:07 +0100
Subject: [bitcoin-dev] Signature and Script Independent Hierarchy for
 Deterministic Wallets.
In-Reply-To: <QZfbtDnhhbNNFo6859MyCotRPeN-sdotrP2qM-Uitq5DYATVzqIgIb_UEtXETGk941M3HWDzxCmO9j84wjzuKndHOo6kxg3A9qCd8WWlAOI=@protonmail.ch>
References: <z1Vokp3jct_xwR8wt3n6r8t24DqtMpnrogF22YFc0_V3riIMWEq3WBiOriJOm2kVrVgtsu5p7wDTMrN3dLdA8DilhITMXb4tHY6wCnk3y1g=@protonmail.com>
 <QZfbtDnhhbNNFo6859MyCotRPeN-sdotrP2qM-Uitq5DYATVzqIgIb_UEtXETGk941M3HWDzxCmO9j84wjzuKndHOo6kxg3A9qCd8WWlAOI=@protonmail.ch>
Message-ID: <CANYHNmJsiho0SxUUe7pmpQkkd-xAMnc2H8yHsGB_Urd9dw3usg@mail.gmail.com>

Hello Robert,

you wrote:
> It is not fair nor accurate to say that currently, in order to recover,
wallets need "just the seed words".  They also need all public keys, and
derivation paths.

No a BIP39/BIP44 wallet can recover all BIP44 accounts using just the seed
words.  Read the section account recovery closely to see how it's done.  No
public keys or derivation paths needed, as the derivation path can just be
enumerated and for single signature wallets you don't need external public
keys. Similarly a BIP39/BIP44/BIP49/BIP84 can recover all these accounts
using just the seed words and for example the Trezor Suite does this.  Most
hardware wallets currently rely on this feature, as they don't store any
additional information like output descriptors (which would be possible,
but would make regular backups necessary).  Of course, autodiscover doesn't
work for multisig wallets, unless you would store some output descriptor in
an OP_RETURN on the blockchain.

It's okay to make a new standard that requires regular backups, but you
should at least keep in mind that this complicates some use cases.

  Jochen


On Tue, 16 Mar 2021 at 13:19, Robert Spigler via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> No, wallets don't and shouldn't have to check all script types on
> recovery.  Descriptor Wallets solve all of this.
>
> To back up a multisignature wallet, each cosigner stores their xprv (how
> you do this; BIP39, WIF, etc, is out of scope). and the wallet descriptor.
> This is done, for example, in Yeti. To recover, simply combine `M` private
> keys, and check the script designated in 1 of the descriptor copies.
>
> For single signature wallets, it is the same, except only one signature is
> needed.  Store xprv and descriptor.
>
> It is not fair nor accurate to say that currently, in order to recover,
> wallets need "just the seed words".  They also need all public keys, and
> derivation paths.
>
> Descriptors (and this BIP), is a much cleaner way to handle wallet
> creation and backup, by separating the two layers (keys and scripts) and
> getting rid of redundant information.
>
>
> Personal Fingerprint:  BF0D 3C08 A439 5AC6 11C1 5395 B70B 4A77 F850 548F
>
>
>
> ??????? Original Message ???????
> On Sunday, March 14, 2021 11:13 AM, SomberNight <
> somber.night at protonmail.com> wrote:
>
> > See some replies inline. (quoted text from BIP draft)
> >
> > > Date: Sun, 14 Mar 2021 01:51:15 +0000
> > > From: Robert Spigler RobertSpigler at protonmail.ch
> > > Subject: [bitcoin-dev] Signature and Script Independent Hierarchy for
> Deterministic Wallets.
> >
> > > There are many issues with the current standards. As background, BIP
> 44/49/84 specifies:
> > > `m / purpose' / coin_type' / account' / change / address_index`
> > > where the BIP43 `purpose'` path is separate for each script (P2PKH,
> P2WPKH-in-P2SH, and P2WPKH respectively). However, these per-script
> derivations are made redundant with descriptors
> >
> > > We should not be mixing keys and scripts in the same layer. The wallet
> should create extended private/public keys independent of the script or
> signature type
> >
> > You say that keys and scripts should not be mixed in the same layer, and
> imply that this was solely done due to these standards predating output
> script descriptors. Even if this was the case, it is not the only reason
> for doing it. BIP44/49/84 mixing scripts and keys in the same layer makes
> recovery from seed/mnemonic much easier.
> > Note the significant overlap between the authors of BIP39 and BIP44. I
> am fairly certain BIP44 was designed with recovering from a BIP39 seed (and
> no additional information backed up) in mind. Note the "Account discovery"
> section of BIP44.
> > (Electrum seeds go even further, as such seeds contain a version number
> that encodes both the script type and the key derivation path to use.)
> >
> > > We define the following 5 levels in the BIP32 path:
> > > `m / purpose' / coin_type' / account' / change / address_index`
> >
> > > [Account]
> > > It is crucial that this level is increased for each new wallet joined
> or private/public keys created; for both privacy and cryptographic purposes.
> > > For example, in multisignature wallets, before sending a new key
> record to a coordinator, the wallet must increment the `account'` level.
> Before creating it's own single signature wallet, the `account'` level must
> again be incremented.
> >
> > Imagine a user who has a BIP39 (or similar) seed. Even today, recovering
> most non-singlesig scripts from that is obviously infeasible. However, all
> singlesig scripts at least can be discovered if the keys are using the
> suggested derivation paths.
> > By trying to create a standard that mixes discoverable and
> non-discoverable scripts in the same derivation scheme and incrementing a
> single index, you are turning all scripts into being non-discoverable.
> > Note that even if a user only used singlesig scripts and followed this
> proposal, during recovery from seed the wallet would have to check all
> script types for all account indices (which is only ever going to get more
> expensive as new script types come).
> > The workaround and I imagine your suggested solution is clearly to
> backup both seed words and output script descriptors; and to keep appending
> new output script descriptors to existing backups when the account index is
> incremented. While much less user-friendly than backing up just a seed, it
> is more generic and extendable.
> >
> > My point is simply that your proposal is making a tradeoff here. The
> tradeoff itself seems easy to miss on first read of the text, so I just
> wanted to explicitly point it out for the record.
> >
> > ghost43 / SomberNight
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210318/78c59965/attachment.html>

From RobertSpigler at protonmail.ch  Thu Mar 18 20:44:48 2021
From: RobertSpigler at protonmail.ch (Robert Spigler)
Date: Thu, 18 Mar 2021 20:44:48 +0000
Subject: [bitcoin-dev] Signature and Script Independent Hierarchy for
	Deterministic Wallets.
In-Reply-To: <CANYHNmJsiho0SxUUe7pmpQkkd-xAMnc2H8yHsGB_Urd9dw3usg@mail.gmail.com>
References: <z1Vokp3jct_xwR8wt3n6r8t24DqtMpnrogF22YFc0_V3riIMWEq3WBiOriJOm2kVrVgtsu5p7wDTMrN3dLdA8DilhITMXb4tHY6wCnk3y1g=@protonmail.com>
 <QZfbtDnhhbNNFo6859MyCotRPeN-sdotrP2qM-Uitq5DYATVzqIgIb_UEtXETGk941M3HWDzxCmO9j84wjzuKndHOo6kxg3A9qCd8WWlAOI=@protonmail.ch>
 <CANYHNmJsiho0SxUUe7pmpQkkd-xAMnc2H8yHsGB_Urd9dw3usg@mail.gmail.com>
Message-ID: <oIgV5u9J6iyoWCDtouomT3mNi6D5cxXjOgIWNYiZ_uQIqd2FksfvkIDvAEbdE9L37tAIGAC3QUxzyfBrDYtleBEX80WAO7O6CQNjniE6Omc=@protonmail.ch>

Please keep comments in the ML. That way it can be archived, seen be anyone interested in the proposal, and have as much review and improvements as necessary/possible. The ML isn't taproot activation discussion only :)

For summary:

David Harding commented to Craig's post:

[Replying off list as I'm not sure this is an important point and the
list is already noisy these days.]

On Wed, Mar 17, 2021 at 09:26:50AM +0200, Craig Raw via bitcoin-dev wrote:
> I think it's important to note that [not encoding the script type in
> the derivation path] shifts more burden of wallet backup onto the
> user, who now has an additional item (the output descriptor) to backup
> correctly.

I don't think that's correct. Most wallets today that allow you to
restore with just a seed by deriving the keys for that seed in the BIP32
paths the wallet supports (i.e, including the purpose field) and then
scanning for outputs paying addresses derived from those keys.

If you try entering your seed into a different wallet (or one that's not
maintaining backwards compatibility with earlier versions of itself), it
won't necessarily support the same addresses you used earlier and so may
not work even if it fully supports BIP44 in principle. You'll need to
use different software and may need to tell that software the addresses
and paths your previous software used.

Under this proposed standard, I don't think any of that changes. If you
try to restore a seed into the same wallet that created it, it can scan
for the address types it supports. A different or
backwards-incompatible wallet may not work and you may need to find
software that can handle your old address type and specific path
information, which descriptors (and miniscript) makes easier.

The way I see it, there's not really a change to the information the
user needs to record for the normal case (seed phrase + name of software
used) or the unusual case (seed phrase + address types + paths).

Where I think this new proposal excels is in handling multisigs, where
the user needs to record the other signers' keys anyway. In those
cases, the fairly small overhead of descriptors compared to a minimalist
encoding is worth descriptor's benefits of providing an error detection
code and BIP32 fingerprints/paths that allow key location.

> 2. Use a standard set of derivation paths that encode the script type,
> ensuring that even if users do not back this up, they can check against a
> handful of common derivations and recover the funds.

I think the scanning work in this case is the same whether you use
descriptors or not.

- Under the current BIP44-style paths, a wallet that supports P2PKH and
P2WPKH with a single account and a gap limit of 50 needs to scan:

pkh([deadbeef/44'/0'/0'/0/0])
pkh([deadbeef/44'/0'/0'/0/1])
pkh([deadbeef/44'/0'/0'/0/...])
pkh([deadbeef/44'/0'/0'/0/49])

wpkh([deadbeef/84'/0'/0'/0/0])
wpkh([deadbeef/84'/0'/0'/0/1])
wpkh([deadbeef/84'/0'/0'/0/...])
wpkh([deadbeef/84'/0'/0'/0/49])

- Under the proposed standard, a wallet that suports P2PKH and P2WPKH
with a single account and a gap limit of 50 needs to scan:

pkh([deadbeef/XY'/0'/0'/0/0])
pkh([deadbeef/XY'/0'/0'/0/1])
pkh([deadbeef/XY'/0'/0'/0/...])
pkh([deadbeef/XY'/0'/0'/0/49])

wpkh([deadbeef/XY'/0'/0'/0/0])
wpkh([deadbeef/XY'/0'/0'/0/1])
wpkh([deadbeef/XY'/0'/0'/0/...])
wpkh([deadbeef/XY'/0'/0'/0/49])

It's essentially the same amount of work in either case. (It's
technically less work under the new standard as you only need to derive
the set of keys once---but since the actual scanning process typically
takes many orders of magnitude longer than key derivation, this doesn't
matter.)

There is a one-time cost of transaction, where wallets that previously
supported BIP44-style purposes and switch to the new proposal need to
scan both sets of paths. That can be avoided if the new paths are only
implemented for new address types (e.g. wallet previously supported
P2PKH with 44', P2WPKH with 84', but now the wallet adds P2TR support
with XY').

-Dave

***********

To which ghost43 replied:

Hi Dave,

>> 2. Use a standard set of derivation paths that encode the script type,
>> ensuring that even if users do not back this up, they can check against a
>> handful of common derivations and recover the funds.
>
> I think the scanning work in this case is the same whether you use
> descriptors or not.
>
> - Under the current BIP44-style paths, a wallet that supports P2PKH and
> P2WPKH with a single account and a gap limit of 50 needs to scan:
>
> pkh([deadbeef/44'/0'/0'/0/0])
> pkh([deadbeef/44'/0'/0'/0/...])
> pkh([deadbeef/44'/0'/0'/0/49])
>
> wpkh([deadbeef/84'/0'/0'/0/0])
> wpkh([deadbeef/84'/0'/0'/0/...])
> wpkh([deadbeef/84'/0'/0'/0/49])
>
> - Under the proposed standard, a wallet that suports P2PKH and P2WPKH
> with a single account and a gap limit of 50 needs to scan:
>
> pkh([deadbeef/XY'/0'/0'/0/0])
> pkh([deadbeef/XY'/0'/0'/0/1])
> pkh([deadbeef/XY'/0'/0'/0/...])
> pkh([deadbeef/XY'/0'/0'/0/49])
>
> wpkh([deadbeef/XY'/0'/0'/0/0])
> wpkh([deadbeef/XY'/0'/0'/0/1])
> wpkh([deadbeef/XY'/0'/0'/0/...])
> wpkh([deadbeef/XY'/0'/0'/0/49])

That is not how I understand the BIP draft. I think the text specifically
mentions avoiding key reuse between different scripts (by increasing the
account index); unlike your example list which reuses keys between pkh and
wpkh.

From the draft BIP's text [0]:

> It is crucial that this level is increased for each new wallet joined or
> private/public keys created; for both privacy and cryptographic purposes.
> For example, in multisignature wallets, before sending a new key record
> to a coordinator, the wallet must increment the account' level. Before
> creating it's own single signature wallet, the account' level must again
> be incremented. This prevents key reuse - across single signature and
> multisignature wallets, across ECDSA and Schnorr signatures, and inbetween
> the same wallet types.

It is good not to reuse keys. However this raises a new issue, which is what
I was alluding to in my previous email: when restoring from seed the wallet
will have to try all scripts for all account indices. Continuing your example,
it could be that account 0 is pkh and account 1 is wpkh or it could be the
other way around. Or the user might have created two wpkh accounts -- after all,
BIP44 allows that, and this new BIP is trying to be even more generic so why not?

> It's essentially the same amount of work in either case.

No, it is more work; and it will be even more in the future as new script types
come. It is the same amount of work only in the best case if the user backed up
descriptors; it is a lot more if they did not.

ghost43

*****************

David replied back:

On Wed, Mar 17, 2021 at 11:29:26PM +0000, SomberNight wrote:
> That is not how I understand the BIP draft. I think the text specifically
> mentions avoiding key reuse between different scripts (by increasing the
> account index); unlike your example list which reuses keys between pkh and
> wpkh.

There's no actual reuse there. Let's say the Foo Wallet v1 used P2PKH
and v2 defaulted to P2WPKH (but still allowed spending from P2PKH).
User Alice started with v1, so Foo Wallet gave her addresses,

pkh([a11ce000/XY'/0'/0'/0/0])
pkh([a11ce000/XY'/0'/0'/0/1])
pkh([a11ce000/XY'/0'/0'/0/...])

When she upgraded to v2, it gave her the following new addresses (note
the antepenultimate path level (the account level) is incremented):

wpkh([a11ce000/XY'/0'/1'/0/0])
wpkh([a11ce000/XY'/0'/1'/0/1])
wpkh([a11ce000/XY'/0'/1'/0/...])

Now we consider Bob who started with the v2 version of the wallet that
defaulted to P2WPKH. His addresses are:

wpkh([b0bb10c5/XY'/0'/0'/0/0])
wpkh([b0bb10c5/XY'/0'/0'/0/1])
wpkh([b0bb10c5/XY'/0'/0'/0/...])

This means that, when Alice restores from backup, the wallet looks
through the zeroeth account to see if it finds any P2PKH outputs; when it
does, it also checks the first account to see if there are any P2WPKH
outputs. When Bob restores from backup, it scans for P2PKH, doesn't find
any, scans fro P2WPH and finds them.

> It is good not to reuse keys. However this raises a new issue, which is what
> I was alluding to in my previous email: when restoring from seed the wallet
> will have to try all scripts for all account indices. Continuing your example,
> it could be that account 0 is pkh and account 1 is wpkh or it could be the
> other way around. Or the user might have created two wpkh accounts -- after all,
> BIP44 allows that, and this new BIP is trying to be even more generic so why not?

So to make sure I understand your corncern, following the example abole
there is an edge case there where Alice creates a v1 wallet, hands out
a P2PKH address that doesn't get used, and then upgrades to v2 and
starts using P2WPKH addresses. Is that your concern?

I agree, that's a problem. I'll have to think about that (and maybe Robert
already has).

-Dave

******************

ghost43 clarifies concerns:

Consider Carol, who creates 5 pkh accounts, then creates 1 wpkh account, then 1 wpkh-sh account, then 2 more wpkh (9 accounts overall).

If Carol is using BIP44/49/84, she will then have used:
- BIP44 account indices 0-4 inclusive,
- BIP49 account index 0,
- BIP84 account indices 0-2

If using new BIP XY, she will then have used:
- BIPXY account indices 0-4 for p2pkh
- BIPXY account index 5 for p2wpkh
- BIPXY account index 6 for p2wpkh-p2sh
- BIPXY account indices 7-8 for p2wpkh

The issue is that when restoring, with BIPXY, the wallet software will have to try all script types for all account indices: if it does not find an account, it might stop there, and miss all subsequent accounts too.

If using BIP44/49/84, when restoring, the wallet will scan:
- for p2pkh, BIP44, indices 0-5, stopping at 5 as it has not been used: scanned 5 accounts worth of addresses (+1 extra address for account idx 5)
- for p2wpkh-p2sh, BIP49, indices 0 and 1, stopping at 1 as it has not been used: scanned 1 account worth of addresses (+1 extra address for account idx 1)
- for p2wpkh, BIP84, indices 0-3, stopping at idx 3 as it has not been used: scanned 3 accoutns worth of addresses (+1 extra address for account idx 3)
All together the wallet needs to scan ~9 accounts worth of addresses which matches the 9 accounts the user actually created.

If using new BIP XY, when restoring, the wallet will scan:
- address index 0, hmmm wonder what script type the user might have used here, let's try p2wpkh as that is the cool thing today... --- ends up trying all script types (in worst case) until it finds p2pkh
- address index 1, hmmm surely the user used the new script type by then? tries all script types in worst case again
- ...
All together the wallet might end up scanning 9 * n (maybe three for now; but what about p2pk; or p2tr?) accounts worth of addresses.

ghost43

***********

ghost43 clarifies further:

> If using new BIP XY, she will then have used:
> - BIPXY account indices 0-4 for p2pkh
> - BIPXY account index 5 for p2wpkh
> - BIPXY account index 6 for p2wpkh-p2sh
> - BIPXY account indices 7-8 for p2wpkh

> The issue is that when restoring, with BIPXY, the wallet software will have to try all script types for all account indices: if it does not find an account, it might stop there, and miss all subsequent accounts too.

In fact note that if an older wallet does not support p2wpkh; only p2pkh and p2wpkh-p2sh, it only find accounts 0-4, and miss account 6.
This is a regression compared to BIP44/49.

**********

David Replies:

On Thu, Mar 18, 2021 at 12:22:48AM +0000, SomberNight wrote:
> > If using new BIP XY, she will then have used:
> > - BIPXY account indices 0-4 for p2pkh
> > - BIPXY account index 5 for p2wpkh
> > - BIPXY account index 6 for p2wpkh-p2sh
> > - BIPXY account indices 7-8 for p2wpkh
>
> > The issue is that when restoring, with BIPXY, the wallet software will have to try all script types for all account indices: if it does not find an account, it might stop there, and miss all subsequent accounts too.
>
> In fact note that if an older wallet does not support p2wpkh; only p2pkh and p2wpkh-p2sh, it only find accounts 0-4, and miss account 6.
> This is a regression compared to BIP44/49.

Agreed. The risk that older wallet software will reuse keys because it's
unaware of what a newer version of itself is doing negates my whole
premise of being able to use seeds without explicit descriptors.

Thank you for your insight and for arguing with me!

-Dave

*******

Craig response:

Great explanation SomberNight.

A pity now this isn't on-list, would like to share it in future!

Craig

*********

I (Robert Spigler) will respond in a next post.

Thanks for your comments!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210318/4d7ef947/attachment-0001.html>

From RobertSpigler at protonmail.ch  Thu Mar 18 21:42:56 2021
From: RobertSpigler at protonmail.ch (Robert Spigler)
Date: Thu, 18 Mar 2021 21:42:56 +0000
Subject: [bitcoin-dev] Signature and Script Independent Hierarchy for
	Deterministic Wallets.
In-Reply-To: <oIgV5u9J6iyoWCDtouomT3mNi6D5cxXjOgIWNYiZ_uQIqd2FksfvkIDvAEbdE9L37tAIGAC3QUxzyfBrDYtleBEX80WAO7O6CQNjniE6Omc=@protonmail.ch>
References: <z1Vokp3jct_xwR8wt3n6r8t24DqtMpnrogF22YFc0_V3riIMWEq3WBiOriJOm2kVrVgtsu5p7wDTMrN3dLdA8DilhITMXb4tHY6wCnk3y1g=@protonmail.com>
 <QZfbtDnhhbNNFo6859MyCotRPeN-sdotrP2qM-Uitq5DYATVzqIgIb_UEtXETGk941M3HWDzxCmO9j84wjzuKndHOo6kxg3A9qCd8WWlAOI=@protonmail.ch>
 <CANYHNmJsiho0SxUUe7pmpQkkd-xAMnc2H8yHsGB_Urd9dw3usg@mail.gmail.com>
 <oIgV5u9J6iyoWCDtouomT3mNi6D5cxXjOgIWNYiZ_uQIqd2FksfvkIDvAEbdE9L37tAIGAC3QUxzyfBrDYtleBEX80WAO7O6CQNjniE6Omc=@protonmail.ch>
Message-ID: <uASNM8tOf1FvSUQe6hjlURtgKrnmaF-XNTd5F0KyULurLyk5K-fz9KDWm6Am27pgI4GSysEOepJ7o77V_ghqvaqsc0uyBDwte_peCZuXKko=@protonmail.ch>

(IMO), where this proposal really excels, is mutlisig. And if you check my commits, it actually originally was for multisig only, and I extended it for multisig and single sig wallets.

ghost43 and Jochen Hoenicke brought up important issues with this proposed BIP re: single sig wallets, so I will be reverting this back for multisig derivations. I believe that should cover all concerns.

Please view the updated BIP here: https://github.com/Rspigler/bips-1/blob/Sane_Mulitisg_deriv/Modern%20Hierarchy%20for%20Deterministic%20Multisignature%20Wallets.mediawiki

And the updated PR here: https://github.com/Rspigler/bips-1/pull/1

Thank you,

Robert

Personal Fingerprint: BF0D 3C08 A439 5AC6 11C1 5395 B70B 4A77 F850 548F

??????? Original Message ???????
On Thursday, March 18, 2021 4:44 PM, Robert Spigler via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:

> I (Robert Spigler) will respond in a next post.
>
> Thanks for your comments!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210318/eb5bd6d3/attachment.html>

From craigraw at gmail.com  Fri Mar 19 07:54:32 2021
From: craigraw at gmail.com (Craig Raw)
Date: Fri, 19 Mar 2021 09:54:32 +0200
Subject: [bitcoin-dev] Signature and Script Independent Hierarchy for
 Deterministic Wallets.
In-Reply-To: <uASNM8tOf1FvSUQe6hjlURtgKrnmaF-XNTd5F0KyULurLyk5K-fz9KDWm6Am27pgI4GSysEOepJ7o77V_ghqvaqsc0uyBDwte_peCZuXKko=@protonmail.ch>
References: <z1Vokp3jct_xwR8wt3n6r8t24DqtMpnrogF22YFc0_V3riIMWEq3WBiOriJOm2kVrVgtsu5p7wDTMrN3dLdA8DilhITMXb4tHY6wCnk3y1g=@protonmail.com>
 <QZfbtDnhhbNNFo6859MyCotRPeN-sdotrP2qM-Uitq5DYATVzqIgIb_UEtXETGk941M3HWDzxCmO9j84wjzuKndHOo6kxg3A9qCd8WWlAOI=@protonmail.ch>
 <CANYHNmJsiho0SxUUe7pmpQkkd-xAMnc2H8yHsGB_Urd9dw3usg@mail.gmail.com>
 <oIgV5u9J6iyoWCDtouomT3mNi6D5cxXjOgIWNYiZ_uQIqd2FksfvkIDvAEbdE9L37tAIGAC3QUxzyfBrDYtleBEX80WAO7O6CQNjniE6Omc=@protonmail.ch>
 <uASNM8tOf1FvSUQe6hjlURtgKrnmaF-XNTd5F0KyULurLyk5K-fz9KDWm6Am27pgI4GSysEOepJ7o77V_ghqvaqsc0uyBDwte_peCZuXKko=@protonmail.ch>
Message-ID: <CAPR5oBMiV-U6Ngi06yZmGo7av-t5RDS4uTgB826_mymORZq42Q@mail.gmail.com>

Hi Robert,

I believe many of the same concerns apply in multisig. If one has the
threshold and all the cosigner seeds, the funds in a multisig wallet can
very likely be discovered by checking one of a handful of standard
derivation paths/script types. Is the motivation of this BIP proposal
strong enough to lose this capability?

Craig

On Thu, Mar 18, 2021 at 11:43 PM Robert Spigler <RobertSpigler at protonmail.ch>
wrote:

> (IMO), where this proposal really excels, is mutlisig.  And if you check
> my commits, it actually originally was for multisig only, and I extended it
> for multisig and single sig wallets.
>
> ghost43 and Jochen Hoenicke brought up important issues with this proposed
> BIP re: single sig wallets, so I will be reverting this back for multisig
> derivations.  I believe that should cover all concerns.
>
> Please view the updated BIP here:
> https://github.com/Rspigler/bips-1/blob/Sane_Mulitisg_deriv/Modern%20Hierarchy%20for%20Deterministic%20Multisignature%20Wallets.mediawiki
>
> And the updated PR here:  https://github.com/Rspigler/bips-1/pull/1
>
> Thank you,
>
> Robert
>
> Personal Fingerprint:  BF0D 3C08 A439 5AC6 11C1 5395 B70B 4A77 F850 548F
>
> ??????? Original Message ???????
> On Thursday, March 18, 2021 4:44 PM, Robert Spigler via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>
> I (Robert Spigler) will respond in a next post.
>
> Thanks for your comments!
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210319/dab0f192/attachment.html>

From RobertSpigler at protonmail.ch  Fri Mar 19 08:59:05 2021
From: RobertSpigler at protonmail.ch (Robert Spigler)
Date: Fri, 19 Mar 2021 08:59:05 +0000
Subject: [bitcoin-dev] Signature and Script Independent Hierarchy for
	Deterministic Wallets.
In-Reply-To: <CAPR5oBMiV-U6Ngi06yZmGo7av-t5RDS4uTgB826_mymORZq42Q@mail.gmail.com>
References: <z1Vokp3jct_xwR8wt3n6r8t24DqtMpnrogF22YFc0_V3riIMWEq3WBiOriJOm2kVrVgtsu5p7wDTMrN3dLdA8DilhITMXb4tHY6wCnk3y1g=@protonmail.com>
 <QZfbtDnhhbNNFo6859MyCotRPeN-sdotrP2qM-Uitq5DYATVzqIgIb_UEtXETGk941M3HWDzxCmO9j84wjzuKndHOo6kxg3A9qCd8WWlAOI=@protonmail.ch>
 <CANYHNmJsiho0SxUUe7pmpQkkd-xAMnc2H8yHsGB_Urd9dw3usg@mail.gmail.com>
 <oIgV5u9J6iyoWCDtouomT3mNi6D5cxXjOgIWNYiZ_uQIqd2FksfvkIDvAEbdE9L37tAIGAC3QUxzyfBrDYtleBEX80WAO7O6CQNjniE6Omc=@protonmail.ch>
 <uASNM8tOf1FvSUQe6hjlURtgKrnmaF-XNTd5F0KyULurLyk5K-fz9KDWm6Am27pgI4GSysEOepJ7o77V_ghqvaqsc0uyBDwte_peCZuXKko=@protonmail.ch>
 <CAPR5oBMiV-U6Ngi06yZmGo7av-t5RDS4uTgB826_mymORZq42Q@mail.gmail.com>
Message-ID: <BLersNjcPnTNIXYooKCVHXsXQQfsqZzJVX1A45GOkjjbxxQSke1SIVFGBe0FRFPcLocpNqVopGMnGZxCwxziQ4YEnD8sd3MIz7b8d-1H-0s=@protonmail.ch>

Hi Craig,

For multisignature wallets, you need to back up the descriptor anyway, especially for secure multisignature schemes (https://github.com/nunchuk-io/bips/pull/1).

To restore, the user needs M private key data, and all public keys. The descriptor provides the required public key data, with the benefit of key origin information and error detection, and tells the wallet which script to watch.

So I see this proposal as a clear gain for multisignature wallets, as it (1) gets rid of redundant data in the key record, (2) separates keys/scripts, (3) makes full use of descriptors, and (4) prevents key reuse.

>>If one has the threshold and all the cosigner seeds, the funds in a multisig wallet can very likely be discovered by checking one of a handful of standard derivation paths/script types

Old scenario: You have BIP39 words (I assume). You try BIP 45 - search 20 addresses on the first 5 accounts. Then try BIP 48 - search 20 addresses on the first 5 accounts with script type 1 (P2SH-P2WSH); then search 20 addresses on the first 5 accounts with script type 2 (P2WSH).

New scenario: Should have a descriptor, and you just do what it says.

If you don't, you have to search the `address_index` for each script. The moment funds are found, you know that script type is the only script type used for that `account'` level. Increment `account'`, and repeat.

Robert

Personal Fingerprint: BF0D 3C08 A439 5AC6 11C1 5395 B70B 4A77 F850 548F

??????? Original Message ???????
On Friday, March 19, 2021 3:54 AM, Craig Raw <craigraw at gmail.com> wrote:

> Hi Robert,
>
> I believe many of the same concerns apply in multisig. If one has the threshold and all the cosigner seeds, the funds in a multisig wallet can very likely be discovered by checking one of a handful of standard derivation paths/script types. Is the motivation of this BIP proposal strong enough to lose this capability?
>
> Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210319/65e55d6b/attachment.html>

From emu at emuadmin.com  Fri Mar 19 10:45:44 2021
From: emu at emuadmin.com (Emil Pfeffer)
Date: Fri, 19 Mar 2021 10:45:44 +0000
Subject: [bitcoin-dev] Taproot activation meeting on IRC - Tuesday 16th
 March 19:00 UTC
In-Reply-To: <MVzGeC---3-2@tutanota.de>
References: <MVzGeC---3-2@tutanota.de>
Message-ID: <20210319104544.l4z6shndm2xnmk77@www01.emuadmin.com>

On Wed, Mar 17, 2021 at 09:21:39AM +0100, Prayank wrote:
> >??the last thing we need is
> a rushed upgrade
> 
> Why do you think this is rushed? Speedy Trial will have few months and if UASF is required it won't involve activation immediately after ST fails. Taproot by 2022 doesn't look rushed approach IMO.

That depends on your perception of time. Back in the day we also had people that thought 10 min avg block time is too much.
Taproot by the end of 2022 *using a single activation method* is not rushed. Taproot
by 2022 by all means necessary is tyranny. (will add to this later on)

> 
> >??We're not changing things that we worked out already.??
> 
> Which things have we worked out that cannot be changed or not changed earlier?
> 
Plenty. Starting from the parameters of bitcoin consensus to the way Bitcoin Core
is organized to the minimum time of 18 months an upgrade needs to last. (based on prior experience)
If you want to challenge any of the old rules it takes more than ignoring them
and doing whatever you feel like (is useful to get the result you want (again the tyrant theme)).

I would go as far as to say that 18 months is not ideal and we might need 24 to 36
and that any upgrade of this kind needs to take at least the amount of time the
previous one took but ideally longer.

The motivation is pretty straight forward. If you pretend users decide then you will
understand users have others things to do than continously keeping up with Bitcoin
and in order for them to make an informed decision there needs to be plenty of time.

Otherwise you're repeating the tyranical argument which has become a recurring theme
of the discourse of some of the Bitcoin Core developers. (which is a loose term)


> > how long till we go back and change the coin supply?
> 
> Coin supply has nothing to do with soft fork activation mechanism IMO.

Thats true but not what I said.

> 
> > I understand??some of you have no patience and would like mass adoption tomorrow but??those are exactly the people that do not have a say in Bitcoin development. If you want to get rich quick you do not care about Bitcoin.
> 
> Taproot activation or discussion about activation mechanism does not have 100% correlation with mass adoption. It just improves Bitcoin and helps few projects mentioned in??https://en.bitcoin.it/wiki/Taproot_Uses
> Nobody is talking about get rich quick schemes in Taproot Activation related meetings. At least I have not seen anyone.
> 

Thats also true but also not what I said.

> > If you??want faster development??cycles then you have lightning to play with.
> 
> Better development cycles with less delay, less misinformation, less politics, less probability of things being exploited by mining pools or other people, organization etc. with their influence. Lightning Network is a separate project focused on layer 2 and I think it will also benefit from Taproot.
> 

This is the recurring theme of the tyrant that shows up in a lot of the posts on this
list. 
Who is this entity that gets to decide what happens regardless of what everyone 
else has to say? You seem to believe that there exists some entity that gets to decide what goes on and gets to exclude anyone it wants from the decision making process.

> >??we *DO NOT* change things we already established in the past
> 
> Interested to know who is "we" in this sentence and what are the "things" that cannot be changed.

"we" is a reference to "we're all Satoshi" and the "things" you will learn by learning the past.

> 
> >??In order to solve the LOT debate lets give Wladimir the power??to decide on his own and if he has no strong opinions he should just flip a coin.
> 
> LOT has become LOL. If this is about Bitcoin Core maintainers deciding things for Bitcoin Core, sure they already do. But users have the freedom to decide if they want to run it with default settings or use other implementation.

This is your way of passing the buck around. If you do not yet know what your
responsabilities are that does not make you not responsable for anything. 
Bitcoin Core has responsabilities regardless of the rethoric.

> 
> >??MAST threshold can be even lower because it is not representative of an economic majority??and it could speed up the upgrade.
> 
> Agree
> 
> >??At this point involve as few people as possible and get it done. This is just about the??software and the parameters of the new consesus.
> 
> Everyone should be welcome to participate in meetings, ask questions, learn more and contribute. I don't see anything wrong with it.

That depends on the scope of the meetings. If the meeting is about making progress on
an issue very few people have any clue about then it is desirable that the people
that are looking to learn should do so using other venues.
> -- 
> Prayank

-- 

From prayank at tutanota.de  Fri Mar 19 16:55:27 2021
From: prayank at tutanota.de (Prayank)
Date: Fri, 19 Mar 2021 17:55:27 +0100 (CET)
Subject: [bitcoin-dev] Taproot activation meeting on IRC - Tuesday 16th
 March 19:00 UTC
In-Reply-To: <20210319104544.l4z6shndm2xnmk77@www01.emuadmin.com>
References: <MVzGeC---3-2@tutanota.de>
 <20210319104544.l4z6shndm2xnmk77@www01.emuadmin.com>
Message-ID: <MWAPRNh--3-2@tutanota.de>

> back in the day we also had people that thought 10 min avg block time is too much.

Not sure what some people thought about block time interval has to do with me. Also these are the things written by Greg Maxwell and Chris Belcher about it that I agree with and been sharing from sometime now on many platforms:

https://twitter.com/prayankgahlot/status/1269164956899049474

https://bitcoin.stackexchange.com/a/103289/

> Starting from the parameters of bitcoin consensus to the way Bitcoin Core is organized to the minimum time of 18 months an upgrade needs to last. (based on prior experience) If you want to challenge any of the old rules it takes more than ignoring them and doing whatever you feel like (is useful to get the result you want (again the tyrant theme)).

I was assuming Bitcoin is a protocol for p2p decentralized network and Bitcoin Core is just one implementation which is used by most of the people for lot of reasons but things can be improved and I am hopeful will improve with time. Users were, are and will be free to run whatever they feel like: Bitcoin Core or fork of Bitcoin Core or Other implmenations but still use Bitcoin.

> You seem to believe that there exists some entity that gets to decide what goes on and gets to exclude anyone it wants from the decision making process.

No I don't. You seem to have lot of assumptions. My comments were expectations from the people who are more experienced than me and know more about Bitcoin development. Things can change, you can always go out of the box to improve things.

> "we" is a reference to "we're all Satoshi" and the "things" you will learn by learning the past.

Satoshi if was a person and not group would be disappointed about few things but anyways. "We" should not discourage people from discussion about soft forks that everyone agrees will improve Bitcoin. I don't know everything about past but again thanks for the assumptions.

> If the meeting is about making progress on an issue very few people have any clue about then it is desirable that the people that are looking to learn should do so using other venues.

Any suggestions which venues will work better for Taproot related meeting that you don't have issues with?


-- 
Prayank
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210319/6755aa01/attachment.html>

From jlrubin at mit.edu  Fri Mar 19 21:41:43 2021
From: jlrubin at mit.edu (Jeremy)
Date: Fri, 19 Mar 2021 14:41:43 -0700
Subject: [bitcoin-dev] (Recurring) Taproot activation meeting on IRC -
 Tuesday 23rd March 19:00 UTC + every fortnight
Message-ID: <CAD5xwhhmNn9a0v55J9zrPHN9FxL+jqEJx13n2zLb1-_0u_1Zjw@mail.gmail.com>

In response to the previous Taproot Activation Meeting, I noted that the
advance notice was insufficient and proposed having the proposed meeting
the following week, to consider the meeting last week as a "discussion",
and thereafter reserving a meeting slot fortnightly reserved. I've been
asked/volunteered in the ##taproot-activation IRC channel on freenode to
announce, assemble an agenda, and host this meeting. *If you plan to attend
please read the entire email as there are some specific instructions for
participation that have differed from past meetings.*

I've attached an ICS file with scheduling this meeting for 10 repetitions
for your convenience. Subsequent meetings will hopefully be unnecessary,
but scheduling them in advance helps ensure a process that respects all
parties desire to participate.

The purpose of this meeting is to serve as a checkpoint to raise any
blocking issues and to attempt to finalize parameter selection. As such,
I've attempted to make a guided agenda that should move towards
finalization rather than continuation of debate and makes the best use of
everyone's time. If there are topics missing or if I didn't accurately
capture the zeitgeist of discussion, please chime in with suggested changes
to the agenda.

If you cannot attend the meeting you may per-register a comment by replying
to this email. You may also pre-register a comment here for any reason for
ease of reference during the meeting, but it is not required. So that we
can keep the meeting focused and adjust agenda accordingly, I'll also
request explicitly that certain categories of comment described below be
pre-registered. Please keep this thread limited to pre-registered comments
rather than responses to such comments, which will be addressed in the
meeting.

For the meeting this coming Tuesday the plan is to attempt to finalize on:

1. Resolving any outstanding concerns around using a Speedy Trial to
attempt to activate Taproot that must be addressed.

There seems to be diverse consensus on ST, as per
https://gist.github.com/michaelfolkson/92899f27f1ab30aa2ebee82314f8fe7f#gistcomment-3668460
.

*As such, please pre-register any concern about any ST variant at all by
responding below.*

2. Selecting between start/stop heights and times for a speedy trial.

See https://github.com/bitcoin/bitcoin/pull/21377
https://github.com/bitcoin/bitcoin/pull/21392.

The focus of this discussion should be focused on blocking reasons to not
use time based parameters, the code review process, and timelines for being
able to utilize either activation method.

It is already a widely acknowledged preference for heights over times from
a blank slate pure technical point of view, this discussion is intended to
be more pragmatic about safety, hitting the timelines we want to, and
shipping code.

*As such, If you wish to advocate for MTP from a blank slate pure technical
point of view, please pre-register a comment below so we can adjust the
agenda ahead of time. *

3. Parameter Selection for start/stop/active points.

Short of resolving height or time based start/stop, a discussion of
selecting acceptable parameters. We should get agreement on both sets of
height or time parameters irrespective of the resolution to 2, so that this
conversation can proceed independently.

My personal pre-meeting suggestion to keep the discussion moving is that we
primarily discuss based on time (as it is the independent variable), and
simply use the next (not previous) starting signalling period based on a
projection of 10 minute average blocks from today's date to determine the
specific height parameters. *Please pre-register if you have a different
suggestion.*

4. Parameter flexibility.

If we select parameters but, for some reason, need to adjust by a week or
two, does this invalidate all ACKs on parameter selection? Or can we agree
upon some slack in the timeline to accommodate unforeseen development
issues.

5. Simultaneous UASF.

There still seems to be some activity on the front of a simultaneous to ST
UASF. As this has the potential to derail the meeting if there should be
UASF at all (which I think is orthogonal to the goals of this meeting), and
given many participants unfamiliarity with the proposal for a UASF,
*I ask that any issues you wish to raise in this section of the meeting or
pertaining to UASF in a prior section be made in a detailed pre-registered
comment. *

I think it is regrettable to place this onus on the UASF organizers, but
strong communication to the community about plans and intentions seem to be
essential and in line with what would be required for a UASF to be safe and
successful in any case. I also recognize that some participants (on either
side) may not wish to discuss UASF at all in this meeting, but I think that
it is an important part of the activation discussion irrespective of
personal views.


As a reminder, the channel is also open for ongoing discussion 24/7, and
there is a web chat client here:

https://webchat.freenode.net/?channel=##taproot-activation

Best,

Jeremy


--
@JeremyRubin <https://twitter.com/JeremyRubin>
<https://twitter.com/JeremyRubin>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210319/3f968299/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/calendar
Size: 968 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210319/3f968299/attachment-0002.ics>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: taproot-meeting.ics
Type: text/calendar
Size: 1009 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210319/3f968299/attachment-0003.ics>

From vjudeu at gazeta.pl  Fri Mar 19 19:46:26 2021
From: vjudeu at gazeta.pl (vjudeu)
Date: Fri, 19 Mar 2021 20:46:26 +0100
Subject: [bitcoin-dev] An alternative to BIP 32?
Message-ID: <125859088-3f93e6aca40d5c3244243540270cdb84@pmq7v.m5r2.onet>

I recently found some interesting and simple HD wallet design here: https://bitcointalk.org/index.php?topic=5321992.0
Could anyone see any flaws in such design or is it safe enough to implement it and use in practice?
If I understand it correctly, it is just pure ECDSA and SHA-256, nothing else:
masterPublicKey = masterPrivateKey * G
masterChildPublicKey = masterPublicKey + ( SHA-256( masterPublicKey || nonce ) mod n ) * G
masterChildPrivateKey = masterPrivateKey + ( SHA-256( masterPublicKey || nonce ) mod n )
Also, it has some nice properties, like all keys starting with 02 prefix and allows potentially unlimited custom derivation path by using 256-bit nonce.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210319/84226cbf/attachment.html>

From erik at q32.com  Sat Mar 20 01:32:46 2021
From: erik at q32.com (Erik Aronesty)
Date: Fri, 19 Mar 2021 21:32:46 -0400
Subject: [bitcoin-dev] An alternative to BIP 32?
In-Reply-To: <125859088-3f93e6aca40d5c3244243540270cdb84@pmq7v.m5r2.onet>
References: <125859088-3f93e6aca40d5c3244243540270cdb84@pmq7v.m5r2.onet>
Message-ID: <CAJowKg+DHsJR4eeHbYgwe79C-U9WZ1-iUyxNLxw9EfD6mQQLBw@mail.gmail.com>

use sha3-256.  sha256 suffers from certain attacks (length extension,
for example) that could make your scheme vulnerable to leaking info,
depending on how you concatenate things, etc.  better to choose
something where padding doesn't matter.

On Fri, Mar 19, 2021 at 7:28 PM vjudeu via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> I recently found some interesting and simple HD wallet design here: https://bitcointalk.org/index.php?topic=5321992.0
> Could anyone see any flaws in such design or is it safe enough to implement it and use in practice?
> If I understand it correctly, it is just pure ECDSA and SHA-256, nothing else:
>
> masterPublicKey = masterPrivateKey * G
> masterChildPublicKey = masterPublicKey + ( SHA-256( masterPublicKey || nonce ) mod n ) * G
> masterChildPrivateKey = masterPrivateKey + ( SHA-256( masterPublicKey || nonce ) mod n )
>
> Also, it has some nice properties, like all keys starting with 02 prefix and allows potentially unlimited custom derivation path by using 256-bit nonce.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From crypto at timruffing.de  Sat Mar 20 10:08:30 2021
From: crypto at timruffing.de (Tim Ruffing)
Date: Sat, 20 Mar 2021 11:08:30 +0100
Subject: [bitcoin-dev] An alternative to BIP 32?
In-Reply-To: <125859088-3f93e6aca40d5c3244243540270cdb84@pmq7v.m5r2.onet>
References: <125859088-3f93e6aca40d5c3244243540270cdb84@pmq7v.m5r2.onet>
Message-ID: <62853a4db45c8c6a483fcb3ca05e0bb58e06a643.camel@timruffing.de>

On Fri, 2021-03-19 at 20:46 +0100, vjudeu via bitcoin-dev wrote:
> is it safe enough to implement it and use in practice?

This may be harsh but I can assure you that a HD wallet scheme that can
be specified in 3 lines (without even specifying what the security
goals are) should not be assumed safe to implement.

Tim 


From me at arik.io  Sat Mar 20 02:08:39 2021
From: me at arik.io (Arik Sosman)
Date: Fri, 19 Mar 2021 19:08:39 -0700
Subject: [bitcoin-dev] An alternative to BIP 32?
In-Reply-To: <CAJowKg+DHsJR4eeHbYgwe79C-U9WZ1-iUyxNLxw9EfD6mQQLBw@mail.gmail.com>
References: <125859088-3f93e6aca40d5c3244243540270cdb84@pmq7v.m5r2.onet>
 <CAJowKg+DHsJR4eeHbYgwe79C-U9WZ1-iUyxNLxw9EfD6mQQLBw@mail.gmail.com>
Message-ID: <23C3AD3A-DB4B-4E0B-9280-2F102CA43703@arik.io>

Hi Erik,

Would sha256-hmac(nonce, publicKeyPoint) still be a suitable/safe alternative without relying on sha3? That should at the very least eliminate length extension attacks.

Best,
Arik

> On Mar 19, 2021, at 6:32 PM, Erik Aronesty via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> use sha3-256.  sha256 suffers from certain attacks (length extension,
> for example) that could make your scheme vulnerable to leaking info,
> depending on how you concatenate things, etc.  better to choose
> something where padding doesn't matter.
> 
> On Fri, Mar 19, 2021 at 7:28 PM vjudeu via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> 
>> I recently found some interesting and simple HD wallet design here: https://bitcointalk.org/index.php?topic=5321992.0
>> Could anyone see any flaws in such design or is it safe enough to implement it and use in practice?
>> If I understand it correctly, it is just pure ECDSA and SHA-256, nothing else:
>> 
>> masterPublicKey = masterPrivateKey * G
>> masterChildPublicKey = masterPublicKey + ( SHA-256( masterPublicKey || nonce ) mod n ) * G
>> masterChildPrivateKey = masterPrivateKey + ( SHA-256( masterPublicKey || nonce ) mod n )
>> 
>> Also, it has some nice properties, like all keys starting with 02 prefix and allows potentially unlimited custom derivation path by using 256-bit nonce.
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210319/194c9b22/attachment.sig>

From baro77 at gmail.com  Sat Mar 20 16:31:19 2021
From: baro77 at gmail.com (Andrea Barontini)
Date: Sat, 20 Mar 2021 17:31:19 +0100
Subject: [bitcoin-dev] Provisions (was: PSA: Taproot loss of quantum
 protections)
In-Reply-To: <13413c69-7ca1-7dc0-3b44-4109b6b121e8@gmail.com>
References: <202103152148.15477.luke@dashjr.org> <YE/p0u3gp4UYNS7R@camus>
 <3d6d308f-3d9f-588a-5b8f-3ab14560974c@gmail.com> <YFDLiR/w1IYiTURU@camus>
 <qNBklvsZzwYQ7F43vxDvwRuB28nLzGwSIZ2tkYjAQikdNsVW-Zs3exp4otMW_xdl7EoJ2JIl6aZVs7NUM_-7ilxWGJ3HhQvhkYnyz3U7wgg=@protonmail.com>
 <13413c69-7ca1-7dc0-3b44-4109b6b121e8@gmail.com>
Message-ID: <8c3e4dfa-e979-1922-9429-325cbc4a13dd@gmail.com>

Hi again Andrew and ZmnSCPxj,

I have dealt with the resources you provided me

Regarding Provisions I have concentrated my attention to Proof of assets 
and I have to say it has been a good "exercise" for my ZKP learning

Regarding Jonas Nick code I'm not sure I would call it "a use of 
Taproot" since -as far as I have understood (perhaps not enough)- the 
Taproot's role there is just to provide public keys for the anonimity 
set, so no Taproot core specificities applied to Rings

Always a pleasure to discover something new and feel a (humble) part of 
a community!

See ya

From vjudeu at gazeta.pl  Sat Mar 20 20:25:36 2021
From: vjudeu at gazeta.pl (vjudeu)
Date: Sat, 20 Mar 2021 21:25:36 +0100
Subject: [bitcoin-dev] An alternative to BIP 32?
Message-ID: <126113469-4f8fddbc2594365c5558c0e75fa55917@pmq5v.m5r2.onet>

So, things have to be complicated to be secure? By definition, using some private key, calculating some public key from it and incrementing that key is secure (it is definitely no worse than address reuse). The only problem with using "privKey", "(privKey+1) mod n", "(privKey+2) mod n" and so on is that all of those public keys could be easily linked together. If that is the only problem, then by making offset deterministic but less predictable, it should be secure enough, right? So, instead of simple incrementation, we would have "privKey" (parent), "(privKey+firstOffset) mod n" (first child), "(privKey+secondOffset) mod n" (second child) and so on. And as long as this offset is not guessed by the attacker, it is impossible to link all of those keys together, right?

> On 2021-03-20 11:08:30 user Tim Ruffing <crypto at timruffing.de> wrote:
> > On Fri, 2021-03-19 at 20:46 +0100, vjudeu via bitcoin-dev wrote:
> > > is it safe enough to implement it and use in practice?
> > 
> > This may be harsh but I can assure you that a HD wallet scheme that can
> > be specified in 3 lines (without even specifying what the security
> > goals are) should not be assumed safe to implement.
> > 
> > Tim 
> > 
> > 
> 




From vjudeu at gazeta.pl  Sat Mar 20 20:25:03 2021
From: vjudeu at gazeta.pl (vjudeu)
Date: Sat, 20 Mar 2021 21:25:03 +0100
Subject: [bitcoin-dev] An alternative to BIP 32?
Message-ID: <126710959-a6df04a40ff13ff821cb6c67e5707bfb@pmq3v.m5r2.onet>

How length extension attack is possible here? The input of SHA-256 has constant length of 512 bits in this scheme. And if someone will get some child public key, there is still no way to reverse it to the parent public key, because even if the second block of SHA-256 is the same all the times, the attacker still does not know the outcome of SHA-256, so the last round of SHA-256 is unknown and doing calculations backwards seems to be impossible.

> On 2021-03-20 03:08:39 user Arik Sosman <me at arik.io> wrote:
> > Hi Erik,
> > 
> > Would sha256-hmac(nonce, publicKeyPoint) still be a suitable/safe alternative without relying on sha3? That should at the very least eliminate length extension attacks.
> > 
> > Best,
> > Arik
> > 
> > > On Mar 19, 2021, at 6:32 PM, Erik Aronesty via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > > 
> > > use sha3-256.  sha256 suffers from certain attacks (length extension,
> > > for example) that could make your scheme vulnerable to leaking info,
> > > depending on how you concatenate things, etc.  better to choose
> > > something where padding doesn't matter.
> > > 
> > > On Fri, Mar 19, 2021 at 7:28 PM vjudeu via bitcoin-dev
> > > <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > >> 
> > >> I recently found some interesting and simple HD wallet design here: https://bitcointalk.org/index.php?topic=5321992.0
> > >> Could anyone see any flaws in such design or is it safe enough to implement it and use in practice?
> > >> If I understand it correctly, it is just pure ECDSA and SHA-256, nothing else:
> > >> 
> > >> masterPublicKey = masterPrivateKey * G
> > >> masterChildPublicKey = masterPublicKey + ( SHA-256( masterPublicKey || nonce ) mod n ) * G
> > >> masterChildPrivateKey = masterPrivateKey + ( SHA-256( masterPublicKey || nonce ) mod n )
> > >> 
> > >> Also, it has some nice properties, like all keys starting with 02 prefix and allows potentially unlimited custom derivation path by using 256-bit nonce.
> > >> _______________________________________________
> > >> bitcoin-dev mailing list
> > >> bitcoin-dev at lists.linuxfoundation.org
> > >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > > _______________________________________________
> > > bitcoin-dev mailing list
> > > bitcoin-dev at lists.linuxfoundation.org
> > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > 
> > 
> 
> 
> 
> 




From jlrubin at mit.edu  Sun Mar 21 18:10:42 2021
From: jlrubin at mit.edu (Jeremy)
Date: Sun, 21 Mar 2021 11:10:42 -0700
Subject: [bitcoin-dev] (Recurring) Taproot activation meeting on IRC -
 Tuesday 23rd March 19:00 UTC + every fortnight
In-Reply-To: <CAD5xwhhmNn9a0v55J9zrPHN9FxL+jqEJx13n2zLb1-_0u_1Zjw@mail.gmail.com>
References: <CAD5xwhhmNn9a0v55J9zrPHN9FxL+jqEJx13n2zLb1-_0u_1Zjw@mail.gmail.com>
Message-ID: <CAD5xwhiEH0dL6OVt143dS0j+W4WLoqsLDUV3Zw146-jX+S-oNw@mail.gmail.com>

Meeting Reminder:

A few people have pinged me asking when the meeting is. It is in the title
of the email, apologies if that was unclear.

19:00 UTC this Tuesday (12pm Pacific Time).

If you would like to pre-register a comment please try to send it to the
list today or tomorrow if possible, it will help with giving participants a
chance to review any longer form content in advance of the meeting and
ensure a productive conversation.

Best,

Jeremy

--
@JeremyRubin <https://twitter.com/JeremyRubin>
<https://twitter.com/JeremyRubin>


On Fri, Mar 19, 2021 at 2:41 PM Jeremy <jlrubin at mit.edu> wrote:

> In response to the previous Taproot Activation Meeting, I noted that the
> advance notice was insufficient and proposed having the proposed meeting
> the following week, to consider the meeting last week as a "discussion",
> and thereafter reserving a meeting slot fortnightly reserved. I've been
> asked/volunteered in the ##taproot-activation IRC channel on freenode to
> announce, assemble an agenda, and host this meeting. *If you plan to
> attend please read the entire email as there are some specific instructions
> for participation that have differed from past meetings.*
>
> I've attached an ICS file with scheduling this meeting for 10 repetitions
> for your convenience. Subsequent meetings will hopefully be unnecessary,
> but scheduling them in advance helps ensure a process that respects all
> parties desire to participate.
>
> The purpose of this meeting is to serve as a checkpoint to raise any
> blocking issues and to attempt to finalize parameter selection. As such,
> I've attempted to make a guided agenda that should move towards
> finalization rather than continuation of debate and makes the best use of
> everyone's time. If there are topics missing or if I didn't accurately
> capture the zeitgeist of discussion, please chime in with suggested changes
> to the agenda.
>
> If you cannot attend the meeting you may per-register a comment by
> replying to this email. You may also pre-register a comment here for any
> reason for ease of reference during the meeting, but it is not required. So
> that we can keep the meeting focused and adjust agenda accordingly, I'll
> also request explicitly that certain categories of comment described below
> be pre-registered. Please keep this thread limited to pre-registered
> comments rather than responses to such comments, which will be addressed in
> the meeting.
>
> For the meeting this coming Tuesday the plan is to attempt to finalize on:
>
> 1. Resolving any outstanding concerns around using a Speedy Trial to
> attempt to activate Taproot that must be addressed.
>
> There seems to be diverse consensus on ST, as per
> https://gist.github.com/michaelfolkson/92899f27f1ab30aa2ebee82314f8fe7f#gistcomment-3668460
> .
>
> *As such, please pre-register any concern about any ST variant at all by
> responding below.*
>
> 2. Selecting between start/stop heights and times for a speedy trial.
>
> See https://github.com/bitcoin/bitcoin/pull/21377
> https://github.com/bitcoin/bitcoin/pull/21392.
>
> The focus of this discussion should be focused on blocking reasons to not
> use time based parameters, the code review process, and timelines for being
> able to utilize either activation method.
>
> It is already a widely acknowledged preference for heights over times from
> a blank slate pure technical point of view, this discussion is intended to
> be more pragmatic about safety, hitting the timelines we want to, and
> shipping code.
>
> *As such, If you wish to advocate for MTP from a blank slate pure
> technical point of view, please pre-register a comment below so we can
> adjust the agenda ahead of time. *
>
> 3. Parameter Selection for start/stop/active points.
>
> Short of resolving height or time based start/stop, a discussion of
> selecting acceptable parameters. We should get agreement on both sets of
> height or time parameters irrespective of the resolution to 2, so that this
> conversation can proceed independently.
>
> My personal pre-meeting suggestion to keep the discussion moving is that
> we primarily discuss based on time (as it is the independent variable), and
> simply use the next (not previous) starting signalling period based on a
> projection of 10 minute average blocks from today's date to determine the
> specific height parameters. *Please pre-register if you have a different
> suggestion.*
>
> 4. Parameter flexibility.
>
> If we select parameters but, for some reason, need to adjust by a week or
> two, does this invalidate all ACKs on parameter selection? Or can we agree
> upon some slack in the timeline to accommodate unforeseen development
> issues.
>
> 5. Simultaneous UASF.
>
> There still seems to be some activity on the front of a simultaneous to ST
> UASF. As this has the potential to derail the meeting if there should be
> UASF at all (which I think is orthogonal to the goals of this meeting), and
> given many participants unfamiliarity with the proposal for a UASF,
> *I ask that any issues you wish to raise in this section of the meeting or
> pertaining to UASF in a prior section be made in a detailed pre-registered
> comment. *
>
> I think it is regrettable to place this onus on the UASF organizers, but
> strong communication to the community about plans and intentions seem to be
> essential and in line with what would be required for a UASF to be safe and
> successful in any case. I also recognize that some participants (on either
> side) may not wish to discuss UASF at all in this meeting, but I think that
> it is an important part of the activation discussion irrespective of
> personal views.
>
>
> As a reminder, the channel is also open for ongoing discussion 24/7, and
> there is a web chat client here:
>
> https://webchat.freenode.net/?channel=##taproot-activation
>
> Best,
>
> Jeremy
>
>
> --
> @JeremyRubin <https://twitter.com/JeremyRubin>
> <https://twitter.com/JeremyRubin>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210321/667bd9bc/attachment.html>

From crypto at timruffing.de  Sun Mar 21 21:45:19 2021
From: crypto at timruffing.de (Tim Ruffing)
Date: Sun, 21 Mar 2021 22:45:19 +0100
Subject: [bitcoin-dev] An alternative to BIP 32?
In-Reply-To: <126113469-4f8fddbc2594365c5558c0e75fa55917@pmq5v.m5r2.onet>
References: <126113469-4f8fddbc2594365c5558c0e75fa55917@pmq5v.m5r2.onet>
Message-ID: <616d3364b01dd392c86b7dbd1b6b6f5786bc7d67.camel@timruffing.de>

On Sat, 2021-03-20 at 21:25 +0100, vjudeu via bitcoin-dev wrote:
> So, things have to be complicated to be secure?

Not at all. But we first need to spend some thoughts on what "secure"
means before we can tell if something is secure.

>  By definition, using some private key, calculating some public key
> from it and incrementing that key is secure (it is definitely no
> worse than address reuse).?

If secure means that it does not hurt the unforgeability of ECDSA, then
I believe you're right.

> The only problem with using "privKey", "(privKey+1) mod n",
> "(privKey+2) mod n" and so on is that all of those public keys could
> be easily linked together. If that is the only problem, then by
> making offset deterministic but less predictable, it should be secure
> enough, right? So, instead of simple incrementation, we would have
> "privKey" (parent), "(privKey+firstOffset) mod n" (first child),
> "(privKey+secondOffset) mod n" (second child) and so on. And as long
> as this offset is not guessed by the attacker, it is impossible to
> link all of those keys together, right?

I believe this intuition is also a good first approach. So let's have a
look:? You say that offset = SHA256(masterPublicKey || nonce). Is this
predictable by the attacker??

I can't really answer that question because it's not specified how
"nonce" is obtained.? Since this is supposed to be a deterministic
scheme, I see two basic ways: Either the master private key is involved
in the derivation of "nonce" (then "nonce" may be unpredictable) or
it's not (then "nonce" is predictable).  

Another fact that may or not be a problem is that it may be possible to
compute a parent private key from the a private key. Again, I can't
tell because I don't know how nonce is obtained. 	

Taking a step back, BIP 32 addresses all of these concerns. I agree it
could be simpler but I don't see a practical necessity to invent a new
scheme. In any application where this proposal could potentially be
used, BIP 32 could also be used and it's just good enough.

Tim 


> 
> > On 2021-03-20 11:08:30 user Tim Ruffing <crypto at timruffing.de>
> > wrote:
> > > On Fri, 2021-03-19 at 20:46 +0100, vjudeu via bitcoin-dev wrote:
> > > > is it safe enough to implement it and use in practice?
> > > 
> > > This may be harsh but I can assure you that a HD wallet scheme
> > > that can
> > > be specified in 3 lines (without even specifying what the
> > > security
> > > goals are) should not be assumed safe to implement.
> > > 
> > > Tim 
> > > 
> > > 
> > 
> 
> 
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev



From vjudeu at gazeta.pl  Mon Mar 22 07:51:00 2021
From: vjudeu at gazeta.pl (vjudeu)
Date: Mon, 22 Mar 2021 08:51:00 +0100
Subject: [bitcoin-dev] An alternative to BIP 32?
Message-ID: <126012152-39f82455cdb5fc18203880bbba2d7b06@pmq7v.m5r2.onet>

> I can't really answer that question because it's not specified how "nonce" is obtained.

Nonce depends directly on your derivation path. By default, you can just start from 256-bit zero value and increment it if you want standard derivation path. But optionally it can be something else that is unique, for example username. So, if you have "0/0/0/0" derivation path, then you have four nonces with 256-bit zero each time. But if you have '0/"bitcointalk.org"/5321992/"coinlatte"' derivation path (as mentioned by the author of this scheme), then your first nonce is 256-bit zero value, your second nonce is SHA-256 of "bitcointalk.org", which is f245bd5620ee79314f48d9e9641a5406bd03745f6ac516e2801ef6ccbfe40ced, your third nonce is 0000000000000000000000000000000000000000000000000000000000513508 and your fourth nonce is 314870494d3a9136ba0a67ceb33534cbd438e982105d20cc076204c6fc99594d. There is an example in mentioned topic here: https://bitcointalk.org/index.php?topic=5321992.msg56503261#msg56503261

> the master private key is involved in the derivation of "nonce" (then "nonce" may be unpredictable)

It is impossible, because having some parent public key should be enough to derive child public keys. But even if you know the nonce, you have no idea what masterPublicKey was used in SHA-256 (that is the thing you are looking for if you try to link addresses together).

To see how difficult it is to get some parent key from some child key, you can try going up the tree in the mentioned example. SHA-256 empty string is e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855, but if used directly, that leads us to some key starting with 03 prefix, so we should negate it and get 1c4f3bbd6703e3eb65040b37669046da93009b024aad0cef1b3cc57157e388ec. Then, we have our child key 02 a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd and to break this scheme and prove that going to the parent key is possible, we have to find something like this:

masterPublicKey = attackerPublicKey + SHA256(attackerPublicKey || nonce)

02 a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd = attackerPublicKey + SHA-256(attackerPublicKey || 0000000000000000000000000000000000000000000000000000000000000000)

For me, it seems that finding attackerPublicKey here is impossible. Of course the absence of solution does not mean that it is secure, but I think it is a good example to show how strong this scheme is.

On 2021-03-21 22:45:19 user Tim Ruffing <crypto at timruffing.de> wrote:
> On Sat, 2021-03-20 at 21:25 +0100, vjudeu via bitcoin-dev wrote:
> > So, things have to be complicated to be secure?
> 
> Not at all. But we first need to spend some thoughts on what "secure"
> means before we can tell if something is secure.
> 
> >  By definition, using some private key, calculating some public key
> > from it and incrementing that key is secure (it is definitely no
> > worse than address reuse).?
> 
> If secure means that it does not hurt the unforgeability of ECDSA, then
> I believe you're right.
> 
> > The only problem with using "privKey", "(privKey+1) mod n",
> > "(privKey+2) mod n" and so on is that all of those public keys could
> > be easily linked together. If that is the only problem, then by
> > making offset deterministic but less predictable, it should be secure
> > enough, right? So, instead of simple incrementation, we would have
> > "privKey" (parent), "(privKey+firstOffset) mod n" (first child),
> > "(privKey+secondOffset) mod n" (second child) and so on. And as long
> > as this offset is not guessed by the attacker, it is impossible to
> > link all of those keys together, right?
> 
> I believe this intuition is also a good first approach. So let's have a
> look:? You say that offset = SHA256(masterPublicKey || nonce). Is this
> predictable by the attacker??
> 
> I can't really answer that question because it's not specified how
> "nonce" is obtained.? Since this is supposed to be a deterministic
> scheme, I see two basic ways: Either the master private key is involved
> in the derivation of "nonce" (then "nonce" may be unpredictable) or
> it's not (then "nonce" is predictable).  
> 
> Another fact that may or not be a problem is that it may be possible to
> compute a parent private key from the a private key. Again, I can't
> tell because I don't know how nonce is obtained. 	
> 
> Taking a step back, BIP 32 addresses all of these concerns. I agree it
> could be simpler but I don't see a practical necessity to invent a new
> scheme. In any application where this proposal could potentially be
> used, BIP 32 could also be used and it's just good enough.
> 
> Tim 
> 
> 
> > 
> > > On 2021-03-20 11:08:30 user Tim Ruffing <crypto at timruffing.de>
> > > wrote:
> > > > On Fri, 2021-03-19 at 20:46 +0100, vjudeu via bitcoin-dev wrote:
> > > > > is it safe enough to implement it and use in practice?
> > > > 
> > > > This may be harsh but I can assure you that a HD wallet scheme
> > > > that can
> > > > be specified in 3 lines (without even specifying what the
> > > > security
> > > > goals are) should not be assumed safe to implement.
> > > > 
> > > > Tim 
> > > > 
> > > > 
> > > 
> > 
> > 
> > 
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
> 
> 




From erik at q32.com  Mon Mar 22 12:05:13 2021
From: erik at q32.com (Erik Aronesty)
Date: Mon, 22 Mar 2021 08:05:13 -0400
Subject: [bitcoin-dev] An alternative to BIP 32?
In-Reply-To: <23C3AD3A-DB4B-4E0B-9280-2F102CA43703@arik.io>
References: <125859088-3f93e6aca40d5c3244243540270cdb84@pmq7v.m5r2.onet>
 <CAJowKg+DHsJR4eeHbYgwe79C-U9WZ1-iUyxNLxw9EfD6mQQLBw@mail.gmail.com>
 <23C3AD3A-DB4B-4E0B-9280-2F102CA43703@arik.io>
Message-ID: <CAJowKgJtF3m0-WnMYMhn=wgxk6zsmxpLuftc=nsSqCgKKX-w4Q@mail.gmail.com>

yes that would be fine.    not sure what your objection to sha3 is tho
(more provably secure) - i guess sticking with bitcoin-lib stuff tho.

On Fri, Mar 19, 2021 at 10:08 PM Arik Sosman <me at arik.io> wrote:
>
> Hi Erik,
>
> Would sha256-hmac(nonce, publicKeyPoint) still be a suitable/safe alternative without relying on sha3? That should at the very least eliminate length extension attacks.
>
> Best,
> Arik
>
> > On Mar 19, 2021, at 6:32 PM, Erik Aronesty via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> >
> > use sha3-256.  sha256 suffers from certain attacks (length extension,
> > for example) that could make your scheme vulnerable to leaking info,
> > depending on how you concatenate things, etc.  better to choose
> > something where padding doesn't matter.
> >
> > On Fri, Mar 19, 2021 at 7:28 PM vjudeu via bitcoin-dev
> > <bitcoin-dev at lists.linuxfoundation.org> wrote:
> >>
> >> I recently found some interesting and simple HD wallet design here: https://bitcointalk.org/index.php?topic=5321992.0
> >> Could anyone see any flaws in such design or is it safe enough to implement it and use in practice?
> >> If I understand it correctly, it is just pure ECDSA and SHA-256, nothing else:
> >>
> >> masterPublicKey = masterPrivateKey * G
> >> masterChildPublicKey = masterPublicKey + ( SHA-256( masterPublicKey || nonce ) mod n ) * G
> >> masterChildPrivateKey = masterPrivateKey + ( SHA-256( masterPublicKey || nonce ) mod n )
> >>
> >> Also, it has some nice properties, like all keys starting with 02 prefix and allows potentially unlimited custom derivation path by using 256-bit nonce.
> >> _______________________________________________
> >> bitcoin-dev mailing list
> >> bitcoin-dev at lists.linuxfoundation.org
> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

From michaelfolkson at gmail.com  Mon Mar 22 12:10:03 2021
From: michaelfolkson at gmail.com (Michael Folkson)
Date: Mon, 22 Mar 2021 12:10:03 +0000
Subject: [bitcoin-dev] (Recurring) Taproot activation meeting on IRC -
 Tuesday 23rd March 19:00 UTC + every fortnight
Message-ID: <CAFvNmHQthx=j=wu-LZT85Cm_25Tqua20wQBxz2Jg2jFtd_pmvg@mail.gmail.com>

Thanks for organizing this Jeremy, agenda looks great. I do think we are
now at the time where Taproot activation becomes a priority for all those
with a stake in Taproot activation.

Although these parameters haven't yet been finalized the proposed
(approximate) startheight is May 1st which is less than 6 weeks away.

https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-March/018594.html

Therefore I encourage everyone with a stake in Taproot activation to attend
this meeting tomorrow (Tuesday 19:00 UTC) and raise any specific concerns
with block height vs MTP and proposed timetables as Jeremy suggests before
the meeting.

Personally I think we should avoid the min activation height dragging into
December. November (current proposed is November 13th) seems ideal as to
avoid (admittedly Western) holidays in December and January. Other than
that I think we have some (limited) wiggle room with regards to the exact
timetable to ensure the optimal code is merged.

-- 
Michael Folkson
Email: michaelfolkson at gmail.com
Keybase: michaelfolkson
PGP: 43ED C999 9F85 1D40 EAF4 9835 92D6 0159 214C FEE3
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210322/349ec381/attachment.html>

From erik at q32.com  Mon Mar 22 14:24:55 2021
From: erik at q32.com (Erik Aronesty)
Date: Mon, 22 Mar 2021 10:24:55 -0400
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <202103152148.15477.luke@dashjr.org>
References: <202103152148.15477.luke@dashjr.org>
Message-ID: <CAJowKgLuWOkD=_jDaLqG=FOG02qX7p4-EZ69yvw4UqcWpz+rRg@mail.gmail.com>

The argument that hashed public addresses provide meaningful quantum
resistance is flawed *when considered in the context*.of Bitcoin
itself.

This article by Andrew Chow is easy to read and makes a strong case
against the quantum utility of hashed public keys:
https://cryptowords.github.io/why-does-hashing-public-keys-not-actually-provide-any-quantum-resistance

And then, of course, one should be mindful of the case against quantum
computing itself - it is neither inevitable nor "just around the
corner".   Mikhail Dyakonov summarized the arguments well here:
https://t.co/cgrfrroTTT?amp=1.

My current stance (at my company at least) is that planning for
quantum computing should be limited to "a provable and written ability
to upgrade if it becomes clear that it's necessary."

Does anyone think it would it be useful to write up a more official,
and even partly functional plan for Bitcoin to use zero-knowledge
proofs to transition to quantum resistance?

- Erik Aronesty
  CTO, Atkama

On Mon, Mar 15, 2021 at 5:48 PM Luke Dashjr via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> I do not personally see this as a reason to NACK Taproot, but it has become
> clear to me over the past week or so that many others are unaware of this
> tradeoff, so I am sharing it here to ensure the wider community is aware of
> it and can make their own judgements.
>
> Mark Friedenbach explains on his blog:
>     https://freicoin.substack.com/p/why-im-against-taproot
>
> In short, Taproot loses an important safety protection against quantum.
> Note that in all circumstances, Bitcoin is endangered when QC becomes a
> reality, but pre-Taproot, it is possible for the network to "pause" while a
> full quantum-safe fix is developed, and then resume transacting. With Taproot
> as-is, it could very well become an unrecoverable situation if QC go online
> prior to having a full quantum-safe solution.
>
> Also, what I didn't know myself until today, is that we do not actually gain
> anything from this: the features proposed to make use of the raw keys being
> public prior to spending can be implemented with hashed keys as well.
> It would use significantly more CPU time and bandwidth (between private
> parties, not on-chain), but there should be no shortage of that for anyone
> running a full node (indeed, CPU time is freed up by Taproot!); at worst, it
> would create an incentive for more people to use their own full node, which
> is a good thing!
>
> Despite this, I still don't think it's a reason to NACK Taproot: it should be
> fairly trivial to add a hash on top in an additional softfork and fix this.
>
> In addition to the points made by Mark, I also want to add two more, in
> response to Pieter's "you can't claim much security if 37% of the supply is
> at risk" argument. This argument is based in part on the fact that many
> people reuse Bitcoin invoice addresses.
>
> First, so long as we have hash-based addresses as a best practice, we can
> continue to shrink the percentage of bitcoins affected through social efforts
> discouraging address use. If the standard loses the hash, the situation
> cannot be improved, and will indeed only get worse.
>
> Second, when/if quantum does compromise these coins, so long as they are
> neglected or abandoned/lost coins (inherent in the current model), it can be
> seen as equivalent to Bitcoin mining. At the end of the day, 37% of supply
> minable by QCs is really no different than 37% minable by ASICs. (We've seen
> far higher %s available for mining obviously.)
>
> To conclude, I recommend anyone using Bitcoin to read Mark's article, my
> thoughts, and any other arguments on the topic; decide if this is a concern
> to you, and make your own post(s) accordingly. Mark has conceded the argument
> (AFAIK he doesn't have an interest in bitcoins anyway), and I do not consider
> it a showstopper - so if anyone else out there does, please make yourself
> known ASAP since Taproot has already moved on to the activation phase and it
> is likely software will be released within the next month or two as things
> stand.
>
> Luke
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From martin.schwarz at gmail.com  Tue Mar 23 09:36:32 2021
From: martin.schwarz at gmail.com (Martin Schwarz)
Date: Tue, 23 Mar 2021 10:36:32 +0100
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <CAJowKgLuWOkD=_jDaLqG=FOG02qX7p4-EZ69yvw4UqcWpz+rRg@mail.gmail.com>
References: <202103152148.15477.luke@dashjr.org>
 <CAJowKgLuWOkD=_jDaLqG=FOG02qX7p4-EZ69yvw4UqcWpz+rRg@mail.gmail.com>
Message-ID: <CAKhySQy3BZjPpk17DNedbobG4+VTkQQND_m2X6RhfyOrfkAiJA@mail.gmail.com>

Erik,

> Does anyone think it would it be useful to write up a more official,
and even partly functional plan for Bitcoin to use zero-knowledge
proofs to transition to quantum resistance?

yes, this would be appreciated very much! Andrew Chow's write-up
gives already some high-level idea, but a more detailed exposition
would be essential for further discussion.

thank you,
Martin

On Mon, Mar 22, 2021 at 3:47 PM Erik Aronesty via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> The argument that hashed public addresses provide meaningful quantum
> resistance is flawed *when considered in the context*.of Bitcoin
> itself.
>
> This article by Andrew Chow is easy to read and makes a strong case
> against the quantum utility of hashed public keys:
>
> https://cryptowords.github.io/why-does-hashing-public-keys-not-actually-provide-any-quantum-resistance
>
> And then, of course, one should be mindful of the case against quantum
> computing itself - it is neither inevitable nor "just around the
> corner".   Mikhail Dyakonov summarized the arguments well here:
> https://t.co/cgrfrroTTT?amp=1.
>
> My current stance (at my company at least) is that planning for
> quantum computing should be limited to "a provable and written ability
> to upgrade if it becomes clear that it's necessary."
>
> Does anyone think it would it be useful to write up a more official,
> and even partly functional plan for Bitcoin to use zero-knowledge
> proofs to transition to quantum resistance?
>
> - Erik Aronesty
>   CTO, Atkama
>
> On Mon, Mar 15, 2021 at 5:48 PM Luke Dashjr via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> >
> > I do not personally see this as a reason to NACK Taproot, but it has
> become
> > clear to me over the past week or so that many others are unaware of this
> > tradeoff, so I am sharing it here to ensure the wider community is aware
> of
> > it and can make their own judgements.
> >
> > Mark Friedenbach explains on his blog:
> >     https://freicoin.substack.com/p/why-im-against-taproot
> >
> > In short, Taproot loses an important safety protection against quantum.
> > Note that in all circumstances, Bitcoin is endangered when QC becomes a
> > reality, but pre-Taproot, it is possible for the network to "pause"
> while a
> > full quantum-safe fix is developed, and then resume transacting. With
> Taproot
> > as-is, it could very well become an unrecoverable situation if QC go
> online
> > prior to having a full quantum-safe solution.
> >
> > Also, what I didn't know myself until today, is that we do not actually
> gain
> > anything from this: the features proposed to make use of the raw keys
> being
> > public prior to spending can be implemented with hashed keys as well.
> > It would use significantly more CPU time and bandwidth (between private
> > parties, not on-chain), but there should be no shortage of that for
> anyone
> > running a full node (indeed, CPU time is freed up by Taproot!); at
> worst, it
> > would create an incentive for more people to use their own full node,
> which
> > is a good thing!
> >
> > Despite this, I still don't think it's a reason to NACK Taproot: it
> should be
> > fairly trivial to add a hash on top in an additional softfork and fix
> this.
> >
> > In addition to the points made by Mark, I also want to add two more, in
> > response to Pieter's "you can't claim much security if 37% of the supply
> is
> > at risk" argument. This argument is based in part on the fact that many
> > people reuse Bitcoin invoice addresses.
> >
> > First, so long as we have hash-based addresses as a best practice, we can
> > continue to shrink the percentage of bitcoins affected through social
> efforts
> > discouraging address use. If the standard loses the hash, the situation
> > cannot be improved, and will indeed only get worse.
> >
> > Second, when/if quantum does compromise these coins, so long as they are
> > neglected or abandoned/lost coins (inherent in the current model), it
> can be
> > seen as equivalent to Bitcoin mining. At the end of the day, 37% of
> supply
> > minable by QCs is really no different than 37% minable by ASICs. (We've
> seen
> > far higher %s available for mining obviously.)
> >
> > To conclude, I recommend anyone using Bitcoin to read Mark's article, my
> > thoughts, and any other arguments on the topic; decide if this is a
> concern
> > to you, and make your own post(s) accordingly. Mark has conceded the
> argument
> > (AFAIK he doesn't have an interest in bitcoins anyway), and I do not
> consider
> > it a showstopper - so if anyone else out there does, please make yourself
> > known ASAP since Taproot has already moved on to the activation phase
> and it
> > is likely software will be released within the next month or two as
> things
> > stand.
> >
> > Luke
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210323/d5592b95/attachment-0001.html>

From crypto at timruffing.de  Tue Mar 23 10:50:20 2021
From: crypto at timruffing.de (Tim Ruffing)
Date: Tue, 23 Mar 2021 11:50:20 +0100
Subject: [bitcoin-dev] PSA: Taproot loss of quantum protections
In-Reply-To: <CAJowKgLuWOkD=_jDaLqG=FOG02qX7p4-EZ69yvw4UqcWpz+rRg@mail.gmail.com>
References: <202103152148.15477.luke@dashjr.org>
 <CAJowKgLuWOkD=_jDaLqG=FOG02qX7p4-EZ69yvw4UqcWpz+rRg@mail.gmail.com>
Message-ID: <f7a5d8436d112c01882c666f6a2077c48aee51f5.camel@timruffing.de>

On Mon, 2021-03-22 at 10:24 -0400, Erik Aronesty via bitcoin-dev wrote:
> 
> Does anyone think it would it be useful to write up a more official,
> and even partly functional plan for Bitcoin to use zero-knowledge
> proofs to transition to quantum resistance?

Yes, for sure. This is certainly something that the community should
discuss. Looking into this problem is also on my (too long) list of
research problems.

I think IF we arrive at the conclusion that this is a good idea (which
is possible but not at all clear to me at this point), then one of the
questions is whether it's desirable to use something more efficient
than a zero-knowledge proof, at the potential cost of committing to a
real public key of a simple post-quantum signature scheme. This could
for example be a hash-based one-time signature scheme (but something
more efficient than the often mentioned Lamport signatures, e.g.,
Winternitz or W-OTS+ signatures).



From jlrubin at mit.edu  Wed Mar 24 03:46:54 2021
From: jlrubin at mit.edu (Jeremy)
Date: Tue, 23 Mar 2021 20:46:54 -0700
Subject: [bitcoin-dev] March 23rd 2021 Taproot Activation Meeting Notes
Message-ID: <CAD5xwhiXE=yJFi+9aZQqMOCaiUrJ_UEvcESR3E0j2SA1RnbqmA@mail.gmail.com>

We had a very productive meeting today. Here is a summary of the meeting --
I've done my best to
summarize in an unbiased way. Thank you to everyone who attended.

1. On the use of a speedy trial variant:

- There are no new objections to speedy trial generally.
- There is desire to know if Rusty retracts or reaffirms his NACK in light
of the responses.
- There is an open question of if Rusty's NACK remains if it is
sufficiently addressed.
- There is no desire to wait for Rusty's response if he does not respond
(but please don't leave us in suspense).


2. Selecting between heights and MTP:

- There is not robust consensus on either
- There are two NACKs, one (luke-jr) against MTP, one (jeremyrubin) against
height. More on this in
 agenda item 5.
- No one has an issue with the technical safety of MTP/heights on their own.
- There is an open question of the additional review required to ensure
height based activation is
 safe.

3. Parameter Selection

- There is broad agreement that we should target something like a May 1st
release, with 1 week from rc1
 starttime/startheight, and 3 months + delta stoptime/stopheight (6
retargetting periods), and an
 activation time of around Nov 15th.
- If we select heights, it looks like the first signalling period would be
683424, the stop height
 would be 695520.
- If we select times, we should target a mid-period MTP. We can shift this
closer to release, but
 currently it looks like a 1300 UTC May 7th start time and stop time would
be 1300 UTC August 13th.
- The activation height should be 707616 (about Nov 15th) for either
proposal.

(please check my math, if anyone is superstitious we can add a day to
times...)

4. Parameter Flexibility

- We may wish to adjust the schedule a little bit -- either back 1 signal,
or up 1 signal.
- There's concurrence that regardless of pushing the start or stop dates,
we should hold the
 November 15th date steady as slipping past Thanksgiving turns to Christmas
turns to New Years
 turns to Chinese New Year and we're looking at March as the next date
people would want to
 schedule.
- There's concurrence that as long as we're getting to a release sometime
in May (with a very strong
 preference for Mid-May as opposed to End of May) that we don't need to
re-evaluate. There's
 limited belief that we could stretch this into June if needed.
- There's belief that we should be able to get a release with ST Taproot on
the timeline suggested
 by topic 3.

5. Simultaneous UASF*

- luke-jr believes that a UASF client must be able to release before the ST
client releases in
 order for people to use it
- no one else in attendance seemed to share this sentiment, a UASF can
proceed independently of ST.
- UASF is compatible with a MTP based ST by selecting whatever height the
ST MTP started at
 (and a stop height farther in the future with LOT).
- luke-jr NACK of ST MTP: ST with MTP means that UASF must release after ST
releases, which limits
 UASF adoption.
- jeremyrubin NACK of ST Height: if using height means that we'd see a
marketed push to launch a
 UASF client before ST is given a chance, ST fails its goal for avoiding
contentious forks.

* For the avoidance of doubt, theUASF client would include logic to be
compatible with ST's minimum
 activation height and may be variously called a "UASF", "BIP8 LOT=true w/
minactiveheight for ST
 compatibility", "ST + BIP8", or some other combination of phrases in
different places

Best,

Jeremy
--
@JeremyRubin <https://twitter.com/JeremyRubin>
<https://twitter.com/JeremyRubin>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210323/b2033cd8/attachment.html>

From michaelfolkson at gmail.com  Wed Mar 24 11:23:53 2021
From: michaelfolkson at gmail.com (Michael Folkson)
Date: Wed, 24 Mar 2021 11:23:53 +0000
Subject: [bitcoin-dev] March 23rd 2021 Taproot Activation Meeting Notes
Message-ID: <CAFvNmHTtH=ohCY1e3nS5GVACzbBJs1MCEcYO-yxzRFOQqgULqQ@mail.gmail.com>

Thanks for this Jeremy. I agree with the vast majority of this.

For those that missed yesterday's meeting the meeting log is here:
http://gnusha.org/taproot-activation/2021-03-23.log

Jeremy also livestreamed the meeting on his Twitch channel:
https://www.twitch.tv/videos/960346848

On the choice between using block heights consistently or using a
weird mix of both block heights and MTP in the same activation
mechanism you can put me down for a NACK for the latter also.

In addition I documented here the preferences for a consistent use of
block height:
https://github.com/bitcoin/bitcoin/pull/21377#issuecomment-802336038

If it was a direct choice between entirely block height or entirely
MTP then I probably wouldn't NACK either. But using a mix of both
makes no sense to me.

The two arguments in favor of using a weird mix of block heights and
MTP appear to be:
1) "additional review required to ensure height based activation"
2) To prevent a "marketed push to launch a UASF client."

On 1) I would argue that the additional review required is not
excessive by any means and we have the time to review a consistent use
of block height (especially if people spent their time reviewing a PR
with a consistent use of block height rather than arguing for a mix).
On 2) if we are making technical decisions based on speculating on the
marketing strategies of other projects Bitcoin Core is a very
different project to the project I thought it was.

I personally would find it much easier to reason about timings and
time intervals of the different activation phases if block heights are
used consistently across the activation mechanism rather than a weird
mix of both block heights and MTP.

Other than that, I agree it was an excellent meeting and thanks for
your efforts organizing and hosting the meeting.

-- 
Michael Folkson
Email: michaelfolkson at gmail.com
Keybase: michaelfolkson
PGP: 43ED C999 9F85 1D40 EAF4 9835 92D6 0159 214C FEE3

From guido.dassori at gmail.com  Wed Mar 24 13:33:07 2021
From: guido.dassori at gmail.com (Guido Dassori)
Date: Wed, 24 Mar 2021 14:33:07 +0100
Subject: [bitcoin-dev] Delegated signatures in Bitcoin within existing
 rules, no fork required
In-Reply-To: <CAD5xwhj73Uq6j_Wu2e6-4VA_-=50mwK4G-Mf24mC87CFvF-LnA@mail.gmail.com>
References: <CAD5xwhhC1Y13p7KazfUOXFZ5vi5MA9EQ-scyafv4aNkjskoXBg@mail.gmail.com>
 <plFEi9xoSnZ0TDJ7wH2dJx1F727FCSBrPsa2-26AXtveHKolt9bzTE1tiGIoPSjhgBfToVID2YHEaMGwwVU5dZ3Sozmz9UO-6HvbEDmm67I=@protonmail.com>
 <CAD5xwhhMjsYMRebN4Td614qOyAey24h7vQAjZjP_ETzvXJQBLw@mail.gmail.com>
 <_SJunY4b2FhUkCj49-C_D7Uj1VYlS8qqZuO2-NIAEAIkCIfWEWVVgx-pNN0ZXlujGKUiU_hfcV-aq9yK6LHjHoK_5E0pYncVWtW99regZnE=@protonmail.com>
 <CAD5xwhj73Uq6j_Wu2e6-4VA_-=50mwK4G-Mf24mC87CFvF-LnA@mail.gmail.com>
Message-ID: <CAJ_Ap8g6-TR0k7g9-KbxW-4N92kyL6yktVN2jboVNo8sPj7a9w@mail.gmail.com>

Hello Jeremy,

I find this a very interesting idea :-)
Actually I implemented something similar a bit ago in a POC, available on
GH since a while: https://github.com/gdassori/btc-bargain

At this very moment we're working to make it production ready and cut our
transaction fees (we run a 2-on-3 wallet with buy\sell features) down to
~5%.

Guido
https://twitter.com/khs9ne

Il giorno mer 17 mar 2021 alle ore 07:30 Jeremy via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> ha scritto:

> ZmnSCPxj,
>
> The chief reason to use SIGHASH_NONE (or SIGHASH_SINGLE for partial funds
> delegations) is to make it so that the delegator can dynamically choose
> things like a change output. Otherwise you need to know exactly what you
> want beforehand.
>
> I'd note that you can also achieve a decent amount of scripting capability
> for fully pre-signed transactions using layered encryption. E.g., given
> script Checksig(Alice) and Checksig(Bob), you can delegate to
> 2 of CheckMulti(Carol, Dave, Eve) by (for example) encrypting either a
> presigned txn or the actual sk's themselves with enc(Carol, enc(Dave, m)),
> enc(Carol, enc(Eve, m)), enc(Dave, enc(Eve, m)). This allows you to
> post-hoc delegate a presigned (or the keys -- which may or may not be safe
> if they are from a HD wallet mind you). You can also do a variant of
> timelock encryption by encrypting m using a verifiable delay function (this
> actually permits a new kind of relative lock, depending on where you layer
> the VDF enc, which would be N seconds from when the two parties agree to
> decrypt). The general protocol can also be optimized by giving Carol
> enc(Dave, m) and enc(Eve) but then you have to have a confidential channel
> to each delegate. You can also do a ZKCP type thing if you prove that a txn
> matching a specific format is encrypted with the preimage to a hash.
> There's a lot you can do as improvement on simple "hand the key" -- this
> sounds kinda similar to scriptless scripts?
>
> W.r.t. privacy, it certainly is a hit. But I think in situations where
> privacy is a goal, then the delegation can contact the original signer and
> ask to cooperate. However in some circumstances that won't be viable given
> access to keys or whatnot. I would suggest in these cases that you can do a
> hybrid: delegate to a script and provide a default sighash_all txn, and a
> modifiable sighash_none/single. Then the delegates can decide what is best
> to use and optimistically get the originals to sign off.
>
> Interestingly, there is a subset of cases where it is desirable to have
> privacy *from the original script holder*. Conceivably the tx does need to
> be public at some point, but for interest, once delegated to from S to S',
> S' could show a signature covering a txn hash from S', and request that S
> sign it. S' can reveal partial information -- e.g., which inputs are being
> spent, but not which outputs are being created. Maybe not super useful, but
> it is interesting to note of course.
>
> Best,
>
> Jeremy
> --
> @JeremyRubin <https://twitter.com/JeremyRubin>
> <https://twitter.com/JeremyRubin>
>
>
> On Tue, Mar 16, 2021 at 1:36 AM ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:
>
>> Good morning Jeremy,
>>
>> Thank you.
>>
>> Assuming only keys, an easier way of delegating would be simply to give a
>> copy of the privkey outright to the delegatee.
>>
>> However, an advantage of this technique you described is that the
>> delegator can impose additional restrictions that are programmable via any
>> SCRIPT, an ability that merely handing over the privkey cannot do.
>> Thus the technique has an ability that mere handover cannot achieve.
>>
>> If the delegatee is a known single entity, and S is simply the delegatee
>> key plus some additional restrictions, it may be possible to sign with
>> `SIGHASH_ALL` a transaction that spends A and D, and outputs to a singlesig
>> of the delegatee key.
>> This would avoid the use of `SIGHASH_NONE`, for a mild improvement in
>> privacy.
>> The output would still allow the delegatee to dispose of the funds by its
>> unilateral decision subject to the fulfillment of the script S (at the cost
>> of yet another transaction).
>> On the other hand, if S is unusual enough, the enhanced privacy may be
>> moot (the S already marks the transaction as unusual), so this variation
>> has little value.
>>
>> In terms of offchain technology, if the delegator remains online, the
>> delegatee may present a witness satisfying S to the delegator, and ask the
>> delegator to provide an alternate transaction that spends A directly
>> without spending D and outputs to whatever the delegatee wants.
>> The delegator cannot refuse since the delegatee can always use the
>> `SIGHASH_NONE` signature and spend to whatever it decides provided it can
>> present a witness satisfying S.
>> This is basically a typical "close transaction" for layer 2 technology.
>> On the other hand, one generalized use-case for delegation would be if
>> the delegator suspects it may not be online or able to sign with the
>> delegator key, so this variation has reduced value as well.
>>
>> Regards,
>> ZmnSCPxj
>>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210324/1ba36a44/attachment.html>

From jlrubin at mit.edu  Wed Mar 24 18:10:17 2021
From: jlrubin at mit.edu (Jeremy)
Date: Wed, 24 Mar 2021 11:10:17 -0700
Subject: [bitcoin-dev] March 23rd 2021 Taproot Activation Meeting Notes
In-Reply-To: <CAFvNmHTtH=ohCY1e3nS5GVACzbBJs1MCEcYO-yxzRFOQqgULqQ@mail.gmail.com>
References: <CAFvNmHTtH=ohCY1e3nS5GVACzbBJs1MCEcYO-yxzRFOQqgULqQ@mail.gmail.com>
Message-ID: <CAD5xwhi8f=w4htNURkZ_eDRgzoHxFYYvBmQWrqff15Spn+hTmA@mail.gmail.com>

Michael,

Your response strikes me as ingenuine with regards to "other projects" as
it is a project I understand you to be one of the parties spearheading. I
think it's misleading to not clarify that in your response.

Your NACK on MTP based ST does not have any merit. The only argument you
made for nacking MTP based ST is it is "weird". "Weird" is not a technical
argument, it's a normative statement.

As you would ACK either full MTP or full height, but nacking "mixed, seems
to be a fallacy of the excluded middle.

AJ's note on this where it is technically justified to use MTP w/ min
active height
https://github.com/bitcoin/bitcoin/pull/21377#issuecomment-792425221, as
such it is not a weird choice at all. In fact, without further patching, if
I understand correctly, you wouldn't want to use pure MTP without
additional logic.

I further find your logic around point 2, 'To prevent a "marketed push to
launch a UASF client."', to more aptly apply to ST with height.


Pushing for height based ST is causing additional review burden on
contributors in service of enabling a fringe group's side project. That is
actually making a technical decision on another project's marketing
strategy, and is precisely why I NACK'd it.

Even more outrageously, MTP based ST is easily compatible with a height
based BIP8 LOT=true + minactiveheight client, so there really is not a good
reason for the fuss. Note -- in general UASF is not the fringe group here
-- it's the group trying to preempt the release of an ST client with a UASF
client which is the fringe sentiment.

For you to flip the exact argument that I made for rejecting ST Height onto
ST MTP is no more than a "I know you are but what am I" argument, which I
do not think holds water.

Best,

Jeremy



--
@JeremyRubin <https://twitter.com/JeremyRubin>
<https://twitter.com/JeremyRubin>


On Wed, Mar 24, 2021 at 4:24 AM Michael Folkson <michaelfolkson at gmail.com>
wrote:

> Thanks for this Jeremy. I agree with the vast majority of this.
>
> For those that missed yesterday's meeting the meeting log is here:
> http://gnusha.org/taproot-activation/2021-03-23.log
>
> Jeremy also livestreamed the meeting on his Twitch channel:
> https://www.twitch.tv/videos/960346848
>
> On the choice between using block heights consistently or using a
> weird mix of both block heights and MTP in the same activation
> mechanism you can put me down for a NACK for the latter also.
>
> In addition I documented here the preferences for a consistent use of
> block height:
> https://github.com/bitcoin/bitcoin/pull/21377#issuecomment-802336038
>
> If it was a direct choice between entirely block height or entirely
> MTP then I probably wouldn't NACK either. But using a mix of both
> makes no sense to me.
>
> The two arguments in favor of using a weird mix of block heights and
> MTP appear to be:
> 1) "additional review required to ensure height based activation"
> 2) To prevent a "marketed push to launch a UASF client."
>
> On 1) I would argue that the additional review required is not
> excessive by any means and we have the time to review a consistent use
> of block height (especially if people spent their time reviewing a PR
> with a consistent use of block height rather than arguing for a mix).
> On 2) if we are making technical decisions based on speculating on the
> marketing strategies of other projects Bitcoin Core is a very
> different project to the project I thought it was.
>
> I personally would find it much easier to reason about timings and
> time intervals of the different activation phases if block heights are
> used consistently across the activation mechanism rather than a weird
> mix of both block heights and MTP.
>
> Other than that, I agree it was an excellent meeting and thanks for
> your efforts organizing and hosting the meeting.
>
> --
> Michael Folkson
> Email: michaelfolkson at gmail.com
> Keybase: michaelfolkson
> PGP: 43ED C999 9F85 1D40 EAF4 9835 92D6 0159 214C FEE3
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210324/565bdf20/attachment-0001.html>

From michaelfolkson at gmail.com  Wed Mar 24 19:14:12 2021
From: michaelfolkson at gmail.com (Michael Folkson)
Date: Wed, 24 Mar 2021 19:14:12 +0000
Subject: [bitcoin-dev] March 23rd 2021 Taproot Activation Meeting Notes
In-Reply-To: <CAD5xwhi8f=w4htNURkZ_eDRgzoHxFYYvBmQWrqff15Spn+hTmA@mail.gmail.com>
References: <CAFvNmHTtH=ohCY1e3nS5GVACzbBJs1MCEcYO-yxzRFOQqgULqQ@mail.gmail.com>
 <CAD5xwhi8f=w4htNURkZ_eDRgzoHxFYYvBmQWrqff15Spn+hTmA@mail.gmail.com>
Message-ID: <CAFvNmHR1a7e=20_Rjx0JOPOqibMxJy3J=KfoXNUeXwzb3_tzLw@mail.gmail.com>

> Your response strikes me as ingenuine with regards to "other projects" as it is a project I understand you to be one of the parties spearheading. I think it's misleading to not clarify that in your response.

I support Taproot activation and any project that can help bring that
about. As I have said many times I am 100 percent against an
incompatible UASF release with a Core ST release. However a UASF
project is well within its rights to work around finalized ST
parameters in Core to prepare for a possible (but unlikely) failed ST
deployment, *especially* in the case that Core is unable to.

> As you would ACK either full MTP or full height, but nacking "mixed, seems to be a fallacy of the excluded middle.

I just prefer consistency. If you prefer inconsistency that is your
right. Although "I have a preference for fully height based design,
correct" is another of your direct quotes from 6 days ago. So NACKing
that same approach 6 days later is a touch bizarre.
https://github.com/bitcoin/bitcoin/pull/21377#issuecomment-802396191

> I further find your logic around point 2, 'To prevent a "marketed push to launch a UASF client."', to more aptly apply to ST with height.

"marketed push to launch a UASF client" is a direct quote from your
email. What marketing has to do with anything I have no idea. As I
said in my original response I would prefer not to make technical
decisions based on speculation for the marketing strategy of an
alternative project. That leads down a very dark road of merging in
PRs in response to "world computers" and "Turing completeness"
marketing.

Thanks
Michael

On Wed, Mar 24, 2021 at 6:10 PM Jeremy <jlrubin at mit.edu> wrote:
>
> Michael,
>
> Your response strikes me as ingenuine with regards to "other projects" as it is a project I understand you to be one of the parties spearheading. I think it's misleading to not clarify that in your response.
>
> Your NACK on MTP based ST does not have any merit. The only argument you made for nacking MTP based ST is it is "weird". "Weird" is not a technical argument, it's a normative statement.
>
> As you would ACK either full MTP or full height, but nacking "mixed, seems to be a fallacy of the excluded middle.
>
> AJ's note on this where it is technically justified to use MTP w/ min active height https://github.com/bitcoin/bitcoin/pull/21377#issuecomment-792425221, as such it is not a weird choice at all. In fact, without further patching, if I understand correctly, you wouldn't want to use pure MTP without additional logic.
>
> I further find your logic around point 2, 'To prevent a "marketed push to launch a UASF client."', to more aptly apply to ST with height.
>
>
> Pushing for height based ST is causing additional review burden on contributors in service of enabling a fringe group's side project. That is actually making a technical decision on another project's marketing strategy, and is precisely why I NACK'd it.
>
> Even more outrageously, MTP based ST is easily compatible with a height based BIP8 LOT=true + minactiveheight client, so there really is not a good reason for the fuss. Note -- in general UASF is not the fringe group here -- it's the group trying to preempt the release of an ST client with a UASF client which is the fringe sentiment.
>
> For you to flip the exact argument that I made for rejecting ST Height onto ST MTP is no more than a "I know you are but what am I" argument, which I do not think holds water.
>
> Best,
>
> Jeremy
>
>
>
> --
> @JeremyRubin
>
>
> On Wed, Mar 24, 2021 at 4:24 AM Michael Folkson <michaelfolkson at gmail.com> wrote:
>>
>> Thanks for this Jeremy. I agree with the vast majority of this.
>>
>> For those that missed yesterday's meeting the meeting log is here:
>> http://gnusha.org/taproot-activation/2021-03-23.log
>>
>> Jeremy also livestreamed the meeting on his Twitch channel:
>> https://www.twitch.tv/videos/960346848
>>
>> On the choice between using block heights consistently or using a
>> weird mix of both block heights and MTP in the same activation
>> mechanism you can put me down for a NACK for the latter also.
>>
>> In addition I documented here the preferences for a consistent use of
>> block height:
>> https://github.com/bitcoin/bitcoin/pull/21377#issuecomment-802336038
>>
>> If it was a direct choice between entirely block height or entirely
>> MTP then I probably wouldn't NACK either. But using a mix of both
>> makes no sense to me.
>>
>> The two arguments in favor of using a weird mix of block heights and
>> MTP appear to be:
>> 1) "additional review required to ensure height based activation"
>> 2) To prevent a "marketed push to launch a UASF client."
>>
>> On 1) I would argue that the additional review required is not
>> excessive by any means and we have the time to review a consistent use
>> of block height (especially if people spent their time reviewing a PR
>> with a consistent use of block height rather than arguing for a mix).
>> On 2) if we are making technical decisions based on speculating on the
>> marketing strategies of other projects Bitcoin Core is a very
>> different project to the project I thought it was.
>>
>> I personally would find it much easier to reason about timings and
>> time intervals of the different activation phases if block heights are
>> used consistently across the activation mechanism rather than a weird
>> mix of both block heights and MTP.
>>
>> Other than that, I agree it was an excellent meeting and thanks for
>> your efforts organizing and hosting the meeting.
>>
>> --
>> Michael Folkson
>> Email: michaelfolkson at gmail.com
>> Keybase: michaelfolkson
>> PGP: 43ED C999 9F85 1D40 EAF4 9835 92D6 0159 214C FEE3



-- 
Michael Folkson
Email: michaelfolkson at gmail.com
Keybase: michaelfolkson
PGP: 43ED C999 9F85 1D40 EAF4 9835 92D6 0159 214C FEE3

From aj at erisian.com.au  Thu Mar 25 07:02:04 2021
From: aj at erisian.com.au (Anthony Towns)
Date: Thu, 25 Mar 2021 17:02:04 +1000
Subject: [bitcoin-dev] March 23rd 2021 Taproot Activation Meeting Notes
In-Reply-To: <CAD5xwhiXE=yJFi+9aZQqMOCaiUrJ_UEvcESR3E0j2SA1RnbqmA@mail.gmail.com>
References: <CAD5xwhiXE=yJFi+9aZQqMOCaiUrJ_UEvcESR3E0j2SA1RnbqmA@mail.gmail.com>
Message-ID: <20210325070204.GA10937@erisian.com.au>

On Tue, Mar 23, 2021 at 08:46:54PM -0700, Jeremy via bitcoin-dev wrote:
> 3. Parameter Selection
> - There is broad agreement that we should target something like a May 1st
>   release, with 1 week from rc1?starttime/startheight,
>   and 3 months + delta stoptime/stopheight (6 retargetting periods), and an
>  ?activation time of around Nov 15th.

I'd thought the idea was to release mid-late April, targetting a starttime
of May 1st.

> - If we select heights, it looks like the first signalling period would be
>   683424, the stop height?would be 695520.

> - If we select times, we should target a mid-period MTP. We can shift this
> closer to release, but currently it looks like a 1300 UTC May 7th start time and stop time would be 1300 UTC August 13th.

We've traditionally done starttime/timeout at midnight UTC, seems weird
to change. Oh, or is it a Friday-the-13th, lets have 13s everywhere
thing?

Anyway, block 695520 is about 19440 blocks away, which we'd expect to be
135 days, but over the past two years, 19440 blocks prior to a retarget
boundary has been between 127 (-8) days and 137 (+2) days, and in the
last four years, it's been between 121 (-14) days and 139 (+4) days. [0]

So given block 676080 had mediantime 1616578564, I think picking a
mediantime no later than ~139 days later, ie 1628640000 (00:00 UTC
11 Aug) would be the most likely to result in MTP logic matching the
height parameters above, and a day or two earlier still might be better.
(It will match provided MTP passes the timeout at any block in the range
[695520, 697535])

> (please check my math, if anyone is superstitious we can add a day to times...)

It looks to me like blocks are more likely to arrive earlier than later
(which is what we'd expect with increasing hashrate), fwiw, so adding
days would be more likely to cause MTP to have more signalling periods
than height-based, rather than avoid having fewer.

Cheers,
aj

[0] $ for b in `seq 201600 2016 676000`; do a=$(($b-19440)); echo $(( $(bitcoin-cli getblockheader $(bitcoin-cli getblockhash $b) | grep mediantime | cut -d\  -f4 | tr -d ,) -  $(bitcoin-cli getblockheader $(bitcoin-cli getblockhash $a) | grep mediantime | cut -d\  -f4 | tr -d ,) )); done 

From jlrubin at mit.edu  Thu Mar 25 14:30:52 2021
From: jlrubin at mit.edu (Jeremy)
Date: Thu, 25 Mar 2021 07:30:52 -0700
Subject: [bitcoin-dev] March 23rd 2021 Taproot Activation Meeting Notes
In-Reply-To: <20210325070204.GA10937@erisian.com.au>
References: <CAD5xwhiXE=yJFi+9aZQqMOCaiUrJ_UEvcESR3E0j2SA1RnbqmA@mail.gmail.com>
 <20210325070204.GA10937@erisian.com.au>
Message-ID: <CAD5xwhjRsNhL32cONwCTms-a8FGv+FiK3k1ihU8y5a3G1WMb9A@mail.gmail.com>

I think it's fine to move the dates back two weeks in that case; it was
unclear from the meeting transcript if people thought release would be may
1st or startheight, but via parameter flexibility we can shift everything
back 2 weeks if we want.

W.r.t. the selection of MTP there's no funny business I just estimated a
mid period MTP. I don't think midnight utc is sacred, it's 5 o'clock
somewhere.

We can adjust the parameters at your preference -- a little more or less
time shouldn't hurt, but that is also the point of picking mid period MTP
that it makes drift not matter much.

On Thu, Mar 25, 2021, 12:02 AM Anthony Towns <aj at erisian.com.au> wrote:

> On Tue, Mar 23, 2021 at 08:46:54PM -0700, Jeremy via bitcoin-dev wrote:
> > 3. Parameter Selection
> > - There is broad agreement that we should target something like a May 1st
> >   release, with 1 week from rc1 starttime/startheight,
> >   and 3 months + delta stoptime/stopheight (6 retargetting periods), and
> an
> >   activation time of around Nov 15th.
>
> I'd thought the idea was to release mid-late April, targetting a starttime
> of May 1st.
>
> > - If we select heights, it looks like the first signalling period would
> be
> >   683424, the stop height would be 695520.
>
> > - If we select times, we should target a mid-period MTP. We can shift
> this
> > closer to release, but currently it looks like a 1300 UTC May 7th start
> time and stop time would be 1300 UTC August 13th.
>
> We've traditionally done starttime/timeout at midnight UTC, seems weird
> to change. Oh, or is it a Friday-the-13th, lets have 13s everywhere
> thing?
>
> Anyway, block 695520 is about 19440 blocks away, which we'd expect to be
> 135 days, but over the past two years, 19440 blocks prior to a retarget
> boundary has been between 127 (-8) days and 137 (+2) days, and in the
> last four years, it's been between 121 (-14) days and 139 (+4) days. [0]
>
> So given block 676080 had mediantime 1616578564, I think picking a
> mediantime no later than ~139 days later, ie 1628640000 (00:00 UTC
> 11 Aug) would be the most likely to result in MTP logic matching the
> height parameters above, and a day or two earlier still might be better.
> (It will match provided MTP passes the timeout at any block in the range
> [695520, 697535])
>
> > (please check my math, if anyone is superstitious we can add a day to
> times...)
>
> It looks to me like blocks are more likely to arrive earlier than later
> (which is what we'd expect with increasing hashrate), fwiw, so adding
> days would be more likely to cause MTP to have more signalling periods
> than height-based, rather than avoid having fewer.
>
> Cheers,
> aj
>
> [0] $ for b in `seq 201600 2016 676000`; do a=$(($b-19440)); echo $((
> $(bitcoin-cli getblockheader $(bitcoin-cli getblockhash $b) | grep
> mediantime | cut -d\  -f4 | tr -d ,) -  $(bitcoin-cli getblockheader
> $(bitcoin-cli getblockhash $a) | grep mediantime | cut -d\  -f4 | tr -d ,)
> )); done
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210325/6f345444/attachment.html>

From jlrubin at mit.edu  Thu Mar 25 17:35:25 2021
From: jlrubin at mit.edu (Jeremy)
Date: Thu, 25 Mar 2021 10:35:25 -0700
Subject: [bitcoin-dev] Response to Rusty Russell from Github
Message-ID: <CAD5xwhh=E00DVxqhZc7gDTBXtA-_HgybEaP_ysnA4n6AAVbWsA@mail.gmail.com>

In response to
https://gist.github.com/michaelfolkson/92899f27f1ab30aa2ebee82314f8fe7f#gistcomment-3679489,
reproduced below.

Rusty,

I concur with the gist of what you're saying -- Speedy Trial alone is not
the final word on activation logic. There are likely better procedures for
releasing and activating updates.

Where I disagree is that I do not believe that BIP8 with LOT configuration
is the improved long term option we should ossify around either. I
understand the triumvirate model you desire to achieve, but BIP8 with an
individually set LOT configuration does not formalize how economic nodes
send a network legible signal ahead of a chain split. A regular flag day,
with no signalling, but communally released and communicated openly most
likely better achieves the goal of providing users choice.

Where I also disagree is that we are likely to come to consensus on an
improved long term process in the immediate future (e.g., within the next
year), let alone the software for it.

Do you believe that perfecting a release mechanism is a showstopping issue
for proceeding with any upgrade at this time? Or do you just want for this
problem to actively be worked on going forward?

I think it's reasonable to want to form an open ended process to
investigate, spec, and formalize a consistent and complete activation
pathway but I don't think we should force the community to wait around for
an unknown solution to release upgrades that are waiting for takeoff.


Lastly, I'll make the case that ST *does* meet your desired triumvirate at
least as well as BIP8 with configurable LOT.

1. Developers release, but do not activate
2. Miners signal
3. Users may override by compiling and releasing a patched Bitcoin with
moderate changes that activates Taproot at a later date. While this might
*seem* more complicated a procedure than configurable LOT, here are four
reasons why it may be simpler (and safer) to just do a fresh release:

A. No time-based consensus sensitivity on when LOT must be set (e.g., what
happens if mid final signal period users decide to set LOT? Do all users
set it at the same time? Or different times and end up causing nodes to ban
each other for various reasons?)
B. No "missed window" if users don't coordinate on setting LOT before the
final period -- release whenever ready.
C. ST fails fast, permitting users ample time to prepare an alternative
release
D. If miners continue to mine without signalling, and users abandon a
LOT=true setting, their node will have already marked those blocks invalid
and they will need to figure out how to re-validate the block.

RE: point 3, is it as easy as it *could* be? No, but I don't have any
genius ideas on how to make it easier either. (Note that I've previously
argued for adding configurable LOT=true on the basis that a user-run script
could emulate LOT without any software change as a harm reduction, but I
did not advocate that particular technique be formalized as a part of the
activation process)


Best,

Jeremy


> > > Taproot could be activated by a blind monkey, [...] ST avoids the
hard questions, since it will almost certainly pass; [...] But one day, a
real crisis will return. We won't have an answer, and we won't have
practiced: this will make the crisis far worse. Instead, if we codify "devs
propose, miners activate, users override" (i.e. a LOT=true option, off by
default) we'll know exactly what the process will be when miners fail to
activate. It may still be messy, of course, but we'll have all the tools at
hand, and we'll even know the date the crisis will come to a head.
> >
> >
> > I think this argument makes two major errors:
> > ```
> > * First, it tries to artificially tie two improvements together; "if
you can't solve controversial activations, you shouldn't get taproot". That
isn't the way we should do development: just as it was a mistake to try to
tie segwit and a hard-fork to double the block size together, other
improvements should also stand or fall on their own merits. If we're tying
updates together there should be good reasons for why they're better
together (eg segwit and the witness discount; and taproot, schnorr and
tapscript).
> > ```
>
> No, this is a disagreement about how _all_ changes should be activated.
This is completely germane to the current debate. Remember, segwit wasn't
"controversial" until it suddenly was, either. I believe this is not the
case here, but then, I believed that last time as well.
>
> > ```
> > * Second, it assumes that you can usefully test a weapon when play
fighting -- if taproot can be activated by a blind monkey, then having your
bodyguards activate taproot only proves they're as good as a blind monkey,
not that they're ready to protect you from a home invasion. In particular,
bip8 isn't even as ready as bip148 for a real battle; it lacks even the
limited safeguards that were included in that client (and it's also lost
the element of surprise, which might've been bip148's biggest advantage).
> > ```
>
> "BIP 8 isn't ready" is definitely a factor, but while I prefer existing
code when there are no other major factors, there are IMHO major factors
here.
>
> > I think it also probably assumes that the bip8 approach is more ready
to go than it is -- there are (IMHO) serious unresolved objections to bip8
in every possible deployment mode (eg, just lot=true: developers are
imposing decisions on miners and users; just lot=false: miners can object;
lot=true and lot=false: unnecessary chain split risk, risk of downtime for
those running lot=true, risk of reorgs/wipeout for those running
lot=false). Maybe all those objections -- even the ones from one of the
bip8 authors -- are mistaken, but personally I think it's more likely that
significant improvements are needed.
>
> "unnecessary chainsplit risk". No, that's exactly the point: if we end up
with various significant factions fighting over the rules, there will be a
chainsplit. There are no technical workarounds for this. BIP 8 has been
revised to minimize the chance of an _unnecessary_ chainsplit, and the
entire BIP-8 lot=true mechanism was designed as an explicit mining forcing
function.
>
> I remember @pwuille saying explicitly about Segwit activation that users
must decide. That has stuck with me, and my preference for a hidden
lot=true option reflects this understanding. Without such an option,
developers are saying "you can override, but you'll have to replace us."
The result in practice that users are reduced to "beg the devs" or "beg the
miners". That kinda worked last time but damn it was messy, and such
uncertainty does not help the BItcoin ecosystem.
>
> > Personally, I can think of about half a dozen soft-forks I would
like/expect to see progress on once taproot is squared away (great
consensus cleanup, anyprevout, ctv, graftroot, annex-based block
commitments, op_cat/covenants), so it's not like there aren't other
opportunities to improve activation methodologies coming up.
>
> If this approach is good enough until there's a crisis, then why would
anyone approve anything until a crisis comes?

--
@JeremyRubin <https://twitter.com/JeremyRubin>
<https://twitter.com/JeremyRubin>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210325/5da65bbf/attachment-0001.html>

From aj at erisian.com.au  Mon Mar 29 09:17:57 2021
From: aj at erisian.com.au (Anthony Towns)
Date: Mon, 29 Mar 2021 19:17:57 +1000
Subject: [bitcoin-dev] Making the case for flag day activation of taproot
In-Reply-To: <CAMZUoKkWmdwi-VH3WUvFfG+5MDK3xhvZUac3eBQbxXX_b_btWw@mail.gmail.com>
References: <3286a7eb-9deb-77d6-4527-58e0c5882ae2@riseup.net>
 <CAMZUoKkWmdwi-VH3WUvFfG+5MDK3xhvZUac3eBQbxXX_b_btWw@mail.gmail.com>
Message-ID: <20210329091757.GA13603@erisian.com.au>

On Wed, Mar 03, 2021 at 02:08:21PM -0500, Russell O'Connor via bitcoin-dev wrote:
> While I support essentially any proposed taproot activation method, including a
> flag day activation, I think it is premature to call BIP8 dead.
>
> Even today, I still think that starting with BIP8 LOT=false is, generally
> speaking, considered a reasonably safe activation method in the sense that I
> think it will be widely considered as a "not wholly unacceptable" approach to
> activation.

If everyone started with lot=false, that would be true -- that was how
segwit then BIP148/BIP91 worked, and was at least how I had been assuming
people were going to make use of the new improved BIP8.

But it seems more likely that when activation starts, even if many
people run lot=false, many other people will run lot=true: see Luke's
arguments on this list [0], Rusty's campaign for a lot=true option [1],
the ##uasf channel (initial topic: Development of a Taproot activation
implementation with default LOT=true) [2], or Samson's hat designs [3].

[0] https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018498.html
[1] https://rusty.ozlabs.org/?p=628
    https://gist.github.com/michaelfolkson/92899f27f1ab30aa2ebee82314f8fe7f#gistcomment-3667311
[2] http://gnusha.org/uasf/
[3] https://twitter.com/Excellion/status/1363751091460956167

With lot=false and lot=true nodes active on the network, a chain split
occurs if the activation is blocked: perhaps that might happen for good
reasons, eg because there are implementation bugs found after activation
settings are merged but prior to activation locking in, or perhaps for
neutral or bad reasons that cause miners to be opposed.

In the event of a huge conflict or emergency as bad as or worse than
occurred with segwit, a chain split might well be the lesser evil
compared to the activation being blocked or delayed substantially;
but as default scenario for every consensus change, before we know if
someone might find a problem while there's still time to back out, and
before we know if there is going to be a huge conflict? It doesn't seem
as focussed on safety as I'd expect from bitcoin.

> After a normal and successful Core update with LOT=false, we will have more
> data showing broad community support for the taproot upgrade in hand.? In the
> next release, 6 months later or so, Core could then confidently deploy a BIP8
> LOT=true client, should it prove to be necessary.

BIP8/lot=true is great for the situation we found ourselves in with
BIP91/BIP148: there's an activation underway, that is being unexpectedly
opposed, we want to ensure it activates, *and* we don't want to have
everyone have to do a new round of software upgrades.

But if we're able to calmly put out a new release with new activation
parameters, with enough time before it takes effect that everyone can
reasonably upgrade to it, that's a pretty different situation.

First, since we're giving everyone time to upgrade, it can be a clean
secondary deployment -- there's no need to try to drag the original
lot=false users along -- we're giving everyone time to upgrade, and
everyone includes them.

Second, lot=true implies we're doing some unsignalled consensus change
anyway -- blocks would be considered invalid if they don't signal for
activation as of some height, with no prior on-chain signalling that
that rule change has occurred. So if we're allowing that, there's no
principle that requires signalling to lock in the change we're actually
trying to activate.

So at that point why not simply reverse the burden of proof entirely? Run
an initial "speedy trial" type event that allows fast activation via miner
enforcement prior to everyone having upgraded; and if that fails but there
haven't been valid reasonable objections to activation identified, run
a secondary activation attempt that instead of requiring 90% signalling
to activate, requires 90% signalling to *fail*.

Miners not upgrading is then not a blocker, and even if a few miners are
buggy and signal accidently, that doesn't cause a risk to them of having
their blocks dropped, or to the network of having the upgrade blocked.

If there are good reasons to object to the fork being activated that are
discovered/revealed (very) late, this also provides an opportunity to
cleanly cancel the activation by convincing miners that the activation
is undesirable and having them agree to signal for cancellation (via
BIP-91 style coordination or even BIP-148 style mandatory signalling, eg).

And, on the other hand, if 90% of miners are opposed to a soft fork for
some selfish or bad reason, with that much hashpower they could easily do
a 51% attack on the network after activation to prevent any new features
being used, so cancelling activation in that case is probably not worse
in practice than it would be continue with it despite the opposition.

I think a state machine along the lines of:

  DEFINED - for 6 months after code release
  STARTED - exactly 1 period
    FAILED - if sufficient signalling occurs
  DELAYED - 6 months
  LOCKED_IN - exactly 1 period
  ACTIVE

would work fine for an if-at-first-you-don't-succeed approach to
deployment along the above lines.

That seems to me to have a lot of desirable properties:

 - a minority of hashpower can't block activation

 - miners don't have to do anything and don't have to worry about
   their blocks getting orphaned
   
 - devs aren't making any final decisions on consensus changes,
   even if everyone's committed to running the same codebase
   (unlike when merging either lot=true or flag day activations)

 - there's no need to run different clients, or carefully configure your
   node to stay in consensus

 - if economic actors want to influence activation by setting up
   markets, they have a single signalling period to focus on, with 6
   months lead time to set everything up and stabilise price discovery,
   and a fairly definite endpoint and clear result for closing out
   everyone's positions, whichever outcome occurs

 - there's no need/encouragement to use the machine vetting your business
   income as leverage to force/prevent changes to bitcoin consensus;
   configuring your node to not follow the most work chain is only
   needed when both devs and miners are getting it wrong, *and* market
   incentives haven't been enough to correct things

The main drawback is that it doesn't allow faster activation with miner
support; even with a speedy trial first, it's just a boolean: did miners
indicate they've upgraded quickly enough to hit the early activation
or not?

Cheers,
aj


