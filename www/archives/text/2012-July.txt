From jgarzik at exmulti.com  Fri Jul  6 15:10:48 2012
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Fri, 6 Jul 2012 11:10:48 -0400
Subject: [Bitcoin-development] BIP 34: Block v2, Height in Coinbase
Message-ID: <CA+8xBpefOgtuECJqoAtbFfPnmkFEHTL=6Uqf=kb7NB=fnV863Q@mail.gmail.com>

Please review and comment...

Block v2, Height in Coinbase
https://en.bitcoin.it/wiki/BIP_0034

  BIP: 34
  Title: Block v2, Height in Coinbase
  Author: Gavin Andresen <gavinandresen at gmail.com>
  Status: Draft
  Type: Standards Track
  Created: 2012-07-06

Abstract

Bitcoin blocks and transactions are versioned binary structures. Both
currently use version 1. This BIP introduces an upgrade path for
versioned transactions and blocks. A unique nonce is added to newly
produced coinbase transactions, and blocks are updated to version 2.


Motivation

1.    Clarify and exercise the mechanism whereby the bitcoin network
collectively consents to upgrade transaction or block binary
structures, rules and behaviors.

2.    Enforce block and transaction uniqueness, and assist unconnected
block validation.


Specification

1.    Treat transactions with a version greater than 1 as non-standard
(official Satoshi client will not mine or relay them).

2.    Add height as the first item in the coinbase transaction's
scriptSig, and increase block version to 2. The format of the height
is "serialized CScript" -- first byte is number of bytes in the number
(will be 0x03 on main net for the next 300 or so years), following
bytes are little-endian representation of the number.

3.    75% rule: If 750 of the last 1,000 blocks are version 2 or
greater, reject invalid version 2 blocks. (testnet3: 51 of last 100)

4.    95% rule ("Point of no return"): If 950 of the last 1,000 blocks
are version 2 or greater, reject all version 1 blocks. (testnet3: 75
of last 100)


Backward compatibility

All older clients are compatible with this change. Users and merchants
should not be impacted. Miners are strongly recommended to upgrade to
version 2 blocks. Once 95% of the miners have upgraded to version 2,
the remainder will be orphaned if they fail to upgrade.


Implementation

https://github.com/bitcoin/bitcoin/pull/1525 and
https://github.com/bitcoin/bitcoin/pull/1526

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From jgarzik at exmulti.com  Fri Jul  6 16:49:12 2012
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Fri, 6 Jul 2012 12:49:12 -0400
Subject: [Bitcoin-development] BIP 34: Block v2, Height in Coinbase
In-Reply-To: <CAMGNxUsZQMN+M4cR8nMhNmJAAnT2ZSPjrMHV0BetdiMmj453sA@mail.gmail.com>
References: <CA+8xBpefOgtuECJqoAtbFfPnmkFEHTL=6Uqf=kb7NB=fnV863Q@mail.gmail.com>
	<CAMGNxUsZQMN+M4cR8nMhNmJAAnT2ZSPjrMHV0BetdiMmj453sA@mail.gmail.com>
Message-ID: <CA+8xBpdbgkzwOvyUsJYEXNMTBwuvAbFsKx2xF1s0BMPiL9n1Qw@mail.gmail.com>

On Fri, Jul 6, 2012 at 12:45 PM, Peter Vessenes <peter at coinlab.com> wrote:
> The proposal is simple, and it's a small change for miners, I imagine.
>
> My question is: why?
>
> I worry about stuffing too many requirements on the coinbase. I suppose
> the coinbase is easily extendible if we run out of bytes, but I think I'd
> like to see some more discussion / good / bad type cases for making this
> change. What do we get over just the prev_hash by doing this?

With the existing setup (sans height in coinbase), you might not have
unique transactions, with all that entails.

> Anyway, some background would be great; if I missed it, I'm happy to go
> read up, but I didn't see any links on the wiki.

Gavin wrote some notes on upgrades and BIP16 lessons-learned at
https://gist.github.com/2355445

--
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From pieter.wuille at gmail.com  Fri Jul  6 16:52:04 2012
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Fri, 6 Jul 2012 18:52:04 +0200
Subject: [Bitcoin-development] Pruning in the reference client: ultraprune
	mode
Message-ID: <20120706165204.GA27215@vps7135.xlshosting.net>

Hello all,

I've implemented a new block/transaction validation system for the 
reference client, called "ultraprune".

Traditionally, pruning for bitcoin is considered to be the ability to 
delete full transactions from storage once all their outputs are spent, 
and they are buried deeply enough in the chain. That is not what this 
is about.

Given that almost all operations performed on the blockchain do not 
require full previous transactions, but only their unspent outputs, it 
seemed wasteful to use the fully indexed blockchain for everything. 
Instead, we keep a database with only the unspent transaction outputs. 
After some effort to write custom compact serializations for these, I 
could reduce the storage required for such a dataset to less than 70 
MB. This is kept in a BDB database file (coins.dat), and with indexing 
and overhead, and takes around 130 MB.

Now, this is not enough. You cannot have a full node wit just these 
outputs. In particular, it cannot undo block connections, cannot rescan 
for wallet transactions, and cannot serve the chain to other nodes. 
These are, however, quite infrequent operations. To compensate, we keep 
non-indexed but entire blocks (just each block in a separate file, for 
now), plus "undo" information for connected blocks around in addition 
to coins.dat. We also need a block index with metadata about all stored 
blocks, which takes around 40 MB for now (though that could easily be 
reduced too). Note that this means we lose the ability to find an 
actual transaction in the chain from a txid, but this is not necessary 
for normal operation. Such an index could be re-added later, if 
necessary.

Once you have this, the step to pruning is easily made: just delete 
block files and undo information for old blocks. This isn't implemented 
for now, but there shouldn't be a problem. It simply means you cannot 
rescan/reorg/server those old blocks, but once those are deep enough 
(say a few thousand blocks), we can tolerate that.

So, in summary, it allows one to run a full node (now) with:
* 130 MB coins.dat
* 40 MB chain.dat
* the size of the retained blocks
  * + +-12% of that for undo information.

Oh, it's also faster. I benchmarked a full import of the blockchain 
(187800 blocks) on my laptop (2.2GHz i7, 8 GiB RAM, 640 GB spinning 
harddisk) in 22 minutes. That was from a local disk, and not from 
network (which has extra overhead, and is limited by bandwidth 
constraints).

If people want to experiment with it, see my "ultraprune" branch on 
github: https://github.com/sipa/bitcoin/tree/ultraprune

Note that this is experimental, and has some disadvantages:

* you cannot find a (full) transaction from just its txid. 
* if you have transactions that depend on unconfirmed transactions, 
  those will not get rebroadcasted
* only block download and reorganization are somewhat tested; use at 
  your own risk
* less consistency checks are possible on the database, and even fewer 
  are implemented

Also note that this is not directly related to the recent pruning 
proposals that use an alt chain with an index of unspent coins (and 
addresses), merged mined with the main chain. This could be a step 
towards such a system, however.

-- 
Pieter



From peter at coinlab.com  Fri Jul  6 17:02:47 2012
From: peter at coinlab.com (Peter Vessenes)
Date: Fri, 6 Jul 2012 10:02:47 -0700
Subject: [Bitcoin-development] BIP 34: Block v2, Height in Coinbase
In-Reply-To: <CA+8xBpdbgkzwOvyUsJYEXNMTBwuvAbFsKx2xF1s0BMPiL9n1Qw@mail.gmail.com>
References: <CA+8xBpefOgtuECJqoAtbFfPnmkFEHTL=6Uqf=kb7NB=fnV863Q@mail.gmail.com>
	<CAMGNxUsZQMN+M4cR8nMhNmJAAnT2ZSPjrMHV0BetdiMmj453sA@mail.gmail.com>
	<CA+8xBpdbgkzwOvyUsJYEXNMTBwuvAbFsKx2xF1s0BMPiL9n1Qw@mail.gmail.com>
Message-ID: <CAMGNxUvN5fCuXsSp7a8UCgQoqMHKZPFsHkemJr7_5GSWZ0X-fA@mail.gmail.com>

On Fri, Jul 6, 2012 at 9:49 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:

> On Fri, Jul 6, 2012 at 12:45 PM, Peter Vessenes <peter at coinlab.com> wrote:
> > The proposal is simple, and it's a small change for miners, I imagine.
> >
> > My question is: why?
> >
> > I worry about stuffing too many requirements on the coinbase. I suppose
> > the coinbase is easily extendible if we run out of bytes, but I think I'd
> > like to see some more discussion / good / bad type cases for making this
> > change. What do we get over just the prev_hash by doing this?
>
> With the existing setup (sans height in coinbase), you might not have
> unique transactions, with all that entails.
>
> Yes, I've experienced that myself, actually.


> > Anyway, some background would be great; if I missed it, I'm happy to go
> > read up, but I didn't see any links on the wiki.
>
> Gavin wrote some notes on upgrades and BIP16 lessons-learned at
> https://gist.github.com/2355445
>
> This is a super coherent and excellent writeup. I may come back with more
thoughts, I want to let it percolate. Thanks!

>  --
> Jeff Garzik
> exMULTI, Inc.
> jgarzik at exmulti.com
>



-- 
------------------------------

[image: CoinLab Logo]PETER VESSENES
CEO

*peter at coinlab.com * /  206.486.6856  / SKYPE: vessenes
811 FIRST AVENUE  /  SUITE 480  /  SEATTLE, WA 98104
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120706/a1b1e1dc/attachment.html>

From peter at coinlab.com  Fri Jul  6 16:45:01 2012
From: peter at coinlab.com (Peter Vessenes)
Date: Fri, 6 Jul 2012 09:45:01 -0700
Subject: [Bitcoin-development] BIP 34: Block v2, Height in Coinbase
In-Reply-To: <CA+8xBpefOgtuECJqoAtbFfPnmkFEHTL=6Uqf=kb7NB=fnV863Q@mail.gmail.com>
References: <CA+8xBpefOgtuECJqoAtbFfPnmkFEHTL=6Uqf=kb7NB=fnV863Q@mail.gmail.com>
Message-ID: <CAMGNxUsZQMN+M4cR8nMhNmJAAnT2ZSPjrMHV0BetdiMmj453sA@mail.gmail.com>

So,

The proposal is simple, and it's a small change for miners, I imagine.

My question is: why?

I worry about stuffing too many requirements on the coinbase. I suppose the
coinbase is easily extendible if we run out of bytes, but I think I'd like
to see some more discussion / good / bad type cases for making this change.
What do we get over just the prev_hash by doing this?

If this is just a voting mechanism for moving to v2 blocks, that's cool,
but it would be nice to codify voting in the coinbase a bit? Maybe? We've
now once voted with /p2sh/ and this is a different mechanism now, if I
understand it properly.

Anyway, some background would be great; if I missed it, I'm happy to go
read up, but I didn't see any links on the wiki.

Peter

On Fri, Jul 6, 2012 at 8:10 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:

> Please review and comment...
>
> Block v2, Height in Coinbase
> https://en.bitcoin.it/wiki/BIP_0034
>
>   BIP: 34
>   Title: Block v2, Height in Coinbase
>   Author: Gavin Andresen <gavinandresen at gmail.com>
>   Status: Draft
>   Type: Standards Track
>   Created: 2012-07-06
>
> Abstract
>
> Bitcoin blocks and transactions are versioned binary structures. Both
> currently use version 1. This BIP introduces an upgrade path for
> versioned transactions and blocks. A unique nonce is added to newly
> produced coinbase transactions, and blocks are updated to version 2.
>
>
> Motivation
>
> 1.    Clarify and exercise the mechanism whereby the bitcoin network
> collectively consents to upgrade transaction or block binary
> structures, rules and behaviors.
>
> 2.    Enforce block and transaction uniqueness, and assist unconnected
> block validation.
>
>
> Specification
>
> 1.    Treat transactions with a version greater than 1 as non-standard
> (official Satoshi client will not mine or relay them).
>
> 2.    Add height as the first item in the coinbase transaction's
> scriptSig, and increase block version to 2. The format of the height
> is "serialized CScript" -- first byte is number of bytes in the number
> (will be 0x03 on main net for the next 300 or so years), following
> bytes are little-endian representation of the number.
>
> 3.    75% rule: If 750 of the last 1,000 blocks are version 2 or
> greater, reject invalid version 2 blocks. (testnet3: 51 of last 100)
>
> 4.    95% rule ("Point of no return"): If 950 of the last 1,000 blocks
> are version 2 or greater, reject all version 1 blocks. (testnet3: 75
> of last 100)
>
>
> Backward compatibility
>
> All older clients are compatible with this change. Users and merchants
> should not be impacted. Miners are strongly recommended to upgrade to
> version 2 blocks. Once 95% of the miners have upgraded to version 2,
> the remainder will be orphaned if they fail to upgrade.
>
>
> Implementation
>
> https://github.com/bitcoin/bitcoin/pull/1525 and
> https://github.com/bitcoin/bitcoin/pull/1526
>
> --
> Jeff Garzik
> exMULTI, Inc.
> jgarzik at exmulti.com
>
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and
> threat landscape has changed and how IT managers can respond. Discussions
> will include endpoint security, mobile security and the latest in malware
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



-- 
------------------------------

[image: CoinLab Logo]PETER VESSENES
CEO

*peter at coinlab.com * /  206.486.6856  / SKYPE: vessenes
811 FIRST AVENUE  /  SUITE 480  /  SEATTLE, WA 98104
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120706/cc73c259/attachment.html>

From gmaxwell at gmail.com  Fri Jul  6 17:19:59 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Fri, 6 Jul 2012 13:19:59 -0400
Subject: [Bitcoin-development] Pruning in the reference client:
	ultraprune mode
In-Reply-To: <20120706165204.GA27215@vps7135.xlshosting.net>
References: <20120706165204.GA27215@vps7135.xlshosting.net>
Message-ID: <CAAS2fgTME9sNC6O0UnTGvNSN3ruC8P6YNVKZY-TZTVWoQi0yzA@mail.gmail.com>

Pieter's performance numbers are a bit conservative if anything?
profiles on ultraprune[1] show that the reference client's wasting of
a lot of time in redundant serialization and hashing operations is
the major time sink. Once thats cleared up it should be quite a
bit faster

[1] https://people.xiph.org/~greg/ultraprune_profile.png

On Fri, Jul 6, 2012 at 12:52 PM, Pieter Wuille <pieter.wuille at gmail.com> wrote:
> Also note that this is not directly related to the recent pruning
> proposals that use an alt chain with an index of unspent coins (and
> addresses), merged mined with the main chain. This could be a step
> towards such a system, however.

In particular,  if the BDB indexing in ultraprune is replaced with
a hash committed tree structure who's root is committed in the
blockchain you then have a txout commitment scheme.
Ultraprune is most of the messy structural work for that. The
rest is mostly storage differences.



From mark at monetize.io  Fri Jul  6 16:56:16 2012
From: mark at monetize.io (Mark Friedenbach)
Date: Fri, 6 Jul 2012 09:56:16 -0700
Subject: [Bitcoin-development] BIP 34: Block v2, Height in Coinbase
In-Reply-To: <CA+8xBpdbgkzwOvyUsJYEXNMTBwuvAbFsKx2xF1s0BMPiL9n1Qw@mail.gmail.com>
References: <CA+8xBpefOgtuECJqoAtbFfPnmkFEHTL=6Uqf=kb7NB=fnV863Q@mail.gmail.com>
	<CAMGNxUsZQMN+M4cR8nMhNmJAAnT2ZSPjrMHV0BetdiMmj453sA@mail.gmail.com>
	<CA+8xBpdbgkzwOvyUsJYEXNMTBwuvAbFsKx2xF1s0BMPiL9n1Qw@mail.gmail.com>
Message-ID: <CACh7GpFb8Xxn9KmR34UNw6N=P96TJSgqec+eLdr5KneZAOj9Tw@mail.gmail.com>

On Fri, Jul 6, 2012 at 9:49 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:

> On Fri, Jul 6, 2012 at 12:45 PM, Peter Vessenes <peter at coinlab.com> wrote:
> > The proposal is simple, and it's a small change for miners, I imagine.
> >
> > My question is: why?
> >
> > I worry about stuffing too many requirements on the coinbase. I suppose
> > the coinbase is easily extendible if we run out of bytes, but I think I'd
> > like to see some more discussion / good / bad type cases for making this
> > change. What do we get over just the prev_hash by doing this?
>
> With the existing setup (sans height in coinbase), you might not have
> unique transactions, with all that entails.
>

But those issues are solvable through other, non-backwards incompatible
means. For example, mandate that a <transaction hash, output index> refers
to the first such pair that is not already spent. No?

Mark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120706/1f865394/attachment.html>

From gavinandresen at gmail.com  Fri Jul  6 20:02:16 2012
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Fri, 6 Jul 2012 16:02:16 -0400
Subject: [Bitcoin-development] BIP 34: Block v2, Height in Coinbase
In-Reply-To: <CACh7GpFb8Xxn9KmR34UNw6N=P96TJSgqec+eLdr5KneZAOj9Tw@mail.gmail.com>
References: <CA+8xBpefOgtuECJqoAtbFfPnmkFEHTL=6Uqf=kb7NB=fnV863Q@mail.gmail.com>
	<CAMGNxUsZQMN+M4cR8nMhNmJAAnT2ZSPjrMHV0BetdiMmj453sA@mail.gmail.com>
	<CA+8xBpdbgkzwOvyUsJYEXNMTBwuvAbFsKx2xF1s0BMPiL9n1Qw@mail.gmail.com>
	<CACh7GpFb8Xxn9KmR34UNw6N=P96TJSgqec+eLdr5KneZAOj9Tw@mail.gmail.com>
Message-ID: <CABsx9T39Hj5XSwVxkAw+UxuEyKMnjpAtYtfoLD7KpMuUCiM=Jg@mail.gmail.com>

> But those issues are solvable through other, non-backwards incompatible
> means. For example, mandate that a <transaction hash, output index> refers
> to the first such pair that is not already spent. No?

Yes, that is essentially what BIP 30 did.

We want to do this also, partly for "belt and suspenders" security but
mostly for two reasons:

1. To test using block/transaction version numbers to smoothly roll
out changes. The next change we need to make might be prompted by some
crisis; better to learn any lessons now, when we have the luxury of
time to fix problems that might crop up.

2. We think we'll all appreciate the change in a year or three, when
the whole network has upgraded and we can start writing code that
assumes all new blocks past a certain checkpoint contain their height;
that should make it easier to do things like figure out whether or not
an orphan chain can possibly be part of the main chain.

-- 
--
Gavin Andresen



From zgenjix at yahoo.com  Fri Jul  6 20:02:40 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Fri, 6 Jul 2012 13:02:40 -0700 (PDT)
Subject: [Bitcoin-development] BIP 34: Block v2, Height in Coinbase
In-Reply-To: <CACh7GpFb8Xxn9KmR34UNw6N=P96TJSgqec+eLdr5KneZAOj9Tw@mail.gmail.com>
References: <CA+8xBpefOgtuECJqoAtbFfPnmkFEHTL=6Uqf=kb7NB=fnV863Q@mail.gmail.com>
	<CAMGNxUsZQMN+M4cR8nMhNmJAAnT2ZSPjrMHV0BetdiMmj453sA@mail.gmail.com>
	<CA+8xBpdbgkzwOvyUsJYEXNMTBwuvAbFsKx2xF1s0BMPiL9n1Qw@mail.gmail.com>
	<CACh7GpFb8Xxn9KmR34UNw6N=P96TJSgqec+eLdr5KneZAOj9Tw@mail.gmail.com>
Message-ID: <1341604960.84829.YahooMailNeo@web121006.mail.ne1.yahoo.com>

It would be nice if Bitcoin was engineered this way from the start. The amount of workarounds, special cases and code bloat to deal with the fact that txs are non-unique was a massive headache for me.




________________________________
From: Mark Friedenbach <mark at monetize.io>
To: Jeff Garzik <jgarzik at exmulti.com> 
Cc: Bitcoin Development <bitcoin-development at lists.sourceforge.net> 
Sent: Friday, July 6, 2012 6:56 PM
Subject: Re: [Bitcoin-development] BIP 34: Block v2, Height in Coinbase


On Fri, Jul 6, 2012 at 9:49 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:

On Fri, Jul 6, 2012 at 12:45 PM, Peter Vessenes <peter at coinlab.com> wrote:
>> The proposal is simple, and it's a small change for miners, I imagine.
>>
>> My question is: why?
>>
>> I worry about stuffing too many requirements on the coinbase. I suppose
>> the coinbase is easily extendible if we run out of bytes, but I think I'd
>> like to see some more discussion / good / bad type cases for making this
>> change. What do we get over just the prev_hash by doing this?
>
>With the existing setup (sans height in coinbase), you might not have
>unique transactions, with all that entails.
>

But those issues are solvable through other, non-backwards incompatible means. For example, mandate that a <transaction hash, output index> refers to the first such pair that is not already spent. No?

Mark
------------------------------------------------------------------------------
Live Security Virtual Conference
Exclusive live event will cover all the ways today's security and 
threat landscape has changed and how IT managers can respond. Discussions 
will include endpoint security, mobile security and the latest in malware 
threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From gmaxwell at gmail.com  Fri Jul  6 20:10:42 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Fri, 6 Jul 2012 16:10:42 -0400
Subject: [Bitcoin-development] BIP 34: Block v2, Height in Coinbase
In-Reply-To: <CABsx9T39Hj5XSwVxkAw+UxuEyKMnjpAtYtfoLD7KpMuUCiM=Jg@mail.gmail.com>
References: <CA+8xBpefOgtuECJqoAtbFfPnmkFEHTL=6Uqf=kb7NB=fnV863Q@mail.gmail.com>
	<CAMGNxUsZQMN+M4cR8nMhNmJAAnT2ZSPjrMHV0BetdiMmj453sA@mail.gmail.com>
	<CA+8xBpdbgkzwOvyUsJYEXNMTBwuvAbFsKx2xF1s0BMPiL9n1Qw@mail.gmail.com>
	<CACh7GpFb8Xxn9KmR34UNw6N=P96TJSgqec+eLdr5KneZAOj9Tw@mail.gmail.com>
	<CABsx9T39Hj5XSwVxkAw+UxuEyKMnjpAtYtfoLD7KpMuUCiM=Jg@mail.gmail.com>
Message-ID: <CAAS2fgTCjmTD8qZoUnyNLhqoga8-E5osEx3qwqSfoWQewBP3Gg@mail.gmail.com>

On Fri, Jul 6, 2012 at 4:02 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:
>> But those issues are solvable through other, non-backwards incompatible
>> means. For example, mandate that a <transaction hash, output index> refers
>> to the first such pair that is not already spent. No?
>
> Yes, that is essentially what BIP 30 did.

It's important to note that bip 30 doesn't prevent duplication, it
just prevents the identified really evil outcome of the duplication.

There was discussion on doing the height _before_ that, but the
realization that the rewrites were a real vulnerability made it urgent
and rolling out the height will require time while the bip30 change
could be deployed more quickly.



From zgenjix at yahoo.com  Mon Jul  9 09:21:21 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Mon, 9 Jul 2012 02:21:21 -0700 (PDT)
Subject: [Bitcoin-development] Bitcoin Wallet for Android
Message-ID: <1341825681.35206.YahooMailNeo@web121001.mail.ne1.yahoo.com>

Hey,

I just saw this added to the clients page. One of the conditions we set for that page was that all the clients must have the entire sourcecode available for review, and users should be able to run it from the sourcecode. Is the sourcecode for this client available for review? I couldn't find it.

Otherwise, we should make a separate section for non-opensource clients.




From mats at henricson.se  Mon Jul  9 10:19:49 2012
From: mats at henricson.se (mats at henricson.se)
Date: Mon, 09 Jul 2012 12:19:49 +0200
Subject: [Bitcoin-development] Bitcoin Wallet for Android
In-Reply-To: <1341825681.35206.YahooMailNeo@web121001.mail.ne1.yahoo.com>
References: <1341825681.35206.YahooMailNeo@web121001.mail.ne1.yahoo.com>
Message-ID: <20120709121949.7hxwomyxskc004w8@webmail.henricson.se>

Sources are available here:

http://code.google.com/p/bitcoin-wallet/

Mats

Quoting Amir Taaki <zgenjix at yahoo.com>:

> Hey,
>
> I just saw this added to the clients page. One of the conditions we   
> set for that page was that all the clients must have the entire   
> sourcecode available for review, and users should be able to run it   
> from the sourcecode. Is the sourcecode for this client available for  
>  review? I couldn't find it.
>
> Otherwise, we should make a separate section for non-opensource clients.
>
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and
> threat landscape has changed and how IT managers can respond. Discussions
> will include endpoint security, mobile security and the latest in malware
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>





From zgenjix at yahoo.com  Mon Jul  9 10:44:30 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Mon, 9 Jul 2012 03:44:30 -0700 (PDT)
Subject: [Bitcoin-development] Bitcoin Wallet for Android
In-Reply-To: <20120709121949.7hxwomyxskc004w8@webmail.henricson.se>
References: <1341825681.35206.YahooMailNeo@web121001.mail.ne1.yahoo.com>
	<20120709121949.7hxwomyxskc004w8@webmail.henricson.se>
Message-ID: <1341830670.81383.YahooMailNeo@web121003.mail.ne1.yahoo.com>

OK thanks. I just went and made those sections then saw your posts.

Anyway we have a section for proprietary clients now. Please tell me if anything looks disagreeable, http://bitcoin.org/clients.html

One thing I'm going to do is randomise the positioning order within sections upon refresh.



----- Original Message -----
From: "mats at henricson.se" <mats at henricson.se>
To: bitcoin-development at lists.sourceforge.net
Cc: 
Sent: Monday, July 9, 2012 11:19 AM
Subject: Re: [Bitcoin-development] Bitcoin Wallet for Android

Sources are available here:

http://code.google.com/p/bitcoin-wallet/

Mats

Quoting Amir Taaki <zgenjix at yahoo.com>:

> Hey,
>
> I just saw this added to the clients page. One of the conditions we? 
> set for that page was that all the clients must have the entire? 
> sourcecode available for review, and users should be able to run it? 
> from the sourcecode. Is the sourcecode for this client available for? 
>? review? I couldn't find it.
>
> Otherwise, we should make a separate section for non-opensource clients.
>
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and
> threat landscape has changed and how IT managers can respond. Discussions
> will include endpoint security, mobile security and the latest in malware
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



------------------------------------------------------------------------------
Live Security Virtual Conference
Exclusive live event will cover all the ways today's security and 
threat landscape has changed and how IT managers can respond. Discussions 
will include endpoint security, mobile security and the latest in malware 
threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From andreas at schildbach.de  Mon Jul  9 10:55:51 2012
From: andreas at schildbach.de (Andreas Schildbach)
Date: Mon, 09 Jul 2012 12:55:51 +0200
Subject: [Bitcoin-development] Bitcoin Wallet for Android
In-Reply-To: <1341830670.81383.YahooMailNeo@web121003.mail.ne1.yahoo.com>
References: <1341825681.35206.YahooMailNeo@web121001.mail.ne1.yahoo.com>
	<20120709121949.7hxwomyxskc004w8@webmail.henricson.se>
	<1341830670.81383.YahooMailNeo@web121003.mail.ne1.yahoo.com>
Message-ID: <jtedbo$271$1@dough.gmane.org>

I'd suggest adding two links for each client.

One for getting the binary, and one for getting the source. (Obviously,
source being optional if you allow non-opensource clients.)


On 07/09/2012 12:44 PM, Amir Taaki wrote:
> OK thanks. I just went and made those sections then saw your posts.
> 
> Anyway we have a section for proprietary clients now. Please tell me if anything looks disagreeable, http://bitcoin.org/clients.html
> 
> One thing I'm going to do is randomise the positioning order within sections upon refresh.
> 
> 
> 
> ----- Original Message -----
> From: "mats at henricson.se" <mats at henricson.se>
> To: bitcoin-development at lists.sourceforge.net
> Cc: 
> Sent: Monday, July 9, 2012 11:19 AM
> Subject: Re: [Bitcoin-development] Bitcoin Wallet for Android
> 
> Sources are available here:
> 
> http://code.google.com/p/bitcoin-wallet/
> 
> Mats
> 
> Quoting Amir Taaki <zgenjix at yahoo.com>:
> 
>> Hey,
>>
>> I just saw this added to the clients page. One of the conditions we  
>> set for that page was that all the clients must have the entire  
>> sourcecode available for review, and users should be able to run it  
>> from the sourcecode. Is the sourcecode for this client available for  
>>   review? I couldn't find it.
>>
>> Otherwise, we should make a separate section for non-opensource clients.
>>
>>
>> ------------------------------------------------------------------------------
>> Live Security Virtual Conference
>> Exclusive live event will cover all the ways today's security and
>> threat landscape has changed and how IT managers can respond. Discussions
>> will include endpoint security, mobile security and the latest in malware
>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
> 
> 
> 
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and 
> threat landscape has changed and how IT managers can respond. Discussions 
> will include endpoint security, mobile security and the latest in malware 
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> 
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and 
> threat landscape has changed and how IT managers can respond. Discussions 
> will include endpoint security, mobile security and the latest in malware 
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> 






From timon.elviejo at gmail.com  Mon Jul  9 11:34:10 2012
From: timon.elviejo at gmail.com (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Mon, 9 Jul 2012 13:34:10 +0200
Subject: [Bitcoin-development] Bitcoin Wallet for Android
In-Reply-To: <jtedbo$271$1@dough.gmane.org>
References: <1341825681.35206.YahooMailNeo@web121001.mail.ne1.yahoo.com>
	<20120709121949.7hxwomyxskc004w8@webmail.henricson.se>
	<1341830670.81383.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<jtedbo$271$1@dough.gmane.org>
Message-ID: <CAGQP0AGG9Wrx0CDQQVwpCovovDV072Cr9rrLhUHuBgb4kNr+XA@mail.gmail.com>

Didn't even know that they were proprietary software bitcoin clients.
Should people trust them? Should the web promote them?
After all, you can't know what they do. What if one of them contains a
back door or something?
I would say it's better not risk to apologize later.



On 7/9/12, Andreas Schildbach <andreas at schildbach.de> wrote:
> I'd suggest adding two links for each client.
>
> One for getting the binary, and one for getting the source. (Obviously,
> source being optional if you allow non-opensource clients.)
>
>
> On 07/09/2012 12:44 PM, Amir Taaki wrote:
>> OK thanks. I just went and made those sections then saw your posts.
>>
>> Anyway we have a section for proprietary clients now. Please tell me if
>> anything looks disagreeable, http://bitcoin.org/clients.html
>>
>> One thing I'm going to do is randomise the positioning order within
>> sections upon refresh.
>>
>>
>>
>> ----- Original Message -----
>> From: "mats at henricson.se" <mats at henricson.se>
>> To: bitcoin-development at lists.sourceforge.net
>> Cc:
>> Sent: Monday, July 9, 2012 11:19 AM
>> Subject: Re: [Bitcoin-development] Bitcoin Wallet for Android
>>
>> Sources are available here:
>>
>> http://code.google.com/p/bitcoin-wallet/
>>
>> Mats
>>
>> Quoting Amir Taaki <zgenjix at yahoo.com>:
>>
>>> Hey,
>>>
>>> I just saw this added to the clients page. One of the conditions we
>>> set for that page was that all the clients must have the entire
>>> sourcecode available for review, and users should be able to run it
>>> from the sourcecode. Is the sourcecode for this client available for
>>>   review? I couldn't find it.
>>>
>>> Otherwise, we should make a separate section for non-opensource clients.
>>>
>>>
>>> ------------------------------------------------------------------------------
>>> Live Security Virtual Conference
>>> Exclusive live event will cover all the ways today's security and
>>> threat landscape has changed and how IT managers can respond.
>>> Discussions
>>> will include endpoint security, mobile security and the latest in
>>> malware
>>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>
>>
>>
>> ------------------------------------------------------------------------------
>> Live Security Virtual Conference
>> Exclusive live event will cover all the ways today's security and
>> threat landscape has changed and how IT managers can respond. Discussions
>>
>> will include endpoint security, mobile security and the latest in malware
>>
>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>> ------------------------------------------------------------------------------
>> Live Security Virtual Conference
>> Exclusive live event will cover all the ways today's security and
>> threat landscape has changed and how IT managers can respond. Discussions
>>
>> will include endpoint security, mobile security and the latest in malware
>>
>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
>>
>
>
>
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and
> threat landscape has changed and how IT managers can respond. Discussions
> will include endpoint security, mobile security and the latest in malware
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>


-- 
Jorge Tim?n



From slush at centrum.cz  Mon Jul  9 13:11:43 2012
From: slush at centrum.cz (slush)
Date: Mon, 9 Jul 2012 15:11:43 +0200
Subject: [Bitcoin-development] Bitcoin Wallet for Android
In-Reply-To: <CAGQP0AGG9Wrx0CDQQVwpCovovDV072Cr9rrLhUHuBgb4kNr+XA@mail.gmail.com>
References: <1341825681.35206.YahooMailNeo@web121001.mail.ne1.yahoo.com>
	<20120709121949.7hxwomyxskc004w8@webmail.henricson.se>
	<1341830670.81383.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<jtedbo$271$1@dough.gmane.org>
	<CAGQP0AGG9Wrx0CDQQVwpCovovDV072Cr9rrLhUHuBgb4kNr+XA@mail.gmail.com>
Message-ID: <CAJna-Hi=827xJKkSRkyO_C+PDQm9kmR34+5xVazm-Z2-TzO_0Q@mail.gmail.com>

I agree. Just imagine those two-inches newspaper titles - "Bitcoin
hacked! Backdoor in official bitcoin client!". We have already some
experience with shortcuts which journalists do...

slush

On Mon, Jul 9, 2012 at 1:34 PM, Jorge Tim?n <timon.elviejo at gmail.com> wrote:
> Should the web promote them?
> After all, you can't know what they do. What if one of them contains a
> back door or something?



From gmaxwell at gmail.com  Mon Jul  9 13:46:02 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 9 Jul 2012 09:46:02 -0400
Subject: [Bitcoin-development] Bitcoin Wallet for Android
In-Reply-To: <CAGQP0AGG9Wrx0CDQQVwpCovovDV072Cr9rrLhUHuBgb4kNr+XA@mail.gmail.com>
References: <1341825681.35206.YahooMailNeo@web121001.mail.ne1.yahoo.com>
	<20120709121949.7hxwomyxskc004w8@webmail.henricson.se>
	<1341830670.81383.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<jtedbo$271$1@dough.gmane.org>
	<CAGQP0AGG9Wrx0CDQQVwpCovovDV072Cr9rrLhUHuBgb4kNr+XA@mail.gmail.com>
Message-ID: <CAAS2fgTmBJGJuKa=Tcy+SdoTs5xKFtLBAA0P-_zDY6tNSj4CHg@mail.gmail.com>

On Mon, Jul 9, 2012 at 7:34 AM, Jorge Tim?n <timon.elviejo at gmail.com> wrote:
> Didn't even know that they were proprietary software bitcoin clients.
> Should people trust them? Should the web promote them?
> After all, you can't know what they do. What if one of them contains a
> back door or something?
> I would say it's better not risk to apologize later.

I agree too.  Not that being open is _any_ guarantee, ideally we'd
want standards
of review and testing, but thats a bit much to ask for right now.



From gmaxwell at gmail.com  Mon Jul  9 14:00:07 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 9 Jul 2012 10:00:07 -0400
Subject: [Bitcoin-development] Bitcoin Wallet for Android
In-Reply-To: <1341825681.35206.YahooMailNeo@web121001.mail.ne1.yahoo.com>
References: <1341825681.35206.YahooMailNeo@web121001.mail.ne1.yahoo.com>
Message-ID: <CAAS2fgRZJW02_76G-vjV8V7kDy5WoxN1Ftd4baeBjyYVBcgJiA@mail.gmail.com>

On Mon, Jul 9, 2012 at 5:21 AM, Amir Taaki <zgenjix at yahoo.com> wrote:
> Hey,
>
> I just saw this added to the clients page. One of the conditions we set for that page was that all the clients must have the entire sourcecode available for review, and users should be able to run it from the sourcecode. Is the sourcecode for this client available for review? I couldn't find it.

I've reverted these additions to the page, nothing personal but?

At the moment I'm strongly opposed to including any non-reviewable
client options (including centrally operated web services) on the
page, and I think this need to be discussed along with establishing
requirements.



From gmaxwell at gmail.com  Mon Jul  9 14:12:11 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 9 Jul 2012 10:12:11 -0400
Subject: [Bitcoin-development] Bitcoin Wallet for Android
In-Reply-To: <CAAS2fgRZJW02_76G-vjV8V7kDy5WoxN1Ftd4baeBjyYVBcgJiA@mail.gmail.com>
References: <1341825681.35206.YahooMailNeo@web121001.mail.ne1.yahoo.com>
	<CAAS2fgRZJW02_76G-vjV8V7kDy5WoxN1Ftd4baeBjyYVBcgJiA@mail.gmail.com>
Message-ID: <CAAS2fgTtv6dEf7TKeK8ecm0ic+yfz-qXSWveKz-cxyGdQ4NwKw@mail.gmail.com>

On Mon, Jul 9, 2012 at 10:00 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> I've reverted these additions to the page, nothing personal but?

Er, to be clear, I left the android software in because the source is
available (And I'm told its had some review).

I removed the proprietary software section the plug for the
blockchain.info webservices, and the demotion of the armory client.

As far as criteria goes, I don't think we should list anything with a
security model weaker than SPV unless users can practically operate
their own servers. ?and even that I'm a little uneasy with, because
most people will use the defaults. Ideally even thin clients would
have a near SPV security model, just without the bandwidth. But since
the alternative for thin clients is centralized web services the lower
standard will probably have better net results for now.

Nor do I think we should list anything which can't currently be
subjected to independent review of the whole stack (e.g. including the
server components in thinclients, unless the server is untrusted). In
the future this should be raised to there existing actual evidence of
third party review.



From support at pi.uk.com  Mon Jul  9 14:12:03 2012
From: support at pi.uk.com (Ben Reeves)
Date: Mon, 9 Jul 2012 15:12:03 +0100
Subject: [Bitcoin-development] Bitcoin Wallet for Android
In-Reply-To: <CAAS2fgRZJW02_76G-vjV8V7kDy5WoxN1Ftd4baeBjyYVBcgJiA@mail.gmail.com>
References: <1341825681.35206.YahooMailNeo@web121001.mail.ne1.yahoo.com>
	<CAAS2fgRZJW02_76G-vjV8V7kDy5WoxN1Ftd4baeBjyYVBcgJiA@mail.gmail.com>
Message-ID: <27249DC8-8A1E-452C-9909-FC8B4060E5A3@pi.uk.com>

Any chance the blockchain.info iphone app could be included on the clients page? The source is available under an lGPL license: https://github.com/blockchain/My-Wallet-iPhone. More info:https://blockchain.info/wallet/iphone-app

Also the javascript web front end can be reviewed using a combination of https://github.com/blockchain/My-Wallet and https://github.com/blockchain/My-Wallet-Integrity-Checker but I could see why that might be more of an issue for the the official site.

Thank You,
Ben Reeves

On 9 Jul 2012, at 15:00, Gregory Maxwell wrote:

> On Mon, Jul 9, 2012 at 5:21 AM, Amir Taaki <zgenjix at yahoo.com> wrote:
>> Hey,
>> 
>> I just saw this added to the clients page. One of the conditions we set for that page was that all the clients must have the entire sourcecode available for review, and users should be able to run it from the sourcecode. Is the sourcecode for this client available for review? I couldn't find it.
> 
> I've reverted these additions to the page, nothing personal but?
> 
> At the moment I'm strongly opposed to including any non-reviewable
> client options (including centrally operated web services) on the
> page, and I think this need to be discussed along with establishing
> requirements.
> 
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and 
> threat landscape has changed and how IT managers can respond. Discussions 
> will include endpoint security, mobile security and the latest in malware 
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120709/5c0f170e/attachment.html>

From zgenjix at yahoo.com  Mon Jul  9 15:54:55 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Mon, 9 Jul 2012 08:54:55 -0700 (PDT)
Subject: [Bitcoin-development] Random order for clients page
Message-ID: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>

Took me a while, but finally got it working.

Entries on the clients page are randomly ordered when the page is generated.

https://github.com/bitcoin/bitcoin.org/commit/6850fc8c83494d6ec415ea9d36fb98366373cc03

We should regenerate the page every 2 days. This gives fair exposure to all the clients listed.




From gmaxwell at gmail.com  Mon Jul  9 16:04:10 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 9 Jul 2012 12:04:10 -0400
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
Message-ID: <CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>

On Mon, Jul 9, 2012 at 11:54 AM, Amir Taaki <zgenjix at yahoo.com> wrote:
> Took me a while, but finally got it working.
> Entries on the clients page are randomly ordered when the page is generated.
> https://github.com/bitcoin/bitcoin.org/commit/6850fc8c83494d6ec415ea9d36fb98366373cc03
> We should regenerate the page every 2 days. This gives fair exposure to all the clients listed.

If you had authored this as a pull request rather than making the
change unilaterally I would have recommended leaving it so the
reference client was always first. I also would have suggested that it
use JS randomization instead of jekyll in order to get more even
coverage, though I think thats a more minor point.

Some people were concerned when this page was created that it would
just be a source of useless disputes.  I think its becoming clear that
this is the case. I think the cost of dealing with this page is
starting to exceed the benefit it provides and we should probably
consider removing it.



From zgenjix at yahoo.com  Mon Jul  9 16:09:17 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Mon, 9 Jul 2012 09:09:17 -0700 (PDT)
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
Message-ID: <1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>

JS randomisation is bad. People shouldn't need JS to view a webpage.

Only you have a problem with this page. I don't see why Bitcoin-Qt needs to be first either when it dominates the front page. It is perfectly fine as it is.

You are not a developer of any alternative clients, and this is a webpage for Bitcoin clients. I have made a change to remove a source of disputes, and make the process more fair and equal. Your suggestion to remove the clients page is your bias towards thinking that there should be only one Bitcoin client that everyone uses (the one which you contribute towards).

If you want to suggest removing the clients page, then fine, lets also remove all reference to Bitcoin-Qt from the front-page and turn it into a http://bittorrent.org/ style website.

Fact is that the other clients are rapidly becoming stable and mature, and the ecosystem is diversifying. The argument that the other clients were not up to scratch held maybe a few months ago, but not now.



----- Original Message -----
From: Gregory Maxwell <gmaxwell at gmail.com>
To: Amir Taaki <zgenjix at yahoo.com>
Cc: "bitcoin-development at lists.sourceforge.net" <bitcoin-development at lists.sourceforge.net>
Sent: Monday, July 9, 2012 5:04 PM
Subject: Re: [Bitcoin-development] Random order for clients page

On Mon, Jul 9, 2012 at 11:54 AM, Amir Taaki <zgenjix at yahoo.com> wrote:
> Took me a while, but finally got it working.
> Entries on the clients page are randomly ordered when the page is generated.
> https://github.com/bitcoin/bitcoin.org/commit/6850fc8c83494d6ec415ea9d36fb98366373cc03
> We should regenerate the page every 2 days. This gives fair exposure to all the clients listed.

If you had authored this as a pull request rather than making the
change unilaterally I would have recommended leaving it so the
reference client was always first. I also would have suggested that it
use JS randomization instead of jekyll in order to get more even
coverage, though I think thats a more minor point.

Some people were concerned when this page was created that it would
just be a source of useless disputes.? I think its becoming clear that
this is the case. I think the cost of dealing with this page is
starting to exceed the benefit it provides and we should probably
consider removing it.




From moon at justmoon.de  Mon Jul  9 16:39:24 2012
From: moon at justmoon.de (Stefan Thomas)
Date: Mon, 09 Jul 2012 18:39:24 +0200
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
	<1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>
Message-ID: <4FFB093C.9090109@justmoon.de>

> You are not a developer of any alternative clients

I am and I'm going to have to agree with Greg. Information about clients
is bound to be transient and controversial.

My relatively naive suggestion would be to move it to the Wiki. If it
can handle the controversies involved with the Trade page, it should
easily be able to handle the controversies involved with a Clients page
like this one. A link to that page could be added under Bitcoin Wiki on
Bitcoin.org.

On the subject of randomization, I think that's a bad idea. Randomness
does not equal fairness and more importantly it does not serve the
users, which should be the overriding concern. As a user I don't want to
be recommended a random client but the most sensible choice. As
alternative client implementors we should not be overly concerned about
Bitcoin.org recommending the wrong client, truly good clients will
benefit from word-of-mouth and eventually rise to the top. If you want a
"fair" ordering, then I'd order by number of downloads for downloadable
clients and Alexa rank for any hosted / online services if it were
decided that such should be listed at all.

On 7/9/2012 6:09 PM, Amir Taaki wrote:
> JS randomisation is bad. People shouldn't need JS to view a webpage.
>
> Only you have a problem with this page. I don't see why Bitcoin-Qt needs to be first either when it dominates the front page. It is perfectly fine as it is.
>
> You are not a developer of any alternative clients, and this is a webpage for Bitcoin clients. I have made a change to remove a source of disputes, and make the process more fair and equal. Your suggestion to remove the clients page is your bias towards thinking that there should be only one Bitcoin client that everyone uses (the one which you contribute towards).
>
> If you want to suggest removing the clients page, then fine, lets also remove all reference to Bitcoin-Qt from the front-page and turn it into a http://bittorrent.org/ style website.
>
> Fact is that the other clients are rapidly becoming stable and mature, and the ecosystem is diversifying. The argument that the other clients were not up to scratch held maybe a few months ago, but not now.
>
>
>
> ----- Original Message -----
> From: Gregory Maxwell <gmaxwell at gmail.com>
> To: Amir Taaki <zgenjix at yahoo.com>
> Cc: "bitcoin-development at lists.sourceforge.net" <bitcoin-development at lists.sourceforge.net>
> Sent: Monday, July 9, 2012 5:04 PM
> Subject: Re: [Bitcoin-development] Random order for clients page
>
> On Mon, Jul 9, 2012 at 11:54 AM, Amir Taaki <zgenjix at yahoo.com> wrote:
>> Took me a while, but finally got it working.
>> Entries on the clients page are randomly ordered when the page is generated.
>> https://github.com/bitcoin/bitcoin.org/commit/6850fc8c83494d6ec415ea9d36fb98366373cc03
>> We should regenerate the page every 2 days. This gives fair exposure to all the clients listed.
> If you had authored this as a pull request rather than making the
> change unilaterally I would have recommended leaving it so the
> reference client was always first. I also would have suggested that it
> use JS randomization instead of jekyll in order to get more even
> coverage, though I think thats a more minor point.
>
> Some people were concerned when this page was created that it would
> just be a source of useless disputes.  I think its becoming clear that
> this is the case. I think the cost of dealing with this page is
> starting to exceed the benefit it provides and we should probably
> consider removing it.
>
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and 
> threat landscape has changed and how IT managers can respond. Discussions 
> will include endpoint security, mobile security and the latest in malware 
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>





From harald.schilly at gmail.com  Mon Jul  9 09:36:47 2012
From: harald.schilly at gmail.com (Harald Schilly)
Date: Mon, 9 Jul 2012 11:36:47 +0200
Subject: [Bitcoin-development] Bitcoin Wallet for Android
In-Reply-To: <1341825681.35206.YahooMailNeo@web121001.mail.ne1.yahoo.com>
References: <1341825681.35206.YahooMailNeo@web121001.mail.ne1.yahoo.com>
Message-ID: <CAGG4CB7aU9sXrAdnsSYkmX+PV1UkQT+WXcduFD9XWY_LPVCrcQ@mail.gmail.com>

On Mon, Jul 9, 2012 at 11:21 AM, Amir Taaki <zgenjix at yahoo.com> wrote:
> Is the sourcecode for this client available for review? I couldn't find it.

yes:

http://code.google.com/p/bitcoin-wallet/
and it is built upon
http://code.google.com/p/bitcoinj/

harald



From harald.schilly at gmail.com  Mon Jul  9 16:55:44 2012
From: harald.schilly at gmail.com (Harald Schilly)
Date: Mon, 9 Jul 2012 18:55:44 +0200
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <4FFB093C.9090109@justmoon.de>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
	<1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<4FFB093C.9090109@justmoon.de>
Message-ID: <CAGG4CB5DudxF052m+oeQUXppZGOYjknzMhYLDFS+m-HrxrxtGA@mail.gmail.com>

On Mon, Jul 9, 2012 at 6:39 PM, Stefan Thomas <moon at justmoon.de> wrote:
> As a user I don't want to
> be recommended a random client but the most sensible choice.
> ... wiki page ...

I think this is indeed a controversal topic. I just want to add the
remark, that it would make sense to have the wiki page *and* this more
"official" page. I would envision this official page as some kind of
"stamp of approval" which includes some sensible criteria, e.g. it
works for many users, the development hasn't stopped some time ago
(bitrot), code review, the author(s) is/are known to the community,
private keys aren't accessible by the webservice, etc.

The ordering should be by alphabet, in a vertical list with a short
unbiased description.

Harald



From luke at dashjr.org  Mon Jul  9 17:21:17 2012
From: luke at dashjr.org (Luke-Jr)
Date: Mon, 9 Jul 2012 17:21:17 +0000
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <CAGG4CB5DudxF052m+oeQUXppZGOYjknzMhYLDFS+m-HrxrxtGA@mail.gmail.com>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<4FFB093C.9090109@justmoon.de>
	<CAGG4CB5DudxF052m+oeQUXppZGOYjknzMhYLDFS+m-HrxrxtGA@mail.gmail.com>
Message-ID: <201207091721.19331.luke@dashjr.org>

FWIW, all this argumenting is why my original suggestion for a Clients list 
focussed on objective information in alphabetical order.



From gmaxwell at gmail.com  Mon Jul  9 17:46:01 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 9 Jul 2012 13:46:01 -0400
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
	<1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>
Message-ID: <CAAS2fgQRo4swDTQjPE0PmnpZ9uS+TDNQdOR6q4K70xsNJY9RfQ@mail.gmail.com>

On Mon, Jul 9, 2012 at 12:09 PM, Amir Taaki <zgenjix at yahoo.com> wrote:
> JS randomisation is bad. People shouldn't need JS to view a webpage.

JS randomization doesn't imply needing JS to view the page. It implies
needing JS to see it in random order.  You could also combine it with
the server-side randomization if you care about non-js being non
random, though I don't think it matters.

As others have pointed out I don't generally think the randomization
is good in principle, but if its done it should at least achieve its
goals.

> Only you have a problem with this page. I don't see why Bitcoin-Qt needs to be first either when it dominates the front page. It is perfectly fine as it is.

I'll let other people speak for themselves, but I did consult others
before reverting your last batch of changes.

More generally, we have pull requests in order to get some peer review
of changes.  Everyone should use them except for changes which are
urgent or trivially safe.  (Presumably everyone with access knows how
to tell if their changes are likely to be risky or controversial)

> You are not a developer of any alternative clients, and this is a webpage for Bitcoin clients. I have made a change to remove a source of disputes, and make the process more fair and equal. Your suggestion to remove the clients page is your bias towards thinking that there should be only one Bitcoin client that everyone uses (the one which you contribute towards).

I'm strongly supportive diversity in the Bitcoin network, and some alt
client developers can speak to the positive prodding I've given them
towards becoming more complete software. If I've said anything that
suggests otherwise I'd love to be pointed to it in order to clarify my
position.

Unfortunately none of the primary alternatives are yet complete, the
network would be non-function if it consisted entirely of multibit or
electrum nodes (and as you've noted armory uses a local reference
client as its 'server').  The distinction between multiple kinds of
clients in terms of security and network health are subtle and can be
difficult to explain even to technical users and so until something
changes there the reference client needs to be the option we lead
with. People should us it unless their use-case doesn't match. When it
does they'll know it and they'll be looking. We don't need to make one
of those recommendations a primary option.

I like the proposals of moving this stuff to the Wiki as the wiki
already contains tons of questionable (and sometimes contradictory)
advice and so there is less expectation that placement there implies
any vetting.



From etotheipi at gmail.com  Mon Jul  9 18:03:55 2012
From: etotheipi at gmail.com (Alan Reiner)
Date: Mon, 9 Jul 2012 14:03:55 -0400
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <CAAS2fgQRo4swDTQjPE0PmnpZ9uS+TDNQdOR6q4K70xsNJY9RfQ@mail.gmail.com>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
	<1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CAAS2fgQRo4swDTQjPE0PmnpZ9uS+TDNQdOR6q4K70xsNJY9RfQ@mail.gmail.com>
Message-ID: <CALf2ePwKcRWmaw=S=dFs8QTSg98obyYPoP2U21H5UL30KDBxmA@mail.gmail.com>

I generally agree with Greg.   I don't see anything he's said or done as
anti-alt-client.

As an alt-client developer, I'm happy to see my client on the main page,
but I'm also happy if that "clients" page is simply an acknowledgement that
there's more to the Bitcoin world than just the Bitcoin-Qt client, and a
link of where to find more information (i.e. the wiki).  I would still *
prefer* to have the page the way it is, because I think alt clients should
be more accessible and word will spread better where it is now -- but I
also recognize the inherent difficulty of gaining any kind of consensus of
how it should be organized, what goes on the list, etc, and no matter how
you do it, someone will complain about it being unfair or not right.

We either have to have a "czar" who is trusted to make responsible
decisions, and complaints of being unfair or recommendations for
improvements can go through that person, but ultimately it is that person
who makes the call.  Or we just move it to another page that is less
strictly controlled and where these things matter less.  Trying to gain
consensus among an amalgamation of developers all with competing priorities
and "products" is a terrible way to try to agree on stuff.

-Alan




On Mon, Jul 9, 2012 at 1:46 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> On Mon, Jul 9, 2012 at 12:09 PM, Amir Taaki <zgenjix at yahoo.com> wrote:
> > JS randomisation is bad. People shouldn't need JS to view a webpage.
>
> JS randomization doesn't imply needing JS to view the page. It implies
> needing JS to see it in random order.  You could also combine it with
> the server-side randomization if you care about non-js being non
> random, though I don't think it matters.
>
> As others have pointed out I don't generally think the randomization
> is good in principle, but if its done it should at least achieve its
> goals.
>
> > Only you have a problem with this page. I don't see why Bitcoin-Qt needs
> to be first either when it dominates the front page. It is perfectly fine
> as it is.
>
> I'll let other people speak for themselves, but I did consult others
> before reverting your last batch of changes.
>
> More generally, we have pull requests in order to get some peer review
> of changes.  Everyone should use them except for changes which are
> urgent or trivially safe.  (Presumably everyone with access knows how
> to tell if their changes are likely to be risky or controversial)
>
> > You are not a developer of any alternative clients, and this is a
> webpage for Bitcoin clients. I have made a change to remove a source of
> disputes, and make the process more fair and equal. Your suggestion to
> remove the clients page is your bias towards thinking that there should be
> only one Bitcoin client that everyone uses (the one which you contribute
> towards).
>
> I'm strongly supportive diversity in the Bitcoin network, and some alt
> client developers can speak to the positive prodding I've given them
> towards becoming more complete software. If I've said anything that
> suggests otherwise I'd love to be pointed to it in order to clarify my
> position.
>
> Unfortunately none of the primary alternatives are yet complete, the
> network would be non-function if it consisted entirely of multibit or
> electrum nodes (and as you've noted armory uses a local reference
> client as its 'server').  The distinction between multiple kinds of
> clients in terms of security and network health are subtle and can be
> difficult to explain even to technical users and so until something
> changes there the reference client needs to be the option we lead
> with. People should us it unless their use-case doesn't match. When it
> does they'll know it and they'll be looking. We don't need to make one
> of those recommendations a primary option.
>
> I like the proposals of moving this stuff to the Wiki as the wiki
> already contains tons of questionable (and sometimes contradictory)
> advice and so there is less expectation that placement there implies
> any vetting.
>
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and
> threat landscape has changed and how IT managers can respond. Discussions
> will include endpoint security, mobile security and the latest in malware
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120709/664e705e/attachment.html>

From nils at nilsschneider.net  Mon Jul  9 17:33:46 2012
From: nils at nilsschneider.net (Nils Schneider)
Date: Mon, 09 Jul 2012 19:33:46 +0200
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
Message-ID: <4FFB15FA.4090705@nilsschneider.net>

I don't think that's a good idea as it can easily confuse or annoy users
when things move around. The ordering should be preserved as much as
possible so users can remember where they found a client they liked
(e.g. 2nd row, 1st column and screenshot with light and blue colors).
Making them search the entire page is inefficient and will just get
worse once there are many clients on the page (and I think that's the goal).

On 09.07.2012 17:54, Amir Taaki wrote:
> Took me a while, but finally got it working.
> 
> Entries on the clients page are randomly ordered when the page is generated.
> 
> https://github.com/bitcoin/bitcoin.org/commit/6850fc8c83494d6ec415ea9d36fb98366373cc03
> 
> We should regenerate the page every 2 days. This gives fair exposure to all the clients listed.
> 
> 
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and 
> threat landscape has changed and how IT managers can respond. Discussions 
> will include endpoint security, mobile security and the latest in malware 
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 




From zgenjix at yahoo.com  Mon Jul  9 18:18:02 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Mon, 9 Jul 2012 11:18:02 -0700 (PDT)
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <CAAS2fgQRo4swDTQjPE0PmnpZ9uS+TDNQdOR6q4K70xsNJY9RfQ@mail.gmail.com>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
	<1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CAAS2fgQRo4swDTQjPE0PmnpZ9uS+TDNQdOR6q4K70xsNJY9RfQ@mail.gmail.com>
Message-ID: <1341857882.56956.YahooMailNeo@web121006.mail.ne1.yahoo.com>

This page really does matter to alternative clients. If you measure the click through statistics, then they are a significant portion of the 
traffic. By removing this page, you are directly stunting Bitcoin's 
growth.

The only thing that's changed between now and this morning is: 

- Addition of Bitcoin Wallet for Android
- Randomisation of entries

I actually got permission from everyone involved before making the page.If you want to remove the page, then we should see a vote by:

- laanwj
- gavin
- sipa
- jgarzik
- BlueMatt
- Diapolo
- luke-jr
- you
- jim from multibit
- gary rowe
- ThomasV
- me
- etotheipi
- Andreas Schildbach
- justmoon
- Mike Hearn
You're proposing to remove the page. You know, and I know and I know that you know that nobody visits the Wiki. Your proposal is not "move to Wiki" really but remove from bitcoin.org. Keep bitcoin.org for Bitcoin-Qt only which is against the stated goals of the rest of your team members (gavin, sipa, jgarzik).


Have you tried the new clients? I've tried all 4, and they are all well written.

Try the new version of Electrum, https://gitorious.org/electrum/electrum - it's more featureful and secure than Bitcoin-Qt what with deterministic wallets, brain-wallets, prioritising addresses, frozen addresses, offline transactions - none of which Bitcoin-Qt has.

MultiBit is also very good with QR integration and the ability for merchants to quickly set themselves up. It's full of guiding help text, and has this paradigm to allow people to work with keys.


Bitcoin Wallet for Android has one of the best bitcoin UIs I've seen and is extremely well thought out in how the user navigates through the software.

The Bitcoin network could function perfectly fine with Electrum nodes and 
miners. You would still have miners and we wouldn't have the problem now with huge blocks because miners would be economically incentivised to 
keep blocks small. But that's another discussion.

Technically speaking, the randomisation is fine now. It achieves its intended effect, as the page is regenerated daily.

This does not need to be a source of arguing. I see no problem with having this page be a neutral overview of the main clients (as we all agreed together in the beginning):
- Source must be public, and users must be able to run from source.
- Description should be non-spammy and neutral sounding. Cover the negative aspects.
Randomisation of the order simply makes that fairer. Alphabetical is not a good option (as others have suggested) because it can be gamed.

There is absolutely no reason to remove this page unless you think bitcoin.org is only for Bitcoin-Qt which is against the wishes of gavin, sipa, jgarzik, and the long-term stated goal of bitcoin.org as a neutral resource for the community.



----- Original Message -----
From: Gregory Maxwell <gmaxwell at gmail.com>
To: Amir Taaki <zgenjix at yahoo.com>
Cc: "bitcoin-development at lists.sourceforge.net" <bitcoin-development at lists.sourceforge.net>
Sent: Monday, July 9, 2012 6:46 PM
Subject: Re: [Bitcoin-development] Random order for clients page

On Mon, Jul 9, 2012 at 12:09 PM, Amir Taaki <zgenjix at yahoo.com> wrote:
> JS randomisation is bad. People shouldn't need JS to view a webpage.

JS randomization doesn't imply needing JS to view the page. It implies
needing JS to see it in random order.? You could also combine it with
the server-side randomization if you care about non-js being non
random, though I don't think it matters.

As others have pointed out I don't generally think the randomization
is good in principle, but if its done it should at least achieve its
goals.

> Only you have a problem with this page. I don't see why Bitcoin-Qt needs to be first either when it dominates the front page. It is perfectly fine as it is.

I'll let other people speak for themselves, but I did consult others
before reverting your last batch of changes.

More generally, we have pull requests in order to get some peer review
of changes.? Everyone should use them except for changes which are
urgent or trivially safe.? (Presumably everyone with access knows how
to tell if their changes are likely to be risky or controversial)

> You are not a developer of any alternative clients, and this is a webpage for Bitcoin clients. I have made a change to remove a source of disputes, and make the process more fair and equal. Your suggestion to remove the clients page is your bias towards thinking that there should be only one Bitcoin client that everyone uses (the one which you contribute towards).

I'm strongly supportive diversity in the Bitcoin network, and some alt
client developers can speak to the positive prodding I've given them
towards becoming more complete software. If I've said anything that
suggests otherwise I'd love to be pointed to it in order to clarify my
position.

Unfortunately none of the primary alternatives are yet complete, the
network would be non-function if it consisted entirely of multibit or
electrum nodes (and as you've noted armory uses a local reference
client as its 'server').? The distinction between multiple kinds of
clients in terms of security and network health are subtle and can be
difficult to explain even to technical users and so until something
changes there the reference client needs to be the option we lead
with. People should us it unless their use-case doesn't match. When it
does they'll know it and they'll be looking. We don't need to make one
of those recommendations a primary option.

I like the proposals of moving this stuff to the Wiki as the wiki
already contains tons of questionable (and sometimes contradictory)
advice and so there is less expectation that placement there implies
any vetting.




From thomasV1 at gmx.de  Mon Jul  9 18:29:43 2012
From: thomasV1 at gmx.de (thomasV1 at gmx.de)
Date: Mon, 09 Jul 2012 20:29:43 +0200
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <CALf2ePwKcRWmaw=S=dFs8QTSg98obyYPoP2U21H5UL30KDBxmA@mail.gmail.com>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
	<1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CAAS2fgQRo4swDTQjPE0PmnpZ9uS+TDNQdOR6q4K70xsNJY9RfQ@mail.gmail.com>
	<CALf2ePwKcRWmaw=S=dFs8QTSg98obyYPoP2U21H5UL30KDBxmA@mail.gmail.com>
Message-ID: <20120709182943.257650@gmx.net>

I agree with Alan.

I too am happy to see my client listed on bitcoin.org, and I don't mind Bitcoin-Qt being listed first. I have no problem with a "czar" approach if it can solve conflicts.

I believe that it is useful to keep the 'clients' page on bitcoin.org, because it contributes to clarifying the difference between the Bitcoin client and Bitcoin as a protocol/network/ecosystem. It shows that Bitcoin is much more than its original implementation. It is a sign of health.

Thomas



-------- Original-Nachricht --------
> Datum: Mon, 9 Jul 2012 14:03:55 -0400
> Von: Alan Reiner <etotheipi at gmail.com>
> An: Gregory Maxwell <gmaxwell at gmail.com>
> CC: "bitcoin-development at lists.sourceforge.net" <bitcoin-development at lists.sourceforge.net>
> Betreff: Re: [Bitcoin-development] Random order for clients page

> I generally agree with Greg.   I don't see anything he's said or done as
> anti-alt-client.
> 
> As an alt-client developer, I'm happy to see my client on the main page,
> but I'm also happy if that "clients" page is simply an acknowledgement
> that
> there's more to the Bitcoin world than just the Bitcoin-Qt client, and a
> link of where to find more information (i.e. the wiki).  I would still *
> prefer* to have the page the way it is, because I think alt clients should
> be more accessible and word will spread better where it is now -- but I
> also recognize the inherent difficulty of gaining any kind of consensus of
> how it should be organized, what goes on the list, etc, and no matter how
> you do it, someone will complain about it being unfair or not right.
> 
> We either have to have a "czar" who is trusted to make responsible
> decisions, and complaints of being unfair or recommendations for
> improvements can go through that person, but ultimately it is that person
> who makes the call.  Or we just move it to another page that is less
> strictly controlled and where these things matter less.  Trying to gain
> consensus among an amalgamation of developers all with competing
> priorities
> and "products" is a terrible way to try to agree on stuff.
> 
> -Alan
> 
> 
> 
> 



From mike at plan99.net  Mon Jul  9 18:30:14 2012
From: mike at plan99.net (Mike Hearn)
Date: Mon, 9 Jul 2012 20:30:14 +0200
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <1341857882.56956.YahooMailNeo@web121006.mail.ne1.yahoo.com>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
	<1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CAAS2fgQRo4swDTQjPE0PmnpZ9uS+TDNQdOR6q4K70xsNJY9RfQ@mail.gmail.com>
	<1341857882.56956.YahooMailNeo@web121006.mail.ne1.yahoo.com>
Message-ID: <CANEZrP1vwDubXrY3eoq4P4SAN=GK06iVaVx4pMWZKmBwQc9awg@mail.gmail.com>

It's easy to say, this page is controversial, so let's get rid of it.

However that starts the project down the road of being dominated by
our internal politics rather than what actually makes sense from the
end users perspective. That route spells doom for any product. You can
always tell when a UI or product is the result of internal politics,
whether it be the difficulty of plug-n-play hardware on Linux (no
driver api) to how Microsoft is incapable of producing anything that
isn't built on Windows. Gmail labs is another example of this.

It makes sense that if I go to bitcoin.org, I am educated about the
system and what is available for it. It doesn't make any sense to have
some stuff on the main site and other stuff on a wiki (which may get
randomly vandalized and looks less professional), based on how
"controversial" some developers find it.

FWIW I am dead set against anyone randomly changing the website
without a pull request and such changes should be reverted and
resubmitted through the proper channels. I don't perceive much value
in randomization or trying to make this page "fair". If anything, we
need to pick somebody (one person) who has a strong focus on regular
people and their needs, then just make them the sole committer to the
website. That way disputes can be resolved by them making a decision,
instead of ridiculous edit wars.



From gmaxwell at gmail.com  Mon Jul  9 18:48:18 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 9 Jul 2012 14:48:18 -0400
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <1341857882.56956.YahooMailNeo@web121006.mail.ne1.yahoo.com>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
	<1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CAAS2fgQRo4swDTQjPE0PmnpZ9uS+TDNQdOR6q4K70xsNJY9RfQ@mail.gmail.com>
	<1341857882.56956.YahooMailNeo@web121006.mail.ne1.yahoo.com>
Message-ID: <CAAS2fgTB-c+F9Fvcva-NyADSQgJih2VBEW_0bA5h1yYLowNH9Q@mail.gmail.com>

On Mon, Jul 9, 2012 at 2:18 PM, Amir Taaki <zgenjix at yahoo.com> wrote:
> The only thing that's changed between now and this morning is:
>
> - Addition of Bitcoin Wallet for Android
> - Randomisation of entries

Yes, because I reverted eight commits to it by you because they were
clearly controversial, including the proprietary clients section and
blockchain.info.

You went on to add the randomization, again without a pull request
and, as seen here, its somewhat controversial.

> I actually got permission from everyone involved before making the page.If you want to remove the page, then we should see a vote by:

Luke originally authored the multiple clients page. It sounded like it
could be useful and I made some recommendations for it too.  I'm
concerned that it's not working out that well. Thus "we should
probably consider".  Perhaps that came off as too strong.  If I really
pushing for that I'd submit it as a pull request. (and everyone,
including the people you listed, could comment)

I think the fact that we can just remove it if we can't agree on it is
a useful point to the discussion.  For the site to be a neutral
resource it should be conservatively operated and if sometimes being
neutral, safe, and conservative gets in the way of being complete then
we should choose those other things over completeness. There are a
great many other resources available, bitcoin.org will never contain
all the relevant knowledge.

> You're proposing to remove the page.You know, and I know and I know that you know that nobody visits the Wiki.

Crazy. I have considerable evidence to the contrary, in fact. The wiki
is widely used and promoted as the primary community memory.

I certainly didn't agree with that suggestion because I thought it
wouldn't get seen. I found it agreeable because it would reflect the
lower degree of consensus we apparently have about listing the page.

> Have you tried the new clients? I've tried all 4, and they are all well written.

I've used multibit, armory, and electrum (though not for some time). I
shed painted the electrum determinstic wallet stuff pretty extensively
when it was first created, and I think the wordlist seed stuff was my
suggestion.

> Try the new version of Electrum, https://gitorious.org/electrum/electrum - it's more featureful and secure than Bitcoin-Qt what with deterministic wallets, brain-wallets, prioritising addresses, frozen addresses, offline transactions - none of which Bitcoin-Qt has.

I'd like to invite you to point your electrum client against a server
I operate.  I will then happily agree with you that it is more secure:
because the bitcoin I rob from you will soothe my pain at the loss of
this "debate".  Sound like a deal?

I think you're exaggerating the features there, and simultaneously
underplaying the fact that clients doesn't actually participate in the
bitcoin protocol, don't provide the security promises of bitcoin, and
basically leave us with a centralized system (if thats all we had).
It's a worthwhile part of the ecosystem, I agree.

> MultiBit is also very good with QR integration and the ability for merchants to quickly set themselves up. It's full of guiding help text, and has this paradigm to allow people to work with keys.

There has been QR integration in bitcoin-qt for some time. ::shrugs::
I don't really understand why you're arguing features here: Yes the
other clients are great things. I never said they weren't.  They are
not, however, complete alternatives to the reference client yet.

> There is absolutely no reason to remove this page unless you think bitcoin.org is only for Bitcoin-Qt which is against the wishes of gavin, sipa, jgarzik, and the long-term stated goal of bitcoin.org as a neutral resource for the community.

Please stop putting words in my mouth. I certainly don't think that.



From jim618 at fastmail.co.uk  Mon Jul  9 18:54:42 2012
From: jim618 at fastmail.co.uk (Jim)
Date: Mon, 09 Jul 2012 19:54:42 +0100
Subject: [Bitcoin-development] Random order for clients page
Message-ID: <1341860082.19764.140661099832829.0B000C71@webmail.messagingengine.com>

I think we are all so familiar with Bitcoin that we forget how daunting
and confusing it all is to new users. The clients page does a good job
in explaining that there are various pieces of software that they (the
new user) can use with their bitcoins.

It also helps with the question "Who can I trust ?"
By having the clients on a link from the "mothership" of bitcoin.org it
gives credence to all of the alt clients.

This last point is a good reason to only include open source clients
IMHO. 

RE: The position randomisation - I have to admit I was secretly pleased
with the original layout, as MultiBit just happened to have the "eye
candy" position of "top and centre".  It is only fair to have them
switch around.
-- 
http://multibit.org    Money, reinvented




From gmaxwell at gmail.com  Mon Jul  9 18:57:32 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 9 Jul 2012 14:57:32 -0400
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <1341860082.19764.140661099832829.0B000C71@webmail.messagingengine.com>
References: <1341860082.19764.140661099832829.0B000C71@webmail.messagingengine.com>
Message-ID: <CAAS2fgT_i59LROJr6KWXJ_LQZp7OLowzd05vCoDASsjgzt_SkQ@mail.gmail.com>

On Mon, Jul 9, 2012 at 2:54 PM, Jim <jim618 at fastmail.co.uk> wrote:
> RE: The position randomisation - I have to admit I was secretly pleased
> with the original layout, as MultiBit just happened to have the "eye
> candy" position of "top and centre".  It is only fair to have them
> switch around.

This ordering wasn't accidental.



From etotheipi at gmail.com  Mon Jul  9 19:14:51 2012
From: etotheipi at gmail.com (Alan Reiner)
Date: Mon, 9 Jul 2012 15:14:51 -0400
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <CAAS2fgT_i59LROJr6KWXJ_LQZp7OLowzd05vCoDASsjgzt_SkQ@mail.gmail.com>
References: <1341860082.19764.140661099832829.0B000C71@webmail.messagingengine.com>
	<CAAS2fgT_i59LROJr6KWXJ_LQZp7OLowzd05vCoDASsjgzt_SkQ@mail.gmail.com>
Message-ID: <CALf2ePyzxF6D8yiOm7Lk1X4u4WO3XRHtKXBwaELA0zx8i7u0mg@mail.gmail.com>

I was originaly for the idea of randomization.  Because it is the most
"fair", but "fair" is a relative term.  It's fair for client developers who
argue over whose client should be first, and whose is better for various
purposes.   But it's not fair for users, to have an inconsistent page, that
sometimes recommends less-developed solutions, or doesn't show what's best *for
the users in the community*.

I think the premise of having a page that is "fair for developers" is its
downfall.  Once we agree things have to be fair, we must agree on what fair
means, and then we must accept 30 new recently-started projects that barely
squeak by the requirements for being on the page, despite having
substantial issues/bugs.  The premise of being fair is the downfall here.

This *has* to be a subjective list.   Someone who is trusted to understand
what is good for users, and who also has familiarity with the programs,
should be the one to decide.  People can try to provide input, and make
them aware of stuff they didn't know.  But it should be *that
person's*decision, and if it's not "fair" in your world, too bad.  At
least we won't
spend the next 3 years arguing on the mailing list about how to compare
programs that are all great in many different dimensions, and failing in
the others.

If it's going to go on the main page, give someone the responsibility to
come up with "what's best for the users of Bitcoin.org", however they
decide to interpret it, and save our breath arguing over more important
things.

-Alan



On Mon, Jul 9, 2012 at 2:57 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> On Mon, Jul 9, 2012 at 2:54 PM, Jim <jim618 at fastmail.co.uk> wrote:
> > RE: The position randomisation - I have to admit I was secretly pleased
> > with the original layout, as MultiBit just happened to have the "eye
> > candy" position of "top and centre".  It is only fair to have them
> > switch around.
>
> This ordering wasn't accidental.
>
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and
> threat landscape has changed and how IT managers can respond. Discussions
> will include endpoint security, mobile security and the latest in malware
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120709/8719af66/attachment.html>

From g.rowe at froot.co.uk  Mon Jul  9 20:13:04 2012
From: g.rowe at froot.co.uk (Gary Rowe)
Date: Mon, 9 Jul 2012 21:13:04 +0100
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <CALf2ePyzxF6D8yiOm7Lk1X4u4WO3XRHtKXBwaELA0zx8i7u0mg@mail.gmail.com>
References: <1341860082.19764.140661099832829.0B000C71@webmail.messagingengine.com>
	<CAAS2fgT_i59LROJr6KWXJ_LQZp7OLowzd05vCoDASsjgzt_SkQ@mail.gmail.com>
	<CALf2ePyzxF6D8yiOm7Lk1X4u4WO3XRHtKXBwaELA0zx8i7u0mg@mail.gmail.com>
Message-ID: <CAKm8k+39h=SdKg8dd70UhOrN9+kRQRvsh93jksQB3T=fMZW6qQ@mail.gmail.com>

Although I can only speak for my involvement with MultiBit, the idea of a
randomised client page seems wrong to me, for the reasons given by Alan
earlier.

Equally, in order to further the idea that Bitcoin is more than the
reference client, it is appropriate that other clients are acknowledged and
promoted. Bitcoin.org has by far the most traffic and by directing people
to other clients that may be more suitable to their needs the user
experience is improved considerably. After all, not everyone wants a 2.5Gb+
download before starting out on their Bitcoin adventure.

If the reference client was the best of all possible worlds then there
would be no need for the alternative clients.

On 9 July 2012 20:14, Alan Reiner <etotheipi at gmail.com> wrote:

> I was originaly for the idea of randomization.  Because it is the most
> "fair", but "fair" is a relative term.  It's fair for client developers who
> argue over whose client should be first, and whose is better for various
> purposes.   But it's not fair for users, to have an inconsistent page, that
> sometimes recommends less-developed solutions, or doesn't show what's best
> *for the users in the community*.
>
> I think the premise of having a page that is "fair for developers" is its
> downfall.  Once we agree things have to be fair, we must agree on what fair
> means, and then we must accept 30 new recently-started projects that barely
> squeak by the requirements for being on the page, despite having
> substantial issues/bugs.  The premise of being fair is the downfall here.
>
> This *has* to be a subjective list.   Someone who is trusted to
> understand what is good for users, and who also has familiarity with the
> programs, should be the one to decide.  People can try to provide input,
> and make them aware of stuff they didn't know.  But it should be *that
> person's* decision, and if it's not "fair" in your world, too bad.  At
> least we won't spend the next 3 years arguing on the mailing list about how
> to compare programs that are all great in many different dimensions, and
> failing in the others.
>
> If it's going to go on the main page, give someone the responsibility to
> come up with "what's best for the users of Bitcoin.org", however they
> decide to interpret it, and save our breath arguing over more important
> things.
>
> -Alan
>
>
>
> On Mon, Jul 9, 2012 at 2:57 PM, Gregory Maxwell <gmaxwell at gmail.com>wrote:
>
>> On Mon, Jul 9, 2012 at 2:54 PM, Jim <jim618 at fastmail.co.uk> wrote:
>> > RE: The position randomisation - I have to admit I was secretly pleased
>> > with the original layout, as MultiBit just happened to have the "eye
>> > candy" position of "top and centre".  It is only fair to have them
>> > switch around.
>>
>> This ordering wasn't accidental.
>>
>>
>> ------------------------------------------------------------------------------
>> Live Security Virtual Conference
>> Exclusive live event will cover all the ways today's security and
>> threat landscape has changed and how IT managers can respond. Discussions
>> will include endpoint security, mobile security and the latest in malware
>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and
> threat landscape has changed and how IT managers can respond. Discussions
> will include endpoint security, mobile security and the latest in malware
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120709/56da5102/attachment.html>

From jgarzik at exmulti.com  Mon Jul  9 20:44:50 2012
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Mon, 9 Jul 2012 16:44:50 -0400
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
Message-ID: <CA+8xBpcXe8evJpmJOMGjhrBNkcThu6A9uUiCjg0uqr+JokQjhw@mail.gmail.com>

On Mon, Jul 9, 2012 at 12:04 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> If you had authored this as a pull request rather than making the
> change unilaterally I would have recommended leaving it so the
> reference client was always first. I also would have suggested that it
> use JS randomization instead of jekyll in order to get more even
> coverage, though I think thats a more minor point.

Agreed, and this would be why I support revert -- pull requests are
for anything non-trivial.  This practice of pull requests clearly
should be followed in the case of controversial changes.

> Some people were concerned when this page was created that it would
> just be a source of useless disputes.  I think its becoming clear that
> this is the case. I think the cost of dealing with this page is
> starting to exceed the benefit it provides and we should probably
> consider removing it.

Agreed.
-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From moon at justmoon.de  Mon Jul  9 22:26:06 2012
From: moon at justmoon.de (Stefan Thomas)
Date: Tue, 10 Jul 2012 00:26:06 +0200
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <CANEZrP1vwDubXrY3eoq4P4SAN=GK06iVaVx4pMWZKmBwQc9awg@mail.gmail.com>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
	<1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CAAS2fgQRo4swDTQjPE0PmnpZ9uS+TDNQdOR6q4K70xsNJY9RfQ@mail.gmail.com>
	<1341857882.56956.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CANEZrP1vwDubXrY3eoq4P4SAN=GK06iVaVx4pMWZKmBwQc9awg@mail.gmail.com>
Message-ID: <4FFB5A7E.7020604@justmoon.de>


> However that starts the project down the road of being dominated by
> our internal politics rather than what actually makes sense from the
> end users perspective.

I strongly agree, but this is *why* I suggested moving it to the wiki. I
recently had to choose an XMPP client and I looked on xmpp.org - after a
frustrating experience with their listing [1], I went to Wikipedia who
have an decent feature-based matrix [2].

(There may be better examples, but I'm using this one, because this
actually did happen.)

This is just anecdotal, but there are some reasons why wikis tend to do
a better for this kind of thing is because they are:

- more up-to-date (anyone can update them)
- more in touch with users:
  -> Users can edit the page and add a column to a feature matrix for
example).
  -> The editing discussions include users. I guarantee there are more
Bitcoin end users with a wiki account than a Github account.
-  immediately recognizable as a wiki (thanks to Mediawiki/Wikipedia.)
As such many users will correctly treat and interpret the information
presented as community-generated and fallible.

So they are more user-oriented in the sense that they will be influenced
by a diverse set of backgrounds and views vs. a Github based page which
will be dominated by developers. If you want to see "the result of
internal politics", the current client page is a good example. We
couldn't agree on the columns for a feature matrix, so now we just have
walls of text. Some of the options that are de-facto the most popular
with users like BlockChain.info or just using your MtGox account are not
mentioned at all. When analyzing client security, Greg discussed
counterparty risks but ignored other risk factors like default backup
behavior and the usability of security features.

But even if I grant you that those clients' overall risk profile is
worse than Bitcoin-Qt's, maybe I'm happy to take that risk in exchange
for less setup/maintenance effort. Based on our support requests at
WeUseCoins I know that there are tons of users with < 1 BTC in their
wallets. If my hourly wage is 20$ and I have 20$ in my Bitcoin wallet
then spending one hour per month downloading/updating/figuring-out the
client is equivalent to a total loss.

The list is obviously designed by open-source developers and that's
fine, it's bitcoin.org, arguably we *should* try to push users in a
specific direction, arguably we *should* err on the side of caution in
order to not be caught recommending a hosted wallet that gets hacked.
But if user orientation is supposed to be the focus, then the wiki will
both allow us (because it's less "official") and force us (because users
will have a say) to include even clients we personally wouldn't use. :)


[1] http://xmpp.org/xmpp-software/clients/
[2]
http://en.wikipedia.org/wiki/Comparison_of_instant_messaging_clients#XMPP-related_features





On 7/9/2012 8:30 PM, Mike Hearn wrote:
> It's easy to say, this page is controversial, so let's get rid of it.
>
> However that starts the project down the road of being dominated by
> our internal politics rather than what actually makes sense from the
> end users perspective. That route spells doom for any product. You can
> always tell when a UI or product is the result of internal politics,
> whether it be the difficulty of plug-n-play hardware on Linux (no
> driver api) to how Microsoft is incapable of producing anything that
> isn't built on Windows. Gmail labs is another example of this.
>
> It makes sense that if I go to bitcoin.org, I am educated about the
> system and what is available for it. It doesn't make any sense to have
> some stuff on the main site and other stuff on a wiki (which may get
> randomly vandalized and looks less professional), based on how
> "controversial" some developers find it.
>
> FWIW I am dead set against anyone randomly changing the website
> without a pull request and such changes should be reverted and
> resubmitted through the proper channels. I don't perceive much value
> in randomization or trying to make this page "fair". If anything, we
> need to pick somebody (one person) who has a strong focus on regular
> people and their needs, then just make them the sole committer to the
> website. That way disputes can be resolved by them making a decision,
> instead of ridiculous edit wars.
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and 
> threat landscape has changed and how IT managers can respond. Discussions 
> will include endpoint security, mobile security and the latest in malware 
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>





From mike at plan99.net  Mon Jul  9 22:37:07 2012
From: mike at plan99.net (Mike Hearn)
Date: Tue, 10 Jul 2012 00:37:07 +0200
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <4FFB5A7E.7020604@justmoon.de>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
	<1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CAAS2fgQRo4swDTQjPE0PmnpZ9uS+TDNQdOR6q4K70xsNJY9RfQ@mail.gmail.com>
	<1341857882.56956.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CANEZrP1vwDubXrY3eoq4P4SAN=GK06iVaVx4pMWZKmBwQc9awg@mail.gmail.com>
	<4FFB5A7E.7020604@justmoon.de>
Message-ID: <CANEZrP3Y3nvRwiPw66bDhp01JnE-zVurw5MnxPzR-bi5H8h4Aw@mail.gmail.com>

> I strongly agree, but this is *why* I suggested moving it to the wiki. I
> recently had to choose an XMPP client and I looked on xmpp.org - after a
> frustrating experience with their listing [1]

Probably because their listing is even more useless than any of the
proposals that were presented here. Thank goodness it didn't end up
like that. Their table doesn't even attempt to list features or
differentiating aspects of each client.

I think the XMPP guys have pretty much given up on directly marketing
the system to end users.

> - more up-to-date (anyone can update them)

Fortunately reasonable clients don't appear/disappear/change that often.

> - more in touch with users:

I think by "users" you mean, geeks who understand wiki syntax. Because
that's what it'll end up trending towards. I don't believe a wiki
would reflect the needs of your average person. It's still better to
have these arguments here and try to find a user-focussed consensus
than hope one will converge from a wiki.

> If you want to see "the result of
> internal politics", the current client page is a good example. We
> couldn't agree on the columns for a feature matrix, so now we just have
> walls of text.

Inability to agree on columns isn't why the page looks like that. I
know because I'm the one who argued for the current design.

It looks like that because feature matrices aren't especially helpful
for newbies to make a decision, especially when the "features" in
question were often things like how they handled the block chain or
which protocol standards they support, ie, things only of interest to
developers.

It's much easier to communicate the differences to people with a short
piece of text, and maybe if there is no obvious way to explain why
you'd want to use a given client, that's a good sign it's not worth
listing there. Otherwise you end up like xmpp.org.

> Some of the options that are de-facto the most popular
> with users like BlockChain.info or just using your MtGox account are not
> mentioned at all.

It's true that bitcoin.org needs to be conservative. That said, I'd
like there to be sections for them too, actually. I agree that risk
isn't purely about how it's implemented and that whilst we might like
to push particular ideologies around protocols or code licensing, that
isn't especially relevant to end users who have different priorities.
Track record counts for a lot as well.



From luke at dashjr.org  Mon Jul  9 23:07:17 2012
From: luke at dashjr.org (Luke-Jr)
Date: Mon, 9 Jul 2012 23:07:17 +0000
Subject: [Bitcoin-development] Wiki client list (was: Random order for
	clients page)
In-Reply-To: <4FFB5A7E.7020604@justmoon.de>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CANEZrP1vwDubXrY3eoq4P4SAN=GK06iVaVx4pMWZKmBwQc9awg@mail.gmail.com>
	<4FFB5A7E.7020604@justmoon.de>
Message-ID: <201207092307.19365.luke@dashjr.org>

https://en.bitcoin.it/wiki/Clients



From zgenjix at yahoo.com  Mon Jul  9 18:24:06 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Mon, 9 Jul 2012 11:24:06 -0700 (PDT)
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <4FFB15FA.4090705@nilsschneider.net>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<4FFB15FA.4090705@nilsschneider.net>
Message-ID: <1341858246.49045.YahooMailNeo@web121003.mail.ne1.yahoo.com>

By that time in the future, when there are many clients, there should just be a flat list or no list at all.



----- Original Message -----
From: Nils Schneider <nils at nilsschneider.net>
To: bitcoin-development at lists.sourceforge.net
Cc: 
Sent: Monday, July 9, 2012 6:33 PM
Subject: Re: [Bitcoin-development] Random order for clients page

I don't think that's a good idea as it can easily confuse or annoy users
when things move around. The ordering should be preserved as much as
possible so users can remember where they found a client they liked
(e.g. 2nd row, 1st column and screenshot with light and blue colors).
Making them search the entire page is inefficient and will just get
worse once there are many clients on the page (and I think that's the goal).

On 09.07.2012 17:54, Amir Taaki wrote:
> Took me a while, but finally got it working.
> 
> Entries on the clients page are randomly ordered when the page is generated.
> 
> https://github.com/bitcoin/bitcoin.org/commit/6850fc8c83494d6ec415ea9d36fb98366373cc03
> 
> We should regenerate the page every 2 days. This gives fair exposure to all the clients listed.
> 
> 
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and 
> threat landscape has changed and how IT managers can respond. Discussions 
> will include endpoint security, mobile security and the latest in malware 
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 


------------------------------------------------------------------------------
Live Security Virtual Conference
Exclusive live event will cover all the ways today's security and 
threat landscape has changed and how IT managers can respond. Discussions 
will include endpoint security, mobile security and the latest in malware 
threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From moon at justmoon.de  Tue Jul 10 02:36:39 2012
From: moon at justmoon.de (Stefan Thomas)
Date: Tue, 10 Jul 2012 04:36:39 +0200
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <CANEZrP3Y3nvRwiPw66bDhp01JnE-zVurw5MnxPzR-bi5H8h4Aw@mail.gmail.com>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
	<1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CAAS2fgQRo4swDTQjPE0PmnpZ9uS+TDNQdOR6q4K70xsNJY9RfQ@mail.gmail.com>
	<1341857882.56956.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CANEZrP1vwDubXrY3eoq4P4SAN=GK06iVaVx4pMWZKmBwQc9awg@mail.gmail.com>
	<4FFB5A7E.7020604@justmoon.de>
	<CANEZrP3Y3nvRwiPw66bDhp01JnE-zVurw5MnxPzR-bi5H8h4Aw@mail.gmail.com>
Message-ID: <4FFB9537.8040909@justmoon.de>

> I think by "users" you mean, geeks who understand wiki syntax.

The point is to expand the circle of contributors. I'm pretty sure there
are more people who can edit a wiki than people who know HTML and how to
create a git pull request. :)


> Inability to agree on columns isn't why the page looks like that.

My apologies, I vaguely remembered Luke's original proposal and that it
got rejected, but you're correct, the reason wasn't a debate on the
columns but that people didn't like the feature matrix at all.


I didn't really mean to argue on the details of what the page should
look like, but just to briefly respond to Mike's point:

> It looks like that because feature matrices aren't especially helpful
> for newbies to make a decision, especially when the "features" in
> question were often things like how they handled the block chain or
> which protocol standards they support, ie, things only of interest to
> developers.

A well-designed feature matrix can quite useful and user-friendly.

http://www.apple.com/ipod/compare-ipod-models/

Prose is better to get a sense of the philosophy and basic idea of a
client. If it was between having only a feature matrix or only prose,
I'd probably go for the prose as well.

What a feature matrix is good at though is it allows you to very quickly
find the specific feature or general criteria you're looking for without
reading through all of the text. So it might be a useful addition maybe
not on Bitcoin.org, but certainly on the wiki.


On 7/10/2012 12:37 AM, Mike Hearn wrote:
>> I strongly agree, but this is *why* I suggested moving it to the wiki. I
>> recently had to choose an XMPP client and I looked on xmpp.org - after a
>> frustrating experience with their listing [1]
> Probably because their listing is even more useless than any of the
> proposals that were presented here. Thank goodness it didn't end up
> like that. Their table doesn't even attempt to list features or
> differentiating aspects of each client.
>
> I think the XMPP guys have pretty much given up on directly marketing
> the system to end users.
>
>> - more up-to-date (anyone can update them)
> Fortunately reasonable clients don't appear/disappear/change that often.
>
>> - more in touch with users:
> I think by "users" you mean, geeks who understand wiki syntax. Because
> that's what it'll end up trending towards. I don't believe a wiki
> would reflect the needs of your average person. It's still better to
> have these arguments here and try to find a user-focussed consensus
> than hope one will converge from a wiki.
>
>> If you want to see "the result of
>> internal politics", the current client page is a good example. We
>> couldn't agree on the columns for a feature matrix, so now we just have
>> walls of text.
> Inability to agree on columns isn't why the page looks like that. I
> know because I'm the one who argued for the current design.
>
> It looks like that because feature matrices aren't especially helpful
> for newbies to make a decision, especially when the "features" in
> question were often things like how they handled the block chain or
> which protocol standards they support, ie, things only of interest to
> developers.
>
> It's much easier to communicate the differences to people with a short
> piece of text, and maybe if there is no obvious way to explain why
> you'd want to use a given client, that's a good sign it's not worth
> listing there. Otherwise you end up like xmpp.org.
>
>> Some of the options that are de-facto the most popular
>> with users like BlockChain.info or just using your MtGox account are not
>> mentioned at all.
> It's true that bitcoin.org needs to be conservative. That said, I'd
> like there to be sections for them too, actually. I agree that risk
> isn't purely about how it's implemented and that whilst we might like
> to push particular ideologies around protocols or code licensing, that
> isn't especially relevant to end users who have different priorities.
> Track record counts for a lot as well.
>





From etotheipi at gmail.com  Tue Jul 10 02:44:23 2012
From: etotheipi at gmail.com (Alan Reiner)
Date: Mon, 09 Jul 2012 22:44:23 -0400
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <4FFB9537.8040909@justmoon.de>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
	<1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CAAS2fgQRo4swDTQjPE0PmnpZ9uS+TDNQdOR6q4K70xsNJY9RfQ@mail.gmail.com>
	<1341857882.56956.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CANEZrP1vwDubXrY3eoq4P4SAN=GK06iVaVx4pMWZKmBwQc9awg@mail.gmail.com>
	<4FFB5A7E.7020604@justmoon.de>
	<CANEZrP3Y3nvRwiPw66bDhp01JnE-zVurw5MnxPzR-bi5H8h4Aw@mail.gmail.com>
	<4FFB9537.8040909@justmoon.de>
Message-ID: <4FFB9707.9020307@gmail.com>

On 07/09/2012 10:36 PM, Stefan Thomas wrote:
>> It looks like that because feature matrices aren't especially helpful
>> for newbies to make a decision, especially when the "features" in
>> question were often things like how they handled the block chain or
>> which protocol standards they support, ie, things only of interest to
>> developers.
> A well-designed feature matrix can quite useful and user-friendly.
>
> http://www.apple.com/ipod/compare-ipod-models/
>
> Prose is better to get a sense of the philosophy and basic idea of a
> client. If it was between having only a feature matrix or only prose,
> I'd probably go for the prose as well.
>
> What a feature matrix is good at though is it allows you to very quickly
> find the specific feature or general criteria you're looking for without
> reading through all of the text. So it might be a useful addition maybe
> not on Bitcoin.org, but certainly on the wiki.
>
If we're keeping the clients page, I would really like to see the 
feature matrix linked from that page.  It shouldn't be on that main 
clients page (for the reasons already stated), but Stefan makes a point 
that /it is really useful for many users./  Add "Compare features of the 
various different clients here: <link>" and users who will benefit will 
most definitely click on it.  I think that's win-win.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120709/5376969f/attachment.html>

From gmaxwell at gmail.com  Tue Jul 10 03:05:44 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 9 Jul 2012 23:05:44 -0400
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <4FFB9707.9020307@gmail.com>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
	<1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CAAS2fgQRo4swDTQjPE0PmnpZ9uS+TDNQdOR6q4K70xsNJY9RfQ@mail.gmail.com>
	<1341857882.56956.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CANEZrP1vwDubXrY3eoq4P4SAN=GK06iVaVx4pMWZKmBwQc9awg@mail.gmail.com>
	<4FFB5A7E.7020604@justmoon.de>
	<CANEZrP3Y3nvRwiPw66bDhp01JnE-zVurw5MnxPzR-bi5H8h4Aw@mail.gmail.com>
	<4FFB9537.8040909@justmoon.de> <4FFB9707.9020307@gmail.com>
Message-ID: <CAAS2fgT10nf=8TJxYrT4WBNdYUiSU7qQNDTjjbTSuMktn2QVpw@mail.gmail.com>

On Mon, Jul 9, 2012 at 10:44 PM, Alan Reiner <etotheipi at gmail.com> wrote:
> What a feature matrix is good at though is it allows you to very quickly
> find the specific feature or general criteria you're looking for without
> reading through all of the text. So it might be a useful addition maybe
> not on Bitcoin.org, but certainly on the wiki.

I'm generally not a fan of feature matrixes, they encourage "checkbox
decision making"? which is seldom very good for the decider, though
it's much loved by the marketing department that puts together the
matrix.  But just becase something is loved by marketing departments
for its ability to set the agenda in variously biased ways doesn't
mean its a great thing to emulate.

Take the matrix Luke linked to for example[1].  Now imagine that we
tunnel MyBitcoin from a year ago and drop it into that table.  It
would have every light green, except 'encryption' (which wouldn't have
been green for bitcoin-qt then either). It would basically be the
dominant option by the matrix comparison, and this is without any
lobbying to get MyBitcoin specific features (like their shopping chart
interface) added, not to mention the "_vanishes with everyone's
money_" feature.

I don't think I'm being unreasonable to say that if you could drop in
something that retrospectively cost people a lot into your decision
matrix and it comes out on top you're doing something wrong.

In tables like this significant differences like "a remote hacker can
rob you" get reduced to equal comparison with "chrome spoiler",  and
it further biases development motivations towards features that make
nice bullets (even if they're seldom used) vs important infrastructure
which may invisibly improve usage every day or keeps the network
secure and worth having.  "Of course I want the fastest startup! Why
would I choose anything else?" "What do you mean all my bitcoin is
gone because the four remaining full nodes were taken over and reorged
it all?"

I wouldn't expect any really important features which don't have
complicated compromises attached to them to be omitted from all
clients for all that long.

Basically matrixes make bad decision making fast, and by making it
fast it's more attractive than careful decision making that always
takes time.  The text is nice because it contextualizes the complete
feature set and helps you understand why different clients exist, what
problems they attempt to solve, and what compromises they make. ...
without making the unrealistic demand of the user they they know how
to fairly weigh the value of technical and sometimes subtle issues.


[1] https://en.bitcoin.it/wiki/Clients



From laanwj at gmail.com  Tue Jul 10 07:12:15 2012
From: laanwj at gmail.com (Wladimir)
Date: Tue, 10 Jul 2012 09:12:15 +0200
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <CAAS2fgT10nf=8TJxYrT4WBNdYUiSU7qQNDTjjbTSuMktn2QVpw@mail.gmail.com>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
	<1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CAAS2fgQRo4swDTQjPE0PmnpZ9uS+TDNQdOR6q4K70xsNJY9RfQ@mail.gmail.com>
	<1341857882.56956.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CANEZrP1vwDubXrY3eoq4P4SAN=GK06iVaVx4pMWZKmBwQc9awg@mail.gmail.com>
	<4FFB5A7E.7020604@justmoon.de>
	<CANEZrP3Y3nvRwiPw66bDhp01JnE-zVurw5MnxPzR-bi5H8h4Aw@mail.gmail.com>
	<4FFB9537.8040909@justmoon.de> <4FFB9707.9020307@gmail.com>
	<CAAS2fgT10nf=8TJxYrT4WBNdYUiSU7qQNDTjjbTSuMktn2QVpw@mail.gmail.com>
Message-ID: <CA+s+GJAknsVKZf-xhPK1URKBcvMPQW1MSTnxnu8gPPtxw_KAMw@mail.gmail.com>

Just my two cents -- I'm against removing the overview page or moving it to
the wiki. I think other open source clients deserve a mention on the
bitcoin.org page.

Many new people are looking for a good Android client, for example. Rather
than randomly searching on Google or the app store, it's much safer to
follow the link from bitcoin.org. Others are looking for a light clients
because they think the Satoshi one is too heavy.

Again, rather than following random links on a search engine or wiki (not
all users have the common sense required for this) it may be better if they
follow links "audited" (or at least discussed) by this community. I agree
with Jim here.

The reference client is already first in that it can be downloaded directly
from the main page of bitcoin.org. That should stay that way for the
considerable future, as it's the most proven.  The position in the alt
clients list is less important. That said, I'm not a big fan of randomized
order because it's confusing. Come back to the page and it's different.
Some other neutral ordering is probably possible.

Wladimir

On Tue, Jul 10, 2012 at 5:05 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> On Mon, Jul 9, 2012 at 10:44 PM, Alan Reiner <etotheipi at gmail.com> wrote:
> > What a feature matrix is good at though is it allows you to very quickly
> > find the specific feature or general criteria you're looking for without
> > reading through all of the text. So it might be a useful addition maybe
> > not on Bitcoin.org, but certainly on the wiki.
>
> I'm generally not a fan of feature matrixes, they encourage "checkbox
> decision making"? which is seldom very good for the decider, though
> it's much loved by the marketing department that puts together the
> matrix.  But just becase something is loved by marketing departments
> for its ability to set the agenda in variously biased ways doesn't
> mean its a great thing to emulate.
>
> Take the matrix Luke linked to for example[1].  Now imagine that we
> tunnel MyBitcoin from a year ago and drop it into that table.  It
> would have every light green, except 'encryption' (which wouldn't have
> been green for bitcoin-qt then either). It would basically be the
> dominant option by the matrix comparison, and this is without any
> lobbying to get MyBitcoin specific features (like their shopping chart
> interface) added, not to mention the "_vanishes with everyone's
> money_" feature.
>
> I don't think I'm being unreasonable to say that if you could drop in
> something that retrospectively cost people a lot into your decision
> matrix and it comes out on top you're doing something wrong.
>
> In tables like this significant differences like "a remote hacker can
> rob you" get reduced to equal comparison with "chrome spoiler",  and
> it further biases development motivations towards features that make
> nice bullets (even if they're seldom used) vs important infrastructure
> which may invisibly improve usage every day or keeps the network
> secure and worth having.  "Of course I want the fastest startup! Why
> would I choose anything else?" "What do you mean all my bitcoin is
> gone because the four remaining full nodes were taken over and reorged
> it all?"
>
> I wouldn't expect any really important features which don't have
> complicated compromises attached to them to be omitted from all
> clients for all that long.
>
> Basically matrixes make bad decision making fast, and by making it
> fast it's more attractive than careful decision making that always
> takes time.  The text is nice because it contextualizes the complete
> feature set and helps you understand why different clients exist, what
> problems they attempt to solve, and what compromises they make. ...
> without making the unrealistic demand of the user they they know how
> to fairly weigh the value of technical and sometimes subtle issues.
>
>
> [1] https://en.bitcoin.it/wiki/Clients
>
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and
> threat landscape has changed and how IT managers can respond. Discussions
> will include endpoint security, mobile security and the latest in malware
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120710/7aee681d/attachment.html>

From moon at justmoon.de  Tue Jul 10 09:11:59 2012
From: moon at justmoon.de (Stefan Thomas)
Date: Tue, 10 Jul 2012 11:11:59 +0200
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <CAAS2fgT10nf=8TJxYrT4WBNdYUiSU7qQNDTjjbTSuMktn2QVpw@mail.gmail.com>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
	<1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CAAS2fgQRo4swDTQjPE0PmnpZ9uS+TDNQdOR6q4K70xsNJY9RfQ@mail.gmail.com>
	<1341857882.56956.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CANEZrP1vwDubXrY3eoq4P4SAN=GK06iVaVx4pMWZKmBwQc9awg@mail.gmail.com>
	<4FFB5A7E.7020604@justmoon.de>
	<CANEZrP3Y3nvRwiPw66bDhp01JnE-zVurw5MnxPzR-bi5H8h4Aw@mail.gmail.com>
	<4FFB9537.8040909@justmoon.de> <4FFB9707.9020307@gmail.com>
	<CAAS2fgT10nf=8TJxYrT4WBNdYUiSU7qQNDTjjbTSuMktn2QVpw@mail.gmail.com>
Message-ID: <4FFBF1DF.8070203@justmoon.de>

> I wouldn't expect any really important features which don't have
> complicated compromises attached to them to be omitted from all
> clients for all that long.

True, it's those compromises that people should base their decision on.
To make that easier was the motivation for me to suggest feature
matrices in the first place.

Right now if I read Electrum's description, it doesn't say anything
about the tradeoffs with a lightweight client like the slightly weaker
privacy guarantees. At best I could deduce that from the fact that
unlike Bitcoin-Qt it doesn't explicitly list privacy as an advantage.

So applying the same "MyBitcoin test" to the current Bitcoin Clients
page and if you want to be fair, we'd have to assume that if it was
indeed included it would also just be a short pitch listing only pros
and no cons. So it would say something like: "MyBitcoin starts instantly
and is really easy to use and great for beginners." etc.

Obviously if you compare a bad matrix to good short descriptions and
vice versa you'll get the conclusion you're trying to get.

I think Alan had the best idea - let's have the Clients page as it is
and have it link to the wiki for those who want a more detailed
comparison. On the wiki page we can then have explanations of the basic
client types, separate matrices for features and for security/privacy
and whatever else might be useful to know when choosing a client. Then
users who don't really care aren't bothered by "too much information"
and users who do can easily click through and find out about the
different tradeoffs.

On 7/10/2012 5:05 AM, Gregory Maxwell wrote:
> On Mon, Jul 9, 2012 at 10:44 PM, Alan Reiner <etotheipi at gmail.com> wrote:
>> What a feature matrix is good at though is it allows you to very quickly
>> find the specific feature or general criteria you're looking for without
>> reading through all of the text. So it might be a useful addition maybe
>> not on Bitcoin.org, but certainly on the wiki.
> I'm generally not a fan of feature matrixes, they encourage "checkbox
> decision making"? which is seldom very good for the decider, though
> it's much loved by the marketing department that puts together the
> matrix.  But just becase something is loved by marketing departments
> for its ability to set the agenda in variously biased ways doesn't
> mean its a great thing to emulate.
>
> Take the matrix Luke linked to for example[1].  Now imagine that we
> tunnel MyBitcoin from a year ago and drop it into that table.  It
> would have every light green, except 'encryption' (which wouldn't have
> been green for bitcoin-qt then either). It would basically be the
> dominant option by the matrix comparison, and this is without any
> lobbying to get MyBitcoin specific features (like their shopping chart
> interface) added, not to mention the "_vanishes with everyone's
> money_" feature.
>
> I don't think I'm being unreasonable to say that if you could drop in
> something that retrospectively cost people a lot into your decision
> matrix and it comes out on top you're doing something wrong.
>
> In tables like this significant differences like "a remote hacker can
> rob you" get reduced to equal comparison with "chrome spoiler",  and
> it further biases development motivations towards features that make
> nice bullets (even if they're seldom used) vs important infrastructure
> which may invisibly improve usage every day or keeps the network
> secure and worth having.  "Of course I want the fastest startup! Why
> would I choose anything else?" "What do you mean all my bitcoin is
> gone because the four remaining full nodes were taken over and reorged
> it all?"
>
> I wouldn't expect any really important features which don't have
> complicated compromises attached to them to be omitted from all
> clients for all that long.
>
> Basically matrixes make bad decision making fast, and by making it
> fast it's more attractive than careful decision making that always
> takes time.  The text is nice because it contextualizes the complete
> feature set and helps you understand why different clients exist, what
> problems they attempt to solve, and what compromises they make. ...
> without making the unrealistic demand of the user they they know how
> to fairly weigh the value of technical and sometimes subtle issues.
>
>
> [1] https://en.bitcoin.it/wiki/Clients
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and 
> threat landscape has changed and how IT managers can respond. Discussions 
> will include endpoint security, mobile security and the latest in malware 
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development





From nanotube at gmail.com  Fri Jul 13 15:20:58 2012
From: nanotube at gmail.com (Daniel F)
Date: Fri, 13 Jul 2012 11:20:58 -0400
Subject: [Bitcoin-development] Random order for clients page
In-Reply-To: <4FFBF1DF.8070203@justmoon.de>
References: <1341849295.94710.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<CAAS2fgRd0gqrxXs4Le6nydYBaG7EO=T7FrtX6QZpg3aJtAxSvg@mail.gmail.com>
	<1341850157.18601.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CAAS2fgQRo4swDTQjPE0PmnpZ9uS+TDNQdOR6q4K70xsNJY9RfQ@mail.gmail.com>
	<1341857882.56956.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<CANEZrP1vwDubXrY3eoq4P4SAN=GK06iVaVx4pMWZKmBwQc9awg@mail.gmail.com>
	<4FFB5A7E.7020604@justmoon.de>
	<CANEZrP3Y3nvRwiPw66bDhp01JnE-zVurw5MnxPzR-bi5H8h4Aw@mail.gmail.com>
	<4FFB9537.8040909@justmoon.de> <4FFB9707.9020307@gmail.com>
	<CAAS2fgT10nf=8TJxYrT4WBNdYUiSU7qQNDTjjbTSuMktn2QVpw@mail.gmail.com>
	<4FFBF1DF.8070203@justmoon.de>
Message-ID: <50003CDA.60205@gmail.com>

This discussion is quite bikesheddy, but (or thus? :) ) I will put in my
2c.

The main thing to think about, I think, is "what would be best for the
users". To that end, I suggest the following:

* I do think a page on bitcoin.org listing relatively major, and
relatively vetted, clients is a good idea. Removing it completely and
relegating it to a wiki page, which is likely to contain all sorts of
marginal crufty clients, would likely be a disservice to the users.

* Randomized order is likely also a disservice to the users. We should
list clients in order of "goodness", as determined by whoever(s) we
decide to put in charge of the page. This "goodness" should likely to be
some kind of weighted average of features, security, goodness for
bitcoin network, etc. [1]

** If randomized order is after all chosen, it should be done in
javascript client-side, rather than doing daily page reorgs. If people
without JS don't see random, it's not material at all.

* Prose vs. feature matrix: both have their good and bad points, as
discussed upthread. I think the users will be best served by a
combination of both:

** Prose descriptions of clients should deliberately include negative
points, not just let the user infer them by lack of corresponding
positive mention. (e.g. "This client has fast startup time. That means
you're completely trusting the server operator with your money.") This
task is left up to the person(s) in charge.

** A feature matrix, with carefully chosen and /well defined/
categories, /in addition to prose/ would likely also be of service to
the users. That could be left to the wiki though. The current wiki
clients page seems to be having a good go at it.[2]

** If we are targeting people who "don't know what they're doing", it
may be a good idea to have a 'decision assistant' type setup, where
users are asked several questions and are recommended clients based on
these answers. (This could be done in a static way by having a matrix of
questions.)


Finally - I'd say we're spending disproportionate developer resources on
this question, and if it were completely up to me, I'd resolve this
situation in the following quick-and-painless way: leave page as is, add
negative points to prose, link to wiki clients list. Estimated time to
completion: 1 hour (to think through which negative points to add).


[1] Meehl, 1954, clinical versus statistical prediction... (see also
Grove and Meehl, 1996; Sawyer, 1966) (and yes, despite the age of some
of this research, the conclusions have been surprisingly robust and
timeproof.)
[2] https://en.bitcoin.it/w/index.php?title=Clients&oldid=28615

-nanotube


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 227 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120713/7bf3ec40/attachment.sig>

From mark at monetize.io  Fri Jul 13 20:41:40 2012
From: mark at monetize.io (Mark Friedenbach)
Date: Fri, 13 Jul 2012 13:41:40 -0700
Subject: [Bitcoin-development] Gitian builds on all platforms using
	Vagrant/VirtualBox (GH #1597)
Message-ID: <CACh7GpH4MbT7gG-p0OONvi=HfLwE8ud4e3m86Xdqkb-MEjz9XA@mail.gmail.com>

I had some difficulty setting up and maintaining my own gitian build
system. So in the time-honored tradition of scratching my own itch, I
recorded the necessary steps into a makefile so that doing a gitian build
is a simple as "cd contrib/vagrant && make", on any platform provided that
you have the necessary dependencies installed.

I hope that others find this useful. I have submitted these scripts as
pull-request #1597 on github.

Cheers,
Mark Friedenbach
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120713/4a269bde/attachment.html>

From laanwj at gmail.com  Sat Jul 14 07:40:13 2012
From: laanwj at gmail.com (Wladimir)
Date: Sat, 14 Jul 2012 09:40:13 +0200
Subject: [Bitcoin-development] Gitian builds on all platforms using
 Vagrant/VirtualBox (GH #1597)
In-Reply-To: <CACh7GpH4MbT7gG-p0OONvi=HfLwE8ud4e3m86Xdqkb-MEjz9XA@mail.gmail.com>
References: <CACh7GpH4MbT7gG-p0OONvi=HfLwE8ud4e3m86Xdqkb-MEjz9XA@mail.gmail.com>
Message-ID: <CA+s+GJCRJ=8v0tg7FfYhk9B9HyMLgpkhnW4XDgWWe2=3EMR22g@mail.gmail.com>

Mark,

That's a great development. Virtualbox has less requirements with regard to
specific CPU flags, KVM is really slow without hw virtualization whereas
Virtualbox is usable on older CPUs.

It also means I can do gitian builds together with other running virtualbox
instances. KVM and Virtualbox don't play along well.

Wladimir

On Fri, Jul 13, 2012 at 10:41 PM, Mark Friedenbach <mark at monetize.io> wrote:

> I had some difficulty setting up and maintaining my own gitian build
> system. So in the time-honored tradition of scratching my own itch, I
> recorded the necessary steps into a makefile so that doing a gitian build
> is a simple as "cd contrib/vagrant && make", on any platform provided that
> you have the necessary dependencies installed.
>
> I hope that others find this useful. I have submitted these scripts as
> pull-request #1597 on github.
>
> Cheers,
> Mark Friedenbach
>
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and
> threat landscape has changed and how IT managers can respond. Discussions
> will include endpoint security, mobile security and the latest in malware
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120714/224252de/attachment.html>

From mike at plan99.net  Sun Jul 15 12:39:50 2012
From: mike at plan99.net (Mike Hearn)
Date: Sun, 15 Jul 2012 14:39:50 +0200
Subject: [Bitcoin-development] Accepting broken QRcodes
Message-ID: <CANEZrP1=VLpRL5cWTS1gQnYmg0eChBmwWd_-i0S5Zqm3r6Jg5g@mail.gmail.com>

Hi bitcoin-development,

blockchain.info generates non-BIP-compliant URIs in its QRcodes, as
does its iPhone app. They are of the form bitcoin://address not
bitcoin:address.

I asked Ben to fix this (social networks don't parse QRcodes after
all), but after explaining that social networks don't parse URLs
without :// in them, he stopped responding to my emails. So I've gone
ahead and added support for reading these types of URLs to bitcoinj,
in the interests of "just works" interoperability.

This mail is just a heads up in case anyone else wants to do the same
thing. Hopefully at some point, Ben will stop generating such QRcodes
and we can remove these hacks and get back to BIP compliance.



From zgenjix at yahoo.com  Sun Jul 15 17:52:56 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Sun, 15 Jul 2012 10:52:56 -0700 (PDT)
Subject: [Bitcoin-development] bitcoin.org - remove hackathon
Message-ID: <1342374776.83467.YahooMailNeo@web121004.mail.ne1.yahoo.com>

Hi,

Can I remove the hackathon from bitcoin.org and put up the conference instead?




From vladimir at marchenko.co.uk  Sun Jul 15 19:15:42 2012
From: vladimir at marchenko.co.uk (Vladimir Marchenko)
Date: Sun, 15 Jul 2012 20:15:42 +0100
Subject: [Bitcoin-development] bitcoin.org - remove hackathon
In-Reply-To: <1342374776.83467.YahooMailNeo@web121004.mail.ne1.yahoo.com>
References: <1342374776.83467.YahooMailNeo@web121004.mail.ne1.yahoo.com>
Message-ID: <CACv5nHLyoabw=NmN2dP0=FUmsUagjv-nUiqpF2XD4T8FTy-nmA@mail.gmail.com>

Hi,

 Why bitcoin.org promotes some private enterprises and not others?
May, I for example, have 20% of over the fold space on bitcoin.org
homepage for Bitcoin Magazine prmotions? Pretty please? </sarcasm>

Kind Regard,
Vladimir Marchenko.


On 15 July 2012 18:52, Amir Taaki <zgenjix at yahoo.com> wrote:
> Hi,
>
> Can I remove the hackathon from bitcoin.org and put up the conference instead?
>
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and
> threat landscape has changed and how IT managers can respond. Discussions
> will include endpoint security, mobile security and the latest in malware
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From andreas at schildbach.de  Mon Jul 16 08:16:58 2012
From: andreas at schildbach.de (Andreas Schildbach)
Date: Mon, 16 Jul 2012 10:16:58 +0200
Subject: [Bitcoin-development] Accepting broken QRcodes
In-Reply-To: <CANEZrP1=VLpRL5cWTS1gQnYmg0eChBmwWd_-i0S5Zqm3r6Jg5g@mail.gmail.com>
References: <CANEZrP1=VLpRL5cWTS1gQnYmg0eChBmwWd_-i0S5Zqm3r6Jg5g@mail.gmail.com>
Message-ID: <ju0ilq$7q7$2@dough.gmane.org>

> I asked Ben to fix this (social networks don't parse QRcodes after
> all), but after explaining that social networks don't parse URLs
> without :// in them, he stopped responding to my emails. So I've gone
> ahead and added support for reading these types of URLs to bitcoinj,
> in the interests of "just works" interoperability.
> 
> This mail is just a heads up in case anyone else wants to do the same
> thing. Hopefully at some point, Ben will stop generating such QRcodes
> and we can remove these hacks and get back to BIP compliance.

The problem with this "accept everything even if broken" approach is
that people will probably never fix the broken stuff. So we likely end
up with a fragmented de-facto standard.

That does not mean I am totally against accepting broken URLs, but there
should be at least a promise that they will be fixed at the source.




From g.rowe at froot.co.uk  Mon Jul 16 08:52:34 2012
From: g.rowe at froot.co.uk (Gary Rowe)
Date: Mon, 16 Jul 2012 09:52:34 +0100
Subject: [Bitcoin-development] Accepting broken QRcodes
In-Reply-To: <ju0ilq$7q7$2@dough.gmane.org>
References: <CANEZrP1=VLpRL5cWTS1gQnYmg0eChBmwWd_-i0S5Zqm3r6Jg5g@mail.gmail.com>
	<ju0ilq$7q7$2@dough.gmane.org>
Message-ID: <CAKm8k+2UTofgBOCZ_VtHPJdPs4w3oEv4bSDzFbW4M2tw9ZtjRg@mail.gmail.com>

Is it worth having a few more people email Ben to ask him politely to fall
into line with the BIP? No point encouraging broken windows by not speaking
out.

On 16 July 2012 09:16, Andreas Schildbach <andreas at schildbach.de> wrote:

> > I asked Ben to fix this (social networks don't parse QRcodes after
> > all), but after explaining that social networks don't parse URLs
> > without :// in them, he stopped responding to my emails. So I've gone
> > ahead and added support for reading these types of URLs to bitcoinj,
> > in the interests of "just works" interoperability.
> >
> > This mail is just a heads up in case anyone else wants to do the same
> > thing. Hopefully at some point, Ben will stop generating such QRcodes
> > and we can remove these hacks and get back to BIP compliance.
>
> The problem with this "accept everything even if broken" approach is
> that people will probably never fix the broken stuff. So we likely end
> up with a fragmented de-facto standard.
>
> That does not mean I am totally against accepting broken URLs, but there
> should be at least a promise that they will be fixed at the source.
>
>
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and
> threat landscape has changed and how IT managers can respond. Discussions
> will include endpoint security, mobile security and the latest in malware
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120716/8f48a16b/attachment.html>

From laanwj at gmail.com  Mon Jul 16 09:02:46 2012
From: laanwj at gmail.com (Wladimir)
Date: Mon, 16 Jul 2012 11:02:46 +0200
Subject: [Bitcoin-development] Accepting broken QRcodes
In-Reply-To: <CAKm8k+2UTofgBOCZ_VtHPJdPs4w3oEv4bSDzFbW4M2tw9ZtjRg@mail.gmail.com>
References: <CANEZrP1=VLpRL5cWTS1gQnYmg0eChBmwWd_-i0S5Zqm3r6Jg5g@mail.gmail.com>
	<ju0ilq$7q7$2@dough.gmane.org>
	<CAKm8k+2UTofgBOCZ_VtHPJdPs4w3oEv4bSDzFbW4M2tw9ZtjRg@mail.gmail.com>
Message-ID: <CA+s+GJBPQWYy1oftKkndZ8FF1hTaL-Zoc3bO_c3=s_LNkW635g@mail.gmail.com>

But is he the only one using the broken URLs? It was my impression that
they were widespread already.

Wladimir

On Mon, Jul 16, 2012 at 10:52 AM, Gary Rowe <g.rowe at froot.co.uk> wrote:

> Is it worth having a few more people email Ben to ask him politely to fall
> into line with the BIP? No point encouraging broken windows by not speaking
> out.
>
>
> On 16 July 2012 09:16, Andreas Schildbach <andreas at schildbach.de> wrote:
>
>> > I asked Ben to fix this (social networks don't parse QRcodes after
>> > all), but after explaining that social networks don't parse URLs
>> > without :// in them, he stopped responding to my emails. So I've gone
>> > ahead and added support for reading these types of URLs to bitcoinj,
>> > in the interests of "just works" interoperability.
>> >
>> > This mail is just a heads up in case anyone else wants to do the same
>> > thing. Hopefully at some point, Ben will stop generating such QRcodes
>> > and we can remove these hacks and get back to BIP compliance.
>>
>> The problem with this "accept everything even if broken" approach is
>> that people will probably never fix the broken stuff. So we likely end
>> up with a fragmented de-facto standard.
>>
>> That does not mean I am totally against accepting broken URLs, but there
>> should be at least a promise that they will be fixed at the source.
>>
>>
>>
>> ------------------------------------------------------------------------------
>> Live Security Virtual Conference
>> Exclusive live event will cover all the ways today's security and
>> threat landscape has changed and how IT managers can respond. Discussions
>> will include endpoint security, mobile security and the latest in malware
>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
>
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and
> threat landscape has changed and how IT managers can respond. Discussions
> will include endpoint security, mobile security and the latest in malware
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120716/f35e14f8/attachment.html>

From g.rowe at froot.co.uk  Mon Jul 16 09:32:32 2012
From: g.rowe at froot.co.uk (Gary Rowe)
Date: Mon, 16 Jul 2012 10:32:32 +0100
Subject: [Bitcoin-development] Accepting broken QRcodes
In-Reply-To: <CA+s+GJBPQWYy1oftKkndZ8FF1hTaL-Zoc3bO_c3=s_LNkW635g@mail.gmail.com>
References: <CANEZrP1=VLpRL5cWTS1gQnYmg0eChBmwWd_-i0S5Zqm3r6Jg5g@mail.gmail.com>
	<ju0ilq$7q7$2@dough.gmane.org>
	<CAKm8k+2UTofgBOCZ_VtHPJdPs4w3oEv4bSDzFbW4M2tw9ZtjRg@mail.gmail.com>
	<CA+s+GJBPQWYy1oftKkndZ8FF1hTaL-Zoc3bO_c3=s_LNkW635g@mail.gmail.com>
Message-ID: <CAKm8k+3dZZmGTC_ezkgyC0UDwKnzXmiU3-x-8h_sRdJ12REFvQ@mail.gmail.com>

I'm sure that there are many but my Google Search-Fu is not strong enough
to build a query to identify how widespread they are.

Maybe once we have sufficient evidence to support the suspicion we should
post to the main developer forum asking for a cleanup. After all, a Bitcoin
URI starting bitcoin://<address> doesn't actually make much sense because
there is no hierarchy in Bitcoin - it's flat with only an address being a
mandatory element.

I don't want to be all anal about this, but looking at RFC 3986 #10 (
http://tools.ietf.org/html/rfc3986#page-10) it's pretty clear that
introducing a false hierarchy is breaking the specification since it
presumes the existence of a relative URI.

On 16 July 2012 10:02, Wladimir <laanwj at gmail.com> wrote:

> But is he the only one using the broken URLs? It was my impression that
> they were widespread already.
>
> Wladimir
>
>
> On Mon, Jul 16, 2012 at 10:52 AM, Gary Rowe <g.rowe at froot.co.uk> wrote:
>
>> Is it worth having a few more people email Ben to ask him politely to
>> fall into line with the BIP? No point encouraging broken windows by not
>> speaking out.
>>
>>
>> On 16 July 2012 09:16, Andreas Schildbach <andreas at schildbach.de> wrote:
>>
>>> > I asked Ben to fix this (social networks don't parse QRcodes after
>>> > all), but after explaining that social networks don't parse URLs
>>> > without :// in them, he stopped responding to my emails. So I've gone
>>> > ahead and added support for reading these types of URLs to bitcoinj,
>>> > in the interests of "just works" interoperability.
>>> >
>>> > This mail is just a heads up in case anyone else wants to do the same
>>> > thing. Hopefully at some point, Ben will stop generating such QRcodes
>>> > and we can remove these hacks and get back to BIP compliance.
>>>
>>> The problem with this "accept everything even if broken" approach is
>>> that people will probably never fix the broken stuff. So we likely end
>>> up with a fragmented de-facto standard.
>>>
>>> That does not mean I am totally against accepting broken URLs, but there
>>> should be at least a promise that they will be fixed at the source.
>>>
>>>
>>>
>>> ------------------------------------------------------------------------------
>>> Live Security Virtual Conference
>>> Exclusive live event will cover all the ways today's security and
>>> threat landscape has changed and how IT managers can respond. Discussions
>>> will include endpoint security, mobile security and the latest in malware
>>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
>>> _______________________________________________
>>> Bitcoin-development mailing list
>>> Bitcoin-development at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>
>>
>>
>> ------------------------------------------------------------------------------
>> Live Security Virtual Conference
>> Exclusive live event will cover all the ways today's security and
>> threat landscape has changed and how IT managers can respond. Discussions
>> will include endpoint security, mobile security and the latest in malware
>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120716/2096e804/attachment.html>

From thiagocmartinsc at gmail.com  Mon Jul 16 20:14:02 2012
From: thiagocmartinsc at gmail.com (=?ISO-2022-JP?B?TWFydGlueCAtIBskQiU4JSchPCVgJTobKEI=?=)
Date: Mon, 16 Jul 2012 17:14:02 -0300
Subject: [Bitcoin-development] Announcement: libcoin
In-Reply-To: <D55C3D18-8286-44E9-B877-6FCE7C05E980@ceptacle.com>
References: <D55C3D18-8286-44E9-B877-6FCE7C05E980@ceptacle.com>
Message-ID: <CAJSM8J1pTh4WdkZWB9tK-z6rpTr7auhY-2SBuq+9xW1gkowBGQ@mail.gmail.com>

Hi Michael!

 I would like to ask you one thing:

 1- Release a new version of Libcoin closest as possible with mainline
Bitcoin.

 I mean, do not add any extra code to it and also, do not change any stdout
/ stderr messages.

 How much do you think that this will cost?

 For the extra code: I'll need to run the "blockchain side" as Linux user
called "blockchain" and, each of my regular Linux user will have its own
wallet.dat file (without the blockchain).

Thanks!
Thiago
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120716/772d6188/attachment.html>

From jgarzik at exmulti.com  Mon Jul 16 23:47:02 2012
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Mon, 16 Jul 2012 19:47:02 -0400
Subject: [Bitcoin-development] bitcoin.org - remove hackathon
In-Reply-To: <1342374776.83467.YahooMailNeo@web121004.mail.ne1.yahoo.com>
References: <1342374776.83467.YahooMailNeo@web121004.mail.ne1.yahoo.com>
Message-ID: <CA+8xBpd1TZg45Tp5hDzLRGsgJ3bh2=CSxgqjN2WaBPv0i6MxVA@mail.gmail.com>

On Sun, Jul 15, 2012 at 1:52 PM, Amir Taaki <zgenjix at yahoo.com> wrote:
> Can I remove the hackathon from bitcoin.org and put up the conference instead?

ACK on removing outdated material

Vladimir does raise a fair point, though.  Hackathon seems appropriate
for bitcoin.org as it is focused on dev-related activities.  (full
disclosure: speaking at bitcoin2012.com)  The conference might or
might not be.  The conference does seem community focused, so I don't
object to it being on bitcoin.org...  But if consensus prefers
otherwise, that's OK too.

PS.  This seems like material for pull requests, which is preferred
over mailing list email + git push.  When working on the satoshi
client, we all ACK each other's pull req for anything beyond the
trivial.

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From luke at dashjr.org  Tue Jul 17 00:09:48 2012
From: luke at dashjr.org (Luke-Jr)
Date: Tue, 17 Jul 2012 00:09:48 +0000
Subject: [Bitcoin-development] bitcoin.org - remove hackathon
In-Reply-To: <CA+8xBpd1TZg45Tp5hDzLRGsgJ3bh2=CSxgqjN2WaBPv0i6MxVA@mail.gmail.com>
References: <1342374776.83467.YahooMailNeo@web121004.mail.ne1.yahoo.com>
	<CA+8xBpd1TZg45Tp5hDzLRGsgJ3bh2=CSxgqjN2WaBPv0i6MxVA@mail.gmail.com>
Message-ID: <201207170009.51016.luke@dashjr.org>

On Monday, July 16, 2012 11:47:02 PM Jeff Garzik wrote:
> Vladimir does raise a fair point, though.  Hackathon seems appropriate
> for bitcoin.org as it is focused on dev-related activities.  (full
> disclosure: speaking at bitcoin2012.com)  The conference might or
> might not be.  The conference does seem community focused, so I don't
> object to it being on bitcoin.org...  But if consensus prefers
> otherwise, that's OK too.

IMO, bitcoin.org is more community-focussed anyway.
How often do devs use the site, compared to GitHub etc?

Someone else made a pullreq for Bitcoin Magazine; I suggest(ed) that
for-profit organizations should be asked to pitch in some way or another.
Who should organize that, I don't know. If Bitcoin Consultancy/Amir is behind 
the conference, I suggest their/his development contributions should be 
sufficient in that respect.

> PS.  This seems like material for pull requests, which is preferred
> over mailing list email + git push.  When working on the satoshi
> client, we all ACK each other's pull req for anything beyond the
> trivial.

I concur, this should be discussed in a pullreq.



From zgenjix at yahoo.com  Tue Jul 17 09:17:57 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Tue, 17 Jul 2012 02:17:57 -0700 (PDT)
Subject: [Bitcoin-development] bitcoin.org - remove hackathon
In-Reply-To: <201207170009.51016.luke@dashjr.org>
References: <1342374776.83467.YahooMailNeo@web121004.mail.ne1.yahoo.com>
	<CA+8xBpd1TZg45Tp5hDzLRGsgJ3bh2=CSxgqjN2WaBPv0i6MxVA@mail.gmail.com>
	<201207170009.51016.luke@dashjr.org>
Message-ID: <1342516677.79507.YahooMailNeo@web121006.mail.ne1.yahoo.com>

OK, pull request seems good.

FYI we lost money on last year's conference, and are hoping to break even this year. The only people to make profit will be nefario and anyone else we give a share in it (people who help realise it). Otherwise money made goes towards next year's conference and paying for things to make a better conference (like Gavin wanted to attend but couldn't afford a ticket). It is not a commercial event, and I've been pushing to keep the sponsorship and community parts highly separated. Like I really do not wish to sell a speaker slot, but if I have to (to pay the bills) then it will be obvious due to scheduling and disclaimers that speakers are sponsors.



----- Original Message -----
From: Luke-Jr <luke at dashjr.org>
To: bitcoin-development at lists.sourceforge.net
Cc: Jeff Garzik <jgarzik at exmulti.com>; Amir Taaki <zgenjix at yahoo.com>
Sent: Tuesday, July 17, 2012 2:09 AM
Subject: Re: [Bitcoin-development] bitcoin.org - remove hackathon

On Monday, July 16, 2012 11:47:02 PM Jeff Garzik wrote:
> Vladimir does raise a fair point, though.? Hackathon seems appropriate
> for bitcoin.org as it is focused on dev-related activities.? (full
> disclosure: speaking at bitcoin2012.com)? The conference might or
> might not be.? The conference does seem community focused, so I don't
> object to it being on bitcoin.org...? But if consensus prefers
> otherwise, that's OK too.

IMO, bitcoin.org is more community-focussed anyway.
How often do devs use the site, compared to GitHub etc?

Someone else made a pullreq for Bitcoin Magazine; I suggest(ed) that
for-profit organizations should be asked to pitch in some way or another.
Who should organize that, I don't know. If Bitcoin Consultancy/Amir is behind 
the conference, I suggest their/his development contributions should be 
sufficient in that respect.

> PS.? This seems like material for pull requests, which is preferred
> over mailing list email + git push.? When working on the satoshi
> client, we all ACK each other's pull req for anything beyond the
> trivial.

I concur, this should be discussed in a pullreq.




From zgenjix at yahoo.com  Tue Jul 17 09:19:38 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Tue, 17 Jul 2012 02:19:38 -0700 (PDT)
Subject: [Bitcoin-development] Berlin Hackathon
Message-ID: <1342516778.7448.YahooMailNeo@web121001.mail.ne1.yahoo.com>

Video from the event: http://www.youtube.com/watch?v=EQ2rb4pHH1g


The Hackathon is over, thanks for all the participants and sponsors! I 
had loads of fun, and there were lots of great ideas flying around!

Thanks especially to:

- IN-Berlin, for providing the space to hold the hackathon!
- Sponsors: bitstamp.net, bitcoin2012.com and localbitcoins.com
- Room77 (the restaurant at the end of capitalism), for hosting the afterparty and the burgers & pampero 
- Jury: yossarian + other people who attended the presentations 

The results - winner first

1. Offline transactions for BitcoinJ/Android bitcoin wallet: Andreas Schildbach and grazcoin
- Ability for Android Wallet to do offline transactions
2. Bitcoin Pong: genjix
- Multiplayer pong, where you can win (or lose) bitcoins 
3. acceptbit.com: Jeremias Kangas and Stefan Thomas
- an ultra-safe merchant tool, where you can accept payments without sharing your private keys 
4. BitcoinJ Multisig: yellowhat and PK
- way to do multisig transactions for BitcoinJ/Android
5. Double-spend monitor: genjix
- tool to monitor double spends
6. Bitcoin-autosave: Mike Hearn
- BitcoinJ improvements (Mike did also loads of other stuff, and helped with winner project too)
7. Live-calculator: genjix
- Tool for btc accepting restaurants
8. Bitcoin mages: genjix
- Strategy game, where you play for bitcoins
9. Embed block message: genjix
- simple tool for embedding messages in block chain

Source code

genjix: https://gitorious.org/bitcoin-hackathon
acceptbit.com: https://github.com/kangasbros/electrumpos
Bitcoin Wallet: https://github.com/livne/Bitcoin-Wallet-for-Android (branch hackathon)

Other

Participants, send jeremias your bitcoin addresses please 

The next hackathon will be organized before bitcoin london conference, Wed 12th and Thur 13th september, london. 



From andreas at petersson.at  Tue Jul 17 09:25:17 2012
From: andreas at petersson.at (Andreas Petersson)
Date: Tue, 17 Jul 2012 11:25:17 +0200
Subject: [Bitcoin-development] bitcoin.org - remove hackathon
In-Reply-To: <1342516677.79507.YahooMailNeo@web121006.mail.ne1.yahoo.com>
References: <1342374776.83467.YahooMailNeo@web121004.mail.ne1.yahoo.com>
	<CA+8xBpd1TZg45Tp5hDzLRGsgJ3bh2=CSxgqjN2WaBPv0i6MxVA@mail.gmail.com>
	<201207170009.51016.luke@dashjr.org>
	<1342516677.79507.YahooMailNeo@web121006.mail.ne1.yahoo.com>
Message-ID: <50052F7D.10103@petersson.at>

Am 17.07.2012 11:17, schrieb Amir Taaki:
> Like I really do not wish to sell a speaker slot, but if I have to (to pay the bills) then it will be obvious due to scheduling and disclaimers that speakers are sponsors.
>
>
Personally, i really don't mind sponsored speakers. If they have 
somewhat relevant topics they keep the event from becoming a "circlejerk".
for example i would really like to hear about payments innovation 
outside bitcoin.



From zgenjix at yahoo.com  Tue Jul 17 09:54:15 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Tue, 17 Jul 2012 02:54:15 -0700 (PDT)
Subject: [Bitcoin-development] bitcoin.org - remove hackathon
In-Reply-To: <50052F7D.10103@petersson.at>
References: <1342374776.83467.YahooMailNeo@web121004.mail.ne1.yahoo.com>
	<CA+8xBpd1TZg45Tp5hDzLRGsgJ3bh2=CSxgqjN2WaBPv0i6MxVA@mail.gmail.com>
	<201207170009.51016.luke@dashjr.org>
	<1342516677.79507.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<50052F7D.10103@petersson.at>
Message-ID: <1342518855.14043.YahooMailNeo@web121003.mail.ne1.yahoo.com>

Yes, but then they should not be sponsors.

There's a very good reason why Wikipedia does not have advertisements. That is, the fear of advertisers influence on the neutral content. It is inevitably a corrupting influence. I want a good fun conference like the hackathon we just held.



----- Original Message -----
From: Andreas Petersson <andreas at petersson.at>
To: bitcoin-development at lists.sourceforge.net
Cc: 
Sent: Tuesday, July 17, 2012 11:25 AM
Subject: Re: [Bitcoin-development] bitcoin.org - remove hackathon

Am 17.07.2012 11:17, schrieb Amir Taaki:
> Like I really do not wish to sell a speaker slot, but if I have to (to pay the bills) then it will be obvious due to scheduling and disclaimers that speakers are sponsors.
>
>
Personally, i really don't mind sponsored speakers. If they have 
somewhat relevant topics they keep the event from becoming a "circlejerk".
for example i would really like to hear about payments innovation 
outside bitcoin.

------------------------------------------------------------------------------
Live Security Virtual Conference
Exclusive live event will cover all the ways today's security and 
threat landscape has changed and how IT managers can respond. Discussions 
will include endpoint security, mobile security and the latest in malware 
threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From zgenjix at yahoo.com  Tue Jul 17 10:42:07 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Tue, 17 Jul 2012 03:42:07 -0700 (PDT)
Subject: [Bitcoin-development] Electrum mailing list
Message-ID: <1342521727.92473.YahooMailNeo@web121005.mail.ne1.yahoo.com>

https://lists.sourceforge.net/lists/listinfo/electrum-discuss




From zgenjix at yahoo.com  Wed Jul 18 16:04:45 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Wed, 18 Jul 2012 09:04:45 -0700 (PDT)
Subject: [Bitcoin-development] Bitcoin Conference: Call For Papers open
Message-ID: <1342627485.53921.YahooMailNeo@web121005.mail.ne1.yahoo.com>

Hi,

I'm opening the call for papers. It's about time to move forwards with this already. Sorry for the delays.

Email proposals to genjix at bitcoin2012.com

Speaker list: https://sites.google.com/a/bitcoin2012.com/homepage/speakers



From mike at plan99.net  Sat Jul 21 11:45:28 2012
From: mike at plan99.net (Mike Hearn)
Date: Sat, 21 Jul 2012 13:45:28 +0200
Subject: [Bitcoin-development] New P2P commands for diagnostics,
	SPV clients
In-Reply-To: <1340132998.6065.7.camel@bmthinkpad>
References: <CA+8xBpecVQcTTbPxUm_3_GWC99dEd4=-VFWb+QT6jUy4rg8U4w@mail.gmail.com>
	<CANEZrP0kNZDByHpK2=UjP+ag0X1KmqHxnJdm=e_pWMitP4QvvA@mail.gmail.com>
	<1339766346.31489.49.camel@bmthinkpad>
	<CANEZrP3jj2ymQPH50g2PvzZhRzTnUnCLUjvBYj8ndBCJsnGJ-w@mail.gmail.com>
	<1339771184.31489.53.camel@bmthinkpad>
	<CANEZrP0hTRbE9+VEa3eCzJkbHqa3u8tpdw7eDLBQQR6DBf2adw@mail.gmail.com>
	<1340132998.6065.7.camel@bmthinkpad>
Message-ID: <CANEZrP0ws6bGk5qmDCmRPMbwyNX+3W5BRNzZPn_Av-nqFPAqOw@mail.gmail.com>

One thing that occurred to me recently is that it'd be useful if
filters could contain exact matches as well as Bloom filters.

Specifically I'm thinking of things like my bond network proposal
where some outputs may be marked as special using script fragments
like "BOND" <data or hash of data> 2DROP.

This would allow systems that are only interested in data and
transactions relevant to bonds to exact-filter the chain on that
marker, and then when a transaction is discovered, add the hash of
that transaction to a parallel Bloom filter, ensuring you can see any
transactions that connect to it.

The spec as provided by Jeff doesn't specify how filters are matched
against transactions. I propose the following algorithm:

For each TX:
- Check if the hash of the tx itself matches the filter
- For each input:
  - For each script data element check if it is found in the filter
  - Check if the COutPoint.hash value is in the filter (let's you
select txns that connect to arbitrary txns of interest)
- For each output
  - For each script data element check if it is found in the filter



From zgenjix at yahoo.com  Sat Jul 21 12:44:07 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Sat, 21 Jul 2012 05:44:07 -0700 (PDT)
Subject: [Bitcoin-development] Merge branch on github
Message-ID: <1342874647.76249.YahooMailNeo@web121001.mail.ne1.yahoo.com>

Hey,

https://github.com/bitcoin/bitcoin.org/pull/46

I tried to keep it professional, and non spammy.




From mike at plan99.net  Sat Jul 21 18:49:54 2012
From: mike at plan99.net (Mike Hearn)
Date: Sat, 21 Jul 2012 20:49:54 +0200
Subject: [Bitcoin-development] LevelDB benchmarking
In-Reply-To: <CANEZrP2H4kutDaaXMKczGGwN8-BbQzNifUtP04COoe3ikyKE0A@mail.gmail.com>
References: <CANEZrP2xnsOHyH+a1g6qSNSx_g+TW-yvL0Due7PVr421U6kRLw@mail.gmail.com>
	<CAAS2fgTNqUeYy+oEFyQWrfs4Xyb=3NXutvCmLusknF-18JmFQg@mail.gmail.com>
	<CANEZrP2q9a_0rFh+oo6iUFF1goWs0OJO1xPvxC9zqNA-6VnFAQ@mail.gmail.com>
	<CABsx9T3pQFqL0xsvRfnixYEATO61qMCCDdLmtqZkbVLW0Vxytg@mail.gmail.com>
	<CANEZrP08NrCJM2gxNitXrLjuY6AusNULvkcheN_0MbgFQV_QXw@mail.gmail.com>
	<4FE0D167.7030506@justmoon.de>
	<CANEZrP3WHA7P+t2Jk+w1kBMk0QuqN+gBXeNMoAnj_rK=nor-qg@mail.gmail.com>
	<20120620113744.GA14695@vps7135.xlshosting.net>
	<CANEZrP3=0cJLjyUZ8FqmWXBRoiP-bzPzm14O=unmbDQ_=hHwVA@mail.gmail.com>
	<CANEZrP2H4kutDaaXMKczGGwN8-BbQzNifUtP04COoe3ikyKE0A@mail.gmail.com>
Message-ID: <CANEZrP372seRgMcD+iX-VGpXWCYEZJjxzEGj-qLbN=YQZ5v0tA@mail.gmail.com>

Stefan went and finished off this work by bringing it up on Windows,
so now there's a pull req for it:

  https://github.com/bitcoin/bitcoin/pull/1619



From jgarzik at exmulti.com  Sun Jul 22 19:16:59 2012
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Sun, 22 Jul 2012 15:16:59 -0400
Subject: [Bitcoin-development] [ANN] pynode: Simple bitcoin P2P node
Message-ID: <CA+8xBpcxHUqQCjwnS5C0Or--mjo8jaNrbR5rjT=BBAT2r9Vs4g@mail.gmail.com>

Github URL: https://github.com/jgarzik/pynode

pynode is a simple bitcoin P2P client, based on ArtForz' half-a-node,
which maintains a blockchain database and TX memory pool.

It is intended to be a useful base for another projects, such as
network monitoring nodes.

At present, it is mainly for developers and not end users.  Here is
what pynode does NOT do:

*    RPC
*    key management (wallet)
*    script verification
*    chain re-org

Here are the limited things that pynode can do at present:

*    Outgoing TCP connection to a single remote P2P node
*    Initial blockchain download
*    Maintain a transaction memory pool, with TX's removed as they are
confirmed in blocks
*    Maintain an indexed blockchain database


Over time it will become more capable, but this is an alpha quality
release for developers at present.

Contributions welcome!  It is intended to become a full, wallet-less
node over time (though if somebody wanted to contribute a wallet
module, that is OK too)

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From luke at dashjr.org  Sun Jul 22 20:52:25 2012
From: luke at dashjr.org (Luke-Jr)
Date: Sun, 22 Jul 2012 20:52:25 +0000
Subject: [Bitcoin-development] Reconsidering block version number use
Message-ID: <201207222052.28579.luke@dashjr.org>

It just occurred to me that the block version number could easily be used as a 
cheap "extra nonce" right now. Considering that we will probably see lots of 
ASIC miners running at 1 TH/s per rig before the end of 2012, it might be 
desirable to save the block version for this purpose.

The current block height in coinbase addition currently proposes to use block 
version 2. However, the protocol change is in fact to the coinbase 
transaction, not the block itself (which really doesn't have any extensibility 
without a hardfork anyway). Perhaps we should consider bumping the coinbase 
transaction version number to 2 for this instead?

Also, Jeff noticed that block 190192 has version==2 without a valid block 
height in the coinbase. I suspect this may be the result of combining the 
current blockheight-in-coinbase pullreq with P2Pool. This means that if we go 
forward with the version==2 marker, we will forever need to make an exception 
for that block. Moving the version==2 to the coinbase transaction version also 
means whoever makes that transaction (thus deciding whether to put the height 
in it or not) also sets the version number - instead of the block version 
coming from bitcoind and the coinbase transaction coming from P2Pool or other 
software.

Thoughts?

Luke



From grarpamp at gmail.com  Sun Jul 22 22:37:09 2012
From: grarpamp at gmail.com (grarpamp)
Date: Sun, 22 Jul 2012 18:37:09 -0400
Subject: [Bitcoin-development] Scalability issues
Message-ID: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>

Given a testbed: Pentium 4 1.8GHz single core, 2GB ram, FreeBSD 8,
disk is geli aes-128 + zfs sha-256, bitcoin 0.6.3, Tor proxy,
An estimate is made that by the end of the year bitcoin will
completely overrun the capabilities of this reasonable class of
machines.
It already takes a month to build a new blockchain, let alone keep up
with new incoming blocks.
Yes, it also has workstation duties, yet even if those were removed,
it would probably choke by mid 2013.

It would appear bitcoin has some *serious* scalability hurdles coming
down the road.
Most certainly if the user expects to independantly build, manage, and
trust their own blockchain.



From gavinandresen at gmail.com  Mon Jul 23 00:41:15 2012
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Sun, 22 Jul 2012 20:41:15 -0400
Subject: [Bitcoin-development] Reconsidering block version number use
In-Reply-To: <201207222052.28579.luke@dashjr.org>
References: <201207222052.28579.luke@dashjr.org>
Message-ID: <CABsx9T0JK9qBKZu7YWeQCBAjT1Ur05BQ26A5NdLCwD6Wuyc0nQ@mail.gmail.com>

> The current block height in coinbase addition currently proposes to use block
> version 2. However, the protocol change is in fact to the coinbase
> transaction, not the block itself (which really doesn't have any extensibility
> without a hardfork anyway). Perhaps we should consider bumping the coinbase
> transaction version number to 2 for this instead?

I'd thought about bumping the coinbase transaction version, but the
problem is if we want a smooth rollout then, during the rollout, every
time a new block comes in the percentage of the last 1,000 blocks that
support the new version has to be computed.

If that means looking in the coinbase transaction, then either the
last 1,000 coinbases have to be stored in memory or they have to be
fetched from disk. Which isn't a huge deal, unless we start
aggressively pruning spent transactions, and that coinbase 900 blocks
back got spent and pruned.

On Sun, Jul 22, 2012 at 4:52 PM, Luke-Jr <luke at dashjr.org> wrote:
> It just occurred to me that the block version number could easily be used as a
> cheap "extra nonce" right now. Considering that we will probably see lots of
> ASIC miners running at 1 TH/s per rig before the end of 2012, it might be
> desirable to save the block version for this purpose.

Hmm...  I think it'd be ok to give 3 of the 4 block version bytes as a
simple extranonce, so version=0x00000001 is what we have now, version
2 blocks are any with 0x02 in the low byte, 0x03 is version 3, etc.  I
don't think we'll go through 253 block versions before we're all dead.

That'd be 7 bytes of nonce in the block header, which is
  72,057,594,037,927,936  ~ 72 petahashes = 72,000 terahashes

So: the changes for version 2 blocks would be "has height in the
coinbase, and has a 1-byte version number with a 3-byte extranonce."

> Also, Jeff noticed that block 190192 has version==2 without a valid block
> height in the coinbase. I suspect this may be the result of combining the
> current blockheight-in-coinbase pullreq with P2Pool. This means that if we go
> forward with the version==2 marker, we will forever need to make an exception
> for that block.

No, the rules are "enforce the rules when the chain has a
super-majority."  Since block 190192 is in a part of the chain with
zero other version==2 blocks, the height-in-the-coinbase rule will not
be enforced.

-- 
--
Gavin Andresen



From luke at dashjr.org  Mon Jul 23 00:57:48 2012
From: luke at dashjr.org (Luke-Jr)
Date: Mon, 23 Jul 2012 00:57:48 +0000
Subject: [Bitcoin-development] Reconsidering block version number use
In-Reply-To: <CABsx9T0JK9qBKZu7YWeQCBAjT1Ur05BQ26A5NdLCwD6Wuyc0nQ@mail.gmail.com>
References: <201207222052.28579.luke@dashjr.org>
	<CABsx9T0JK9qBKZu7YWeQCBAjT1Ur05BQ26A5NdLCwD6Wuyc0nQ@mail.gmail.com>
Message-ID: <201207230057.50735.luke@dashjr.org>

On Monday, July 23, 2012 12:41:15 AM Gavin Andresen wrote:
> > The current block height in coinbase addition currently proposes to use
> > block version 2. However, the protocol change is in fact to the coinbase
> > transaction, not the block itself (which really doesn't have any
> > extensibility without a hardfork anyway). Perhaps we should consider
> > bumping the coinbase transaction version number to 2 for this instead?
> 
> I'd thought about bumping the coinbase transaction version, but the
> problem is if we want a smooth rollout then, during the rollout, every
> time a new block comes in the percentage of the last 1,000 blocks that
> support the new version has to be computed.
> 
> If that means looking in the coinbase transaction, then either the
> last 1,000 coinbases have to be stored in memory or they have to be
> fetched from disk. Which isn't a huge deal, unless we start
> aggressively pruning spent transactions, and that coinbase 900 blocks
> back got spent and pruned.

Any reason CBlockIndex couldn't cache the coinbase version?

> On Sun, Jul 22, 2012 at 4:52 PM, Luke-Jr <luke at dashjr.org> wrote:
> > It just occurred to me that the block version number could easily be used
> > as a cheap "extra nonce" right now. Considering that we will probably
> > see lots of ASIC miners running at 1 TH/s per rig before the end of
> > 2012, it might be desirable to save the block version for this purpose.
> 
> Hmm...  I think it'd be ok to give 3 of the 4 block version bytes as a
> simple extranonce, so version=0x00000001 is what we have now, version
> 2 blocks are any with 0x02 in the low byte, 0x03 is version 3, etc.  I
> don't think we'll go through 253 block versions before we're all dead.
> 
> That'd be 7 bytes of nonce in the block header, which is
>   72,057,594,037,927,936  ~ 72 petahashes = 72,000 terahashes
> 
> So: the changes for version 2 blocks would be "has height in the
> coinbase, and has a 1-byte version number with a 3-byte extranonce."

That sounds workable.

> > Also, Jeff noticed that block 190192 has version==2 without a valid block
> > height in the coinbase. I suspect this may be the result of combining the
> > current blockheight-in-coinbase pullreq with P2Pool. This means that if
> > we go forward with the version==2 marker, we will forever need to make
> > an exception for that block.
> 
> No, the rules are "enforce the rules when the chain has a
> super-majority."  Since block 190192 is in a part of the chain with
> zero other version==2 blocks, the height-in-the-coinbase rule will not
> be enforced.

I was thinking more of the end-game of changing the rule to simply "if 
version==2, require the height in coinbase" after the point of no return is 
met without any infringement.



From jgarzik at exmulti.com  Mon Jul 23 06:07:39 2012
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Mon, 23 Jul 2012 02:07:39 -0400
Subject: [Bitcoin-development] Coinbase script parse failures
Message-ID: <CA+8xBpfMRSmw2bPuR2yy8jffKiSVvLfZzPyfByvMThMV-xh84A@mail.gmail.com>

While writing the script engine for pynode, I ran a test to validate
my script tokenizer -- a python script which does nothing more than
split up scriptPubKey and scriptSig into component opcodes and data
elements.  No execution, just tokenization of the script's data
stream.

Scanning the entire blockchain, my script found over 8,000
tokenization failures, and 100% of those were in coinbase
transactions' scriptSig.  The scripts used to generate this can be
found at https://github.com/jgarzik/pynode

The following data dump are just the first few, and most recent few,
of the invalid scripts I found in the blockchain:

Scanning block #142312 000000000000046acff93b0e76cd10490551bf871ce9ac9fad62e67a0
7ff1d1e (1 tx)
   TX 50cfd3361f7162b3c0c00dacd3d0e4ddf61e8ec0c51bfa54c4ca0e61876810a9
      txin 0 parse failed
Scanning block #142357 0000000000000743c432f84ad688b7b60d1474ccd7baa3d762df0b3f5
1205712 (1 tx)
   TX 587da4d4870515e57efc27623aa92fae0b7aef5908162de57fef0bbe6382be73
      txin 0 parse failed
Scanning block #143014 00000000000007fe6ecd20a8c454cd43c78d912b499c46a1179e30f7c
ff002b3 (1 tx)
   TX 4c8f43c5115c5f29f3761176fa59cde2de2ad976efcbc5faae8ee79fa5dd6264
      txin 0 parse failed
...
Scanning block #190315 00000000000006a0bc3be527033c02d3bcfa72af2f4213c4b0feec923
9573342 (336 tx)
   TX f0ba80ce080eb49148b69c47d744bbb85e4e07e4e4d0273b402c0989d79c359c
      txin 0 parse failed
Scanning block #190321 00000000000001c3bacc869917cacdafb6e00c552ac294835107b574a
44a0362 (38 tx)
   TX 4c91f5ad0616df92165819902d0b117d9e68345f5fe964de6146f89838b9295e
      txin 0 parse failed
Scanning block #190331 00000000000000e3d3eaf93600684b085df7d58f84ef952c91e84eb4a
251d5d8 (128 tx)
   TX 5ee371d65e323934570566b1d92dceb8456e887814da8ef2a53971683bd11da4
      txin 0 parse failed

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From theymos at mm.st  Mon Jul 23 06:53:24 2012
From: theymos at mm.st (theymos)
Date: Mon, 23 Jul 2012 01:53:24 -0500
Subject: [Bitcoin-development] Coinbase script parse failures
In-Reply-To: <CA+8xBpfMRSmw2bPuR2yy8jffKiSVvLfZzPyfByvMThMV-xh84A@mail.gmail.com>
References: <CA+8xBpfMRSmw2bPuR2yy8jffKiSVvLfZzPyfByvMThMV-xh84A@mail.gmail.com>
Message-ID: <1343026404.32002.140661105397353.75990627@webmail.messagingengine.com>

Coinbase scriptSigs aren't required to be well-formed. They're
never executed.



From raphbot at gmail.com  Mon Jul 23 07:23:45 2012
From: raphbot at gmail.com (Raphael NICOLLE)
Date: Mon, 23 Jul 2012 09:23:45 +0200
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
Message-ID: <500CFC01.2070802@gmail.com>

Hello,

Even though I'm not a dev, I can't agree more, and would like to know if 
they are expected steps being taken, some fixes coming, or whatever?

Thank you all for your hard work.
Raphael

On 07/23/2012 12:37 AM, grarpamp wrote:
> Given a testbed: Pentium 4 1.8GHz single core, 2GB ram, FreeBSD 8,
> disk is geli aes-128 + zfs sha-256, bitcoin 0.6.3, Tor proxy,
> An estimate is made that by the end of the year bitcoin will
> completely overrun the capabilities of this reasonable class of
> machines.
> It already takes a month to build a new blockchain, let alone keep up
> with new incoming blocks.
> Yes, it also has workstation duties, yet even if those were removed,
> it would probably choke by mid 2013.
>
> It would appear bitcoin has some *serious* scalability hurdles coming
> down the road.
> Most certainly if the user expects to independantly build, manage, and
> trust their own blockchain.
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and
> threat landscape has changed and how IT managers can respond. Discussions
> will include endpoint security, mobile security and the latest in malware
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From gmaxwell at gmail.com  Mon Jul 23 07:35:08 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 23 Jul 2012 03:35:08 -0400
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
Message-ID: <CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>

On Sun, Jul 22, 2012 at 6:37 PM, grarpamp <grarpamp at gmail.com> wrote:
> It already takes a month to build a new blockchain, let alone keep up
> with new incoming blocks.

Please fix your software stack. Something is wrong with your system
and I doubt it has much to do with bitcoin. A full sync here takes
something like an hour.

There are certainly lots of scalability things going on, but there is
no cause for concern for regular hardware being unable to _keep up_
without a hardforking change to the protocol first.



From andreas at petersson.at  Mon Jul 23 07:54:48 2012
From: andreas at petersson.at (Andreas Petersson)
Date: Mon, 23 Jul 2012 09:54:48 +0200
Subject: [Bitcoin-development] New P2P commands for diagnostics,
	SPV clients
In-Reply-To: <CANEZrP0ws6bGk5qmDCmRPMbwyNX+3W5BRNzZPn_Av-nqFPAqOw@mail.gmail.com>
References: <CA+8xBpecVQcTTbPxUm_3_GWC99dEd4=-VFWb+QT6jUy4rg8U4w@mail.gmail.com>
	<CANEZrP0kNZDByHpK2=UjP+ag0X1KmqHxnJdm=e_pWMitP4QvvA@mail.gmail.com>
	<1339766346.31489.49.camel@bmthinkpad>
	<CANEZrP3jj2ymQPH50g2PvzZhRzTnUnCLUjvBYj8ndBCJsnGJ-w@mail.gmail.com>
	<1339771184.31489.53.camel@bmthinkpad>
	<CANEZrP0hTRbE9+VEa3eCzJkbHqa3u8tpdw7eDLBQQR6DBf2adw@mail.gmail.com>
	<1340132998.6065.7.camel@bmthinkpad>
	<CANEZrP0ws6bGk5qmDCmRPMbwyNX+3W5BRNzZPn_Av-nqFPAqOw@mail.gmail.com>
Message-ID: <500D0348.4010604@petersson.at>

Some concerns regarding Bloom Filters. I talked with Stefan Thomas on 
the Hackathon Berlin about this.
I tried to follow the discussion closely but i have not taken a look at 
the code yet (is there already an implementation?) so please correct me 
if i got something wrong.

The way the Bloom filters are planned now this requires a complicated 
setup. basically the client will ask the server to replay the whole 
blockchain, but filtered.
This is not optimal for the following reasons:
This will require the server to do a full scan of his data and only 
filter out non-matching entries.

Really lightweight clients (like Bitcoincard), clients with shared 
private keys (electrum-style), or brainwallets - will ask the following 
question quite often to "supernodes": Given my public keys/addresses, 
what is the list of unspent outputs. i think it would make sense to 
include such a command, instead or in addition to the filterload/filterinit.

And perhaps more severe: as far as i understand classic bloom filters, 
the server has no method of indexing his data for the expected requests. 
There is simply no data structure (or maybe it has to be invented) which 
allows the use of an index for queries by bloom filters of *varying 
length* and a generic hashing method.

im not sure what a really efficient data structure for these kinds of 
query is. but i think it should be possible to find a good compromise 
between query flexibility, server load, client privacy.

one possible scheme, looks like this:

the client takes his list of addesses he is interested in. he hashes all 
of them to a fixed-length bit array (bloom filter) of length 64KiB (for 
example), and combines them with | to add more 1's with each address.
the server maintains a binary tree data structure of unspent outputs 
arranged by the Bloom filter bits.
to build the tree, the server would need to calculate the 64KiB bits for 
each address and arrange them in a binary tree. that way he can easily 
traverse the tree for a given bloom query.
if a client whishes to query more broadly he can calculate the bloom 
filter to 64KiB and after that fill up the last 50% of the Bits with 1. 
or 95%. the trailing 1 bits even don't need to be transmitted to the 
server when a client is querying. of course, if the client is more 
privacy-concerned he could also fill up random bits with 1, which would 
not change much actually.

the value of 64KiB is just out of thin air.
according to my experimentation using BloomFilter from Guava - 
currently, also 8KiB would be sufficient to hava a 3% false positive 
rate for the 40000 active addresses we have right now.

someone more familiar with hashing should please give his opinion if 
cutting a bloom filter in half has any bad consequences.

Andreas



From gronager at mac.com  Mon Jul 23 09:00:49 2012
From: gronager at mac.com (=?iso-8859-1?Q?Michael_Gr=F8nager?=)
Date: Mon, 23 Jul 2012 11:00:49 +0200
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>
Message-ID: <A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>

I would guess that you are running the blockchain download through the tor-proxy - that would give you the times you mention. Further, encrypting your disk (aes stuff) will not help you much either, and encrypting a the storage of a public blockchain seems to me a bit odd ?

I get a full blockchain from scratch in 45 minutes on my laptop, but, I still agree with Gregory that scalability improvements are needed, but the problem is far from critical in the sense outlined here.

/M 


On 23/07/2012, at 09:35, Gregory Maxwell wrote:

> On Sun, Jul 22, 2012 at 6:37 PM, grarpamp <grarpamp at gmail.com> wrote:
>> It already takes a month to build a new blockchain, let alone keep up
>> with new incoming blocks.
> 
> Please fix your software stack. Something is wrong with your system
> and I doubt it has much to do with bitcoin. A full sync here takes
> something like an hour.
> 
> There are certainly lots of scalability things going on, but there is
> no cause for concern for regular hardware being unable to _keep up_
> without a hardforking change to the protocol first.
> 
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and 
> threat landscape has changed and how IT managers can respond. Discussions 
> will include endpoint security, mobile security and the latest in malware 
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From grarpamp at gmail.com  Mon Jul 23 15:11:24 2012
From: grarpamp at gmail.com (grarpamp)
Date: Mon, 23 Jul 2012 11:11:24 -0400
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>
	<A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>
Message-ID: <CAD2Ti2-3sR_qusfmiStb8pzaxaB8DsPaK8a2+LWm_uL+DwvzeA@mail.gmail.com>

> Please fix your software stack. Something is wrong
> with your system

Nothing wrong, it's all default install. I documented the platform
for anyone who wants to confirm it.

> A full sync here takes something like an hour.

And what, similarly, is your platform?
It takes 5 seconds... on my Cray.

> I would guess that you are running the blockchain download
> through the tor-proxy

Use of Tor was stated. Tor is fast enough. I can copy the entire
3GiB of the .bitcoin dir in 7 days... off a slow hidden service.
And 0.5 days via exit.

> encrypting your disk (aes stuff) will not help you much either

Encryption is a perfectly reasonable thing to expect users of
bitcoin to be interested in doing. In fact, those not encrypting
their disks should probably rethink that plan.

> encrypting a the storage of a public blockchain seems to me a bit odd ?

Well, without detachdb, it's somehow tied to the wallet, whether
while processing or offline. And the wallet and debug.log are
not relocatable from the data. And encrypting everything is perfectly
reasonable anyways. As is storing your valuable data on filesystems
that verify the integrity of their data on disk, such as ZFS/BTRFS.

These days, crypto, Tor, and ZFS are common and non-arguments.

> I get a full blockchain from scratch in 45 minutes on my laptop

Again, timings with no CPU/OS/disk specs are useless infos.



From bitcoin-list at bluematt.me  Mon Jul 23 16:11:43 2012
From: bitcoin-list at bluematt.me (Matt Corallo)
Date: Mon, 23 Jul 2012 18:11:43 +0200
Subject: [Bitcoin-development] Coinbase script parse failures
In-Reply-To: <CA+8xBpfMRSmw2bPuR2yy8jffKiSVvLfZzPyfByvMThMV-xh84A@mail.gmail.com>
References: <CA+8xBpfMRSmw2bPuR2yy8jffKiSVvLfZzPyfByvMThMV-xh84A@mail.gmail.com>
Message-ID: <1343059903.6350.2.camel@bmthinkpad.lan.bluematt.me>

I mentioned this on IRC a week or so ago, noticing that though they are
not executed and required to be well-formed, we still count any sigops
that appear in them (which I guessed may be an interesting attack if you
could get a miner to put a byte in there that is the equivalent of
OP_CHECKSIG because we dont count the sigops in the coinbase scriptSig
during mining, however luke pointed out that we always push the content
of coinbase scriptSigs properly by default, and those modifying the code
should spend time researching this stuff anyway, so if they break it,
its their fault (and now they can find this email)).

Matt

On Mon, 2012-07-23 at 02:07 -0400, Jeff Garzik wrote:
> While writing the script engine for pynode, I ran a test to validate
> my script tokenizer -- a python script which does nothing more than
> split up scriptPubKey and scriptSig into component opcodes and data
> elements.  No execution, just tokenization of the script's data
> stream.
> 
> Scanning the entire blockchain, my script found over 8,000
> tokenization failures, and 100% of those were in coinbase
> transactions' scriptSig.  The scripts used to generate this can be
> found at https://github.com/jgarzik/pynode
> 
> The following data dump are just the first few, and most recent few,
> of the invalid scripts I found in the blockchain:
> 
> Scanning block #142312 000000000000046acff93b0e76cd10490551bf871ce9ac9fad62e67a0
> 7ff1d1e (1 tx)
>    TX 50cfd3361f7162b3c0c00dacd3d0e4ddf61e8ec0c51bfa54c4ca0e61876810a9
>       txin 0 parse failed
> Scanning block #142357 0000000000000743c432f84ad688b7b60d1474ccd7baa3d762df0b3f5
> 1205712 (1 tx)
>    TX 587da4d4870515e57efc27623aa92fae0b7aef5908162de57fef0bbe6382be73
>       txin 0 parse failed
> Scanning block #143014 00000000000007fe6ecd20a8c454cd43c78d912b499c46a1179e30f7c
> ff002b3 (1 tx)
>    TX 4c8f43c5115c5f29f3761176fa59cde2de2ad976efcbc5faae8ee79fa5dd6264
>       txin 0 parse failed
> ...
> Scanning block #190315 00000000000006a0bc3be527033c02d3bcfa72af2f4213c4b0feec923
> 9573342 (336 tx)
>    TX f0ba80ce080eb49148b69c47d744bbb85e4e07e4e4d0273b402c0989d79c359c
>       txin 0 parse failed
> Scanning block #190321 00000000000001c3bacc869917cacdafb6e00c552ac294835107b574a
> 44a0362 (38 tx)
>    TX 4c91f5ad0616df92165819902d0b117d9e68345f5fe964de6146f89838b9295e
>       txin 0 parse failed
> Scanning block #190331 00000000000000e3d3eaf93600684b085df7d58f84ef952c91e84eb4a
> 251d5d8 (128 tx)
>    TX 5ee371d65e323934570566b1d92dceb8456e887814da8ef2a53971683bd11da4
>       txin 0 parse failed
> 





From steve at mistfpga.net  Mon Jul 23 15:54:33 2012
From: steve at mistfpga.net (steve)
Date: Mon, 23 Jul 2012 16:54:33 +0100
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>
	<A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>
Message-ID: <500D73B9.5030806@mistfpga.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi Michael,

On 23/07/2012 10:00, Michael Gr?nager wrote:
> I get a full blockchain from scratch in 45 minutes on my laptop,
> /M
> 
Hang on a sec, in 45 minutes you can download the entire chain from
the genesis block?

I have been doing extensive testing in this area and would love to
know what is special about your setup (I have never had the entire
chain in under 12 hours, infact it is normally closerto 24.) I have an
extensive setup of test machines, everything from e4300 to phenom2x6
to i5's.

as an example on an amd e-450 with 4gb ram, and approx 3gb/s internet
connection it took 2 hours to sync the last 5 days.

Maybe i am missing something important...

Any additional information that you could provide to help me with
testing would be really appreciated.

cheers,

steve

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.17 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iQEcBAEBAgAGBQJQDXO4AAoJEFvEB9dQFvtQxdcH/ieqQkyDCg8mKeOa6CqsWaS6
fhoeny3Ke2b/CsvhYmsThCvntN9volIqR2CTn5tkHiVwG9OmlxyHZcNpN0ZTHhK5
lsfLap/Y0QpiysXpV4Bu7Z4Hwp9jnhOP74TshT305r2pX6EGXPQ0CrlHqlIry/X/
vNcunUclliou+KjL7EHcY50GH5wDpqJAjlNyF97Lj9YiPrAC9vahGwWdxkbCYtG+
KUuWGBKMMdHuMAgcQh7nI9q0WT3k/gzRQtuC2kf+v0wvQhaGlTVkku4uanhpuw4p
99blRF3/SfWimGuQgsm6wT3Y7dk+z8MFHLb6XGPxmgV9+gF+TWNczfU3GRzfcXw=
=CQkI
-----END PGP SIGNATURE-----



From bitcoin-list at bluematt.me  Mon Jul 23 16:40:36 2012
From: bitcoin-list at bluematt.me (Matt Corallo)
Date: Mon, 23 Jul 2012 18:40:36 +0200
Subject: [Bitcoin-development] New P2P commands for diagnostics,
 SPV clients
In-Reply-To: <500D0348.4010604@petersson.at>
References: <CA+8xBpecVQcTTbPxUm_3_GWC99dEd4=-VFWb+QT6jUy4rg8U4w@mail.gmail.com>
	<CANEZrP0kNZDByHpK2=UjP+ag0X1KmqHxnJdm=e_pWMitP4QvvA@mail.gmail.com>
	<1339766346.31489.49.camel@bmthinkpad>
	<CANEZrP3jj2ymQPH50g2PvzZhRzTnUnCLUjvBYj8ndBCJsnGJ-w@mail.gmail.com>
	<1339771184.31489.53.camel@bmthinkpad>
	<CANEZrP0hTRbE9+VEa3eCzJkbHqa3u8tpdw7eDLBQQR6DBf2adw@mail.gmail.com>
	<1340132998.6065.7.camel@bmthinkpad>
	<CANEZrP0ws6bGk5qmDCmRPMbwyNX+3W5BRNzZPn_Av-nqFPAqOw@mail.gmail.com>
	<500D0348.4010604@petersson.at>
Message-ID: <1343061636.7486.0.camel@bmthinkpad.lan.bluematt.me>

On Mon, 2012-07-23 at 09:54 +0200, Andreas Petersson wrote:
> Some concerns regarding Bloom Filters. I talked with Stefan Thomas on 
> the Hackathon Berlin about this.
> I tried to follow the discussion closely but i have not taken a look at 
> the code yet (is there already an implementation?) so please correct me 
> if i got something wrong.
AFAIK there was no implementation.  I pushed one for bitcoinj+bitcoind
today that compiles, but I haven't tested it much further (though its
really quite a simple implementation):
https://github.com/TheBlueMatt/bitcoin/commits/bloom
http://code.google.com/r/bluemattme-bitcoinj/source/list?name=bloomfilter

> The way the Bloom filters are planned now this requires a complicated 
> setup. basically the client will ask the server to replay the whole 
> blockchain, but filtered.
> This is not optimal for the following reasons:
> This will require the server to do a full scan of his data and only 
> filter out non-matching entries.
My implementation has yet to implement block filtering, for now its only
tx inv filtering.  However, its really not that complicated and doing a
scan of any individual transaction is very fast.  So during the download
phase, it really isn't much of any extra load on block chain providers
(aside from having to load inputs in the current implementation, but
that could be optimized some).

> Really lightweight clients (like Bitcoincard), clients with shared 
> private keys (electrum-style), or brainwallets - will ask the following 
> question quite often to "supernodes": Given my public keys/addresses, 
> what is the list of unspent outputs. i think it would make sense to 
> include such a command, instead or in addition to the filterload/filterinit.

> And perhaps more severe: as far as i understand classic bloom filters, 
> the server has no method of indexing his data for the expected requests. 
> There is simply no data structure (or maybe it has to be invented) which 
> allows the use of an index for queries by bloom filters of *varying 
> length* and a generic hashing method.

> im not sure what a really efficient data structure for these kinds of 
> query is. but i think it should be possible to find a good compromise 
> between query flexibility, server load, client privacy.

> one possible scheme, looks like this:

> the client takes his list of addesses he is interested in. he hashes all 
> of them to a fixed-length bit array (bloom filter) of length 64KiB (for 
> example), and combines them with | to add more 1's with each address.
> the server maintains a binary tree data structure of unspent outputs 
> arranged by the Bloom filter bits.
> to build the tree, the server would need to calculate the 64KiB bits for 
> each address and arrange them in a binary tree. that way he can easily 
> traverse the tree for a given bloom query.
> if a client whishes to query more broadly he can calculate the bloom 
> filter to 64KiB and after that fill up the last 50% of the Bits with 1. 
> or 95%. the trailing 1 bits even don't need to be transmitted to the 
> server when a client is querying. of course, if the client is more 
> privacy-concerned he could also fill up random bits with 1, which would 
> not change much actually.
> 
> the value of 64KiB is just out of thin air.
> according to my experimentation using BloomFilter from Guava - 
> currently, also 8KiB would be sufficient to hava a 3% false positive 
> rate for the 40000 active addresses we have right now.
> 
> someone more familiar with hashing should please give his opinion if 
> cutting a bloom filter in half has any bad consequences.
> 
> Andreas
Though I like the idea of having a "give me all unspent outputs for my
pubkeys" command, I see quite a future for clients somewhere between "I
store nothing but pubkeys and don't know about the chain" and "I store a
full chain" and the bloom filters as described are pretty useful for
many clients in that in between.  Also, for clients that are "Really
lightweight clients" (given that they don't know about the chain) should
probably just stick with an electrum-style server-client system with
specialized servers (IMHO) instead of relying on P2P nodes to provide
them with a list of unspent outputs/etc.

In response to Mike's what-the-filter-should-match:
The way it is now, it just checks each input+output to see if the
hash160 of the dest addr, hash160 of the pubkey or hash160 of the p2sh
sh matches the filter as-is.
>From the list provided, I think adding a check to allow adding a
specific outpoint to a filter would be nice.
However, in terms of data elements in txes, Im not so sure.
Its by no means a bad idea, and it wouldnt be too much overhead, but
making filters match a very broad set of criteria seems like a bit much
to me, but maybe others disagree?

Matt




From grarpamp at gmail.com  Mon Jul 23 22:33:24 2012
From: grarpamp at gmail.com (grarpamp)
Date: Mon, 23 Jul 2012 18:33:24 -0400
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <CAAS2fgREzk_dU0ie+YvDdRwKcTk6tk_i=a2Bb74w9uF=EwYhGA@mail.gmail.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>
	<A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>
	<CAD2Ti2-3sR_qusfmiStb8pzaxaB8DsPaK8a2+LWm_uL+DwvzeA@mail.gmail.com>
	<CAAS2fgREzk_dU0ie+YvDdRwKcTk6tk_i=a2Bb74w9uF=EwYhGA@mail.gmail.com>
Message-ID: <CAD2Ti2_Pz9-SsHP49+6MKnM0er9zdAaFKDQaOgqDpju1_igd_g@mail.gmail.com>

> You're seriously suggesting that I'm using a system
> which is 720x (one month vs one hour) faster than your
> P4 1.8GHz?

Don't know what you're using since you've not stated it.

> I find this doubtful, especially since bitcoin's sync is effectively
> single threaded.

Extra cores help with disk, crypto, net, etc...

> month

I've spent about two weeks crunching about the last month's
worth of new blocks.

> Your results are not expected and are not believed to be
> representative.

The config is reproducible, and not believed to be uncommon.

> try to isolate it

Mostly disk and crypto.
Shall everyone instead run in bitrot and no-privacy mode?
What do we do when we've got 10k trans a day coming in?
50k? 100k, 1M? When the chain gets 1M, 50M, 500M, 1B long?

Forget my swamped box, these numbers are coming to others.

> try to sync from a local node into tmpfs

I'd bet some people using 'tmpfs' probably have it unknowingly
[fall]backed to swap instead of core.

Bitcoin already takes up 3GiB of disk, how many have that much
free RAM? How many have 30GiB, 300GiB?

> If you're building against BDB later than the recommended 4.8
> be aware that there have been performance regressions with later
> versions

Yes, I left out that bit of platform so here are the remaining
bits... db4830, boost149, vm.kmem_size=650000000


I'm not bashing anything or anybody, just detailing a stock config
that is underwater. Anybody wishing to verify can get the hardware
from their junk pile and the software from freebsd.org. I'll certainly
be looking at both it and different setups too. If anyone's using
say Linux/BSD, BTRFS/ZFS, crypto, on i386/amd64, they could
chime in with their times too.

Disk is the cheapest, easiest thing for Joe to get. Think about
indexing and checkpointing into said disk. I don't know what
bitcoin's doing, but if it's verifying every transaction back to
the root, that would seem a bit ridiculous.

Joe probably won't be happy buying TiB's for bitcoind, so after that's
filled (assuming there's CPU to do it), the trust model has to change.
These scales are coming...



From makosoft at gmail.com  Mon Jul 23 22:50:58 2012
From: makosoft at gmail.com (Aidan Thornton)
Date: Mon, 23 Jul 2012 23:50:58 +0100
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
Message-ID: <CAB=c7TrbXS2=VFuUNuB1EZoNh5w1v1EnM3EDvjiajNb14U=qEQ@mail.gmail.com>

On Sun, Jul 22, 2012 at 11:37 PM, grarpamp <grarpamp at gmail.com> wrote:
> Given a testbed: Pentium 4 1.8GHz single core, 2GB ram, FreeBSD 8,
> disk is geli aes-128 + zfs sha-256, bitcoin 0.6.3, Tor proxy,
> An estimate is made that by the end of the year bitcoin will
> completely overrun the capabilities of this reasonable class of
> machines.

That's actually slower-than-Atom class hardware you're running on
there, with full disk encryption on what's a very CPU and IO-heavy
workload. From the benchmarks I remember, your CPU is literally slower
than the first generation of single-core netbooks - the ones reviewers
recommended against using full disk encryption on because they just
didn't have enough CPU power to manage it. It's not surprising that
Bitcoin isn't usable on that setup.



From mike at plan99.net  Tue Jul 24 07:58:24 2012
From: mike at plan99.net (Mike Hearn)
Date: Tue, 24 Jul 2012 09:58:24 +0200
Subject: [Bitcoin-development] Reconsidering block version number use
In-Reply-To: <CABsx9T0JK9qBKZu7YWeQCBAjT1Ur05BQ26A5NdLCwD6Wuyc0nQ@mail.gmail.com>
References: <201207222052.28579.luke@dashjr.org>
	<CABsx9T0JK9qBKZu7YWeQCBAjT1Ur05BQ26A5NdLCwD6Wuyc0nQ@mail.gmail.com>
Message-ID: <CANEZrP0NMmwWN1U3V_hha7+C8meKWK_szhh+6xP7VQMbFTLoqQ@mail.gmail.com>

> That'd be 7 bytes of nonce in the block header, which is
>   72,057,594,037,927,936  ~ 72 petahashes = 72,000 terahashes
>
> So: the changes for version 2 blocks would be "has height in the
> coinbase, and has a 1-byte version number with a 3-byte extranonce."

I don't understand why more nonce bits are necessary. Is it really
impossible for a multi-core CPU to keep up with the merkle root
re-calculation and keep an ASIC miner fed, or is this working around a
performance bottleneck somewhere else?



From mike at plan99.net  Tue Jul 24 08:16:12 2012
From: mike at plan99.net (Mike Hearn)
Date: Tue, 24 Jul 2012 10:16:12 +0200
Subject: [Bitcoin-development] New P2P commands for diagnostics,
	SPV clients
In-Reply-To: <500D0348.4010604@petersson.at>
References: <CA+8xBpecVQcTTbPxUm_3_GWC99dEd4=-VFWb+QT6jUy4rg8U4w@mail.gmail.com>
	<CANEZrP0kNZDByHpK2=UjP+ag0X1KmqHxnJdm=e_pWMitP4QvvA@mail.gmail.com>
	<1339766346.31489.49.camel@bmthinkpad>
	<CANEZrP3jj2ymQPH50g2PvzZhRzTnUnCLUjvBYj8ndBCJsnGJ-w@mail.gmail.com>
	<1339771184.31489.53.camel@bmthinkpad>
	<CANEZrP0hTRbE9+VEa3eCzJkbHqa3u8tpdw7eDLBQQR6DBf2adw@mail.gmail.com>
	<1340132998.6065.7.camel@bmthinkpad>
	<CANEZrP0ws6bGk5qmDCmRPMbwyNX+3W5BRNzZPn_Av-nqFPAqOw@mail.gmail.com>
	<500D0348.4010604@petersson.at>
Message-ID: <CANEZrP3UyqM0sVP2shqLQJ62KGnrtB5v6dEU1Asjb3W_r-cGnQ@mail.gmail.com>

> Really lightweight clients (like Bitcoincard), clients with shared
> private keys (electrum-style), or brainwallets - will ask the following
> question quite often to "supernodes": Given my public keys/addresses,
> what is the list of unspent outputs. i think it would make sense to
> include such a command, instead or in addition to the filterload/filterinit.

Ultra-lightweight clients like Electrum or smart cards have a
fundamentally different security model to SPV clients, which mean they
cannot connect directly to the P2P network no matter what commands or
db indexes are added.

This seems to be a common point of confusion. Andreas brought up
something similar in a chat yesterday.

To connect to the P2P network, you MUST understand how to walk the
block chain and handle re-orgs. This is not optional. The reason is
that you are connected to random arbitrary nodes who can and maybe
will lie to you. The block chain is a self-proving data structure, a
node cannot lie about it or make you believe garbage unless they can
outrun the rest of the miners combined.

If all you're doing is asking a remote node to tell you about what
coins are available, that node can simply say "guess what, you're a
millionaire!" and you have no way to discover it's wrong. This can be
dangerous in the case where you think you've received a payment but
actually did not, eg, because your internet connection got tampered
with in some way. SPV clients have the same issue for zero-confirmed
transactions, but once you see confirmations at high speeds you can be
pretty sure the network accepted the transaction. For clients that
don't understand the block chain confirmations don't have any meaning.

That's why Electrum requires a trusted server and connects to it via SSL.

> And perhaps more severe: as far as i understand classic bloom filters,
> the server has no method of indexing his data for the expected requests.

It doesn't matter. CPU wise Bloom filtering of blocks is very cheap
and can be trivially parallelised in the unlikely event it's
necessary. The expensive part of serving a Bloom filtered chain to an
SPV client is simply moving the disk head into the right position and
waiting for the platter to rotate. Blocks are stored sequentially and
modern hard disks transfer data once positioned at gigabit speeds so
requesting 1 or 2000 blocks is not significantly different.



From mike at plan99.net  Tue Jul 24 08:22:25 2012
From: mike at plan99.net (Mike Hearn)
Date: Tue, 24 Jul 2012 10:22:25 +0200
Subject: [Bitcoin-development] Reconsidering block version number use
In-Reply-To: <CAMGNxUvRXA4y98ojrzQqLhKcYPXM9CUFXKdguQz3iu=jaNvk5w@mail.gmail.com>
References: <201207222052.28579.luke@dashjr.org>
	<CABsx9T0JK9qBKZu7YWeQCBAjT1Ur05BQ26A5NdLCwD6Wuyc0nQ@mail.gmail.com>
	<CANEZrP0NMmwWN1U3V_hha7+C8meKWK_szhh+6xP7VQMbFTLoqQ@mail.gmail.com>
	<CAMGNxUvRXA4y98ojrzQqLhKcYPXM9CUFXKdguQz3iu=jaNvk5w@mail.gmail.com>
Message-ID: <CANEZrP0QQKukDa6biLqDjEvra7KSQbeo991-LJ9faa-39n5CVg@mail.gmail.com>

My point is that stuffing nonces into whatever spaces we can find to
eke out a bit more scalability in pools seems like a very short term
fix with potentially very long term consequences.

Although it may sound harsh, if your pool is struggling to keep up
with calculating merkle roots (which is cheap!) then it's time to
either upgrade your pool or for some of those users to migrate to
p2pool and handle creation of work themselves. Trying to squash more
nonce bits out of fields that were never meant for that seems like a
bad precedent with no real motivation beyond making running
centralized pools a bit cheaper.

What I'm interested in is, can a powerful server-class machine really
not keep up with work generation for things like the BitForce SC
devices? How many devices would you need to exhaust the ability to
generate work for them? You'll need powerful machines just to run a
node at all sooner or later.



From gronager at mac.com  Tue Jul 24 08:25:09 2012
From: gronager at mac.com (=?iso-8859-1?Q?Michael_Gr=F8nager?=)
Date: Tue, 24 Jul 2012 10:25:09 +0200
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <500D73B9.5030806@mistfpga.net>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>
	<A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>
	<500D73B9.5030806@mistfpga.net>
Message-ID: <B872EE35-36F9-4F4E-8342-FFA141E433C7@mac.com>

Hi Steve,

45-90 minutes - note that its numbers from March/April, so a bit longer today, but far, far away from the 12 hours. 

I am using libcoin and the bitcoind build based on this. Libcoin is based on the Satoshi client, but refactured to use an async concurrency model. I also did a minor tweeks to the db parameters. It has earlier been tested up against Satoshi bitcoin where on some OS'es it performs similarly (at least on some linuxes) and on some faster (e.g. mac). 

What is your CPU load during a block download ? (both initially/up to the point where verification sets in and after). The initial download is typically disk I/O bound, the verification stage CPU bound, though I lean to believe that even there it is disk I/O bound (at least on my system ~50% CPU load). What should be better in libcoin is the concurrency model. The Satoshi client uses a pure reentrant mutexes model, that is not generally believed to motivate the best coding practice nor performance, you might end up without the concurrency you initially strived for *). As mentioned earlier libcoin uses a pure async concurrency model (and so does libbitcoin btw). 

I would like to stress again that these numbers will depend largely on the system running the test - I would call my laptop a bit over the average today (MB Pro, 2.66Ghz i7 dual core, 8GBRAM, 512GB SSD). But again 12 hours - I only reach such numbers on some of my VPS'es (linode 1024) that are known for notoriously slow disk I/O. (here I have a few % CPU load during the verification indicating indeed that the disk i/o is the culprit).

Cheers,

Michael


*) I like this Dave Butenhof quote: "The biggest of all the big problems with recursive mutexes is that they encourage you to completely lose track of your locking scheme and scope. This is deadly. Evil. It's the "thread eater". You hold locks for the absolutely shortest possible time. Period. Always. If you're calling something with a lock held simply because you don't know it's held, or because you don't know whether the callee needs the mutex, then you're holding it too long. You're aiming a shotgun at your application and pulling the trigger. You presumably started using threads to get concurrency; but you've just PREVENTED concurrency."




On 23/07/2012, at 17:54, steve wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Hi Michael,
> 
> On 23/07/2012 10:00, Michael Gr?nager wrote:
>> I get a full blockchain from scratch in 45 minutes on my laptop,
>> /M
>> 
> Hang on a sec, in 45 minutes you can download the entire chain from
> the genesis block?
> 
> I have been doing extensive testing in this area and would love to
> know what is special about your setup (I have never had the entire
> chain in under 12 hours, infact it is normally closerto 24.) I have an
> extensive setup of test machines, everything from e4300 to phenom2x6
> to i5's.
> 
> as an example on an amd e-450 with 4gb ram, and approx 3gb/s internet
> connection it took 2 hours to sync the last 5 days.
> 
> Maybe i am missing something important...
> 
> Any additional information that you could provide to help me with
> testing would be really appreciated.
> 
> cheers,
> 
> steve
> 
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v2.0.17 (MingW32)
> Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/
> 
> iQEcBAEBAgAGBQJQDXO4AAoJEFvEB9dQFvtQxdcH/ieqQkyDCg8mKeOa6CqsWaS6
> fhoeny3Ke2b/CsvhYmsThCvntN9volIqR2CTn5tkHiVwG9OmlxyHZcNpN0ZTHhK5
> lsfLap/Y0QpiysXpV4Bu7Z4Hwp9jnhOP74TshT305r2pX6EGXPQ0CrlHqlIry/X/
> vNcunUclliou+KjL7EHcY50GH5wDpqJAjlNyF97Lj9YiPrAC9vahGwWdxkbCYtG+
> KUuWGBKMMdHuMAgcQh7nI9q0WT3k/gzRQtuC2kf+v0wvQhaGlTVkku4uanhpuw4p
> 99blRF3/SfWimGuQgsm6wT3Y7dk+z8MFHLb6XGPxmgV9+gF+TWNczfU3GRzfcXw=
> =CQkI
> -----END PGP SIGNATURE-----
> 
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and 
> threat landscape has changed and how IT managers can respond. Discussions 
> will include endpoint security, mobile security and the latest in malware 
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development








From peter at coinlab.com  Tue Jul 24 08:01:11 2012
From: peter at coinlab.com (Peter Vessenes)
Date: Tue, 24 Jul 2012 17:01:11 +0900
Subject: [Bitcoin-development] Reconsidering block version number use
In-Reply-To: <CANEZrP0NMmwWN1U3V_hha7+C8meKWK_szhh+6xP7VQMbFTLoqQ@mail.gmail.com>
References: <201207222052.28579.luke@dashjr.org>
	<CABsx9T0JK9qBKZu7YWeQCBAjT1Ur05BQ26A5NdLCwD6Wuyc0nQ@mail.gmail.com>
	<CANEZrP0NMmwWN1U3V_hha7+C8meKWK_szhh+6xP7VQMbFTLoqQ@mail.gmail.com>
Message-ID: <CAMGNxUvRXA4y98ojrzQqLhKcYPXM9CUFXKdguQz3iu=jaNvk5w@mail.gmail.com>

I think it would be great to have more nonce space with less merkle
calculation; keeping track of all possible versions of a block already
takes real RAM, real computation. Being able to change one bit in the
header and send out a new block for checking would ease our pool server
work by a real amount, somewhat on the work generation side, but also on
the checking old work side; we'll have a lot fewer unique transaction /
coinbase sets to hold on to for checking when we get back a solution.

Peter


On Tue, Jul 24, 2012 at 4:58 PM, Mike Hearn <mike at plan99.net> wrote:

> > That'd be 7 bytes of nonce in the block header, which is
> >   72,057,594,037,927,936  ~ 72 petahashes = 72,000 terahashes
> >
> > So: the changes for version 2 blocks would be "has height in the
> > coinbase, and has a 1-byte version number with a 3-byte extranonce."
>
> I don't understand why more nonce bits are necessary. Is it really
> impossible for a multi-core CPU to keep up with the merkle root
> re-calculation and keep an ASIC miner fed, or is this working around a
> performance bottleneck somewhere else?
>
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and
> threat landscape has changed and how IT managers can respond. Discussions
> will include endpoint security, mobile security and the latest in malware
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



-- 
------------------------------

[image: CoinLab Logo]PETER VESSENES
CEO

*peter at coinlab.com * /  206.486.6856  / SKYPE: vessenes
811 FIRST AVENUE  /  SUITE 480  /  SEATTLE, WA 98104
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120724/e4232c5c/attachment.html>

From mike at plan99.net  Tue Jul 24 09:18:12 2012
From: mike at plan99.net (Mike Hearn)
Date: Tue, 24 Jul 2012 11:18:12 +0200
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <B872EE35-36F9-4F4E-8342-FFA141E433C7@mac.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>
	<A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>
	<500D73B9.5030806@mistfpga.net>
	<B872EE35-36F9-4F4E-8342-FFA141E433C7@mac.com>
Message-ID: <CANEZrP3Abe-RnHxK7yY_Nte-W8MtVgYDBFrsas_bDes4w7yhfg@mail.gmail.com>

> The Satoshi client uses a pure reentrant mutexes model

As you presumably already know, the reference client doesn't attempt
to parallelise most operations at all. Chain download is entirely
single threaded.



From steve at mistfpga.net  Tue Jul 24 19:56:48 2012
From: steve at mistfpga.net (steve)
Date: Tue, 24 Jul 2012 20:56:48 +0100
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <B872EE35-36F9-4F4E-8342-FFA141E433C7@mac.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>
	<A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>
	<500D73B9.5030806@mistfpga.net>
	<B872EE35-36F9-4F4E-8342-FFA141E433C7@mac.com>
Message-ID: <500EFE00.7060200@mistfpga.net>

Hi Michael,

from what I have noticed, bitcoin blockchain download/verfication all
happens in 1 thread.  (so multicores doesnt really help)

That said, I have never tried on an ssd.

What I do have is 6 SATA 6gbs configed as RAID0 Drives.
32gb of ram. ubuntu 64 (yeah I know), this runs upto 16 VM's
(I have 4 of these)

However I have not tried to download the blockchain on the master os,
just in virtulisation.  However, the dedicated machines that I have been
using for benchmarking the VM's against is a q6600 8gb ram sata2 hdd -
Win 7 (seems faster than slackware...) to me it has always felt like
network bandwidth was the issue.  I might instrument the bitcoin-qt exe
to only pick low ping nodes (has someone already done this?)

I guess it is time to start some benchmarking (like the gpu comparison page)

hte verification for the 5 past 5 days was negliglable. I am off on a
flight to australia tomorrrow, so I will set some breakpoints and do
some timings in a debugger.

This will all happen on an e-450 (wonderful machine!)

Thanks very much for your response. it would seem that I am 'doing it
wrong' :/

cheers mate,

steve

(this message isnt signed because I have forgotten my password.)

On 24/07/2012 09:25, Michael Gr?nager wrote:
> Hi Steve,
> 
> 45-90 minutes - note that its numbers from March/April, so a bit
> longer today, but far, far away from the 12 hours.
> 
> I am using libcoin and the bitcoind build based on this. Libcoin is
> based on the Satoshi client, but refactured to use an async
> concurrency model. I also did a minor tweeks to the db parameters. It
> has earlier been tested up against Satoshi bitcoin where on some
> OS'es it performs similarly (at least on some linuxes) and on some
> faster (e.g. mac).
> 
> What is your CPU load during a block download ? (both initially/up to
> the point where verification sets in and after). The initial download
> is typically disk I/O bound, the verification stage CPU bound, though
> I lean to believe that even there it is disk I/O bound (at least on
> my system ~50% CPU load). What should be better in libcoin is the
> concurrency model. The Satoshi client uses a pure reentrant mutexes
> model, that is not generally believed to motivate the best coding
> practice nor performance, you might end up without the concurrency
> you initially strived for *). As mentioned earlier libcoin uses a
> pure async concurrency model (and so does libbitcoin btw).
> 
> I would like to stress again that these numbers will depend largely
> on the system running the test - I would call my laptop a bit over
> the average today (MB Pro, 2.66Ghz i7 dual core, 8GBRAM, 512GB SSD).
> But again 12 hours - I only reach such numbers on some of my VPS'es
> (linode 1024) that are known for notoriously slow disk I/O. (here I
> have a few % CPU load during the verification indicating indeed that
> the disk i/o is the culprit).
> 
> Cheers,
> 
> Michael
> 
> 
> *) I like this Dave Butenhof quote: "The biggest of all the big
> problems with recursive mutexes is that they encourage you to
> completely lose track of your locking scheme and scope. This is
> deadly. Evil. It's the "thread eater". You hold locks for the
> absolutely shortest possible time. Period. Always. If you're calling
> something with a lock held simply because you don't know it's held,
> or because you don't know whether the callee needs the mutex, then
> you're holding it too long. You're aiming a shotgun at your
> application and pulling the trigger. You presumably started using
> threads to get concurrency; but you've just PREVENTED concurrency."
> 
> 
> 
> 
> On 23/07/2012, at 17:54, steve wrote:
> 
> Hi Michael,
> 
> On 23/07/2012 10:00, Michael Gr?nager wrote:
>>>> I get a full blockchain from scratch in 45 minutes on my
>>>> laptop, /M
>>>> 
> Hang on a sec, in 45 minutes you can download the entire chain from 
> the genesis block?
> 
> I have been doing extensive testing in this area and would love to 
> know what is special about your setup (I have never had the entire 
> chain in under 12 hours, infact it is normally closerto 24.) I have
> an extensive setup of test machines, everything from e4300 to
> phenom2x6 to i5's.
> 
> as an example on an amd e-450 with 4gb ram, and approx 3gb/s
> internet connection it took 2 hours to sync the last 5 days.
> 
> Maybe i am missing something important...
> 
> Any additional information that you could provide to help me with 
> testing would be really appreciated.
> 
> cheers,
> 
> steve
> 
>> 
>> ------------------------------------------------------------------------------
>>
>> 
Live Security Virtual Conference
>> Exclusive live event will cover all the ways today's security and 
>> threat landscape has changed and how IT managers can respond.
>> Discussions will include endpoint security, mobile security and the
>> latest in malware threats.
>> http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/ 
>> _______________________________________________ Bitcoin-development
>> mailing list Bitcoin-development at lists.sourceforge.net 
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> 
> 
> 
> 




From gronager at mac.com  Wed Jul 25 09:45:33 2012
From: gronager at mac.com (=?iso-8859-1?Q?Michael_Gr=F8nager?=)
Date: Wed, 25 Jul 2012 11:45:33 +0200
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <500EFE00.7060200@mistfpga.net>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>
	<A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>
	<500D73B9.5030806@mistfpga.net>
	<B872EE35-36F9-4F4E-8342-FFA141E433C7@mac.com>
	<500EFE00.7060200@mistfpga.net>
Message-ID: <EF55BC4C-CDD4-43BD-988C-D5BC0C66F265@mac.com>

Hi Steve,

I see dramatic differences in performance on virtual machines vs running directly on the iron. I am not an expert in virtual machines, but it seems to me that they are weak when it comes to disk i/o. And berkeley DB, as used by bitcoin is a sucker for disk i/o. In top I easily hit >1/#processors in top wa, meaning that the cpu doing the blockchain download is just waiting for the disk all the time.

I would like to do a test keeping database log files in memory. It should not matter for durability of the wallet, as it flushes at each write anyway. As for the blockindex, it will remain consistent, but might be lagging some blocks behind at startup, which shouldn't really matter (except that the same block could end up appearing twice in the block00X files, inelegant, but not really a problem).

Otherwise the system you describe (raid0 over 6 disks) should perform like crazy wrt disk i/o, at least on par with SSD. It is your virtualization I am worried about.

Have a safe trip to down under!

/M

On 24/07/2012, at 21:56, steve wrote:

> Hi Michael,
> 
> from what I have noticed, bitcoin blockchain download/verfication all
> happens in 1 thread.  (so multicores doesnt really help)
> 
> That said, I have never tried on an ssd.
> 
> What I do have is 6 SATA 6gbs configed as RAID0 Drives.
> 32gb of ram. ubuntu 64 (yeah I know), this runs upto 16 VM's
> (I have 4 of these)
> 
> However I have not tried to download the blockchain on the master os,
> just in virtulisation.  However, the dedicated machines that I have been
> using for benchmarking the VM's against is a q6600 8gb ram sata2 hdd -
> Win 7 (seems faster than slackware...) to me it has always felt like
> network bandwidth was the issue.  I might instrument the bitcoin-qt exe
> to only pick low ping nodes (has someone already done this?)
> 
> I guess it is time to start some benchmarking (like the gpu comparison page)
> 
> hte verification for the 5 past 5 days was negliglable. I am off on a
> flight to australia tomorrrow, so I will set some breakpoints and do
> some timings in a debugger.
> 
> This will all happen on an e-450 (wonderful machine!)
> 
> Thanks very much for your response. it would seem that I am 'doing it
> wrong' :/
> 
> cheers mate,
> 
> steve
> 
> (this message isnt signed because I have forgotten my password.)
> 
> On 24/07/2012 09:25, Michael Gr?nager wrote:
>> Hi Steve,
>> 
>> 45-90 minutes - note that its numbers from March/April, so a bit
>> longer today, but far, far away from the 12 hours.
>> 
>> I am using libcoin and the bitcoind build based on this. Libcoin is
>> based on the Satoshi client, but refactured to use an async
>> concurrency model. I also did a minor tweeks to the db parameters. It
>> has earlier been tested up against Satoshi bitcoin where on some
>> OS'es it performs similarly (at least on some linuxes) and on some
>> faster (e.g. mac).
>> 
>> What is your CPU load during a block download ? (both initially/up to
>> the point where verification sets in and after). The initial download
>> is typically disk I/O bound, the verification stage CPU bound, though
>> I lean to believe that even there it is disk I/O bound (at least on
>> my system ~50% CPU load). What should be better in libcoin is the
>> concurrency model. The Satoshi client uses a pure reentrant mutexes
>> model, that is not generally believed to motivate the best coding
>> practice nor performance, you might end up without the concurrency
>> you initially strived for *). As mentioned earlier libcoin uses a
>> pure async concurrency model (and so does libbitcoin btw).
>> 
>> I would like to stress again that these numbers will depend largely
>> on the system running the test - I would call my laptop a bit over
>> the average today (MB Pro, 2.66Ghz i7 dual core, 8GBRAM, 512GB SSD).
>> But again 12 hours - I only reach such numbers on some of my VPS'es
>> (linode 1024) that are known for notoriously slow disk I/O. (here I
>> have a few % CPU load during the verification indicating indeed that
>> the disk i/o is the culprit).
>> 
>> Cheers,
>> 
>> Michael
>> 
>> 
>> *) I like this Dave Butenhof quote: "The biggest of all the big
>> problems with recursive mutexes is that they encourage you to
>> completely lose track of your locking scheme and scope. This is
>> deadly. Evil. It's the "thread eater". You hold locks for the
>> absolutely shortest possible time. Period. Always. If you're calling
>> something with a lock held simply because you don't know it's held,
>> or because you don't know whether the callee needs the mutex, then
>> you're holding it too long. You're aiming a shotgun at your
>> application and pulling the trigger. You presumably started using
>> threads to get concurrency; but you've just PREVENTED concurrency."
>> 
>> 
>> 
>> 
>> On 23/07/2012, at 17:54, steve wrote:
>> 
>> Hi Michael,
>> 
>> On 23/07/2012 10:00, Michael Gr?nager wrote:
>>>>> I get a full blockchain from scratch in 45 minutes on my
>>>>> laptop, /M
>>>>> 
>> Hang on a sec, in 45 minutes you can download the entire chain from 
>> the genesis block?
>> 
>> I have been doing extensive testing in this area and would love to 
>> know what is special about your setup (I have never had the entire 
>> chain in under 12 hours, infact it is normally closerto 24.) I have
>> an extensive setup of test machines, everything from e4300 to
>> phenom2x6 to i5's.
>> 
>> as an example on an amd e-450 with 4gb ram, and approx 3gb/s
>> internet connection it took 2 hours to sync the last 5 days.
>> 
>> Maybe i am missing something important...
>> 
>> Any additional information that you could provide to help me with 
>> testing would be really appreciated.
>> 
>> cheers,
>> 
>> steve
>> 
>>> 
>>> ------------------------------------------------------------------------------
>>> 
>>> 
> Live Security Virtual Conference
>>> Exclusive live event will cover all the ways today's security and 
>>> threat landscape has changed and how IT managers can respond.
>>> Discussions will include endpoint security, mobile security and the
>>> latest in malware threats.
>>> http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/ 
>>> _______________________________________________ Bitcoin-development
>>> mailing list Bitcoin-development at lists.sourceforge.net 
>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
>> 
>> 
>> 
>> 
> 
> 
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and 
> threat landscape has changed and how IT managers can respond. Discussions 
> will include endpoint security, mobile security and the latest in malware 
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From steve at mistfpga.net  Wed Jul 25 14:24:38 2012
From: steve at mistfpga.net (steve)
Date: Wed, 25 Jul 2012 15:24:38 +0100
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <EF55BC4C-CDD4-43BD-988C-D5BC0C66F265@mac.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>
	<A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>
	<500D73B9.5030806@mistfpga.net>
	<B872EE35-36F9-4F4E-8342-FFA141E433C7@mac.com>
	<500EFE00.7060200@mistfpga.net>
	<EF55BC4C-CDD4-43BD-988C-D5BC0C66F265@mac.com>
Message-ID: <501001A6.90301@mistfpga.net>

On 25/07/2012 10:45, Michael Gr?nager wrote:
> Hi Steve,
> 
> I see dramatic differences in performance on virtual machines vs 
> running directly on the iron. I am not an expert in virtual
> machines,

They can be, it depends on how they are set up.  For reference, these
VM's used to test network stacks and file format bugs.  They do this
via debug tracing, trace into, not over.  They then dump this data in
files and it can keep up with a core2 duo laptop for file io. however
I moved to using an in ram database (4gb chunks, that then get dumped
over the network port to a db on a seperate machine)

I am not sure I have the skills to instrament this into bitcoind

> 
> I would like to do a test keeping database log files in memory. It 
> should not matter for durability of the wallet, as it flushes at
> each write anyway. As for the blockindex, it will remain
> consistent, but might be lagging some blocks behind at startup,
> which shouldn't really matter (except that the same block could end
> up appearing twice in the block00X files, inelegant, but not really
> a problem).
> 
> Otherwise the system you describe (raid0 over 6 disks) should
> perform like crazy wrt disk i/o, at least on par with SSD. It is
> your virtualization I am worried about.

I will test that when I get back :)

> 
> Have a safe trip to down under!

will do, thanks for the response. :)

> 
> /M
> 
> On 24/07/2012, at 21:56, steve wrote:
> 
>> Hi Michael,
>> 
>> from what I have noticed, bitcoin blockchain
>> download/verfication all happens in 1 thread.  (so multicores
>> doesnt really help)
>> 
>> That said, I have never tried on an ssd.
>> 
>> What I do have is 6 SATA 6gbs configed as RAID0 Drives. 32gb of 
>> ram. ubuntu 64 (yeah I know), this runs upto 16 VM's (I have 4
>> of these)
>> 
>> However I have not tried to download the blockchain on the
>> master os, just in virtulisation.  However, the dedicated
>> machines that I have been using for benchmarking the VM's against
>> is a q6600 8gb ram sata2 hdd - Win 7 (seems faster than
>> slackware...) to me it has always felt like network bandwidth was
>> the issue.  I might instrument the bitcoin-qt exe to only pick
>> low ping nodes (has someone already done this?)
>> 
>> I guess it is time to start some benchmarking (like the gpu 
>> comparison page)
>> 
>> hte verification for the 5 past 5 days was negliglable. I am off
>> on a flight to australia tomorrrow, so I will set some
>> breakpoints and do some timings in a debugger.
>> 
>> This will all happen on an e-450 (wonderful machine!)
>> 
>> Thanks very much for your response. it would seem that I am
>> 'doing it wrong' :/
>> 
>> cheers mate,
>> 
>> steve
>> 
>> (this message isnt signed because I have forgotten my password.)
>> 
>> On 24/07/2012 09:25, Michael Gr?nager wrote:
>>> Hi Steve,
>>> 
>>> 45-90 minutes - note that its numbers from March/April, so a
>>> bit longer today, but far, far away from the 12 hours.
>>> 
>>> I am using libcoin and the bitcoind build based on this.
>>> Libcoin is based on the Satoshi client, but refactured to use
>>> an async concurrency model. I also did a minor tweeks to the
>>> db parameters. It has earlier been tested up against Satoshi
>>> bitcoin where on some OS'es it performs similarly (at least on
>>> some linuxes) and on some faster (e.g. mac).
>>> 
>>> What is your CPU load during a block download ? (both 
>>> initially/up to the point where verification sets in and
>>> after). The initial download is typically disk I/O bound, the 
>>> verification stage CPU bound, though I lean to believe that
>>> even there it is disk I/O bound (at least on my system ~50% CPU
>>> load). What should be better in libcoin is the concurrency
>>> model. The Satoshi client uses a pure reentrant mutexes model,
>>> that is not generally believed to motivate the best coding
>>> practice nor performance, you might end up without the
>>> concurrency you initially strived for *). As mentioned earlier
>>> libcoin uses a pure async concurrency model (and so does
>>> libbitcoin btw).
>>> 
>>> I would like to stress again that these numbers will depend 
>>> largely on the system running the test - I would call my laptop
>>> a bit over the average today (MB Pro, 2.66Ghz i7 dual core,
>>> 8GBRAM, 512GB SSD). But again 12 hours - I only reach such
>>> numbers on some of my VPS'es (linode 1024) that are known for
>>> notoriously slow disk I/O. (here I have a few % CPU load during
>>> the verification indicating indeed that the disk i/o is the 
>>> culprit).
>>> 
>>> Cheers,
>>> 
>>> Michael
>>> 
>>> 
>>> *) I like this Dave Butenhof quote: "The biggest of all the big
>>>  problems with recursive mutexes is that they encourage you to
>>>  completely lose track of your locking scheme and scope. This
>>> is deadly. Evil. It's the "thread eater". You hold locks for
>>> the absolutely shortest possible time. Period. Always. If
>>> you're calling something with a lock held simply because you
>>> don't know it's held, or because you don't know whether the
>>> callee needs the mutex, then you're holding it too long. You're
>>> aiming a shotgun at your application and pulling the trigger.
>>> You presumably started using threads to get concurrency; but
>>> you've just PREVENTED concurrency."
>>> 
>>> 
>>> 
>>> 
>>> On 23/07/2012, at 17:54, steve wrote:
>>> 
>>> Hi Michael,
>>> 
>>> On 23/07/2012 10:00, Michael Gr?nager wrote:
>>>>>> I get a full blockchain from scratch in 45 minutes on my
>>>>>>  laptop, /M
>>>>>> 
>>> Hang on a sec, in 45 minutes you can download the entire chain 
>>> from the genesis block?
>>> 
>>> I have been doing extensive testing in this area and would
>>> love to know what is special about your setup (I have never had
>>> the entire chain in under 12 hours, infact it is normally
>>> closerto 24.) I have an extensive setup of test machines,
>>> everything from e4300 to phenom2x6 to i5's.
>>> 
>>> as an example on an amd e-450 with 4gb ram, and approx 3gb/s 
>>> internet connection it took 2 hours to sync the last 5 days.
>>> 
>>> Maybe i am missing something important...
>>> 
>>> Any additional information that you could provide to help me
>>> with testing would be really appreciated.
>>> 
>>> cheers,
>>> 
>>> steve
>>> 
>>>> 
>>>> ------------------------------------------------------------------------------
>>>>
>>>>
>>
>>>>
>>>> 
Live Security Virtual Conference
>>>> Exclusive live event will cover all the ways today's
>>>> security and threat landscape has changed and how IT managers
>>>> can respond. Discussions will include endpoint security,
>>>> mobile security and the latest in malware threats. 
>>>> http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/ 
>>>> _______________________________________________ 
>>>> Bitcoin-development mailing list 
>>>> Bitcoin-development at lists.sourceforge.net 
>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>>
>>>
>>>
>>>
>>>
>>
>>
>>
>>>>
>>>> 
------------------------------------------------------------------------------
>> Live Security Virtual Conference Exclusive live event will cover 
>> all the ways today's security and threat landscape has changed
>> and how IT managers can respond. Discussions will include
>> endpoint security, mobile security and the latest in malware
>> threats. 
>> http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/ 
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net 
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 





From jgarzik at exmulti.com  Thu Jul 26 05:55:18 2012
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Thu, 26 Jul 2012 01:55:18 -0400
Subject: [Bitcoin-development] Bitcoin script opcode counts
In-Reply-To: <CA+8xBpdH8CnCeW=syWLt-V2nF+jmE5V1T=cJGGJxxt1M6dw3OA@mail.gmail.com>
References: <CA+8xBpdH8CnCeW=syWLt-V2nF+jmE5V1T=cJGGJxxt1M6dw3OA@mail.gmail.com>
Message-ID: <CA+8xBpdPL1kFcX8Qs3V7JkbQP-Xc1imza+YmG=vvBsyT+LWR3w@mail.gmail.com>

On Thu, Jul 26, 2012 at 1:50 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:
> Just run a query over the entire blockchain, looking at script opcode
> use. I counted the number of times each opcode was used, in total:
> https://gist.github.com/3180470

And here is the testnet3 data: https://gist.github.com/3180486

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From jgarzik at exmulti.com  Thu Jul 26 05:50:08 2012
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Thu, 26 Jul 2012 01:50:08 -0400
Subject: [Bitcoin-development] Bitcoin script opcode counts
Message-ID: <CA+8xBpdH8CnCeW=syWLt-V2nF+jmE5V1T=cJGGJxxt1M6dw3OA@mail.gmail.com>

Just run a query over the entire blockchain, looking at script opcode
use. I counted the number of times each opcode was used, in total:
https://gist.github.com/3180470

(data in full)
OP_0 104
OP_1 27
OP_2 12
OP_2OVER 182
OP_2SWAP 182
OP_3 16
OP_4 1
OP_CHECKMULTISIG 22
OP_CHECKSIG 12188693
OP_CODESEPARATOR 14
OP_DEPTH 182
OP_DROP 19
OP_DUP 11699991
OP_EQUAL 88
OP_EQUALVERIFY 11699985
OP_HASH160 11700067
OP_IF 182
OP_IFDUP 182
OP_MIN 4
OP_NOP1 1
OP_NOP2 15
OP_NOP 5
OP_PUSHDATA1 18
OP_PUSHDATA2 4
OP_PUSHDATA 32350369
OP_SHA256 2
OP_VERIFY 182


-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From mike at plan99.net  Thu Jul 26 11:27:30 2012
From: mike at plan99.net (Mike Hearn)
Date: Thu, 26 Jul 2012 13:27:30 +0200
Subject: [Bitcoin-development] Bitcoin script opcode counts
In-Reply-To: <CA+8xBpdH8CnCeW=syWLt-V2nF+jmE5V1T=cJGGJxxt1M6dw3OA@mail.gmail.com>
References: <CA+8xBpdH8CnCeW=syWLt-V2nF+jmE5V1T=cJGGJxxt1M6dw3OA@mail.gmail.com>
Message-ID: <CANEZrP331ipTK8pO6o1YmkiYR-c5-wH5vvZ=RrxBpHyu0BQ-vw@mail.gmail.com>

> OP_CODESEPARATOR 14
> OP_DEPTH 182

I'm interested to see what scripts were using OP_DEPTH and
OP_CODESEPARATOR, as the latter appears to be useless to my eyes.

Could you give some tx ids which use unusual opcodes?



From gmaxwell at gmail.com  Thu Jul 26 12:50:14 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Thu, 26 Jul 2012 08:50:14 -0400
Subject: [Bitcoin-development] Bitcoin script opcode counts
In-Reply-To: <CANEZrP331ipTK8pO6o1YmkiYR-c5-wH5vvZ=RrxBpHyu0BQ-vw@mail.gmail.com>
References: <CA+8xBpdH8CnCeW=syWLt-V2nF+jmE5V1T=cJGGJxxt1M6dw3OA@mail.gmail.com>
	<CANEZrP331ipTK8pO6o1YmkiYR-c5-wH5vvZ=RrxBpHyu0BQ-vw@mail.gmail.com>
Message-ID: <CAAS2fgS1meaVi+Azk7G-uXqdZzV9a2K0s5rxWvbHzAnruKRRXw@mail.gmail.com>

On Thu, Jul 26, 2012 at 7:27 AM, Mike Hearn <mike at plan99.net> wrote:
>> OP_CODESEPARATOR 14
>> OP_DEPTH 182
>
> I'm interested to see what scripts were using OP_DEPTH and
> OP_CODESEPARATOR, as the latter appears to be useless to my eyes.
>
> Could you give some tx ids which use unusual opcodes?

The OP_DEPTH are all screwups in P2Pool blocks.

( the software was making tiny payments to scriptpubkey 'script' due
to a bug, and it went unnoticed for a long time because it was assumed
that it was just some p2sh user intentionally being stupid )



From zgenjix at yahoo.com  Thu Jul 26 16:49:19 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Thu, 26 Jul 2012 09:49:19 -0700 (PDT)
Subject: [Bitcoin-development] OP_RESEVERVED and IsPushOnly
Message-ID: <1343321359.93533.YahooMailNeo@web121005.mail.ne1.yahoo.com>

Meh, probably harmless, but...

As best I can tell, OP_RESERVED does absolutely nothing (a NOP).

CScript::IsPushOnly(...) counts this as a push operation.




From grarpamp at gmail.com  Fri Jul 27 04:20:12 2012
From: grarpamp at gmail.com (grarpamp)
Date: Fri, 27 Jul 2012 00:20:12 -0400
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <CAD2Ti2_Pz9-SsHP49+6MKnM0er9zdAaFKDQaOgqDpju1_igd_g@mail.gmail.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>
	<A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>
	<CAD2Ti2-3sR_qusfmiStb8pzaxaB8DsPaK8a2+LWm_uL+DwvzeA@mail.gmail.com>
	<CAAS2fgREzk_dU0ie+YvDdRwKcTk6tk_i=a2Bb74w9uF=EwYhGA@mail.gmail.com>
	<CAD2Ti2_Pz9-SsHP49+6MKnM0er9zdAaFKDQaOgqDpju1_igd_g@mail.gmail.com>
Message-ID: <CAD2Ti28snGOZn9mCSALZ341TNCex23zxKHCKYztnMK3cF=jaTQ@mail.gmail.com>

Update: this class of machine just became useless for bitcoin.
When blk0002.dat was created to store more blocks, all forward
progress processing blocks turned into losing ground by 20 or so
a day. Guessing both datfiles were being accessed at once resulting
in disk based overload. I've not seen any other mentions of crypto
in this thread so I'm not sure how well new hardware would perform.
Going shopping I guess.



From gmaxwell at gmail.com  Fri Jul 27 04:59:45 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Fri, 27 Jul 2012 00:59:45 -0400
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <CAD2Ti28snGOZn9mCSALZ341TNCex23zxKHCKYztnMK3cF=jaTQ@mail.gmail.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>
	<A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>
	<CAD2Ti2-3sR_qusfmiStb8pzaxaB8DsPaK8a2+LWm_uL+DwvzeA@mail.gmail.com>
	<CAAS2fgREzk_dU0ie+YvDdRwKcTk6tk_i=a2Bb74w9uF=EwYhGA@mail.gmail.com>
	<CAD2Ti2_Pz9-SsHP49+6MKnM0er9zdAaFKDQaOgqDpju1_igd_g@mail.gmail.com>
	<CAD2Ti28snGOZn9mCSALZ341TNCex23zxKHCKYztnMK3cF=jaTQ@mail.gmail.com>
Message-ID: <CAAS2fgQmQ6f1_025QgJsG4aEyH4yHwk-2aWUUY+2FPs7-Tpvvg@mail.gmail.com>

On Fri, Jul 27, 2012 at 12:20 AM, grarpamp <grarpamp at gmail.com> wrote:
> Update: this class of machine just became useless for bitcoin.
> When blk0002.dat was created to store more blocks, all forward
> progress processing blocks turned into losing ground by 20 or so
> a day. Guessing both datfiles were being accessed at once resulting
> in disk based overload. I've not seen any other mentions of crypto
> in this thread so I'm not sure how well new hardware would perform.
> Going shopping I guess.

I now have an 1.8 ghz p3 celeron (128k cache) which should be
substantially slower than your machine, running vintage 2.6.20 linux.
Unfortunately I forgot to turn on timestamp logging so I don't know
how long it took to sync the chain, but it was less than two days as
that was the span between when I checked on it. It's staying current
just fine.

Again, I encourage you to investigate your software configuration.



From grarpamp at gmail.com  Fri Jul 27 05:59:20 2012
From: grarpamp at gmail.com (grarpamp)
Date: Fri, 27 Jul 2012 01:59:20 -0400
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <CAAS2fgQmQ6f1_025QgJsG4aEyH4yHwk-2aWUUY+2FPs7-Tpvvg@mail.gmail.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>
	<A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>
	<CAD2Ti2-3sR_qusfmiStb8pzaxaB8DsPaK8a2+LWm_uL+DwvzeA@mail.gmail.com>
	<CAAS2fgREzk_dU0ie+YvDdRwKcTk6tk_i=a2Bb74w9uF=EwYhGA@mail.gmail.com>
	<CAD2Ti2_Pz9-SsHP49+6MKnM0er9zdAaFKDQaOgqDpju1_igd_g@mail.gmail.com>
	<CAD2Ti28snGOZn9mCSALZ341TNCex23zxKHCKYztnMK3cF=jaTQ@mail.gmail.com>
	<CAAS2fgQmQ6f1_025QgJsG4aEyH4yHwk-2aWUUY+2FPs7-Tpvvg@mail.gmail.com>
Message-ID: <CAD2Ti29LR+9=uO+LnrcsTYGSFW9S1FWuCLtoU-KwKkNmiVrnGQ@mail.gmail.com>

> I now have an 1.8 ghz p3 celeron (128k cache) which should be
> substantially slower than your machine, running vintage 2.6.20 linux.
> Unfortunately I forgot to turn on timestamp logging so I don't know
> how long it took to sync the chain, but it was less than two days as
> that was the span between when I checked on it. It's staying current

Well, are you running bitcoin on, say, an FS with sha256 integrity
trees for all bits and AES-128-XTS/CBC disk encryption?
If not, we're not comparing the same apples, let alone the same OS.

> Again, I encourage you to investigate your software configuration.

Someone suggested I investigate turning off the above features.
Since I'd find their loss undesirable [1], and there's not much to be
tuned there anyways, I've given up and am investigating what more
GHz and cores will do.

[1] Keeping data both intact and private is a good thing. Does your
checkbook deserve any less?



From luke at dashjr.org  Fri Jul 27 06:03:59 2012
From: luke at dashjr.org (Luke-Jr)
Date: Fri, 27 Jul 2012 06:03:59 +0000
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <CAD2Ti29LR+9=uO+LnrcsTYGSFW9S1FWuCLtoU-KwKkNmiVrnGQ@mail.gmail.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgQmQ6f1_025QgJsG4aEyH4yHwk-2aWUUY+2FPs7-Tpvvg@mail.gmail.com>
	<CAD2Ti29LR+9=uO+LnrcsTYGSFW9S1FWuCLtoU-KwKkNmiVrnGQ@mail.gmail.com>
Message-ID: <201207270604.01966.luke@dashjr.org>

On Friday, July 27, 2012 5:59:20 AM grarpamp wrote:
> > I now have an 1.8 ghz p3 celeron (128k cache) which should be
> > substantially slower than your machine, running vintage 2.6.20 linux.
> > Unfortunately I forgot to turn on timestamp logging so I don't know
> > how long it took to sync the chain, but it was less than two days as
> > that was the span between when I checked on it. It's staying current
> 
> Well, are you running bitcoin on, say, an FS with sha256 integrity
> trees for all bits and AES-128-XTS/CBC disk encryption?

Trying to run state-of-the-art encryption on EVERYTHING on an ancient computer 
is fairly ill-advised. I encourage you to continue with the plan to go 
shopping.

> Someone suggested I investigate turning off the above features.
> Since I'd find their loss undesirable [1], and there's not much to be
> tuned there anyways, I've given up and am investigating what more
> GHz and cores will do.
> 
> [1] Keeping data both intact and private is a good thing. Does your
> checkbook deserve any less?

Sounds reasonable...
but why do you also need to encrypt 2+ GB of public record?

Luke



From grarpamp at gmail.com  Fri Jul 27 06:28:40 2012
From: grarpamp at gmail.com (grarpamp)
Date: Fri, 27 Jul 2012 02:28:40 -0400
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <201207270604.01966.luke@dashjr.org>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgQmQ6f1_025QgJsG4aEyH4yHwk-2aWUUY+2FPs7-Tpvvg@mail.gmail.com>
	<CAD2Ti29LR+9=uO+LnrcsTYGSFW9S1FWuCLtoU-KwKkNmiVrnGQ@mail.gmail.com>
	<201207270604.01966.luke@dashjr.org>
Message-ID: <CAD2Ti29ruBpNc6ugvYh+e5msiKZtJoe+jsyZ5GYci86t8_Hykw@mail.gmail.com>

> shopping.

Good thing I can still spend, even with an incomplete blockchain :)

> but why do you also need to encrypt 2+ GB of public record?

1) I'm not seeing an option to split the wallet, debug log and other
privates pathwise from the blockchain.
2) Because encrypt everything is reasonable standard practice.
https://en.wikiquote.org/wiki/Cardinal_Richelieu [ref: disputed quote]

BTW, logs for this box say at least 9 days were spent attempting to
crunch the most recent 3100 blocks before it was overrun with new
ones and retired. (There's no formal start timestamp, just some entries...)



From gmaxwell at gmail.com  Fri Jul 27 06:56:06 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Fri, 27 Jul 2012 02:56:06 -0400
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <CAD2Ti29LR+9=uO+LnrcsTYGSFW9S1FWuCLtoU-KwKkNmiVrnGQ@mail.gmail.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>
	<A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>
	<CAD2Ti2-3sR_qusfmiStb8pzaxaB8DsPaK8a2+LWm_uL+DwvzeA@mail.gmail.com>
	<CAAS2fgREzk_dU0ie+YvDdRwKcTk6tk_i=a2Bb74w9uF=EwYhGA@mail.gmail.com>
	<CAD2Ti2_Pz9-SsHP49+6MKnM0er9zdAaFKDQaOgqDpju1_igd_g@mail.gmail.com>
	<CAD2Ti28snGOZn9mCSALZ341TNCex23zxKHCKYztnMK3cF=jaTQ@mail.gmail.com>
	<CAAS2fgQmQ6f1_025QgJsG4aEyH4yHwk-2aWUUY+2FPs7-Tpvvg@mail.gmail.com>
	<CAD2Ti29LR+9=uO+LnrcsTYGSFW9S1FWuCLtoU-KwKkNmiVrnGQ@mail.gmail.com>
Message-ID: <CAAS2fgT9ZSTj-yR4DQ_+8XTeGTTEJbo22LLmyxSn2sJM3jAbig@mail.gmail.com>

On Fri, Jul 27, 2012 at 1:59 AM, grarpamp <grarpamp at gmail.com> wrote:
>> I now have an 1.8 ghz p3 celeron (128k cache) which should be
>> substantially slower than your machine, running vintage 2.6.20 linux.
>> Unfortunately I forgot to turn on timestamp logging so I don't know
>> how long it took to sync the chain, but it was less than two days as
>> that was the span between when I checked on it. It's staying current
>
> Well, are you running bitcoin on, say, an FS with sha256 integrity
> trees for all bits and AES-128-XTS/CBC disk encryption?
> If not, we're not comparing the same apples, let alone the same OS.

The file system is using twofish-cbc-essiv:sha256, apparently.  (I
went and dug up a mothballed machine of mine because of your post).

And I agree, encrypting everything is a good practice? I once got a
disk back from RMA where only the first sectors were zeroed and the
rest had someone elses data, since then I've encrypted everything
because you can't wipe a dead drive.

I'd love to know precisely what Bitcoin is doing thats making your
machine so unhappy... but your configuration is uncommon for bitcoin
nodes in many distinct ways so it's not clear where to start.



From andreas at petersson.at  Fri Jul 27 08:53:06 2012
From: andreas at petersson.at (Andreas Petersson)
Date: Fri, 27 Jul 2012 10:53:06 +0200
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <CAD2Ti29LR+9=uO+LnrcsTYGSFW9S1FWuCLtoU-KwKkNmiVrnGQ@mail.gmail.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>
	<A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>
	<CAD2Ti2-3sR_qusfmiStb8pzaxaB8DsPaK8a2+LWm_uL+DwvzeA@mail.gmail.com>
	<CAAS2fgREzk_dU0ie+YvDdRwKcTk6tk_i=a2Bb74w9uF=EwYhGA@mail.gmail.com>
	<CAD2Ti2_Pz9-SsHP49+6MKnM0er9zdAaFKDQaOgqDpju1_igd_g@mail.gmail.com>
	<CAD2Ti28snGOZn9mCSALZ341TNCex23zxKHCKYztnMK3cF=jaTQ@mail.gmail.com>
	<CAAS2fgQmQ6f1_025QgJsG4aEyH4yHwk-2aWUUY+2FPs7-Tpvvg@mail.gmail.com>
	<CAD2Ti29LR+9=uO+LnrcsTYGSFW9S1FWuCLtoU-KwKkNmiVrnGQ@mail.gmail.com>
Message-ID: <501256F2.2070307@petersson.at>

I propose a pragmatic solution: Try running the Multibit client. i am 
not sure if the linux/java based installer would work,so maybe you have 
to build it from source.
I tried it out is really fast compared to bitcoin-qt. after install it 
took me 15 seconds to get updated and running. Importing a private 
key/rescanning the blockchain was done in under 30 minutes.
It requires Java 6, i think there is a distro even for freebsd.
of course, you cannot do things as solomining with it since it uses SPV.




From pieter.wuille at gmail.com  Fri Jul 27 09:59:42 2012
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Fri, 27 Jul 2012 11:59:42 +0200
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <CAPg+sBjpqqxL_GxYc+8Ry7DcXMkouO9bYi5VqOyEjj_5s0x06Q@mail.gmail.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>
	<A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>
	<CAD2Ti2-3sR_qusfmiStb8pzaxaB8DsPaK8a2+LWm_uL+DwvzeA@mail.gmail.com>
	<CAAS2fgREzk_dU0ie+YvDdRwKcTk6tk_i=a2Bb74w9uF=EwYhGA@mail.gmail.com>
	<CAD2Ti2_Pz9-SsHP49+6MKnM0er9zdAaFKDQaOgqDpju1_igd_g@mail.gmail.com>
	<CAD2Ti28snGOZn9mCSALZ341TNCex23zxKHCKYztnMK3cF=jaTQ@mail.gmail.com>
	<CAPg+sBjpqqxL_GxYc+8Ry7DcXMkouO9bYi5VqOyEjj_5s0x06Q@mail.gmail.com>
Message-ID: <CAPg+sBiT15KfRyBSeH15RKTcAPbq3Q12+8=w2dK8QncrWbD=sQ@mail.gmail.com>

And now to the list...

On Jul 27, 2012 6:21 AM, "grarpamp" <grarpamp at gmail.com> wrote:
>
> Update: this class of machine just became useless for bitcoin.
> When blk0002.dat was created to store more blocks, all forward
> progress processing blocks turned into losing ground by 20 or so
> a day. Guessing both datfiles were being accessed at once resulting
> in disk based overload. I've not seen any other mentions of crypto
> in this thread so I'm not sure how well new hardware would perform.
> Going shopping I guess.

I doubt the encryption is the problem. I have a much more recent machine
(i7 with 8 GiB RAM), and my blockchain is on a (userspace!) encrypted
filesystem. However, I do not notice any measurable slowdown from doing so.

You are however using a filesystem (ZFS) that is uses its own filesystem
caching implementation to reach some performance, and is known to be very
memory-hungry at that. Furthermore, I believe it is known to have
performance issues on 32-bit architectures. The bdb backend Bitcoin uses
does many I/O operations, and writes them synchronously to disk, killing
whatever caching your filesystem provides. For those who run a large
database on ZFS, I believe it is advised to put ZFS's intent log on a
separate SSD-backed device, to get fast synchronous writes.

That said, some improvememts may be coming. Mike has been working on
changing the backend from bdb to leveldb, which may (or may not) result in
a very different performance profile on your machine. Also, I've been
working on switching the bitcoin block verifier to use a different style
database layout ("ultraprune"), which is smaller, faster, and will support
pruning. A recent test on my own machine synced the blockchain up to the
latest checkpoint in 7 minutes (6 minutes when stored in RAM instead of
disk).

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120727/f3a2e557/attachment.html>

From grarpamp at gmail.com  Fri Jul 27 19:26:35 2012
From: grarpamp at gmail.com (grarpamp)
Date: Fri, 27 Jul 2012 15:26:35 -0400
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <CAPg+sBjpqqxL_GxYc+8Ry7DcXMkouO9bYi5VqOyEjj_5s0x06Q@mail.gmail.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>
	<A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>
	<CAD2Ti2-3sR_qusfmiStb8pzaxaB8DsPaK8a2+LWm_uL+DwvzeA@mail.gmail.com>
	<CAAS2fgREzk_dU0ie+YvDdRwKcTk6tk_i=a2Bb74w9uF=EwYhGA@mail.gmail.com>
	<CAD2Ti2_Pz9-SsHP49+6MKnM0er9zdAaFKDQaOgqDpju1_igd_g@mail.gmail.com>
	<CAD2Ti28snGOZn9mCSALZ341TNCex23zxKHCKYztnMK3cF=jaTQ@mail.gmail.com>
	<CAPg+sBjpqqxL_GxYc+8Ry7DcXMkouO9bYi5VqOyEjj_5s0x06Q@mail.gmail.com>
Message-ID: <CAD2Ti2_PG5yjzSMn0QVEtvd_tV0VneTq0pwdK3Fe49_daNBxrA@mail.gmail.com>

> You are however using a filesystem (ZFS)

I'm aware of the memory and i386 issues, and going shopping.

> The bdb backend Bitcoin uses
> does many I/O operations, and writes them synchronously to disk, killing
> whatever caching your filesystem provides.

Sync... yes, depending on the rate/sec and size of them, that would be an
issue. "Enterprise" systems with UPS, good disk, etc assume writes are
committed upon return, eliminating need for software apps to do sync. So
I need to figure out how to turn that off?

Is sync on for everything, or just the wallet (where it could be argued as ok)?

> For those who run a large
> database on ZFS, I believe it is advised to put ZFS's intent log on a
> separate SSD-backed device, to get fast synchronous writes.

Guessing bitcoin's writes are small? So a RAM dev intent would be cheaper
and faster than SSD for that.

> on switching the bitcoin block verifier to use a different style database
> layout ("ultraprune"), which is smaller, faster, and will support pruning.

I'll try to search that. If it's anything like "delete old blocks/tx/coins that
have both been validated in the past and fully spent in the future since we
no longer need to validate further back beyond them [1]", that would be
interesting.

[1] Unless you're a historian or some usage other than casual transactions.



From grarpamp at gmail.com  Fri Jul 27 19:37:27 2012
From: grarpamp at gmail.com (grarpamp)
Date: Fri, 27 Jul 2012 15:37:27 -0400
Subject: [Bitcoin-development] Scalability issues
In-Reply-To: <CAAS2fgT9ZSTj-yR4DQ_+8XTeGTTEJbo22LLmyxSn2sJM3jAbig@mail.gmail.com>
References: <CAD2Ti29dqCYoOMcX0zcOQnpLGCxnCjYHHqMzyyq+hvcVQ2c7nQ@mail.gmail.com>
	<CAAS2fgTHrWdXHbX8oiLgnrhdC+yxL4QyPd7S4iB8RMNip_sUGg@mail.gmail.com>
	<A428177D-62AD-4712-9053-47B7ED5DBC84@mac.com>
	<CAD2Ti2-3sR_qusfmiStb8pzaxaB8DsPaK8a2+LWm_uL+DwvzeA@mail.gmail.com>
	<CAAS2fgREzk_dU0ie+YvDdRwKcTk6tk_i=a2Bb74w9uF=EwYhGA@mail.gmail.com>
	<CAD2Ti2_Pz9-SsHP49+6MKnM0er9zdAaFKDQaOgqDpju1_igd_g@mail.gmail.com>
	<CAD2Ti28snGOZn9mCSALZ341TNCex23zxKHCKYztnMK3cF=jaTQ@mail.gmail.com>
	<CAAS2fgQmQ6f1_025QgJsG4aEyH4yHwk-2aWUUY+2FPs7-Tpvvg@mail.gmail.com>
	<CAD2Ti29LR+9=uO+LnrcsTYGSFW9S1FWuCLtoU-KwKkNmiVrnGQ@mail.gmail.com>
	<CAAS2fgT9ZSTj-yR4DQ_+8XTeGTTEJbo22LLmyxSn2sJM3jAbig@mail.gmail.com>
Message-ID: <CAD2Ti2-+W7cnxQe22_5iBvXMjeL_wYB=LnsPGF4zxpMR1BeJkQ@mail.gmail.com>

> I'd love to know precisely what Bitcoin is doing thats making your
> machine so unhappy... but your configuration is uncommon for bitcoin
> nodes in many distinct ways so it's not clear where to start.

That's why I posted the details of the machine so interested people
could duplicate it if they are working in these areas. Once I'm on new
hardware and playing around I, also, may find some discoveries.

I have no doubt that 'common' is windows seven on core2duo
without ecc and no crypto or hashing for the disk :)



From mike at plan99.net  Sun Jul 29 10:17:51 2012
From: mike at plan99.net (Mike Hearn)
Date: Sun, 29 Jul 2012 12:17:51 +0200
Subject: [Bitcoin-development] Signing release binaries
Message-ID: <CANEZrP045E8zh+tJ5YSwXPWxLq9x-HRFTUrAwXxki_B6LLxtGA@mail.gmail.com>

MacOS X 10.8 makes application signing borderline mandatory, in that
you cannot run unsigned apps unless you tweak your settings via the
control panel. You must sign with a certificate issued by Apple via
their "identified developer" program.

Windows allows but does not require signing. However, anti-virus
systems tend to use signers with good reputation as a whitelisting
signal. Signing Bitcoin releases makes sense because it may lead to,
at minimum, higher performance if AV engines ignore file reads/writes
by Bitcoin. And it can also shield us from false positives. You only
need to see the mess that the mining tools world has become to
understand why this is important.

As I don't take part in the release process, I can't help out with
this directly, but I believe it's important and would be willing to
throw some money in towards buying the signing certs for both
platforms. I guess Gavin would be the final signer.



From peter at coinlab.com  Sun Jul 29 12:20:44 2012
From: peter at coinlab.com (Peter Vessenes)
Date: Sun, 29 Jul 2012 21:20:44 +0900
Subject: [Bitcoin-development] Signing release binaries
In-Reply-To: <CANEZrP045E8zh+tJ5YSwXPWxLq9x-HRFTUrAwXxki_B6LLxtGA@mail.gmail.com>
References: <CANEZrP045E8zh+tJ5YSwXPWxLq9x-HRFTUrAwXxki_B6LLxtGA@mail.gmail.com>
Message-ID: <7209155576954731078@unknownmsgid>

This is a good idea. I think I can come up with the cash, I will
follow up with gavin.

Sent from my smartphone!

On Jul 29, 2012, at 7:18 PM, Mike Hearn <mike at plan99.net> wrote:

> MacOS X 10.8 makes application signing borderline mandatory, in that
> you cannot run unsigned apps unless you tweak your settings via the
> control panel. You must sign with a certificate issued by Apple via
> their "identified developer" program.
>
> Windows allows but does not require signing. However, anti-virus
> systems tend to use signers with good reputation as a whitelisting
> signal. Signing Bitcoin releases makes sense because it may lead to,
> at minimum, higher performance if AV engines ignore file reads/writes
> by Bitcoin. And it can also shield us from false positives. You only
> need to see the mess that the mining tools world has become to
> understand why this is important.
>
> As I don't take part in the release process, I can't help out with
> this directly, but I believe it's important and would be willing to
> throw some money in towards buying the signing certs for both
> platforms. I guess Gavin would be the final signer.
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and
> threat landscape has changed and how IT managers can respond. Discussions
> will include endpoint security, mobile security and the latest in malware
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From zgenjix at yahoo.com  Sun Jul 29 16:31:06 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Sun, 29 Jul 2012 09:31:06 -0700 (PDT)
Subject: [Bitcoin-development] script tests - invalid script in
	script_valid.json?
Message-ID: <1343579466.30862.YahooMailNeo@web121004.mail.ne1.yahoo.com>

Hi!

Is this a valid script?

["1 0 1", "WITHIN NOT"]

The first value (1) is tested to make sure it is between the lower (0) and upper (1) value. This evaluates to true, placing on the stack a single byte of [01]. NOT then inverses this to a 0 byte false value of [].

What am I missing here?

Thanks



From moon at justmoon.de  Sun Jul 29 16:33:25 2012
From: moon at justmoon.de (Stefan Thomas)
Date: Sun, 29 Jul 2012 18:33:25 +0200
Subject: [Bitcoin-development] script tests - invalid script in
	script_valid.json?
In-Reply-To: <1343579466.30862.YahooMailNeo@web121004.mail.ne1.yahoo.com>
References: <1343579466.30862.YahooMailNeo@web121004.mail.ne1.yahoo.com>
Message-ID: <501565D5.4060608@justmoon.de>

OP_WITHIN is lower-bound-inclusive, but upper bound exclusive, so 1 0 1 WITHIN is false.


bool fValue = (bn2 <= bn1 && bn1 < bn3);

https://github.com/bitcoin/bitcoin/blob/master/src/script.cpp#L854

On 7/29/2012 6:31 PM, Amir Taaki wrote:
> Hi!
>
> Is this a valid script?
>
> ["1 0 1", "WITHIN NOT"]
>
> The first value (1) is tested to make sure it is between the lower (0) and upper (1) value. This evaluates to true, placing on the stack a single byte of [01]. NOT then inverses this to a 0 byte false value of [].
>
> What am I missing here?
>
> Thanks
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and 
> threat landscape has changed and how IT managers can respond. Discussions 
> will include endpoint security, mobile security and the latest in malware 
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>




From zgenjix at yahoo.com  Sun Jul 29 16:42:34 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Sun, 29 Jul 2012 09:42:34 -0700 (PDT)
Subject: [Bitcoin-development] script tests - invalid script in
	script_valid.json?
In-Reply-To: <501565D5.4060608@justmoon.de>
References: <1343579466.30862.YahooMailNeo@web121004.mail.ne1.yahoo.com>
	<501565D5.4060608@justmoon.de>
Message-ID: <1343580154.34128.YahooMailNeo@web121004.mail.ne1.yahoo.com>

oh, bitcoin...

Thanks justmoon :D



----- Original Message -----
From: Stefan Thomas <moon at justmoon.de>
To: bitcoin-development at lists.sourceforge.net
Cc: 
Sent: Sunday, July 29, 2012 1:33 PM
Subject: Re: [Bitcoin-development] script tests - invalid script in script_valid.json?

OP_WITHIN is lower-bound-inclusive, but upper bound exclusive, so 1 0 1 WITHIN is false.


bool fValue = (bn2 <= bn1 && bn1 < bn3);

https://github.com/bitcoin/bitcoin/blob/master/src/script.cpp#L854

On 7/29/2012 6:31 PM, Amir Taaki wrote:
> Hi!
>
> Is this a valid script?
>
> ["1 0 1", "WITHIN NOT"]
>
> The first value (1) is tested to make sure it is between the lower (0) and upper (1) value. This evaluates to true, placing on the stack a single byte of [01]. NOT then inverses this to a 0 byte false value of [].
>
> What am I missing here?
>
> Thanks
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and 
> threat landscape has changed and how IT managers can respond. Discussions 
> will include endpoint security, mobile security and the latest in malware 
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>


------------------------------------------------------------------------------
Live Security Virtual Conference
Exclusive live event will cover all the ways today's security and 
threat landscape has changed and how IT managers can respond. Discussions 
will include endpoint security, mobile security and the latest in malware 
threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From luke at dashjr.org  Sun Jul 29 17:15:14 2012
From: luke at dashjr.org (Luke-Jr)
Date: Sun, 29 Jul 2012 17:15:14 +0000
Subject: [Bitcoin-development] Signing release binaries
In-Reply-To: <CANEZrP045E8zh+tJ5YSwXPWxLq9x-HRFTUrAwXxki_B6LLxtGA@mail.gmail.com>
References: <CANEZrP045E8zh+tJ5YSwXPWxLq9x-HRFTUrAwXxki_B6LLxtGA@mail.gmail.com>
Message-ID: <201207291715.15969.luke@dashjr.org>

On Sunday, July 29, 2012 10:17:51 AM Mike Hearn wrote:
> I guess Gavin would be the final signer.

Considering that Gavin is not interested in participating in any way in the 
stable versions, I would prefer to see someone else responsible for OS-vendor 
signing.




From moon at justmoon.de  Sun Jul 29 17:35:12 2012
From: moon at justmoon.de (Stefan Thomas)
Date: Sun, 29 Jul 2012 19:35:12 +0200
Subject: [Bitcoin-development] script tests - invalid script in
	script_valid.json?
In-Reply-To: <1343580154.34128.YahooMailNeo@web121004.mail.ne1.yahoo.com>
References: <1343579466.30862.YahooMailNeo@web121004.mail.ne1.yahoo.com>
	<501565D5.4060608@justmoon.de>
	<1343580154.34128.YahooMailNeo@web121004.mail.ne1.yahoo.com>
Message-ID: <50157450.8070806@justmoon.de>

I was baffled by this exact script, too. :)

Big props to Gavin for adding those data-driven test cases. I can't
overstate how useful they are.

Is there interest to port more tests (P2SH, checksig, checkmultisig,
block verification, maybe even DoS rules) into data-driven format? It
might be something that I'd like to help with if pull requests in that
direction are welcome.

On 7/29/2012 6:42 PM, Amir Taaki wrote:
> oh, bitcoin...
>
> Thanks justmoon :D
>
>
>
> ----- Original Message -----
> From: Stefan Thomas <moon at justmoon.de>
> To: bitcoin-development at lists.sourceforge.net
> Cc: 
> Sent: Sunday, July 29, 2012 1:33 PM
> Subject: Re: [Bitcoin-development] script tests - invalid script in script_valid.json?
>
> OP_WITHIN is lower-bound-inclusive, but upper bound exclusive, so 1 0 1 WITHIN is false.
>
>
> bool fValue = (bn2 <= bn1 && bn1 < bn3);
>
> https://github.com/bitcoin/bitcoin/blob/master/src/script.cpp#L854
>
> On 7/29/2012 6:31 PM, Amir Taaki wrote:
>> Hi!
>>
>> Is this a valid script?
>>
>> ["1 0 1", "WITHIN NOT"]
>>
>> The first value (1) is tested to make sure it is between the lower (0) and upper (1) value. This evaluates to true, placing on the stack a single byte of [01]. NOT then inverses this to a 0 byte false value of [].
>>
>> What am I missing here?
>>
>> Thanks
>>
>> ------------------------------------------------------------------------------
>> Live Security Virtual Conference
>> Exclusive live event will cover all the ways today's security and 
>> threat landscape has changed and how IT managers can respond. Discussions 
>> will include endpoint security, mobile security and the latest in malware 
>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and 
> threat landscape has changed and how IT managers can respond. Discussions 
> will include endpoint security, mobile security and the latest in malware 
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and 
> threat landscape has changed and how IT managers can respond. Discussions 
> will include endpoint security, mobile security and the latest in malware 
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>




From jgarzik at exmulti.com  Sun Jul 29 18:48:47 2012
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Sun, 29 Jul 2012 14:48:47 -0400
Subject: [Bitcoin-development] script tests - invalid script in
	script_valid.json?
In-Reply-To: <50157450.8070806@justmoon.de>
References: <1343579466.30862.YahooMailNeo@web121004.mail.ne1.yahoo.com>
	<501565D5.4060608@justmoon.de>
	<1343580154.34128.YahooMailNeo@web121004.mail.ne1.yahoo.com>
	<50157450.8070806@justmoon.de>
Message-ID: <CA+8xBpeYPizHsSGiozT=dz5VQWn+eH_dL1K0DToG07uUxOGNfA@mail.gmail.com>

On Sun, Jul 29, 2012 at 1:35 PM, Stefan Thomas <moon at justmoon.de> wrote:
> Big props to Gavin for adding those data-driven test cases. I can't
> overstate how useful they are.

+1  they are a useful, cross-platform test tool.

pynode will be making use of them shortly.

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From gavinandresen at gmail.com  Mon Jul 30 00:52:28 2012
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Sun, 29 Jul 2012 20:52:28 -0400
Subject: [Bitcoin-development] script tests - invalid script in
	script_valid.json?
In-Reply-To: <50157450.8070806@justmoon.de>
References: <1343579466.30862.YahooMailNeo@web121004.mail.ne1.yahoo.com>
	<501565D5.4060608@justmoon.de>
	<1343580154.34128.YahooMailNeo@web121004.mail.ne1.yahoo.com>
	<50157450.8070806@justmoon.de>
Message-ID: <CABsx9T016OmU2qU1a67=YmpA4VDbzrddOamc8=Mt6x7BhVO1Uw@mail.gmail.com>

> Is there interest to port more tests (P2SH, checksig, checkmultisig,
> block verification, maybe even DoS rules) into data-driven format? It
> might be something that I'd like to help with if pull requests in that
> direction are welcome.

Yes, more tests are definitely welcome.

check*sig tests are tricky, because they have to refer to previous
unspent transactions and private keys (so require a particular block
chain to test against). Brilliant ideas on a simple data-driven format
welcome.

block verification tests would be great; a collection of good/bad
block chains, starting from a common chain (maybe the testnet3
tesnet-in-a-box chain) would be very useful for regression testing.

-- 
--
Gavin Andresen



From da2ce7 at gmail.com  Mon Jul 30 02:29:43 2012
From: da2ce7 at gmail.com (Cameron Garnham)
Date: Mon, 30 Jul 2012 12:29:43 +1000
Subject: [Bitcoin-development] Signing release binaries
In-Reply-To: <201207291715.15969.luke@dashjr.org>
References: <CANEZrP045E8zh+tJ5YSwXPWxLq9x-HRFTUrAwXxki_B6LLxtGA@mail.gmail.com>
	<201207291715.15969.luke@dashjr.org>
Message-ID: <5015F197.4040302@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

I'm not a vendor, however I have a code-signing key for windows; I could
sign the windows installer and binary.

On 30/07/2012 3:15 AM, Luke-Jr wrote:
> On Sunday, July 29, 2012 10:17:51 AM Mike Hearn wrote:
>> I guess Gavin would be the final signer.
> 
> Considering that Gavin is not interested in participating in any way in the 
> stable versions, I would prefer to see someone else responsible for OS-vendor 
> signing.
> 
> 
> ------------------------------------------------------------------------------
> Live Security Virtual Conference
> Exclusive live event will cover all the ways today's security and 
> threat landscape has changed and how IT managers can respond. Discussions 
> will include endpoint security, mobile security and the latest in malware 
> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.19 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iF4EAREIAAYFAlAV8ZYACgkQBJ8cMDO159ZNVgD+KsQUlNcTDSmTGaHvLbAw0Cxy
OCDfnsFbaiLoX2xWP3MBAOnN/QvcYY8f2WzMfI+N1PfnydRYGxlkA2JZ2Nrtnxcv
=qeUe
-----END PGP SIGNATURE-----



From ppauly at gmail.com  Mon Jul 30 13:02:00 2012
From: ppauly at gmail.com (Peter Pauly)
Date: Mon, 30 Jul 2012 09:02:00 -0400
Subject: [Bitcoin-development] Signing release binaries
In-Reply-To: <5015F197.4040302@gmail.com>
References: <CANEZrP045E8zh+tJ5YSwXPWxLq9x-HRFTUrAwXxki_B6LLxtGA@mail.gmail.com>
	<201207291715.15969.luke@dashjr.org> <5015F197.4040302@gmail.com>
Message-ID: <CAKXfWbSKV-eNX-0PrLSdRb4bU97zRQtobGRFkeJ6wbA0v7FMdw@mail.gmail.com>

I'd like to see the binaries signed with gpg, independent of any signatures
required for various operating systems.

I can't imagine a worse scenario than the bitcoin.org site being hacked and
the binaries replaced with wallet-stealing code. All of the developers seem
to have gpg keys, how hard can it be to provide a detached gpg signature
for the binary?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120730/9ec91774/attachment.html>

From zgenjix at yahoo.com  Mon Jul 30 14:41:04 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Mon, 30 Jul 2012 07:41:04 -0700 (PDT)
Subject: [Bitcoin-development] script tests - invalid script in
	script_valid.json?
In-Reply-To: <CABsx9T016OmU2qU1a67=YmpA4VDbzrddOamc8=Mt6x7BhVO1Uw@mail.gmail.com>
References: <1343579466.30862.YahooMailNeo@web121004.mail.ne1.yahoo.com>
	<501565D5.4060608@justmoon.de>
	<1343580154.34128.YahooMailNeo@web121004.mail.ne1.yahoo.com>
	<50157450.8070806@justmoon.de>
	<CABsx9T016OmU2qU1a67=YmpA4VDbzrddOamc8=Mt6x7BhVO1Uw@mail.gmail.com>
Message-ID: <1343659264.6245.YahooMailNeo@web121005.mail.ne1.yahoo.com>

Yep, I want to chip in and also express my gratitude for these useful tests. I sent a personal email to Gavin before.

I plan to make some more complex tests by combining several of the simpler ones.



----- Original Message -----
From: Gavin Andresen <gavinandresen at gmail.com>
To: Stefan Thomas <moon at justmoon.de>
Cc: bitcoin-development at lists.sourceforge.net
Sent: Sunday, July 29, 2012 9:52 PM
Subject: Re: [Bitcoin-development] script tests - invalid script in script_valid.json?

> Is there interest to port more tests (P2SH, checksig, checkmultisig,
> block verification, maybe even DoS rules) into data-driven format? It
> might be something that I'd like to help with if pull requests in that
> direction are welcome.

Yes, more tests are definitely welcome.

check*sig tests are tricky, because they have to refer to previous
unspent transactions and private keys (so require a particular block
chain to test against). Brilliant ideas on a simple data-driven format
welcome.

block verification tests would be great; a collection of good/bad
block chains, starting from a common chain (maybe the testnet3
tesnet-in-a-box chain) would be very useful for regression testing.

-- 
--
Gavin Andresen

------------------------------------------------------------------------------
Live Security Virtual Conference
Exclusive live event will cover all the ways today's security and 
threat landscape has changed and how IT managers can respond. Discussions 
will include endpoint security, mobile security and the latest in malware 
threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From zgenjix at yahoo.com  Mon Jul 30 20:26:12 2012
From: zgenjix at yahoo.com (Amir Taaki)
Date: Mon, 30 Jul 2012 13:26:12 -0700 (PDT)
Subject: [Bitcoin-development] BIP 22 - getmemorypool
Message-ID: <1343679972.9880.YahooMailNeo@web121004.mail.ne1.yahoo.com>

Hi,

luke-jr wants me to split this BIP into 3 separate BIPs because he says that other devs felt it was too unfocused and covered too many topics. However this discussion took place on IRC, and I never saw any of it to ascertain what happened (BIP 1 says drafts should be evaluated on the mailing list).

I think a discussion of BIP 22 perhaps did happen on the mailing list, but I don't remember it. Sorry if that's the case.

Anyway before granting the permission to allow this proposal to be pared down, and new BIPs granted for the non-core parts of this proposal, I want to know what people think. I'm not a miner myself, so I'm prescient of my lack of knowledge in the topic.


https://en.bitcoin.it/wiki/BIP_0022

Thanks




From luke at dashjr.org  Mon Jul 30 20:30:59 2012
From: luke at dashjr.org (Luke-Jr)
Date: Mon, 30 Jul 2012 20:30:59 +0000
Subject: [Bitcoin-development] BIP 22 - getmemorypool
In-Reply-To: <1343679972.9880.YahooMailNeo@web121004.mail.ne1.yahoo.com>
References: <1343679972.9880.YahooMailNeo@web121004.mail.ne1.yahoo.com>
Message-ID: <201207302031.01396.luke@dashjr.org>

On Monday, July 30, 2012 8:26:12 PM Amir Taaki wrote:
> https://en.bitcoin.it/wiki/BIP_0022

Note that the Pooled Mining parts have already been moved to:
	https://en.bitcoin.it/wiki/BIP_GMPPM

It just needs a number assigned (as the last part).



From gmaxwell at gmail.com  Mon Jul 30 20:32:25 2012
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 30 Jul 2012 16:32:25 -0400
Subject: [Bitcoin-development] BIP 22 - getmemorypool
In-Reply-To: <1343679972.9880.YahooMailNeo@web121004.mail.ne1.yahoo.com>
References: <1343679972.9880.YahooMailNeo@web121004.mail.ne1.yahoo.com>
Message-ID: <CAAS2fgQcGoEpD74S0SaiNxOe0NiLmUWqbJ14zPNp+AUCmueLaw@mail.gmail.com>

On Mon, Jul 30, 2012 at 4:26 PM, Amir Taaki <zgenjix at yahoo.com> wrote:
> Hi,
>
> luke-jr wants me to split this BIP into 3 separate BIPs because he says that other devs felt it was too unfocused and covered too many topics. However this discussion took place on IRC, a

It actually took place on this list:
http://sourceforge.net/mailarchive/forum.php?thread_name=20120612105038.GA29784%40vps7135.xlshosting.net&forum_name=bitcoin-development

It just took some IRC prodding to get Luke to move in the direction of
breaking it up to get the optional parts that Pieter objected to out
of the spec.

Perhaps other people missed it too... so discussing it more sounds
fine if anyone objects.



From pieter.wuille at gmail.com  Tue Jul 31 14:26:21 2012
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Tue, 31 Jul 2012 16:26:21 +0200
Subject: [Bitcoin-development] script tests - invalid script in
	script_valid.json?
In-Reply-To: <CABsx9T016OmU2qU1a67=YmpA4VDbzrddOamc8=Mt6x7BhVO1Uw@mail.gmail.com>
References: <1343579466.30862.YahooMailNeo@web121004.mail.ne1.yahoo.com>
	<501565D5.4060608@justmoon.de>
	<1343580154.34128.YahooMailNeo@web121004.mail.ne1.yahoo.com>
	<50157450.8070806@justmoon.de>
	<CABsx9T016OmU2qU1a67=YmpA4VDbzrddOamc8=Mt6x7BhVO1Uw@mail.gmail.com>
Message-ID: <CAPg+sBhMaX2=t1peYRUWk4DCyMFxihPUV2+e+4p8zVLcCci-kQ@mail.gmail.com>

On Mon, Jul 30, 2012 at 2:52 AM, Gavin Andresen <gavinandresen at gmail.com> wrote:
> check*sig tests are tricky, because they have to refer to previous
> unspent transactions and private keys (so require a particular block
> chain to test against). Brilliant ideas on a simple data-driven format
> welcome.

Ultraprune changes the block validation mechanism to only use a set of
coins and the latest block pointer as state. This state is represented
by an abstract class with several implementations. It would be easy to
have a testset run with a memory-backed coin set as state, with the
list of coins and blocks loaded from a file.

-- 
Pieter



From bitcoin-list at bluematt.me  Tue Jul 31 14:39:45 2012
From: bitcoin-list at bluematt.me (Matt Corallo)
Date: Tue, 31 Jul 2012 16:39:45 +0200
Subject: [Bitcoin-development] script tests - invalid script in
 script_valid.json?
In-Reply-To: <CABsx9T016OmU2qU1a67=YmpA4VDbzrddOamc8=Mt6x7BhVO1Uw@mail.gmail.com>
References: <1343579466.30862.YahooMailNeo@web121004.mail.ne1.yahoo.com>
	<501565D5.4060608@justmoon.de>
	<1343580154.34128.YahooMailNeo@web121004.mail.ne1.yahoo.com>
	<50157450.8070806@justmoon.de>
	<CABsx9T016OmU2qU1a67=YmpA4VDbzrddOamc8=Mt6x7BhVO1Uw@mail.gmail.com>
Message-ID: <1343745585.3416.3.camel@bmthinkpad.lan.bluematt.me>

On Sun, 2012-07-29 at 20:52 -0400, Gavin Andresen wrote:
> > Is there interest to port more tests (P2SH, checksig, checkmultisig,
> > block verification, maybe even DoS rules) into data-driven format? It
> > might be something that I'd like to help with if pull requests in that
> > direction are welcome.
> 
> Yes, more tests are definitely welcome.
> 
> check*sig tests are tricky, because they have to refer to previous
> unspent transactions and private keys (so require a particular block
> chain to test against). Brilliant ideas on a simple data-driven format
> welcome.
> 
> block verification tests would be great; a collection of good/bad
> block chains, starting from a common chain (maybe the testnet3
> tesnet-in-a-box chain) would be very useful for regression testing.
> 

I wrote a simple block chain tester (that is capable of forking,
checking invalid blocks, etc) as a part of the bitcoinj test suite.  Its
more targeted at testing bitcoinj directly and keeping the bitcoinj test
suite light weight, so if it were to be more generic some tweaks could
be done (not requiring tweaking the minimum difficulty/genesis block
hash/etc would be first).  It doesn't have that many test cases yet, but
it is capable of sanity-testing reorgs/etc.  Its mostly the first two
commits listed at
http://code.google.com/r/bluemattme-bitcoinj/source/list?name=fullverif

Matt




