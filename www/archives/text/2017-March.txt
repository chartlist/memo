From bram at bittorrent.com  Wed Mar  1 01:47:30 2017
From: bram at bittorrent.com (Bram Cohen)
Date: Tue, 28 Feb 2017 17:47:30 -0800
Subject: [bitcoin-dev] A Better MMR Definition
In-Reply-To: <CAPg+sBgyToj8NcYSFJ376WNLGXO7aSwpZRvd0zuFeB=rF14rfg@mail.gmail.com>
References: <20170223235105.GA28497@savin.petertodd.org>
	<CA+KqGkowxEZeAFYa2JJchBDtRkg1p3YZNocivzu3fAtgRLDRBQ@mail.gmail.com>
	<20170224010943.GA29218@savin.petertodd.org>
	<CA+KqGkrOK76S3ffPJmpqYcBwtSeKESqN16yZsrwzDR6JZZmwFA@mail.gmail.com>
	<20170224025811.GA31911@savin.petertodd.org>
	<CA+KqGkq7gavAnAk-tcA+gxL2sWpv3ENhEmHrQHaPdyAsKrLjGg@mail.gmail.com>
	<20170224031531.GA32118@savin.petertodd.org>
	<CA+KqGkrfhg3GnbWwvKXHQ2NWuCnfzYyTPUxRhzYMuDBiNQR4eA@mail.gmail.com>
	<20170224043613.GA32502@savin.petertodd.org>
	<CA+KqGkpi4GvgU-K6vt-U5ZN4AkpjZ0rruzddoJS4-V0TcnyqUQ@mail.gmail.com>
	<20170225041202.GA11152@savin.petertodd.org>
	<CA+KqGkqs8F1hK6y-JnLFRpqhQ5i8i+MXVmtGUQBYmE5d1OCAAg@mail.gmail.com>
	<CAHUwRvtseXUx_ShfHd9r9LW1_8cJYcofQ4s1vEpkpKJEniDTzA@mail.gmail.com>
	<CA+KqGkrNDEUB8yzkX+ya1ikb46zmKA6Bt4-skqUgLzo=nnNtUw@mail.gmail.com>
	<CAPg+sBgyToj8NcYSFJ376WNLGXO7aSwpZRvd0zuFeB=rF14rfg@mail.gmail.com>
Message-ID: <CA+KqGkrrr-hJF72PGiW+w6mdi_unVtC1=xaz1nxLWJc0YX0VTw@mail.gmail.com>

On Tue, Feb 28, 2017 at 3:24 PM, Pieter Wuille <pieter.wuille at gmail.com>
wrote:

>
> Yes, someone needs to have a lookup table from prevouts to TXO tree
> positions. But because an insertion-ordered TXO tree does not rebalance,
> that table can be maintained by wallets or service providers for just their
> own coins, instead of by every full node and miner individually for
> everyone's coins.
>

That falls apart if you want to support proofs of non-spend, which is the
point of the whole exercise
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170228/7a006446/attachment.html>

From pete at petertodd.org  Wed Mar  1 01:56:16 2017
From: pete at petertodd.org (Peter Todd)
Date: Tue, 28 Feb 2017 20:56:16 -0500
Subject: [bitcoin-dev] A Better MMR Definition
In-Reply-To: <CA+KqGkrrr-hJF72PGiW+w6mdi_unVtC1=xaz1nxLWJc0YX0VTw@mail.gmail.com>
References: <20170224031531.GA32118@savin.petertodd.org>
	<CA+KqGkrfhg3GnbWwvKXHQ2NWuCnfzYyTPUxRhzYMuDBiNQR4eA@mail.gmail.com>
	<20170224043613.GA32502@savin.petertodd.org>
	<CA+KqGkpi4GvgU-K6vt-U5ZN4AkpjZ0rruzddoJS4-V0TcnyqUQ@mail.gmail.com>
	<20170225041202.GA11152@savin.petertodd.org>
	<CA+KqGkqs8F1hK6y-JnLFRpqhQ5i8i+MXVmtGUQBYmE5d1OCAAg@mail.gmail.com>
	<CAHUwRvtseXUx_ShfHd9r9LW1_8cJYcofQ4s1vEpkpKJEniDTzA@mail.gmail.com>
	<CA+KqGkrNDEUB8yzkX+ya1ikb46zmKA6Bt4-skqUgLzo=nnNtUw@mail.gmail.com>
	<CAPg+sBgyToj8NcYSFJ376WNLGXO7aSwpZRvd0zuFeB=rF14rfg@mail.gmail.com>
	<CA+KqGkrrr-hJF72PGiW+w6mdi_unVtC1=xaz1nxLWJc0YX0VTw@mail.gmail.com>
Message-ID: <20170301015616.GA11592@savin.petertodd.org>

On Tue, Feb 28, 2017 at 05:47:30PM -0800, Bram Cohen via bitcoin-dev wrote:
> On Tue, Feb 28, 2017 at 3:24 PM, Pieter Wuille <pieter.wuille at gmail.com>
> wrote:
> 
> >
> > Yes, someone needs to have a lookup table from prevouts to TXO tree
> > positions. But because an insertion-ordered TXO tree does not rebalance,
> > that table can be maintained by wallets or service providers for just their
> > own coins, instead of by every full node and miner individually for
> > everyone's coins.
> >
> 
> That falls apart if you want to support proofs of non-spend, which is the
> point of the whole exercise

Can you explain in more detail what you mean there?

-- 
https://petertodd.org 'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170228/403df8fa/attachment.sig>

From pete at petertodd.org  Wed Mar  1 22:31:01 2017
From: pete at petertodd.org (Peter Todd)
Date: Wed, 1 Mar 2017 17:31:01 -0500
Subject: [bitcoin-dev] A Better MMR Definition
In-Reply-To: <CA+KqGkqs8F1hK6y-JnLFRpqhQ5i8i+MXVmtGUQBYmE5d1OCAAg@mail.gmail.com>
References: <20170224010943.GA29218@savin.petertodd.org>
	<CA+KqGkrOK76S3ffPJmpqYcBwtSeKESqN16yZsrwzDR6JZZmwFA@mail.gmail.com>
	<20170224025811.GA31911@savin.petertodd.org>
	<CA+KqGkq7gavAnAk-tcA+gxL2sWpv3ENhEmHrQHaPdyAsKrLjGg@mail.gmail.com>
	<20170224031531.GA32118@savin.petertodd.org>
	<CA+KqGkrfhg3GnbWwvKXHQ2NWuCnfzYyTPUxRhzYMuDBiNQR4eA@mail.gmail.com>
	<20170224043613.GA32502@savin.petertodd.org>
	<CA+KqGkpi4GvgU-K6vt-U5ZN4AkpjZ0rruzddoJS4-V0TcnyqUQ@mail.gmail.com>
	<20170225041202.GA11152@savin.petertodd.org>
	<CA+KqGkqs8F1hK6y-JnLFRpqhQ5i8i+MXVmtGUQBYmE5d1OCAAg@mail.gmail.com>
Message-ID: <20170301223101.GA17022@savin.petertodd.org>

On Fri, Feb 24, 2017 at 10:23:20PM -0800, Bram Cohen wrote:
> > Your merkle-set implementation is 1500 lines of densely written Python
> 
> 
> The reference implementation which is included in those 1500 lines is less
> than 300 lines and fairly straightforward. The non-reference implementation
> always behaves semantically identically to the reference implementation, it
> just does so faster and using less memory.

Great!

But do you see my point here? Even though I spent some time reading through
that code, I didn't realise you had a 300 line reference implementation
embedded within those 1500 lines. This makes it less likely for you to get any
review on either.

A better way to present your work would have been to at least explain that at
the top of the file, and perhaps even better, split the reference
implementation and optimized implementation into two separate files. If you did
this, you'd be more likely to get others to review your work.

> > with
> > almost no comments,
> 
> 
> The comments at the top explain both the proof format and the in-memory
> data structures very precisely. The whole codebase was reviewed by a
> coworker of mine and comments were added explaining the subtleties which
> tripped him up.

Yes, and it's good that you have those comments. But the codebase itself could
definitely use more, and adding those comments would help get more people
reviewing your work.

> > and less than a 100 lines of (also uncommented) tests.
> 
> 
> Those tests get 98% code coverage and extensively hit not only the lines of
> code but the semantic edge cases as well. The lines which aren't hit are
> convenience functions and error conditions of the parsing code for when
> it's passed bad data

Great! But you see how without comments, it'll take a tremendous amount of work
for an external reviewer like myself to determine what is being tested, and
what edge cases you're targeting.

In fact, I'd suggest that for things like edge cases, you test edge cases in
separate unit tests that explain what edge cases you're trying to catch.

> > By
> > comparison, my Python MMR implementation is 300 lines of very readable
> > Python
> > with lots of comments, a 200 line explanation at the top, and 200 lines of
> > (commented) tests. Yet no-one is taking the (still considerable) effort to
> > understand and comment on my implementation. :)
> >
> 
> Given that maaku's Merkle prefix trees were shelved because of performance
> problems despite being written in C and operating in basically the same way
> as your code and my reference code, it's clear that non-optimized Python
> won't be touching the bitcoin codebase any time soon.

To be clear, I gave my implementation as an example of how hard it is to get
external review, not to suggest it's going to be a part of Bitcoin; I've
pointed a lot of people to it when they asked for a MMR implementation, and I'm
sure if some of those people had reviewed it carefully they would have
suggested changes. Yet they haven't, because doing good review is a lot of
work!

> > In particular, while at the top of merkle_set.py you have a list of
> > advantages,
> > and a bunch of TODO's, you don't explain *why* the code has any of these
> > advantages. To figure that out, I'd have to read and understand 1500 lines
> > of
> > densely written Python. Without a human-readable pitch, not many people are
> > going to do that, myself included.
> >
> 
> It's all about cache coherence. When doing operations it pulls in a bunch
> of things which are near each other in memory instead of jumping all over
> the place. The improvements it gets should be much greater than the ones
> gained from insertion ordering, although the two could be accretive.

That's good, but that paragraph should be part of your MerkleSet git repo,
preferably in the README, where reviewers will immediately find it and get
excited about reviewing your code.

-- 
https://petertodd.org 'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170301/53de0322/attachment.sig>

From luke at dashjr.org  Sat Mar  4 08:27:32 2017
From: luke at dashjr.org (Luke Dashjr)
Date: Sat, 4 Mar 2017 08:27:32 +0000
Subject: [bitcoin-dev]  Currency/exchange rate information API
Message-ID: <201703040827.33798.luke@dashjr.org>

Investigating what it would take to add fiat currency information to Bitcoin 
Knots, I noticed Electrum currently has many implementations, one for each 
exchange rate provider, due to lack of a common format for such data.

Therefore, I put together an initial draft of a BIP that could standardise 
this so wallets (or other software) and exchange rate providers can simply 
interoperate without a lot of overhead reimplementing the same thing many 
ways.

One thing I am unsure about, is that currently this draft requires using XBT 
(as BTC) for Bitcoin amounts. It would seem nicer to use satoshis, but those 
don't really have a pseudo-ISO currency code to fit in nicely...

Current draft here:
    https://github.com/luke-jr/bips/blob/bip-xchgrate/bip-xchgrate.mediawiki

Thoughts? Anything critical missing? Ways to make the interface better?

Luke

From karl at dglab.com  Sat Mar  4 15:18:50 2017
From: karl at dglab.com (=?UTF-8?B?44Ki44Or44Og44CA44Kr44O844Or44Oo44OP44Oz?=)
Date: Sat, 4 Mar 2017 07:18:50 -0800
Subject: [bitcoin-dev] Currency/exchange rate information API
In-Reply-To: <201703040827.33798.luke@dashjr.org>
References: <201703040827.33798.luke@dashjr.org>
Message-ID: <CALJw2w49N273-sJ2cGjX=DncEYDh703S6F_7zupqmDJRsz+QZQ@mail.gmail.com>

I am surprised nothing like this exists already, so am all for the idea.

Maybe I am misunderstanding, but I'm not sure you want to have
thousand separators and other locale stuff in there. All currencies
including USD are often shown in Swedish using space or dot as
thousand separator and comma as decimal separator, e.g. "1.234,56 USD"
or "1 234,56 USD". I.e. this is something that the locale of the
user's environment defines, not something the server should have
opinions about. It is also not ideal to propose a given format based
on the user's locale, as some users have preferences for this (I
personally use US locale for numbers, and a US person who is visiting
Sweden wouldn't want this to suddenly change).

-Kalle.

On Sat, Mar 4, 2017 at 12:27 AM, Luke Dashjr via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> Investigating what it would take to add fiat currency information to Bitcoin
> Knots, I noticed Electrum currently has many implementations, one for each
> exchange rate provider, due to lack of a common format for such data.
>
> Therefore, I put together an initial draft of a BIP that could standardise
> this so wallets (or other software) and exchange rate providers can simply
> interoperate without a lot of overhead reimplementing the same thing many
> ways.
>
> One thing I am unsure about, is that currently this draft requires using XBT
> (as BTC) for Bitcoin amounts. It would seem nicer to use satoshis, but those
> don't really have a pseudo-ISO currency code to fit in nicely...
>
> Current draft here:
>     https://github.com/luke-jr/bips/blob/bip-xchgrate/bip-xchgrate.mediawiki
>
> Thoughts? Anything critical missing? Ways to make the interface better?
>
> Luke
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From john at seebitcoin.com  Sat Mar  4 16:04:50 2017
From: john at seebitcoin.com (John Hardy)
Date: Sat, 4 Mar 2017 16:04:50 +0000
Subject: [bitcoin-dev] Unique node identifiers
Message-ID: <BL2PR03MB435C5077E69D91D0A8092B6EE2A0@BL2PR03MB435.namprd03.prod.outlook.com>

The discussion of UASF got me thinking about whether such a method might lead to sybil attacks, with new nodes created purely to inflate the node count for a particular implementation in an attempt at social engineering.


I had an idea for an anonymous, opt-in, unique node identification mechanism to help counter this.


This would give every node the opportunity to create a node ?address?/unique identifier. This could even come in the form of a Bitcoin address.


The node on first installation generates and backs up a private key. The corresponding public key becomes that node?s unique identifier. If the node switches to a new software version or a new IP, the identifier can remain constant if the node operator chooses.


Asking a node for its identifier can be done by sending a message the command ?identify? and a challenge. The node can then respond with its unique identifier and a signature for the challenge to prove it. The node can also include what software it is running and sign this information so it can be verified as legitimate by third parties.


Why would we do this?


Well, it adds a small but very useful piece of data when compiling lists of active nodes.


Any register of active nodes can have a record of when a node identifier was ?first seen?, and how many IPs the same identifier has broadcast from. Also, crucially, we could see what software the node operator has been seen running historically.


This information would make it easy to identify patterns. For example if a huge new group of nodes appeared on the network with no history for their identifier they could likely be dismissed as sybil attacks. If a huge number of nodes that had been reporting as Bitcoin Core for an extended period of time started switching to a rival implementation, this would add credibility but not certainty (keys could be traded), that the shift was more organic.


This would be trivial to implement, is (to me?) non-controversial, and would give a way for a node to link itself to a pseudo-anonymous identity, but with the freedom to opt-out at any time.


Keen to hear any thoughts?


Thanks,


John Hardy

john at seebitcoin.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170304/e785bc48/attachment.html>

From marcel at jamin.net  Sun Mar  5 06:29:16 2017
From: marcel at jamin.net (Marcel Jamin)
Date: Sun, 5 Mar 2017 07:29:16 +0100
Subject: [bitcoin-dev] Unique node identifiers
In-Reply-To: <BL2PR03MB435C5077E69D91D0A8092B6EE2A0@BL2PR03MB435.namprd03.prod.outlook.com>
References: <BL2PR03MB435C5077E69D91D0A8092B6EE2A0@BL2PR03MB435.namprd03.prod.outlook.com>
Message-ID: <CAAUq487S-rvt+fee4961ACyVYaHb=7f2TqppoVO=_WdHfYEExw@mail.gmail.com>

> This could even come in the form of a Bitcoin address.

Wouldn't this actually *need* to be a bitcoin address that is included in a
block to get any real assurances about the age if this node id? Otherwise
malicous nodes could lie and claim to have seen a brand new node id years
ago already.

Even if included in a block, people could sell their aged IDs (if we were
to rely on those for anything).

Also funding that ID address would might tie your economic activity (or
even identity) to a node.

On 4 March 2017 at 17:04, John Hardy via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> The discussion of UASF got me thinking about whether such a method might
> lead to sybil attacks, with new nodes created purely to inflate the node
> count for a particular implementation in an attempt at social engineering.
>
> I had an idea for an anonymous, opt-in, unique node identification
> mechanism to help counter this.
>
> This would give every node the opportunity to create a node
> ?address?/unique identifier. This could even come in the form of a Bitcoin
> address.
>
> The node on first installation generates and backs up a private key. The
> corresponding public key becomes that node?s unique identifier. If the node
> switches to a new software version or a new IP, the identifier can remain
> constant if the node operator chooses.
>
> Asking a node for its identifier can be done by sending a message the
> command ?identify? and a challenge. The node can then respond with its
> unique identifier and a signature for the challenge to prove it. The node
> can also include what software it is running and sign this information so
> it can be verified as legitimate by third parties.
>
> Why would we do this?
>
> Well, it adds a small but very useful piece of data when compiling lists
> of active nodes.
>
> Any register of active nodes can have a record of when a node identifier
> was ?first seen?, and how many IPs the same identifier has broadcast from.
> Also, crucially, we could see what software the node operator has been seen
> running historically.
>
> This information would make it easy to identify patterns. For example if a
> huge new group of nodes appeared on the network with no history for their
> identifier they could likely be dismissed as sybil attacks. If a huge
> number of nodes that had been reporting as Bitcoin Core for an extended
> period of time started switching to a rival implementation, this would add
> credibility but not certainty (keys could be traded), that the shift was
> more organic.
>
> This would be trivial to implement, is (to me?) non-controversial, and
> would give a way for a node to link itself to a pseudo-anonymous identity,
> but with the freedom to opt-out at any time.
>
> Keen to hear any thoughts?
>
> Thanks,
>
> John Hardy
>
> john at seebitcoin.com
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170305/baaa502c/attachment.html>

From john at seebitcoin.com  Sun Mar  5 12:55:27 2017
From: john at seebitcoin.com (John Hardy)
Date: Sun, 5 Mar 2017 12:55:27 +0000
Subject: [bitcoin-dev] Unique node identifiers
In-Reply-To: <CAAUq487S-rvt+fee4961ACyVYaHb=7f2TqppoVO=_WdHfYEExw@mail.gmail.com>
References: <BL2PR03MB435C5077E69D91D0A8092B6EE2A0@BL2PR03MB435.namprd03.prod.outlook.com>,
	<CAAUq487S-rvt+fee4961ACyVYaHb=7f2TqppoVO=_WdHfYEExw@mail.gmail.com>
Message-ID: <BL2PR03MB435C86E2A913C0D1BE08A03EE2D0@BL2PR03MB435.namprd03.prod.outlook.com>

> Wouldn't this actually *need* to be a bitcoin address that is included in a block

I think it being a bitcoin address probably makes the most sense. The address could even be used for donations to incentivise identifier use.

I had not really envisaged this having any blockchain presence though. It was just an easy way to give third party node monitors like coin.dance and bitnodes.21.co a few more metrics.

That said, it would allow the creation of a 'nodepool', where each node could broadcast its latest status like a transaction, and every node has a register of active nodes. Like a mempool, but for nodes.

By leveraging the randomness of node identities, it could be that a deterministic subset of nodes randomly check that a new node status update is legitimate by querying the node directly (a small enough subset to not cause a DDOS). If a threshhold of those random checking nodes reports that the node either doesn't exist or is responding with conflicting information, this will become evident to the network and can be flagged.

This should paint a pretty accurate picture of the state of the network, and might also prove useful for developing lightning routing?

________________________________
From: Marcel Jamin <marcel at jamin.net>
Sent: Sunday, March 5, 2017 6:29 AM
To: John Hardy; Bitcoin Protocol Discussion
Subject: Re: [bitcoin-dev] Unique node identifiers

> This could even come in the form of a Bitcoin address.

Wouldn't this actually *need* to be a bitcoin address that is included in a block to get any real assurances about the age if this node id? Otherwise malicous nodes could lie and claim to have seen a brand new node id years ago already.

Even if included in a block, people could sell their aged IDs (if we were to rely on those for anything).

Also funding that ID address would might tie your economic activity (or even identity) to a node.

On 4 March 2017 at 17:04, John Hardy via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:

The discussion of UASF got me thinking about whether such a method might lead to sybil attacks, with new nodes created purely to inflate the node count for a particular implementation in an attempt at social engineering.


I had an idea for an anonymous, opt-in, unique node identification mechanism to help counter this.


This would give every node the opportunity to create a node ?address?/unique identifier. This could even come in the form of a Bitcoin address.


The node on first installation generates and backs up a private key. The corresponding public key becomes that node?s unique identifier. If the node switches to a new software version or a new IP, the identifier can remain constant if the node operator chooses.


Asking a node for its identifier can be done by sending a message the command ?identify? and a challenge. The node can then respond with its unique identifier and a signature for the challenge to prove it. The node can also include what software it is running and sign this information so it can be verified as legitimate by third parties.


Why would we do this?


Well, it adds a small but very useful piece of data when compiling lists of active nodes.


Any register of active nodes can have a record of when a node identifier was ?first seen?, and how many IPs the same identifier has broadcast from. Also, crucially, we could see what software the node operator has been seen running historically.


This information would make it easy to identify patterns. For example if a huge new group of nodes appeared on the network with no history for their identifier they could likely be dismissed as sybil attacks. If a huge number of nodes that had been reporting as Bitcoin Core for an extended period of time started switching to a rival implementation, this would add credibility but not certainty (keys could be traded), that the shift was more organic.


This would be trivial to implement, is (to me?) non-controversial, and would give a way for a node to link itself to a pseudo-anonymous identity, but with the freedom to opt-out at any time.


Keen to hear any thoughts?


Thanks,


John Hardy

john at seebitcoin.com<mailto:john at seebitcoin.com>

_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170305/f716ff99/attachment-0001.html>

From btcdrak at gmail.com  Sun Mar  5 13:27:08 2017
From: btcdrak at gmail.com (Btc Drak)
Date: Sun, 5 Mar 2017 13:27:08 +0000
Subject: [bitcoin-dev] Unique node identifiers
In-Reply-To: <BL2PR03MB435C5077E69D91D0A8092B6EE2A0@BL2PR03MB435.namprd03.prod.outlook.com>
References: <BL2PR03MB435C5077E69D91D0A8092B6EE2A0@BL2PR03MB435.namprd03.prod.outlook.com>
Message-ID: <CADJgMzvuii8Ww822v3DRa=-Azuqo4va6s32MsNSC-6M9=stm1Q@mail.gmail.com>

Nodes are by design not supposed to be identifiable in any way, including
persisting identities across IPs changes or when connecting over different
networks (e.g. clearnet/tor). Anything that makes Bitcoin less private is a
step backwards. Also absolute node count is pretty meaningless since only
fully validating nodes that participate in economic activity really matter.

As a side note, this should probably have started out as a bitcoin-discuss
post.

On Sat, Mar 4, 2017 at 4:04 PM, John Hardy via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> The discussion of UASF got me thinking about whether such a method might
> lead to sybil attacks, with new nodes created purely to inflate the node
> count for a particular implementation in an attempt at social engineering.
>
> I had an idea for an anonymous, opt-in, unique node identification
> mechanism to help counter this.
>
> This would give every node the opportunity to create a node
> ?address?/unique identifier. This could even come in the form of a Bitcoin
> address.
>
> The node on first installation generates and backs up a private key. The
> corresponding public key becomes that node?s unique identifier. If the node
> switches to a new software version or a new IP, the identifier can remain
> constant if the node operator chooses.
>
> Asking a node for its identifier can be done by sending a message the
> command ?identify? and a challenge. The node can then respond with its
> unique identifier and a signature for the challenge to prove it. The node
> can also include what software it is running and sign this information so
> it can be verified as legitimate by third parties.
>
> Why would we do this?
>
> Well, it adds a small but very useful piece of data when compiling lists
> of active nodes.
>
> Any register of active nodes can have a record of when a node identifier
> was ?first seen?, and how many IPs the same identifier has broadcast from.
> Also, crucially, we could see what software the node operator has been seen
> running historically.
>
> This information would make it easy to identify patterns. For example if a
> huge new group of nodes appeared on the network with no history for their
> identifier they could likely be dismissed as sybil attacks. If a huge
> number of nodes that had been reporting as Bitcoin Core for an extended
> period of time started switching to a rival implementation, this would add
> credibility but not certainty (keys could be traded), that the shift was
> more organic.
>
> This would be trivial to implement, is (to me?) non-controversial, and
> would give a way for a node to link itself to a pseudo-anonymous identity,
> but with the freedom to opt-out at any time.
>
> Keen to hear any thoughts?
>
> Thanks,
>
> John Hardy
>
> john at seebitcoin.com
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170305/efa7c897/attachment.html>

From belcher at riseup.net  Sun Mar  5 14:33:06 2017
From: belcher at riseup.net (Chris Belcher)
Date: Sun, 5 Mar 2017 14:33:06 +0000
Subject: [bitcoin-dev] Moving towards user activated soft fork activation
Message-ID: <0ba5bf9c-5578-98ce-07ae-036d0d71046b@riseup.net>

I think UASF is a great idea for the reasons mentioned before that it
more closely matches the balance of powers in bitcoin, and that its much
more opt-in.

Many people are comparing an UASF fork with a hard fork. I disagree with
this view and I think there is a difference between the two kinds of
forks. The situation between hard and soft forks is reversed.

In a fork between segwit-invalid and segwit-valid after a UASF, if the
segwit-valid chain ever ends up with more work then the segwit-invalid
chain will be annihilated in a big re-organization as
non-segwit-enforcing nodes move to the segwit-valid chain. The less-work
chain will simply cease to exist.

Only a miner that recodes their software can initiate such a fork,
because segwit transactions are non-standard and won't be relayed by
default.

A closer situation is the accidental fork created soon after the BIP66
soft fork. The fork lasted a few blocks and did not mine any
transactions except the coinbase. It was annihilated with a monetary
loss to any miner that took part.


Here is an argument for why chain fork is unlikely to last long or be
created by a rational self-interested miner, assuming the bitcoin
economic majority even slightly enforces the UASF.

Because the segwit-invalid coins can be annihilated in this way and
segwit-valid coins cannot, segwit-invalid coins are more risky to hold
as an asset, all else equal.

A more risky asset has a lower price, all else equal. Because investors
demand higher risk premiums for holding it and also short sellers may
sell down the price in the hopes of making a profit if it's value goes
to zero.

In cryptocurrencies like bitcoin, hashpower follows price. This is very
clear from historical trends and the underlying economic forces.

A lower-hashrate chain will eventually be overtaken in work by a
higher-hashrate chain.

Therefore, the segwit-invalid chain will be annihilated sooner or later
if the price of its coin is higher.

Of course as the old saying goes markets can stay irrational longer than
we can stay solvent, which is why I think UASF should only go ahead if
we're sure that a big part of the economic majority will enforce it.
This will make the value and liquidity of the segwit-invalid chain very
low and make the annihilating re-organization happen faster.
User-activated means it _must_ be done by the users of bitcoin.


From david.vorick at gmail.com  Sun Mar  5 18:10:15 2017
From: david.vorick at gmail.com (David Vorick)
Date: Sun, 5 Mar 2017 13:10:15 -0500
Subject: [bitcoin-dev] Moving towards user activated soft fork activation
In-Reply-To: <0ba5bf9c-5578-98ce-07ae-036d0d71046b@riseup.net>
References: <0ba5bf9c-5578-98ce-07ae-036d0d71046b@riseup.net>
Message-ID: <CAFVRnyomgeXu2pRO=+B7bwB-bZdEL2DcpJNPMz=tAhht6eZXAQ@mail.gmail.com>

I also think that the UASF is a good idea. Hashrate follows coin price. If
the UASF has the higher coin price, the other chain will be annihilated. If
the UASF has a lower coin price, the user activated chain can still exist
(though their coins can be trivially stolen on the majority chain).

The success of the UASF depends entirely on the price. And actually, the
price is easy to manipulate. If you, as an economically active full node,
refuse to acknowledge the old chain and demand that incoming coins arrive
over the UASF chain. In doing so, you drive down the utility of the old
chain and drive up the utility of the new chain. This ultimately impacts
the price.

I think it would be pretty easy to get high confidence of the success of a
UASF. Basically you need all the major economic hubs to agree to upgrade
and then exclusively accept UASF coins. I don't have a comprehensive list,
but if we could sign on 75% of the major exchanges and payment processors,
and get 75% of the wallets to upgrade, then the UASF would be very likely
to successfully obliterate the old rules, as miners would be unable to sell
their coins or pay their bills by stubbornly sticking to the old chain.
It's less risky than a hard fork by far, because there is zero risk of coin
split if the UASF has majority hashrate, which will follow majority
economic value.

A serious proposal I think would get all the code ready and merged, but
without setting a flag day. Then we would get signatures from the major
institutions promising to use the software and saying that they are ready
for a flag day. After that, you release a patch with a flag day 12 months
in the future. People can upgrade immediately, and have a full year to
transition.

That gives tons of time for people to upgrade, and tons of confidence that
the UASF will end up as the majority chain.

If we cannot get enough major exchanges, payment processors, and other
economic hubs to upgrade,  the flag day should remain upset, as the risk of
coin split will be non-zero.

I would suggest that a carefully executed UASF is much riskier than a soft
fork, but far, far less risky than a hard fork.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170305/fa9b6571/attachment-0001.html>

From eric at voskuil.org  Sun Mar  5 18:48:33 2017
From: eric at voskuil.org (Eric Voskuil)
Date: Sun, 5 Mar 2017 10:48:33 -0800
Subject: [bitcoin-dev] Moving towards user activated soft fork activation
In-Reply-To: <CAFVRnyomgeXu2pRO=+B7bwB-bZdEL2DcpJNPMz=tAhht6eZXAQ@mail.gmail.com>
References: <0ba5bf9c-5578-98ce-07ae-036d0d71046b@riseup.net>
	<CAFVRnyomgeXu2pRO=+B7bwB-bZdEL2DcpJNPMz=tAhht6eZXAQ@mail.gmail.com>
Message-ID: <CF179411-8790-4CD9-A785-D7DA7C9AB865@voskuil.org>

There are two aspects of system security in Bitcoin, mining (hash power) and payment validation (economy). The security of each is a function of its level of decentralization. Another way to think of it is that a system with less decentralization has a smaller community (consensus). A large consensus is more secure in that it is more resistant to change (forks) than a system with a small consensus.

The fact that mining is highly centralized makes it relatively easy to enforce a fork via miner collaboration, and hard to do so without it.

So clearly the other option, as being discussed here, is to enforce a fork via the economy. Given the highly centralized nature of the economy, described below as "economic hubs", it is also relatively easy as well.

Independent of one's opinion on the merits of one fork or another, the state of centralization in Bitcoin is an area of great concern. If "we" can sit down with 75% of the economy and/or 90% of the hash power (which of course has been done) and negotiate a change to any rule, Bitcoin is a purely political money.

If "we" can do this, so can "they".

e

> On Mar 5, 2017, at 10:10 AM, David Vorick via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> I also think that the UASF is a good idea. Hashrate follows coin price. If the UASF has the higher coin price, the other chain will be annihilated. If the UASF has a lower coin price, the user activated chain can still exist (though their coins can be trivially stolen on the majority chain).
> 
> The success of the UASF depends entirely on the price. And actually, the price is easy to manipulate. If you, as an economically active full node, refuse to acknowledge the old chain and demand that incoming coins arrive over the UASF chain. In doing so, you drive down the utility of the old chain and drive up the utility of the new chain. This ultimately impacts the price.
> 
> I think it would be pretty easy to get high confidence of the success of a UASF. Basically you need all the major economic hubs to agree to upgrade and then exclusively accept UASF coins. I don't have a comprehensive list, but if we could sign on 75% of the major exchanges and payment processors, and get 75% of the wallets to upgrade, then the UASF would be very likely to successfully obliterate the old rules, as miners would be unable to sell their coins or pay their bills by stubbornly sticking to the old chain. It's less risky than a hard fork by far, because there is zero risk of coin split if the UASF has majority hashrate, which will follow majority economic value.
> 
> A serious proposal I think would get all the code ready and merged, but without setting a flag day. Then we would get signatures from the major institutions promising to use the software and saying that they are ready for a flag day. After that, you release a patch with a flag day 12 months in the future. People can upgrade immediately, and have a full year to transition.
> 
> That gives tons of time for people to upgrade, and tons of confidence that the UASF will end up as the majority chain.
> 
> If we cannot get enough major exchanges, payment processors, and other economic hubs to upgrade,  the flag day should remain upset, as the risk of coin split will be non-zero.
> 
> I would suggest that a carefully executed UASF is much riskier than a soft fork, but far, far less risky than a hard fork.
> 
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170305/2631a5b3/attachment.html>

From nickodell at gmail.com  Sun Mar  5 21:31:26 2017
From: nickodell at gmail.com (Nick ODell)
Date: Sun, 5 Mar 2017 14:31:26 -0700
Subject: [bitcoin-dev] Moving towards user activated soft fork activation
In-Reply-To: <CAFVRnyomgeXu2pRO=+B7bwB-bZdEL2DcpJNPMz=tAhht6eZXAQ@mail.gmail.com>
References: <0ba5bf9c-5578-98ce-07ae-036d0d71046b@riseup.net>
	<CAFVRnyomgeXu2pRO=+B7bwB-bZdEL2DcpJNPMz=tAhht6eZXAQ@mail.gmail.com>
Message-ID: <CANN4kmcLTcqHL53tEFk=g9o0_PsGzwArm9wgd0__ZXZpvhrs1g@mail.gmail.com>

>I also think that the UASF is a good idea. Hashrate follows coin price. If
the UASF has the higher coin price, the other chain will be annihilated. If
the UASF has a lower coin price, the user activated chain can still exist
(though their coins can be trivially stolen on the majority chain).

I don't think that's true. Say there are two forks of Blahcoin. Alice
thinks there's a 55% chance that Fork A will succeed. Bob thinks there's a
55% chance that Fork B will succeed. Alice trades all of her Fork B coins
for all of Bob's Fork A coins. Now, Bob and Alice both have a stake in one
fork or the other succeeding. Alice starts spending more time around Fork A
users; Bob starts spending his time with Fork B users.

A year passes, and Alice and Bob meet again. Bob tells Alice that Fork B
has been doing much better than Fork A, and is trading at ten times the
price. Alice replies that it doesn't matter, since Fork B will soon split
into B1 and B2. After all, if Fork B surrendered its principles once, it
can do so again. Bob replies that Fork B represents the true spirit of
Blahcoin. Alice replies that all of the people whose opinion she respects
believe that Fork B violates principles set down by the Founder (peace be
upon him.)

Bob disagrees, and cites an annotated collection of the Founder's writings,
which clearly show that if a situation like what provoked the Great Fork
happens, Fork B is in the right. All of the people Bob knows (except Alice)
agree that this shows Fork A is invalid. Alice replies that Bob is
committing the bandwagon fallacy; even if a thousand people believe that
red is green, that does not make it true. Also, the collection takes
several of the Founder's comments out of context. If one looks at comments
made prior to the release of Blahcoin, they lay out a framework that
envisions Fork A. Bob replies that Alice can't use statements made prior to
the release of Blahcoin to establish original intent; the system hadn't
been designed yet.

Bob points out that Fork B has a higher total chainwork. Alice scoffs. She
posits a Fork C, which is exactly like Fork A, except that chainwork is
defined to be the previous definition plus a quadrillion. Bob finds that
ridiculous. Fork C would transgress upon intrinsic principles of Blahcoin.
No more than Fork B does, Alice replies.

----

Each sentence above is true from some point of view. Each person sincerely
believes in the rightness of their position. Is there some objective
measure, that both Alice and Bob can agree on, that resolves this? I don't
think there is. Bob and Alice will sneer at each other for being idiots
forever. The schism will never resolve.

Satoshi Bless,
--Nick

On Sun, Mar 5, 2017 at 11:10 AM, David Vorick via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> I also think that the UASF is a good idea. Hashrate follows coin price. If
> the UASF has the higher coin price, the other chain will be annihilated. If
> the UASF has a lower coin price, the user activated chain can still exist
> (though their coins can be trivially stolen on the majority chain).
>
> The success of the UASF depends entirely on the price. And actually, the
> price is easy to manipulate. If you, as an economically active full node,
> refuse to acknowledge the old chain and demand that incoming coins arrive
> over the UASF chain. In doing so, you drive down the utility of the old
> chain and drive up the utility of the new chain. This ultimately impacts
> the price.
>
> I think it would be pretty easy to get high confidence of the success of a
> UASF. Basically you need all the major economic hubs to agree to upgrade
> and then exclusively accept UASF coins. I don't have a comprehensive list,
> but if we could sign on 75% of the major exchanges and payment processors,
> and get 75% of the wallets to upgrade, then the UASF would be very likely
> to successfully obliterate the old rules, as miners would be unable to sell
> their coins or pay their bills by stubbornly sticking to the old chain.
> It's less risky than a hard fork by far, because there is zero risk of coin
> split if the UASF has majority hashrate, which will follow majority
> economic value.
>
> A serious proposal I think would get all the code ready and merged, but
> without setting a flag day. Then we would get signatures from the major
> institutions promising to use the software and saying that they are ready
> for a flag day. After that, you release a patch with a flag day 12 months
> in the future. People can upgrade immediately, and have a full year to
> transition.
>
> That gives tons of time for people to upgrade, and tons of confidence that
> the UASF will end up as the majority chain.
>
> If we cannot get enough major exchanges, payment processors, and other
> economic hubs to upgrade,  the flag day should remain upset, as the risk of
> coin split will be non-zero.
>
> I would suggest that a carefully executed UASF is much riskier than a soft
> fork, but far, far less risky than a hard fork.
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170305/59946aef/attachment.html>

From tim.ruffing at mmci.uni-saarland.de  Mon Mar  6 05:37:24 2017
From: tim.ruffing at mmci.uni-saarland.de (Tim Ruffing)
Date: Mon, 06 Mar 2017 00:37:24 -0500
Subject: [bitcoin-dev] Currency/exchange rate information API
In-Reply-To: <201703040827.33798.luke@dashjr.org>
References: <201703040827.33798.luke@dashjr.org>
Message-ID: <1488778644.2205.1.camel@mmci.uni-saarland.de>

I'm not sure if a BIP is the right thing in that case, given that the
provided functionality is not special to Bitcoin and can be used in
other contexts as well. 

But ignoring this, the server should be authenticated at a
minimum.?Otherwise manipulating exchange rates seems to be a nice
way?for the attacker on the wire to make money...

Apart from that, my feeling is that it could be simplified. Is?
longpolling useful? And is the historical rate thing really necessary
for typical applications?

If yes, the client should be allowed to decide on which time scale the
data should be. (tick, min, hour, day, ...) That goes together with
clearly defining the type field (something like low, high, open, close,
but without flexibility). Think of a candle-stick chart basically.

Also, pushing may be more appropriate for "current" rates than polling.
Then no polling interval is necessary. On the other hand, this adds
complexity in other places, e.g., state.

Tim  

On Sat, 2017-03-04 at 08:27 +0000, Luke Dashjr via bitcoin-dev wrote:
> Investigating what it would take to add fiat currency information to
> Bitcoin?
> Knots, I noticed Electrum currently has many implementations, one for
> each?
> exchange rate provider, due to lack of a common format for such data.
> 
> Therefore, I put together an initial draft of a BIP that could
> standardise?
> this so wallets (or other software) and exchange rate providers can
> simply?
> interoperate without a lot of overhead reimplementing the same thing
> many?
> ways.
> 
> One thing I am unsure about, is that currently this draft requires
> using XBT?
> (as BTC) for Bitcoin amounts. It would seem nicer to use satoshis,
> but those?
> don't really have a pseudo-ISO currency code to fit in nicely...
> 
> Current draft here:
> ????https://github.com/luke-jr/bips/blob/bip-xchgrate/bip-xchgrate.me
> diawiki
> 
> Thoughts? Anything critical missing? Ways to make the interface
> better?
> 
> Luke
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From luke at dashjr.org  Mon Mar  6 07:09:39 2017
From: luke at dashjr.org (Luke Dashjr)
Date: Mon, 6 Mar 2017 07:09:39 +0000
Subject: [bitcoin-dev] Currency/exchange rate information API
In-Reply-To: <1488778644.2205.1.camel@mmci.uni-saarland.de>
References: <201703040827.33798.luke@dashjr.org>
	<1488778644.2205.1.camel@mmci.uni-saarland.de>
Message-ID: <201703060709.40311.luke@dashjr.org>

On Monday, March 06, 2017 5:37:24 AM Tim Ruffing via bitcoin-dev wrote:
> But ignoring this, the server should be authenticated at a
> minimum. Otherwise manipulating exchange rates seems to be a nice
> way for the attacker on the wire to make money...

HTTPS would be used for that. It's not something that needs to be at a higher 
layer.

> Apart from that, my feeling is that it could be simplified. Is 
> longpolling useful?

I would think so, at least for Bitcoin since rates can change significantly in 
a short period of time (or can they anymore? I haven't really watched lately.)

> And is the historical rate thing really necessary for typical applications?

When displaying historical transactions, it doesn't really make sense to use 
the current market rate, but rather the market rate at the time the payment 
was made. While wallets might simply cache it with the transaction, it would 
be perhaps nicer if it could be automatically restored for seed-only 
recoveries. In any case, if a service/wallet doesn't want to provide/use 
historical information, it can simply not implement that part.

> If yes, the client should be allowed to decide on which time scale the
> data should be. (tick, min, hour, day, ...) That goes together with
> clearly defining the type field (something like low, high, open, close,
> but without flexibility). Think of a candle-stick chart basically.

How is the current draft insufficient for this?

> Also, pushing may be more appropriate for "current" rates than polling.
> Then no polling interval is necessary. On the other hand, this adds
> complexity in other places, e.g., state.

Pushing is what longpolling does.

Luke

From dev at jonasschnelli.ch  Mon Mar  6 08:14:23 2017
From: dev at jonasschnelli.ch (Jonas Schnelli)
Date: Mon, 6 Mar 2017 09:14:23 +0100
Subject: [bitcoin-dev] Currency/exchange rate information API
In-Reply-To: <201703060709.40311.luke@dashjr.org>
References: <201703040827.33798.luke@dashjr.org>
	<1488778644.2205.1.camel@mmci.uni-saarland.de>
	<201703060709.40311.luke@dashjr.org>
Message-ID: <A9659D64-96A3-45B4-90FA-15F35BAE9676@jonasschnelli.ch>


I like the BIP. It can reduce workload during implementation on both sides of the API and it allows to show the user more data without implementing tons of proprietary APIs.
It?s not directly Bitcoin specific (example: BIP32 is also not Bitcoin specific), but I think a BIP is the right way for this.


> 
>> Apart from that, my feeling is that it could be simplified. Is
>> longpolling useful?
> 
> I would think so, at least for Bitcoin since rates can change significantly in
> a short period of time (or can they anymore? I haven't really watched lately.)

Long polling is a simple push concept that works on most type of network configurations (NAT, proxy, etc.).
The only concern I see here is that an public API will quickly fill up the maximum allowed httpd connections.
But it?s solvable.

> 
>> And is the historical rate thing really necessary for typical applications?
> 
> When displaying historical transactions, it doesn't really make sense to use
> the current market rate, but rather the market rate at the time the payment
> was made. While wallets might simply cache it with the transaction, it would
> be perhaps nicer if it could be automatically restored for seed-only
> recoveries. In any case, if a service/wallet doesn't want to provide/use
> historical information, it can simply not implement that part.

I?m also not sure how useful historical datapoint are. I don?t think the use case where someone wants to restore from a seed and get all exchange rates during the time of the payment is something users are looking for.
However, It?s optional.

> 
>> If yes, the client should be allowed to decide on which time scale the
>> data should be. (tick, min, hour, day, ...) That goes together with
>> clearly defining the type field (something like low, high, open, close,
>> but without flexibility). Think of a candle-stick chart basically.
> 
> How is the current draft insufficient for this?
> 
>> Also, pushing may be more appropriate for "current" rates than polling.
>> Then no polling interval is necessary. On the other hand, this adds
>> complexity in other places, e.g., state.
> 
> Pushing is what longpolling does.

Agree with Luke. A ?real? push (though I?d say long-polling is the real push, AFAIK it?s also the technique behind Apple?s iOS push channel) would require a complex server setup that complicates many things like load-balancer, mem-caching, etc.


</jonas>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170306/ec223a69/attachment.sig>

From david.vorick at gmail.com  Mon Mar  6 09:18:38 2017
From: david.vorick at gmail.com (David Vorick)
Date: Mon, 6 Mar 2017 04:18:38 -0500
Subject: [bitcoin-dev] Moving towards user activated soft fork activation
In-Reply-To: <CANN4kmcLTcqHL53tEFk=g9o0_PsGzwArm9wgd0__ZXZpvhrs1g@mail.gmail.com>
References: <0ba5bf9c-5578-98ce-07ae-036d0d71046b@riseup.net>
	<CAFVRnyomgeXu2pRO=+B7bwB-bZdEL2DcpJNPMz=tAhht6eZXAQ@mail.gmail.com>
	<CANN4kmcLTcqHL53tEFk=g9o0_PsGzwArm9wgd0__ZXZpvhrs1g@mail.gmail.com>
Message-ID: <CAFVRnyr4QoU5Rn2ryQ-jG8sZ18J7NKcpd3Cg+uN1sfiA=FiB+Q@mail.gmail.com>

On Mar 5, 2017 6:48 PM, "Eric Voskuil" <eric at voskuil.org> wrote:


Independent of one's opinion on the merits of one fork or another, the
state of centralization in Bitcoin is an area of great concern. If "we" can
sit down with 75% of the economy and/or 90% of the hash power (which of
course has been done) and negotiate a change to any rule, Bitcoin is a
purely political money.

If "we" can do this, so can "they".

e


There is no doubt that politics play a big role in all of this. Also no
doubt that broader decentralization would be superior. But miner activated
soft forks and user activated soft forks do not need discussions with
centralized parties to move forward. It is merely two different methods for
pushing a soft fork through the network.

The key is that it's a soft fork. Old nodes continue to work as always,
whether the soft fork deploys or not.

User activated soft forks, or perhaps more accurately called 'economically
forced soft forks' are a tool to use if the miners are in clear opposition
to the broader economy. They only work if the broader economy actually
fully supports the soft fork, which is much more difficult to measure than
miner support. And miners with deeper pockets may be able to resist for
some time, effectively performing a rewardless 51% attack and maintaining a
split network for some time. The miners would lose lots of money, but old
nodes would feel all the burn of a hard fork, followed by a sudden deep
reorg when the network finally 'heals'.

I guess in some sense you'd be playing chicken with the miners. If the
split is not instantly successful there would be a lot of damage to old
nodes, even if the majority of new nodes had upgraded. (but there would
also be a lot of damage to the miners).

On Mar 5, 2017 9:31 PM, "Nick ODell" <nickodell at gmail.com> wrote:

>I also think that the UASF is a good idea. Hashrate follows coin price. If
the UASF has the higher coin price, the other chain will be annihilated. If
the UASF has a lower coin price, the user activated chain can still exist
(though their coins can be trivially stolen on the majority chain).

I don't think that's true. Say there are two forks of Blahcoin. Alice
thinks there's a 55% chance that Fork A will succeed. Bob thinks there's a
55% chance that Fork B will succeed. Alice trades all of her Fork B coins
for all of Bob's Fork A coins. Now, Bob and Alice both have a stake in one
fork or the other succeeding. Alice starts spending more time around Fork A
users; Bob starts spending his time with Fork B users.


This is not relevant to a UASF. The existing nodes on the network have a
single formal definition for longest chain. If the UASF is successful, the
old nodes will follow the new soft fork and there will be only one chain.
Spirit of Bitcoin or not, the UASF is successful and there is no coin split
or network fork.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170306/3ec9ee10/attachment.html>

From ed at realitykeys.com  Mon Mar  6 10:29:35 2017
From: ed at realitykeys.com (Edmund Edgar)
Date: Mon, 6 Mar 2017 19:29:35 +0900
Subject: [bitcoin-dev] Moving towards user activated soft fork activation
In-Reply-To: <CAFVRnyr4QoU5Rn2ryQ-jG8sZ18J7NKcpd3Cg+uN1sfiA=FiB+Q@mail.gmail.com>
References: <0ba5bf9c-5578-98ce-07ae-036d0d71046b@riseup.net>
	<CAFVRnyomgeXu2pRO=+B7bwB-bZdEL2DcpJNPMz=tAhht6eZXAQ@mail.gmail.com>
	<CANN4kmcLTcqHL53tEFk=g9o0_PsGzwArm9wgd0__ZXZpvhrs1g@mail.gmail.com>
	<CAFVRnyr4QoU5Rn2ryQ-jG8sZ18J7NKcpd3Cg+uN1sfiA=FiB+Q@mail.gmail.com>
Message-ID: <CA+su7OV0Cpe=4AKdNhJXOCbYVriEN1vHSoA_0r31GXCAP1=NCA@mail.gmail.com>

On 6 March 2017 at 18:18, David Vorick via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> User activated soft forks, or perhaps more accurately called 'economically
> forced soft forks' are a tool to use if the miners are in clear opposition
> to the broader economy.

I don't think they work for that, at least not for new features,
because miners will presumably just head the whole thing off by
orphaning the whole class of non-standard transactions that are the
subject of the fork. In the SegWit case, they'd just orphan anything
that looks like a SegWit transaction, valid or not. That way they
don't need to worry about ending up on the wrong side of the upgrade,
because no transaction affected by the proposed rule change will ever
get into the longest chain. Rational node operators (particularly
exchanges) will likely also adopt their stricter rule change, since
they know any chain that breaks it will end up being orphaned, so you
don't want to act on a payment that you see confirmed in it. So then
you're back where you started, except that your soft-fork is now a
de-facto hard-fork, because you have to undo the new, stricter rule
that the miners introduced to head off your shenannigans.

Where they're interesting is where you can do something meaningful by
forcing some transactions through on a once-off basis. For example, if
the Chinese government identified an address belonging to Uighur
separatists and leaned on Chinese miners to prevent anything from that
address confirming, it might be interesting for users to say, "If
these utxos are not spent by block X, your block is invalid".

They might also be interesting for feature upgrades in a world where
mining is radically decentralized and upgrades are fighting against
inertia rather than opposition, but sadly that's not the world we
currently live in.

-- 
-- 
Edmund Edgar
Founder, Social Minds Inc (KK)
Twitter: @edmundedgar
Linked In: edmundedgar
Skype: edmundedgar
http://www.socialminds.jp

Reality Keys
@realitykeys
support at realitykeys.com
https://www.realitykeys.com

From tim.ruffing at mmci.uni-saarland.de  Mon Mar  6 21:54:16 2017
From: tim.ruffing at mmci.uni-saarland.de (Tim Ruffing)
Date: Mon, 06 Mar 2017 16:54:16 -0500
Subject: [bitcoin-dev] Currency/exchange rate information API
In-Reply-To: <201703060709.40311.luke@dashjr.org>
References: <201703040827.33798.luke@dashjr.org>
	<1488778644.2205.1.camel@mmci.uni-saarland.de>
	<201703060709.40311.luke@dashjr.org>
Message-ID: <1488837256.2134.1.camel@mmci.uni-saarland.de>

On Mon, 2017-03-06 at 07:09 +0000, Luke Dashjr wrote:
> On Monday, March 06, 2017 5:37:24 AM Tim Ruffing via bitcoin-dev
> wrote:
> > But ignoring this, the server should be authenticated at a
> > minimum. Otherwise manipulating exchange rates seems to be a nice
> > way for the attacker on the wire to make money...
> 
> HTTPS would be used for that. It's not something that needs to be at
> a higher?
> layer.
Sure, HTTPS is the way to go. But I think that should be required or at
least noted in the BIP, because people could miss easily, e.g., "I
don't need TLS, all the data is public anyway."

> When displaying historical transactions, it doesn't really make sense
> to use?
> the current market rate, but rather the market rate at the time the
> payment?
> was made. While wallets might simply cache it with the transaction,
> it would?
> be perhaps nicer if it could be automatically restored for seed-only?
> recoveries. In any case, if a service/wallet doesn't want to
> provide/use?
> historical information, it can simply not implement that part.
> 
Having the rate at the time of payment is indeed very useful, yes.
However that requires just a single value per payment, and there is no
query that tells the server "give me the value closest to timestamp t"
or similar.
Of course the client can download and keep a large part of history and
extract the information on its own but I can imagine that not every
clients wants to do that, and also the client does not know in advance
the bounds (from, to) that it must query.

> > If yes, the client should be allowed to decide on which time scale
> the
> > data should be. (tick, min, hour, day, ...) That goes together with
> > clearly defining the type field (something like low, high, open,
> close,
> > but without flexibility). Think of a candle-stick chart basically.
> 
> How is the current draft insufficient for this?
> 
In the current draft the client or the server cannot specify
granularity. If the clients only wants one value per day but for an
entire year, then it has to perform many requests or download and
process a very large response.
Also, I think it's okay that the type field allows for arbitrary user-
defined values, but it should also have some precisely defined values
(e.g. the mentioned low/high/open/close/typical).
For example, it's not clear currently what "low" means for a timestamp
(as opposed to a time span). Is it the low of the entire day or the low
since the previous record or something different?  

One has to be careful not to add too much complexity though. As soon as
one moves away from timestamps to something like hours or days, all
kind of issues with timezone, daylight saving time etc. appear. Maybe a
simple way to let the client ask "give me one value for every interval
of 3600 seconds" or similar. 


> Pushing is what longpolling does.
> 
That makes a lot of sense, yes.


Tim

From tim.ruffing at mmci.uni-saarland.de  Mon Mar  6 22:02:53 2017
From: tim.ruffing at mmci.uni-saarland.de (Tim Ruffing)
Date: Mon, 06 Mar 2017 17:02:53 -0500
Subject: [bitcoin-dev] Currency/exchange rate information API
In-Reply-To: <1488837256.2134.1.camel@mmci.uni-saarland.de>
References: <201703040827.33798.luke@dashjr.org>
	<1488778644.2205.1.camel@mmci.uni-saarland.de>
	<201703060709.40311.luke@dashjr.org>
	<1488837256.2134.1.camel@mmci.uni-saarland.de>
Message-ID: <1488837773.2134.3.camel@mmci.uni-saarland.de>

On Mon, 2017-03-06 at 16:54 -0500, Tim Ruffing via bitcoin-dev wrote:
> 
> > Pushing is what longpolling does.
> > 
> 
> That makes a lot of sense, yes.
> 
Forgot one thing:
For longpolling, maybe we would like to have the possibility to request
some periodic message from the server. Otherwise clients cannot
distinguish between the situations 1. "value is still in the requested
bounds (minrate, maxrate)" and 2. "connection has dropped". So the user
may take a wrong decision because  he assumed that the value is still
in bounds holds but actually the server has died.

Tim 

From luke at dashjr.org  Mon Mar  6 22:14:47 2017
From: luke at dashjr.org (Luke Dashjr)
Date: Mon, 6 Mar 2017 22:14:47 +0000
Subject: [bitcoin-dev] Currency/exchange rate information API
In-Reply-To: <1488837256.2134.1.camel@mmci.uni-saarland.de>
References: <201703040827.33798.luke@dashjr.org>
	<201703060709.40311.luke@dashjr.org>
	<1488837256.2134.1.camel@mmci.uni-saarland.de>
Message-ID: <201703062214.47660.luke@dashjr.org>

On Monday, March 06, 2017 9:54:16 PM Tim Ruffing wrote:
> Having the rate at the time of payment is indeed very useful, yes.
> However that requires just a single value per payment, and there is no
> query that tells the server "give me the value closest to timestamp t"
> or similar.
> Of course the client can download and keep a large part of history and
> extract the information on its own but I can imagine that not every
> clients wants to do that, and also the client does not know in advance
> the bounds (from, to) that it must query.

It would be a privacy leak to request only the specific timestamps, but I 
suppose many wallets lack even basic privacy to begin with.

To address the bounds issue, I have specified that when from/to don't have an 
exact record, that the previous/next (respectively) is provided.

Hopefully this addresses both concerns?

> In the current draft the client or the server cannot specify
> granularity. If the clients only wants one value per day but for an
> entire year, then it has to perform many requests or download and
> process a very large response.

That's what the "timedelta" field solves, no?
If you want one value per day, you'd put 86400.

> Also, I think it's okay that the type field allows for arbitrary user-
> defined values, but it should also have some precisely defined values
> (e.g. the mentioned low/high/open/close/typical).
> For example, it's not clear currently what "low" means for a timestamp
> (as opposed to a time span). Is it the low of the entire day or the low
> since the previous record or something different?

Is it not sufficient for the server to specify this in the description of the 
given currency-pair feed?

Luke

From luke at dashjr.org  Mon Mar  6 22:21:24 2017
From: luke at dashjr.org (Luke Dashjr)
Date: Mon, 6 Mar 2017 22:21:24 +0000
Subject: [bitcoin-dev] Currency/exchange rate information API
In-Reply-To: <1488837773.2134.3.camel@mmci.uni-saarland.de>
References: <201703040827.33798.luke@dashjr.org>
	<1488837256.2134.1.camel@mmci.uni-saarland.de>
	<1488837773.2134.3.camel@mmci.uni-saarland.de>
Message-ID: <201703062221.25169.luke@dashjr.org>

On Monday, March 06, 2017 10:02:53 PM Tim Ruffing via bitcoin-dev wrote:
> For longpolling, maybe we would like to have the possibility to request
> some periodic message from the server. Otherwise clients cannot
> distinguish between the situations 1. "value is still in the requested
> bounds (minrate, maxrate)" and 2. "connection has dropped". So the user
> may take a wrong decision because  he assumed that the value is still
> in bounds holds but actually the server has died.

That's the job of TCP.
Do you think we need to explicitly specify a keepalive configuration?
Seems like that would vary based on client or network.

From tim.ruffing at mmci.uni-saarland.de  Mon Mar  6 22:30:59 2017
From: tim.ruffing at mmci.uni-saarland.de (Tim Ruffing)
Date: Mon, 06 Mar 2017 17:30:59 -0500
Subject: [bitcoin-dev] Currency/exchange rate information API
In-Reply-To: <201703062214.47660.luke@dashjr.org>
References: <201703040827.33798.luke@dashjr.org>
	<201703060709.40311.luke@dashjr.org>
	<1488837256.2134.1.camel@mmci.uni-saarland.de>
	<201703062214.47660.luke@dashjr.org>
Message-ID: <1488839459.2134.5.camel@mmci.uni-saarland.de>

On Mon, 2017-03-06 at 22:14 +0000, Luke Dashjr wrote:
> It would be a privacy leak to request only the specific timestamps,
> but I?
> suppose many wallets lack even basic privacy to begin with.
> 
> To address the bounds issue, I have specified that when from/to don't
> have an?
> exact record, that the previous/next (respectively) is provided.
> 
> Hopefully this addresses both concerns?
Yes, that solves it. You're right with the privacy concern however.

> 
> > In the current draft the client or the server cannot specify
> > granularity. If the clients only wants one value per day but for an
> > entire year, then it has to perform many requests or download and
> > process a very large response.
> 
> That's what the "timedelta" field solves, no?
> If you want one value per day, you'd put 86400.
Oh sure, I had overlooked that.

> 
> > Also, I think it's okay that the type field allows for arbitrary
> user-
> > defined values, but it should also have some precisely defined
> values
> > (e.g. the mentioned low/high/open/close/typical).
> > For example, it's not clear currently what "low" means for a
> timestamp
> > (as opposed to a time span). Is it the low of the entire day or the
> low
> > since the previous record or something different?
> 
> Is it not sufficient for the server to specify this in the
> description of the?
> given currency-pair feed?
That works but a standardized way of indicating that piece of
information to the client is useful. Then the client can display a
"connection status" to the user, e.g., an "possible out-of-date"
warning like the warning sign in the Qt GUI when Bitcoin Core is
catching up the network.


Tim

From tim.ruffing at mmci.uni-saarland.de  Mon Mar  6 22:38:25 2017
From: tim.ruffing at mmci.uni-saarland.de (Tim Ruffing)
Date: Mon, 06 Mar 2017 17:38:25 -0500
Subject: [bitcoin-dev] Currency/exchange rate information API
In-Reply-To: <1488839459.2134.5.camel@mmci.uni-saarland.de>
References: <201703040827.33798.luke@dashjr.org>
	<201703060709.40311.luke@dashjr.org>
	<1488837256.2134.1.camel@mmci.uni-saarland.de>
	<201703062214.47660.luke@dashjr.org>
	<1488839459.2134.5.camel@mmci.uni-saarland.de>
Message-ID: <1488839905.2134.7.camel@mmci.uni-saarland.de>

On Mon, 2017-03-06 at 17:30 -0500, Tim Ruffing via bitcoin-dev wrote:
> 
> That works but a standardized way of indicating that piece of
> information to the client is useful. Then the client can display a
> "connection status" to the user, e.g., an "possible out-of-date"
> warning like the warning sign in the Qt GUI when Bitcoin Core is
> catching up the network.

Wait, forget this reply, I mixed up the two issues of keepalive and
definition of low, high etc... -.-

1. Keepalive for longpolling:
As I said, this can be useful for an out-of-date warning. I don't know
if this is better solved with TCP keepalive or on the higher layer.

2. Definition of low, high:
My feeling is that there is nothing wrong with providing exact
definitions in the BIP, i.e.., giving up the flexibility does not too
hurt much. However all of this is a minor issue after all.

Tim


From andreas at schildbach.de  Mon Mar  6 23:14:13 2017
From: andreas at schildbach.de (Andreas Schildbach)
Date: Tue, 7 Mar 2017 00:14:13 +0100
Subject: [bitcoin-dev] Currency/exchange rate information API
In-Reply-To: <1488778644.2205.1.camel@mmci.uni-saarland.de>
References: <201703040827.33798.luke@dashjr.org>
	<1488778644.2205.1.camel@mmci.uni-saarland.de>
Message-ID: <o9kqfu$khn$1@blaine.gmane.org>

On 03/06/2017 06:37 AM, Tim Ruffing via bitcoin-dev wrote:

> And is the historical rate thing really necessary
> for typical applications?

Yes, it is. Basically all incoming transactions are historical, as your
wallet is likely not online when it happens.



From gjw at posteo.net  Mon Mar  6 23:23:47 2017
From: gjw at posteo.net (Gareth Williams)
Date: Tue, 07 Mar 2017 10:23:47 +1100
Subject: [bitcoin-dev] Moving towards user activated soft fork activation
In-Reply-To: <CA+su7OV0Cpe=4AKdNhJXOCbYVriEN1vHSoA_0r31GXCAP1=NCA@mail.gmail.com>
References: <0ba5bf9c-5578-98ce-07ae-036d0d71046b@riseup.net>
	<CAFVRnyomgeXu2pRO=+B7bwB-bZdEL2DcpJNPMz=tAhht6eZXAQ@mail.gmail.com>
	<CANN4kmcLTcqHL53tEFk=g9o0_PsGzwArm9wgd0__ZXZpvhrs1g@mail.gmail.com>
	<CAFVRnyr4QoU5Rn2ryQ-jG8sZ18J7NKcpd3Cg+uN1sfiA=FiB+Q@mail.gmail.com>
	<CA+su7OV0Cpe=4AKdNhJXOCbYVriEN1vHSoA_0r31GXCAP1=NCA@mail.gmail.com>
Message-ID: <964E4801-234F-4E30-A040-2C63274D27F2@posteo.net>

What you're describing is a hashpower activated soft fork to censor transactions, in response to a user activated soft fork that the majority of hashpower disagrees with.

It is always possible for a majority of hashpower to censor transactions they disagree with. Users may view that as an attack, and can always respond with a POW hard fork. 

Bitcoin only works if the majority of hashpower is not hostile to the users.


On 6 March 2017 9:29:35 PM AEDT, Edmund Edgar via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>On 6 March 2017 at 18:18, David Vorick via bitcoin-dev
><bitcoin-dev at lists.linuxfoundation.org> wrote:
>> User activated soft forks, or perhaps more accurately called
>'economically
>> forced soft forks' are a tool to use if the miners are in clear
>opposition
>> to the broader economy.
>
>I don't think they work for that, at least not for new features,
>because miners will presumably just head the whole thing off by
>orphaning the whole class of non-standard transactions that are the
>subject of the fork. In the SegWit case, they'd just orphan anything
>that looks like a SegWit transaction, valid or not. That way they
>don't need to worry about ending up on the wrong side of the upgrade,
>because no transaction affected by the proposed rule change will ever
>get into the longest chain. Rational node operators (particularly
>exchanges) will likely also adopt their stricter rule change, since
>they know any chain that breaks it will end up being orphaned, so you
>don't want to act on a payment that you see confirmed in it. So then
>you're back where you started, except that your soft-fork is now a
>de-facto hard-fork, because you have to undo the new, stricter rule
>that the miners introduced to head off your shenannigans.
>
>Where they're interesting is where you can do something meaningful by
>forcing some transactions through on a once-off basis. For example, if
>the Chinese government identified an address belonging to Uighur
>separatists and leaned on Chinese miners to prevent anything from that
>address confirming, it might be interesting for users to say, "If
>these utxos are not spent by block X, your block is invalid".
>
>They might also be interesting for feature upgrades in a world where
>mining is radically decentralized and upgrades are fighting against
>inertia rather than opposition, but sadly that's not the world we
>currently live in.


From ed at realitykeys.com  Tue Mar  7 01:07:05 2017
From: ed at realitykeys.com (Edmund Edgar)
Date: Tue, 7 Mar 2017 10:07:05 +0900
Subject: [bitcoin-dev] Moving towards user activated soft fork activation
In-Reply-To: <964E4801-234F-4E30-A040-2C63274D27F2@posteo.net>
References: <0ba5bf9c-5578-98ce-07ae-036d0d71046b@riseup.net>
	<CAFVRnyomgeXu2pRO=+B7bwB-bZdEL2DcpJNPMz=tAhht6eZXAQ@mail.gmail.com>
	<CANN4kmcLTcqHL53tEFk=g9o0_PsGzwArm9wgd0__ZXZpvhrs1g@mail.gmail.com>
	<CAFVRnyr4QoU5Rn2ryQ-jG8sZ18J7NKcpd3Cg+uN1sfiA=FiB+Q@mail.gmail.com>
	<CA+su7OV0Cpe=4AKdNhJXOCbYVriEN1vHSoA_0r31GXCAP1=NCA@mail.gmail.com>
	<964E4801-234F-4E30-A040-2C63274D27F2@posteo.net>
Message-ID: <CA+su7OXOfG2AsLqh-i4YZHc42tFPm+4OBqOV4jCrpADtx4U71g@mail.gmail.com>

On 7 March 2017 at 08:23, Gareth Williams <gjw at posteo.net> wrote:
> What you're describing is a hashpower activated soft fork to censor transactions, in response to a user activated soft fork that the majority of hashpower disagrees with.

Well, they'd be censoring transactions to prevent the thing from
activating in the first place. (As opposed to censoring a subset of
those transactions to enforce the new rule, which is the behaviour
that the people promoting the change want.) There would be no point at
which people reasonably expected that something useful would happen if
they sent funds to an address protected by the new scripting rule.

> Bitcoin only works if the majority of hashpower is not hostile to the users.

This is true. But what we're talking about here is hostility to *a
particular proposal to change the network rules* which is (in this
hypothetical case) supported by the economic majority of users. This
doesn't, in itself, break Bitcoin, although the economic majority are
of course always free to hard-fork to something new if they're
unhappy.

Edmund

-- 
-- 
Edmund Edgar
Founder, Social Minds Inc (KK)
Twitter: @edmundedgar
Linked In: edmundedgar
Skype: edmundedgar
http://www.socialminds.jp

Reality Keys
@realitykeys
ed at realitykeys.com
https://www.realitykeys.com

From marcel at jamin.net  Tue Mar  7 09:29:24 2017
From: marcel at jamin.net (Marcel Jamin)
Date: Tue, 7 Mar 2017 10:29:24 +0100
Subject: [bitcoin-dev] Currency/exchange rate information API
In-Reply-To: <201703040827.33798.luke@dashjr.org>
References: <201703040827.33798.luke@dashjr.org>
Message-ID: <CAAUq487pjZYTZJDNv2TL8Vwh-nGqaFVZLG1v4VUJu=ejcx45nw@mail.gmail.com>

> Why are multiple results separated by a line-feed rather than using a JSON Array?
> * Clients ought to cache historical data, and using a line-feed format allows them to simply append to a cache file.
> * Parsing JSON typically requires the entire data parsed together as a single memory object. Using simple lines to separate results, however, allows parsing a single result at a time.
> What if long descriptions require line and paragraph breaks?
> * Clients should word-wrap long lines, and JSON escapes newlines as "\n" which can be used doubly ("\n\n") for paragraph breaks.

I'd file this under premature optimization at the cost of
interoperability. If you use JSON, then please use it properly.

I'd also say it's the job of the parser to offer a way of doing that,
e.g. in .NET you can easily achieve that with Newtonsoft's JSON
parser: http://stackoverflow.com/questions/20374083/deserialize-json-array-stream-one-item-at-a-time.

On 4 March 2017 at 09:27, Luke Dashjr via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> Investigating what it would take to add fiat currency information to Bitcoin
> Knots, I noticed Electrum currently has many implementations, one for each
> exchange rate provider, due to lack of a common format for such data.
>
> Therefore, I put together an initial draft of a BIP that could standardise
> this so wallets (or other software) and exchange rate providers can simply
> interoperate without a lot of overhead reimplementing the same thing many
> ways.
>
> One thing I am unsure about, is that currently this draft requires using XBT
> (as BTC) for Bitcoin amounts. It would seem nicer to use satoshis, but those
> don't really have a pseudo-ISO currency code to fit in nicely...
>
> Current draft here:
>     https://github.com/luke-jr/bips/blob/bip-xchgrate/bip-xchgrate.mediawiki
>
> Thoughts? Anything critical missing? Ways to make the interface better?
>
> Luke
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From john at seebitcoin.com  Sun Mar  5 13:57:08 2017
From: john at seebitcoin.com (John Hardy)
Date: Sun, 5 Mar 2017 13:57:08 +0000
Subject: [bitcoin-dev] Unique node identifiers
In-Reply-To: <CADJgMzvuii8Ww822v3DRa=-Azuqo4va6s32MsNSC-6M9=stm1Q@mail.gmail.com>
References: <BL2PR03MB435C5077E69D91D0A8092B6EE2A0@BL2PR03MB435.namprd03.prod.outlook.com>,
	<CADJgMzvuii8Ww822v3DRa=-Azuqo4va6s32MsNSC-6M9=stm1Q@mail.gmail.com>
Message-ID: <BL2PR03MB435029A0856DC7077D4AD68EE2D0@BL2PR03MB435.namprd03.prod.outlook.com>

> Nodes are by design not supposed to be identifiable in any way

I feel you're conflating social identifiability with technical identifiability. Sure, a node operator must always be able to remain anonymous, but nodes themselves require a certain level of identifiability otherwise there would be no means to communicate between them.

I agree that absolute node counts have their limitations, but that doesn't stop them being used as a measure and even propaganda tool. If something like this is a way to help highlight the latter when it is occurring I think it has value. I 'm not convinced that node identifiers or identity persistence would have any meaningful impact on privacy, though am open to being convinced otherwise.


________________________________
From: Btc Drak <btcdrak at gmail.com>
Sent: Sunday, March 5, 2017 1:27 PM
To: John Hardy; Bitcoin Protocol Discussion
Subject: Re: [bitcoin-dev] Unique node identifiers

Nodes are by design not supposed to be identifiable in any way, including persisting identities across IPs changes or when connecting over different networks (e.g. clearnet/tor). Anything that makes Bitcoin less private is a step backwards. Also absolute node count is pretty meaningless since only fully validating nodes that participate in economic activity really matter.

As a side note, this should probably have started out as a bitcoin-discuss post.

On Sat, Mar 4, 2017 at 4:04 PM, John Hardy via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:

The discussion of UASF got me thinking about whether such a method might lead to sybil attacks, with new nodes created purely to inflate the node count for a particular implementation in an attempt at social engineering.


I had an idea for an anonymous, opt-in, unique node identification mechanism to help counter this.


This would give every node the opportunity to create a node ?address?/unique identifier. This could even come in the form of a Bitcoin address.


The node on first installation generates and backs up a private key. The corresponding public key becomes that node?s unique identifier. If the node switches to a new software version or a new IP, the identifier can remain constant if the node operator chooses.


Asking a node for its identifier can be done by sending a message the command ?identify? and a challenge. The node can then respond with its unique identifier and a signature for the challenge to prove it. The node can also include what software it is running and sign this information so it can be verified as legitimate by third parties.


Why would we do this?


Well, it adds a small but very useful piece of data when compiling lists of active nodes.


Any register of active nodes can have a record of when a node identifier was ?first seen?, and how many IPs the same identifier has broadcast from. Also, crucially, we could see what software the node operator has been seen running historically.


This information would make it easy to identify patterns. For example if a huge new group of nodes appeared on the network with no history for their identifier they could likely be dismissed as sybil attacks. If a huge number of nodes that had been reporting as Bitcoin Core for an extended period of time started switching to a rival implementation, this would add credibility but not certainty (keys could be traded), that the shift was more organic.


This would be trivial to implement, is (to me?) non-controversial, and would give a way for a node to link itself to a pseudo-anonymous identity, but with the freedom to opt-out at any time.


Keen to hear any thoughts?


Thanks,


John Hardy

john at seebitcoin.com<mailto:john at seebitcoin.com>

_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170305/3f0fadb5/attachment.html>

From eric at voskuil.org  Tue Mar  7 17:37:15 2017
From: eric at voskuil.org (Eric Voskuil)
Date: Tue, 7 Mar 2017 09:37:15 -0800
Subject: [bitcoin-dev] Moving towards user activated soft fork activation
In-Reply-To: <CA+su7OXOfG2AsLqh-i4YZHc42tFPm+4OBqOV4jCrpADtx4U71g@mail.gmail.com>
References: <0ba5bf9c-5578-98ce-07ae-036d0d71046b@riseup.net>
	<CAFVRnyomgeXu2pRO=+B7bwB-bZdEL2DcpJNPMz=tAhht6eZXAQ@mail.gmail.com>
	<CANN4kmcLTcqHL53tEFk=g9o0_PsGzwArm9wgd0__ZXZpvhrs1g@mail.gmail.com>
	<CAFVRnyr4QoU5Rn2ryQ-jG8sZ18J7NKcpd3Cg+uN1sfiA=FiB+Q@mail.gmail.com>
	<CA+su7OV0Cpe=4AKdNhJXOCbYVriEN1vHSoA_0r31GXCAP1=NCA@mail.gmail.com>
	<964E4801-234F-4E30-A040-2C63274D27F2@posteo.net>
	<CA+su7OXOfG2AsLqh-i4YZHc42tFPm+4OBqOV4jCrpADtx4U71g@mail.gmail.com>
Message-ID: <48f6c6a5-ba7e-cf75-e272-e713321f04b8@voskuil.org>

On 03/06/2017 05:07 PM, Edmund Edgar via bitcoin-dev wrote:
> On 7 March 2017 at 08:23, Gareth Williams <gjw at posteo.net> wrote:
>> What you're describing is a hashpower activated soft fork to censor
transactions, in response to a user activated soft fork that the
majority of hashpower disagrees with.

This definition of censorship would apply to all validation.

A miner is free to select whatever transactions he wants, for whatever
reasons he wants. Bitcoin's defense against censorship (and disruption)
is in the broad distribution of over 50% (anecdotally) of the hash power
among a large number of people.

> Well, they'd be censoring transactions to prevent the thing from
> activating in the first place. (As opposed to censoring a subset of
> those transactions to enforce the new rule, which is the behaviour
> that the people promoting the change want.)

Exactly, a soft fork expects that people start rejecting a previously
valid style of transaction, or that they ignore it. It's perfectly
reasonable to conclude that some miners may continue to accept the
soft-fork-invalidated transactions and instead reject the new style of
transactions as invalid. Reliance on their acceptance of the soft fork
is based on the weak assumption that they won't change their software or
that they live in fear of a retaliatory POW change.

>> Bitcoin only works if the majority of hashpower is not hostile to the
users.

Honesty in this context refers to double spending. Selecting a different
rule set effectively moves one to another coin, which is not dishonest
(hostile to anyone).  Miners have zero technical or ethical obligation
to follow any particular set of rules. Bitcoin has one golden rule, run
whatever code you want. Security is based on decentralization, not
well-behaved people (or well-behaved software).

> This is true. But what we're talking about here is hostility to *a
> particular proposal to change the network rules* which is (in this
> hypothetical case) supported by the economic majority of users. This
> doesn't, in itself, break Bitcoin, although the economic majority are
> of course always free to hard-fork to something new if they're
> unhappy.

Again spot on. Users of the money purchase security from miners. Miners
are under no obligation to provide that service nor are users under any
obligation to purchase it.

One thing to consider is how different the landscape would look if every
person on the planet was a miner, and the economy was similarly
distributed. Would it be easier to get 51% hash power on board with a
soft fork, or some much higher percentage on board with a hard fork? It
seems likely that any proposed material change would fail. Regardless of
how one feels about that, it is the nature of a sound money that it
doesn't change.

e

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170307/54bfd64b/attachment-0001.sig>

From tomz at freedommail.ch  Tue Mar  7 09:17:18 2017
From: tomz at freedommail.ch (Tom Zander)
Date: Tue, 07 Mar 2017 10:17:18 +0100
Subject: [bitcoin-dev] Moving towards user activated soft fork activation
In-Reply-To: <964E4801-234F-4E30-A040-2C63274D27F2@posteo.net>
References: <0ba5bf9c-5578-98ce-07ae-036d0d71046b@riseup.net>
	<CA+su7OV0Cpe=4AKdNhJXOCbYVriEN1vHSoA_0r31GXCAP1=NCA@mail.gmail.com>
	<964E4801-234F-4E30-A040-2C63274D27F2@posteo.net>
Message-ID: <9086552.5NYgjOP6f4@strawberry>

On Tuesday, 7 March 2017 00:23:47 CET Gareth Williams via bitcoin-dev wrote:
> What you're describing is a hashpower activated soft fork to censor
> transactions, in response to a user activated soft fork that the majority
> of hashpower disagrees with.

It is incorrect to say that censoring of transactions is what Edmund 
suggested. It's purely about the form they take, you can re-send the 
transaction in a different form with the same content and they go through. 
Hence, not transaction censoring.

I do believe the point that Edmund brought up is a very good one, the idea 
that a set of users can force the miners to do something is rather silly and 
the setup that a minority miner fraction can force the majority to do 
something is equally silly. This is because the majority mining hashpower 
can fight back against this attack upon them.

Don?t be mistaken; a hash-minority attacking the hash-majority is in actual 
fact an attack upon Bitcoin as a whole.
If this were possible then next year we?d see governments try to push 
through changes in the same UASF way. I?m very happy that UASFs can?t work 
because that would be the end of Bitcoin's freedom and decentralized nature.

> It is always possible for a majority of hashpower to censor transactions
> they disagree with. Users may view that as an attack, and can always
> respond with a POW hard fork.

I definitely welcome that approach.

The result would be that you have two chains, but also you ensure that the 
chain that the miners didn?t like will no longer be something they can mine. 
Not even the minority set of miners that like the softfork can mine on it. 
This is a win-win and then the market will decide which one will "win".
 
> Bitcoin only works if the majority of hashpower is not hostile to the
> users.

This goes both ways, miners both generate value (in the form of security) 
and they take value (in the form of inflation).
If the majority of the users are hostile and reject blocks that the miners 
create, or change the POW, then what the miners bring to the table is also 
removed.
Bitcoin would lose the security and in the short term even the ability to 
mine blocks every 10 minutes.

So, lets correct your statement a little;
?Bitcoin only works when the majority of the hashpower and the (economic)
  majority of the users are balanced in power and have their goals aligned.?

-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From eric at voskuil.org  Tue Mar  7 18:13:36 2017
From: eric at voskuil.org (Eric Voskuil)
Date: Tue, 7 Mar 2017 10:13:36 -0800
Subject: [bitcoin-dev] Moving towards user activated soft fork activation
In-Reply-To: <9086552.5NYgjOP6f4@strawberry>
References: <0ba5bf9c-5578-98ce-07ae-036d0d71046b@riseup.net>
	<CA+su7OV0Cpe=4AKdNhJXOCbYVriEN1vHSoA_0r31GXCAP1=NCA@mail.gmail.com>
	<964E4801-234F-4E30-A040-2C63274D27F2@posteo.net>
	<9086552.5NYgjOP6f4@strawberry>
Message-ID: <08254322-D7BC-4BF8-ACB2-189588D93325@voskuil.org>

> Bitcoin would lose the security and in the short term even the ability to 
mine blocks every 10 minutes.

Presumably a POW hard fork would be accompanied by a difficulty reset, so that the deployment didn't have *both* of these problems from the outset.  There's really little difference between 10 minutes at little/no security and zero conf. See testnet. But people might feel better about still seeing blocks.

But in any case it's not clear to me why you assume a loss of security in the "short term" is something that can be overcome. The short term can presumably prevent the long term from ever becoming.

e

> On Mar 7, 2017, at 1:17 AM, Tom Zander via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
>> On Tuesday, 7 March 2017 00:23:47 CET Gareth Williams via bitcoin-dev wrote:
>> What you're describing is a hashpower activated soft fork to censor
>> transactions, in response to a user activated soft fork that the majority
>> of hashpower disagrees with.
> 
> It is incorrect to say that censoring of transactions is what Edmund 
> suggested. It's purely about the form they take, you can re-send the 
> transaction in a different form with the same content and they go through. 
> Hence, not transaction censoring.
> 
> I do believe the point that Edmund brought up is a very good one, the idea 
> that a set of users can force the miners to do something is rather silly and 
> the setup that a minority miner fraction can force the majority to do 
> something is equally silly. This is because the majority mining hashpower 
> can fight back against this attack upon them.
> 
> Don?t be mistaken; a hash-minority attacking the hash-majority is in actual 
> fact an attack upon Bitcoin as a whole.
> If this were possible then next year we?d see governments try to push 
> through changes in the same UASF way. I?m very happy that UASFs can?t work 
> because that would be the end of Bitcoin's freedom and decentralized nature.
> 
>> It is always possible for a majority of hashpower to censor transactions
>> they disagree with. Users may view that as an attack, and can always
>> respond with a POW hard fork.
> 
> I definitely welcome that approach.
> 
> The result would be that you have two chains, but also you ensure that the 
> chain that the miners didn?t like will no longer be something they can mine. 
> Not even the minority set of miners that like the softfork can mine on it. 
> This is a win-win and then the market will decide which one will "win".
> 
>> Bitcoin only works if the majority of hashpower is not hostile to the
>> users.
> 
> This goes both ways, miners both generate value (in the form of security) 
> and they take value (in the form of inflation).
> If the majority of the users are hostile and reject blocks that the miners 
> create, or change the POW, then what the miners bring to the table is also 
> removed.
> Bitcoin would lose the security and in the short term even the ability to 
> mine blocks every 10 minutes.
> 
> So, lets correct your statement a little;
> ?Bitcoin only works when the majority of the hashpower and the (economic)
>  majority of the users are balanced in power and have their goals aligned.?
> 
> -- 
> Tom Zander
> Blog: https://zander.github.io
> Vlog: https://vimeo.com/channels/tomscryptochannel
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From eric at voskuil.org  Tue Mar  7 18:44:07 2017
From: eric at voskuil.org (Eric Voskuil)
Date: Tue, 7 Mar 2017 10:44:07 -0800
Subject: [bitcoin-dev] Unique node identifiers
In-Reply-To: <BL2PR03MB435029A0856DC7077D4AD68EE2D0@BL2PR03MB435.namprd03.prod.outlook.com>
References: <BL2PR03MB435C5077E69D91D0A8092B6EE2A0@BL2PR03MB435.namprd03.prod.outlook.com>
	<CADJgMzvuii8Ww822v3DRa=-Azuqo4va6s32MsNSC-6M9=stm1Q@mail.gmail.com>
	<BL2PR03MB435029A0856DC7077D4AD68EE2D0@BL2PR03MB435.namprd03.prod.outlook.com>
Message-ID: <D4B674DB-8F2E-4AA1-B271-FEE02A62A274@voskuil.org>


> On Mar 5, 2017, at 5:57 AM, John Hardy via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> > Nodes are by design not supposed to be identifiable in any way

This is of course my objection to BIP150 ("a way for peers to ... guarantee node ownership").

> I feel you're conflating social identifiability with technical identifiability. Sure, a node operator must always be able to remain anonymous, but nodes themselves require a certain level of identifiability otherwise there would be no means to communicate between them.

Anonymous node identity is pointless, and is why I object to BIP151. It provides no actual security/privacy benefit and is a stepping stone to non-anonymous node identity (e.g. BIP150).

> I agree that absolute node counts have their limitations, but that doesn't stop them being used as a measure and even propaganda tool. If something like this is a way to help highlight the latter when it is occurring I think it has value. I 'm not convinced that node identifiers or identity persistence would have any meaningful impact on privacy, though am open to being convinced otherwise.

Bitcoin does not require node counts, and this proposal is redundant with BIP150.

e

> 
> From: Btc Drak <btcdrak at gmail.com>
> Sent: Sunday, March 5, 2017 1:27 PM
> To: John Hardy; Bitcoin Protocol Discussion
> Subject: Re: [bitcoin-dev] Unique node identifiers
>  
> Nodes are by design not supposed to be identifiable in any way, including persisting identities across IPs changes or when connecting over different networks (e.g. clearnet/tor). Anything that makes Bitcoin less private is a step backwards. Also absolute node count is pretty meaningless since only fully validating nodes that participate in economic activity really matter.
> 
> As a side note, this should probably have started out as a bitcoin-discuss post.
> 
>> On Sat, Mar 4, 2017 at 4:04 PM, John Hardy via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> The discussion of UASF got me thinking about whether such a
>>  method might lead to sybil attacks, with new nodes created purely to inflate the node count for a particular implementation in an attempt at social engineering.
>> 
>> I had an idea for an anonymous, opt-in, unique node identification
>>  mechanism to help counter this.
>> 
>> This would give every node the opportunity to create a node
>>  ?address?/unique identifier. This could even come in the form of a Bitcoin address.
>> 
>> The node on first installation generates and backs up a private
>>  key. The corresponding public key becomes that node?s unique identifier. If the node switches to a new software version or a new IP, the identifier can remain constant if the node operator chooses.
>> 
>> Asking a node for its identifier can be done by sending a message
>>  the command ?identify? and a challenge. The node can then respond with its unique identifier and a signature for the challenge to prove it. The node can also include what software it is running and sign this information so it can be verified as legitimate
>>  by third parties.
>> 
>> Why would we do this?
>> 
>> Well, it adds a small but very useful piece of data when compiling
>>  lists of active nodes.
>> 
>> Any register of active nodes can have a record of when a node
>>  identifier was ?first seen?, and how many IPs the same identifier has broadcast from. Also, crucially, we could see what software the node operator has been seen running historically.
>> 
>> This information would make it easy to identify patterns. For
>>  example if a huge new group of nodes appeared on the network with no history for their identifier they could likely be dismissed as sybil attacks. If a huge number of nodes that had been reporting as Bitcoin Core for an extended period of time started switching
>>  to a rival implementation, this would add credibility but not certainty (keys could be traded), that the shift was more organic.
>> 
>> This would be trivial to implement, is (to me?) non-controversial,
>>  and would give a way for a node to link itself to a pseudo-anonymous identity, but with the freedom to opt-out at any time.
>> 
>> Keen to hear any thoughts?
>> 
>> Thanks,
>> 
>> John Hardy
>> john at seebitcoin.com
>> 
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> 
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170307/40eb419f/attachment-0001.html>

From alp.bitcoin at gmail.com  Tue Mar  7 19:13:29 2017
From: alp.bitcoin at gmail.com (Alphonse Pace)
Date: Tue, 7 Mar 2017 13:13:29 -0600
Subject: [bitcoin-dev] Moving towards user activated soft fork activation
In-Reply-To: <9086552.5NYgjOP6f4@strawberry>
References: <0ba5bf9c-5578-98ce-07ae-036d0d71046b@riseup.net>
	<CA+su7OV0Cpe=4AKdNhJXOCbYVriEN1vHSoA_0r31GXCAP1=NCA@mail.gmail.com>
	<964E4801-234F-4E30-A040-2C63274D27F2@posteo.net>
	<9086552.5NYgjOP6f4@strawberry>
Message-ID: <CAMBsKS-rqkTtx3tzF5RKwMUVtGqBMoqj+sZ8jjo6bKrVHiDufA@mail.gmail.com>

I fail to see how any non-mining user can attack a miner.  The worst they
can do is refuse to buy their coinbase transaction.  Do you believe that
users are obligated to buy coins from miners?  If not, then all miners are
voluntarily choosing a set of rules to enforce and a set of policy to mine.

>Don?t be mistaken; a hash-minority attacking the hash-majority is in actual
fact an attack upon Bitcoin as a whole.

Can you outline how a minority of hash rate can attack a majority? Users
are free to follow tighter rules than before, or they may reject it.  The
majority of hash rate can continue the old rules or not.  Where is the
attack?  I see a disagreement being resolved peacefully through unilateral
separation.

>If this were possible then next year we?d see governments try to push
through changes in the same UASF way. I?m very happy that UASFs can?t work
because that would be the end of Bitcoin's freedom and decentralized nature.

Governments would be much more equipped to simply go directly to the miners
to enforce this for them - why even bother with millions of distributed
miners when you can knock on a few doors and get your policy?

>If the majority of the users are hostile and reject blocks that the miners
create, or change the POW, then what the miners bring to the table is also
removed.

I don't understand how users can be hostile to Bitcoin.  Users are
Bitcoin.  Everyone else serves the users.  All participants are voluntary
and can choose to participate or not.  Where is the attack or hostility?

-Alphonse

On Tue, Mar 7, 2017 at 3:17 AM, Tom Zander via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Tuesday, 7 March 2017 00:23:47 CET Gareth Williams via bitcoin-dev
> wrote:
> > What you're describing is a hashpower activated soft fork to censor
> > transactions, in response to a user activated soft fork that the majority
> > of hashpower disagrees with.
>
> It is incorrect to say that censoring of transactions is what Edmund
> suggested. It's purely about the form they take, you can re-send the
> transaction in a different form with the same content and they go through.
> Hence, not transaction censoring.
>
> I do believe the point that Edmund brought up is a very good one, the idea
> that a set of users can force the miners to do something is rather silly
> and
> the setup that a minority miner fraction can force the majority to do
> something is equally silly. This is because the majority mining hashpower
> can fight back against this attack upon them.
>
> Don?t be mistaken; a hash-minority attacking the hash-majority is in actual
> fact an attack upon Bitcoin as a whole.
> If this were possible then next year we?d see governments try to push
> through changes in the same UASF way. I?m very happy that UASFs can?t work
> because that would be the end of Bitcoin's freedom and decentralized
> nature.
>
> > It is always possible for a majority of hashpower to censor transactions
> > they disagree with. Users may view that as an attack, and can always
> > respond with a POW hard fork.
>
> I definitely welcome that approach.
>
> The result would be that you have two chains, but also you ensure that the
> chain that the miners didn?t like will no longer be something they can
> mine.
> Not even the minority set of miners that like the softfork can mine on it.
> This is a win-win and then the market will decide which one will "win".
>
> > Bitcoin only works if the majority of hashpower is not hostile to the
> > users.
>
> This goes both ways, miners both generate value (in the form of security)
> and they take value (in the form of inflation).
> If the majority of the users are hostile and reject blocks that the miners
> create, or change the POW, then what the miners bring to the table is also
> removed.
> Bitcoin would lose the security and in the short term even the ability to
> mine blocks every 10 minutes.
>
> So, lets correct your statement a little;
> ?Bitcoin only works when the majority of the hashpower and the (economic)
>   majority of the users are balanced in power and have their goals
> aligned.?
>
> --
> Tom Zander
> Blog: https://zander.github.io
> Vlog: https://vimeo.com/channels/tomscryptochannel
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170307/042228f6/attachment.html>

From praxeology_guy at protonmail.com  Tue Mar  7 21:28:49 2017
From: praxeology_guy at protonmail.com (praxeology_guy)
Date: Tue, 07 Mar 2017 16:28:49 -0500
Subject: [bitcoin-dev] A Commitment-suitable UTXO set "Balances" file data
	structure
Message-ID: <_Z0S6yfN2uS1b0SYoZzU9LMo3QQ967dyn0e12ep_aXJ8cNw8wTovQWED6mKg3PH0hb2yKEG-5Cv0xH3IC2cG5rczP5qo-xLtrjJMXW1uCss=@protonmail.com>

A Commitment-suitable UTXO set "Balances" file data structure
- Allows pruned nodes to satisfy SPV nodes
- Allows pruned nodes to trustlessly start synchronizing at a Balances file's block height instead of the genesis block
- Allows all nodes in the network to verify their UTXO set's data integrity

For this to work, Bitcoin would need a new policy:
- A UTXO commitment is made every "Balances/UTXO Commitment Period" (BCP) blocks. The UTXO commitment is made on the state of the UTXO at BCP blocks ago. For example, if BCP is 5000, and we are creating block 20,000, then block 20,000 would contain a commitment on what the state of the UTXO was at block 15,000, right before any changes due to block 15,001.
- The commitment is made on the state of the UTXO "BCP blocks ago" instead of the UTXO state at the tip because: 1. Such a commitment can be made in a background thread and not delay mining/synchronizing node operations; 2. The work of creating the commitment doesn't have to be redone in the case of a fork.
- The file/commitment is made in a background thread, starting at least BCP/2 blocks after the last block containing a utxo commitment.

Balances file summary:
{
Header: 48 bytes
{
File Type: 4 bytes
File version: 4 bytes
size of balances: 8 bytes
root hash: 32 bytes
}
balances: "size of balances" bytes
balance index: "piece count" * (N + 4) bytes, N=4 proposed
merkle tree hashes: ~ 2 * "piece count" * 32 bytes
}

balances: is a list of balances sorted by txid:
{
length: 4 bytes
txid: 32 bytes
CCoins: variable length, depends on UTXO size
}

A "piece" is like in bittorrent's piece. I propose piece size = 32*1024 bytes. 2GB of balance data would then be divided into 65536 pieces.

transaction index is an array (with "piece count" elements) of:
{
txix: the first N bytes of a txid. I'm proposing N = 4
piece offset: 4 bytes, location of the first balance in the piece.
}

merkle tree hashes:
- array of "piece count" leaf hashes, hashing the balance pieces
- array of "(child layer count + 1)/2" node hashes, hashing pairs of child hashes, or copying up if only one child
- repeat ^ until the root hash is written
... except reverse the layer order. In other words, it should be breadth first.

==========

Data structure design notes:
- Most of the file's space is used by the balances. For example, given a 32kB piece size and 2GB balances, the non-balances data only consumes about 4.5MB. If N was increased to 32, ~6.5MB.
- piece size should be small enough that not that much effort is wasted when invalid pieces are received.
- piece size should also be small in the case that this data structure is used instead of block history for SPV proof. Then pruned nodes can satisfy SPV clients.
- The child count = 2 merkle tree structure is only necessary for if this data structure is to be used to satisfy SPV clients. If not used for such a purpose, then technically the root hash could have the leaf hashes as it's direct children. But practically this doesn't make a difference: merkle tree size is nothing compared to sizeof(balances).
- The only purpose of the balance index is to support SPV clients
- txix is a truncation of txid to reduce memory usage for a fully in-memory index to support SPV nodes. Maybe this truncation isn't worthwhile.

Other notes:
- We could make BCP 4383 blocks, which would be 12 times per year, given block period was exactly 10 minutes. But since block period is not exactly 10 minutes, and file names generated with period 4283 are much less comprehensible than file names generated with period 5000... I propose 5000.
- Having a shorter BCP period would result in more frequent checks on UTXO set integrity, and permit new pruning nodes to start synching closer to the tip. But it may require nodes to keep more copies of the balances file to satisfy the same backup period, and require more background work of creating more balances files.

===========

Suggested design change to the chainstate "CCoinsViewDB" utxo database:
- As it is designed now, the above proposal would require maintaining a duplicate but lagging UTXO database.
- I propose changing the "CCoins" data structure so that it can keep track of spends that shouldn't be included in the commitment. Maybe call it "vtipspends".

Then the process for updating the CCoinsViewDB would be:
1. Mark a txo as spent by adding the vout_ix to vtipspends.
2. SetNull() and Cleanup() during the background thread that creates Balances commitments. vtipspends would also need to be cleaned.
- The method for checking whether a txo was spent would need to be changed to check vtipspends.

At the same time, I know there is currently a lot of code complexity with handling forks and txo spends. Let me propose something to handle this better too:
- vtipspends could hold {vout_ix, blockhash } instead of just vout_ix.
- Checking whether a txo is spent will then require a parameter that specifies the "fork tip hash" or "fork chain"

Then in the case of a fork, no work has to be done to update the utxo database... it is immediately ready to handle answering spend questions for a different fork.

Feedback welcome. FYI I have coded up the creation of such a file already... So I am working on the implementation, not just the spec. I'd really like to hear what you guys think about my proposed changes to CCoins.

Cheers,
Praxeology
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170307/fabd9633/attachment-0001.html>

From bram at bittorrent.com  Wed Mar  8 01:55:18 2017
From: bram at bittorrent.com (Bram Cohen)
Date: Tue, 7 Mar 2017 17:55:18 -0800
Subject: [bitcoin-dev] A Commitment-suitable UTXO set "Balances" file
	data structure
In-Reply-To: <_Z0S6yfN2uS1b0SYoZzU9LMo3QQ967dyn0e12ep_aXJ8cNw8wTovQWED6mKg3PH0hb2yKEG-5Cv0xH3IC2cG5rczP5qo-xLtrjJMXW1uCss=@protonmail.com>
References: <_Z0S6yfN2uS1b0SYoZzU9LMo3QQ967dyn0e12ep_aXJ8cNw8wTovQWED6mKg3PH0hb2yKEG-5Cv0xH3IC2cG5rczP5qo-xLtrjJMXW1uCss=@protonmail.com>
Message-ID: <CA+KqGkp7hLDNFjzWUTU7_FSCnHBAw+79SURAFo8V62BaMpdzhQ@mail.gmail.com>

On Tue, Mar 7, 2017 at 1:28 PM, praxeology_guy via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

>
> merkle tree hashes:
> - array of "piece count" leaf hashes, hashing the balance pieces
> - array of "(child layer count + 1)/2" node hashes, hashing pairs of child
> hashes, or copying up if only one child
> - repeat ^ until the root hash is written
> ... except reverse the layer order. In other words, it should be breadth
> first.
>

A big yuck on that format. It should be something based on a patricia trie
to support incremental updates. Also if the things being stored are output
transaction + output number then those two can be hashed together to make a
consistent size identifier and be put into the merkle set format I
proposed, which is exactly the intended usage:
https://github.com/bramcohen/MerkleSet

- We could make BCP 4383 blocks, which would be 12 times per year, given
> block period was exactly 10 minutes.  But since block period is not exactly
> 10 minutes, and file names generated with period 4283 are much less
> comprehensible than file names generated with period 5000...  I propose
> 5000.
>

If it's of that order it should be synched up with the work difficulty
reset interval of 2016. If the format supports incremental updates it would
of course be possible to require them more frequently later.


> - Having a shorter BCP period would result in more frequent checks on UTXO
> set integrity, and permit new pruning nodes to start synching closer to the
> tip.  But it may require nodes to keep more copies of the balances file to
> satisfy the same backup period, and require more background work of
> creating more balances files.
>

With a patricia based format it would be possible to make much more common
utxo commitments, possibly as often as every block only trailing by a few,
and the cost of updating wouldn't be onerous and reorgs could be handled by
simply undoing the last few transactions in the set and and then rolling
forward.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170307/79914478/attachment.html>

From bfd at cock.lu  Wed Mar  8 02:01:26 2017
From: bfd at cock.lu (bfd at cock.lu)
Date: Wed, 08 Mar 2017 13:01:26 +1100
Subject: [bitcoin-dev] Unique node identifiers
In-Reply-To: <D4B674DB-8F2E-4AA1-B271-FEE02A62A274@voskuil.org>
References: <BL2PR03MB435C5077E69D91D0A8092B6EE2A0@BL2PR03MB435.namprd03.prod.outlook.com>
	<CADJgMzvuii8Ww822v3DRa=-Azuqo4va6s32MsNSC-6M9=stm1Q@mail.gmail.com>
	<BL2PR03MB435029A0856DC7077D4AD68EE2D0@BL2PR03MB435.namprd03.prod.outlook.com>
	<D4B674DB-8F2E-4AA1-B271-FEE02A62A274@voskuil.org>
Message-ID: <8fdd4680b4ff714cc100236e73fb03f3@cock.lu>

>> I feel you're conflating social identifiability with technical
>> identifiability. Sure, a node operator must always be able to remain
>> anonymous, but nodes themselves require a certain level of
>> identifiability otherwise there would be no means to communicate
>> between them.

Nodes running through networks like cjdns, onion, and i2p can
effectively communicate with no knowledge of the counterparty
whatsoever. Bitcoin does make an assumption that you are connected to
at least one non-partitioned peer, and that there is a cost in having
a large number of sybil nodes in many different ranges. Nothing
says you have to do your communication exclusively on one network or
another, so long as you have *some* source of information which is not
partitioned.



On 2017-03-08 05:44, Eric Voskuil via bitcoin-dev wrote:
> On Mar 5, 2017, at 5:57 AM, John Hardy via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
>>> Nodes are by design not supposed to be identifiable in any way
> 
> This is of course my objection to BIP150 ("a way for peers to ...
> guarantee node ownership").
> 
>> I feel you're conflating social identifiability with technical
>> identifiability. Sure, a node operator must always be able to remain
>> anonymous, but nodes themselves require a certain level of
>> identifiability otherwise there would be no means to communicate
>> between them.
> 
> Anonymous node identity is pointless, and is why I object to BIP151.
> It provides no actual security/privacy benefit and is a stepping stone
> to non-anonymous node identity (e.g. BIP150).
> 
>> I agree that absolute node counts have their limitations, but that
>> doesn't stop them being used as a measure and even propaganda tool.
>> If something like this is a way to help highlight the latter when it
>> is occurring I think it has value. I 'm not convinced that node
>> identifiers or identity persistence would have any meaningful impact
>> on privacy, though am open to being convinced otherwise.
> 
> Bitcoin does not require node counts, and this proposal is redundant
> with BIP150.
> 
> e
> 
>> -------------------------
>> 
>> FROM: Btc Drak <btcdrak at gmail.com>
>> SENT: Sunday, March 5, 2017 1:27 PM
>> TO: John Hardy; Bitcoin Protocol Discussion
>> SUBJECT: Re: [bitcoin-dev] Unique node identifiers
>> 
>> Nodes are by design not supposed to be identifiable in any way,
>> including persisting identities across IPs changes or when
>> connecting over different networks (e.g. clearnet/tor). Anything
>> that makes Bitcoin less private is a step backwards. Also absolute
>> node count is pretty meaningless since only fully validating nodes
>> that participate in economic activity really matter.
>> 
>> As a side note, this should probably have started out as a
>> bitcoin-discuss post.
>> 
>> On Sat, Mar 4, 2017 at 4:04 PM, John Hardy via bitcoin-dev
>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> 
>>> The discussion of UASF got me thinking about whether such a method
>>> might lead to sybil attacks, with new nodes created purely to
>>> inflate the node count for a particular implementation in an
>>> attempt at social engineering.
>>> I had an idea for an anonymous, opt-in, unique node identification
>>> mechanism to help counter this.
>>> This would give every node the opportunity to create a node
>>> ?address?/unique identifier. This could even come in the form
>>> of a Bitcoin address.
>>> The node on first installation generates and backs up a private
>>> key. The corresponding public key becomes that node?s unique
>>> identifier. If the node switches to a new software version or a
>>> new IP, the identifier can remain constant if the node operator
>>> chooses.
>>> Asking a node for its identifier can be done by sending a message
>>> the command ?identify? and a challenge. The node can then
>>> respond with its unique identifier and a signature for the
>>> challenge to prove it. The node can also include what software it
>>> is running and sign this information so it can be verified as
>>> legitimate by third parties.
>>> Why would we do this?
>>> Well, it adds a small but very useful piece of data when compiling
>>> lists of active nodes.
>>> Any register of active nodes can have a record of when a node
>>> identifier was ?first seen?, and how many IPs the same
>>> identifier has broadcast from. Also, crucially, we could see what
>>> software the node operator has been seen running historically.
>>> This information would make it easy to identify patterns. For
>>> example if a huge new group of nodes appeared on the network with
>>> no history for their identifier they could likely be dismissed as
>>> sybil attacks. If a huge number of nodes that had been reporting
>>> as Bitcoin Core for an extended period of time started switching
>>> to a rival implementation, this would add credibility but not
>>> certainty (keys could be traded), that the shift was more organic.
>>> 
>>> This would be trivial to implement, is (to me?) non-controversial,
>>> and would give a way for a node to link itself to a
>>> pseudo-anonymous identity, but with the freedom to opt-out at any
>>> time.
>>> Keen to hear any thoughts?
>>> Thanks,
>>> John Hardy
>>> 
>>> john at seebitcoin.com
>>> 
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev [1]
> 
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
> 
> Links:
> ------
> [1] https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From bfd at cock.lu  Wed Mar  8 01:55:41 2017
From: bfd at cock.lu (bfd at cock.lu)
Date: Wed, 08 Mar 2017 12:55:41 +1100
Subject: [bitcoin-dev] A Commitment-suitable UTXO set "Balances" file
 data structure
In-Reply-To: <_Z0S6yfN2uS1b0SYoZzU9LMo3QQ967dyn0e12ep_aXJ8cNw8wTovQWED6mKg3PH0hb2yKEG-5Cv0xH3IC2cG5rczP5qo-xLtrjJMXW1uCss=@protonmail.com>
References: <_Z0S6yfN2uS1b0SYoZzU9LMo3QQ967dyn0e12ep_aXJ8cNw8wTovQWED6mKg3PH0hb2yKEG-5Cv0xH3IC2cG5rczP5qo-xLtrjJMXW1uCss=@protonmail.com>
Message-ID: <1a7381ffeceb2209dda11928de10fa12@cock.lu>

Having a commitment to a "balance" of an "address" (I assume you mean
P2SH/P2PKH script) is extremely expensive to create and validate, does
not scale and is not a particularly useful thing for a client to use.
Validating clients should never expect their UTXO to be
inconsistent with that of the network, if something has happened to
cause this loosely committing to the UTXO is of no value.


On 2017-03-08 08:28, praxeology_guy via bitcoin-dev wrote:
> A Commitment-suitable UTXO set "Balances" file data structure
> 
> - Allows pruned nodes to satisfy SPV nodes
> 
> - Allows pruned nodes to trustlessly start synchronizing at a Balances
> file's block height instead of the genesis block
> 
> - Allows all nodes in the network to verify their UTXO set's data
> integrity
> 
> For this to work, Bitcoin would need a new policy:
> 
> - A UTXO commitment is made every "Balances/UTXO Commitment Period"
> (BCP) blocks.  The UTXO commitment is made on the state of the UTXO at
> BCP blocks ago.  For example, if BCP is 5000, and we are creating
> block 20,000, then block 20,000 would contain a commitment on what the
> state of the UTXO was at block 15,000, right before any changes due to
> block 15,001.
> 
> - The commitment is made on the state of the UTXO "BCP blocks ago"
> instead of the UTXO state at the tip because: 1. Such a commitment can
> be made in a background thread and not delay mining/synchronizing node
> operations; 2. The work of creating the commitment doesn't have to be
> redone in the case of a fork.
> 
> - The file/commitment is made in a background thread, starting at
> least BCP/2 blocks after the last block containing a utxo commitment.
> 
> Balances file summary:
> 
> {
> 
> Header: 48 bytes
> 
> {
> 
> File Type: 4 bytes
> 
> File version: 4 bytes
> 
> size of balances: 8 bytes
> 
> root hash: 32 bytes
> 
> }
> 
> balances: "size of balances" bytes
> 
> balance index: "piece count" * (N + 4) bytes, N=4 proposed
> 
> merkle tree hashes: ~ 2 * "piece count" * 32 bytes
> 
> }
> 
> balances: is a list of balances sorted by txid:
> 
> {
> 
> length: 4 bytes
> 
> txid: 32 bytes
> 
> CCoins: variable length, depends on UTXO size
> 
> }
> 
> A "piece" is like in bittorrent's piece.  I propose piece size =
> 32*1024 bytes.  2GB of balance data would then be divided into 65536
> pieces.
> 
> transaction index is an array (with "piece count" elements) of:
> 
> {
> 
> txix: the first N bytes of a txid. I'm proposing N = 4
> 
> piece offset: 4 bytes, location of the first balance in the piece.
> 
> }
> 
> merkle tree hashes:
> 
> - array of "piece count" leaf hashes, hashing the balance pieces
> 
> - array of "(child layer count + 1)/2" node hashes, hashing pairs of
> child hashes, or copying up if only one child
> 
> - repeat ^ until the root hash is written
> 
> ... except reverse the layer order. In other words, it should be
> breadth first.
> 
> ==========
> 
> Data structure design notes:
> 
> - Most of the file's space is used by the balances.  For example,
> given a 32kB piece size and 2GB balances, the non-balances data only
> consumes about 4.5MB.  If N was increased to 32, ~6.5MB.
> 
> - piece size should be small enough that not that much effort is
> wasted when invalid pieces are received.
> 
> - piece size should also be small in the case that this data structure
> is used instead of block history for SPV proof.  Then pruned nodes can
> satisfy SPV clients.
> 
> - The child count = 2 merkle tree structure is only necessary for if
> this data structure is to be used to satisfy SPV clients.  If not used
> for such a purpose, then technically the root hash could have the leaf
> hashes as it's direct children. But practically this doesn't make a
> difference: merkle tree size is nothing compared to sizeof(balances).
> 
> - The only purpose of the balance index is to support SPV clients
> 
> - txix is a truncation of txid to reduce memory usage for a fully
> in-memory index to support SPV nodes.  Maybe this truncation isn't
> worthwhile.
> 
> Other notes:
> 
> - We could make BCP 4383 blocks, which would be 12 times per year,
> given block period was exactly 10 minutes.  But since block period is
> not exactly 10 minutes, and file names generated with period 4283 are
> much less comprehensible than file names generated with period 5000...
>  I propose 5000.
> 
> - Having a shorter BCP period would result in more frequent checks on
> UTXO set integrity, and permit new pruning nodes to start synching
> closer to the tip.  But it may require nodes to keep more copies of
> the balances file to satisfy the same backup period, and require more
> background work of creating more balances files.
> 
> ===========
> 
> Suggested design change to the chainstate "CCoinsViewDB" utxo
> database:
> 
> - As it is designed now, the above proposal would require maintaining
> a duplicate but lagging UTXO database.
> 
> - I propose changing the "CCoins" data structure so that it can keep
> track of spends that shouldn't be included in the commitment. Maybe
> call it "vtipspends".
> 
> Then the process for updating the CCoinsViewDB would be:
> 
> 1. Mark a txo as spent by adding the vout_ix to vtipspends.
> 
> 2. SetNull() and Cleanup() during the background thread that creates
> Balances commitments.  vtipspends would also need to be cleaned.
> 
> - The method for checking whether a txo was spent would need to be
> changed to check vtipspends.
> 
> At the same time, I know there is currently a lot of code complexity
> with handling forks and txo spends.  Let me propose something to
> handle this better too:
> 
> - vtipspends could hold {vout_ix, blockhash } instead of just vout_ix.
> 
> - Checking whether a txo is spent will then require a parameter that
> specifies the "fork tip hash" or "fork chain"
> 
> Then in the case of a fork, no work has to be done to update the utxo
> database... it is immediately ready to handle answering spend
> questions for a different fork.
> 
> Feedback welcome.  FYI I have coded up the creation of such a file
> already... So I am working on the implementation, not just the spec.
> I'd really like to hear what you guys think about my proposed changes
> to CCoins.
> 
> Cheers,
> 
> Praxeology
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From bram at bittorrent.com  Wed Mar  8 03:07:31 2017
From: bram at bittorrent.com (Bram Cohen)
Date: Tue, 7 Mar 2017 19:07:31 -0800
Subject: [bitcoin-dev] A Commitment-suitable UTXO set "Balances" file
	data structure
In-Reply-To: <1a7381ffeceb2209dda11928de10fa12@cock.lu>
References: <_Z0S6yfN2uS1b0SYoZzU9LMo3QQ967dyn0e12ep_aXJ8cNw8wTovQWED6mKg3PH0hb2yKEG-5Cv0xH3IC2cG5rczP5qo-xLtrjJMXW1uCss=@protonmail.com>
	<1a7381ffeceb2209dda11928de10fa12@cock.lu>
Message-ID: <CA+KqGkpQ6HONO6VXEPDqH9MrsRGT+3=fj=b5WFdBoVkz2Vr7Qg@mail.gmail.com>

On Tue, Mar 7, 2017 at 5:55 PM, bfd--- via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Having a commitment to a "balance" of an "address" (I assume you mean
> P2SH/P2PKH script) is extremely expensive to create and validate, does
> not scale and is not a particularly useful thing for a client to use.
>

The benefit of this sort of infrequent utxo commitment is that it would
allow a new client to download just the contents of the utxo set and not
have to get the entire blockchain history, which is much larger.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170307/82d8eea0/attachment-0001.html>

From laanwj at gmail.com  Wed Mar  8 08:24:00 2017
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Wed, 8 Mar 2017 09:24:00 +0100
Subject: [bitcoin-dev] Bitcoin Core 0.14.0 released
Message-ID: <20170308082400.GA11301@amethyst.visucore.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Bitcoin Core version 0.14.0 is now available from:

  <https://bitcoin.org/bin/bitcoin-core-0.14.0/>

Or from the torrent,

    magnet:?xt=urn:btih:2dbf4181022baa0629f9313787d0a4294e6acac4&dn=bitcoin-core-0.14.0&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.publicbt.com%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.ccc.de%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&ws=https%3A%2F%2Fbitcoin.org%2Fbin%2F

This is a new major version release, including new features, various bugfixes
and performance improvements, as well as updated translations.

Please report bugs using the issue tracker at github:

  <https://github.com/bitcoin/bitcoin/issues>

To receive security and update notifications, please subscribe to:

  <https://bitcoincore.org/en/list/announcements/join/>

Compatibility
==============

Bitcoin Core is extensively tested on multiple operating systems using
the Linux kernel, macOS 10.8+, and Windows Vista and later.

Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),
No attempt is made to prevent installing or running the software on Windows XP, you
can still do so at your own risk but be aware that there are known instabilities and issues.
Please do not report issues about Windows XP to the issue tracker.

Bitcoin Core should also work on most other Unix-like systems but is not
frequently tested on them.

Notable changes
===============

Performance Improvements
- --------------

Validation speed and network propagation performance have been greatly
improved, leading to much shorter sync and initial block download times.

- - The script signature cache has been reimplemented as a "cuckoo cache",
  allowing for more signatures to be cached and faster lookups.
- - Assumed-valid blocks have been introduced which allows script validation to
  be skipped for ancestors of known-good blocks, without changing the security
  model. See below for more details.
- - In some cases, compact blocks are now relayed before being fully validated as
  per BIP152.
- - P2P networking has been refactored with a focus on concurrency and
  throughput. Network operations are no longer bottlenecked by validation. As a
  result, block fetching is several times faster than previous releases in many
  cases.
- - The UTXO cache now claims unused mempool memory. This speeds up initial block
  download as UTXO lookups are a major bottleneck there, and there is no use for
  the mempool at that stage.


Manual Pruning
- --------------

Bitcoin Core has supported automatically pruning the blockchain since 0.11. Pruning
the blockchain allows for significant storage space savings as the vast majority of
the downloaded data can be discarded after processing so very little of it remains
on the disk.

Manual block pruning can now be enabled by setting `-prune=1`. Once that is set,
the RPC command `pruneblockchain` can be used to prune the blockchain up to the
specified height or timestamp.

`getinfo` Deprecated
- --------------------

The `getinfo` RPC command has been deprecated. Each field in the RPC call
has been moved to another command's output with that command also giving
additional information that `getinfo` did not provide. The following table
shows where each field has been moved to:

|`getinfo` field   | Moved to                                  |
|------------------|-------------------------------------------|
`"version"`	   | `getnetworkinfo()["version"]`
`"protocolversion"`| `getnetworkinfo()["protocolversion"]`
`"walletversion"`  | `getwalletinfo()["walletversion"]`
`"balance"`	   | `getwalletinfo()["balance"]`
`"blocks"`	   | `getblockchaininfo()["blocks"]`
`"timeoffset"`	   | `getnetworkinfo()["timeoffset"]`
`"connections"`	   | `getnetworkinfo()["connections"]`
`"proxy"`	   | `getnetworkinfo()["networks"][0]["proxy"]`
`"difficulty"`	   | `getblockchaininfo()["difficulty"]`
`"testnet"`	   | `getblockchaininfo()["chain"] == "test"`
`"keypoololdest"`  | `getwalletinfo()["keypoololdest"]`
`"keypoolsize"`	   | `getwalletinfo()["keypoolsize"]`
`"unlocked_until"` | `getwalletinfo()["unlocked_until"]`
`"paytxfee"`	   | `getwalletinfo()["paytxfee"]`
`"relayfee"`	   | `getnetworkinfo()["relayfee"]`
`"errors"`	   | `getnetworkinfo()["warnings"]`

ZMQ On Windows
- --------------

Previously the ZeroMQ notification system was unavailable on Windows
due to various issues with ZMQ. These have been fixed upstream and
now ZMQ can be used on Windows. Please see [this document](https://github.com/bitcoin/bitcoin/blob/master/doc/zmq.md) for
help with using ZMQ in general.

Nested RPC Commands in Debug Console
- ------------------------------------

The ability to nest RPC commands has been added to the debug console. This
allows users to have the output of a command become the input to another
command without running the commands separately.

The nested RPC commands use bracket syntax (i.e. `getwalletinfo()`) and can
be nested (i.e. `getblock(getblockhash(1))`). Simple queries can be
done with square brackets where object values are accessed with either an 
array index or a non-quoted string (i.e. `listunspent()[0][txid]`). Both
commas and spaces can be used to separate parameters in both the bracket syntax
and normal RPC command syntax.

Network Activity Toggle
- -----------------------

A RPC command and GUI toggle have been added to enable or disable all p2p
network activity. The network status icon in the bottom right hand corner 
is now the GUI toggle. Clicking the icon will either enable or disable all
p2p network activity. If network activity is disabled, the icon will 
be grayed out with an X on top of it.

Additionally the `setnetworkactive` RPC command has been added which does
the same thing as the GUI icon. The command takes one boolean parameter,
`true` enables networking and `false` disables it.

Out-of-sync Modal Info Layer
- ----------------------------

When Bitcoin Core is out-of-sync on startup, a semi-transparent information
layer will be shown over top of the normal display. This layer contains
details about the current sync progress and estimates the amount of time
remaining to finish syncing. This layer can also be hidden and subsequently
unhidden by clicking on the progress bar at the bottom of the window.

Support for JSON-RPC Named Arguments
- ------------------------------------

Commands sent over the JSON-RPC interface and through the `bitcoin-cli` binary
can now use named arguments. This follows the [JSON-RPC specification](http://www.jsonrpc.org/specification)
for passing parameters by-name with an object.

`bitcoin-cli` has been updated to support this by parsing `name=value` arguments
when the `-named` option is given.

Some examples:

    src/bitcoin-cli -named help command="help"
    src/bitcoin-cli -named getblockhash height=0
    src/bitcoin-cli -named getblock blockhash=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f
    src/bitcoin-cli -named sendtoaddress address="(snip)" amount="1.0" subtractfeefromamount=true

The order of arguments doesn't matter in this case. Named arguments are also
useful to leave out arguments that should stay at their default value. The
rarely-used arguments `comment` and `comment_to` to `sendtoaddress`, for example, can
be left out. However, this is not yet implemented for many RPC calls, this is
expected to land in a later release.

The RPC server remains fully backwards compatible with positional arguments.

Opt into RBF When Sending
- -------------------------

A new startup option, `-walletrbf`, has been added to allow users to have all
transactions sent opt into RBF support. The default value for this option is
currently `false`, so transactions will not opt into RBF by default. The new
`bumpfee` RPC can be used to replace transactions that opt into RBF.

Sensitive Data Is No Longer Stored In Debug Console History
- -----------------------------------------------------------

The debug console maintains a history of previously entered commands that can be
accessed by pressing the Up-arrow key so that users can easily reuse previously
entered commands. Commands which have sensitive information such as passphrases and
private keys will now have a `(...)` in place of the parameters when accessed through
the history.

Retaining the Mempool Across Restarts
- -------------------------------------

The mempool will be saved to the data directory prior to shutdown
to a `mempool.dat` file. This file preserves the mempool so that when the node
restarts the mempool can be filled with transactions without waiting for new transactions
to be created. This will also preserve any changes made to a transaction through
commands such as `prioritisetransaction` so that those changes will not be lost.

Final Alert
- -----------

The Alert System was [disabled and deprecated](https://bitcoin.org/en/alert/2016-11-01-alert-retirement) in Bitcoin Core 0.12.1 and removed in 0.13.0. 
The Alert System was retired with a maximum sequence final alert which causes any nodes
supporting the Alert System to display a static hard-coded "Alert Key Compromised" message which also
prevents any other alerts from overriding it. This final alert is hard-coded into this release
so that all old nodes receive the final alert.

GUI Changes
- -----------

 - After resetting the options by clicking the `Reset Options` button 
   in the options dialog or with the `-resetguioptions` startup option, 
   the user will be prompted to choose the data directory again. This 
   is to ensure that custom data directories will be kept after the 
   option reset which clears the custom data directory set via the choose 
   datadir dialog.

 - Multiple peers can now be selected in the list of peers in the debug 
   window. This allows for users to ban or disconnect multiple peers 
   simultaneously instead of banning them one at a time.

 - An indicator has been added to the bottom right hand corner of the main
   window to indicate whether the wallet being used is a HD wallet. This
   icon will be grayed out with an X on top of it if the wallet is not a
   HD wallet.

Low-level RPC changes
- ----------------------

 - `importprunedfunds` only accepts two required arguments. Some versions accept
   an optional third arg, which was always ignored. Make sure to never pass more
   than two arguments.

 - The first boolean argument to `getaddednodeinfo` has been removed. This is 
   an incompatible change.

 - RPC command `getmininginfo` loses the "testnet" field in favor of the more
   generic "chain" (which has been present for years).

 - A new RPC command `preciousblock` has been added which marks a block as
   precious. A precious block will be treated as if it were received earlier
   than a competing block.

 - A new RPC command `importmulti` has been added which receives an array of 
   JSON objects representing the intention of importing a public key, a 
   private key, an address and script/p2sh

 - Use of `getrawtransaction` for retrieving confirmed transactions with unspent
   outputs has been deprecated. For now this will still work, but in the future
   it may change to only be able to retrieve information about transactions in
   the mempool or if `txindex` is enabled.

 - A new RPC command `getmemoryinfo` has been added which will return information
   about the memory usage of Bitcoin Core. This was added in conjunction with
   optimizations to memory management. See [Pull #8753](https://github.com/bitcoin/bitcoin/pull/8753)
   for more information.

 - A new RPC command `bumpfee` has been added which allows replacing an
   unconfirmed wallet transaction that signaled RBF (see the `-walletrbf`
   startup option above) with a new transaction that pays a higher fee, and
   should be more likely to get confirmed quickly.

HTTP REST Changes
- -----------------

 - UTXO set query (`GET /rest/getutxos/<checkmempool>/<txid>-<n>/<txid>-<n>
   /.../<txid>-<n>.<bin|hex|json>`) responses were changed to return status 
   code `HTTP_BAD_REQUEST` (400) instead of `HTTP_INTERNAL_SERVER_ERROR` (500)
   when requests contain invalid parameters.

Minimum Fee Rate Policies
- -------------------------

Since the changes in 0.12 to automatically limit the size of the mempool and improve the performance of block creation in mining code it has not been important for relay nodes or miners to set `-minrelaytxfee`. With this release the following concepts that were tied to this option have been separated out:
- - incremental relay fee used for calculating BIP 125 replacement and mempool limiting. (1000 satoshis/kB)
- - calculation of threshold for a dust output. (effectively 3 * 1000 satoshis/kB)
- - minimum fee rate of a package of transactions to be included in a block created by the mining code. If miners wish to set this minimum they can use the new `-blockmintxfee` option.  (defaults to 1000 satoshis/kB)

The `-minrelaytxfee` option continues to exist but is recommended to be left unset.

Fee Estimation Changes
- ----------------------

- - Since 0.13.2 fee estimation for a confirmation target of 1 block has been
  disabled. The fee slider will no longer be able to choose a target of 1 block.
  This is only a minor behavior change as there was often insufficient
  data for this target anyway. `estimatefee 1` will now always return -1 and
  `estimatesmartfee 1` will start searching at a target of 2.

- - The default target for fee estimation is changed to 6 blocks in both the GUI
  (previously 25) and for RPC calls (previously 2).

Removal of Priority Estimation
- ------------------------------

- - Estimation of "priority" needed for a transaction to be included within a target
  number of blocks has been removed.  The RPC calls are deprecated and will either
  return -1 or 1e24 appropriately. The format for `fee_estimates.dat` has also
  changed to no longer save these priority estimates. It will automatically be
  converted to the new format which is not readable by prior versions of the
  software.

- - Support for "priority" (coin age) transaction sorting for mining is
  considered deprecated in Core and will be removed in the next major version.
  This is not to be confused with the `prioritisetransaction` RPC which will remain
  supported by Core for adding fee deltas to transactions.

P2P connection management
- --------------------------

- - Peers manually added through the `-addnode` option or `addnode` RPC now have their own
  limit of eight connections which does not compete with other inbound or outbound
  connection usage and is not subject to the limitation imposed by the `-maxconnections`
  option.

- - New connections to manually added peers are performed more quickly.

Introduction of assumed-valid blocks
- -------------------------------------

- - A significant portion of the initial block download time is spent verifying
  scripts/signatures.  Although the verification must pass to ensure the security
  of the system, no other result from this verification is needed: If the node
  knew the history of a given block were valid it could skip checking scripts
  for its ancestors.

- - A new configuration option 'assumevalid' is provided to express this knowledge
  to the software.  Unlike the 'checkpoints' in the past this setting does not
  force the use of a particular chain: chains that are consistent with it are
  processed quicker, but other chains are still accepted if they'd otherwise
  be chosen as best. Also unlike 'checkpoints' the user can configure which
  block history is assumed true, this means that even outdated software can
  sync more quickly if the setting is updated by the user.

- - Because the validity of a chain history is a simple objective fact it is much
  easier to review this setting.  As a result the software ships with a default
  value adjusted to match the current chain shortly before release.  The use
  of this default value can be disabled by setting -assumevalid=0

Fundrawtransaction change address reuse
- ----------------------------------------

- - Before 0.14, `fundrawtransaction` was by default wallet stateless. In
  almost all cases `fundrawtransaction` does add a change-output to the
  outputs of the funded transaction. Before 0.14, the used keypool key was
  never marked as change-address key and directly returned to the keypool
  (leading to address reuse).  Before 0.14, calling `getnewaddress`
  directly after `fundrawtransaction` did generate the same address as
  the change-output address.

- - Since 0.14, fundrawtransaction does reserve the change-output-key from
  the keypool by default (optional by setting  `reserveChangeKey`, default =
  `true`)

- - Users should also consider using `getrawchangeaddress()` in conjunction
  with `fundrawtransaction`'s `changeAddress` option.

Unused mempool memory used by coincache
- ----------------------------------------

- - Before 0.14, memory reserved for mempool (using the `-maxmempool` option)
  went unused during initial block download, or IBD. In 0.14, the UTXO DB cache
  (controlled with the `-dbcache` option) borrows memory from the mempool
  when there is extra memory available. This may result in an increase in
  memory usage during IBD for those previously relying on only the `-dbcache`
  option to limit memory during that time.

0.14.0 Change log
=================

Detailed release notes follow. This overview includes changes that affect
behavior, not code moves, minor refactors and string updates. For convenience
in locating the code changes and accompanying discussion, both the pull request
and git merge commit are mentioned.

### RPC and other APIs
- - #8421 `b77bb95` httpserver: drop boost dependency (theuni)
- - #8638 `f061415` rest.cpp: change `HTTP_INTERNAL_SERVER_ERROR` to `HTTP_BAD_REQUEST` (djpnewton)
- - #8272 `91990ee` Make the dummy argument to getaddednodeinfo optional (sipa)
- - #8722 `bb843ad` bitcoin-cli: More detailed error reporting (laanwj)
- - #6996 `7f71a3c` Add preciousblock RPC (sipa)
- - #8788 `97c7f73` Give RPC commands more information about the RPC request (jonasschnelli)
- - #7948 `5d2c8e5` Augment getblockchaininfo bip9\_softforks data (mruddy)
- - #8980 `0e22855` importmulti: Avoid using boost::variant::operator!=, which is only in newer boost versions (luke-jr)
- - #9025 `4d8558a` Getrawtransaction should take a bool for verbose (jnewbery)
- - #8811 `5754e03` Add support for JSON-RPC named arguments (laanwj)
- - #9520 `2456a83` Deprecate non-txindex getrawtransaction and better warning (sipa)
- - #9518 `a65ced1` Return height of last block pruned by pruneblockchain RPC (ryanofsky)
- - #9222 `7cb024e` Add 'subtractFeeFromAmount' option to 'fundrawtransaction' (dooglus)
- - #8456 `2ef52d3` Simplified `bumpfee` command (mrbandrews)
- - #9516 `727a798` Bug-fix: listsinceblock: use fork point as reference for blocks in reorg'd chains (kallewoof)
- - #9640 `7bfb770` Bumpfee: bugfixes for error handling and feerate calculation (sdaftuar)
- - #9673 `8d6447e` Set correct metadata on bumpfee wallet transactions (ryanofsky)
- - #9650 `40f7e27` Better handle invalid parameters to signrawtransaction (TheBlueMatt)
- - #9682 `edc9e63` Require timestamps for importmulti keys (ryanofsky)
- - #9108 `d8e8b06` Use importmulti timestamp when importing watch only keys (on top of #9682) (ryanofsky)
- - #9756 `7a93af8` Return error when importmulti called with invalid address (ryanofsky)
- - #9778 `ad168ef` Add two hour buffer to manual pruning (morcos)
- - #9761 `9828f9a` Use 2 hour grace period for key timestamps in importmulti rescans (ryanofsky)
- - #9474 `48d7e0d` Mark the minconf parameter to move as ignored (sipa)
- - #9619 `861cb0c` Bugfix: RPC/Mining: GBT should return 1 MB sizelimit before segwit activates (luke-jr)
- - #9773 `9072395` Return errors from importmulti if complete rescans are not successful (ryanofsky)

### Block and transaction handling
- - #8391 `37d83bb` Consensus: Remove ISM (NicolasDorier)
- - #8365 `618c9dd` Treat high-sigop transactions as larger rather than rejecting them (sipa)
- - #8814 `14b7b3f` wallet, policy: ParameterInteraction: Don't allow 0 fee (MarcoFalke)
- - #8515 `9bdf526` A few mempool removal optimizations (sipa)
- - #8448 `101c642` Store mempool and prioritization data to disk (sipa)
- - #7730 `3c03dc2` Remove priority estimation (morcos)
- - #9111 `fb15610` Remove unused variable `UNLIKELY_PCT` from fees.h (fanquake)
- - #9133 `434e683` Unset fImporting for loading mempool (morcos)
- - #9179 `b9a87b4` Set `DEFAULT_LIMITFREERELAY` = 0 kB/minute (MarcoFalke)
- - #9239 `3fbf079` Disable fee estimates for 1-block target (morcos)
- - #7562 `1eef038` Bump transaction version default to 2 (btcdrak)
- - #9313,#9367 If we don't allow free txs, always send a fee filter (morcos)
- - #9346 `b99a093` Batch construct batches (sipa)
- - #9262 `5a70572` Prefer coins that have fewer ancestors, sanity check txn before ATMP (instagibbs)
- - #9288 `1ce7ede` Fix a bug if the min fee is 0 for FeeFilterRounder (morcos)
- - #9395 `0fc1c31` Add test for `-walletrejectlongchains` (morcos)
- - #9107 `7dac1e5` Safer modify new coins (morcos)
- - #9312 `a72f76c` Increase mempool expiry time to 2 weeks (morcos)
- - #8610 `c252685` Share unused mempool memory with coincache (sipa)
- - #9138 `f646275` Improve fee estimation (morcos)
- - #9408 `46b249e` Allow shutdown during LoadMempool, dump only when necessary (jonasschnelli)
- - #9310 `8c87f17` Assert FRESH validity in CCoinsViewCache::BatchWrite (ryanofsky)
- - #7871 `e2e624d` Manual block file pruning (mrbandrews)
- - #9507 `0595042` Fix use-after-free in CTxMemPool::removeConflicts() (sdaftuar)
- - #9380 `dd98f04` Separate different uses of minimum fees (morcos)
- - #9596 `71148b8` bugfix save feeDelta instead of priorityDelta in DumpMempool (morcos)
- - #9371 `4a1dc35` Notify on removal (morcos)
- - #9519 `9b4d267` Exclude RBF replacement txs from fee estimation (morcos)
- - #8606 `e2a1a1e` Fix some locks (sipa)
- - #8681 `6898213` Performance Regression Fix: Pre-Allocate txChanged vector (JeremyRubin)
- - #8223 `744d265` c++11: Use std::unique\_ptr for block creation (domob1812)
- - #9125 `7490ae8` Make CBlock a vector of shared\_ptr of CTransactions (sipa)
- - #8930 `93566e0` Move orphan processing to ActivateBestChain (TheBlueMatt)
- - #8580 `46904ee` Make CTransaction actually immutable (sipa)
- - #9240 `a1dcf2e` Remove txConflicted (morcos)
- - #8589 `e8cfe1e` Inline CTxInWitness inside CTxIn (sipa)
- - #9349 `2db4cbc` Make CScript (and prevector) c++11 movable (sipa)
- - #9252 `ce5c1f4` Release cs\_main before calling ProcessNewBlock, or processing headers (cmpctblock handling) (sdaftuar)
- - #9283 `869781c` A few more CTransactionRef optimizations (sipa)
- - #9499 `9c9af5a` Use recent-rejects, orphans, and recently-replaced txn for compact-block-reconstruction (TheBlueMatt)
- - #9813 `3972a8e` Read/write mempool.dat as a binary (paveljanik)

### P2P protocol and network code
- - #8128 `1030fa7` Turn net structures into dumb storage classes (theuni)
- - #8282 `026c6ed` Feeler connections to increase online addrs in the tried table (EthanHeilman)
- - #8462 `53f8f22` Move AdvertiseLocal debug output to net category (Mirobit)
- - #8612 `84decb5` Check for compatibility with download in FindNextBlocksToDownload (sipa)
- - #8594 `5b2ea29` Do not add random inbound peers to addrman (gmaxwell)
- - #8085 `6423116` Begin encapsulation (theuni)
- - #8715 `881d7ea` only delete CConnman if it's been created (theuni)
- - #8707 `f07424a` Fix maxuploadtarget setting (theuni)
- - #8661 `d2e4655` Do not set an addr time penalty when a peer advertises itself (gmaxwell)
- - #8822 `9bc6a6b` Consistent checksum handling (laanwj)
- - #8936 `1230890` Report NodeId in misbehaving debug (rebroad)
- - #8968 `3cf496d` Don't hold cs\_main when calling ProcessNewBlock from a cmpctblock (TheBlueMatt)
- - #9002 `e1d1f57` Make connect=0 disable automatic outbound connections (gmaxwell)
- - #9050 `fcf61b8` Make a few values immutable, and use deterministic randomness for the localnonce (theuni)
- - #8969 `3665483` Decouple peer-processing-logic from block-connection-logic (#2) (TheBlueMatt)
- - #8708 `c8c572f` have CConnman handle message sending (theuni)
- - #8709 `1e50d22` Allow filterclear messages for enabling TX relay only (rebroad)
- - #9045 `9f554e0` Hash P2P messages as they are received instead of at process-time (TheBlueMatt)
- - #9026 `dc6b940` Fix handling of invalid compact blocks (sdaftuar)
- - #8996 `ab914a6` Network activity toggle (luke-jr)
- - #9131 `62af164` fNetworkActive is not protected by a lock, use an atomic (jonasschnelli)
- - #8872 `0c577f2` Remove block-request logic from INV message processing (TheBlueMatt)
- - #8690 `791b58d` Do not fully sort all nodes for addr relay (sipa)
- - #9128 `76fec09` Decouple CConnman and message serialization (theuni)
- - #9226 `3bf06e9` Remove fNetworkNode and pnodeLocalHost (gmaxwell)
- - #9352 `a7f7651` Attempt reconstruction from all compact block announcements (sdaftuar)
- - #9319 `a55716a` Break addnode out from the outbound connection limits (gmaxwell)
- - #9261 `2742568` Add unstored orphans with rejected parents to recentRejects (morcos)
- - #9441 `8b66bf7` Massive speedup. Net locks overhaul (theuni)
- - #9375 `3908fc4` Relay compact block messages prior to full block connection (TheBlueMatt)
- - #9400 `8a445c5` Set peers as HB peers upon full block validation (instagibbs)
- - #9561 `6696b46` Wake message handling thread when we receive a new block (TheBlueMatt)
- - #9535 `82274c0` Split CNode::cs\_vSend: message processing and message sending (TheBlueMatt)
- - #9606 `3f9f962` Consistently use GetTimeMicros() for inactivity checks (sdaftuar)
- - #9594 `fd70211` Send final alert message to older peers after connecting (gmaxwell)
- - #9626 `36966a1` Clean up a few CConnman cs\_vNodes/CNode things (TheBlueMatt)
- - #9609 `4966917` Fix remaining net assertions (theuni)
- - #9671 `7821db3` Fix super-unlikely race introduced in 236618061a445d2cb11e72 (TheBlueMatt)
- - #9730 `33f3b21` Remove bitseed.xf2.org form the dns seed list (jonasschnelli)
- - #9698 `2447c10` Fix socket close race (theuni)
- - #9708 `a06ede9` Clean up all known races/platform-specific UB at the time PR was opened (TheBlueMatt)
- - #9715 `b08656e` Disconnect peers which we do not receive VERACKs from within 60 sec (TheBlueMatt)
- - #9720 `e87ce95` Fix banning and disallow sending messages before receiving verack (theuni)
- - #9268 `09c4fd1` Fix rounding privacy leak introduced in #9260 (TheBlueMatt)
- - #9075 `9346f84` Decouple peer-processing-logic from block-connection-logic (#3) (TheBlueMatt)
- - #8688 `047ded0` Move static global randomizer seeds into CConnman (sipa)
- - #9289 `d9ae1ce` net: drop boost::thread\_group (theuni)

### Validation
- - #9014 `d04aeba` Fix block-connection performance regression (TheBlueMatt)
- - #9299 `d52ce89` Remove no longer needed check for premature v2 txs (morcos)
- - #9273 `b68685a` Remove unused `CDiskBlockPos*` argument from ProcessNewBlock (TheBlueMatt)
- - #8895 `b83264d` Better SigCache Implementation (JeremyRubin)
- - #9490 `e126d0c` Replace FindLatestBefore used by importmulti with FindEarliestAtLeast (gmaxwell)
- - #9484 `812714f` Introduce assumevalid setting to skip validation presumed valid scripts (gmaxwell)
- - #9511 `7884956` Don't overwrite validation state with corruption check (morcos)
- - #9765 `1e92e04` Harden against mistakes handling invalid blocks (sdaftuar)
- - #9779 `3c02b95` Update nMinimumChainWork and defaultAssumeValid (gmaxwell)
- - #8524 `19b0f33` Precompute sighashes (sipa)
- - #9791 `1825a03` Avoid VLA in hash.h (sipa)

### Build system
- - #8238 `6caf3ee` ZeroMQ 4.1.5 && ZMQ on Windows (fanquake)
- - #8520 `b40e19c` Remove check for `openssl/ec.h` (laanwj)
- - #8617 `de07fdc` Include instructions to extract Mac OS X SDK on Linux using 7zip and SleuthKit (luke-jr)
- - #8566 `7b98895` Easy to use gitian building script (achow101)
- - #8604 `f256843` build,doc: Update for 0.13.0+ and OpenBSD 5.9 (laanwj)
- - #8640 `2663e51` depends: Remove Qt46 package (fanquake)
- - #8645 `8ea4440` Remove unused Qt 4.6 patch (droark)
- - #8608 `7e9ab95` Install manpages via make install, also add some autogenerated manpages (nomnombtc)
- - #8781 `ca69ef4` contrib: delete `qt_translations.py` (MarcoFalke)
- - #8783 `64dc645` share: remove qt/protobuf.pri (MarcoFalke)
- - #8423 `3166dff` depends: expat 2.2.0, ccache 3.3.1, fontconfig 2.12.1 (fanquake)
- - #8791 `b694b0d` travis: cross-mac: explicitly enable gui (MarcoFalke)
- - #8820 `dc64141` depends: Fix Qt compilation with Xcode 8 (fanquake)
- - #8730 `489a6ab` depends: Add libevent compatibility patch for windows (laanwj)
- - #8819 `c841816` depends: Boost 1.61.0 (fanquake)
- - #8826 `f560d95` Do not include `env_win.cc` on non-Windows systems (paveljanik)
- - #8948 `e077e00` Reorder Windows gitian build order to match Linux (Michagogo)
- - #8568 `078900d` new var `DIST_CONTRIB` adds useful things for packagers from contrib (nomnombtc)
- - #9114 `21e6c6b` depends: Set `OSX_MIN_VERSION` to 10.8 (fanquake)
- - #9140 `018a4eb` Bugfix: Correctly replace generated headers and fail cleanly (luke-jr)
- - #9156 `a8b2a82` Add compile and link options echo to configure (jonasschnelli)
- - #9393 `03d85f6` Include cuckoocache header in Makefile (MarcoFalke)
- - #9420 `bebe369` Fix linker error when configured with --enable-lcov (droark)
- - #9412 `53442af` Fix 'make deploy' for OSX (jonasschnelli)
- - #9475 `7014506` Let autoconf detect presence of `EVP_MD_CTX_new` (luke-jr)
- - #9513 `bbf193f` Fix qt distdir builds (theuni)
- - #9471 `ca615e6` depends: libevent 2.1.7rc (fanquake)
- - #9468 `f9117f2` depends: Dependency updates for 0.14.0 (fanquake)
- - #9469 `01c4576` depends: Qt 5.7.1 (fanquake)
- - #9574 `5ac6687` depends: Fix QT build on OSX (fanquake)
- - #9646 `720b579` depends: Fix cross build for qt5.7 (theuni)
- - #9705 `6a55515` Add options to override BDB cflags/libs (laanwj)
- - #8249 `4e1567a` Enable (and check for) 64-bit ASLR on Windows (laanwj)
- - #9758 `476cc47` Selectively suppress deprecation warnings (jonasschnelli)
- - #9783 `6d61a2b` release: bump gitian descriptors for a new 0.14 package cache (theuni)
- - #9789 `749fe95` build: add --enable-werror and warn on vla's (theuni)
- - #9831 `99fd85c` build: force a c++ standard to be specified (theuni)

### GUI
- - #8192 `c503863` Remove URLs from About dialog translations (fanquake)
- - #8540 `36404ae` Fix random segfault when closing "Choose data directory" dialog (laanwj)
- - #8517 `2468292` Show wallet HD state in statusbar (jonasschnelli)
- - #8463 `62a5a8a` Remove Priority from coincontrol dialog (MarcoFalke)
- - #7579 `0606f95` Show network/chain errors in the GUI (jonasschnelli)
- - #8583 `c19f8a4` Show XTHIN in GUI (rebroad)
- - #7783 `4335d5a` RPC-Console: support nested commands and simple value queries (jonasschnelli)
- - #8672 `6052d50` Show transaction size in transaction details window (Cocosoft)
- - #8777 `fec6af7` WalletModel: Expose disablewallet (MarcoFalke)
- - #8371 `24f72e9` Add out-of-sync modal info layer (jonasschnelli)
- - #8885 `b2fec4e` Fix ban from qt console (theuni)
- - #8821 `bf8e68a` sync-overlay: Don't block during reindex (MarcoFalke)
- - #8906 `088d1f4` sync-overlay: Don't show progress twice (MarcoFalke)
- - #8918 `47ace42` Add "Copy URI" to payment request context menu (luke-jr)
- - #8925 `f628d9a` Display minimum ping in debug window (rebroad)
- - #8774 `3e942a7` Qt refactors to better abstract wallet access (luke-jr)
- - #8985 `7b1bfa3` Use pindexBestHeader instead of setBlockIndexCandidates for NotifyHeaderTip() (jonasschnelli)
- - #8989 `d2143dc` Overhaul smart-fee slider, adjust default confirmation target (jonasschnelli)
- - #9043 `273bde3` Return useful error message on ATMP failure (MarcoFalke)
- - #9088 `4e57824` Reduce ambiguity of warning message (rebroad)
- - #8874 `e984730` Multiple Selection for peer and ban tables (achow101)
- - #9145 `924745d` Make network disabled icon 50% opaque (MarcoFalke)
- - #9130 `ac489b2` Mention the new network toggle functionality in the tooltip (paveljanik)
- - #9218 `4d955fc` Show progress overlay when clicking spinner icon (laanwj)
- - #9280 `e15660c` Show ModalOverlay by pressing the progress bar, allow hiding (jonasschnelli)
- - #9296 `fde7d99` Fix missed change to WalletTx structure (morcos)
- - #9266 `2044e37` Bugfix: Qt/RPCConsole: Put column enum in the right places (luke-jr)
- - #9255 `9851a84` layoutAboutToChange signal is called layoutAboutToBeChanged (laanwj)
- - #9330 `47e6a19` Console: add security warning (jonasschnelli)
- - #9329 `db45ad8` Console: allow empty arguments (jonasschnelli)
- - #8877 `6dc4c43` Qt RPC console: history sensitive-data filter, and saving input line when browsing history (luke-jr)
- - #9462 `649cf5f` Do not translate tilde character (MarcoFalke)
- - #9457 `123ea73` Select more files for translation (MarcoFalke)
- - #9413 `fd7d8c7` CoinControl: Allow non-wallet owned change addresses (jonasschnelli)
- - #9461 `b250686` Improve progress display during headers-sync and peer-finding (jonasschnelli)
- - #9588 `5086452` Use nPowTargetSpacing constant (MarcoFalke)
- - #9637 `d9e4d1d` Fix transaction details output-index to reflect vout index (jonasschnelli)
- - #9718 `36f9d3a` Qt/Intro: Various fixes (luke-jr)
- - #9735 `ec66d06` devtools: Handle Qt formatting characters edge-case in update-translations.py (laanwj)
- - #9755 `a441db0` Bugfix: Qt/Options: Restore persistent "restart required" notice (luke-jr)
- - #9817 `7d75a5a` Fix segfault crash when shutdown the GUI in disablewallet mode (jonasschnelli)

### Wallet
- - #8152 `b9c1cd8` Remove `CWalletDB*` parameter from CWallet::AddToWallet (pstratem)
- - #8432 `c7e05b3` Make CWallet::fFileBacked private (pstratem)
- - #8445 `f916700` Move CWallet::setKeyPool to private section of CWallet (pstratem)
- - #8564 `0168019` Remove unused code/conditions in ReadAtCursor (jonasschnelli)
- - #8601 `37ac678` Add option to opt into full-RBF when sending funds (rebase, original by petertodd) (laanwj)
- - #8494 `a5b20ed` init, wallet: ParameterInteraction() iff wallet enabled (MarcoFalke)
- - #8760 `02ac669` init: Get rid of some `ENABLE_WALLET` (MarcoFalke)
- - #8696 `a1f8d3e` Wallet: Remove last external reference to CWalletDB (pstratem)
- - #8768 `886e8c9` init: Get rid of fDisableWallet (MarcoFalke)
- - #8486 `ab0b411` Add high transaction fee warnings (MarcoFalke)
- - #8851 `940748b` Move key derivation logic from GenerateNewKey to DeriveNewChildKey (pstratem)
- - #8287 `e10af96` Set fLimitFree = true (MarcoFalke)
- - #8928 `c587577` Fix init segfault where InitLoadWallet() calls ATMP before genesis (TheBlueMatt)
- - #7551 `f2d7056` Add importmulti RPC call (pedrobranco)
- - #9016 `0dcb888` Return useful error message on ATMP failure (instagibbs)
- - #8753 `f8723d2` Locked memory manager (laanwj)
- - #8828 `a4fd8df` Move CWalletDB::ReorderTransactions to CWallet (pstratem)
- - #8977 `6a1343f` Refactor wallet/init interaction (Reaccept wtx, flush thread) (jonasschnelli)
- - #9036 `ed0cc50` Change default confirm target from 2 to 6 (laanwj)
- - #9071 `d1871da` Declare wallet.h functions inline (sipa)
- - #9132 `f54e460` Make strWalletFile const (jonasschnelli)
- - #9141 `5ea5e04` Remove unnecessary calls to CheckFinalTx (jonasschnelli)
- - #9165 `c01f16a` SendMoney: use already-calculated balance (instagibbs)
- - #9311 `a336d13` Flush wallet after abandontransaction (morcos)
- - #8717 `38e4887` Addition of ImmatureCreditCached to MarkDirty() (spencerlievens)
- - #9446 `510c0d9` SetMerkleBranch: remove unused code, remove cs\_main lock requirement (jonasschnelli)
- - #8776 `2a524b8` Wallet refactoring leading up to multiwallet (luke-jr)
- - #9465 `a7d55c9` Do not perform ECDSA signing in the fee calculation inner loop (gmaxwell)
- - #9404 `12e3112` Smarter coordination of change and fee in CreateTransaction (morcos)
- - #9377 `fb75cd0` fundrawtransaction: Keep change-output keys by default, make it optional (jonasschnelli)
- - #9578 `923dc44` Add missing mempool lock for CalculateMemPoolAncestors (TheBlueMatt)
- - #9227 `02464da` Make nWalletDBUpdated atomic to avoid a potential race (pstratem)
- - #9764 `f8af89a` Prevent "overrides a member function but is not marked 'override'" warnings (laanwj)
- - #9771 `e43a585` Add missing cs\_wallet lock that triggers new lock held assertion (ryanofsky)
- - #9316 `3097ea4` Disable free transactions when relay is disabled (MarcoFalke)
- - #9615 `d2c9e4d` Wallet incremental fee (morcos)
- - #9760 `40c754c` Remove importmulti always-true check (ryanofsky)

### Tests and QA
- - #8270 `6e5e5ab` Tests: Use portable #! in python scripts (/usr/bin/env) (ChoHag)
- - #8534,#8504 Remove java comparison tool (laanwj,MarcoFalke)
- - #8482 `740cff5` Use single cache dir for chains (MarcoFalke)
- - #8450 `21857d2` Replace `rpc_wallet_tests.cpp` with python RPC unit tests (pstratem)
- - #8671 `ddc3080` Minimal fix to slow prevector tests as stopgap measure (JeremyRubin)
- - #8680 `666eaf0` Address Travis spurious failures (theuni)
- - #8789 `e31a43c` pull-tester: Only print output when failed (MarcoFalke)
- - #8810 `14e8f99` tests: Add exception error message for JSONRPCException (laanwj)
- - #8830 `ef0801b` test: Add option to run bitcoin-util-test.py manually (jnewbery)
- - #8881 `e66cc1d` Add some verbose logging to bitcoin-util-test.py (jnewbery)
- - #8922 `0329511` Send segwit-encoded blocktxn messages in p2p-compactblocks (TheBlueMatt)
- - #8873 `74dc388` Add microbenchmarks to profile more code paths (ryanofsky)
- - #9032 `6a8be7b` test: Add format-dependent comparison to bctest (laanwj)
- - #9023 `774db92` Add logging to bitcoin-util-test.py (jnewbery)
- - #9065 `c9bdf9a` Merge `doc/unit-tests.md` into `src/test/README.md` (laanwj)
- - #9069 `ed64bce` Clean up bctest.py and bitcoin-util-test.py (jnewbery)
- - #9095 `b8f43e3` test: Fix test\_random includes (MarcoFalke)
- - #8894 `faec09b` Testing: Include fRelay in mininode version messages (jnewbery)
- - #9097 `e536499` Rework `sync_*` and preciousblock.py (MarcoFalke)
- - #9049 `71bc39e` Remove duplicatable duplicate-input check from CheckTransaction (TheBlueMatt)
- - #9136 `b422913` sync\_blocks cleanup (ryanofsky)
- - #9151 `4333b1c` proxy\_test: Calculate hardcoded port numbers (MarcoFalke)
- - #9206 `e662d28` Make test constant consistent with consensus.h (btcdrak)
- - #9139 `0de7fd3` Change sync\_blocks to pick smarter maxheight (on top of #9196) (ryanofsky)
- - #9100 `97ec6e5` tx\_valid: re-order inputs to how they are encoded (dcousens)
- - #9202 `e56cf67` bench: Add support for measuring CPU cycles (laanwj)
- - #9223 `5412c08` unification of Bloom filter representation (s-matthew-english)
- - #9257 `d7ba4a2` Dump debug logs on travis failures (sdaftuar)
- - #9221 `9e4bb31` Get rid of duplicate code (MarcoFalke)
- - #9274 `919db03` Use cached utxo set to fix performance regression (MarcoFalke)
- - #9276 `ea33f19` Some minor testing cleanups (morcos)
- - #9291 `8601784` Remove mapOrphanTransactionsByPrev from DoS\_tests (sipa)
- - #9309 `76fcd9d` Wallet needs to stay unlocked for whole test (morcos)
- - #9172 `5bc209c` Resurrect pstratem's "Simple fuzzing framework" (laanwj)
- - #9331 `c6fd923` Add test for rescan feature of wallet key import RPCs (ryanofsky)
- - #9354 `b416095` Make fuzzer actually test CTxOutCompressor (sipa)
- - #9390,#9416 travis: make distdir (MarcoFalke)
- - #9308 `0698639` test: Add CCoinsViewCache Access/Modify/Write tests (ryanofsky)
- - #9406 `0f921e6` Re-enable a blank v1 Tx JSON test (droark)
- - #9435 `dbc8a8c` Removed unused variable in test, fixing warning (ryanofsky)
- - #9436 `dce853e` test: Include tx data in `EXTRA_DIST` (MarcoFalke)
- - #9525 `02e5308` test: Include tx data in `EXTRA_DIST` (MarcoFalke)
- - #9498 `054d664` Basic CCheckQueue Benchmarks (JeremyRubin)
- - #9554 `0b96abc` test: Avoid potential NULL pointer dereference in `addrman_tests.cpp` (practicalswift)
- - #9628 `f895023` Increase a sync\_blocks timeout in pruning.py (sdaftuar)
- - #9638 `a7ea2f8` Actually test assertions in pruning.py (MarcoFalke)
- - #9647 `e99f0d7` Skip RAII event tests if libevent is built without `event_set_mem_functions` (luke-jr)
- - #9691 `fc67cd2` Init ECC context for `test_bitcoin_fuzzy` (gmaxwell)
- - #9712 `d304fef` bench: Fix initialization order in registration (laanwj)
- - #9707 `b860915` Fix RPC failure testing (jnewbery)
- - #9269 `43e8150` Align struct COrphan definition (sipa)
- - #9820 `599c69a` Fix pruning test broken by 2 hour manual prune window (ryanofsky)
- - #9824 `260c71c` qa: Check return code when stopping nodes (MarcoFalke)
- - #9875 `50953c2` tests: Fix dangling pwalletMain pointer in wallet tests (laanwj)
- - #9839 `eddaa6b` [qa] Make import-rescan.py watchonly check reliable (ryanofsky)

### Documentation
- - #8332 `806b9e7` Clarify witness branches in transaction.h serialization (dcousens)
- - #8935 `0306978` Documentation: Building on Windows with WSL (pooleja)
- - #9144 `c98f6b3` Correct waitforblockheight example help text (fanquake)
- - #9407 `041331e` Added missing colons in when running help command (anditto)
- - #9378 `870cd2b` Add documentation for CWalletTx::fFromMe member (ryanofsky)
- - #9297 `0b73807` Various RPC help outputs updated (Mirobit)
- - #9613 `07421cf` Clarify getbalance help string to explain interaction with bumpfee (ryanofsky)
- - #9663 `e30d928` Clarify listunspent amount description (instagibbs)
- - #9396 `d65a13b` Updated listsinceblock rpc documentation (accraze)
- - #8747 `ce43630` rpc: Fix transaction size comments and RPC help text (jnewbery)
- - #8058 `bbd9740` Doc: Add issue template (AmirAbrams)
- - #8567 `85d4e21` Add default port numbers to REST doc (djpnewton)
- - #8624 `89de153` build: Mention curl (MarcoFalke)
- - #8786 `9da7366` Mandatory copyright agreement (achow101)
- - #8823 `7b05af6` Add privacy recommendation when running hidden service (laanwj)
- - #9433 `caa2f10` Update the Windows build notes (droark)
- - #8879 `f928050` Rework docs (MarcoFalke)
- - #8887 `61d191f` Improve GitHub issue template (fanquake)
- - #8787 `279bbad` Add missing autogen to example builds (AmirAbrams)
- - #8892 `d270c30` Add build instructions for FreeBSD (laanwj)
- - #8890 `c71a654` Update Doxygen configuration file (fanquake)
- - #9207 `fa1f944` Move comments above bash command in build-unix (AmirAbrams)
- - #9219 `c4522e7` Improve windows build instructions using Linux subsystem (laanwj)
- - #8954 `932d02a` contrib: Add README for pgp keys (MarcoFalke)
- - #9093 `2fae5b9` release-process: Mention GitHub release and archived release notes (MarcoFalke)
- - #8743 `bae178f` Remove old manpages from contrib/debian in favour of doc/man (fanquake)
- - #9550 `4105cb6` Trim down the XP notice and say more about what we support (gmaxwell)
- - #9246 `9851498` Developer docs about existing subtrees (gmaxwell)
- - #9401 `c2ea1e6` Make rpcauth help message clearer, add example in example .conf (instagibbs)
- - #9022,#9033 Document dropping OS X 10.7 support (fanquake, MarcoFalke)
- - #8771 `bc9e3ab` contributing: Mention not to open several pulls (luke-jr)
- - #8852 `7b784cc` Mention Gitian building script in doc (Laudaa) (laanwj)
- - #8915 `03dd707` Add copyright/patent issues to possible NACK reasons (petertodd)
- - #8965 `23e03f8` Mention that PPA doesn't support Debian (anduck)
- - #9115 `bfc7aad` Mention reporting security issues responsibly (paveljanik)
- - #9840 `08e0690` Update sendfrom RPC help to correct coin selection misconception (ryanofsky)
- - #9865 `289204f` Change bitcoin address in RPC help message (marijnfs)

### Miscellaneous
- - #8274 `7a2d402` util: Update tinyformat (laanwj)
- - #8291 `5cac8b1` util: CopyrightHolders: Check for untranslated substitution (MarcoFalke)
- - #8557 `44691f3` contrib: Rework verifybinaries (MarcoFalke)
- - #8621 `e8ed6eb` contrib: python: Don't use shell=True (MarcoFalke)
- - #8813 `fb24d7e` bitcoind: Daemonize using daemon(3) (laanwj)
- - #9004 `67728a3` Clarify `listenonion` (unsystemizer)
- - #8674 `bae81b8` tools for analyzing, updating and adding copyright headers in source files (isle2983)
- - #8976 `8c6218a` libconsensus: Add input validation of flags (laanwj)
- - #9112 `46027e8` Avoid ugly exception in log on unknown inv type (laanwj)
- - #8837 `2108911` Allow bitcoin-tx to parse partial transactions (jnewbery)
- - #9204 `74ced54` Clarify CreateTransaction error messages (instagibbs)
- - #9265 `31bcc66` bitcoin-cli: Make error message less confusing (laanwj)
- - #9303 `72bf1b3` Update comments in ctaes (sipa)
- - #9417 `c4b7d4f` Do not evaluate hidden LogPrint arguments (sipa)
- - #9506 `593a00c` RFC: Improve style for if indentation (sipa)
- - #8883 `d5d4ad8` Add all standard TXO types to bitcoin-tx (jnewbery)
- - #9531 `23281a4` Release notes for estimation changes  (morcos)
- - #9486 `f62bc10` Make peer=%d log prints consistent (TheBlueMatt)
- - #9552 `41cb05c` Add IPv6 support to qos.sh (jamesmacwhite)
- - #9542 `e9e7993` Docs: Update CONTRIBUTING.md (jnewbery)
- - #9649 `53ab12d` Remove unused clang format dev script (MarcoFalke)
- - #9625 `77bd8c4` Increase minimum debug.log size to 10MB after shrink (morcos)
- - #9070 `7b22e50` Lockedpool fixes (kazcw)
- - #8779 `7008e28` contrib: Delete spendfrom (MarcoFalke)
- - #9587,#8793,#9496,#8191,#8109,#8655,#8472,#8677,#8981,#9124  Avoid shadowing of variables (paveljanik)
- - #9063 `f2a6e82` Use deprecated `MAP_ANON` if `MAP_ANONYMOUS` is not defined (paveljanik)
- - #9060 `1107653` Fix bloom filter init to isEmpty = true (robmcl4)
- - #8613 `613bda4` LevelDB 1.19 (sipa)
- - #9225 `5488514` Fix some benign races (TheBlueMatt)
- - #8736 `5fa7b07` base58: Improve DecodeBase58 performance (wjx)
- - #9039 `e81df49` Various serialization simplifcations and optimizations (sipa)
- - #9010 `a143b88` Split up AppInit2 into multiple phases, daemonize after datadir lock errors (laanwj)
- - #9230 `c79e52a` Fix some benign races in timestamp logging (TheBlueMatt)
- - #9183,#9260 Mrs Peacock in The Library with The Candlestick (killed main.{h,cpp}) (TheBlueMatt)
- - #9236 `7f72568` Fix races for strMiscWarning and `fLargeWork*Found`, make QT runawayException use GetWarnings (gmaxwell)
- - #9243 `7aa7004` Clean up mapArgs and mapMultiArgs Usage (TheBlueMatt)
- - #9387 `cfe41d7` RAII of libevent stuff using unique ptrs with deleters (kallewoof)
- - #9472 `fac0f30` Disentangle progress estimation from checkpoints and update it (sipa)
- - #9512 `6012967` Fix various things -fsanitize complains about (sipa)
- - #9373,#9580 Various linearization script issues (droark)
- - #9674 `dd163f5` Lock debugging: Always enforce strict lock ordering (try or not) (TheBlueMatt)
- - #8453,#9334  Update to latest libsecp256k1 (laanwj,sipa)
- - #9656 `7c93952` Check verify-commits on pushes to master (TheBlueMatt)
- - #9679 `a351162` Access WorkQueue::running only within the cs lock (TheBlueMatt)
- - #9777 `8dee822` Handle unusual maxsigcachesize gracefully (jnewbery)
- - #8863,#8807 univalue: Pull subtree (MarcoFalke)
- - #9798 `e22c067` Fix Issue #9775 (Check returned value of fopen) (kirit93)
- - #9856 `69832aa` Terminate immediately when allocation fails (theuni)

Credits
=======

Thanks to everyone who directly contributed to this release:

- - accraze
- - adlawren
- - Alex Morcos
- - Alexey Vesnin
- - Amir Abrams
- - Anders ?yvind Urke-S?tre
- - Anditto Heristyo
- - Andrew Chow
- - anduck
- - Anthony Towns
- - Brian Deery
- - BtcDrak
- - Chris Moore
- - Chris Stewart
- - Christian Barcenas
- - Christian Decker
- - Cory Fields
- - crowning-
- - CryptAxe
- - CryptoVote
- - Dagur Valberg Johannsson
- - Daniel Cousens
- - Daniel Kraft
- - Derek Miller
- - djpnewton
- - Don Patterson
- - Doug
- - Douglas Roark
- - Ethan Heilman
- - fsb4000
- - Gaurav Rana
- - Geoffrey Tsui
- - Greg Walker
- - Gregory Maxwell
- - Gregory Sanders
- - Hampus Sj?berg
- - isle2983
- - Ivo van der Sangen
- - James White
- - Jameson Lopp
- - Jeremy Rubin
- - Jiaxing Wang
- - jnewbery
- - John Newbery
- - Johnson Lau
- - Jon Lund Steffensen
- - Jonas Schnelli
- - jonnynewbs
- - Jorge Tim?n
- - Justin Camarena
- - Karl-Johan Alm
- - Kaz Wesley
- - kirit93
- - Koki Takahashi
- - Lauda
- - leijurv
- - lizhi
- - Luke Dashjr
- - maiiz
- - MarcoFalke
- - Marijn Stollenga
- - Marty Jones
- - Masahiko Hyuga
- - Matt Corallo
- - Matthew King
- - matthias
- - Micha
- - Michael Ford
- - Michael Rotarius
- - Mitchell Cash
- - mrbandrews
- - mruddy
- - Nicolas DORIER
- - nomnombtc
- - Patrick Strateman
- - Pavel Jan?k
- - Pedro Branco
- - Peter Todd
- - Pieter Wuille
- - poole\_party
- - practicalswift
- - R E Broadley
- - randy-waterhouse
- - Richard Kiss
- - Robert McLaughlin
- - rodasmith
- - Russell Yanofsky
- - S. Matthew English
- - Sev
- - Spencer Lievens
- - Stanislas Marion
- - Steven
- - Suhas Daftuar
- - Thomas Snider
- - UdjinM6
- - unsystemizer
- - whythat
- - Will Binns
- - Wladimir J. van der Laan
- - wodry
- - Zak Wilcox

As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQEcBAEBCgAGBQJYv78GAAoJEHSBCwEjRsmm0NkH+wQhyIz9GZStFn4ddCF2ZIXO
xLDR9FP4/BJ2RC1jorpwiJHp+Q/qPu9NpczNW+NBcS4pOCneL8NNj+gb7Tkb4x8T
CXRr3AHcxH6KlrxCPJKvCbX+TmgcGIFTr1DdtqhmqCjdeg3CTiaIIseN2x7H40AC
3dMP1YieoFS+CQpYHLGD442h20TpE6129lNaLwsPNqBPe91EwvjRYp+AxnLQaxZ2
OZRwKMGCB9UH7bpgHPeZhh+lHd7mLtYN7Bbgi2AymCm4perer+apcsA3g5tQSUNi
2bSVeYv7KUk8bJHioyc3FuM+uB8F0LPygkWM40+a3Bv38BoIGkhjkQOApZJa+o8=
=xaiU
-----END PGP SIGNATURE-----

From erik at q32.com  Wed Mar  8 19:42:11 2017
From: erik at q32.com (Erik Aronesty)
Date: Wed, 8 Mar 2017 14:42:11 -0500
Subject: [bitcoin-dev] High consensus fork system for scaling without limits
Message-ID: <CAJowKgL5Vyy-an54gWtpbxZdgMsNdixgyXD92OBnMoWN1bw_fA@mail.gmail.com>

I woudl like to propose a BIP that works something like this:

1. Allow users to signal readiness by publishing an EB. This EB is an
absolute upper bound, and cannot be overridden by miners. Current EB is
1MB, the status-quo.   Maybe EB can be configured in a config file, not a
UI, since it's an "advanced" feature.

2. Miners can also signal readiness by publishing their own EB in a block.

3. If 95% of blocks within a one month signalling period contain an EB
greater than the previous consensus EB, a fork date is triggered at 6
months using the smallest 5th percentile EB published. (Other times can be
selected, but these are fairly conservative, looking for feedback here).
Miner signalling is ignored during the waiting period.

4. Block heights used for timing

5. After 6 months, any users which already have the new EB or greater begin
actually using it to validate transactions. Users use the EB or the latest
95% consensus triggered value - whichever is less.   This means that the
portion of users that originally signaled for the increase do not have to
upgrade their software to participate in the hard fork.

6. Core can (optionally) ship a version with a default EB in-line with
their own perceived consensus.

7. Some sort of versioning system is used to ensure that the two networks
(old and new) are incompatible... blocks hashed in one cannot be used in
the other.

Any users which don't already have the new EB or greater should update
their EB within the 6 month period - or they will be excluded from the
majority fork.

It would be in the best interests of major exchanges and users would to
publicly announce their EB's.

Users are free to safely set very high EB levels, based on their current
hardware and network speeds. These EB levels don't cause those users to
accept invalid blocks ever. They are safe because block size transitions
behave like normal hard forks with high miner consensus (95%).

No code changes will be needed to fork the network as many times as both
users and miners feel the need to do so.  (Bitcoin core is off the hook for
"scaling" issues...forever!)

If a smaller block size is needed, a reduced size can also be published and
agreed upon by *both* users and miners using a the same mechanism, but the
largest 5th percentile is used.   In other words... the requires broad
consensus to deviate from status quo and fork.

Any new node can simply follow these rules to validate all the blocks in a
chain... even if the sizes changes a lot (at most twice per year).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170308/9f44c3e6/attachment.html>

From dev at jonasschnelli.ch  Wed Mar  8 19:47:54 2017
From: dev at jonasschnelli.ch (Jonas Schnelli)
Date: Wed, 8 Mar 2017 20:47:54 +0100
Subject: [bitcoin-dev] Unique node identifiers
In-Reply-To: <D4B674DB-8F2E-4AA1-B271-FEE02A62A274@voskuil.org>
References: <BL2PR03MB435C5077E69D91D0A8092B6EE2A0@BL2PR03MB435.namprd03.prod.outlook.com>
	<CADJgMzvuii8Ww822v3DRa=-Azuqo4va6s32MsNSC-6M9=stm1Q@mail.gmail.com>
	<BL2PR03MB435029A0856DC7077D4AD68EE2D0@BL2PR03MB435.namprd03.prod.outlook.com>
	<D4B674DB-8F2E-4AA1-B271-FEE02A62A274@voskuil.org>
Message-ID: <30362205-D0CC-46D9-B924-EFA0A6EA1AC9@jonasschnelli.ch>


> 
>> 
>> > Nodes are by design not supposed to be identifiable in any way
> 
> This is of course my objection to BIP150 ("a way for peers to ... guarantee node ownership?).

Please Eric. Stop spreading FUD.
BIP150 has a fingerprint-free **OPTIONAL** authentication. It?s designed to not reveal any node identifier/identity without first get a crypto.-proof from other peer that he already knows your identity.
**Peers can?t be identified without having the identity-keys pre shared by the node operators.**

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170308/a20244e4/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170308/a20244e4/attachment.sig>

From dev at jonasschnelli.ch  Wed Mar  8 21:20:39 2017
From: dev at jonasschnelli.ch (Jonas Schnelli)
Date: Wed, 8 Mar 2017 22:20:39 +0100
Subject: [bitcoin-dev] Unique node identifiers
In-Reply-To: <beed7ade-13be-3a7f-9a4e-99f77378e780@voskuil.org>
References: <BL2PR03MB435C5077E69D91D0A8092B6EE2A0@BL2PR03MB435.namprd03.prod.outlook.com>
	<CADJgMzvuii8Ww822v3DRa=-Azuqo4va6s32MsNSC-6M9=stm1Q@mail.gmail.com>
	<BL2PR03MB435029A0856DC7077D4AD68EE2D0@BL2PR03MB435.namprd03.prod.outlook.com>
	<D4B674DB-8F2E-4AA1-B271-FEE02A62A274@voskuil.org>
	<30362205-D0CC-46D9-B924-EFA0A6EA1AC9@jonasschnelli.ch>
	<beed7ade-13be-3a7f-9a4e-99f77378e780@voskuil.org>
Message-ID: <31FB94D1-5B5B-43EF-AFD8-2A7508464F7C@jonasschnelli.ch>


> Am 08.03.2017 um 22:09 schrieb Eric Voskuil <eric at voskuil.org>:
> 
> On 03/08/2017 11:47 AM, Jonas Schnelli wrote:
>>>> Nodes are by design not supposed to be identifiable in any way
>>> 
>>> This is of course my objection to BIP150 ("a way for peers to ...
>>> guarantee node ownership?).
>> 
>> Please Eric. Stop spreading FUD.
> 
> I'm always willing to debate this issue. I'm generally a little
> suspicious of one who demands another person to stop arguing. I got at
> least one such demand (along with a threat) on this subject privately
> last summer from a notable Core dev. There is a lengthy thread on this
> subject in which I raised these issues. Everyone is free to review that
> discussion.

What you did say in the sentence above (and I think is FUD) is, that BIP150 will lead to every node being identifiable. This is just completely wrong.
There is nothing to say against a technical debate (and we had this), but I will ask you to stop if I see you attacking BIP150/151 at every occasion with FUDish arguments like this.

</jonas>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170308/c29e775d/attachment.sig>

From dev at jonasschnelli.ch  Wed Mar  8 21:31:01 2017
From: dev at jonasschnelli.ch (Jonas Schnelli)
Date: Wed, 8 Mar 2017 22:31:01 +0100
Subject: [bitcoin-dev] Unique node identifiers (and BIP150)
In-Reply-To: <18390846.ckRIaq9dAb@strawberry>
References: <BL2PR03MB435C5077E69D91D0A8092B6EE2A0@BL2PR03MB435.namprd03.prod.outlook.com>
	<D4B674DB-8F2E-4AA1-B271-FEE02A62A274@voskuil.org>
	<30362205-D0CC-46D9-B924-EFA0A6EA1AC9@jonasschnelli.ch>
	<18390846.ckRIaq9dAb@strawberry>
Message-ID: <FBFEE1B5-9243-45DA-A8F6-1449591DCAB6@jonasschnelli.ch>

Hi Tom

> Do you know the trick of having an open wifi basestation in a public street
> and how that can lead to tracking? Especially if you have a network of them.
> The trick is this; you set up an open wifi base station with a hidden ssid
> and phones try to connect to it by saying ?Are you ssid=xyz??
> This leads the basestation to know that the phone has known credentials with
> another wifi that has a specific ssid. (the trick is slightly more elaborate,
> but the basics are relevant here).
> 
> Your BIP is vulnarable to the same issue, as a node wants to connect using
> the AUTHCHALLENGE which has as an argument the hash of the person I?m trying
> to connect with.

This thread is not about BIP150/151.
The hash includes the encryption session which makes it impossible to distinct identities.

> 
> Your BIP says "Fingerprinting the requesting peer is not possible?.
> Unfortunately, this is wrong. Yes the peer is trivial to fingerprint. Your
> hash never changes and as you connect to a node anyone listening can see you
> sending the same hash on every connect to that peer, whereever you are or
> connect from.

Not true. The hash includes the encryption session which is based on a ephemeral ECDH/HKDF per connection-session.

Have you read the BIP?

</jonas>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170308/42405465/attachment.sig>

From achow101-lists at achow101.com  Wed Mar  8 21:21:15 2017
From: achow101-lists at achow101.com (Andrew Chow)
Date: Wed, 8 Mar 2017 16:21:15 -0500
Subject: [bitcoin-dev] High consensus fork system for scaling without
 limits
In-Reply-To: <CAJowKgL5Vyy-an54gWtpbxZdgMsNdixgyXD92OBnMoWN1bw_fA@mail.gmail.com>
References: <CAJowKgL5Vyy-an54gWtpbxZdgMsNdixgyXD92OBnMoWN1bw_fA@mail.gmail.com>
Message-ID: <4db320cc-a165-c6bd-798b-ea85ee7fc9de@achow101.com>

Hi Erik,

I have left you some comments below.

Some general questions:
How will you deal with excessive sighashing (i.e. massive transactions
that include a lot of signature verification)?
Presumably the sigops limit will increase proportionally?

On 3/8/2017 2:42 PM, Erik Aronesty via bitcoin-dev wrote:
> I woudl like to propose a BIP that works something like this:
>
> 1. Allow users to signal readiness by publishing an EB. This EB is an
> absolute upper bound, and cannot be overridden by miners. Current EB
> is 1MB, the status-quo.   Maybe EB can be configured in a config file,
> not a UI, since it's an "advanced" feature.
What does EB stand for?

What is the point of users publishing an EB? Is it for miners to
determine what to set theirs to? If so, what about sybil attacks with
fake nodes publishing EBs?

How do users publish an EB? Do they use a transaction? Or is it
something that goes into the User Agent?

How high can the EB go? What is its maximum?
> 2. Miners can also signal readiness by publishing their own EB in a block.
>
> 3. If 95% of blocks within a one month signalling period contain an EB
> greater than the previous consensus EB, a fork date is triggered at 6
> months using the smallest 5th percentile EB published. (Other times
> can be selected, but these are fairly conservative, looking for
> feedback here).    Miner signalling is ignored during the waiting period.
>
> 4. Block heights used for timing
>
> 5. After 6 months, any users which already have the new EB or greater
> begin actually using it to validate transactions. Users use the EB or
> the latest 95% consensus triggered value - whichever is less.   This
> means that the portion of users that originally signaled for the
> increase do not have to upgrade their software to participate in the
> hard fork.
So anyone who does not change their EB are forked off of the network? If
the EB is an "advanced feature", then most users are going to be leaving
it at the default shipped with the software. That means that they will
then be forked off of the network when they don't change the EB because
it is an "advanced feature" that is more difficult to access.
>
> 6. Core can (optionally) ship a version with a default EB in-line with
> their own perceived consensus.  
>
> 7. Some sort of versioning system is used to ensure that the two
> networks (old and new) are incompatible... blocks hashed in one cannot
> be used in the other.
I think this would require a soft fork beforehand in order to implement
such a system.
>
> Any users which don't already have the new EB or greater should update
> their EB within the 6 month period - or they will be excluded from the
> majority fork.
>
> It would be in the best interests of major exchanges and users would
> to publicly announce their EB's.
Why?
>
> Users are free to safely set very high EB levels, based on their
> current hardware and network speeds. These EB levels don't cause those
> users to accept invalid blocks ever. They are safe because block size
> transitions behave like normal hard forks with high miner consensus (95%).
>
> No code changes will be needed to fork the network as many times as
> both users and miners feel the need to do so.  (Bitcoin core is off
> the hook for "scaling" issues...forever!)
"Scaling" includes a lot more than just the block size. There is much
more to scaling than just increasing the block size.
>
> If a smaller block size is needed, a reduced size can also be
> published and agreed upon by *both* users and miners using a the same
> mechanism, but the largest 5th percentile is used.   In other words...
> the requires broad consensus to deviate from status quo and fork.
>
> Any new node can simply follow these rules to validate all the blocks
> in a chain... even if the sizes changes a lot (at most twice per year).
What if the EB of a new node is set to be smaller than the current block
size?
>
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170308/024c0a8e/attachment-0001.html>

From eric at voskuil.org  Wed Mar  8 21:09:05 2017
From: eric at voskuil.org (Eric Voskuil)
Date: Wed, 8 Mar 2017 13:09:05 -0800
Subject: [bitcoin-dev] Unique node identifiers
In-Reply-To: <30362205-D0CC-46D9-B924-EFA0A6EA1AC9@jonasschnelli.ch>
References: <BL2PR03MB435C5077E69D91D0A8092B6EE2A0@BL2PR03MB435.namprd03.prod.outlook.com>
	<CADJgMzvuii8Ww822v3DRa=-Azuqo4va6s32MsNSC-6M9=stm1Q@mail.gmail.com>
	<BL2PR03MB435029A0856DC7077D4AD68EE2D0@BL2PR03MB435.namprd03.prod.outlook.com>
	<D4B674DB-8F2E-4AA1-B271-FEE02A62A274@voskuil.org>
	<30362205-D0CC-46D9-B924-EFA0A6EA1AC9@jonasschnelli.ch>
Message-ID: <beed7ade-13be-3a7f-9a4e-99f77378e780@voskuil.org>

On 03/08/2017 11:47 AM, Jonas Schnelli wrote:
>>> Nodes are by design not supposed to be identifiable in any way
>>
>> This is of course my objection to BIP150 ("a way for peers to ...
>> guarantee node ownership?).
> 
> Please Eric. Stop spreading FUD.

I'm always willing to debate this issue. I'm generally a little
suspicious of one who demands another person to stop arguing. I got at
least one such demand (along with a threat) on this subject privately
last summer from a notable Core dev. There is a lengthy thread on this
subject in which I raised these issues. Everyone is free to review that
discussion.

> BIP150 has a fingerprint-free **OPTIONAL** authentication. It?s designed
> to not reveal any node identifier/identity without first get a
> crypto.-proof from other peer that he already knows your identity.
> **Peers can?t be identified without having the identity-keys pre shared
> by the node operators.**

The "presharing" of keys is how provable identity works, and is
precisely what this new proposal is also promoting. And in response to
that, the above statement was made by a Core dev (and not disputed):

>>> Nodes are by design not supposed to be identifiable in any way...

I'm calling out the obvious relationship between BIP150 and this new
proposal. Restating how identity works, or that its use is optional does
not refute my position. It's not FUD.

e

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170308/fbf8ef86/attachment.sig>

From tomz at freedommail.ch  Wed Mar  8 21:25:46 2017
From: tomz at freedommail.ch (Tom Zander)
Date: Wed, 08 Mar 2017 22:25:46 +0100
Subject: [bitcoin-dev] Unique node identifiers (and BIP150)
In-Reply-To: <30362205-D0CC-46D9-B924-EFA0A6EA1AC9@jonasschnelli.ch>
References: <BL2PR03MB435C5077E69D91D0A8092B6EE2A0@BL2PR03MB435.namprd03.prod.outlook.com>
	<D4B674DB-8F2E-4AA1-B271-FEE02A62A274@voskuil.org>
	<30362205-D0CC-46D9-B924-EFA0A6EA1AC9@jonasschnelli.ch>
Message-ID: <18390846.ckRIaq9dAb@strawberry>

On Wednesday, 8 March 2017 20:47:54 CET Jonas Schnelli via bitcoin-dev 
wrote:
> Please Eric. Stop spreading FUD.
> BIP150 has a fingerprint-free **OPTIONAL** authentication. It?s designed
> to not reveal any node identifier/identity without first get a
> crypto.-proof from other peer that he already knows your identity.
> **Peers can?t be identified without having the identity-keys pre shared
> by the node operators.**

Do you know the trick of having an open wifi basestation in a public street 
and how that can lead to tracking? Especially if you have a network of them.
The trick is this; you set up an open wifi base station with a hidden ssid 
and phones try to connect to it by saying ?Are you ssid=xyz??
This leads the basestation to know that the phone has known credentials with 
another wifi that has a specific ssid. (the trick is slightly more elaborate, 
but the basics are relevant here).

Your BIP is vulnarable to the same issue, as a node wants to connect using 
the AUTHCHALLENGE which has as an argument the hash of the person I?m trying 
to connect with.

Your BIP says "Fingerprinting the requesting peer is not possible?.
Unfortunately, this is wrong. Yes the peer is trivial to fingerprint. Your 
hash never changes and as you connect to a node anyone listening can see you 
sending the same hash on every connect to that peer, whereever you are or 
connect from.

Just like the wifi hack.

I think you want to use industry standards instead, and a good start may be 
https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange
-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From pieter.wuille at gmail.com  Wed Mar  8 23:12:01 2017
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 8 Mar 2017 15:12:01 -0800
Subject: [bitcoin-dev] Unique node identifiers
In-Reply-To: <31FB94D1-5B5B-43EF-AFD8-2A7508464F7C@jonasschnelli.ch>
References: <BL2PR03MB435C5077E69D91D0A8092B6EE2A0@BL2PR03MB435.namprd03.prod.outlook.com>
	<CADJgMzvuii8Ww822v3DRa=-Azuqo4va6s32MsNSC-6M9=stm1Q@mail.gmail.com>
	<BL2PR03MB435029A0856DC7077D4AD68EE2D0@BL2PR03MB435.namprd03.prod.outlook.com>
	<D4B674DB-8F2E-4AA1-B271-FEE02A62A274@voskuil.org>
	<30362205-D0CC-46D9-B924-EFA0A6EA1AC9@jonasschnelli.ch>
	<beed7ade-13be-3a7f-9a4e-99f77378e780@voskuil.org>
	<31FB94D1-5B5B-43EF-AFD8-2A7508464F7C@jonasschnelli.ch>
Message-ID: <CAPg+sBhKMWVRSka+iZvLn1B94eBgrzakw73pX40XHPMH647C7A@mail.gmail.com>

On Wed, Mar 8, 2017 at 1:20 PM, Jonas Schnelli via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> Am 08.03.2017 um 22:09 schrieb Eric Voskuil <eric at voskuil.org>:
>>
>> On 03/08/2017 11:47 AM, Jonas Schnelli wrote:
>>>>> Nodes are by design not supposed to be identifiable in any way
>>>>
>>>> This is of course my objection to BIP150 ("a way for peers to ...
>>>> guarantee node ownership?).

I believe this discussion is getting sidetracked.

There is a difference between identification/fingerprinting (who are
you?) and proving identity (prove that you are who I think you are?).

BIP150 only facilitates the second, not the first. I don't think you
disagree about that, but I want to make it clear for anyone else
following the discussion.

The question is whether it encourages people to establish known and
pre-shared identities for nodes. Perhaps, but not in any way that
IP/onion addresses don't already. Think about it:
* If you know an IP/onion address, you can verify whether some node
has it. If you know an IP/onion address + BIP150 PSK, you can verify
whether some node has it.
* If you know 2 IP/onion addresses, you cannot figure out whether they
correspond to the same node (and if you can, that is a bug, not by
design). If you know 2 (IP/onion addresses, BIP150 PSK) pairs, you
cannot figure out whether they correspond to the same node (and if you
can, that is a bug, not by design).
* If you receive a connection from a node, you cannot know what their
onion address is. If you receive a connection from a node, you cannot
figure out what their PSK is.

In that way, I see BIP150 as an extension of IP addresses, except more
secure against network-level attackers. If you believe the concept of
people establishing links along existing trust lines is a problem, you
should be arguing against features in Bitcoin software that allows
configuring preferred IP addresses to connect to as well (-addnode and
-connect in Bitcoin Core, for example).

Cheers,

-- 
Pieter

From eric at voskuil.org  Thu Mar  9 01:08:04 2017
From: eric at voskuil.org (Eric Voskuil)
Date: Wed, 8 Mar 2017 17:08:04 -0800
Subject: [bitcoin-dev] Unique node identifiers
In-Reply-To: <31FB94D1-5B5B-43EF-AFD8-2A7508464F7C@jonasschnelli.ch>
References: <BL2PR03MB435C5077E69D91D0A8092B6EE2A0@BL2PR03MB435.namprd03.prod.outlook.com>
	<CADJgMzvuii8Ww822v3DRa=-Azuqo4va6s32MsNSC-6M9=stm1Q@mail.gmail.com>
	<BL2PR03MB435029A0856DC7077D4AD68EE2D0@BL2PR03MB435.namprd03.prod.outlook.com>
	<D4B674DB-8F2E-4AA1-B271-FEE02A62A274@voskuil.org>
	<30362205-D0CC-46D9-B924-EFA0A6EA1AC9@jonasschnelli.ch>
	<beed7ade-13be-3a7f-9a4e-99f77378e780@voskuil.org>
	<31FB94D1-5B5B-43EF-AFD8-2A7508464F7C@jonasschnelli.ch>
Message-ID: <056457a2-7cae-e54d-1eab-681dcf4be002@voskuil.org>

On 03/08/2017 01:20 PM, Jonas Schnelli wrote:
>
>> Am 08.03.2017 um 22:09 schrieb Eric Voskuil <eric at voskuil.org>:
>>
>> On 03/08/2017 11:47 AM, Jonas Schnelli wrote:
>>>>> Nodes are by design not supposed to be identifiable in any way
>>>>
>>>> This is of course my objection to BIP150 ("a way for peers to ...
>>>> guarantee node ownership?).
>>>
>>> Please Eric. Stop spreading FUD.
>>
>> I'm always willing to debate this issue. I'm generally a little
>> suspicious of one who demands another person to stop arguing. I got at
>> least one such demand (along with a threat) on this subject privately
>> last summer from a notable Core dev. There is a lengthy thread on this
>> subject in which I raised these issues. Everyone is free to review that
>> discussion.

> What you did say in the sentence above (and I think is FUD) is, that
BIP150 will lead to every node being identifiable.

My argument against BIP150 (and 151) is based on the very real concern
that it provides a built-in mechanism to partition the network (while
also providing no meaningful privacy benefit).

> This is just completely wrong.

The only actual argument that I have seen from *anyone* to date is that
this is *unlikely* to happen. That was specifically Pieter's position
last summer. That argument is not technical but instead based on blind
trust in people.

The common refrain, which Pieter has penned again in a follow-up to this
post, is that we already have identity in terms of IP addresses, so
what's the harm. I find this argument ironic given that one of the
arguments in favor of this proposal is that IP address identification is
insufficient to establish identity. I assume that you both understand
there is a very meaningful distinction between strong identity and weak
identity.

The other argument that is often given is that, because we are talking
about privately shared as opposed to published identifiers, there is no
reason for concern. This entirely misses the point. The ability to
establish strong identity makes it trivial for someone to (strongly)
require the identity of anyone with who he/she allows a connection. This
is the *stated purpose* of BIP150. This turns the Bitcoin security model
on its head. Instead of validating content this validates people.

Given the current level of economic and hash power centralization it is
not at all hard to imagine that through fear/consequences of regulatory
controls or even poor scalability, that these points of centralization
will eventually start by establishing private connections, and
eventually require anyone connecting to them to "preshare" an identifier
(which of course identifies the person). At that point Bitcoin P2P will
have become a private network. I know you have the right motivation, but
I do not understand why you would ignore this risk in exchange for a
false sense of privacy.

There is a very clear path to this happening. So please explain to me
how this concern is "wrong". This is *not* a technical question, I know
perfectly well how the scheme works.

> There is nothing to say against a technical debate (and we had this),
but I will ask you to stop if I see you attacking BIP150/151 at every
occasion with FUDish arguments like this.

Take a step back and consider that there may in fact be serious
consequences to what you are proposing. Calling may arguments
"attacking" and "FUD" is unproductive.

e

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170308/a8cd537c/attachment.sig>

From pieter.wuille at gmail.com  Thu Mar  9 01:55:32 2017
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 8 Mar 2017 17:55:32 -0800
Subject: [bitcoin-dev] Unique node identifiers
In-Reply-To: <6a5a6a8f-d689-260a-76a9-a91f6bda56c5@voskuil.org>
References: <BL2PR03MB435C5077E69D91D0A8092B6EE2A0@BL2PR03MB435.namprd03.prod.outlook.com>
	<CADJgMzvuii8Ww822v3DRa=-Azuqo4va6s32MsNSC-6M9=stm1Q@mail.gmail.com>
	<BL2PR03MB435029A0856DC7077D4AD68EE2D0@BL2PR03MB435.namprd03.prod.outlook.com>
	<D4B674DB-8F2E-4AA1-B271-FEE02A62A274@voskuil.org>
	<30362205-D0CC-46D9-B924-EFA0A6EA1AC9@jonasschnelli.ch>
	<beed7ade-13be-3a7f-9a4e-99f77378e780@voskuil.org>
	<31FB94D1-5B5B-43EF-AFD8-2A7508464F7C@jonasschnelli.ch>
	<CAPg+sBhKMWVRSka+iZvLn1B94eBgrzakw73pX40XHPMH647C7A@mail.gmail.com>
	<6a5a6a8f-d689-260a-76a9-a91f6bda56c5@voskuil.org>
Message-ID: <CAPg+sBg-ihLOi4eq6mCti=bGtbe0sWYv3ScmWoEZ8d=dHDQ5Mw@mail.gmail.com>

On Wed, Mar 8, 2017 at 5:16 PM, Eric Voskuil <eric at voskuil.org> wrote:
> On 03/08/2017 03:12 PM, Pieter Wuille wrote:
>> In that way, I see BIP150 as an extension of IP addresses, except more
>> secure against network-level attackers. If you believe the concept of
>> people establishing links along existing trust lines is a problem, you
>> should be arguing against features in Bitcoin software that allows
>> configuring preferred IP addresses to connect to as well (-addnode and
>> -connect in Bitcoin Core, for example).
>
> Weak identity is insufficient to produce the problem scenario that is at
> the heart of my concern (excluding people). It is this "[same] except
> more secure" distinction that is the problem. You brush past that as if
> it did not exist.

So you're saying that a -onlyacceptconnectionsfrom=IP option wouldn't
be a concern to you because it can't exclude people? Of course it can
exclude people - just not your ISP or a state-level attacker.

Please, Eric. I think I understand your concern, but this argument
isn't constructive either.

The proposal here is to introduce visible node identities on the
network. I think that's misguided as node count is irrelevant and
trivial to fake anyway. But you bringing up BIP150 here isn't useful
either. I know that you equate the concept of having verifiable
identity keys in the P2P with a step towards making every node
identifiable, but they are not the same. It's just a cryptographic
tool to keep a certain class of attackers from bypassing restrictions
that people can already make.

-- 
Pieter

From vitteaymeric at gmail.com  Thu Mar  9 11:01:49 2017
From: vitteaymeric at gmail.com (Aymeric Vitte)
Date: Thu, 9 Mar 2017 12:01:49 +0100
Subject: [bitcoin-dev] Unique node identifiers
In-Reply-To: <CAPg+sBg-ihLOi4eq6mCti=bGtbe0sWYv3ScmWoEZ8d=dHDQ5Mw@mail.gmail.com>
References: <BL2PR03MB435C5077E69D91D0A8092B6EE2A0@BL2PR03MB435.namprd03.prod.outlook.com>
	<CADJgMzvuii8Ww822v3DRa=-Azuqo4va6s32MsNSC-6M9=stm1Q@mail.gmail.com>
	<BL2PR03MB435029A0856DC7077D4AD68EE2D0@BL2PR03MB435.namprd03.prod.outlook.com>
	<D4B674DB-8F2E-4AA1-B271-FEE02A62A274@voskuil.org>
	<30362205-D0CC-46D9-B924-EFA0A6EA1AC9@jonasschnelli.ch>
	<beed7ade-13be-3a7f-9a4e-99f77378e780@voskuil.org>
	<31FB94D1-5B5B-43EF-AFD8-2A7508464F7C@jonasschnelli.ch>
	<CAPg+sBhKMWVRSka+iZvLn1B94eBgrzakw73pX40XHPMH647C7A@mail.gmail.com>
	<6a5a6a8f-d689-260a-76a9-a91f6bda56c5@voskuil.org>
	<CAPg+sBg-ihLOi4eq6mCti=bGtbe0sWYv3ScmWoEZ8d=dHDQ5Mw@mail.gmail.com>
Message-ID: <06ccf31d-c895-4b7c-fc4b-89dad30f524e@gmail.com>

As stated in this thread and as I see it the use of BIP150 is optional, 
so if some parties want to trust each others and use it, then they can, 
if they don't like it and don't want to use it, then they don't use it

Unless I misread, some statements in this thread involving the Tor 
network are wrong, the Tor network is a centralized network, each node 
(except the bridges) have a long term identity key and have to prove  
periodically to the authority servers that they are the owners of this 
key, if not the other nodes will never extend circuits to them, then 
they will be of course quite difficult to reach

Unfortunately the original proposal starting this thread seems to be 
reinventing this system that probably can only lead to something 
centralized which cannot apply for the bitcoin network (the Tor network 
is centralized because the team want to control what is happening: 
sybils, bugs, attacks, blacklist etc)

Unless some peers/nodes have decided to trust each others (BIP150) I 
don't think it's a good idea at all that bitcoin nodes have anything 
similar to long term nodeIDs (see 
https://gist.github.com/Ayms/aab6f8e08fef0792ab3448f542a826bf , already 
posted, not final, not finished, and the title does not really reflect 
what would be the proposal today, but it carefully avoids any 
possibility for a full node to have a long term ID)


Le 09/03/2017 ? 02:55, Pieter Wuille via bitcoin-dev a ?crit :
> On Wed, Mar 8, 2017 at 5:16 PM, Eric Voskuil <eric at voskuil.org> wrote:
>> On 03/08/2017 03:12 PM, Pieter Wuille wrote:
>>> In that way, I see BIP150 as an extension of IP addresses, except more
>>> secure against network-level attackers. If you believe the concept of
>>> people establishing links along existing trust lines is a problem, you
>>> should be arguing against features in Bitcoin software that allows
>>> configuring preferred IP addresses to connect to as well (-addnode and
>>> -connect in Bitcoin Core, for example).
>> Weak identity is insufficient to produce the problem scenario that is at
>> the heart of my concern (excluding people). It is this "[same] except
>> more secure" distinction that is the problem. You brush past that as if
>> it did not exist.
> So you're saying that a -onlyacceptconnectionsfrom=IP option wouldn't
> be a concern to you because it can't exclude people? Of course it can
> exclude people - just not your ISP or a state-level attacker.
>
> Please, Eric. I think I understand your concern, but this argument
> isn't constructive either.
>
> The proposal here is to introduce visible node identities on the
> network. I think that's misguided as node count is irrelevant and
> trivial to fake anyway. But you bringing up BIP150 here isn't useful
> either. I know that you equate the concept of having verifiable
> identity keys in the P2P with a step towards making every node
> identifiable, but they are not the same. It's just a cryptographic
> tool to keep a certain class of attackers from bypassing restrictions
> that people can already make.
>

-- 
Peersm : http://www.peersm.com
node-Tor : https://www.github.com/Ayms/node-Tor
GitHub : https://www.github.com/Ayms


From erik at q32.com  Thu Mar  9 15:29:07 2017
From: erik at q32.com (Erik Aronesty)
Date: Thu, 9 Mar 2017 10:29:07 -0500
Subject: [bitcoin-dev] High consensus fork system for scaling without
	limits
In-Reply-To: <4db320cc-a165-c6bd-798b-ea85ee7fc9de@achow101.com>
References: <CAJowKgL5Vyy-an54gWtpbxZdgMsNdixgyXD92OBnMoWN1bw_fA@mail.gmail.com>
	<4db320cc-a165-c6bd-798b-ea85ee7fc9de@achow101.com>
Message-ID: <CAJowKgKnTLRAsXnXm9zK6BvMPasjpLLTHjZ5au-d-jJKed5UeQ@mail.gmail.com>

> 1. Allow users to signal readiness by publishing an EB. This EB is an
absolute upper bound, and cannot be overridden by miners. Current EB is
1MB, the status-quo.   Maybe EB can be configured in a config file, not a
UI, since it's an "advanced" feature.
>
> What does EB stand for?

Excessive block size.

> What is the point of users publishing an EB? Is it for miners to
determine what to set theirs to? If so, what about sybil attacks with fake
nodes publishing EBs?

You can't trivially fake coinbase's full node, or gemini's, etc.   Large
users would also be encouraged to report their EB's publically as well.

> How do users publish an EB? Do they use a transaction? Or is it something
that goes into the User Agent?

Same way a version string is published by a node.   Maybe *in* the version
string.

> How high can the EB go? What is its maximum?

Maybe 4MB for now?   Seems fine.   Trivial to change it later, since it's
not a fork to do so.

> 6. Core can (optionally) ship a version with a default EB in-line with
their own perceived consensus.

I would say that Core /should/ ship new versions with new default EB's
in-line with both miner and the economic majority after a 95% consensus
fork.

> 7. Some sort of versioning system is used to ensure that the two networks
(old and new) are incompatible... blocks hashed in one cannot be used in
the other.
>
> I think this would require a soft fork beforehand in order to implement
such a system.

I thought versionbits could handle this?   Can't they?  ALP pointed out
that it was important for a fork to be fully incompatible.

> It would be in the best interests of major exchanges and users would to
publicly announce their EB's.
>
> Why?

So miners can have a more reliable signal to go on.   No reasonable miner
would start mining signal for a fork unless they were confident that they
are doing so in-line with users and exchanges.

> "Scaling" includes a lot more than just the block size. There is much
more to scaling than just increasing the block size.

Yes, which is why I used air-quotes.   The primary idea is to remove a
political issue from affecting core developers.   There is a perception
among some people that "if only core would....".   Plus, fees are
*inherently* political because it is a barrier for low-net-worth
individuals transacting using this technology.   Even if lightning worked
perfectly, how can a small business in Africa afford to set up a full node
and being to participate as a hub if fees are $50?   OMG blame core.

Miners and users should be free to wrangle each other over fees any time
they want without the involvement of developers.   I suspect the status quo
would be even *more* stable in that scenario... not less.

> What if the EB of a new node is set to be smaller than the current block
size?

Then it is only used for signal unless a fork occurs that results in a
reduction <= EB... in which case the EB becomes a hard upper bound, just
like any other.   When an EB is set by a user a block-height needs to be
recorded along with it, so it can be handled correctly.   EB set to <
active seems to me to be a special case.   Likewise the percentile shoudl
be the upper 5% in the case of EB < active.

This essentially partitions signalling into "< active" and "> active".
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170309/d5b982bc/attachment.html>

From contashk18 at gmail.com  Sun Mar 12 09:51:12 2017
From: contashk18 at gmail.com (ashish khandekar)
Date: Sun, 12 Mar 2017 15:21:12 +0530
Subject: [bitcoin-dev] Solution for blockchain congestion and determination
 of block size by bitcoin network/protocol itself.
Message-ID: <CAFaEF9KJD7rVOALiaN6uNNzcL_u8V8uX2BLiNaTJUk98pqot=g@mail.gmail.com>

BLOCKCHAIN CONGESTION ? A SOLUTION AND PRE-EMPTIVE MEASURES FOR THE FUTURE



This document is an idea for helping the bitcoin block chain get
uncongested, provide enough space for transactions to get included in
blocks easily, and give the bitcoin network the power to defend itself
against any stress tests or spam attacks in the future.



The current maximum size of a block in the bitcoin protocol is 1mb.This has
created a ?fee market? allowing those who can send high transaction fees
only to use bitcoin easily, making those who use even a slight lower fee to
wait for transactions to get confirmed by miners, sometimes it take hours
but sometimes it can scale up to a few days, this creates a difficulty for
merchants who use bitcoin to operate with ease, new people who are adapting
to bitcoin, and those unaware of the developments in the bitcoin community
confused in why transactions aren?t getting confirmed as they used to.



Bitcoin is a highly versatile. From its price being directly influenced by
its demand and supply to the amount of work done to keep the network safe
a.k.a. mining. Over the years both have changed dramatically but one thing
which has stayed constant is the size of the block, which is 1mb. The limit
of 1mb creates only a finite number of transactions to get confirmed even
if used to the brim, leaving out other transactions and creating a backlog
of transaction to be carried forward indefinitely.



Bitcoin?s verification system, mining, has a dynamic difficulty calculation
rate, which means every 2016 blocks or 2 weeks the difficulty changes
making mining little bit easy or a bit difficult, but keeping the same
maximum output of 1mb per block, so this means every 2 weeks on 2016mb
worth of transactions can get verified assuming all blocks are filled to
the brim, any amount of excess transactions would not get verified due to
lack of space and would get carried over to the next cycle, over a period
of time this becomes a massive amount and has led to the current blockchain
congestion.



A unique solution is to let the bitcoin network change the maximum block
size as per the prevailing network conditions, this solution borrows some
aspects of both the demand and supply factor and dynamic change of network
difficulty (amount of work done to verify transactions).



This would be achieved by tracking the volume of the total size of
transactions done between 2 consecutive network difficulty changes and
dividing it by 2016, the number of blocks mined between 2 consecutive
network difficulty changes. The resulting answer would be rounded up to the
nearest kb and then compared to the previous block size, the higher between
the two would be taken as the new maximum block size. The extra space would
be helpful if a malicious attacker tries to create a lot of small dust
transactions and flood the network. Let us take a look at a  example of how
it would affect the bitcoin network in a real life scenario.



Dynamic block size calculation (B) = Total size of transactions from
previous network difficulty change(ST) / 2016

We compare this with the current block size and the higher is accepted as
new block size.



For example purposes the block numbers have been changed for easy
understanding.

If during cycle 1, block number 1 to block number 2016 the total size of
transactions is 1608mb,recalculating it with the dynamic block size
algorithm would give the following result:

Dynamic block size calculation (B) = ST/2016

1608/2016=0.79761905       which is 797kb

We compare this with the current block size which is 1mb (current block
size in real life) and the higher of the two becomes the block size for the
next cycle.

During cycle 2, block number 2017 to block number 4032 the total size of
transactions is 2260mb, recalculating it with the dynamic block size
algorithm would give the following result:

Dynamic block size calculation (B) = ST/2016

2260/2016=1.12103175       which is 1.2mb

We compare this with the current block size which is 1mb and the higher of
the two becomes the block size for the next cycle, in this case 1.2 mb
blocks would be new block size.



The above examples can be repeated indefinitely allowing the network to
adjust the block size automatically. The dynamic block size is to be
calculated at the same time as the network difficulty is changed.

To avoid orphaning of blocks and very small blocks a minimum block size
should also be taken into effect, the minimum size of the block should be
in the range of 30-60% of the maximum block size; this measure would also
stop the propagation of very small blocks which aren?t verifying
transactions and helping the network grow.



THE END

Any questions ?

Mail me at: contashk18 at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170312/8b5ab2cb/attachment.html>

From david.vorick at gmail.com  Sun Mar 12 14:44:20 2017
From: david.vorick at gmail.com (David Vorick)
Date: Sun, 12 Mar 2017 10:44:20 -0400
Subject: [bitcoin-dev] Solution for blockchain congestion and
 determination of block size by bitcoin network/protocol itself.
In-Reply-To: <CAFaEF9KJD7rVOALiaN6uNNzcL_u8V8uX2BLiNaTJUk98pqot=g@mail.gmail.com>
References: <CAFaEF9KJD7rVOALiaN6uNNzcL_u8V8uX2BLiNaTJUk98pqot=g@mail.gmail.com>
Message-ID: <CAFVRnyrzJV1fGJFnAkoHvVFvsdHGxk23SBhVwrmu=1KDvK5UUw@mail.gmail.com>

What, in your appraisal, is the purpose of the block size limit? I think we
will be more able to have a productive discussion around this proposal if
we clear that up first.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170312/cb015005/attachment.html>

From dionyziz at gmail.com  Sun Mar 12 14:52:29 2017
From: dionyziz at gmail.com (Dionysis Zindros)
Date: Sun, 12 Mar 2017 16:52:29 +0200
Subject: [bitcoin-dev] Solution for blockchain congestion and
 determination of block size by bitcoin network/protocol itself.
In-Reply-To: <CAFVRnyrzJV1fGJFnAkoHvVFvsdHGxk23SBhVwrmu=1KDvK5UUw@mail.gmail.com>
References: <CAFaEF9KJD7rVOALiaN6uNNzcL_u8V8uX2BLiNaTJUk98pqot=g@mail.gmail.com>
	<CAFVRnyrzJV1fGJFnAkoHvVFvsdHGxk23SBhVwrmu=1KDvK5UUw@mail.gmail.com>
Message-ID: <CAE-c3mf_yK0T946c-vmWdRcNkLUahTakjQW6XGM5nJH_4LOD7g@mail.gmail.com>

Are you aware of Washington Sanchez's BIP 107? It is a proposal
similar to yours:

https://github.com/bitcoin/bips/blob/master/bip-0107.mediawiki

On Sun, Mar 12, 2017 at 4:44 PM, David Vorick via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> What, in your appraisal, is the purpose of the block size limit? I think we
> will be more able to have a productive discussion around this proposal if we
> clear that up first.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

From shaolinfry at protonmail.ch  Sun Mar 12 15:47:28 2017
From: shaolinfry at protonmail.ch (shaolinfry)
Date: Sun, 12 Mar 2017 11:47:28 -0400
Subject: [bitcoin-dev] Moving towards user activated soft fork activation
In-Reply-To: <jo5-7HCZX7tgdMpIQgK85HCPP14FWxvOIbjV_oerIfc-HOP1GbK3SxFX82Ls23yU1L7y95QsFFggddMNdo5Sxy7YhTJhRFN1f8d6PaA8b7s=@protonmail.ch>
References: <jo5-7HCZX7tgdMpIQgK85HCPP14FWxvOIbjV_oerIfc-HOP1GbK3SxFX82Ls23yU1L7y95QsFFggddMNdo5Sxy7YhTJhRFN1f8d6PaA8b7s=@protonmail.ch>
Message-ID: <rpYqw5O9bfOKsEMD3y5e2PhTEgfyDV2OvYGiWhmgwXGp-xIb5SvYefpUNBBhWE4IX00k0e8Z-WTXW9TEdvSjqkgSAHp2dkebgyF99HlVpbA=@protonmail.ch>

Thank you all for the insightful feedback, on list, in private and on various social media platforms. I have extended the generalized proposal which extends BIP9. This basically introduces an extra workflow state if activationtime > starttime and < timeout - 1 month. It allows extra business logic to be added, such as requiring mandatory signalling.

Please find the draft here:

https://gist.github.com/shaolinfry/70d0582db7de958b7d5b6422cfef4e22

<pre> BIP: bip-uaversionbits-strong Title: Version bits extension with mandatory activation Author: Shaolin Fry <shaolinfry at protonmail.ch> Comments-Summary: No comments yet. Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???? Status: Draft Type: Informational Created: 2017-03-09 License: BSD-3-Clause CC0-1.0 </pre> ==Abstract== This document specifies an extension to BIP9 that introduces an additional activation parameter to deploy backward-compatible changes (further called "soft forks") to be activated by a deadline. ==Motivation== BIP9 introduced a mechanism for doing parallel soft forking deployments based on repurposing the block nVersion field. Activation is dependent on near unanimous hashrate signalling which may be impractical and is also subject to veto by a small minority of non-signalling hashrate. This specification provides an way for full nodes to coordinate syncronized activation based on a median past time using the BIP9 state machine. Hashrate may optionally trigger activation before the user defined activation sequence triggers. ==Specification== This specification adds a new per-chain deployment parameter to the existing BIP9 specification as follows: # The '''activationtime''' specifies a minimum median time past of a block at which the deployment should transition to the locked-in state. This specification adds a new workflow state, '''PRE_LOCK_IN''' to the BIP9 state machine if the deployment '''activationtime''' is greater than zero when the workflow will be '''DEFINED''' -> '''STARTED''' -> '''PRE_LOCK_IN''' -> '''LOCKED_IN''' -> '''ACTIVE'''. The '''PRE_LOCK_IN''' phase allows optional per deployment processing, e.g. mandatory signalling. ===Selection guidelines=== The following guidelines are suggested for selecting these parameters for a soft fork: # '''activationtime''' should be set to some date in the future and must be less than the BIP9 '''timeout'''. It is recommended to have an activation time of 1 year minus 30 days (28944000 seconds). The '''activationtime''' cannot be less than 30 days before the '''timeout'''. ===State transitions=== The state transition workflow is exactly the same as in BIP9 except when '''activationtime''' is greater than zero. Then the workflow will be '''DEFINED''' -> '''STARTED''' -> '''PRE_LOCK_IN''' -> '''LOCKED_IN''' -> '''ACTIVE'''. When in the STARTED state if the median time past is greater than or equal to the '''activationtime''' then the state will transition to PRE_LOCK_IN on the next retarget after '''activationtime'''. case STARTED: // Transition to THRESHOLD_PRE_LOCK_IN if mandatory activation is set if ((nActivationTime != 0) && pindexPrev->GetMedianTimePast() >= nActivationTime) { stateNext = THRESHOLD_PRE_LOCK_IN; break; } // BIP9 specification follows if (GetMedianTimePast(block.parent) >= timeout) { return FAILED; } int count = 0; walk = block; for (i = 0; i < 2016; i++) { walk = walk.parent; if (walk.nVersion & 0xE0000000 == 0x20000000 && (walk.nVersion >> bit) & 1 == 1) { count++; } } if (count >= threshold) { return LOCKED_IN; } return STARTED; === Reference implementation === https://github.com/bitcoin/bitcoin/compare/master...shaolinfry:bip-uaversionbits-strong ==== Optional mandatory signalling ==== <pre> /** * Return true if nVersion BIP9 deployment is signalling during * mandatory periods. */ bool IsMandatorySignalling(int32_t nVersion, Consensus::DeploymentPos pos, const CBlockIndex* pindexPrev, const Consensus::Params& params) { // Check the deployment is in the correct state for this check to apply. if (!((VersionBitsState(pindexPrev, params, pos, versionbitscache) == THRESHOLD_PRE_LOCK_IN) || (VersionBitsState(pindexPrev, params, pos, versionbitscache) == THRESHOLD_LOCKED_IN))) return true; // return signalling state return (((nVersion & VERSIONBITS_TOP_MASK) == VERSIONBITS_TOP_BITS) && (nVersion & VersionBitsMask(params, pos)) != 0); } // segwit signalling is mandatory during PRE_LOCK_IN and LOCKED_IN phase if (!IsMandatorySignalling(block.nVersion, Consensus::DEPLOYMENT_EXAMPLE, pindexPrev, consensusParams)) return state.Invalid(false, REJECT_OBSOLETE, strprintf("bad-version(0x%08x)", block.nVersion), strprintf("rejected nVersion=0x%08x block, must upgrade", block.nVersion)); </pre> ==Deployments== A living list of deployment proposals can be found [[bip-0009/assignments.mediawiki|here]]. ==Copyright== This document is placed in the public domain.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170312/74e04d77/attachment-0001.html>

From shaolinfry at protonmail.ch  Sun Mar 12 15:50:27 2017
From: shaolinfry at protonmail.ch (shaolinfry)
Date: Sun, 12 Mar 2017 11:50:27 -0400
Subject: [bitcoin-dev] Flag day activation of segwit
Message-ID: <OUzy7vvSKdJW7OCcCNCbaVDT-hJcf7Fy3fxEi_z6AmBC3VY0dGZpSBOGxRs-fVE-CfOVToCjjwB-meqejkb4VXYAGu0HHPTzNFhomEhgVpk=@protonmail.ch>

I recently posted about so called "user activated soft forks" and received a lot of feedback. Much of this was how such methodologies could be applied to segwit which appears to have fallen under the miner veto category I explained in my original proposal, where there is apparently a lot of support for the proposal from the economy, but a few mining pools are vetoing the activation.

It turns out Bitcoin already used flag day activation for P2SH[[1](https://github.com/bitcoin/bitcoin/blob/v0.6.0/src/main.cpp#L1281-L1283)], a soft fork which is remarkably similar to segwit. The disadvantage of a UASF for segwit is there is an existing deployment. A UASF would require another wide upgrade cycle (from what I can see, around 80% of existing nodes have upgraded from pre-witness, to NODE_WITNESS capability[[2](http://luke.dashjr.org/programs/bitcoin/files/charts/services.html)][[3](https://www.reddit.com/r/Bitcoin/comments/5yyqt1/evidence_of_widespread_segwit_support_near50_of/)]. While absolute node count is meaningless, the uprgrade trend from version to version seems significant.

Also it is quite clear a substantial portion of the ecosystem industry has put in time and resources into segwit adoption, in the form of upgrading wallet code, updating libraries and various other integration work that requires significant time and money. Further more, others have built systems that rely on segwit, having put significant engineering resources into developing systems that require segwit - such as several lightning network system. This is much more significant social proof than running a node.

The delayed activation of segwit is also holding back a raft protocol of innovations such as MAST, Covenants, Schnorr signature schemes and signature aggregation and other script innovations of which, much of the development work is already done.

A better option would be to release code that causes the existing segwit deployment to activate without requiring a completely new deployment nor subject to hash power veto. This could be achieved if the economic majority agree to run code that rejects non-signalling segwit blocks. Then from the perspective of all existing witness nodes, miners trigger the BIP9 activation. Such a rule could come into effect 4-6 weeks before the BIP9 timeout. If a large part of the economic majority publicly say that they will adopt this new client, miners will have to signal bip9 segwit activation in order for their blocks to be valid.

I have drafted a BIP proposal so the community may discuss https://gist.github.com/shaolinfry/743157b0b1ee14e1ddc95031f1057e4c (full text below).

References:
[1]: https://github.com/bitcoin/bitcoin/blob/v0.6.0/src/main.cpp#L1281-L1283
[2]: http://luke.dashjr.org/programs/bitcoin/files/charts/services.html
[3]: https://www.reddit.com/r/Bitcoin/comments/5yyqt1/evidence_of_widespread_segwit_support_near50_of/

Proposal text:

<pre> BIP: bip-segwit-flagday Title: Flag day activation for segwit deployment Author: Shaolin Fry <shaolinfry at protonmail.ch> Comments-Summary: No comments yet. Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???? Status: Draft Type: Informational Created: 2017-03-12 License: BSD-3-Clause CC0-1.0 </pre> ==Abstract== This document specifies a BIP16 like soft fork flag day activation of the segregated witness BIP9 deployment known as "segwit". ==Definitions== "existing segwit deployment" refer to the BIP9 "segwit" deployment using bit 1, between November 15th 2016 and November 15th 2017 to activate BIP141, BIP143 and BIP147. ==Motivation== Cause the mandatory activation of the existing segwit deployment before the end of midnight November 15th 2017. ==Specification== All times are specified according to median past time. This BIP will be activate between midnight October 1st 2017 (epoch time 1538352000) and midnight November 15th 2017 (epoch time 1510704000) if the existing segwit deployment is not activated before epoch time 1538352000. This BIP will cease to be active when the existing segwit deployment activates. While this BIP is active, all blocks must set the nVersion header top 3 bits to 001 together with bit field (1<<1) (according to the existing segwit deployment). Blocks that do not signal as required will be rejected. === Reference implementation === <pre> // mandatory segwit activation between Oct 1st 2017 and Nov 15th 2017 inclusive if (pindex->GetMedianTimePast() >= 1538352000 && pindex->GetMedianTimePast() <= 1510704000 && !IsWitnessEnabled(pindex->pprev, chainparams.GetConsensus())) { if (!((pindex->nVersion & VERSIONBITS_TOP_MASK) == VERSIONBITS_TOP_BITS) && (pindex->nVersion & VersionBitsMask(params, Consensus::DEPLOYMENT_SEGWIT)) != 0) { return state.DoS(2, error("ConnectBlock(): relayed block must signal for segwit, please upgrade"), REJECT_INVALID, "bad-no-segwit"); } } </pre> ==Backwards Compatibility== This deployment is compatible with the existing "segwit" bit 1 deployment scheduled between midnight November 15th, 2016 and midnight November 15th, 2017. ==Rationale== Historically, the P2SH soft fork (BIP16) was activated using a predetermined flag day where nodes began enforcing the new rules. P2SH was successfully activated with relatively few issues By orphaning non-signalling blocks during the last month of the BIP9 bit 1 "segwit" deployment, this BIP can cause the existing "segwit" deployment to activate without needing to release a new deployment. ==References== [https://github.com/bitcoin/bitcoin/blob/v0.6.0/src/main.cpp#L1281-L1283 P2SH flag day activation]. ==Copyright== This document is placed in the public domain.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170312/6e8cc65a/attachment-0001.html>

From david.vorick at gmail.com  Sun Mar 12 17:20:15 2017
From: david.vorick at gmail.com (David Vorick)
Date: Sun, 12 Mar 2017 13:20:15 -0400
Subject: [bitcoin-dev] Flag day activation of segwit
In-Reply-To: <OUzy7vvSKdJW7OCcCNCbaVDT-hJcf7Fy3fxEi_z6AmBC3VY0dGZpSBOGxRs-fVE-CfOVToCjjwB-meqejkb4VXYAGu0HHPTzNFhomEhgVpk=@protonmail.ch>
References: <OUzy7vvSKdJW7OCcCNCbaVDT-hJcf7Fy3fxEi_z6AmBC3VY0dGZpSBOGxRs-fVE-CfOVToCjjwB-meqejkb4VXYAGu0HHPTzNFhomEhgVpk=@protonmail.ch>
Message-ID: <CAFVRnyqkJa1a9v-iC2GTyo+Qp5izwEVtUOHe6UENgfA0Fv0gfw@mail.gmail.com>

It has taken almost 6 months for SegWit adoption to get to where it is
today. I don't think it will take that long to reach similar adoption for
UASF SegWit, but conservatively we want to give it at least that much time.

It's really important to stress here that a UASF will split and become the
minority chain if a majority of the transaction accepting nodes on the
network do not agree to strictly follow the UASF and outright reject blocks
that do not signal for SegWit at the designated date.

Before setting a flag day, I think we should get written cooperation
agreements from the largest economic players in Bitcoin. This would include:

Bitfinex
Bitflyer
BitGo
BitPay
Bitstamp
Blockchain.info
Blockcypher
Coinbase
Huobi
Kraken
Gemeni
OkCoin
Poloniex

(feel free to discuss this list)

100% cooperation is not necessary, but close to 100% cooperation is
strongly desired. It should be noted that their cooperation is only
required because they are sufficiently powerful to threaten the success of
a UASF, particularly because many of these entities hold users bitcoins.

Once a convincing majority is on-board, I suggest we release a UASF patch
that activates a full year after release. This is because a UASF is a big
gamble that requires a large majority of the economy has upgraded.

Though that is a very long time, SegWit can always be activated early with
miner cooperation.

------

As an extra note, if the UASF triggers with majority economy support and
the miners resist, a minority block reward chain may be the longest chain
for a while. However, when the majority block reward chain does catch up,
the minority reward chain will be entirely obliterated, eliminating all
block rewards, all transaction history, and making a ton of money vanish
all at once.

This makes it very dangerous for an exchange, payment processor, online
wallet, or miner to oppose the UASF if there is significant momentum behind
it. This gives the UASF a powerful snowball effect once a few major parties
(or the majority of tiny full nodes) have decided to commit to the UASF.

On the other hand, failure means a permanent coin split, so it is still
necessary to exercise caution that exceeds the caution of a normal soft
fork.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170312/f12ebb1f/attachment.html>

From bram at bittorrent.com  Sun Mar 12 18:00:10 2017
From: bram at bittorrent.com (Bram Cohen)
Date: Sun, 12 Mar 2017 11:00:10 -0700
Subject: [bitcoin-dev] Solution for blockchain congestion and
 determination of block size by bitcoin network/protocol itself.
In-Reply-To: <CAFaEF9KJD7rVOALiaN6uNNzcL_u8V8uX2BLiNaTJUk98pqot=g@mail.gmail.com>
References: <CAFaEF9KJD7rVOALiaN6uNNzcL_u8V8uX2BLiNaTJUk98pqot=g@mail.gmail.com>
Message-ID: <CA+KqGkq6K060cXfYqCekb9g2HNEeFDGL+_R2TfMF8crUHyBJSA@mail.gmail.com>

Shouldn't there be a FAQ about this? All the blocksize increase proposals
going back to the Bitcoin Classic have the same problems and having
repeated proposals which move the details around a bit doesn't add anything
to the discussion.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170312/1882d23d/attachment.html>

From shaolinfry at protonmail.ch  Sun Mar 12 21:04:11 2017
From: shaolinfry at protonmail.ch (shaolinfry)
Date: Sun, 12 Mar 2017 17:04:11 -0400
Subject: [bitcoin-dev] Flag day activation of segwit
In-Reply-To: <CAFVRnyqkJa1a9v-iC2GTyo+Qp5izwEVtUOHe6UENgfA0Fv0gfw@mail.gmail.com>
References: <OUzy7vvSKdJW7OCcCNCbaVDT-hJcf7Fy3fxEi_z6AmBC3VY0dGZpSBOGxRs-fVE-CfOVToCjjwB-meqejkb4VXYAGu0HHPTzNFhomEhgVpk=@protonmail.ch>
	<CAFVRnyqkJa1a9v-iC2GTyo+Qp5izwEVtUOHe6UENgfA0Fv0gfw@mail.gmail.com>
Message-ID: <5Rk8BbFuXS3TJ_fFvB8AmCLj41UZYEUz4CwxSJGc_sn52KwX20ri6MOEqq4sp7PImiaFdiFtWRGgUEHtoGuKEi3RIWI7j-wTXm0-ztTeH0k=@protonmail.ch>

Before setting a flag day, I think we should get written cooperation agreements from the largest economic players in Bitcoin. This would include:

There isn't a flag day to set. If the major economic organs like exchanges run the BIP, non-signalling miners simply wont get paid (starting October 1st) and their blocks will be rejected. Miners will have the choice to signal, or find something else profitable to mine. In turn, this will trigger the existing segwit deployment for everyone who has already upgraded to segwit compatible node software (currently Bitcoin Core 0.13.1, 0.13.2, 0.14.0, Bitcoin Knots 0.13.1+, and bcoin) regardless of whether they run this BIP or not.

But yes, it goes without saying that this BIP would need to have buy-in from major economic organs, especially fiat egress points, before being deployed. Failing that, a second deployment of segwit with a flag day, or preferably using the bip-uaversionbits-strong BIP9/flagday hybrid would be required.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170312/26c0106f/attachment.html>

From luke at dashjr.org  Mon Mar 13 03:01:40 2017
From: luke at dashjr.org (Luke Dashjr)
Date: Mon, 13 Mar 2017 03:01:40 +0000
Subject: [bitcoin-dev] Flag day activation of segwit
In-Reply-To: <OUzy7vvSKdJW7OCcCNCbaVDT-hJcf7Fy3fxEi_z6AmBC3VY0dGZpSBOGxRs-fVE-CfOVToCjjwB-meqejkb4VXYAGu0HHPTzNFhomEhgVpk=@protonmail.ch>
References: <OUzy7vvSKdJW7OCcCNCbaVDT-hJcf7Fy3fxEi_z6AmBC3VY0dGZpSBOGxRs-fVE-CfOVToCjjwB-meqejkb4VXYAGu0HHPTzNFhomEhgVpk=@protonmail.ch>
Message-ID: <201703130301.41315.luke@dashjr.org>

On Sunday, March 12, 2017 3:50:27 PM shaolinfry via bitcoin-dev wrote:
> // mandatory segwit activation between Oct 1st 2017 and Nov 15th 2017
> inclusive if (pindex->GetMedianTimePast() >= 1538352000 &&
> pindex->GetMedianTimePast() <= 1510704000 &&
> !IsWitnessEnabled(pindex->pprev, chainparams.GetConsensus())) {
>     if (!((pindex->nVersion & VERSIONBITS_TOP_MASK) ==
>     VERSIONBITS_TOP_BITS) && (pindex->nVersion & VersionBitsMask(params,
>     Consensus::DEPLOYMENT_SEGWIT)) != 0) {
>         return state.DoS(2, error("ConnectBlock(): relayed block must
>         signal for segwit, please upgrade"), REJECT_INVALID,
>         "bad-no-segwit");
>     }
> }

I don't think this is actually BIP 9 compatible. Once activated, the bit loses 
its meaning and should not be set. So you need to check that it hasn't locked-
in already...

Also, IMO this should tolerate as many as 5% minus one non-signalling blocks.

Disclaimer: This are technical suggestions, and do not imply endorsement of 
the idea.

Luke

From nickodell at gmail.com  Mon Mar 13 04:59:10 2017
From: nickodell at gmail.com (Nick ODell)
Date: Sun, 12 Mar 2017 22:59:10 -0600
Subject: [bitcoin-dev] Flag day activation of segwit
In-Reply-To: <OUzy7vvSKdJW7OCcCNCbaVDT-hJcf7Fy3fxEi_z6AmBC3VY0dGZpSBOGxRs-fVE-CfOVToCjjwB-meqejkb4VXYAGu0HHPTzNFhomEhgVpk=@protonmail.ch>
References: <OUzy7vvSKdJW7OCcCNCbaVDT-hJcf7Fy3fxEi_z6AmBC3VY0dGZpSBOGxRs-fVE-CfOVToCjjwB-meqejkb4VXYAGu0HHPTzNFhomEhgVpk=@protonmail.ch>
Message-ID: <CANN4kmc1R8t66Gja_fNKMHTRpo41Rpt7V+OeAW8dLBOtFdAzQw@mail.gmail.com>

The problem with modifying Bitcoin to work around community norms is that
it's a two-way street. Other people can do it too.

Let me propose a counter-fork, or a "Double UASF." This is also a BIP9
fork, and it uses, say, bit 2. starttime is 1489449600, and the end time is
1506812400. It enforces every rule that UASF enforces, plus one additional
rule. If 60% of blocks in any retargeting period signal for Double UASF,
any descendant block that creates or spends a segregated witness output is
invalid.

Double UASF signaling never coincides with UASF signaling, because the
signaling periods don't overlap. Full nodes happily validate the chain,
because Double UASF doesn't break any rules; it just adds new ones. Miners
who adopt Double UASF don't need to understand segwit, because all segwit
transactions are banned. Miners don't need to commit to a wtxid structure,
either. Per BIP 141, "If all transactions in a block do not have witness
data, the commitment is optional." Segwit is activated, but useless. Miners
who *do* adopt segwit will lose money, as their blocks are orphaned.

Thanks,
--Nick

On Sun, Mar 12, 2017 at 9:50 AM, shaolinfry via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> I recently posted about so called "user activated soft forks" and received
> a lot of feedback. Much of this was how such methodologies could be applied
> to segwit which appears to have fallen under the miner veto category I
> explained in my original proposal, where there is apparently a lot of
> support for the proposal from the economy, but a few mining pools are
> vetoing the activation.
>
> It turns out Bitcoin already used flag day activation for P2SH[1
> <https://github.com/bitcoin/bitcoin/blob/v0.6.0/src/main.cpp#L1281-L1283>],
> a soft fork which is remarkably similar to segwit. The disadvantage of a
> UASF for segwit is there is an existing deployment. A UASF would require
> another wide upgrade cycle (from what I can see, around 80% of existing
> nodes have upgraded from pre-witness, to NODE_WITNESS capability[2
> <http://luke.dashjr.org/programs/bitcoin/files/charts/services.html>][3
> <https://www.reddit.com/r/Bitcoin/comments/5yyqt1/evidence_of_widespread_segwit_support_near50_of/>].
> While absolute node count is meaningless, the uprgrade trend from version
> to version seems significant.
>
> Also it is quite clear a substantial portion of the ecosystem industry has
> put in time and resources into segwit adoption, in the form of upgrading
> wallet code, updating libraries and various other integration work that
> requires significant time and money. Further more, others have built
> systems that rely on segwit, having put significant engineering resources
> into developing systems that require segwit - such as several lightning
> network system. This is much more significant social proof than running a
> node.
>
> The delayed activation of segwit is also holding back a raft protocol of
> innovations such as MAST, Covenants, Schnorr signature schemes and
> signature aggregation and other script innovations of which, much of the
> development work is already done.
>
> A better option would be to release code that causes the existing segwit
> deployment to activate without requiring a completely new deployment nor
> subject to hash power veto. This could be achieved if the economic majority
> agree to run code that rejects non-signalling segwit blocks. Then from the
> perspective of all existing witness nodes, miners trigger the BIP9
> activation. Such a rule could come into effect 4-6 weeks before the BIP9
> timeout. If a large part of the economic majority publicly say that they
> will adopt this new client, miners will have to signal bip9 segwit
> activation in order for their blocks to be valid.
>
> I have drafted a BIP proposal so the community may discuss
> https://gist.github.com/shaolinfry/743157b0b1ee14e1ddc95031f1057e4c (full
> text below).
>
> References:
> [1]: https://github.com/bitcoin/bitcoin/blob/v0.6.0/
> src/main.cpp#L1281-L1283
> [2]: http://luke.dashjr.org/programs/bitcoin/files/charts/services.html
> [3]: https://www.reddit.com/r/Bitcoin/comments/5yyqt1/
> evidence_of_widespread_segwit_support_near50_of/
>
> Proposal text:
>
> <pre>
>   BIP: bip-segwit-flagday
>   Title: Flag day activation for segwit deployment
>   Author: Shaolin Fry <shaolinfry at protonmail.ch>
>   Comments-Summary: No comments yet.
>   Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????
>   Status: Draft
>   Type: Informational
>   Created: 2017-03-12
>   License: BSD-3-Clause
>            CC0-1.0
> </pre>
>
> ==Abstract==
>
> This document specifies a BIP16 like soft fork flag day activation of the segregated witness BIP9 deployment known as "segwit".
>
> ==Definitions==
>
> "existing segwit deployment" refer to the BIP9 "segwit" deployment using bit 1, between November 15th 2016 and November 15th 2017 to activate BIP141, BIP143 and BIP147.
>
> ==Motivation==
>
> Cause the mandatory activation of the existing segwit deployment before the end of midnight November 15th 2017.
>
> ==Specification==
>
> All times are specified according to median past time.
>
> This BIP will be activate between midnight October 1st 2017 (epoch time 1538352000) and midnight November 15th 2017 (epoch time 1510704000) if the existing segwit deployment is not activated before epoch time 1538352000. This BIP will cease to be active when the existing segwit deployment activates.
>
> While this BIP is active, all blocks must set the nVersion header top 3 bits to 001 together with bit field (1<<1) (according to the existing segwit deployment). Blocks that do not signal as required will be rejected.
>
> === Reference implementation ===
>
> <pre>
> // mandatory segwit activation between Oct 1st 2017 and Nov 15th 2017 inclusive
> if (pindex->GetMedianTimePast() >= 1538352000 && pindex->GetMedianTimePast() <= 1510704000 && !IsWitnessEnabled(pindex->pprev, chainparams.GetConsensus())) {
>     if (!((pindex->nVersion & VERSIONBITS_TOP_MASK) == VERSIONBITS_TOP_BITS) && (pindex->nVersion & VersionBitsMask(params, Consensus::DEPLOYMENT_SEGWIT)) != 0) {
>         return state.DoS(2, error("ConnectBlock(): relayed block must signal for segwit, please upgrade"), REJECT_INVALID, "bad-no-segwit");
>     }
> }
> </pre>
>
> ==Backwards Compatibility==
>
> This deployment is compatible with the existing "segwit" bit 1 deployment scheduled between midnight November 15th, 2016 and midnight November 15th, 2017.
>
> ==Rationale==
>
> Historically, the P2SH soft fork (BIP16) was activated using a predetermined flag day where nodes began enforcing the new rules. P2SH was successfully activated with relatively few issues
>
> By orphaning non-signalling blocks during the last month of the BIP9 bit 1 "segwit" deployment, this BIP can cause the existing "segwit" deployment to activate without needing to release a new deployment.
>
> ==References==
>
> [https://github.com/bitcoin/bitcoin/blob/v0.6.0/src/main.cpp#L1281-L1283 P2SH flag day activation].
>
> ==Copyright==
>
> This document is placed in the public domain.
>
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170312/0838954e/attachment-0001.html>

From david.vorick at gmail.com  Mon Mar 13 10:35:38 2017
From: david.vorick at gmail.com (David Vorick)
Date: Mon, 13 Mar 2017 06:35:38 -0400
Subject: [bitcoin-dev] Flag day activation of segwit
In-Reply-To: <CANN4kmc1R8t66Gja_fNKMHTRpo41Rpt7V+OeAW8dLBOtFdAzQw@mail.gmail.com>
References: <OUzy7vvSKdJW7OCcCNCbaVDT-hJcf7Fy3fxEi_z6AmBC3VY0dGZpSBOGxRs-fVE-CfOVToCjjwB-meqejkb4VXYAGu0HHPTzNFhomEhgVpk=@protonmail.ch>
	<CANN4kmc1R8t66Gja_fNKMHTRpo41Rpt7V+OeAW8dLBOtFdAzQw@mail.gmail.com>
Message-ID: <CAFVRnyqAtNLqd=a53yQovjFBzY6YXmc6jpXNYYUKouzdSksBBQ@mail.gmail.com>

That's simply a 51% attack choosing to censor transactions. We could do
that today, ban all transactions that aren't approved by the PBoC.

You respond to that with a PoW hardfork, or by finding some way to prop up
/ subsidize non-censorship miners.

On Mar 13, 2017 5:59 AM, "Nick ODell via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> The problem with modifying Bitcoin to work around community norms is that
> it's a two-way street. Other people can do it too.
>
> Let me propose a counter-fork, or a "Double UASF." This is also a BIP9
> fork, and it uses, say, bit 2. starttime is 1489449600, and the end time is
> 1506812400. It enforces every rule that UASF enforces, plus one additional
> rule. If 60% of blocks in any retargeting period signal for Double UASF,
> any descendant block that creates or spends a segregated witness output is
> invalid.
>
> Double UASF signaling never coincides with UASF signaling, because the
> signaling periods don't overlap. Full nodes happily validate the chain,
> because Double UASF doesn't break any rules; it just adds new ones. Miners
> who adopt Double UASF don't need to understand segwit, because all segwit
> transactions are banned. Miners don't need to commit to a wtxid structure,
> either. Per BIP 141, "If all transactions in a block do not have witness
> data, the commitment is optional." Segwit is activated, but useless. Miners
> who *do* adopt segwit will lose money, as their blocks are orphaned.
>
> Thanks,
> --Nick
>
> On Sun, Mar 12, 2017 at 9:50 AM, shaolinfry via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> I recently posted about so called "user activated soft forks" and
>> received a lot of feedback. Much of this was how such methodologies could
>> be applied to segwit which appears to have fallen under the miner veto
>> category I explained in my original proposal, where there is apparently a
>> lot of support for the proposal from the economy, but a few mining pools
>> are vetoing the activation.
>>
>> It turns out Bitcoin already used flag day activation for P2SH[1
>> <https://github.com/bitcoin/bitcoin/blob/v0.6.0/src/main.cpp#L1281-L1283>],
>> a soft fork which is remarkably similar to segwit. The disadvantage of a
>> UASF for segwit is there is an existing deployment. A UASF would require
>> another wide upgrade cycle (from what I can see, around 80% of existing
>> nodes have upgraded from pre-witness, to NODE_WITNESS capability[2
>> <http://luke.dashjr.org/programs/bitcoin/files/charts/services.html>][3
>> <https://www.reddit.com/r/Bitcoin/comments/5yyqt1/evidence_of_widespread_segwit_support_near50_of/>].
>> While absolute node count is meaningless, the uprgrade trend from version
>> to version seems significant.
>>
>> Also it is quite clear a substantial portion of the ecosystem industry
>> has put in time and resources into segwit adoption, in the form of
>> upgrading wallet code, updating libraries and various other integration
>> work that requires significant time and money. Further more, others have
>> built systems that rely on segwit, having put significant engineering
>> resources into developing systems that require segwit - such as several
>> lightning network system. This is much more significant social proof than
>> running a node.
>>
>> The delayed activation of segwit is also holding back a raft protocol of
>> innovations such as MAST, Covenants, Schnorr signature schemes and
>> signature aggregation and other script innovations of which, much of the
>> development work is already done.
>>
>> A better option would be to release code that causes the existing segwit
>> deployment to activate without requiring a completely new deployment nor
>> subject to hash power veto. This could be achieved if the economic majority
>> agree to run code that rejects non-signalling segwit blocks. Then from the
>> perspective of all existing witness nodes, miners trigger the BIP9
>> activation. Such a rule could come into effect 4-6 weeks before the BIP9
>> timeout. If a large part of the economic majority publicly say that they
>> will adopt this new client, miners will have to signal bip9 segwit
>> activation in order for their blocks to be valid.
>>
>> I have drafted a BIP proposal so the community may discuss
>> https://gist.github.com/shaolinfry/743157b0b1ee14e1ddc95031f1057e4c (full
>> text below).
>>
>> References:
>> [1]: https://github.com/bitcoin/bitcoin/blob/v0.6.0/src/
>> main.cpp#L1281-L1283
>> [2]: http://luke.dashjr.org/programs/bitcoin/files/charts/services.html
>> [3]: https://www.reddit.com/r/Bitcoin/comments/5yyqt1/eviden
>> ce_of_widespread_segwit_support_near50_of/
>>
>> Proposal text:
>>
>> <pre>
>>   BIP: bip-segwit-flagday
>>   Title: Flag day activation for segwit deployment
>>   Author: Shaolin Fry <shaolinfry at protonmail.ch>
>>   Comments-Summary: No comments yet.
>>   Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????
>>   Status: Draft
>>   Type: Informational
>>   Created: 2017-03-12
>>   License: BSD-3-Clause
>>            CC0-1.0
>> </pre>
>>
>> ==Abstract==
>>
>> This document specifies a BIP16 like soft fork flag day activation of the segregated witness BIP9 deployment known as "segwit".
>>
>> ==Definitions==
>>
>> "existing segwit deployment" refer to the BIP9 "segwit" deployment using bit 1, between November 15th 2016 and November 15th 2017 to activate BIP141, BIP143 and BIP147.
>>
>> ==Motivation==
>>
>> Cause the mandatory activation of the existing segwit deployment before the end of midnight November 15th 2017.
>>
>> ==Specification==
>>
>> All times are specified according to median past time.
>>
>> This BIP will be activate between midnight October 1st 2017 (epoch time 1538352000) and midnight November 15th 2017 (epoch time 1510704000) if the existing segwit deployment is not activated before epoch time 1538352000. This BIP will cease to be active when the existing segwit deployment activates.
>>
>> While this BIP is active, all blocks must set the nVersion header top 3 bits to 001 together with bit field (1<<1) (according to the existing segwit deployment). Blocks that do not signal as required will be rejected.
>>
>> === Reference implementation ===
>>
>> <pre>
>> // mandatory segwit activation between Oct 1st 2017 and Nov 15th 2017 inclusive
>> if (pindex->GetMedianTimePast() >= 1538352000 && pindex->GetMedianTimePast() <= 1510704000 && !IsWitnessEnabled(pindex->pprev, chainparams.GetConsensus())) {
>>     if (!((pindex->nVersion & VERSIONBITS_TOP_MASK) == VERSIONBITS_TOP_BITS) && (pindex->nVersion & VersionBitsMask(params, Consensus::DEPLOYMENT_SEGWIT)) != 0) {
>>         return state.DoS(2, error("ConnectBlock(): relayed block must signal for segwit, please upgrade"), REJECT_INVALID, "bad-no-segwit");
>>     }
>> }
>> </pre>
>>
>> ==Backwards Compatibility==
>>
>> This deployment is compatible with the existing "segwit" bit 1 deployment scheduled between midnight November 15th, 2016 and midnight November 15th, 2017.
>>
>> ==Rationale==
>>
>> Historically, the P2SH soft fork (BIP16) was activated using a predetermined flag day where nodes began enforcing the new rules. P2SH was successfully activated with relatively few issues
>>
>> By orphaning non-signalling blocks during the last month of the BIP9 bit 1 "segwit" deployment, this BIP can cause the existing "segwit" deployment to activate without needing to release a new deployment.
>>
>> ==References==
>>
>> [https://github.com/bitcoin/bitcoin/blob/v0.6.0/src/main.cpp#L1281-L1283 P2SH flag day activation].
>>
>> ==Copyright==
>>
>> This document is placed in the public domain.
>>
>>
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170313/b9619fd6/attachment-0001.html>

From shaolinfry at protonmail.ch  Mon Mar 13 10:36:30 2017
From: shaolinfry at protonmail.ch (shaolinfry)
Date: Mon, 13 Mar 2017 06:36:30 -0400
Subject: [bitcoin-dev] Flag day activation of segwit
In-Reply-To: <201703130301.41315.luke@dashjr.org>
References: <OUzy7vvSKdJW7OCcCNCbaVDT-hJcf7Fy3fxEi_z6AmBC3VY0dGZpSBOGxRs-fVE-CfOVToCjjwB-meqejkb4VXYAGu0HHPTzNFhomEhgVpk=@protonmail.ch>
	<201703130301.41315.luke@dashjr.org>
Message-ID: <NrY_33qfoG1ZNw_gT4ulv4sQ7eZLUTsu2VeUQAr041uRMvDrbI3vL8tW3AIDvVVsnV2juqM3fdlteLag9iQPD5yBUbdWVVdXSqlvAxfMwUA=@protonmail.ch>

From: luke at dashjr.org
On Sunday, March 12, 2017 3:50:27 PM shaolinfry via bitcoin-dev wrote:
> // mandatory segwit activation between Oct 1st 2017 and Nov 15th 2017
> inclusive if (pindex->GetMedianTimePast() >= 1538352000 &&
> pindex->GetMedianTimePast() <= 1510704000 &&
> !IsWitnessEnabled(pindex->pprev, chainparams.GetConsensus())) {
> if (!((pindex->nVersion & VERSIONBITS_TOP_MASK) ==
> VERSIONBITS_TOP_BITS) && (pindex->nVersion & VersionBitsMask(params,
> Consensus::DEPLOYMENT_SEGWIT)) != 0) {
> return state.DoS(2, error("ConnectBlock(): relayed block must
> signal for segwit, please upgrade"), REJECT_INVALID,
> "bad-no-segwit");
> }
> }

I don't think this is actually BIP 9 compatible. Once activated, the bit loses
its meaning and should not be set. So you need to check that it hasn't locked-
in already...

I believe that is handled.

time >= 1506816000 && time <= 1510704000 && !IsWitnessEnabled()

Signalling is only required from October 1st until the BIP9 timeout, or, until segwit is activated. The bit becomes free after activation/timeout as per BIP9. Also, the default behaviour of BIP9 in Bitcoin Core is to signal through the LOCKED_IN period - it would be trivial to add a condition to not require mandatory signalling during LOCKED_IN but since miners signal by default during this period, I figured I would leave it.

I thought about 5% tolerance. but I don't think it makes sense since miners will already have plenty of warning this is coming up and the intent of the mandatory signalling period is quite clear. It also seems a bit weird to say "it's mandatory but not for 5%". If miners are required to signal, they need to signal. It also adds unnecessary complexity to an otherwise simple patch.

That said, I have no strong feelings either way on both counts, but I chose to present the simplest option first.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170313/236ddda6/attachment-0001.html>

From shaolinfry at protonmail.ch  Mon Mar 13 10:54:48 2017
From: shaolinfry at protonmail.ch (shaolinfry)
Date: Mon, 13 Mar 2017 06:54:48 -0400
Subject: [bitcoin-dev] Flag day activation of segwit
In-Reply-To: <CANN4kmc1R8t66Gja_fNKMHTRpo41Rpt7V+OeAW8dLBOtFdAzQw@mail.gmail.com>
References: <OUzy7vvSKdJW7OCcCNCbaVDT-hJcf7Fy3fxEi_z6AmBC3VY0dGZpSBOGxRs-fVE-CfOVToCjjwB-meqejkb4VXYAGu0HHPTzNFhomEhgVpk=@protonmail.ch>
	<CANN4kmc1R8t66Gja_fNKMHTRpo41Rpt7V+OeAW8dLBOtFdAzQw@mail.gmail.com>
Message-ID: <okSC189KFynia2SWpnNrnOlVJ9v23YxHQpfZBU4S61LefcFWVGW9zqKk7m_1tRuRjrI0lER48H9M5pa4sle5bJ1hOYnUmZ8LR9H_p9y79MY=@protonmail.ch>

Fundamentally, what you have described is not a UASF, it is a miner attack on other miners. 51% of hash power has always been able to collude to orphan blocks that contain transactions they have blacklisted (a censorship soft fork). This is clearly a miner attack which would escalate pretty rapidly into a PoW change if sustained for any time.

Miners have always retained the ability to include whatever valid transactions they like. If they don't like P2SH or segwit, they don't have to include them in their blocks. There is a clear difference between opting out of transaction selection vs miners attacking other miners to prevent their voluntary participation in mining valid transactions.

Of course, anything is possible, but game theory and incentives seem to suggest that any tantrums would be at most, short lived, if lived at all. Mining is an extraordinarily expensive endeavour, which is the basis of the strong assumption of Bitcoin that PoW/revenue incentives will keep miners honest. If that assumption is broken, Bitcoin has bigger problems.


-------- Original Message --------
Subject: Re: [bitcoin-dev] Flag day activation of segwit
From: nickodell



The problem with modifying Bitcoin to work around community norms is that it's a two-way street. Other people can do it too.

Let me propose a counter-fork, or a "Double UASF." This is also a BIP9 fork, and it uses, say, bit 2. starttime is 1489449600, and the end time is 1506812400. It enforces every rule that UASF enforces, plus one additional rule. If 60% of blocks in any retargeting period signal for Double UASF, any descendant block that creates or spends a segregated witness output is invalid.

Double UASF signaling never coincides with UASF signaling, because the signaling periods don't overlap. Full nodes happily validate the chain, because Double UASF doesn't break any rules; it just adds new ones. Miners who adopt Double UASF don't need to understand segwit, because all segwit transactions are banned. Miners don't need to commit to a wtxid structure, either. Per BIP 141, "If all transactions in a block do not have witness data, the commitment is optional." Segwit is activated, but useless. Miners who *do* adopt segwit will lose money, as their blocks are orphaned.

Thanks,
--Nick



On Sun, Mar 12, 2017 at 9:50 AM, shaolinfry via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:

I recently posted about so called "user activated soft forks" and received a lot of feedback. Much of this was how such methodologies could be applied to segwit which appears to have fallen under the miner veto category I explained in my original proposal, where there is apparently a lot of support for the proposal from the economy, but a few mining pools are vetoing the activation.

It turns out Bitcoin already used flag day activation for P2SH[[1](https://github.com/bitcoin/bitcoin/blob/v0.6.0/src/main.cpp#L1281-L1283)], a soft fork which is remarkably similar to segwit. The disadvantage of a UASF for segwit is there is an existing deployment. A UASF would require another wide upgrade cycle (from what I can see, around 80% of existing nodes have upgraded from pre-witness, to NODE_WITNESS capability[[2](http://luke.dashjr.org/programs/bitcoin/files/charts/services.html)][[3](https://www.reddit.com/r/Bitcoin/comments/5yyqt1/evidence_of_widespread_segwit_support_near50_of/)]. While absolute node count is meaningless, the uprgrade trend from version to version seems significant.

Also it is quite clear a substantial portion of the ecosystem industry has put in time and resources into segwit adoption, in the form of upgrading wallet code, updating libraries and various other integration work that requires significant time and money. Further more, others have built systems that rely on segwit, having put significant engineering resources into developing systems that require segwit - such as several lightning network system. This is much more significant social proof than running a node.

The delayed activation of segwit is also holding back a raft protocol of innovations such as MAST, Covenants, Schnorr signature schemes and signature aggregation and other script innovations of which, much of the development work is already done.

A better option would be to release code that causes the existing segwit deployment to activate without requiring a completely new deployment nor subject to hash power veto. This could be achieved if the economic majority agree to run code that rejects non-signalling segwit blocks. Then from the perspective of all existing witness nodes, miners trigger the BIP9 activation. Such a rule could come into effect 4-6 weeks before the BIP9 timeout. If a large part of the economic majority publicly say that they will adopt this new client, miners will have to signal bip9 segwit activation in order for their blocks to be valid.

I have drafted a BIP proposal so the community may discuss https://gist.github.com/shaolinfry/743157b0b1ee14e1ddc95031f1057e4c (full text below).

References:
[1]: https://github.com/bitcoin/bitcoin/blob/v0.6.0/src/main.cpp#L1281-L1283
[2]: http://luke.dashjr.org/programs/bitcoin/files/charts/services.html
[3]: https://www.reddit.com/r/Bitcoin/comments/5yyqt1/evidence_of_widespread_segwit_support_near50_of/

Proposal text:

<pre> BIP: bip-segwit-flagday Title: Flag day activation for segwit deployment Author: Shaolin Fry <shaolinfry at protonmail.ch> Comments-Summary: No comments yet. Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???? Status: Draft Type: Informational Created: 2017-03-12 License: BSD-3-Clause CC0-1.0 </pre> ==Abstract== This document specifies a BIP16 like soft fork flag day activation of the segregated witness BIP9 deployment known as "segwit". ==Definitions== "existing segwit deployment" refer to the BIP9 "segwit" deployment using bit 1, between November 15th 2016 and November 15th 2017 to activate BIP141, BIP143 and BIP147. ==Motivation== Cause the mandatory activation of the existing segwit deployment before the end of midnight November 15th 2017. ==Specification== All times are specified according to median past time. This BIP will be activate between midnight October 1st 2017 (epoch time 1538352000) and midnight November 15th 2017 (epoch time 1510704000) if the existing segwit deployment is not activated before epoch time 1538352000. This BIP will cease to be active when the existing segwit deployment activates. While this BIP is active, all blocks must set the nVersion header top 3 bits to 001 together with bit field (1<<1) (according to the existing segwit deployment). Blocks that do not signal as required will be rejected. === Reference implementation === <pre> // mandatory segwit activation between Oct 1st 2017 and Nov 15th 2017 inclusive if (pindex->GetMedianTimePast() >= 1538352000 && pindex->GetMedianTimePast() <= 1510704000 && !IsWitnessEnabled(pindex->pprev, chainparams.GetConsensus())) { if (!((pindex->nVersion & VERSIONBITS_TOP_MASK) == VERSIONBITS_TOP_BITS) && (pindex->nVersion & VersionBitsMask(params, Consensus::DEPLOYMENT_SEGWIT)) != 0) { return state.DoS(2, error("ConnectBlock(): relayed block must signal for segwit, please upgrade"), REJECT_INVALID, "bad-no-segwit"); } } </pre> ==Backwards Compatibility== This deployment is compatible with the existing "segwit" bit 1 deployment scheduled between midnight November 15th, 2016 and midnight November 15th, 2017. ==Rationale== Historically, the P2SH soft fork (BIP16) was activated using a predetermined flag day where nodes began enforcing the new rules. P2SH was successfully activated with relatively few issues By orphaning non-signalling blocks during the last month of the BIP9 bit 1 "segwit" deployment, this BIP can cause the existing "segwit" deployment to activate without needing to release a new deployment. ==References== [https://github.com/bitcoin/bitcoin/blob/v0.6.0/src/main.cpp#L1281-L1283 P2SH flag day activation]. ==Copyright== This document is placed in the public domain.




_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170313/6e5c3f8b/attachment-0001.html>

From contashk18 at gmail.com  Mon Mar 13 13:08:24 2017
From: contashk18 at gmail.com (ashish khandekar)
Date: Mon, 13 Mar 2017 18:38:24 +0530
Subject: [bitcoin-dev] Solution for blockchain congestion and
 determination of block size by bitcoin network/protocol itself.
In-Reply-To: <CA+KqGkq6K060cXfYqCekb9g2HNEeFDGL+_R2TfMF8crUHyBJSA@mail.gmail.com>
References: <CAFaEF9KJD7rVOALiaN6uNNzcL_u8V8uX2BLiNaTJUk98pqot=g@mail.gmail.com>
	<CA+KqGkq6K060cXfYqCekb9g2HNEeFDGL+_R2TfMF8crUHyBJSA@mail.gmail.com>
Message-ID: <CAFaEF9JFZMRFXLF0-m_=zgfScX09M07a6P4GYizWmGXOYyXEcg@mail.gmail.com>

Should a BIP be submitted or are there any suggestions for the proposal ?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170313/b789def0/attachment.html>

From andrewlecody at gmail.com  Mon Mar 13 18:10:57 2017
From: andrewlecody at gmail.com (Andrew LeCody)
Date: Mon, 13 Mar 2017 18:10:57 +0000
Subject: [bitcoin-dev] Currency/exchange rate information API
In-Reply-To: <CAAUq487pjZYTZJDNv2TL8Vwh-nGqaFVZLG1v4VUJu=ejcx45nw@mail.gmail.com>
References: <201703040827.33798.luke@dashjr.org>
	<CAAUq487pjZYTZJDNv2TL8Vwh-nGqaFVZLG1v4VUJu=ejcx45nw@mail.gmail.com>
Message-ID: <CAEX2NSd7GAHa+-ge6r8RORnyLBV0j6ET5L1iMNH+YOWhO2VCgw@mail.gmail.com>

This formatting of JSON isn't unheard of though, it's typically called JSON
Streaming[1]. As long as exchanges implementing the API actually follow the
BIP and keep one JSON object per line, it shouldn't be a problem to decode.

1. https://en.wikipedia.org/wiki/JSON_Streaming

On Tue, Mar 7, 2017 at 8:07 AM Marcel Jamin via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> > Why are multiple results separated by a line-feed rather than using a
> JSON Array?
> > * Clients ought to cache historical data, and using a line-feed format
> allows them to simply append to a cache file.
> > * Parsing JSON typically requires the entire data parsed together as a
> single memory object. Using simple lines to separate results, however,
> allows parsing a single result at a time.
> > What if long descriptions require line and paragraph breaks?
> > * Clients should word-wrap long lines, and JSON escapes newlines as "\n"
> which can be used doubly ("\n\n") for paragraph breaks.
>
> I'd file this under premature optimization at the cost of
> interoperability. If you use JSON, then please use it properly.
>
> I'd also say it's the job of the parser to offer a way of doing that,
> e.g. in .NET you can easily achieve that with Newtonsoft's JSON
> parser:
> http://stackoverflow.com/questions/20374083/deserialize-json-array-stream-one-item-at-a-time
> .
>
> On 4 March 2017 at 09:27, Luke Dashjr via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> >
> > Investigating what it would take to add fiat currency information to
> Bitcoin
> > Knots, I noticed Electrum currently has many implementations, one for
> each
> > exchange rate provider, due to lack of a common format for such data.
> >
> > Therefore, I put together an initial draft of a BIP that could
> standardise
> > this so wallets (or other software) and exchange rate providers can
> simply
> > interoperate without a lot of overhead reimplementing the same thing many
> > ways.
> >
> > One thing I am unsure about, is that currently this draft requires using
> XBT
> > (as BTC) for Bitcoin amounts. It would seem nicer to use satoshis, but
> those
> > don't really have a pseudo-ISO currency code to fit in nicely...
> >
> > Current draft here:
> >
> https://github.com/luke-jr/bips/blob/bip-xchgrate/bip-xchgrate.mediawiki
> >
> > Thoughts? Anything critical missing? Ways to make the interface better?
> >
> > Luke
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170313/b8f95ee6/attachment.html>

From nickodell at gmail.com  Mon Mar 13 22:18:15 2017
From: nickodell at gmail.com (Nick ODell)
Date: Mon, 13 Mar 2017 16:18:15 -0600
Subject: [bitcoin-dev] Flag day activation of segwit
In-Reply-To: <NrY_33qfoG1ZNw_gT4ulv4sQ7eZLUTsu2VeUQAr041uRMvDrbI3vL8tW3AIDvVVsnV2juqM3fdlteLag9iQPD5yBUbdWVVdXSqlvAxfMwUA=@protonmail.ch>
References: <OUzy7vvSKdJW7OCcCNCbaVDT-hJcf7Fy3fxEi_z6AmBC3VY0dGZpSBOGxRs-fVE-CfOVToCjjwB-meqejkb4VXYAGu0HHPTzNFhomEhgVpk=@protonmail.ch>
	<201703130301.41315.luke@dashjr.org>
	<NrY_33qfoG1ZNw_gT4ulv4sQ7eZLUTsu2VeUQAr041uRMvDrbI3vL8tW3AIDvVVsnV2juqM3fdlteLag9iQPD5yBUbdWVVdXSqlvAxfMwUA=@protonmail.ch>
Message-ID: <CANN4kmdJhLHbBOT3BMkBUn0jfummfX6kvwhq2PKDgrnK3qH-Tw@mail.gmail.com>

>time >= 1506816000 && time <= 1510704000 && !IsWitnessEnabled()
This has a different start time from the first post.
>if (pindex->GetMedianTimePast() >= 1538352000 &&
pindex->GetMedianTimePast() <= 1510704000 ...

Thanks,
--Nick

On Mon, Mar 13, 2017 at 4:36 AM, shaolinfry via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> From: luke at dashjr.org
> On Sunday, March 12, 2017 3:50:27 PM shaolinfry via bitcoin-dev wrote:
> > // mandatory segwit activation between Oct 1st 2017 and Nov 15th 2017
> > inclusive if (pindex->GetMedianTimePast() >= 1538352000 &&
> > pindex->GetMedianTimePast() <= 1510704000 &&
> > !IsWitnessEnabled(pindex->pprev, chainparams.GetConsensus())) {
> > if (!((pindex->nVersion & VERSIONBITS_TOP_MASK) ==
> > VERSIONBITS_TOP_BITS) && (pindex->nVersion & VersionBitsMask(params,
> > Consensus::DEPLOYMENT_SEGWIT)) != 0) {
> > return state.DoS(2, error("ConnectBlock(): relayed block must
> > signal for segwit, please upgrade"), REJECT_INVALID,
> > "bad-no-segwit");
> > }
> > }
>
> I don't think this is actually BIP 9 compatible. Once activated, the bit
> loses
> its meaning and should not be set. So you need to check that it hasn't
> locked-
> in already...
>
>
> I believe that is handled.
>
> time >= 1506816000 && time <= 1510704000 && !IsWitnessEnabled()
>
> Signalling is only required from October 1st until the BIP9 timeout, or,
> until segwit is activated. The bit becomes free after activation/timeout as
> per BIP9. Also, the default behaviour of BIP9 in Bitcoin Core is to signal
> through the LOCKED_IN period - it would be trivial to add a condition to
> not require mandatory signalling during LOCKED_IN but since miners signal
> by default during this period, I figured I would leave it.
>
> I thought about 5% tolerance. but I don't think it makes sense since
> miners will already have plenty of warning this is coming up and the intent
> of the mandatory signalling period is quite clear. It also seems a bit
> weird to say "it's mandatory but not for 5%". If miners are required to
> signal, they need to signal. It also adds unnecessary complexity to an
> otherwise simple patch.
>
> That said, I have no strong feelings either way on both counts, but I
> chose to present the simplest option first.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170313/1488d886/attachment.html>

From luke at dashjr.org  Wed Mar 15 04:03:40 2017
From: luke at dashjr.org (Luke Dashjr)
Date: Wed, 15 Mar 2017 04:03:40 +0000
Subject: [bitcoin-dev] Payment address tokens
Message-ID: <201703150403.43194.luke@dashjr.org>

I've put together a fairly incomplete BIP draft for a new stateless address 
format that aims to address the many shortcomings of current addresses, 
including:
- Current addresses special-case specific transaction types, and have needed
  sender-side upgrades for new types.
- Outputs are produced which cannot be distinguished from disguised data
  storage, making spam detection harder.
- Privacy is severely harmed by reuse of addresses.
- Funds can be lost due to (accidental or intentional) reuse of very old
  addresses.

https://github.com/luke-jr/bips/blob/bip-genaddr/bip-genaddr.mediawiki

A downside of this approach is that parsing addresses to outputs can be 
complicated, but this is resolvable by writing libraries for popular 
languages.

Thoughts on how it might be improved, before I get too deep into the current 
design?

Luke

From tomh at thinlink.com  Wed Mar 15 22:36:09 2017
From: tomh at thinlink.com (Tom Harding)
Date: Wed, 15 Mar 2017 15:36:09 -0700
Subject: [bitcoin-dev] Committed bloom filters for improved wallet
 performance and SPV security
In-Reply-To: <045843cb19f03888da10d2954cd1c685@cock.lu>
References: <71d822e413ac457a530e1c367811cc24@cock.lu>
	<77b6dd25-0603-a0bd-6a9e-38098e5cb19d@jonasschnelli.ch>
	<74aeb4760316b59a3db56c0d16d11f28@cock.lu>
	<CACq0ZD7XT_h8ADptKA0uBT7617fvvgh3uGndkc08RZUSQM2yQg@mail.gmail.com>
	<f335731c-3928-6694-5ed8-aa1999b401f1@jonasschnelli.ch>
	<CAAcC9ysdaK1DqBBRvBM=7uHFnM7WW23R61v68xrAMj3rWJfqdg@mail.gmail.com>
	<045843cb19f03888da10d2954cd1c685@cock.lu>
Message-ID: <7794520b-43a0-3227-1a68-58d12e432291@thinlink.com>

Agreed.

In contrast, BIP37 as used today is totally decentralized, and can me 
made much more secure, private, and scalable -- without giving up the 
utility of unconfirmed transactions.

Please don't read into this statement a belief that all the coffees 
should go on the chain, or that the security or privacy of BIP37 compare 
favorably to any other particular thing.

https://docs.google.com/presentation/d/13MzUo2iIH9JBW29TgtPMoaMXxeEdanWDfi6SlfO-LlA



On 1/5/2017 6:04 PM, bfd--- via bitcoin-dev wrote:
> You might as well replace Bitcoin with a system where these parties
> sign transactions and skip mining altogether, it would have the same
> properties and be significantly more effient.
>
>
> On 2017-01-04 23:06, Chris Priest wrote:
>> On 1/3/17, Jonas Schnelli via bitcoin-dev
>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>
>>> There are plenty, more sane options. If you can't run your own 
>>> full-node
>>> as a merchant (trivial), maybe co-use a wallet-service with centralized
>>> verification (maybe use two of them), I guess Copay would be one of
>>> those wallets (as an example). Use them in watch-only mode.
>>
>> The best way is to connect to the mempool of each miner and check to
>> see if they have your txid in their mempool.
>>
>> https://www.antpool.com/api/is_in_mempool?txid=334847bb...
>> https://www.f2pool.com/api/is_in_mempool?txid=334847bb...
>> https://bw.com/api/is_in_mempool?txid=334847bb...
>> https://bitfury.com/api/is_in_mempool?txid=334847bb...
>> https://btcc.com/api/is_in_mempool?txid=334847bb...
>>
>> If each of these services return "True", and you know those services
>> so not engage in RBF, then you can assume with great confidence that
>> your transaction will be in the next block, or in a block very soon.
>> If any one of those services return "False", then you must assume that
>> it is possible that there is a double spend floating around, and that
>> you should wait to see if that tx gets confirmed. The problem is that
>> not every pool runs such a service to check the contents of their
>> mempool...
>>
>> This is an example of mining centralization increasing the security of
>> zero confirm. If more people mined, this method will not work as well
>> because it would require you to call the API of hundreds of different
>> potential block creators.
>


From erik at q32.com  Tue Mar 14 23:20:48 2017
From: erik at q32.com (Erik Aronesty)
Date: Tue, 14 Mar 2017 19:20:48 -0400
Subject: [bitcoin-dev] Solution for blockchain congestion and
 determination of block size by bitcoin network/protocol itself.
In-Reply-To: <CAFaEF9JFZMRFXLF0-m_=zgfScX09M07a6P4GYizWmGXOYyXEcg@mail.gmail.com>
References: <CAFaEF9KJD7rVOALiaN6uNNzcL_u8V8uX2BLiNaTJUk98pqot=g@mail.gmail.com>
	<CA+KqGkq6K060cXfYqCekb9g2HNEeFDGL+_R2TfMF8crUHyBJSA@mail.gmail.com>
	<CAFaEF9JFZMRFXLF0-m_=zgfScX09M07a6P4GYizWmGXOYyXEcg@mail.gmail.com>
Message-ID: <CAJowKgJ6=WvZbRS432E6FRMijuAwovaD9USnhp03-DcyEMH1TA@mail.gmail.com>

- no quadratic hashing solution
- no way to prevent spamming the network to blow up block sizes
- no mention of release schedule/consensus levels, etc.   should be
mentioned
- this is similar to other BIP already in place... see BIP107


On Mon, Mar 13, 2017 at 9:08 AM, ashish khandekar via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Should a BIP be submitted or are there any suggestions for the proposal ?
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170314/29efdb21/attachment.html>

From erik at q32.com  Tue Mar 14 23:26:17 2017
From: erik at q32.com (Erik Aronesty)
Date: Tue, 14 Mar 2017 19:26:17 -0400
Subject: [bitcoin-dev] Quadratic hashing solution for a post-segwit hard fork
Message-ID: <CAJowKg+GGsvPAR1ywDody=GGQnEh5pwUMW48cLOmUGhU8SdDtA@mail.gmail.com>

Some discussion today led me to believe that a post segwit hard fork could
include:

1MB old tx non-witness segment
XMB new segwit non-witness segment
XMB witness segment

By partitioning off old transactions, it allows users of older, more
expensive validation transactions to continue using them, albeit with
higher fees required for the restricted space.

New segwit blocks, which don't have the hashing problem could be included
in the new non-witness segment of the block.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170314/26ff9350/attachment.html>

From bfd at cock.lu  Thu Mar 16 00:25:01 2017
From: bfd at cock.lu (bfd at cock.lu)
Date: Thu, 16 Mar 2017 11:25:01 +1100
Subject: [bitcoin-dev] Committed bloom filters for improved wallet
 performance and SPV security
In-Reply-To: <7794520b-43a0-3227-1a68-58d12e432291@thinlink.com>
References: <71d822e413ac457a530e1c367811cc24@cock.lu>
	<77b6dd25-0603-a0bd-6a9e-38098e5cb19d@jonasschnelli.ch>
	<74aeb4760316b59a3db56c0d16d11f28@cock.lu>
	<CACq0ZD7XT_h8ADptKA0uBT7617fvvgh3uGndkc08RZUSQM2yQg@mail.gmail.com>
	<f335731c-3928-6694-5ed8-aa1999b401f1@jonasschnelli.ch>
	<CAAcC9ysdaK1DqBBRvBM=7uHFnM7WW23R61v68xrAMj3rWJfqdg@mail.gmail.com>
	<045843cb19f03888da10d2954cd1c685@cock.lu>
	<7794520b-43a0-3227-1a68-58d12e432291@thinlink.com>
Message-ID: <48d3940ab1a2bd53c6e056ce7fbcd361@cock.lu>

Sorry, this is not the case.

Your slides gloss over the simple fact that compact fraud proofs in 
Bitcoin aren't possible, and that the "SPV" implemented today bears 
absolutely no resemblance in security properties to the version 
described in the Bitcoin white paper. In the white paper SPV clients 
have the same security as fully validating nodes, in the implementation 
of BIP37 they have absolutely no security except the vague hope that 
they are not being lied to, and that the chain with the most work they 
are seeing is actually valid, both are very weak assumptions.

The suggested solution in no way precludes unconfirmed transactions from 
being used with a commitment scheme, my comments and others are just 
recognising that they are an almost useless indicator for people who 
aren't validating.

During the validationless mining failure around the BIP66 activation 
miners produced 6 invalid blocks in a chain, and many more invalid 
blocks in isolated bursts for a period lasting several months. Due to 
the instability of the network you are completely unreasonable to accept 
anything except multiple confirmations, the true number for safety is 
probably more like 60 or 120, not 6, or 3, or 1 as some Bitcoin 
exchanges use today.


0000000000000000009cc829aa25b40b2cd4eb83dd498c12ad0d26d90c439d99.bin 
bad-version(0x00000002)
0000000000000000032527aa796d3672e32e5f85a452d3a584a28fc7efbcd5d0.bin 
bad-version(0x00000002)
000000000000000003ae1223f4926ec86100885cfe1484dc52fd67e042a19b12.bin 
bad-version(0x00000002)
0000000000000000083cbdbb25c1607527c8f3fdb16f0d048c4439a73b501cb6.bin 
bad-version(0x00000002)
00000000000000000954ed93eda1e79e8261137548fa9ccf4d516bb384a3660b.bin 
bad-version(0x00000002)
00000000000000000afc9fbe7cfe8a6b50502d509ba626beb2e2d6c15d1d3ee3.bin 
bad-version(0x00000002)
00000000000000000b6adf92bc192b3c21210f456ab21b5e46951665c74cfab2.bin 
bad-version(0x00000002)
00000000000000000c9bb4a508fff34f5450d9c62ef2cb833e53909a4c549de5.bin 
bad-version(0x00000002)
0000000000000000116322b5f25826787b01f7a70fb322837b68dff8216cefc4.bin 
bad-version(0x00000002)
000000000000000012aac0664cd8b6cbc3ea485921a05f2c4340f928b0226d3c.bin 
bad-version(0x00000002)

"SPV" like you're describing can exist, or validationless mining can 
exist, both can not simultaneously.



On 2017-03-16 09:36, Tom Harding via bitcoin-dev wrote:
> Agreed.
> 
> In contrast, BIP37 as used today is totally decentralized, and can me
> made much more secure, private, and scalable -- without giving up the
> utility of unconfirmed transactions.
> 
> Please don't read into this statement a belief that all the coffees
> should go on the chain, or that the security or privacy of BIP37
> compare favorably to any other particular thing.
> 
> https://docs.google.com/presentation/d/13MzUo2iIH9JBW29TgtPMoaMXxeEdanWDfi6SlfO-LlA
> 
> 
> 
> On 1/5/2017 6:04 PM, bfd--- via bitcoin-dev wrote:
>> You might as well replace Bitcoin with a system where these parties
>> sign transactions and skip mining altogether, it would have the same
>> properties and be significantly more effient.
>> 
>> 
>> On 2017-01-04 23:06, Chris Priest wrote:
>>> On 1/3/17, Jonas Schnelli via bitcoin-dev
>>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>> 
>>>> There are plenty, more sane options. If you can't run your own 
>>>> full-node
>>>> as a merchant (trivial), maybe co-use a wallet-service with 
>>>> centralized
>>>> verification (maybe use two of them), I guess Copay would be one of
>>>> those wallets (as an example). Use them in watch-only mode.
>>> 
>>> The best way is to connect to the mempool of each miner and check to
>>> see if they have your txid in their mempool.
>>> 
>>> https://www.antpool.com/api/is_in_mempool?txid=334847bb...
>>> https://www.f2pool.com/api/is_in_mempool?txid=334847bb...
>>> https://bw.com/api/is_in_mempool?txid=334847bb...
>>> https://bitfury.com/api/is_in_mempool?txid=334847bb...
>>> https://btcc.com/api/is_in_mempool?txid=334847bb...
>>> 
>>> If each of these services return "True", and you know those services
>>> so not engage in RBF, then you can assume with great confidence that
>>> your transaction will be in the next block, or in a block very soon.
>>> If any one of those services return "False", then you must assume 
>>> that
>>> it is possible that there is a double spend floating around, and that
>>> you should wait to see if that tx gets confirmed. The problem is that
>>> not every pool runs such a service to check the contents of their
>>> mempool...
>>> 
>>> This is an example of mining centralization increasing the security 
>>> of
>>> zero confirm. If more people mined, this method will not work as well
>>> because it would require you to call the API of hundreds of different
>>> potential block creators.
>> 
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From tomh at thinlink.com  Thu Mar 16 15:05:11 2017
From: tomh at thinlink.com (Tom Harding)
Date: Thu, 16 Mar 2017 08:05:11 -0700
Subject: [bitcoin-dev] Committed bloom filters for improved wallet
 performance and SPV security
In-Reply-To: <48d3940ab1a2bd53c6e056ce7fbcd361@cock.lu>
References: <71d822e413ac457a530e1c367811cc24@cock.lu>
	<77b6dd25-0603-a0bd-6a9e-38098e5cb19d@jonasschnelli.ch>
	<74aeb4760316b59a3db56c0d16d11f28@cock.lu>
	<CACq0ZD7XT_h8ADptKA0uBT7617fvvgh3uGndkc08RZUSQM2yQg@mail.gmail.com>
	<f335731c-3928-6694-5ed8-aa1999b401f1@jonasschnelli.ch>
	<CAAcC9ysdaK1DqBBRvBM=7uHFnM7WW23R61v68xrAMj3rWJfqdg@mail.gmail.com>
	<045843cb19f03888da10d2954cd1c685@cock.lu>
	<7794520b-43a0-3227-1a68-58d12e432291@thinlink.com>
	<48d3940ab1a2bd53c6e056ce7fbcd361@cock.lu>
Message-ID: <666037d7-9fd9-ad10-229d-9fbaec530538@thinlink.com>

On 3/15/2017 5:25 PM, bfd at cock.lu wrote:
> compact fraud proofs in Bitcoin aren't possible
> In the white paper SPV clients have the same security as fully
> validating nodes

In addition to not existing, if compact fraud proofs did exist, trying
to ensure they are seen by SPV clients has the same problems as BIP37.


> in the implementation of BIP37 they have absolutely no security except
> the vague hope that they are not being lied to, and that the chain
> with the most work they are seeing is actually valid, both are very
> weak assumptions.

Since real money is involved, the near total absence of documented fraud
along these lines belies the strong language.


> During the validationless mining failure around the BIP66 activation
> miners produced 6 invalid blocks in a chain, and many more invalid
> blocks in isolated bursts for a period lasting several months. Due to
> the instability of the network you are completely unreasonable to
> accept anything except multiple confirmations

This affected all users, not just SPV.


From alp.bitcoin at gmail.com  Thu Mar 16 15:24:14 2017
From: alp.bitcoin at gmail.com (Alphonse Pace)
Date: Thu, 16 Mar 2017 10:24:14 -0500
Subject: [bitcoin-dev] Quadratic hashing solution for a post-segwit hard
	fork
In-Reply-To: <CAJowKg+GGsvPAR1ywDody=GGQnEh5pwUMW48cLOmUGhU8SdDtA@mail.gmail.com>
References: <CAJowKg+GGsvPAR1ywDody=GGQnEh5pwUMW48cLOmUGhU8SdDtA@mail.gmail.com>
Message-ID: <CAMBsKS87Cu+NtWTuOgeA7hmgTpW9Et-uHdpYkofNV0a73fM+8g@mail.gmail.com>

This unnecessarily complicates transaction selection for miners by
introducing a second (and possibly third if I understand your proposal
correctly) dimension to try to optimize.

See:  https://en.wikipedia.org/wiki/Bin_packing_problem

Segwit already solves this exact issue by replacing block size with block
weight, so I fail to see how this proposal would make any improvements
without introducing significant complications.



?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170316/e9a79d33/attachment.html>

From erik at q32.com  Fri Mar 17 00:44:27 2017
From: erik at q32.com (Erik Aronesty)
Date: Thu, 16 Mar 2017 20:44:27 -0400
Subject: [bitcoin-dev] Quadratic hashing solution for a post-segwit hard
	fork
In-Reply-To: <CAMBsKS87Cu+NtWTuOgeA7hmgTpW9Et-uHdpYkofNV0a73fM+8g@mail.gmail.com>
References: <CAJowKg+GGsvPAR1ywDody=GGQnEh5pwUMW48cLOmUGhU8SdDtA@mail.gmail.com>
	<CAMBsKS87Cu+NtWTuOgeA7hmgTpW9Et-uHdpYkofNV0a73fM+8g@mail.gmail.com>
Message-ID: <CAJowKgLaK5SEq_2U+6o5zGe5vTduFj7Mn5ZN+zUb2RJ_CxZ=1A@mail.gmail.com>

Yeah, it does make things harder, and it's easy enough to soft fork to
handle arbitrary opt-in protocol improvements, new much larger block sizes,
whatever you want.   Even OK to migrate to a new system by not allowing
old->old or new->old transactions.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170316/525909bf/attachment.html>

From jtimon at jtimon.cc  Fri Mar 17 10:39:07 2017
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Fri, 17 Mar 2017 11:39:07 +0100
Subject: [bitcoin-dev] Quadratic hashing solution for a post-segwit hard
	fork
In-Reply-To: <CAJowKgLaK5SEq_2U+6o5zGe5vTduFj7Mn5ZN+zUb2RJ_CxZ=1A@mail.gmail.com>
References: <CAJowKg+GGsvPAR1ywDody=GGQnEh5pwUMW48cLOmUGhU8SdDtA@mail.gmail.com>
	<CAMBsKS87Cu+NtWTuOgeA7hmgTpW9Et-uHdpYkofNV0a73fM+8g@mail.gmail.com>
	<CAJowKgLaK5SEq_2U+6o5zGe5vTduFj7Mn5ZN+zUb2RJ_CxZ=1A@mail.gmail.com>
Message-ID: <CABm2gDrXrRAKzYrN9KBu+fA8r7YtnhufkP3U3ULYw3n_g-ekMA@mail.gmail.com>

Segwit allows old -> old, old -> new, new -> old and of course new -> new
txs.

On 17 Mar 2017 1:47 a.m., "Erik Aronesty via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org> wrote:

Yeah, it does make things harder, and it's easy enough to soft fork to
handle arbitrary opt-in protocol improvements, new much larger block sizes,
whatever you want.   Even OK to migrate to a new system by not allowing
old->old or new->old transactions.



_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170317/be7e2177/attachment.html>

From chris at suredbits.com  Sat Mar 18 15:23:16 2017
From: chris at suredbits.com (Chris Stewart)
Date: Sat, 18 Mar 2017 10:23:16 -0500
Subject: [bitcoin-dev] Requirement for pseudonymous BIP submissions
Message-ID: <CAGL6+mEnGNdAggHZs=ZM_QHbts63exE1ydstK+w-gUnm=4JLTA@mail.gmail.com>

As everyone in the Bitcoin space knows, there is a massive scaling debate
going on. One side wants to increase the block size via segwit, while the
other side wants to increase via hard fork. I have strong opinions on the
topic but I won?t discuss them here. The point of the matter is we are
seeing the politicization of protocol level changes. The critiques of these
changes are slowly moving towards critiques based on who is submitting the
BIP -- not what it actually contains. This is the worst thing that can
happen in a meritocracy.

*Avoiding politicization of technical changes in the future*

I like what Tom Elvis Judor did when he submitted his MimbleWimble white
paper to the technical community. He submitted it under a pseudonym, over
TOR, onto a public IRC channel. No ego involved ? only an extremely
promising paper. Tom (and Satoshi) both understood that it is only a matter
of time before who they are impedes technical progress of their system.

I propose we move to a pseudonymous BIP system where it is required for the
author submit the BIP under a pseudonym. For instance, the format could be
something like this:

BIP: 1337

Author: 9458b7f9f76131f18823d73770e069d55beb271b at protonmail.com

BIP content down here

The hash ?6f3?9cd0? is just my github username, christewart, concatenated
with some entropy, in this case these bytes:
639c28f610edcaf265b47b0679986d10af3360072b56f9b0b085ffbb4d4f440b

and then hashed with RIPEMD160. I checked this morning that protonmail can
support RIPEMD160 hashes as email addresses. Unfortunately it appears it
cannot support SHA256 hashes.

There is inconvenience added here. You need to make a new email address,
you need to make a new github account to submit the BIP. I think it is
worth the cost -- but am interested in what others think about this. I
don't think people submitting patches to a BIP should be required to submit
under a pseudonym -- only the primary author. This means only one person
has to create the pseudonym. From a quick look at the BIPs list it looks
like the most BIPs submitted by one person is ~10. This means they would
have had to create 10 pseudonyms over 8 years -- I think this is
reasonable.

*What does this give us?*

This gives us a way to avoid politicization of BIPs. This means a BIP can
be proposed and examined based on it?s technical merits. This levels the
playing field ? making the BIP process even more meritocratic than it
already is.

If you want to claim credit for your BIP after it is accepted, you can
reveal the preimage of the author hash to prove that you were the original
author of the BIP. I would need to reveal my github username and
?639c28f610edcaf265b47b0679986d10af3360072b56f9b0b085ffbb4d4f440b?

*The Future*
Politicization of bitcoin is only going to grow in the future. We need to
make sure we maintain principled money instead devolving to a system where
our money is based on a democratic vote ? or the votes of a select few
elites. We need to vet claims by ?authority figures? whether it is Jihan
Wu, Adam Back, Roger Ver, or Greg Maxwell. I assure you they are human ?
and prone to mistakes ? just like the rest of us. This seems like a simple
way to level the playing field.

Thoughts?

-Chris
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170318/c788f5e3/attachment.html>

From luke at dashjr.org  Sat Mar 18 19:15:09 2017
From: luke at dashjr.org (Luke Dashjr)
Date: Sat, 18 Mar 2017 19:15:09 +0000
Subject: [bitcoin-dev] Requirement for pseudonymous BIP submissions
In-Reply-To: <CAGL6+mEnGNdAggHZs=ZM_QHbts63exE1ydstK+w-gUnm=4JLTA@mail.gmail.com>
References: <CAGL6+mEnGNdAggHZs=ZM_QHbts63exE1ydstK+w-gUnm=4JLTA@mail.gmail.com>
Message-ID: <201703181915.11040.luke@dashjr.org>

On Saturday, March 18, 2017 3:23:16 PM Chris Stewart via bitcoin-dev wrote:
> There is inconvenience added here. You need to make a new email address,
> you need to make a new github account to submit the BIP. 

GitHub doesn't allow people to have multiple accounts last I checked.

Luke

From andrew.johnson83 at gmail.com  Sat Mar 18 16:57:56 2017
From: andrew.johnson83 at gmail.com (Andrew Johnson)
Date: Sat, 18 Mar 2017 16:57:56 +0000
Subject: [bitcoin-dev] Requirement for pseudonymous BIP submissions
In-Reply-To: <CAGL6+mEnGNdAggHZs=ZM_QHbts63exE1ydstK+w-gUnm=4JLTA@mail.gmail.com>
References: <CAGL6+mEnGNdAggHZs=ZM_QHbts63exE1ydstK+w-gUnm=4JLTA@mail.gmail.com>
Message-ID: <CAAy62_KCNuBKiU7wUJL_bzz4iNgzsJLfZ9OX4+pTShYUQSZ93Q@mail.gmail.com>

I think this is an excellent idea. I consider myself to be extremely
data-driven and logical in my thinking, and have still fallen victim to
thinking "oh great, what's <person I've been annoyed by in the past> on
about now?" when seeing something posted or proposed.

And vice versa, it prevents people from being more partial to a bad or not
so great idea simply because it was posited by someone they hold in high
regard.

Simple, yet effective.  I would actually even go a step further and say
that all BIPs should be done this way as a matter of procedure, I can't
think of a downside.


On Sat, Mar 18, 2017 at 10:46 AM Chris Stewart via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> As everyone in the Bitcoin space knows, there is a massive scaling debate
> going on. One side wants to increase the block size via segwit, while the
> other side wants to increase via hard fork. I have strong opinions on the
> topic but I won?t discuss them here. The point of the matter is we are
> seeing the politicization of protocol level changes. The critiques of these
> changes are slowly moving towards critiques based on who is submitting the
> BIP -- not what it actually contains. This is the worst thing that can
> happen in a meritocracy.
>
> *Avoiding politicization of technical changes in the future*
>
> I like what Tom Elvis Judor did when he submitted his MimbleWimble white
> paper to the technical community. He submitted it under a pseudonym, over
> TOR, onto a public IRC channel. No ego involved ? only an extremely
> promising paper. Tom (and Satoshi) both understood that it is only a matter
> of time before who they are impedes technical progress of their system.
>
> I propose we move to a pseudonymous BIP system where it is required for
> the author submit the BIP under a pseudonym. For instance, the format could
> be something like this:
>
> BIP: 1337
>
> Author: 9458b7f9f76131f18823d73770e069d55beb271b at protonmail.com
>
> BIP content down here
>
> The hash ?6f3?9cd0? is just my github username, christewart, concatenated
> with some entropy, in this case these bytes:
> 639c28f610edcaf265b47b0679986d10af3360072b56f9b0b085ffbb4d4f440b
>
> and then hashed with RIPEMD160. I checked this morning that protonmail can
> support RIPEMD160 hashes as email addresses. Unfortunately it appears it
> cannot support SHA256 hashes.
>
> There is inconvenience added here. You need to make a new email address,
> you need to make a new github account to submit the BIP. I think it is
> worth the cost -- but am interested in what others think about this. I
> don't think people submitting patches to a BIP should be required to submit
> under a pseudonym -- only the primary author. This means only one person
> has to create the pseudonym. From a quick look at the BIPs list it looks
> like the most BIPs submitted by one person is ~10. This means they would
> have had to create 10 pseudonyms over 8 years -- I think this is
> reasonable.
>
> *What does this give us?*
>
> This gives us a way to avoid politicization of BIPs. This means a BIP can
> be proposed and examined based on it?s technical merits. This levels the
> playing field ? making the BIP process even more meritocratic than it
> already is.
>
> If you want to claim credit for your BIP after it is accepted, you can
> reveal the preimage of the author hash to prove that you were the original
> author of the BIP. I would need to reveal my github username and
> ?639c28f610edcaf265b47b0679986d10af3360072b56f9b0b085ffbb4d4f440b?
>
> *The Future*
> Politicization of bitcoin is only going to grow in the future. We need to
> make sure we maintain principled money instead devolving to a system where
> our money is based on a democratic vote ? or the votes of a select few
> elites. We need to vet claims by ?authority figures? whether it is Jihan
> Wu, Adam Back, Roger Ver, or Greg Maxwell. I assure you they are human ?
> and prone to mistakes ? just like the rest of us. This seems like a simple
> way to level the playing field.
>
> Thoughts?
>
> -Chris
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-- 
Andrew Johnson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170318/a41a9a1a/attachment.html>

From chris at suredbits.com  Sat Mar 18 17:35:30 2017
From: chris at suredbits.com (Chris Stewart)
Date: Sat, 18 Mar 2017 12:35:30 -0500
Subject: [bitcoin-dev] Requirement for pseudonymous BIP submissions
In-Reply-To: <CAAy62_KCNuBKiU7wUJL_bzz4iNgzsJLfZ9OX4+pTShYUQSZ93Q@mail.gmail.com>
References: <CAGL6+mEnGNdAggHZs=ZM_QHbts63exE1ydstK+w-gUnm=4JLTA@mail.gmail.com>
	<CAAy62_KCNuBKiU7wUJL_bzz4iNgzsJLfZ9OX4+pTShYUQSZ93Q@mail.gmail.com>
Message-ID: <CAGL6+mHPgtWt54Tv+7p1F7rqrf12cLPvUqsjQhhbyreaTmO8_w@mail.gmail.com>

>I think this is an excellent idea. I consider myself to be extremely
data-driven and logical in my thinking, and have still fallen victim to
thinking "oh great, what's <person I've been annoyed by in the past> on
about now?" when seeing something posted or proposed.

I think we need to all recognize we are only humans -- thus susceptible to
our emotions influencing our decisions. The notion of identity is an easy
way to form judgements for/against an idea before thoroughly vetting it.

I also think a by product of this would be to curb reddit/twitter trolls
from talking about these protocol changes. It is a much less juicy story if
you have to say "9458b7f9f76131f18823d73770e069d55beb271b created a BIP to
propose a block size increase" compared to "Satoshi Nakamoto created a BIP
to propose a block size increase".

Note about the OP:

"The hash ?6f3?9cd0? is just my..." should really say "The hash
'9458...271b' is just my.." Forgot to change the hash this morning.

On Sat, Mar 18, 2017 at 11:57 AM, Andrew Johnson <andrew.johnson83 at gmail.com
> wrote:

> I think this is an excellent idea. I consider myself to be extremely
> data-driven and logical in my thinking, and have still fallen victim to
> thinking "oh great, what's <person I've been annoyed by in the past> on
> about now?" when seeing something posted or proposed.
>
> And vice versa, it prevents people from being more partial to a bad or not
> so great idea simply because it was posited by someone they hold in high
> regard.
>
> Simple, yet effective.  I would actually even go a step further and say
> that all BIPs should be done this way as a matter of procedure, I can't
> think of a downside.
>
>
> On Sat, Mar 18, 2017 at 10:46 AM Chris Stewart via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> As everyone in the Bitcoin space knows, there is a massive scaling debate
>> going on. One side wants to increase the block size via segwit, while the
>> other side wants to increase via hard fork. I have strong opinions on the
>> topic but I won?t discuss them here. The point of the matter is we are
>> seeing the politicization of protocol level changes. The critiques of these
>> changes are slowly moving towards critiques based on who is submitting the
>> BIP -- not what it actually contains. This is the worst thing that can
>> happen in a meritocracy.
>>
>> *Avoiding politicization of technical changes in the future*
>>
>> I like what Tom Elvis Judor did when he submitted his MimbleWimble white
>> paper to the technical community. He submitted it under a pseudonym, over
>> TOR, onto a public IRC channel. No ego involved ? only an extremely
>> promising paper. Tom (and Satoshi) both understood that it is only a matter
>> of time before who they are impedes technical progress of their system.
>>
>> I propose we move to a pseudonymous BIP system where it is required for
>> the author submit the BIP under a pseudonym. For instance, the format could
>> be something like this:
>>
>> BIP: 1337
>>
>> Author: 9458b7f9f76131f18823d73770e069d55beb271b at protonmail.com
>>
>> BIP content down here
>>
>> The hash ?6f3?9cd0? is just my github username, christewart, concatenated
>> with some entropy, in this case these bytes: 639c28f610edcaf265b47b0679986d
>> 10af3360072b56f9b0b085ffbb4d4f440b
>>
>> and then hashed with RIPEMD160. I checked this morning that protonmail
>> can support RIPEMD160 hashes as email addresses. Unfortunately it appears
>> it cannot support SHA256 hashes.
>>
>> There is inconvenience added here. You need to make a new email address,
>> you need to make a new github account to submit the BIP. I think it is
>> worth the cost -- but am interested in what others think about this. I
>> don't think people submitting patches to a BIP should be required to submit
>> under a pseudonym -- only the primary author. This means only one person
>> has to create the pseudonym. From a quick look at the BIPs list it looks
>> like the most BIPs submitted by one person is ~10. This means they would
>> have had to create 10 pseudonyms over 8 years -- I think this is
>> reasonable.
>>
>> *What does this give us?*
>>
>> This gives us a way to avoid politicization of BIPs. This means a BIP can
>> be proposed and examined based on it?s technical merits. This levels the
>> playing field ? making the BIP process even more meritocratic than it
>> already is.
>>
>> If you want to claim credit for your BIP after it is accepted, you can
>> reveal the preimage of the author hash to prove that you were the original
>> author of the BIP. I would need to reveal my github username and ?
>> 639c28f610edcaf265b47b0679986d10af3360072b56f9b0b085ffbb4d4f440b?
>>
>> *The Future*
>> Politicization of bitcoin is only going to grow in the future. We need to
>> make sure we maintain principled money instead devolving to a system where
>> our money is based on a democratic vote ? or the votes of a select few
>> elites. We need to vet claims by ?authority figures? whether it is Jihan
>> Wu, Adam Back, Roger Ver, or Greg Maxwell. I assure you they are human ?
>> and prone to mistakes ? just like the rest of us. This seems like a simple
>> way to level the playing field.
>>
>> Thoughts?
>>
>> -Chris
>>
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
> --
> Andrew Johnson
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170318/610a02b7/attachment-0001.html>

From mm at mm-studios.com  Fri Mar 17 15:53:55 2017
From: mm at mm-studios.com (Marcos mayorga)
Date: Fri, 17 Mar 2017 15:53:55 -0000
Subject: [bitcoin-dev] Script Parser
Message-ID: <b0f3fed804a283f654a1cbc5df87ec2e.squirrel@mail.fairluck.net>

Hello,

I've notice that OP_1NEGATE cannot be parsed with the function ParseScript
in core_read.cpp, this op makes the flow reach line 88 -> throw
runtime_error("script parse error");

This is likely a bug, is it?
Thanks

M

PS: I am working with version 0.12.1



From john at seebitcoin.com  Sat Mar 18 16:01:08 2017
From: john at seebitcoin.com (John Hardy)
Date: Sat, 18 Mar 2017 16:01:08 +0000
Subject: [bitcoin-dev] Malice Reactive Proof of Work Additions (MR POWA):
 Protecting Bitcoin from malicious miners
Message-ID: <BL2PR03MB435F510935FC7E230118AD3EE380@BL2PR03MB435.namprd03.prod.outlook.com>

I?m very worried about the state of miner centralisation in Bitcoin.

I always felt the centralising effects of ASIC manufacturing would resolve themselves once the first mover advantage had been exhausted and the industry had the opportunity to mature.

I had always assumed initial centralisation would be harmless since miners have no incentive to harm the network. This does not consider the risk of a single entity with sufficient power and either poor, malicious or coerced decision making. I now believe that such centralisation poses a huge risk to the security of Bitcoin and preemptive action needs to be taken to protect the network from malicious actions by any party able to exert influence over a substantial portion of SHA256 hardware.

Inspired by UASF, I believe we should implement a Malicious miner Reactive Proof of Work Additions (MR POWA).

This would be a hard fork activated in response to a malicious attempt by a hashpower majority to introduce a contentious hard fork.

The activation would occur once a fork was detected violating protocol (likely oversize blocks) with a majority of hashpower. The threshold and duration for activation would need to be carefully considered.

I don?t think we should eliminate SHA256 as a hashing method and change POW entirely. That would be throwing the baby out with the bathwater and hurt the non-malicious miners who have invested in hardware, making it harder to gain their support.

Instead I believe we should introduce multiple new proofs of work that are already established and proven within existing altcoin implementations. As an example we could add Scrypt, Ethash and Equihash. Much of the code and mining infrastructure already exists. Diversification of hardware (a mix of CPU and memory intensive methods) would also be positive for decentralisation. Initial difficulty could simply be an estimated portion of existing infrastructure.

This example would mean 4 proofs of work with 40 minute block target difficulty for each. There could also be a rule that two different proofs of work must find a block before a method can start hashing again. This means there would only be 50% of hardware hashing at a time, and a sudden gain or drop in hashpower from a particular method does not dramatically impact the functioning of the network between difficulty adjustments. This also adds protection from attacks by the malicious SHA256 hashpower which could even be required to wait until all other methods have found a block before being allowed to hash again.

50% hashing time would mean that the cost of electricity in relation to hardware would fall by 50%, reducing some of the centralising impact of subsidised or inexpensive electricity in some regions over others.

Such a hard fork could also, counter-intuitively, introduce a block size increase since while we?re hard forking it makes sense to minimise the number of future hard forks where possible. It could also activate SegWit if it hasn?t already.

The beauty of this method is that it creates a huge risk to any malicious actor trying to abuse their position. Ideally, MR POWA would just serve as a deterrent and never activate.

If consensus were to form around a hard fork in the future nodes would be able to upgrade and MR POWA, while automatically activating on non-upgraded nodes, would be of no economic significance: a vestigial chain immediately abandoned with no miner incentive.

I think this would be a great way to help prevent malicious use of hashpower to harm the network. This is the beauty of Bitcoin: for any road block that emerges the economic majority can always find a way around.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170318/34aa05cd/attachment.html>

From andrew.johnson83 at gmail.com  Mon Mar 20 15:38:01 2017
From: andrew.johnson83 at gmail.com (Andrew Johnson)
Date: Mon, 20 Mar 2017 15:38:01 +0000
Subject: [bitcoin-dev] Malice Reactive Proof of Work Additions (MR
 POWA): Protecting Bitcoin from malicious miners
In-Reply-To: <BL2PR03MB435F510935FC7E230118AD3EE380@BL2PR03MB435.namprd03.prod.outlook.com>
References: <BL2PR03MB435F510935FC7E230118AD3EE380@BL2PR03MB435.namprd03.prod.outlook.com>
Message-ID: <CAAy62_K5ePDuvVn8=DtwJX6ek00Z_r4u9LyA0W11vgZmQ=zzDg@mail.gmail.com>

By doing this you're significantly changing the economic incentives behind
bitcoin mining. How can you reliably invest in hardware if you have no idea
when or if your profitability is going to be cut by 50-75% based on a whim?

You may also inadvertently create an entirely new attack vector if 50-75%
of the SHA256 hardware is taken offline and purchased by an entity who
intends to do harm to the network.

Bitcoin only works if most miners are honest, this has been known since the
beginning.

On Mon, Mar 20, 2017 at 9:50 AM John Hardy via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> I?m very worried about the state of miner centralisation in Bitcoin.
>
> I always felt the centralising effects of ASIC manufacturing would resolve
> themselves once the first mover advantage had been exhausted and the
> industry had the opportunity to mature.
>
> I had always assumed initial centralisation would be harmless since miners
> have no incentive to harm the network. This does not consider the risk of a
> single entity with sufficient power and either poor, malicious or coerced
> decision making. I now believe that such centralisation poses a huge risk
> to the security of Bitcoin and preemptive action needs to be taken to
> protect the network from malicious actions by any party able to exert
> influence over a substantial portion of SHA256 hardware.
>
> Inspired by UASF, I believe we should implement a Malicious miner Reactive
> Proof of Work Additions (MR POWA).
>
> This would be a hard fork activated in response to a malicious attempt by
> a hashpower majority to introduce a contentious hard fork.
>
> The activation would occur once a fork was detected violating protocol
> (likely oversize blocks) with a majority of hashpower. The threshold and
> duration for activation would need to be carefully considered.
>
> I don?t think we should eliminate SHA256 as a hashing method and change
> POW entirely. That would be throwing the baby out with the bathwater and
> hurt the non-malicious miners who have invested in hardware, making it
> harder to gain their support.
>
> Instead I believe we should introduce multiple new proofs of work that are
> already established and proven within existing altcoin implementations. As
> an example we could add Scrypt, Ethash and Equihash. Much of the code and
> mining infrastructure already exists. Diversification of hardware (a mix of
> CPU and memory intensive methods) would also be positive for
> decentralisation. Initial difficulty could simply be an estimated portion
> of existing infrastructure.
>
> This example would mean 4 proofs of work with 40 minute block target
> difficulty for each. There could also be a rule that two different proofs
> of work must find a block before a method can start hashing again. This
> means there would only be 50% of hardware hashing at a time, and a sudden
> gain or drop in hashpower from a particular method does not dramatically
> impact the functioning of the network between difficulty adjustments. This
> also adds protection from attacks by the malicious SHA256 hashpower which
> could even be required to wait until all other methods have found a block
> before being allowed to hash again.
>
> 50% hashing time would mean that the cost of electricity in relation to
> hardware would fall by 50%, reducing some of the centralising impact of
> subsidised or inexpensive electricity in some regions over others.
>
> Such a hard fork could also, counter-intuitively, introduce a block size
> increase since while we?re hard forking it makes sense to minimise the
> number of future hard forks where possible. It could also activate SegWit
> if it hasn?t already.
>
> The beauty of this method is that it creates a huge risk to any malicious
> actor trying to abuse their position. Ideally, MR POWA would just serve as
> a deterrent and never activate.
>
> If consensus were to form around a hard fork in the future nodes would be
> able to upgrade and MR POWA, while automatically activating on non-upgraded
> nodes, would be of no economic significance: a vestigial chain immediately
> abandoned with no miner incentive.
>
> I think this would be a great way to help prevent malicious use of
> hashpower to harm the network. This is the beauty of Bitcoin: for any road
> block that emerges the economic majority can always find a way around.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-- 
Andrew Johnson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170320/8083629e/attachment.html>

From john at seebitcoin.com  Mon Mar 20 15:46:28 2017
From: john at seebitcoin.com (John Hardy)
Date: Mon, 20 Mar 2017 15:46:28 +0000
Subject: [bitcoin-dev] Malice Reactive Proof of Work Additions (MR
 POWA): Protecting Bitcoin from malicious miners
In-Reply-To: <CAAy62_K5ePDuvVn8=DtwJX6ek00Z_r4u9LyA0W11vgZmQ=zzDg@mail.gmail.com>
References: <BL2PR03MB435F510935FC7E230118AD3EE380@BL2PR03MB435.namprd03.prod.outlook.com>,
	<CAAy62_K5ePDuvVn8=DtwJX6ek00Z_r4u9LyA0W11vgZmQ=zzDg@mail.gmail.com>
Message-ID: <BL2PR03MB435F8B16B15BA7E0992DCA5EE3A0@BL2PR03MB435.namprd03.prod.outlook.com>

> By doing this you're significantly changing the economic incentives behind bitcoin mining. How can you reliably invest in hardware if you have no idea when or if your profitability is going to be cut by 50-75% based on a whim?


Of course, that's why this is a last resort, successfully activated only in response to a contentious hard fork. If it succeeds just once it should help prevent the same situation occurring in the future.


> You may also inadvertently create an entirely new attack vector if 50-75% of the SHA256 hardware is taken offline and purchased by an entity who intends to do harm to the network.

How so? If you have four proof of work methods, that 50-75% of SHA256 hashpower would equate to 13-18% of total hashpower. If you can harm the network with this much hashpower bitcoin was DOA.

________________________________
From: Andrew Johnson <andrew.johnson83 at gmail.com>
Sent: Monday, March 20, 2017 3:38:01 PM
To: Bitcoin Protocol Discussion; John Hardy
Subject: Re: [bitcoin-dev] Malice Reactive Proof of Work Additions (MR POWA): Protecting Bitcoin from malicious miners

By doing this you're significantly changing the economic incentives behind bitcoin mining. How can you reliably invest in hardware if you have no idea when or if your profitability is going to be cut by 50-75% based on a whim?

You may also inadvertently create an entirely new attack vector if 50-75% of the SHA256 hardware is taken offline and purchased by an entity who intends to do harm to the network.

Bitcoin only works if most miners are honest, this has been known since the beginning.

On Mon, Mar 20, 2017 at 9:50 AM John Hardy via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:

I?m very worried about the state of miner centralisation in Bitcoin.

I always felt the centralising effects of ASIC manufacturing would resolve themselves once the first mover advantage had been exhausted and the industry had the opportunity to mature.

I had always assumed initial centralisation would be harmless since miners have no incentive to harm the network. This does not consider the risk of a single entity with sufficient power and either poor, malicious or coerced decision making. I now believe that such centralisation poses a huge risk to the security of Bitcoin and preemptive action needs to be taken to protect the network from malicious actions by any party able to exert influence over a substantial portion of SHA256 hardware.

Inspired by UASF, I believe we should implement a Malicious miner Reactive Proof of Work Additions (MR POWA).

This would be a hard fork activated in response to a malicious attempt by a hashpower majority to introduce a contentious hard fork.

The activation would occur once a fork was detected violating protocol (likely oversize blocks) with a majority of hashpower. The threshold and duration for activation would need to be carefully considered.

I don?t think we should eliminate SHA256 as a hashing method and change POW entirely. That would be throwing the baby out with the bathwater and hurt the non-malicious miners who have invested in hardware, making it harder to gain their support.

Instead I believe we should introduce multiple new proofs of work that are already established and proven within existing altcoin implementations. As an example we could add Scrypt, Ethash and Equihash. Much of the code and mining infrastructure already exists. Diversification of hardware (a mix of CPU and memory intensive methods) would also be positive for decentralisation. Initial difficulty could simply be an estimated portion of existing infrastructure.

This example would mean 4 proofs of work with 40 minute block target difficulty for each. There could also be a rule that two different proofs of work must find a block before a method can start hashing again. This means there would only be 50% of hardware hashing at a time, and a sudden gain or drop in hashpower from a particular method does not dramatically impact the functioning of the network between difficulty adjustments. This also adds protection from attacks by the malicious SHA256 hashpower which could even be required to wait until all other methods have found a block before being allowed to hash again.

50% hashing time would mean that the cost of electricity in relation to hardware would fall by 50%, reducing some of the centralising impact of subsidised or inexpensive electricity in some regions over others.

Such a hard fork could also, counter-intuitively, introduce a block size increase since while we?re hard forking it makes sense to minimise the number of future hard forks where possible. It could also activate SegWit if it hasn?t already.

The beauty of this method is that it creates a huge risk to any malicious actor trying to abuse their position. Ideally, MR POWA would just serve as a deterrent and never activate.

If consensus were to form around a hard fork in the future nodes would be able to upgrade and MR POWA, while automatically activating on non-upgraded nodes, would be of no economic significance: a vestigial chain immediately abandoned with no miner incentive.

I think this would be a great way to help prevent malicious use of hashpower to harm the network. This is the beauty of Bitcoin: for any road block that emerges the economic majority can always find a way around.

_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
--
Andrew Johnson

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170320/f7748943/attachment-0001.html>

From mm at mm-studios.com  Mon Mar 20 15:55:41 2017
From: mm at mm-studios.com (Marcos mayorga)
Date: Mon, 20 Mar 2017 15:55:41 -0000
Subject: [bitcoin-dev] Malice Reactive Proof of Work Additions (MR
 POWA): Protecting Bitcoin from malicious miners
In-Reply-To: <CAAy62_K5ePDuvVn8=DtwJX6ek00Z_r4u9LyA0W11vgZmQ=zzDg@mail.gmail.com>
References: <BL2PR03MB435F510935FC7E230118AD3EE380@BL2PR03MB435.namprd03.prod.outlook.com>
	<CAAy62_K5ePDuvVn8=DtwJX6ek00Z_r4u9LyA0W11vgZmQ=zzDg@mail.gmail.com>
Message-ID: <0690791a46d7a7699fc3427e92a76e9b.squirrel@mail.fairluck.net>

Hi,
Just a thought,
Bitcoin developers shouldn't care about miners business model, they can
always sell their hw and close the bz as soon as bitcoin hardforks to
better ways of doing.
Just focus on making a better cryptocurrency, the more decentralized the
best.

M

> By doing this you're significantly changing the economic incentives behind
> bitcoin mining. How can you reliably invest in hardware if you have no
> idea
> when or if your profitability is going to be cut by 50-75% based on a
> whim?
>
> You may also inadvertently create an entirely new attack vector if 50-75%
> of the SHA256 hardware is taken offline and purchased by an entity who
> intends to do harm to the network.
>
> Bitcoin only works if most miners are honest, this has been known since
> the
> beginning.
>
> On Mon, Mar 20, 2017 at 9:50 AM John Hardy via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> I???m very worried about the state of miner centralisation in Bitcoin.
>>
>> I always felt the centralising effects of ASIC manufacturing would
>> resolve
>> themselves once the first mover advantage had been exhausted and the
>> industry had the opportunity to mature.
>>
>> I had always assumed initial centralisation would be harmless since
>> miners
>> have no incentive to harm the network. This does not consider the risk
>> of a
>> single entity with sufficient power and either poor, malicious or
>> coerced
>> decision making. I now believe that such centralisation poses a huge
>> risk
>> to the security of Bitcoin and preemptive action needs to be taken to
>> protect the network from malicious actions by any party able to exert
>> influence over a substantial portion of SHA256 hardware.
>>
>> Inspired by UASF, I believe we should implement a Malicious miner
>> Reactive
>> Proof of Work Additions (MR POWA).
>>
>> This would be a hard fork activated in response to a malicious attempt
>> by
>> a hashpower majority to introduce a contentious hard fork.
>>
>> The activation would occur once a fork was detected violating protocol
>> (likely oversize blocks) with a majority of hashpower. The threshold and
>> duration for activation would need to be carefully considered.
>>
>> I don???t think we should eliminate SHA256 as a hashing method and
>> change
>> POW entirely. That would be throwing the baby out with the bathwater and
>> hurt the non-malicious miners who have invested in hardware, making it
>> harder to gain their support.
>>
>> Instead I believe we should introduce multiple new proofs of work that
>> are
>> already established and proven within existing altcoin implementations.
>> As
>> an example we could add Scrypt, Ethash and Equihash. Much of the code
>> and
>> mining infrastructure already exists. Diversification of hardware (a mix
>> of
>> CPU and memory intensive methods) would also be positive for
>> decentralisation. Initial difficulty could simply be an estimated
>> portion
>> of existing infrastructure.
>>
>> This example would mean 4 proofs of work with 40 minute block target
>> difficulty for each. There could also be a rule that two different
>> proofs
>> of work must find a block before a method can start hashing again. This
>> means there would only be 50% of hardware hashing at a time, and a
>> sudden
>> gain or drop in hashpower from a particular method does not dramatically
>> impact the functioning of the network between difficulty adjustments.
>> This
>> also adds protection from attacks by the malicious SHA256 hashpower
>> which
>> could even be required to wait until all other methods have found a
>> block
>> before being allowed to hash again.
>>
>> 50% hashing time would mean that the cost of electricity in relation to
>> hardware would fall by 50%, reducing some of the centralising impact of
>> subsidised or inexpensive electricity in some regions over others.
>>
>> Such a hard fork could also, counter-intuitively, introduce a block size
>> increase since while we???re hard forking it makes sense to minimise the
>> number of future hard forks where possible. It could also activate
>> SegWit
>> if it hasn???t already.
>>
>> The beauty of this method is that it creates a huge risk to any
>> malicious
>> actor trying to abuse their position. Ideally, MR POWA would just serve
>> as
>> a deterrent and never activate.
>>
>> If consensus were to form around a hard fork in the future nodes would
>> be
>> able to upgrade and MR POWA, while automatically activating on
>> non-upgraded
>> nodes, would be of no economic significance: a vestigial chain
>> immediately
>> abandoned with no miner incentive.
>>
>> I think this would be a great way to help prevent malicious use of
>> hashpower to harm the network. This is the beauty of Bitcoin: for any
>> road
>> block that emerges the economic majority can always find a way around.
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
> --
> Andrew Johnson
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>



From bram at bittorrent.com  Mon Mar 20 17:49:59 2017
From: bram at bittorrent.com (Bram Cohen)
Date: Mon, 20 Mar 2017 10:49:59 -0700
Subject: [bitcoin-dev] Malice Reactive Proof of Work Additions (MR
 POWA): Protecting Bitcoin from malicious miners
In-Reply-To: <BL2PR03MB435F510935FC7E230118AD3EE380@BL2PR03MB435.namprd03.prod.outlook.com>
References: <BL2PR03MB435F510935FC7E230118AD3EE380@BL2PR03MB435.namprd03.prod.outlook.com>
Message-ID: <CA+KqGkpc5DVe75g8M9=MnCGCPO4vnHdHXeZx4T3n7GMCK6MoEw@mail.gmail.com>

It's possible to switch PoW algorithms with a soft fork rather than a hard
fork. You make it so that there are two different PoWs, the old one and the
new one, and each old-style block has to reference a new-style block and
contain the exact same transactions. The new work rule is that the weighted
geometric mean of the quality of the new-style block and the old-style
block has to exceed the work threshold, with the weighting starting almost
entirely on the old-style block and shifting gradually over to the
new-style block until in the end the amount of work to generate the
old-style block is completely trivial and doesn't matter any more.

The most interesting part of the whole thing is keeping it so that the new
work limit is consistently the limiting factor on mining difficulty rather
than the old one interfering. Getting that to work right is an interesting
problem which I'm not sure how to do off the top of my head but I believe
is manageable.

Using many PoWs is a bad idea, that generally gets the worst of everything
rather than the best. There are two ways to go with a PoW, either make it
as advantaged on custom hardware as possible, which means sha3, or make it
as difficult to ASIC as possible, which at this point means cuckoo since
there's already hardware for equihash.

On Sat, Mar 18, 2017 at 9:01 AM, John Hardy via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> I?m very worried about the state of miner centralisation in Bitcoin.
>
> I always felt the centralising effects of ASIC manufacturing would resolve
> themselves once the first mover advantage had been exhausted and the
> industry had the opportunity to mature.
>
> I had always assumed initial centralisation would be harmless since miners
> have no incentive to harm the network. This does not consider the risk of a
> single entity with sufficient power and either poor, malicious or coerced
> decision making. I now believe that such centralisation poses a huge risk
> to the security of Bitcoin and preemptive action needs to be taken to
> protect the network from malicious actions by any party able to exert
> influence over a substantial portion of SHA256 hardware.
>
> Inspired by UASF, I believe we should implement a Malicious miner Reactive
> Proof of Work Additions (MR POWA).
>
> This would be a hard fork activated in response to a malicious attempt by
> a hashpower majority to introduce a contentious hard fork.
>
> The activation would occur once a fork was detected violating protocol
> (likely oversize blocks) with a majority of hashpower. The threshold and
> duration for activation would need to be carefully considered.
>
> I don?t think we should eliminate SHA256 as a hashing method and change
> POW entirely. That would be throwing the baby out with the bathwater and
> hurt the non-malicious miners who have invested in hardware, making it
> harder to gain their support.
>
> Instead I believe we should introduce multiple new proofs of work that are
> already established and proven within existing altcoin implementations. As
> an example we could add Scrypt, Ethash and Equihash. Much of the code and
> mining infrastructure already exists. Diversification of hardware (a mix of
> CPU and memory intensive methods) would also be positive for
> decentralisation. Initial difficulty could simply be an estimated portion
> of existing infrastructure.
>
> This example would mean 4 proofs of work with 40 minute block target
> difficulty for each. There could also be a rule that two different proofs
> of work must find a block before a method can start hashing again. This
> means there would only be 50% of hardware hashing at a time, and a sudden
> gain or drop in hashpower from a particular method does not dramatically
> impact the functioning of the network between difficulty adjustments. This
> also adds protection from attacks by the malicious SHA256 hashpower which
> could even be required to wait until all other methods have found a block
> before being allowed to hash again.
>
> 50% hashing time would mean that the cost of electricity in relation to
> hardware would fall by 50%, reducing some of the centralising impact of
> subsidised or inexpensive electricity in some regions over others.
>
> Such a hard fork could also, counter-intuitively, introduce a block size
> increase since while we?re hard forking it makes sense to minimise the
> number of future hard forks where possible. It could also activate SegWit
> if it hasn?t already.
>
> The beauty of this method is that it creates a huge risk to any malicious
> actor trying to abuse their position. Ideally, MR POWA would just serve as
> a deterrent and never activate.
>
> If consensus were to form around a hard fork in the future nodes would be
> able to upgrade and MR POWA, while automatically activating on non-upgraded
> nodes, would be of no economic significance: a vestigial chain immediately
> abandoned with no miner incentive.
>
> I think this would be a great way to help prevent malicious use of
> hashpower to harm the network. This is the beauty of Bitcoin: for any road
> block that emerges the economic majority can always find a way around.
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170320/2d622ba2/attachment.html>

From nickodell at gmail.com  Mon Mar 20 18:02:52 2017
From: nickodell at gmail.com (Nick ODell)
Date: Mon, 20 Mar 2017 12:02:52 -0600
Subject: [bitcoin-dev] Malice Reactive Proof of Work Additions (MR
 POWA): Protecting Bitcoin from malicious miners
In-Reply-To: <CAAy62_K5ePDuvVn8=DtwJX6ek00Z_r4u9LyA0W11vgZmQ=zzDg@mail.gmail.com>
References: <BL2PR03MB435F510935FC7E230118AD3EE380@BL2PR03MB435.namprd03.prod.outlook.com>
	<CAAy62_K5ePDuvVn8=DtwJX6ek00Z_r4u9LyA0W11vgZmQ=zzDg@mail.gmail.com>
Message-ID: <CANN4kmdMcbQ9pYC44a02+wzzVzoMt8n5TAL=Z3bRaBkT_6Vnpg@mail.gmail.com>

Chain work currently means the expected number of sha256d evaluations
needed to build a chain. Given that these hash functions are not equally
hard, what should the new definition of chain work be?

On Mon, Mar 20, 2017 at 9:38 AM, Andrew Johnson via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> By doing this you're significantly changing the economic incentives behind
> bitcoin mining. How can you reliably invest in hardware if you have no idea
> when or if your profitability is going to be cut by 50-75% based on a whim?
>
> You may also inadvertently create an entirely new attack vector if 50-75%
> of the SHA256 hardware is taken offline and purchased by an entity who
> intends to do harm to the network.
>
> Bitcoin only works if most miners are honest, this has been known since
> the beginning.
>
> On Mon, Mar 20, 2017 at 9:50 AM John Hardy via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> I?m very worried about the state of miner centralisation in Bitcoin.
>>
>> I always felt the centralising effects of ASIC manufacturing would
>> resolve themselves once the first mover advantage had been exhausted and
>> the industry had the opportunity to mature.
>>
>> I had always assumed initial centralisation would be harmless since
>> miners have no incentive to harm the network. This does not consider the
>> risk of a single entity with sufficient power and either poor, malicious or
>> coerced decision making. I now believe that such centralisation poses a
>> huge risk to the security of Bitcoin and preemptive action needs to be
>> taken to protect the network from malicious actions by any party able to
>> exert influence over a substantial portion of SHA256 hardware.
>>
>> Inspired by UASF, I believe we should implement a Malicious miner
>> Reactive Proof of Work Additions (MR POWA).
>>
>> This would be a hard fork activated in response to a malicious attempt by
>> a hashpower majority to introduce a contentious hard fork.
>>
>> The activation would occur once a fork was detected violating protocol
>> (likely oversize blocks) with a majority of hashpower. The threshold and
>> duration for activation would need to be carefully considered.
>>
>> I don?t think we should eliminate SHA256 as a hashing method and change
>> POW entirely. That would be throwing the baby out with the bathwater and
>> hurt the non-malicious miners who have invested in hardware, making it
>> harder to gain their support.
>>
>> Instead I believe we should introduce multiple new proofs of work that
>> are already established and proven within existing altcoin implementations.
>> As an example we could add Scrypt, Ethash and Equihash. Much of the code
>> and mining infrastructure already exists. Diversification of hardware (a
>> mix of CPU and memory intensive methods) would also be positive for
>> decentralisation. Initial difficulty could simply be an estimated portion
>> of existing infrastructure.
>>
>> This example would mean 4 proofs of work with 40 minute block target
>> difficulty for each. There could also be a rule that two different proofs
>> of work must find a block before a method can start hashing again. This
>> means there would only be 50% of hardware hashing at a time, and a sudden
>> gain or drop in hashpower from a particular method does not dramatically
>> impact the functioning of the network between difficulty adjustments. This
>> also adds protection from attacks by the malicious SHA256 hashpower which
>> could even be required to wait until all other methods have found a block
>> before being allowed to hash again.
>>
>> 50% hashing time would mean that the cost of electricity in relation to
>> hardware would fall by 50%, reducing some of the centralising impact of
>> subsidised or inexpensive electricity in some regions over others.
>>
>> Such a hard fork could also, counter-intuitively, introduce a block size
>> increase since while we?re hard forking it makes sense to minimise the
>> number of future hard forks where possible. It could also activate SegWit
>> if it hasn?t already.
>>
>> The beauty of this method is that it creates a huge risk to any malicious
>> actor trying to abuse their position. Ideally, MR POWA would just serve as
>> a deterrent and never activate.
>>
>> If consensus were to form around a hard fork in the future nodes would be
>> able to upgrade and MR POWA, while automatically activating on non-upgraded
>> nodes, would be of no economic significance: a vestigial chain immediately
>> abandoned with no miner incentive.
>>
>> I think this would be a great way to help prevent malicious use of
>> hashpower to harm the network. This is the beauty of Bitcoin: for any road
>> block that emerges the economic majority can always find a way around.
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
> --
> Andrew Johnson
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170320/873357b6/attachment-0001.html>

From david.vorick at gmail.com  Mon Mar 20 18:51:51 2017
From: david.vorick at gmail.com (David Vorick)
Date: Mon, 20 Mar 2017 14:51:51 -0400
Subject: [bitcoin-dev] Malice Reactive Proof of Work Additions (MR
 POWA): Protecting Bitcoin from malicious miners
In-Reply-To: <CANN4kmdMcbQ9pYC44a02+wzzVzoMt8n5TAL=Z3bRaBkT_6Vnpg@mail.gmail.com>
References: <BL2PR03MB435F510935FC7E230118AD3EE380@BL2PR03MB435.namprd03.prod.outlook.com>
	<CAAy62_K5ePDuvVn8=DtwJX6ek00Z_r4u9LyA0W11vgZmQ=zzDg@mail.gmail.com>
	<CANN4kmdMcbQ9pYC44a02+wzzVzoMt8n5TAL=Z3bRaBkT_6Vnpg@mail.gmail.com>
Message-ID: <CAFVRnyrsH_Oh2XXzRf9P5shysw4ah6AGmHhNyJ582AAhnDcaTw@mail.gmail.com>

I am in support of having multiple PoW forks to choose from, but it is
indeed problematic to have one chain running a rotation of algorithms.

The reason I support multiple algos is because we don't want an attacker
secretly making asics ahead of time in the event of an emergency PoW fork.
We want them to be uncertain which of a large selection of algorithms are
going to be used, making pre-emptive asic manufacturing more difficult.

But once an algorithm is chosen that should be the end of the story, just
one algo without rotation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170320/ceaa8c60/attachment.html>

From martin at stolze.cc  Mon Mar 20 20:12:36 2017
From: martin at stolze.cc (Martin Stolze)
Date: Mon, 20 Mar 2017 20:12:36 +0000
Subject: [bitcoin-dev] Inquiry: Transaction Tiering
Message-ID: <CAOyfL0oQrHzDmHBnWo0pTdbVU7acnsLmikTh9NU_u6HnhT4VCw@mail.gmail.com>

Hi Team,
I would like to find out what the current consensus on transaction tiering is.

Background: The current protocol enables two parties to transact
freely, however, transaction processors (block generators) have the
authority to discriminate participants arbitrarily. This is well known
and it is widely accepted that transaction processors may take
advantage of this with little recourse. It is the current consensus
that the economic incentives in form of transaction fees are
sufficient because the transaction processing authorities are assumed
to be guided by the growth of Bitcoin and the pursuit of profit.

We can establish that a transaction processing authority does not need
to actually process transactions and reigns sovereign over the block
space they govern. [1] For further discussion I will refer to a
transaction processor more aptly as "Block Space Authority" (BSA).

Currently, a user can only signal to all BSA?s (via the mempool) its
desire to include her transaction into the ledger. A user can not
signal to specific BSA?s, and thus, can not easily carry out business
in jurisdictions that conform to the users understanding of best
practice.

As a participant in the economy in general and of Bitcoin in
particular, I desire an ability to decide where I transact. The
current state of Bitcoin does not allow me to choose my place of
business. As a consequence, I try to learn what would be the best way
to conduct my business in good faith. [2]

I have certain minimum requirements towards the constitution of the
block space like transparency, forward guidance and risk management.
More poignantly, it could also include due diligence to ensure that
child labor is not involved in the maintenance of a specific block
space, or that the specific block space does not utilize nuclear
energy or sources at least 80% of the expended energy from solar
power. Obviously, preferences can vary widely.

I don?t think there is any way to discard the desire of users to
choose their place of business, especially under the consideration
that BSA?s have the discretion to choose users transactions already.
I have identified the following options along the lines of Lawrence
Lessig's concept of Cyberspace: [3]

1. Law: Bilateral Agreement

Users engage directly with BSA?s to process their transaction.
Transactions are routed around the mempool. A likely outcome of this
solution is the emergence of brokers that sell off block space in a
sort of secondary market. Wallets may negotiate on behalf of their
users. This model has obvious downsides as it involves new middlemen,
increases transaction cost beyond the current market price
(speculation) and potentially reduces performance.

2. Architecture: Remove transaction fees

If only the block reward functions to incentivise transaction
processing, no differentiation is useful. However, spam/empty blocks
could not be prevented and Bitcoin would have to be entirely
redesigned, potentially losing its censorship resistance.

3. Market: Direct Communication

Through the core client, BSA?s can offer individual mempools that
users can choose to advertise their transactions to. Different BSA?s
could receive different transaction fees for the same transaction in
their respective mempool to reflect the preference of the user.

In Conclusion: In the long term, it is likely that a clearer
differentiation of BSA?s will become important. Today, BSA?s
communicate rarely and it appears that their raison d'etre is not
necessarily motivated by good faith towards Bitcoin as a whole. [4] As
we move forward it is not just important to attract opportunistic
players that win an individual game but good players that are invited
to play again in order to win a set of all possible games.

BSA?s establish their authority on cheap access to capital in the form
of electricity and hardware and the consent and trust of users who
expect BSA's to respect and maintain the ledgers integrity.

In 3 to 8 years, when Bitcoin leaves it?s bootstrapping phase, the
incentives will squarely fall on the later. [5] Subsequently it seems
prudent to allow BSA?s to compete for business on other factors than
price.

Hence my question: What is the current stance of core developers
regarding the facilitation of direct communication between users and
BSA?s, possibly through a transaction tiering model?

Sincerely,
Martin Stolze

[1] BSA rules sovereign: (https://twitter.com/JihanWu/status/704476839566135298)
[2] No direct attribution but solid foundation for business logic
since 1899: ?242 ff BGB
(https://www.gesetze-im-internet.de/englisch_bgb/englisch_bgb.html#p0726)
[3] Lessig, Code. "And Other Laws of Cyberspace, Version 2.0." (2006).
[4] The pursuit of profit can come at the expense of Bitcoin:
(https://twitter.com/ToneVays/status/835233366203072513)
[5] Satoshi Nakamoto: "Once a predetermined number of coins have
entered circulation, the incentive can transition entirely to
transaction fees [...]"

From john at seebitcoin.com  Mon Mar 20 21:23:17 2017
From: john at seebitcoin.com (John Hardy)
Date: Mon, 20 Mar 2017 21:23:17 +0000
Subject: [bitcoin-dev] Malice Reactive Proof of Work Additions (MR
 POWA): Protecting Bitcoin from malicious miners
In-Reply-To: <CA+KqGkpc5DVe75g8M9=MnCGCPO4vnHdHXeZx4T3n7GMCK6MoEw@mail.gmail.com>
References: <BL2PR03MB435F510935FC7E230118AD3EE380@BL2PR03MB435.namprd03.prod.outlook.com>,
	<CA+KqGkpc5DVe75g8M9=MnCGCPO4vnHdHXeZx4T3n7GMCK6MoEw@mail.gmail.com>
Message-ID: <BL2PR03MB435E077052146EA1706A5A9EE3A0@BL2PR03MB435.namprd03.prod.outlook.com>

> It's possible to switch PoW algorithms with a soft fork rather than a hard fork.


You put forward an interesting idea if it could work, but in the adversarial emergency where an entity is contentiously using a POW monopoly, a hard fork would likely be a far easier and more efficient response.


That said unless I'm missing something I can't see how it would work without still requiring a hard fork since you still need an SHA256 block of sufficient difficulty for the existing network to accept. If the holders of SHA256 hardware didn't want to make their equipment obsolete (likely) they simply would refuse to mine these alternate PoW blocks. I guess a UASF would be an option to force this, but without co-operation (Turkeys voting for Christmas is the British idiom) you'd still end up requiring a hard fork proof of difficulty change, which kind of defeats the purpose?


> Using many PoWs is a bad idea, that generally gets the worst of everything rather than the best.


Upon what do you base this assertion?


________________________________
From: Bram Cohen <bram at bittorrent.com>
Sent: Monday, March 20, 2017 5:49:59 PM
To: John Hardy; Bitcoin Protocol Discussion
Subject: Re: [bitcoin-dev] Malice Reactive Proof of Work Additions (MR POWA): Protecting Bitcoin from malicious miners

It's possible to switch PoW algorithms with a soft fork rather than a hard fork. You make it so that there are two different PoWs, the old one and the new one, and each old-style block has to reference a new-style block and contain the exact same transactions. The new work rule is that the weighted geometric mean of the quality of the new-style block and the old-style block has to exceed the work threshold, with the weighting starting almost entirely on the old-style block and shifting gradually over to the new-style block until in the end the amount of work to generate the old-style block is completely trivial and doesn't matter any more.

The most interesting part of the whole thing is keeping it so that the new work limit is consistently the limiting factor on mining difficulty rather than the old one interfering. Getting that to work right is an interesting problem which I'm not sure how to do off the top of my head but I believe is manageable.

Using many PoWs is a bad idea, that generally gets the worst of everything rather than the best. There are two ways to go with a PoW, either make it as advantaged on custom hardware as possible, which means sha3, or make it as difficult to ASIC as possible, which at this point means cuckoo since there's already hardware for equihash.

On Sat, Mar 18, 2017 at 9:01 AM, John Hardy via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:

I?m very worried about the state of miner centralisation in Bitcoin.

I always felt the centralising effects of ASIC manufacturing would resolve themselves once the first mover advantage had been exhausted and the industry had the opportunity to mature.

I had always assumed initial centralisation would be harmless since miners have no incentive to harm the network. This does not consider the risk of a single entity with sufficient power and either poor, malicious or coerced decision making. I now believe that such centralisation poses a huge risk to the security of Bitcoin and preemptive action needs to be taken to protect the network from malicious actions by any party able to exert influence over a substantial portion of SHA256 hardware.

Inspired by UASF, I believe we should implement a Malicious miner Reactive Proof of Work Additions (MR POWA).

This would be a hard fork activated in response to a malicious attempt by a hashpower majority to introduce a contentious hard fork.

The activation would occur once a fork was detected violating protocol (likely oversize blocks) with a majority of hashpower. The threshold and duration for activation would need to be carefully considered.

I don?t think we should eliminate SHA256 as a hashing method and change POW entirely. That would be throwing the baby out with the bathwater and hurt the non-malicious miners who have invested in hardware, making it harder to gain their support.

Instead I believe we should introduce multiple new proofs of work that are already established and proven within existing altcoin implementations. As an example we could add Scrypt, Ethash and Equihash. Much of the code and mining infrastructure already exists. Diversification of hardware (a mix of CPU and memory intensive methods) would also be positive for decentralisation. Initial difficulty could simply be an estimated portion of existing infrastructure.

This example would mean 4 proofs of work with 40 minute block target difficulty for each. There could also be a rule that two different proofs of work must find a block before a method can start hashing again. This means there would only be 50% of hardware hashing at a time, and a sudden gain or drop in hashpower from a particular method does not dramatically impact the functioning of the network between difficulty adjustments. This also adds protection from attacks by the malicious SHA256 hashpower which could even be required to wait until all other methods have found a block before being allowed to hash again.

50% hashing time would mean that the cost of electricity in relation to hardware would fall by 50%, reducing some of the centralising impact of subsidised or inexpensive electricity in some regions over others.

Such a hard fork could also, counter-intuitively, introduce a block size increase since while we?re hard forking it makes sense to minimise the number of future hard forks where possible. It could also activate SegWit if it hasn?t already.

The beauty of this method is that it creates a huge risk to any malicious actor trying to abuse their position. Ideally, MR POWA would just serve as a deterrent and never activate.

If consensus were to form around a hard fork in the future nodes would be able to upgrade and MR POWA, while automatically activating on non-upgraded nodes, would be of no economic significance: a vestigial chain immediately abandoned with no miner incentive.

I think this would be a great way to help prevent malicious use of hashpower to harm the network. This is the beauty of Bitcoin: for any road block that emerges the economic majority can always find a way around.

_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170320/0d8e9f95/attachment-0001.html>

From pieter.wuille at gmail.com  Mon Mar 20 21:35:08 2017
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Mon, 20 Mar 2017 14:35:08 -0700
Subject: [bitcoin-dev] A BIP proposal for segwit addresses
Message-ID: <CAPg+sBh0sFA7b6a+48Oojwy655GB9W6Th8JiCpd+2ruQjPev8Q@mail.gmail.com>

Hello everyone,

I'd like to propose a new BIP for native segwit addresses to replace
BIP 142. These addresses are not required for segwit, but are more
efficient, flexible, and nicer to use.

The format is base 32 and uses a simple checksum algorithm with strong
error detection properties. Reference code in several languages as
well as a website demonstrating it are included.

You can find the text here:
https://github.com/sipa/bech32/blob/master/bip-witaddr.mediawiki

Cheers,

-- 
Pieter

From kanzure at gmail.com  Mon Mar 20 22:36:04 2017
From: kanzure at gmail.com (Bryan Bishop)
Date: Mon, 20 Mar 2017 17:36:04 -0500
Subject: [bitcoin-dev] Fwd: [Mimblewimble] Lightning in Scriptless Scripts
In-Reply-To: <20170320221101.GC10783@boulet.lan>
References: <20170320221101.GC10783@boulet.lan>
Message-ID: <CABaSBaw5+uVpRT=KtZwB2-pE4Wcoh3e=BqMiJzsyy+7JPJRy_w@mail.gmail.com>

---------- Forwarded message ----------
From: Andrew Poelstra <apoelstra at wpsoftware.net>
Date: Mon, Mar 20, 2017 at 5:11 PM
Subject: [Mimblewimble] Lightning in Scriptless Scripts
To: mimblewimble at lists.launchpad.net





In my last post about scriptless scripts [2] I described a way to do
deniable atomic swaps by pre-sharing a difference of signatures. This
had the limitation that it required at least one party to be shared
between the signatures, allowed only pairwise linking, and required
both signatures to cover data that is known at the time of setup.
Linking a multi-hop Lightning channel with these constraints has proved
difficult.

* * *

Recently I've found a different construction that behaves much more like
a hash preimage challenge, and this can actually be used for Lightning.
Further, it supports reblinding, so you can learn a preimage but hide
which one you're looking for. (Ethan, one might actually overlap with
TumbleBit, sorry :)).

It works like this. We'll treat x -> xG as a hash function, so x is the
preimage of xG. There are two separate but related things I can do: (a)
construct a signature which reveals the preimage; or (b) create a
"pre-signature" which can be turned into a signature with the help of
the preimage.

Here's how it works: suppose I send xG to Rusty and he wants to send
me coins conditional on my sending him x. Lets say I have key P1 and
nonce R1; he has key P2 and nonce R2. Together we're going to make a
multisignature with key P1 + P2 and Rusty is going to set things up
so that I can't complete the signature without telling him x.

Here we go.

  0. We agree somehow on R1, R2, P1, P2.

  1. We can both compute a challenge e = H(P1 + P2 || R1 + R2 || tx).

  2. I send s' = k1 - x - x1e, where R1 = k1G and P1 = x1G. Note he
     can verify I did so with the equation s'G = R1 - xG - eP1.

  3. He now sends me s2 = k2 - x2e, which is his half of the multisig.

  4. I complete the sig by adding s1 = k1 - x1e. The final sig is
     (s1 + s2, R1 + R2).

Now as soon as this signature gets out, I can compute x = s1 - s'.

* * *

Ok, pretty nifty. But now suppose Rusty wants to receive coins conditioned
on him revealing x, say, because he's a middle hop in a Lightning channel.
You might think he could act the same as I did in step (2), computing
s' = k1 - x - x1e, but actually he can't, because he doesn't know x himself!
All good. Instead he does the following.

To put names on things, let's say he's taking coins from Tadge. The
protocol is almost the same as above.

  0. They agree somehow on R1, R2, P1, P2. Tadge's key and nonce are
     R1 and P1, but there's a catch: P1 = x1G as before, but now
     R1 - xG = k1G. That is, his nonce is offset by k1G.

  1. They can both compute a challenge e = H(P1 + P2 || R1 + R2 || tx).

  2. Tadge sends the "presignature" s' = k1 - x1e. Rusty can verify this
     with the equation s'G = R1 - xG - eP1.

  3. Now whenever Rusty obtains x, he can compute s1 = s' - x, which is
     Tadge's half of the final signature.

  4. Rusty computes s2 himself and completes the signature.

* * *

Ok, even cooler. But the real Rusty complained about these stories, saying
that it's a privacy leak for him to use the same xG with me as he used with
Tadge. In a onion-routed Lightning channel, this xG-reuse would let all
any two participants in a path figure out that they were in one path, if
they were colluding, even if they weren't directly connected.

No worries, we can fix this very simply. Rusty chooses a reblinding factor
rG. I give him x, as before, but what Tadge demands from him is (x + r).
(I give xG to Rusty as a challenge; he forwards this as xG + rG to Tadge.)
Since Rusty knows r he's able to do the translation. The two challenges
appear uniformly independently random to any observers.

* * *

Let's put this together into my understanding of how Lightning is supposed
to work. Suppose Andrew is trying to send coins to Drew, through Bob and
Carol. He constructs a path

  A --> B --> C --> D

where each arrow is a Lightning channel. Only Andrew knows the complete
path, and is onion-encrypting his connections to each participant (who
know the next and previous participants, but that's it).

He obtains a challenge T = xG from D, and reblinding factors U and V
from B and C. Using the above tricks,

  1. A sends coins to B contingent on him learning the discrete logarithm
     of T + U + V.

  2. B sends coins to C contingent on him learning the discrete logarithm
     of T + V. (He knows the discrete log of U, so this is sufficient for
     him to meet Andrew's challenge.)

  3. C sends to D contingent on him learning the discrete log of T, which
     is D's original challenge. Again, because C knows the discrete log
     of V, this is sufficient for her to meet B's challenge.

The resulting path consists of transactions which are signed with single
uniformly random independent Schnorr signatures. Even though they're all
part of an atomic Lightning path.

* * *

Note that the s' values need to be re-communicated every time the
transaction
changes (as does the nonce). Because it depends on the other party's nonce,
this might require an additional round of interaction per channel update.

Note also that nothing I've said depends at all on what's being signed. This
means this works just as well for MimbleWimble as it would for
Bitcoin+Schnorr
as it would for Monero (with a multisig ring-CT construction) as it would
for Ethereum+Schnorr. Further, it can link transactions across chains.


I'm very excited about this.

Cheers
Andrew


[1] https://lists.launchpad.net/mimblewimble/msg00036.html




--
Andrew Poelstra
Mathematics Department, Blockstream
Email: apoelstra at wpsoftware.net
Web:   https://www.wpsoftware.net/andrew

"A goose alone, I suppose, can know the loneliness of geese
 who can never find their peace,
 whether north or south or west or east"
       --Joanna Newsom


--
Mailing list: https://launchpad.net/~mimblewimble
Post to     : mimblewimble at lists.launchpad.net
Unsubscribe : https://launchpad.net/~mimblewimble
More help   : https://help.launchpad.net/ListHelp




-- 
- Bryan
http://heybryan.org/
1 512 203 0507
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170320/4b59a31e/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 464 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170320/4b59a31e/attachment.sig>

From simon at bitcartel.com  Tue Mar 21 02:47:31 2017
From: simon at bitcartel.com (Simon Liu)
Date: Mon, 20 Mar 2017 19:47:31 -0700
Subject: [bitcoin-dev] Bitcoin and CVEs
Message-ID: <cb4932bb-6fd0-0a03-6224-fd20b6cb3539@bitcartel.com>

Hi,

Are there are any vulnerabilities in Bitcoin which have been fixed but
not yet publicly disclosed?  Is the following list of Bitcoin CVEs
up-to-date?

https://en.bitcoin.it/wiki/Common_Vulnerabilities_and_Exposures

There have been no new CVEs posted for almost three years, except for
CVE-2015-3641, but there appears to be no information publicly available
for that issue:

https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-3641

It would be of great benefit to end users if the community of clients
and altcoins derived from Bitcoin Core could be patched for any known
vulnerabilities.

Does anyone keep track of security related bugs and patches, where the
defect severity is similar to those found on the CVE list above?  If
yes, can that list be shared with other developers?

If some fixes have been committed with discreet log messages, it will be
difficult for third parties to identify and assess the importance of any
critical patches.  Do any important ones come to mind?

Finally, curious to know, what has changed since 2014 that has resulted
in the defect rate, at least based on the list of publicly reported
CVEs, to fall to zero?  A change to the development process?
Introduction of a bug bounty?

Best Regards,

Simon


From tim.ruffing at mmci.uni-saarland.de  Tue Mar 21 15:18:26 2017
From: tim.ruffing at mmci.uni-saarland.de (Tim Ruffing)
Date: Tue, 21 Mar 2017 16:18:26 +0100
Subject: [bitcoin-dev] Inquiry: Transaction Tiering
In-Reply-To: <CAOyfL0oQrHzDmHBnWo0pTdbVU7acnsLmikTh9NU_u6HnhT4VCw@mail.gmail.com>
References: <CAOyfL0oQrHzDmHBnWo0pTdbVU7acnsLmikTh9NU_u6HnhT4VCw@mail.gmail.com>
Message-ID: <1490109506.16330.20.camel@mmci.uni-saarland.de>

(I'm not a lawyer...)

I'm not sure if I can make sense of your email.

On Mon, 2017-03-20 at 20:12 +0000, Martin Stolze via bitcoin-dev wrote:
> As a participant in the economy in general and of Bitcoin in
> particular, I desire an ability to decide where I transact. The
> current state of Bitcoin does not allow me to choose my place of
> business. As a consequence, I try to learn what would be the best way
> to conduct my business in good faith. [2]

Ignoring the rest, I don't think that the physical location /
jurisdiction of the miner has any legal implications for law applicable
to the relationship between sender and receiver of a payment. 

This is not particular to Bitcoin. We're both in Germany (I guess).
Assume we have a contract without specific agreements and I pay you in
Icelandic kronur via PayPal (in Luxembourg) and my HTTPS requests to
PayPal went via Australia and the US. Then German law applies to our
contract, nothing in the middle can change that.

Also ignoring possible security implications, there is just no need for
a mechanism that enables users to select miners. I claim that almost
nobody cares who will mine a transaction, because it makes no technical
difference. If you don't want a specific miner to mine your
transaction, then don't use Bitcoin.

Tim

From andreas at schildbach.de  Tue Mar 21 16:16:30 2017
From: andreas at schildbach.de (Andreas Schildbach)
Date: Tue, 21 Mar 2017 17:16:30 +0100
Subject: [bitcoin-dev] A BIP proposal for segwit addresses
In-Reply-To: <CAPg+sBh0sFA7b6a+48Oojwy655GB9W6Th8JiCpd+2ruQjPev8Q@mail.gmail.com>
References: <CAPg+sBh0sFA7b6a+48Oojwy655GB9W6Th8JiCpd+2ruQjPev8Q@mail.gmail.com>
Message-ID: <oarjko$8fp$1@blaine.gmane.org>

Why use Base 32 when the QR code alphanumeric mode allows 44 characters?
In Bitcoin Wallet, I use Base 43 (alphabet:
"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ$*+-./:") for most efficient QR
code encoding. I only leave out the space character because it gets
replaced by "+" in URLs.


On 03/20/2017 10:35 PM, Pieter Wuille via bitcoin-dev wrote:
> Hello everyone,
> 
> I'd like to propose a new BIP for native segwit addresses to replace
> BIP 142. These addresses are not required for segwit, but are more
> efficient, flexible, and nicer to use.
> 
> The format is base 32 and uses a simple checksum algorithm with strong
> error detection properties. Reference code in several languages as
> well as a website demonstrating it are included.
> 
> You can find the text here:
> https://github.com/sipa/bech32/blob/master/bip-witaddr.mediawiki
> 
> Cheers,
> 



From pete at petertodd.org  Tue Mar 21 19:14:54 2017
From: pete at petertodd.org (Peter Todd)
Date: Tue, 21 Mar 2017 15:14:54 -0400
Subject: [bitcoin-dev] A BIP proposal for segwit addresses
In-Reply-To: <oarjko$8fp$1@blaine.gmane.org>
References: <CAPg+sBh0sFA7b6a+48Oojwy655GB9W6Th8JiCpd+2ruQjPev8Q@mail.gmail.com>
	<oarjko$8fp$1@blaine.gmane.org>
Message-ID: <20170321191454.GA17834@savin.petertodd.org>

On Tue, Mar 21, 2017 at 05:16:30PM +0100, Andreas Schildbach via bitcoin-dev wrote:
> Why use Base 32 when the QR code alphanumeric mode allows 44 characters?
> In Bitcoin Wallet, I use Base 43 (alphabet:
> "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ$*+-./:") for most efficient QR
> code encoding. I only leave out the space character because it gets
> replaced by "+" in URLs.

Doing that only makes addresses a few % shorter, at the cost of significant
downsides.  For example, not everyone knows what those additional characters
are called, particularly for non-English-speaking users. Non-alphanumeric
characters also complicate using the addresses in a variety of contexts ('/'
in particularly isn't valid in filenames).

I'd suggest you review the "Rational" section of the BIP for more details:

https://github.com/sipa/bech32/blob/master/bip-witaddr.mediawiki#rationale

-- 
https://petertodd.org 'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170321/32c1ba7e/attachment.sig>

From eric at voskuil.org  Wed Mar 22 00:04:47 2017
From: eric at voskuil.org (Eric Voskuil)
Date: Tue, 21 Mar 2017 17:04:47 -0700
Subject: [bitcoin-dev] Unique node identifiers
In-Reply-To: <7c5020dd-5259-9954-7bf1-06fa98124f8f@voskuil.org>
References: <7c5020dd-5259-9954-7bf1-06fa98124f8f@voskuil.org>
Message-ID: <faa01422-4d69-e6ef-38e9-3e65d8ea8efd@voskuil.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

Reposting this response since this made it neither to distribution nor
to the moderation archive.


- -------- Forwarded Message --------
Subject: Re: [bitcoin-dev] Unique node identifiers
Date: Wed, 8 Mar 2017 18:59:42 -0800
From: Eric Voskuil <eric at voskuil.org>
To: Pieter Wuille <pieter.wuille at gmail.com>
CC: Jonas Schnelli <dev at jonasschnelli.ch>, Bitcoin Protocol Discussion
<bitcoin-dev at lists.linuxfoundation.org>, Libbitcoin Development
<libbitcoin at lists.dyne.org>

On 03/08/2017 05:55 PM, Pieter Wuille wrote:
> On Wed, Mar 8, 2017 at 5:16 PM, Eric Voskuil <eric at voskuil.org>
> wrote:
>> On 03/08/2017 03:12 PM, Pieter Wuille wrote:
>>> In that way, I see BIP150 as an extension of IP addresses,
>>> except more secure against network-level attackers. If you
>>> believe the concept of people establishing links along existing
>>> trust lines is a problem, you should be arguing against
>>> features in Bitcoin software that allows configuring preferred
>>> IP addresses to connect to as well (-addnode and -connect in
>>> Bitcoin Core, for example).
>> 
>> Weak identity is insufficient to produce the problem scenario
>> that is at the heart of my concern (excluding people). It is this
>> "[same] except more secure" distinction that is the problem. You
>> brush past that as if it did not exist.
> 
> So you're saying that a -onlyacceptconnectionsfrom=IP option
> wouldn't be a concern to you because it can't exclude people? Of
> course it can exclude people - just not your ISP or a state-level
> attacker.

You seem to look at this from only one perspective. Put yourself on the
other end of the wire (web wallets, APIs, exchanges, miners). Is an IP
address strong enough for them to prove to the state that they are
getting connections only from authorized "customers" that they know? Is
it sufficient for them that they may think they know their customer but
in reality it may be some ISP spoofing their customer (or some state)?
Obviously it is not sufficient, which is why IP addresses do not produce
this problem. They will need another mechanism, and BIP150 just happens
to be it.

> Please, Eric. I think I understand your concern,

I assume you do. The question is ultimately whether the P2P protocol is
an anonymous network of public information or it is a private network
(of private information). Too many arguments have been based on the idea
that the information is private (bloom filters, tainting). There are
anonymizing networks, Bitcoin P2P is not one of them.

Consensus rules exist to validate information obtained from the
anonymous public. That includes your ISP and the state. The rules
validate everything that matters except whether there is a stronger
chain - and seeing the strongest chain cannot be guaranteed by
encryption, unless of course we are all strongly tied to the majority
hash power and trust them.

Making the network private so that we can detect denial/disruption of
service is pointless if the the only threat is your own ISP or the state
.

> but this argument isn't constructive either.

I don't need to continue it, I've made my case. It's up to others to
decide whether it has been constructive and what to do with it. I hope
it is understood that I do not question the motivation of anyone involve
d.

> The proposal here is to introduce visible node identities on the 
> network. I think that's misguided as node count is irrelevant and 
> trivial to fake anyway.

Agreed.

> I know that you equate the concept of having verifiable identity
> keys in the P2P with a step towards making every node 
> identifiable,

There is no question that is a step toward making every person who
connects to the more centralized network identifiable. The next step
doesn't even require a software change. A "bitcoin provider" will only
need to provide you a secret to use when connecting. And they have every
reason to want to control this access.

e


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)

iQEcBAEBCAAGBQJY0b+SAAoJEDzYwH8LXOFOzskH/Ak4xTVWuY02dpA7Xcna0/lG
pLCYz5aFOoCRDokHf2uxtZptNaXMcz5eNBwhxRyXL9cMQ1ewME9nWDiM0x7Is0zC
0haiFW1bi81Tak6ELhA7+BwCQNYH4MBWirFo/T91veiaOx3Ttn5Nf8p+kYfbcvCC
eANxCsPM8s9ul7CzpfDtO+K7S9rV/mEZYDsogKT7P3JPbgH4kRWcyt1AcFfw74LU
Z68XkZL6aCl+nymupZR72z/oxykljjPegkZxIkoguNSybZR9dOLRRmkyiPplX+OU
szOlGnwuePxOq/BQE8ouAlfSgAmBHqMj6lnYCgbBUIWrTzjYlpZVA4dWTj/FVCM=
=um+z
-----END PGP SIGNATURE-----

From luke at dashjr.org  Wed Mar 22 08:47:30 2017
From: luke at dashjr.org (Luke Dashjr)
Date: Wed, 22 Mar 2017 08:47:30 +0000
Subject: [bitcoin-dev] Fraud proofs for block size/weight
Message-ID: <201703220847.31303.luke@dashjr.org>

Despite the generalised case of fraud proofs being likely impossible, there 
have recently been regular active proposals of miners attacking with simply 
oversized blocks in an attempt to force a hardfork. This specific attack can 
be proven, and reliably so, since the proof cannot be broken without also 
breaking their attempted hardfork at the same time.

While ideally all users ought to use their own full node for validation (even 
when using a light client for their wallet), many bitcoin holders still do 
not. As such, they are likely to need protection from these attacks, to ensure 
they remain on the Bitcoin blockchain.

I've written up a draft BIP for fraud proofs and how light clients can detect 
blockchains that are simply invalid due to excess size and/or weight:

    https://github.com/luke-jr/bips/blob/bip-sizefp/bip-sizefp.mediawiki

I believe this draft is probably ready for implementation already, but if 
anyone has any idea on how it might first be improved, please feel free to 
make suggestions.

Luke

From steven.charles.davis at gmail.com  Sun Mar 19 21:17:04 2017
From: steven.charles.davis at gmail.com (Steve Davis)
Date: Sun, 19 Mar 2017 16:17:04 -0500
Subject: [bitcoin-dev] Requirement for pseudonymous BIP submissions
In-Reply-To: <mailman.29.1489924803.11420.bitcoin-dev@lists.linuxfoundation.org>
References: <mailman.29.1489924803.11420.bitcoin-dev@lists.linuxfoundation.org>
Message-ID: <EF68C9D7-1AF7-4B5F-B78C-6DBDF8D186E1@gmail.com>


> On Mar 19, 2017, at 7:00 AM, bitcoin-dev-request at lists.linuxfoundation.org wrote:
> 
> GitHub doesn't allow people to have multiple accounts last I checked.

GitHub doesn?t allow email addresses to have multiple accounts.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170319/55fab487/attachment-0001.html>

From muyuubyou at gmail.com  Sun Mar 19 23:43:12 2017
From: muyuubyou at gmail.com (muyuu)
Date: Sun, 19 Mar 2017 23:43:12 +0000
Subject: [bitcoin-dev] Requirement for pseudonymous BIP submissions
Message-ID: <CADWuND34HbsF_e3Ob0bBPCzacsWrsfPjLzawwFd8KxcCoLDFSw@mail.gmail.com>

If this was in place I would contribute more and I wouldn't have to create
throw-away accounts.

This is not a space where you want to be a recognisable target.

Today, BitFury's CEO threatened to sue developers if they didn't kowtow to
his demands to leave the PoW alone. This is unacceptable. Decisions have to
be made on merit and the interest of the project, and nothing else.

This is very important and needs to be given priority. Most Core developers
and all the main ones except Satoshi have built a public persona, either
for ego or for practical monetary reasons. Obviously there's academia where
everything is about plastering your name as much as possible and getting
cited. So it's understood. Although I understand the difficulty of getting
funded and getting trusted without a face, there needs to be an outlet so
people can interact and contribute in a proper cypherpunk way.

Also, GitHub is quite anti-privacy. So I recommend not reusing personal
accounts from work.

-muyuu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170319/8e00316b/attachment-0001.html>

From andrew.johnson83 at gmail.com  Mon Mar 20 16:10:32 2017
From: andrew.johnson83 at gmail.com (Andrew Johnson)
Date: Mon, 20 Mar 2017 16:10:32 +0000
Subject: [bitcoin-dev] Malice Reactive Proof of Work Additions (MR
 POWA): Protecting Bitcoin from malicious miners
In-Reply-To: <BL2PR03MB435F8B16B15BA7E0992DCA5EE3A0@BL2PR03MB435.namprd03.prod.outlook.com>
References: <BL2PR03MB435F510935FC7E230118AD3EE380@BL2PR03MB435.namprd03.prod.outlook.com>
	<CAAy62_K5ePDuvVn8=DtwJX6ek00Z_r4u9LyA0W11vgZmQ=zzDg@mail.gmail.com>
	<BL2PR03MB435F8B16B15BA7E0992DCA5EE3A0@BL2PR03MB435.namprd03.prod.outlook.com>
Message-ID: <CAAy62_+6s_zxkyYuPKX5E9dEBfNntLYtNc5CYkU=VuacQCL2cw@mail.gmail.com>

On Mon, Mar 20, 2017 at 10:47 AM John Hardy <john at seebitcoin.com> wrote:

> By doing this you're significantly changing the economic incentives
behind bitcoin mining. How can you reliably invest in hardware if you have
no idea when or if your profitability is going to be cut by 50-75% based on
a whim?


Of course, that's why this is a last resort, successfully activated only in
response to a contentious hard fork. If it succeeds just once it should
help prevent the same situation occurring in the future.


This seems a lot more disruptive to the network than a simple hard fork to
increase the block size.  Compromise is the answer here, not taking our
ball and going home, in my humble opinion.

> You may also inadvertently create an entirely new attack vector if 50-75%
of the SHA256 hardware is taken offline and purchased by an entity who
intends to do harm to the network.

How so? If you have four proof of work methods, that 50-75% of SHA256
hashpower would equate to 13-18% of total hashpower. If you can harm the
network with this much hashpower bitcoin was DOA.


I'm assuming the difficulty on the SHA256 PoW would drop by 50-75% as
well.  So not nearly as bad as it would be with a single PoW and that much
hardware were available to an adversary, you're correct.

How would you handle starting difficulty on the other 3 PoWs?  Seems like
it would be a race to start with, which strikes me as another potential
attack vector until the amount of hardware and price of production balances
with the price of the coin(which is likely to be volatile during this
turbulent period).  Unless you start the difficulty at a higher value, then
you're just doing centralized economic planning and hoping you got the
numbers right so that you get the right balance of security vs incentive to
do malicious things like double spends.

All the solutions that people keep positing(such as Luke's complete PoW
change) seem like they'd be a whole lot more disruptive to the network than
an EC fork would be.

Isn't the main reason that everyone is up in arms because a contentious
hard fork is dangerous?  I just don't understand how any of these solutions
are safer.

At that point we've lost our claim to fame, that changes to the protocol
are hard and you can trust that your value is safe.  What you're advocating
seems like it would result in a huge drop in hashing security.

------------------------------
*From:* Andrew Johnson <andrew.johnson83 at gmail.com>
*Sent:* Monday, March 20, 2017 3:38:01 PM
*To:* Bitcoin Protocol Discussion; John Hardy
*Subject:* Re: [bitcoin-dev] Malice Reactive Proof of Work Additions (MR
POWA): Protecting Bitcoin from malicious miners

By doing this you're significantly changing the economic incentives behind
bitcoin mining. How can you reliably invest in hardware if you have no idea
when or if your profitability is going to be cut by 50-75% based on a whim?

You may also inadvertently create an entirely new attack vector if 50-75%
of the SHA256 hardware is taken offline and purchased by an entity who
intends to do harm to the network.

Bitcoin only works if most miners are honest, this has been known since the
beginning.

On Mon, Mar 20, 2017 at 9:50 AM John Hardy via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

I?m very worried about the state of miner centralisation in Bitcoin.

I always felt the centralising effects of ASIC manufacturing would resolve
themselves once the first mover advantage had been exhausted and the
industry had the opportunity to mature.

I had always assumed initial centralisation would be harmless since miners
have no incentive to harm the network. This does not consider the risk of a
single entity with sufficient power and either poor, malicious or coerced
decision making. I now believe that such centralisation poses a huge risk
to the security of Bitcoin and preemptive action needs to be taken to
protect the network from malicious actions by any party able to exert
influence over a substantial portion of SHA256 hardware.

Inspired by UASF, I believe we should implement a Malicious miner Reactive
Proof of Work Additions (MR POWA).

This would be a hard fork activated in response to a malicious attempt by a
hashpower majority to introduce a contentious hard fork.

The activation would occur once a fork was detected violating protocol
(likely oversize blocks) with a majority of hashpower. The threshold and
duration for activation would need to be carefully considered.

I don?t think we should eliminate SHA256 as a hashing method and change POW
entirely. That would be throwing the baby out with the bathwater and hurt
the non-malicious miners who have invested in hardware, making it harder to
gain their support.

Instead I believe we should introduce multiple new proofs of work that are
already established and proven within existing altcoin implementations. As
an example we could add Scrypt, Ethash and Equihash. Much of the code and
mining infrastructure already exists. Diversification of hardware (a mix of
CPU and memory intensive methods) would also be positive for
decentralisation. Initial difficulty could simply be an estimated portion
of existing infrastructure.

This example would mean 4 proofs of work with 40 minute block target
difficulty for each. There could also be a rule that two different proofs
of work must find a block before a method can start hashing again. This
means there would only be 50% of hardware hashing at a time, and a sudden
gain or drop in hashpower from a particular method does not dramatically
impact the functioning of the network between difficulty adjustments. This
also adds protection from attacks by the malicious SHA256 hashpower which
could even be required to wait until all other methods have found a block
before being allowed to hash again.

50% hashing time would mean that the cost of electricity in relation to
hardware would fall by 50%, reducing some of the centralising impact of
subsidised or inexpensive electricity in some regions over others.

Such a hard fork could also, counter-intuitively, introduce a block size
increase since while we?re hard forking it makes sense to minimise the
number of future hard forks where possible. It could also activate SegWit
if it hasn?t already.

The beauty of this method is that it creates a huge risk to any malicious
actor trying to abuse their position. Ideally, MR POWA would just serve as
a deterrent and never activate.

If consensus were to form around a hard fork in the future nodes would be
able to upgrade and MR POWA, while automatically activating on non-upgraded
nodes, would be of no economic significance: a vestigial chain immediately
abandoned with no miner incentive.

I think this would be a great way to help prevent malicious use of
hashpower to harm the network. This is the beauty of Bitcoin: for any road
block that emerges the economic majority can always find a way around.

_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-- 
Andrew Johnson

-- 
Andrew Johnson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170320/c4a231a7/attachment-0001.html>

From john at seebitcoin.com  Mon Mar 20 21:29:29 2017
From: john at seebitcoin.com (John Hardy)
Date: Mon, 20 Mar 2017 21:29:29 +0000
Subject: [bitcoin-dev] Malice Reactive Proof of Work Additions (MR
 POWA): Protecting Bitcoin from malicious miners
In-Reply-To: <CANN4kmdMcbQ9pYC44a02+wzzVzoMt8n5TAL=Z3bRaBkT_6Vnpg@mail.gmail.com>
References: <BL2PR03MB435F510935FC7E230118AD3EE380@BL2PR03MB435.namprd03.prod.outlook.com>
	<CAAy62_K5ePDuvVn8=DtwJX6ek00Z_r4u9LyA0W11vgZmQ=zzDg@mail.gmail.com>,
	<CANN4kmdMcbQ9pYC44a02+wzzVzoMt8n5TAL=Z3bRaBkT_6Vnpg@mail.gmail.com>
Message-ID: <BL2PR03MB4354CBF603056F44BD98C61EE3A0@BL2PR03MB435.namprd03.prod.outlook.com>

> Chain work currently means the expected number of sha256d evaluations needed to build a chain. Given that these hash functions are not equally hard, what should the new definition of chain work be?

They're not equally hard, but they can be equally relative.

If you had 4 proofs of work you can weigh them each at 25% and compare the overall chain weight from there, shouldn't be difficult.

Initially, some hardware would have an advantage, but over time the market will always average itself out.


________________________________
From: bitcoin-dev-bounces at lists.linuxfoundation.org <bitcoin-dev-bounces at lists.linuxfoundation.org> on behalf of Nick ODell via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
Sent: Monday, March 20, 2017 6:02:52 PM
To: Andrew Johnson; Bitcoin Protocol Discussion
Subject: Re: [bitcoin-dev] Malice Reactive Proof of Work Additions (MR POWA): Protecting Bitcoin from malicious miners

Chain work currently means the expected number of sha256d evaluations needed to build a chain. Given that these hash functions are not equally hard, what should the new definition of chain work be?

On Mon, Mar 20, 2017 at 9:38 AM, Andrew Johnson via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
By doing this you're significantly changing the economic incentives behind bitcoin mining. How can you reliably invest in hardware if you have no idea when or if your profitability is going to be cut by 50-75% based on a whim?

You may also inadvertently create an entirely new attack vector if 50-75% of the SHA256 hardware is taken offline and purchased by an entity who intends to do harm to the network.

Bitcoin only works if most miners are honest, this has been known since the beginning.

On Mon, Mar 20, 2017 at 9:50 AM John Hardy via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:

I?m very worried about the state of miner centralisation in Bitcoin.

I always felt the centralising effects of ASIC manufacturing would resolve themselves once the first mover advantage had been exhausted and the industry had the opportunity to mature.

I had always assumed initial centralisation would be harmless since miners have no incentive to harm the network. This does not consider the risk of a single entity with sufficient power and either poor, malicious or coerced decision making. I now believe that such centralisation poses a huge risk to the security of Bitcoin and preemptive action needs to be taken to protect the network from malicious actions by any party able to exert influence over a substantial portion of SHA256 hardware.

Inspired by UASF, I believe we should implement a Malicious miner Reactive Proof of Work Additions (MR POWA).

This would be a hard fork activated in response to a malicious attempt by a hashpower majority to introduce a contentious hard fork.

The activation would occur once a fork was detected violating protocol (likely oversize blocks) with a majority of hashpower. The threshold and duration for activation would need to be carefully considered.

I don?t think we should eliminate SHA256 as a hashing method and change POW entirely. That would be throwing the baby out with the bathwater and hurt the non-malicious miners who have invested in hardware, making it harder to gain their support.

Instead I believe we should introduce multiple new proofs of work that are already established and proven within existing altcoin implementations. As an example we could add Scrypt, Ethash and Equihash. Much of the code and mining infrastructure already exists. Diversification of hardware (a mix of CPU and memory intensive methods) would also be positive for decentralisation. Initial difficulty could simply be an estimated portion of existing infrastructure.

This example would mean 4 proofs of work with 40 minute block target difficulty for each. There could also be a rule that two different proofs of work must find a block before a method can start hashing again. This means there would only be 50% of hardware hashing at a time, and a sudden gain or drop in hashpower from a particular method does not dramatically impact the functioning of the network between difficulty adjustments. This also adds protection from attacks by the malicious SHA256 hashpower which could even be required to wait until all other methods have found a block before being allowed to hash again.

50% hashing time would mean that the cost of electricity in relation to hardware would fall by 50%, reducing some of the centralising impact of subsidised or inexpensive electricity in some regions over others.

Such a hard fork could also, counter-intuitively, introduce a block size increase since while we?re hard forking it makes sense to minimise the number of future hard forks where possible. It could also activate SegWit if it hasn?t already.

The beauty of this method is that it creates a huge risk to any malicious actor trying to abuse their position. Ideally, MR POWA would just serve as a deterrent and never activate.

If consensus were to form around a hard fork in the future nodes would be able to upgrade and MR POWA, while automatically activating on non-upgraded nodes, would be of no economic significance: a vestigial chain immediately abandoned with no miner incentive.

I think this would be a great way to help prevent malicious use of hashpower to harm the network. This is the beauty of Bitcoin: for any road block that emerges the economic majority can always find a way around.

_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
--
Andrew Johnson


_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170320/46f7569c/attachment-0001.html>

From martin at stolze.cc  Wed Mar 22 17:48:52 2017
From: martin at stolze.cc (Martin Stolze)
Date: Wed, 22 Mar 2017 17:48:52 +0000
Subject: [bitcoin-dev] Inquiry: Transaction Tiering
Message-ID: <CAOyfL0r8dLR=7Co5+YzbPQUeTs6Lw+OQjZTy=iyoDmr6VV_Qpw@mail.gmail.com>

Hi Tim,
After writing this I figured that it was probably not evident at first
sight as the concept may be quite novel. The physical location of the
"miner" is indeed irrelevant, I am referring to the digital location.
Bitcoins blockchain is a digital location or better digital "space".
As far as I am concerned the authority lies with whoever governs this
particular block space. A "miner" can, or can not, include my
transaction.

To make this more understandable:

Abu Bakr al-Baghdadi can extend his caliphate into Bitcoins block
space and rule sovereign(!) over a given block. If he processes my
transaction my fee goes directly into the coffers of his organization.
The same goes for the Queen of England or the Emperor of China. My
interest is not necessarily aligned with each specific authority, yet
as you point out, I can only not use Bitcoin.
Alternatively, however, I can very well sign my transaction and send
it to an authority of my choosing to be included into the ledger, say
BitFurry. - This is what I describe in option 1.

In order to protect my interest I do need to choose, maybe not today,
but eventually.

I also think that people do care who processes transactions and a lot
of bickering could be spared if we could choose.

If we assume a perfectly competitive market with 3 authorities that
govern the block space equally, the marginal cost of 1/3 of the block
space is the same for each, however, the marginal revenue absent of
block rewards is dependent on fees.
If people are willing to pay only a zero fee to a specific authority
while a fee greater than zero to the others it's clear that one would
be less competitive.

Let us assume the fees are 10% of the revenue and the cost is 95 we
have currently the following situation:

A: Cost=95; Revenue=100; Profit=5
B: Cost=95; Revenue=100; Profit=5
C: Cost=95; Revenue=100; Profit=5

With transaction tiering, the outcome could be different!

A: Cost=95; Revenue=90; Loss=5 // BSA that does not respect user interest.
B: Cost=95; Revenue=105; Profit=10
C: Cost=95; Revenue=105; Profit=10

This could motivate transaction processors to behave in accordance
with user interest, or am I missing something?

Best Regards,
Martin

> From: Tim Ruffing <tim.ruffing at mmci.uni-saarland.de>
> To: bitcoin-dev at lists.linuxfoundation.org
> Cc:
> Bcc:
> Date: Tue, 21 Mar 2017 16:18:26 +0100
> Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering
> (I'm not a lawyer...)
>
> I'm not sure if I can make sense of your email.
>
> On Mon, 2017-03-20 at 20:12 +0000, Martin Stolze via bitcoin-dev wrote:
>> As a participant in the economy in general and of Bitcoin in
>> particular, I desire an ability to decide where I transact. The
>> current state of Bitcoin does not allow me to choose my place of
>> business. As a consequence, I try to learn what would be the best way
>> to conduct my business in good faith. [2]
>
> Ignoring the rest, I don't think that the physical location /
> jurisdiction of the miner has any legal implications for law applicable
> to the relationship between sender and receiver of a payment.
>
> This is not particular to Bitcoin. We're both in Germany (I guess).
> Assume we have a contract without specific agreements and I pay you in
> Icelandic kronur via PayPal (in Luxembourg) and my HTTPS requests to
> PayPal went via Australia and the US. Then German law applies to our
> contract, nothing in the middle can change that.
>
> Also ignoring possible security implications, there is just no need for
> a mechanism that enables users to select miners. I claim that almost
> nobody cares who will mine a transaction, because it makes no technical
> difference. If you don't want a specific miner to mine your
> transaction, then don't use Bitcoin.
>
> Tim

From bram at bittorrent.com  Wed Mar 22 20:49:08 2017
From: bram at bittorrent.com (Bram Cohen)
Date: Wed, 22 Mar 2017 13:49:08 -0700
Subject: [bitcoin-dev] Fraud proofs for block size/weight
In-Reply-To: <201703220847.31303.luke@dashjr.org>
References: <201703220847.31303.luke@dashjr.org>
Message-ID: <CA+KqGkqD0z1O6+pCNaB-vCu_YW2-eO9nmrwcnQ--574t95hghg@mail.gmail.com>

Some questions:

Does this require information to be added to blocks, or can it work today
on the existing format?

Does this count number of transactions or their total length? The block
limit is in bytes rather than number of transactions, but transaction
number can be a reasonable proxy if you allow for some false negatives but
want a basic sanity check.

Does this allow for proofs of length in the positive direction,
demonstrating that a block is good, or does it only serve to show that
blocks are bad? Ideally we'd like an extension to SPV protocol so light
clients require proofs of blocks not being too big, given the credible
threat of there being an extremely large-scale attack on the network of
that form.


On Wed, Mar 22, 2017 at 1:47 AM, Luke Dashjr via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Despite the generalised case of fraud proofs being likely impossible, there
> have recently been regular active proposals of miners attacking with simply
> oversized blocks in an attempt to force a hardfork. This specific attack
> can
> be proven, and reliably so, since the proof cannot be broken without also
> breaking their attempted hardfork at the same time.
>
> While ideally all users ought to use their own full node for validation
> (even
> when using a light client for their wallet), many bitcoin holders still do
> not. As such, they are likely to need protection from these attacks, to
> ensure
> they remain on the Bitcoin blockchain.
>
> I've written up a draft BIP for fraud proofs and how light clients can
> detect
> blockchains that are simply invalid due to excess size and/or weight:
>
>     https://github.com/luke-jr/bips/blob/bip-sizefp/bip-sizefp.mediawiki
>
> I believe this draft is probably ready for implementation already, but if
> anyone has any idea on how it might first be improved, please feel free to
> make suggestions.
>
> Luke
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170322/d02f0db1/attachment.html>

From lf-lists at mattcorallo.com  Wed Mar 22 21:51:08 2017
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Wed, 22 Mar 2017 21:51:08 +0000
Subject: [bitcoin-dev] Fraud proofs for block size/weight
In-Reply-To: <CA+KqGkqD0z1O6+pCNaB-vCu_YW2-eO9nmrwcnQ--574t95hghg@mail.gmail.com>
References: <201703220847.31303.luke@dashjr.org>
	<CA+KqGkqD0z1O6+pCNaB-vCu_YW2-eO9nmrwcnQ--574t95hghg@mail.gmail.com>
Message-ID: <30FB8B13-135D-4905-B1B4-76D79341CA02@mattcorallo.com>

It works today and can be used to prove exact size: the key observation is that all you need to show the length and hash of a transaction is the final SHA256 midstate and chunk (max 64 bytes). It also uses the observation that a valid transaction must be at least 60 bytes long for compression (though much of that compression possibility goes away if you're proving something other than "too large").

On March 22, 2017 1:49:08 PM PDT, Bram Cohen via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>Some questions:
>
>Does this require information to be added to blocks, or can it work
>today
>on the existing format?
>
>Does this count number of transactions or their total length? The block
>limit is in bytes rather than number of transactions, but transaction
>number can be a reasonable proxy if you allow for some false negatives
>but
>want a basic sanity check.
>
>Does this allow for proofs of length in the positive direction,
>demonstrating that a block is good, or does it only serve to show that
>blocks are bad? Ideally we'd like an extension to SPV protocol so light
>clients require proofs of blocks not being too big, given the credible
>threat of there being an extremely large-scale attack on the network of
>that form.
>
>
>On Wed, Mar 22, 2017 at 1:47 AM, Luke Dashjr via bitcoin-dev <
>bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> Despite the generalised case of fraud proofs being likely impossible,
>there
>> have recently been regular active proposals of miners attacking with
>simply
>> oversized blocks in an attempt to force a hardfork. This specific
>attack
>> can
>> be proven, and reliably so, since the proof cannot be broken without
>also
>> breaking their attempted hardfork at the same time.
>>
>> While ideally all users ought to use their own full node for
>validation
>> (even
>> when using a light client for their wallet), many bitcoin holders
>still do
>> not. As such, they are likely to need protection from these attacks,
>to
>> ensure
>> they remain on the Bitcoin blockchain.
>>
>> I've written up a draft BIP for fraud proofs and how light clients
>can
>> detect
>> blockchains that are simply invalid due to excess size and/or weight:
>>
>>    
>https://github.com/luke-jr/bips/blob/bip-sizefp/bip-sizefp.mediawiki
>>
>> I believe this draft is probably ready for implementation already,
>but if
>> anyone has any idea on how it might first be improved, please feel
>free to
>> make suggestions.
>>
>> Luke
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170322/b7fc87f1/attachment.html>

From jtimon at jtimon.cc  Thu Mar 23 18:27:39 2017
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 23 Mar 2017 19:27:39 +0100
Subject: [bitcoin-dev] Fraud proofs for block size/weight
In-Reply-To: <30FB8B13-135D-4905-B1B4-76D79341CA02@mattcorallo.com>
References: <201703220847.31303.luke@dashjr.org>
	<CA+KqGkqD0z1O6+pCNaB-vCu_YW2-eO9nmrwcnQ--574t95hghg@mail.gmail.com>
	<30FB8B13-135D-4905-B1B4-76D79341CA02@mattcorallo.com>
Message-ID: <CABm2gDpgTtiftByQhD_TtzgD5Tv==io2+TGiTCnMt9onquVBmw@mail.gmail.com>

Great stuff, although the ordering of the sections seems a little bit confusing.

I think it would be clearer to put the "Creation of proofs" section
before "Proof verification", maybe even before "Proof format" if a
high level defintion of "full tx size proof" is provided before.

Also, in "For the full-size proof, each transaction should be assumed
to be at a minimum the stripped-size rather than the fixed 60 bytes."
it seems you are referring to a "full-size block proof" as opposed to
a "full size tx proof", perhaps a better term could be "full-weight
block proof" if what you are referring to is the proof of the weight
instead of only the pre-segwit size.

Perhaps some short definitions for "stripped-size proof", "full tx
size proof", "full-size proof" and maybe also "size component" at the
beginning would be enough.

In "Network protocol", "It should not recheck blocks known to be
valid, " does "known to be valid" include the blocks that the peer
told us where valid (with their hash and 0 in the enumerated varint)?
Those could be invalid too if the peer was lying, no?
Do you mean "It should not recheck blocks known to be invalid,"?

Why do you need to have at least one full tx size?

In Rationale you have:
"
Why must a full tx size proof be included?

This is necessary to establish that the claimed block transaction
count is correct.
"

Why do you need to establish that? If you can establish that the
number of transactions is at least N and that N * 60 bytes is greater
than the size/weight limit, isn't it that enough?


On Wed, Mar 22, 2017 at 10:51 PM, Matt Corallo via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> It works today and can be used to prove exact size: the key observation is
> that all you need to show the length and hash of a transaction is the final
> SHA256 midstate and chunk (max 64 bytes). It also uses the observation that
> a valid transaction must be at least 60 bytes long for compression (though
> much of that compression possibility goes away if you're proving something
> other than "too large").
>
>
> On March 22, 2017 1:49:08 PM PDT, Bram Cohen via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>> Some questions:
>>
>> Does this require information to be added to blocks, or can it work today
>> on the existing format?
>>
>> Does this count number of transactions or their total length? The block
>> limit is in bytes rather than number of transactions, but transaction number
>> can be a reasonable proxy if you allow for some false negatives but want a
>> basic sanity check.
>>
>> Does this allow for proofs of length in the positive direction,
>> demonstrating that a block is good, or does it only serve to show that
>> blocks are bad? Ideally we'd like an extension to SPV protocol so light
>> clients require proofs of blocks not being too big, given the credible
>> threat of there being an extremely large-scale attack on the network of that
>> form.
>>
>>
>> On Wed, Mar 22, 2017 at 1:47 AM, Luke Dashjr via bitcoin-dev
>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>
>>> Despite the generalised case of fraud proofs being likely impossible,
>>> there
>>> have recently been regular active proposals of miners attacking with
>>> simply
>>> oversized blocks in an attempt to force a hardfork. This specific attack
>>> can
>>> be proven, and reliably so, since the proof cannot be broken without also
>>> breaking their attempted hardfork at the same time.
>>>
>>> While ideally all users ought to use their own full node for validation
>>> (even
>>> when using a light client for their wallet), many bitcoin holders still
>>> do
>>> not. As such, they are likely to need protection from these attacks, to
>>> ensure
>>> they remain on the Bitcoin blockchain.
>>>
>>> I've written up a draft BIP for fraud proofs and how light clients can
>>> detect
>>> blockchains that are simply invalid due to excess size and/or weight:
>>>
>>>     https://github.com/luke-jr/bips/blob/bip-sizefp/bip-sizefp.mediawiki
>>>
>>> I believe this draft is probably ready for implementation already, but if
>>> anyone has any idea on how it might first be improved, please feel free
>>> to
>>> make suggestions.
>>>
>>> Luke
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

From jg at 112bit.com  Thu Mar 23 22:37:34 2017
From: jg at 112bit.com (Juan Garavaglia)
Date: Thu, 23 Mar 2017 22:37:34 +0000
Subject: [bitcoin-dev] Issolated Bitcoin Nodes
Message-ID: <SC1P152MB1648D0F9DF4279C49D755233F53F0@SC1P152MB1648.LAMP152.PROD.OUTLOOK.COM>

We notice some reorgs in Bitcoin testnet, while reorgs in testnet are common and may be part of different tests and experiments, it seems the forks are not created by a single user and multiple blocks were mined by different users in each chain.  My first impression was that the problem was related to network issues but some Bitcoin explorers were following one chain while others follow the other one.  Nonetheless, well established explorers like blocktrail.com or blockr.io were following different chains at different heights which led to me to believe that it was not a network issue. After some time, a reorg occurs and it all comes to normal state as a single chain.
We started investigating more and we identified that the fork occurs with nodes 0.12; in some situations, nodes 0.12 has longer/different chains. The blocks in both chains are valid so something must be occurring in the communication between nodes but not related with the network itself.
Long story short, when nodes 0.13+ receive blocks from 0.13+ nodes all is ok, and those blocks propagate to older nodes with no issues. But when a block tries to be propagated from bitcoind 0.12.+ to newer ones those blocks are NOT being propagated to the peers with newer versions while these newer blocks are being propagated to peers with older versions with no issues.
My conclusion is that we have a backward compatibility issue between 0.13.X+ and older versions.
The issue is simple to replicate, first, get latest version of bitcoind, complete the IBD after is at current height, then force it to use exclusively one or more peers of versions 0.12.X and older, and you will notice that the latest version node will never receive a new block.
Probably some alternative bitcoin implementations act as bridges between these two versions and facilitate the chain reorgs.
I have not yet found any way where/how it can be used in a malicious way or be exploited by a miner but in theory Bitcoin 0.13.X+ should remain compatible with older ones, but a 0.13+ node may become isolated by 0.12 peers, and there is not notice for the node owner.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170323/7acf199d/attachment.html>

From achow101-lists at achow101.com  Thu Mar 23 23:14:28 2017
From: achow101-lists at achow101.com (Andrew Chow)
Date: Thu, 23 Mar 2017 19:14:28 -0400
Subject: [bitcoin-dev] Issolated Bitcoin Nodes
In-Reply-To: <SC1P152MB1648D0F9DF4279C49D755233F53F0@SC1P152MB1648.LAMP152.PROD.OUTLOOK.COM>
References: <SC1P152MB1648D0F9DF4279C49D755233F53F0@SC1P152MB1648.LAMP152.PROD.OUTLOOK.COM>
Message-ID: <3fd9846c-6c57-9b57-0b6e-e5958e644e1d@achow101.com>

The issue is due to Segwit blocks since Testnet has already activated
Segwit. 0.12.x- nodes will receive a Segwit block with all of the
witnesses stripped. When they relay this block to a 0.13.0+ node, the
block will be rejected because those have Segwit functionality and
require the witnesses to be in the block. Given that Testnet has a
smaller number of nodes and less difficulty, this could result in some
miners using 0.13.0+ mining blocks which do not propagate well and thus
causing multiple chain splits and reorgs as other miners find blocks for
the same height before receiving a block for that height.


On 3/23/2017 6:37 PM, Juan Garavaglia via bitcoin-dev wrote:
>
> We notice some reorgs in Bitcoin testnet, while reorgs in testnet are
> common and may be part of different tests and experiments, it seems
> the forks are not created by a single user and multiple blocks were
> mined by different users in each chain.  My first impression was that
> the problem was related to network issues but some Bitcoin explorers
> were following one chain while others follow the other one. 
> Nonetheless, well established explorers like blocktrail.com or
> blockr.io were following different chains at different heights which
> led to me to believe that it was not a network issue. After some time,
> a reorg occurs and it all comes to normal state as a single chain.
>
> We started investigating more and we identified that the fork occurs
> with nodes 0.12; in some situations, nodes 0.12 has longer/different
> chains. The blocks in both chains are valid so something must be
> occurring in the communication between nodes but not related with the
> network itself.
>
> Long story short, when nodes 0.13+ receive blocks from 0.13+ nodes all
> is ok, and those blocks propagate to older nodes with no issues. But
> when a block tries to be propagated from bitcoind 0.12.+ to newer ones
> those blocks are NOT being propagated to the peers with newer versions
> while these newer blocks are being propagated to peers with older
> versions with no issues.
>
> My conclusion is that we have a backward compatibility issue between
> 0.13.X+ and older versions.
>
> The issue is simple to replicate, first, get latest version of
> bitcoind, complete the IBD after is at current height, then force it
> to use exclusively one or more peers of versions 0.12.X and older, and
> you will notice that the latest version node will never receive a new
> block.
>
> Probably some alternative bitcoin implementations act as bridges
> between these two versions and facilitate the chain reorgs.
>
> I have not yet found any way where/how it can be used in a malicious
> way or be exploited by a miner but in theory Bitcoin 0.13.X+ should
> remain compatible with older ones, but a 0.13+ node may become
> isolated by 0.12 peers, and there is not notice for the node owner.
>
>  
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170323/a54eedc6/attachment-0001.html>

From lf-lists at mattcorallo.com  Thu Mar 23 23:01:09 2017
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Thu, 23 Mar 2017 23:01:09 +0000
Subject: [bitcoin-dev] Issolated Bitcoin Nodes
In-Reply-To: <SC1P152MB1648D0F9DF4279C49D755233F53F0@SC1P152MB1648.LAMP152.PROD.OUTLOOK.COM>
References: <SC1P152MB1648D0F9DF4279C49D755233F53F0@SC1P152MB1648.LAMP152.PROD.OUTLOOK.COM>
Message-ID: <9752F0E1-A339-4A2D-9574-843DE32AE5A3@mattcorallo.com>

I haven't investigated, but you may be seeing segwit-invalid blocks...0.13.0+ nodes will enforce segwit as it activated some time ago on testnet, 0.12.X nodes will not.

On March 23, 2017 3:37:34 PM PDT, Juan Garavaglia via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>We notice some reorgs in Bitcoin testnet, while reorgs in testnet are
>common and may be part of different tests and experiments, it seems the
>forks are not created by a single user and multiple blocks were mined
>by different users in each chain.  My first impression was that the
>problem was related to network issues but some Bitcoin explorers were
>following one chain while others follow the other one.  Nonetheless,
>well established explorers like blocktrail.com or blockr.io were
>following different chains at different heights which led to me to
>believe that it was not a network issue. After some time, a reorg
>occurs and it all comes to normal state as a single chain.
>We started investigating more and we identified that the fork occurs
>with nodes 0.12; in some situations, nodes 0.12 has longer/different
>chains. The blocks in both chains are valid so something must be
>occurring in the communication between nodes but not related with the
>network itself.
>Long story short, when nodes 0.13+ receive blocks from 0.13+ nodes all
>is ok, and those blocks propagate to older nodes with no issues. But
>when a block tries to be propagated from bitcoind 0.12.+ to newer ones
>those blocks are NOT being propagated to the peers with newer versions
>while these newer blocks are being propagated to peers with older
>versions with no issues.
>My conclusion is that we have a backward compatibility issue between
>0.13.X+ and older versions.
>The issue is simple to replicate, first, get latest version of
>bitcoind, complete the IBD after is at current height, then force it to
>use exclusively one or more peers of versions 0.12.X and older, and you
>will notice that the latest version node will never receive a new
>block.
>Probably some alternative bitcoin implementations act as bridges
>between these two versions and facilitate the chain reorgs.
>I have not yet found any way where/how it can be used in a malicious
>way or be exploited by a miner but in theory Bitcoin 0.13.X+ should
>remain compatible with older ones, but a 0.13+ node may become isolated
>by 0.12 peers, and there is not notice for the node owner.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170323/f7be920b/attachment.html>

From pieter.wuille at gmail.com  Fri Mar 24 00:20:32 2017
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Thu, 23 Mar 2017 17:20:32 -0700
Subject: [bitcoin-dev] Issolated Bitcoin Nodes
In-Reply-To: <SC1P152MB1648D0F9DF4279C49D755233F53F0@SC1P152MB1648.LAMP152.PROD.OUTLOOK.COM>
References: <SC1P152MB1648D0F9DF4279C49D755233F53F0@SC1P152MB1648.LAMP152.PROD.OUTLOOK.COM>
Message-ID: <CAPg+sBjrjUFJZnCtmcvZYs_pc4T3YzU_jtK+eZANyGKSLavrXg@mail.gmail.com>

On Thu, Mar 23, 2017 at 3:37 PM, Juan Garavaglia via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> Long story short, when nodes 0.13+ receive blocks from 0.13+ nodes all is
> ok, and those blocks propagate to older nodes with no issues. But when a
> block tries to be propagated from bitcoind 0.12.+ to newer ones those blocks
> are NOT being propagated to the peers with newer versions while these newer
> blocks are being propagated to peers with older versions with no issues.
>
> My conclusion is that we have a backward compatibility issue between 0.13.X+
> and older versions.

Hello Juan,

this is expected behaviour. Nodes with segwit active only download
blocks from other segwit peers, as old peers cannot provide the
witness data they need to verify the blocks.

-- 
Pieter

From james.hilliard1 at gmail.com  Fri Mar 24 00:31:25 2017
From: james.hilliard1 at gmail.com (James Hilliard)
Date: Thu, 23 Mar 2017 19:31:25 -0500
Subject: [bitcoin-dev] Issolated Bitcoin Nodes
In-Reply-To: <CAPg+sBjrjUFJZnCtmcvZYs_pc4T3YzU_jtK+eZANyGKSLavrXg@mail.gmail.com>
References: <SC1P152MB1648D0F9DF4279C49D755233F53F0@SC1P152MB1648.LAMP152.PROD.OUTLOOK.COM>
	<CAPg+sBjrjUFJZnCtmcvZYs_pc4T3YzU_jtK+eZANyGKSLavrXg@mail.gmail.com>
Message-ID: <CADvTj4o=_X2OK8YTtRdrY=8tgxg9Km3PBfdPZ=KAFctHk4Ctwg@mail.gmail.com>

There were bridge nodes being run on testnet at one point to prevent
forks https://github.com/jl2012/bitcoin/commit/9717d856e72baa939d4b273f0a56e6009978e11b

On Thu, Mar 23, 2017 at 7:20 PM, Pieter Wuille via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On Thu, Mar 23, 2017 at 3:37 PM, Juan Garavaglia via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> Long story short, when nodes 0.13+ receive blocks from 0.13+ nodes all is
>> ok, and those blocks propagate to older nodes with no issues. But when a
>> block tries to be propagated from bitcoind 0.12.+ to newer ones those blocks
>> are NOT being propagated to the peers with newer versions while these newer
>> blocks are being propagated to peers with older versions with no issues.
>>
>> My conclusion is that we have a backward compatibility issue between 0.13.X+
>> and older versions.
>
> Hello Juan,
>
> this is expected behaviour. Nodes with segwit active only download
> blocks from other segwit peers, as old peers cannot provide the
> witness data they need to verify the blocks.
>
> --
> Pieter
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From eric at voskuil.org  Fri Mar 24 01:58:37 2017
From: eric at voskuil.org (Eric Voskuil)
Date: Thu, 23 Mar 2017 18:58:37 -0700
Subject: [bitcoin-dev] Issolated Bitcoin Nodes
In-Reply-To: <CAPg+sBjrjUFJZnCtmcvZYs_pc4T3YzU_jtK+eZANyGKSLavrXg@mail.gmail.com>
References: <SC1P152MB1648D0F9DF4279C49D755233F53F0@SC1P152MB1648.LAMP152.PROD.OUTLOOK.COM>
	<CAPg+sBjrjUFJZnCtmcvZYs_pc4T3YzU_jtK+eZANyGKSLavrXg@mail.gmail.com>
Message-ID: <cfdd397d-afac-e0c3-b347-558152d7a81b@voskuil.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

On 03/23/2017 05:20 PM, Pieter Wuille via bitcoin-dev wrote:
> On Thu, Mar 23, 2017 at 3:37 PM, Juan Garavaglia via bitcoin-dev 
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> Long story short, when nodes 0.13+ receive blocks from 0.13+
>> nodes all is ok, and those blocks propagate to older nodes with
>> no issues. But when a block tries to be propagated from bitcoind
>> 0.12.+ to newer ones those blocks are NOT being propagated to the
>> peers with newer versions while these newer blocks are being
>> propagated to peers with older versions with no issues.
>> 
>> My conclusion is that we have a backward compatibility issue
>> between 0.13.X+ and older versions.
> 
> Hello Juan,
> 
> this is expected behaviour. Nodes with segwit active only download 
> blocks from other segwit peers, as old peers cannot provide the 
> witness data they need to verify the blocks.

Juan's statement pertains to incompatibility, not mysterious causation.

Clearly it's a material consideration. Is it an oversight that this is
not documented as an incompatibility in any of the segwit BIPs?

I don't recall any discussion on the importance of segwit bridge
nodes. Is there a plan for bridging mainnet?

e
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)

iQEcBAEBCAAGBQJY1H1AAAoJEDzYwH8LXOFOAk4H/RrJyexvyFKXfY7qC0bGCVwN
2iZ0wR0n/H0Z0qfP5nzDID0RARC3F/KFAAeLTaCIZa5uI0h3MrPbNm7hSi/m0nHJ
mTzfJf0E8g+ETzyDpWjgR25ta6n3VdKp2tnNrY3z/ojnGYBFthpRDWV09K5trX5k
qMyoPDfTP8jVIwihqx3MZLBnfiQKlEjNxCxmnuL7bh37msp6WK+elKudSrDBPiIi
ljQ+u5NyeKWY+qzEzKPShIKnm3wC4K/RiiZIUvz60x6PCHr8OZGTEiKhPLWznVuj
Q9gVtHxFzDpMZbxo4vP4nH+isQgqNa9gQ2E5783OC0/lpxHCoZEsgsD5lTAcp08=
=GyRS
-----END PGP SIGNATURE-----

From achow101-lists at achow101.com  Fri Mar 24 03:38:21 2017
From: achow101-lists at achow101.com (Andrew Chow)
Date: Thu, 23 Mar 2017 23:38:21 -0400
Subject: [bitcoin-dev] Issolated Bitcoin Nodes
In-Reply-To: <3fd9846c-6c57-9b57-0b6e-e5958e644e1d@achow101.com>
References: <SC1P152MB1648D0F9DF4279C49D755233F53F0@SC1P152MB1648.LAMP152.PROD.OUTLOOK.COM>
	<3fd9846c-6c57-9b57-0b6e-e5958e644e1d@achow101.com>
Message-ID: <2caa270f-9feb-4720-9b68-eff458cdc956@achow101.com>

A correction to my previous email (because people are quoting me on
r/btc and what I wrote was wrong)

This statement is incorrect:

> Given that Testnet has a smaller number of nodes and less difficulty,
this could result in some miners using 0.13.0+ mining blocks which do
not propagate well and thus causing multiple chain splits and reorgs as
other miners find blocks for the same height before receiving a block
for that height.

Miners using 0.13.0+ will produce blocks that propagate well. This is
because 0.12.x- nodes will accept those blocks, and so will 0.13.0+.
Furthermore Core 0.13.0+ will use its outbound connections to connect to
segwit enabled peers so that it will be relaying segwit blocks to
someone. However Bitcoin Core 0.13.0+ will not request blocks from peers
that are not segwit enabled (because with segwit, they will be receiving
blocks without witnesses which are invalid to a segwit node), so they
will not receive blocks mined by a 0.12.x- node. This means that 0.12.x-
mined blocks propagate poorly, even though are valid. Because of the
poor propagation, a 0.13.0+ miner can find a block at the same height
which is more likely to get built upon. However, the poorly propagated
block can still reach other 0.12.x- miners who can build upon it due to
the low difficulty and difficulty resets, thus causing multiple chains
to exist, particularly among pockets of 0.12.x- nodes. The reorgs happen
when either the 0.12.x- nodes hear of the segwit blockchain that is
presumably longer because it has the majority hashrate, or when people
run bridges which allow 0.12.x- nodes relay blocks to 0.13.0+ nodes.

On 3/23/2017 7:14 PM, Andrew Chow wrote:
>
> The issue is due to Segwit blocks since Testnet has already activated
> Segwit. 0.12.x- nodes will receive a Segwit block with all of the
> witnesses stripped. When they relay this block to a 0.13.0+ node, the
> block will be rejected because those have Segwit functionality and
> require the witnesses to be in the block. Given that Testnet has a
> smaller number of nodes and less difficulty, this could result in some
> miners using 0.13.0+ mining blocks which do not propagate well and
> thus causing multiple chain splits and reorgs as other miners find
> blocks for the same height before receiving a block for that height.
>
>
> On 3/23/2017 6:37 PM, Juan Garavaglia via bitcoin-dev wrote:
>>
>> We notice some reorgs in Bitcoin testnet, while reorgs in testnet are
>> common and may be part of different tests and experiments, it seems
>> the forks are not created by a single user and multiple blocks were
>> mined by different users in each chain.  My first impression was that
>> the problem was related to network issues but some Bitcoin explorers
>> were following one chain while others follow the other one. 
>> Nonetheless, well established explorers like blocktrail.com or
>> blockr.io were following different chains at different heights which
>> led to me to believe that it was not a network issue. After some
>> time, a reorg occurs and it all comes to normal state as a single chain.
>>
>> We started investigating more and we identified that the fork occurs
>> with nodes 0.12; in some situations, nodes 0.12 has longer/different
>> chains. The blocks in both chains are valid so something must be
>> occurring in the communication between nodes but not related with the
>> network itself.
>>
>> Long story short, when nodes 0.13+ receive blocks from 0.13+ nodes
>> all is ok, and those blocks propagate to older nodes with no issues.
>> But when a block tries to be propagated from bitcoind 0.12.+ to newer
>> ones those blocks are NOT being propagated to the peers with newer
>> versions while these newer blocks are being propagated to peers with
>> older versions with no issues.
>>
>> My conclusion is that we have a backward compatibility issue between
>> 0.13.X+ and older versions.
>>
>> The issue is simple to replicate, first, get latest version of
>> bitcoind, complete the IBD after is at current height, then force it
>> to use exclusively one or more peers of versions 0.12.X and older,
>> and you will notice that the latest version node will never receive a
>> new block.
>>
>> Probably some alternative bitcoin implementations act as bridges
>> between these two versions and facilitate the chain reorgs.
>>
>> I have not yet found any way where/how it can be used in a malicious
>> way or be exploited by a miner but in theory Bitcoin 0.13.X+ should
>> remain compatible with older ones, but a 0.13+ node may become
>> isolated by 0.12 peers, and there is not notice for the node owner.
>>
>>  
>>
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170323/74d42235/attachment-0001.html>

From cannon at cannon-ciota.info  Fri Mar 24 16:03:31 2017
From: cannon at cannon-ciota.info (CANNON)
Date: Fri, 24 Mar 2017 16:03:31 +0000
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
 malicious miner takeover?
Message-ID: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

When the original white paper was written the idea was that nodes
would be miners at same time. That the distribution of mining power
being mostly on par with the distribution of nodes if I understand
correctly. The problem we face now I fear, is the mining power
becoming centralized. Even if every bitcoin node invested a $1000
into mining power and mined at a loss, it still would not even
make a dent in hash distribution. Currently there are around 6000
known nodes. If each node invested $1000 for say 10 ths of hashing
power. At current hashrate of around 3,674,473,142 GH/s this would
only make up %16 of hash power. This is out of balance as while
nodes are distributed mining power is becoming very centralized
due to the creation of monopolization of ASICs. The problem we
are facing is a small group of a couple people whom control a
large amount and growing of hash power. At time of this writing
it has quickly risen to 39% and at current rate will soon become
50% of hashing power that is controlled by a small group of a few
people. Their intentions are too hijack the bitcoin network to a
cryptocurrency that suits their dangerous agenda. Dangerous because
their plan would centralize power of consensus as I understand it,
to themselves the miners. Dangerous also because the code base of
the attempting subverters is buggy, insecure, and reckless from a
technological standpoint. Even though they only have very minute
amount of nodes compared to legitimate bitcion nodes, the danger
is that they are very quickly taking over in mining power. While
it is true that nodes will not accept invalid blocks that would be
attempted to be pushed by the conspirators, they are threatening to
attack the valid (or in their words, "minority chain") by dedicating
some mining power soley to attacking the valid chain by mining empty
blocks and orphaning the valid chain. So even though the majority
of nodes would be enforcing what blocks are valid and as a result
block the non-compliant longer chain, the conspiring miner can simply
(as they are currently threatening to) make the valid chain unuseable
by mining empty blocks.

If a malicious miner with half or majority control passes invalid
blocks, the worst case scenario is a hardfork coin split in which
the non-compliant chain becomes an alt. However the problem is that
this malicious miner is very recently threatening to not just simply
fork, but to kill the valid chain to force economic activity to the
adversary controlled chain. If we can simply defend against attacks
to the valid chain, we can prevent the valid chain from dying.

While empty or near empty blocks would generally be protected by
the incentive of miners to make money. The threat is there if the
malicious miner with majority control is willing to lose out on
these transaction fees and block reward if their intention is to
suppress it to force the majority onto their chain.

Proposal for potential solution Update nodes to ignore empty blocks,
so this way mined empty blocks cannot be used to DOS attack the
blockchain. But what about defense from say, blocks that are
not empty but intentionally only have a couple transactions
in it? Possible to have nodes not only ignore empty blocks,
but also blocks that are abnormally small compared to number of
valid transactions in mempool? 

For example would be something like this:
If block = (empty OR  <%75 of mempool) THEN discard
This threshold just an example.

What would be any potentials risks
and attacks resulting from both having such new rulesets and not
doing anything?

Lets assume that the first problem of blocking empty or near empty
blocks has been mitigated with the above proposed solution. How
likely and possible would it be for a malicious miner with lots of
mining power to orphan the chain after so many blocks even with
non empty blocks? Is there a need to mitigate this? 
If so is it possible?

Time is running short I fear. There needs to be discussion on various
attacks and how they can be guarded against along with various
other contingency plans.

- -- 
Cannon
PGP Fingerprint: 2BB5 15CD 66E7 4E28 45DC 6494 A5A2 2879 3F06 E832 
Email: cannon at cannon-ciota.info

NOTICE: ALL EMAIL CORRESPONDENCE NOT SIGNED/ENCRYPTED WITH PGP SHOULD 
BE CONSIDERED POTENTIALLY FORGED, AND NOT PRIVATE. 
If this matters to you, use PGP.
-----BEGIN PGP SIGNATURE-----

iQIcBAEBCgAGBQJY1UH/AAoJEAYDai9lH2mw2QYQALDLBxjdO5WTG7VXfuAE476p
D3o1MMGw23tb+DFUO5WV6aFqfy3VSxbVXz6UuWbj6kHgp3ys6qxg5TX0Dy8tKSZM
V28kovuS/pfen4gTxw1FCNff7YVW1R8QX+cSYxSD5EoEaTbpIPgi8zMusDxUVZk2
WG3ItoyvkLvoNIYGDcU3gR3UkjDS5lOPiHu5BKSj1dEiibOXhr8JEBCznfUSyxCG
TjVRJaUPlwCU06nad8jAZiDrsW3l866iNkBKaMzMavYuMLvCGIdRkbf54B2ZlIT/
S/owusxqeIdQpydi/3ydnrqyeWo3znMnn+oOvdvfYEHKLts6gar3Zv8cZ40yYSIE
z7C7GQFIo5TYDUNOk+2VE7NNtdX39Wj3gJql/305miaIt0qMsf1D30ODjePwyxUQ
LQ96ZeF1K/0RSTN5TFvLjV9ZmaaN/tFm3kx0PunptJaZT8d9EgMeHREjCF4di04A
6Dp3Qeug41X/zdIc2AM387QnPwmGB1TpfrY9qgvcrIe26T6An2V5LHwVmslCX3ui
DYAl0o5ODQqnnakF1FIrr1blMVqm7FqDPQc1I5TfzQuxX2+x+5zdrciPC2HUMCMQ
jMujge5IdGL3kjEwjt+M6kqLu0/T0fhdUetb2DWrRJUcEVoIaiUL7qLJC+4KMR3d
Gu3oWoE1ld+BC6At28AD
=SSuj
-----END PGP SIGNATURE-----

From nickodell at gmail.com  Fri Mar 24 17:29:54 2017
From: nickodell at gmail.com (Nick ODell)
Date: Fri, 24 Mar 2017 11:29:54 -0600
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
 malicious miner takeover?
In-Reply-To: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
Message-ID: <CANN4kmcoffWnwE3jCSSNE8xFp4JAUTJim9TsBVtx0QuBbN03FQ@mail.gmail.com>

Two concerns:

1) This makes block validity depend on things that aren't in the
blockchain. If you and I have different minrelaytxfee's, we will have
different mempool sizes. Your node will discard a block, but my node will
think it is valid, and our nodes will not come to consensus.

2) This is trivially bypassed. A miner can take some coins they own
already, and create a zero-value transaction that has a scriptPubKey of
OP_1. (i.e. anyone-can-spend.) Then, they create another transaction
spending the first transaction, with an empty scriptSig, and the same
scriptPubKey. They do this over and over until they fill up the block.

The last OP_1 output can be left for the next miner. Since the above
algorithm is deterministic, a merkle tree containing every transaction
except the coinbase can be precomputed. The 'malicious' miners do not need
to store this fake block.

On Fri, Mar 24, 2017 at 10:03 AM, CANNON via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA512
>
> When the original white paper was written the idea was that nodes
> would be miners at same time. That the distribution of mining power
> being mostly on par with the distribution of nodes if I understand
> correctly. The problem we face now I fear, is the mining power
> becoming centralized. Even if every bitcoin node invested a $1000
> into mining power and mined at a loss, it still would not even
> make a dent in hash distribution. Currently there are around 6000
> known nodes. If each node invested $1000 for say 10 ths of hashing
> power. At current hashrate of around 3,674,473,142 GH/s this would
> only make up %16 of hash power. This is out of balance as while
> nodes are distributed mining power is becoming very centralized
> due to the creation of monopolization of ASICs. The problem we
> are facing is a small group of a couple people whom control a
> large amount and growing of hash power. At time of this writing
> it has quickly risen to 39% and at current rate will soon become
> 50% of hashing power that is controlled by a small group of a few
> people. Their intentions are too hijack the bitcoin network to a
> cryptocurrency that suits their dangerous agenda. Dangerous because
> their plan would centralize power of consensus as I understand it,
> to themselves the miners. Dangerous also because the code base of
> the attempting subverters is buggy, insecure, and reckless from a
> technological standpoint. Even though they only have very minute
> amount of nodes compared to legitimate bitcion nodes, the danger
> is that they are very quickly taking over in mining power. While
> it is true that nodes will not accept invalid blocks that would be
> attempted to be pushed by the conspirators, they are threatening to
> attack the valid (or in their words, "minority chain") by dedicating
> some mining power soley to attacking the valid chain by mining empty
> blocks and orphaning the valid chain. So even though the majority
> of nodes would be enforcing what blocks are valid and as a result
> block the non-compliant longer chain, the conspiring miner can simply
> (as they are currently threatening to) make the valid chain unuseable
> by mining empty blocks.
>
> If a malicious miner with half or majority control passes invalid
> blocks, the worst case scenario is a hardfork coin split in which
> the non-compliant chain becomes an alt. However the problem is that
> this malicious miner is very recently threatening to not just simply
> fork, but to kill the valid chain to force economic activity to the
> adversary controlled chain. If we can simply defend against attacks
> to the valid chain, we can prevent the valid chain from dying.
>
> While empty or near empty blocks would generally be protected by
> the incentive of miners to make money. The threat is there if the
> malicious miner with majority control is willing to lose out on
> these transaction fees and block reward if their intention is to
> suppress it to force the majority onto their chain.
>
> Proposal for potential solution Update nodes to ignore empty blocks,
> so this way mined empty blocks cannot be used to DOS attack the
> blockchain. But what about defense from say, blocks that are
> not empty but intentionally only have a couple transactions
> in it? Possible to have nodes not only ignore empty blocks,
> but also blocks that are abnormally small compared to number of
> valid transactions in mempool?
>
> For example would be something like this:
> If block = (empty OR  <%75 of mempool) THEN discard
> This threshold just an example.
>
> What would be any potentials risks
> and attacks resulting from both having such new rulesets and not
> doing anything?
>
> Lets assume that the first problem of blocking empty or near empty
> blocks has been mitigated with the above proposed solution. How
> likely and possible would it be for a malicious miner with lots of
> mining power to orphan the chain after so many blocks even with
> non empty blocks? Is there a need to mitigate this?
> If so is it possible?
>
> Time is running short I fear. There needs to be discussion on various
> attacks and how they can be guarded against along with various
> other contingency plans.
>
> - --
> Cannon
> PGP Fingerprint: 2BB5 15CD 66E7 4E28 45DC 6494 A5A2 2879 3F06 E832
> Email: cannon at cannon-ciota.info
>
> NOTICE: ALL EMAIL CORRESPONDENCE NOT SIGNED/ENCRYPTED WITH PGP SHOULD
> BE CONSIDERED POTENTIALLY FORGED, AND NOT PRIVATE.
> If this matters to you, use PGP.
> -----BEGIN PGP SIGNATURE-----
>
> iQIcBAEBCgAGBQJY1UH/AAoJEAYDai9lH2mw2QYQALDLBxjdO5WTG7VXfuAE476p
> D3o1MMGw23tb+DFUO5WV6aFqfy3VSxbVXz6UuWbj6kHgp3ys6qxg5TX0Dy8tKSZM
> V28kovuS/pfen4gTxw1FCNff7YVW1R8QX+cSYxSD5EoEaTbpIPgi8zMusDxUVZk2
> WG3ItoyvkLvoNIYGDcU3gR3UkjDS5lOPiHu5BKSj1dEiibOXhr8JEBCznfUSyxCG
> TjVRJaUPlwCU06nad8jAZiDrsW3l866iNkBKaMzMavYuMLvCGIdRkbf54B2ZlIT/
> S/owusxqeIdQpydi/3ydnrqyeWo3znMnn+oOvdvfYEHKLts6gar3Zv8cZ40yYSIE
> z7C7GQFIo5TYDUNOk+2VE7NNtdX39Wj3gJql/305miaIt0qMsf1D30ODjePwyxUQ
> LQ96ZeF1K/0RSTN5TFvLjV9ZmaaN/tFm3kx0PunptJaZT8d9EgMeHREjCF4di04A
> 6Dp3Qeug41X/zdIc2AM387QnPwmGB1TpfrY9qgvcrIe26T6An2V5LHwVmslCX3ui
> DYAl0o5ODQqnnakF1FIrr1blMVqm7FqDPQc1I5TfzQuxX2+x+5zdrciPC2HUMCMQ
> jMujge5IdGL3kjEwjt+M6kqLu0/T0fhdUetb2DWrRJUcEVoIaiUL7qLJC+4KMR3d
> Gu3oWoE1ld+BC6At28AD
> =SSuj
> -----END PGP SIGNATURE-----
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170324/3ff30b51/attachment.html>

From hampus.sjoberg at gmail.com  Fri Mar 24 17:37:25 2017
From: hampus.sjoberg at gmail.com (=?UTF-8?Q?Hampus_Sj=C3=B6berg?=)
Date: Fri, 24 Mar 2017 18:37:25 +0100
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
 malicious miner takeover?
In-Reply-To: <CANN4kmcoffWnwE3jCSSNE8xFp4JAUTJim9TsBVtx0QuBbN03FQ@mail.gmail.com>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
	<CANN4kmcoffWnwE3jCSSNE8xFp4JAUTJim9TsBVtx0QuBbN03FQ@mail.gmail.com>
Message-ID: <CAFMkqK-Yqc79J9rGmUkf+0xtjFyvaMe31E01ourew=1zPhuf3g@mail.gmail.com>

> For example would be something like this:
> If block = (empty OR  <%75 of mempool) THEN discard
> This threshold just an example

I don't think this is a good idea, mempool is different from node to node
and is not a part of the consensus.

Hampus

2017-03-24 18:29 GMT+01:00 Nick ODell via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org>:

> Two concerns:
>
> 1) This makes block validity depend on things that aren't in the
> blockchain. If you and I have different minrelaytxfee's, we will have
> different mempool sizes. Your node will discard a block, but my node will
> think it is valid, and our nodes will not come to consensus.
>
> 2) This is trivially bypassed. A miner can take some coins they own
> already, and create a zero-value transaction that has a scriptPubKey of
> OP_1. (i.e. anyone-can-spend.) Then, they create another transaction
> spending the first transaction, with an empty scriptSig, and the same
> scriptPubKey. They do this over and over until they fill up the block.
>
> The last OP_1 output can be left for the next miner. Since the above
> algorithm is deterministic, a merkle tree containing every transaction
> except the coinbase can be precomputed. The 'malicious' miners do not need
> to store this fake block.
>
> On Fri, Mar 24, 2017 at 10:03 AM, CANNON via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA512
>>
>> When the original white paper was written the idea was that nodes
>> would be miners at same time. That the distribution of mining power
>> being mostly on par with the distribution of nodes if I understand
>> correctly. The problem we face now I fear, is the mining power
>> becoming centralized. Even if every bitcoin node invested a $1000
>> into mining power and mined at a loss, it still would not even
>> make a dent in hash distribution. Currently there are around 6000
>> known nodes. If each node invested $1000 for say 10 ths of hashing
>> power. At current hashrate of around 3,674,473,142 GH/s this would
>> only make up %16 of hash power. This is out of balance as while
>> nodes are distributed mining power is becoming very centralized
>> due to the creation of monopolization of ASICs. The problem we
>> are facing is a small group of a couple people whom control a
>> large amount and growing of hash power. At time of this writing
>> it has quickly risen to 39% and at current rate will soon become
>> 50% of hashing power that is controlled by a small group of a few
>> people. Their intentions are too hijack the bitcoin network to a
>> cryptocurrency that suits their dangerous agenda. Dangerous because
>> their plan would centralize power of consensus as I understand it,
>> to themselves the miners. Dangerous also because the code base of
>> the attempting subverters is buggy, insecure, and reckless from a
>> technological standpoint. Even though they only have very minute
>> amount of nodes compared to legitimate bitcion nodes, the danger
>> is that they are very quickly taking over in mining power. While
>> it is true that nodes will not accept invalid blocks that would be
>> attempted to be pushed by the conspirators, they are threatening to
>> attack the valid (or in their words, "minority chain") by dedicating
>> some mining power soley to attacking the valid chain by mining empty
>> blocks and orphaning the valid chain. So even though the majority
>> of nodes would be enforcing what blocks are valid and as a result
>> block the non-compliant longer chain, the conspiring miner can simply
>> (as they are currently threatening to) make the valid chain unuseable
>> by mining empty blocks.
>>
>> If a malicious miner with half or majority control passes invalid
>> blocks, the worst case scenario is a hardfork coin split in which
>> the non-compliant chain becomes an alt. However the problem is that
>> this malicious miner is very recently threatening to not just simply
>> fork, but to kill the valid chain to force economic activity to the
>> adversary controlled chain. If we can simply defend against attacks
>> to the valid chain, we can prevent the valid chain from dying.
>>
>> While empty or near empty blocks would generally be protected by
>> the incentive of miners to make money. The threat is there if the
>> malicious miner with majority control is willing to lose out on
>> these transaction fees and block reward if their intention is to
>> suppress it to force the majority onto their chain.
>>
>> Proposal for potential solution Update nodes to ignore empty blocks,
>> so this way mined empty blocks cannot be used to DOS attack the
>> blockchain. But what about defense from say, blocks that are
>> not empty but intentionally only have a couple transactions
>> in it? Possible to have nodes not only ignore empty blocks,
>> but also blocks that are abnormally small compared to number of
>> valid transactions in mempool?
>>
>> For example would be something like this:
>> If block = (empty OR  <%75 of mempool) THEN discard
>> This threshold just an example.
>>
>> What would be any potentials risks
>> and attacks resulting from both having such new rulesets and not
>> doing anything?
>>
>> Lets assume that the first problem of blocking empty or near empty
>> blocks has been mitigated with the above proposed solution. How
>> likely and possible would it be for a malicious miner with lots of
>> mining power to orphan the chain after so many blocks even with
>> non empty blocks? Is there a need to mitigate this?
>> If so is it possible?
>>
>> Time is running short I fear. There needs to be discussion on various
>> attacks and how they can be guarded against along with various
>> other contingency plans.
>>
>> - --
>> Cannon
>> PGP Fingerprint: 2BB5 15CD 66E7 4E28 45DC 6494 A5A2 2879 3F06 E832
>> Email: cannon at cannon-ciota.info
>>
>> NOTICE: ALL EMAIL CORRESPONDENCE NOT SIGNED/ENCRYPTED WITH PGP SHOULD
>> BE CONSIDERED POTENTIALLY FORGED, AND NOT PRIVATE.
>> If this matters to you, use PGP.
>> -----BEGIN PGP SIGNATURE-----
>>
>> iQIcBAEBCgAGBQJY1UH/AAoJEAYDai9lH2mw2QYQALDLBxjdO5WTG7VXfuAE476p
>> D3o1MMGw23tb+DFUO5WV6aFqfy3VSxbVXz6UuWbj6kHgp3ys6qxg5TX0Dy8tKSZM
>> V28kovuS/pfen4gTxw1FCNff7YVW1R8QX+cSYxSD5EoEaTbpIPgi8zMusDxUVZk2
>> WG3ItoyvkLvoNIYGDcU3gR3UkjDS5lOPiHu5BKSj1dEiibOXhr8JEBCznfUSyxCG
>> TjVRJaUPlwCU06nad8jAZiDrsW3l866iNkBKaMzMavYuMLvCGIdRkbf54B2ZlIT/
>> S/owusxqeIdQpydi/3ydnrqyeWo3znMnn+oOvdvfYEHKLts6gar3Zv8cZ40yYSIE
>> z7C7GQFIo5TYDUNOk+2VE7NNtdX39Wj3gJql/305miaIt0qMsf1D30ODjePwyxUQ
>> LQ96ZeF1K/0RSTN5TFvLjV9ZmaaN/tFm3kx0PunptJaZT8d9EgMeHREjCF4di04A
>> 6Dp3Qeug41X/zdIc2AM387QnPwmGB1TpfrY9qgvcrIe26T6An2V5LHwVmslCX3ui
>> DYAl0o5ODQqnnakF1FIrr1blMVqm7FqDPQc1I5TfzQuxX2+x+5zdrciPC2HUMCMQ
>> jMujge5IdGL3kjEwjt+M6kqLu0/T0fhdUetb2DWrRJUcEVoIaiUL7qLJC+4KMR3d
>> Gu3oWoE1ld+BC6At28AD
>> =SSuj
>> -----END PGP SIGNATURE-----
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170324/0a8b7125/attachment-0001.html>

From vitteaymeric at gmail.com  Fri Mar 24 19:00:31 2017
From: vitteaymeric at gmail.com (Aymeric Vitte)
Date: Fri, 24 Mar 2017 20:00:31 +0100
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
 malicious miner takeover?
In-Reply-To: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
Message-ID: <35ba77db-f95a-4517-c960-8ad42a633ba0@gmail.com>

Since I have been working on crypto currencies/bitcoin, I kept
repeating: btc should make a priority to significantly increase the
ridiculous number of full nodes we have today, design an incentive for
people to run full nodes and design a system for people to setup full
nodes in an acceptable timeframe

Unfortunately, this was not a priority at all, maybe because of some
historical consensus between miners and devs, so here we are today, some
miners became crazy, the situation would be much more different if more
full nodes were there

Because, how comes everybody perfectly knows the plans of the conspiring
miners? They were stupid enough to explain very precisely how they will
perform the attack?

If I were them I would in addition setup quite a lot of nodes (which
probably they are planning to do, because anyway they need them for the
new sw), not difficult, not so expensive

Defending against abnormal blocks looks to be a non issue, I suppose
that the btc devs perfectly know how to create a pattern based on
history to detect abnormal blocks (including some strange transactions)
and reject them, but this further depends on the ability of current full
nodes to upgrade, which apparently is not what they do the best

I don't know what "Time is running short I fear" stands for and when 50%
is supposed to be reached

Given that it looks difficult to quickly increase the number of full
nodes, that increasing the mining power by standard means looks too
expensive, useless and not profitable, that a counter attack based on a
new proof of something does not look to be ready, then maybe the btc
folks should ask Bram Cohen (who by some luck is participating to this
list) to resurrect the bitcoin miner Epic Scale which Bittorrent Inc (in
an umpteenth dubious attempt to make money) tried some time ago to
include quietly in utorrent forgetting to ask the authorization of the
selected users, then utorrent users might upgrade (potentially 150 M),
and the resulting mining power might be sufficient, depending on the
incentive for this, which is TBD

Or activate by anticipation proof of space... unlike bitcoin-qt,
utorrent sw is quite good to be intrusive, run in background when you
think you have closed it, run things you don't know, etc, so quite
efficient in this situation

Then if btc folks wants to promote full nodes too, it would not be a bad
idea to put the bitcoin-qt blockchain + chain state in a torrent making
sure it is seeded correctly (there are plenty of academics here, they
can do it and run full nodes too) so people can download it and setup
full nodes (incentive TBD too) assuming they know about upnp/port forwarding


Le 24/03/2017 ? 17:03, CANNON via bitcoin-dev a ?crit :
> When the original white paper was written the idea was that nodes
> would be miners at same time. That the distribution of mining power
> being mostly on par with the distribution of nodes if I understand
> correctly. The problem we face now I fear, is the mining power
> becoming centralized. Even if every bitcoin node invested a $1000
> into mining power and mined at a loss, it still would not even
> make a dent in hash distribution. Currently there are around 6000
> known nodes. If each node invested $1000 for say 10 ths of hashing
> power. At current hashrate of around 3,674,473,142 GH/s this would
> only make up %16 of hash power. This is out of balance as while
> nodes are distributed mining power is becoming very centralized
> due to the creation of monopolization of ASICs. The problem we
> are facing is a small group of a couple people whom control a
> large amount and growing of hash power. At time of this writing
> it has quickly risen to 39% and at current rate will soon become
> 50% of hashing power that is controlled by a small group of a few
> people. Their intentions are too hijack the bitcoin network to a
> cryptocurrency that suits their dangerous agenda. Dangerous because
> their plan would centralize power of consensus as I understand it,
> to themselves the miners. Dangerous also because the code base of
> the attempting subverters is buggy, insecure, and reckless from a
> technological standpoint. Even though they only have very minute
> amount of nodes compared to legitimate bitcion nodes, the danger
> is that they are very quickly taking over in mining power. While
> it is true that nodes will not accept invalid blocks that would be
> attempted to be pushed by the conspirators, they are threatening to
> attack the valid (or in their words, "minority chain") by dedicating
> some mining power soley to attacking the valid chain by mining empty
> blocks and orphaning the valid chain. So even though the majority
> of nodes would be enforcing what blocks are valid and as a result
> block the non-compliant longer chain, the conspiring miner can simply
> (as they are currently threatening to) make the valid chain unuseable
> by mining empty blocks.
>
> If a malicious miner with half or majority control passes invalid
> blocks, the worst case scenario is a hardfork coin split in which
> the non-compliant chain becomes an alt. However the problem is that
> this malicious miner is very recently threatening to not just simply
> fork, but to kill the valid chain to force economic activity to the
> adversary controlled chain. If we can simply defend against attacks
> to the valid chain, we can prevent the valid chain from dying.
>
> While empty or near empty blocks would generally be protected by
> the incentive of miners to make money. The threat is there if the
> malicious miner with majority control is willing to lose out on
> these transaction fees and block reward if their intention is to
> suppress it to force the majority onto their chain.
>
> Proposal for potential solution Update nodes to ignore empty blocks,
> so this way mined empty blocks cannot be used to DOS attack the
> blockchain. But what about defense from say, blocks that are
> not empty but intentionally only have a couple transactions
> in it? Possible to have nodes not only ignore empty blocks,
> but also blocks that are abnormally small compared to number of
> valid transactions in mempool?
>
> For example would be something like this:
> If block = (empty OR  <%75 of mempool) THEN discard
> This threshold just an example.
>
> What would be any potentials risks
> and attacks resulting from both having such new rulesets and not
> doing anything?
>
> Lets assume that the first problem of blocking empty or near empty
> blocks has been mitigated with the above proposed solution. How
> likely and possible would it be for a malicious miner with lots of
> mining power to orphan the chain after so many blocks even with
> non empty blocks? Is there a need to mitigate this?
> If so is it possible?
>
> Time is running short I fear. There needs to be discussion on various
> attacks and how they can be guarded against along with various
> other contingency plans.
>
> _______________________________________________ > bitcoin-dev mailing list > bitcoin-dev at lists.linuxfoundation.org >
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-- 
Zcash wallets made simple: https://github.com/Ayms/zcash-wallets
Bitcoin wallets made simple: https://github.com/Ayms/bitcoin-wallets
Get the torrent dynamic blocklist: http://peersm.com/getblocklist
Check the 10 M passwords list: http://peersm.com/findmyass
Anti-spies and private torrents, dynamic blocklist: http://torrent-live.org
Peersm : http://www.peersm.com
torrent-live: https://github.com/Ayms/torrent-live
node-Tor : https://www.github.com/Ayms/node-Tor
GitHub : https://www.github.com/Ayms

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170324/a255a71c/attachment.html>

From vitteaymeric at gmail.com  Fri Mar 24 19:00:40 2017
From: vitteaymeric at gmail.com (Aymeric Vitte)
Date: Fri, 24 Mar 2017 20:00:40 +0100
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
 malicious miner takeover?
In-Reply-To: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
Message-ID: <c8e6fd76-efaf-5e98-8048-869d886dbe55@gmail.com>

Since I have been working on crypto currencies/bitcoin, I kept
repeating: btc should make a priority to significantly increase the
ridiculous number of full nodes we have today, design an incentive for
people to run full nodes and design a system for people to setup full
nodes in an acceptable timeframe

Unfortunately, this was not a priority at all, maybe because of some
historical consensus between miners and devs, so here we are today, some
miners became crazy, the situation would be much more different if more
full nodes were there

Because, how comes everybody perfectly knows the plans of the conspiring
miners? They were stupid enough to explain very precisely how they will
perform the attack?

If I were them I would in addition setup quite a lot of nodes (which
probably they are planning to do, because anyway they need them for the
new sw), not difficult, not so expensive

Defending against abnormal blocks looks to be a non issue, I suppose
that the btc devs perfectly know how to create a pattern based on
history to detect abnormal blocks (including some strange transactions)
and reject them, but this further depends on the ability of current full
nodes to upgrade, which apparently is not what they do the best

I don't know what "Time is running short I fear" stands for and when 50%
is supposed to be reached

Given that it looks difficult to quickly increase the number of full
nodes, that increasing the mining power by standard means looks too
expensive, useless and not profitable, that a counter attack based on a
new proof of something does not look to be ready, then maybe the btc
folks should ask Bram Cohen (who by some luck is participating to this
list) to resurrect the bitcoin miner Epic Scale which Bittorrent Inc (in
an umpteenth dubious attempt to make money) tried some time ago to
include quietly in utorrent forgetting to ask the authorization of the
selected users, then utorrent users might upgrade (potentially 150 M),
and the resulting mining power might be sufficient, depending on the
incentive for this, which is TBD

Or activate by anticipation proof of space... unlike bitcoin-qt,
utorrent sw is quite good to be intrusive, run in background when you
think you have closed it, run things you don't know, etc, so quite
efficient in this situation

Then if btc folks wants to promote full nodes too, it would not be a bad
idea to put the bitcoin-qt blockchain + chain state in a torrent making
sure it is seeded correctly (there are plenty of academics here, they
can do it and run full nodes too) so people can download it and setup
full nodes (incentive TBD too) assuming they know about upnp/port forwarding


Le 24/03/2017 ? 17:03, CANNON via bitcoin-dev a ?crit :
> When the original white paper was written the idea was that nodes
> would be miners at same time. That the distribution of mining power
> being mostly on par with the distribution of nodes if I understand
> correctly. The problem we face now I fear, is the mining power
> becoming centralized. Even if every bitcoin node invested a $1000
> into mining power and mined at a loss, it still would not even
> make a dent in hash distribution. Currently there are around 6000
> known nodes. If each node invested $1000 for say 10 ths of hashing
> power. At current hashrate of around 3,674,473,142 GH/s this would
> only make up %16 of hash power. This is out of balance as while
> nodes are distributed mining power is becoming very centralized
> due to the creation of monopolization of ASICs. The problem we
> are facing is a small group of a couple people whom control a
> large amount and growing of hash power. At time of this writing
> it has quickly risen to 39% and at current rate will soon become
> 50% of hashing power that is controlled by a small group of a few
> people. Their intentions are too hijack the bitcoin network to a
> cryptocurrency that suits their dangerous agenda. Dangerous because
> their plan would centralize power of consensus as I understand it,
> to themselves the miners. Dangerous also because the code base of
> the attempting subverters is buggy, insecure, and reckless from a
> technological standpoint. Even though they only have very minute
> amount of nodes compared to legitimate bitcion nodes, the danger
> is that they are very quickly taking over in mining power. While
> it is true that nodes will not accept invalid blocks that would be
> attempted to be pushed by the conspirators, they are threatening to
> attack the valid (or in their words, "minority chain") by dedicating
> some mining power soley to attacking the valid chain by mining empty
> blocks and orphaning the valid chain. So even though the majority
> of nodes would be enforcing what blocks are valid and as a result
> block the non-compliant longer chain, the conspiring miner can simply
> (as they are currently threatening to) make the valid chain unuseable
> by mining empty blocks.
>
> If a malicious miner with half or majority control passes invalid
> blocks, the worst case scenario is a hardfork coin split in which
> the non-compliant chain becomes an alt. However the problem is that
> this malicious miner is very recently threatening to not just simply
> fork, but to kill the valid chain to force economic activity to the
> adversary controlled chain. If we can simply defend against attacks
> to the valid chain, we can prevent the valid chain from dying.
>
> While empty or near empty blocks would generally be protected by
> the incentive of miners to make money. The threat is there if the
> malicious miner with majority control is willing to lose out on
> these transaction fees and block reward if their intention is to
> suppress it to force the majority onto their chain.
>
> Proposal for potential solution Update nodes to ignore empty blocks,
> so this way mined empty blocks cannot be used to DOS attack the
> blockchain. But what about defense from say, blocks that are
> not empty but intentionally only have a couple transactions
> in it? Possible to have nodes not only ignore empty blocks,
> but also blocks that are abnormally small compared to number of
> valid transactions in mempool?
>
> For example would be something like this:
> If block = (empty OR  <%75 of mempool) THEN discard
> This threshold just an example.
>
> What would be any potentials risks
> and attacks resulting from both having such new rulesets and not
> doing anything?
>
> Lets assume that the first problem of blocking empty or near empty
> blocks has been mitigated with the above proposed solution. How
> likely and possible would it be for a malicious miner with lots of
> mining power to orphan the chain after so many blocks even with
> non empty blocks? Is there a need to mitigate this?
> If so is it possible?
>
> Time is running short I fear. There needs to be discussion on various
> attacks and how they can be guarded against along with various
> other contingency plans.
>
> _______________________________________________ > bitcoin-dev mailing list > bitcoin-dev at lists.linuxfoundation.org >
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-- 
Zcash wallets made simple: https://github.com/Ayms/zcash-wallets
Bitcoin wallets made simple: https://github.com/Ayms/bitcoin-wallets
Get the torrent dynamic blocklist: http://peersm.com/getblocklist
Check the 10 M passwords list: http://peersm.com/findmyass
Anti-spies and private torrents, dynamic blocklist: http://torrent-live.org
Peersm : http://www.peersm.com
torrent-live: https://github.com/Ayms/torrent-live
node-Tor : https://www.github.com/Ayms/node-Tor
GitHub : https://www.github.com/Ayms

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170324/c2626958/attachment-0001.html>

From da2ce7 at gmail.com  Sat Mar 25 03:30:22 2017
From: da2ce7 at gmail.com (Cameron Garnham)
Date: Sat, 25 Mar 2017 05:30:22 +0200
Subject: [bitcoin-dev] Strong Anti-Replay via Coinbase Transactions
Message-ID: <07F54C7C-5F26-446D-A479-7F81BD131151@gmail.com>

<pre>
  BIP: ???
  Layer: Consensus (soft fork)
  Title: Strong Anti-Replay via Coinbase Transactions
  Author: Cameron Garnham <da2ce7 at gmail.com>
  Comments-Summary: No comments yet.
  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???
  Status: Draft
  Type: Standards Track
  Created: 2017-03-25
  License: BSD-3-Clause
           CC0-1.0
</pre>

==Abstract==

This document specifies a soft fork that enables users to make transactions with a strong expectation that such transactions cannot be replayed on a different chain.

Important Note: In the case that an adversary hard-fork, the strong guarantee of non-replayabilty via this BIP may not be supported.

==Definitions==



==Motivation==

In the case of a chain split, it is important to protect users from, potentially significant, loss of funds from transaction replay attacks.


==Specification==

Upon activation of the soft-fork (activation methodology undefined in this proposal), the following new rules become activated on the Bitcoin Network.

New ?anti-replay? OpCode.  Take an unused NoOp and redefine it as ?OP_ANTI_REPLAY?.

The script must only have the form:

scriptPubKey: (empty)
scriptSig: OP_ANTI_REPLAY

OP_ANTI_REPLAY has the following specification:

	? OP_ANTI_REPLAY outputs must only be created in a coinbase transaction.
	? OP_ANTI_REPLAY coinbase outputs must only have the value of 1 Satoshi.
	? Transaction must not included more than 1 OP_ANTI_REPLAY input.
	? If a OP_ANTI_REPLAY input is included in a transaction, the transaction must also be marked as Opt-In-RBF (BIP 125).

The Bitcoin Network should maintain a total of exactly 100 000 OP_ANTI_REPLAY outputs, with the exception of the the first 99 blocks after activation of this soft fork.

Upon activation of this soft fork.  Every blocks coinbase transaction will be required to create exactly 1000 new OP_ANTI_REPLAY outputs, up to the total of 100 000.

If a OP_ANTI_REPLAY is spent in a block, a corresponding new OP_ANTI_REPLAY must be included in the same block.

It is recommend the miners account the size of a OP_ANTI_REPLAY transaction as:  transactions size + size of a OP_ANTI_REPLAY output in coinbase.

In the case of an chain split after this BIP has activated, miners should ?recycle? all the OP_ANTI_REPLAY outputs via spending and recreating them in new blocks.  Renewing the protection to the new chain.


=== Reference implementation ===

To-Be-Implemented

==Backwards Compatibility==

This deployment is compatible with all existing bitcoin software.

Upon activation, all deployed Bitcoin Full Nodes will enforce the anti-replay projections for Bitcoin Users. (Only upgraded nodes will enforce the other OP_ANTI_REPLAY requirements).

==Rationale==

The only know way of guaranteeing that a transaction cannot be replayed is to include an input that cannot exist, by-definition, on the alternative chain.  Coinbase transactions are the only transaction type that is know to exhibit this property strongly.

This BIP makes it convenient for wallets to automate the inclusion of new coinbase inputs into transactions that spend potentially repayable transactions.  Everything in this BIP could be done manually by close cooperation between the users and miners, however the author thinks that it is preferable to have it well-defined and enforced.

On Opt-In-RBF enforcement:  In the case of conflicting spends of OP_ANTI_REPLAY outputs, the higher-fee transaction should take priority.  Wallets may select a random OP_ANTI_REPLAY, then check if the competing transaction has a sufficiently low fee to be replaced.

It is expected that every OP_ANTI_REPLAY output will be in the memory pools waiting to be spend; users must compete for this resource.

==Future Questions==

SegWit Compatibility?

==References==

Opt-In-RBF:  https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki

==Copyright==

This document is dual licensed as BSD 3-clause, and Creative Commons CC0 1.0 Universal.


From praxeology_guy at protonmail.com  Sat Mar 25 04:42:30 2017
From: praxeology_guy at protonmail.com (praxeology_guy)
Date: Sat, 25 Mar 2017 00:42:30 -0400
Subject: [bitcoin-dev] Inquiry: Transaction Tiering
In-Reply-To: <CAOyfL0r8dLR=7Co5+YzbPQUeTs6Lw+OQjZTy=iyoDmr6VV_Qpw@mail.gmail.com>
References: <CAOyfL0r8dLR=7Co5+YzbPQUeTs6Lw+OQjZTy=iyoDmr6VV_Qpw@mail.gmail.com>
Message-ID: <Rs51ijp6P21vJsv7OxVB-k8vuJC_aUd8KnpxHC3phNw_lPieY2lS-k95gytpHTNzzBfuX030RRFKzrrwS3pfjTuFea_eUfErb3qDp5LDHp4=@protonmail.com>

Potentially miners could create their own private communication channel/listening port for submitting transactions that they would not relay to other miners/the public node relay network. Users could then chose who they want to relay to. Miners would be incentivized to not relay higher fee transactions, because they would want to keep them to themselves for higher profits.

Cheers,
Praxeology Guy

-------- Original Message --------
Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering
Local Time: March 22, 2017 12:48 PM
UTC Time: March 22, 2017 5:48 PM
From: bitcoin-dev at lists.linuxfoundation.org
To: bitcoin-dev at lists.linuxfoundation.org

Hi Tim,
After writing this I figured that it was probably not evident at first
sight as the concept may be quite novel. The physical location of the
"miner" is indeed irrelevant, I am referring to the digital location.
Bitcoins blockchain is a digital location or better digital "space".
As far as I am concerned the authority lies with whoever governs this
particular block space. A "miner" can, or can not, include my
transaction.

To make this more understandable:

Abu Bakr al-Baghdadi can extend his caliphate into Bitcoins block
space and rule sovereign(!) over a given block. If he processes my
transaction my fee goes directly into the coffers of his organization.
The same goes for the Queen of England or the Emperor of China. My
interest is not necessarily aligned with each specific authority, yet
as you point out, I can only not use Bitcoin.
Alternatively, however, I can very well sign my transaction and send
it to an authority of my choosing to be included into the ledger, say
BitFurry. - This is what I describe in option 1.

In order to protect my interest I do need to choose, maybe not today,
but eventually.

I also think that people do care who processes transactions and a lot
of bickering could be spared if we could choose.

If we assume a perfectly competitive market with 3 authorities that
govern the block space equally, the marginal cost of 1/3 of the block
space is the same for each, however, the marginal revenue absent of
block rewards is dependent on fees.
If people are willing to pay only a zero fee to a specific authority
while a fee greater than zero to the others it's clear that one would
be less competitive.

Let us assume the fees are 10% of the revenue and the cost is 95 we
have currently the following situation:

A: Cost=95; Revenue=100; Profit=5
B: Cost=95; Revenue=100; Profit=5
C: Cost=95; Revenue=100; Profit=5

With transaction tiering, the outcome could be different!

A: Cost=95; Revenue=90; Loss=5 // BSA that does not respect user interest.
B: Cost=95; Revenue=105; Profit=10
C: Cost=95; Revenue=105; Profit=10

This could motivate transaction processors to behave in accordance
with user interest, or am I missing something?

Best Regards,
Martin

> From: Tim Ruffing <tim.ruffing at mmci.uni-saarland.de>
> To: bitcoin-dev at lists.linuxfoundation.org
> Cc:
> Bcc:
> Date: Tue, 21 Mar 2017 16:18:26 +0100
> Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering
> (I'm not a lawyer...)
>
> I'm not sure if I can make sense of your email.
>
> On Mon, 2017-03-20 at 20:12 +0000, Martin Stolze via bitcoin-dev wrote:
>> As a participant in the economy in general and of Bitcoin in
>> particular, I desire an ability to decide where I transact. The
>> current state of Bitcoin does not allow me to choose my place of
>> business. As a consequence, I try to learn what would be the best way
>> to conduct my business in good faith. [2]
>
> Ignoring the rest, I don't think that the physical location /
> jurisdiction of the miner has any legal implications for law applicable
> to the relationship between sender and receiver of a payment.
>
> This is not particular to Bitcoin. We're both in Germany (I guess).
> Assume we have a contract without specific agreements and I pay you in
> Icelandic kronur via PayPal (in Luxembourg) and my HTTPS requests to
> PayPal went via Australia and the US. Then German law applies to our
> contract, nothing in the middle can change that.
>
> Also ignoring possible security implications, there is just no need for
> a mechanism that enables users to select miners. I claim that almost
> nobody cares who will mine a transaction, because it makes no technical
> difference. If you don't want a specific miner to mine your
> transaction, then don't use Bitcoin.
>
> Tim
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170325/bfa2755f/attachment.html>

From el33th4x0r at gmail.com  Fri Mar 24 16:27:47 2017
From: el33th4x0r at gmail.com (=?UTF-8?Q?Emin_G=C3=BCn_Sirer?=)
Date: Fri, 24 Mar 2017 09:27:47 -0700
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
 malicious miner takeover?
In-Reply-To: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
Message-ID: <CAPkFh0s-ZyLN06h+EpU2rfgs5TkTEPG+3FZyWSXusp-Z9XHasQ@mail.gmail.com>

Because there's no consensus on the contents of the mempool, this approach
is unsafe and will lead to forks. It also opens a new attack vector where
people can time the flood of new transactions with the discovery of a block
by a competitor, to orphan the block and to fork the chain.

The technical defense against an attacking majority of miners is to change
the PoW, effectively moving the community off into a new altcoin where the
attackers, hopefully, don't have majority hash power.

- egs

Sent from my phone, please compensate for autocorrect errors.

On Mar 24, 2017 9:06 AM, "CANNON via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA512
>
> When the original white paper was written the idea was that nodes
> would be miners at same time. That the distribution of mining power
> being mostly on par with the distribution of nodes if I understand
> correctly. The problem we face now I fear, is the mining power
> becoming centralized. Even if every bitcoin node invested a $1000
> into mining power and mined at a loss, it still would not even
> make a dent in hash distribution. Currently there are around 6000
> known nodes. If each node invested $1000 for say 10 ths of hashing
> power. At current hashrate of around 3,674,473,142 GH/s this would
> only make up %16 of hash power. This is out of balance as while
> nodes are distributed mining power is becoming very centralized
> due to the creation of monopolization of ASICs. The problem we
> are facing is a small group of a couple people whom control a
> large amount and growing of hash power. At time of this writing
> it has quickly risen to 39% and at current rate will soon become
> 50% of hashing power that is controlled by a small group of a few
> people. Their intentions are too hijack the bitcoin network to a
> cryptocurrency that suits their dangerous agenda. Dangerous because
> their plan would centralize power of consensus as I understand it,
> to themselves the miners. Dangerous also because the code base of
> the attempting subverters is buggy, insecure, and reckless from a
> technological standpoint. Even though they only have very minute
> amount of nodes compared to legitimate bitcion nodes, the danger
> is that they are very quickly taking over in mining power. While
> it is true that nodes will not accept invalid blocks that would be
> attempted to be pushed by the conspirators, they are threatening to
> attack the valid (or in their words, "minority chain") by dedicating
> some mining power soley to attacking the valid chain by mining empty
> blocks and orphaning the valid chain. So even though the majority
> of nodes would be enforcing what blocks are valid and as a result
> block the non-compliant longer chain, the conspiring miner can simply
> (as they are currently threatening to) make the valid chain unuseable
> by mining empty blocks.
>
> If a malicious miner with half or majority control passes invalid
> blocks, the worst case scenario is a hardfork coin split in which
> the non-compliant chain becomes an alt. However the problem is that
> this malicious miner is very recently threatening to not just simply
> fork, but to kill the valid chain to force economic activity to the
> adversary controlled chain. If we can simply defend against attacks
> to the valid chain, we can prevent the valid chain from dying.
>
> While empty or near empty blocks would generally be protected by
> the incentive of miners to make money. The threat is there if the
> malicious miner with majority control is willing to lose out on
> these transaction fees and block reward if their intention is to
> suppress it to force the majority onto their chain.
>
> Proposal for potential solution Update nodes to ignore empty blocks,
> so this way mined empty blocks cannot be used to DOS attack the
> blockchain. But what about defense from say, blocks that are
> not empty but intentionally only have a couple transactions
> in it? Possible to have nodes not only ignore empty blocks,
> but also blocks that are abnormally small compared to number of
> valid transactions in mempool?
>
> For example would be something like this:
> If block = (empty OR  <%75 of mempool) THEN discard
> This threshold just an example.
>
> What would be any potentials risks
> and attacks resulting from both having such new rulesets and not
> doing anything?
>
> Lets assume that the first problem of blocking empty or near empty
> blocks has been mitigated with the above proposed solution. How
> likely and possible would it be for a malicious miner with lots of
> mining power to orphan the chain after so many blocks even with
> non empty blocks? Is there a need to mitigate this?
> If so is it possible?
>
> Time is running short I fear. There needs to be discussion on various
> attacks and how they can be guarded against along with various
> other contingency plans.
>
> - --
> Cannon
> PGP Fingerprint: 2BB5 15CD 66E7 4E28 45DC 6494 A5A2 2879 3F06 E832
> Email: cannon at cannon-ciota.info
>
> NOTICE: ALL EMAIL CORRESPONDENCE NOT SIGNED/ENCRYPTED WITH PGP SHOULD
> BE CONSIDERED POTENTIALLY FORGED, AND NOT PRIVATE.
> If this matters to you, use PGP.
> -----BEGIN PGP SIGNATURE-----
>
> iQIcBAEBCgAGBQJY1UH/AAoJEAYDai9lH2mw2QYQALDLBxjdO5WTG7VXfuAE476p
> D3o1MMGw23tb+DFUO5WV6aFqfy3VSxbVXz6UuWbj6kHgp3ys6qxg5TX0Dy8tKSZM
> V28kovuS/pfen4gTxw1FCNff7YVW1R8QX+cSYxSD5EoEaTbpIPgi8zMusDxUVZk2
> WG3ItoyvkLvoNIYGDcU3gR3UkjDS5lOPiHu5BKSj1dEiibOXhr8JEBCznfUSyxCG
> TjVRJaUPlwCU06nad8jAZiDrsW3l866iNkBKaMzMavYuMLvCGIdRkbf54B2ZlIT/
> S/owusxqeIdQpydi/3ydnrqyeWo3znMnn+oOvdvfYEHKLts6gar3Zv8cZ40yYSIE
> z7C7GQFIo5TYDUNOk+2VE7NNtdX39Wj3gJql/305miaIt0qMsf1D30ODjePwyxUQ
> LQ96ZeF1K/0RSTN5TFvLjV9ZmaaN/tFm3kx0PunptJaZT8d9EgMeHREjCF4di04A
> 6Dp3Qeug41X/zdIc2AM387QnPwmGB1TpfrY9qgvcrIe26T6An2V5LHwVmslCX3ui
> DYAl0o5ODQqnnakF1FIrr1blMVqm7FqDPQc1I5TfzQuxX2+x+5zdrciPC2HUMCMQ
> jMujge5IdGL3kjEwjt+M6kqLu0/T0fhdUetb2DWrRJUcEVoIaiUL7qLJC+4KMR3d
> Gu3oWoE1ld+BC6At28AD
> =SSuj
> -----END PGP SIGNATURE-----
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170324/65f32451/attachment-0001.html>

From luke at dashjr.org  Sat Mar 25 05:16:25 2017
From: luke at dashjr.org (Luke Dashjr)
Date: Sat, 25 Mar 2017 05:16:25 +0000
Subject: [bitcoin-dev] Fraud proofs for block size/weight
In-Reply-To: <CABm2gDpgTtiftByQhD_TtzgD5Tv==io2+TGiTCnMt9onquVBmw@mail.gmail.com>
References: <201703220847.31303.luke@dashjr.org>
	<30FB8B13-135D-4905-B1B4-76D79341CA02@mattcorallo.com>
	<CABm2gDpgTtiftByQhD_TtzgD5Tv==io2+TGiTCnMt9onquVBmw@mail.gmail.com>
Message-ID: <201703250516.26362.luke@dashjr.org>

On Thursday, March 23, 2017 6:27:39 PM Jorge Tim?n via bitcoin-dev wrote:
> I think it would be clearer to put the "Creation of proofs" section
> before "Proof verification", maybe even before "Proof format" if a
> high level defintion of "full tx size proof" is provided before.

Creation of proofs isn't part of the spec itself.
I've moved it out of the Specification section (but it's still below it).

> Also, in "For the full-size proof, each transaction should be assumed
> to be at a minimum the stripped-size rather than the fixed 60 bytes."
> it seems you are referring to a "full-size block proof" as opposed to
> a "full size tx proof", perhaps a better term could be "full-weight
> block proof" if what you are referring to is the proof of the weight
> instead of only the pre-segwit size.
> 
> Perhaps some short definitions for "stripped-size proof", "full tx
> size proof", "full-size proof" and maybe also "size component" at the
> beginning would be enough.

Added a definitions section above.

> In "Network protocol", "It should not recheck blocks known to be
> valid, " does "known to be valid" include the blocks that the peer
> told us where valid (with their hash and 0 in the enumerated varint)?
> Those could be invalid too if the peer was lying, no?
> Do you mean "It should not recheck blocks known to be invalid,"?

Right, fixed.

> Why do you need to have at least one full tx size?
> 
> In Rationale you have:
> "
> Why must a full tx size proof be included?
> 
> This is necessary to establish that the claimed block transaction
> count is correct.
> "
> 
> Why do you need to establish that? If you can establish that the
> number of transactions is at least N and that N * 60 bytes is greater
> than the size/weight limit, isn't it that enough?

The only way to establish the number of transactions at all, is to show that a 
leaf is a parsable transaction. Which this doesn't actually show, so it's 
broken. :( Need to think on this. Any ideas? :/

Luke

From cannon at cannon-ciota.info  Sat Mar 25 16:12:54 2017
From: cannon at cannon-ciota.info (CANNON)
Date: Sat, 25 Mar 2017 16:12:54 +0000
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
 malicious miner takeover?
In-Reply-To: <35ba77db-f95a-4517-c960-8ad42a633ba0@gmail.com>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
	<35ba77db-f95a-4517-c960-8ad42a633ba0@gmail.com>
Message-ID: <f4849cef-3c40-31a4-e323-6a731bb52bc2@cannon-ciota.info>

On 03/24/2017 07:00 PM, Aymeric Vitte wrote:
> I don't know what "Time is running short I fear" stands for and when 50%
> is supposed to be reached

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

On 03/24/2017 07:00 PM, Aymeric Vitte wrote: > I don't know what
"Time is running short I fear" stands for and when 50% > is supposed
to be reached

According to current hashrate distribution tracking site coin.dance,
very likely within less than four weeks according to current hashrate
takeover rate.

While a fork is very likely, that I dont really fear because worst
case scenario is that bitcoin still survives and the invalid chain
becomes an alt.  My fear is the centralized mining power being used
to attack the valid chain with intentions on killing it. [1]

Shouldn't this 50% attack they are threatening be a concern? If it
is a concern, what options are on the table. If it is not a concern
please enlightent me as to why.


[1] Source:
https://www.reddit.com/r/Bitcoin/comments/6172s3/peter_rizun_tells_miners_to_force_a_hard_fork_by/

Text:

The attack quoted from his article:
https://medium.com/@peter_r/on-the-emerging-consensus-regarding-bitcoins-block-size-limit-insights-from-my-visit-with-2348878a16d8

    [Level 2] Anti-split protection??Miners will orphan the
    blocks of non-compliant miners prior to the first larger block
    to serve as a reminder to upgrade. Simply due to the possibility
    of having blocks orphaned, all miners would be motivated to
    begin signalling for larger blocks once support definitively
    passes 51%. If some miners hold out (e.g., they may not be
    paying attention regarding the upgrade), then they will begin
    to pay attention after losing approximately $15,000 of revenue
    due to an orphaned block.

    [Level 3] Anti-split protection??In the scenario where Levels
    1 and 2 protection fails to entice all non-compliant miners to
    upgrade, a small-block minority chain may emerge. To address the
    risk of coins being spent on this chain (replay risk), majority
    miners will deploy hash power as needed to ensure the minority
    chain includes only empty blocks after the forking point. This
    can easily be accomplished if the majority miners maintain a
    secret chain of empty blocks??built off their last empty
    block??publishing only as much of this chain as necessary
    to orphan any non-empty blocks produced on the minority chain.




- --
Cannon
PGP Fingerprint: 2BB5 15CD 66E7 4E28 45DC 6494 A5A2 2879 3F06 E832 
Email: cannon at cannon-ciota.info

NOTICE: ALL EMAIL CORRESPONDENCE NOT SIGNED/ENCRYPTED WITH PGP SHOULD 
BE CONSIDERED POTENTIALLY FORGED, AND NOT PRIVATE. 
If this matters to you, use PGP.
-----BEGIN PGP SIGNATURE-----

iQIcBAEBCgAGBQJY1pbaAAoJEAYDai9lH2mwOO0QANOWqGzPNlifWguc+Y5UQxQM
eAiztAayQBoAyLcFE7/qdtSNlUxbIAHG17fM+aNkehjYH2oN5ODJ+j7E2Yt6EoUH
h5t8MLhNRG/YGF1hJK8Io940EmdcjuNmohiZvrjIqEOYggmLU3hR6J4gsuGsQQhu
gY3sMS/TtT+gZNH8w53ePGrsVhuQR7yEMMr91/vM4+Q5abpwqLeYLnslaZDcd3XK
VB9vyyK08r34J1GQt/H4UvTvGs28MFKBkvueA/Sfyvnrih7+WSQLuSvhiFr+cW1B
TmSVYrB2DzyHN27jDCI2ty3ryNE4PMYcaeLfI2TTbsD/MuVU5lK0kM/1JajP4eRj
j+P03OipuQiy/dNU63w0Uka2PbdKhDC13hVtK/ttBbNppbjnGeB9PYSJCzOpInGw
NwAyz0rVS/llGsdctcII7Z6AUMGuJXzsosY8vjUroU+KFRDqIbDfC53sH7DaPh7u
YawwId5S5RnZsAGCUJ+qNcg0s728J1eDjofN291IS5sOKMzpI7KhaOhFxjnk1MpN
ZAlQeTlvG+sAdn61QMQK1NbFt0km+jcqyVh0+L01yB0K4VDi1YFJaSBOaYUELBXa
8a6WhZf5nrl5UIpH7rRcPzzqchcdYczy5VRZp2UsU+HYeqLXlcN0a03yPpVQik9S
/T93MuZgmvSCry5MlccA
=R71g
-----END PGP SIGNATURE-----


From martin at stolze.cc  Sat Mar 25 17:15:50 2017
From: martin at stolze.cc (Martin Stolze)
Date: Sat, 25 Mar 2017 17:15:50 +0000
Subject: [bitcoin-dev] Inquiry: Transaction Tiering
In-Reply-To: <Rs51ijp6P21vJsv7OxVB-k8vuJC_aUd8KnpxHC3phNw_lPieY2lS-k95gytpHTNzzBfuX030RRFKzrrwS3pfjTuFea_eUfErb3qDp5LDHp4=@protonmail.com>
References: <CAOyfL0r8dLR=7Co5+YzbPQUeTs6Lw+OQjZTy=iyoDmr6VV_Qpw@mail.gmail.com>
	<Rs51ijp6P21vJsv7OxVB-k8vuJC_aUd8KnpxHC3phNw_lPieY2lS-k95gytpHTNzzBfuX030RRFKzrrwS3pfjTuFea_eUfErb3qDp5LDHp4=@protonmail.com>
Message-ID: <CAOyfL0qW=8091BAo9R2mskbyFSS3hOnXd+Wjsu4LQy7EtqzJjg@mail.gmail.com>

Thanks, those are valid concerns.

> Potentially miners could create their own private communication channel/listening port for submitting transactions that they would not relay to other miners/the public node relay network.
That is the idea. Transaction Processors could source transactions
from the public mempool as well their proprietary mempool(s).

> Miners would be incentivized to not relay higher fee transactions, because they would want to keep them to themselves for higher profits.
Not so, a user may want to incentivise a specific Transaction
Processor or many. A user can detect this behavior and withdraw his
future business if he notices that his transaction is not included in
a block despite there being transactions with lower fees included.
Remember, the transaction can be advertised to different mempools and
a Transaction Processor could lose this business to a competitor who
processes the next block if he holds it back.

Best Regards
Martin

PS: It seems not too late to get rid of misleading terms like "miner".
Block rewards (infrastructure subsidies) will be neglectable for
future generations and the analogy is exceedingly poor.

On Sat, Mar 25, 2017 at 4:42 AM, praxeology_guy
<praxeology_guy at protonmail.com> wrote:
> Potentially miners could create their own private communication
> channel/listening port for submitting transactions that they would not relay
> to other miners/the public node relay network.  Users could then chose who
> they want to relay to.  Miners would be incentivized to not relay higher fee
> transactions, because they would want to keep them to themselves for higher
> profits.
>
> Cheers,
> Praxeology Guy
>
>
> -------- Original Message --------
> Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering
> Local Time: March 22, 2017 12:48 PM
> UTC Time: March 22, 2017 5:48 PM
> From: bitcoin-dev at lists.linuxfoundation.org
> To: bitcoin-dev at lists.linuxfoundation.org
>
> Hi Tim,
> After writing this I figured that it was probably not evident at first
> sight as the concept may be quite novel. The physical location of the
> "miner" is indeed irrelevant, I am referring to the digital location.
> Bitcoins blockchain is a digital location or better digital "space".
> As far as I am concerned the authority lies with whoever governs this
> particular block space. A "miner" can, or can not, include my
> transaction.
>
> To make this more understandable:
>
> Abu Bakr al-Baghdadi can extend his caliphate into Bitcoins block
> space and rule sovereign(!) over a given block. If he processes my
> transaction my fee goes directly into the coffers of his organization.
> The same goes for the Queen of England or the Emperor of China. My
> interest is not necessarily aligned with each specific authority, yet
> as you point out, I can only not use Bitcoin.
> Alternatively, however, I can very well sign my transaction and send
> it to an authority of my choosing to be included into the ledger, say
> BitFurry. - This is what I describe in option 1.
>
> In order to protect my interest I do need to choose, maybe not today,
> but eventually.
>
> I also think that people do care who processes transactions and a lot
> of bickering could be spared if we could choose.
>
> If we assume a perfectly competitive market with 3 authorities that
> govern the block space equally, the marginal cost of 1/3 of the block
> space is the same for each, however, the marginal revenue absent of
> block rewards is dependent on fees.
> If people are willing to pay only a zero fee to a specific authority
> while a fee greater than zero to the others it's clear that one would
> be less competitive.
>
> Let us assume the fees are 10% of the revenue and the cost is 95 we
> have currently the following situation:
>
> A: Cost=95; Revenue=100; Profit=5
> B: Cost=95; Revenue=100; Profit=5
> C: Cost=95; Revenue=100; Profit=5
>
> With transaction tiering, the outcome could be different!
>
> A: Cost=95; Revenue=90; Loss=5 // BSA that does not respect user interest.
> B: Cost=95; Revenue=105; Profit=10
> C: Cost=95; Revenue=105; Profit=10
>
> This could motivate transaction processors to behave in accordance
> with user interest, or am I missing something?
>
> Best Regards,
> Martin
>
>> From: Tim Ruffing <tim.ruffing at mmci.uni-saarland.de>
>> To: bitcoin-dev at lists.linuxfoundation.org
>> Cc:
>> Bcc:
>> Date: Tue, 21 Mar 2017 16:18:26 +0100
>> Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering
>> (I'm not a lawyer...)
>>
>> I'm not sure if I can make sense of your email.
>>
>> On Mon, 2017-03-20 at 20:12 +0000, Martin Stolze via bitcoin-dev wrote:
>>> As a participant in the economy in general and of Bitcoin in
>>> particular, I desire an ability to decide where I transact. The
>>> current state of Bitcoin does not allow me to choose my place of
>>> business. As a consequence, I try to learn what would be the best way
>>> to conduct my business in good faith. [2]
>>
>> Ignoring the rest, I don't think that the physical location /
>> jurisdiction of the miner has any legal implications for law applicable
>> to the relationship between sender and receiver of a payment.
>>
>> This is not particular to Bitcoin. We're both in Germany (I guess).
>> Assume we have a contract without specific agreements and I pay you in
>> Icelandic kronur via PayPal (in Luxembourg) and my HTTPS requests to
>> PayPal went via Australia and the US. Then German law applies to our
>> contract, nothing in the middle can change that.
>>
>> Also ignoring possible security implications, there is just no need for
>> a mechanism that enables users to select miners. I claim that almost
>> nobody cares who will mine a transaction, because it makes no technical
>> difference. If you don't want a specific miner to mine your
>> transaction, then don't use Bitcoin.
>>
>> Tim
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>

From nathan.cook at gmail.com  Sat Mar 25 19:41:47 2017
From: nathan.cook at gmail.com (Nathan Cook)
Date: Sat, 25 Mar 2017 22:41:47 +0300
Subject: [bitcoin-dev] Multi-hash mining with Bitcoin holder voting
Message-ID: <CAGNXQMQObxgi1Tg-o=TvC3FKVg5GOQFzBnsuZTy1g0hSDPEbiA@mail.gmail.com>

Further to recent posts to this list concerning mining with more than one
hash function, Adam Perlow and me have a (longish) proposal/analysis on
combining multi-hash with bitcoin stake voting on what the mix of hashes
should be. Two novelties are:

* Targeting a ratio of blocks mined under each hash function, in a similar
way to difficulty targeting.
* Analysis of voting on this ratio in terms of "voting on a simplex", using
extant research to choose a good method of doing so.

One point about mining under multiple hashes is that it offers existing
miners a way back in after a contentious hard fork. Shame to waste all that
hardware?

Read at
http://topynate.net/wp-content/uploads/2017/03/proportionateresponse.pdf
(archived at http://www.webcitation.org/6pEZLlZoW)
Nathan Cook
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170325/ae48937d/attachment.html>

From peter_r at gmx.com  Sat Mar 25 20:28:44 2017
From: peter_r at gmx.com (Peter R)
Date: Sat, 25 Mar 2017 13:28:44 -0700
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
	malicious miner takeover?
In-Reply-To: <f4849cef-3c40-31a4-e323-6a731bb52bc2@cannon-ciota.info>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
	<35ba77db-f95a-4517-c960-8ad42a633ba0@gmail.com>
	<f4849cef-3c40-31a4-e323-6a731bb52bc2@cannon-ciota.info>
Message-ID: <9C2A6867-470D-4336-8439-17F4E0CA4B17@gmx.com>

One of the purported benefits of a soft-forking change (a tightening of the consensus rule set) is the reduced risk of a blockchain split compared to a loosening of the consensus rule set.  The way this works is that miners who fail to upgrade to the new tighter ruleset will have their non-compliant blocks orphaned by the hash power majority.  This is a strong incentive to upgrade and has historically worked well.  If a minority subset of the network didn?t want to abide by the new restricted rule set, a reasonable solution would be for them to change the proof-of-work and start a spin-off from the existing Bitcoin ledger (https://bitcointalk.org/index.php?topic=563972.0).

In the case of the coming network upgrade to larger blocks, a primary concern of both business such as Coinbase and Bitpay, and most miners, is the possibility of a blockchain split and the associated confusion, replay risk, etc.  By applying techniques that are known to be successful for soft-forking changes, we can likewise benefit in a way that makes a split less likely as we move towards larger blocks.  Two proposed techniques to reduce the chances of a split are:

1. That miners begin to orphan the blocks of non-upgraded miners once a super-majority of the network hash power has upgraded. This would serve as an expensive-to-ignore reminder to upgrade.

2. That, in the case where a minority branch emerges (unlikely IMO), majority miners would continually re-org that minority branch with empty blocks to prevent transactions from confirming, thereby eliminating replay risk.

Just like after a soft forking change, a minority that does not want to abide by the current ruleset enforced by the majority could change the proof-of-work and start a spin-off from the existing Bitcoin ledger, as suggested by Emin.  

Best regards,
Peter R


> On Mar 25, 2017, at 9:12 AM, CANNON via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> On 03/24/2017 07:00 PM, Aymeric Vitte wrote:
>> I don't know what "Time is running short I fear" stands for and when 50%
>> is supposed to be reached
> 
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA512
> 
> On 03/24/2017 07:00 PM, Aymeric Vitte wrote: > I don't know what
> "Time is running short I fear" stands for and when 50% > is supposed
> to be reached
> 
> According to current hashrate distribution tracking site coin.dance,
> very likely within less than four weeks according to current hashrate
> takeover rate.
> 
> While a fork is very likely, that I dont really fear because worst
> case scenario is that bitcoin still survives and the invalid chain
> becomes an alt.  My fear is the centralized mining power being used
> to attack the valid chain with intentions on killing it. [1]
> 
> Shouldn't this 50% attack they are threatening be a concern? If it
> is a concern, what options are on the table. If it is not a concern
> please enlightent me as to why.
> 
> 
> [1] Source:
> https://www.reddit.com/r/Bitcoin/comments/6172s3/peter_rizun_tells_miners_to_force_a_hard_fork_by/
> 
> Text:
> 
> The attack quoted from his article:
> https://medium.com/@peter_r/on-the-emerging-consensus-regarding-bitcoins-block-size-limit-insights-from-my-visit-with-2348878a16d8
> 
>    [Level 2] Anti-split protection??Miners will orphan the
>    blocks of non-compliant miners prior to the first larger block
>    to serve as a reminder to upgrade. Simply due to the possibility
>    of having blocks orphaned, all miners would be motivated to
>    begin signalling for larger blocks once support definitively
>    passes 51%. If some miners hold out (e.g., they may not be
>    paying attention regarding the upgrade), then they will begin
>    to pay attention after losing approximately $15,000 of revenue
>    due to an orphaned block.
> 
>    [Level 3] Anti-split protection??In the scenario where Levels
>    1 and 2 protection fails to entice all non-compliant miners to
>    upgrade, a small-block minority chain may emerge. To address the
>    risk of coins being spent on this chain (replay risk), majority
>    miners will deploy hash power as needed to ensure the minority
>    chain includes only empty blocks after the forking point. This
>    can easily be accomplished if the majority miners maintain a
>    secret chain of empty blocks??built off their last empty
>    block??publishing only as much of this chain as necessary
>    to orphan any non-empty blocks produced on the minority chain.
> 
> 
> 
> 
> - --
> Cannon
> PGP Fingerprint: 2BB5 15CD 66E7 4E28 45DC 6494 A5A2 2879 3F06 E832 
> Email: cannon at cannon-ciota.info
> 
> NOTICE: ALL EMAIL CORRESPONDENCE NOT SIGNED/ENCRYPTED WITH PGP SHOULD 
> BE CONSIDERED POTENTIALLY FORGED, AND NOT PRIVATE. 
> If this matters to you, use PGP.
> -----BEGIN PGP SIGNATURE-----
> 
> iQIcBAEBCgAGBQJY1pbaAAoJEAYDai9lH2mwOO0QANOWqGzPNlifWguc+Y5UQxQM
> eAiztAayQBoAyLcFE7/qdtSNlUxbIAHG17fM+aNkehjYH2oN5ODJ+j7E2Yt6EoUH
> h5t8MLhNRG/YGF1hJK8Io940EmdcjuNmohiZvrjIqEOYggmLU3hR6J4gsuGsQQhu
> gY3sMS/TtT+gZNH8w53ePGrsVhuQR7yEMMr91/vM4+Q5abpwqLeYLnslaZDcd3XK
> VB9vyyK08r34J1GQt/H4UvTvGs28MFKBkvueA/Sfyvnrih7+WSQLuSvhiFr+cW1B
> TmSVYrB2DzyHN27jDCI2ty3ryNE4PMYcaeLfI2TTbsD/MuVU5lK0kM/1JajP4eRj
> j+P03OipuQiy/dNU63w0Uka2PbdKhDC13hVtK/ttBbNppbjnGeB9PYSJCzOpInGw
> NwAyz0rVS/llGsdctcII7Z6AUMGuJXzsosY8vjUroU+KFRDqIbDfC53sH7DaPh7u
> YawwId5S5RnZsAGCUJ+qNcg0s728J1eDjofN291IS5sOKMzpI7KhaOhFxjnk1MpN
> ZAlQeTlvG+sAdn61QMQK1NbFt0km+jcqyVh0+L01yB0K4VDi1YFJaSBOaYUELBXa
> 8a6WhZf5nrl5UIpH7rRcPzzqchcdYczy5VRZp2UsU+HYeqLXlcN0a03yPpVQik9S
> /T93MuZgmvSCry5MlccA
> =R71g
> -----END PGP SIGNATURE-----
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


From morcos at gmail.com  Sun Mar 26 02:38:16 2017
From: morcos at gmail.com (Alex Morcos)
Date: Sat, 25 Mar 2017 21:38:16 -0500
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
 malicious miner takeover?
In-Reply-To: <9C2A6867-470D-4336-8439-17F4E0CA4B17@gmx.com>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
	<35ba77db-f95a-4517-c960-8ad42a633ba0@gmail.com>
	<f4849cef-3c40-31a4-e323-6a731bb52bc2@cannon-ciota.info>
	<9C2A6867-470D-4336-8439-17F4E0CA4B17@gmx.com>
Message-ID: <CAPWm=eV2aLJKMM_5T-jaXCm1umRFxy+vfirBqCGAvUKHtOphQg@mail.gmail.com>

Surely you are aware that what you are proposing is vastly different from
the way soft forks have historically worked.

First of all, the bar for miners being on the new chain is extremely high,
95%.

Second of all, soft forks make rule restrictions on classes of transactions
that are already non-standard so that any non-upgraded miners are unlikely
to be including txs in their blocks which would violate the new rules and
should not have their blocks orphaned even after the fork.

Finally, soft forks are designed to only be used when there is a very wide
community consensus and the intention is not to overrule anyone's choice to
remain on the old rules but to ensure the security of nodes that may have
neglected to upgrade.  Obviously it is impossible to draw a bright line
between users who intentionally are not upgrading due to opposition and
users that are just being lazy.  But in the case of a proposed BU hard fork
it is abundantly clear that there is a very significant fraction, in fact
likely a majority of users who intentionally want to remain on the old
rules.

As a Bitcoin user I find it abhorrent the way you are proposing to
intentionally cripple the chain and rules I want to use instead of just
peacefully splitting.


On Sat, Mar 25, 2017 at 3:28 PM, Peter R via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> One of the purported benefits of a soft-forking change (a tightening of
> the consensus rule set) is the reduced risk of a blockchain split compared
> to a loosening of the consensus rule set.  The way this works is that
> miners who fail to upgrade to the new tighter ruleset will have their
> non-compliant blocks orphaned by the hash power majority.  This is a strong
> incentive to upgrade and has historically worked well.  If a minority
> subset of the network didn?t want to abide by the new restricted rule set,
> a reasonable solution would be for them to change the proof-of-work and
> start a spin-off from the existing Bitcoin ledger (
> https://bitcointalk.org/index.php?topic=563972.0).
>
> In the case of the coming network upgrade to larger blocks, a primary
> concern of both business such as Coinbase and Bitpay, and most miners, is
> the possibility of a blockchain split and the associated confusion, replay
> risk, etc.  By applying techniques that are known to be successful for
> soft-forking changes, we can likewise benefit in a way that makes a split
> less likely as we move towards larger blocks.  Two proposed techniques to
> reduce the chances of a split are:
>
> 1. That miners begin to orphan the blocks of non-upgraded miners once a
> super-majority of the network hash power has upgraded. This would serve as
> an expensive-to-ignore reminder to upgrade.
>
> 2. That, in the case where a minority branch emerges (unlikely IMO),
> majority miners would continually re-org that minority branch with empty
> blocks to prevent transactions from confirming, thereby eliminating replay
> risk.
>
> Just like after a soft forking change, a minority that does not want to
> abide by the current ruleset enforced by the majority could change the
> proof-of-work and start a spin-off from the existing Bitcoin ledger, as
> suggested by Emin.
>
> Best regards,
> Peter R
>
>
> > On Mar 25, 2017, at 9:12 AM, CANNON via bitcoin-dev <bitcoin-dev at lists.
> linuxfoundation.org> wrote:
> >
> > On 03/24/2017 07:00 PM, Aymeric Vitte wrote:
> >> I don't know what "Time is running short I fear" stands for and when 50%
> >> is supposed to be reached
> >
> > -----BEGIN PGP SIGNED MESSAGE-----
> > Hash: SHA512
> >
> > On 03/24/2017 07:00 PM, Aymeric Vitte wrote: > I don't know what
> > "Time is running short I fear" stands for and when 50% > is supposed
> > to be reached
> >
> > According to current hashrate distribution tracking site coin.dance,
> > very likely within less than four weeks according to current hashrate
> > takeover rate.
> >
> > While a fork is very likely, that I dont really fear because worst
> > case scenario is that bitcoin still survives and the invalid chain
> > becomes an alt.  My fear is the centralized mining power being used
> > to attack the valid chain with intentions on killing it. [1]
> >
> > Shouldn't this 50% attack they are threatening be a concern? If it
> > is a concern, what options are on the table. If it is not a concern
> > please enlightent me as to why.
> >
> >
> > [1] Source:
> > https://www.reddit.com/r/Bitcoin/comments/6172s3/peter_
> rizun_tells_miners_to_force_a_hard_fork_by/
> >
> > Text:
> >
> > The attack quoted from his article:
> > https://medium.com/@peter_r/on-the-emerging-consensus-
> regarding-bitcoins-block-size-limit-insights-from-my-visit-
> with-2348878a16d8
> >
> >    [Level 2] Anti-split protection Miners will orphan the
> >    blocks of non-compliant miners prior to the first larger block
> >    to serve as a reminder to upgrade. Simply due to the possibility
> >    of having blocks orphaned, all miners would be motivated to
> >    begin signalling for larger blocks once support definitively
> >    passes 51%. If some miners hold out (e.g., they may not be
> >    paying attention regarding the upgrade), then they will begin
> >    to pay attention after losing approximately $15,000 of revenue
> >    due to an orphaned block.
> >
> >    [Level 3] Anti-split protection In the scenario where Levels
> >    1 and 2 protection fails to entice all non-compliant miners to
> >    upgrade, a small-block minority chain may emerge. To address the
> >    risk of coins being spent on this chain (replay risk), majority
> >    miners will deploy hash power as needed to ensure the minority
> >    chain includes only empty blocks after the forking point. This
> >    can easily be accomplished if the majority miners maintain a
> >    secret chain of empty blocks built off their last empty
> >    block publishing only as much of this chain as necessary
> >    to orphan any non-empty blocks produced on the minority chain.
> >
> >
> >
> >
> > - --
> > Cannon
> > PGP Fingerprint: 2BB5 15CD 66E7 4E28 45DC 6494 A5A2 2879 3F06 E832
> > Email: cannon at cannon-ciota.info
> >
> > NOTICE: ALL EMAIL CORRESPONDENCE NOT SIGNED/ENCRYPTED WITH PGP SHOULD
> > BE CONSIDERED POTENTIALLY FORGED, AND NOT PRIVATE.
> > If this matters to you, use PGP.
> > -----BEGIN PGP SIGNATURE-----
> >
> > iQIcBAEBCgAGBQJY1pbaAAoJEAYDai9lH2mwOO0QANOWqGzPNlifWguc+Y5UQxQM
> > eAiztAayQBoAyLcFE7/qdtSNlUxbIAHG17fM+aNkehjYH2oN5ODJ+j7E2Yt6EoUH
> > h5t8MLhNRG/YGF1hJK8Io940EmdcjuNmohiZvrjIqEOYggmLU3hR6J4gsuGsQQhu
> > gY3sMS/TtT+gZNH8w53ePGrsVhuQR7yEMMr91/vM4+Q5abpwqLeYLnslaZDcd3XK
> > VB9vyyK08r34J1GQt/H4UvTvGs28MFKBkvueA/Sfyvnrih7+WSQLuSvhiFr+cW1B
> > TmSVYrB2DzyHN27jDCI2ty3ryNE4PMYcaeLfI2TTbsD/MuVU5lK0kM/1JajP4eRj
> > j+P03OipuQiy/dNU63w0Uka2PbdKhDC13hVtK/ttBbNppbjnGeB9PYSJCzOpInGw
> > NwAyz0rVS/llGsdctcII7Z6AUMGuJXzsosY8vjUroU+KFRDqIbDfC53sH7DaPh7u
> > YawwId5S5RnZsAGCUJ+qNcg0s728J1eDjofN291IS5sOKMzpI7KhaOhFxjnk1MpN
> > ZAlQeTlvG+sAdn61QMQK1NbFt0km+jcqyVh0+L01yB0K4VDi1YFJaSBOaYUELBXa
> > 8a6WhZf5nrl5UIpH7rRcPzzqchcdYczy5VRZp2UsU+HYeqLXlcN0a03yPpVQik9S
> > /T93MuZgmvSCry5MlccA
> > =R71g
> > -----END PGP SIGNATURE-----
> >
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170325/16187c21/attachment.html>

From eric at voskuil.org  Sun Mar 26 03:00:51 2017
From: eric at voskuil.org (Eric Voskuil)
Date: Sat, 25 Mar 2017 20:00:51 -0700
Subject: [bitcoin-dev] Two altcoins and a 51% attack (was: Defending
 against empty or near empty blocks from malicious miner takeover?)
In-Reply-To: <9C2A6867-470D-4336-8439-17F4E0CA4B17@gmx.com>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
	<35ba77db-f95a-4517-c960-8ad42a633ba0@gmail.com>
	<f4849cef-3c40-31a4-e323-6a731bb52bc2@cannon-ciota.info>
	<9C2A6867-470D-4336-8439-17F4E0CA4B17@gmx.com>
Message-ID: <4b56bb5d-f2e4-1c68-2f64-20d631c69ffd@voskuil.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

On 03/25/2017 01:28 PM, Peter R via bitcoin-dev wrote:

> In the case of the coming network upgrade to larger blocks, a
primary concern [...] is the possibility of a blockchain split and the
associated confusion, replay risk, etc.

> [...] a minority that does not want to abide by the [hard fork]
ruleset enforced by the majority could change the proof-of-work and
start a spin-off from the existing Bitcoin ledger [...]

The "spin off" to which you refer is an altcoin. The "network upgrade"
to which you refer is also an altcoin. Both are hard forks from
Bitcoin. I'm having a hard time imagining how a plan to create two new
altcoins from Bitcoin avoids either a split or confusion.

Application of hash power toward the disruption of Bitcoin presumes
participating miners are willing to accept a total loss on these
operations. I can imagine a significant portion of the hash power
deciding to let their competitors donate to "confusion reduction".
Eventually those thrifty miners will put the philanthropists out of
business. Maybe you can get Coinbase and Bitpay to finance the operation
.

This plan seems to be a response to the industry call for replay
protection. Actually writing the code is another option.

> once a super-majority of the network hash power has upgraded.

Despite the fact that nobody (miners included) has any way to measure
what software the economy (or hash power) is running, or what is the
economic weight of that portion of the economy.

e
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)

iQEcBAEBCAAGBQJY1y7aAAoJEDzYwH8LXOFO9EMH/Aip84JpoYBM8/JIRpjq/wzp
VBU9rwMrVwaKdt8IzdJIhaD8FAiXYmXP6xM3eYk5Jp5g67uBnlrmXqlM/IfHI374
sKvN2nyHNqng9citI6ZeR+B3xJ7oFzycKf+KnvKi5JnPEMuTYwIw+dvXJGvZdjeH
WxW0g63KvfDPvYbYkE1hKnzUHWxGrR/Jrs898Cnwd0Z9OjrVNM3ZEix/IK4QrNRN
e/xLXjuIDHx6nzbddbVOSsuxBDo0GZUufGM4zTrGG+kNy4xFWsfwaXlM6kHmRqGF
73PDFWzbiur4B0CoBA7zd2C2ErypKZOoM35rsvwZq/a23OlxH6Jds7+6jTwN9lQ=
=0Bn2
-----END PGP SIGNATURE-----

From ctpacia at gmail.com  Sun Mar 26 09:13:17 2017
From: ctpacia at gmail.com (Chris Pacia)
Date: Sun, 26 Mar 2017 05:13:17 -0400
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
 malicious miner takeover?
In-Reply-To: <CAPWm=eV2aLJKMM_5T-jaXCm1umRFxy+vfirBqCGAvUKHtOphQg@mail.gmail.com>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
	<35ba77db-f95a-4517-c960-8ad42a633ba0@gmail.com>
	<f4849cef-3c40-31a4-e323-6a731bb52bc2@cannon-ciota.info>
	<9C2A6867-470D-4336-8439-17F4E0CA4B17@gmx.com>
	<CAPWm=eV2aLJKMM_5T-jaXCm1umRFxy+vfirBqCGAvUKHtOphQg@mail.gmail.com>
Message-ID: <CAB+qUq47LUCSNUPZRY=ROrrHH5a6SLYrhwBs4msjWJt9ArUwpA@mail.gmail.com>

On Mar 25, 2017 10:38 PM, "Alex Morcos via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org> wrote:


As a Bitcoin user I find it abhorrent the way you are proposing to
intentionally cripple the chain and rules I want to use instead of just
peacefully splitting.


I just want to point out what appears to be doublespeak going on here.

First, I think it would seem obvious to an observer that a sizable portion
of the community (certainly greater than 5%) view segwit as preventing
"rules I want to use instead of just peacefully splitting" but no
consideration was given to these people when designing segwit as a
softfork. I believe it was Luke who went as far as saying consensus does
not matter when it comes softforks.

Furthermore, when segwit was first introduced it kicked off a round of
softfork/hardfork debate which I participated in. The primary concern that
I and other raised was precisely what is going on now.. that miners could
unilaterally impose an unpopular change to the protocol rules.

At the time I told, rather forcefully, by multiple people that miners have
an "absolute right" to softfork in whatever rules they want. Which, of
course, is absurd on it's face.

But I don't see how people can make such claims on the one hand, and then
complain when this process is used against them.

It amounts to nothing more than "When it's rules I like we get to impose
them on non-consenting users. When it's rules I don't like it's an attack
on the network".

It was completely obvious this entire time that softforks were a very
slippery slope, now we are indeed sliding down that slope.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170326/3cc00f44/attachment-0001.html>

From morcos at gmail.com  Sun Mar 26 11:27:30 2017
From: morcos at gmail.com (Alex Morcos)
Date: Sun, 26 Mar 2017 06:27:30 -0500
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
 malicious miner takeover?
In-Reply-To: <CAB+qUq47LUCSNUPZRY=ROrrHH5a6SLYrhwBs4msjWJt9ArUwpA@mail.gmail.com>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
	<35ba77db-f95a-4517-c960-8ad42a633ba0@gmail.com>
	<f4849cef-3c40-31a4-e323-6a731bb52bc2@cannon-ciota.info>
	<9C2A6867-470D-4336-8439-17F4E0CA4B17@gmx.com>
	<CAPWm=eV2aLJKMM_5T-jaXCm1umRFxy+vfirBqCGAvUKHtOphQg@mail.gmail.com>
	<CAB+qUq47LUCSNUPZRY=ROrrHH5a6SLYrhwBs4msjWJt9ArUwpA@mail.gmail.com>
Message-ID: <CAPWm=eXkNzgFEkd_Y23sHhWj3xQP4qtjBrh0J8Man5e6gFGLNQ@mail.gmail.com>

No I actually agree with a lot of what you said.

I feel there has been a lack of precision and consistency in talking about
these things in the past.  This is not intentional, but its just what
happens when a lot of different people are all giving their own arguments.

I tried to be a bit more clear by talking about how soft forks have
historically been done.  But certainly the technical definition of a soft
fork is a slippery slope.  I completely disagree with the idea that miners
have any right to enforce a soft fork.  Even more strongly, I don't think
they have the ability.  Censoring a certain class of transactions (such as
those invalid under a soft fork) is something they can unilaterally do, but
it is not the same thing as a soft fork.  It is necessarily transient. It
requires nodes to enforce the rules to make it a permanent soft fork.

I do think there are differences between soft forks and hard forks and
consensus requirements and safety for rolling them out.  But as mentioned
in my email, I think soft forks should still have a very high bar for
consensus.  It's an open question as to whether Core misjudged this for
segwit, although if so, I think it was a close call.  The intention is not
to let 95% of miners make the rules (although again, note that it is 95%, a
very high bar, vastly different than 75% of miners).   It seems to me that
the vast majority of the community is in favor of segwit.  I'm not sure
about your comment that it is obvious to an observer than a sizable portion
of the community is opposed.  It is certainly some, and perhaps more than
expected.  But this is exactly why the new version bits soft fork roll out
mechanism allows proposals to expire. We did do an extensive job assessing
support for segwit before roll out, and although we knew of a few loud
voices against we judged them to be a very small minority.  No business we
contacted was opposed.  If it turns out we got it wrong then the proposal
will expire harmlessly.  I for one am certainly opposed to forcing segwit
or any other fork of any kind on a significant minority that is opposed.

Despite saying that, I think you will hear some other responses about how
soft forks are opt-in and if you don't like the new features don't use
them.  There is some logic behind this idea.  But these are all subtleties
which are hard to make strong right and wrong statements about.  See some
of the past discussion on this list.




On Sun, Mar 26, 2017 at 4:13 AM, Chris Pacia <ctpacia at gmail.com> wrote:

>
>
> On Mar 25, 2017 10:38 PM, "Alex Morcos via bitcoin-dev" <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>
> As a Bitcoin user I find it abhorrent the way you are proposing to
> intentionally cripple the chain and rules I want to use instead of just
> peacefully splitting.
>
>
> I just want to point out what appears to be doublespeak going on here.
>
> First, I think it would seem obvious to an observer that a sizable portion
> of the community (certainly greater than 5%) view segwit as preventing
> "rules I want to use instead of just peacefully splitting" but no
> consideration was given to these people when designing segwit as a
> softfork. I believe it was Luke who went as far as saying consensus does
> not matter when it comes softforks.
>
> Furthermore, when segwit was first introduced it kicked off a round of
> softfork/hardfork debate which I participated in. The primary concern that
> I and other raised was precisely what is going on now.. that miners could
> unilaterally impose an unpopular change to the protocol rules.
>
> At the time I told, rather forcefully, by multiple people that miners have
> an "absolute right" to softfork in whatever rules they want. Which, of
> course, is absurd on it's face.
>
> But I don't see how people can make such claims on the one hand, and then
> complain when this process is used against them.
>
> It amounts to nothing more than "When it's rules I like we get to impose
> them on non-consenting users. When it's rules I don't like it's an attack
> on the network".
>
> It was completely obvious this entire time that softforks were a very
> slippery slope, now we are indeed sliding down that slope.
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170326/1bd8ed19/attachment.html>

From praxeology_guy at protonmail.com  Sun Mar 26 11:08:08 2017
From: praxeology_guy at protonmail.com (praxeology_guy)
Date: Sun, 26 Mar 2017 07:08:08 -0400
Subject: [bitcoin-dev] Flag day activation of segwit
In-Reply-To: <CANN4kmdJhLHbBOT3BMkBUn0jfummfX6kvwhq2PKDgrnK3qH-Tw@mail.gmail.com>
References: <OUzy7vvSKdJW7OCcCNCbaVDT-hJcf7Fy3fxEi_z6AmBC3VY0dGZpSBOGxRs-fVE-CfOVToCjjwB-meqejkb4VXYAGu0HHPTzNFhomEhgVpk=@protonmail.ch>
	<201703130301.41315.luke@dashjr.org>
	<NrY_33qfoG1ZNw_gT4ulv4sQ7eZLUTsu2VeUQAr041uRMvDrbI3vL8tW3AIDvVVsnV2juqM3fdlteLag9iQPD5yBUbdWVVdXSqlvAxfMwUA=@protonmail.ch>
	<CANN4kmdJhLHbBOT3BMkBUn0jfummfX6kvwhq2PKDgrnK3qH-Tw@mail.gmail.com>
Message-ID: <4bpe_mygvZbQEHimrqEw1cYS9Pw5zTK-EQzkrPWsc1L3YwojpuE1Vd_XtMVriELP-dN0czUPk-iMEizdKUiUS0rumdqicqV_P2mViERrAe0=@protonmail.com>

"Activation of segwit is defined by BIP9. After 15 Nov 2016 and before 15 Nov 2017 UTC, if in a full retarget cycle at least 1916 out of 2016 blocks is signaling readiness, segwit will be activated in the retarget cycle after the next one"

Just change BIP9 and the code to say "if in a full retarget cycle at least 1 out of 2016 blocks" and call it done. Or something very similar to this that effectively does the exact same thing. :) Wasting too much time on this. 15 Nov 2017 is plenty of time to be ready for SegWit, and if a participant is not ready by then they are either unreasonably lazy, a manipulator, or manipluted, and we don't need them.

If non-upgrading miners refuse to build on segwit blocks, or build on malicious invalid segwit blocks, then so be it. We fork. We have spent enough time trying to convince people who don't think for themselves... if they are still manipulated now then its time for us to give up on helping them see the light and instead let them learn the hard way.

Cheers,
Praxeology Guy

-------- Original Message --------
Subject: Re: [bitcoin-dev] Flag day activation of segwit
Local Time: March 13, 2017 5:18 PM
UTC Time: March 13, 2017 10:18 PM
From: bitcoin-dev at lists.linuxfoundation.org
To: shaolinfry <shaolinfry at protonmail.ch>, Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>

>time >= 1506816000 && time <= 1510704000 && !IsWitnessEnabled()
This has a different start time from the first post.
>if (pindex->GetMedianTimePast() >= 1538352000 && pindex->GetMedianTimePast() <= 1510704000 ...

Thanks,
--Nick

On Mon, Mar 13, 2017 at 4:36 AM, shaolinfry via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
From: luke at dashjr.org
On Sunday, March 12, 2017 3:50:27 PM shaolinfry via bitcoin-dev wrote:
> // mandatory segwit activation between Oct 1st 2017 and Nov 15th 2017
> inclusive if (pindex->GetMedianTimePast() >= 1538352000 &&
> pindex->GetMedianTimePast() <= 1510704000 &&
> !IsWitnessEnabled(pindex->pprev, chainparams.GetConsensus())) {
> if (!((pindex->nVersion & VERSIONBITS_TOP_MASK) ==
> VERSIONBITS_TOP_BITS) && (pindex->nVersion & VersionBitsMask(params,
> Consensus::DEPLOYMENT_SEGWIT)) != 0) {
> return state.DoS(2, error("ConnectBlock(): relayed block must
> signal for segwit, please upgrade"), REJECT_INVALID,
> "bad-no-segwit");
> }
> }

I don't think this is actually BIP 9 compatible. Once activated, the bit loses
its meaning and should not be set. So you need to check that it hasn't locked-
in already...

I believe that is handled.

time >= 1506816000 && time <= 1510704000 && !IsWitnessEnabled()

Signalling is only required from October 1st until the BIP9 timeout, or, until segwit is activated. The bit becomes free after activation/timeout as per BIP9. Also, the default behaviour of BIP9 in Bitcoin Core is to signal through the LOCKED_IN period - it would be trivial to add a condition to not require mandatory signalling during LOCKED_IN but since miners signal by default during this period, I figured I would leave it.

I thought about 5% tolerance. but I don't think it makes sense since miners will already have plenty of warning this is coming up and the intent of the mandatory signalling period is quite clear. It also seems a bit weird to say "it's mandatory but not for 5%". If miners are required to signal, they need to signal. It also adds unnecessary complexity to an otherwise simple patch.

That said, I have no strong feelings either way on both counts, but I chose to present the simplest option first.

_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170326/44bc5edb/attachment.html>

From ctpacia at gmail.com  Sun Mar 26 14:16:15 2017
From: ctpacia at gmail.com (Chris Pacia)
Date: Sun, 26 Mar 2017 10:16:15 -0400
Subject: [bitcoin-dev] Fraud proofs for block size/weight
In-Reply-To: <201703250516.26362.luke@dashjr.org>
References: <201703220847.31303.luke@dashjr.org>
	<30FB8B13-135D-4905-B1B4-76D79341CA02@mattcorallo.com>
	<CABm2gDpgTtiftByQhD_TtzgD5Tv==io2+TGiTCnMt9onquVBmw@mail.gmail.com>
	<201703250516.26362.luke@dashjr.org>
Message-ID: <CAB+qUq7=aEoDEhQ7bFz5V5q7CKNtkYYiXc14w3frn0TSqhsUPw@mail.gmail.com>

On Mar 25, 2017 12:17 AM, "Luke Dashjr via bitcoin-dev" <bitcoin-dev at lists.
linuxfoundation.org> wrote:

 Any ideas? :/


Can't the size be aggregated up the tree such that each midstate hash is
the hash of branches below plus the agreegate of the sizes below.

This would make the root  hash(left + right + size/weight) and the proof
would just be the preimage.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170326/02f3f01b/attachment.html>

From peter_r at gmx.com  Sun Mar 26 19:05:38 2017
From: peter_r at gmx.com (Peter R)
Date: Sun, 26 Mar 2017 12:05:38 -0700
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
	malicious miner takeover?
In-Reply-To: <CAPWm=eV2aLJKMM_5T-jaXCm1umRFxy+vfirBqCGAvUKHtOphQg@mail.gmail.com>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
	<35ba77db-f95a-4517-c960-8ad42a633ba0@gmail.com>
	<f4849cef-3c40-31a4-e323-6a731bb52bc2@cannon-ciota.info>
	<9C2A6867-470D-4336-8439-17F4E0CA4B17@gmx.com>
	<CAPWm=eV2aLJKMM_5T-jaXCm1umRFxy+vfirBqCGAvUKHtOphQg@mail.gmail.com>
Message-ID: <9EB5050D-E54E-4E8B-84C6-95CC1FAC4081@gmx.com>

Hello Alex,

Thank you for the thoughtful reply.  

> Surely you are aware that what you are proposing is vastly different from the way soft forks have historically worked. 

Yes, it is different.  It?s different because the future network upgrade to larger blocks includes a loosening of the consensus ruleset whereas previous upgrades have included a tightening of the rule set.  (BTW?this is not my proposal, I am describing what I have recently learned through my work with Bitcoin Unlimited and discussions with miners and businesses).  

With a tightening of the rule set, a hash power minority that has not upgraded will not produce a minority branch; instead they will simply have any invalid blocks they produce orphaned, serving as a wake-up call to upgrade.  

With a loosening of the consensus rule set, the situation is different: a hash power minority that has not upgraded will produce a minority branch, that will also drag along non-upgraded node operators, leading to potential confusion.  The idea behind orphaning the blocks of non-upgraded miners was to serve as a wake-up call to upgrade, to reduce the chances of a minority chain emerging in the first place, similar to what happens automatically with a soft-forking change.  If one's worry is a chain split, then this seems like a reasonable way to reduce the chances of that worry materializing.  The Level 3 anti-split protection takes this idea one step further to ensure that if a minority branch does emerge, that transactions cannot be confirmed on that branch.

> First of all, the bar for miners being on the new chain is extremely high, 95%.

I?m very confident that most people do NOT want a split, especially the miners.  The upgrade to larger blocks will not happen until miners are confident that no minority chain will survive.  

> Second of all, soft forks make rule restrictions on classes of transactions that are already non-standard so that any non-upgraded miners are unlikely to be including txs in their blocks which would violate the new rules and should not have their blocks orphaned even after the fork.

I agree that the soft-fork mechanism usually works well.  I believe this mechanism (or perhaps a modified version of it) to increase the block size limit will likewise work well.  All transactions types that are currently valid will be valid after the upgrade, and no new types of transactions are being created.  The ?block-size-limit gene" of network nodes is simply evolving to allow the network to continue to grow in the way it has always grown. (If you?re interested, here is my talk at Coinbase where I discuss this: https://www.youtube.com/watch?v=pWnFDocAmfg <https://www.youtube.com/watch?v=pWnFDocAmfg>)

> Finally, soft forks are designed to only be used when there is a very wide community consensus and the intention is not to overrule anyone's choice to remain on the old rules but to ensure the security of nodes that may have neglected to upgrade.  Obviously it is impossible to draw a bright line between users who intentionally are not upgrading due to opposition and users that are just being lazy.  But in the case of a proposed BU hard fork it is abundantly clear that there is a very significant fraction, in fact likely a majority of users who intentionally want to remain on the old rules.

My read is completely different.  I still have never talked with a person in real life who doesn?t want the block size limit to increase.  Indeed, I have met people who worry that Bitcoin Unlimited is ?trying to take over??and thus they are worried for other reasons?but this couldn?t be further from the truth.  For example, what most people within BU would love to see is a simple patch to Bitcoin Core 0.14 that allows node operators to adjust the size of blocks their nodes will accept, so that these node operators can follow consensus through the upgrade if they choose to.  

This is not a fight about ?Core vs. BU?; Bitcoin?s future is one of ?genetic diversity? with multiple implementations, so that a bug in one doesn?t threaten the network as a whole.  To me it seems this is largely a fight about whether node operators should be easily able to adjust the size of blocks their nodes accept.  BU makes it easy for node operators to accept larger blocks; Core doesn?t believe users should have this power (outside of recompiling from source, which few users can do).  

> As a Bitcoin user I find it abhorrent the way you are proposing to intentionally cripple the chain and rules I want to use instead of just peacefully splitting.

Once again, this is not my proposal.  I am writing about what I have come to learn over the past several weeks.  When I first heard about these ideas, I was initially against them too.  They seemed harsh and merciless.  It wasn?t until I got out their and started talking to more people in the community that the rationale started to make sense to me: the biggest concern people had was a chain split!

So I guess the ?ethics? here depend on the lens through which one is looking. People who believe that an important outcome of the upgrade to larger blocks is to avoid a blockchain split may be more favourable to these ideas than people who want the upgrade to result in a split (or are OK with a split), as it sounds like you do (is this true that you?d rather split than accept blocks with more than 1,000,000 bytes of transaction information in them? Sorry if I misunderstood).  

But if one's intention is to split and not follow the majority hash power when blocks become larger, then why not change the proof-of-work?  This would certainly result in a peaceful splitting, as you said you desire.  

Best regards,
Peter R



> 
> On Sat, Mar 25, 2017 at 3:28 PM, Peter R via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
> One of the purported benefits of a soft-forking change (a tightening of the consensus rule set) is the reduced risk of a blockchain split compared to a loosening of the consensus rule set.  The way this works is that miners who fail to upgrade to the new tighter ruleset will have their non-compliant blocks orphaned by the hash power majority.  This is a strong incentive to upgrade and has historically worked well.  If a minority subset of the network didn?t want to abide by the new restricted rule set, a reasonable solution would be for them to change the proof-of-work and start a spin-off from the existing Bitcoin ledger (https://bitcointalk.org/index.php?topic=563972.0 <https://bitcointalk.org/index.php?topic=563972.0>).
> 
> In the case of the coming network upgrade to larger blocks, a primary concern of both business such as Coinbase and Bitpay, and most miners, is the possibility of a blockchain split and the associated confusion, replay risk, etc.  By applying techniques that are known to be successful for soft-forking changes, we can likewise benefit in a way that makes a split less likely as we move towards larger blocks.  Two proposed techniques to reduce the chances of a split are:
> 
> 1. That miners begin to orphan the blocks of non-upgraded miners once a super-majority of the network hash power has upgraded. This would serve as an expensive-to-ignore reminder to upgrade.
> 
> 2. That, in the case where a minority branch emerges (unlikely IMO), majority miners would continually re-org that minority branch with empty blocks to prevent transactions from confirming, thereby eliminating replay risk.
> 
> Just like after a soft forking change, a minority that does not want to abide by the current ruleset enforced by the majority could change the proof-of-work and start a spin-off from the existing Bitcoin ledger, as suggested by Emin.
> 
> Best regards,
> Peter R
> 
> 
> > On Mar 25, 2017, at 9:12 AM, CANNON via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
> >
> > On 03/24/2017 07:00 PM, Aymeric Vitte wrote:
> >> I don't know what "Time is running short I fear" stands for and when 50%
> >> is supposed to be reached
> >
> > -----BEGIN PGP SIGNED MESSAGE-----
> > Hash: SHA512
> >
> > On 03/24/2017 07:00 PM, Aymeric Vitte wrote: > I don't know what
> > "Time is running short I fear" stands for and when 50% > is supposed
> > to be reached
> >
> > According to current hashrate distribution tracking site coin.dance,
> > very likely within less than four weeks according to current hashrate
> > takeover rate.
> >
> > While a fork is very likely, that I dont really fear because worst
> > case scenario is that bitcoin still survives and the invalid chain
> > becomes an alt.  My fear is the centralized mining power being used
> > to attack the valid chain with intentions on killing it. [1]
> >
> > Shouldn't this 50% attack they are threatening be a concern? If it
> > is a concern, what options are on the table. If it is not a concern
> > please enlightent me as to why.
> >
> >
> > [1] Source:
> > https://www.reddit.com/r/Bitcoin/comments/6172s3/peter_rizun_tells_miners_to_force_a_hard_fork_by/ <https://www.reddit.com/r/Bitcoin/comments/6172s3/peter_rizun_tells_miners_to_force_a_hard_fork_by/>
> >
> > Text:
> >
> > The attack quoted from his article:
> > https://medium.com/@peter_r/on-the-emerging-consensus-regarding-bitcoins-block-size-limit-insights-from-my-visit-with-2348878a16d8 <https://medium.com/@peter_r/on-the-emerging-consensus-regarding-bitcoins-block-size-limit-insights-from-my-visit-with-2348878a16d8>
> >
> >    [Level 2] Anti-split protection??Miners will orphan the
> >    blocks of non-compliant miners prior to the first larger block
> >    to serve as a reminder to upgrade. Simply due to the possibility
> >    of having blocks orphaned, all miners would be motivated to
> >    begin signalling for larger blocks once support definitively
> >    passes 51%. If some miners hold out (e.g., they may not be
> >    paying attention regarding the upgrade), then they will begin
> >    to pay attention after losing approximately $15,000 of revenue
> >    due to an orphaned block.
> >
> >    [Level 3] Anti-split protection??In the scenario where Levels
> >    1 and 2 protection fails to entice all non-compliant miners to
> >    upgrade, a small-block minority chain may emerge. To address the
> >    risk of coins being spent on this chain (replay risk), majority
> >    miners will deploy hash power as needed to ensure the minority
> >    chain includes only empty blocks after the forking point. This
> >    can easily be accomplished if the majority miners maintain a
> >    secret chain of empty blocks??built off their last empty
> >    block??publishing only as much of this chain as necessary
> >    to orphan any non-empty blocks produced on the minority chain.
> >
> >
> >
> >
> > - --
> > Cannon
> > PGP Fingerprint: 2BB5 15CD 66E7 4E28 45DC 6494 A5A2 2879 3F06 E832
> > Email: cannon at cannon-ciota.info <mailto:cannon at cannon-ciota.info>
> >
> > NOTICE: ALL EMAIL CORRESPONDENCE NOT SIGNED/ENCRYPTED WITH PGP SHOULD
> > BE CONSIDERED POTENTIALLY FORGED, AND NOT PRIVATE.
> > If this matters to you, use PGP.
> > -----BEGIN PGP SIGNATURE-----
> >
> > iQIcBAEBCgAGBQJY1pbaAAoJEAYDai9lH2mwOO0QANOWqGzPNlifWguc+Y5UQxQM
> > eAiztAayQBoAyLcFE7/qdtSNlUxbIAHG17fM+aNkehjYH2oN5ODJ+j7E2Yt6EoUH
> > h5t8MLhNRG/YGF1hJK8Io940EmdcjuNmohiZvrjIqEOYggmLU3hR6J4gsuGsQQhu
> > gY3sMS/TtT+gZNH8w53ePGrsVhuQR7yEMMr91/vM4+Q5abpwqLeYLnslaZDcd3XK
> > VB9vyyK08r34J1GQt/H4UvTvGs28MFKBkvueA/Sfyvnrih7+WSQLuSvhiFr+cW1B
> > TmSVYrB2DzyHN27jDCI2ty3ryNE4PMYcaeLfI2TTbsD/MuVU5lK0kM/1JajP4eRj
> > j+P03OipuQiy/dNU63w0Uka2PbdKhDC13hVtK/ttBbNppbjnGeB9PYSJCzOpInGw
> > NwAyz0rVS/llGsdctcII7Z6AUMGuJXzsosY8vjUroU+KFRDqIbDfC53sH7DaPh7u
> > YawwId5S5RnZsAGCUJ+qNcg0s728J1eDjofN291IS5sOKMzpI7KhaOhFxjnk1MpN
> > ZAlQeTlvG+sAdn61QMQK1NbFt0km+jcqyVh0+L01yB0K4VDi1YFJaSBOaYUELBXa
> > 8a6WhZf5nrl5UIpH7rRcPzzqchcdYczy5VRZp2UsU+HYeqLXlcN0a03yPpVQik9S
> > /T93MuZgmvSCry5MlccA
> > =R71g
> > -----END PGP SIGNATURE-----
> >
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170326/baec31e7/attachment-0001.html>

From alp.bitcoin at gmail.com  Sun Mar 26 20:20:56 2017
From: alp.bitcoin at gmail.com (Alphonse Pace)
Date: Sun, 26 Mar 2017 15:20:56 -0500
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
 malicious miner takeover?
In-Reply-To: <9EB5050D-E54E-4E8B-84C6-95CC1FAC4081@gmx.com>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
	<35ba77db-f95a-4517-c960-8ad42a633ba0@gmail.com>
	<f4849cef-3c40-31a4-e323-6a731bb52bc2@cannon-ciota.info>
	<9C2A6867-470D-4336-8439-17F4E0CA4B17@gmx.com>
	<CAPWm=eV2aLJKMM_5T-jaXCm1umRFxy+vfirBqCGAvUKHtOphQg@mail.gmail.com>
	<9EB5050D-E54E-4E8B-84C6-95CC1FAC4081@gmx.com>
Message-ID: <CAMBsKS9YMeHUsSRkGU2ef5vFrFgOTSsAhkHApdnU9ygqX_qDNw@mail.gmail.com>

As a user, I would far prefer a split over any kind of mandatory change
that would drastically harm the ecosystem.  Many users feel the same way.
Level 3 is a pure attack on users who do not conform to your beliefs.
Please do not put words in people's mouths claiming they wouldn't prefer a
split when many would.  If you wish to fork off, please do so responsibly.

-Alphonse

On Sun, Mar 26, 2017 at 2:05 PM, Peter R via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Hello Alex,
>
> Thank you for the thoughtful reply.
>
> Surely you are aware that what you are proposing is vastly different from
> the way soft forks have historically worked.
>
>
> Yes, it is different.  It?s different because the future network upgrade
> to larger blocks includes a loosening of the consensus ruleset whereas
> previous upgrades have included a tightening of the rule set.  (BTW?this is
> not my proposal, I am describing what I have recently learned through my
> work with Bitcoin Unlimited and discussions with miners and businesses).
>
> With a tightening of the rule set, a hash power minority that has not
> upgraded will not produce a minority branch; instead they will simply have
> any invalid blocks they produce orphaned, serving as a wake-up call to
> upgrade.
>
> With a loosening of the consensus rule set, the situation is different: a
> hash power minority that has not upgraded will produce a minority branch,
> that will also drag along non-upgraded node operators, leading to potential
> confusion.  The idea behind orphaning the blocks of non-upgraded miners was
> to serve as a wake-up call to upgrade, to reduce the chances of a minority
> chain emerging in the first place, similar to what happens automatically
> with a soft-forking change.  If one's worry is a chain split, then this
> seems like a reasonable way to reduce the chances of that worry
> materializing.  The Level 3 anti-split protection takes this idea one step
> further to ensure that if a minority branch does emerge, that transactions
> cannot be confirmed on that branch.
>
> First of all, the bar for miners being on the new chain is extremely high,
> 95%.
>
>
> I?m very confident that most people do NOT want a split, especially the
> miners.  The upgrade to larger blocks will not happen until miners are
> confident that no minority chain will survive.
>
> Second of all, soft forks make rule restrictions on classes of
> transactions that are already non-standard so that any non-upgraded miners
> are unlikely to be including txs in their blocks which would violate the
> new rules and should not have their blocks orphaned even after the fork.
>
>
> I agree that the soft-fork mechanism usually works well.  I believe this
> mechanism (or perhaps a modified version of it) to increase the block size
> limit will likewise work well.  All transactions types that are currently
> valid will be valid after the upgrade, and no new types of transactions are
> being created.  The ?block-size-limit gene" of network nodes is simply
> evolving to allow the network to continue to grow in the way it has always
> grown. (If you?re interested, here is my talk at Coinbase where I discuss
> this: https://www.youtube.com/watch?v=pWnFDocAmfg)
>
> Finally, soft forks are designed to only be used when there is a very wide
> community consensus and the intention is not to overrule anyone's choice to
> remain on the old rules but to ensure the security of nodes that may have
> neglected to upgrade.  Obviously it is impossible to draw a bright line
> between users who intentionally are not upgrading due to opposition and
> users that are just being lazy.  But in the case of a proposed BU hard fork
> it is abundantly clear that there is a very significant fraction, in fact
> likely a majority of users who intentionally want to remain on the old
> rules.
>
>
> My read is completely different.  I still have never talked with a person
> in real life who doesn?t want the block size limit to increase.  Indeed, I
> have met people who worry that Bitcoin Unlimited is ?trying to take
> over??and thus they are worried for other reasons?but this couldn?t be
> further from the truth.  For example, what most people within BU would love
> to see is a simple patch to Bitcoin Core 0.14 that allows node operators to
> adjust the size of blocks their nodes will accept, so that these node
> operators can follow consensus through the upgrade if they choose to.
>
> This is not a fight about ?Core vs. BU?; Bitcoin?s future is one of
> ?genetic diversity? with multiple implementations, so that a bug in one
> doesn?t threaten the network as a whole.  To me it seems this is largely a
> fight about whether node operators should be easily able to adjust the size
> of blocks their nodes accept.  BU makes it easy for node operators to
> accept larger blocks; Core doesn?t believe users should have this power
> (outside of recompiling from source, which few users can do).
>
> As a Bitcoin user I find it abhorrent the way you are proposing to
> intentionally cripple the chain and rules I want to use instead of just
> peacefully splitting.
>
>
> Once again, this is not my proposal.  I am writing about what I have come
> to learn over the past several weeks.  When I first heard about these
> ideas, I was initially against them too.  They seemed harsh and merciless.
> It wasn?t until I got out their and started talking to more people in the
> community that the rationale started to make sense to me: the biggest
> concern people had was a chain split!
>
> So I guess the ?ethics? here depend on the lens through which one is
> looking. People who believe that an important outcome of the upgrade to
> larger blocks is to avoid a blockchain split may be more favourable to
> these ideas than people who want the upgrade to result in a split (or are
> OK with a split), as it sounds like you do (is this true that you?d rather
> split than accept blocks with more than 1,000,000 bytes of transaction
> information in them? Sorry if I misunderstood).
>
> But if one's intention is to split and not follow the majority hash power
> when blocks become larger, then why not change the proof-of-work?  This
> would certainly result in a peaceful splitting, as you said you desire.
>
> Best regards,
> Peter R
>
>
>
>
> On Sat, Mar 25, 2017 at 3:28 PM, Peter R via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> One of the purported benefits of a soft-forking change (a tightening of
>> the consensus rule set) is the reduced risk of a blockchain split compared
>> to a loosening of the consensus rule set.  The way this works is that
>> miners who fail to upgrade to the new tighter ruleset will have their
>> non-compliant blocks orphaned by the hash power majority.  This is a strong
>> incentive to upgrade and has historically worked well.  If a minority
>> subset of the network didn?t want to abide by the new restricted rule set,
>> a reasonable solution would be for them to change the proof-of-work and
>> start a spin-off from the existing Bitcoin ledger (
>> https://bitcointalk.org/index.php?topic=563972.0).
>>
>> In the case of the coming network upgrade to larger blocks, a primary
>> concern of both business such as Coinbase and Bitpay, and most miners, is
>> the possibility of a blockchain split and the associated confusion, replay
>> risk, etc.  By applying techniques that are known to be successful for
>> soft-forking changes, we can likewise benefit in a way that makes a split
>> less likely as we move towards larger blocks.  Two proposed techniques to
>> reduce the chances of a split are:
>>
>> 1. That miners begin to orphan the blocks of non-upgraded miners once a
>> super-majority of the network hash power has upgraded. This would serve as
>> an expensive-to-ignore reminder to upgrade.
>>
>> 2. That, in the case where a minority branch emerges (unlikely IMO),
>> majority miners would continually re-org that minority branch with empty
>> blocks to prevent transactions from confirming, thereby eliminating replay
>> risk.
>>
>> Just like after a soft forking change, a minority that does not want to
>> abide by the current ruleset enforced by the majority could change the
>> proof-of-work and start a spin-off from the existing Bitcoin ledger, as
>> suggested by Emin.
>>
>> Best regards,
>> Peter R
>>
>>
>> > On Mar 25, 2017, at 9:12 AM, CANNON via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>> >
>> > On 03/24/2017 07:00 PM, Aymeric Vitte wrote:
>> >> I don't know what "Time is running short I fear" stands for and when
>> 50%
>> >> is supposed to be reached
>> >
>> > -----BEGIN PGP SIGNED MESSAGE-----
>> > Hash: SHA512
>> >
>> > On 03/24/2017 07:00 PM, Aymeric Vitte wrote: > I don't know what
>> > "Time is running short I fear" stands for and when 50% > is supposed
>> > to be reached
>> >
>> > According to current hashrate distribution tracking site coin.dance,
>> > very likely within less than four weeks according to current hashrate
>> > takeover rate.
>> >
>> > While a fork is very likely, that I dont really fear because worst
>> > case scenario is that bitcoin still survives and the invalid chain
>> > becomes an alt.  My fear is the centralized mining power being used
>> > to attack the valid chain with intentions on killing it. [1]
>> >
>> > Shouldn't this 50% attack they are threatening be a concern? If it
>> > is a concern, what options are on the table. If it is not a concern
>> > please enlightent me as to why.
>> >
>> >
>> > [1] Source:
>> > https://www.reddit.com/r/Bitcoin/comments/6172s3/peter_rizun
>> _tells_miners_to_force_a_hard_fork_by/
>> >
>> > Text:
>> >
>> > The attack quoted from his article:
>> > https://medium.com/@peter_r/on-the-emerging-consensus-regard
>> ing-bitcoins-block-size-limit-insights-from-my-visit-with-2348878a16d8
>> >
>> >    [Level 2] Anti-split protection Miners will orphan the
>> >    blocks of non-compliant miners prior to the first larger block
>> >    to serve as a reminder to upgrade. Simply due to the possibility
>> >    of having blocks orphaned, all miners would be motivated to
>> >    begin signalling for larger blocks once support definitively
>> >    passes 51%. If some miners hold out (e.g., they may not be
>> >    paying attention regarding the upgrade), then they will begin
>> >    to pay attention after losing approximately $15,000 of revenue
>> >    due to an orphaned block.
>> >
>> >    [Level 3] Anti-split protection In the scenario where Levels
>> >    1 and 2 protection fails to entice all non-compliant miners to
>> >    upgrade, a small-block minority chain may emerge. To address the
>> >    risk of coins being spent on this chain (replay risk), majority
>> >    miners will deploy hash power as needed to ensure the minority
>> >    chain includes only empty blocks after the forking point. This
>> >    can easily be accomplished if the majority miners maintain a
>> >    secret chain of empty blocks built off their last empty
>> >    block publishing only as much of this chain as necessary
>> >    to orphan any non-empty blocks produced on the minority chain.
>> >
>> >
>> >
>> >
>> > - --
>> > Cannon
>> > PGP Fingerprint: 2BB5 15CD 66E7 4E28 45DC 6494 A5A2 2879 3F06 E832
>> > Email: cannon at cannon-ciota.info
>> >
>> > NOTICE: ALL EMAIL CORRESPONDENCE NOT SIGNED/ENCRYPTED WITH PGP SHOULD
>> > BE CONSIDERED POTENTIALLY FORGED, AND NOT PRIVATE.
>> > If this matters to you, use PGP.
>> > -----BEGIN PGP SIGNATURE-----
>> >
>> > iQIcBAEBCgAGBQJY1pbaAAoJEAYDai9lH2mwOO0QANOWqGzPNlifWguc+Y5UQxQM
>> > eAiztAayQBoAyLcFE7/qdtSNlUxbIAHG17fM+aNkehjYH2oN5ODJ+j7E2Yt6EoUH
>> > h5t8MLhNRG/YGF1hJK8Io940EmdcjuNmohiZvrjIqEOYggmLU3hR6J4gsuGsQQhu
>> > gY3sMS/TtT+gZNH8w53ePGrsVhuQR7yEMMr91/vM4+Q5abpwqLeYLnslaZDcd3XK
>> > VB9vyyK08r34J1GQt/H4UvTvGs28MFKBkvueA/Sfyvnrih7+WSQLuSvhiFr+cW1B
>> > TmSVYrB2DzyHN27jDCI2ty3ryNE4PMYcaeLfI2TTbsD/MuVU5lK0kM/1JajP4eRj
>> > j+P03OipuQiy/dNU63w0Uka2PbdKhDC13hVtK/ttBbNppbjnGeB9PYSJCzOpInGw
>> > NwAyz0rVS/llGsdctcII7Z6AUMGuJXzsosY8vjUroU+KFRDqIbDfC53sH7DaPh7u
>> > YawwId5S5RnZsAGCUJ+qNcg0s728J1eDjofN291IS5sOKMzpI7KhaOhFxjnk1MpN
>> > ZAlQeTlvG+sAdn61QMQK1NbFt0km+jcqyVh0+L01yB0K4VDi1YFJaSBOaYUELBXa
>> > 8a6WhZf5nrl5UIpH7rRcPzzqchcdYczy5VRZp2UsU+HYeqLXlcN0a03yPpVQik9S
>> > /T93MuZgmvSCry5MlccA
>> > =R71g
>> > -----END PGP SIGNATURE-----
>> >
>> > _______________________________________________
>> > bitcoin-dev mailing list
>> > bitcoin-dev at lists.linuxfoundation.org
>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170326/88bf8628/attachment-0001.html>

From kanzure at gmail.com  Sun Mar 26 20:22:19 2017
From: kanzure at gmail.com (Bryan Bishop)
Date: Sun, 26 Mar 2017 15:22:19 -0500
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
 malicious miner takeover?
In-Reply-To: <9EB5050D-E54E-4E8B-84C6-95CC1FAC4081@gmx.com>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
	<35ba77db-f95a-4517-c960-8ad42a633ba0@gmail.com>
	<f4849cef-3c40-31a4-e323-6a731bb52bc2@cannon-ciota.info>
	<9C2A6867-470D-4336-8439-17F4E0CA4B17@gmx.com>
	<CAPWm=eV2aLJKMM_5T-jaXCm1umRFxy+vfirBqCGAvUKHtOphQg@mail.gmail.com>
	<9EB5050D-E54E-4E8B-84C6-95CC1FAC4081@gmx.com>
Message-ID: <CABaSBayb-FAt0XOX9u+T3-Z2gJQAV-Y7xZS_k6YG74VhPqejQA@mail.gmail.com>

On Sun, Mar 26, 2017 at 2:05 PM, Peter R via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> With a tightening of the rule set, a hash power minority that has not
> upgraded will not produce a minority branch; instead they will simply have
> any invalid blocks they produce orphaned, serving as a wake-up call to
> upgrade.
>

False. With bip9-based soft-fork-based activation of segwit, miner blocks
will not be orphaned unless they are intentionally segwit-invalid (which
they currently are not). If you have told miners otherwise, let me know.

- Bryan
http://heybryan.org/
1 512 203 0507
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170326/a3add68d/attachment.html>

From kanzure at gmail.com  Sun Mar 26 20:44:12 2017
From: kanzure at gmail.com (Bryan Bishop)
Date: Sun, 26 Mar 2017 15:44:12 -0500
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
 malicious miner takeover?
In-Reply-To: <CALd2G5dCLHDxV6Daq6q=AMuW8ytPGMKjAdXHxZzsUccJbKJKSg@mail.gmail.com>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
	<35ba77db-f95a-4517-c960-8ad42a633ba0@gmail.com>
	<f4849cef-3c40-31a4-e323-6a731bb52bc2@cannon-ciota.info>
	<9C2A6867-470D-4336-8439-17F4E0CA4B17@gmx.com>
	<CAPWm=eV2aLJKMM_5T-jaXCm1umRFxy+vfirBqCGAvUKHtOphQg@mail.gmail.com>
	<9EB5050D-E54E-4E8B-84C6-95CC1FAC4081@gmx.com>
	<CABaSBayb-FAt0XOX9u+T3-Z2gJQAV-Y7xZS_k6YG74VhPqejQA@mail.gmail.com>
	<CALd2G5dCLHDxV6Daq6q=AMuW8ytPGMKjAdXHxZzsUccJbKJKSg@mail.gmail.com>
Message-ID: <CABaSBaxopw2yUW6p7YKCWiYgARiG4CB7WpxMQ5eqZJzNHJfXfA@mail.gmail.com>

On Sun, Mar 26, 2017 at 3:37 PM, Trevin Hofmann <trevinhofmann at gmail.com>
wrote:

> He stated that "any invalid blocks they produce" will be orphaned. This is
> not false. If non-upgraded miners do not produce blocks that are invalid
> per the new rules, their blocks will not be orphaned. This is consistent
> with Peter's comment.


It's the other part of the statement- the "wakeup call to upgrade" from
producing invalid blocks? They aren't producing invalid blocks.
Additionally, if they want to be even more sure about this, they can run
the so-called "border nodes". No wakeup calls needed.... the point of a
soft-fork is to reduce incompatibility.

- Bryan
http://heybryan.org/
1 512 203 0507
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170326/4dc87e3a/attachment.html>

From trevinhofmann at gmail.com  Sun Mar 26 20:37:28 2017
From: trevinhofmann at gmail.com (Trevin Hofmann)
Date: Sun, 26 Mar 2017 15:37:28 -0500
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
 malicious miner takeover?
In-Reply-To: <CABaSBayb-FAt0XOX9u+T3-Z2gJQAV-Y7xZS_k6YG74VhPqejQA@mail.gmail.com>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
	<35ba77db-f95a-4517-c960-8ad42a633ba0@gmail.com>
	<f4849cef-3c40-31a4-e323-6a731bb52bc2@cannon-ciota.info>
	<9C2A6867-470D-4336-8439-17F4E0CA4B17@gmx.com>
	<CAPWm=eV2aLJKMM_5T-jaXCm1umRFxy+vfirBqCGAvUKHtOphQg@mail.gmail.com>
	<9EB5050D-E54E-4E8B-84C6-95CC1FAC4081@gmx.com>
	<CABaSBayb-FAt0XOX9u+T3-Z2gJQAV-Y7xZS_k6YG74VhPqejQA@mail.gmail.com>
Message-ID: <CALd2G5dCLHDxV6Daq6q=AMuW8ytPGMKjAdXHxZzsUccJbKJKSg@mail.gmail.com>

>> With a tightening of the rule set, a hash power minority that has not
upgraded will not produce a minority branch; instead they will simply have
any invalid blocks they produce orphaned, serving as a wake-up call t>o
upgrade.

> False. With bip9-based soft-fork-based activation of segwit, miner blocks
will not be orphaned unless they are intentionally segwit-invalid (which
they currently are not). If you have told miners otherwise, let me know.

He stated that "any invalid blocks they produce" will be orphaned. This is
not false. If non-upgraded miners do not produce blocks that are invalid
per the new rules, their blocks will not be orphaned. This is consistent
with Peter's comment.

-Trevin

On Sun, Mar 26, 2017 at 3:22 PM, Bryan Bishop via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Sun, Mar 26, 2017 at 2:05 PM, Peter R via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> With a tightening of the rule set, a hash power minority that has not
>> upgraded will not produce a minority branch; instead they will simply have
>> any invalid blocks they produce orphaned, serving as a wake-up call to
>> upgrade.
>>
>
> False. With bip9-based soft-fork-based activation of segwit, miner blocks
> will not be orphaned unless they are intentionally segwit-invalid (which
> they currently are not). If you have told miners otherwise, let me know.
>
> - Bryan
> http://heybryan.org/
> 1 512 203 0507 <(512)%20203-0507>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170326/06db8f3d/attachment.html>

From eric at voskuil.org  Sun Mar 26 21:12:20 2017
From: eric at voskuil.org (Eric Voskuil)
Date: Sun, 26 Mar 2017 14:12:20 -0700
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
 malicious miner takeover?
In-Reply-To: <CABaSBayb-FAt0XOX9u+T3-Z2gJQAV-Y7xZS_k6YG74VhPqejQA@mail.gmail.com>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
	<35ba77db-f95a-4517-c960-8ad42a633ba0@gmail.com>
	<f4849cef-3c40-31a4-e323-6a731bb52bc2@cannon-ciota.info>
	<9C2A6867-470D-4336-8439-17F4E0CA4B17@gmx.com>
	<CAPWm=eV2aLJKMM_5T-jaXCm1umRFxy+vfirBqCGAvUKHtOphQg@mail.gmail.com>
	<9EB5050D-E54E-4E8B-84C6-95CC1FAC4081@gmx.com>
	<CABaSBayb-FAt0XOX9u+T3-Z2gJQAV-Y7xZS_k6YG74VhPqejQA@mail.gmail.com>
Message-ID: <0ee42982-22d9-7e3f-23aa-f3743df88a6a@voskuil.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

On 03/26/2017 01:22 PM, Bryan Bishop via bitcoin-dev wrote:
> On Sun, Mar 26, 2017 at 2:05 PM, Peter R via bitcoin-dev 
> <bitcoin-dev at lists.linuxfoundation.org 
> <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
> 
> With a tightening of the rule set, a hash power minority that has 
> not upgraded will not produce a minority branch; instead they will 
> simply have any invalid blocks they produce orphaned, serving as a 
> wake-up call to upgrade.
> 
> False. With bip9-based soft-fork-based activation of segwit, miner 
> blocks will not be orphaned unless they are intentionally
> segwit-invalid (which they currently are not). If you have told
> miners otherwise, let me know.

Given the protocol requirements of the segwit proposal this is not the
case. A miner running pre-segwit code will produce blocks that no
segwit node will ever receive. It matters not whether these blocks
contain transactions that are invalidated by the soft fork. Despite
being valid to other pre-segwit nodes they will never be built upon by
the majority hash power once segwit activates.

At the same time, Peter's comment above is also incorrect. A "minority
branch" *is* a set of blocks that have been orphaned (the term orphan
being a misnomer, since these blocks of course have an ancestry all
the way to the genesis block). That's precisely what is implied by the
word "minority". So his description contradicts itself.

e
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)

iQEcBAEBCAAGBQJY2C6pAAoJEDzYwH8LXOFOf4gH/2e/euZ9bQxPKZyC7DN8us6T
R1R9f+JFFsU3Vo8HkcU028Ib4aF0IAELvAWrhpZfH6ixZV2c3CJoi53rMbPmJ/+H
Rlj0Qjc58mYpqosxyNoi0qPFZ2e3yCv+R5v9PQEeOdcGwXIr77Tij8lI1yu4uqHU
bqJ3BXJLFpvL5iXOLhbakeu2qVIHqJnb1/hQMNh6eNM794n+UT2T8You52xUkuTm
zJ+5CTQUiMNFE/HBWsbk8Vf3BTrM0sqMRTJzdr4VT1l+uOZn58BJJPFzLr2WeZww
klAB/wK5oExMNlKQVy6Rw9+uFx88qRTl5s7LwFASOxEZYJIjd36bBaoTdqfaB5U=
=pvlp
-----END PGP SIGNATURE-----

From tomh at thinlink.com  Sun Mar 26 21:42:51 2017
From: tomh at thinlink.com (Tom Harding)
Date: Sun, 26 Mar 2017 14:42:51 -0700
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
 malicious miner takeover?
In-Reply-To: <CABaSBayb-FAt0XOX9u+T3-Z2gJQAV-Y7xZS_k6YG74VhPqejQA@mail.gmail.com>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
	<35ba77db-f95a-4517-c960-8ad42a633ba0@gmail.com>
	<f4849cef-3c40-31a4-e323-6a731bb52bc2@cannon-ciota.info>
	<9C2A6867-470D-4336-8439-17F4E0CA4B17@gmx.com>
	<CAPWm=eV2aLJKMM_5T-jaXCm1umRFxy+vfirBqCGAvUKHtOphQg@mail.gmail.com>
	<9EB5050D-E54E-4E8B-84C6-95CC1FAC4081@gmx.com>
	<CABaSBayb-FAt0XOX9u+T3-Z2gJQAV-Y7xZS_k6YG74VhPqejQA@mail.gmail.com>
Message-ID: <f10ed0f1-73ee-a6fb-dddf-7a9234fe5c5b@thinlink.com>

On 3/26/2017 1:22 PM, Bryan Bishop via bitcoin-dev wrote:
> On Sun, Mar 26, 2017 at 2:05 PM, Peter R via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org
> <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
>
>     With a tightening of the rule set, a hash power minority that has
>     not upgraded will not produce a minority branch; instead they will
>     simply have any invalid blocks they produce orphaned, serving as a
>     wake-up call to upgrade.
>
>
> False. With bip9-based soft-fork-based activation of segwit, miner
> blocks will not be orphaned unless they are intentionally
> segwit-invalid (which they currently are not). If you have told miners
> otherwise, let me know.
>

A reasonable miner automatically checks every transaction seen, to see
if it might be valid with his own outputs substituted.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170326/b69b2b03/attachment-0001.html>

From praxeology_guy at protonmail.com  Sun Mar 26 22:11:14 2017
From: praxeology_guy at protonmail.com (praxeology_guy)
Date: Sun, 26 Mar 2017 18:11:14 -0400
Subject: [bitcoin-dev] Bandwidth limits and LN w/ node relay network
	topography
Message-ID: <OlmJBOCNdLgek6x1SvZhs_z04xtkZ1i1zRoJMoeda0WZhMZyRl459BVklFY4xxBmwaP0pLJbBtbUO8i-3bprB8ZuoeoHwUqoHR8rdPYRd9g=@protonmail.com>

Bandwidth limits:
Would be nice to specify global and per node up/down bandwidth limits.
Communicate limits to peers.
Monitor actual bandwidth with peers.
Adjust connections accordingly to attain bandwidth goals/limits.

With Lightning Network:
Prepay for bandwidth/data. Continue paying nodes who continue to send new useful data. Potentially pay different amounts for different kinds of data.
Request refunds when a node sends useless/duplicate/invalid/spam data. Discontinue connection w/ nodes that don't refund. Hence LN payment channel network topography becomes somewhat correlated w/ bitcoin node relay network topography.

Should help nodes get better data faster, improve spam/DDoS resiliance. Incentivizes relay of unconfirmed txs and new blocks, when currently there is only a utilitarian marginal self benefit via helping everyone in general.

Maybe relay advertisements of available bandwidth and prices, etc.

To identify network splits:
Nodes could find hash of "nonce + pub key + tip blockhash" beating a difficulty threshold. Sign, broadcast. Prove their existence and connectedness. History can be maintained and monitored for disruption. Could be made part of the messages that advertise available network bandwidth.

Cheers,
Praxeology Guy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170326/20cc7d35/attachment.html>

From eric at voskuil.org  Sun Mar 26 22:15:54 2017
From: eric at voskuil.org (Eric Voskuil)
Date: Sun, 26 Mar 2017 15:15:54 -0700
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
 malicious miner takeover?
In-Reply-To: <9EB5050D-E54E-4E8B-84C6-95CC1FAC4081@gmx.com>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
	<35ba77db-f95a-4517-c960-8ad42a633ba0@gmail.com>
	<f4849cef-3c40-31a4-e323-6a731bb52bc2@cannon-ciota.info>
	<9C2A6867-470D-4336-8439-17F4E0CA4B17@gmx.com>
	<CAPWm=eV2aLJKMM_5T-jaXCm1umRFxy+vfirBqCGAvUKHtOphQg@mail.gmail.com>
	<9EB5050D-E54E-4E8B-84C6-95CC1FAC4081@gmx.com>
Message-ID: <b7ff549b-5ee8-172d-5a23-47ef8943533e@voskuil.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

On 03/26/2017 12:05 PM, Peter R via bitcoin-dev wrote:

Peter,

> Yes, it is different.  It?s different because the future network
> upgrade to larger blocks includes a loosening of the consensus
> ruleset whereas previous upgrades have included a tightening of the
> rule set.  (BTW?this is not my proposal, I am describing what I
> have recently learned through my work with Bitcoin Unlimited and
> discussions with miners and businesses).

The repeated use of the term "network upgrade" in place of the
accepted technical term (hard fork) is misleading. This and the
presupposition that the hard fork is coming, and the claims that it's
not your proposal, make me feel like I'm shopping for a used car...
It's not used it's pre-owned, everyone's getting the warranty, let me
see what my manager has to say about the price - it's not my decision.

This is a development list. Avoidance of standardized terminology and
use of the presumptive close diminishes your message.

> With a tightening of the rule set, a hash power minority that has
> not upgraded will not produce a minority branch; instead they will
> simply have any invalid blocks they produce orphaned, serving as a
> wake-up call to upgrade.

"tightening of the rule set" == soft fork

This implies that the minority hash power is producing blocks that are
valid according to rules in existence prior to the soft fork. You are
referring to these as invalid, but because this has already confused
one commentator, let's be clear. The blocks you are referring to are
valid blocks being orphaned because the majority hash power is
rejecting them because of soft fork activation. This of course
produces a minority chain, so this statement is incorrect.

> With a loosening of the consensus rule set, the situation is
> different: a hash power minority that has not upgraded will produce
> a minority branch, that will also drag along non-upgraded node
> operators, leading to potential confusion.

"loosening of the consensus rule set" == hard fork

This is also incorrect. In the case of a hard fork old nodes reject
the new blocks that are invalid according to old rules and continue to
accept other old blocks. This produces a second distinct chain. It is
neither a majority nor a minority chain with respect to the original.
It is simply a new coin that happens to share history with the old
coin. This doesn't imply confusion, since both chains continue to
operate under the rules of their nodes. The only confusion arises from
people wanting to transaction across *both* chains. It is only in this
context that replay becomes an issue.

> The idea behind orphaning the blocks of non-upgraded miners was to
> serve as a wake-up call to upgrade, to reduce the chances of a
> minority chain emerging in the first place, similar to what happens
> automatically with a soft-forking change.  If one's worry is a
> chain split, then this seems like a reasonable way to reduce the 
> chances of that worry materializing.  The Level 3 anti-split
> protection takes this idea one step further to ensure that if a
> minority branch does emerge, that transactions cannot be confirmed
> on that branch.

Stopping people from transacting on the old chain due to an ongoing
51% attack (again, using proper terminology) is one way to make it
hard for people to transact on both chains. But if you don't care that
people are able to transact on both chains, there's no reason to spend
the money on the attack.

So let me point to the elephant in the room. The proposed 51% attack
is more obviously an attempt to transfer economic activity from BTC to
BTU, not a benevolent measure to prevent confusion. It can clearly be
viewed as elimination of competition through an electronic attack on
BTC operations. Given that they are all regulated entities, I'm not
sure how the envisioned large miner collaborators (or others who might
fund it) will feel about participation in the scheme.

> This is not a fight about ?Core vs. BU?; Bitcoin?s future is one
> of ?genetic diversity? with multiple implementations, so that a bug
> in one doesn?t threaten the network as a whole

You are right that this is not about Core and BU. These are
implementations, not protocols. However, please do not presume that
other implementations are enlisted in your scheme, or that this is
about making the network more bug-resistant.

> To me it seems this is largely a fight about whether node operators
> should be easily able to adjust the size of blocks their nodes
> accept.  BU makes it easy for node operators to accept larger
> blocks; Core doesn?t believe users should have this power (outside
> of recompiling from source, which few users can do).

I feel like making the block size a configuration option in Libbitcoin
just to emphasize the gross error of this idea. It has never been
about the inability of users to compile the code. It's about the
purposeful difficulty in changing the rules when everyone has a say.

> Once again, this is not my proposal.  I am writing about what I
> have come to learn over the past several weeks.  When I first heard
> about these ideas, I was initially against them too.  They seemed
> harsh and merciless.  It wasn?t until I got out their and started
> talking...

The idea was so powerful you were converted (another sales tactic).
Who's proposal is this? Can they not speak for themselves?

> So I guess the ?ethics? here depend on the lens through which one
> is looking...

These are not ethical questions. These are development questions,
built on economic concepts, backed by individual financial decisions.
There is no equivalence of ideas based on one's arbitrary perspective.

> But if one's intention is to split and not follow the majority
> hash power when blocks become larger,

The "split" is always by the one that hard forks. The splitter is the
one who changes what exists and therefore creates something new.
Please fix your terminology.

> then why not change the proof-of-work? This would certainly result
> in a peaceful splitting, as you said you desire.

A hard fork, including changing the PoW algorithm, requires the
purposely improbable coordination of the economy in the creation of a
new coin and the abandonment of the old. This should be apparent from
the ongoing block size hard fork attempts.

e
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)

iQEcBAEBCAAGBQJY2D2SAAoJEDzYwH8LXOFO3r0H/R0PTi2x15Zj1oceOqcNpP4k
/TrTohFl/BRE4PaOqJ9n9DbJ6W8rnAjRnguOIgOB1CSIRCuy73AQ4aqRSTCBlHbe
VVrlKKFS8zh50Cjg8tlnomWeKe1YDO31R2Avises+Dr3kyqQ9+QYtOoqxvuvYrXo
B03fjPIL0eTQypA4KP/W7CxrlHN7oyN+PtehpI51JOGMxx6Xc0RDelGz1NTlQQ1f
90Axeey51tgAzJ8wsC+Vf22hZdU06VDdtG8PSHVcrELoicDnEjR4T+1XqA1hcAY2
hWBX5qpQYJqJv1ypfTH0ouh6QtLhJZGCWzKZnpH+T7d3FUG+AXn0UjTP3Nkh7NY=
=Cc8r
-----END PGP SIGNATURE-----

From vitteaymeric at gmail.com  Mon Mar 27 10:25:00 2017
From: vitteaymeric at gmail.com (Aymeric Vitte)
Date: Mon, 27 Mar 2017 12:25:00 +0200
Subject: [bitcoin-dev] Defending against empty or near empty blocks from
 malicious miner takeover?
In-Reply-To: <b7ff549b-5ee8-172d-5a23-47ef8943533e@voskuil.org>
References: <5b9ba6c4-6d8f-9c0b-2420-2be6c30f87b5@cannon-ciota.info>
	<35ba77db-f95a-4517-c960-8ad42a633ba0@gmail.com>
	<f4849cef-3c40-31a4-e323-6a731bb52bc2@cannon-ciota.info>
	<9C2A6867-470D-4336-8439-17F4E0CA4B17@gmx.com>
	<CAPWm=eV2aLJKMM_5T-jaXCm1umRFxy+vfirBqCGAvUKHtOphQg@mail.gmail.com>
	<9EB5050D-E54E-4E8B-84C6-95CC1FAC4081@gmx.com>
	<b7ff549b-5ee8-172d-5a23-47ef8943533e@voskuil.org>
Message-ID: <cfba4a45-13a0-7620-940f-0b85e8b3427a@gmail.com>



Le 27/03/2017 ? 00:15, Eric Voskuil via bitcoin-dev a ?crit :
> On 03/26/2017 12:05 PM, Peter R via bitcoin-dev wrote:
>
>
>
> The repeated use of the term "network upgrade" in place of the
> accepted technical term (hard fork) is misleading. This and the
> presupposition that the hard fork is coming, and the claims that it's
> not your proposal, make me feel like I'm shopping for a used car...
> It's not used it's pre-owned, everyone's getting the warranty, let me
> see what my manager has to say about the price - it's not my decision.
>
> This is a development list. Avoidance of standardized terminology and
> use of the presumptive close diminishes your message.
>
>
>
> The idea was so powerful you were converted (another sales tactic).
> Who's proposal is this? Can they not speak for themselves?
>
>

What is the rationale to come on this list (on behalf of we don't know
whom) and explain all the details of the "network upgrade" (ie the
attack) if this is not to try to get some information to confirm the
theory and/or improve it, or some information about how it will be
defeated? This just shows that they are not sure about the whole thing,
they should stop this now, launch their approximative BU if they like
and leave BTC alone


-- 
Zcash wallets made simple: https://github.com/Ayms/zcash-wallets
Bitcoin wallets made simple: https://github.com/Ayms/bitcoin-wallets
Get the torrent dynamic blocklist: http://peersm.com/getblocklist
Check the 10 M passwords list: http://peersm.com/findmyass
Anti-spies and private torrents, dynamic blocklist: http://torrent-live.org
Peersm : http://www.peersm.com
torrent-live: https://github.com/Ayms/torrent-live
node-Tor : https://www.github.com/Ayms/node-Tor
GitHub : https://www.github.com/Ayms



From praxeology_guy at protonmail.com  Sun Mar 26 11:12:01 2017
From: praxeology_guy at protonmail.com (praxeology_guy)
Date: Sun, 26 Mar 2017 07:12:01 -0400
Subject: [bitcoin-dev] Inquiry: Transaction Tiering
In-Reply-To: <CAOyfL0qW=8091BAo9R2mskbyFSS3hOnXd+Wjsu4LQy7EtqzJjg@mail.gmail.com>
References: <CAOyfL0r8dLR=7Co5+YzbPQUeTs6Lw+OQjZTy=iyoDmr6VV_Qpw@mail.gmail.com>
	<Rs51ijp6P21vJsv7OxVB-k8vuJC_aUd8KnpxHC3phNw_lPieY2lS-k95gytpHTNzzBfuX030RRFKzrrwS3pfjTuFea_eUfErb3qDp5LDHp4=@protonmail.com>
	<CAOyfL0qW=8091BAo9R2mskbyFSS3hOnXd+Wjsu4LQy7EtqzJjg@mail.gmail.com>
Message-ID: <VsZqr_vSdChYZfrYO994j7C7l40fbq-RmueO4X8-xSYFCSy40Yne41GOSBdzpD0iSsM6vOZQTDqVpGgr1T78S8ZxPYQpTf38D9X186ZDHeU=@protonmail.com>

Martin:

Re: Miners not relaying unconfirmed txs... I was saying that this was a good thing from your perspective in wanting to give users the choice on which miners would get to confirm the tx. So then like we don't need to implement any kind of special bloated transaction that is only mine-able by some explicit set of miners... No fork or compatibility problems are necessary, can be completely implemented as an added feature.

Re: "Miners": I don't really like calling them "transaction processors" because in bitcoin, every synchronizing node that verifies signatures is a transaction processor. What sets them apart from full relay nodes is they create "blocks", which are "ledger change candidates" that included transactions and proof-of-work (PoW: deterministic diffusion puzzle solutions). They help create confidence that transactions in blocks will never by double spent by requiring that double spending would need lots of economic resources for someone else to re-perform the PoW.

Given the above definition of a "block", I would be happy calling them "Block Producers"... which does not imply that they do all of the necessary "transaction processing": that all users should be fine with running Electrum wallets or even SPV clients. They produce blocks, but its still up to other users in the network to do "transaction processing": decide for themselves if they want to accept particular blocks.

Cheers,
Praxeology Guy

-------- Original Message --------
Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering
Local Time: March 25, 2017 12:15 PM
UTC Time: March 25, 2017 5:15 PM
From: martin at stolze.cc
To: praxeology_guy <praxeology_guy at protonmail.com>
bitcoin-dev at lists.linuxfoundation.org

Thanks, those are valid concerns.

> Potentially miners could create their own private communication channel/listening port for submitting transactions that they would not relay to other miners/the public node relay network.
That is the idea. Transaction Processors could source transactions
from the public mempool as well their proprietary mempool(s).

> Miners would be incentivized to not relay higher fee transactions, because they would want to keep them to themselves for higher profits.
Not so, a user may want to incentivise a specific Transaction
Processor or many. A user can detect this behavior and withdraw his
future business if he notices that his transaction is not included in
a block despite there being transactions with lower fees included.
Remember, the transaction can be advertised to different mempools and
a Transaction Processor could lose this business to a competitor who
processes the next block if he holds it back.

Best Regards
Martin

PS: It seems not too late to get rid of misleading terms like "miner".
Block rewards (infrastructure subsidies) will be neglectable for
future generations and the analogy is exceedingly poor.

On Sat, Mar 25, 2017 at 4:42 AM, praxeology_guy
<praxeology_guy at protonmail.com> wrote:
> Potentially miners could create their own private communication
> channel/listening port for submitting transactions that they would not relay
> to other miners/the public node relay network. Users could then chose who
> they want to relay to. Miners would be incentivized to not relay higher fee
> transactions, because they would want to keep them to themselves for higher
> profits.
>
> Cheers,
> Praxeology Guy
>
>
> -------- Original Message --------
> Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering
> Local Time: March 22, 2017 12:48 PM
> UTC Time: March 22, 2017 5:48 PM
> From: bitcoin-dev at lists.linuxfoundation.org
> To: bitcoin-dev at lists.linuxfoundation.org
>
> Hi Tim,
> After writing this I figured that it was probably not evident at first
> sight as the concept may be quite novel. The physical location of the
> "miner" is indeed irrelevant, I am referring to the digital location.
> Bitcoins blockchain is a digital location or better digital "space".
> As far as I am concerned the authority lies with whoever governs this
> particular block space. A "miner" can, or can not, include my
> transaction.
>
> To make this more understandable:
>
> Abu Bakr al-Baghdadi can extend his caliphate into Bitcoins block
> space and rule sovereign(!) over a given block. If he processes my
> transaction my fee goes directly into the coffers of his organization.
> The same goes for the Queen of England or the Emperor of China. My
> interest is not necessarily aligned with each specific authority, yet
> as you point out, I can only not use Bitcoin.
> Alternatively, however, I can very well sign my transaction and send
> it to an authority of my choosing to be included into the ledger, say
> BitFurry. - This is what I describe in option 1.
>
> In order to protect my interest I do need to choose, maybe not today,
> but eventually.
>
> I also think that people do care who processes transactions and a lot
> of bickering could be spared if we could choose.
>
> If we assume a perfectly competitive market with 3 authorities that
> govern the block space equally, the marginal cost of 1/3 of the block
> space is the same for each, however, the marginal revenue absent of
> block rewards is dependent on fees.
> If people are willing to pay only a zero fee to a specific authority
> while a fee greater than zero to the others it's clear that one would
> be less competitive.
>
> Let us assume the fees are 10% of the revenue and the cost is 95 we
> have currently the following situation:
>
> A: Cost=95; Revenue=100; Profit=5
> B: Cost=95; Revenue=100; Profit=5
> C: Cost=95; Revenue=100; Profit=5
>
> With transaction tiering, the outcome could be different!
>
> A: Cost=95; Revenue=90; Loss=5 // BSA that does not respect user interest.
> B: Cost=95; Revenue=105; Profit=10
> C: Cost=95; Revenue=105; Profit=10
>
> This could motivate transaction processors to behave in accordance
> with user interest, or am I missing something?
>
> Best Regards,
> Martin
>
>> From: Tim Ruffing <tim.ruffing at mmci.uni-saarland.de>
>> To: bitcoin-dev at lists.linuxfoundation.org
>> Cc:
>> Bcc:
>> Date: Tue, 21 Mar 2017 16:18:26 +0100
>> Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering
>> (I'm not a lawyer...)
>>
>> I'm not sure if I can make sense of your email.
>>
>> On Mon, 2017-03-20 at 20:12 +0000, Martin Stolze via bitcoin-dev wrote:
>>> As a participant in the economy in general and of Bitcoin in
>>> particular, I desire an ability to decide where I transact. The
>>> current state of Bitcoin does not allow me to choose my place of
>>> business. As a consequence, I try to learn what would be the best way
>>> to conduct my business in good faith. [2]
>>
>> Ignoring the rest, I don't think that the physical location /
>> jurisdiction of the miner has any legal implications for law applicable
>> to the relationship between sender and receiver of a payment.
>>
>> This is not particular to Bitcoin. We're both in Germany (I guess).
>> Assume we have a contract without specific agreements and I pay you in
>> Icelandic kronur via PayPal (in Luxembourg) and my HTTPS requests to
>> PayPal went via Australia and the US. Then German law applies to our
>> contract, nothing in the middle can change that.
>>
>> Also ignoring possible security implications, there is just no need for
>> a mechanism that enables users to select miners. I claim that almost
>> nobody cares who will mine a transaction, because it makes no technical
>> difference. If you don't want a specific miner to mine your
>> transaction, then don't use Bitcoin.
>>
>> Tim
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170326/2214ecab/attachment.html>

From greg_not_so at hotmail.com  Sun Mar 26 12:11:44 2017
From: greg_not_so at hotmail.com (greg misiorek)
Date: Sun, 26 Mar 2017 12:11:44 +0000
Subject: [bitcoin-dev] Inquiry: Transaction Tiering
In-Reply-To: <CAOyfL0qW=8091BAo9R2mskbyFSS3hOnXd+Wjsu4LQy7EtqzJjg@mail.gmail.com>
References: <CAOyfL0r8dLR=7Co5+YzbPQUeTs6Lw+OQjZTy=iyoDmr6VV_Qpw@mail.gmail.com>
	<Rs51ijp6P21vJsv7OxVB-k8vuJC_aUd8KnpxHC3phNw_lPieY2lS-k95gytpHTNzzBfuX030RRFKzrrwS3pfjTuFea_eUfErb3qDp5LDHp4=@protonmail.com>,
	<CAOyfL0qW=8091BAo9R2mskbyFSS3hOnXd+Wjsu4LQy7EtqzJjg@mail.gmail.com>
Message-ID: <BLUPR15MB00516290185A5FC6B82F0D08B1300@BLUPR15MB0051.namprd15.prod.outlook.com>

agreed, the 'miner' term has run its course and plays a different role than it was originally set out to do, esp its original distributed nature. the 'mining business' has become concentrated too much and resembles today's financial institutions or simply banks, imho.


still, any form forking has dilutive effect on existing BTC holders.


thx, gm

________________________________
From: bitcoin-dev-bounces at lists.linuxfoundation.org <bitcoin-dev-bounces at lists.linuxfoundation.org> on behalf of Martin Stolze via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
Sent: Saturday, March 25, 2017 1:15 PM
To: praxeology_guy
Cc: bitcoin-dev at lists.linuxfoundation.org
Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering

Thanks, those are valid concerns.

> Potentially miners could create their own private communication channel/listening port for submitting transactions that they would not relay to other miners/the public node relay network.
That is the idea. Transaction Processors could source transactions
from the public mempool as well their proprietary mempool(s).

> Miners would be incentivized to not relay higher fee transactions, because they would want to keep them to themselves for higher profits.
Not so, a user may want to incentivise a specific Transaction
Processor or many. A user can detect this behavior and withdraw his
future business if he notices that his transaction is not included in
a block despite there being transactions with lower fees included.
Remember, the transaction can be advertised to different mempools and
a Transaction Processor could lose this business to a competitor who
processes the next block if he holds it back.

Best Regards
Martin

PS: It seems not too late to get rid of misleading terms like "miner".
Block rewards (infrastructure subsidies) will be neglectable for
future generations and the analogy is exceedingly poor.

On Sat, Mar 25, 2017 at 4:42 AM, praxeology_guy
<praxeology_guy at protonmail.com> wrote:
> Potentially miners could create their own private communication
> channel/listening port for submitting transactions that they would not relay
> to other miners/the public node relay network.  Users could then chose who
> they want to relay to.  Miners would be incentivized to not relay higher fee
> transactions, because they would want to keep them to themselves for higher
> profits.
>
> Cheers,
> Praxeology Guy
>
>
> -------- Original Message --------
> Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering
> Local Time: March 22, 2017 12:48 PM
> UTC Time: March 22, 2017 5:48 PM
> From: bitcoin-dev at lists.linuxfoundation.org
> To: bitcoin-dev at lists.linuxfoundation.org
>
> Hi Tim,
> After writing this I figured that it was probably not evident at first
> sight as the concept may be quite novel. The physical location of the
> "miner" is indeed irrelevant, I am referring to the digital location.
> Bitcoins blockchain is a digital location or better digital "space".
> As far as I am concerned the authority lies with whoever governs this
> particular block space. A "miner" can, or can not, include my
> transaction.
>
> To make this more understandable:
>
> Abu Bakr al-Baghdadi can extend his caliphate into Bitcoins block
> space and rule sovereign(!) over a given block. If he processes my
> transaction my fee goes directly into the coffers of his organization.
> The same goes for the Queen of England or the Emperor of China. My
> interest is not necessarily aligned with each specific authority, yet
> as you point out, I can only not use Bitcoin.
> Alternatively, however, I can very well sign my transaction and send
> it to an authority of my choosing to be included into the ledger, say
> BitFurry. - This is what I describe in option 1.
>
> In order to protect my interest I do need to choose, maybe not today,
> but eventually.
>
> I also think that people do care who processes transactions and a lot
> of bickering could be spared if we could choose.
>
> If we assume a perfectly competitive market with 3 authorities that
> govern the block space equally, the marginal cost of 1/3 of the block
> space is the same for each, however, the marginal revenue absent of
> block rewards is dependent on fees.
> If people are willing to pay only a zero fee to a specific authority
> while a fee greater than zero to the others it's clear that one would
> be less competitive.
>
> Let us assume the fees are 10% of the revenue and the cost is 95 we
> have currently the following situation:
>
> A: Cost=95; Revenue=100; Profit=5
> B: Cost=95; Revenue=100; Profit=5
> C: Cost=95; Revenue=100; Profit=5
>
> With transaction tiering, the outcome could be different!
>
> A: Cost=95; Revenue=90; Loss=5 // BSA that does not respect user interest.
> B: Cost=95; Revenue=105; Profit=10
> C: Cost=95; Revenue=105; Profit=10
>
> This could motivate transaction processors to behave in accordance
> with user interest, or am I missing something?
>
> Best Regards,
> Martin
>
>> From: Tim Ruffing <tim.ruffing at mmci.uni-saarland.de>
>> To: bitcoin-dev at lists.linuxfoundation.org
>> Cc:
>> Bcc:
>> Date: Tue, 21 Mar 2017 16:18:26 +0100
>> Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering
>> (I'm not a lawyer...)
>>
>> I'm not sure if I can make sense of your email.
>>
>> On Mon, 2017-03-20 at 20:12 +0000, Martin Stolze via bitcoin-dev wrote:
>>> As a participant in the economy in general and of Bitcoin in
>>> particular, I desire an ability to decide where I transact. The
>>> current state of Bitcoin does not allow me to choose my place of
>>> business. As a consequence, I try to learn what would be the best way
>>> to conduct my business in good faith. [2]
>>
>> Ignoring the rest, I don't think that the physical location /
>> jurisdiction of the miner has any legal implications for law applicable
>> to the relationship between sender and receiver of a payment.
>>
>> This is not particular to Bitcoin. We're both in Germany (I guess).
>> Assume we have a contract without specific agreements and I pay you in
>> Icelandic kronur via PayPal (in Luxembourg) and my HTTPS requests to
>> PayPal went via Australia and the US. Then German law applies to our
>> contract, nothing in the middle can change that.
>>
>> Also ignoring possible security implications, there is just no need for
>> a mechanism that enables users to select miners. I claim that almost
>> nobody cares who will mine a transaction, because it makes no technical
>> difference. If you don't want a specific miner to mine your
>> transaction, then don't use Bitcoin.
>>
>> Tim
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
bitcoin-dev -- Bitcoin Protocol Discussion - Linux Foundation<https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
lists.linuxfoundation.org
Bitcoin development and protocol discussion. This list is lightly moderated. - No offensive posts, no personal attacks. - Posts must concern development of bitcoin ...



>
>
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
bitcoin-dev -- Bitcoin Protocol Discussion - Linux Foundation<https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
lists.linuxfoundation.org
Bitcoin development and protocol discussion. This list is lightly moderated. - No offensive posts, no personal attacks. - Posts must concern development of bitcoin ...



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170326/f13f0828/attachment-0001.html>

From hozer at hozed.org  Fri Mar 24 02:18:45 2017
From: hozer at hozed.org (hozer at hozed.org)
Date: Fri, 24 Mar 2017 02:18:45 +0000
Subject: [bitcoin-dev] Requirement for pseudonymous BIP submissions
In-Reply-To: <CADWuND34HbsF_e3Ob0bBPCzacsWrsfPjLzawwFd8KxcCoLDFSw@mail.gmail.com>
References: <CADWuND34HbsF_e3Ob0bBPCzacsWrsfPjLzawwFd8KxcCoLDFSw@mail.gmail.com>
Message-ID: <20170324021845.GC23538@hostname.unassigned>

On Sun, Mar 19, 2017 at 11:43:12PM +0000, muyuu via bitcoin-dev wrote:
> If this was in place I would contribute more and I wouldn't have to create
> throw-away accounts.
> 
> This is not a space where you want to be a recognisable target.
> 
> Today, BitFury's CEO threatened to sue developers if they didn't kowtow to
> his demands to leave the PoW alone. This is unacceptable. Decisions have to
> be made on merit and the interest of the project, and nothing else.
> 
> This is very important and needs to be given priority. Most Core developers
> and all the main ones except Satoshi have built a public persona, either
> for ego or for practical monetary reasons. Obviously there's academia where
> everything is about plastering your name as much as possible and getting
> cited. So it's understood. Although I understand the difficulty of getting
> funded and getting trusted without a face, there needs to be an outlet so
> people can interact and contribute in a proper cypherpunk way.
> 
> Also, GitHub is quite anti-privacy. So I recommend not reusing personal
> accounts from work.
> 
> -muyuu

I quite agree, and I would add that sometimes making yourself
recognisable is far more important that merit.

If we are really going to go for merit, then we probably need to go
all the way back to examine why is it developers and academics think
they need to have money to make code or reputation to do research.

The best code I've written is stuff I've given away for free, although
sometimes I'm able to leverage being recognized for having written 
something into getting paid to write more code. The best research
I've done has been self-funded, when I did not subconsciously have
a funding agent I was trying to please with the outcome of the 
research.

We need a safe space for merit, how about http://gplspace.org/

From hozer at hozed.org  Fri Mar 24 02:30:29 2017
From: hozer at hozed.org (Troy Benjegerdes)
Date: Fri, 24 Mar 2017 02:30:29 +0000
Subject: [bitcoin-dev] Requirement for pseudonymous BIP submissions
In-Reply-To: <201703181915.11040.luke@dashjr.org>
References: <CAGL6+mEnGNdAggHZs=ZM_QHbts63exE1ydstK+w-gUnm=4JLTA@mail.gmail.com>
	<201703181915.11040.luke@dashjr.org>
Message-ID: <20170324023029.GD23538@hostname.unassigned>

On Sat, Mar 18, 2017 at 07:15:09PM +0000, Luke Dashjr via bitcoin-dev wrote:
> On Saturday, March 18, 2017 3:23:16 PM Chris Stewart via bitcoin-dev wrote:
> > There is inconvenience added here. You need to make a new email address,
> > you need to make a new github account to submit the BIP. 
> 
> GitHub doesn't allow people to have multiple accounts last I checked.

C'mon people.

Anyone remember when git didn't even exist and all we had was CVS, 
subversion, and BitKeeper?

Get me a couple of motivated grad students who know Python and we can
turn a combination of Mercurial, BitTorrent, and pynode into a distributed,
leaderless, decentralized version control system that can let users 
create a crypto key, anonymously propose BIPs, and then get paid in
crypto for the best commits.

Who else would contribute to a crowdfunding effort to do such at thing?

From btcideas at protonmail.com  Mon Mar 27 16:12:19 2017
From: btcideas at protonmail.com (Btc Ideas)
Date: Mon, 27 Mar 2017 12:12:19 -0400
Subject: [bitcoin-dev] Encouraging good miners
Message-ID: <uQBxE-Qbd-osime4uulMZZHdF_D7usA2EKsPjkTyXCHM0OakN2Wdoeriyrc73yWp5c5ULQNkIsRXAM64cCom7ecPvdwmatOyc9Kh1sTDpl4=@protonmail.com>

Add a preference for mined blocks to be the one with more transactions. This comes into play when 2 blocks of the same height are found. The first good block mined would be orphaned if it had less transactions than another. Optionally, have this rule apply to the current block and the previous one.

This increases incentive for full blocks because a miner thinking the faster propagation of a smaller block will win him the reward, but that would no longer be a good assumption.

I read some miners could attack a chain by mining small or empty blocks. This makes that a little more difficult, but they can still attack the chain many ways.

Sent with [ProtonMail](https://protonmail.com) Secure Email.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170327/4814f43d/attachment.html>

From jameson.lopp at gmail.com  Mon Mar 27 16:29:05 2017
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Mon, 27 Mar 2017 12:29:05 -0400
Subject: [bitcoin-dev] Encouraging good miners
In-Reply-To: <uQBxE-Qbd-osime4uulMZZHdF_D7usA2EKsPjkTyXCHM0OakN2Wdoeriyrc73yWp5c5ULQNkIsRXAM64cCom7ecPvdwmatOyc9Kh1sTDpl4=@protonmail.com>
References: <uQBxE-Qbd-osime4uulMZZHdF_D7usA2EKsPjkTyXCHM0OakN2Wdoeriyrc73yWp5c5ULQNkIsRXAM64cCom7ecPvdwmatOyc9Kh1sTDpl4=@protonmail.com>
Message-ID: <CADL_X_dZsQ9uOhoyAU3-s0DixSCwYgh0B+NE78zpo+ghYyphCw@mail.gmail.com>

Bitcoin chooses the "best chain" based upon the one that has the most
cumulative proof of work behind it. Are you proposing that the cumulative
proof of work be ignored if two blocks are within a certain threshold of
each others' work and if so, the number of transactions in the block / the
size of the block should be used as a "tie breaker?"

I think this idea needs more fleshing out of exactly how it would work,
with careful consideration that adding complexity to the best chain logic
could introduce exploitable flaws.

On Mon, Mar 27, 2017 at 12:12 PM, Btc Ideas via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Add a preference for mined blocks to be the one with more transactions.
> This comes into play when 2 blocks of the same height are found. The first
> good block mined would be orphaned if it had less transactions than
> another. Optionally, have this rule apply to the current block and the
> previous one.
>
> This increases incentive for full blocks because a miner thinking the
> faster propagation of a smaller block will win him the reward, but that
> would no longer be a good assumption.
>
> I read some miners could attack a chain by mining small or empty blocks.
> This makes that a little more difficult, but they can still attack the
> chain many ways.
>
>
> Sent with ProtonMail <https://protonmail.com> Secure Email.
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170327/70b5a851/attachment.html>

From ajwest at gmail.com  Mon Mar 27 16:29:20 2017
From: ajwest at gmail.com (AJ West)
Date: Mon, 27 Mar 2017 12:29:20 -0400
Subject: [bitcoin-dev] Inquiry: Transaction Tiering
Message-ID: <CABXVU6ZRBBcPVjEcCRjhSNsgPmWrHWnmcWLOYVDjRdQYN2QTiQ@mail.gmail.com>

Hi I'm AJ West, I made a service http://preferredminer.com which is a
proof-of-concept project designed to spur discussion on exactly this issue
of "miners as service providers."

The current status is that Bitcoin end users are looking to support
specific miners, whether that's because they agree with a miner/pool's
political positions, their consensus ideology, physical location (yes some
people would like only miners in particular countries to mine their
transactions) and the list of reasons goes on. The main attitude right now
is that people would like to 'support' miners who signal for the features
they care about.

I strongly believe, whether the Bitcoin developer community facilitates it
or not, certain miners will become preferred by users. In summary, there
are realistically two proposed ways of providing this service in the
present-day situation: 1) By creating 'segregated mempools' where an
authenticated third-party like my web service Preferred Miner manages the
access to pending transactions destined for a specific set of miners, and
2) by creating transactions where the mining fee is in one way or another,
an output to an address owned by the preferred miner(s).

There are some terrible pitfalls with both of these methods. The first
being that you have to trust a lot of people, including the 3rd party (me)
and the pools to work in your users' interest ("don't give my transactions
to other miners or broadcast to mempool please"). Then there are the extra
fees users will have to pay to offset the risk of a miner losing out for
having to send the network a not-yet-broadcasted transaction. And finally,
the other method requires that they be larger transactions, and a directory
of mining pools' receiving addresses for outputs must be maintained. Then
you have to hope the miner will be setup to scoop in your transaction
knowing it's got a fee for them. Plus, how many nodes going forward are
going to hold what seem to be 0-fee transactions in mempool (because the
fee is in the outputs)?

I am not necessarily looking for answers or solutions to these issues, but
simply to show a case and to express that this idea of having specific
miners/pools process their transactions, is important to some people.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170327/33df8bb3/attachment.html>

From vitteaymeric at gmail.com  Mon Mar 27 17:09:20 2017
From: vitteaymeric at gmail.com (Aymeric Vitte)
Date: Mon, 27 Mar 2017 19:09:20 +0200
Subject: [bitcoin-dev] Bandwidth limits and LN w/ node relay network
 topography
In-Reply-To: <OlmJBOCNdLgek6x1SvZhs_z04xtkZ1i1zRoJMoeda0WZhMZyRl459BVklFY4xxBmwaP0pLJbBtbUO8i-3bprB8ZuoeoHwUqoHR8rdPYRd9g=@protonmail.com>
References: <OlmJBOCNdLgek6x1SvZhs_z04xtkZ1i1zRoJMoeda0WZhMZyRl459BVklFY4xxBmwaP0pLJbBtbUO8i-3bprB8ZuoeoHwUqoHR8rdPYRd9g=@protonmail.com>
Message-ID: <aa1b7bb0-e7cf-55a4-0695-a4f168faefa3@gmail.com>

What you are describing is described here too:
https://gist.github.com/Ayms/aab6f8e08fef0792ab3448f542a826bf (again, at
very draft and somewhere misleading state)

I don't think that the rewards should depend on subsequent chains built
on top of the main one, it should be handled by the main chain

I am not sure to really get your last sentence and why history should
have an importance based on some ways for historical valid nodes to
prove they are still, supposedly defeating the nodes trying to split,
who would inherently not behave correctly and therefore be banned by the
other nodes

Again, we are not far from switching from decentralized to centralized,
and I must again mention the Tor network, which indeed selects nodes
according to their advertised bandwidth (ie does not select you if you
advertise a very low one, which my nodes are doing because their work is
not to relay the tor traffic), but not only since the network itself
makes some calculations (and then does not select the nodes that are
lying, but this does not work the other way around), unlike this system
the decentralized system should self regulate without being able to
fingerprint the valid nodes over time


Le 27/03/2017 ? 00:11, praxeology_guy via bitcoin-dev a ?crit :
> Bandwidth limits:
> Would be nice to specify global and per node up/down bandwidth limits.
> Communicate limits to peers.
> Monitor actual bandwidth with peers.
> Adjust connections accordingly to attain bandwidth goals/limits.
>
> With Lightning Network:
> Prepay for bandwidth/data.  Continue paying nodes who continue to send
> new useful data.  Potentially pay different amounts for different
> kinds of data.
> Request refunds when a node sends useless/duplicate/invalid/spam
> data.  Discontinue connection w/ nodes that don't refund.  Hence LN
> payment channel network topography becomes somewhat correlated w/
> bitcoin node relay network topography.
>
> Should help nodes get better data faster, improve spam/DDoS
> resiliance.  Incentivizes relay of unconfirmed txs and new blocks,
> when currently there is only a utilitarian marginal self benefit via
> helping everyone in general.
>
> Maybe relay advertisements of available bandwidth and prices, etc.
>
> To identify network splits:
> Nodes could find hash of "nonce + pub key + tip blockhash" beating a
> difficulty threshold.  Sign, broadcast.  Prove their existence and
> connectedness.  History can be maintained and monitored for
> disruption.  Could be made part of the messages that advertise
> available network bandwidth.
>
> Cheers,
> Praxeology Guy
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-- 
Zcash wallets made simple: https://github.com/Ayms/zcash-wallets
Bitcoin wallets made simple: https://github.com/Ayms/bitcoin-wallets
Get the torrent dynamic blocklist: http://peersm.com/getblocklist
Check the 10 M passwords list: http://peersm.com/findmyass
Anti-spies and private torrents, dynamic blocklist: http://torrent-live.org
Peersm : http://www.peersm.com
torrent-live: https://github.com/Ayms/torrent-live
node-Tor : https://www.github.com/Ayms/node-Tor
GitHub : https://www.github.com/Ayms

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170327/afc565c1/attachment-0001.html>

From martin at stolze.cc  Mon Mar 27 17:18:22 2017
From: martin at stolze.cc (Martin Stolze)
Date: Mon, 27 Mar 2017 18:18:22 +0100
Subject: [bitcoin-dev] Inquiry: Transaction Tiering
In-Reply-To: <BLUPR15MB00516290185A5FC6B82F0D08B1300@BLUPR15MB0051.namprd15.prod.outlook.com>
References: <CAOyfL0r8dLR=7Co5+YzbPQUeTs6Lw+OQjZTy=iyoDmr6VV_Qpw@mail.gmail.com>
	<Rs51ijp6P21vJsv7OxVB-k8vuJC_aUd8KnpxHC3phNw_lPieY2lS-k95gytpHTNzzBfuX030RRFKzrrwS3pfjTuFea_eUfErb3qDp5LDHp4=@protonmail.com>
	<CAOyfL0qW=8091BAo9R2mskbyFSS3hOnXd+Wjsu4LQy7EtqzJjg@mail.gmail.com>
	<BLUPR15MB00516290185A5FC6B82F0D08B1300@BLUPR15MB0051.namprd15.prod.outlook.com>
Message-ID: <CAOyfL0r5f5FzS5phe8LbKuXF=AfE26gtqPy+RBWKg9zP4PsObQ@mail.gmail.com>

Yes, the terminology is creating a lot of confusion. I would be happy to
contribute to a discourse that helps to clear up the ambiguities and
cringeworthiness of current "standardized terminology".
Robert Keagen developed a perspective on psychological development [1] and
it appears to me that Stage 2 and 3 (miner, cash, network upgrade, ...) is
discussing with Stage 4 (hash power, settlement, fork, ...).

"Miner" is not wrong, just not helpful if you try to gauge the deeper
complexities of Bitcoin. Likewise, "money" is not wrong if you explain it
to a child, while credit and debt is much more useful if you want to gauge
the deeper complexities of economics.

still, any form forking has dilutive effect on existing BTC holders.


Not at all, I sleep sound and anticipate any such event as an ugly scrip
dividend.

Regards
Martin

[1] https://en.wikipedia.org/wiki/Robert_Kegan#In_Over_Our_Heads

On Sun, Mar 26, 2017 at 1:11 PM, greg misiorek <greg_not_so at hotmail.com>
wrote:

> agreed, the 'miner' term has run its course and plays a different role
> than it was originally set out to do, esp its original distributed nature.
> the 'mining business' has become concentrated too much and resembles
> today's financial institutions or simply banks, imho.
>
>
> still, any form forking has dilutive effect on existing BTC holders.
>
>
> thx, gm
> ------------------------------
> *From:* bitcoin-dev-bounces at lists.linuxfoundation.org <
> bitcoin-dev-bounces at lists.linuxfoundation.org> on behalf of Martin Stolze
> via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
> *Sent:* Saturday, March 25, 2017 1:15 PM
> *To:* praxeology_guy
> *Cc:* bitcoin-dev at lists.linuxfoundation.org
>
> *Subject:* Re: [bitcoin-dev] Inquiry: Transaction Tiering
>
> Thanks, those are valid concerns.
>
> > Potentially miners could create their own private communication
> channel/listening port for submitting transactions that they would not
> relay to other miners/the public node relay network.
> That is the idea. Transaction Processors could source transactions
> from the public mempool as well their proprietary mempool(s).
>
> > Miners would be incentivized to not relay higher fee transactions,
> because they would want to keep them to themselves for higher profits.
> Not so, a user may want to incentivise a specific Transaction
> Processor or many. A user can detect this behavior and withdraw his
> future business if he notices that his transaction is not included in
> a block despite there being transactions with lower fees included.
> Remember, the transaction can be advertised to different mempools and
> a Transaction Processor could lose this business to a competitor who
> processes the next block if he holds it back.
>
> Best Regards
> Martin
>
> PS: It seems not too late to get rid of misleading terms like "miner".
> Block rewards (infrastructure subsidies) will be neglectable for
> future generations and the analogy is exceedingly poor.
>
> On Sat, Mar 25, 2017 at 4:42 AM, praxeology_guy
> <praxeology_guy at protonmail.com> wrote:
> > Potentially miners could create their own private communication
> > channel/listening port for submitting transactions that they would not
> relay
> > to other miners/the public node relay network.  Users could then chose
> who
> > they want to relay to.  Miners would be incentivized to not relay higher
> fee
> > transactions, because they would want to keep them to themselves for
> higher
> > profits.
> >
> > Cheers,
> > Praxeology Guy
> >
> >
> > -------- Original Message --------
> > Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering
> > Local Time: March 22, 2017 12:48 PM
> > UTC Time: March 22, 2017 5:48 PM
> > From: bitcoin-dev at lists.linuxfoundation.org
> > To: bitcoin-dev at lists.linuxfoundation.org
> >
> > Hi Tim,
> > After writing this I figured that it was probably not evident at first
> > sight as the concept may be quite novel. The physical location of the
> > "miner" is indeed irrelevant, I am referring to the digital location.
> > Bitcoins blockchain is a digital location or better digital "space".
> > As far as I am concerned the authority lies with whoever governs this
> > particular block space. A "miner" can, or can not, include my
> > transaction.
> >
> > To make this more understandable:
> >
> > Abu Bakr al-Baghdadi can extend his caliphate into Bitcoins block
> > space and rule sovereign(!) over a given block. If he processes my
> > transaction my fee goes directly into the coffers of his organization.
> > The same goes for the Queen of England or the Emperor of China. My
> > interest is not necessarily aligned with each specific authority, yet
> > as you point out, I can only not use Bitcoin.
> > Alternatively, however, I can very well sign my transaction and send
> > it to an authority of my choosing to be included into the ledger, say
> > BitFurry. - This is what I describe in option 1.
> >
> > In order to protect my interest I do need to choose, maybe not today,
> > but eventually.
> >
> > I also think that people do care who processes transactions and a lot
> > of bickering could be spared if we could choose.
> >
> > If we assume a perfectly competitive market with 3 authorities that
> > govern the block space equally, the marginal cost of 1/3 of the block
> > space is the same for each, however, the marginal revenue absent of
> > block rewards is dependent on fees.
> > If people are willing to pay only a zero fee to a specific authority
> > while a fee greater than zero to the others it's clear that one would
> > be less competitive.
> >
> > Let us assume the fees are 10% of the revenue and the cost is 95 we
> > have currently the following situation:
> >
> > A: Cost=95; Revenue=100; Profit=5
> > B: Cost=95; Revenue=100; Profit=5
> > C: Cost=95; Revenue=100; Profit=5
> >
> > With transaction tiering, the outcome could be different!
> >
> > A: Cost=95; Revenue=90; Loss=5 // BSA that does not respect user
> interest.
> > B: Cost=95; Revenue=105; Profit=10
> > C: Cost=95; Revenue=105; Profit=10
> >
> > This could motivate transaction processors to behave in accordance
> > with user interest, or am I missing something?
> >
> > Best Regards,
> > Martin
> >
> >> From: Tim Ruffing <tim.ruffing at mmci.uni-saarland.de>
> >> To: bitcoin-dev at lists.linuxfoundation.org
> >> Cc:
> >> Bcc:
> >> Date: Tue, 21 Mar 2017 16:18:26 +0100
> >> Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering
> >> (I'm not a lawyer...)
> >>
> >> I'm not sure if I can make sense of your email.
> >>
> >> On Mon, 2017-03-20 at 20:12 +0000, Martin Stolze via bitcoin-dev wrote:
> >>> As a participant in the economy in general and of Bitcoin in
> >>> particular, I desire an ability to decide where I transact. The
> >>> current state of Bitcoin does not allow me to choose my place of
> >>> business. As a consequence, I try to learn what would be the best way
> >>> to conduct my business in good faith. [2]
> >>
> >> Ignoring the rest, I don't think that the physical location /
> >> jurisdiction of the miner has any legal implications for law applicable
> >> to the relationship between sender and receiver of a payment.
> >>
> >> This is not particular to Bitcoin. We're both in Germany (I guess).
> >> Assume we have a contract without specific agreements and I pay you in
> >> Icelandic kronur via PayPal (in Luxembourg) and my HTTPS requests to
> >> PayPal went via Australia and the US. Then German law applies to our
> >> contract, nothing in the middle can change that.
> >>
> >> Also ignoring possible security implications, there is just no need for
> >> a mechanism that enables users to select miners. I claim that almost
> >> nobody cares who will mine a transaction, because it makes no technical
> >> difference. If you don't want a specific miner to mine your
> >> transaction, then don't use Bitcoin.
> >>
> >> Tim
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> bitcoin-dev -- Bitcoin Protocol Discussion - Linux Foundation
> <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
> lists.linuxfoundation.org
> Bitcoin development and protocol discussion. This list is lightly
> moderated. - No offensive posts, no personal attacks. - Posts must concern
> development of bitcoin ...
>
>
> >
> >
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> bitcoin-dev -- Bitcoin Protocol Discussion - Linux Foundation
> <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
> lists.linuxfoundation.org
> Bitcoin development and protocol discussion. This list is lightly
> moderated. - No offensive posts, no personal attacks. - Posts must concern
> development of bitcoin ...
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170327/caa155b6/attachment.html>

From tomz at freedommail.ch  Mon Mar 27 17:29:57 2017
From: tomz at freedommail.ch (Tom Zander)
Date: Mon, 27 Mar 2017 19:29:57 +0200
Subject: [bitcoin-dev] Encouraging good miners
In-Reply-To: <uQBxE-Qbd-osime4uulMZZHdF_D7usA2EKsPjkTyXCHM0OakN2Wdoeriyrc73yWp5c5ULQNkIsRXAM64cCom7ecPvdwmatOyc9Kh1sTDpl4=@protonmail.com>
References: <uQBxE-Qbd-osime4uulMZZHdF_D7usA2EKsPjkTyXCHM0OakN2Wdoeriyrc73yWp5c5ULQNkIsRXAM64cCom7ecPvdwmatOyc9Kh1sTDpl4=@protonmail.com>
Message-ID: <7350662.8AQMRkRU5C@cherry>

For some time now the relation between block size and propagation speed has 
been decoupled. Using xthin/compact blocks miners only send a tiny version 
of a block which then causes the receiving node to re-create it using the 
memory pool.  Immediately getting double benefits by including pre-verified 
transactions from the memory pool you avoid the old problem of having to 
validate them again when a block was mined.

As such there is no downside to a miner creating a bigger block, as long as 
all the transactions they include are actually in the mempool.

As such I'm personally convinced that the problem you are trying to solve 
has already been solved.

Cheers!


On Monday, 27 March 2017 18:12:19 CEST Btc Ideas via bitcoin-dev wrote:
> Add a preference for mined blocks to be the one with more transactions.
> This comes into play when 2 blocks of the same height are found. The
> first good block mined would be orphaned if it had less transactions than
> another. Optionally, have this rule apply to the current block and the
> previous one.
> 
> This increases incentive for full blocks because a miner thinking the
> faster propagation of a smaller block will win him the reward, but that
> would no longer be a good assumption.


-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From sdaftuar at gmail.com  Mon Mar 27 19:22:43 2017
From: sdaftuar at gmail.com (Suhas Daftuar)
Date: Mon, 27 Mar 2017 15:22:43 -0400
Subject: [bitcoin-dev] Segregated witness p2p layer compatibility
Message-ID: <CAFp6fsHhqdL=MNyAAyfwA7qw5-MhW19Whky+kY3n3=+u61bXBg@mail.gmail.com>

Hi,

There have been two threads recently that have made references to
peer-to-peer implementation details in Bitcoin Core's Segregated Witness
code that I would like to clarify.

In the thread "Issolated Bitcoin Nodes" (
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-March/013765.html),
there was some discussion about how Bitcoin Core's block download logic
behaves after segwit activation.  After segwit activation, Bitcoin Core
nodes will not (currently) attempt to download any blocks from non-segwit
peers (nodes that do not set the NODE WITNESS service bit).  This is a
bandwidth optimization to prevent a node from downloading a block that may
be invalid only because the sender omitted the witness, requiring
re-download until the block is received with the required witness data.

But to be clear, non-segwit blocks -- that is, blocks without a witness
commitment in the coinbase, and whose transactions are serialized without
witnesses, and whose transactions are not spending segwit outputs which
require a witness -- are evaluated under the same rules as prior,
pre-segwit versions of the software.  So such non-segwit blocks that are
valid to older, pre-segwit nodes are also valid to segwit-nodes.

In
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-March/013796.html,
Eric Voskuil wrote:

Given the protocol requirements of the segwit proposal this is not the
> case. A miner running pre-segwit code will produce blocks that no
> segwit node will ever receive.


The phrase "protocol requirements of segwit" is confusing here, because
there are two different layers that need consideration: the consensus
protocol layer and the peer-to-peer protocol layer.  But in neither layer
is the behavior of not downloading blocks from non-NODE WITNESS peers a
"requirement".  This is an implementation detail in the Bitcoin Core code
that alternate implementations compliant with BIP 144 could implement
differently.

At the consensus layer, non-segwit blocks (described above) that are valid
to older nodes are also valid to segwit nodes.  That means that if a miner
was using an older, pre-segwit version of Bitcoin Core to produce blocks
after segwit activates, that blocks they find will be valid to all nodes.

At the p2p layer, though, segwit-enabled Bitcoin Core nodes will only try
to download those blocks if announced by a segwit-enabled peer.  But this
is not a protocol requirement; other implementations can remain compatible
even they take different approaches here.  (As an example, I could imagine
an implementation that downloaded a new block from any peer, but if the
block has a witness commitment in the coinbase and was received from a
non-segwit peer, then the node would attempt re-download from a segwit
peer.  I'm sure many other reasonable block download strategies could be
devised.)

Still, if a miner wants to continue mining post-segwit activation, but
using pre-segwit software, they would need a way to relay their blocks to a
segwit-enabled peer.

There are a few ways to do this that I can think of:

- Use the RPC call "submitblock" on a segwit-enabled node.  Calling
"submitblock" on a Bitcoin Core 0.13.1 (0.13.0 in the case of testnet) or
later node works fine as long as the block is valid (whether or not it has
a witness commitment or witness transactions), and once a segwit-enabled
peer has the block it will relay to other segwit peers.

- Explicitly deliver the block to a segwit node over the p2p network, even
if unrequested.  Currently Bitcoin Core at least will process unrequested
blocks, and valid blocks that update the tip will then be relayed to other
peers.

- Run a bridge node, which advertises NODE_WITNESS and can serialize blocks
with witness data, which downloads blocks even from non-NODE WITNESS
peers.  Anyone can do this to bridge the networks for the benefit of the
whole network (I have personally been running a few nodes that do this, for
several months now), but miners concerned about this issue for their own
blocks could explicitly do this themselves to ensure that their own blocks
propagate to the segwit-enabled network.

- Peer directly with other miners, bypassing the p2p network.  Many miners
do this already, using protocols which may already serve to bridge the
network.

So saying that "A miner running pre-segwit code will produce blocks that no
segwit node will ever receive" is not really correct, in my view.  If the
whole network were just running Bitcoin Core software releases, and the
miner was not able/willing to deliver their block to a segwit-enabled node
(eg by using the RPC call "submitblock", or one of the other suggestions I
had above), then I would agree with the statement.  But given that there
are bridge nodes on the network, and that miners have other options to
relay their block, I think this is not an accurate portrayal of what would
actually happen on the network -- I would expect that non-segwit miners'
blocks would still get relayed post-segwit activation, even if only by the
handful of bridge nodes that I expect are currently running.

All that said, I do think this is an important detail to highlight and that
this behavior should be better documented (I believe it deserves specific
mention in a BIP), as this is an important issue for miners to be aware of.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170327/564a835d/attachment.html>

From lf-lists at mattcorallo.com  Mon Mar 27 19:32:30 2017
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Mon, 27 Mar 2017 19:32:30 +0000
Subject: [bitcoin-dev] Segregated witness p2p layer compatibility
In-Reply-To: <CAFp6fsHhqdL=MNyAAyfwA7qw5-MhW19Whky+kY3n3=+u61bXBg@mail.gmail.com>
References: <CAFp6fsHhqdL=MNyAAyfwA7qw5-MhW19Whky+kY3n3=+u61bXBg@mail.gmail.com>
Message-ID: <B12B2CE9-9A7A-4D8A-8393-528942285CCF@mattcorallo.com>

Just to expand a tiny bit here, while the testnet setup of only a few nodes acting as "bridges", mainnet already has many systems which act as effective bridges today - there are several relay networks in use which effectively bypass the P2P network, including my legacy relay network (which many miners historically have used, and I'd expect those who aren't paying attention and don't upgrade will not turn off, fixing the issue for them), ViaBTC's super aggressive bandwidth-wasting block announcement network which pushes blocks from several pools to many nodes globally, and Bitcoin.com's private relay network. (Of course many other miners and pools have private relay networks, but the several other such networks I'm aware of are already segwit-compatible, even for pools not signaling segwit).

Matt

On March 27, 2017 12:22:43 PM PDT, Suhas Daftuar via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>Hi,
>
>There have been two threads recently that have made references to
>peer-to-peer implementation details in Bitcoin Core's Segregated
>Witness
>code that I would like to clarify.
>
>In the thread "Issolated Bitcoin Nodes" (
>https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-March/013765.html),
>there was some discussion about how Bitcoin Core's block download logic
>behaves after segwit activation.  After segwit activation, Bitcoin Core
>nodes will not (currently) attempt to download any blocks from
>non-segwit
>peers (nodes that do not set the NODE WITNESS service bit).  This is a
>bandwidth optimization to prevent a node from downloading a block that
>may
>be invalid only because the sender omitted the witness, requiring
>re-download until the block is received with the required witness data.
>
>But to be clear, non-segwit blocks -- that is, blocks without a witness
>commitment in the coinbase, and whose transactions are serialized
>without
>witnesses, and whose transactions are not spending segwit outputs which
>require a witness -- are evaluated under the same rules as prior,
>pre-segwit versions of the software.  So such non-segwit blocks that
>are
>valid to older, pre-segwit nodes are also valid to segwit-nodes.
>
>In
>https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-March/013796.html,
>Eric Voskuil wrote:
>
>Given the protocol requirements of the segwit proposal this is not the
>> case. A miner running pre-segwit code will produce blocks that no
>> segwit node will ever receive.
>
>
>The phrase "protocol requirements of segwit" is confusing here, because
>there are two different layers that need consideration: the consensus
>protocol layer and the peer-to-peer protocol layer.  But in neither
>layer
>is the behavior of not downloading blocks from non-NODE WITNESS peers a
>"requirement".  This is an implementation detail in the Bitcoin Core
>code
>that alternate implementations compliant with BIP 144 could implement
>differently.
>
>At the consensus layer, non-segwit blocks (described above) that are
>valid
>to older nodes are also valid to segwit nodes.  That means that if a
>miner
>was using an older, pre-segwit version of Bitcoin Core to produce
>blocks
>after segwit activates, that blocks they find will be valid to all
>nodes.
>
>At the p2p layer, though, segwit-enabled Bitcoin Core nodes will only
>try
>to download those blocks if announced by a segwit-enabled peer.  But
>this
>is not a protocol requirement; other implementations can remain
>compatible
>even they take different approaches here.  (As an example, I could
>imagine
>an implementation that downloaded a new block from any peer, but if the
>block has a witness commitment in the coinbase and was received from a
>non-segwit peer, then the node would attempt re-download from a segwit
>peer.  I'm sure many other reasonable block download strategies could
>be
>devised.)
>
>Still, if a miner wants to continue mining post-segwit activation, but
>using pre-segwit software, they would need a way to relay their blocks
>to a
>segwit-enabled peer.
>
>There are a few ways to do this that I can think of:
>
>- Use the RPC call "submitblock" on a segwit-enabled node.  Calling
>"submitblock" on a Bitcoin Core 0.13.1 (0.13.0 in the case of testnet)
>or
>later node works fine as long as the block is valid (whether or not it
>has
>a witness commitment or witness transactions), and once a
>segwit-enabled
>peer has the block it will relay to other segwit peers.
>
>- Explicitly deliver the block to a segwit node over the p2p network,
>even
>if unrequested.  Currently Bitcoin Core at least will process
>unrequested
>blocks, and valid blocks that update the tip will then be relayed to
>other
>peers.
>
>- Run a bridge node, which advertises NODE_WITNESS and can serialize
>blocks
>with witness data, which downloads blocks even from non-NODE WITNESS
>peers.  Anyone can do this to bridge the networks for the benefit of
>the
>whole network (I have personally been running a few nodes that do this,
>for
>several months now), but miners concerned about this issue for their
>own
>blocks could explicitly do this themselves to ensure that their own
>blocks
>propagate to the segwit-enabled network.
>
>- Peer directly with other miners, bypassing the p2p network.  Many
>miners
>do this already, using protocols which may already serve to bridge the
>network.
>
>So saying that "A miner running pre-segwit code will produce blocks
>that no
>segwit node will ever receive" is not really correct, in my view.  If
>the
>whole network were just running Bitcoin Core software releases, and the
>miner was not able/willing to deliver their block to a segwit-enabled
>node
>(eg by using the RPC call "submitblock", or one of the other
>suggestions I
>had above), then I would agree with the statement.  But given that
>there
>are bridge nodes on the network, and that miners have other options to
>relay their block, I think this is not an accurate portrayal of what
>would
>actually happen on the network -- I would expect that non-segwit
>miners'
>blocks would still get relayed post-segwit activation, even if only by
>the
>handful of bridge nodes that I expect are currently running.
>
>All that said, I do think this is an important detail to highlight and
>that
>this behavior should be better documented (I believe it deserves
>specific
>mention in a BIP), as this is an important issue for miners to be aware
>of.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170327/79513d01/attachment-0001.html>

From eric at voskuil.org  Mon Mar 27 20:01:41 2017
From: eric at voskuil.org (Eric Voskuil)
Date: Mon, 27 Mar 2017 13:01:41 -0700
Subject: [bitcoin-dev] Encouraging good miners
In-Reply-To: <7350662.8AQMRkRU5C@cherry>
References: <uQBxE-Qbd-osime4uulMZZHdF_D7usA2EKsPjkTyXCHM0OakN2Wdoeriyrc73yWp5c5ULQNkIsRXAM64cCom7ecPvdwmatOyc9Kh1sTDpl4=@protonmail.com>
	<7350662.8AQMRkRU5C@cherry>
Message-ID: <b99eda2f-b638-e188-e678-f93bba147404@voskuil.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

On 03/27/2017 10:29 AM, Tom Zander via bitcoin-dev wrote:
> For some time now the relation between block size and propagation
> speed has been decoupled. Using xthin/compact blocks miners only
> send a tiny version of a block which then causes the receiving node
> to re-create it using the memory pool.  Immediately getting double
> benefits by including pre-verified transactions from the memory
> pool you avoid the old problem of having to validate them again
> when a block was mined.
> 
> As such there is no downside to a miner creating a bigger block, as
> long as all the transactions they include are actually in the
> mempool.

All transactions being publicly available is not something that can be
assumed.

With no opportunity cost for a miner to generate withheld
transactions, a larger miner still maintains the economic advantage of
latency as a function of block size. Fast relay works to reduce
latency in relation to the opportunity cost created by the space
constraint. IOW, the more fees a miner must give up to mine withheld
transactions, the greater the economic disadvantage of doing so. So
there is a "downside" (i.e. centralization pressure) up to the point
where the advantage gained from withholding transactions turns negative.

The rational competing miner must presume that a block is valid upon
confirming the announcement's PoW. He then has the choice of mining on
top of the (partially-visible) block, or ignoring it until it can be
fully populated. The former *eliminates fee opportunity*, since the
next block must remain free of all public fee-generating transactions
until all of the preceding block's transactions are visible. The
latter increases orphaning probability, since it implies mining on the
weak chain, which *increases total reward loss*.

One can conclude that no matter how much space is created, it will
always be filled by a rational miner, as a competitive necessity,
given the centralizing effect of latency. Making blocks big enough to
include low cost transactions nullifies the benefits of fast relay
techniques based on your above assumption, since a rational miner will
simply substitute withheld transactions.

e
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)

iQEcBAEBCAAGBQJY2W+bAAoJEDzYwH8LXOFOzkwH+wUulsdvUcfEHMspolfDjTD+
f4egP1FDoOFgXzaGJ+Bq1AjWP+CDYup9msYhp1NTk6xRnG4uGvaEA3DFYGbAzLut
INtkpCi38O1QGtDJaxmkJHXLoWJPS6VudcDEoam4W6qSKgHFB+ZRnIN4T7jnGMLI
rp/cGdom9wE/pcq/fvF/fonGfVWf/YP2YjBzJzaJy+zOYPTH2rNcnYBCHFPs4/KX
9Gu7tDw9WNxM5idnd0TiidublQhYui6xo7ZbZpmXQePcHQoQO5XqaO6yWwiWRWaU
mqXhalASOtP6xnPzj6FfAHYS7qA7JCaDfwT8UIzt9xv9XsPrhQ/r6Sfgfhvbm2k=
=b9sf
-----END PGP SIGNATURE-----

From eric at voskuil.org  Mon Mar 27 21:03:08 2017
From: eric at voskuil.org (Eric Voskuil)
Date: Mon, 27 Mar 2017 14:03:08 -0700
Subject: [bitcoin-dev] Segregated witness p2p layer compatibility
In-Reply-To: <CAFp6fsHhqdL=MNyAAyfwA7qw5-MhW19Whky+kY3n3=+u61bXBg@mail.gmail.com>
References: <CAFp6fsHhqdL=MNyAAyfwA7qw5-MhW19Whky+kY3n3=+u61bXBg@mail.gmail.com>
Message-ID: <cacb32cd-387b-2189-141f-3f5f60c38d49@voskuil.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

On 03/27/2017 12:22 PM, Suhas Daftuar via bitcoin-dev wrote:
> Eric Voskuil wrote:
> 
>> Given the protocol requirements of the segwit proposal this is 
>> not the case. A miner running pre-segwit code will produce
>> blocks that no segwit node will ever receive.
> 
> The phrase "protocol requirements of segwit" is confusing here, 
> because there are two different layers that need consideration:
> the consensus protocol layer and the peer-to-peer protocol layer.
> But in neither layer is the behavior of not downloading blocks
> from non-NODE WITNESS peers a "requirement".  This is an
> implementation detail in the Bitcoin Core code that alternate
> implementations compliant with BIP 144 could implement
> differently.

I agree, and thanks for the detailed clarification. Clearly it is
possible for segwit blocks to be relayed. It is the implementation of
Bitcoin Core (at least), in the absence of sufficient relay, that
produces this outcome.

> This is an implementation detail in the Bitcoin Core code that 
> alternate implementations compliant with BIP 144 could implement 
> differently.
> 
> At the consensus layer, non-segwit blocks (described above) that 
> are valid to older nodes are also valid to segwit nodes.  That 
> means that if a miner was using an older, pre-segwit version of 
> Bitcoin Core to produce blocks after segwit activates, that blocks 
> they find will be valid to all nodes.

IOW Bitcoin Core has been implemented so that it will not see valid
blocks announced by certain of its peers. Forcing it to see such
blocks requires the p2p network work around its implementation. I
agree that this is not inherent in the specifications for segwit, but
it reads more like a bug than an "implementation detail" to me.

e
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)

iQEcBAEBCAAGBQJY2X3/AAoJEDzYwH8LXOFOez8H+wcmUkQnzqMlmBTQ/OqMO6q4
enLOX3H4UDa6gZdUxEDpszUvuca2ayukVYwIVo28BcjsTmQgxaxdrFTNTDYTRfe1
S2aX3Ftism0zuEIw8/KM2wcnNaHe9C5Q8TRmW7u6ZoLTJFwCkKWK1VEM9GFDePpT
+HjtdviKt3s6NwiYhG+U+JawF+YDJvxyxcEj28bMFB1EW1kIAPA709oz2scZCPrc
VroEUoFXFgMXBJaosKSVTUN3JE9pU9R1Mn7xVWwMEdU1IjeOeygHjdE/NfP7BJuU
05dWsH0be/xyNO76oFGhmwIyDogloQ9a5klEe7NetTDs1ieMD5j5oyr/qB79spw=
=xkiV
-----END PGP SIGNATURE-----

From antoine at alc.io  Mon Mar 27 20:56:49 2017
From: antoine at alc.io (Antoine Le Calvez)
Date: Mon, 27 Mar 2017 21:56:49 +0100
Subject: [bitcoin-dev] Encouraging good miners
In-Reply-To: <uQBxE-Qbd-osime4uulMZZHdF_D7usA2EKsPjkTyXCHM0OakN2Wdoeriyrc73yWp5c5ULQNkIsRXAM64cCom7ecPvdwmatOyc9Kh1sTDpl4=@protonmail.com>
References: <uQBxE-Qbd-osime4uulMZZHdF_D7usA2EKsPjkTyXCHM0OakN2Wdoeriyrc73yWp5c5ULQNkIsRXAM64cCom7ecPvdwmatOyc9Kh1sTDpl4=@protonmail.com>
Message-ID: <3cf94d94-f5c9-602e-a8f5-1fe8686468b1@alc.io>

I don't think encouraging mining more transactions is a good idea since 
it would promote inefficient transaction patterns. It's more efficient 
to send transactions with a high number of outputs/inputs instead of 
creating long transaction chains as some services do.

You might consider incentivizing miners to mine blocks that reduce the 
UTXO set size the most, or some other metric that promotes efficient 
uses of the blockchain.

On 27/03/17 17:12, Btc Ideas via bitcoin-dev wrote:
> Add a preference for mined blocks to be the one with more 
> transactions. This comes into play when 2 blocks of the same height 
> are found. The first good block mined would be orphaned if it had less 
> transactions than another. Optionally, have this rule apply to the 
> current block and the previous one.
>
> This increases incentive for full blocks because a miner thinking the 
> faster propagation of a smaller block will win him the reward, but 
> that would no longer be a good assumption.
>
> I read some miners could attack a chain by mining small or empty 
> blocks. This makes that a little more difficult, but they can still 
> attack the chain many ways.
>
>
> Sent with ProtonMail <https://protonmail.com> Secure Email.
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170327/c52ebffe/attachment.html>

From hozer at hozed.org  Tue Mar 28 01:31:04 2017
From: hozer at hozed.org (Troy Benjegerdes)
Date: Tue, 28 Mar 2017 01:31:04 +0000
Subject: [bitcoin-dev] Requirement for pseudonymous BIP submissions
In-Reply-To: <CAGL6+mEceO2D2ueeVgv20r5p6tsofMLSTN1ExWfGysJHuM5XfA@mail.gmail.com>
References: <CADWuND34HbsF_e3Ob0bBPCzacsWrsfPjLzawwFd8KxcCoLDFSw@mail.gmail.com>
	<20170324021845.GC23538@hostname.unassigned>
	<CAGL6+mEceO2D2ueeVgv20r5p6tsofMLSTN1ExWfGysJHuM5XfA@mail.gmail.com>
Message-ID: <20170328013104.GE23538@hostname.unassigned>

On Mon, Mar 27, 2017 at 08:32:07AM -0500, Chris Stewart wrote:
> >I quite agree, and I would add that sometimes making yourself
> recognisable is far more important that merit.
> 
> The intent of my original proposal allows you to reveal yourself *after*
> the BIP has been accepted if you so choose. You do this by just revealing
> the preimage of the author hash. As others have pointed out, you can't
> *force* people to use this process -- but we can make it a defacto
> requirement by the BIP maintainer. Just like how you can't *force* people
> to format their BIPs in a certain way, but the BIP maintainer has the right
> to decline them if they aren't formatted that way.
> 
> > Today, BitFury's CEO threatened to sue developers if they didn't kowtow to
> > his demands to leave the PoW alone. This is unacceptable. Decisions have
> to
> > be made on merit and the interest of the project, and nothing else.
> 
> I think everyone on the list needs to see that paragraph again, and let the
> implications set in.

We are talking about money here. Decisions in this project are
not made based on 'merit', they are made based on ROI. If killing
the project is more profitable, many of the actors involved are
obligated to their shareholders to attempt to kill the project.

Or maybe in this case, they might be obligated to their investors
to attempt to try to run all the competing miners out of business
and acquire a majority stake in the hashpower.

If Merit were actually important, I would hope we would be
talking about a way to finance development in a way that provides
real financial incentives for merit, rather than what appear to
be some perverse incentives that seem to be rewarding short-term
traders, conflict, and further consolidation of mining and 
exchanges.

The other problem with merit is there are just about as many ideas
about what has merit as there are people judging the merit of the
project.

For instance, I think demurrage and increasing the money supply are
ideas with more merit, but those ideas are not profitable to existing
bitcoin investors, and thus are not seriously discussed.

From praxeology_guy at protonmail.com  Tue Mar 28 07:02:35 2017
From: praxeology_guy at protonmail.com (praxeology_guy)
Date: Tue, 28 Mar 2017 03:02:35 -0400
Subject: [bitcoin-dev] Inquiry: Transaction Tiering
In-Reply-To: <CAOyfL0pnkf4gOAJHgOSJgz2RLGupvQtcHewEijBHz9GWnr0rAw@mail.gmail.com>
References: <CAOyfL0r8dLR=7Co5+YzbPQUeTs6Lw+OQjZTy=iyoDmr6VV_Qpw@mail.gmail.com>
	<Rs51ijp6P21vJsv7OxVB-k8vuJC_aUd8KnpxHC3phNw_lPieY2lS-k95gytpHTNzzBfuX030RRFKzrrwS3pfjTuFea_eUfErb3qDp5LDHp4=@protonmail.com>
	<CAOyfL0qW=8091BAo9R2mskbyFSS3hOnXd+Wjsu4LQy7EtqzJjg@mail.gmail.com>
	<fFz3k0NstFYpKctCaSKDrhPnkInjW3GgQ-3FIyokzdl_SScKjXptQsn8jnW71ax_oknq9hI8gUBllYaKo_9hMiBASSJtkL6xXN_NX8tcmXw=@protonmail.com>
	<CAOyfL0pnkf4gOAJHgOSJgz2RLGupvQtcHewEijBHz9GWnr0rAw@mail.gmail.com>
Message-ID: <7CmgrdJ_lxx6nto8dmMO3P89LK0x9HtUjTMtNklCFKbdIjN6KDauYZqf3get3gufCcoMarQ1cnvqJcnfxQsO83fvixWCm1xL6BrHort8v3E=@protonmail.com>

Martin:

Re: Block Space Authority, or "authority": in general

An authority dictates policy.

Authority arises in 4 cases off the top of my head:
- Authority because entity threats violence/dominance
- Authority because entity's claim to property is respected to maintain friendship/benefits of specialization and trade. (one has authority over one's own property/business/contractually agreed claims)
- Authority because entity claims divine inspiration, and others accept such a claim
- Authority because entity gained respect and was voluntarily delegated

"Miners" do not fit in any of these categories. In fact "miners" do the exact opposite, their policy is dictated by market demand. They do us the service of creating block candidates. If a miner is a good businessman, he mines whatever currency gives him the most profit. The end users decide the policy and which currency is worth anything. Hence the users are the ones dictating to the miners how much work they should perform on each coin.

Miners compete against each other until there is only very slim profit. If they are devoting too much work to a coin they spend too much on energy/computers/network, and they have losses, so they reduce capacity on that coin. If mining a coin is extremely profitable, they expand their work until there is no profit.

So... miners don't really have any authority. Or if for some reason somebody does give them authority, its due to either the Divine (lol unlikely) or Respect reasons above... which is an unfounded/insecure reason.

Using miner signalling to determine when/whether SegWit is activated was a mistake in any extent that gave people the implication that miners have any authority. It was a poor way to schedule its activation. We assumed that the miners would activate it in a reasonable time because SegWit is undeniably good, so we just used this method to try to prevent a soft fork. Instead I recommend my proposed BitcoinUpdateBoard https://pastebin.com/ikBGPVfR. Or bitcoin core could include more entities such as specific miners and exchanges in their table located here: https://bitcoincore.org/en/segwit_adoption/.

We already have come to consensus that SegWit is good. So we should just schedule a date to activate it in the future where market participants have a reasonable time to prepare.

Cheers,
Praxeology Guy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170328/70d72b08/attachment.html>

From btcideas at protonmail.com  Mon Mar 27 16:29:26 2017
From: btcideas at protonmail.com (Btc Ideas)
Date: Mon, 27 Mar 2017 12:29:26 -0400
Subject: [bitcoin-dev] Encouraging good miners
In-Reply-To: <WM!1f99375705714ae4f8b1288ea47707c53f573e0597317337d41d22e28f801234a0d946b8ef05335cccb825f27bdd72da!@mailhub-mx2.ncl.ac.uk>
References: <uQBxE-Qbd-osime4uulMZZHdF_D7usA2EKsPjkTyXCHM0OakN2Wdoeriyrc73yWp5c5ULQNkIsRXAM64cCom7ecPvdwmatOyc9Kh1sTDpl4=@protonmail.com>,
	<WM!6b16e14ff3d44b0c6c0030538191fb22c33a979bb09131ef246ffc477e216212e64cfae815c6af871886f74be6b38d7f!@mailhub-mx4.ncl.ac.uk>
	<VI1PR0701MB2240F0890E5F19E53CF94B43B5330@VI1PR0701MB2240.eurprd07.prod.outlook.com>
	<WM!1f99375705714ae4f8b1288ea47707c53f573e0597317337d41d22e28f801234a0d946b8ef05335cccb825f27bdd72da!@mailhub-mx2.ncl.ac.uk>
Message-ID: <L7rnbWEDw_0Yb3C73DdjDZ8d7pNyxUQKuMH7azHvrD4luIDz-i2XzlqA4DDulq6WGdbfcP35FCZdo8-7MJO_hfvJzub4nIBWak8cjPqQcgM=@protonmail.com>

I know miners can do that, but it is not meant to primarily stop a malicious miner, but just to keep the blocks full. I think it is good to convince greedy miners not to mine empty blocks for a speed advantage.

Sent with [ProtonMail](https://protonmail.com) Secure Email.

-------- Original Message --------
Subject: Re: [bitcoin-dev] Encouraging good miners
Local Time: March 28, 2017 12:23 AM
UTC Time: March 27, 2017 4:23 PM
From: patrick.mccorry at newcastle.ac.uk
To: Btc Ideas <btcideas at protonmail.com>, Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>

Miner's can include transactions that send themselves bitcoins. Number of transactions is not a good measure of utility.

---------------------------------------------------------------

From: bitcoin-dev-bounces at lists.linuxfoundation.org <bitcoin-dev-bounces at lists.linuxfoundation.org> on behalf of Btc Ideas via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
Sent: 27 March 2017 17:12:19
To: bitcoin-dev at lists.linuxfoundation.org
Subject: [bitcoin-dev] Encouraging good miners

Add a preference for mined blocks to be the one with more transactions. This comes into play when 2 blocks of the same height are found. The first good block mined would be orphaned if it had less transactions than another. Optionally, have this rule apply to the current block and the previous one.

This increases incentive for full blocks because a miner thinking the faster propagation of a smaller block will win him the reward, but that would no longer be a good assumption.

I read some miners could attack a chain by mining small or empty blocks. This makes that a little more difficult, but they can still attack the chain many ways.

Sent with [ProtonMail](https://protonmail.com) Secure Email.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170327/d2be8cb9/attachment-0001.html>

From stian at plaimi.net  Mon Mar 27 17:50:12 2017
From: stian at plaimi.net (Stian Ellingsen)
Date: Mon, 27 Mar 2017 19:50:12 +0200
Subject: [bitcoin-dev] Encouraging good miners
In-Reply-To: <uQBxE-Qbd-osime4uulMZZHdF_D7usA2EKsPjkTyXCHM0OakN2Wdoeriyrc73yWp5c5ULQNkIsRXAM64cCom7ecPvdwmatOyc9Kh1sTDpl4=@protonmail.com>
References: <uQBxE-Qbd-osime4uulMZZHdF_D7usA2EKsPjkTyXCHM0OakN2Wdoeriyrc73yWp5c5ULQNkIsRXAM64cCom7ecPvdwmatOyc9Kh1sTDpl4=@protonmail.com>
Message-ID: <c0d518f4-ffb5-704b-02ee-d9587415571c@plaimi.net>

On 27/03/17 18:12, Btc Ideas via bitcoin-dev wrote:

> Add a preference for mined blocks to be the one with more
> transactions. This comes into play when 2 blocks of the same height
> are found. The first good block mined would be orphaned if it had
> less transactions than another. Optionally, have this rule apply to
> the current block and the previous one.

This would encourage miners to make their own tiny junk transactions
to fill up their blocks, perhaps leaving larger, more space-efficient
transactions in the mempool.

> This increases incentive for full blocks because a miner thinking
> the faster propagation of a smaller block will win him the reward,
> but that would no longer be a good assumption.

> I read some miners could attack a chain by mining small or empty
> blocks. This makes that a little more difficult, but they can still
> attack the chain many ways.

"Good" miners should probably build upon the block with a set of
transactions more similar to what they themselves would include based
on their mempool at the time.  However, miners don't have an incentive
to do so today.  Instead, they may be better off building upon the
block that leaves the most valuable transactions in the mempool,
e.g. a small or empty block, and maybe leave some valuable
transactions in the mempool for the next miner.[1]  This issue could
possibly be addressed by a soft-fork that requires miners to pay a
portion of their fees to future miners.

[1]
https://freedom-to-tinker.com/2016/10/21/bitcoin-is-unstable-without-the-block-reward/

-- 
Stian



From martin at stolze.cc  Mon Mar 27 21:11:38 2017
From: martin at stolze.cc (Martin Stolze)
Date: Mon, 27 Mar 2017 22:11:38 +0100
Subject: [bitcoin-dev] Inquiry: Transaction Tiering
In-Reply-To: <fFz3k0NstFYpKctCaSKDrhPnkInjW3GgQ-3FIyokzdl_SScKjXptQsn8jnW71ax_oknq9hI8gUBllYaKo_9hMiBASSJtkL6xXN_NX8tcmXw=@protonmail.com>
References: <CAOyfL0r8dLR=7Co5+YzbPQUeTs6Lw+OQjZTy=iyoDmr6VV_Qpw@mail.gmail.com>
	<Rs51ijp6P21vJsv7OxVB-k8vuJC_aUd8KnpxHC3phNw_lPieY2lS-k95gytpHTNzzBfuX030RRFKzrrwS3pfjTuFea_eUfErb3qDp5LDHp4=@protonmail.com>
	<CAOyfL0qW=8091BAo9R2mskbyFSS3hOnXd+Wjsu4LQy7EtqzJjg@mail.gmail.com>
	<fFz3k0NstFYpKctCaSKDrhPnkInjW3GgQ-3FIyokzdl_SScKjXptQsn8jnW71ax_oknq9hI8gUBllYaKo_9hMiBASSJtkL6xXN_NX8tcmXw=@protonmail.com>
Message-ID: <CAOyfL0pnkf4gOAJHgOSJgz2RLGupvQtcHewEijBHz9GWnr0rAw@mail.gmail.com>

> [...] we don't need to implement any kind of special bloated transaction that is only mine-able by some explicit set of miners...  No fork or compatibility problems are necessary, can be completely implemented as an added feature.

Yes, absolutely. It would still be helpful if it is somewhat
standardized on the Client level.

> Re: "Miners": I don't really like calling them "transaction processors" because in bitcoin, every synchronizing node that verifies signatures is a transaction processor.

I agree and I really appreciate the explanation! Transaction Processor
is not optimal, I brought up BSA: Block Space Authority before to
slice the pie in terms of it legitimate power structure instead of its
functionality. I maintain that this is better for higher level
discourse. Maybe something like "Consensus Space Sovereign" would be
more suitable.

> What sets them apart from full relay nodes is they create "blocks", which are "ledger change candidates" that included transactions and proof-of-work (PoW: deterministic diffusion puzzle solutions).

Functionally, a node can moderate the network in the following way:
1. Relay transactions (mempool) and the global memory (blockchain)
2. Construct block headers (PoW: deterministic diffusion puzzle
solutions) and write to the global memory (create "blocks", which are
"ledger change candidates")
3. Read, verify and accept changes to the global memory

> Given the above definition of a "block", I would be happy calling them "Block Producers"... which does not imply that they do all of the necessary "transaction processing": that all users should be fine with running Electrum wallets or even SPV clients.  They produce blocks, but its still up to other users in the network to do "transaction processing": decide for themselves if they want to accept particular blocks.

"Block Generator" (ala Satoshi) may be better but let's look at the
power structure analog to the functionality:
1. Authority to propose a change
2. Authority to approve a change
3. Authority to reject a change

This can easily be understood in current political terms. In Spain a:
1. Citizen can propose to engage in a business (voice)
2. (Special) Citizen (the King) can disapprove of the business (sovereign)
3. Citizen can leave Spain (exit)

Likewise, citizens can engage with the sovereign in order to change
some regulation, say average transaction tax. The question is simply
what legitimate authority a node has. We can map that quite neatly
onto the terminology of 'Politics'.

That does also away with naive 51% attack scenarios and the like. They
are akin to aliens invading earth. Surely it is not impossible that
aliens invade and in Bitcoin land, it is currently conceivable, but
most conflicts are not brought about by a single devilish aggressor
but a special interest group that wants to concentrate benefits and
diffuse costs.
- Transaction Tiering could be a great basis for decentralized negotiations.

Regards
Martin


On Sat, Mar 25, 2017 at 10:30 PM, praxeology_guy
<praxeology_guy at protonmail.com> wrote:
> Martin:
>
> Re: Miners not relaying unconfirmed txs...  I was saying that this was a
> good thing from your perspective in wanting to give users the choice on
> which miners would get to confirm the tx.  So then like we don't need to
> implement any kind of special bloated transaction that is only mine-able by
> some explicit set of miners...  No fork or compatibility problems are
> necessary, can be completely implemented as an added feature.
>
> Re: "Miners": I don't really like calling them "transaction processors"
> because in bitcoin, every synchronizing node that verifies signatures is a
> transaction processor.  What sets them apart from full relay nodes is they
> create "blocks", which are "ledger change candidates" that included
> transactions and proof-of-work (PoW: deterministic diffusion puzzle
> solutions).  They help create confidence that transactions in blocks will
> never by double spent by requiring that double spending would need lots of
> economic resources for someone else to re-perform the PoW.
>
> Given the above definition of a "block", I would be happy calling them
> "Block Producers"... which does not imply that they do all of the necessary
> "transaction processing": that all users should be fine with running
> Electrum wallets or even SPV clients.  They produce blocks, but its still up
> to other users in the network to do "transaction processing": decide for
> themselves if they want to accept particular blocks.
>
> Cheers,
> Praxeology Guy
>
> -------- Original Message --------
> Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering
> Local Time: March 25, 2017 12:15 PM
> UTC Time: March 25, 2017 5:15 PM
> From: martin at stolze.cc
> To: praxeology_guy <praxeology_guy at protonmail.com>
> bitcoin-dev at lists.linuxfoundation.org
>
> Thanks, those are valid concerns.
>
>> Potentially miners could create their own private communication
>> channel/listening port for submitting transactions that they would not relay
>> to other miners/the public node relay network.
> That is the idea. Transaction Processors could source transactions
> from the public mempool as well their proprietary mempool(s).
>
>> Miners would be incentivized to not relay higher fee transactions, because
>> they would want to keep them to themselves for higher profits.
> Not so, a user may want to incentivise a specific Transaction
> Processor or many. A user can detect this behavior and withdraw his
> future business if he notices that his transaction is not included in
> a block despite there being transactions with lower fees included.
> Remember, the transaction can be advertised to different mempools and
> a Transaction Processor could lose this business to a competitor who
> processes the next block if he holds it back.
>
> Best Regards
> Martin
>
> PS: It seems not too late to get rid of misleading terms like "miner".
> Block rewards (infrastructure subsidies) will be neglectable for
> future generations and the analogy is exceedingly poor.
>
> On Sat, Mar 25, 2017 at 4:42 AM, praxeology_guy
> <praxeology_guy at protonmail.com> wrote:
>> Potentially miners could create their own private communication
>> channel/listening port for submitting transactions that they would not
>> relay
>> to other miners/the public node relay network. Users could then chose who
>> they want to relay to. Miners would be incentivized to not relay higher
>> fee
>> transactions, because they would want to keep them to themselves for
>> higher
>> profits.
>>
>> Cheers,
>> Praxeology Guy
>>
>>
>> -------- Original Message --------
>> Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering
>> Local Time: March 22, 2017 12:48 PM
>> UTC Time: March 22, 2017 5:48 PM
>> From: bitcoin-dev at lists.linuxfoundation.org
>> To: bitcoin-dev at lists.linuxfoundation.org
>>
>> Hi Tim,
>> After writing this I figured that it was probably not evident at first
>> sight as the concept may be quite novel. The physical location of the
>> "miner" is indeed irrelevant, I am referring to the digital location.
>> Bitcoins blockchain is a digital location or better digital "space".
>> As far as I am concerned the authority lies with whoever governs this
>> particular block space. A "miner" can, or can not, include my
>> transaction.
>>
>> To make this more understandable:
>>
>> Abu Bakr al-Baghdadi can extend his caliphate into Bitcoins block
>> space and rule sovereign(!) over a given block. If he processes my
>> transaction my fee goes directly into the coffers of his organization.
>> The same goes for the Queen of England or the Emperor of China. My
>> interest is not necessarily aligned with each specific authority, yet
>> as you point out, I can only not use Bitcoin.
>> Alternatively, however, I can very well sign my transaction and send
>> it to an authority of my choosing to be included into the ledger, say
>> BitFurry. - This is what I describe in option 1.
>>
>> In order to protect my interest I do need to choose, maybe not today,
>> but eventually.
>>
>> I also think that people do care who processes transactions and a lot
>> of bickering could be spared if we could choose.
>>
>> If we assume a perfectly competitive market with 3 authorities that
>> govern the block space equally, the marginal cost of 1/3 of the block
>> space is the same for each, however, the marginal revenue absent of
>> block rewards is dependent on fees.
>> If people are willing to pay only a zero fee to a specific authority
>> while a fee greater than zero to the others it's clear that one would
>> be less competitive.
>>
>> Let us assume the fees are 10% of the revenue and the cost is 95 we
>> have currently the following situation:
>>
>> A: Cost=95; Revenue=100; Profit=5
>> B: Cost=95; Revenue=100; Profit=5
>> C: Cost=95; Revenue=100; Profit=5
>>
>> With transaction tiering, the outcome could be different!
>>
>> A: Cost=95; Revenue=90; Loss=5 // BSA that does not respect user interest.
>> B: Cost=95; Revenue=105; Profit=10
>> C: Cost=95; Revenue=105; Profit=10
>>
>> This could motivate transaction processors to behave in accordance
>> with user interest, or am I missing something?
>>
>> Best Regards,
>> Martin
>>
>>> From: Tim Ruffing <tim.ruffing at mmci.uni-saarland.de>
>>> To: bitcoin-dev at lists.linuxfoundation.org
>>> Cc:
>>> Bcc:
>>> Date: Tue, 21 Mar 2017 16:18:26 +0100
>>> Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering
>>> (I'm not a lawyer...)
>>>
>>> I'm not sure if I can make sense of your email.
>>>
>>> On Mon, 2017-03-20 at 20:12 +0000, Martin Stolze via bitcoin-dev wrote:
>>>> As a participant in the economy in general and of Bitcoin in
>>>> particular, I desire an ability to decide where I transact. The
>>>> current state of Bitcoin does not allow me to choose my place of
>>>> business. As a consequence, I try to learn what would be the best way
>>>> to conduct my business in good faith. [2]
>>>
>>> Ignoring the rest, I don't think that the physical location /
>>> jurisdiction of the miner has any legal implications for law applicable
>>> to the relationship between sender and receiver of a payment.
>>>
>>> This is not particular to Bitcoin. We're both in Germany (I guess).
>>> Assume we have a contract without specific agreements and I pay you in
>>> Icelandic kronur via PayPal (in Luxembourg) and my HTTPS requests to
>>> PayPal went via Australia and the US. Then German law applies to our
>>> contract, nothing in the middle can change that.
>>>
>>> Also ignoring possible security implications, there is just no need for
>>> a mechanism that enables users to select miners. I claim that almost
>>> nobody cares who will mine a transaction, because it makes no technical
>>> difference. If you don't want a specific miner to mine your
>>> transaction, then don't use Bitcoin.
>>>
>>> Tim
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>
>

From martin at stolze.cc  Tue Mar 28 12:58:31 2017
From: martin at stolze.cc (Martin Stolze)
Date: Tue, 28 Mar 2017 13:58:31 +0100
Subject: [bitcoin-dev] Inquiry: Transaction Tiering
Message-ID: <CAOyfL0pN8Z8XSvHAXkG2=ic=J6m-8B5K2d=_eL=84Dnox3ovMQ@mail.gmail.com>

Hi AJ,
That's outstanding. I am glad to see that there is actually somebody
who has made some progress.

> "miners as service providers."
Great idea! Block space as a resource is under-analyzed.

> miner/pool's political positions, their consensus ideology, physical location (yes some people would like only miners in particular countries to mine their transactions)

I am not joking when I say that in 3 to 8 years, I want to be able to
verify my transaction through green blocks that are generated locally
by my neighbor through the excess capacity of his solar panels or by
an NGO pool that promotes solar deployment around the equator.

> The main attitude right now is that people would like to 'support' miners who signal for the features they care about.

Yes, just selecting all SegWit signaling hash power instead of picking
individual Authorities would be helpful on preferredminer.com

> I strongly believe, whether the Bitcoin developer community facilitates it or not, certain miners will become preferred by users.

Absolutely, considering the recent language used in opinions by the
ECB and drafts by the EU I see them assembling the artillery. I
wouldn't be surprised if they start target practice next year. That
will mean that commercial interest must have a way to transact on
somewhat regulated space.

> 1) By creating 'segregated mempools' where an authenticated third-party like my web service Preferred Miner manages the access to pending transactions destined for a specific set of miners

I would call it regulated block space or regulated consensus space. I
hope that we can do that on a deeper level, as part of the p2p
protocol layer.

> 2) by creating transactions where the mining fee is in one way or another, an output to an address owned by the preferred miner(s).

That's a distinct function, e.g. at least some communities charge a tax. [1]
I fear it is more likely that a business, say Coinbase, will approach
a "miner" and just say "we pay 100 USD for a KB to your bank account,
here are our transactions with no fee". It will literally be an
off-chain fee. That's what I mean by "secondary market". This would be
one of the least appealing scenarios.

> There are some terrible pitfalls with both of these methods. [...]

Spot on, that's why this should receive some attention before it
becomes urgent. I think there is much more to it that we are missing
at the moment, e.g. Tom: "Using xthin/compact blocks miners only send
a tiny version of a block which then causes the receiving node to
re-create it using the memory pool."


[1] http://thebitcoin.foundation/declaration.txt



> From: AJ West <ajwest at gmail.com>
> To: bitcoin-dev at lists.linuxfoundation.org
> Cc:
> Bcc:
> Date: Mon, 27 Mar 2017 12:29:20 -0400
> Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering
> Hi I'm AJ West, I made a service http://preferredminer.com which is a proof-of-concept project designed to spur discussion on exactly this issue of "miners as service providers."
>
> The current status is that Bitcoin end users are looking to support specific miners, whether that's because they agree with a miner/pool's political positions, their consensus ideology, physical location (yes some people would like only miners in particular countries to mine their transactions) and the list of reasons goes on. The main attitude right now is that people would like to 'support' miners who signal for the features they care about.
>
> I strongly believe, whether the Bitcoin developer community facilitates it or not, certain miners will become preferred by users. In summary, there are realistically two proposed ways of providing this service in the present-day situation: 1) By creating 'segregated mempools' where an authenticated third-party like my web service Preferred Miner manages the access to pending transactions destined for a specific set of miners, and 2) by creating transactions where the mining fee is in one way or another, an output to an address owned by the preferred miner(s).
>
> There are some terrible pitfalls with both of these methods. The first being that you have to trust a lot of people, including the 3rd party (me) and the pools to work in your users' interest ("don't give my transactions to other miners or broadcast to mempool please"). Then there are the extra fees users will have to pay to offset the risk of a miner losing out for having to send the network a not-yet-broadcasted transaction. And finally, the other method requires that they be larger transactions, and a directory of mining pools' receiving addresses for outputs must be maintained. Then you have to hope the miner will be setup to scoop in your transaction knowing it's got a fee for them. Plus, how many nodes going forward are going to hold what seem to be 0-fee transactions in mempool (because the fee is in the outputs)?
>

From 1240902 at gmail.com  Tue Mar 28 16:59:32 2017
From: 1240902 at gmail.com (Wang Chun)
Date: Wed, 29 Mar 2017 00:59:32 +0800
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
Message-ID: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>

I've proposed this hard fork approach last year in Hong Kong Consensus
but immediately rejected by coredevs at that meeting, after more than
one year it seems that lots of people haven't heard of it. So I would
post this here again for comment.

The basic idea is, as many of us agree, hard fork is risky and should
be well prepared. We need a long time to deploy it.

Despite spam tx on the network, the block capacity is approaching its
limit, and we must think ahead. Shall we code a patch right now, to
remove the block size limit of 1MB, but not activate it until far in
the future. I would propose to remove the 1MB limit at the next block
halving in spring 2020, only limit the block size to 32MiB which is
the maximum size the current p2p protocol allows. This patch must be
in the immediate next release of Bitcoin Core.

With this patch in core's next release, Bitcoin works just as before,
no fork will ever occur, until spring 2020. But everyone knows there
will be a fork scheduled. Third party services, libraries, wallets and
exchanges will have enough time to prepare for it over the next three
years.

We don't yet have an agreement on how to increase the block size
limit. There have been many proposals over the past years, like
BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
on. These hard fork proposals, with this patch already in Core's
release, they all become soft fork. We'll have enough time to discuss
all these proposals and decide which one to go. Take an example, if we
choose to fork to only 2MB, since 32MiB already scheduled, reduce it
from 32MiB to 2MB will be a soft fork.

Anyway, we must code something right now, before it becomes too late.

From lf-lists at mattcorallo.com  Tue Mar 28 17:13:09 2017
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Tue, 28 Mar 2017 17:13:09 +0000
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
Message-ID: <6d7e8bb9-ef08-70bb-1609-66b063e500f1@mattcorallo.com>

Not sure what "last week's meeting" is in reference to?

Agreed that the hard fork should be well-prepared, but I think its
dangerous to think that a hard fork as agreed upon would be a simple
relaxation of the block size. For example, Johnson Lau's previous
proposal, Spoonnet, which I think is probably one of the better ones,
would be incompatible with these rules.

I, of course, worry about what happens if we cannot come to consensus on
a number to soft fork down to, potentially significantly risking miner
profits (and, thus, the security of Bitcoin) if a group is able to keep
things "at the status quo". That said, for that to be alleviated we
could simply do something based on historical transaction growth (which
is somewhat linear, with a few inflection points), but that number ends
up being super low (eg somewhere around 2MB at the next halving, which
SegWit itself already provides :/.

We could, of course, focus on designing a hard fork's activation and
technical details, with a very large block size increase in it (ie
closer to 4/6MB at the next halving or so, something we at least could
be confident we could develop software for), with intention to soft fork
it back down if miner profits are suffering.

Matt

On 03/28/17 16:59, Wang Chun via bitcoin-dev wrote:
> I've proposed this hard fork approach last year in Hong Kong Consensus
> but immediately rejected by coredevs at that meeting, after more than
> one year it seems that lots of people haven't heard of it. So I would
> post this here again for comment.
> 
> The basic idea is, as many of us agree, hard fork is risky and should
> be well prepared. We need a long time to deploy it.
> 
> Despite spam tx on the network, the block capacity is approaching its
> limit, and we must think ahead. Shall we code a patch right now, to
> remove the block size limit of 1MB, but not activate it until far in
> the future. I would propose to remove the 1MB limit at the next block
> halving in spring 2020, only limit the block size to 32MiB which is
> the maximum size the current p2p protocol allows. This patch must be
> in the immediate next release of Bitcoin Core.
> 
> With this patch in core's next release, Bitcoin works just as before,
> no fork will ever occur, until spring 2020. But everyone knows there
> will be a fork scheduled. Third party services, libraries, wallets and
> exchanges will have enough time to prepare for it over the next three
> years.
> 
> We don't yet have an agreement on how to increase the block size
> limit. There have been many proposals over the past years, like
> BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
> on. These hard fork proposals, with this patch already in Core's
> release, they all become soft fork. We'll have enough time to discuss
> all these proposals and decide which one to go. Take an example, if we
> choose to fork to only 2MB, since 32MiB already scheduled, reduce it
> from 32MiB to 2MB will be a soft fork.
> 
> Anyway, we must code something right now, before it becomes too late.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

From alp.bitcoin at gmail.com  Tue Mar 28 17:23:31 2017
From: alp.bitcoin at gmail.com (Alphonse Pace)
Date: Tue, 28 Mar 2017 12:23:31 -0500
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
Message-ID: <CAMBsKS8oSKS5g8UEyCu18bjzGJWpA+sJEaxBUV9FXAmXhX1ApA@mail.gmail.com>

What meeting are you referring to?  Who were the participants?

Removing the limit but relying on the p2p protocol is not really a true
32MiB limit, but a limit of whatever transport methods provide.  This can
lead to differing consensus if alternative layers for relaying are used.
What you seem to be asking for is an unbound block size (or at least
determined by whatever miners produce).  This has the possibility (and even
likelihood) of removing many participants from the network, including many
small miners.

32MB in less than 3 years also appears to be far beyond limits of safety
which are known to exist far sooner, and we cannot expect hardware and
networking layers to improve by those amounts in that time.

It also seems like it would be much better to wait until SegWit activates
in order to truly measure the effects on the network from this increased
capacity before committing to any additional increases.

-Alphonse



On Tue, Mar 28, 2017 at 11:59 AM, Wang Chun via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> I've proposed this hard fork approach last year in Hong Kong Consensus
> but immediately rejected by coredevs at that meeting, after more than
> one year it seems that lots of people haven't heard of it. So I would
> post this here again for comment.
>
> The basic idea is, as many of us agree, hard fork is risky and should
> be well prepared. We need a long time to deploy it.
>
> Despite spam tx on the network, the block capacity is approaching its
> limit, and we must think ahead. Shall we code a patch right now, to
> remove the block size limit of 1MB, but not activate it until far in
> the future. I would propose to remove the 1MB limit at the next block
> halving in spring 2020, only limit the block size to 32MiB which is
> the maximum size the current p2p protocol allows. This patch must be
> in the immediate next release of Bitcoin Core.
>
> With this patch in core's next release, Bitcoin works just as before,
> no fork will ever occur, until spring 2020. But everyone knows there
> will be a fork scheduled. Third party services, libraries, wallets and
> exchanges will have enough time to prepare for it over the next three
> years.
>
> We don't yet have an agreement on how to increase the block size
> limit. There have been many proposals over the past years, like
> BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
> on. These hard fork proposals, with this patch already in Core's
> release, they all become soft fork. We'll have enough time to discuss
> all these proposals and decide which one to go. Take an example, if we
> choose to fork to only 2MB, since 32MiB already scheduled, reduce it
> from 32MiB to 2MB will be a soft fork.
>
> Anyway, we must code something right now, before it becomes too late.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170328/ce012e4a/attachment.html>

From 1240902 at gmail.com  Tue Mar 28 17:31:36 2017
From: 1240902 at gmail.com (Wang Chun)
Date: Wed, 29 Mar 2017 01:31:36 +0800
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAMBsKS8oSKS5g8UEyCu18bjzGJWpA+sJEaxBUV9FXAmXhX1ApA@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAMBsKS8oSKS5g8UEyCu18bjzGJWpA+sJEaxBUV9FXAmXhX1ApA@mail.gmail.com>
Message-ID: <CAFzgq-xnXw6efaEurLcgMQQwwr7YitrJ3vZ8i+Ha0MbnVzUKhg@mail.gmail.com>

The basic idea is, let's stop the debate for whether we should upgrade
to 2MB, 8MB or 32MiB. 32MiB is well above any proposals' upper limit,
so any final decision would be a soft fork to this already deployed
release. If by 2020, we still agree 1MB is enough, it can be changed
back to 1MB limit and it would also a soft fork on top of that.

On Wed, Mar 29, 2017 at 1:23 AM, Alphonse Pace <alp.bitcoin at gmail.com> wrote:
> What meeting are you referring to?  Who were the participants?
>
> Removing the limit but relying on the p2p protocol is not really a true
> 32MiB limit, but a limit of whatever transport methods provide.  This can
> lead to differing consensus if alternative layers for relaying are used.
> What you seem to be asking for is an unbound block size (or at least
> determined by whatever miners produce).  This has the possibility (and even
> likelihood) of removing many participants from the network, including many
> small miners.
>
> 32MB in less than 3 years also appears to be far beyond limits of safety
> which are known to exist far sooner, and we cannot expect hardware and
> networking layers to improve by those amounts in that time.
>
> It also seems like it would be much better to wait until SegWit activates in
> order to truly measure the effects on the network from this increased
> capacity before committing to any additional increases.
>
> -Alphonse
>
>
>
> On Tue, Mar 28, 2017 at 11:59 AM, Wang Chun via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>> I've proposed this hard fork approach last year in Hong Kong Consensus
>> but immediately rejected by coredevs at that meeting, after more than
>> one year it seems that lots of people haven't heard of it. So I would
>> post this here again for comment.
>>
>> The basic idea is, as many of us agree, hard fork is risky and should
>> be well prepared. We need a long time to deploy it.
>>
>> Despite spam tx on the network, the block capacity is approaching its
>> limit, and we must think ahead. Shall we code a patch right now, to
>> remove the block size limit of 1MB, but not activate it until far in
>> the future. I would propose to remove the 1MB limit at the next block
>> halving in spring 2020, only limit the block size to 32MiB which is
>> the maximum size the current p2p protocol allows. This patch must be
>> in the immediate next release of Bitcoin Core.
>>
>> With this patch in core's next release, Bitcoin works just as before,
>> no fork will ever occur, until spring 2020. But everyone knows there
>> will be a fork scheduled. Third party services, libraries, wallets and
>> exchanges will have enough time to prepare for it over the next three
>> years.
>>
>> We don't yet have an agreement on how to increase the block size
>> limit. There have been many proposals over the past years, like
>> BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
>> on. These hard fork proposals, with this patch already in Core's
>> release, they all become soft fork. We'll have enough time to discuss
>> all these proposals and decide which one to go. Take an example, if we
>> choose to fork to only 2MB, since 32MiB already scheduled, reduce it
>> from 32MiB to 2MB will be a soft fork.
>>
>> Anyway, we must code something right now, before it becomes too late.
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>

From jlrubin at mit.edu  Tue Mar 28 17:33:31 2017
From: jlrubin at mit.edu (Jeremy)
Date: Tue, 28 Mar 2017 13:33:31 -0400
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFzgq-xnXw6efaEurLcgMQQwwr7YitrJ3vZ8i+Ha0MbnVzUKhg@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAMBsKS8oSKS5g8UEyCu18bjzGJWpA+sJEaxBUV9FXAmXhX1ApA@mail.gmail.com>
	<CAFzgq-xnXw6efaEurLcgMQQwwr7YitrJ3vZ8i+Ha0MbnVzUKhg@mail.gmail.com>
Message-ID: <CAD5xwhgU9orUAsY00PbGPH7-SuoGYF3bCigBwm1BOoDtPn26cQ@mail.gmail.com>

I think it's probably safer to have a fork-to-minumum (e.g. minimal
coinbase+header) after a certain date than to fork up at a certain date. At
least in that case, the default isn't breaking consensus, but you still get
the same pressure to fork to a permanent solution.

I don't endorse the above proposal, but remarked for the sake of guiding
the argument you are making.


--
@JeremyRubin <https://twitter.com/JeremyRubin>
<https://twitter.com/JeremyRubin>

On Tue, Mar 28, 2017 at 1:31 PM, Wang Chun via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> The basic idea is, let's stop the debate for whether we should upgrade
> to 2MB, 8MB or 32MiB. 32MiB is well above any proposals' upper limit,
> so any final decision would be a soft fork to this already deployed
> release. If by 2020, we still agree 1MB is enough, it can be changed
> back to 1MB limit and it would also a soft fork on top of that.
>
> On Wed, Mar 29, 2017 at 1:23 AM, Alphonse Pace <alp.bitcoin at gmail.com>
> wrote:
> > What meeting are you referring to?  Who were the participants?
> >
> > Removing the limit but relying on the p2p protocol is not really a true
> > 32MiB limit, but a limit of whatever transport methods provide.  This can
> > lead to differing consensus if alternative layers for relaying are used.
> > What you seem to be asking for is an unbound block size (or at least
> > determined by whatever miners produce).  This has the possibility (and
> even
> > likelihood) of removing many participants from the network, including
> many
> > small miners.
> >
> > 32MB in less than 3 years also appears to be far beyond limits of safety
> > which are known to exist far sooner, and we cannot expect hardware and
> > networking layers to improve by those amounts in that time.
> >
> > It also seems like it would be much better to wait until SegWit
> activates in
> > order to truly measure the effects on the network from this increased
> > capacity before committing to any additional increases.
> >
> > -Alphonse
> >
> >
> >
> > On Tue, Mar 28, 2017 at 11:59 AM, Wang Chun via bitcoin-dev
> > <bitcoin-dev at lists.linuxfoundation.org> wrote:
> >>
> >> I've proposed this hard fork approach last year in Hong Kong Consensus
> >> but immediately rejected by coredevs at that meeting, after more than
> >> one year it seems that lots of people haven't heard of it. So I would
> >> post this here again for comment.
> >>
> >> The basic idea is, as many of us agree, hard fork is risky and should
> >> be well prepared. We need a long time to deploy it.
> >>
> >> Despite spam tx on the network, the block capacity is approaching its
> >> limit, and we must think ahead. Shall we code a patch right now, to
> >> remove the block size limit of 1MB, but not activate it until far in
> >> the future. I would propose to remove the 1MB limit at the next block
> >> halving in spring 2020, only limit the block size to 32MiB which is
> >> the maximum size the current p2p protocol allows. This patch must be
> >> in the immediate next release of Bitcoin Core.
> >>
> >> With this patch in core's next release, Bitcoin works just as before,
> >> no fork will ever occur, until spring 2020. But everyone knows there
> >> will be a fork scheduled. Third party services, libraries, wallets and
> >> exchanges will have enough time to prepare for it over the next three
> >> years.
> >>
> >> We don't yet have an agreement on how to increase the block size
> >> limit. There have been many proposals over the past years, like
> >> BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
> >> on. These hard fork proposals, with this patch already in Core's
> >> release, they all become soft fork. We'll have enough time to discuss
> >> all these proposals and decide which one to go. Take an example, if we
> >> choose to fork to only 2MB, since 32MiB already scheduled, reduce it
> >> from 32MiB to 2MB will be a soft fork.
> >>
> >> Anyway, we must code something right now, before it becomes too late.
> >> _______________________________________________
> >> bitcoin-dev mailing list
> >> bitcoin-dev at lists.linuxfoundation.org
> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
> >
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170328/5fb3c287/attachment.html>

From jl2012 at xbt.hk  Tue Mar 28 17:34:23 2017
From: jl2012 at xbt.hk (Johnson Lau)
Date: Wed, 29 Mar 2017 01:34:23 +0800
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
Message-ID: <B93DE8AA-AA01-4E0E-88B6-B788B03282E0@xbt.hk>

You are probably not the first one nor last one with such idea. Actually, Luke wrote up a BIP with similar idea in mind:

https://github.com/luke-jr/bips/blob/bip-hfprep/bip-hfprep.mediawiki <https://github.com/luke-jr/bips/blob/bip-hfprep/bip-hfprep.mediawiki>

Instead of just lifting the block size limit, he also suggested to remove many other rules. I think he has given up this idea because it?s just too complicated.

If we really want to prepare for a hardfork, we probably want to do more than simply increasing the size limit. For example, my spoonnet proposal:

https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-February/013542.html <https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-February/013542.html>

In a HF, we may want to relocate the witness commitment to a better place. We may also want to fix Satoshi's sighash bug. These are much more than simple size increase.

So if we really want to get prepared for a potential HF with unknown parameters, I?d suggest to set a time bomb in the client, which will stop processing of transactions with big warning in GUI. The user may still have an option to continue with old rules at their own risks.

Or, instead of increasing the block size, we make a softfork to decrease the block size to 1kB and block reward to 0, activating far in the future. This is similar to the difficulty bomb in ETH, which will freeze the network.

> On 29 Mar 2017, at 00:59, Wang Chun via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> I've proposed this hard fork approach last year in Hong Kong Consensus
> but immediately rejected by coredevs at that meeting, after more than
> one year it seems that lots of people haven't heard of it. So I would
> post this here again for comment.
> 
> The basic idea is, as many of us agree, hard fork is risky and should
> be well prepared. We need a long time to deploy it.
> 
> Despite spam tx on the network, the block capacity is approaching its
> limit, and we must think ahead. Shall we code a patch right now, to
> remove the block size limit of 1MB, but not activate it until far in
> the future. I would propose to remove the 1MB limit at the next block
> halving in spring 2020, only limit the block size to 32MiB which is
> the maximum size the current p2p protocol allows. This patch must be
> in the immediate next release of Bitcoin Core.
> 
> With this patch in core's next release, Bitcoin works just as before,
> no fork will ever occur, until spring 2020. But everyone knows there
> will be a fork scheduled. Third party services, libraries, wallets and
> exchanges will have enough time to prepare for it over the next three
> years.
> 
> We don't yet have an agreement on how to increase the block size
> limit. There have been many proposals over the past years, like
> BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
> on. These hard fork proposals, with this patch already in Core's
> release, they all become soft fork. We'll have enough time to discuss
> all these proposals and decide which one to go. Take an example, if we
> choose to fork to only 2MB, since 32MiB already scheduled, reduce it
> from 32MiB to 2MB will be a soft fork.
> 
> Anyway, we must code something right now, before it becomes too late.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/f4f40e72/attachment.html>

From luke at dashjr.org  Tue Mar 28 17:46:20 2017
From: luke at dashjr.org (Luke Dashjr)
Date: Tue, 28 Mar 2017 17:46:20 +0000
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <B93DE8AA-AA01-4E0E-88B6-B788B03282E0@xbt.hk>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<B93DE8AA-AA01-4E0E-88B6-B788B03282E0@xbt.hk>
Message-ID: <201703281746.20709.luke@dashjr.org>

On Tuesday, March 28, 2017 5:34:23 PM Johnson Lau via bitcoin-dev wrote:
> You are probably not the first one nor last one with such idea. Actually,
> Luke wrote up a BIP with similar idea in mind:
> 
> https://github.com/luke-jr/bips/blob/bip-hfprep/bip-hfprep.mediawiki
> <https://github.com/luke-jr/bips/blob/bip-hfprep/bip-hfprep.mediawiki>
> 
> Instead of just lifting the block size limit, he also suggested to remove
> many other rules. I think he has given up this idea because it?s just too
> complicated.
> ...
> So if we really want to get prepared for a potential HF with unknown
> parameters, I?d suggest to set a time bomb in the client, which will stop
> processing of transactions with big warning in GUI. The user may still
> have an option to continue with old rules at their own risks.

Indeed, actually implementing hfprep proved to be overly complicated.

I like the idea of a time bomb that just shuts down the client after it 
determine it's stale and refuses to start without an explicit override.
That should work no matter what the hardfork is, and gives us a good 
expectation for hardfork timeframes.

> Or, instead of increasing the block size, we make a softfork to decrease
> the block size to 1kB and block reward to 0, activating far in the future.
> This is similar to the difficulty bomb in ETH, which will freeze the
> network.

I don't like this idea. It leaves the node open to attack from blocks actually 
meeting the criteria. Maybe the absolute minimum as Jeremy suggested.

Luke

From alp.bitcoin at gmail.com  Tue Mar 28 17:53:11 2017
From: alp.bitcoin at gmail.com (Alphonse Pace)
Date: Tue, 28 Mar 2017 12:53:11 -0500
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <RO1P152MB16424A3706E408DA163B1D95F5320@RO1P152MB1642.LAMP152.PROD.OUTLOOK.COM>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAMBsKS8oSKS5g8UEyCu18bjzGJWpA+sJEaxBUV9FXAmXhX1ApA@mail.gmail.com>
	<RO1P152MB16424A3706E408DA163B1D95F5320@RO1P152MB1642.LAMP152.PROD.OUTLOOK.COM>
Message-ID: <CAMBsKS9n7Mxd2LwXwSXUjHbBQj932QQW7-CnXe10tia6Ga0iBQ@mail.gmail.com>

Juan,

I suggest you take a look at this paper:
http://fc16.ifca.ai/bitcoin/papers/CDE+16.pdf  It may help you form
opinions based in science rather than what appears to be nothing more than
a hunch.  It shows that even 4MB is unsafe.  SegWit provides up to this
limit.

8MB is most definitely not safe today.

Whether it is unsafe or impossible is the topic, since Wang Chun proposed
making the block size limit 32MiB.


Wang Chun,

Can you specify what meeting you are talking about?  You seem to have not
replied on that point.  Who were the participants and what was the purpose
of this meeting?

-Alphonse

On Tue, Mar 28, 2017 at 12:33 PM, Juan Garavaglia <jg at 112bit.com> wrote:

> Alphonse,
>
>
>
> In my opinion if 1MB limit was ok in 2010, 8MB limit is ok on 2016 and
> 32MB limit valid in next halving, from network, storage and CPU perspective
> or 1MB was too high in 2010 what is possible or 1MB is to low today.
>
>
>
> If is unsafe or impossible to raise the blocksize is a different topic.
>

>
> Regards
>
>
>
> Juan
>
>
>
>
>
> *From:* bitcoin-dev-bounces at lists.linuxfoundation.org [mailto:
> bitcoin-dev-bounces at lists.linuxfoundation.org] *On Behalf Of *Alphonse
> Pace via bitcoin-dev
> *Sent:* Tuesday, March 28, 2017 2:24 PM
> *To:* Wang Chun <1240902 at gmail.com>; Bitcoin Protocol Discussion <
> bitcoin-dev at lists.linuxfoundation.org>
> *Subject:* Re: [bitcoin-dev] Hard fork proposal from last week's meeting
>
>
>
> What meeting are you referring to?  Who were the participants?
>
>
>
> Removing the limit but relying on the p2p protocol is not really a true
> 32MiB limit, but a limit of whatever transport methods provide.  This can
> lead to differing consensus if alternative layers for relaying are used.
> What you seem to be asking for is an unbound block size (or at least
> determined by whatever miners produce).  This has the possibility (and even
> likelihood) of removing many participants from the network, including many
> small miners.
>
>
>
> 32MB in less than 3 years also appears to be far beyond limits of safety
> which are known to exist far sooner, and we cannot expect hardware and
> networking layers to improve by those amounts in that time.
>
>
>
> It also seems like it would be much better to wait until SegWit activates
> in order to truly measure the effects on the network from this increased
> capacity before committing to any additional increases.
>
>
>
> -Alphonse
>
>
>
>
>
>
>
> On Tue, Mar 28, 2017 at 11:59 AM, Wang Chun via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> I've proposed this hard fork approach last year in Hong Kong Consensus
> but immediately rejected by coredevs at that meeting, after more than
> one year it seems that lots of people haven't heard of it. So I would
> post this here again for comment.
>
> The basic idea is, as many of us agree, hard fork is risky and should
> be well prepared. We need a long time to deploy it.
>
> Despite spam tx on the network, the block capacity is approaching its
> limit, and we must think ahead. Shall we code a patch right now, to
> remove the block size limit of 1MB, but not activate it until far in
> the future. I would propose to remove the 1MB limit at the next block
> halving in spring 2020, only limit the block size to 32MiB which is
> the maximum size the current p2p protocol allows. This patch must be
> in the immediate next release of Bitcoin Core.
>
> With this patch in core's next release, Bitcoin works just as before,
> no fork will ever occur, until spring 2020. But everyone knows there
> will be a fork scheduled. Third party services, libraries, wallets and
> exchanges will have enough time to prepare for it over the next three
> years.
>
> We don't yet have an agreement on how to increase the block size
> limit. There have been many proposals over the past years, like
> BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
> on. These hard fork proposals, with this patch already in Core's
> release, they all become soft fork. We'll have enough time to discuss
> all these proposals and decide which one to go. Take an example, if we
> choose to fork to only 2MB, since 32MiB already scheduled, reduce it
> from 32MiB to 2MB will be a soft fork.
>
> Anyway, we must code something right now, before it becomes too late.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170328/70199439/attachment.html>

From joroark at vt.edu  Tue Mar 28 17:50:42 2017
From: joroark at vt.edu (Douglas Roark)
Date: Tue, 28 Mar 2017 10:50:42 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFzgq-xnXw6efaEurLcgMQQwwr7YitrJ3vZ8i+Ha0MbnVzUKhg@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAMBsKS8oSKS5g8UEyCu18bjzGJWpA+sJEaxBUV9FXAmXhX1ApA@mail.gmail.com>
	<CAFzgq-xnXw6efaEurLcgMQQwwr7YitrJ3vZ8i+Ha0MbnVzUKhg@mail.gmail.com>
Message-ID: <8be6a2dc-a397-6cc5-e5d4-4c514f8f5b94@vt.edu>

On 2017/3/28 10:31, Wang Chun via bitcoin-dev wrote:
> The basic idea is, let's stop the debate for whether we should upgrade
> to 2MB, 8MB or 32MiB. 32MiB is well above any proposals' upper limit,
> so any final decision would be a soft fork to this already deployed
> release. If by 2020, we still agree 1MB is enough, it can be changed
> back to 1MB limit and it would also a soft fork on top of that.

While I think this idea isn't bad in and of itself, there is an
assumption being made that the community would come to consensus
regarding a future soft fork. This, IMO, is a dangerous assumption.
Failure would potentially leave the network at a hard fork well past any
current proposal. It would also potentially lead to miners becoming
hostile players and making political demands. ("Soft fork down to X MB
or I'll shut down 15% of the network hashrate and work to shut down more
elsewhere.") I'd hope we can all agree that such a scenario would be
terrible.

I do agree that the idea of giving everybody plenty of time to plan is
critical. (Telecom providers need months, if not years, to plan for even
simple upgrades, which often are not as simple as they look on paper.) I
just think this proposal, while well-meaning, comes across as a bit of a
trojan horse as-is. I can't get behind it, although it could potentially
be molded into something else that's interesting, e.g., Johnson Lau's
Spoonnet. Fork-to-minimum, while introducing its own potential problems,
would put much less pressure on full nodes, and on the ecosphere as a
whole if the max needed to be soft forked down.

(I'd also like to see SegWit go live so that we can get an idea of how
much pressure there really is on the network, thereby giving us a better
idea of how high we can go. I still think we're flying a bit blind in
that regard.)

-- 
---
Douglas Roark
Cryptocurrency, network security, travel, and art.
https://onename.com/droark
joroark at vt.edu
PGP key ID: 26623924

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170328/3355f573/attachment.sig>

From piverson1024 at gmail.com  Tue Mar 28 19:56:49 2017
From: piverson1024 at gmail.com (Paul Iverson)
Date: Tue, 28 Mar 2017 12:56:49 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
Message-ID: <CAAeo5+jSfp5XWj=EYJ_i-XS+=RjxfY-co7+b7iu3Gd=WWHbHzQ@mail.gmail.com>

Thank you for the proposal Wang Chung!

It is clear that, spam aside, blocks are getting full and we need increase
them soon. What I don't like about your proposal is it forces all node
operators to implicitly accept larger blocks in 2020, even maybe against
their will. 32 MB blocks might result in a loss of decentralization, and it
might be too difficult to coordinate for small blocks before it's too late.


So I think Core can't decide on hard forks like this. It must be left up to
the users. I think only choice is for Core to add a run-time option to
allow node operators to increase block size limit, so that this very
controversial decision is not coming from Core. It must come from the
community.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170328/df218008/attachment-0001.html>

From pieter.wuille at gmail.com  Tue Mar 28 20:16:03 2017
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Tue, 28 Mar 2017 13:16:03 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAAeo5+jSfp5XWj=EYJ_i-XS+=RjxfY-co7+b7iu3Gd=WWHbHzQ@mail.gmail.com>
References: <CAAeo5+jSfp5XWj=EYJ_i-XS+=RjxfY-co7+b7iu3Gd=WWHbHzQ@mail.gmail.com>
Message-ID: <CAPg+sBgy6CTjgc-kjAdYSUXgDm4WfRbAzxwd_Csj1mWhCOSQMA@mail.gmail.com>

On Tue, Mar 28, 2017 at 12:56 PM, Paul Iverson via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> So I think Core can't decide on hard forks like this. It must be left up to
> the users. I think only choice is for Core to add a run-time option to allow
> node operators to increase block size limit, so that this very controversial
> decision is not coming from Core. It must come from the community.

Bitcoin Core's (nor any other software's) maintainers can already not
decide on a hard fork, and I keep being confused by the focus on Core
in this topic. Even if a hard forking change (or lack thereof) was
included into a new release, it is still up to the community to choose
to run the new software. Bitcoin Core has very intentionally no
auto-update feature, as the choice for what network rules to implement
must come from node operators, not developers. Ask yourself this: if a
new Bitcoin Core release would include a new rule that blacklists
<random famous person>'s coins. What do you think would happen? I hope
that people would refuse to update, and choose to run different full
node software.

Core is not special. It is one of many pieces of software that
implement today's Bitcoin consensus rules. If a hardfork is to take
place in a way that does not result in two currencies, it must be
clear that the entire ecosystem will adopt it. Bitcoin Core will not
merge any consensus changes that do not clearly satisfy that
criterion.

-- 
Pieter

From tomz at freedommail.ch  Tue Mar 28 20:43:34 2017
From: tomz at freedommail.ch (Tom Zander)
Date: Tue, 28 Mar 2017 22:43:34 +0200
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAAeo5+jSfp5XWj=EYJ_i-XS+=RjxfY-co7+b7iu3Gd=WWHbHzQ@mail.gmail.com>
References: <CAAeo5+jSfp5XWj=EYJ_i-XS+=RjxfY-co7+b7iu3Gd=WWHbHzQ@mail.gmail.com>
Message-ID: <10740865.BWG7G26IGS@cherry>

On Tuesday, 28 March 2017 21:56:49 CEST Paul Iverson via bitcoin-dev wrote:
> It is clear that, spam aside, blocks are getting full and we need increase
> them soon. What I don't like about your proposal is it forces all node
> operators to implicitly accept larger blocks in 2020, even maybe against
> their will. 32 MB blocks might result in a loss of decentralization, and
> it might be too difficult to coordinate for small blocks before it's too
> late.

The suggestion was not to produce 32MB blocks, so your fear here is 
unfounded.

-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From tomz at freedommail.ch  Tue Mar 28 20:48:44 2017
From: tomz at freedommail.ch (Tom Zander)
Date: Tue, 28 Mar 2017 22:48:44 +0200
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
Message-ID: <1610530.cSCeZjVRYh@cherry>

On Tuesday, 28 March 2017 18:59:32 CEST Wang Chun via bitcoin-dev wrote:
> Despite spam tx on the network, the block capacity is approaching its
> limit, and we must think ahead. Shall we code a patch right now, to
> remove the block size limit of 1MB, but not activate it until far in
> the future. I would propose to remove the 1MB limit at the next block
> halving in spring 2020, only limit the block size to 32MiB which is
> the maximum size the current p2p protocol allows. This patch must be
> in the immediate next release of Bitcoin Core.
...
> We don't yet have an agreement on how to increase the block size
> limit. There have been many proposals over the past years, like
> BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
> on. These hard fork proposals, with this patch already in Core's
> release, they all become soft fork.

I think that is a very smart idea, thank you for making it.
-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From tomz at freedommail.ch  Tue Mar 28 20:50:58 2017
From: tomz at freedommail.ch (Tom Zander)
Date: Tue, 28 Mar 2017 22:50:58 +0200
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <B93DE8AA-AA01-4E0E-88B6-B788B03282E0@xbt.hk>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<B93DE8AA-AA01-4E0E-88B6-B788B03282E0@xbt.hk>
Message-ID: <1526531.K1h7bgEXcQ@cherry>

On Tuesday, 28 March 2017 19:34:23 CEST Johnson Lau via bitcoin-dev wrote:
> So if we really want to get prepared for a potential HF with unknown
> parameters,

That was not suggested.

Maybe you can comment on the very specific suggestion instead?

-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From jg at 112bit.com  Tue Mar 28 17:33:22 2017
From: jg at 112bit.com (Juan Garavaglia)
Date: Tue, 28 Mar 2017 17:33:22 +0000
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAMBsKS8oSKS5g8UEyCu18bjzGJWpA+sJEaxBUV9FXAmXhX1ApA@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAMBsKS8oSKS5g8UEyCu18bjzGJWpA+sJEaxBUV9FXAmXhX1ApA@mail.gmail.com>
Message-ID: <RO1P152MB16424A3706E408DA163B1D95F5320@RO1P152MB1642.LAMP152.PROD.OUTLOOK.COM>

Alphonse,

In my opinion if 1MB limit was ok in 2010, 8MB limit is ok on 2016 and 32MB limit valid in next halving, from network, storage and CPU perspective or 1MB was too high in 2010 what is possible or 1MB is to low today.

If is unsafe or impossible to raise the blocksize is a different topic.

Regards

Juan


From: bitcoin-dev-bounces at lists.linuxfoundation.org [mailto:bitcoin-dev-bounces at lists.linuxfoundation.org] On Behalf Of Alphonse Pace via bitcoin-dev
Sent: Tuesday, March 28, 2017 2:24 PM
To: Wang Chun <1240902 at gmail.com>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
Subject: Re: [bitcoin-dev] Hard fork proposal from last week's meeting

What meeting are you referring to?  Who were the participants?

Removing the limit but relying on the p2p protocol is not really a true 32MiB limit, but a limit of whatever transport methods provide.  This can lead to differing consensus if alternative layers for relaying are used.  What you seem to be asking for is an unbound block size (or at least determined by whatever miners produce).  This has the possibility (and even likelihood) of removing many participants from the network, including many small miners.

32MB in less than 3 years also appears to be far beyond limits of safety which are known to exist far sooner, and we cannot expect hardware and networking layers to improve by those amounts in that time.

It also seems like it would be much better to wait until SegWit activates in order to truly measure the effects on the network from this increased capacity before committing to any additional increases.

-Alphonse



On Tue, Mar 28, 2017 at 11:59 AM, Wang Chun via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
I've proposed this hard fork approach last year in Hong Kong Consensus
but immediately rejected by coredevs at that meeting, after more than
one year it seems that lots of people haven't heard of it. So I would
post this here again for comment.

The basic idea is, as many of us agree, hard fork is risky and should
be well prepared. We need a long time to deploy it.

Despite spam tx on the network, the block capacity is approaching its
limit, and we must think ahead. Shall we code a patch right now, to
remove the block size limit of 1MB, but not activate it until far in
the future. I would propose to remove the 1MB limit at the next block
halving in spring 2020, only limit the block size to 32MiB which is
the maximum size the current p2p protocol allows. This patch must be
in the immediate next release of Bitcoin Core.

With this patch in core's next release, Bitcoin works just as before,
no fork will ever occur, until spring 2020. But everyone knows there
will be a fork scheduled. Third party services, libraries, wallets and
exchanges will have enough time to prepare for it over the next three
years.

We don't yet have an agreement on how to increase the block size
limit. There have been many proposals over the past years, like
BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
on. These hard fork proposals, with this patch already in Core's
release, they all become soft fork. We'll have enough time to discuss
all these proposals and decide which one to go. Take an example, if we
choose to fork to only 2MB, since 32MiB already scheduled, reduce it
from 32MiB to 2MB will be a soft fork.

Anyway, we must code something right now, before it becomes too late.
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170328/7364d9da/attachment-0001.html>

From alp.bitcoin at gmail.com  Tue Mar 28 20:53:30 2017
From: alp.bitcoin at gmail.com (Alphonse Pace)
Date: Tue, 28 Mar 2017 15:53:30 -0500
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <10740865.BWG7G26IGS@cherry>
References: <CAAeo5+jSfp5XWj=EYJ_i-XS+=RjxfY-co7+b7iu3Gd=WWHbHzQ@mail.gmail.com>
	<10740865.BWG7G26IGS@cherry>
Message-ID: <CAMBsKS_Fp79jn_zSyzrcJU01Ri1hUtoVPoDf64mB-uDOEYEQbA@mail.gmail.com>

His demand (not suggestion) allows it without any safeguards.

>This patch must be in the immediate next release of Bitcoin Core.

That is not a suggestion.

Wang - still waiting on the details of this meeting.  In the spirit of
openness, I think you ought to share with the community what kind of secret
meetings are happening.


On Tue, Mar 28, 2017 at 3:43 PM, Tom Zander via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Tuesday, 28 March 2017 21:56:49 CEST Paul Iverson via bitcoin-dev wrote:
> > It is clear that, spam aside, blocks are getting full and we need
> increase
> > them soon. What I don't like about your proposal is it forces all node
> > operators to implicitly accept larger blocks in 2020, even maybe against
> > their will. 32 MB blocks might result in a loss of decentralization, and
> > it might be too difficult to coordinate for small blocks before it's too
> > late.
>
> The suggestion was not to produce 32MB blocks, so your fear here is
> unfounded.
>
> --
> Tom Zander
> Blog: https://zander.github.io
> Vlog: https://vimeo.com/channels/tomscryptochannel
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170328/a84076b1/attachment.html>

From luke at dashjr.org  Tue Mar 28 21:06:49 2017
From: luke at dashjr.org (Luke Dashjr)
Date: Tue, 28 Mar 2017 21:06:49 +0000
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAMBsKS_Fp79jn_zSyzrcJU01Ri1hUtoVPoDf64mB-uDOEYEQbA@mail.gmail.com>
References: <CAAeo5+jSfp5XWj=EYJ_i-XS+=RjxfY-co7+b7iu3Gd=WWHbHzQ@mail.gmail.com>
	<10740865.BWG7G26IGS@cherry>
	<CAMBsKS_Fp79jn_zSyzrcJU01Ri1hUtoVPoDf64mB-uDOEYEQbA@mail.gmail.com>
Message-ID: <201703282106.49852.luke@dashjr.org>

On Tuesday, March 28, 2017 8:53:30 PM Alphonse Pace via bitcoin-dev wrote:
> His demand (not suggestion) allows it without any safeguards.
> 
> >This patch must be in the immediate next release of Bitcoin Core.
> 
> That is not a suggestion.

I think it was probably a design requirement more than a demand. It makes 
sense: if we're aiming to have a long lead time for a possible hardfork, we 
want to get the lead time started ASAP. (It could perhaps have been 
communicated clearer, but let's not read hostility into things when 
unnecessary.)

Meta-topic: Can we try a little harder to avoid sequences of multiple brief 
replies in a matter of minutes? Combine them to a single reply.

Luke

From lf-lists at mattcorallo.com  Tue Mar 28 22:35:05 2017
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Tue, 28 Mar 2017 22:35:05 +0000
Subject: [bitcoin-dev] Fraud proofs for block size/weight
In-Reply-To: <201703250516.26362.luke@dashjr.org>
References: <201703220847.31303.luke@dashjr.org>
	<30FB8B13-135D-4905-B1B4-76D79341CA02@mattcorallo.com>
	<CABm2gDpgTtiftByQhD_TtzgD5Tv==io2+TGiTCnMt9onquVBmw@mail.gmail.com>
	<201703250516.26362.luke@dashjr.org>
Message-ID: <134ac169-08ed-706b-b64d-409fef942c73@mattcorallo.com>

I dont think thats true? Sure, you have to assume the block is valid
aside from a too-large size, but it seems sane.

You don't strictly need to show that a leaf is a parseable transaction,
as long as you can assume that the block is valid and that you cannot
forge a SHA256 midstate which, when combined with data with a given
length tag, would result in a hash of a given value (this is a pretty
strong assumption, IMO, IIRC this was not a studied nor a claimed
feature of SHA256).

The only issue is that, since parts of the merkle tree are repeated, you
need to be sure that the counting for minimum number of transactions is
accurate, though I did not review your proposal text to check that.

On 03/25/17 05:16, Luke Dashjr wrote:
 - snip -
> The only way to establish the number of transactions at all, is to show that a 
> leaf is a parsable transaction. Which this doesn't actually show, so it's 
> broken. :( Need to think on this. Any ideas? :/
> 
> Luke
> 

From jg at 112bit.com  Tue Mar 28 22:36:18 2017
From: jg at 112bit.com (Juan Garavaglia)
Date: Tue, 28 Mar 2017 22:36:18 +0000
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAMBsKS9n7Mxd2LwXwSXUjHbBQj932QQW7-CnXe10tia6Ga0iBQ@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAMBsKS8oSKS5g8UEyCu18bjzGJWpA+sJEaxBUV9FXAmXhX1ApA@mail.gmail.com>
	<RO1P152MB16424A3706E408DA163B1D95F5320@RO1P152MB1642.LAMP152.PROD.OUTLOOK.COM>
	<CAMBsKS9n7Mxd2LwXwSXUjHbBQj932QQW7-CnXe10tia6Ga0iBQ@mail.gmail.com>
Message-ID: <RO1P152MB16428E9EFBF561B2642C3B0BF5320@RO1P152MB1642.LAMP152.PROD.OUTLOOK.COM>

Alphonse,

Even when several of the experts involved in the document you refer has my respect and admiration, I do not agree with some of their conclusions some of their estimations are not accurate other changed like Bootstrap Time, Cost per Confirmed Transaction they consider a network of 450,000,00 GH and today is 3.594.236.966 GH, the energy consumption per GH is old, the cost of electricity is wrong even when the document was made and is hard to find any parameter used that is valid for an analysis today.

Again with all respect to the experts involved in that analysis is not valid today.

I tend to believe more in Moore?s law, Butters' Law of Photonics and Kryder?s Law all has been verified for many years and support that 32 MB in 2020 are possible and equals or less than 1 MB in 2010.

Again may be is not possible Johnson Lau and LukeJr invested a significant amount of time investigating ways to do a safe HF, and may be not possible to do a safe HF today but from processing power, bandwidth and storage is totally valid and Wang Chung proposal has solid grounds.

Regards

Juan


From: Alphonse Pace [mailto:alp.bitcoin at gmail.com]
Sent: Tuesday, March 28, 2017 2:53 PM
To: Juan Garavaglia <jg at 112bit.com>; Wang Chun <1240902 at gmail.com>
Cc: Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
Subject: Re: [bitcoin-dev] Hard fork proposal from last week's meeting

Juan,

I suggest you take a look at this paper: http://fc16.ifca.ai/bitcoin/papers/CDE+16.pdf  It may help you form opinions based in science rather than what appears to be nothing more than a hunch.  It shows that even 4MB is unsafe.  SegWit provides up to this limit.

8MB is most definitely not safe today.

Whether it is unsafe or impossible is the topic, since Wang Chun proposed making the block size limit 32MiB.


Wang Chun,

Can you specify what meeting you are talking about?  You seem to have not replied on that point.  Who were the participants and what was the purpose of this meeting?

-Alphonse

On Tue, Mar 28, 2017 at 12:33 PM, Juan Garavaglia <jg at 112bit.com<mailto:jg at 112bit.com>> wrote:
Alphonse,

In my opinion if 1MB limit was ok in 2010, 8MB limit is ok on 2016 and 32MB limit valid in next halving, from network, storage and CPU perspective or 1MB was too high in 2010 what is possible or 1MB is to low today.

If is unsafe or impossible to raise the blocksize is a different topic.

Regards

Juan


From: bitcoin-dev-bounces at lists.linuxfoundation.org<mailto:bitcoin-dev-bounces at lists.linuxfoundation.org> [mailto:bitcoin-dev-bounces at lists.linuxfoundation.org<mailto:bitcoin-dev-bounces at lists.linuxfoundation.org>] On Behalf Of Alphonse Pace via bitcoin-dev
Sent: Tuesday, March 28, 2017 2:24 PM
To: Wang Chun <1240902 at gmail.com<mailto:1240902 at gmail.com>>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>>
Subject: Re: [bitcoin-dev] Hard fork proposal from last week's meeting

What meeting are you referring to?  Who were the participants?

Removing the limit but relying on the p2p protocol is not really a true 32MiB limit, but a limit of whatever transport methods provide.  This can lead to differing consensus if alternative layers for relaying are used.  What you seem to be asking for is an unbound block size (or at least determined by whatever miners produce).  This has the possibility (and even likelihood) of removing many participants from the network, including many small miners.

32MB in less than 3 years also appears to be far beyond limits of safety which are known to exist far sooner, and we cannot expect hardware and networking layers to improve by those amounts in that time.

It also seems like it would be much better to wait until SegWit activates in order to truly measure the effects on the network from this increased capacity before committing to any additional increases.

-Alphonse



On Tue, Mar 28, 2017 at 11:59 AM, Wang Chun via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
I've proposed this hard fork approach last year in Hong Kong Consensus
but immediately rejected by coredevs at that meeting, after more than
one year it seems that lots of people haven't heard of it. So I would
post this here again for comment.

The basic idea is, as many of us agree, hard fork is risky and should
be well prepared. We need a long time to deploy it.

Despite spam tx on the network, the block capacity is approaching its
limit, and we must think ahead. Shall we code a patch right now, to
remove the block size limit of 1MB, but not activate it until far in
the future. I would propose to remove the 1MB limit at the next block
halving in spring 2020, only limit the block size to 32MiB which is
the maximum size the current p2p protocol allows. This patch must be
in the immediate next release of Bitcoin Core.

With this patch in core's next release, Bitcoin works just as before,
no fork will ever occur, until spring 2020. But everyone knows there
will be a fork scheduled. Third party services, libraries, wallets and
exchanges will have enough time to prepare for it over the next three
years.

We don't yet have an agreement on how to increase the block size
limit. There have been many proposals over the past years, like
BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
on. These hard fork proposals, with this patch already in Core's
release, they all become soft fork. We'll have enough time to discuss
all these proposals and decide which one to go. Take an example, if we
choose to fork to only 2MB, since 32MiB already scheduled, reduce it
from 32MiB to 2MB will be a soft fork.

Anyway, we must code something right now, before it becomes too late.
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170328/ac730df1/attachment-0001.html>

From jg at 112bit.com  Tue Mar 28 14:38:40 2017
From: jg at 112bit.com (Juan Garavaglia)
Date: Tue, 28 Mar 2017 14:38:40 +0000
Subject: [bitcoin-dev] Encouraging good miners
In-Reply-To: <c0d518f4-ffb5-704b-02ee-d9587415571c@plaimi.net>
References: <uQBxE-Qbd-osime4uulMZZHdF_D7usA2EKsPjkTyXCHM0OakN2Wdoeriyrc73yWp5c5ULQNkIsRXAM64cCom7ecPvdwmatOyc9Kh1sTDpl4=@protonmail.com>
	<c0d518f4-ffb5-704b-02ee-d9587415571c@plaimi.net>
Message-ID: <RO1P152MB16426009B098E1EA6280ECEBF5320@RO1P152MB1642.LAMP152.PROD.OUTLOOK.COM>

If a miner try to hurt the network mining just empty blocks at some time the rest will start rejecting their blocks and will be orphans so will loss the reward incentive and that miner will join the behavior of the rest of the miners, if that miner has 51% of hashrate there the smallest problem are the empty blocks.

-----Original Message-----
From: bitcoin-dev-bounces at lists.linuxfoundation.org [mailto:bitcoin-dev-bounces at lists.linuxfoundation.org] On Behalf Of Stian Ellingsen via bitcoin-dev
Sent: Monday, March 27, 2017 2:50 PM
To: Btc Ideas <btcideas at protonmail.com>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
Subject: Re: [bitcoin-dev] Encouraging good miners

On 27/03/17 18:12, Btc Ideas via bitcoin-dev wrote:

> Add a preference for mined blocks to be the one with more 
> transactions. This comes into play when 2 blocks of the same height 
> are found. The first good block mined would be orphaned if it had less 
> transactions than another. Optionally, have this rule apply to the 
> current block and the previous one.

This would encourage miners to make their own tiny junk transactions to fill up their blocks, perhaps leaving larger, more space-efficient transactions in the mempool.

> This increases incentive for full blocks because a miner thinking the 
> faster propagation of a smaller block will win him the reward, but 
> that would no longer be a good assumption.

> I read some miners could attack a chain by mining small or empty 
> blocks. This makes that a little more difficult, but they can still 
> attack the chain many ways.

"Good" miners should probably build upon the block with a set of transactions more similar to what they themselves would include based on their mempool at the time.  However, miners don't have an incentive to do so today.  Instead, they may be better off building upon the block that leaves the most valuable transactions in the mempool, e.g. a small or empty block, and maybe leave some valuable transactions in the mempool for the next miner.[1]  This issue could possibly be addressed by a soft-fork that requires miners to pay a portion of their fees to future miners.

[1]
https://freedom-to-tinker.com/2016/10/21/bitcoin-is-unstable-without-the-block-reward/

--
Stian


_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From luvb at hotmail.com  Wed Mar 29 02:59:58 2017
From: luvb at hotmail.com (Luv Khemani)
Date: Wed, 29 Mar 2017 02:59:58 +0000
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <RO1P152MB16428E9EFBF561B2642C3B0BF5320@RO1P152MB1642.LAMP152.PROD.OUTLOOK.COM>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAMBsKS8oSKS5g8UEyCu18bjzGJWpA+sJEaxBUV9FXAmXhX1ApA@mail.gmail.com>
	<RO1P152MB16424A3706E408DA163B1D95F5320@RO1P152MB1642.LAMP152.PROD.OUTLOOK.COM>
	<CAMBsKS9n7Mxd2LwXwSXUjHbBQj932QQW7-CnXe10tia6Ga0iBQ@mail.gmail.com>,
	<RO1P152MB16428E9EFBF561B2642C3B0BF5320@RO1P152MB1642.LAMP152.PROD.OUTLOOK.COM>
Message-ID: <SINPR04MB19496F9AE5534BB0005D8391C2350@SINPR04MB1949.apcprd04.prod.outlook.com>

Hi Juan


  >  I tend to believe more in Moore?s law, Butters' Law of Photonics and Kryder?s Law all has been verified for many years and support that 32 MB in 2020 are possible and equals or less than 1 MB in 2010.



  Protocol development, especially one in control of people's money cannot be based on beliefs. Do you have actual data to show significant increases in desktop CPU, memory and bandwidth?


All empirical evidence points to the opposite.

Intel has been struggling to eek out 5-10% gains for each generation of its CPUs. The growth of the total blockchain size at 1MB alone is much faster than this.

CPU Core counts have also been stagnant for a decade.

Disk Space growth has also been slowing and with the trend towards SSDs, available disk space in a typical PC has turned negative sharply.


Regards

Luv


________________________________
From: bitcoin-dev-bounces at lists.linuxfoundation.org <bitcoin-dev-bounces at lists.linuxfoundation.org> on behalf of Juan Garavaglia via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
Sent: Wednesday, March 29, 2017 6:36 AM
To: Alphonse Pace; Wang Chun
Cc: Bitcoin Protocol Discussion
Subject: Re: [bitcoin-dev] Hard fork proposal from last week's meeting


Alphonse,



Even when several of the experts involved in the document you refer has my respect and admiration, I do not agree with some of their conclusions some of their estimations are not accurate other changed like Bootstrap Time, Cost per Confirmed Transaction they consider a network of 450,000,00 GH and today is 3.594.236.966 GH, the energy consumption per GH is old, the cost of electricity is wrong even when the document was made and is hard to find any parameter used that is valid for an analysis today.



Again with all respect to the experts involved in that analysis is not valid today.



I tend to believe more in Moore?s law, Butters' Law of Photonics and Kryder?s Law all has been verified for many years and support that 32 MB in 2020 are possible and equals or less than 1 MB in 2010.



Again may be is not possible Johnson Lau and LukeJr invested a significant amount of time investigating ways to do a safe HF, and may be not possible to do a safe HF today but from processing power, bandwidth and storage is totally valid and Wang Chung proposal has solid grounds.



Regards



Juan





From: Alphonse Pace [mailto:alp.bitcoin at gmail.com]
Sent: Tuesday, March 28, 2017 2:53 PM
To: Juan Garavaglia <jg at 112bit.com>; Wang Chun <1240902 at gmail.com>
Cc: Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
Subject: Re: [bitcoin-dev] Hard fork proposal from last week's meeting



Juan,



I suggest you take a look at this paper: http://fc16.ifca.ai/bitcoin/papers/CDE+16.pdf  It may help you form opinions based in science rather than what appears to be nothing more than a hunch.  It shows that even 4MB is unsafe.  SegWit provides up to this limit.

On Scaling Decentralized Blockchains<http://fc16.ifca.ai/bitcoin/papers/CDE+16.pdf>
fc16.ifca.ai
On Scaling Decentralized Blockchains (A Position Paper) Kyle Croman 0 ;1, Christian Decker 4, Ittay Eyal , Adem Efe Gencer , Ari Juels 0 ;2, Ahmed Kosba 0 ;3, Andrew ...





8MB is most definitely not safe today.



Whether it is unsafe or impossible is the topic, since Wang Chun proposed making the block size limit 32MiB.





Wang Chun,

Can you specify what meeting you are talking about?  You seem to have not replied on that point.  Who were the participants and what was the purpose of this meeting?



-Alphonse



On Tue, Mar 28, 2017 at 12:33 PM, Juan Garavaglia <jg at 112bit.com<mailto:jg at 112bit.com>> wrote:

Alphonse,



In my opinion if 1MB limit was ok in 2010, 8MB limit is ok on 2016 and 32MB limit valid in next halving, from network, storage and CPU perspective or 1MB was too high in 2010 what is possible or 1MB is to low today.



If is unsafe or impossible to raise the blocksize is a different topic.



Regards



Juan





From: bitcoin-dev-bounces at lists.linuxfoundation.org<mailto:bitcoin-dev-bounces at lists.linuxfoundation.org> [mailto:bitcoin-dev-bounces at lists.linuxfoundation.org<mailto:bitcoin-dev-bounces at lists.linuxfoundation.org>] On Behalf Of Alphonse Pace via bitcoin-dev
Sent: Tuesday, March 28, 2017 2:24 PM
To: Wang Chun <1240902 at gmail.com<mailto:1240902 at gmail.com>>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>>
Subject: Re: [bitcoin-dev] Hard fork proposal from last week's meeting



What meeting are you referring to?  Who were the participants?



Removing the limit but relying on the p2p protocol is not really a true 32MiB limit, but a limit of whatever transport methods provide.  This can lead to differing consensus if alternative layers for relaying are used.  What you seem to be asking for is an unbound block size (or at least determined by whatever miners produce).  This has the possibility (and even likelihood) of removing many participants from the network, including many small miners.



32MB in less than 3 years also appears to be far beyond limits of safety which are known to exist far sooner, and we cannot expect hardware and networking layers to improve by those amounts in that time.



It also seems like it would be much better to wait until SegWit activates in order to truly measure the effects on the network from this increased capacity before committing to any additional increases.



-Alphonse







On Tue, Mar 28, 2017 at 11:59 AM, Wang Chun via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:

I've proposed this hard fork approach last year in Hong Kong Consensus
but immediately rejected by coredevs at that meeting, after more than
one year it seems that lots of people haven't heard of it. So I would
post this here again for comment.

The basic idea is, as many of us agree, hard fork is risky and should
be well prepared. We need a long time to deploy it.

Despite spam tx on the network, the block capacity is approaching its
limit, and we must think ahead. Shall we code a patch right now, to
remove the block size limit of 1MB, but not activate it until far in
the future. I would propose to remove the 1MB limit at the next block
halving in spring 2020, only limit the block size to 32MiB which is
the maximum size the current p2p protocol allows. This patch must be
in the immediate next release of Bitcoin Core.

With this patch in core's next release, Bitcoin works just as before,
no fork will ever occur, until spring 2020. But everyone knows there
will be a fork scheduled. Third party services, libraries, wallets and
exchanges will have enough time to prepare for it over the next three
years.

We don't yet have an agreement on how to increase the block size
limit. There have been many proposals over the past years, like
BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
on. These hard fork proposals, with this patch already in Core's
release, they all become soft fork. We'll have enough time to discuss
all these proposals and decide which one to go. Take an example, if we
choose to fork to only 2MB, since 32MiB already scheduled, reduce it
from 32MiB to 2MB will be a soft fork.

Anyway, we must code something right now, before it becomes too late.
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev




-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/e38abd87/attachment-0001.html>

From jl2012 at xbt.hk  Wed Mar 29 04:21:33 2017
From: jl2012 at xbt.hk (Johnson Lau)
Date: Wed, 29 Mar 2017 12:21:33 +0800
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <1526531.K1h7bgEXcQ@cherry>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<B93DE8AA-AA01-4E0E-88B6-B788B03282E0@xbt.hk>
	<1526531.K1h7bgEXcQ@cherry>
Message-ID: <A6898D1C-B221-4363-8F34-76744F4E9722@xbt.hk>


> On 29 Mar 2017, at 04:50, Tom Zander <tomz at freedommail.ch <mailto:tomz at freedommail.ch>> wrote:
> 
> On Tuesday, 28 March 2017 19:34:23 CEST Johnson Lau via bitcoin-dev wrote:
>> So if we really want to get prepared for a potential HF with unknown
>> parameters,
> 
> That was not suggested.
> 
> Maybe you can comment on the very specific suggestion instead?
> 
> -- 
> Tom Zander
> Blog: https://zander.github.io <https://zander.github.io/>
> Vlog: https://vimeo.com/channels/tomscryptochannel <https://vimeo.com/channels/tomscryptochannel>

Just take something like FlexTran as example. How you could get prepared for that without first finalising the spec?

Or changing the block interval from 10 minutes to some other value?

Also, fixing the sighash bug for legacy scripts?

There are many other ideas that require a HF:
https://en.bitcoin.it/wiki/User:Gmaxwell/alt_ideas <https://en.bitcoin.it/wiki/User:Gmaxwell/alt_ideas>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/9f5a04ec/attachment.html>

From bram at bittorrent.com  Wed Mar 29 06:32:20 2017
From: bram at bittorrent.com (Bram Cohen)
Date: Tue, 28 Mar 2017 23:32:20 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
Message-ID: <CA+KqGkpFW8qDPVgY+11o_CC+6FMWUNUZ7REHJKYM9-3wbrUwYw@mail.gmail.com>

On Tue, Mar 28, 2017 at 9:59 AM, Wang Chun via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

>
> The basic idea is, as many of us agree, hard fork is risky and should
> be well prepared. We need a long time to deploy it.
>

Much as it may be appealing to repeal the block size limit now with a grace
period until a replacement is needed in a repeal and replace strategy, it's
dubious to assume that an idea can be agreed upon later when it can't be
agreed upon now. Trying to put a time limit on it runs into the possibility
that you'll find that whatever reasons there were for not having general
agreement on a new setup before still apply, and running into the
embarrassing situation of winding up sticking with the status quo after
much sturm and drang.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170328/e04b8d19/attachment.html>

From luke at dashjr.org  Wed Mar 29 09:15:57 2017
From: luke at dashjr.org (Luke Dashjr)
Date: Wed, 29 Mar 2017 09:15:57 +0000
Subject: [bitcoin-dev] Strong Anti-Replay via Coinbase Transactions
In-Reply-To: <07F54C7C-5F26-446D-A479-7F81BD131151@gmail.com>
References: <07F54C7C-5F26-446D-A479-7F81BD131151@gmail.com>
Message-ID: <201703290915.58724.luke@dashjr.org>

On Saturday, March 25, 2017 3:30:22 AM Cameron Garnham via bitcoin-dev wrote:
> ==Definitions==

It's blank?

> ==Specification==
> 
> Upon activation of the soft-fork (activation methodology undefined in this
> proposal), the following new rules become activated on the Bitcoin
> Network.

The activation methodology should be defined. It can be a TODO for now.

> New ?anti-replay? OpCode.  Take an unused NoOp and redefine it as
> ?OP_ANTI_REPLAY?.

Need to be specific about which NOP.

> The script must only have the form:
> 
> scriptPubKey: (empty)
> scriptSig: OP_ANTI_REPLAY
> 
> OP_ANTI_REPLAY has the following specification:
> 
> 	? OP_ANTI_REPLAY outputs must only be created in a coinbase transaction.

This is contradicting. scriptSig is not part of an output. Did you get the two 
scripts inverted?

> 	? OP_ANTI_REPLAY coinbase outputs must only have the value of 1 Satoshi.

Why burn a satoshi?

> 	? Transaction must not included more than 1 OP_ANTI_REPLAY input.

include*

> 	? If a OP_ANTI_REPLAY input is included in a transaction, the transaction
> must also be marked as Opt-In-RBF (BIP 125).

This is a layering violation. BIP 125 does not affect the consensus rules.

> In the case of an chain split after this BIP has activated, miners should
> ?recycle? all the OP_ANTI_REPLAY outputs via spending and recreating them
> in new blocks.  Renewing the protection to the new chain.

*a* chain split

This recycling is going to be pretty spammy... especially if transactions are 
limited to one each.

Chain splits also happen regularly (probably at least once or twice every few  
hundred blocks). Since generated UTXOs cannot be spent for 100 blocks, it is 
likely anything using this would require constant updating.

It also requires active awareness from the miner that a split is occurring. 
Usually, this is not known until the block is solved, and it is too late to 
make these recycling transactions.

> === Reference implementation ===
> 
> To-Be-Implemented

I don't think it's possible to implement for the reasons mentioned above.

> ==Rationale==
> 
> The only know way of guaranteeing that a transaction cannot be replayed is
> to include an input that cannot exist, by-definition, on the alternative
> chain.

known*

Another way is to commit to a specific chain explicitly, as with my proposed 
OP_CHECKBLOCKATHEIGHT.

> This BIP makes it convenient for wallets to automate the inclusion of new
> coinbase inputs into transactions that spend potentially repayable
> transactions.  Everything in this BIP could be done manually by close
> cooperation between the users and miners, however the author thinks that
> it is preferable to have it well-defined and enforced.
> 
> On Opt-In-RBF enforcement:  In the case of conflicting spends of
> OP_ANTI_REPLAY outputs, the higher-fee transaction should take priority. 
> Wallets may select a random OP_ANTI_REPLAY, then check if the competing
> transaction has a sufficiently low fee to be replaced.

This isn't convenient. Most wallets have no reasonable way to check if there 
are any competing transactions, much less what the fee for them is.

Why not just use a single reserved output, and have it recycle as part of the 
transactions? This can be done so long as the signature doesn't commit to the 
recycle input. So for each transaction, there would be an input with the last-
recycle-txid (tracked by the miner as it builds the block), and an output 
generating the next-recycle-txid. Wallets could just indicate this input to be 
used by providing a special hash as the input which is not covered under the 
signature.

> It is expected that every OP_ANTI_REPLAY output will be in the memory pools
> waiting to be spend; users must compete for this resource.

UTXO set, not memory pool?

Luke

From jtimon at jtimon.cc  Wed Mar 29 09:37:08 2017
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Wed, 29 Mar 2017 11:37:08 +0200
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CA+KqGkpFW8qDPVgY+11o_CC+6FMWUNUZ7REHJKYM9-3wbrUwYw@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CA+KqGkpFW8qDPVgY+11o_CC+6FMWUNUZ7REHJKYM9-3wbrUwYw@mail.gmail.com>
Message-ID: <CABm2gDrN5Wt9+2sVAjRiDG_axHmxF+iFujvApBMqrs-GjBG4pg@mail.gmail.com>

While Segwit's change from 1 mb size limit to 4 mb weight limit seems to be
controversial among some users (I find that very often it is because they
have been confused about what segwit does or even outright lied about it) I
don't think it's very interesting to discuss further size increases.
I find more interesting to talk to the users and see how they think Segwit
harms them, maybe we missed something in segwit that needs to be removed
for segwit to become uncontroversial, or maybe it is just disinformation.

On the other hand, we may want to have our first uncontroversial hardfork
asap, independently of block size. For example, we could do something as
simple as fixing the timewarp attack as bip99 proposes. I cannot think of a
hf that is easier to implement or has less potential for controversy than
that.

On 29 Mar 2017 8:32 am, "Bram Cohen via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org> wrote:

On Tue, Mar 28, 2017 at 9:59 AM, Wang Chun via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

>
> The basic idea is, as many of us agree, hard fork is risky and should
> be well prepared. We need a long time to deploy it.
>

Much as it may be appealing to repeal the block size limit now with a grace
period until a replacement is needed in a repeal and replace strategy, it's
dubious to assume that an idea can be agreed upon later when it can't be
agreed upon now. Trying to put a time limit on it runs into the possibility
that you'll find that whatever reasons there were for not having general
agreement on a new setup before still apply, and running into the
embarrassing situation of winding up sticking with the status quo after
much sturm and drang.


_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/6b3c913e/attachment.html>

From andreas at schildbach.de  Wed Mar 29 10:07:40 2017
From: andreas at schildbach.de (Andreas Schildbach)
Date: Wed, 29 Mar 2017 12:07:40 +0200
Subject: [bitcoin-dev] A BIP proposal for segwit addresses
In-Reply-To: <20170321191454.GA17834@savin.petertodd.org>
References: <CAPg+sBh0sFA7b6a+48Oojwy655GB9W6Th8JiCpd+2ruQjPev8Q@mail.gmail.com>
	<oarjko$8fp$1@blaine.gmane.org>
	<20170321191454.GA17834@savin.petertodd.org>
Message-ID: <obg116$sa2$1@blaine.gmane.org>

On 03/21/2017 08:14 PM, Peter Todd via bitcoin-dev wrote:
> On Tue, Mar 21, 2017 at 05:16:30PM +0100, Andreas Schildbach via bitcoin-dev wrote:
>> Why use Base 32 when the QR code alphanumeric mode allows 44 characters?
>> In Bitcoin Wallet, I use Base 43 (alphabet:
>> "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ$*+-./:") for most efficient QR
>> code encoding. I only leave out the space character because it gets
>> replaced by "+" in URLs.
> 
> Doing that only makes addresses a few % shorter, at the cost of significant
> downsides.  For example, not everyone knows what those additional characters
> are called, particularly for non-English-speaking users. Non-alphanumeric
> characters also complicate using the addresses in a variety of contexts ('/'
> in particularly isn't valid in filenames).

I'm not convinced that transmitting addresses via voice should be a
usecase to target at. I don't understand your comment about non-english
speaking users. Obviously they cannot voice-communicate at all with
only-english-speaking users, so there is no need to communicate
voice-communicate addresses between them.

Addresses in QR codes, addresses in URLs and addresses in NFC NDEF
messages are the three most used forms.

Speaking of URLs, actually Base 32 (as well as Base 43) makes QR codes
*bigger* because due to the characters used for URL parameters (?&=)
those QR codes are locked to binary mode. To make them shorter, we'd
need to use something like "Base 64url" (or ideally Base 94 -- all
printable ASCII characters).



From el33th4x0r at gmail.com  Wed Mar 29 06:24:05 2017
From: el33th4x0r at gmail.com (=?UTF-8?Q?Emin_G=C3=BCn_Sirer?=)
Date: Tue, 28 Mar 2017 23:24:05 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <RO1P152MB16428E9EFBF561B2642C3B0BF5320@RO1P152MB1642.LAMP152.PROD.OUTLOOK.COM>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAMBsKS8oSKS5g8UEyCu18bjzGJWpA+sJEaxBUV9FXAmXhX1ApA@mail.gmail.com>
	<RO1P152MB16424A3706E408DA163B1D95F5320@RO1P152MB1642.LAMP152.PROD.OUTLOOK.COM>
	<CAMBsKS9n7Mxd2LwXwSXUjHbBQj932QQW7-CnXe10tia6Ga0iBQ@mail.gmail.com>
	<RO1P152MB16428E9EFBF561B2642C3B0BF5320@RO1P152MB1642.LAMP152.PROD.OUTLOOK.COM>
Message-ID: <CAPkFh0uGcN=6Sgyb5z61h36CS3-VfNHZDHoM+hpqmKFdF+_L0A@mail.gmail.com>

>Even when several of the experts involved in the document you refer has my
respect and admiration, I do not agree with some of their conclusions

I'm one of the co-authors of that study. I'd be the first to agree with
your conclusion
and argue that the 4MB size suggested in that paper should not be used
without
compensation for two important changes to the network.

Our recent measurements of the Bitcoin P2P network show that network speeds
have improved tremendously. From February 2016 to February 2017, the average
provisioned bandwidth of a reachable Bitcoin node went up by approximately
70%.
And that's just in the last year.

Further, the emergence of high-speed block relay networks, like Falcon (
http://www.falcon-net.org)
and FIBRE, as well as block compression, e.g. BIP152 and xthin, change the
picture dramatically.

So, the 4MB limit mentioned in our paper should not be used as a protocol
limit today.

Best,
- egs



On Tue, Mar 28, 2017 at 3:36 PM, Juan Garavaglia via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Alphonse,
>
>
>
> Even when several of the experts involved in the document you refer has my
> respect and admiration, I do not agree with some of their conclusions some
> of their estimations are not accurate other changed like Bootstrap Time,
> Cost per Confirmed Transaction they consider a network of 450,000,00 GH and
> today is 3.594.236.966 GH, the energy consumption per GH is old, the cost
> of electricity is wrong even when the document was made and is hard to find
> any parameter used that is valid for an analysis today.
>
>
>
> Again with all respect to the experts involved in that analysis is not
> valid today.
>
>
>
> I tend to believe more in Moore?s law, Butters' Law of Photonics and
> Kryder?s Law all has been verified for many years and support that 32 MB in
> 2020 are possible and equals or less than 1 MB in 2010.
>
>
>
> Again may be is not possible Johnson Lau and LukeJr invested a significant
> amount of time investigating ways to do a safe HF, and may be not possible
> to do a safe HF today but from processing power, bandwidth and storage is
> totally valid and Wang Chung proposal has solid grounds.
>
>
>
> Regards
>
>
>
> Juan
>
>
>
>
>
> *From:* Alphonse Pace [mailto:alp.bitcoin at gmail.com]
> *Sent:* Tuesday, March 28, 2017 2:53 PM
> *To:* Juan Garavaglia <jg at 112bit.com>; Wang Chun <1240902 at gmail.com>
> *Cc:* Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>
>
> *Subject:* Re: [bitcoin-dev] Hard fork proposal from last week's meeting
>
>
>
> Juan,
>
>
>
> I suggest you take a look at this paper: http://fc16.ifca.ai/
> bitcoin/papers/CDE+16.pdf  It may help you form opinions based in science
> rather than what appears to be nothing more than a hunch.  It shows that
> even 4MB is unsafe.  SegWit provides up to this limit.
>
>
>
> 8MB is most definitely not safe today.
>
>
>
> Whether it is unsafe or impossible is the topic, since Wang Chun proposed
> making the block size limit 32MiB.
>
>
>
>
>
> Wang Chun,
>
>
> Can you specify what meeting you are talking about?  You seem to have not
> replied on that point.  Who were the participants and what was the purpose
> of this meeting?
>
>
>
> -Alphonse
>
>
>
> On Tue, Mar 28, 2017 at 12:33 PM, Juan Garavaglia <jg at 112bit.com> wrote:
>
> Alphonse,
>
>
>
> In my opinion if 1MB limit was ok in 2010, 8MB limit is ok on 2016 and
> 32MB limit valid in next halving, from network, storage and CPU perspective
> or 1MB was too high in 2010 what is possible or 1MB is to low today.
>
>
>
> If is unsafe or impossible to raise the blocksize is a different topic.
>
>
>
> Regards
>
>
>
> Juan
>
>
>
>
>
> *From:* bitcoin-dev-bounces at lists.linuxfoundation.org [mailto:
> bitcoin-dev-bounces at lists.linuxfoundation.org] *On Behalf Of *Alphonse
> Pace via bitcoin-dev
> *Sent:* Tuesday, March 28, 2017 2:24 PM
> *To:* Wang Chun <1240902 at gmail.com>; Bitcoin Protocol Discussion <
> bitcoin-dev at lists.linuxfoundation.org>
> *Subject:* Re: [bitcoin-dev] Hard fork proposal from last week's meeting
>
>
>
> What meeting are you referring to?  Who were the participants?
>
>
>
> Removing the limit but relying on the p2p protocol is not really a true
> 32MiB limit, but a limit of whatever transport methods provide.  This can
> lead to differing consensus if alternative layers for relaying are used.
> What you seem to be asking for is an unbound block size (or at least
> determined by whatever miners produce).  This has the possibility (and even
> likelihood) of removing many participants from the network, including many
> small miners.
>
>
>
> 32MB in less than 3 years also appears to be far beyond limits of safety
> which are known to exist far sooner, and we cannot expect hardware and
> networking layers to improve by those amounts in that time.
>
>
>
> It also seems like it would be much better to wait until SegWit activates
> in order to truly measure the effects on the network from this increased
> capacity before committing to any additional increases.
>
>
>
> -Alphonse
>
>
>
>
>
>
>
> On Tue, Mar 28, 2017 at 11:59 AM, Wang Chun via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> I've proposed this hard fork approach last year in Hong Kong Consensus
> but immediately rejected by coredevs at that meeting, after more than
> one year it seems that lots of people haven't heard of it. So I would
> post this here again for comment.
>
> The basic idea is, as many of us agree, hard fork is risky and should
> be well prepared. We need a long time to deploy it.
>
> Despite spam tx on the network, the block capacity is approaching its
> limit, and we must think ahead. Shall we code a patch right now, to
> remove the block size limit of 1MB, but not activate it until far in
> the future. I would propose to remove the 1MB limit at the next block
> halving in spring 2020, only limit the block size to 32MiB which is
> the maximum size the current p2p protocol allows. This patch must be
> in the immediate next release of Bitcoin Core.
>
> With this patch in core's next release, Bitcoin works just as before,
> no fork will ever occur, until spring 2020. But everyone knows there
> will be a fork scheduled. Third party services, libraries, wallets and
> exchanges will have enough time to prepare for it over the next three
> years.
>
> We don't yet have an agreement on how to increase the block size
> limit. There have been many proposals over the past years, like
> BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
> on. These hard fork proposals, with this patch already in Core's
> release, they all become soft fork. We'll have enough time to discuss
> all these proposals and decide which one to go. Take an example, if we
> choose to fork to only 2MB, since 32MiB already scheduled, reduce it
> from 32MiB to 2MB will be a soft fork.
>
> Anyway, we must code something right now, before it becomes too late.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170328/5780df70/attachment.html>

From jaredr26 at gmail.com  Wed Mar 29 08:45:14 2017
From: jaredr26 at gmail.com (Jared Lee Richardson)
Date: Wed, 29 Mar 2017 01:45:14 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <6d7e8bb9-ef08-70bb-1609-66b063e500f1@mattcorallo.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<6d7e8bb9-ef08-70bb-1609-66b063e500f1@mattcorallo.com>
Message-ID: <CAD1TkXtn=9F8UW1dozRRsOVWzduUdX84EckE2igzAo_ky8EThg@mail.gmail.com>

> That said, for that to be alleviated we
could simply do something based on historical transaction growth (which
is somewhat linear, with a few inflection points),

Where do you get this?  Transaction growth for the last 4 years averages to
+65% per year and the last 2 is +80% per year.  That's very much not linear.



On Tue, Mar 28, 2017 at 10:13 AM, Matt Corallo via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Not sure what "last week's meeting" is in reference to?
>
> Agreed that the hard fork should be well-prepared, but I think its
> dangerous to think that a hard fork as agreed upon would be a simple
> relaxation of the block size. For example, Johnson Lau's previous
> proposal, Spoonnet, which I think is probably one of the better ones,
> would be incompatible with these rules.
>
> I, of course, worry about what happens if we cannot come to consensus on
> a number to soft fork down to, potentially significantly risking miner
> profits (and, thus, the security of Bitcoin) if a group is able to keep
> things "at the status quo". That said, for that to be alleviated we
> could simply do something based on historical transaction growth (which
> is somewhat linear, with a few inflection points), but that number ends
> up being super low (eg somewhere around 2MB at the next halving, which
> SegWit itself already provides :/.
>
> We could, of course, focus on designing a hard fork's activation and
> technical details, with a very large block size increase in it (ie
> closer to 4/6MB at the next halving or so, something we at least could
> be confident we could develop software for), with intention to soft fork
> it back down if miner profits are suffering.
>
> Matt
>
> On 03/28/17 16:59, Wang Chun via bitcoin-dev wrote:
> > I've proposed this hard fork approach last year in Hong Kong Consensus
> > but immediately rejected by coredevs at that meeting, after more than
> > one year it seems that lots of people haven't heard of it. So I would
> > post this here again for comment.
> >
> > The basic idea is, as many of us agree, hard fork is risky and should
> > be well prepared. We need a long time to deploy it.
> >
> > Despite spam tx on the network, the block capacity is approaching its
> > limit, and we must think ahead. Shall we code a patch right now, to
> > remove the block size limit of 1MB, but not activate it until far in
> > the future. I would propose to remove the 1MB limit at the next block
> > halving in spring 2020, only limit the block size to 32MiB which is
> > the maximum size the current p2p protocol allows. This patch must be
> > in the immediate next release of Bitcoin Core.
> >
> > With this patch in core's next release, Bitcoin works just as before,
> > no fork will ever occur, until spring 2020. But everyone knows there
> > will be a fork scheduled. Third party services, libraries, wallets and
> > exchanges will have enough time to prepare for it over the next three
> > years.
> >
> > We don't yet have an agreement on how to increase the block size
> > limit. There have been many proposals over the past years, like
> > BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
> > on. These hard fork proposals, with this patch already in Core's
> > release, they all become soft fork. We'll have enough time to discuss
> > all these proposals and decide which one to go. Take an example, if we
> > choose to fork to only 2MB, since 32MiB already scheduled, reduce it
> > from 32MiB to 2MB will be a soft fork.
> >
> > Anyway, we must code something right now, before it becomes too late.
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/5cb7adbe/attachment-0001.html>

From jaredr26 at gmail.com  Wed Mar 29 09:16:43 2017
From: jaredr26 at gmail.com (Jared Lee Richardson)
Date: Wed, 29 Mar 2017 02:16:43 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAMBsKS9n7Mxd2LwXwSXUjHbBQj932QQW7-CnXe10tia6Ga0iBQ@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAMBsKS8oSKS5g8UEyCu18bjzGJWpA+sJEaxBUV9FXAmXhX1ApA@mail.gmail.com>
	<RO1P152MB16424A3706E408DA163B1D95F5320@RO1P152MB1642.LAMP152.PROD.OUTLOOK.COM>
	<CAMBsKS9n7Mxd2LwXwSXUjHbBQj932QQW7-CnXe10tia6Ga0iBQ@mail.gmail.com>
Message-ID: <CAD1TkXtv8PO5-5SNZ7uKyotMPNdx4iV44UmCwtSnFs1QTdG7yA@mail.gmail.com>

> I suggest you take a look at this paper: http://fc16.ifca.ai/
bitcoin/papers/CDE+16.pdf  It may help you form opinions based in science
rather than what appears to be nothing more than a hunch.  It shows that
even 4MB is unsafe.  SegWit provides up to this limit.

I find this paper wholly unconvincing.  Firstly I note that he assumes the
price of electricity is 10c/kwh in Oct 2015.  As a miner operating and
building large farms at that time, I can guarantee you that almost no large
mines were paying anything even close to that high for electricity, even
then.  If he had performed a detailed search on the big mines he would have
found as much, or could have asked, but it seems like it was simply made
up.  Even U.S. industrial electricity prices are lower than that.

Moreover, he focuses his math almost entirely around mining, asserting in
table 1 that 98% of the "cost of processing a transaction" as being
mining.  That completely misunderstands the purpose of mining.  Miners
occasionally trivially resolve double spend conflicts, but miners are
paid(and played against eachother) for economic security against
attackers.  They aren't paid to process transactions.  Nodes process
transactions and are paid nothing to do so, and their costs are 100x more
relevant to the blocksize debate than a paper about miner costs.  Miner's
operational costs relate to economic protection formulas, not the cost of a
transaction.

He also states: "the top 10% of nodes receive a 1MB block 2.4min earlier
than the bottom 10% ? meaning that depending on their access to nodes, some
miners could obtain a significant and unfair lead over others in solving
hash puzzles."

He's using 2012-era logic of mining.  By October 2015, no miner of any size
was in the bottom 10% of node propagation.  If they were a small or medium
sized miner, they mined shares on a pool and would be at most 30 seconds
behind the pool.  Pools that didn't get blocks within 20 seconds weren't
pools for long.  If they were a huge miner, they ran their own pool with
good propagation times.  For a scientific paper, this is reading like
someone who had absolutely no idea what was really going on in the mining
world at the time.  But again, none of that relates to transaction "costs."
 Transactions cost nodes money; protecting the network costs miners money.
Miners are rewarded with fees; nodes are rewarded only by utility and price
increases.

On Tue, Mar 28, 2017 at 10:53 AM, Alphonse Pace via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Juan,
>
> I suggest you take a look at this paper: http://fc16.ifca.ai/
> bitcoin/papers/CDE+16.pdf  It may help you form opinions based in science
> rather than what appears to be nothing more than a hunch.  It shows that
> even 4MB is unsafe.  SegWit provides up to this limit.
>
> 8MB is most definitely not safe today.
>
> Whether it is unsafe or impossible is the topic, since Wang Chun proposed
> making the block size limit 32MiB.
>
>
> Wang Chun,
>
> Can you specify what meeting you are talking about?  You seem to have not
> replied on that point.  Who were the participants and what was the purpose
> of this meeting?
>
> -Alphonse
>
> On Tue, Mar 28, 2017 at 12:33 PM, Juan Garavaglia <jg at 112bit.com> wrote:
>
>> Alphonse,
>>
>>
>>
>> In my opinion if 1MB limit was ok in 2010, 8MB limit is ok on 2016 and
>> 32MB limit valid in next halving, from network, storage and CPU perspective
>> or 1MB was too high in 2010 what is possible or 1MB is to low today.
>>
>>
>>
>> If is unsafe or impossible to raise the blocksize is a different topic.
>>
>
>>
>> Regards
>>
>>
>>
>> Juan
>>
>>
>>
>>
>>
>> *From:* bitcoin-dev-bounces at lists.linuxfoundation.org [mailto:
>> bitcoin-dev-bounces at lists.linuxfoundation.org] *On Behalf Of *Alphonse
>> Pace via bitcoin-dev
>> *Sent:* Tuesday, March 28, 2017 2:24 PM
>> *To:* Wang Chun <1240902 at gmail.com>; Bitcoin Protocol Discussion <
>> bitcoin-dev at lists.linuxfoundation.org>
>> *Subject:* Re: [bitcoin-dev] Hard fork proposal from last week's meeting
>>
>>
>>
>> What meeting are you referring to?  Who were the participants?
>>
>>
>>
>> Removing the limit but relying on the p2p protocol is not really a true
>> 32MiB limit, but a limit of whatever transport methods provide.  This can
>> lead to differing consensus if alternative layers for relaying are used.
>> What you seem to be asking for is an unbound block size (or at least
>> determined by whatever miners produce).  This has the possibility (and even
>> likelihood) of removing many participants from the network, including many
>> small miners.
>>
>>
>>
>> 32MB in less than 3 years also appears to be far beyond limits of safety
>> which are known to exist far sooner, and we cannot expect hardware and
>> networking layers to improve by those amounts in that time.
>>
>>
>>
>> It also seems like it would be much better to wait until SegWit activates
>> in order to truly measure the effects on the network from this increased
>> capacity before committing to any additional increases.
>>
>>
>>
>> -Alphonse
>>
>>
>>
>>
>>
>>
>>
>> On Tue, Mar 28, 2017 at 11:59 AM, Wang Chun via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>> I've proposed this hard fork approach last year in Hong Kong Consensus
>> but immediately rejected by coredevs at that meeting, after more than
>> one year it seems that lots of people haven't heard of it. So I would
>> post this here again for comment.
>>
>> The basic idea is, as many of us agree, hard fork is risky and should
>> be well prepared. We need a long time to deploy it.
>>
>> Despite spam tx on the network, the block capacity is approaching its
>> limit, and we must think ahead. Shall we code a patch right now, to
>> remove the block size limit of 1MB, but not activate it until far in
>> the future. I would propose to remove the 1MB limit at the next block
>> halving in spring 2020, only limit the block size to 32MiB which is
>> the maximum size the current p2p protocol allows. This patch must be
>> in the immediate next release of Bitcoin Core.
>>
>> With this patch in core's next release, Bitcoin works just as before,
>> no fork will ever occur, until spring 2020. But everyone knows there
>> will be a fork scheduled. Third party services, libraries, wallets and
>> exchanges will have enough time to prepare for it over the next three
>> years.
>>
>> We don't yet have an agreement on how to increase the block size
>> limit. There have been many proposals over the past years, like
>> BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
>> on. These hard fork proposals, with this patch already in Core's
>> release, they all become soft fork. We'll have enough time to discuss
>> all these proposals and decide which one to go. Take an example, if we
>> choose to fork to only 2MB, since 32MiB already scheduled, reduce it
>> from 32MiB to 2MB will be a soft fork.
>>
>> Anyway, we must code something right now, before it becomes too late.
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/c0cf92f1/attachment.html>

From martin.lizner at gmail.com  Wed Mar 29 07:49:31 2017
From: martin.lizner at gmail.com (=?UTF-8?Q?Martin_L=C3=ADzner?=)
Date: Wed, 29 Mar 2017 09:49:31 +0200
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
Message-ID: <CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>

If there should be a hard-fork, Core team should author the code. Other dev
teams have marginal support among all BTC users.

Im tending to believe, that HF is necessary evil now. But lets do it in
conservative approach:
- Fix historical BTC issues, improve code
- Plan HF activation date well ahead - 12 months+
- Allow increasing block size on year-year basis as Luke suggested
- Compromise with miners on initial block size bump (e.g. 2MB)
- SegWit

Martin Lizner

On Tue, Mar 28, 2017 at 6:59 PM, Wang Chun via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> I've proposed this hard fork approach last year in Hong Kong Consensus
> but immediately rejected by coredevs at that meeting, after more than
> one year it seems that lots of people haven't heard of it. So I would
> post this here again for comment.
>
> The basic idea is, as many of us agree, hard fork is risky and should
> be well prepared. We need a long time to deploy it.
>
> Despite spam tx on the network, the block capacity is approaching its
> limit, and we must think ahead. Shall we code a patch right now, to
> remove the block size limit of 1MB, but not activate it until far in
> the future. I would propose to remove the 1MB limit at the next block
> halving in spring 2020, only limit the block size to 32MiB which is
> the maximum size the current p2p protocol allows. This patch must be
> in the immediate next release of Bitcoin Core.
>
> With this patch in core's next release, Bitcoin works just as before,
> no fork will ever occur, until spring 2020. But everyone knows there
> will be a fork scheduled. Third party services, libraries, wallets and
> exchanges will have enough time to prepare for it over the next three
> years.
>
> We don't yet have an agreement on how to increase the block size
> limit. There have been many proposals over the past years, like
> BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
> on. These hard fork proposals, with this patch already in Core's
> release, they all become soft fork. We'll have enough time to discuss
> all these proposals and decide which one to go. Take an example, if we
> choose to fork to only 2MB, since 32MiB already scheduled, reduce it
> from 32MiB to 2MB will be a soft fork.
>
> Anyway, we must code something right now, before it becomes too late.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/2a8713c3/attachment-0001.html>

From andrew.baine at gmail.com  Tue Mar 28 14:57:09 2017
From: andrew.baine at gmail.com (Andrew Baine)
Date: Tue, 28 Mar 2017 14:57:09 +0000
Subject: [bitcoin-dev] Inquiry: Transaction Tiering
In-Reply-To: <CAOyfL0pN8Z8XSvHAXkG2=ic=J6m-8B5K2d=_eL=84Dnox3ovMQ@mail.gmail.com>
References: <CAOyfL0pN8Z8XSvHAXkG2=ic=J6m-8B5K2d=_eL=84Dnox3ovMQ@mail.gmail.com>
Message-ID: <CAJxsMusFEDmT4YLhMJT0a6S=Mm0rfNGp6U5QRKApK6KJXU0cLg@mail.gmail.com>

The bitcoin ecosystem is better off the more transactions are propogated
peer-to-peer than directly to miners. We want miners listening to the
network, not soliciting transactions directly from users. You whispering
your transactions to your miner-of-choice while I whisper to mine
contravenes a critical value-add of the peer-to-peer network in my opinion.

On Tue, Mar 28, 2017 at 10:35 AM Martin Stolze via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Hi AJ,
> That's outstanding. I am glad to see that there is actually somebody
> who has made some progress.
>
> > "miners as service providers."
> Great idea! Block space as a resource is under-analyzed.
>
> > miner/pool's political positions, their consensus ideology, physical
> location (yes some people would like only miners in particular countries to
> mine their transactions)
>
> I am not joking when I say that in 3 to 8 years, I want to be able to
> verify my transaction through green blocks that are generated locally
> by my neighbor through the excess capacity of his solar panels or by
> an NGO pool that promotes solar deployment around the equator.
>
> > The main attitude right now is that people would like to 'support'
> miners who signal for the features they care about.
>
> Yes, just selecting all SegWit signaling hash power instead of picking
> individual Authorities would be helpful on preferredminer.com
>
> > I strongly believe, whether the Bitcoin developer community facilitates
> it or not, certain miners will become preferred by users.
>
> Absolutely, considering the recent language used in opinions by the
> ECB and drafts by the EU I see them assembling the artillery. I
> wouldn't be surprised if they start target practice next year. That
> will mean that commercial interest must have a way to transact on
> somewhat regulated space.
>
> > 1) By creating 'segregated mempools' where an authenticated third-party
> like my web service Preferred Miner manages the access to pending
> transactions destined for a specific set of miners
>
> I would call it regulated block space or regulated consensus space. I
> hope that we can do that on a deeper level, as part of the p2p
> protocol layer.
>
> > 2) by creating transactions where the mining fee is in one way or
> another, an output to an address owned by the preferred miner(s).
>
> That's a distinct function, e.g. at least some communities charge a tax.
> [1]
> I fear it is more likely that a business, say Coinbase, will approach
> a "miner" and just say "we pay 100 USD for a KB to your bank account,
> here are our transactions with no fee". It will literally be an
> off-chain fee. That's what I mean by "secondary market". This would be
> one of the least appealing scenarios.
>
> > There are some terrible pitfalls with both of these methods. [...]
>
> Spot on, that's why this should receive some attention before it
> becomes urgent. I think there is much more to it that we are missing
> at the moment, e.g. Tom: "Using xthin/compact blocks miners only send
> a tiny version of a block which then causes the receiving node to
> re-create it using the memory pool."
>
>
> [1] http://thebitcoin.foundation/declaration.txt
>
>
>
> > From: AJ West <ajwest at gmail.com>
> > To: bitcoin-dev at lists.linuxfoundation.org
> > Cc:
> > Bcc:
> > Date: Mon, 27 Mar 2017 12:29:20 -0400
> > Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering
> > Hi I'm AJ West, I made a service http://preferredminer.com which is a
> proof-of-concept project designed to spur discussion on exactly this issue
> of "miners as service providers."
> >
> > The current status is that Bitcoin end users are looking to support
> specific miners, whether that's because they agree with a miner/pool's
> political positions, their consensus ideology, physical location (yes some
> people would like only miners in particular countries to mine their
> transactions) and the list of reasons goes on. The main attitude right now
> is that people would like to 'support' miners who signal for the features
> they care about.
> >
> > I strongly believe, whether the Bitcoin developer community facilitates
> it or not, certain miners will become preferred by users. In summary, there
> are realistically two proposed ways of providing this service in the
> present-day situation: 1) By creating 'segregated mempools' where an
> authenticated third-party like my web service Preferred Miner manages the
> access to pending transactions destined for a specific set of miners, and
> 2) by creating transactions where the mining fee is in one way or another,
> an output to an address owned by the preferred miner(s).
> >
> > There are some terrible pitfalls with both of these methods. The first
> being that you have to trust a lot of people, including the 3rd party (me)
> and the pools to work in your users' interest ("don't give my transactions
> to other miners or broadcast to mempool please"). Then there are the extra
> fees users will have to pay to offset the risk of a miner losing out for
> having to send the network a not-yet-broadcasted transaction. And finally,
> the other method requires that they be larger transactions, and a directory
> of mining pools' receiving addresses for outputs must be maintained. Then
> you have to hope the miner will be setup to scoop in your transaction
> knowing it's got a fee for them. Plus, how many nodes going forward are
> going to hold what seem to be 0-fee transactions in mempool (because the
> fee is in the outputs)?
> >
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170328/a83fafa5/attachment-0001.html>

From martin at stolze.cc  Tue Mar 28 19:51:02 2017
From: martin at stolze.cc (Martin Stolze)
Date: Tue, 28 Mar 2017 20:51:02 +0100
Subject: [bitcoin-dev] Inquiry: Transaction Tiering
In-Reply-To: <7CmgrdJ_lxx6nto8dmMO3P89LK0x9HtUjTMtNklCFKbdIjN6KDauYZqf3get3gufCcoMarQ1cnvqJcnfxQsO83fvixWCm1xL6BrHort8v3E=@protonmail.com>
References: <CAOyfL0r8dLR=7Co5+YzbPQUeTs6Lw+OQjZTy=iyoDmr6VV_Qpw@mail.gmail.com>
	<Rs51ijp6P21vJsv7OxVB-k8vuJC_aUd8KnpxHC3phNw_lPieY2lS-k95gytpHTNzzBfuX030RRFKzrrwS3pfjTuFea_eUfErb3qDp5LDHp4=@protonmail.com>
	<CAOyfL0qW=8091BAo9R2mskbyFSS3hOnXd+Wjsu4LQy7EtqzJjg@mail.gmail.com>
	<fFz3k0NstFYpKctCaSKDrhPnkInjW3GgQ-3FIyokzdl_SScKjXptQsn8jnW71ax_oknq9hI8gUBllYaKo_9hMiBASSJtkL6xXN_NX8tcmXw=@protonmail.com>
	<CAOyfL0pnkf4gOAJHgOSJgz2RLGupvQtcHewEijBHz9GWnr0rAw@mail.gmail.com>
	<7CmgrdJ_lxx6nto8dmMO3P89LK0x9HtUjTMtNklCFKbdIjN6KDauYZqf3get3gufCcoMarQ1cnvqJcnfxQsO83fvixWCm1xL6BrHort8v3E=@protonmail.com>
Message-ID: <CAOyfL0oCs6-N6MXQob0CqKS2Vr8ZFZOud==b9vsSYxLceYix-A@mail.gmail.com>

As I alluded to before, certain language lends itself to simple conclusions.
You say that "miner" have simple profit motives and compete only in
their respective domains. But what is "mining"?

It is the process of acquiring a part of the block space. He who
acquires that space can decide over this particular space. (1) Your
entire theory falls apart at the point of an empty block. (2) "The
pursuit of profit can come at the expense of Bitcoin:"
(https://twitter.com/ToneVays/status/835233366203072513). (3) Bitcoin
has additional value, like a brand value that could be diverted.
- The market can be gamed for profit. Really.

> So... miners don't really have any authority.

I fall back on Carl Schmitt according to which the sovereign is he who
decides on the state of exception: If there is some person or
institution, in a given polity, capable of bringing about a total
suspension of the law and then to use extra-legal force to normalize
the situation, then that person or institution is the sovereign in
that polity.
- That is spot on, I don't know why the rest of the political theory
shouldn't apply.

> Using miner signalling to determine when/whether SegWit is activated [...]

I didn't think of that, but you are right. The problem is just that it
didn't just give them the impression that they have authority, it
actually transferred the authority.

Again: "The question is simply what legitimate authority a node has."
- You gave legitimacy to their authority! Core did!
(Conversely, the intelligence service of some dictatorship may get
enough hash power to claim authority over the block space, however,
this would have zero legitimacy and could easily be dealt with.)

:(

miner signaling ... just "miner", right?

Thanks for helping me understand.
Martin


On Tue, Mar 28, 2017 at 8:02 AM, praxeology_guy
<praxeology_guy at protonmail.com> wrote:
> Martin:
>
> Re: Block Space Authority, or "authority": in general
>
> An authority dictates policy.
>
> Authority arises in 4 cases off the top of my head:
> - Authority because entity threats violence/dominance
> - Authority because entity's claim to property is respected to maintain
> friendship/benefits of specialization and trade. (one has authority over
> one's own property/business/contractually agreed claims)
> - Authority because entity claims divine inspiration, and others accept such
> a claim
> - Authority because entity gained respect and was voluntarily delegated
>
> "Miners" do not fit in any of these categories.  In fact "miners" do the
> exact opposite, their policy is dictated by market demand.  They do us the
> service of creating block candidates.  If a miner is a good businessman, he
> mines whatever currency gives him the most profit.  The end users decide the
> policy and which currency is worth anything.  Hence the users are the ones
> dictating to the miners how much work they should perform on each coin.
>
> Miners compete against each other until there is only very slim profit.  If
> they are devoting too much work to a coin they spend too much on
> energy/computers/network, and they have losses, so they reduce capacity on
> that coin.  If mining a coin is extremely profitable, they expand their work
> until there is no profit.
>
> So... miners don't really have any authority.  Or if for some reason
> somebody does give them authority, its due to either the Divine (lol
> unlikely) or Respect reasons above... which is an unfounded/insecure reason.
>
> Using miner signalling to determine when/whether SegWit is activated was a
> mistake in any extent that gave people the implication that miners have any
> authority.  It was a poor way to schedule its activation. We assumed that
> the miners would activate it in a reasonable time because SegWit is
> undeniably good, so we just used this method to try to prevent a soft fork.
> Instead I recommend my proposed BitcoinUpdateBoard
> https://pastebin.com/ikBGPVfR.  Or bitcoin core could include more entities
> such as specific miners and exchanges in their table located here:
> https://bitcoincore.org/en/segwit_adoption/.
>
> We already have come to consensus that SegWit is good.  So we should just
> schedule a date to activate it in the future where market participants have
> a reasonable time to prepare.
>
> Cheers,
> Praxeology Guy

From tomz at freedommail.ch  Wed Mar 29 08:49:38 2017
From: tomz at freedommail.ch (Tom Zander)
Date: Wed, 29 Mar 2017 10:49:38 +0200
Subject: [bitcoin-dev] Requirement for pseudonymous BIP submissions
In-Reply-To: <CAGL6+mEnGNdAggHZs=ZM_QHbts63exE1ydstK+w-gUnm=4JLTA@mail.gmail.com>
References: <CAGL6+mEnGNdAggHZs=ZM_QHbts63exE1ydstK+w-gUnm=4JLTA@mail.gmail.com>
Message-ID: <2003815.trufugliNn@strawberry>

On Saturday, 18 March 2017 16:23:16 CEST Chris Stewart via bitcoin-dev 
wrote:
> As everyone in the Bitcoin space knows, there is a massive scaling debate
> going on. One side wants to increase the block size via segwit, while the
> other side wants to increase via hard fork. I have strong opinions on the
> topic but I won?t discuss them here. The point of the matter is we are
> seeing the politicization of protocol level changes.

I agree with your assessment, the sides are political and picking sides 
makes people a target.
For that reason I know that many companies are not picking sides, we?ve seen 
some bad stuff happen to companies that did.

I?m not convnced it makes sense to use anonymous, but provable, identities 
is the way to solve this. Though.

I also don?t believe people are rejecting proposals purely based on the 
name. What I see is that pratically all proposals are ignored for the time 
being becaues we can?t make any changes anyway until we have made a protocol 
upgrade and came out stronger.
I do agree that bips are seen politically, but not based on the person that 
suggests them, but more based on the content being useful for their 
political side.

I am not entirely against pseudonymous submissions, but in that case I think 
it should be carried by a well known member of the Bitcoin community.

This raises the bar somewhat to a point where you have to convince someone 
that is already publicly known to propose it with you.
-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From tomz at freedommail.ch  Wed Mar 29 09:04:18 2017
From: tomz at freedommail.ch (Tom Zander)
Date: Wed, 29 Mar 2017 11:04:18 +0200
Subject: [bitcoin-dev] Inquiry: Transaction Tiering
In-Reply-To: <CAOyfL0oQrHzDmHBnWo0pTdbVU7acnsLmikTh9NU_u6HnhT4VCw@mail.gmail.com>
References: <CAOyfL0oQrHzDmHBnWo0pTdbVU7acnsLmikTh9NU_u6HnhT4VCw@mail.gmail.com>
Message-ID: <2621205.8A4FuXh9CI@strawberry>

On Monday, 20 March 2017 21:12:36 CEST Martin Stolze via bitcoin-dev wrote:
> Background: The current protocol enables two parties to transact
> freely, however, transaction processors (block generators) have the
> authority to discriminate participants arbitrarily.

Nag; they don?t have any authority.

> This is well known
> and it is widely accepted that transaction processors may take
> advantage of this with little recourse. It is the current consensus
> that the economic incentives in form of transaction fees are
> sufficient because the transaction processing authorities are assumed
> to be guided by the growth of Bitcoin and the pursuit of profit.

This is not the case, it misunderstands Bitcoin and specifically is 
misunderstands that Bitcoin is distributed and decentralized.

What you call ?block generators? or ?transaction processors? are in reality 
called miners and they don?t have any authority to mine or not mine certain 
transactions. All they have is a business incentive to mine or not mine a 
certain transaction.
This is a crucial distinction as that makes it a economical decision, not a 
political.

The massive distribution of miners creating blocks means that one miner is 
free to add his political agenda. They can choose to not mine any satoshi-
dice transactions, should they want. But they can?t stop other miners from 
mining those transactions anyway, and as such this is not a political move 
that has any effect whatsoever, at the end of the day it is just an 
economcal decision.

The rest of your email is based on this misconception as well, and therefore 
the above answers your question.
-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From martin at stolze.cc  Wed Mar 29 12:48:42 2017
From: martin at stolze.cc (Martin Stolze)
Date: Wed, 29 Mar 2017 13:48:42 +0100
Subject: [bitcoin-dev] Inquiry: Transaction Tiering
In-Reply-To: <2621205.8A4FuXh9CI@strawberry>
References: <CAOyfL0oQrHzDmHBnWo0pTdbVU7acnsLmikTh9NU_u6HnhT4VCw@mail.gmail.com>
	<2621205.8A4FuXh9CI@strawberry>
Message-ID: <CAOyfL0oQ8dKECqSdguo5NnSpdVcYMkNKT1pWC8+aGsG2HOY-0Q@mail.gmail.com>

Ignoring your contradiction of the political and economical. Your
conception holds under the presupposition that all action of
hash-power is motivated by 'rational' economic interest. Specifically
a very strict distinction between the profitable and the unprofitable;
namely to include transactions based on "business incentive",
presumably on-chain fees.

I am afraid that this conception is a rickety crutch, unfit to
navigate current reality.


On Wed, Mar 29, 2017 at 10:04 AM, Tom Zander <tomz at freedommail.ch> wrote:
> On Monday, 20 March 2017 21:12:36 CEST Martin Stolze via bitcoin-dev wrote:
>> Background: The current protocol enables two parties to transact
>> freely, however, transaction processors (block generators) have the
>> authority to discriminate participants arbitrarily.
>
> Nag; they don?t have any authority.
>
>> This is well known
>> and it is widely accepted that transaction processors may take
>> advantage of this with little recourse. It is the current consensus
>> that the economic incentives in form of transaction fees are
>> sufficient because the transaction processing authorities are assumed
>> to be guided by the growth of Bitcoin and the pursuit of profit.
>
> This is not the case, it misunderstands Bitcoin and specifically is
> misunderstands that Bitcoin is distributed and decentralized.
>
> What you call ?block generators? or ?transaction processors? are in reality
> called miners and they don?t have any authority to mine or not mine certain
> transactions. All they have is a business incentive to mine or not mine a
> certain transaction.
> This is a crucial distinction as that makes it a economical decision, not a
> political.
>
> The massive distribution of miners creating blocks means that one miner is
> free to add his political agenda. They can choose to not mine any satoshi-
> dice transactions, should they want. But they can?t stop other miners from
> mining those transactions anyway, and as such this is not a political move
> that has any effect whatsoever, at the end of the day it is just an
> economcal decision.
>
> The rest of your email is based on this misconception as well, and therefore
> the above answers your question.
> --
> Tom Zander
> Blog: https://zander.github.io
> Vlog: https://vimeo.com/channels/tomscryptochannel

From martin at stolze.cc  Wed Mar 29 12:51:47 2017
From: martin at stolze.cc (Martin Stolze)
Date: Wed, 29 Mar 2017 13:51:47 +0100
Subject: [bitcoin-dev] Inquiry: Transaction Tiering
In-Reply-To: <CAJxsMusFEDmT4YLhMJT0a6S=Mm0rfNGp6U5QRKApK6KJXU0cLg@mail.gmail.com>
References: <CAOyfL0pN8Z8XSvHAXkG2=ic=J6m-8B5K2d=_eL=84Dnox3ovMQ@mail.gmail.com>
	<CAJxsMusFEDmT4YLhMJT0a6S=Mm0rfNGp6U5QRKApK6KJXU0cLg@mail.gmail.com>
Message-ID: <CAOyfL0qxJfptnMhnbAs6ktbpkTx-a9YL7m1OSstWe-Cgd7SjyA@mail.gmail.com>

Sure it will be somewhat controversial initially, however, "miners",
will have additional incentive to listen to the network in order to
get transactions. It's not taking away from your personal choice, it's
adding additional choice to those that are disenfranchised by
hash-power centralization.

On Tue, Mar 28, 2017 at 3:57 PM, Andrew Baine <andrew.baine at gmail.com> wrote:
> The bitcoin ecosystem is better off the more transactions are propogated
> peer-to-peer than directly to miners. We want miners listening to the
> network, not soliciting transactions directly from users. You whispering
> your transactions to your miner-of-choice while I whisper to mine
> contravenes a critical value-add of the peer-to-peer network in my opinion.
>
> On Tue, Mar 28, 2017 at 10:35 AM Martin Stolze via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>> Hi AJ,
>> That's outstanding. I am glad to see that there is actually somebody
>> who has made some progress.
>>
>> > "miners as service providers."
>> Great idea! Block space as a resource is under-analyzed.
>>
>> > miner/pool's political positions, their consensus ideology, physical
>> > location (yes some people would like only miners in particular countries to
>> > mine their transactions)
>>
>> I am not joking when I say that in 3 to 8 years, I want to be able to
>> verify my transaction through green blocks that are generated locally
>> by my neighbor through the excess capacity of his solar panels or by
>> an NGO pool that promotes solar deployment around the equator.
>>
>> > The main attitude right now is that people would like to 'support'
>> > miners who signal for the features they care about.
>>
>> Yes, just selecting all SegWit signaling hash power instead of picking
>> individual Authorities would be helpful on preferredminer.com
>>
>> > I strongly believe, whether the Bitcoin developer community facilitates
>> > it or not, certain miners will become preferred by users.
>>
>> Absolutely, considering the recent language used in opinions by the
>> ECB and drafts by the EU I see them assembling the artillery. I
>> wouldn't be surprised if they start target practice next year. That
>> will mean that commercial interest must have a way to transact on
>> somewhat regulated space.
>>
>> > 1) By creating 'segregated mempools' where an authenticated third-party
>> > like my web service Preferred Miner manages the access to pending
>> > transactions destined for a specific set of miners
>>
>> I would call it regulated block space or regulated consensus space. I
>> hope that we can do that on a deeper level, as part of the p2p
>> protocol layer.
>>
>> > 2) by creating transactions where the mining fee is in one way or
>> > another, an output to an address owned by the preferred miner(s).
>>
>> That's a distinct function, e.g. at least some communities charge a tax.
>> [1]
>> I fear it is more likely that a business, say Coinbase, will approach
>> a "miner" and just say "we pay 100 USD for a KB to your bank account,
>> here are our transactions with no fee". It will literally be an
>> off-chain fee. That's what I mean by "secondary market". This would be
>> one of the least appealing scenarios.
>>
>> > There are some terrible pitfalls with both of these methods. [...]
>>
>> Spot on, that's why this should receive some attention before it
>> becomes urgent. I think there is much more to it that we are missing
>> at the moment, e.g. Tom: "Using xthin/compact blocks miners only send
>> a tiny version of a block which then causes the receiving node to
>> re-create it using the memory pool."
>>
>>
>> [1] http://thebitcoin.foundation/declaration.txt
>>
>>
>>
>> > From: AJ West <ajwest at gmail.com>
>> > To: bitcoin-dev at lists.linuxfoundation.org
>> > Cc:
>> > Bcc:
>> > Date: Mon, 27 Mar 2017 12:29:20 -0400
>> > Subject: Re: [bitcoin-dev] Inquiry: Transaction Tiering
>> > Hi I'm AJ West, I made a service http://preferredminer.com which is a
>> > proof-of-concept project designed to spur discussion on exactly this issue
>> > of "miners as service providers."
>> >
>> > The current status is that Bitcoin end users are looking to support
>> > specific miners, whether that's because they agree with a miner/pool's
>> > political positions, their consensus ideology, physical location (yes some
>> > people would like only miners in particular countries to mine their
>> > transactions) and the list of reasons goes on. The main attitude right now
>> > is that people would like to 'support' miners who signal for the features
>> > they care about.
>> >
>> > I strongly believe, whether the Bitcoin developer community facilitates
>> > it or not, certain miners will become preferred by users. In summary, there
>> > are realistically two proposed ways of providing this service in the
>> > present-day situation: 1) By creating 'segregated mempools' where an
>> > authenticated third-party like my web service Preferred Miner manages the
>> > access to pending transactions destined for a specific set of miners, and 2)
>> > by creating transactions where the mining fee is in one way or another, an
>> > output to an address owned by the preferred miner(s).
>> >
>> > There are some terrible pitfalls with both of these methods. The first
>> > being that you have to trust a lot of people, including the 3rd party (me)
>> > and the pools to work in your users' interest ("don't give my transactions
>> > to other miners or broadcast to mempool please"). Then there are the extra
>> > fees users will have to pay to offset the risk of a miner losing out for
>> > having to send the network a not-yet-broadcasted transaction. And finally,
>> > the other method requires that they be larger transactions, and a directory
>> > of mining pools' receiving addresses for outputs must be maintained. Then
>> > you have to hope the miner will be setup to scoop in your transaction
>> > knowing it's got a fee for them. Plus, how many nodes going forward are
>> > going to hold what seem to be 0-fee transactions in mempool (because the fee
>> > is in the outputs)?
>> >
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From tomz at freedommail.ch  Wed Mar 29 13:10:05 2017
From: tomz at freedommail.ch (Tom Zander)
Date: Wed, 29 Mar 2017 15:10:05 +0200
Subject: [bitcoin-dev] Inquiry: Transaction Tiering
In-Reply-To: <CAOyfL0oQ8dKECqSdguo5NnSpdVcYMkNKT1pWC8+aGsG2HOY-0Q@mail.gmail.com>
References: <CAOyfL0oQrHzDmHBnWo0pTdbVU7acnsLmikTh9NU_u6HnhT4VCw@mail.gmail.com>
	<2621205.8A4FuXh9CI@strawberry>
	<CAOyfL0oQ8dKECqSdguo5NnSpdVcYMkNKT1pWC8+aGsG2HOY-0Q@mail.gmail.com>
Message-ID: <4920805.zy6vSeDdRr@cherry>

On Wednesday, 29 March 2017 14:48:42 CEST Martin Stolze wrote:
> Your
> conception holds under the presupposition that all action of
> hash-power is motivated by 'rational' economic interest.

This shows you didn't think this through,

instead, the concept holds true when there is even a small section of hash 
power motivated by rational economic interest.

Your claim that it has to be 100% of the miners that need to be honest is 
something I already addressed in the previous email when I wrote its a 
distributed system.

Since this is an open market, the requirement of a secton of miners being 
honest is pretty trivial to fulful, especially since Bitcoins are worth 
quite a lot which makes greed be the main cause of honest miners.

This is the best part, greedy miners are the ones that end up working inside 
the system.

This is very quickly going off-topic. I suggest you to take it to a 
different forum where more people can explain Bitcoin without spamming the 
dev list.
-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From jl2012 at xbt.hk  Wed Mar 29 15:34:41 2017
From: jl2012 at xbt.hk (Johnson Lau)
Date: Wed, 29 Mar 2017 23:34:41 +0800
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAPkFh0uGcN=6Sgyb5z61h36CS3-VfNHZDHoM+hpqmKFdF+_L0A@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAMBsKS8oSKS5g8UEyCu18bjzGJWpA+sJEaxBUV9FXAmXhX1ApA@mail.gmail.com>
	<RO1P152MB16424A3706E408DA163B1D95F5320@RO1P152MB1642.LAMP152.PROD.OUTLOOK.COM>
	<CAMBsKS9n7Mxd2LwXwSXUjHbBQj932QQW7-CnXe10tia6Ga0iBQ@mail.gmail.com>
	<RO1P152MB16428E9EFBF561B2642C3B0BF5320@RO1P152MB1642.LAMP152.PROD.OUTLOOK.COM>
	<CAPkFh0uGcN=6Sgyb5z61h36CS3-VfNHZDHoM+hpqmKFdF+_L0A@mail.gmail.com>
Message-ID: <1471A2C5-C72C-46EB-8C7A-C2FAF705E88B@xbt.hk>


> On 29 Mar 2017, at 14:24, Emin G?n Sirer via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> >Even when several of the experts involved in the document you refer has my respect and admiration, I do not agree with some of their conclusions
> 
> I'm one of the co-authors of that study. I'd be the first to agree with your conclusion
> and argue that the 4MB size suggested in that paper should not be used without
> compensation for two important changes to the network.
> 
> Our recent measurements of the Bitcoin P2P network show that network speeds
> have improved tremendously. From February 2016 to February 2017, the average
> provisioned bandwidth of a reachable Bitcoin node went up by approximately 70%. 
> And that's just in the last year.

4 * 144 * 30 = 17.3GB per month, or 207GB per year. Full node initialisation will become prohibitive for most users until a shortcut is made (e.g. witness pruning and UTXO commitment but these are not trust-free)

> 
> Further, the emergence of high-speed block relay networks, like Falcon (http://www.falcon-net.org <http://www.falcon-net.org/>)
> and FIBRE, as well as block compression, e.g. BIP152 and xthin, change the picture dramatically. 

Also as the co-author of the selfish mining paper, you should know all these technology assume big miners being benevolent.

> 
> So, the 4MB limit mentioned in our paper should not be used as a protocol limit today. 
> 
> Best,
> - egs
> 
> 
> 
> On Tue, Mar 28, 2017 at 3:36 PM, Juan Garavaglia via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
> Alphonse,
> 
>  
> 
> Even when several of the experts involved in the document you refer has my respect and admiration, I do not agree with some of their conclusions some of their estimations are not accurate other changed like Bootstrap Time, Cost per Confirmed Transaction they consider a network of 450,000,00 GH and today is 3.594.236.966 GH, the energy consumption per GH is old, the cost of electricity is wrong even when the document was made and is hard to find any parameter used that is valid for an analysis today.
> 
>  
> 
> Again with all respect to the experts involved in that analysis is not valid today.
> 
>  
> 
> I tend to believe more in Moore?s law, Butters' Law of Photonics and Kryder?s Law all has been verified for many years and support that 32 MB in 2020 are possible and equals or less than 1 MB in 2010.
> 
>  
> 
> Again may be is not possible Johnson Lau and LukeJr invested a significant amount of time investigating ways to do a safe HF, and may be not possible to do a safe HF today but from processing power, bandwidth and storage is totally valid and Wang Chung proposal has solid grounds.
> 
>  
> 
> Regards
> 
>  
> 
> Juan
> 
>  
> 
>  
> 
> From: Alphonse Pace [mailto:alp.bitcoin at gmail.com <mailto:alp.bitcoin at gmail.com>] 
> Sent: Tuesday, March 28, 2017 2:53 PM
> To: Juan Garavaglia <jg at 112bit.com <mailto:jg at 112bit.com>>; Wang Chun <1240902 at gmail.com <mailto:1240902 at gmail.com>>
> Cc: Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>>
> 
> 
> Subject: Re: [bitcoin-dev] Hard fork proposal from last week's meeting
> 
>  
> 
> Juan,
> 
>  
> 
> I suggest you take a look at this paper: http://fc16.ifca.ai/bitcoin/papers/CDE+16.pdf <http://fc16.ifca.ai/bitcoin/papers/CDE+16.pdf>  It may help you form opinions based in science rather than what appears to be nothing more than a hunch.  It shows that even 4MB is unsafe.  SegWit provides up to this limit.
> 
>  
> 
> 8MB is most definitely not safe today.
> 
>  
> 
> Whether it is unsafe or impossible is the topic, since Wang Chun proposed making the block size limit 32MiB.  
> 
>  
> 
>  
> 
> Wang Chun,
> 
> 
> Can you specify what meeting you are talking about?  You seem to have not replied on that point.  Who were the participants and what was the purpose of this meeting?
> 
>  
> 
> -Alphonse
> 
>  
> 
> On Tue, Mar 28, 2017 at 12:33 PM, Juan Garavaglia <jg at 112bit.com <mailto:jg at 112bit.com>> wrote:
> 
> Alphonse,
> 
>  
> 
> In my opinion if 1MB limit was ok in 2010, 8MB limit is ok on 2016 and 32MB limit valid in next halving, from network, storage and CPU perspective or 1MB was too high in 2010 what is possible or 1MB is to low today.
> 
>  
> 
> If is unsafe or impossible to raise the blocksize is a different topic. 
> 
>  
> 
> Regards
> 
>  
> 
> Juan
> 
>  
> 
>  
> 
> From: bitcoin-dev-bounces at lists.linuxfoundation.org <mailto:bitcoin-dev-bounces at lists.linuxfoundation.org> [mailto:bitcoin-dev-bounces at lists.linuxfoundation.org <mailto:bitcoin-dev-bounces at lists.linuxfoundation.org>] On Behalf Of Alphonse Pace via bitcoin-dev
> Sent: Tuesday, March 28, 2017 2:24 PM
> To: Wang Chun <1240902 at gmail.com <mailto:1240902 at gmail.com>>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>>
> Subject: Re: [bitcoin-dev] Hard fork proposal from last week's meeting
> 
>  
> 
> What meeting are you referring to?  Who were the participants?
> 
>  
> 
> Removing the limit but relying on the p2p protocol is not really a true 32MiB limit, but a limit of whatever transport methods provide.  This can lead to differing consensus if alternative layers for relaying are used.  What you seem to be asking for is an unbound block size (or at least determined by whatever miners produce).  This has the possibility (and even likelihood) of removing many participants from the network, including many small miners.  
> 
>  
> 
> 32MB in less than 3 years also appears to be far beyond limits of safety which are known to exist far sooner, and we cannot expect hardware and networking layers to improve by those amounts in that time.
> 
>  
> 
> It also seems like it would be much better to wait until SegWit activates in order to truly measure the effects on the network from this increased capacity before committing to any additional increases.
> 
>  
> 
> -Alphonse
> 
>  
> 
>  
> 
>  
> 
> On Tue, Mar 28, 2017 at 11:59 AM, Wang Chun via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
> 
> I've proposed this hard fork approach last year in Hong Kong Consensus
> but immediately rejected by coredevs at that meeting, after more than
> one year it seems that lots of people haven't heard of it. So I would
> post this here again for comment.
> 
> The basic idea is, as many of us agree, hard fork is risky and should
> be well prepared. We need a long time to deploy it.
> 
> Despite spam tx on the network, the block capacity is approaching its
> limit, and we must think ahead. Shall we code a patch right now, to
> remove the block size limit of 1MB, but not activate it until far in
> the future. I would propose to remove the 1MB limit at the next block
> halving in spring 2020, only limit the block size to 32MiB which is
> the maximum size the current p2p protocol allows. This patch must be
> in the immediate next release of Bitcoin Core.
> 
> With this patch in core's next release, Bitcoin works just as before,
> no fork will ever occur, until spring 2020. But everyone knows there
> will be a fork scheduled. Third party services, libraries, wallets and
> exchanges will have enough time to prepare for it over the next three
> years.
> 
> We don't yet have an agreement on how to increase the block size
> limit. There have been many proposals over the past years, like
> BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
> on. These hard fork proposals, with this patch already in Core's
> release, they all become soft fork. We'll have enough time to discuss
> all these proposals and decide which one to go. Take an example, if we
> choose to fork to only 2MB, since 32MiB already scheduled, reduce it
> from 32MiB to 2MB will be a soft fork.
> 
> Anyway, we must code something right now, before it becomes too late.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
>  
> 
>  
> 
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
> 
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/2a360938/attachment-0001.html>

From david.vorick at gmail.com  Wed Mar 29 15:57:19 2017
From: david.vorick at gmail.com (David Vorick)
Date: Wed, 29 Mar 2017 11:57:19 -0400
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>
Message-ID: <CAFVRnyr=cYf34X80+dLHwYEPHdqA7mMtYZ_gD6j09C+aM31gQQ@mail.gmail.com>

On Mar 29, 2017 9:50 AM, "Martin L?zner via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org> wrote:

Im tending to believe, that HF is necessary evil now.


I will firmly disagree. We know how to do a soft-fork blocksize increase.
If it is decided that a block size increase is justified, we can do it with
extension blocks in a way that achieves full backwards compatibility for
all nodes.

Barring a significant security motivation, there is no need to hardfork.

I am also solidly unconvinced that increasing the blocksize today is a good
move, even as little as SegWit does. It's too expensive for a home user to
run a full node, and user-run full nodes are what provide the strongest
defence against political manuveuring.

When considering what block size is acceptable, the impact of running
bitcoin in the background on affordable, non-dedicated home-hardware should
be a top consideration.

Disk space I believe is the most significant problem today, with RAM being
the second most significant problem, and finally bandwidth consumption as
the third most important consideration. I believe that v0.14 is already too
expensive on all three fronts, and that block size increases shouldn't be
considered at all until the requirements are reduced (or until consumer
hardware is better, but I believe we are talking 3-7 years of waiting if we
pick that option).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/873b902d/attachment.html>

From vitteaymeric at gmail.com  Wed Mar 29 16:00:25 2017
From: vitteaymeric at gmail.com (Aymeric Vitte)
Date: Wed, 29 Mar 2017 18:00:25 +0200
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAD1TkXtv8PO5-5SNZ7uKyotMPNdx4iV44UmCwtSnFs1QTdG7yA@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAMBsKS8oSKS5g8UEyCu18bjzGJWpA+sJEaxBUV9FXAmXhX1ApA@mail.gmail.com>
	<RO1P152MB16424A3706E408DA163B1D95F5320@RO1P152MB1642.LAMP152.PROD.OUTLOOK.COM>
	<CAMBsKS9n7Mxd2LwXwSXUjHbBQj932QQW7-CnXe10tia6Ga0iBQ@mail.gmail.com>
	<CAD1TkXtv8PO5-5SNZ7uKyotMPNdx4iV44UmCwtSnFs1QTdG7yA@mail.gmail.com>
Message-ID: <74162cc6-5388-382a-8d28-402045070452@gmail.com>



Le 29/03/2017 ? 11:16, Jared Lee Richardson via bitcoin-dev a ?crit :
> Nodes process transactions and are paid nothing to do so, and their
> costs are 100x more relevant to the blocksize debate than a paper
> about miner costs.
>
> Miners are rewarded with fees; nodes are rewarded only by utility and
> price increases.

Nodes are rewarded by just nothing which is the main problem of the
bitcoin network (who is therefore not a decentralized system today)
although it seems like everybody is eluding the issue (as well as how to
find solutions to setup quickly full nodes as you quoted in another
answer to this thread, and of course design a decentralized system to
make sure that full nodes behave correctly)

Bitcoin would not be in this situation (ie maybe at the mercy of a very
small minority of freeriders among all the entities involved in the
network, ie miners,  just seeking to make more and more money because
they invested in an anti-ecological pow, not understanding that bitcoin
is not just about money) if more nodes were existing and could reject
their blocks

It seems like the initial message of this thread(t) is an ultimatum:
whether you implement what we ask, whether we join BU and then > 50 is
almost reached...


>
> On Tue, Mar 28, 2017 at 10:53 AM, Alphonse Pace via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org
> <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
>
>     Juan,
>
>     I suggest you take a look at this
>     paper: http://fc16.ifca.ai/bitcoin/papers/CDE+16.pdf
>     <http://fc16.ifca.ai/bitcoin/papers/CDE+16.pdf>  It may help you
>     form opinions based in science rather than what appears to be
>     nothing more than a hunch.  It shows that even 4MB is unsafe. 
>     SegWit provides up to this limit.
>
>     8MB is most definitely not safe today.
>
>     Whether it is unsafe or impossible is the topic, since Wang Chun
>     proposed making the block size limit 32MiB.  
>
>
>     Wang Chun,
>
>     Can you specify what meeting you are talking about?  You seem to
>     have not replied on that point.  Who were the participants and
>     what was the purpose of this meeting?
>
>     -Alphonse
>
>     On Tue, Mar 28, 2017 at 12:33 PM, Juan Garavaglia <jg at 112bit.com
>     <mailto:jg at 112bit.com>> wrote:
>
>         Alphonse,
>
>          
>
>         In my opinion if 1MB limit was ok in 2010, 8MB limit is ok on
>         2016 and 32MB limit valid in next halving, from network,
>         storage and CPU perspective or 1MB was too high in 2010 what
>         is possible or 1MB is to low today.
>
>          
>
>         If is unsafe or impossible to raise the blocksize is a
>         different topic. 
>
>          
>
>         Regards
>
>          
>
>         Juan
>
>          
>
>          
>
>         *From:*bitcoin-dev-bounces at lists.linuxfoundation.org
>         <mailto:bitcoin-dev-bounces at lists.linuxfoundation.org>
>         [mailto:bitcoin-dev-bounces at lists.linuxfoundation.org
>         <mailto:bitcoin-dev-bounces at lists.linuxfoundation.org>] *On
>         Behalf Of *Alphonse Pace via bitcoin-dev
>         *Sent:* Tuesday, March 28, 2017 2:24 PM
>         *To:* Wang Chun <1240902 at gmail.com
>         <mailto:1240902 at gmail.com>>; Bitcoin Protocol Discussion
>         <bitcoin-dev at lists.linuxfoundation.org
>         <mailto:bitcoin-dev at lists.linuxfoundation.org>>
>         *Subject:* Re: [bitcoin-dev] Hard fork proposal from last
>         week's meeting
>
>          
>
>         What meeting are you referring to?  Who were the participants?
>
>          
>
>         Removing the limit but relying on the p2p protocol is not
>         really a true 32MiB limit, but a limit of whatever transport
>         methods provide.  This can lead to differing consensus if
>         alternative layers for relaying are used.  What you seem to be
>         asking for is an unbound block size (or at least determined by
>         whatever miners produce).  This has the possibility (and even
>         likelihood) of removing many participants from the network,
>         including many small miners.  
>
>          
>
>         32MB in less than 3 years also appears to be far beyond limits
>         of safety which are known to exist far sooner, and we cannot
>         expect hardware and networking layers to improve by those
>         amounts in that time.
>
>          
>
>         It also seems like it would be much better to wait until
>         SegWit activates in order to truly measure the effects on the
>         network from this increased capacity before committing to any
>         additional increases.
>
>          
>
>         -Alphonse
>
>          
>
>          
>
>          
>
>         On Tue, Mar 28, 2017 at 11:59 AM, Wang Chun via bitcoin-dev
>         <bitcoin-dev at lists.linuxfoundation.org
>         <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
>
>             I've proposed this hard fork approach last year in Hong
>             Kong Consensus
>             but immediately rejected by coredevs at that meeting,
>             after more than
>             one year it seems that lots of people haven't heard of it.
>             So I would
>             post this here again for comment.
>
>             The basic idea is, as many of us agree, hard fork is risky
>             and should
>             be well prepared. We need a long time to deploy it.
>
>             Despite spam tx on the network, the block capacity is
>             approaching its
>             limit, and we must think ahead. Shall we code a patch
>             right now, to
>             remove the block size limit of 1MB, but not activate it
>             until far in
>             the future. I would propose to remove the 1MB limit at the
>             next block
>             halving in spring 2020, only limit the block size to 32MiB
>             which is
>             the maximum size the current p2p protocol allows. This
>             patch must be
>             in the immediate next release of Bitcoin Core.
>
>             With this patch in core's next release, Bitcoin works just
>             as before,
>             no fork will ever occur, until spring 2020. But everyone
>             knows there
>             will be a fork scheduled. Third party services, libraries,
>             wallets and
>             exchanges will have enough time to prepare for it over the
>             next three
>             years.
>
>             We don't yet have an agreement on how to increase the
>             block size
>             limit. There have been many proposals over the past years,
>             like
>             BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248,
>             BU, and so
>             on. These hard fork proposals, with this patch already in
>             Core's
>             release, they all become soft fork. We'll have enough time
>             to discuss
>             all these proposals and decide which one to go. Take an
>             example, if we
>             choose to fork to only 2MB, since 32MiB already scheduled,
>             reduce it
>             from 32MiB to 2MB will be a soft fork.
>
>             Anyway, we must code something right now, before it
>             becomes too late.
>             _______________________________________________
>             bitcoin-dev mailing list
>             bitcoin-dev at lists.linuxfoundation.org
>             <mailto:bitcoin-dev at lists.linuxfoundation.org>
>             https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>             <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
>
>          
>
>
>
>     _______________________________________________
>     bitcoin-dev mailing list
>     bitcoin-dev at lists.linuxfoundation.org
>     <mailto:bitcoin-dev at lists.linuxfoundation.org>
>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>     <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
>
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-- 
Zcash wallets made simple: https://github.com/Ayms/zcash-wallets
Bitcoin wallets made simple: https://github.com/Ayms/bitcoin-wallets
Get the torrent dynamic blocklist: http://peersm.com/getblocklist
Check the 10 M passwords list: http://peersm.com/findmyass
Anti-spies and private torrents, dynamic blocklist: http://torrent-live.org
Peersm : http://www.peersm.com
torrent-live: https://github.com/Ayms/torrent-live
node-Tor : https://www.github.com/Ayms/node-Tor
GitHub : https://www.github.com/Ayms

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/a4a9932b/attachment-0001.html>

From vitteaymeric at gmail.com  Wed Mar 29 16:08:42 2017
From: vitteaymeric at gmail.com (Aymeric Vitte)
Date: Wed, 29 Mar 2017 18:08:42 +0200
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFVRnyr=cYf34X80+dLHwYEPHdqA7mMtYZ_gD6j09C+aM31gQQ@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>
	<CAFVRnyr=cYf34X80+dLHwYEPHdqA7mMtYZ_gD6j09C+aM31gQQ@mail.gmail.com>
Message-ID: <f61153c3-9afb-5cee-2c6b-70d67208f015@gmail.com>



Le 29/03/2017 ? 17:57, David Vorick via bitcoin-dev a ?crit :
> It's too expensive for a home user to run a full node, and user-run
> full nodes are what provide the strongest defence against political
> manuveuring.

Yes but what makes you think that "It's too expensive for a home user to
run a full node" ? Not trivial, maybe, long to setup, for sure, but why
"expensive"? I tested running a full node from home that was normally
correctly configured and did not notice anything annoying/expensive

-- 
Zcash wallets made simple: https://github.com/Ayms/zcash-wallets
Bitcoin wallets made simple: https://github.com/Ayms/bitcoin-wallets
Get the torrent dynamic blocklist: http://peersm.com/getblocklist
Check the 10 M passwords list: http://peersm.com/findmyass
Anti-spies and private torrents, dynamic blocklist: http://torrent-live.org
Peersm : http://www.peersm.com
torrent-live: https://github.com/Ayms/torrent-live
node-Tor : https://www.github.com/Ayms/node-Tor
GitHub : https://www.github.com/Ayms


From david.vorick at gmail.com  Wed Mar 29 16:18:26 2017
From: david.vorick at gmail.com (David Vorick)
Date: Wed, 29 Mar 2017 12:18:26 -0400
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFVRnyo1XGNbq_F8UfqqJWHCVH14iMCUMU-R5bOh+h3mtwSUJg@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>
	<CAFVRnyr=cYf34X80+dLHwYEPHdqA7mMtYZ_gD6j09C+aM31gQQ@mail.gmail.com>
	<f61153c3-9afb-5cee-2c6b-70d67208f015@gmail.com>
	<CAFVRnyo1XGNbq_F8UfqqJWHCVH14iMCUMU-R5bOh+h3mtwSUJg@mail.gmail.com>
Message-ID: <CAFVRnyqxQhu0c-ACfzR5=Z=C1SbR70jrfCaCeEdfSJASSnzpqw@mail.gmail.com>

Perhaps you are fortunate to have a home computer that has more than a
single 512GB SSD. Lots of consumer hardware has that little storage. Throw
on top of it standard consumer usage, and you're often left with less than
200 GB of free space. Bitcoin consumes more than half of that, which feels
very expensive, especially if it motivates you to buy another drive.

I have talked to several people who cite this as the primary reason that
they are reluctant to join the full node club.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/68629ee3/attachment.html>

From david.vorick at gmail.com  Wed Mar 29 16:25:47 2017
From: david.vorick at gmail.com (David Vorick)
Date: Wed, 29 Mar 2017 12:25:47 -0400
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAAy62_J+huc_d5r-gyYCMGh6AjfJH4YiEVov9eBmwbKbWTe0Sw@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>
	<CAFVRnyr=cYf34X80+dLHwYEPHdqA7mMtYZ_gD6j09C+aM31gQQ@mail.gmail.com>
	<f61153c3-9afb-5cee-2c6b-70d67208f015@gmail.com>
	<CAFVRnyo1XGNbq_F8UfqqJWHCVH14iMCUMU-R5bOh+h3mtwSUJg@mail.gmail.com>
	<CAFVRnyqxQhu0c-ACfzR5=Z=C1SbR70jrfCaCeEdfSJASSnzpqw@mail.gmail.com>
	<CAAy62_J+huc_d5r-gyYCMGh6AjfJH4YiEVov9eBmwbKbWTe0Sw@mail.gmail.com>
Message-ID: <CAFVRnyrpfRUVNWjR19+ou7PxQuLbaoY8yta+BAAK3zbMrdsOhw@mail.gmail.com>

On Mar 29, 2017 12:20 PM, "Andrew Johnson" <andrew.johnson83 at gmail.com>
wrote:

What's stopping these users from running a pruned node?  Not every node
needs to store a complete copy of the blockchain.


Pruned nodes are not the default configuration, if it was the default
configuration then I think you would see far more users running a pruned
node.

But that would also substantially increase the burden on archive nodes.


Further discussion about disk space requirements should be taken to another
thread.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/9f1bb665/attachment.html>

From andrew.johnson83 at gmail.com  Wed Mar 29 16:20:03 2017
From: andrew.johnson83 at gmail.com (Andrew Johnson)
Date: Wed, 29 Mar 2017 16:20:03 +0000
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFVRnyqxQhu0c-ACfzR5=Z=C1SbR70jrfCaCeEdfSJASSnzpqw@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>
	<CAFVRnyr=cYf34X80+dLHwYEPHdqA7mMtYZ_gD6j09C+aM31gQQ@mail.gmail.com>
	<f61153c3-9afb-5cee-2c6b-70d67208f015@gmail.com>
	<CAFVRnyo1XGNbq_F8UfqqJWHCVH14iMCUMU-R5bOh+h3mtwSUJg@mail.gmail.com>
	<CAFVRnyqxQhu0c-ACfzR5=Z=C1SbR70jrfCaCeEdfSJASSnzpqw@mail.gmail.com>
Message-ID: <CAAy62_J+huc_d5r-gyYCMGh6AjfJH4YiEVov9eBmwbKbWTe0Sw@mail.gmail.com>

What's stopping these users from running a pruned node?  Not every node
needs to store a complete copy of the blockchain.


On Wed, Mar 29, 2017 at 11:18 AM David Vorick via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Perhaps you are fortunate to have a home computer that has more than a
> single 512GB SSD. Lots of consumer hardware has that little storage. Throw
> on top of it standard consumer usage, and you're often left with less than
> 200 GB of free space. Bitcoin consumes more than half of that, which feels
> very expensive, especially if it motivates you to buy another drive.
>
> I have talked to several people who cite this as the primary reason that
> they are reluctant to join the full node club.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-- 
Andrew Johnson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/a4c50e5f/attachment.html>

From andrew.johnson83 at gmail.com  Wed Mar 29 16:41:29 2017
From: andrew.johnson83 at gmail.com (Andrew Johnson)
Date: Wed, 29 Mar 2017 16:41:29 +0000
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFVRnyrpfRUVNWjR19+ou7PxQuLbaoY8yta+BAAK3zbMrdsOhw@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>
	<CAFVRnyr=cYf34X80+dLHwYEPHdqA7mMtYZ_gD6j09C+aM31gQQ@mail.gmail.com>
	<f61153c3-9afb-5cee-2c6b-70d67208f015@gmail.com>
	<CAFVRnyo1XGNbq_F8UfqqJWHCVH14iMCUMU-R5bOh+h3mtwSUJg@mail.gmail.com>
	<CAFVRnyqxQhu0c-ACfzR5=Z=C1SbR70jrfCaCeEdfSJASSnzpqw@mail.gmail.com>
	<CAAy62_J+huc_d5r-gyYCMGh6AjfJH4YiEVov9eBmwbKbWTe0Sw@mail.gmail.com>
	<CAFVRnyrpfRUVNWjR19+ou7PxQuLbaoY8yta+BAAK3zbMrdsOhw@mail.gmail.com>
Message-ID: <CAAy62_+JtoAuM-RsrAAp5eiGiO+OHLDjzqgbnF2De7TUU7TyYg@mail.gmail.com>

I believe that as we continue to add users to the system by scaling
capacity that we will see more new nodes appear, but I'm at a bit of a loss
as to how to empirically prove it.

I do see your point on increasing load on archival nodes, but the majority
of that load is going to come from new nodes coming online, they're the
only ones going after very old blocks.   I could see that as a potential
attack vector, overwhelm the archival nodes by spinning up new nodes
constantly, therefore making it difficult for a "real" new node to get up
to speed in a reasonable amount of time.

Perhaps the answer there would be a way to pay an archival node a small
amount of bitcoin in order to retrieve blocks older than a certain cutoff?
Include an IP address for the node asking for the data as metadata in the
transaction...  Archival nodes could set and publish their own policy, let
the market decide what those older blocks are worth.  Would also help to
incentivize running archival node, which we do need.  Of course, this isn't
very user friendly.

We can take this to bitcoin-discuss, if we're getting too far off topic.


On Wed, Mar 29, 2017 at 11:25 AM David Vorick <david.vorick at gmail.com>
wrote:

>
> On Mar 29, 2017 12:20 PM, "Andrew Johnson" <andrew.johnson83 at gmail.com>
> wrote:
>
> What's stopping these users from running a pruned node?  Not every node
> needs to store a complete copy of the blockchain.
>
>
> Pruned nodes are not the default configuration, if it was the default
> configuration then I think you would see far more users running a pruned
> node.
>
> But that would also substantially increase the burden on archive nodes.
>
>
> Further discussion about disk space requirements should be taken to
> another thread.
>
>
> --
Andrew Johnson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/9b48ebe3/attachment-0001.html>

From vitteaymeric at gmail.com  Wed Mar 29 17:14:50 2017
From: vitteaymeric at gmail.com (Aymeric Vitte)
Date: Wed, 29 Mar 2017 19:14:50 +0200
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAAy62_+JtoAuM-RsrAAp5eiGiO+OHLDjzqgbnF2De7TUU7TyYg@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>
	<CAFVRnyr=cYf34X80+dLHwYEPHdqA7mMtYZ_gD6j09C+aM31gQQ@mail.gmail.com>
	<f61153c3-9afb-5cee-2c6b-70d67208f015@gmail.com>
	<CAFVRnyo1XGNbq_F8UfqqJWHCVH14iMCUMU-R5bOh+h3mtwSUJg@mail.gmail.com>
	<CAFVRnyqxQhu0c-ACfzR5=Z=C1SbR70jrfCaCeEdfSJASSnzpqw@mail.gmail.com>
	<CAAy62_J+huc_d5r-gyYCMGh6AjfJH4YiEVov9eBmwbKbWTe0Sw@mail.gmail.com>
	<CAFVRnyrpfRUVNWjR19+ou7PxQuLbaoY8yta+BAAK3zbMrdsOhw@mail.gmail.com>
	<CAAy62_+JtoAuM-RsrAAp5eiGiO+OHLDjzqgbnF2De7TUU7TyYg@mail.gmail.com>
Message-ID: <237b67c9-6233-906d-c754-19a5c74285b7@gmail.com>

Well it's not going off-topic since the btc folks need now to find a way
to counter the attack

The disk space story is know to be a non issue, because encouraging
people to run nodes while they don't know how to dedicate the right
storage space that is trivial and not expensive to get today is just
stupid, they should not try to run full nodes, and no I tested with non
SSD drives, I was more wondering about cpu and bandwidth use, but did
not notice any impact, just stopped because a repeated sw bug or drive
issue desynched the chain and bitcoin-qt was trying to reload it from
the begining each time, which in my case was taking 10 days despite of
good bandwidth (which would allow me to torrent the entire chain + state
in less than 20 hours), so I stopped after the 3rd crash, setting up a
full node on my servers is still in the todo list (very low priority for
the reasons already explained)

Running a prune node implies first to setup a full node, so the same
problematic applies and then the advantage of pruning is not really
obvious, I don't know what's the strange story about "archival nodes", I
proposed something else

Back to the topic, the conclusion is that this is not difficult at all
for many people to run efficient full nodes, ideally the community
should promote this, seed a torrent with a recent state, implement a
patch to defeat BU plans and have everybody upgrade

But of course this will not happen


Le 29/03/2017 ? 18:41, Andrew Johnson a ?crit :
> I believe that as we continue to add users to the system by scaling
> capacity that we will see more new nodes appear, but I'm at a bit of a
> loss as to how to empirically prove it. 
>
> I do see your point on increasing load on archival nodes, but the
> majority of that load is going to come from new nodes coming online,
> they're the only ones going after very old blocks.   I could see that
> as a potential attack vector, overwhelm the archival nodes by spinning
> up new nodes constantly, therefore making it difficult for a "real"
> new node to get up to speed in a reasonable amount of time. 
>
> Perhaps the answer there would be a way to pay an archival node a
> small amount of bitcoin in order to retrieve blocks older than a
> certain cutoff?  Include an IP address for the node asking for the
> data as metadata in the transaction...  Archival nodes could set and
> publish their own policy, let the market decide what those older
> blocks are worth.  Would also help to incentivize running archival
> node, which we do need.  Of course, this isn't very user friendly. 
>
> We can take this to bitcoin-discuss, if we're getting too far off topic.
>
>
> On Wed, Mar 29, 2017 at 11:25 AM David Vorick <david.vorick at gmail.com
> <mailto:david.vorick at gmail.com>> wrote:
>
>
>     On Mar 29, 2017 12:20 PM, "Andrew Johnson"
>     <andrew.johnson83 at gmail.com <mailto:andrew.johnson83 at gmail.com>>
>     wrote:
>
>         What's stopping these users from running a pruned node?  Not
>         every node needs to store a complete copy of the blockchain. 
>
>
>     Pruned nodes are not the default configuration, if it was the
>     default configuration then I think you would see far more users
>     running a pruned node.
>
>     But that would also substantially increase the burden on archive
>     nodes.
>
>
>     Further discussion about disk space requirements should be taken
>     to another thread.
>
>
> -- 
> Andrew Johnson
>

-- 
Zcash wallets made simple: https://github.com/Ayms/zcash-wallets
Bitcoin wallets made simple: https://github.com/Ayms/bitcoin-wallets
Get the torrent dynamic blocklist: http://peersm.com/getblocklist
Check the 10 M passwords list: http://peersm.com/findmyass
Anti-spies and private torrents, dynamic blocklist: http://torrent-live.org
Peersm : http://www.peersm.com
torrent-live: https://github.com/Ayms/torrent-live
node-Tor : https://www.github.com/Ayms/node-Tor
GitHub : https://www.github.com/Ayms

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/0b5f83cc/attachment.html>

From jaredr26 at gmail.com  Wed Mar 29 19:07:15 2017
From: jaredr26 at gmail.com (Jared Lee Richardson)
Date: Wed, 29 Mar 2017 12:07:15 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CABm2gDrN5Wt9+2sVAjRiDG_axHmxF+iFujvApBMqrs-GjBG4pg@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CA+KqGkpFW8qDPVgY+11o_CC+6FMWUNUZ7REHJKYM9-3wbrUwYw@mail.gmail.com>
	<CABm2gDrN5Wt9+2sVAjRiDG_axHmxF+iFujvApBMqrs-GjBG4pg@mail.gmail.com>
Message-ID: <CAD1TkXuEE4ajE071R32skuHOq-0QHJuaO0OpztfSq=ZXpvd6Pw@mail.gmail.com>

> While Segwit's change from 1 mb size limit to 4 mb weight limit seems to
be controversial among some users [..] I don't think it's very interesting
to discuss further size increases.

I think the reason for this is largely because SegWit as a blocksize
increase isn't very satisfying.  It resolves to a one-time increase with no
future plans, thus engendering the same objections as people who demand we
just "raise the number to N."  People can argue about what N should be, but
when N is just a flat number, we know we'll have to deal with the issue
again.

In that light I think it is even more essential to continue to discuss the
blocksize debate and problem.

> I find more interesting to talk to the users and see how they think
Segwit harms them,

>From an inordinant amount of time spent reading Reddit, I believe this
largely comes down to the rumor that has a deathgrip on the BU community -
That Core are all just extensions of Blockstream, and blockstream wants to
restrict growth on-chain to force growth of their 2nd layer
services(lightning and/or sidechains).

I believe the tone of the discussion needs to be changed, and have been
trying to work to change that tone for weeks now.  There's one faction that
believes that Bitcoin will rarely, if ever, benefit from a blocksize
increase, and fees rising is a desired/unavoidable result.  There's a
different faction that believes Bitcoin limits are arbitrary and that all
people worldwide should be able to put any size transactions, even
microtransactions, on-chain.  Both factions are extreme in their viewpoints
and resort to conspiracy theories to interpret the actions of
Core(blockstream did it) or BU(Jihan controls everything and anyone who
says overwise is a shill paid by Roger Ver!)

It is all very unhealthy for Bitcoin.  Both sides need to accept that
microtransactions from all humans cannot go on-chain, and that never
increasing the blocksize doesn't mean millions of home users will run
nodes.  The node argument breaks down economically and the microtransaction
argument is an impossible mountain for a blockchain to climb.


On Wed, Mar 29, 2017 at 2:37 AM, Jorge Tim?n via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> While Segwit's change from 1 mb size limit to 4 mb weight limit seems to
> be controversial among some users (I find that very often it is because
> they have been confused about what segwit does or even outright lied about
> it) I don't think it's very interesting to discuss further size increases.
> I find more interesting to talk to the users and see how they think Segwit
> harms them, maybe we missed something in segwit that needs to be removed
> for segwit to become uncontroversial, or maybe it is just disinformation.
>
> On the other hand, we may want to have our first uncontroversial hardfork
> asap, independently of block size. For example, we could do something as
> simple as fixing the timewarp attack as bip99 proposes. I cannot think of a
> hf that is easier to implement or has less potential for controversy than
> that.
>
> On 29 Mar 2017 8:32 am, "Bram Cohen via bitcoin-dev" <bitcoin-dev at lists.
> linuxfoundation.org> wrote:
>
> On Tue, Mar 28, 2017 at 9:59 AM, Wang Chun via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>>
>> The basic idea is, as many of us agree, hard fork is risky and should
>> be well prepared. We need a long time to deploy it.
>>
>
> Much as it may be appealing to repeal the block size limit now with a
> grace period until a replacement is needed in a repeal and replace
> strategy, it's dubious to assume that an idea can be agreed upon later when
> it can't be agreed upon now. Trying to put a time limit on it runs into the
> possibility that you'll find that whatever reasons there were for not
> having general agreement on a new setup before still apply, and running
> into the embarrassing situation of winding up sticking with the status quo
> after much sturm and drang.
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/5ef03fb4/attachment-0001.html>

From jaredr26 at gmail.com  Wed Mar 29 19:10:42 2017
From: jaredr26 at gmail.com (Jared Lee Richardson)
Date: Wed, 29 Mar 2017 12:10:42 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>
Message-ID: <CAD1TkXs7gvW6dkYVg7Qo99mwWH5gu-QNf8Rgoe61DG3P_Rm4Lw@mail.gmail.com>

In order for any blocksize increase to be agreed upon, more consensus is
needed.  The proportion of users believing no blocksize increases are
needed is larger than the hardfork target core wants(95% consensus).  The
proportion of users believing in microtransactions for all is also larger
than 5%, and both of those groups may be larger than 10% respectively.  I
don't think either the Big-blocks faction nor the low-node-costs faction
have even a simple majority of support.  Getting consensus is going to be a
big mess, but it is critical that it is done.

On Wed, Mar 29, 2017 at 12:49 AM, Martin L?zner via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> If there should be a hard-fork, Core team should author the code. Other
> dev teams have marginal support among all BTC users.
>
> Im tending to believe, that HF is necessary evil now. But lets do it in
> conservative approach:
> - Fix historical BTC issues, improve code
> - Plan HF activation date well ahead - 12 months+
> - Allow increasing block size on year-year basis as Luke suggested
> - Compromise with miners on initial block size bump (e.g. 2MB)
> - SegWit
>
> Martin Lizner
>
> On Tue, Mar 28, 2017 at 6:59 PM, Wang Chun via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> I've proposed this hard fork approach last year in Hong Kong Consensus
>> but immediately rejected by coredevs at that meeting, after more than
>> one year it seems that lots of people haven't heard of it. So I would
>> post this here again for comment.
>>
>> The basic idea is, as many of us agree, hard fork is risky and should
>> be well prepared. We need a long time to deploy it.
>>
>> Despite spam tx on the network, the block capacity is approaching its
>> limit, and we must think ahead. Shall we code a patch right now, to
>> remove the block size limit of 1MB, but not activate it until far in
>> the future. I would propose to remove the 1MB limit at the next block
>> halving in spring 2020, only limit the block size to 32MiB which is
>> the maximum size the current p2p protocol allows. This patch must be
>> in the immediate next release of Bitcoin Core.
>>
>> With this patch in core's next release, Bitcoin works just as before,
>> no fork will ever occur, until spring 2020. But everyone knows there
>> will be a fork scheduled. Third party services, libraries, wallets and
>> exchanges will have enough time to prepare for it over the next three
>> years.
>>
>> We don't yet have an agreement on how to increase the block size
>> limit. There have been many proposals over the past years, like
>> BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
>> on. These hard fork proposals, with this patch already in Core's
>> release, they all become soft fork. We'll have enough time to discuss
>> all these proposals and decide which one to go. Take an example, if we
>> choose to fork to only 2MB, since 32MiB already scheduled, reduce it
>> from 32MiB to 2MB will be a soft fork.
>>
>> Anyway, we must code something right now, before it becomes too late.
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/89ff2027/attachment.html>

From andreas at antonopoulos.com  Wed Mar 29 19:30:23 2017
From: andreas at antonopoulos.com (Andreas M. Antonopoulos)
Date: Thu, 30 Mar 2017 03:30:23 +0800
Subject: [bitcoin-dev] Request for Comments: Mastering Bitcoin 2nd Edition
Message-ID: <CAFmyj8wyEwP1-zywTXFBxyCj1gcEfqAbbGD4oERijBFS87J1Gg@mail.gmail.com>

I'm requesting feedback and corrections for the second edition of
"Mastering Bitcoin". Apologies if this is considered off-topic - it is only
my second message to this list in 4 years and I think it is relevant
because this book is the first source of information for many new bitcoin
developers.

The book is in pre-production and will be published within the next 6-8
weeks. The new edition covers many new topics including segwit, bip9
signalling, timelocks, payment channels & lightning network. In addition,
most chapters have seen big changes, clarifications and corrections.

The book is open source (CC-BY-SA) and produced on github (
https://github.com/bitcoinbook/bitcoinbook/tree/develop). Pull requests,
issues and comments are welcome, only 2-3 weeks left before it goes into a
production freeze.

Many thanks,

Andreas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/4e010b11/attachment.html>

From praxeology_guy at protonmail.com  Wed Mar 29 19:36:25 2017
From: praxeology_guy at protonmail.com (praxeology_guy)
Date: Wed, 29 Mar 2017 15:36:25 -0400
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAD1TkXs7gvW6dkYVg7Qo99mwWH5gu-QNf8Rgoe61DG3P_Rm4Lw@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>
	<CAD1TkXs7gvW6dkYVg7Qo99mwWH5gu-QNf8Rgoe61DG3P_Rm4Lw@mail.gmail.com>
Message-ID: <ZT4EEitax3NlOc5rdqMAVYOH_IT_EpyEIXeFOryMfndqycmeC_jBC5KVCbZ1jkhFTVflscO4Xygbtt8LBQFdX5VnBlNbS_quqJIzrtslV1E=@protonmail.com>

I think at least the three following things have to be done before the block size can be increased by any significant amount:
1. A network protocol defined UTXO snapshot format be defined, UTXO snapshots being created automatically in a deterministic periodic and low-cost fashion. Ability to synchronize starting from such a UTXO snapshot as requested by a user.
2. SPV support from a pruned node that has the latest UTXO snapshot. Probably requires committing the UTXO snapshot hash to the block.
3. Given the above fixes the problem of needing full block chain history storage, and people are comfortable with such a security model, a good portion of the network can switch to this security model, and still satisfy our desire for the system to be sufficiently distributed. This requires lots of testing.
4. More current studies on the effect of increasing the block size on synchronizing node drop out due to other reasons such as network bandwidth, memory, and CPU usage.

Without doing the above, scheduling to increasing the block size would be wreckless.

Cheers,
Praxeology Guy

-------- Original Message --------
Subject: Re: [bitcoin-dev] Hard fork proposal from last week's meeting
Local Time: March 29, 2017 2:10 PM
UTC Time: March 29, 2017 7:10 PM
From: bitcoin-dev at lists.linuxfoundation.org
To: Martin L?zner <martin.lizner at gmail.com>, Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>

In order for any blocksize increase to be agreed upon, more consensus is needed. The proportion of users believing no blocksize increases are needed is larger than the hardfork target core wants(95% consensus). The proportion of users believing in microtransactions for all is also larger than 5%, and both of those groups may be larger than 10% respectively. I don't think either the Big-blocks faction nor the low-node-costs faction have even a simple majority of support. Getting consensus is going to be a big mess, but it is critical that it is done.

On Wed, Mar 29, 2017 at 12:49 AM, Martin L?zner via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:

If there should be a hard-fork, Core team should author the code. Other dev teams have marginal support among all BTC users.

Im tending to believe, that HF is necessary evil now. But lets do it in conservative approach:
- Fix historical BTC issues, improve code
- Plan HF activation date well ahead - 12 months+
- Allow increasing block size on year-year basis as Luke suggested
- Compromise with miners on initial block size bump (e.g. 2MB)
- SegWit

Martin Lizner

On Tue, Mar 28, 2017 at 6:59 PM, Wang Chun via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
I've proposed this hard fork approach last year in Hong Kong Consensus
but immediately rejected by coredevs at that meeting, after more than
one year it seems that lots of people haven't heard of it. So I would
post this here again for comment.

The basic idea is, as many of us agree, hard fork is risky and should
be well prepared. We need a long time to deploy it.

Despite spam tx on the network, the block capacity is approaching its
limit, and we must think ahead. Shall we code a patch right now, to
remove the block size limit of 1MB, but not activate it until far in
the future. I would propose to remove the 1MB limit at the next block
halving in spring 2020, only limit the block size to 32MiB which is
the maximum size the current p2p protocol allows. This patch must be
in the immediate next release of Bitcoin Core.

With this patch in core's next release, Bitcoin works just as before,
no fork will ever occur, until spring 2020. But everyone knows there
will be a fork scheduled. Third party services, libraries, wallets and
exchanges will have enough time to prepare for it over the next three
years.

We don't yet have an agreement on how to increase the block size
limit. There have been many proposals over the past years, like
BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
on. These hard fork proposals, with this patch already in Core's
release, they all become soft fork. We'll have enough time to discuss
all these proposals and decide which one to go. Take an example, if we
choose to fork to only 2MB, since 32MiB already scheduled, reduce it
from 32MiB to 2MB will be a soft fork.

Anyway, we must code something right now, before it becomes too late.
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/44936f5e/attachment-0001.html>

From jaredr26 at gmail.com  Wed Mar 29 19:46:50 2017
From: jaredr26 at gmail.com (Jared Lee Richardson)
Date: Wed, 29 Mar 2017 12:46:50 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFVRnyr=cYf34X80+dLHwYEPHdqA7mMtYZ_gD6j09C+aM31gQQ@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>
	<CAFVRnyr=cYf34X80+dLHwYEPHdqA7mMtYZ_gD6j09C+aM31gQQ@mail.gmail.com>
Message-ID: <CAD1TkXtnSApYgp9FU55Esn2qgT=QyqS61kVzSO1Ae=g8J18Vcw@mail.gmail.com>

> When considering what block size is acceptable, the impact of running
bitcoin in the background on affordable, non-dedicated home-hardware should
be a top consideration.

Why is that a given?  Is there math that outlines what the risk levels are
for various configurations of node distributions, vulnerabilities, etc?
How does one even evaluate the costs versus the benefits of node costs
versus transaction fees?

> Disk space I believe is the most significant problem today, with RAM
being the second most significant problem, and finally bandwidth
consumption as the third most important consideration. I believe that v0.14
is already too expensive on all three fronts, and that block size increases
shouldn't be considered at all until the requirements are reduced (or until
consumer hardware is better, but I believe we are talking 3-7 years of
waiting if we pick that option).

Disk space is not the largest cost, either today or in the future.  Without
historical checkpointing in some fashion, bandwidth costs are more than 2
orders of magnitude higher cost than every other cost for full listening
nodes.  With historical syncing discounted(i.e. pruned or nonlistening
nodes) bandwidth costs are still higher than hard drive costs.


Today: Full listening node, 133 peers, measured 1.5 TB/mo of bandwidth
consumption over two multi-day intervals.  1,500 GB/month @ ec2 low-tier
prices = $135/month, 110 GB storage = $4.95.  Similar arguments extend to
consumer hardware - Comcast broadband is ~$80/mo depending on region and
comes with 1.0 TB cap in most regions, so $120/mo or even $80/mo would be
in the same ballpark.  A consumer-grade 2GB hard drive is $70 and will last
for at least 2 years, so $2.93/month if the hard drive was totally
dedicated to Bitcoin and $0.16/month if we only count the percentage that
Bitcoin uses.

For a non-full listening node, ~25 peers I measured around 70 GB/month of
usage over several days, which is $6.3 per month EC2 or $5.6 proportional
Comcast cost.  If someone isn't supporting syncing, there's not much point
in them not turning on pruning.  Even if they didn't, a desktop in the $500
range typically comes with 1 or 2 TB of storage by default, and without
segwit or a blocksize cap increase, 3 years from now the full history will
only take up the 33% of the smaller, three year old, budget-range PC hard
drive.  Even then if we assume the hard drive price declines of the last 4
years hold steady(14%, very low compared to historical gains), 330gb of
data only works out to a proportional monthly cost of $6.20 - still
slightly smaller than his bandwidth costs, and almost entirely removable by
turning on pruning since he isn't paying to help others sync.

I don't know how to evaluate the impacts of RAM or CPU usage, or
consequently electricity usage for a node yet.  I'm open to quantifying any
of those if there's a method, but it seems absurd that ram could even
become a signficant factor given the abundance of cheap ram nowadays with
few programs needing it.  CPU usage and thus electricity costs might become
a factor, I just don't know how to quantify it at various block scales.
Currently cpu usage isn't taxing any hardware that I run a node on in any
way I have been able to notice, not including the syncing process.

> I am also solidly unconvinced that increasing the blocksize today is a
good move, even as little as SegWit does.

The consequence of your logic that holds node operational costs down is
that transaction fees for users go up, adoption slows as various use cases
become impractical, price growth suffers, and alt coins that choose lower
fees over node cost concerns will exhibit competitive growth against
Bitcoin's crypto-currency market share.  Even if you are right, that's
hardly a tradeoff not worth thoroughly investigating from every angle, the
consequences could be just as dire for Bitcoin in 10 years as it would be
if we made ourselves vulnerable.

And even if an altcoin can't take Bitcoin's dominance by lower fees, we
will not end up with millions of home users running nodes, ever.  If they
did so, that would be orders of magnitude fee market competition, and
continuing increases in price, while hardware costs decline.  If
transaction fees go up from space limitations, and they go up even further
in real-world terms from price increases, while node costs decline,
eventually it will cost more to send a transaction than it does to run a
node for a full month.  No home users would send transactions because the
fee costs would be higher than anything they might use Bitcoin for, and so
they would not run a node for something they don't use - Why would they?
The cost of letting the ratio between node costs and transaction costs go
in the extreme favor of node costs would be worse - Lower Bitcoin
usability, adoption, and price, without any meaningful increase in security.

How do we evaluate the math on node distributions versus various attack
vectors?



On Wed, Mar 29, 2017 at 8:57 AM, David Vorick via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

>
> On Mar 29, 2017 9:50 AM, "Martin L?zner via bitcoin-dev" <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> Im tending to believe, that HF is necessary evil now.
>
>
> I will firmly disagree. We know how to do a soft-fork blocksize increase.
> If it is decided that a block size increase is justified, we can do it with
> extension blocks in a way that achieves full backwards compatibility for
> all nodes.
>
> Barring a significant security motivation, there is no need to hardfork.
>
> I am also solidly unconvinced that increasing the blocksize today is a
> good move, even as little as SegWit does. It's too expensive for a home
> user to run a full node, and user-run full nodes are what provide the
> strongest defence against political manuveuring.
>
> When considering what block size is acceptable, the impact of running
> bitcoin in the background on affordable, non-dedicated home-hardware should
> be a top consideration.
>
> Disk space I believe is the most significant problem today, with RAM being
> the second most significant problem, and finally bandwidth consumption as
> the third most important consideration. I believe that v0.14 is already too
> expensive on all three fronts, and that block size increases shouldn't be
> considered at all until the requirements are reduced (or until consumer
> hardware is better, but I believe we are talking 3-7 years of waiting if we
> pick that option).
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/2e9b6644/attachment-0001.html>

From raystonn at hotmail.com  Wed Mar 29 19:50:48 2017
From: raystonn at hotmail.com (Raystonn .)
Date: Wed, 29 Mar 2017 19:50:48 +0000
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
Message-ID: <CY4PR18MB135053B235C734A3D8D9C13BCD350@CY4PR18MB1350.namprd18.prod.outlook.com>

Low node costs are a good goal for nodes that handle transactions the node operator can afford.  Nobody is going to run a node for a network they do not use for their own transactions.  If transactions have fees that prohibit use for most economic activity, that means node count will drop until nodes are generally run by those who settle large amounts.  That is very centralizing.

Raystonn

On 29 Mar 2017 12:14 p.m., Jared Lee Richardson via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
In order for any blocksize increase to be agreed upon, more consensus is needed.  The proportion of users believing no blocksize increases are needed is larger than the hardfork target core wants(95% consensus).  The proportion of users believing in microtransactions for all is also larger than 5%, and both of those groups may be larger than 10% respectively.  I don't think either the Big-blocks faction nor the low-node-costs faction have even a simple majority of support.  Getting consensus is going to be a big mess, but it is critical that it is done.

On Wed, Mar 29, 2017 at 12:49 AM, Martin L?zner via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
If there should be a hard-fork, Core team should author the code. Other dev teams have marginal support among all BTC users.

Im tending to believe, that HF is necessary evil now. But lets do it in conservative approach:
- Fix historical BTC issues, improve code
- Plan HF activation date well ahead - 12 months+
- Allow increasing block size on year-year basis as Luke suggested
- Compromise with miners on initial block size bump (e.g. 2MB)
- SegWit

Martin Lizner

On Tue, Mar 28, 2017 at 6:59 PM, Wang Chun via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
I've proposed this hard fork approach last year in Hong Kong Consensus
but immediately rejected by coredevs at that meeting, after more than
one year it seems that lots of people haven't heard of it. So I would
post this here again for comment.

The basic idea is, as many of us agree, hard fork is risky and should
be well prepared. We need a long time to deploy it.

Despite spam tx on the network, the block capacity is approaching its
limit, and we must think ahead. Shall we code a patch right now, to
remove the block size limit of 1MB, but not activate it until far in
the future. I would propose to remove the 1MB limit at the next block
halving in spring 2020, only limit the block size to 32MiB which is
the maximum size the current p2p protocol allows. This patch must be
in the immediate next release of Bitcoin Core.

With this patch in core's next release, Bitcoin works just as before,
no fork will ever occur, until spring 2020. But everyone knows there
will be a fork scheduled. Third party services, libraries, wallets and
exchanges will have enough time to prepare for it over the next three
years.

We don't yet have an agreement on how to increase the block size
limit. There have been many proposals over the past years, like
BIP100, 101, 102, 103, 104, 105, 106, 107, 109, 148, 248, BU, and so
on. These hard fork proposals, with this patch already in Core's
release, they all become soft fork. We'll have enough time to discuss
all these proposals and decide which one to go. Take an example, if we
choose to fork to only 2MB, since 32MiB already scheduled, reduce it
from 32MiB to 2MB will be a soft fork.

Anyway, we must code something right now, before it becomes too late.
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/c46dcb07/attachment-0001.html>

From daniele.pinna at gmail.com  Wed Mar 29 19:33:58 2017
From: daniele.pinna at gmail.com (Daniele Pinna)
Date: Wed, 29 Mar 2017 21:33:58 +0200
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
Message-ID: <CAEgR2PEG1UMqY0hzUH4YE_an=qOvQUgfXreSRsoMWfFWxG3Vqg@mail.gmail.com>

What about periodically committing the entire UTXO set to a special
checkpoint block which becomes the new de facto Genesis block?

Daniele

------------------------------

Message: 5
Date: Wed, 29 Mar 2017 16:41:29 +0000
From: Andrew Johnson <andrew.johnson83 at gmail.com>
To: David Vorick <david.vorick at gmail.com>
Cc: Bitcoin Dev <bitcoin-dev at lists.linuxfoundation.org>
Subject: Re: [bitcoin-dev] Hard fork proposal from last week's meeting
Message-ID:
        <CAAy62_+JtoAuM-RsrAAp5eiGiO+OHLDjzqgbnF2De7TUU7TyYg at mail.gmail.com>
Content-Type: text/plain; charset="utf-8"

I believe that as we continue to add users to the system by scaling
capacity that we will see more new nodes appear, but I'm at a bit of a loss
as to how to empirically prove it.

I do see your point on increasing load on archival nodes, but the majority
of that load is going to come from new nodes coming online, they're the
only ones going after very old blocks.   I could see that as a potential
attack vector, overwhelm the archival nodes by spinning up new nodes
constantly, therefore making it difficult for a "real" new node to get up
to speed in a reasonable amount of time.

Perhaps the answer there would be a way to pay an archival node a small
amount of bitcoin in order to retrieve blocks older than a certain cutoff?
Include an IP address for the node asking for the data as metadata in the
transaction...  Archival nodes could set and publish their own policy, let
the market decide what those older blocks are worth.  Would also help to
incentivize running archival node, which we do need.  Of course, this isn't
very user friendly.

We can take this to bitcoin-discuss, if we're getting too far off topic.


On Wed, Mar 29, 2017 at 11:25 AM David Vorick <david.vorick at gmail.com>
wrote:

>
> On Mar 29, 2017 12:20 PM, "Andrew Johnson" <andrew.johnson83 at gmail.com>
> wrote:
>
> What's stopping these users from running a pruned node?  Not every node
> needs to store a complete copy of the blockchain.
>
>
> Pruned nodes are not the default configuration, if it was the default
> configuration then I think you would see far more users running a pruned
> node.
>
> But that would also substantially increase the burden on archive nodes.
>
>
> Further discussion about disk space requirements should be taken to
> another thread.
>
>
> --
Andrew Johnson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/
attachments/20170329/9b48ebe3/attachment.html>

------------------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/9ef02e82/attachment.html>

From david.vorick at gmail.com  Wed Mar 29 20:28:35 2017
From: david.vorick at gmail.com (David Vorick)
Date: Wed, 29 Mar 2017 16:28:35 -0400
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAEgR2PEG1UMqY0hzUH4YE_an=qOvQUgfXreSRsoMWfFWxG3Vqg@mail.gmail.com>
References: <CAEgR2PEG1UMqY0hzUH4YE_an=qOvQUgfXreSRsoMWfFWxG3Vqg@mail.gmail.com>
Message-ID: <CAFVRnyq9Qgw88RZqenjQTDZHEWeuNCdh12Dq7wCGZdu9ZuEN9w@mail.gmail.com>

> > When considering what block size is acceptable, the impact of running
bitcoin in the background on affordable, non-dedicated home-hardware should
be a top consideration.

> Why is that a given?  Is there math that outlines what the risk levels
are for various configurations of node distributions, vulnerabilities,
etc?  How does one even evaluate the costs versus the benefits of node
costs versus transaction fees?

It's a political assessment. Full nodes are the ultimate arbiters of
consensus. When a contentious change is suggested, only the full nodes have
the power to either accept or reject this contentious change. If home users
are not running their own full nodes, then home users have to trust and
rely on other, more powerful nodes to represent them. Of course, the more
powerful nodes, simply by nature of having more power, are going to have
different opinions and objectives from the users. And it's impossible for
5000 nodes to properly represent the views of 5,000,000 users. Users
running full nodes is important to prevent political hijacking of the
Bitcoin protocol. Running a full node yourself is the only way to guarantee
(in the absence of trust - which Bitcoin is all about eliminating trust)
that changes you are opposed to are not introduced into the network.

> Disk space is not the largest cost, either today or in the future.
Without historical checkpointing in some fashion, bandwidth costs are more
than 2 orders of magnitude higher cost than every other cost for full
listening nodes.

This statement is not true for home users, it is true for datacenter nodes.
For home users, 200 GB of bandwidth and 500 GB of bandwidth largely have
the exact same cost. I pay a fixed amount of money for my internet, and if
I use 500 GB the cost is identical to if I use 200 GB. So long as bandwidth
is kept under my home bandwidth cap, bandwidth for home nodes is _free_.

Similarly, disk space may only be $2/TB in bulk, but as a home user I have
a $1000 computer with 500 GB of total storage, 100 GB seems
(psychologically) to cost a lot closer to $200 than to $2. And if I go out
and buy an extra drive to support Bitcoin, it's going to cost about $50 no
matter what drive I pick, because that's just how much you have to spend to
get a drive. The fact that I get an extra 900 GB that I'm not using is
irrelevant - I spent $50 explicitly so I could run a bitcoin node.

The financials of home nodes follow a completely different math than the
costs you are citing by quoting datacenter prices.

> I don't know how to evaluate the impacts of RAM or CPU usage, or
consequently electricity usage for a node yet.  I'm open to quantifying any
of those if there's a method, but it seems absurd that ram could even
become a signficant factor given the abundance of cheap ram nowadays with
few programs needing it.

Many home machines only have 4GB of RAM. (I am acutely aware of this
because my own software consumes about 3.5GB of RAM, which means all of our
users stuck at 4 GB cannot use my software and Chrome at the same time).
0.14 uses more than 1 GB of RAM. This I think is not really a problem for
most people, but it becomes a problem if the amount of RAM required grows
enough that they can't have all of their programs open at the same time.
1GB I think is really the limit you'd want to have before you'd start
seeing users choose not to run nodes simply because they'd rather have 300
tabs open instead.

CPU usage I think is pretty minimal. Your node is pretty busy during IBD
which is annoying but tolerable. And during normal usage a user isn't even
going to notice. Same for electricity. They aren't going to notice at the
end of the month if their electricity bill is a dollar higher because of
Bitcoin.

> The consequence of your logic that holds node operational costs down is
that transaction fees for users go up, adoption slows as various use cases
become impractical, price growth suffers, and alt coins that choose lower
fees over node cost concerns will exhibit competitive growth against
Bitcoin's crypto-currency market share.  Even if you are right, that's
hardly a tradeoff not worth thoroughly investigating from every angle, the
consequences could be just as dire for Bitcoin in 10 years as it would be
if we made ourselves vulnerable.

This is very much worth considering. If transaction fees are so high that
there is no use case at all for people unwilling to buy extra hardware for
Bitcoin (a dedicated node or whatever), then there is no longer a reason to
worry about these people as users. However, I think the fees would have to
get in the $50 range for that to start to be the case. When talking about
emergency funds - that is, $10k+ that you keep in case your government
defaults, hyperinflates, seizes citizen assets, etc. etc. (situations that
many Bitcoin users today have to legitimately worry about), then you are
going to be making a few transactions per year at most, and the cost of
fees on a home node may be $150 / yr, while the cost of dedicated hardware
might be $150/yr ($600 box amortized over 4 years). We are two orders of
magnitude away from this type of fee pressure, so I think it continues to
make sense to be considering the home nodes as the target that we want to
hit.

>  What about periodically committing the entire UTXO set to a special
checkpoint block which becomes the new de facto Genesis block?

This should be discussed in another thread but I don't think I'm alone in
saying that I think this could actually be done in a secure / safe /
valuable way if you did it correctly. It would reduce bandwidth pressure on
archive nodes, reduce disk pressure on full nodes, and imo make for a more
efficient network overall.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/930defe5/attachment-0001.html>

From peter_r at gmx.com  Wed Mar 29 20:28:29 2017
From: peter_r at gmx.com (Peter R)
Date: Wed, 29 Mar 2017 13:28:29 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAEgR2PEG1UMqY0hzUH4YE_an=qOvQUgfXreSRsoMWfFWxG3Vqg@mail.gmail.com>
References: <CAEgR2PEG1UMqY0hzUH4YE_an=qOvQUgfXreSRsoMWfFWxG3Vqg@mail.gmail.com>
Message-ID: <E54123C8-F124-449A-9C65-F40FA6917813@gmx.com>

I believe nearly everyone at Bitcoin Unlimited would be supportive of a UTXO check-pointing scheme.  I?d love to see this happen, as it would greatly reduce the time needed to get a new node up-and-running, for node operators who are comfortable trusting these commitments.  

I?m confident that we could work with the miners who we have good relationships with to start including the root hash of the (lagging) UTXO set in their coinbase transactions, in order to begin transforming this idea into reality.  We could also issue regular transactions from ?semi-trusted? addresses controlled by known people that include the same root hash in an OP_RETURN output, which would allow cross-checking against the miners? UTXO commitments, as part of this initial ?prototype? system.

This would "get the ball rolling" on UTXO commitments in a permissionless way (no one can stop us from doing this). If the results from this prototype commitment scheme were positive, then perhaps there would be support from the community and miners to enforce a new rule which requires the (lagging) root hashes be included in new blocks.  At that point, the UTXO commitment scheme is no longer a prototype but a trusted feature of the Bitcoin network.    

On that topic, are there any existing proposals detailing a canonical ordering of the UTXO set and a scheme to calculate the root hash?

Best regards,
Peter


> On Mar 29, 2017, at 12:33 PM, Daniele Pinna via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> What about periodically committing the entire UTXO set to a special checkpoint block which becomes the new de facto Genesis block? 
> 
> Daniele 
> 
> ------------------------------
> 
> Message: 5
> Date: Wed, 29 Mar 2017 16:41:29 +0000
> From: Andrew Johnson <andrew.johnson83 at gmail.com <mailto:andrew.johnson83 at gmail.com>>
> To: David Vorick <david.vorick at gmail.com <mailto:david.vorick at gmail.com>>
> Cc: Bitcoin Dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>>
> Subject: Re: [bitcoin-dev] Hard fork proposal from last week's meeting
> Message-ID:
>         <CAAy62_+JtoAuM-RsrAAp5eiGiO+OHLDjzqgbnF2De7TUU7TyYg at mail.gmail.com <mailto:CAAy62_%2BJtoAuM-RsrAAp5eiGiO%2BOHLDjzqgbnF2De7TUU7TyYg at mail.gmail.com>>
> Content-Type: text/plain; charset="utf-8"
> 
> I believe that as we continue to add users to the system by scaling
> capacity that we will see more new nodes appear, but I'm at a bit of a loss
> as to how to empirically prove it.
> 
> I do see your point on increasing load on archival nodes, but the majority
> of that load is going to come from new nodes coming online, they're the
> only ones going after very old blocks.   I could see that as a potential
> attack vector, overwhelm the archival nodes by spinning up new nodes
> constantly, therefore making it difficult for a "real" new node to get up
> to speed in a reasonable amount of time.
> 
> Perhaps the answer there would be a way to pay an archival node a small
> amount of bitcoin in order to retrieve blocks older than a certain cutoff?
> Include an IP address for the node asking for the data as metadata in the
> transaction...  Archival nodes could set and publish their own policy, let
> the market decide what those older blocks are worth.  Would also help to
> incentivize running archival node, which we do need.  Of course, this isn't
> very user friendly.
> 
> We can take this to bitcoin-discuss, if we're getting too far off topic.
> 
> 
> On Wed, Mar 29, 2017 at 11:25 AM David Vorick <david.vorick at gmail.com <mailto:david.vorick at gmail.com>>
> wrote:
> 
> >
> > On Mar 29, 2017 12:20 PM, "Andrew Johnson" <andrew.johnson83 at gmail.com <mailto:andrew.johnson83 at gmail.com>>
> > wrote:
> >
> > What's stopping these users from running a pruned node?  Not every node
> > needs to store a complete copy of the blockchain.
> >
> >
> > Pruned nodes are not the default configuration, if it was the default
> > configuration then I think you would see far more users running a pruned
> > node.
> >
> > But that would also substantially increase the burden on archive nodes.
> >
> >
> > Further discussion about disk space requirements should be taken to
> > another thread.
> >
> >
> > --
> Andrew Johnson
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/9b48ebe3/attachment.html <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/9b48ebe3/attachment.html>>
> 
> ------------------------------
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/ca39b10a/attachment.html>

From jaredr26 at gmail.com  Wed Mar 29 20:32:05 2017
From: jaredr26 at gmail.com (Jared Lee Richardson)
Date: Wed, 29 Mar 2017 13:32:05 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFVRnyqxQhu0c-ACfzR5=Z=C1SbR70jrfCaCeEdfSJASSnzpqw@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>
	<CAFVRnyr=cYf34X80+dLHwYEPHdqA7mMtYZ_gD6j09C+aM31gQQ@mail.gmail.com>
	<f61153c3-9afb-5cee-2c6b-70d67208f015@gmail.com>
	<CAFVRnyo1XGNbq_F8UfqqJWHCVH14iMCUMU-R5bOh+h3mtwSUJg@mail.gmail.com>
	<CAFVRnyqxQhu0c-ACfzR5=Z=C1SbR70jrfCaCeEdfSJASSnzpqw@mail.gmail.com>
Message-ID: <CAD1TkXtze_TVegXz4AeJCxK59+cuwRQ=w4upzX+HoQ90Py52OA@mail.gmail.com>

> Perhaps you are fortunate to have a home computer that has more than a
single 512GB SSD. Lots of consumer hardware has that little storage.

That's very poor logic, sorry.  Restricted-space SSD's are not a
cost-effective hardware option for running a node.  Keeping blocksizes
small has significant other costs for everyone.  Comparing the cost of
running a node under arbitrary conditons A, B, or C when there are far more
efficient options than any of those is a very bad way to think about the
costs of running a node.  You basically have to ignore the significant
consequences of keeping blocks small.

If node operational costs rose to the point where an entire wide swath of
users that we do actually need for security purposes could not justify
running a node, that's something important for consideration.  For me, that
translates to modern hardware that's relatively well aligned with the needs
of running a node - perhaps budget hardware, but still modern - and
above-average bandwidth caps.

You're free to disagree, but your example only makes sense to me if
blocksize caps didn't have serious consequences.  Even if those
consequences are just the threat of a contentious fork by people who are
mislead about the real consequences, that threat is still a consequence
itself.

On Wed, Mar 29, 2017 at 9:18 AM, David Vorick via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Perhaps you are fortunate to have a home computer that has more than a
> single 512GB SSD. Lots of consumer hardware has that little storage. Throw
> on top of it standard consumer usage, and you're often left with less than
> 200 GB of free space. Bitcoin consumes more than half of that, which feels
> very expensive, especially if it motivates you to buy another drive.
>
> I have talked to several people who cite this as the primary reason that
> they are reluctant to join the full node club.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/24dbcac6/attachment-0001.html>

From jaredr26 at gmail.com  Wed Mar 29 20:53:40 2017
From: jaredr26 at gmail.com (Jared Lee Richardson)
Date: Wed, 29 Mar 2017 13:53:40 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFVRnyrpfRUVNWjR19+ou7PxQuLbaoY8yta+BAAK3zbMrdsOhw@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>
	<CAFVRnyr=cYf34X80+dLHwYEPHdqA7mMtYZ_gD6j09C+aM31gQQ@mail.gmail.com>
	<f61153c3-9afb-5cee-2c6b-70d67208f015@gmail.com>
	<CAFVRnyo1XGNbq_F8UfqqJWHCVH14iMCUMU-R5bOh+h3mtwSUJg@mail.gmail.com>
	<CAFVRnyqxQhu0c-ACfzR5=Z=C1SbR70jrfCaCeEdfSJASSnzpqw@mail.gmail.com>
	<CAAy62_J+huc_d5r-gyYCMGh6AjfJH4YiEVov9eBmwbKbWTe0Sw@mail.gmail.com>
	<CAFVRnyrpfRUVNWjR19+ou7PxQuLbaoY8yta+BAAK3zbMrdsOhw@mail.gmail.com>
Message-ID: <CAD1TkXuqFVjC0gp5EKmv=guWboYfNw8AU_4DW9=w4GHU=zn5Mw@mail.gmail.com>

> Pruned nodes are not the default configuration, if it was the default
configuration then I think you would see far more users running a pruned
node.

Default configurations aren't a big enough deal to factor into the critical
discussion of node costs versus transaction fee cost.  Default
configurations can be changed, and if nodes are negatively affected by a
default configuration, there will be an abundance of information about how
to correct that effect by turning on pruning.  Bitcoin can't design with
the assumption that people can't google - If we wanted to cater to that
population group right now, we'd need 100x the blocksize at least.

> But that would also substantially increase the burden on archive nodes.

This is already a big problem from the measurements I've been looking at.
There are alternatives that need to be considered there as well.  If we
limit ourselves to not changing the syncing process for most users, the
blocksize limit debate changes drastically.  Hard drive costs, CPU costs,
propagation times... none of those things matter because the cost of sync
bandwidth is so incredibly high even now ($130ish per month, see other
email).  Even if we didn't increase the blocksize any more than segwit,
we're already seeing sync costs being shifted onto fewer nodes - I.e., Luke
Jr's scan finding ~50k nodes online but only 7k of those show up on sites
like bitnodes.21.co.  Segwit will shift it further until the few nodes
providing sync limit speeds and/or max out on connections, providing no
fully-sync'd nodes for a new node to connect to. Then wallet providers /
node software will offer a solution - A bundled utxo checkpoint that
removes the need to sync.  This slightly increases centralization, and
increases centralization more if core were to adopt the same approach.

The advantage would be tremendous for such a simple solution - Node costs
would drop by a full order of magnitude for full nodes even today, more
when archival nodes are more restricted, history is bigger, and segwit
blocksizes are in effect, and then blocksizes could be safely increased by
nearly the same order of magnitude, increasing the utility of bitcoin and
the number of people that can effectively use it.

Another, much more complicated option is for the node sync process to
function like a tor network.  A very small number of seed nodes could send
data on to only other nodes with the highest bandwidth available(and good
retention policy, i.e. not tightly pruning as they sync), who then spread
it out further and so on.  That's complicated though, because as far as I
know the syncing process today has no ability to exchange a selfish syncing
node for a high performing syncing node.  I'm not even sure - will a
syncing node opt to sync from a different node that, itself, isn't fully
sync'd but is farther ahead?

At any rate, syncing bandwidth usage is a critical problem for future
growth and is solvable.  The upsides of fixing it are huge, though.

On Wed, Mar 29, 2017 at 9:25 AM, David Vorick via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

>
> On Mar 29, 2017 12:20 PM, "Andrew Johnson" <andrew.johnson83 at gmail.com>
> wrote:
>
> What's stopping these users from running a pruned node?  Not every node
> needs to store a complete copy of the blockchain.
>
>
> Pruned nodes are not the default configuration, if it was the default
> configuration then I think you would see far more users running a pruned
> node.
>
> But that would also substantially increase the burden on archive nodes.
>
>
> Further discussion about disk space requirements should be taken to
> another thread.
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/6593ee82/attachment.html>

From praxeology_guy at protonmail.com  Wed Mar 29 21:36:17 2017
From: praxeology_guy at protonmail.com (praxeology_guy)
Date: Wed, 29 Mar 2017 17:36:17 -0400
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAD1TkXtze_TVegXz4AeJCxK59+cuwRQ=w4upzX+HoQ90Py52OA@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>
	<CAFVRnyr=cYf34X80+dLHwYEPHdqA7mMtYZ_gD6j09C+aM31gQQ@mail.gmail.com>
	<f61153c3-9afb-5cee-2c6b-70d67208f015@gmail.com>
	<CAFVRnyo1XGNbq_F8UfqqJWHCVH14iMCUMU-R5bOh+h3mtwSUJg@mail.gmail.com>
	<CAFVRnyqxQhu0c-ACfzR5=Z=C1SbR70jrfCaCeEdfSJASSnzpqw@mail.gmail.com>
	<CAD1TkXtze_TVegXz4AeJCxK59+cuwRQ=w4upzX+HoQ90Py52OA@mail.gmail.com>
Message-ID: <jRFkkhycfEOnx_R4MAHAL7H6CV_McUQkW0CgjKbUUeiwx-0Ea8KVW2FVTE2hpf7y0cHpyn_Eb4JfCs2m_Vxn0e-sH_ApkM8NNScvyYKqB58=@protonmail.com>

Peter R said: "On that topic, are there any existing proposals detailing a canonical ordering of the UTXO set and a scheme to calculate the root hash?"

I created such here: "A Commitment-suitable UTXO set "Balances" file data structure": https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-March/013692.html

In short it periodically makes snapshots on the state of the UTXO N blocks ago, where N = the snapshot period. UTXOs are ordered by TXID. I've also implemented it in C and tested making them.

gmaxwell says the utxo data format will change and I have other recommended changes to the chainstate database in order to make this more efficient. He pointed me to another similar solution... and suggested this would be done later after SegWit and after the UTXO data format was changed in the chainstate database.

Cheers,
Praxeology Guy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/7498459c/attachment.html>

From jaredr26 at gmail.com  Wed Mar 29 22:08:33 2017
From: jaredr26 at gmail.com (Jared Lee Richardson)
Date: Wed, 29 Mar 2017 15:08:33 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFVRnyq9Qgw88RZqenjQTDZHEWeuNCdh12Dq7wCGZdu9ZuEN9w@mail.gmail.com>
References: <CAEgR2PEG1UMqY0hzUH4YE_an=qOvQUgfXreSRsoMWfFWxG3Vqg@mail.gmail.com>
	<CAFVRnyq9Qgw88RZqenjQTDZHEWeuNCdh12Dq7wCGZdu9ZuEN9w@mail.gmail.com>
Message-ID: <CAD1TkXvd4yLHZDAdMi78WwJ_siO1Vt7=DgYiBmP45ffVveuHBg@mail.gmail.com>

> It's a political assessment. Full nodes are the ultimate arbiters of
consensus.

That's not true unless miners are thought of as the identical to nodes,
which is has not been true for nearly 4 years now.  Nodes arbitrating a
consensus the BU theory - that nodes can restrain miners - but it doesn't
work.  If miners were forked off from nonminers, the miner network could
keep their blockchain operational under attack from the nodes far better
than nodes could keep their blockchain operational under attack from the
miners.  The miners could effectively grind the node network to a complete
halt and probably still run their own fork unimpeded at the same time.
This would continue until the the lack of faith in the network drove the
miners out of business economically, or until the node network capitulated
and followed the rules of the miner network.

The reason BU isn't a dire threat is that there's a great rift between the
miners just like there is between the average users, just as satoshi
intended, and that rift gives the user network the economic edge.

> If home users are not running their own full nodes, then home users have
to trust and rely on other, more powerful nodes to represent them. Of
course, the more powerful nodes, simply by nature of having more power, are
going to have different opinions and objectives from the users.

I think you're conflating mining with node operation here.  Node users only
power is to block the propagation of certain things.  Since miners also
have a node endpoint, they can cut the node users out of the equation by
linking with eachother directly - something they already do out of
practicality for propagation.  Node users do not have the power to
arbitrate consensus, that is why we have blocks and PoW.

> And it's impossible for 5000 nodes to properly represent the views of
5,000,000 users. Users running full nodes is important to prevent political
hijacking of the Bitcoin protocol.  [..] that changes you are opposed to
are not introduced into the network.

This isn't true.  Non-miner nodes cannot produce blocks.  Their opinion is
not represented in the blockchain in any way, the blockchain is entirely
made up of blocks.  They can commit transactions, but the transactions must
follow an even stricter set of rules and short of a user activated PoW
change, the miners get to decide.  It might be viable for us to introduce
ways for transactions to vote on things, but that also isn't nodes voting -
that's money voting.

Bitcoin is structured such that nodes have no votes because nodes cannot be
trusted.  They don't inherently represent individuals, they don't
inherently represent value, and they don't commit work that is played
against eachother to achieve a game theory equilibrium.  That's miners.

> This statement is not true for home users, it is true for datacenter
nodes. For home users, 200 GB of bandwidth and 500 GB of bandwidth largely
have the exact same cost.

Your assumption is predicated upon the idea that users pay a fixed cost for
any volume of bandwidth.  That assertion is true for some users but not
true for others, and it is becoming exceedingly less true in recent years
with the addition of bandwidth caps by many ISP's.  Even users without a
bandwidth cap can often get a very threatening letter if they were to max
their connection 24/7.  Assuming unlimited user bandwidth in the future and
comparing that with limited datacenter bandwidth is extremely short
sighted.  Fundamentally, if market forces have established that datacenter
bandwidth costs $0.09 per GB, what makes you think that ISP's don't have to
deal with the same limitations?  They do, the difference is that $0.09 per
GB times the total usage across the ISP's customer base is far, far lower
than $80 times the number of customers.  The more that a small group of
customers deviating wildly becomes a problem for them, the more they will
add bandwidth caps or send threatening letters or even rate-limit or stop
serving those users.

Without that assumption, your math and examples fall apart - Bandwidth
costs for full archival nodes are nearly 50 times higher than storage costs
no matter whether they are at home or in a datacenter.

> The financials of home nodes follow a completely different math than the
costs you are citing by quoting datacenter prices.

No, they really aren't without your assumption.  Yes, they are somewhat
different - If someone has a 2TB hard drive but only ever uses 40% of it,
the remaining hard drive space would have a cost of zero.  Those specific
examples break down when you average over several years and fifty thousand
users.  If that same user was running a bitcoin node and hard drive space
was indeed a concern, they would factor that desire into the purchase of
their next computer, preferring those with larger hard drives.  That
reintroduces the cost with the same individual who had no cost before.  The
cost difference doesn't work out to the exact same numbers as the
datacenter costs, who have a better economy of scale but also have profit
and business overhead, but all of the math I've done indicates that over
thousands of individuals and several years of time, the costs land in the
same ballpark.  For example - Comcast bandwidth cap = 1000gb @ ~$80/month.
 $0.08/GB.  Amazon's first tier is currently $0.09.  Much closer than I
even expected before I worked out the math.  I'm open to being proven wrong.

> 0.14 uses more than 1 GB of RAM.

I'm running 0.13.2 and only see 300 mb of ram.  Why is 0.14 using three
times the ram?

> 1GB I think is really the limit you'd want to have before you'd start
seeing users choose not to run nodes simply

Again, while I sympathize with the concept, I don't believe holding the
growth of the entire currency back based on minimum specs is a fair
tradeoff.  The impact on usecases that depend on a given fee level is total
obliteration.  That's unavoidable for things like microtransactions, but a
fee level of $1/tx allows for hundreds of opportunities that a fee level of
$100/tx does not.  That difference may be the deciding factor in the
network effect between Bitcoin and a competitor altcoin.  Bitcoin dying out
because a better-operated coin steals its first-mover advantage is just as
bad as bitcoin dying out because an attacker halted tx propagation and
killed the network.  Probably even worse - First mover advantages are
almost never retaken, but the network could recover from a peering attack
with software changes and community/miner responses.

> However, I think the fees would have to get in the $50 range for that to
start to be the case.

I calculated this out.  If blocksizes aren't increased, but price increases
continue as they have in the last 3-5 years, per-node operational costs for
one month drop from roughly $10-15ish (using datacenter numbers, which you
said would be higher than home user numbers and might very well be when
amortized thoroughly) down to $5-8 in less than 8 years.  If transaction
fees don't rise at all due to blockspace competition (i.e., they offset
only the minimum required for miners to economically protect Bitcoin),
they'll be above $10 in less than 4 years.  I believe that comparing
1-month of node operational costs versus 1 transaction fee is a reasonable,
albeit imperfect, comparison of when users will stop caring.

That's not very far in the future at all, and fee-market competition will
probably be much, much worse for us and better for miners.

> When talking about emergency funds - that is, $10k+ that you keep in case
your government defaults, hyperinflates, seizes citizen assets, etc. etc.
(situations that many Bitcoin users today have to legitimately worry about),

So I don't mean to be rude here, but this kind of thinking is very poor
logic when applied to anyone who isn't already a libertarian Bitcoin
supporter.  By anyone outside the Bitcoin world's estimation, Bitcoin is an
extremely high risk, unreliable store of value.  We like to compare it to
"digital gold" because of the parameters that Satoshi chose, but saying it
does not make it true.  For someone not already a believer, Bitcoin is a
risky, speculative investment into a promising future technology, and gold
is a stable physical asset with 4,000 years of acceptance history that has
the same value in nearly every city on the planet.  Bitcoin is difficult to
purchase and difficult to find someone to exchange for goods or services.

Could Bitcoin become more like what you described in the future?  A lot of
us hope so or we wouldn't be here right now.  But in the meantime, any
other crypto currency that choses parameters similar to gold could eclipse
Bitcoin if we falter.  If their currency is more usable because they
balance the ratio of node operational costs/security versus transaction
fees/usability, they have a pretty reasonable chance of doing so.  And then
you won't store your $10k+ in bitcoin, you'll store in $altcoin.  The
market doesn't really care who wins.

> We are two orders of magnitude away from this type of fee pressure, so I
think it continues to make sense to be considering the home nodes as the
target that we want to hit.

That's nothing, we've never had any fee competition at all until basically
November of last year.  From December to March transaction fees went up by
250%, and they doubled from May to December before that.  Transactions per
year are up 80% per year for the last 4 years.  Things are about to get
screwed.


On Wed, Mar 29, 2017 at 1:28 PM, David Vorick via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> > > When considering what block size is acceptable, the impact of running
> bitcoin in the background on affordable, non-dedicated home-hardware should
> be a top consideration.
>
> > Why is that a given?  Is there math that outlines what the risk levels
> are for various configurations of node distributions, vulnerabilities,
> etc?  How does one even evaluate the costs versus the benefits of node
> costs versus transaction fees?
>
> It's a political assessment. Full nodes are the ultimate arbiters of
> consensus. When a contentious change is suggested, only the full nodes have
> the power to either accept or reject this contentious change. If home users
> are not running their own full nodes, then home users have to trust and
> rely on other, more powerful nodes to represent them. Of course, the more
> powerful nodes, simply by nature of having more power, are going to have
> different opinions and objectives from the users. And it's impossible for
> 5000 nodes to properly represent the views of 5,000,000 users. Users
> running full nodes is important to prevent political hijacking of the
> Bitcoin protocol. Running a full node yourself is the only way to guarantee
> (in the absence of trust - which Bitcoin is all about eliminating trust)
> that changes you are opposed to are not introduced into the network.
>
> > Disk space is not the largest cost, either today or in the future.
> Without historical checkpointing in some fashion, bandwidth costs are more
> than 2 orders of magnitude higher cost than every other cost for full
> listening nodes.
>
> This statement is not true for home users, it is true for datacenter
> nodes. For home users, 200 GB of bandwidth and 500 GB of bandwidth largely
> have the exact same cost. I pay a fixed amount of money for my internet,
> and if I use 500 GB the cost is identical to if I use 200 GB. So long as
> bandwidth is kept under my home bandwidth cap, bandwidth for home nodes is
> _free_.
>
> Similarly, disk space may only be $2/TB in bulk, but as a home user I have
> a $1000 computer with 500 GB of total storage, 100 GB seems
> (psychologically) to cost a lot closer to $200 than to $2. And if I go out
> and buy an extra drive to support Bitcoin, it's going to cost about $50 no
> matter what drive I pick, because that's just how much you have to spend to
> get a drive. The fact that I get an extra 900 GB that I'm not using is
> irrelevant - I spent $50 explicitly so I could run a bitcoin node.
>
> The financials of home nodes follow a completely different math than the
> costs you are citing by quoting datacenter prices.
>
> > I don't know how to evaluate the impacts of RAM or CPU usage, or
> consequently electricity usage for a node yet.  I'm open to quantifying any
> of those if there's a method, but it seems absurd that ram could even
> become a signficant factor given the abundance of cheap ram nowadays with
> few programs needing it.
>
> Many home machines only have 4GB of RAM. (I am acutely aware of this
> because my own software consumes about 3.5GB of RAM, which means all of our
> users stuck at 4 GB cannot use my software and Chrome at the same time).
> 0.14 uses more than 1 GB of RAM. This I think is not really a problem for
> most people, but it becomes a problem if the amount of RAM required grows
> enough that they can't have all of their programs open at the same time.
> 1GB I think is really the limit you'd want to have before you'd start
> seeing users choose not to run nodes simply because they'd rather have 300
> tabs open instead.
>
> CPU usage I think is pretty minimal. Your node is pretty busy during IBD
> which is annoying but tolerable. And during normal usage a user isn't even
> going to notice. Same for electricity. They aren't going to notice at the
> end of the month if their electricity bill is a dollar higher because of
> Bitcoin.
>
> > The consequence of your logic that holds node operational costs down is
> that transaction fees for users go up, adoption slows as various use cases
> become impractical, price growth suffers, and alt coins that choose lower
> fees over node cost concerns will exhibit competitive growth against
> Bitcoin's crypto-currency market share.  Even if you are right, that's
> hardly a tradeoff not worth thoroughly investigating from every angle, the
> consequences could be just as dire for Bitcoin in 10 years as it would be
> if we made ourselves vulnerable.
>
> This is very much worth considering. If transaction fees are so high that
> there is no use case at all for people unwilling to buy extra hardware for
> Bitcoin (a dedicated node or whatever), then there is no longer a reason to
> worry about these people as users. However, I think the fees would have to
> get in the $50 range for that to start to be the case. When talking about
> emergency funds - that is, $10k+ that you keep in case your government
> defaults, hyperinflates, seizes citizen assets, etc. etc. (situations that
> many Bitcoin users today have to legitimately worry about), then you are
> going to be making a few transactions per year at most, and the cost of
> fees on a home node may be $150 / yr, while the cost of dedicated hardware
> might be $150/yr ($600 box amortized over 4 years). We are two orders of
> magnitude away from this type of fee pressure, so I think it continues to
> make sense to be considering the home nodes as the target that we want to
> hit.
>
> >  What about periodically committing the entire UTXO set to a special
> checkpoint block which becomes the new de facto Genesis block?
>
> This should be discussed in another thread but I don't think I'm alone in
> saying that I think this could actually be done in a secure / safe /
> valuable way if you did it correctly. It would reduce bandwidth pressure on
> archive nodes, reduce disk pressure on full nodes, and imo make for a more
> efficient network overall.
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/58af5724/attachment-0001.html>

From jaredr26 at gmail.com  Wed Mar 29 22:17:40 2017
From: jaredr26 at gmail.com (Jared Lee Richardson)
Date: Wed, 29 Mar 2017 15:17:40 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <E54123C8-F124-449A-9C65-F40FA6917813@gmx.com>
References: <CAEgR2PEG1UMqY0hzUH4YE_an=qOvQUgfXreSRsoMWfFWxG3Vqg@mail.gmail.com>
	<E54123C8-F124-449A-9C65-F40FA6917813@gmx.com>
Message-ID: <CAD1TkXsv3cu4w-vEJ5=jPxFC6EHr0ryGNy5ao3RrDNDCn5xELQ@mail.gmail.com>

> I?m confident that we could work with the miners who we have good
relationships with to start including the root hash of the (lagging) UTXO
set in their coinbase transactions, in order to begin transforming this
idea into reality.

By itself, this wouldn't work without a way for a new node to differentiate
between a false history and a true one.

>  We could also issue regular transactions from ?semi-trusted? addresses
controlled by known people that include the same root hash in an OP_RETURN
output, which would allow cross-checking against the miners? UTXO
commitments, as part of this initial ?prototype?

This might work, but I fail to understand how a new node could verify an
address / transaction without a blockchain to back it.  Even if it could,
it becomes dependent upon those addresses not being compromised, and the
owners of those addresses would become targets for potential government
operations.

Having the software silently attempt to resolve the problem is risky unless
it is foolproof.  Otherwise, users will assume their software is showing
them the correct history/numbers implicitly, and if the change the utxo
attacker made was small, the users might be able to follow the main chain
totally until it was too late and the attacker struck with an address that
otherwise never transacted.  Sudden, bizarre, hard to debug fork and
potentially double spend against people who picked up the fraudulent utxo.

Users already treat wallet software with some level of suspicion, asking if
they can trust x or y or z, or like the portion of the BU community
convinced that core has been compromised by blockstream bigwigs.  Signed
releases could provide the same thing but would encourage both open-source
security checks of the signed utxo's and potentially of users to check
download signatures.

Either approach is better than what we have now though, so I'd support
anything.

On Wed, Mar 29, 2017 at 1:28 PM, Peter R via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> I believe nearly everyone at Bitcoin Unlimited would be supportive of a
> UTXO check-pointing scheme.  I?d love to see this happen, as it would
> greatly reduce the time needed to get a new node up-and-running, for node
> operators who are comfortable trusting these commitments.
>
> I?m confident that we could work with the miners who we have good
> relationships with to start including the root hash of the (lagging) UTXO
> set in their coinbase transactions, in order to begin transforming this
> idea into reality.  We could also issue regular transactions from
> ?semi-trusted? addresses controlled by known people that include the same
> root hash in an OP_RETURN output, which would allow cross-checking against
> the miners? UTXO commitments, as part of this initial ?prototype? system.
>
> This would "get the ball rolling" on UTXO commitments in a permissionless
> way (no one can stop us from doing this). If the results from this
> prototype commitment scheme were positive, then perhaps there would be
> support from the community and miners to enforce a new rule which requires
> the (lagging) root hashes be included in new blocks.  At that point, the
> UTXO commitment scheme is no longer a prototype but a trusted feature of
> the Bitcoin network.
>
> On that topic, are there any existing proposals detailing a canonical
> ordering of the UTXO set and a scheme to calculate the root hash?
>
> Best regards,
> Peter
>
>
> On Mar 29, 2017, at 12:33 PM, Daniele Pinna via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> What about periodically committing the entire UTXO set to a special
> checkpoint block which becomes the new de facto Genesis block?
>
> Daniele
>
> ------------------------------
>
> Message: 5
> Date: Wed, 29 Mar 2017 16:41:29 +0000
> From: Andrew Johnson <andrew.johnson83 at gmail.com>
> To: David Vorick <david.vorick at gmail.com>
> Cc: Bitcoin Dev <bitcoin-dev at lists.linuxfoundation.org>
> Subject: Re: [bitcoin-dev] Hard fork proposal from last week's meeting
> Message-ID:
>         <CAAy62_+JtoAuM-RsrAAp5eiGiO+OHLDjzqgbnF2De7TUU7TyYg at mail.gm
> ail.com>
> Content-Type: text/plain; charset="utf-8"
>
> I believe that as we continue to add users to the system by scaling
> capacity that we will see more new nodes appear, but I'm at a bit of a loss
> as to how to empirically prove it.
>
> I do see your point on increasing load on archival nodes, but the majority
> of that load is going to come from new nodes coming online, they're the
> only ones going after very old blocks.   I could see that as a potential
> attack vector, overwhelm the archival nodes by spinning up new nodes
> constantly, therefore making it difficult for a "real" new node to get up
> to speed in a reasonable amount of time.
>
> Perhaps the answer there would be a way to pay an archival node a small
> amount of bitcoin in order to retrieve blocks older than a certain cutoff?
> Include an IP address for the node asking for the data as metadata in the
> transaction...  Archival nodes could set and publish their own policy, let
> the market decide what those older blocks are worth.  Would also help to
> incentivize running archival node, which we do need.  Of course, this isn't
> very user friendly.
>
> We can take this to bitcoin-discuss, if we're getting too far off topic.
>
>
> On Wed, Mar 29, 2017 at 11:25 AM David Vorick <david.vorick at gmail.com>
> wrote:
>
> >
> > On Mar 29, 2017 12:20 PM, "Andrew Johnson" <andrew.johnson83 at gmail.com>
> > wrote:
> >
> > What's stopping these users from running a pruned node?  Not every node
> > needs to store a complete copy of the blockchain.
> >
> >
> > Pruned nodes are not the default configuration, if it was the default
> > configuration then I think you would see far more users running a pruned
> > node.
> >
> > But that would also substantially increase the burden on archive nodes.
> >
> >
> > Further discussion about disk space requirements should be taken to
> > another thread.
> >
> >
> > --
> Andrew Johnson
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/atta
> chments/20170329/9b48ebe3/attachment.html>
>
> ------------------------------
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170329/8b4cf6b4/attachment.html>

From vitteaymeric at gmail.com  Wed Mar 29 22:33:20 2017
From: vitteaymeric at gmail.com (Aymeric Vitte)
Date: Thu, 30 Mar 2017 00:33:20 +0200
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAD1TkXtze_TVegXz4AeJCxK59+cuwRQ=w4upzX+HoQ90Py52OA@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>
	<CAFVRnyr=cYf34X80+dLHwYEPHdqA7mMtYZ_gD6j09C+aM31gQQ@mail.gmail.com>
	<f61153c3-9afb-5cee-2c6b-70d67208f015@gmail.com>
	<CAFVRnyo1XGNbq_F8UfqqJWHCVH14iMCUMU-R5bOh+h3mtwSUJg@mail.gmail.com>
	<CAFVRnyqxQhu0c-ACfzR5=Z=C1SbR70jrfCaCeEdfSJASSnzpqw@mail.gmail.com>
	<CAD1TkXtze_TVegXz4AeJCxK59+cuwRQ=w4upzX+HoQ90Py52OA@mail.gmail.com>
Message-ID: <2349f523-942c-ffb9-7af2-5cc81264888f@gmail.com>

I have heard such theory before, it's a complete mistake to think that
others would run full nodes to protect their business and then yours,
unless it is proven that they are decentralized and independent

Running a full node is trivial and not expensive for people who know how
to do it, even with much bigger blocks, assuming that the full nodes are
still decentralized and that they don't have to fight against big nodes
who would attract the traffic first

I have posted many times here a small proposal, that exactly describes
what is going on now, yes miners are nodes too... it's disturbing to see
that despite of Tera bytes of BIPs, papers, etc the current situation is
happening and that all the supposed decentralized system is biased by
centralization

Do we know what majority controls the 6000 full nodes?


Le 29/03/2017 ? 22:32, Jared Lee Richardson via bitcoin-dev a ?crit :
> > Perhaps you are fortunate to have a home computer that has more than
> a single 512GB SSD. Lots of consumer hardware has that little storage.
>
> That's very poor logic, sorry.  Restricted-space SSD's are not a
> cost-effective hardware option for running a node.  Keeping blocksizes
> small has significant other costs for everyone.  Comparing the cost of
> running a node under arbitrary conditons A, B, or C when there are far
> more efficient options than any of those is a very bad way to think
> about the costs of running a node.  You basically have to ignore the
> significant consequences of keeping blocks small.
>
> If node operational costs rose to the point where an entire wide swath
> of users that we do actually need for security purposes could not
> justify running a node, that's something important for consideration. 
> For me, that translates to modern hardware that's relatively well
> aligned with the needs of running a node - perhaps budget hardware,
> but still modern - and above-average bandwidth caps.
>
> You're free to disagree, but your example only makes sense to me if
> blocksize caps didn't have serious consequences.  Even if those
> consequences are just the threat of a contentious fork by people who
> are mislead about the real consequences, that threat is still a
> consequence itself.
>
> On Wed, Mar 29, 2017 at 9:18 AM, David Vorick via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org
> <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
>
>     Perhaps you are fortunate to have a home computer that has more
>     than a single 512GB SSD. Lots of consumer hardware has that little
>     storage. Throw on top of it standard consumer usage, and you're
>     often left with less than 200 GB of free space. Bitcoin consumes
>     more than half of that, which feels very expensive, especially if
>     it motivates you to buy another drive.
>
>     I have talked to several people who cite this as the primary
>     reason that they are reluctant to join the full node club.
>
>     _______________________________________________
>     bitcoin-dev mailing list
>     bitcoin-dev at lists.linuxfoundation.org
>     <mailto:bitcoin-dev at lists.linuxfoundation.org>
>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>     <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
>
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-- 
Zcash wallets made simple: https://github.com/Ayms/zcash-wallets
Bitcoin wallets made simple: https://github.com/Ayms/bitcoin-wallets
Get the torrent dynamic blocklist: http://peersm.com/getblocklist
Check the 10 M passwords list: http://peersm.com/findmyass
Anti-spies and private torrents, dynamic blocklist: http://torrent-live.org
Peersm : http://www.peersm.com
torrent-live: https://github.com/Ayms/torrent-live
node-Tor : https://www.github.com/Ayms/node-Tor
GitHub : https://www.github.com/Ayms

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/c54aa76d/attachment-0001.html>

From lucasontivero at gmail.com  Thu Mar 30 04:50:54 2017
From: lucasontivero at gmail.com (Lucas Ontivero)
Date: Thu, 30 Mar 2017 01:50:54 -0300
Subject: [bitcoin-dev] A BIP proposal for segwit addresses
In-Reply-To: <obg116$sa2$1@blaine.gmane.org>
References: <CAPg+sBh0sFA7b6a+48Oojwy655GB9W6Th8JiCpd+2ruQjPev8Q@mail.gmail.com>
	<oarjko$8fp$1@blaine.gmane.org>
	<20170321191454.GA17834@savin.petertodd.org>
	<obg116$sa2$1@blaine.gmane.org>
Message-ID: <CALHvQn1pTUeqhgq8pkFEAmmjN+vWk6QUS2hW_jNNfwbCPW4D_Q@mail.gmail.com>

I don't know if i should response to this mail list or make a comment in
commit file (
https://github.com/sipa/bech32/commit/52b5a0fa6d3174c4150393fb7d6b58d34b4f5e0b#diff-d23a42e5c904045098e8f8b1189f481e
)

* Motivation:

Here I think it could worth to mention that 58 requires mathematical
operations over big numbers. This is not very fast and most of the
programming languages don't provide support for big numbers OOB.

* Why not make an address format that is generic for all scriptPubKeys?:

I understand that if a new generic encoding format is introduced that could
lead to some confusions but what if in the future there is a new type of
address that can also be encoded with bech32? Don't we need a address type
anyway?

thx


2017-03-29 7:07 GMT-03:00 Andreas Schildbach via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org>:

> On 03/21/2017 08:14 PM, Peter Todd via bitcoin-dev wrote:
> > On Tue, Mar 21, 2017 at 05:16:30PM +0100, Andreas Schildbach via
> bitcoin-dev wrote:
> >> Why use Base 32 when the QR code alphanumeric mode allows 44 characters?
> >> In Bitcoin Wallet, I use Base 43 (alphabet:
> >> "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ$*+-./:") for most efficient QR
> >> code encoding. I only leave out the space character because it gets
> >> replaced by "+" in URLs.
> >
> > Doing that only makes addresses a few % shorter, at the cost of
> significant
> > downsides.  For example, not everyone knows what those additional
> characters
> > are called, particularly for non-English-speaking users. Non-alphanumeric
> > characters also complicate using the addresses in a variety of contexts
> ('/'
> > in particularly isn't valid in filenames).
>
> I'm not convinced that transmitting addresses via voice should be a
> usecase to target at. I don't understand your comment about non-english
> speaking users. Obviously they cannot voice-communicate at all with
> only-english-speaking users, so there is no need to communicate
> voice-communicate addresses between them.
>
> Addresses in QR codes, addresses in URLs and addresses in NFC NDEF
> messages are the three most used forms.
>
> Speaking of URLs, actually Base 32 (as well as Base 43) makes QR codes
> *bigger* because due to the characters used for URL parameters (?&=)
> those QR codes are locked to binary mode. To make them shorter, we'd
> need to use something like "Base 64url" (or ideally Base 94 -- all
> printable ASCII characters).
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/7daa6736/attachment-0001.html>

From rjmarti2 at millersville.edu  Thu Mar 30 05:23:31 2017
From: rjmarti2 at millersville.edu (Ryan J Martin)
Date: Thu, 30 Mar 2017 05:23:31 +0000
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <2349f523-942c-ffb9-7af2-5cc81264888f@gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>
	<CAFVRnyr=cYf34X80+dLHwYEPHdqA7mMtYZ_gD6j09C+aM31gQQ@mail.gmail.com>
	<f61153c3-9afb-5cee-2c6b-70d67208f015@gmail.com>
	<CAFVRnyo1XGNbq_F8UfqqJWHCVH14iMCUMU-R5bOh+h3mtwSUJg@mail.gmail.com>
	<CAFVRnyqxQhu0c-ACfzR5=Z=C1SbR70jrfCaCeEdfSJASSnzpqw@mail.gmail.com>
	<CAD1TkXtze_TVegXz4AeJCxK59+cuwRQ=w4upzX+HoQ90Py52OA@mail.gmail.com>,
	<2349f523-942c-ffb9-7af2-5cc81264888f@gmail.com>
Message-ID: <127281C1AA02374F8AAD9EE04FAE878A0218E8B825@STUDMail1.muad.local>

There is alot going on in this thread so I'll reply more broadly.

     The original post and the assorted limit proposals---lead me to something I think is worth reiterating: assuming Bitcoin adoption continues to grow at similar or accelerating rates, then eventually the mempool is going to be filled with thousands of txs at all times whether block limits are 1MB or 16MB. This isn't to say that increasing the limit isn't a worthwhile change, but rather, that if we are going to change the block limit then it should be done with the intent to achieve a fee rate that maximize surplus (and minimize burden) to both users and miners. Even with implementation of a a payment channels system, the pool will likely be faced with having a mountain of txs. Thus the block limit should be optimized in such that social welfare is optimized.
    Optimized is likely not keeping the limit at 1MB; this maximizes benefit to miners (producers) while minimizing users' surplus (consumer). 'Unlimited' blocks are purely the reverse; maximizing user surplus while minimizing miners' (with the added bonus of creating blocks that will put technical/hardware strain on the network). So perhaps pursue something in-between that actually optimizes based on a social welfare formula---not just an arbitrary auto-adjusting limit like the other proposals I've seen. Feel free to poke holes in this or e-mail me if curious.

     Finally, with respect to getting node counts up, didn't luke-jr or someone come up with an idea of paying nodes a reward by scraping dust and pooling it into a fund of sorts? Was this not possible/feasible? Perhaps at least in the near and medium term something outside of protocol changes could be done to pay a reward to nodes. Even if this is done via voluntary donation system, it may be useful for the purposes of seeing how people respond to incentives and working out an elasticity measure of sorts for running a node.


Ryan J. Martin
rjmarti2 at millersville.edu
(on freenode: tunafizz )

________________________________
From: bitcoin-dev-bounces at lists.linuxfoundation.org [bitcoin-dev-bounces at lists.linuxfoundation.org] on behalf of Aymeric Vitte via bitcoin-dev [bitcoin-dev at lists.linuxfoundation.org]
Sent: Wednesday, March 29, 2017 6:33 PM
To: Jared Lee Richardson; Bitcoin Protocol Discussion
Subject: Re: [bitcoin-dev] Hard fork proposal from last week's meeting


I have heard such theory before, it's a complete mistake to think that others would run full nodes to protect their business and then yours, unless it is proven that they are decentralized and independent

Running a full node is trivial and not expensive for people who know how to do it, even with much bigger blocks, assuming that the full nodes are still decentralized and that they don't have to fight against big nodes who would attract the traffic first

I have posted many times here a small proposal, that exactly describes what is going on now, yes miners are nodes too... it's disturbing to see that despite of Tera bytes of BIPs, papers, etc the current situation is happening and that all the supposed decentralized system is biased by centralization

Do we know what majority controls the 6000 full nodes?

Le 29/03/2017 ? 22:32, Jared Lee Richardson via bitcoin-dev a ?crit :
> Perhaps you are fortunate to have a home computer that has more than a single 512GB SSD. Lots of consumer hardware has that little storage.

That's very poor logic, sorry.  Restricted-space SSD's are not a cost-effective hardware option for running a node.  Keeping blocksizes small has significant other costs for everyone.  Comparing the cost of running a node under arbitrary conditons A, B, or C when there are far more efficient options than any of those is a very bad way to think about the costs of running a node.  You basically have to ignore the significant consequences of keeping blocks small.

If node operational costs rose to the point where an entire wide swath of users that we do actually need for security purposes could not justify running a node, that's something important for consideration.  For me, that translates to modern hardware that's relatively well aligned with the needs of running a node - perhaps budget hardware, but still modern - and above-average bandwidth caps.

You're free to disagree, but your example only makes sense to me if blocksize caps didn't have serious consequences.  Even if those consequences are just the threat of a contentious fork by people who are mislead about the real consequences, that threat is still a consequence itself.

On Wed, Mar 29, 2017 at 9:18 AM, David Vorick via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
Perhaps you are fortunate to have a home computer that has more than a single 512GB SSD. Lots of consumer hardware has that little storage. Throw on top of it standard consumer usage, and you're often left with less than 200 GB of free space. Bitcoin consumes more than half of that, which feels very expensive, especially if it motivates you to buy another drive.

I have talked to several people who cite this as the primary reason that they are reluctant to join the full node club.

_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev





_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev



--
Zcash wallets made simple: https://github.com/Ayms/zcash-wallets
Bitcoin wallets made simple: https://github.com/Ayms/bitcoin-wallets
Get the torrent dynamic blocklist: http://peersm.com/getblocklist
Check the 10 M passwords list: http://peersm.com/findmyass
Anti-spies and private torrents, dynamic blocklist: http://torrent-live.org
Peersm : http://www.peersm.com
torrent-live: https://github.com/Ayms/torrent-live
node-Tor : https://www.github.com/Ayms/node-Tor
GitHub : https://www.github.com/Ayms
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/8499f263/attachment-0001.html>

From natanael.l at gmail.com  Thu Mar 30 09:34:31 2017
From: natanael.l at gmail.com (Natanael)
Date: Thu, 30 Mar 2017 11:34:31 +0200
Subject: [bitcoin-dev] Block size adjustment idea - expedience fees +
 difficulty scaling proportional to block size (+ fee pool)
In-Reply-To: <CAAt2M1-LZQ1yE1CezFA+hr+=de-RVJ7wzkq-t969BC7OL6dWwg@mail.gmail.com>
References: <CAAt2M1_x8zbN-vmgDEUQQvzrtonEKydb+B-P53ibCimVfnd-CA@mail.gmail.com>
	<CAAt2M1-yWfqp+Ap=XUMiNro9oz=00WcJBSY1uVH3SrQ6GQ7Rig@mail.gmail.com>
	<CAAt2M1-z5nS35sn37B_cH=S6oxFVf8Myptw-rMLCQ21a-uL9nw@mail.gmail.com>
	<CAAt2M1_Rnejikvxd-X9SLdprS9rpq6b25aau0OSrWJu2YABMXw@mail.gmail.com>
	<CAAt2M1_NbWM66dOdP7U9AMGdE4-NB2OyN-SWLkD-P32SPLYRmQ@mail.gmail.com>
	<CAAt2M19_xUJy+=7mkmNxWR=J_=cjAjAnwkzbeTfFEx5s9FBTew@mail.gmail.com>
	<CAAt2M19u9ZYjonPc_ViPFNzk_VBrUBJoB6yrqq_6=EAtvGt7HQ@mail.gmail.com>
	<CAAt2M19HO2PE88wKQLiV+WicwoTY=5HV1LcpYQcK2f=nhsL=Kg@mail.gmail.com>
	<CAAt2M1-_=oeeeFy5_gGdEz_iw=Eo3xzkF6R4fzpbM3x4C6pr2g@mail.gmail.com>
	<CAAt2M1_-kby6Cy+P5aofoQXwUWfk8=wDqMO3c=z=rAwDvzbwkA@mail.gmail.com>
	<CAAt2M1_eCcf7EoyTiJTHzUPaxWE_dY14oRsbYG7J1TDRQMUDvw@mail.gmail.com>
	<CAAt2M1-4K+6TAab6mv3PnBckZS=X6eCbfDwkMbXo45_d+dpo+A@mail.gmail.com>
	<CAAt2M1_kmvBsXOyX2k25JDHyQj8mwVG5vtat3nibG9Sv=NC-KQ@mail.gmail.com>
	<CAAt2M1-jZdvdz85tREdNdZJJK6btzsYvB3x9rMntB01rE-QC6Q@mail.gmail.com>
	<CAAt2M19UOmFya9jo25jWDpEDh6MEfKKHHtq3=QZP9XBkLbda7g@mail.gmail.com>
	<CAAt2M18Le_UNDFk+4x_=UdxX9SdoAQu6RpgCt5qDV79hJh_QUA@mail.gmail.com>
	<CAAt2M1_uRxkhsYY8c93LEh=knW1MQF7vNZ_xJbqSJihTFhEuqg@mail.gmail.com>
	<CAAt2M187ei5=CvaCjbsLuUM3cHjAb6qs=SeRQdjYBuJxsXSaWw@mail.gmail.com>
	<CAAt2M1885LuLJ-2=KL8sEMvutM_U3RFZ-nd25p_3k4-YkBrD=Q@mail.gmail.com>
	<CAAt2M19121uJiZu+ctJ0cHqJHp3JCvTHJYC6ACzP3_N+ZfxUHA@mail.gmail.com>
	<CAAt2M18VCKgcLDX2Y1Z+hHOehdEOhu4en9JOtNO63_8Y2Ne+rg@mail.gmail.com>
	<CAAt2M1--M7rT4khAFADopRig+GA+6n6_6hCK8LbV=cS_YAs+QA@mail.gmail.com>
	<CAAt2M1_2MaY55U7mNirP6KTjGbKRu_BMxwLFrRg5pdAd+83trg@mail.gmail.com>
	<CAAt2M1-dH3LFsPc-s1iPMQ8mWM4NqY5vmrpxuP1kdjHhNXEqLA@mail.gmail.com>
	<CAAt2M18Ty69L_7vfHv8sRmUEnW5K1VZzKRdxDMBANDt10LvD_A@mail.gmail.com>
	<CAAt2M1-Sq-+_0tgKOz_gQkCnBx2Lp=ugp2CQKaz97KHLvdcpdw@mail.gmail.com>
	<CAAt2M19Woysa0_HM7ZsiF14Tv4hVuRE69Eann=_fpOy2gTQV7A@mail.gmail.com>
	<CAAt2M1_itWrpDDVYXOaeQbk6r=B_K9Ow3dD9NvMtU_GGWH5mxA@mail.gmail.com>
	<CAAt2M18sQ-q_yyOVqM-am7rjPHz24hOmi+wo1pCVxuMTcNoHww@mail.gmail.com>
	<CAAt2M18062gaODy6FHqQw42Mhkg1Srs98W5xADcEgb9GcCn+Mw@mail.gmail.com>
	<CAAt2M1_GBXbOi=GUu7mohRqatZGue4DVtPO5CXZmtjKs-vEqEw@mail.gmail.com>
	<CAAt2M19UCAfTq+VyE178ASkjPb8EWm4o2zTPf7UGpNuKeeYcJg@mail.gmail.com>
	<CAAt2M19oxbgpeOMtonEe2xpoit2imPO4M5XZCw4Sap2VMT8zBQ@mail.gmail.com>
	<CAAt2M1_SriFNUcLJfsHNucr3rO8az4BkHVDX0e=_FAproGk6zw@mail.gmail.com>
	<CAAt2M19hjVSk1Lv-6qLgVTK1f283bQzRWy+yz-iiWi9_6z4s2w@mail.gmail.com>
	<CAAt2M19Lz_FKA-sDbC1P=1RMznd1tWSdpJsbZbH04SeZ-mqJxQ@mail.gmail.com>
	<CAAt2M1_+x7Sby-4ygyGPxQv87OhP2wpzP=hZEeUD_Aq9JPFsDw@mail.gmail.com>
	<CAAt2M1-cKQNsD-W4yZOkExx=K2d2YM2C93dmDEReFPP3VLa-2Q@mail.gmail.com>
	<CAAt2M1-x4H6FK6HL-8F-jr0nDg0VpZGCNkOVeWnP7e_UTUxX-w@mail.gmail.com>
	<CAAt2M195V7ynWe5tFd023hs4S06WWZGBXUFKLJfoc-U4Gw99HQ@mail.gmail.com>
	<CAAt2M18axXYYd4QDOo+q4_3Fb5-wyZRM9CzZ5G0vrdfMAmG25A@mail.gmail.com>
	<CAAt2M187Fvz0s=M5esfGe2q8O2CXdMAfBtTi+eVA9hQ86jYvVw@mail.gmail.com>
	<CAAt2M19Pc7LAW2SRCfSOWwNnUNR-dkVfn-6iTdLOBcasrqGs6A@mail.gmail.com>
	<CAAt2M18=qpQqPwy95vw+T5tkZTo457cp5ZHnJOkV+0kfCWW7Hg@mail.gmail.com>
	<CAAt2M19YGM6j3vRwuM5Oe9F0vjvbTjvqT0AT5-G6ZPQ8npo6uw@mail.gmail.com>
	<CAAt2M1_f+BbCEnkaPSCTMgw3oVkiueTr_dF0aDZS1XuZj2bxyg@mail.gmail.com>
	<CAAt2M185GrxytKYTwfZUGBmBH8OD2-VQUuxcja5HtFWLg2rsnw@mail.gmail.com>
	<CAAt2M18KpJqJpN+cBuXNYHbmsGMn7qa5ZZRP5JYTxLPWE2-G0w@mail.gmail.com>
	<CAAt2M1-NO2FErh15A67aigzULWeEPYB6yaR7_RynGr5_DCaRwQ@mail.gmail.com>
	<CAAt2M1-nLu69zUPrZhaxLYemd17nh-tMPa6+UYqoeGzufjjxEA@mail.gmail.com>
	<CAAt2M1-q8SeBPLFmjNZ-rtBbm2RN1NKN9H-3T0px3w21tEjHPQ@mail.gmail.com>
	<CAAt2M1--o0EgVwVi8dM5Rr-PdkPjmv90tE8K7keFMAmGWY7=aA@mail.gmail.com>
	<CAAt2M1_2Ajj1BfKRcHzABSt0sDYsc6PAeQfR=VPBG0c1Rmxn0g@mail.gmail.com>
	<CAAt2M18EVqAKz8K+QZhVfUZGjeAdP43mQQhmO6_D4i8377Bn+Q@mail.gmail.com>
	<CAAt2M19yftfzDLu1vRis_Ui_MZJN65Gy+Lyd+JMdaELfyc4atg@mail.gmail.com>
	<CAAt2M1_9V60dbDxvkmYVYPFZWVu6nNzWjS_E0icCKUq9jPZkXQ@mail.gmail.com>
	<CAAt2M1-9TJnpY6PAwjrOYU6WKTUY65uJ4Rg5mXXSbmb-NC+1dw@mail.gmail.com>
	<CAAt2M1-gyMP+t+z3DrTVQEQmDhm6jdXEs8=Vm9biUCT_bVWNzQ@mail.gmail.com>
	<CAAt2M18GKgjhUgSx0eo9XgQDehh2YgV0O2Q6Wbjkzk2dkAjy-w@mail.gmail.com>
	<CAAt2M19hUmRaL2QyB37i-3eHtS9RCxrDVUDJGi8qsMyF2DSujQ@mail.gmail.com>
	<CAAt2M1_5spX+8JsVykcc8O7jzk2a9cZBvgZm6UQwGDA4v3d+FA@mail.gmail.com>
	<CAAt2M1_0hjmtNwLvGbR_BGaMyhJ78+dBN7HxCkMAp-EbnLwhZg@mail.gmail.com>
	<CAAt2M18qRi6BQ+=2mabg1+qkgo5E9t-S5Co0uEtL76J_HOdtmg@mail.gmail.com>
	<CAAt2M1-McXyTYuMzD+ysv9ZUgPvSRSW7XjqhVKPZqLuS_DLZqw@mail.gmail.com>
	<CAAt2M19xJRUQG9ucpQoOQX=NJ9Vsv2wUTemDtNR672yOFNgWqg@mail.gmail.com>
	<CAAt2M182Ttc=Q2Zxu+_vtJ+Jp4hoWiY0wHtLd4pX5=iGJUvnAQ@mail.gmail.com>
	<CAAt2M18h6w9ctxudjaQLczkUXRRROXH=BmXL=ye45TvOs6w1Fg@mail.gmail.com>
	<CAAt2M1-ErU2SLLDFXWFshPABB5mEe-NcORwXvUHxyCP_i47NHw@mail.gmail.com>
	<CAAt2M1_9CP0DHGKw-t4s35Rgi-RR9Tw0rYtC1ogyNzvnZT1V+Q@mail.gmail.com>
	<CAAt2M1-uNX=VStfcVkRQGX4X1PQAvNKG_p7zCPCMnz=pERhuQg@mail.gmail.com>
	<CAAt2M1-eosLcpceRi=VK2+cjxoPDiWc78h8=xBFwFER+=Bd1aQ@mail.gmail.com>
	<CAAt2M18hRp8X9RwUTo5oouGGBrvf2FKs+D_jRhMMH+5RPi6Htg@mail.gmail.com>
	<CAAt2M19Ucc05MTtPwAV_gVfGY11shDTQ=42jCjLP-YD3jxGq1Q@mail.gmail.com>
	<CAAt2M1_2QqqYvf4YKyBZHru441cfv9eLP+W20L9TFhBA2iOz2w@mail.gmail.com>
	<CAAt2M18JmZupZwzD+TdQibHHpfgecps5pF+8SKkZVevhvBD=bg@mail.gmail.com>
	<CAAt2M1--V_5a6Wqj8BNF_rx4ejbep46iEEWSANu-qTxUsMgWGQ@mail.gmail.com>
	<CAAt2M19unyFm5qCDDhGMSSooHk9TeHJs6fAn8kocS9gYY0TvcQ@mail.gmail.com>
	<CAAt2M1_omDTW0XK4etoo+vbZLBGSCVGzBKKW3eVm_8GJGqNV9w@mail.gmail.com>
	<CAAt2M1-bqeqtB8S1BFQb-Tm2wx=QU8eVSu4gjxS=ZYyT=aL9xg@mail.gmail.com>
	<CAAt2M1-LBX=16yO3QdFpKSjFqLErQsW_suWb9fgGrHuHO81eZg@mail.gmail.com>
	<CAAt2M1-zxJJ9DdVMXRA9avarjjUbE_TgjhrD-JzwcTK6FtgGeg@mail.gmail.com>
	<CAAt2M19a=gd6Pg+BJQpwgdUi7MOUaNw497Zk0hw=FN2ZR2jsXg@mail.gmail.com>
	<CAAt2M18D6-hYanWVMUd3pK3BhRL4Q_zFSP_Z4=rPuah2X=o2WA@mail.gmail.com>
	<CAAt2M1-ETfspsYX4qAd_d==F9jTAsjHU8p9-Fs-P=KUYD8TRvg@mail.gmail.com>
	<CAAt2M18i=L4MFMC+uzNRPwUZbbzCZbuuk2SJTzQqTZLAU64+sw@mail.gmail.com>
	<CAAt2M1-quYTuhr9yXKyJzoxPg4vcLeRMTPX5GemJ+hGT4WbDwg@mail.gmail.com>
	<CAAt2M18mSF_xPOUmjCWAyOkX=vKC0EdSEvMiBC-eNeZa=2u0_g@mail.gmail.com>
	<CAAt2M19LrjODH+t3FJKfdtm2KOUTu1ZX_rF+EZhxoHc-Wi8Fow@mail.gmail.com>
	<CAAt2M18QjPrjh9nAjfaZ4QHOdvzC3-2sMoMwBna-Q4r+P=1d_A@mail.gmail.com>
	<CAAt2M19U5tXpERL9+Q5f4WMvCOMjoxn6VCemz=Urn4LHPZbfNA@mail.gmail.com>
	<CAAt2M1_s2x6H6_sFMBHj1N4Gaft-V3hFiKbSq1f4sCEmsz+NfA@mail.gmail.com>
	<CAAt2M18K2MUCa5eCoYsZntr9UaC9ie9rNdAzBi5XKgk_k+a-QA@mail.gmail.com>
	<CAAt2M19=HQos=aC4wo2drv-wH1_Br1BCLxKu5AkOJYQFmrkzFQ@mail.gmail.com>
	<CAAt2M1-ttJA=tPbVcj6xyGyt_B1jOi0s9f+KDcdEz5R+ewgbow@mail.gmail.com>
	<CAAt2M1_-uy4uzN9ViN8ogXYmjr7KPUWmsXuiVgQ_qMoeDDHPvg@mail.gmail.com>
	<CAAt2M18ws+P2Yg-6CF3Uff6gOU2NXubG6M2B2aq7XsBZk+BMVQ@mail.gmail.com>
	<CAAt2M1_qy4wqpT+Cs+owg8Hbf3GePv3XPGkW-EDJECYJrRmAZQ@mail.gmail.com>
	<CAAt2M1-Ty-DXGVd6GnWvWNkDg9MA3+Zqr6-kAOO-0D7iFZ4qeQ@mail.gmail.com>
	<CAAt2M198u71tFgdCQZcKJQBJWf4=PRjhA49CbXT8nX5AtqXkyQ@mail.gmail.com>
	<CAAt2M1-LZQ1yE1CezFA+hr+=de-RVJ7wzkq-t969BC7OL6dWwg@mail.gmail.com>
Message-ID: <CAAt2M18Fx9LwKU385id0_gHunLa=uQUmCO+jGkvSqb_2uLeCyg@mail.gmail.com>

I had these following ideas as I was thinking about how to allow larger
blocks without incentivizing the creation of excessively large blocks. I
don't know how much of this is novel, I'd appreciate if anybody could link
to any relevant prior art. I'm making no claims on this, anything novel in
here is directly released into public domain.

In short, I'm trying to rely on simple but direct incentives to improve the
behavior of Bitcoin.

Feedback requested. Some simulations requested, see below if you're willing
to help. Any questions are welcome.

---

Expedience fees. Softfork compatible.

You want to really make sure your transaction gets processed quickly?
Transactions could have a second fee type, a specially labeled
anyone-can-spend output with an op_return value defining a "best-before"
block number and some function describing the decline of the fee value for
every future block, such that before block N the miners can claim the full
expedience fee + the standard fee (if any), between block N+1 and N+X the
miner can claim a reduced expedience fee + standard fee, afterwards only
the standard fee.

When a transaction is processed late such that not the full expedience fee
can be claimed, the remainder of the expedience fee output is returned to
the specified address among the inputs/outputs (could be something like
in#3 for the address used by the 3rd UTXO input). This would have to be
done for all remaining expedience fees within the last transaction in the
block, inserted there by the miner.

These additional UTXO:s does increase overhead somewhat, but hopefully not
by too much. If we're going to modify the transaction syntax eventually,
then we could take the chance to design for this to reduce overhead.

My current best idea for how to handle returned expedience fees in
multiuser transactions (coinjoin, etc) is to donate it to an agreed upon
address. For recurring donation addresses (the fee pool included!), this
reduces the number of return UTXO:s in the fee processing transaction.

The default client policy may be to split the entire fee across an
expedience fee and a fee pool donation, where the donation part becomes
larger the later the transaction gets processed. This is expected to slow
down the average inclusion speed of already delayed transactions, but they
remain profitable to include.

The dynamics here is simple, a miner is incentivized to process a
transaction with an expedience fee before a standard fee of the same
value-per-bit in order to not reduce the total value of the available fees
of all standing transactions they can process. The longer they wait, the
less total fees available.

Sidenote: a steady stream of expedience fees reduces the profitability of
block withholding attacks (!), at some threshold it should make it entirely
unprofitable vs standard mining. This is due to the increased risk of
losing valuable expedience fees added after you finished your first block
(as the available value will be reduced in your block #2, vs what other
miners can claim while still mining on that previous block).
(Can somebody verify this with simulations?)

---

Fee pool. Softfork compatible.

We want to smooth out fee payments too for the future when the subsidy
drops, to prevent deliberate forking to steal fees. We can introduce a
designated P2SH anyone-can-spend fee pool address. The miner can never
claim the full fees from his block or claim the full amount in the pool,
only some percentage of both. The remainder goes back into the pool (this
might be done at the end of the same expedience fee processing transaction
described above). Anybody can deliberately pay to the pool.

The fee pool is intended to act as a "buffer" such that it remains
profitable to not try to steal fees but to just mine normally, even during
relatively extreme fee value variance (consider the end of a big
international shopping weekend).

The fee value claimed by the miners between blocks is allowed to vary, but
we want to avoid order-of-magnitude size variation (10x). We do however
want the effect of expedience fees to have an impact. Perhaps some
logarithmic function can smooth it out? Forcing larger fees to be
distributed over longer time periods?

---

Block size dependent difficulty scaling. Hardfork required.

Larger blocks means greater difficulty - but it doesn't scale linearly,
rather a little less than linearly. That means miners can take a penalty in
difficulty to claim a greater number of high fee transactions in the same
amount of time (effectively increasing "block size bitrate"), increasing
their profits. When such profitable fees aren't available, they have to
reduce block size.

In other words, the users literally pay miners to increase block size (or
don't pay, which reduces it).

(Sidenote: I am in favor of combining this with the idea of a 32 MB max
blocksize (or larger), with softforked scheduled lower size caps (perhaps
starting at 4 MB max) that grows according to a schedule. This reduces the
risk of rapidly increasing load before we have functional second layer
scaling in place.)

In order for a miner to profit from adding additional transactions, their
fees must exceed the calculated cost of the resulting difficulty penalty to
make it worth it to create a larger block. Such loads are expected during
international shopping weekends.
With only a few available high value transactions the incentive becomes the
reverse, to create a smaller block with lower difficulty to faster claim
those fees.

To keep the average 10 minute block rate and to let this mechanism shift
the "block size bitrate" as according to the fee justified block size
changes, we set an Expected blocksize value that changes over time, and we
change the difficulty target into the Standard difficulty target, where
each block must reach a Scaled difficulty target .

In terms of math we do something like this:
Scaled difficulty = Standard difficulty * f(blocksize), where f would
likely be some logarithmic function, and blocksize is defined in terms of
units of Expected blocksize (a block 1.5x larger than Expected blocksize
gets a value of 1.5).

When we retarget the Standard difficulty and Expected blocksize we do this:
Standard difficulty = Network hashrate per 10 minutes (approximately same
as before, but now we take the Scaled difficulty of the last period's
previous blocks into consideration)
Standard blocksize = Recent average effective block bitrate = (sum of
recent (weighted!) block sizes / length of timeperiod) / number of blocks
in a retargeting period.

Thus, generating larger blocks drives up the long term standard block
bitrate, smaller blocks reduces it, in both cases we strive to average 1
block per 10 minutes.

Combining this with expedience fees makes it even more effective;

There's always a cutoff for where a miner stops including unprocessed
transactions and let the rest remain for the next block. For standard fees,
this would result in a fairly static block size and transactions backlog.
With expedience fees your transaction can bypass standard fees with same
value-per-bit, as explained above, because otherwise the miners reduces the
value of their future expected fees. The more people that do this, the
greater incentive to not delay transactions and instead increase the
blocksize. (Can somebody help with the math here? I want simulations of
this.)

(Sidenote: I'm in favor of RBF, replace-by-fee. This makes the above work
much more smoothly. Anybody relying on the security of unconfirmed
transactions for any significant value *have to* rely on some kind of
incentive protected multisignature transaction, including LN type second
layer schemes. The other option is just not secure.)

If load is low then you can add a high expedience fee to incentivize the
creation of a smaller block with your transaction, since difficulty will be
reduced for the smaller block. This means the miner has a higher chance of
beating the competition. Adding additional lower fee transactions may
reduce his average value-per-bit to become less profitable.

Miners simply aim to maximize their fees-per-bit, while also paying as
little as possible in mining costs.

To make this work as intended for those willing to explicitly pay to reduce
block size, one could tag such an expedience fee with a maximum allowed
blocksize (where the fee will be claimed in such a smaller block if it is
the more profitable option), such that it won't be countered by others
making more high expedience fees to increase blocksize. Note: I'm not
particularly in favor of this idea, just mentioning the possibility.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/823b7763/attachment.html>

From luke at dashjr.org  Thu Mar 30 10:04:05 2017
From: luke at dashjr.org (Luke Dashjr)
Date: Thu, 30 Mar 2017 10:04:05 +0000
Subject: [bitcoin-dev] Block size adjustment idea - expedience fees +
	difficulty scaling proportional to block size (+ fee pool)
In-Reply-To: <CAAt2M18Fx9LwKU385id0_gHunLa=uQUmCO+jGkvSqb_2uLeCyg@mail.gmail.com>
References: <CAAt2M1_x8zbN-vmgDEUQQvzrtonEKydb+B-P53ibCimVfnd-CA@mail.gmail.com>
	<CAAt2M1-LZQ1yE1CezFA+hr+=de-RVJ7wzkq-t969BC7OL6dWwg@mail.gmail.com>
	<CAAt2M18Fx9LwKU385id0_gHunLa=uQUmCO+jGkvSqb_2uLeCyg@mail.gmail.com>
Message-ID: <201703301004.06489.luke@dashjr.org>

On Thursday, March 30, 2017 9:34:31 AM Natanael via bitcoin-dev wrote:
> You want to really make sure your transaction gets processed quickly?
> Transactions could have a second fee type, a specially labeled
> anyone-can-spend output with an op_return value defining a "best-before"
> block number and some function describing the decline of the fee value for
> every future block, such that before block N the miners can claim the full
> expedience fee + the standard fee (if any), between block N+1 and N+X the
> miner can claim a reduced expedience fee + standard fee, afterwards only
> the standard fee.

Minor detail: OP_RETURN doesn't work like that. You'd need OP_DROP.

> When a transaction is processed late such that not the full expedience fee
> can be claimed, the remainder of the expedience fee output is returned to
> the specified address among the inputs/outputs (could be something like
> in#3 for the address used by the 3rd UTXO input). This would have to be
> done for all remaining expedience fees within the last transaction in the
> block, inserted there by the miner.

Inputs don't have addresses, and addresses should only ever be used once.
You might be able to fix this by increasing the value of the change, though.
It would require a new signature-check opcode at the very least.

I don't see a purpose to this proposal. Miners always mine as if it's their 
*only* chance to get the fee, because if they don't, another miner will. Ie, 
after 1 block, the fee effectively drops to 0 already.

> ---
> 
> Fee pool. Softfork compatible.

The standard problem with these is that miners are incentivised to publish 
their own "out of band fee" address so they get all the fee directly.

Luke

From vitteaymeric at gmail.com  Thu Mar 30 10:13:21 2017
From: vitteaymeric at gmail.com (Aymeric Vitte)
Date: Thu, 30 Mar 2017 12:13:21 +0200
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAD1TkXvx=RKvjC8BUstwtQxUUQwG4eiU9XmF1wr=bU=xcVg5WQ@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<CAB-xxiPV9oN1r2hV5a=U1pcYuiZ_qmth-AM-H+1Cjgc2uw-0xA@mail.gmail.com>
	<CAFVRnyr=cYf34X80+dLHwYEPHdqA7mMtYZ_gD6j09C+aM31gQQ@mail.gmail.com>
	<f61153c3-9afb-5cee-2c6b-70d67208f015@gmail.com>
	<CAFVRnyo1XGNbq_F8UfqqJWHCVH14iMCUMU-R5bOh+h3mtwSUJg@mail.gmail.com>
	<CAFVRnyqxQhu0c-ACfzR5=Z=C1SbR70jrfCaCeEdfSJASSnzpqw@mail.gmail.com>
	<CAD1TkXtze_TVegXz4AeJCxK59+cuwRQ=w4upzX+HoQ90Py52OA@mail.gmail.com>
	<2349f523-942c-ffb9-7af2-5cc81264888f@gmail.com>
	<CAD1TkXvx=RKvjC8BUstwtQxUUQwG4eiU9XmF1wr=bU=xcVg5WQ@mail.gmail.com>
Message-ID: <a0d956d5-6d12-e378-74db-1aae3674d5a3@gmail.com>

Apparently we will not get an understanding and we will probably be told
soon that this is going off topic, so short answer

Eh --> No, maybe you would like to quote Mozilla or the W3C too, all of
those organizations are financed by the big companies and are promoting
their interests (specs, DRM, etc), then would you really trust them?

A full node does not have to validate all tx and blocks, I am not aware
of any P2P system organized with peers and intermediate nodes (with no
incentive) that did survive (diaspora for example), and the most famous
one (who btw is handling much more traffic than what you describe) is
doing well because there is an intrinsic incentive for the users, see my
comment here
https://ec.europa.eu/futurium/en/content/final-report-next-generation-internet-consultation,
surprising to see that nobody raised those issues during the consultation

Paradoxally crypto currencies allow now to reward/sustain other systems,
then probably they should concentrate first on how to reward/sustain
themselves, different ideas have surfaced to reward the full nodes but
still seem very far to materialize

Coming back again to the subject, does anyone have any idea of who are
behind the existing full nodes and how to rank them according to their
participation to the network? Up to now there has been quasi no
discussion about what are the plans for the full nodes which tends to
suggest that this is obvious


Le 30/03/2017 ? 03:14, Jared Lee Richardson a ?crit :
> > I have heard such theory before, it's a complete mistake to think
> that others would run full nodes to protect their business and then yours,
>
> It is a complete mistake to think that others would create a massive
> website to share huge volumes of information without any charges or
> even any advertising revenue.
>
> https://en.wikipedia.org/wiki/List_of_most_popular_websites
>
> Wikipedia, 5th largest website.  Well, I guess there's some exceptions
> to the complete mistake, eh?
>
> Relying on other nodes to provide verification for certain types of
> transactions is completely acceptable.  If I'm paying a friend $100,
> or paying my landlord $500, that's almost certainly totally fine. 
> There's nothing that says SPV nodes can't source verifications from
> multiple places to prevent one source from being compromised.  There's
> also some proposed ideas for fraud proofs that could be added, though
> I'm not familiar with how they work.  If verification was a highly in
> demand service, but full nodes were expensive, companies would spring
> up that offered to verify transactions for a miniscule fee per month. 
> They couldn't profit from 100 customers, but they could profit from
> 10,000 customers, and their reputation and business would rely on
> trustworthy verification services.
>
> I certainly wouldn't suggest any of those things for things like
> million dollar purchase, or a purchase where you don't know the seller
> and have no recourse if something goes wrong, or a purchase where
> failure to complete has life-altering consequences.  Those
> transactions are the vast minority of transactions, but they need the
> additional security of full-node verification.  Why is it unreasonable
> to ask them to pay for it, but not also ask other people who really
> don't need that security to pay for it?  If a competing blockchain
> successfully offers both high security and low-fee users exactly what
> that particular user needs, they have a major advantage against one
> that only caters to one group or the other.
>
> > Running a full node is trivial and not expensive for people who know
> how to do it, even with much bigger blocks,
>
> This logic does not hold against the scale of the numbers.  Worldwide
> 2015 transaction volume was 426 billion and is growing by almost 10%
> per year.  In Bitcoin terms, that's 4.5 GB blocks, and approximately
> $30,000 in bandwidth a month just to run a pruning node.  And there's
> almost no limit to the growth - 426 billion transactions is despite
> the fact that the majority of humans on earth are unbanked and did not
> add a single transaction to that number.
>
> I don't believe the argument that Bitcoin can serve all humans on
> earth is any more valid than the argument that any computer hardware
> should be able to run a node.  Low node operational costs mean a
> proportional penalty to Bitcoin's usability, adoption, and price.  Low
> transaction fee costs mean a proportional high node operational cost,
> and therefore possibly represent node vulnerabilities or verification
> insecurities.
>
> There's a balancing point in the middle somewhere that achieves the
> highest possible Bitcoin usability without putting the network at
> risk, and providing layers of security only for the transactions that
> truly need it and can justify the cost of such security.
>
>
>
> On Wed, Mar 29, 2017 at 3:33 PM, Aymeric Vitte <vitteaymeric at gmail.com
> <mailto:vitteaymeric at gmail.com>> wrote:
>
>     I have heard such theory before, it's a complete mistake to think
>     that others would run full nodes to protect their business and
>     then yours, unless it is proven that they are decentralized and
>     independent
>
>     Running a full node is trivial and not expensive for people who
>     know how to do it, even with much bigger blocks, assuming that the
>     full nodes are still decentralized and that they don't have to
>     fight against big nodes who would attract the traffic first
>
>     I have posted many times here a small proposal, that exactly
>     describes what is going on now, yes miners are nodes too... it's
>     disturbing to see that despite of Tera bytes of BIPs, papers, etc
>     the current situation is happening and that all the supposed
>     decentralized system is biased by centralization
>
>     Do we know what majority controls the 6000 full nodes?
>
>
>     Le 29/03/2017 ? 22:32, Jared Lee Richardson via bitcoin-dev a ?crit :
>>     > Perhaps you are fortunate to have a home computer that has more
>>     than a single 512GB SSD. Lots of consumer hardware has that
>>     little storage.
>>
>>     That's very poor logic, sorry.  Restricted-space SSD's are not a
>>     cost-effective hardware option for running a node.  Keeping
>>     blocksizes small has significant other costs for everyone. 
>>     Comparing the cost of running a node under arbitrary conditons A,
>>     B, or C when there are far more efficient options than any of
>>     those is a very bad way to think about the costs of running a
>>     node.  You basically have to ignore the significant consequences
>>     of keeping blocks small.
>>
>>     If node operational costs rose to the point where an entire wide
>>     swath of users that we do actually need for security purposes
>>     could not justify running a node, that's something important for
>>     consideration.  For me, that translates to modern hardware that's
>>     relatively well aligned with the needs of running a node -
>>     perhaps budget hardware, but still modern - and above-average
>>     bandwidth caps.
>>
>>     You're free to disagree, but your example only makes sense to me
>>     if blocksize caps didn't have serious consequences.  Even if
>>     those consequences are just the threat of a contentious fork by
>>     people who are mislead about the real consequences, that threat
>>     is still a consequence itself.
>>
>>     On Wed, Mar 29, 2017 at 9:18 AM, David Vorick via bitcoin-dev
>>     <bitcoin-dev at lists.linuxfoundation.org
>>     <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
>>
>>         Perhaps you are fortunate to have a home computer that has
>>         more than a single 512GB SSD. Lots of consumer hardware has
>>         that little storage. Throw on top of it standard consumer
>>         usage, and you're often left with less than 200 GB of free
>>         space. Bitcoin consumes more than half of that, which feels
>>         very expensive, especially if it motivates you to buy another
>>         drive.
>>
>>         I have talked to several people who cite this as the primary
>>         reason that they are reluctant to join the full node club.
>>
>>         _______________________________________________
>>         bitcoin-dev mailing list
>>         bitcoin-dev at lists.linuxfoundation.org
>>         <mailto:bitcoin-dev at lists.linuxfoundation.org>
>>         https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>         <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
>>
>>
>>
>>
>>     _______________________________________________
>>     bitcoin-dev mailing list
>>     bitcoin-dev at lists.linuxfoundation.org
>>     <mailto:bitcoin-dev at lists.linuxfoundation.org>
>>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>     <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
>
>     -- 
>     Zcash wallets made simple: https://github.com/Ayms/zcash-wallets
>     <https://github.com/Ayms/zcash-wallets>
>     Bitcoin wallets made simple: https://github.com/Ayms/bitcoin-wallets
>     <https://github.com/Ayms/bitcoin-wallets>
>     Get the torrent dynamic blocklist: http://peersm.com/getblocklist
>     Check the 10 M passwords list: http://peersm.com/findmyass
>     Anti-spies and private torrents, dynamic blocklist: http://torrent-live.org
>     Peersm : http://www.peersm.com
>     torrent-live: https://github.com/Ayms/torrent-live
>     <https://github.com/Ayms/torrent-live>
>     node-Tor : https://www.github.com/Ayms/node-Tor
>     <https://www.github.com/Ayms/node-Tor>
>     GitHub : https://www.github.com/Ayms
>
-- 
Zcash wallets made simple: https://github.com/Ayms/zcash-wallets
Bitcoin wallets made simple: https://github.com/Ayms/bitcoin-wallets
Get the torrent dynamic blocklist: http://peersm.com/getblocklist
Check the 10 M passwords list: http://peersm.com/findmyass
Anti-spies and private torrents, dynamic blocklist: http://torrent-live.org
Peersm : http://www.peersm.com
torrent-live: https://github.com/Ayms/torrent-live
node-Tor : https://www.github.com/Ayms/node-Tor
GitHub : https://www.github.com/Ayms
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/cf114980/attachment-0001.html>

From natanael.l at gmail.com  Thu Mar 30 10:19:33 2017
From: natanael.l at gmail.com (Natanael)
Date: Thu, 30 Mar 2017 12:19:33 +0200
Subject: [bitcoin-dev] Block size adjustment idea - expedience fees +
 difficulty scaling proportional to block size (+ fee pool)
In-Reply-To: <CAAt2M1-3R7rY55=QgkP8xUs=SDHxyNQV_fshbi89a9KzcwWfLQ@mail.gmail.com>
References: <CAAt2M1_x8zbN-vmgDEUQQvzrtonEKydb+B-P53ibCimVfnd-CA@mail.gmail.com>
	<CAAt2M1-LZQ1yE1CezFA+hr+=de-RVJ7wzkq-t969BC7OL6dWwg@mail.gmail.com>
	<CAAt2M18Fx9LwKU385id0_gHunLa=uQUmCO+jGkvSqb_2uLeCyg@mail.gmail.com>
	<201703301004.06489.luke@dashjr.org>
	<CAAt2M1-57SMT4WT-4_pdkTPyybQgr2ZuQZW_KW2ZwhTQ7HEnqg@mail.gmail.com>
	<CAAt2M1-3R7rY55=QgkP8xUs=SDHxyNQV_fshbi89a9KzcwWfLQ@mail.gmail.com>
Message-ID: <CAAt2M18E5pYRFJtKsNMME9kESQQGwmRpuciWgWVg4y8g=RUamA@mail.gmail.com>

Den 30 mars 2017 12:04 skrev "Luke Dashjr" <luke at dashjr.org>:


I don't see a purpose to this proposal. Miners always mine as if it's their
*only* chance to get the fee, because if they don't, another miner will. Ie,
after 1 block, the fee effectively drops to 0 already.


I believe that with correctly configured incentives, you can make it more
profitable to delay some transactions with lower fees but still include
them in the next block then to include them all at once. This would smooth
out the inclusion of transactions.

This may require changing the difficulty scaling from using a simple
logarithm to a function that first behaves like a logarithm up to some
multiple of the standard block size, after which difficulty starts
increasing faster and reaches a greater-than-linear ratio in expected
required hash per mined bit. Perhaps tipping over at around a blocksize 3x
the standard blocksize. Since the standard blocksize increases with
continous load after retargeting, the blocksize at which this happens also
increases.

Also, together with the above the fee pool does slightly counteract what
you say, as they'll get a share via the pool when there's less transactions
available the next time they create a block (like insurance).

For a user, what's the incentive to pay an individual miner the fee
directly?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/ccbd4893/attachment.html>

From tomz at freedommail.ch  Thu Mar 30 10:30:49 2017
From: tomz at freedommail.ch (Tom Zander)
Date: Thu, 30 Mar 2017 12:30:49 +0200
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <127281C1AA02374F8AAD9EE04FAE878A0218E8B825@STUDMail1.muad.local>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<2349f523-942c-ffb9-7af2-5cc81264888f@gmail.com>
	<127281C1AA02374F8AAD9EE04FAE878A0218E8B825@STUDMail1.muad.local>
Message-ID: <1715389.dpD6Bbpm7b@strawberry>

On Thursday, 30 March 2017 07:23:31 CEST Ryan J Martin via bitcoin-dev 
wrote:
>      The original post and the assorted limit proposals---lead me to
> something I think is worth reiterating: assuming Bitcoin adoption
> continues to grow at similar or accelerating rates, then eventually the
> mempool is going to be filled with thousands of txs at all times whether
> block limits are 1MB or 16MB

This is hopefully true. :)

There is an unbounded amount of demand for block space, and as such it 
doesn?t benefit anyone if the amount of free transactions get out of hand. 
Because freeloaders would definitely be able to completely suffocate Bitcoin.

In the mail posted by OP he makes clear that this is a proposal for a hard 
fork to change the block size *limit*. The actual block size would not be 
changed at the same time, it will continue being set based on market values 
or whatever we decide between now and then.

The block size itself should be set based on the amount of fees being paid 
to miners to make a block.

What we want is a true fee-market where the miner can decide to make a block 
smaller to get people to pay more fees, because if we were to go to 16MB 
blocks in one go, the cost of the miner would go up, but his reward based on 
fees will go down!
A block so big that 100% of the transactions will always be mined in the 
next block will just cause a large section of people to no longer feel the 
need to pay fees.

As such I don?t fear the situation where the block size limit goes up a lot 
in one go, because it is not in anyone?s interest to make the actual block 
size follow.
-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From tomz at freedommail.ch  Thu Mar 30 10:34:45 2017
From: tomz at freedommail.ch (Tom Zander)
Date: Thu, 30 Mar 2017 12:34:45 +0200
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CY4PR18MB135053B235C734A3D8D9C13BCD350@CY4PR18MB1350.namprd18.prod.outlook.com>
References: <CY4PR18MB135053B235C734A3D8D9C13BCD350@CY4PR18MB1350.namprd18.prod.outlook.com>
Message-ID: <42619430.6XQoorDgjR@strawberry>

On Wednesday, 29 March 2017 21:50:48 CEST Raystonn . via bitcoin-dev wrote:
> Low node costs are a good goal for nodes that handle transactions the node
> operator can afford.  Nobody is going to run a node for a network they do
> not use for their own transactions.  If transactions have fees that
> prohibit use for most economic activity, that means node count will drop
> until nodes are generally run by those who settle large amounts.  That is
> very centralizing.
> 
> Raystonn

The idea that people won?t run a node for a network they don?t use for their 
own transactions is a very good observation and a good reason to get on-
chain scaling happening well before lightning hits. 

-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From luvb at hotmail.com  Thu Mar 30 07:11:21 2017
From: luvb at hotmail.com (Luv Khemani)
Date: Thu, 30 Mar 2017 07:11:21 +0000
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAD1TkXvd4yLHZDAdMi78WwJ_siO1Vt7=DgYiBmP45ffVveuHBg@mail.gmail.com>
References: <CAEgR2PEG1UMqY0hzUH4YE_an=qOvQUgfXreSRsoMWfFWxG3Vqg@mail.gmail.com>
	<CAFVRnyq9Qgw88RZqenjQTDZHEWeuNCdh12Dq7wCGZdu9ZuEN9w@mail.gmail.com>,
	<CAD1TkXvd4yLHZDAdMi78WwJ_siO1Vt7=DgYiBmP45ffVveuHBg@mail.gmail.com>
Message-ID: <SINPR04MB1949AB581C6870184445E0C4C2340@SINPR04MB1949.apcprd04.prod.outlook.com>


>> If home users are not running their own full nodes, then home users have to trust and rely on other, more powerful nodes to represent them. Of course, the more powerful nodes, simply by nature of having more power, are going to have different opinions and objectives from the users.

>I think you're conflating mining with node operation here.  Node users only power is to block the propagation of certain things.  Since miners also have a node endpoint, they can cut the node users out of the equation by linking with eachother directly - something they already do out of practicality for propagation.  Node users do not have the power to arbitrate consensus, that is why we have blocks and PoW.

You are only looking at technical aspects and missing the political aspect.

Node users decide what a Bitcoin is. It matters not how much hash power is behind a inflationary supply chain fork, full nodes protect the user from the change of any properties of Bitcoin which they do not agree with. The ability to retain this power for users is of prime importance and is arguably what gives Bitcoin most of it's value. Any increase in the cost to run a full node is an increase in cost to maintain monetary sovereignty. The ability for a user to run a node is what keeps the miners honest and prevents them from rewriting any of Bitcoin's rules.

If it's still difficult to grasp the above paragraph, ask yourself the following questions,
- What makes Bitcoin uncensorable
- What gives confidence that the 21 million limit will be upheld
- What makes transactions irreversible
- If hashpower was king as you make it to be, why havn't miners making up majority hashrate who want bigger blocks been able to change the blocksize?

The market is not storing 10s of billions of dollars in Bitcoin despite all it's risks because it is useful for everyday transactions, that is a solved problem in every part of the world (Cash/Visa/etc..).

Having said that, i fully empathise with your view that increasing transaction fees might allow competitors to gain marketshare for low value use cases. By all means, we should look into ways of solving the problem. But all these debates around blocksize is a total waste of time. Even if we fork to 2MB, 5MB, 10MB. It is irrelevant in the larger picture, transaction capacity will still be too low for global usage in the medium-long term. The additional capacity from blocksize increases are linear improvements with very large systemic costs compared with the userbase and usage which is growing exponentially. Lightning potentially offers a couple or orders of magnitude of scaling and will make blocksize a non-issue for years to come. Even if it fails to live up to the hype, you should not discount the market innovating solutions when there is money to be made.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/bf2ad53b/attachment-0001.html>

From david.vorick at gmail.com  Thu Mar 30 11:19:19 2017
From: david.vorick at gmail.com (David Vorick)
Date: Thu, 30 Mar 2017 07:19:19 -0400
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <42619430.6XQoorDgjR@strawberry>
References: <CY4PR18MB135053B235C734A3D8D9C13BCD350@CY4PR18MB1350.namprd18.prod.outlook.com>
	<42619430.6XQoorDgjR@strawberry>
Message-ID: <CAFVRnypMev625j6htvpC+xJo3y5VgWednOBaRhqtuiMKKNPFsw@mail.gmail.com>

> What we want is a true fee-market where the miner can decide to make a
block
> smaller to get people to pay more fees, because if we were to go to 16MB
> blocks in one go, the cost of the miner would go up, but his reward based
on
> fees will go down!
> A block so big that 100% of the transactions will always be mined in the
> next block will just cause a large section of people to no longer feel the
> need to pay fees.

> As such I don?t fear the situation where the block size limit goes up a
lot
> in one go, because it is not in anyone?s interest to make the actual block
> size follow.

There have been attacks demonstrated where a malicious miner with
sufficient hashrate can leverage large blocks to exacerbate selfish mining.
Adversarial behaviors from miners need to be considered, it's not safe to
simply assume that a miner won't have reasons to attack the network. We
already know that large empty blocks (rather, blocks with fake
transactions) can be leveraged in ways that both damages the network and
increases miner profits.

In general, fear of other currencies passing Bitcoin is unsubstantiated.
Bitcoin has by far the strongest development team, and also is by far the
most decentralized. To the best of my knowledge, Bitcoin is the only
cryptocurrency out there that is both not-dead and also lacks a strong
central leadership.

A coin like ethereum may even be able to pass Bitcoin in market cap. But
that's okay. Ethereum has very different properties and it's not something
I would trust as a tool to provide me with political sovereignty. Ethereum
passing Bitcoin in market cap does not mean that it has proved superior to
Bitcoin. It could just mean that enterprises are really excited about
permissioned blockchains. That's not interesting to me at any market cap.

Bitcoin's core value add is and should continue to be decentralization and
trustlessness. Nobody is remotely close to competing with Bitcoin on those
fronts, and in my mind that's far more important than any of the other
mania anyway.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/8cc36f43/attachment.html>

From vitteaymeric at gmail.com  Thu Mar 30 11:24:53 2017
From: vitteaymeric at gmail.com (Aymeric Vitte)
Date: Thu, 30 Mar 2017 13:24:53 +0200
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <42619430.6XQoorDgjR@strawberry>
References: <CY4PR18MB135053B235C734A3D8D9C13BCD350@CY4PR18MB1350.namprd18.prod.outlook.com>
	<42619430.6XQoorDgjR@strawberry>
Message-ID: <b1f4bc0f-d93b-4103-c177-246b074a4a3e@gmail.com>

Except if people have some incentive to do it, simple example: I have
some servers, they are doing some work but are not so busy finally, I
can decide to run some nodes, this does not cost me more (and less for
the planet than setting up new servers) and I get some rewards (as an
illustration of this my servers are mining zcash and running zcash
nodes, this is of course absolutely not profitable but since this does
not disturb what the servers are primarly intended for and I get some
small zecs with no additionnal costs, why not doing it?) Of course we
can then consider that people doing this are finally using the network...


Le 30/03/2017 ? 12:34, Tom Zander via bitcoin-dev a ?crit :
> On Wednesday, 29 March 2017 21:50:48 CEST Raystonn . via bitcoin-dev wrote:
>> Low node costs are a good goal for nodes that handle transactions the node
>> operator can afford.  Nobody is going to run a node for a network they do
>> not use for their own transactions.  If transactions have fees that
>> prohibit use for most economic activity, that means node count will drop
>> until nodes are generally run by those who settle large amounts.  That is
>> very centralizing.
>>
>> Raystonn
> The idea that people won?t run a node for a network they don?t use for their 
> own transactions is a very good observation and a good reason to get on-
> chain scaling happening well before lightning hits. 
>

-- 
Zcash wallets made simple: https://github.com/Ayms/zcash-wallets
Bitcoin wallets made simple: https://github.com/Ayms/bitcoin-wallets
Get the torrent dynamic blocklist: http://peersm.com/getblocklist
Check the 10 M passwords list: http://peersm.com/findmyass
Anti-spies and private torrents, dynamic blocklist: http://torrent-live.org
Peersm : http://www.peersm.com
torrent-live: https://github.com/Ayms/torrent-live
node-Tor : https://www.github.com/Ayms/node-Tor
GitHub : https://www.github.com/Ayms


From tomh at thinlink.com  Thu Mar 30 15:38:20 2017
From: tomh at thinlink.com (Tom Harding)
Date: Thu, 30 Mar 2017 08:38:20 -0700
Subject: [bitcoin-dev] High fees / centralization
In-Reply-To: <CALJP9GBk4gG0H+tEJmEiz=0+LAQoe6_sL1Fv-BCJSfmvfY8PRA@mail.gmail.com>
References: <CALJP9GB2Fds8m9JpaVv0NxGDr579BtR9RMs7-KNSLkK8Mz7LoA@mail.gmail.com>
	<CALJP9GAOgpSAhrrYFPRbGKZXwqZn_oDUmv6B7wcvwxcZufDd0g@mail.gmail.com>
	<CALJP9GDkdxsvOZHJxzx+0pvjWBAkAswZCWXcp=zL7LNMRNfCOg@mail.gmail.com>
	<CALJP9GBk4gG0H+tEJmEiz=0+LAQoe6_sL1Fv-BCJSfmvfY8PRA@mail.gmail.com>
Message-ID: <CALJP9GDH1xQ-cYc1SN6jejXDA49eiy_OR49XLLWd+=VdNo7ekA@mail.gmail.com>

Raystonn,

Your logic is very hard to dispute. An important special case is small
miners.

Small miners use pools exactly because they want smaller, more frequent
payments.

Rising fees force them to take payments less frequently, and will only tend
to make more of them give up.

With fees rising superlinearly, this centralizing effect is much stronger
than the oft-cited worry of small miners joining large pools to decrease
orphan rates.


On Mar 29, 2017 15:01, "Raystonn . via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org> wrote:

Low node costs are a good goal for nodes that handle transactions the node
operator can afford.  Nobody is going to run a node for a network they do
not use for their own transactions.  If transactions have fees that
prohibit use for most economic activity, that means node count will drop
until nodes are generally run by those who settle large amounts.  That is
very centralizing.

Raystonn

On 29 Mar 2017 12:14 p.m., Jared Lee Richardson via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

In order for any blocksize increase to be agreed upon, more consensus is
needed.  The proportion of users believing no blocksize increases are
needed is larger than the hardfork target core wants(95% consensus).  The
proportion of users believing in microtransactions for all is also larger
than 5%, and both of those groups may be larger than 10% respectively.  I
don't think either the Big-blocks faction nor the low-node-costs faction
have even a simple majority of support.  Getting consensus is going to be a
big mess, but it is critical that it is done.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/2efe6ad0/attachment.html>

From david.vorick at gmail.com  Thu Mar 30 16:14:24 2017
From: david.vorick at gmail.com (David Vorick)
Date: Thu, 30 Mar 2017 12:14:24 -0400
Subject: [bitcoin-dev] High fees / centralization
In-Reply-To: <CALJP9GDH1xQ-cYc1SN6jejXDA49eiy_OR49XLLWd+=VdNo7ekA@mail.gmail.com>
References: <CALJP9GB2Fds8m9JpaVv0NxGDr579BtR9RMs7-KNSLkK8Mz7LoA@mail.gmail.com>
	<CALJP9GAOgpSAhrrYFPRbGKZXwqZn_oDUmv6B7wcvwxcZufDd0g@mail.gmail.com>
	<CALJP9GDkdxsvOZHJxzx+0pvjWBAkAswZCWXcp=zL7LNMRNfCOg@mail.gmail.com>
	<CALJP9GBk4gG0H+tEJmEiz=0+LAQoe6_sL1Fv-BCJSfmvfY8PRA@mail.gmail.com>
	<CALJP9GDH1xQ-cYc1SN6jejXDA49eiy_OR49XLLWd+=VdNo7ekA@mail.gmail.com>
Message-ID: <CAFVRnyq07qNappzwEmB_e+xCKPyCzHcWbnTDWCdeWjrsMMioLQ@mail.gmail.com>

On Mar 30, 2017 12:04 PM, "Tom Harding via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org> wrote:

Raystonn,

Your logic is very hard to dispute. An important special case is small
miners.

Small miners use pools exactly because they want smaller, more frequent
payments.

Rising fees force them to take payments less frequently, and will only tend
to make more of them give up.

With fees rising superlinearly, this centralizing effect is much stronger
than the oft-cited worry of small miners joining large pools to decrease
orphan rates.


Miners get paid on average once every ten minutes. The size of fees and the
number of fee transactions does not change the payout rate.

Further, we are very far from the point (in my appraisal) where fees are
high enough to block home users from using the network.

Bitcoin has many high-value use cases such as savings. We should not throw
away the core innovation of monetary sovereignty in pursuit of supporting
0.1% of the world's daily transactions.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/92e8b405/attachment.html>

From jaredr26 at gmail.com  Thu Mar 30 16:44:21 2017
From: jaredr26 at gmail.com (Jared Lee Richardson)
Date: Thu, 30 Mar 2017 09:44:21 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <1715389.dpD6Bbpm7b@strawberry>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<2349f523-942c-ffb9-7af2-5cc81264888f@gmail.com>
	<127281C1AA02374F8AAD9EE04FAE878A0218E8B825@STUDMail1.muad.local>
	<1715389.dpD6Bbpm7b@strawberry>
Message-ID: <CAD1TkXuCFHL7zvCth+huHH2zhGZY=8gpzFoRk5OzXs-EzpH4Lg@mail.gmail.com>

> The block size itself should be set based on the amount of fees being
paid to miners to make a block.

There's a formula to this as well, though going from that to a blocksize
number will be very difficult.  Miner fees need to be sufficient to
maintain economic protection against attackers.  There is no reason that
miner fees need to be any higher than "sufficient."  I believe that
"sufficient" value can be estimated by considering a potential attacker
seeking to profit from short-selling Bitcoin after causing a panic crash.
If they can earn more profit from shorting Bitcoin than it costs to buy,
build/deploy, and perform a 51% attack to shut down the network, then we
are clearly vulnerable.  The equation for the profit side of the equation
can be worked out as:

(bitcoin_price * num_coins_shortable * panic_price_drop_percentage)

The equation for the cost side of the equation depends on the total amount
of miner hardware that the network is sustainably paying to operate,
factoring in all costs of the entire bitcoin mining lifecycle(HW cost,
deployment cost, maintenance cost, electricity, amortized facilities cost,
business overheads, orphan losses, etc) except chip design, which the
attacker may be able to take advantage of for free.  For convenience I'm
simplifying that complicated cost down to a single number I'm calling
"hardware_lifespan" although the concept is slightly more involved than
that.

(total_miner_payouts * bitcoin_price * hardware_lifespan)

Bitcoin_price is on boths ides of the equation and so can be divided out,
giving:

Unsafe point = (num_coins_shortable * panic_price_drop_percentage) <
(total_miner_payouts
* hardware_lifespan)

Estimating the total number of shortable coins an attacker of nearly
unlimited funds is tricky, especially when things like high leverage levels
or naked short selling may be offered by exchanges.  The percent of damage
the resulting panic would cause is also tricky to estimate, but on both
numbers we can make some rough guesses and see how they play out.  With
more conservative numbers like say, 2 year hardware lifespan, 10% short,
70% panic drop you get: 1,300k coins profit, 1800 BTC/day in fees minimum
needed to make the attack cost more than it profits.

Using various inputs and erring on the side of caution, I get a minimum
BTC/day fee range of 500-2000.  Unfortunately if the blocksize isn't
increased, a relatively small number of transactions/users have to bear the
full cost of the minimum fees, over time increasing the minimum "safe"
average fee paid to 0.008 BTC, 30x the fees people are complaining about
today, and increasing in real-world terms as price increases.  All that
said, I believe the costs for node operation are the number that gets hit
first as blocksizes are increased, at least past 2020.  I don't think
blocksizes could be increased to such a size that the insufficient-fee
vulnerability would be a bigger concern than high node operational costs.
The main thing I don't have a good grasp on at the moment is any math to
estimate how many nodes we need to protect against the attacks that can
come from having few nodes, or even a clear understanding of what those
attacks are.

> A block so big that 100% of the transactions will always be mined in the
> next block will just cause a large section of people to no longer feel the
> need to pay fees.

This is also totally true.  A system that tried to eliminate the fee
markets would be flawed, and fortunately miners have significant reasons to
oppose such a system.

The reverse is also a problem - If miners as a large group sought to lower
blocksizes to force fee markets higher, that could be a problem.  I don't
have solutions for the issue at this time, but something I've turned over
in my mind.

On Thu, Mar 30, 2017 at 3:30 AM, Tom Zander via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Thursday, 30 March 2017 07:23:31 CEST Ryan J Martin via bitcoin-dev
> wrote:
> >      The original post and the assorted limit proposals---lead me to
> > something I think is worth reiterating: assuming Bitcoin adoption
> > continues to grow at similar or accelerating rates, then eventually the
> > mempool is going to be filled with thousands of txs at all times whether
> > block limits are 1MB or 16MB
>
> This is hopefully true. :)
>
> There is an unbounded amount of demand for block space, and as such it
> doesn?t benefit anyone if the amount of free transactions get out of hand.
> Because freeloaders would definitely be able to completely suffocate
> Bitcoin.
>
> In the mail posted by OP he makes clear that this is a proposal for a hard
> fork to change the block size *limit*. The actual block size would not be
> changed at the same time, it will continue being set based on market values
> or whatever we decide between now and then.
>
> The block size itself should be set based on the amount of fees being paid
> to miners to make a block.
>
> What we want is a true fee-market where the miner can decide to make a
> block
> smaller to get people to pay more fees, because if we were to go to 16MB
> blocks in one go, the cost of the miner would go up, but his reward based
> on
> fees will go down!
> A block so big that 100% of the transactions will always be mined in the
> next block will just cause a large section of people to no longer feel the
> need to pay fees.
>
> As such I don?t fear the situation where the block size limit goes up a lot
> in one go, because it is not in anyone?s interest to make the actual block
> size follow.
> --
> Tom Zander
> Blog: https://zander.github.io
> Vlog: https://vimeo.com/channels/tomscryptochannel
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/dd71b786/attachment-0001.html>

From natanael.l at gmail.com  Thu Mar 30 18:41:19 2017
From: natanael.l at gmail.com (Natanael)
Date: Thu, 30 Mar 2017 20:41:19 +0200
Subject: [bitcoin-dev] Block size adjustment idea - expedience fees +
 difficulty scaling proportional to block size (+ fee pool)
In-Reply-To: <CAAt2M18Fx9LwKU385id0_gHunLa=uQUmCO+jGkvSqb_2uLeCyg@mail.gmail.com>
References: <CAAt2M1_x8zbN-vmgDEUQQvzrtonEKydb+B-P53ibCimVfnd-CA@mail.gmail.com>
	<CAAt2M1-z5nS35sn37B_cH=S6oxFVf8Myptw-rMLCQ21a-uL9nw@mail.gmail.com>
	<CAAt2M1_Rnejikvxd-X9SLdprS9rpq6b25aau0OSrWJu2YABMXw@mail.gmail.com>
	<CAAt2M1_NbWM66dOdP7U9AMGdE4-NB2OyN-SWLkD-P32SPLYRmQ@mail.gmail.com>
	<CAAt2M19_xUJy+=7mkmNxWR=J_=cjAjAnwkzbeTfFEx5s9FBTew@mail.gmail.com>
	<CAAt2M19u9ZYjonPc_ViPFNzk_VBrUBJoB6yrqq_6=EAtvGt7HQ@mail.gmail.com>
	<CAAt2M19HO2PE88wKQLiV+WicwoTY=5HV1LcpYQcK2f=nhsL=Kg@mail.gmail.com>
	<CAAt2M1-_=oeeeFy5_gGdEz_iw=Eo3xzkF6R4fzpbM3x4C6pr2g@mail.gmail.com>
	<CAAt2M1_-kby6Cy+P5aofoQXwUWfk8=wDqMO3c=z=rAwDvzbwkA@mail.gmail.com>
	<CAAt2M1_eCcf7EoyTiJTHzUPaxWE_dY14oRsbYG7J1TDRQMUDvw@mail.gmail.com>
	<CAAt2M1-4K+6TAab6mv3PnBckZS=X6eCbfDwkMbXo45_d+dpo+A@mail.gmail.com>
	<CAAt2M1_kmvBsXOyX2k25JDHyQj8mwVG5vtat3nibG9Sv=NC-KQ@mail.gmail.com>
	<CAAt2M1-jZdvdz85tREdNdZJJK6btzsYvB3x9rMntB01rE-QC6Q@mail.gmail.com>
	<CAAt2M19UOmFya9jo25jWDpEDh6MEfKKHHtq3=QZP9XBkLbda7g@mail.gmail.com>
	<CAAt2M18Le_UNDFk+4x_=UdxX9SdoAQu6RpgCt5qDV79hJh_QUA@mail.gmail.com>
	<CAAt2M1_uRxkhsYY8c93LEh=knW1MQF7vNZ_xJbqSJihTFhEuqg@mail.gmail.com>
	<CAAt2M187ei5=CvaCjbsLuUM3cHjAb6qs=SeRQdjYBuJxsXSaWw@mail.gmail.com>
	<CAAt2M1885LuLJ-2=KL8sEMvutM_U3RFZ-nd25p_3k4-YkBrD=Q@mail.gmail.com>
	<CAAt2M19121uJiZu+ctJ0cHqJHp3JCvTHJYC6ACzP3_N+ZfxUHA@mail.gmail.com>
	<CAAt2M18VCKgcLDX2Y1Z+hHOehdEOhu4en9JOtNO63_8Y2Ne+rg@mail.gmail.com>
	<CAAt2M1--M7rT4khAFADopRig+GA+6n6_6hCK8LbV=cS_YAs+QA@mail.gmail.com>
	<CAAt2M1_2MaY55U7mNirP6KTjGbKRu_BMxwLFrRg5pdAd+83trg@mail.gmail.com>
	<CAAt2M1-dH3LFsPc-s1iPMQ8mWM4NqY5vmrpxuP1kdjHhNXEqLA@mail.gmail.com>
	<CAAt2M18Ty69L_7vfHv8sRmUEnW5K1VZzKRdxDMBANDt10LvD_A@mail.gmail.com>
	<CAAt2M1-Sq-+_0tgKOz_gQkCnBx2Lp=ugp2CQKaz97KHLvdcpdw@mail.gmail.com>
	<CAAt2M19Woysa0_HM7ZsiF14Tv4hVuRE69Eann=_fpOy2gTQV7A@mail.gmail.com>
	<CAAt2M1_itWrpDDVYXOaeQbk6r=B_K9Ow3dD9NvMtU_GGWH5mxA@mail.gmail.com>
	<CAAt2M18sQ-q_yyOVqM-am7rjPHz24hOmi+wo1pCVxuMTcNoHww@mail.gmail.com>
	<CAAt2M18062gaODy6FHqQw42Mhkg1Srs98W5xADcEgb9GcCn+Mw@mail.gmail.com>
	<CAAt2M1_GBXbOi=GUu7mohRqatZGue4DVtPO5CXZmtjKs-vEqEw@mail.gmail.com>
	<CAAt2M19UCAfTq+VyE178ASkjPb8EWm4o2zTPf7UGpNuKeeYcJg@mail.gmail.com>
	<CAAt2M19oxbgpeOMtonEe2xpoit2imPO4M5XZCw4Sap2VMT8zBQ@mail.gmail.com>
	<CAAt2M1_SriFNUcLJfsHNucr3rO8az4BkHVDX0e=_FAproGk6zw@mail.gmail.com>
	<CAAt2M19hjVSk1Lv-6qLgVTK1f283bQzRWy+yz-iiWi9_6z4s2w@mail.gmail.com>
	<CAAt2M19Lz_FKA-sDbC1P=1RMznd1tWSdpJsbZbH04SeZ-mqJxQ@mail.gmail.com>
	<CAAt2M1_+x7Sby-4ygyGPxQv87OhP2wpzP=hZEeUD_Aq9JPFsDw@mail.gmail.com>
	<CAAt2M1-cKQNsD-W4yZOkExx=K2d2YM2C93dmDEReFPP3VLa-2Q@mail.gmail.com>
	<CAAt2M1-x4H6FK6HL-8F-jr0nDg0VpZGCNkOVeWnP7e_UTUxX-w@mail.gmail.com>
	<CAAt2M195V7ynWe5tFd023hs4S06WWZGBXUFKLJfoc-U4Gw99HQ@mail.gmail.com>
	<CAAt2M18axXYYd4QDOo+q4_3Fb5-wyZRM9CzZ5G0vrdfMAmG25A@mail.gmail.com>
	<CAAt2M187Fvz0s=M5esfGe2q8O2CXdMAfBtTi+eVA9hQ86jYvVw@mail.gmail.com>
	<CAAt2M19Pc7LAW2SRCfSOWwNnUNR-dkVfn-6iTdLOBcasrqGs6A@mail.gmail.com>
	<CAAt2M18=qpQqPwy95vw+T5tkZTo457cp5ZHnJOkV+0kfCWW7Hg@mail.gmail.com>
	<CAAt2M19YGM6j3vRwuM5Oe9F0vjvbTjvqT0AT5-G6ZPQ8npo6uw@mail.gmail.com>
	<CAAt2M1_f+BbCEnkaPSCTMgw3oVkiueTr_dF0aDZS1XuZj2bxyg@mail.gmail.com>
	<CAAt2M185GrxytKYTwfZUGBmBH8OD2-VQUuxcja5HtFWLg2rsnw@mail.gmail.com>
	<CAAt2M18KpJqJpN+cBuXNYHbmsGMn7qa5ZZRP5JYTxLPWE2-G0w@mail.gmail.com>
	<CAAt2M1-NO2FErh15A67aigzULWeEPYB6yaR7_RynGr5_DCaRwQ@mail.gmail.com>
	<CAAt2M1-nLu69zUPrZhaxLYemd17nh-tMPa6+UYqoeGzufjjxEA@mail.gmail.com>
	<CAAt2M1-q8SeBPLFmjNZ-rtBbm2RN1NKN9H-3T0px3w21tEjHPQ@mail.gmail.com>
	<CAAt2M1--o0EgVwVi8dM5Rr-PdkPjmv90tE8K7keFMAmGWY7=aA@mail.gmail.com>
	<CAAt2M1_2Ajj1BfKRcHzABSt0sDYsc6PAeQfR=VPBG0c1Rmxn0g@mail.gmail.com>
	<CAAt2M18EVqAKz8K+QZhVfUZGjeAdP43mQQhmO6_D4i8377Bn+Q@mail.gmail.com>
	<CAAt2M19yftfzDLu1vRis_Ui_MZJN65Gy+Lyd+JMdaELfyc4atg@mail.gmail.com>
	<CAAt2M1_9V60dbDxvkmYVYPFZWVu6nNzWjS_E0icCKUq9jPZkXQ@mail.gmail.com>
	<CAAt2M1-9TJnpY6PAwjrOYU6WKTUY65uJ4Rg5mXXSbmb-NC+1dw@mail.gmail.com>
	<CAAt2M1-gyMP+t+z3DrTVQEQmDhm6jdXEs8=Vm9biUCT_bVWNzQ@mail.gmail.com>
	<CAAt2M18GKgjhUgSx0eo9XgQDehh2YgV0O2Q6Wbjkzk2dkAjy-w@mail.gmail.com>
	<CAAt2M19hUmRaL2QyB37i-3eHtS9RCxrDVUDJGi8qsMyF2DSujQ@mail.gmail.com>
	<CAAt2M1_5spX+8JsVykcc8O7jzk2a9cZBvgZm6UQwGDA4v3d+FA@mail.gmail.com>
	<CAAt2M1_0hjmtNwLvGbR_BGaMyhJ78+dBN7HxCkMAp-EbnLwhZg@mail.gmail.com>
	<CAAt2M18qRi6BQ+=2mabg1+qkgo5E9t-S5Co0uEtL76J_HOdtmg@mail.gmail.com>
	<CAAt2M1-McXyTYuMzD+ysv9ZUgPvSRSW7XjqhVKPZqLuS_DLZqw@mail.gmail.com>
	<CAAt2M19xJRUQG9ucpQoOQX=NJ9Vsv2wUTemDtNR672yOFNgWqg@mail.gmail.com>
	<CAAt2M182Ttc=Q2Zxu+_vtJ+Jp4hoWiY0wHtLd4pX5=iGJUvnAQ@mail.gmail.com>
	<CAAt2M18h6w9ctxudjaQLczkUXRRROXH=BmXL=ye45TvOs6w1Fg@mail.gmail.com>
	<CAAt2M1-ErU2SLLDFXWFshPABB5mEe-NcORwXvUHxyCP_i47NHw@mail.gmail.com>
	<CAAt2M1_9CP0DHGKw-t4s35Rgi-RR9Tw0rYtC1ogyNzvnZT1V+Q@mail.gmail.com>
	<CAAt2M1-uNX=VStfcVkRQGX4X1PQAvNKG_p7zCPCMnz=pERhuQg@mail.gmail.com>
	<CAAt2M1-eosLcpceRi=VK2+cjxoPDiWc78h8=xBFwFER+=Bd1aQ@mail.gmail.com>
	<CAAt2M18hRp8X9RwUTo5oouGGBrvf2FKs+D_jRhMMH+5RPi6Htg@mail.gmail.com>
	<CAAt2M19Ucc05MTtPwAV_gVfGY11shDTQ=42jCjLP-YD3jxGq1Q@mail.gmail.com>
	<CAAt2M1_2QqqYvf4YKyBZHru441cfv9eLP+W20L9TFhBA2iOz2w@mail.gmail.com>
	<CAAt2M18JmZupZwzD+TdQibHHpfgecps5pF+8SKkZVevhvBD=bg@mail.gmail.com>
	<CAAt2M1--V_5a6Wqj8BNF_rx4ejbep46iEEWSANu-qTxUsMgWGQ@mail.gmail.com>
	<CAAt2M19unyFm5qCDDhGMSSooHk9TeHJs6fAn8kocS9gYY0TvcQ@mail.gmail.com>
	<CAAt2M1_omDTW0XK4etoo+vbZLBGSCVGzBKKW3eVm_8GJGqNV9w@mail.gmail.com>
	<CAAt2M1-bqeqtB8S1BFQb-Tm2wx=QU8eVSu4gjxS=ZYyT=aL9xg@mail.gmail.com>
	<CAAt2M1-LBX=16yO3QdFpKSjFqLErQsW_suWb9fgGrHuHO81eZg@mail.gmail.com>
	<CAAt2M1-zxJJ9DdVMXRA9avarjjUbE_TgjhrD-JzwcTK6FtgGeg@mail.gmail.com>
	<CAAt2M19a=gd6Pg+BJQpwgdUi7MOUaNw497Zk0hw=FN2ZR2jsXg@mail.gmail.com>
	<CAAt2M18D6-hYanWVMUd3pK3BhRL4Q_zFSP_Z4=rPuah2X=o2WA@mail.gmail.com>
	<CAAt2M1-ETfspsYX4qAd_d==F9jTAsjHU8p9-Fs-P=KUYD8TRvg@mail.gmail.com>
	<CAAt2M18i=L4MFMC+uzNRPwUZbbzCZbuuk2SJTzQqTZLAU64+sw@mail.gmail.com>
	<CAAt2M1-quYTuhr9yXKyJzoxPg4vcLeRMTPX5GemJ+hGT4WbDwg@mail.gmail.com>
	<CAAt2M18mSF_xPOUmjCWAyOkX=vKC0EdSEvMiBC-eNeZa=2u0_g@mail.gmail.com>
	<CAAt2M19LrjODH+t3FJKfdtm2KOUTu1ZX_rF+EZhxoHc-Wi8Fow@mail.gmail.com>
	<CAAt2M18QjPrjh9nAjfaZ4QHOdvzC3-2sMoMwBna-Q4r+P=1d_A@mail.gmail.com>
	<CAAt2M19U5tXpERL9+Q5f4WMvCOMjoxn6VCemz=Urn4LHPZbfNA@mail.gmail.com>
	<CAAt2M1_s2x6H6_sFMBHj1N4Gaft-V3hFiKbSq1f4sCEmsz+NfA@mail.gmail.com>
	<CAAt2M18K2MUCa5eCoYsZntr9UaC9ie9rNdAzBi5XKgk_k+a-QA@mail.gmail.com>
	<CAAt2M19=HQos=aC4wo2drv-wH1_Br1BCLxKu5AkOJYQFmrkzFQ@mail.gmail.com>
	<CAAt2M1-ttJA=tPbVcj6xyGyt_B1jOi0s9f+KDcdEz5R+ewgbow@mail.gmail.com>
	<CAAt2M1_-uy4uzN9ViN8ogXYmjr7KPUWmsXuiVgQ_qMoeDDHPvg@mail.gmail.com>
	<CAAt2M18ws+P2Yg-6CF3Uff6gOU2NXubG6M2B2aq7XsBZk+BMVQ@mail.gmail.com>
	<CAAt2M1_qy4wqpT+Cs+owg8Hbf3GePv3XPGkW-EDJECYJrRmAZQ@mail.gmail.com>
	<CAAt2M1-Ty-DXGVd6GnWvWNkDg9MA3+Zqr6-kAOO-0D7iFZ4qeQ@mail.gmail.com>
	<CAAt2M198u71tFgdCQZcKJQBJWf4=PRjhA49CbXT8nX5AtqXkyQ@mail.gmail.com>
	<CAAt2M1-LZQ1yE1CezFA+hr+=de-RVJ7wzkq-t969BC7OL6dWwg@mail.gmail.com>
	<CAAt2M18Fx9LwKU385id0_gHunLa=uQUmCO+jGkvSqb_2uLeCyg@mail.gmail.com>
Message-ID: <CAAt2M1_NhZ5DvK6xSbSRqn5uJQLAgWenLHOKv7OtQ9uQs=Ng_g@mail.gmail.com>

Den 30 mars 2017 11:34 skrev "Natanael" <natanael.l at gmail.com>:

Block size dependent difficulty scaling. Hardfork required.

Larger blocks means greater difficulty - but it doesn't scale linearly,
rather a little less than linearly. That means miners can take a penalty in
difficulty to claim a greater number of high fee transactions in the same
amount of time (effectively increasing "block size bitrate"), increasing
their profits. When such profitable fees aren't available, they have to
reduce block size.

In other words, the users literally pay miners to increase block size (or
don't pay, which reduces it).


This can be simplified if we do get a fee pool (less hardfork code, more
softfork code), except that the effect will be partially reduced by the
mining subsidy until it approximately reaches parity with average total
fees.

We don't need to alter difficulty calculation.
Instead we alter the percentage of the fees that the miner gets to claim VS
what he have to donate to the pool based on the size of the block he
generated.
Larger block = smaller percentage of fees. This is another way to pay for
blocksize. The effect of this is that on average, miners that generate
smaller blocks takes a share of what otherwise would be part of the mining
profits of those generating larger blocks.

We would need to keep pieces of the section from above on expected
blocksize calculation. Because the closer you are to the expected
blocksize, the more you keep. And thus we need to adjust it according to
usage.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/051be6af/attachment.html>

From jaredr26 at gmail.com  Thu Mar 30 17:16:41 2017
From: jaredr26 at gmail.com (Jared Lee Richardson)
Date: Thu, 30 Mar 2017 10:16:41 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <SINPR04MB1949AB581C6870184445E0C4C2340@SINPR04MB1949.apcprd04.prod.outlook.com>
References: <CAEgR2PEG1UMqY0hzUH4YE_an=qOvQUgfXreSRsoMWfFWxG3Vqg@mail.gmail.com>
	<CAFVRnyq9Qgw88RZqenjQTDZHEWeuNCdh12Dq7wCGZdu9ZuEN9w@mail.gmail.com>
	<CAD1TkXvd4yLHZDAdMi78WwJ_siO1Vt7=DgYiBmP45ffVveuHBg@mail.gmail.com>
	<SINPR04MB1949AB581C6870184445E0C4C2340@SINPR04MB1949.apcprd04.prod.outlook.com>
Message-ID: <CAD1TkXsj53JRYhqot2aHSQR+HEDKm7+6S5kGtaLYBCoc24PuWg@mail.gmail.com>

> You are only looking at technical aspects and missing the political
aspect.

Nodes don't do politics.  People do, and politics is a lot larger with a
lot more moving parts than just node operation.

> full nodes protect the user from the change of any properties of Bitcoin
which they do not agree with.

Full nodes protect from nothing if the chain they attempt to use is
nonfunctional.

> The ability to retain this power for users is of prime importance and is
arguably what gives Bitcoin most of it's value
> Any increase in the cost to run a full node is an increase in cost to
maintain monetary sovereignty

This power is far more complicated than just nodes.  You're implying that
node operation == political participation.  Node operation is only a very
small part of the grand picture of the bitcoin balance of power.

> The ability for a user to run a node is what keeps the miners honest and
prevents them from rewriting any of Bitcoin's rules.

No, it isn't.  Nodes disagreeing with miners is necessary but not
sufficient to prevent that.  Nodes can't utilize a nonfunctional chain, nor
can they utilize a coin with no exchanges.

> What makes Bitcoin uncensorable

Only two things - 1. Node propagation being strong enough that a target
node can't be surrounded by attacker nodes (or so that attacker nodes can't
segment honest nodes), and 2. Miners being distributed in enough countries
and locations to avoid any single outside attacker group from having enough
leverage to prevent transaction inclusion, and miners also having enough
incentives(philosophical or economic) to refuse to collude towards
transaction exclusion.

Being able to run a node yourself has no real effect on either of the two.
Either we have enough nodes that an attacker can't segment the network or
we don't.

> What gives confidence that the 21 million limit will be upheld

What you're describing would result in a fork war.  The opposition to this
would widespread and preventing an attempt relies upon mutual destruction.
If users refused to get on board, exchanges would follow users.  If miners
refused to get on board, the attempt would be equally dead in the water.
It would require a majority of users, businesses and miners to change the
limit; Doing so without an overwhelming majority(90% at least) would still
result in a contentious fork that punished both sides(in price, confidence,
adoption, and possibly chain or node attacks) for refusing to agree.

Nodes have absolutely no say in the matter if they can't segment the
network, and even if they could their impact could be repaired.  Users !=
Nodes.

> What makes transactions irreversible

Err, this makes me worry that you don't understand how blockchains work...
This is because miners are severely punished for attempting to mine on
anything but the longest chain.  Nodes have absolutely no say in the
matter, they always follow the longest chain unless a hardfork was
applied.  If the hardfork has overwhelming consensus, i.e. stopping a 51%
attack, then the attack would be handled.  If the hardfork did not have
overwhelming consensus it would result in another fork war requiring users,
businesses, and miners to actively decide which to support and how, and
once again would involve mutual destruction on both forks.

Nodes don't decide any of these things.  Nodes follow the longest chain,
and have no practical choices in the matter.  Users not running nodes
doesn't diminish their power - Mutual destruction comes from the market
forces on the exchanges, and they could give a rats ass whether you run a
node or not.

> The market is not storing 10s of billions of dollars in Bitcoin despite
all it's risks because it is useful for everyday transactions, that is a
solved problem in every part of the world (Cash/Visa/etc..).

This is just the "bitcoin is gold" argument.  Bitcoin is not gold.  For
someone not already a believer, Bitcoin is a risky, speculative investment
into a promising future technology, whereas gold is a stable physical asset
with 4,000 years of acceptance history that has the same value in nearly
every city on the planet.  Bitcoin is difficult to purchase and difficult
to find someone to exchange for goods or services.  Literally the only
reason we have 10s of billions of dollars of value is because speculation,
which includes nearly all Bitcoin users/holders and almost all businesses
and miners.  While Bitcoin borrows useful features from gold, it has more
possible uses, including uses that were never possible before Bitcoin
existed, and we believe that gives it huge potential.

The ability of other systems to do transactions, like visa or cash, come
with the limitations of those systems.  Bitcoin was designed to break those
limitations and STILL provide the ability to do transactions.  We might all
agree Bitcoin isn't going to ever solve the microtransaction problem, at
least not on-chain, but saying Bitcoin doesn't need utility is just
foolish.  Gold doesn't need utility, gold has 4,000 years of history.  We
don't.

> Even if we fork to 2MB, 5MB, 10MB. It is irrelevant in the larger
picture, transaction capacity will still be too low for global usage in the
medium-long term.

Which is why it needs to be a formula or a continuous process, not a single
number.

> Even if it fails to live up to the hype, you should not discount the
market innovating solutions when there is money to be made.

That's like saying it would be better to do nothing so someone else solves
our problem for us than it would be for us to do what we can to solve it
ourselves.  Someone else solving our problem may very well be Ethereum, and
"solving it for us" is pulling Bitcoin investments, users and nodes away
into Ethereum.

> The additional capacity from blocksize increases are linear improvements
with very large systemic costs compared with the userbase and usage which
is growing exponentially.

The capacity increases do not have to be linear.  The increases in utility
are linear with blocksize increases, but so are the costs.  There's no
reason those blocksize increases can't be tied to or related to usage
increases, so long as the concerns about having too few nodes (or too few
fees) for security are handled.



On Thu, Mar 30, 2017 at 12:11 AM, Luv Khemani <luvb at hotmail.com> wrote:

>
> >> If home users are not running their own full nodes, then home users
> have to trust and rely on other, more powerful nodes to represent them. Of
> course, the more powerful nodes, simply by nature of having more power, are
> going to have different opinions and objectives from the users.
>
> >I think you're conflating mining with node operation here.  Node users
> only power is to block the propagation of certain things.  Since miners
> also have a node endpoint, they can cut the node users out of the equation
> by linking with eachother directly - something they already do out of
> practicality for propagation.  Node users do not have the power to
> arbitrate consensus, that is why we have blocks and PoW.
>
> You are only looking at technical aspects and missing the political aspect.
>
> Node users decide what a Bitcoin is. It matters not how much hash power is
> behind a inflationary supply chain fork, full nodes protect the user from
> the change of any properties of Bitcoin which they do not agree with. The
> ability to retain this power for users is of prime importance and is
> arguably what gives Bitcoin most of it's value. Any increase in the cost to
> run a full node is an increase in cost to maintain monetary sovereignty.
> The ability for a user to run a node is what keeps the miners honest and
> prevents them from rewriting any of Bitcoin's rules.
>
> If it's still difficult to grasp the above paragraph, ask yourself the
> following questions,
> - What makes Bitcoin uncensorable
> - What gives confidence that the 21 million limit will be upheld
> - What makes transactions irreversible
> - If hashpower was king as you make it to be, why havn't miners making up
> majority hashrate who want bigger blocks been able to change the blocksize?
>
> The market is not storing 10s of billions of dollars in Bitcoin despite
> all it's risks because it is useful for everyday transactions, that is a
> solved problem in every part of the world (Cash/Visa/etc..).
>
> Having said that, i fully empathise with your view that increasing
> transaction fees might allow competitors to gain marketshare for low value
> use cases. By all means, we should look into ways of solving the problem.
> But all these debates around blocksize is a total waste of time. Even if we
> fork to 2MB, 5MB, 10MB. It is irrelevant in the larger picture, transaction
> capacity will still be too low for global usage in the medium-long term.
> The additional capacity from blocksize increases are linear improvements
> with very large systemic costs compared with the userbase and usage which
> is growing exponentially. Lightning potentially offers a couple or orders
> of magnitude of scaling and will make blocksize a non-issue for years to
> come. Even if it fails to live up to the hype, you should not discount the
> market innovating solutions when there is money to be made.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/d09eebbf/attachment-0001.html>

From jaredr26 at gmail.com  Thu Mar 30 20:51:45 2017
From: jaredr26 at gmail.com (Jared Lee Richardson)
Date: Thu, 30 Mar 2017 13:51:45 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <1715389.dpD6Bbpm7b@strawberry>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<2349f523-942c-ffb9-7af2-5cc81264888f@gmail.com>
	<127281C1AA02374F8AAD9EE04FAE878A0218E8B825@STUDMail1.muad.local>
	<1715389.dpD6Bbpm7b@strawberry>
Message-ID: <CAD1TkXs=jbkgYUGOo7PP38J8fKnLJ7GaaiJus3CBhpWMca8tow@mail.gmail.com>

> What we want is a true fee-market where the miner can decide to make a
block
> smaller to get people to pay more fees, because if we were to go to 16MB
> blocks in one go, the cost of the miner would go up, but his reward based
on
> fees will go down!

I agree in concept with everything you've said here, but I think there's a
frequent misconception that there's a certain level of miner payouts that
miners "deserve" and/or the opposite, that miners "deserve" as little as
possible.  The 51% attacks that PoW's shields us from are relatively well
defined, which can be used to estimate the minimum amount of sustainable
fees for shielding.  Beyond that minimum amount of fees, the best amount of
fees for every non-miner is the lowest.

Unfortunately miners could arbitrarily decide to limit blocksizes, and
there's little except relay restrictions that everyone else could do about
it.  Fortunately miners so far have pushed for blocksize increases at least
as much as anyone else, though the future when Bitcoin adoption stabilizes
would be an unknown.

> A block so big that 100% of the transactions will always be mined in the
> next block will just cause a large section of people to no longer feel the
> need to pay fees.

FYI, I don't see this happening again ever, barring brief exceptions,
unless there was a sudden blocksize change, which ideally we'd avoid ever
happening.  The stable average value of the transaction fee determines what
kind of business use-cases can be built using Bitcoin.  An average fee of
$0.001 usd enables a lot more use cases than $0.10 average fees, and $50.00
average fees still have far more possible use cases than a $1000 average
fee.  If fees stabilize low, use cases will spring up to fill the
blockspace, unless miners arbitraily seek to keep the fees above some level.

On Thu, Mar 30, 2017 at 3:30 AM, Tom Zander via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Thursday, 30 March 2017 07:23:31 CEST Ryan J Martin via bitcoin-dev
> wrote:
> >      The original post and the assorted limit proposals---lead me to
> > something I think is worth reiterating: assuming Bitcoin adoption
> > continues to grow at similar or accelerating rates, then eventually the
> > mempool is going to be filled with thousands of txs at all times whether
> > block limits are 1MB or 16MB
>
> This is hopefully true. :)
>
> There is an unbounded amount of demand for block space, and as such it
> doesn?t benefit anyone if the amount of free transactions get out of hand.
> Because freeloaders would definitely be able to completely suffocate
> Bitcoin.
>
> In the mail posted by OP he makes clear that this is a proposal for a hard
> fork to change the block size *limit*. The actual block size would not be
> changed at the same time, it will continue being set based on market values
> or whatever we decide between now and then.
>
> The block size itself should be set based on the amount of fees being paid
> to miners to make a block.
>
> What we want is a true fee-market where the miner can decide to make a
> block
> smaller to get people to pay more fees, because if we were to go to 16MB
> blocks in one go, the cost of the miner would go up, but his reward based
> on
> fees will go down!
> A block so big that 100% of the transactions will always be mined in the
> next block will just cause a large section of people to no longer feel the
> need to pay fees.
>
> As such I don?t fear the situation where the block size limit goes up a lot
> in one go, because it is not in anyone?s interest to make the actual block
> size follow.
> --
> Tom Zander
> Blog: https://zander.github.io
> Vlog: https://vimeo.com/channels/tomscryptochannel
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/1f44fdaf/attachment.html>

From jaredr26 at gmail.com  Thu Mar 30 21:42:31 2017
From: jaredr26 at gmail.com (Jared Lee Richardson)
Date: Thu, 30 Mar 2017 14:42:31 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFVRnypMev625j6htvpC+xJo3y5VgWednOBaRhqtuiMKKNPFsw@mail.gmail.com>
References: <CY4PR18MB135053B235C734A3D8D9C13BCD350@CY4PR18MB1350.namprd18.prod.outlook.com>
	<42619430.6XQoorDgjR@strawberry>
	<CAFVRnypMev625j6htvpC+xJo3y5VgWednOBaRhqtuiMKKNPFsw@mail.gmail.com>
Message-ID: <CAD1TkXtHpb+aZhYufLRhDAy9=K9H+DZdDjounPubUuR9idVT3w@mail.gmail.com>

> There have been attacks demonstrated where a malicious miner with
sufficient hashrate can leverage large blocks to exacerbate selfish mining.

Can you give me a link to this?  Having done a lot of mining, I really
really doubt this.  I'm assuming the theory relies upon propagation times
and focuses on small miners versus large ones, but that's wrong.
Propagation times don't affect small miners disproportionately, though they
might affect small POOLS disproportionately, that isn't the same thing at
all.  No miner since at least 2014 has operated a full node directly with
each miner - it is incredibly impractical to do so.  They retrieve only the
merkle root hash and other parameters from the stratum server, which is a
very small packet and does not increase with the size of the blocks.  If
they really want to select which transactions to include, some pools offer
options of that sort(or can, I believe) but almost no one does.  If they
don't like how their pool picks transactions, they'll use a different pool,
that simple.

If there's some other theory about a miner exploiting higher blocksizes
selfishly then I'd love to read up on it to understand it.  If what
you/others actually meant by that was smaller "pools," that's a much much
smaller problem.  Pools don't earn major profits and generally are at the
mercy of their miners if they make bad choices or can't fix low
performance.  For pools, block propagation time was a major major issue
even before blocks were full, and latency + packet loss between mining
units and the pool is also a big concern.  I was seeing occasional block
propagation delays(over a minute) on a fiber connection in 2013/4 due to
minute differences in peering.  If a pool can't afford enough bandwidth to
keep propagation times down, they can't be a pool.  Bigger blocksizes will
make it so they even more totally-can't-be-a-pool, but they already can't
be a pool, so who cares.  Plus, compact blocks should have already solve
nearly all of this problem as I understand it.

So definitely want to know more if I'm misunderstanding the attack vector.

> We already know that large empty blocks (rather, blocks with fake
transactions) can be leveraged in ways that both damages the network and
increases miner profits.

Maybe you're meaning an attack where other pools get stuck on validation
due to processing issues?  This is also a nonissue.  The smallest viable
pool has enough difficulties with other, non-hardware related issues that
buying the largest, beefiest standard processor available with ample RAM
won't even come up on the radar.  No one cares about $600 in hardware
versus $1000 in hardware when it takes you 6 weeks to get your peering and
block propagation configuration just right and another 6 months to convince
miners to substantially use your pool.

If you meant miners and not pools, that's also wrong.  Mining hardware
doesn't validate blocks anymore, it hasn't been practical for years.  They
only get the merkle root hash of the valid transaction set.  The pool
handles the rest.

> In general, fear of other currencies passing Bitcoin is unsubstantiated.
Bitcoin has by far the strongest development team, and also is by far the
most decentralized.

Markets only care a little bit what your development team is like.
Ethereum has Vitalik, who is an incredibly smart and respectable dude,
while BU absolutely hates the core developers right now.  Markets are more
likely to put more faith in a single leader than core right now if that
comparison was really made.

"Most decentralized" is nearly impossible to quantify, and has almost no
value to speculators.  Since all of these markets are highly speculative,
they only care about future demand.  Future demand relies upon future use.
Unsubstantiated?  Ethereum is already 28% of Bitcoin by cap and 24% by
trading.  Four months ago that was 4%.  Their transaction volume also
doubled.  What world are you living in?

> A coin like ethereum may even be able to pass Bitcoin in market cap. But
that's okay. Ethereum has very different properties and it's not something
I would trust as a tool to provide me with political sovereignty.

Well great, I guess so long as you're ok with it we'll just roll with it.
Wait, no.  If Bitcoin loses its first-mover network effect, a small cadre
of die-hard libertarians are not going to be able to keep it from becoming
a page in the history books.  Die hard libertarians can barely keep a voice
in the U.S. congress - neither markets nor day-to-day users particularly
care about the philosophy, they care about what it can do for them.

> Ethereum passing Bitcoin in market cap does not mean that it has proved
superior to Bitcoin.

The markets have literally told us why Ethereum is shooting up.  Its
because the Bitcoin community has fractured around a debate with nearly no
progress on a solution for the last 3 years, and especially because BU
appears to be strong enough to think they can fork and the markets know
full well what a contentious fork will do to Bitcoin's near-term future.

> It could just mean that enterprises are really excited about permissioned
blockchains.

Then it would have happened not when the BU situation imploded but when
Microsoft announced they were working with Ethereum on things like that.
No one cared about Microsoft's announcement.  You don't seriously believe
what you're saying, do you?

> That's not interesting to me at any market cap.

I agree with you, but Bitcoin becoming a page in the history books because
a few die-hard libertarians didn't think price or adoption was important is
a big, big concern, especially when they almost have veto power.  Markets
don't care about philosophy, they care about future value.  Bitcoin has
value because we think it may be the most useful new innovation in the
future.  If we screw that future usefulness up, philosophy gives us no more
value than Friendster has today.

On Thu, Mar 30, 2017 at 4:19 AM, David Vorick via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> > What we want is a true fee-market where the miner can decide to make a
> block
> > smaller to get people to pay more fees, because if we were to go to 16MB
> > blocks in one go, the cost of the miner would go up, but his reward
> based on
> > fees will go down!
> > A block so big that 100% of the transactions will always be mined in the
> > next block will just cause a large section of people to no longer feel
> the
> > need to pay fees.
>
> > As such I don?t fear the situation where the block size limit goes up a
> lot
> > in one go, because it is not in anyone?s interest to make the actual
> block
> > size follow.
>
> There have been attacks demonstrated where a malicious miner with
> sufficient hashrate can leverage large blocks to exacerbate selfish mining.
> Adversarial behaviors from miners need to be considered, it's not safe to
> simply assume that a miner won't have reasons to attack the network. We
> already know that large empty blocks (rather, blocks with fake
> transactions) can be leveraged in ways that both damages the network and
> increases miner profits.
>
> In general, fear of other currencies passing Bitcoin is unsubstantiated.
> Bitcoin has by far the strongest development team, and also is by far the
> most decentralized. To the best of my knowledge, Bitcoin is the only
> cryptocurrency out there that is both not-dead and also lacks a strong
> central leadership.
>
> A coin like ethereum may even be able to pass Bitcoin in market cap. But
> that's okay. Ethereum has very different properties and it's not something
> I would trust as a tool to provide me with political sovereignty. Ethereum
> passing Bitcoin in market cap does not mean that it has proved superior to
> Bitcoin. It could just mean that enterprises are really excited about
> permissioned blockchains. That's not interesting to me at any market cap.
>
> Bitcoin's core value add is and should continue to be decentralization and
> trustlessness. Nobody is remotely close to competing with Bitcoin on those
> fronts, and in my mind that's far more important than any of the other
> mania anyway.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/35da9093/attachment-0001.html>

From jaredr26 at gmail.com  Thu Mar 30 21:52:01 2017
From: jaredr26 at gmail.com (Jared Lee Richardson)
Date: Thu, 30 Mar 2017 14:52:01 -0700
Subject: [bitcoin-dev] High fees / centralization
In-Reply-To: <CAFVRnyq07qNappzwEmB_e+xCKPyCzHcWbnTDWCdeWjrsMMioLQ@mail.gmail.com>
References: <CALJP9GB2Fds8m9JpaVv0NxGDr579BtR9RMs7-KNSLkK8Mz7LoA@mail.gmail.com>
	<CALJP9GAOgpSAhrrYFPRbGKZXwqZn_oDUmv6B7wcvwxcZufDd0g@mail.gmail.com>
	<CALJP9GDkdxsvOZHJxzx+0pvjWBAkAswZCWXcp=zL7LNMRNfCOg@mail.gmail.com>
	<CALJP9GBk4gG0H+tEJmEiz=0+LAQoe6_sL1Fv-BCJSfmvfY8PRA@mail.gmail.com>
	<CALJP9GDH1xQ-cYc1SN6jejXDA49eiy_OR49XLLWd+=VdNo7ekA@mail.gmail.com>
	<CAFVRnyq07qNappzwEmB_e+xCKPyCzHcWbnTDWCdeWjrsMMioLQ@mail.gmail.com>
Message-ID: <CAD1TkXsfb7VC7stXV33me1PDem750adpyETg-finKyjnV=Syxg@mail.gmail.com>

> Further, we are very far from the point (in my appraisal) where fees are
high enough to block home users from using the network.

This depends entirely on the usecase entirely.  Most likely even without a
blocksize increase, home purchases will be large enough to fit on the
blocksize in the forseeable future.  Microtransactions(<$0.25) on the other
hand aren't viable no matter what we try to do - There's just too much data.

Most likely, transaction fees above $1 per tx will become unappealing for
many consumers, and above $10 is likely to be niche-level.  It is hard to
say with any certainty, but average credit card fees give us some
indications to work with - $1.2 on a $30 transaction, though paid by the
business and not the consumer.

Without blocksize increases, fees higher than $1/tx are basically
inevitable, most likely before 2020.  Running a node only costs $10/month
if that.  If we were going to favor node operational costs that highly in
the weighting, we'd better have a pretty solid justification with
mathematical models or examples.

> We should not throw away the core innovation of monetary sovereignty in
pursuit of supporting 0.1% of the world's daily transactions.

If we can easily have both, why not have both?

An altcoin with both will take Bitcoin's monetary sovereignty crown by
default.  No crown, no usecases, no Bitcoin.



On Thu, Mar 30, 2017 at 9:14 AM, David Vorick via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Mar 30, 2017 12:04 PM, "Tom Harding via bitcoin-dev" <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> Raystonn,
>
> Your logic is very hard to dispute. An important special case is small
> miners.
>
> Small miners use pools exactly because they want smaller, more frequent
> payments.
>
> Rising fees force them to take payments less frequently, and will only
> tend to make more of them give up.
>
> With fees rising superlinearly, this centralizing effect is much stronger
> than the oft-cited worry of small miners joining large pools to decrease
> orphan rates.
>
>
> Miners get paid on average once every ten minutes. The size of fees and
> the number of fee transactions does not change the payout rate.
>
> Further, we are very far from the point (in my appraisal) where fees are
> high enough to block home users from using the network.
>
> Bitcoin has many high-value use cases such as savings. We should not throw
> away the core innovation of monetary sovereignty in pursuit of supporting
> 0.1% of the world's daily transactions.
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/697743ea/attachment.html>

From tomz at freedommail.ch  Thu Mar 30 21:57:59 2017
From: tomz at freedommail.ch (Tom Zander)
Date: Thu, 30 Mar 2017 23:57:59 +0200
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAD1TkXs=jbkgYUGOo7PP38J8fKnLJ7GaaiJus3CBhpWMca8tow@mail.gmail.com>
References: <CAFzgq-xizPMNqfvW11nUhd6HmfZu8aGjcR9fshEsf6o5HOt_dA@mail.gmail.com>
	<1715389.dpD6Bbpm7b@strawberry>
	<CAD1TkXs=jbkgYUGOo7PP38J8fKnLJ7GaaiJus3CBhpWMca8tow@mail.gmail.com>
Message-ID: <1922432.iaUNhnELJe@strawberry>

On Thursday, 30 March 2017 22:51:45 CEST Jared Lee Richardson wrote:
> Unfortunately miners could arbitrarily decide to limit blocksizes, and
> there's little except relay restrictions that everyone else could do about
> it.

No, there is a lot you and I can do about it. They call it a fee market for 
a reason because you can take your money elsewhere. You can choose to not 
make the transfer at all, use another crypto or just use fiat.

Bitcoin has value because we use it as money, supporess that usecase and the 
value of it goes down.
-- 
Tom Zander
Blog: https://zander.github.io
Vlog: https://vimeo.com/channels/tomscryptochannel

From tomh at thinlink.com  Fri Mar 31 01:13:35 2017
From: tomh at thinlink.com (Tom Harding)
Date: Thu, 30 Mar 2017 18:13:35 -0700
Subject: [bitcoin-dev] High fees / centralization
In-Reply-To: <CAFVRnyq07qNappzwEmB_e+xCKPyCzHcWbnTDWCdeWjrsMMioLQ@mail.gmail.com>
References: <CALJP9GB2Fds8m9JpaVv0NxGDr579BtR9RMs7-KNSLkK8Mz7LoA@mail.gmail.com>
	<CALJP9GAOgpSAhrrYFPRbGKZXwqZn_oDUmv6B7wcvwxcZufDd0g@mail.gmail.com>
	<CALJP9GDkdxsvOZHJxzx+0pvjWBAkAswZCWXcp=zL7LNMRNfCOg@mail.gmail.com>
	<CALJP9GBk4gG0H+tEJmEiz=0+LAQoe6_sL1Fv-BCJSfmvfY8PRA@mail.gmail.com>
	<CALJP9GDH1xQ-cYc1SN6jejXDA49eiy_OR49XLLWd+=VdNo7ekA@mail.gmail.com>
	<CAFVRnyq07qNappzwEmB_e+xCKPyCzHcWbnTDWCdeWjrsMMioLQ@mail.gmail.com>
Message-ID: <84eb5e29-b97d-38e5-763f-eb784e83d209@thinlink.com>

On 3/30/2017 9:14 AM, David Vorick wrote:
> On Mar 30, 2017 12:04 PM, "Tom Harding via bitcoin-dev"
> <bitcoin-dev at lists.linuxfoundation.org
> <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
>
>     Raystonn, 
>
>     Your logic is very hard to dispute. An important special case is
>     small miners.
>
>     Small miners use pools exactly because they want smaller, more
>     frequent payments.
>
>     Rising fees force them to take payments less frequently, and will
>     only tend to make more of them give up.
>
>     With fees rising superlinearly, this centralizing effect is much
>     stronger than the oft-cited worry of small miners joining large
>     pools to decrease orphan rates.
>
>
> Miners get paid on average once every ten minutes. The size of fees
> and the number of fee transactions does not change the payout rate.
>
> Further, we are very far from the point (in my appraisal) where fees
> are high enough to block home users from using the network.
>
> Bitcoin has many high-value use cases such as savings. We should not
> throw away the core innovation of monetary sovereignty in pursuit of
> supporting 0.1% of the world's daily transactions.
>

Owners of small mining rigs get paid by pools, generally using regular
transactions that pay regular fees (p2pool is an exception that pays
directly from coinbase).  The point is the unintended consequences are
directly at odds with one of the justifications offered for small blocks
- miner centralization.

This is a special case.  Raystonn's general point was that high fees
will lead to fewer economic actors overall, and therefore fewer full nodes.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/1d2447b2/attachment.html>

From vladimir.zaytsev at gmail.com  Fri Mar 31 01:39:23 2017
From: vladimir.zaytsev at gmail.com (Vladimir Zaytsev)
Date: Thu, 30 Mar 2017 21:39:23 -0400
Subject: [bitcoin-dev] High fees / centralization
In-Reply-To: <CAD1TkXsfb7VC7stXV33me1PDem750adpyETg-finKyjnV=Syxg@mail.gmail.com>
References: <CALJP9GB2Fds8m9JpaVv0NxGDr579BtR9RMs7-KNSLkK8Mz7LoA@mail.gmail.com>
	<CALJP9GAOgpSAhrrYFPRbGKZXwqZn_oDUmv6B7wcvwxcZufDd0g@mail.gmail.com>
	<CALJP9GDkdxsvOZHJxzx+0pvjWBAkAswZCWXcp=zL7LNMRNfCOg@mail.gmail.com>
	<CALJP9GBk4gG0H+tEJmEiz=0+LAQoe6_sL1Fv-BCJSfmvfY8PRA@mail.gmail.com>
	<CALJP9GDH1xQ-cYc1SN6jejXDA49eiy_OR49XLLWd+=VdNo7ekA@mail.gmail.com>
	<CAFVRnyq07qNappzwEmB_e+xCKPyCzHcWbnTDWCdeWjrsMMioLQ@mail.gmail.com>
	<CAD1TkXsfb7VC7stXV33me1PDem750adpyETg-finKyjnV=Syxg@mail.gmail.com>
Message-ID: <61B9AE0D-5A58-4A72-8834-8ED164ED627F@gmail.com>

There must be a way to organize ?branches? of smaller activity to join main tree after they grow. Outsider a bit, I see going circles here, but not everything must be accepted in the chain. Good idea as it is, it?s just too early to record every sight?.



> On Mar 30, 2017, at 5:52 PM, Jared Lee Richardson via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> > Further, we are very far from the point (in my appraisal) where fees are high enough to block home users from using the network.
> 
> This depends entirely on the usecase entirely.  Most likely even without a blocksize increase, home purchases will be large enough to fit on the blocksize in the forseeable future.  Microtransactions(<$0.25) on the other hand aren't viable no matter what we try to do - There's just too much data.
> 
> Most likely, transaction fees above $1 per tx will become unappealing for many consumers, and above $10 is likely to be niche-level.  It is hard to say with any certainty, but average credit card fees give us some indications to work with - $1.2 on a $30 transaction, though paid by the business and not the consumer.
> 
> Without blocksize increases, fees higher than $1/tx are basically inevitable, most likely before 2020.  Running a node only costs $10/month if that.  If we were going to favor node operational costs that highly in the weighting, we'd better have a pretty solid justification with mathematical models or examples.
> 
> > We should not throw away the core innovation of monetary sovereignty in pursuit of supporting 0.1% of the world's daily transactions.
> 
> If we can easily have both, why not have both?
> 
> An altcoin with both will take Bitcoin's monetary sovereignty crown by default.  No crown, no usecases, no Bitcoin.
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/5c299869/attachment-0001.html>

From jaredr26 at gmail.com  Fri Mar 31 02:01:49 2017
From: jaredr26 at gmail.com (Jared Lee Richardson)
Date: Thu, 30 Mar 2017 19:01:49 -0700
Subject: [bitcoin-dev] High fees / centralization
In-Reply-To: <61B9AE0D-5A58-4A72-8834-8ED164ED627F@gmail.com>
References: <CALJP9GB2Fds8m9JpaVv0NxGDr579BtR9RMs7-KNSLkK8Mz7LoA@mail.gmail.com>
	<CALJP9GAOgpSAhrrYFPRbGKZXwqZn_oDUmv6B7wcvwxcZufDd0g@mail.gmail.com>
	<CALJP9GDkdxsvOZHJxzx+0pvjWBAkAswZCWXcp=zL7LNMRNfCOg@mail.gmail.com>
	<CALJP9GBk4gG0H+tEJmEiz=0+LAQoe6_sL1Fv-BCJSfmvfY8PRA@mail.gmail.com>
	<CALJP9GDH1xQ-cYc1SN6jejXDA49eiy_OR49XLLWd+=VdNo7ekA@mail.gmail.com>
	<CAFVRnyq07qNappzwEmB_e+xCKPyCzHcWbnTDWCdeWjrsMMioLQ@mail.gmail.com>
	<CAD1TkXsfb7VC7stXV33me1PDem750adpyETg-finKyjnV=Syxg@mail.gmail.com>
	<61B9AE0D-5A58-4A72-8834-8ED164ED627F@gmail.com>
Message-ID: <CAD1TkXug2qFggztJL=Z7Thzx13E6ga-2Ps9yZFzonn2YjStrcg@mail.gmail.com>

That would be blockchain sharding.

Would be amazing if someone could figure out how to do it trustlessly.  So
far I'm not convinced it is possible to resolve the conflicts between the
shards and commit transactions between shards.

On Thu, Mar 30, 2017 at 6:39 PM, Vladimir Zaytsev <
vladimir.zaytsev at gmail.com> wrote:

> There must be a way to organize ?branches? of smaller activity to join
> main tree after they grow. Outsider a bit, I see going circles here, but
> not everything must be accepted in the chain. Good idea as it is, it?s just
> too early to record every sight?.
>
>
>
> On Mar 30, 2017, at 5:52 PM, Jared Lee Richardson via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> > Further, we are very far from the point (in my appraisal) where fees
> are high enough to block home users from using the network.
>
> This depends entirely on the usecase entirely.  Most likely even without a
> blocksize increase, home purchases will be large enough to fit on the
> blocksize in the forseeable future.  Microtransactions(<$0.25) on the other
> hand aren't viable no matter what we try to do - There's just too much data.
>
> Most likely, transaction fees above $1 per tx will become unappealing for
> many consumers, and above $10 is likely to be niche-level.  It is hard to
> say with any certainty, but average credit card fees give us some
> indications to work with - $1.2 on a $30 transaction, though paid by the
> business and not the consumer.
>
> Without blocksize increases, fees higher than $1/tx are basically
> inevitable, most likely before 2020.  Running a node only costs $10/month
> if that.  If we were going to favor node operational costs that highly in
> the weighting, we'd better have a pretty solid justification with
> mathematical models or examples.
>
> > We should not throw away the core innovation of monetary sovereignty in
> pursuit of supporting 0.1% of the world's daily transactions.
>
> If we can easily have both, why not have both?
>
> An altcoin with both will take Bitcoin's monetary sovereignty crown by
> default.  No crown, no usecases, no Bitcoin.
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/b24ba14f/attachment.html>

From vladimir.zaytsev at gmail.com  Fri Mar 31 02:26:31 2017
From: vladimir.zaytsev at gmail.com (Vladimir Zaytsev)
Date: Thu, 30 Mar 2017 22:26:31 -0400
Subject: [bitcoin-dev] High fees / centralization
In-Reply-To: <CAD1TkXug2qFggztJL=Z7Thzx13E6ga-2Ps9yZFzonn2YjStrcg@mail.gmail.com>
References: <CALJP9GB2Fds8m9JpaVv0NxGDr579BtR9RMs7-KNSLkK8Mz7LoA@mail.gmail.com>
	<CALJP9GAOgpSAhrrYFPRbGKZXwqZn_oDUmv6B7wcvwxcZufDd0g@mail.gmail.com>
	<CALJP9GDkdxsvOZHJxzx+0pvjWBAkAswZCWXcp=zL7LNMRNfCOg@mail.gmail.com>
	<CALJP9GBk4gG0H+tEJmEiz=0+LAQoe6_sL1Fv-BCJSfmvfY8PRA@mail.gmail.com>
	<CALJP9GDH1xQ-cYc1SN6jejXDA49eiy_OR49XLLWd+=VdNo7ekA@mail.gmail.com>
	<CAFVRnyq07qNappzwEmB_e+xCKPyCzHcWbnTDWCdeWjrsMMioLQ@mail.gmail.com>
	<CAD1TkXsfb7VC7stXV33me1PDem750adpyETg-finKyjnV=Syxg@mail.gmail.com>
	<61B9AE0D-5A58-4A72-8834-8ED164ED627F@gmail.com>
	<CAD1TkXug2qFggztJL=Z7Thzx13E6ga-2Ps9yZFzonn2YjStrcg@mail.gmail.com>
Message-ID: <54F29F31-6E1B-478A-85B4-7BAE3703714A@gmail.com>

Can there be a minimum amount to put up for mining ? I hope i?m not in violation with any ideology yet :)

> On Mar 30, 2017, at 10:01 PM, Jared Lee Richardson <jaredr26 at gmail.com> wrote:
> 
> That would be blockchain sharding.
> 
> Would be amazing if someone could figure out how to do it trustlessly.  So far I'm not convinced it is possible to resolve the conflicts between the shards and commit transactions between shards.
> 
> On Thu, Mar 30, 2017 at 6:39 PM, Vladimir Zaytsev <vladimir.zaytsev at gmail.com <mailto:vladimir.zaytsev at gmail.com>> wrote:
> There must be a way to organize ?branches? of smaller activity to join main tree after they grow. Outsider a bit, I see going circles here, but not everything must be accepted in the chain. Good idea as it is, it?s just too early to record every sight?.
> 
> 
> 
>> On Mar 30, 2017, at 5:52 PM, Jared Lee Richardson via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
>> 
>> > Further, we are very far from the point (in my appraisal) where fees are high enough to block home users from using the network.
>> 
>> This depends entirely on the usecase entirely.  Most likely even without a blocksize increase, home purchases will be large enough to fit on the blocksize in the forseeable future.  Microtransactions(<$0.25) on the other hand aren't viable no matter what we try to do - There's just too much data.
>> 
>> Most likely, transaction fees above $1 per tx will become unappealing for many consumers, and above $10 is likely to be niche-level.  It is hard to say with any certainty, but average credit card fees give us some indications to work with - $1.2 on a $30 transaction, though paid by the business and not the consumer.
>> 
>> Without blocksize increases, fees higher than $1/tx are basically inevitable, most likely before 2020.  Running a node only costs $10/month if that.  If we were going to favor node operational costs that highly in the weighting, we'd better have a pretty solid justification with mathematical models or examples.
>> 
>> > We should not throw away the core innovation of monetary sovereignty in pursuit of supporting 0.1% of the world's daily transactions.
>> 
>> If we can easily have both, why not have both?
>> 
>> An altcoin with both will take Bitcoin's monetary sovereignty crown by default.  No crown, no usecases, no Bitcoin.
>> 
>> 
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170330/d04bf4f1/attachment.html>

From natanael.l at gmail.com  Fri Mar 31 04:14:30 2017
From: natanael.l at gmail.com (Natanael)
Date: Fri, 31 Mar 2017 06:14:30 +0200
Subject: [bitcoin-dev] Block size adjustment idea - expedience fees +
 difficulty scaling proportional to block size (+ fee pool)
In-Reply-To: <CAAt2M1_NhZ5DvK6xSbSRqn5uJQLAgWenLHOKv7OtQ9uQs=Ng_g@mail.gmail.com>
References: <CAAt2M1_x8zbN-vmgDEUQQvzrtonEKydb+B-P53ibCimVfnd-CA@mail.gmail.com>
	<CAAt2M1_Rnejikvxd-X9SLdprS9rpq6b25aau0OSrWJu2YABMXw@mail.gmail.com>
	<CAAt2M1_NbWM66dOdP7U9AMGdE4-NB2OyN-SWLkD-P32SPLYRmQ@mail.gmail.com>
	<CAAt2M19_xUJy+=7mkmNxWR=J_=cjAjAnwkzbeTfFEx5s9FBTew@mail.gmail.com>
	<CAAt2M19u9ZYjonPc_ViPFNzk_VBrUBJoB6yrqq_6=EAtvGt7HQ@mail.gmail.com>
	<CAAt2M19HO2PE88wKQLiV+WicwoTY=5HV1LcpYQcK2f=nhsL=Kg@mail.gmail.com>
	<CAAt2M1-_=oeeeFy5_gGdEz_iw=Eo3xzkF6R4fzpbM3x4C6pr2g@mail.gmail.com>
	<CAAt2M1_-kby6Cy+P5aofoQXwUWfk8=wDqMO3c=z=rAwDvzbwkA@mail.gmail.com>
	<CAAt2M1_eCcf7EoyTiJTHzUPaxWE_dY14oRsbYG7J1TDRQMUDvw@mail.gmail.com>
	<CAAt2M1-4K+6TAab6mv3PnBckZS=X6eCbfDwkMbXo45_d+dpo+A@mail.gmail.com>
	<CAAt2M1_kmvBsXOyX2k25JDHyQj8mwVG5vtat3nibG9Sv=NC-KQ@mail.gmail.com>
	<CAAt2M1-jZdvdz85tREdNdZJJK6btzsYvB3x9rMntB01rE-QC6Q@mail.gmail.com>
	<CAAt2M19UOmFya9jo25jWDpEDh6MEfKKHHtq3=QZP9XBkLbda7g@mail.gmail.com>
	<CAAt2M18Le_UNDFk+4x_=UdxX9SdoAQu6RpgCt5qDV79hJh_QUA@mail.gmail.com>
	<CAAt2M1_uRxkhsYY8c93LEh=knW1MQF7vNZ_xJbqSJihTFhEuqg@mail.gmail.com>
	<CAAt2M187ei5=CvaCjbsLuUM3cHjAb6qs=SeRQdjYBuJxsXSaWw@mail.gmail.com>
	<CAAt2M1885LuLJ-2=KL8sEMvutM_U3RFZ-nd25p_3k4-YkBrD=Q@mail.gmail.com>
	<CAAt2M19121uJiZu+ctJ0cHqJHp3JCvTHJYC6ACzP3_N+ZfxUHA@mail.gmail.com>
	<CAAt2M18VCKgcLDX2Y1Z+hHOehdEOhu4en9JOtNO63_8Y2Ne+rg@mail.gmail.com>
	<CAAt2M1--M7rT4khAFADopRig+GA+6n6_6hCK8LbV=cS_YAs+QA@mail.gmail.com>
	<CAAt2M1_2MaY55U7mNirP6KTjGbKRu_BMxwLFrRg5pdAd+83trg@mail.gmail.com>
	<CAAt2M1-dH3LFsPc-s1iPMQ8mWM4NqY5vmrpxuP1kdjHhNXEqLA@mail.gmail.com>
	<CAAt2M18Ty69L_7vfHv8sRmUEnW5K1VZzKRdxDMBANDt10LvD_A@mail.gmail.com>
	<CAAt2M1-Sq-+_0tgKOz_gQkCnBx2Lp=ugp2CQKaz97KHLvdcpdw@mail.gmail.com>
	<CAAt2M19Woysa0_HM7ZsiF14Tv4hVuRE69Eann=_fpOy2gTQV7A@mail.gmail.com>
	<CAAt2M1_itWrpDDVYXOaeQbk6r=B_K9Ow3dD9NvMtU_GGWH5mxA@mail.gmail.com>
	<CAAt2M18sQ-q_yyOVqM-am7rjPHz24hOmi+wo1pCVxuMTcNoHww@mail.gmail.com>
	<CAAt2M18062gaODy6FHqQw42Mhkg1Srs98W5xADcEgb9GcCn+Mw@mail.gmail.com>
	<CAAt2M1_GBXbOi=GUu7mohRqatZGue4DVtPO5CXZmtjKs-vEqEw@mail.gmail.com>
	<CAAt2M19UCAfTq+VyE178ASkjPb8EWm4o2zTPf7UGpNuKeeYcJg@mail.gmail.com>
	<CAAt2M19oxbgpeOMtonEe2xpoit2imPO4M5XZCw4Sap2VMT8zBQ@mail.gmail.com>
	<CAAt2M1_SriFNUcLJfsHNucr3rO8az4BkHVDX0e=_FAproGk6zw@mail.gmail.com>
	<CAAt2M19hjVSk1Lv-6qLgVTK1f283bQzRWy+yz-iiWi9_6z4s2w@mail.gmail.com>
	<CAAt2M19Lz_FKA-sDbC1P=1RMznd1tWSdpJsbZbH04SeZ-mqJxQ@mail.gmail.com>
	<CAAt2M1_+x7Sby-4ygyGPxQv87OhP2wpzP=hZEeUD_Aq9JPFsDw@mail.gmail.com>
	<CAAt2M1-cKQNsD-W4yZOkExx=K2d2YM2C93dmDEReFPP3VLa-2Q@mail.gmail.com>
	<CAAt2M1-x4H6FK6HL-8F-jr0nDg0VpZGCNkOVeWnP7e_UTUxX-w@mail.gmail.com>
	<CAAt2M195V7ynWe5tFd023hs4S06WWZGBXUFKLJfoc-U4Gw99HQ@mail.gmail.com>
	<CAAt2M18axXYYd4QDOo+q4_3Fb5-wyZRM9CzZ5G0vrdfMAmG25A@mail.gmail.com>
	<CAAt2M187Fvz0s=M5esfGe2q8O2CXdMAfBtTi+eVA9hQ86jYvVw@mail.gmail.com>
	<CAAt2M19Pc7LAW2SRCfSOWwNnUNR-dkVfn-6iTdLOBcasrqGs6A@mail.gmail.com>
	<CAAt2M18=qpQqPwy95vw+T5tkZTo457cp5ZHnJOkV+0kfCWW7Hg@mail.gmail.com>
	<CAAt2M19YGM6j3vRwuM5Oe9F0vjvbTjvqT0AT5-G6ZPQ8npo6uw@mail.gmail.com>
	<CAAt2M1_f+BbCEnkaPSCTMgw3oVkiueTr_dF0aDZS1XuZj2bxyg@mail.gmail.com>
	<CAAt2M185GrxytKYTwfZUGBmBH8OD2-VQUuxcja5HtFWLg2rsnw@mail.gmail.com>
	<CAAt2M18KpJqJpN+cBuXNYHbmsGMn7qa5ZZRP5JYTxLPWE2-G0w@mail.gmail.com>
	<CAAt2M1-NO2FErh15A67aigzULWeEPYB6yaR7_RynGr5_DCaRwQ@mail.gmail.com>
	<CAAt2M1-nLu69zUPrZhaxLYemd17nh-tMPa6+UYqoeGzufjjxEA@mail.gmail.com>
	<CAAt2M1-q8SeBPLFmjNZ-rtBbm2RN1NKN9H-3T0px3w21tEjHPQ@mail.gmail.com>
	<CAAt2M1--o0EgVwVi8dM5Rr-PdkPjmv90tE8K7keFMAmGWY7=aA@mail.gmail.com>
	<CAAt2M1_2Ajj1BfKRcHzABSt0sDYsc6PAeQfR=VPBG0c1Rmxn0g@mail.gmail.com>
	<CAAt2M18EVqAKz8K+QZhVfUZGjeAdP43mQQhmO6_D4i8377Bn+Q@mail.gmail.com>
	<CAAt2M19yftfzDLu1vRis_Ui_MZJN65Gy+Lyd+JMdaELfyc4atg@mail.gmail.com>
	<CAAt2M1_9V60dbDxvkmYVYPFZWVu6nNzWjS_E0icCKUq9jPZkXQ@mail.gmail.com>
	<CAAt2M1-9TJnpY6PAwjrOYU6WKTUY65uJ4Rg5mXXSbmb-NC+1dw@mail.gmail.com>
	<CAAt2M1-gyMP+t+z3DrTVQEQmDhm6jdXEs8=Vm9biUCT_bVWNzQ@mail.gmail.com>
	<CAAt2M18GKgjhUgSx0eo9XgQDehh2YgV0O2Q6Wbjkzk2dkAjy-w@mail.gmail.com>
	<CAAt2M19hUmRaL2QyB37i-3eHtS9RCxrDVUDJGi8qsMyF2DSujQ@mail.gmail.com>
	<CAAt2M1_5spX+8JsVykcc8O7jzk2a9cZBvgZm6UQwGDA4v3d+FA@mail.gmail.com>
	<CAAt2M1_0hjmtNwLvGbR_BGaMyhJ78+dBN7HxCkMAp-EbnLwhZg@mail.gmail.com>
	<CAAt2M18qRi6BQ+=2mabg1+qkgo5E9t-S5Co0uEtL76J_HOdtmg@mail.gmail.com>
	<CAAt2M1-McXyTYuMzD+ysv9ZUgPvSRSW7XjqhVKPZqLuS_DLZqw@mail.gmail.com>
	<CAAt2M19xJRUQG9ucpQoOQX=NJ9Vsv2wUTemDtNR672yOFNgWqg@mail.gmail.com>
	<CAAt2M182Ttc=Q2Zxu+_vtJ+Jp4hoWiY0wHtLd4pX5=iGJUvnAQ@mail.gmail.com>
	<CAAt2M18h6w9ctxudjaQLczkUXRRROXH=BmXL=ye45TvOs6w1Fg@mail.gmail.com>
	<CAAt2M1-ErU2SLLDFXWFshPABB5mEe-NcORwXvUHxyCP_i47NHw@mail.gmail.com>
	<CAAt2M1_9CP0DHGKw-t4s35Rgi-RR9Tw0rYtC1ogyNzvnZT1V+Q@mail.gmail.com>
	<CAAt2M1-uNX=VStfcVkRQGX4X1PQAvNKG_p7zCPCMnz=pERhuQg@mail.gmail.com>
	<CAAt2M1-eosLcpceRi=VK2+cjxoPDiWc78h8=xBFwFER+=Bd1aQ@mail.gmail.com>
	<CAAt2M18hRp8X9RwUTo5oouGGBrvf2FKs+D_jRhMMH+5RPi6Htg@mail.gmail.com>
	<CAAt2M19Ucc05MTtPwAV_gVfGY11shDTQ=42jCjLP-YD3jxGq1Q@mail.gmail.com>
	<CAAt2M1_2QqqYvf4YKyBZHru441cfv9eLP+W20L9TFhBA2iOz2w@mail.gmail.com>
	<CAAt2M18JmZupZwzD+TdQibHHpfgecps5pF+8SKkZVevhvBD=bg@mail.gmail.com>
	<CAAt2M1--V_5a6Wqj8BNF_rx4ejbep46iEEWSANu-qTxUsMgWGQ@mail.gmail.com>
	<CAAt2M19unyFm5qCDDhGMSSooHk9TeHJs6fAn8kocS9gYY0TvcQ@mail.gmail.com>
	<CAAt2M1_omDTW0XK4etoo+vbZLBGSCVGzBKKW3eVm_8GJGqNV9w@mail.gmail.com>
	<CAAt2M1-bqeqtB8S1BFQb-Tm2wx=QU8eVSu4gjxS=ZYyT=aL9xg@mail.gmail.com>
	<CAAt2M1-LBX=16yO3QdFpKSjFqLErQsW_suWb9fgGrHuHO81eZg@mail.gmail.com>
	<CAAt2M1-zxJJ9DdVMXRA9avarjjUbE_TgjhrD-JzwcTK6FtgGeg@mail.gmail.com>
	<CAAt2M19a=gd6Pg+BJQpwgdUi7MOUaNw497Zk0hw=FN2ZR2jsXg@mail.gmail.com>
	<CAAt2M18D6-hYanWVMUd3pK3BhRL4Q_zFSP_Z4=rPuah2X=o2WA@mail.gmail.com>
	<CAAt2M1-ETfspsYX4qAd_d==F9jTAsjHU8p9-Fs-P=KUYD8TRvg@mail.gmail.com>
	<CAAt2M18i=L4MFMC+uzNRPwUZbbzCZbuuk2SJTzQqTZLAU64+sw@mail.gmail.com>
	<CAAt2M1-quYTuhr9yXKyJzoxPg4vcLeRMTPX5GemJ+hGT4WbDwg@mail.gmail.com>
	<CAAt2M18mSF_xPOUmjCWAyOkX=vKC0EdSEvMiBC-eNeZa=2u0_g@mail.gmail.com>
	<CAAt2M19LrjODH+t3FJKfdtm2KOUTu1ZX_rF+EZhxoHc-Wi8Fow@mail.gmail.com>
	<CAAt2M18QjPrjh9nAjfaZ4QHOdvzC3-2sMoMwBna-Q4r+P=1d_A@mail.gmail.com>
	<CAAt2M19U5tXpERL9+Q5f4WMvCOMjoxn6VCemz=Urn4LHPZbfNA@mail.gmail.com>
	<CAAt2M1_s2x6H6_sFMBHj1N4Gaft-V3hFiKbSq1f4sCEmsz+NfA@mail.gmail.com>
	<CAAt2M18K2MUCa5eCoYsZntr9UaC9ie9rNdAzBi5XKgk_k+a-QA@mail.gmail.com>
	<CAAt2M19=HQos=aC4wo2drv-wH1_Br1BCLxKu5AkOJYQFmrkzFQ@mail.gmail.com>
	<CAAt2M1-ttJA=tPbVcj6xyGyt_B1jOi0s9f+KDcdEz5R+ewgbow@mail.gmail.com>
	<CAAt2M1_-uy4uzN9ViN8ogXYmjr7KPUWmsXuiVgQ_qMoeDDHPvg@mail.gmail.com>
	<CAAt2M18ws+P2Yg-6CF3Uff6gOU2NXubG6M2B2aq7XsBZk+BMVQ@mail.gmail.com>
	<CAAt2M1_qy4wqpT+Cs+owg8Hbf3GePv3XPGkW-EDJECYJrRmAZQ@mail.gmail.com>
	<CAAt2M1-Ty-DXGVd6GnWvWNkDg9MA3+Zqr6-kAOO-0D7iFZ4qeQ@mail.gmail.com>
	<CAAt2M198u71tFgdCQZcKJQBJWf4=PRjhA49CbXT8nX5AtqXkyQ@mail.gmail.com>
	<CAAt2M1-LZQ1yE1CezFA+hr+=de-RVJ7wzkq-t969BC7OL6dWwg@mail.gmail.com>
	<CAAt2M18Fx9LwKU385id0_gHunLa=uQUmCO+jGkvSqb_2uLeCyg@mail.gmail.com>
	<CAAt2M1_NhZ5DvK6xSbSRqn5uJQLAgWenLHOKv7OtQ9uQs=Ng_g@mail.gmail.com>
Message-ID: <CAAt2M19wEj4YqE70a8i1Sj5c1=sVnSR58pbThrbgDrAzfEzJVg@mail.gmail.com>

Den 30 mars 2017 11:34 skrev "Natanael" <natanael.l at gmail.com>:

Block size dependent difficulty scaling. Hardfork required.

Larger blocks means greater difficulty - but it doesn't scale linearly,
rather a little less than linearly. That means miners can take a penalty in
difficulty to claim a greater number of high fee transactions in the same
amount of time (effectively increasing "block size bitrate"), increasing
their profits. When such profitable fees aren't available, they have to
reduce block size.

In other words, the users literally pay miners to increase block size (or
don't pay, which reduces it).


This can be simplified if we do get a fee pool (less hardfork code, more
softfork code), except that the effect will be partially reduced by the
mining subsidy until it approximately reaches parity with average total
fees.

We don't need to alter difficulty calculation.
Instead we alter the percentage of the fees that the miner gets to claim VS
what he have to donate to the pool based on the size of the block he
generated.
Larger block = smaller percentage of fees. This is another way to pay for
blocksize. The effect of this is that on average, miners that generate
smaller blocks takes a share of what otherwise would be part of the mining
profits of those generating larger blocks.

We would need to keep pieces of the section from above on expected
blocksize calculation. Because the closer you are to the expected
blocksize, the more you keep. And thus we need to adjust it according to
usage.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170331/507bf8de/attachment-0001.html>

From natanael.l at gmail.com  Fri Mar 31 04:15:17 2017
From: natanael.l at gmail.com (Natanael)
Date: Fri, 31 Mar 2017 06:15:17 +0200
Subject: [bitcoin-dev] Block size adjustment idea - expedience fees +
 difficulty scaling proportional to block size (+ fee pool)
In-Reply-To: <CAAt2M19wEj4YqE70a8i1Sj5c1=sVnSR58pbThrbgDrAzfEzJVg@mail.gmail.com>
References: <CAAt2M1_x8zbN-vmgDEUQQvzrtonEKydb+B-P53ibCimVfnd-CA@mail.gmail.com>
	<CAAt2M1_NbWM66dOdP7U9AMGdE4-NB2OyN-SWLkD-P32SPLYRmQ@mail.gmail.com>
	<CAAt2M19_xUJy+=7mkmNxWR=J_=cjAjAnwkzbeTfFEx5s9FBTew@mail.gmail.com>
	<CAAt2M19u9ZYjonPc_ViPFNzk_VBrUBJoB6yrqq_6=EAtvGt7HQ@mail.gmail.com>
	<CAAt2M19HO2PE88wKQLiV+WicwoTY=5HV1LcpYQcK2f=nhsL=Kg@mail.gmail.com>
	<CAAt2M1-_=oeeeFy5_gGdEz_iw=Eo3xzkF6R4fzpbM3x4C6pr2g@mail.gmail.com>
	<CAAt2M1_-kby6Cy+P5aofoQXwUWfk8=wDqMO3c=z=rAwDvzbwkA@mail.gmail.com>
	<CAAt2M1_eCcf7EoyTiJTHzUPaxWE_dY14oRsbYG7J1TDRQMUDvw@mail.gmail.com>
	<CAAt2M1-4K+6TAab6mv3PnBckZS=X6eCbfDwkMbXo45_d+dpo+A@mail.gmail.com>
	<CAAt2M1_kmvBsXOyX2k25JDHyQj8mwVG5vtat3nibG9Sv=NC-KQ@mail.gmail.com>
	<CAAt2M1-jZdvdz85tREdNdZJJK6btzsYvB3x9rMntB01rE-QC6Q@mail.gmail.com>
	<CAAt2M19UOmFya9jo25jWDpEDh6MEfKKHHtq3=QZP9XBkLbda7g@mail.gmail.com>
	<CAAt2M18Le_UNDFk+4x_=UdxX9SdoAQu6RpgCt5qDV79hJh_QUA@mail.gmail.com>
	<CAAt2M1_uRxkhsYY8c93LEh=knW1MQF7vNZ_xJbqSJihTFhEuqg@mail.gmail.com>
	<CAAt2M187ei5=CvaCjbsLuUM3cHjAb6qs=SeRQdjYBuJxsXSaWw@mail.gmail.com>
	<CAAt2M1885LuLJ-2=KL8sEMvutM_U3RFZ-nd25p_3k4-YkBrD=Q@mail.gmail.com>
	<CAAt2M19121uJiZu+ctJ0cHqJHp3JCvTHJYC6ACzP3_N+ZfxUHA@mail.gmail.com>
	<CAAt2M18VCKgcLDX2Y1Z+hHOehdEOhu4en9JOtNO63_8Y2Ne+rg@mail.gmail.com>
	<CAAt2M1--M7rT4khAFADopRig+GA+6n6_6hCK8LbV=cS_YAs+QA@mail.gmail.com>
	<CAAt2M1_2MaY55U7mNirP6KTjGbKRu_BMxwLFrRg5pdAd+83trg@mail.gmail.com>
	<CAAt2M1-dH3LFsPc-s1iPMQ8mWM4NqY5vmrpxuP1kdjHhNXEqLA@mail.gmail.com>
	<CAAt2M18Ty69L_7vfHv8sRmUEnW5K1VZzKRdxDMBANDt10LvD_A@mail.gmail.com>
	<CAAt2M1-Sq-+_0tgKOz_gQkCnBx2Lp=ugp2CQKaz97KHLvdcpdw@mail.gmail.com>
	<CAAt2M19Woysa0_HM7ZsiF14Tv4hVuRE69Eann=_fpOy2gTQV7A@mail.gmail.com>
	<CAAt2M1_itWrpDDVYXOaeQbk6r=B_K9Ow3dD9NvMtU_GGWH5mxA@mail.gmail.com>
	<CAAt2M18sQ-q_yyOVqM-am7rjPHz24hOmi+wo1pCVxuMTcNoHww@mail.gmail.com>
	<CAAt2M18062gaODy6FHqQw42Mhkg1Srs98W5xADcEgb9GcCn+Mw@mail.gmail.com>
	<CAAt2M1_GBXbOi=GUu7mohRqatZGue4DVtPO5CXZmtjKs-vEqEw@mail.gmail.com>
	<CAAt2M19UCAfTq+VyE178ASkjPb8EWm4o2zTPf7UGpNuKeeYcJg@mail.gmail.com>
	<CAAt2M19oxbgpeOMtonEe2xpoit2imPO4M5XZCw4Sap2VMT8zBQ@mail.gmail.com>
	<CAAt2M1_SriFNUcLJfsHNucr3rO8az4BkHVDX0e=_FAproGk6zw@mail.gmail.com>
	<CAAt2M19hjVSk1Lv-6qLgVTK1f283bQzRWy+yz-iiWi9_6z4s2w@mail.gmail.com>
	<CAAt2M19Lz_FKA-sDbC1P=1RMznd1tWSdpJsbZbH04SeZ-mqJxQ@mail.gmail.com>
	<CAAt2M1_+x7Sby-4ygyGPxQv87OhP2wpzP=hZEeUD_Aq9JPFsDw@mail.gmail.com>
	<CAAt2M1-cKQNsD-W4yZOkExx=K2d2YM2C93dmDEReFPP3VLa-2Q@mail.gmail.com>
	<CAAt2M1-x4H6FK6HL-8F-jr0nDg0VpZGCNkOVeWnP7e_UTUxX-w@mail.gmail.com>
	<CAAt2M195V7ynWe5tFd023hs4S06WWZGBXUFKLJfoc-U4Gw99HQ@mail.gmail.com>
	<CAAt2M18axXYYd4QDOo+q4_3Fb5-wyZRM9CzZ5G0vrdfMAmG25A@mail.gmail.com>
	<CAAt2M187Fvz0s=M5esfGe2q8O2CXdMAfBtTi+eVA9hQ86jYvVw@mail.gmail.com>
	<CAAt2M19Pc7LAW2SRCfSOWwNnUNR-dkVfn-6iTdLOBcasrqGs6A@mail.gmail.com>
	<CAAt2M18=qpQqPwy95vw+T5tkZTo457cp5ZHnJOkV+0kfCWW7Hg@mail.gmail.com>
	<CAAt2M19YGM6j3vRwuM5Oe9F0vjvbTjvqT0AT5-G6ZPQ8npo6uw@mail.gmail.com>
	<CAAt2M1_f+BbCEnkaPSCTMgw3oVkiueTr_dF0aDZS1XuZj2bxyg@mail.gmail.com>
	<CAAt2M185GrxytKYTwfZUGBmBH8OD2-VQUuxcja5HtFWLg2rsnw@mail.gmail.com>
	<CAAt2M18KpJqJpN+cBuXNYHbmsGMn7qa5ZZRP5JYTxLPWE2-G0w@mail.gmail.com>
	<CAAt2M1-NO2FErh15A67aigzULWeEPYB6yaR7_RynGr5_DCaRwQ@mail.gmail.com>
	<CAAt2M1-nLu69zUPrZhaxLYemd17nh-tMPa6+UYqoeGzufjjxEA@mail.gmail.com>
	<CAAt2M1-q8SeBPLFmjNZ-rtBbm2RN1NKN9H-3T0px3w21tEjHPQ@mail.gmail.com>
	<CAAt2M1--o0EgVwVi8dM5Rr-PdkPjmv90tE8K7keFMAmGWY7=aA@mail.gmail.com>
	<CAAt2M1_2Ajj1BfKRcHzABSt0sDYsc6PAeQfR=VPBG0c1Rmxn0g@mail.gmail.com>
	<CAAt2M18EVqAKz8K+QZhVfUZGjeAdP43mQQhmO6_D4i8377Bn+Q@mail.gmail.com>
	<CAAt2M19yftfzDLu1vRis_Ui_MZJN65Gy+Lyd+JMdaELfyc4atg@mail.gmail.com>
	<CAAt2M1_9V60dbDxvkmYVYPFZWVu6nNzWjS_E0icCKUq9jPZkXQ@mail.gmail.com>
	<CAAt2M1-9TJnpY6PAwjrOYU6WKTUY65uJ4Rg5mXXSbmb-NC+1dw@mail.gmail.com>
	<CAAt2M1-gyMP+t+z3DrTVQEQmDhm6jdXEs8=Vm9biUCT_bVWNzQ@mail.gmail.com>
	<CAAt2M18GKgjhUgSx0eo9XgQDehh2YgV0O2Q6Wbjkzk2dkAjy-w@mail.gmail.com>
	<CAAt2M19hUmRaL2QyB37i-3eHtS9RCxrDVUDJGi8qsMyF2DSujQ@mail.gmail.com>
	<CAAt2M1_5spX+8JsVykcc8O7jzk2a9cZBvgZm6UQwGDA4v3d+FA@mail.gmail.com>
	<CAAt2M1_0hjmtNwLvGbR_BGaMyhJ78+dBN7HxCkMAp-EbnLwhZg@mail.gmail.com>
	<CAAt2M18qRi6BQ+=2mabg1+qkgo5E9t-S5Co0uEtL76J_HOdtmg@mail.gmail.com>
	<CAAt2M1-McXyTYuMzD+ysv9ZUgPvSRSW7XjqhVKPZqLuS_DLZqw@mail.gmail.com>
	<CAAt2M19xJRUQG9ucpQoOQX=NJ9Vsv2wUTemDtNR672yOFNgWqg@mail.gmail.com>
	<CAAt2M182Ttc=Q2Zxu+_vtJ+Jp4hoWiY0wHtLd4pX5=iGJUvnAQ@mail.gmail.com>
	<CAAt2M18h6w9ctxudjaQLczkUXRRROXH=BmXL=ye45TvOs6w1Fg@mail.gmail.com>
	<CAAt2M1-ErU2SLLDFXWFshPABB5mEe-NcORwXvUHxyCP_i47NHw@mail.gmail.com>
	<CAAt2M1_9CP0DHGKw-t4s35Rgi-RR9Tw0rYtC1ogyNzvnZT1V+Q@mail.gmail.com>
	<CAAt2M1-uNX=VStfcVkRQGX4X1PQAvNKG_p7zCPCMnz=pERhuQg@mail.gmail.com>
	<CAAt2M1-eosLcpceRi=VK2+cjxoPDiWc78h8=xBFwFER+=Bd1aQ@mail.gmail.com>
	<CAAt2M18hRp8X9RwUTo5oouGGBrvf2FKs+D_jRhMMH+5RPi6Htg@mail.gmail.com>
	<CAAt2M19Ucc05MTtPwAV_gVfGY11shDTQ=42jCjLP-YD3jxGq1Q@mail.gmail.com>
	<CAAt2M1_2QqqYvf4YKyBZHru441cfv9eLP+W20L9TFhBA2iOz2w@mail.gmail.com>
	<CAAt2M18JmZupZwzD+TdQibHHpfgecps5pF+8SKkZVevhvBD=bg@mail.gmail.com>
	<CAAt2M1--V_5a6Wqj8BNF_rx4ejbep46iEEWSANu-qTxUsMgWGQ@mail.gmail.com>
	<CAAt2M19unyFm5qCDDhGMSSooHk9TeHJs6fAn8kocS9gYY0TvcQ@mail.gmail.com>
	<CAAt2M1_omDTW0XK4etoo+vbZLBGSCVGzBKKW3eVm_8GJGqNV9w@mail.gmail.com>
	<CAAt2M1-bqeqtB8S1BFQb-Tm2wx=QU8eVSu4gjxS=ZYyT=aL9xg@mail.gmail.com>
	<CAAt2M1-LBX=16yO3QdFpKSjFqLErQsW_suWb9fgGrHuHO81eZg@mail.gmail.com>
	<CAAt2M1-zxJJ9DdVMXRA9avarjjUbE_TgjhrD-JzwcTK6FtgGeg@mail.gmail.com>
	<CAAt2M19a=gd6Pg+BJQpwgdUi7MOUaNw497Zk0hw=FN2ZR2jsXg@mail.gmail.com>
	<CAAt2M18D6-hYanWVMUd3pK3BhRL4Q_zFSP_Z4=rPuah2X=o2WA@mail.gmail.com>
	<CAAt2M1-ETfspsYX4qAd_d==F9jTAsjHU8p9-Fs-P=KUYD8TRvg@mail.gmail.com>
	<CAAt2M18i=L4MFMC+uzNRPwUZbbzCZbuuk2SJTzQqTZLAU64+sw@mail.gmail.com>
	<CAAt2M1-quYTuhr9yXKyJzoxPg4vcLeRMTPX5GemJ+hGT4WbDwg@mail.gmail.com>
	<CAAt2M18mSF_xPOUmjCWAyOkX=vKC0EdSEvMiBC-eNeZa=2u0_g@mail.gmail.com>
	<CAAt2M19LrjODH+t3FJKfdtm2KOUTu1ZX_rF+EZhxoHc-Wi8Fow@mail.gmail.com>
	<CAAt2M18QjPrjh9nAjfaZ4QHOdvzC3-2sMoMwBna-Q4r+P=1d_A@mail.gmail.com>
	<CAAt2M19U5tXpERL9+Q5f4WMvCOMjoxn6VCemz=Urn4LHPZbfNA@mail.gmail.com>
	<CAAt2M1_s2x6H6_sFMBHj1N4Gaft-V3hFiKbSq1f4sCEmsz+NfA@mail.gmail.com>
	<CAAt2M18K2MUCa5eCoYsZntr9UaC9ie9rNdAzBi5XKgk_k+a-QA@mail.gmail.com>
	<CAAt2M19=HQos=aC4wo2drv-wH1_Br1BCLxKu5AkOJYQFmrkzFQ@mail.gmail.com>
	<CAAt2M1-ttJA=tPbVcj6xyGyt_B1jOi0s9f+KDcdEz5R+ewgbow@mail.gmail.com>
	<CAAt2M1_-uy4uzN9ViN8ogXYmjr7KPUWmsXuiVgQ_qMoeDDHPvg@mail.gmail.com>
	<CAAt2M18ws+P2Yg-6CF3Uff6gOU2NXubG6M2B2aq7XsBZk+BMVQ@mail.gmail.com>
	<CAAt2M1_qy4wqpT+Cs+owg8Hbf3GePv3XPGkW-EDJECYJrRmAZQ@mail.gmail.com>
	<CAAt2M1-Ty-DXGVd6GnWvWNkDg9MA3+Zqr6-kAOO-0D7iFZ4qeQ@mail.gmail.com>
	<CAAt2M198u71tFgdCQZcKJQBJWf4=PRjhA49CbXT8nX5AtqXkyQ@mail.gmail.com>
	<CAAt2M1-LZQ1yE1CezFA+hr+=de-RVJ7wzkq-t969BC7OL6dWwg@mail.gmail.com>
	<CAAt2M18Fx9LwKU385id0_gHunLa=uQUmCO+jGkvSqb_2uLeCyg@mail.gmail.com>
	<CAAt2M1_NhZ5DvK6xSbSRqn5uJQLAgWenLHOKv7OtQ9uQs=Ng_g@mail.gmail.com>
	<CAAt2M19wEj4YqE70a8i1Sj5c1=sVnSR58pbThrbgDrAzfEzJVg@mail.gmail.com>
Message-ID: <CAAt2M192cpCKbzDBoSs7LEDWQz16M3dB6tP8Ys15k7X7aD_Jzg@mail.gmail.com>

Sorry for sending a double, hit the wrong button...

Den 31 mars 2017 06:14 skrev "Natanael" <natanael.l at gmail.com>:

>
>
> Den 30 mars 2017 11:34 skrev "Natanael" <natanael.l at gmail.com>:
>
> Block size dependent difficulty scaling. Hardfork required.
>
> Larger blocks means greater difficulty - but it doesn't scale linearly,
> rather a little less than linearly. That means miners can take a penalty in
> difficulty to claim a greater number of high fee transactions in the same
> amount of time (effectively increasing "block size bitrate"), increasing
> their profits. When such profitable fees aren't available, they have to
> reduce block size.
>
> In other words, the users literally pay miners to increase block size (or
> don't pay, which reduces it).
>
>
> This can be simplified if we do get a fee pool (less hardfork code, more
> softfork code), except that the effect will be partially reduced by the
> mining subsidy until it approximately reaches parity with average total
> fees.
>
> We don't need to alter difficulty calculation.
> Instead we alter the percentage of the fees that the miner gets to claim
> VS what he have to donate to the pool based on the size of the block he
> generated.
> Larger block = smaller percentage of fees. This is another way to pay for
> blocksize. The effect of this is that on average, miners that generate
> smaller blocks takes a share of what otherwise would be part of the mining
> profits of those generating larger blocks.
>
> We would need to keep pieces of the section from above on expected
> blocksize calculation. Because the closer you are to the expected
> blocksize, the more you keep. And thus we need to adjust it according to
> usage.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170331/19564c56/attachment.html>

From luvb at hotmail.com  Fri Mar 31 04:21:17 2017
From: luvb at hotmail.com (Luv Khemani)
Date: Fri, 31 Mar 2017 04:21:17 +0000
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAD1TkXsj53JRYhqot2aHSQR+HEDKm7+6S5kGtaLYBCoc24PuWg@mail.gmail.com>
References: <CAEgR2PEG1UMqY0hzUH4YE_an=qOvQUgfXreSRsoMWfFWxG3Vqg@mail.gmail.com>
	<CAFVRnyq9Qgw88RZqenjQTDZHEWeuNCdh12Dq7wCGZdu9ZuEN9w@mail.gmail.com>
	<CAD1TkXvd4yLHZDAdMi78WwJ_siO1Vt7=DgYiBmP45ffVveuHBg@mail.gmail.com>
	<SINPR04MB1949AB581C6870184445E0C4C2340@SINPR04MB1949.apcprd04.prod.outlook.com>,
	<CAD1TkXsj53JRYhqot2aHSQR+HEDKm7+6S5kGtaLYBCoc24PuWg@mail.gmail.com>
Message-ID: <SINPR04MB1949A0AF3AD33B4664417068C2370@SINPR04MB1949.apcprd04.prod.outlook.com>

> Nodes don't do politics.  People do, and politics is a lot larger with a lot more moving parts than just node operation.


Node operation is making a stand on what money you will accept.

Ie Your local store will only accept US Dollars and not Japanese Yen. Without being able to run a node, you have no way to independently determine what you are receiving, you could be paid Zimbawe Dollars and wouldn't know any better.

> Full nodes protect from nothing if the chain they attempt to use is nonfunctional.

This is highly subjective.
Just because it is nonfunctional to you, does not mean it is nonfunctional to existing users.

> This power is far more complicated than just nodes.

I never implied otherwise.

> You're implying that node operation == political participation.

Ofcourse it is. Try paying for my goods using BU/Ehtereum/Dash/etc.. or a Bitcoin forked with inflation, you will not get any goods regardless of how much hashrate those coins have.

> Miners being distributed in enough countries and locations to avoid any single outside attacker group from having enough leverage to prevent transaction inclusion, and miners also having enough incentives(philosophical or economic) to refuse to collude towards transaction exclusion.

It's good that you see the importance of this. You should also take into consideration the number of independent mining entities it takes to achieve 51% hashrate. It will be of little use to have thousands on independent miners/pools  if 3 large pools make up 51% of hash rate and collude to attack the network.

>  If users refused to get on board, exchanges would follow users.  If miners refused to get on board, the attempt would be equally dead in the water.  It would require a majority of users, businesses and miners to change the limit;

> Nodes have absolutely no say in the matter if they can't segment the network, and even if they could their impact could be repaired.  Users != Nodes.

Nodes define which network they want to follow. Without a Node, you don't even get to decide which segement you are on. Either miners decide( for SPV wallets) or your wallet's server decides(Node). You have no control without a

>> What makes transactions irreversible
>Nodes have absolutely no say in the matter, they always follow the longest chain unless a hardfork was applied.

My bad here, hashpower decides order. This is the sole reason we have mining, to order transactions.

> Mutual destruction comes from the market forces on the exchanges, and they could give a rats ass whether you run a node or not.

Ability to run a node and validate rules => Confidence in currency => Higher demand => Higher exchange rate

I would not be holding any Bitcoins if it was unfeasible for me to run a Node and instead had to trust some 3rd party that the currency was not being inflated/censored. Bitcoin has value because of it's trustless properties. Otherwise, there is no difference between cryptocurrencies and fiat.

> Literally the only reason we have 10s of billions of dollars of value is because speculation, which includes nearly all Bitcoin users/holders and almost all businesses and miners.  While  Bitcoin borrows useful features from gold, it has more possible uses, including uses that were never possible before Bitcoin existed, and we believe that gives it huge potential.
> The ability of other systems to do transactions, like visa or cash, come with the limitations of those systems.  Bitcoin was designed to break those limitations and STILL provide the ability to do transactions.  We might all agree Bitcoin isn't going to ever solve the microtransaction problem, at least not on-chain, but saying Bitcoin doesn't need utility is just foolish.  Gold doesn't need utility, gold has 4,000 years of history.  We don't.
> There's no reason those blocksize increases can't be tied to or related to usage increases

Blocksize has nothing to do with utility, only cost of on-chain transactions.
OTOH increasing the blocksize has alot to do with introducing the very limitations that Visa/Cash have.
Why would you risk destroying Bitcoin's primary proposition (removing limitations of Cash/Visa) for insignificant capacity increase?

> That's like saying it would be better to do nothing so someone else solves our problem for us than it would be for us to do what we can to solve it ourselves.  Someone else solving our problem may very well be Ethereum, and "solving it for us" is pulling Bitcoin investments, users and nodes away into Ethereum.

Who says nothing is being done? Segwit, Lightning, pre-loaded wallets like Coinbase are all solutions.




On Thu, Mar 30, 2017 at 12:11 AM, Luv Khemani <luvb at hotmail.com<mailto:luvb at hotmail.com>> wrote:


>> If home users are not running their own full nodes, then home users have to trust and rely on other, more powerful nodes to represent them. Of course, the more powerful nodes, simply by nature of having more power, are going to have different opinions and objectives from the users.

>I think you're conflating mining with node operation here.  Node users only power is to block the propagation of certain things.  Since miners also have a node endpoint, they can cut the node users out of the equation by linking with eachother directly - something they already do out of practicality for propagation.  Node users do not have the power to arbitrate consensus, that is why we have blocks and PoW.

You are only looking at technical aspects and missing the political aspect.

Node users decide what a Bitcoin is. It matters not how much hash power is behind a inflationary supply chain fork, full nodes protect the user from the change of any properties of Bitcoin which they do not agree with. The ability to retain this power for users is of prime importance and is arguably what gives Bitcoin most of it's value. Any increase in the cost to run a full node is an increase in cost to maintain monetary sovereignty. The ability for a user to run a node is what keeps the miners honest and prevents them from rewriting any of Bitcoin's rules.

If it's still difficult to grasp the above paragraph, ask yourself the following questions,
- What makes Bitcoin uncensorable
- What gives confidence that the 21 million limit will be upheld
- What makes transactions irreversible
- If hashpower was king as you make it to be, why havn't miners making up majority hashrate who want bigger blocks been able to change the blocksize?

The market is not storing 10s of billions of dollars in Bitcoin despite all it's risks because it is useful for everyday transactions, that is a solved problem in every part of the world (Cash/Visa/etc..).

Having said that, i fully empathise with your view that increasing transaction fees might allow competitors to gain marketshare for low value use cases. By all means, we should look into ways of solving the problem. But all these debates around blocksize is a total waste of time. Even if we fork to 2MB, 5MB, 10MB. It is irrelevant in the larger picture, transaction capacity will still be too low for global usage in the medium-long term. The additional capacity from blocksize increases are linear improvements with very large systemic costs compared with the userbase and usage which is growing exponentially. Lightning potentially offers a couple or orders of magnitude of scaling and will make blocksize a non-issue for years to come. Even if it fails to live up to the hype, you should not discount the market innovating solutions when there is money to be made.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170331/04e79a13/attachment-0001.html>

From jaredr26 at gmail.com  Fri Mar 31 05:28:33 2017
From: jaredr26 at gmail.com (Jared Lee Richardson)
Date: Thu, 30 Mar 2017 22:28:33 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <SINPR04MB1949A0AF3AD33B4664417068C2370@SINPR04MB1949.apcprd04.prod.outlook.com>
References: <CAEgR2PEG1UMqY0hzUH4YE_an=qOvQUgfXreSRsoMWfFWxG3Vqg@mail.gmail.com>
	<CAFVRnyq9Qgw88RZqenjQTDZHEWeuNCdh12Dq7wCGZdu9ZuEN9w@mail.gmail.com>
	<CAD1TkXvd4yLHZDAdMi78WwJ_siO1Vt7=DgYiBmP45ffVveuHBg@mail.gmail.com>
	<SINPR04MB1949AB581C6870184445E0C4C2340@SINPR04MB1949.apcprd04.prod.outlook.com>
	<CAD1TkXsj53JRYhqot2aHSQR+HEDKm7+6S5kGtaLYBCoc24PuWg@mail.gmail.com>
	<SINPR04MB1949A0AF3AD33B4664417068C2370@SINPR04MB1949.apcprd04.prod.outlook.com>
Message-ID: <CAD1TkXtPZ7w+qYqr_hvyeq95aJ2ge1YYkoC1taDkzv1vEMKpog@mail.gmail.com>

> Node operation is making a stand on what money you will accept.

> Ie Your local store will only accept US Dollars and not Japanese Yen. Without being able to run a node, you have no way to independently determine what you are receiving, you could be paid Zimbawe Dollars and wouldn't know any better.

Err, no, that's what happens when you double click the Ethereum icon
instead of the Bitcoin icon.  Just because you run "Bitcoin SPV"
instead of "Bitcoin Verify Everyone's Else's Crap" doesn't mean you're
somehow going to get Ethereum payments.  Your verification is just
different and the risks that come along with that are different.  It's
only confusing if you make it confusing.

> This is highly subjective.
> Just because it is nonfunctional to you, does not mean it is nonfunctional to existing users.

If every block that is mined for them is deliberately empty because of
an attacker, that's nonfunctional.  You can use whatever semantics you
want to describe that situation, but that's clearly what I meant.

> Ofcourse it is. Try paying for my goods using BU/Ehtereum/Dash/etc.. or a Bitcoin forked with inflation, you will not get any goods regardless of how much hashrate those coins have.

As above, if someone operates Bitcoin in SPV mode they are not
magically at risk of getting Dashcoins.  They send and receive
Bitcoins just like everyone else running Bitcoin software.  There's no
confusion about it and it doesn't have anything to do with hashrates
of anyone.  It is just a different method of verification with
corresponding different costs of use and different security
guarantees.

> You should also take into consideration the number of independent mining entities it takes to achieve 51% hashrate. It will be of little use to have thousands on independent miners/pools  if 3 large pools make up 51% of hash rate and collude to attack the network.

We're already fucked, China has 61% of the hashrate and the only thing
we can do about it is to wait for the Chinese electrical
supply/demand/transmission system to rebalance itself.  Aside from
that little problem, mining distributions and pool distributions don't
significantly factor into the blocksize debate.  The debate is a
choice between nodes paying more to allow greater growth and adoption,
or nodes constraining adoption in favor of debatable security
concerns.

> Nodes define which network they want to follow.

Do you really consider it choosing when there is only a single option?
 And even if there was, the software would choose it for you?  If it
is a Bitcoin client, it follows the Bitcoin blockchain.  There is no
BU blockchain at the moment, and Bitcoin software can't possibly start
following Ethereum blockchains.

> Without a Node, you don't even get to decide which segement you are on.

Yes you do, if the segment options are known (and if they aren't,
running a node likely won't help you choose either, it will choose by
accident and you'll have no idea).  You would get to choose whose
verifications to request/check from, and thus choose which segment to
follow, if any.

> Ability to run a node and validate rules => Confidence in currency

This is only true for the small minority that actually need that added
level of security & confidence, and the paranoid people who believe
they need it when they really, really don't.  Some guy on reddit
spouted off the same garbage logic, but was much quieter when I got
him to admit that he didn't actually read the code of Bitcoin that he
downloaded and ran, nor any of the code of the updates.  He trusted.
*gasp*

The average person doesn't need that level of security.  They do
however need to be able to use it, which they cannot right now if you
consider "average" to be at least 50% of the population.

> Higher demand => Higher exchange rate

Demand comes from usage and adoption.  Neither can happen us being
willing to give other people the option to trade security features for
lower costs.

> I would not be holding any Bitcoins if it was unfeasible for me to run a Node and instead had to trust some 3rd party that the currency was not being inflated/censored.

Great.  Somehow I think Bitcoin's future involves very few more people
like you, and very many people who aren't paranoid and just want to be
able to send and receive Bitcoins.

> Bitcoin has value because of it's trustless properties. Otherwise, there is no difference between cryptocurrencies and fiat.

No, it has its value for many, many reasons, trustless properties is
only one of them.  What I'm suggesting doesn't involve giving up
trustless properties except in your head (And not even then, since you
would almost certainly be able to afford to run a node for the rest of
your life if Bitcoin's value continues to rise as it has in the past).
And even if it did, there's a lot more reasons that a lot more people
than you would use it.

> Blocksize has nothing to do with utility, only cost of on-chain transactions.

Are you really this dense?  If the cost of on-chain transactions
rises, numerous use cases get killed off.  At $0.10 per tx you
probably won't buy in-game digital microtransactions with it, but you
might buy coffee with it.  At $1 per tx, you probably won't buy coffee
with it but you might pay your ISP bill with it.  At $20 per tx, you
probably won't pay your ISP bill with it, but you might pay your rent.
At $300 per tx you probably won't use it for anything, but a company
purchasing goods from China might.  At $4000 per tx that company
probably won't use it, but international funds settlement for
million-dollar transactions might use it.

At each fee step along the way you kill of hundreds or thousands of
possible uses of Bitcoin.  Killing those off means fewer people will
use it, so they will use something else instead.

> OTOH increasing the blocksize has alot to do with introducing the very limitations that Visa/Cash have.

No they don't.  They only give people the option to pay more for
higher security or to accept lower security and use Bitcoin anyway.

> Why would you risk destroying Bitcoin's primary proposition (removing limitations of Cash/Visa) for insignificant capacity increase?

So far as anyone has presented actual numbers, there's no reason to
believe larger blocksizes endanger anything of the sort, even if I
agreed that that was Bitcoin's primary proposition.  And I don't
believe we need an insignificant capacity increase, I used to think
that way though.  I strongly believe we can handle massive increases
by adjusting our expectations of what nodes do, how they operate, how
they justify the price of their services, and what levels of security
are available and appropriate for various levels of transaction risk.

> Who says nothing is being done? Segwit, Lightning, pre-loaded wallets like Coinbase are all solutions.

Segwit is a miniscule blocksize increase and wholly inadequate
compared to the scope of the problem.  Good for other reasons, though.
Lightning is not Bitcoin, it is something different(but not bad IMO)
that has different features and different consequences.  I guess you
think it is ok that if your lightning node goes offline at the wrong
time, you could lose funds you never transacted with in the first
place?  No?  Oh, then you must be ok with lightning hub centralization
then as well as paying a monthly fee to lightning hubs for their
services.  Wait, that sounds an awful lot like visa....

I have no idea what you're referring to with the pre-loaded wallets point.


On Thu, Mar 30, 2017 at 9:21 PM, Luv Khemani <luvb at hotmail.com> wrote:
>
> > Nodes don't do politics.  People do, and politics is a lot larger with a lot more moving parts than just node operation.
>
>
> Node operation is making a stand on what money you will accept.
>
> Ie Your local store will only accept US Dollars and not Japanese Yen. Without being able to run a node, you have no way to independently determine what you are receiving, you could be paid Zimbawe Dollars and wouldn't know any better.
>
>
> > Full nodes protect from nothing if the chain they attempt to use is nonfunctional.
>
> This is highly subjective.
> Just because it is nonfunctional to you, does not mean it is nonfunctional to existing users.
>
> > This power is far more complicated than just nodes.
>
> I never implied otherwise.
>
> > You're implying that node operation == political participation.
>
> Ofcourse it is. Try paying for my goods using BU/Ehtereum/Dash/etc.. or a Bitcoin forked with inflation, you will not get any goods regardless of how much hashrate those coins have.
>
> > Miners being distributed in enough countries and locations to avoid any single outside attacker group from having enough leverage to prevent transaction inclusion, and miners also having enough incentives(philosophical or economic) to refuse to collude towards transaction exclusion.
>
> It's good that you see the importance of this. You should also take into consideration the number of independent mining entities it takes to achieve 51% hashrate. It will be of little use to have thousands on independent miners/pools  if 3 large pools make up 51% of hash rate and collude to attack the network.
>
> >  If users refused to get on board, exchanges would follow users.  If miners refused to get on board, the attempt would be equally dead in the water.  It would require a majority of users, businesses and miners to change the limit;
>
> > Nodes have absolutely no say in the matter if they can't segment the network, and even if they could their impact could be repaired.  Users != Nodes.
>
> Nodes define which network they want to follow. Without a Node, you don't even get to decide which segement you are on. Either miners decide( for SPV wallets) or your wallet's server decides(Node). You have no control without a
>
> >> What makes transactions irreversible
> >Nodes have absolutely no say in the matter, they always follow the longest chain unless a hardfork was applied.
>
> My bad here, hashpower decides order. This is the sole reason we have mining, to order transactions.
>
> > Mutual destruction comes from the market forces on the exchanges, and they could give a rats ass whether you run a node or not.
>
> Ability to run a node and validate rules => Confidence in currency => Higher demand => Higher exchange rate
>
> I would not be holding any Bitcoins if it was unfeasible for me to run a Node and instead had to trust some 3rd party that the currency was not being inflated/censored. Bitcoin has value because of it's trustless properties. Otherwise, there is no difference between cryptocurrencies and fiat.
>
> > Literally the only reason we have 10s of billions of dollars of value is because speculation, which includes nearly all Bitcoin users/holders and almost all businesses and miners.  While  Bitcoin borrows useful features from gold, it has more possible uses, including uses that were never possible before Bitcoin existed, and we believe that gives it huge potential.
> > The ability of other systems to do transactions, like visa or cash, come with the limitations of those systems.  Bitcoin was designed to break those limitations and STILL provide the ability to do transactions.  We might all agree Bitcoin isn't going to ever solve the microtransaction problem, at least not on-chain, but saying Bitcoin doesn't need utility is just foolish.  Gold doesn't need utility, gold has 4,000 years of history.  We don't.
> > There's no reason those blocksize increases can't be tied to or related to usage increases
>
> Blocksize has nothing to do with utility, only cost of on-chain transactions.
> OTOH increasing the blocksize has alot to do with introducing the very limitations that Visa/Cash have.
> Why would you risk destroying Bitcoin's primary proposition (removing limitations of Cash/Visa) for insignificant capacity increase?
>
> > That's like saying it would be better to do nothing so someone else solves our problem for us than it would be for us to do what we can to solve it ourselves.  Someone else solving our problem may very well be Ethereum, and "solving it for us" is pulling Bitcoin investments, users and nodes away into Ethereum.
>
> Who says nothing is being done? Segwit, Lightning, pre-loaded wallets like Coinbase are all solutions.
>
>
>
>
> On Thu, Mar 30, 2017 at 12:11 AM, Luv Khemani <luvb at hotmail.com> wrote:
>>
>>
>> >> If home users are not running their own full nodes, then home users have to trust and rely on other, more powerful nodes to represent them. Of course, the more powerful nodes, simply by nature of having more power, are going to have different opinions and objectives from the users.
>>
>> >I think you're conflating mining with node operation here.  Node users only power is to block the propagation of certain things.  Since miners also have a node endpoint, they can cut the node users out of the equation by linking with eachother directly - something they already do out of practicality for propagation.  Node users do not have the power to arbitrate consensus, that is why we have blocks and PoW.
>>
>> You are only looking at technical aspects and missing the political aspect.
>>
>> Node users decide what a Bitcoin is. It matters not how much hash power is behind a inflationary supply chain fork, full nodes protect the user from the change of any properties of Bitcoin which they do not agree with. The ability to retain this power for users is of prime importance and is arguably what gives Bitcoin most of it's value. Any increase in the cost to run a full node is an increase in cost to maintain monetary sovereignty. The ability for a user to run a node is what keeps the miners honest and prevents them from rewriting any of Bitcoin's rules.
>>
>> If it's still difficult to grasp the above paragraph, ask yourself the following questions,
>> - What makes Bitcoin uncensorable
>> - What gives confidence that the 21 million limit will be upheld
>> - What makes transactions irreversible
>> - If hashpower was king as you make it to be, why havn't miners making up majority hashrate who want bigger blocks been able to change the blocksize?
>>
>> The market is not storing 10s of billions of dollars in Bitcoin despite all it's risks because it is useful for everyday transactions, that is a solved problem in every part of the world (Cash/Visa/etc..).
>>
>> Having said that, i fully empathise with your view that increasing transaction fees might allow competitors to gain marketshare for low value use cases. By all means, we should look into ways of solving the problem. But all these debates around blocksize is a total waste of time. Even if we fork to 2MB, 5MB, 10MB. It is irrelevant in the larger picture, transaction capacity will still be too low for global usage in the medium-long term. The additional capacity from blocksize increases are linear improvements with very large systemic costs compared with the userbase and usage which is growing exponentially. Lightning potentially offers a couple or orders of magnitude of scaling and will make blocksize a non-issue for years to come. Even if it fails to live up to the hype, you should not discount the market innovating solutions when there is money to be made.
>>
>

From luvb at hotmail.com  Fri Mar 31 08:19:07 2017
From: luvb at hotmail.com (Luv Khemani)
Date: Fri, 31 Mar 2017 08:19:07 +0000
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAD1TkXtPZ7w+qYqr_hvyeq95aJ2ge1YYkoC1taDkzv1vEMKpog@mail.gmail.com>
References: <CAEgR2PEG1UMqY0hzUH4YE_an=qOvQUgfXreSRsoMWfFWxG3Vqg@mail.gmail.com>
	<CAFVRnyq9Qgw88RZqenjQTDZHEWeuNCdh12Dq7wCGZdu9ZuEN9w@mail.gmail.com>
	<CAD1TkXvd4yLHZDAdMi78WwJ_siO1Vt7=DgYiBmP45ffVveuHBg@mail.gmail.com>
	<SINPR04MB1949AB581C6870184445E0C4C2340@SINPR04MB1949.apcprd04.prod.outlook.com>
	<CAD1TkXsj53JRYhqot2aHSQR+HEDKm7+6S5kGtaLYBCoc24PuWg@mail.gmail.com>
	<SINPR04MB1949A0AF3AD33B4664417068C2370@SINPR04MB1949.apcprd04.prod.outlook.com>,
	<CAD1TkXtPZ7w+qYqr_hvyeq95aJ2ge1YYkoC1taDkzv1vEMKpog@mail.gmail.com>
Message-ID: <SINPR04MB1949BE883C69CFF1477AFAEFC2370@SINPR04MB1949.apcprd04.prod.outlook.com>

> Err, no, that's what happens when you double click the Ethereum icon

instead of the Bitcoin icon.  Just because you run "Bitcoin SPV"
instead of "Bitcoin Verify Everyone's Else's Crap" doesn't mean you're
somehow going to get Ethereum payments.  Your verification is just
different and the risks that come along with that are different.  It's
only confusing if you make it confusing.

This is false. You could get coins which don't even exist  as long as a miner mined the invalid transaction.
Peter Todd has demonstrated this on mainstream SPV wallets,
https://www.linkedin.com/pulse/peter-todds-fraud-proofs-talk-mit-bitcoin-expo-2016-mark-morris

The only reason SPV wallets do not accept ethereum payments is because of transaction/block format differences.
SPV wallets have no clue what is a valid bitcoin, they trust miners fully.

In the event of a hardfork, SPV wallets will blindly follow the longest chain.

> If every block that is mined for them is deliberately empty because of
an attacker, that's nonfunctional.  You can use whatever semantics you
want to describe that situation, but that's clearly what I meant.

Not sure why you are bringing this up, this is not the case today nor does it have anything to do with blocksize.

> As above, if someone operates Bitcoin in SPV mode they are not
magically at risk of getting Dashcoins.  They send and receive
Bitcoins just like everyone else running Bitcoin software.  There's no
confusion about it and it doesn't have anything to do with hashrates
of anyone.

As mentioned earlier, you are at risk of receiving made up money.
SPV has everything to do with hashrate, it trusts hashrate fully.
Crafting a bitcoin transaction paying you money that i do not have is not difficult, as long as a miner mines a block with it, your SPV wallet will accept it.

> The debate is a choice between nodes paying more to allow greater growth and adoption,
or nodes constraining adoption in favor of debatable security
concerns.

Onchain transactions are not the only way to use Bitcoin the currency.
Trades you do on an exchange are not onchain, yet transacted with Bitcoin.

> And even if there was, the software would choose it for you?

People choose the software, not the other way round.

> Yes you do, if the segment options are known (and if they aren't,
running a node likely won't help you choose either, it will choose by
accident and you'll have no idea).  You would get to choose whose
verifications to request/check from, and thus choose which segment to
follow, if any.

SPV does not decide, they follow longest chain.
Centralised/Server based wallets follow the server they are connecting to.
Full Nodes do not depend on a 3rd party to decide if the money received is valid.

>  Are you really this dense?  If the cost of on-chain transactions
rises, numerous use cases get killed off.  At $0.10 per tx you
probably won't buy in-game digital microtransactions with it, but you
might buy coffee with it.  At $1 per tx, you probably won't buy coffee
with it but you might pay your ISP bill with it.  At $20 per tx, you
probably won't pay your ISP bill with it, but you might pay your rent.
At $300 per tx you probably won't use it for anything, but a company
purchasing goods from China might.  At $4000 per tx that company
probably won't use it, but international funds settlement for
million-dollar transactions might use it.
> At each fee step along the way you kill of hundreds or thousands of
possible uses of Bitcoin.  Killing those off means fewer people will
use it, so they will use something else instead.

No need to get personal.
As mentioned earlier, all these low value transactions can happen offchain.
None of the use cases will be killed off. We have sub dollar trades happening on exchanges offchain.

> The average person doesn't need that level of security.

Precisely why they do not need to be on-chain.

It is clear to me that you have not yet grasped Bitcoin's security model, especially the role Full-Nodes play in it.
Id suggest you do some more reading up and thinking about it.
Do thought experiments and take it to the extremes where nobody runs a node, what can miners do now which they could not do before?
Why don't exchanges run SPV nodes?

Further correspondence will not be fruitful until you grasp this.



On Thu, Mar 30, 2017 at 9:21 PM, Luv Khemani <luvb at hotmail.com> wrote:
>
> > Nodes don't do politics.  People do, and politics is a lot larger with a lot more moving parts than just node operation.
>
>
> Node operation is making a stand on what money you will accept.
>
> Ie Your local store will only accept US Dollars and not Japanese Yen. Without being able to run a node, you have no way to independently determine what you are receiving, you could be paid Zimbawe Dollars and wouldn't know any better.
>
>
> > Full nodes protect from nothing if the chain they attempt to use is nonfunctional.
>
> This is highly subjective.
> Just because it is nonfunctional to you, does not mean it is nonfunctional to existing users.
>
> > This power is far more complicated than just nodes.
>
> I never implied otherwise.
>
> > You're implying that node operation == political participation.
>
> Ofcourse it is. Try paying for my goods using BU/Ehtereum/Dash/etc.. or a Bitcoin forked with inflation, you will not get any goods regardless of how much hashrate those coins have.
>
> > Miners being distributed in enough countries and locations to avoid any single outside attacker group from having enough leverage to prevent transaction inclusion, and miners also having enough incentives(philosophical or economic) to refuse to collude towards transaction exclusion.
>
> It's good that you see the importance of this. You should also take into consideration the number of independent mining entities it takes to achieve 51% hashrate. It will be of little use to have thousands on independent miners/pools  if 3 large pools make up 51% of hash rate and collude to attack the network.
>
> >  If users refused to get on board, exchanges would follow users.  If miners refused to get on board, the attempt would be equally dead in the water.  It would require a majority of users, businesses and miners to change the limit;
>
> > Nodes have absolutely no say in the matter if they can't segment the network, and even if they could their impact could be repaired.  Users != Nodes.
>
> Nodes define which network they want to follow. Without a Node, you don't even get to decide which segement you are on. Either miners decide( for SPV wallets) or your wallet's server decides(Node). You have no control without a
>
> >> What makes transactions irreversible
> >Nodes have absolutely no say in the matter, they always follow the longest chain unless a hardfork was applied.
>
> My bad here, hashpower decides order. This is the sole reason we have mining, to order transactions.
>
> > Mutual destruction comes from the market forces on the exchanges, and they could give a rats ass whether you run a node or not.
>
> Ability to run a node and validate rules => Confidence in currency => Higher demand => Higher exchange rate
>
> I would not be holding any Bitcoins if it was unfeasible for me to run a Node and instead had to trust some 3rd party that the currency was not being inflated/censored. Bitcoin has value because of it's trustless properties. Otherwise, there is no difference between cryptocurrencies and fiat.
>
> > Literally the only reason we have 10s of billions of dollars of value is because speculation, which includes nearly all Bitcoin users/holders and almost all businesses and miners.  While  Bitcoin borrows useful features from gold, it has more possible uses, including uses that were never possible before Bitcoin existed, and we believe that gives it huge potential.
> > The ability of other systems to do transactions, like visa or cash, come with the limitations of those systems.  Bitcoin was designed to break those limitations and STILL provide the ability to do transactions.  We might all agree Bitcoin isn't going to ever solve the microtransaction problem, at least not on-chain, but saying Bitcoin doesn't need utility is just foolish.  Gold doesn't need utility, gold has 4,000 years of history.  We don't.
> > There's no reason those blocksize increases can't be tied to or related to usage increases
>
> Blocksize has nothing to do with utility, only cost of on-chain transactions.
> OTOH increasing the blocksize has alot to do with introducing the very limitations that Visa/Cash have.
> Why would you risk destroying Bitcoin's primary proposition (removing limitations of Cash/Visa) for insignificant capacity increase?
>
> > That's like saying it would be better to do nothing so someone else solves our problem for us than it would be for us to do what we can to solve it ourselves.  Someone else solving our problem may very well be Ethereum, and "solving it for us" is pulling Bitcoin investments, users and nodes away into Ethereum.
>
> Who says nothing is being done? Segwit, Lightning, pre-loaded wallets like Coinbase are all solutions.
>
>
>
>
> On Thu, Mar 30, 2017 at 12:11 AM, Luv Khemani <luvb at hotmail.com> wrote:
>>
>>
>> >> If home users are not running their own full nodes, then home users have to trust and rely on other, more powerful nodes to represent them. Of course, the more powerful nodes, simply by nature of having more power, are going to have different opinions and objectives from the users.
>>
>> >I think you're conflating mining with node operation here.  Node users only power is to block the propagation of certain things.  Since miners also have a node endpoint, they can cut the node users out of the equation by linking with eachother directly - something they already do out of practicality for propagation.  Node users do not have the power to arbitrate consensus, that is why we have blocks and PoW.
>>
>> You are only looking at technical aspects and missing the political aspect.
>>
>> Node users decide what a Bitcoin is. It matters not how much hash power is behind a inflationary supply chain fork, full nodes protect the user from the change of any properties of Bitcoin which they do not agree with. The ability to retain this power for users is of prime importance and is arguably what gives Bitcoin most of it's value. Any increase in the cost to run a full node is an increase in cost to maintain monetary sovereignty. The ability for a user to run a node is what keeps the miners honest and prevents them from rewriting any of Bitcoin's rules.
>>
>> If it's still difficult to grasp the above paragraph, ask yourself the following questions,
>> - What makes Bitcoin uncensorable
>> - What gives confidence that the 21 million limit will be upheld
>> - What makes transactions irreversible
>> - If hashpower was king as you make it to be, why havn't miners making up majority hashrate who want bigger blocks been able to change the blocksize?
>>
>> The market is not storing 10s of billions of dollars in Bitcoin despite all it's risks because it is useful for everyday transactions, that is a solved problem in every part of the world (Cash/Visa/etc..).
>>
>> Having said that, i fully empathise with your view that increasing transaction fees might allow competitors to gain marketshare for low value use cases. By all means, we should look into ways of solving the problem. But all these debates around blocksize is a total waste of time. Even if we fork to 2MB, 5MB, 10MB. It is irrelevant in the larger picture, transaction capacity will still be too low for global usage in the medium-long term. The additional capacity from blocksize increases are linear improvements with very large systemic costs compared with the userbase and usage which is growing exponentially. Lightning potentially offers a couple or orders of magnitude of scaling and will make blocksize a non-issue for years to come. Even if it fails to live up to the hype, you should not discount the market innovating solutions when there is money to be made.
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170331/e6068505/attachment-0001.html>

From sharoshima at protonmail.com  Fri Mar 31 06:18:39 2017
From: sharoshima at protonmail.com (SHAroshima Nakamati)
Date: Fri, 31 Mar 2017 02:18:39 -0400
Subject: [bitcoin-dev] Proposing the SiTAH-fork, a mechanism for compromise.
Message-ID: <-2vC5p3x3tB2BI3WGr_3ic_qfDygnVbDszHYrGDRz-1MFAlwfPe0cHUYAj9DQS1RVoVVNjYMfi2dUECFPzmjDjyXWlYoRC31nkiM2kxZBbI=@protonmail.com>

Soft-fork - A soft-fork is a change to the bitcoin protocol wherein only previously valid blocks/transactions are made invalid. Since old nodes will recognise the new blocks as valid, a soft-fork is backward-compatible.

Hard-fork - A hard-fork is a change to the bitcoin protocol that makes previously invalid blocks/transactions valid, and therefore requires all users to upgrade.

The difficulty about pulling off a hard-fork is that for it to happen safely and without a massive disruption, everyone needs to be ready for it before it occurs. Coordinating this is a daunting task, however, safe hard-forks *will* be necessary in Bitcoin's future. Furthermore, the majority of stakeholders - devs, miners as well as users - want both soft-fork SegWit and a hard-fork TX block size increase, but favor one over the other and want to perform their favorite fork first out of fear that activating the other prevents their choice from being activated at a later point. This is a proposal to solve this stalemate by providing a path to activating both.

I propose the Soft-into-Time-Activated-Hard fork, or SiTAH-fork in short. The core concept is that it is a soft-fork that comes with a lock-in to transitioning into a hard-fork at a predetermined later point in time, drawing elements from Spoonnet. This means that, after the soft-fork takes place, there is a transition period during which everyone has the opportunity and incentive to upgrade their software, before the hard-fork inevitably happens. As a consequence of this, those who want the hard-fork have incentive to support activating the the soft-fork, and those who want the soft-fork have the incentive to pledge to activate the hard-fork, rather than opposing their secondary choice out of fear of their primary choice being indefinitely postponed.

As for how this can be implemented for SegWit; SegWit is made soft-fork compatible by virtue of the block weight function. From BIP-0141:

> Block weight is defined as Base size * 3 + Total size.
>
> Base size is the block size in bytes with the original transaction serialization without any witness-related data, as seen by a non-upgraded node.
>
> Total size is the block size in bytes with transactions serialized as described in BIP144, including base data and witness data.
>
> The new rule is block weight ? 4,000,000.

This block weight function can be replaced by a version that allows for >1MB of pure TX data when the median time-past of the last 11 blocks is greater than the HardForkTime. In other words:

BlockWeight = MedianTimePast < HardForkTime ? BaseSize * 3 + TotalSize : TotalSize;

The post-hard-fork part of this formula can of course be tweaked.

I pose that implementing this would greatly improve support for the introduction of SegWit as it provides a pledge to increase space for pure TX data, which is something many are asking for. LN is a great long-term scaling solution but is not ready yet, and this measure provides a way to enable SegWit so that LN can later be built on top, while at the same time providing a promise of TX-space relief to those skeptical or unconvinced of SW/LN providing this relief in the short to medium term.

- SHAroshima
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170331/1192f955/attachment.html>

From david.vorick at gmail.com  Fri Mar 31 16:14:42 2017
From: david.vorick at gmail.com (David Vorick)
Date: Fri, 31 Mar 2017 12:14:42 -0400
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAD1TkXvXYX0f+jMMc41vhANuKfw-rNg9tUOG0bCS=T-YGYYjPw@mail.gmail.com>
References: <CAEgR2PEG1UMqY0hzUH4YE_an=qOvQUgfXreSRsoMWfFWxG3Vqg@mail.gmail.com>
	<CAFVRnyq9Qgw88RZqenjQTDZHEWeuNCdh12Dq7wCGZdu9ZuEN9w@mail.gmail.com>
	<CAD1TkXvd4yLHZDAdMi78WwJ_siO1Vt7=DgYiBmP45ffVveuHBg@mail.gmail.com>
	<SINPR04MB1949AB581C6870184445E0C4C2340@SINPR04MB1949.apcprd04.prod.outlook.com>
	<CAD1TkXsj53JRYhqot2aHSQR+HEDKm7+6S5kGtaLYBCoc24PuWg@mail.gmail.com>
	<SINPR04MB1949A0AF3AD33B4664417068C2370@SINPR04MB1949.apcprd04.prod.outlook.com>
	<CAD1TkXtPZ7w+qYqr_hvyeq95aJ2ge1YYkoC1taDkzv1vEMKpog@mail.gmail.com>
	<SINPR04MB1949BE883C69CFF1477AFAEFC2370@SINPR04MB1949.apcprd04.prod.outlook.com>
	<CAD1TkXvXYX0f+jMMc41vhANuKfw-rNg9tUOG0bCS=T-YGYYjPw@mail.gmail.com>
Message-ID: <CAFVRnyqSMVj2Ttc4_5vuk73Z5yRJdxeSodvkdjqsrHbgghcmUQ@mail.gmail.com>

No one is suggesting anything like this.  The cost of running a node
that could handle 300% of the 2015 worldwide nonbitcoin transaction
volume today would be a rounding error for most exchanges even if
prices didn't rise.


Then explain why PayPal has multiple datacenters. And why Visa has multiple
datacenters. And why the banking systems have multiple datacenters each.

I'm guessing it's because you need that much juice to run a global payment
system at the transaction volumes that they run at.

Unless you have professional experience working directly with transaction
processors handling tens of millions of financial transactions per day, I
think we can fully discount your assessment that it would be a rounding
error in the budget of a major exchange or Bitcoin processor to handle that
much load. And even if it was, it wouldn't matter because it's extremely
important to Bitcoin's security that it's everyday users are able to and
are actively running full nodes.

I'm not going to take the time to refute everything you've been saying but
I will say that most of your comments have demonstrated a similar level of
ignorance as the one above.

This whole thread has been absurdly low quality.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170331/5ce1e10b/attachment.html>

From jaredr26 at gmail.com  Fri Mar 31 15:59:19 2017
From: jaredr26 at gmail.com (Jared Lee Richardson)
Date: Fri, 31 Mar 2017 08:59:19 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <SINPR04MB1949BE883C69CFF1477AFAEFC2370@SINPR04MB1949.apcprd04.prod.outlook.com>
References: <CAEgR2PEG1UMqY0hzUH4YE_an=qOvQUgfXreSRsoMWfFWxG3Vqg@mail.gmail.com>
	<CAFVRnyq9Qgw88RZqenjQTDZHEWeuNCdh12Dq7wCGZdu9ZuEN9w@mail.gmail.com>
	<CAD1TkXvd4yLHZDAdMi78WwJ_siO1Vt7=DgYiBmP45ffVveuHBg@mail.gmail.com>
	<SINPR04MB1949AB581C6870184445E0C4C2340@SINPR04MB1949.apcprd04.prod.outlook.com>
	<CAD1TkXsj53JRYhqot2aHSQR+HEDKm7+6S5kGtaLYBCoc24PuWg@mail.gmail.com>
	<SINPR04MB1949A0AF3AD33B4664417068C2370@SINPR04MB1949.apcprd04.prod.outlook.com>
	<CAD1TkXtPZ7w+qYqr_hvyeq95aJ2ge1YYkoC1taDkzv1vEMKpog@mail.gmail.com>
	<SINPR04MB1949BE883C69CFF1477AFAEFC2370@SINPR04MB1949.apcprd04.prod.outlook.com>
Message-ID: <CAD1TkXvXYX0f+jMMc41vhANuKfw-rNg9tUOG0bCS=T-YGYYjPw@mail.gmail.com>

> Peter Todd has demonstrated this on mainstream SPV wallets,
> https://www.linkedin.com/pulse/peter-todds-fraud-proofs-talk-mit-bitcoin-expo-2016-mark-morris

Correct me if I'm wrong, but nothing  possible if the client software
was electrum-like and used two independent sources for verification.
No?

> Do thought experiments and take it to the extremes where nobody runs a node, what can miners do now which they could not do before?

This and the next point are just reductio ad absurdem, since no one is
suggesting anything of the sort. Even in that situation, I can't think
of anything miners could do if clients used more than one independent
source for verification, ala electrum question above.

> Why don't exchanges run SPV nodes?

No one is suggesting anything like this.  The cost of running a node
that could handle 300% of the 2015 worldwide nonbitcoin transaction
volume today would be a rounding error for most exchanges even if
prices didn't rise.



On Fri, Mar 31, 2017 at 1:19 AM, Luv Khemani <luvb at hotmail.com> wrote:
>> Err, no, that's what happens when you double click the Ethereum icon
>
> instead of the Bitcoin icon.  Just because you run "Bitcoin SPV"
> instead of "Bitcoin Verify Everyone's Else's Crap" doesn't mean you're
> somehow going to get Ethereum payments.  Your verification is just
> different and the risks that come along with that are different.  It's
> only confusing if you make it confusing.
>
> This is false. You could get coins which don't even exist  as long as a
> miner mined the invalid transaction.
> Peter Todd has demonstrated this on mainstream SPV wallets,
> https://www.linkedin.com/pulse/peter-todds-fraud-proofs-talk-mit-bitcoin-expo-2016-mark-morris
>
> The only reason SPV wallets do not accept ethereum payments is because of
> transaction/block format differences.
> SPV wallets have no clue what is a valid bitcoin, they trust miners fully.
>
> In the event of a hardfork, SPV wallets will blindly follow the longest
> chain.
>
>> If every block that is mined for them is deliberately empty because of
> an attacker, that's nonfunctional.  You can use whatever semantics you
> want to describe that situation, but that's clearly what I meant.
>
> Not sure why you are bringing this up, this is not the case today nor does
> it have anything to do with blocksize.
>
>> As above, if someone operates Bitcoin in SPV mode they are not
> magically at risk of getting Dashcoins.  They send and receive
> Bitcoins just like everyone else running Bitcoin software.  There's no
> confusion about it and it doesn't have anything to do with hashrates
> of anyone.
>
> As mentioned earlier, you are at risk of receiving made up money.
> SPV has everything to do with hashrate, it trusts hashrate fully.
> Crafting a bitcoin transaction paying you money that i do not have is not
> difficult, as long as a miner mines a block with it, your SPV wallet will
> accept it.
>
>> The debate is a choice between nodes paying more to allow greater growth
>> and adoption,
> or nodes constraining adoption in favor of debatable security
> concerns.
>
> Onchain transactions are not the only way to use Bitcoin the currency.
> Trades you do on an exchange are not onchain, yet transacted with Bitcoin.
>
>> And even if there was, the software would choose it for you?
>
> People choose the software, not the other way round.
>
>> Yes you do, if the segment options are known (and if they aren't,
> running a node likely won't help you choose either, it will choose by
> accident and you'll have no idea).  You would get to choose whose
> verifications to request/check from, and thus choose which segment to
> follow, if any.
>
> SPV does not decide, they follow longest chain.
> Centralised/Server based wallets follow the server they are connecting to.
> Full Nodes do not depend on a 3rd party to decide if the money received is
> valid.
>
>>  Are you really this dense?  If the cost of on-chain transactions
> rises, numerous use cases get killed off.  At $0.10 per tx you
> probably won't buy in-game digital microtransactions with it, but you
> might buy coffee with it.  At $1 per tx, you probably won't buy coffee
> with it but you might pay your ISP bill with it.  At $20 per tx, you
> probably won't pay your ISP bill with it, but you might pay your rent.
> At $300 per tx you probably won't use it for anything, but a company
> purchasing goods from China might.  At $4000 per tx that company
> probably won't use it, but international funds settlement for
> million-dollar transactions might use it.
>> At each fee step along the way you kill of hundreds or thousands of
> possible uses of Bitcoin.  Killing those off means fewer people will
> use it, so they will use something else instead.
>
> No need to get personal.
> As mentioned earlier, all these low value transactions can happen offchain.
> None of the use cases will be killed off. We have sub dollar trades
> happening on exchanges offchain.
>
>> The average person doesn't need that level of security.
>
> Precisely why they do not need to be on-chain.
>
> It is clear to me that you have not yet grasped Bitcoin's security model,
> especially the role Full-Nodes play in it.
> Id suggest you do some more reading up and thinking about it.
> Do thought experiments and take it to the extremes where nobody runs a node,
> what can miners do now which they could not do before?
> Why don't exchanges run SPV nodes?
>
> Further correspondence will not be fruitful until you grasp this.
>
>
>
> On Thu, Mar 30, 2017 at 9:21 PM, Luv Khemani <luvb at hotmail.com> wrote:
>>
>> > Nodes don't do politics.  People do, and politics is a lot larger with a
>> > lot more moving parts than just node operation.
>>
>>
>> Node operation is making a stand on what money you will accept.
>>
>> Ie Your local store will only accept US Dollars and not Japanese Yen.
>> Without being able to run a node, you have no way to independently determine
>> what you are receiving, you could be paid Zimbawe Dollars and wouldn't know
>> any better.
>>
>>
>> > Full nodes protect from nothing if the chain they attempt to use is
>> > nonfunctional.
>>
>> This is highly subjective.
>> Just because it is nonfunctional to you, does not mean it is nonfunctional
>> to existing users.
>>
>> > This power is far more complicated than just nodes.
>>
>> I never implied otherwise.
>>
>> > You're implying that node operation == political participation.
>>
>> Ofcourse it is. Try paying for my goods using BU/Ehtereum/Dash/etc.. or a
>> Bitcoin forked with inflation, you will not get any goods regardless of how
>> much hashrate those coins have.
>>
>> > Miners being distributed in enough countries and locations to avoid any
>> > single outside attacker group from having enough leverage to prevent
>> > transaction inclusion, and miners also having enough
>> > incentives(philosophical or economic) to refuse to collude towards
>> > transaction exclusion.
>>
>> It's good that you see the importance of this. You should also take into
>> consideration the number of independent mining entities it takes to achieve
>> 51% hashrate. It will be of little use to have thousands on independent
>> miners/pools  if 3 large pools make up 51% of hash rate and collude to
>> attack the network.
>>
>> >  If users refused to get on board, exchanges would follow users.  If
>> > miners refused to get on board, the attempt would be equally dead in the
>> > water.  It would require a majority of users, businesses and miners to
>> > change the limit;
>>
>> > Nodes have absolutely no say in the matter if they can't segment the
>> > network, and even if they could their impact could be repaired.  Users !=
>> > Nodes.
>>
>> Nodes define which network they want to follow. Without a Node, you don't
>> even get to decide which segement you are on. Either miners decide( for SPV
>> wallets) or your wallet's server decides(Node). You have no control without
>> a
>>
>> >> What makes transactions irreversible
>> >Nodes have absolutely no say in the matter, they always follow the
>> > longest chain unless a hardfork was applied.
>>
>> My bad here, hashpower decides order. This is the sole reason we have
>> mining, to order transactions.
>>
>> > Mutual destruction comes from the market forces on the exchanges, and
>> > they could give a rats ass whether you run a node or not.
>>
>> Ability to run a node and validate rules => Confidence in currency =>
>> Higher demand => Higher exchange rate
>>
>> I would not be holding any Bitcoins if it was unfeasible for me to run a
>> Node and instead had to trust some 3rd party that the currency was not being
>> inflated/censored. Bitcoin has value because of it's trustless properties.
>> Otherwise, there is no difference between cryptocurrencies and fiat.
>>
>> > Literally the only reason we have 10s of billions of dollars of value is
>> > because speculation, which includes nearly all Bitcoin users/holders and
>> > almost all businesses and miners.  While  Bitcoin borrows useful features
>> > from gold, it has more possible uses, including uses that were never
>> > possible before Bitcoin existed, and we believe that gives it huge
>> > potential.
>> > The ability of other systems to do transactions, like visa or cash, come
>> > with the limitations of those systems.  Bitcoin was designed to break those
>> > limitations and STILL provide the ability to do transactions.  We might all
>> > agree Bitcoin isn't going to ever solve the microtransaction problem, at
>> > least not on-chain, but saying Bitcoin doesn't need utility is just foolish.
>> > Gold doesn't need utility, gold has 4,000 years of history.  We don't.
>> > There's no reason those blocksize increases can't be tied to or related
>> > to usage increases
>>
>> Blocksize has nothing to do with utility, only cost of on-chain
>> transactions.
>> OTOH increasing the blocksize has alot to do with introducing the very
>> limitations that Visa/Cash have.
>> Why would you risk destroying Bitcoin's primary proposition (removing
>> limitations of Cash/Visa) for insignificant capacity increase?
>>
>> > That's like saying it would be better to do nothing so someone else
>> > solves our problem for us than it would be for us to do what we can to solve
>> > it ourselves.  Someone else solving our problem may very well be Ethereum,
>> > and "solving it for us" is pulling Bitcoin investments, users and nodes away
>> > into Ethereum.
>>
>> Who says nothing is being done? Segwit, Lightning, pre-loaded wallets like
>> Coinbase are all solutions.
>>
>>
>>
>>
>> On Thu, Mar 30, 2017 at 12:11 AM, Luv Khemani <luvb at hotmail.com> wrote:
>>>
>>>
>>> >> If home users are not running their own full nodes, then home users
>>> >> have to trust and rely on other, more powerful nodes to represent them. Of
>>> >> course, the more powerful nodes, simply by nature of having more power, are
>>> >> going to have different opinions and objectives from the users.
>>>
>>> >I think you're conflating mining with node operation here.  Node users
>>> > only power is to block the propagation of certain things.  Since miners also
>>> > have a node endpoint, they can cut the node users out of the equation by
>>> > linking with eachother directly - something they already do out of
>>> > practicality for propagation.  Node users do not have the power to arbitrate
>>> > consensus, that is why we have blocks and PoW.
>>>
>>> You are only looking at technical aspects and missing the political
>>> aspect.
>>>
>>> Node users decide what a Bitcoin is. It matters not how much hash power
>>> is behind a inflationary supply chain fork, full nodes protect the user from
>>> the change of any properties of Bitcoin which they do not agree with. The
>>> ability to retain this power for users is of prime importance and is
>>> arguably what gives Bitcoin most of it's value. Any increase in the cost to
>>> run a full node is an increase in cost to maintain monetary sovereignty. The
>>> ability for a user to run a node is what keeps the miners honest and
>>> prevents them from rewriting any of Bitcoin's rules.
>>>
>>> If it's still difficult to grasp the above paragraph, ask yourself the
>>> following questions,
>>> - What makes Bitcoin uncensorable
>>> - What gives confidence that the 21 million limit will be upheld
>>> - What makes transactions irreversible
>>> - If hashpower was king as you make it to be, why havn't miners making up
>>> majority hashrate who want bigger blocks been able to change the blocksize?
>>>
>>> The market is not storing 10s of billions of dollars in Bitcoin despite
>>> all it's risks because it is useful for everyday transactions, that is a
>>> solved problem in every part of the world (Cash/Visa/etc..).
>>>
>>> Having said that, i fully empathise with your view that increasing
>>> transaction fees might allow competitors to gain marketshare for low value
>>> use cases. By all means, we should look into ways of solving the problem.
>>> But all these debates around blocksize is a total waste of time. Even if we
>>> fork to 2MB, 5MB, 10MB. It is irrelevant in the larger picture, transaction
>>> capacity will still be too low for global usage in the medium-long term. The
>>> additional capacity from blocksize increases are linear improvements with
>>> very large systemic costs compared with the userbase and usage which is
>>> growing exponentially. Lightning potentially offers a couple or orders of
>>> magnitude of scaling and will make blocksize a non-issue for years to come.
>>> Even if it fails to live up to the hype, you should not discount the market
>>> innovating solutions when there is money to be made.
>>>
>>

From jaredr26 at gmail.com  Fri Mar 31 16:46:10 2017
From: jaredr26 at gmail.com (Jared Lee Richardson)
Date: Fri, 31 Mar 2017 09:46:10 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFVRnyqSMVj2Ttc4_5vuk73Z5yRJdxeSodvkdjqsrHbgghcmUQ@mail.gmail.com>
References: <CAEgR2PEG1UMqY0hzUH4YE_an=qOvQUgfXreSRsoMWfFWxG3Vqg@mail.gmail.com>
	<CAFVRnyq9Qgw88RZqenjQTDZHEWeuNCdh12Dq7wCGZdu9ZuEN9w@mail.gmail.com>
	<CAD1TkXvd4yLHZDAdMi78WwJ_siO1Vt7=DgYiBmP45ffVveuHBg@mail.gmail.com>
	<SINPR04MB1949AB581C6870184445E0C4C2340@SINPR04MB1949.apcprd04.prod.outlook.com>
	<CAD1TkXsj53JRYhqot2aHSQR+HEDKm7+6S5kGtaLYBCoc24PuWg@mail.gmail.com>
	<SINPR04MB1949A0AF3AD33B4664417068C2370@SINPR04MB1949.apcprd04.prod.outlook.com>
	<CAD1TkXtPZ7w+qYqr_hvyeq95aJ2ge1YYkoC1taDkzv1vEMKpog@mail.gmail.com>
	<SINPR04MB1949BE883C69CFF1477AFAEFC2370@SINPR04MB1949.apcprd04.prod.outlook.com>
	<CAD1TkXvXYX0f+jMMc41vhANuKfw-rNg9tUOG0bCS=T-YGYYjPw@mail.gmail.com>
	<CAFVRnyqSMVj2Ttc4_5vuk73Z5yRJdxeSodvkdjqsrHbgghcmUQ@mail.gmail.com>
Message-ID: <CAD1TkXvmo8ygbFdPJxdiL5-QiN6+ujeSgOJ7_4eit43aZ2bzyg@mail.gmail.com>

I guess I should caveat, a rounding error is a bit of exaggeration -
mostly because I previously assumed that it would take 14 years for
the network to reach such a level, something I didn't say and that you
might not grant me.

I don't know why paypal has multiple datacenters, but I'm guessing it
probably has a lot more to do with everything else they do -
interface, support, tax compliance, replication, redundancy - than it
does with the raw numbers of transaction volumes.

What I do know is the math, though.  WW tx volume = 426,000,000,000 in
2015.  Assuming tx size of ~500 bytes, that's 669 terabytes of data
per year.  At a hard drive cost of 0.021 per GB, that's $36k a year or
so and declines ~14% a year.

The bandwidth is the really big cost.  You are right that if this
hypothetical node also had to support historical syncing, the numbers
would probably be unmanagable.  But that can be solved with a simple
checkpointing system for the vast majority of users, and nodes could
solve it by not supporting syncing / reducing peer count.  With a peer
count of 25 I measured ~75 Gb/month with today's blocksize cap.  That
works out to roughly 10 relays(sends+receives) per transaction
assuming all blocks were full, which was a pretty close approximation.
The bandwidth data of our 426 billion transactions per year works out
to 942 mbit/s.  That's 310 Terabytes per month of bandwidth - At
today's high-volume price of 0.05 per GB, that's $18,500 a month or
$222,000 a year.  Plus the $36k for storage per year brings it to
~$250k per year.  Not a rounding error, but within the rough costs of
running an exchange - a team of 5 developers works out to ~$400-600k a
year, and the cost of compliance with EU and U.S. entities (including
lawyers) runs upwards of a million dollars a year.  Then there's the
support department, probably ~$100-200k a year.

The reason I said a rounding error was that I assumed that it would
take until 2032 to reach that volume of transactions (Assuming
+80%/year of growth, which is our 4-year and 2-year historical average
tx/s growth).  If hard drive prices decline by 14% per year, that cost
becomes $3,900 a year, and if bandwidth prices decline by 14% a year
that cost becomes $1800 a month($21,600 a year).  Against a
multi-million dollar budget, even 3x that isn't a large concern,
though not, as I stated, a rounding error.  My bad.

I didn't approximate for CPU usage, as I don't have any good estimates
for it, and I don't have significant reason to believe that it is a
higher cost than bandwidth, which seems to be the controlling cost
compared to adding CPU's.

> I'm not going to take the time to refute everything you've been saying

Care to respond to the math?

> This whole thread has been absurdly low quality.

Well, we agree on something at least.

On Fri, Mar 31, 2017 at 9:14 AM, David Vorick <david.vorick at gmail.com> wrote:
> No one is suggesting anything like this.  The cost of running a node
> that could handle 300% of the 2015 worldwide nonbitcoin transaction
> volume today would be a rounding error for most exchanges even if
> prices didn't rise.
>
>
> Then explain why PayPal has multiple datacenters. And why Visa has multiple
> datacenters. And why the banking systems have multiple datacenters each.
>
> I'm guessing it's because you need that much juice to run a global payment
> system at the transaction volumes that they run at.
>
> Unless you have professional experience working directly with transaction
> processors handling tens of millions of financial transactions per day, I
> think we can fully discount your assessment that it would be a rounding
> error in the budget of a major exchange or Bitcoin processor to handle that
> much load. And even if it was, it wouldn't matter because it's extremely
> important to Bitcoin's security that it's everyday users are able to and are
> actively running full nodes.
>
> I'm not going to take the time to refute everything you've been saying but I
> will say that most of your comments have demonstrated a similar level of
> ignorance as the one above.
>
> This whole thread has been absurdly low quality.

From david.vorick at gmail.com  Fri Mar 31 18:23:00 2017
From: david.vorick at gmail.com (David Vorick)
Date: Fri, 31 Mar 2017 14:23:00 -0400
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAD1TkXvmo8ygbFdPJxdiL5-QiN6+ujeSgOJ7_4eit43aZ2bzyg@mail.gmail.com>
References: <CAEgR2PEG1UMqY0hzUH4YE_an=qOvQUgfXreSRsoMWfFWxG3Vqg@mail.gmail.com>
	<CAFVRnyq9Qgw88RZqenjQTDZHEWeuNCdh12Dq7wCGZdu9ZuEN9w@mail.gmail.com>
	<CAD1TkXvd4yLHZDAdMi78WwJ_siO1Vt7=DgYiBmP45ffVveuHBg@mail.gmail.com>
	<SINPR04MB1949AB581C6870184445E0C4C2340@SINPR04MB1949.apcprd04.prod.outlook.com>
	<CAD1TkXsj53JRYhqot2aHSQR+HEDKm7+6S5kGtaLYBCoc24PuWg@mail.gmail.com>
	<SINPR04MB1949A0AF3AD33B4664417068C2370@SINPR04MB1949.apcprd04.prod.outlook.com>
	<CAD1TkXtPZ7w+qYqr_hvyeq95aJ2ge1YYkoC1taDkzv1vEMKpog@mail.gmail.com>
	<SINPR04MB1949BE883C69CFF1477AFAEFC2370@SINPR04MB1949.apcprd04.prod.outlook.com>
	<CAD1TkXvXYX0f+jMMc41vhANuKfw-rNg9tUOG0bCS=T-YGYYjPw@mail.gmail.com>
	<CAFVRnyqSMVj2Ttc4_5vuk73Z5yRJdxeSodvkdjqsrHbgghcmUQ@mail.gmail.com>
	<CAD1TkXvmo8ygbFdPJxdiL5-QiN6+ujeSgOJ7_4eit43aZ2bzyg@mail.gmail.com>
Message-ID: <CAFVRnyr-Z9YWtT3r+7-fGejzgxKhH3-kQuo8JQFqKDpyZNBBdg@mail.gmail.com>

Sure, your math is pretty much entirely irrelevant because scaling systems
to massive sizes doesn't work that way.

At 400B transactions per year we're looking at block sizes of 4.5 GB, and a
database size of petabytes. How much RAM do you need to process blocks like
that? Can you fit that much RAM into a single machine? Okay, you can't fit
that much RAM into a single machine. So you have to rework the code to
operate on a computer cluster.

Already we've hit a significant problem. You aren't going to rewrite
Bitcoin to do block validation on a computer cluster overnight. Further,
are storage costs consistent when we're talking about setting up clusters?
Are bandwidth costs consistent when we're talking about setting up
clusters? Are RAM and CPU costs consistent when we're talking about setting
up clusters? No, they aren't. Clusters are a lot more expensive to set up
per-resource because they need to talk to eachother and synchronize with
eachother and you have a LOT more parts, so you have to build in
redundancies that aren't necessary in non-clusters.

Also worth pointing out that peak transaction volumes are typically 20-50x
the size of typical transaction volumes. So your cluster isn't going to
need to plan to handle 15k transactions per second, you're really looking
at more like 200k or even 500k transactions per second to handle
peak-volumes. And if it can't, you're still going to see full blocks.

You'd need a handful of experts just to maintain such a thing. Disks are
going to be failing every day when you are storing multiple PB, so you
can't just count a flat cost of $20/TB and expect that to work. You're
going to need redundancy and tolerance so that you don't lose the system
when a few of your hard drives all fail within minutes of eachother. And
you need a way to rebuild everything without taking the system offline.

This isn't even my area of expertise. I'm sure there are a dozen other
significant issues that one of the Visa architects could tell you about
when dealing with mission-critical data at this scale.

--------

Massive systems operate very differently and are much more costly per-unit
than tiny systems. Once we grow the blocksize large enough that a single
computer can't do all the processing all by itself we get into a world of
much harder, much more expensive scaling problems. Especially because we're
talking about a distributed system where the nodes don't even trust each
other. And transaction processing is largely non-parallel. You have to
check each transaction against each other transaction to make sure that
they aren't double spending eachother. This takes synchronization and
prevents 500 CPUs from all crunching the data concurrently. You have to be
a lot more clever than that to get things working and consistent.

When talking about scalability problems, you should ask yourself what other
systems in the world operate at the scales you are talking about. None of
them have cost structures in the 6 digit range, and I'd bet (without
actually knowing) that none of them have cost structures in the 7 digit
range either. In fact I know from working in a related industry that the
cost structures for the datacenters (plus the support engineers, plus the
software management, etc.) that do airline ticket processing are above $5
million per year for the larger airlines. Visa is probably even more
expensive than that (though I can only speculate).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170331/229b0e3d/attachment.html>

From eric at voskuil.org  Fri Mar 31 18:58:44 2017
From: eric at voskuil.org (Eric Voskuil)
Date: Fri, 31 Mar 2017 11:58:44 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CAFVRnyr-Z9YWtT3r+7-fGejzgxKhH3-kQuo8JQFqKDpyZNBBdg@mail.gmail.com>
References: <CAEgR2PEG1UMqY0hzUH4YE_an=qOvQUgfXreSRsoMWfFWxG3Vqg@mail.gmail.com>
	<CAFVRnyq9Qgw88RZqenjQTDZHEWeuNCdh12Dq7wCGZdu9ZuEN9w@mail.gmail.com>
	<CAD1TkXvd4yLHZDAdMi78WwJ_siO1Vt7=DgYiBmP45ffVveuHBg@mail.gmail.com>
	<SINPR04MB1949AB581C6870184445E0C4C2340@SINPR04MB1949.apcprd04.prod.outlook.com>
	<CAD1TkXsj53JRYhqot2aHSQR+HEDKm7+6S5kGtaLYBCoc24PuWg@mail.gmail.com>
	<SINPR04MB1949A0AF3AD33B4664417068C2370@SINPR04MB1949.apcprd04.prod.outlook.com>
	<CAD1TkXtPZ7w+qYqr_hvyeq95aJ2ge1YYkoC1taDkzv1vEMKpog@mail.gmail.com>
	<SINPR04MB1949BE883C69CFF1477AFAEFC2370@SINPR04MB1949.apcprd04.prod.outlook.com>
	<CAD1TkXvXYX0f+jMMc41vhANuKfw-rNg9tUOG0bCS=T-YGYYjPw@mail.gmail.com>
	<CAFVRnyqSMVj2Ttc4_5vuk73Z5yRJdxeSodvkdjqsrHbgghcmUQ@mail.gmail.com>
	<CAD1TkXvmo8ygbFdPJxdiL5-QiN6+ujeSgOJ7_4eit43aZ2bzyg@mail.gmail.com>
	<CAFVRnyr-Z9YWtT3r+7-fGejzgxKhH3-kQuo8JQFqKDpyZNBBdg@mail.gmail.com>
Message-ID: <F7248427-367E-4666-9171-5FD6898F4144@voskuil.org>

As an independently verifiable, decentralized store of public information, the Bitcoin block tree and transaction DAG do have an advantage over systems such as Visa. The store is just a cache. There is no need to implement reliability in storage or in communications. It is sufficient to be able to detect invalidity. And even if a subset of nodes fail to do so, the system overall compensates.

As such the architecture of a Bitcoin node and its supporting hardware requirements are very different from an unverifiable, centralized store of private information. So in that sense the comparison below is not entirely fair. Many, if not most, of the high costs of a Visa datacenter do not apply because of Bitcoin's information architecture.

However, if the system cannot remain decentralized these architectural advantages will not hold. At that point your considerations below are entirely valid. Once the information is centralized it necessarily becomes private and fragile. Conversely, once it becomes private it necessarily becomes centralized and fragile. This fragility requires significant investment by the central authority to maintain.

So as has been said, we can have decentralization and its benefit of trustlessness or we can have Visa. We already have Visa. Making another is entirely uninteresting.

e 

> On Mar 31, 2017, at 11:23 AM, David Vorick via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> Sure, your math is pretty much entirely irrelevant because scaling systems to massive sizes doesn't work that way.
> 
> At 400B transactions per year we're looking at block sizes of 4.5 GB, and a database size of petabytes. How much RAM do you need to process blocks like that? Can you fit that much RAM into a single machine? Okay, you can't fit that much RAM into a single machine. So you have to rework the code to operate on a computer cluster.
> 
> Already we've hit a significant problem. You aren't going to rewrite Bitcoin to do block validation on a computer cluster overnight. Further, are storage costs consistent when we're talking about setting up clusters? Are bandwidth costs consistent when we're talking about setting up clusters? Are RAM and CPU costs consistent when we're talking about setting up clusters? No, they aren't. Clusters are a lot more expensive to set up per-resource because they need to talk to eachother and synchronize with eachother and you have a LOT more parts, so you have to build in redundancies that aren't necessary in non-clusters.
> 
> Also worth pointing out that peak transaction volumes are typically 20-50x the size of typical transaction volumes. So your cluster isn't going to need to plan to handle 15k transactions per second, you're really looking at more like 200k or even 500k transactions per second to handle peak-volumes. And if it can't, you're still going to see full blocks.
> 
> You'd need a handful of experts just to maintain such a thing. Disks are going to be failing every day when you are storing multiple PB, so you can't just count a flat cost of $20/TB and expect that to work. You're going to need redundancy and tolerance so that you don't lose the system when a few of your hard drives all fail within minutes of eachother. And you need a way to rebuild everything without taking the system offline.
> 
> This isn't even my area of expertise. I'm sure there are a dozen other significant issues that one of the Visa architects could tell you about when dealing with mission-critical data at this scale.
> 
> --------
> 
> Massive systems operate very differently and are much more costly per-unit than tiny systems. Once we grow the blocksize large enough that a single computer can't do all the processing all by itself we get into a world of much harder, much more expensive scaling problems. Especially because we're talking about a distributed system where the nodes don't even trust each other. And transaction processing is largely non-parallel. You have to check each transaction against each other transaction to make sure that they aren't double spending eachother. This takes synchronization and prevents 500 CPUs from all crunching the data concurrently. You have to be a lot more clever than that to get things working and consistent.
> 
> When talking about scalability problems, you should ask yourself what other systems in the world operate at the scales you are talking about. None of them have cost structures in the 6 digit range, and I'd bet (without actually knowing) that none of them have cost structures in the 7 digit range either. In fact I know from working in a related industry that the cost structures for the datacenters (plus the support engineers, plus the software management, etc.) that do airline ticket processing are above $5 million per year for the larger airlines. Visa is probably even more expensive than that (though I can only speculate).
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From bram at bittorrent.com  Fri Mar 31 20:38:16 2017
From: bram at bittorrent.com (Bram Cohen)
Date: Fri, 31 Mar 2017 13:38:16 -0700
Subject: [bitcoin-dev] A Better MMR Definition
In-Reply-To: <20170301223101.GA17022@savin.petertodd.org>
References: <20170224010943.GA29218@savin.petertodd.org>
	<CA+KqGkrOK76S3ffPJmpqYcBwtSeKESqN16yZsrwzDR6JZZmwFA@mail.gmail.com>
	<20170224025811.GA31911@savin.petertodd.org>
	<CA+KqGkq7gavAnAk-tcA+gxL2sWpv3ENhEmHrQHaPdyAsKrLjGg@mail.gmail.com>
	<20170224031531.GA32118@savin.petertodd.org>
	<CA+KqGkrfhg3GnbWwvKXHQ2NWuCnfzYyTPUxRhzYMuDBiNQR4eA@mail.gmail.com>
	<20170224043613.GA32502@savin.petertodd.org>
	<CA+KqGkpi4GvgU-K6vt-U5ZN4AkpjZ0rruzddoJS4-V0TcnyqUQ@mail.gmail.com>
	<20170225041202.GA11152@savin.petertodd.org>
	<CA+KqGkqs8F1hK6y-JnLFRpqhQ5i8i+MXVmtGUQBYmE5d1OCAAg@mail.gmail.com>
	<20170301223101.GA17022@savin.petertodd.org>
Message-ID: <CA+KqGkoKy4spzi4mHBEfqXV8e9xwf8GA8oWN-Nqv7kNH_yPqpg@mail.gmail.com>

On Wed, Mar 1, 2017 at 2:31 PM, Peter Todd <pete at petertodd.org> wrote:

>
> A better way to present your work would have been to at least explain that
> at
> the top of the file, and perhaps even better, split the reference
> implementation and optimized implementation into two separate files. If
> you did
> this, you'd be more likely to get others to review your work.
>

I've now added explanation to the README, reorganized the files, and added
some comments:

https://github.com/bramcohen/MerkleSet

In fact, I'd suggest that for things like edge cases, you test edge cases in
> separate unit tests that explain what edge cases you're trying to catch.
>

The tests work by doing a lot of exercising on pseudorandom data, an
approach which does a good job of hitting all the lines of code and edge
cases and requiring very little updating as the implementation changes, at
the expense of it taking a while for tests to run. The advantage of very
custom unit tests is that they run almost instantly, at the cost of
requiring painstaking maintenance and missing more stuff. I've come to
favor this approach in my old age.

The proportion of code devoted to tests is more than it looks like at first
blush, because all the audit methods are just for testing.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170331/797a3461/attachment.html>

From praxeology_guy at protonmail.com  Fri Mar 31 20:29:41 2017
From: praxeology_guy at protonmail.com (praxeology_guy)
Date: Fri, 31 Mar 2017 16:29:41 -0400
Subject: [bitcoin-dev] Refund Excesss Fee Hard Fork Proposal
Message-ID: <1dvInLVM9fq2GjQVacau8gDyslYCCx_6dm2Sbi1IiIyPaXy1C8-Ip3CSICVal_VO_FKzVaQCfRVUImQmKuNuNXfKzqhnwAM1Cw_lyQVL8ew=@protonmail.com>

TL;DR (In layman terms): Refund any excess fee amounts higher than the lowest included fee in a block.

=== Proposed Hard Fork Change ===

LIFB: Lowest Included Fee/Byte

Change the fee policy to cause all fee/byte in a block to be reduced to the lowest included fee/byte. Change transactions to specify how/which outputs get what portions of [(TX_fee/TX_length - LIFB)*TX_length]. Transactions of course could still offer the remainder to the miner if they don't want to modify some of the outputs and don't want to reveal their change output.

=== Economic Analysis Of Why Such Is Desirable ===

Pure profit seeking miners attempt to fill their block with transactions that have the highest fee/byte. So what happens is the users who are willing to offer the highest fee/byte get included first in a block until it gets filled. At fill, there is some fee/byte where the next available tx in mempool doesn't get included. And right above that fee/byte is the last transaction that was selected to be included in the block, which has the lowest fee/byte of any of the transactions in the block.

Users who want to create transactions with the lowest fee watch the LIFB with https://bitcoinfees.21.co/ or similar systems... so that they can make a transaction that offers a fee at or above the LIFB so that it can be included in a block in reasonable time.

Some users have transactions with very high confirmation time sensitivity/importance... so they offer a fee much higher than the LIFB to guarantee quick confirmation. But they would prefer that even though they are willing to pay a higher fee, that they would still only pay the LIFB fee/byte amount.

This becomes even more of an issue when someone wants to create a transaction now that they want to be included in a block at a much later time... because it becomes harder and harder to predict what the LIFB will be as you try to predict further into the future. It would be nice to be able to specify a very high fee/byte in such a transaction, and then when the transaction is confirmed only have to pay the LIFB.

Users will look for the money that offers the greatest money transfer efficiency, and tx fees are a big and easily measurable component. So a money system is better if its users can pay lower fees than competing money options. Refund Excees Fee is one way to reduce fees.

=== Technical Difficulties ===

I realize this is a big change... and I'm not sure of the performance problems this might entail... I'm just throwing this idea out there. Of course if fees are very small, and there is little difference between a high priority fee/byte and the LIFB, then this issue is not really that big of a deal. Also... hard forks are very hard to do in general, so such a hard fork as this might not be worthwhile.

Cheers,
Praxeology Guy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170331/11994290/attachment.html>

From bram at bittorrent.com  Fri Mar 31 20:57:04 2017
From: bram at bittorrent.com (Bram Cohen)
Date: Fri, 31 Mar 2017 13:57:04 -0700
Subject: [bitcoin-dev] Refund Excesss Fee Hard Fork Proposal
In-Reply-To: <1dvInLVM9fq2GjQVacau8gDyslYCCx_6dm2Sbi1IiIyPaXy1C8-Ip3CSICVal_VO_FKzVaQCfRVUImQmKuNuNXfKzqhnwAM1Cw_lyQVL8ew=@protonmail.com>
References: <1dvInLVM9fq2GjQVacau8gDyslYCCx_6dm2Sbi1IiIyPaXy1C8-Ip3CSICVal_VO_FKzVaQCfRVUImQmKuNuNXfKzqhnwAM1Cw_lyQVL8ew=@protonmail.com>
Message-ID: <CA+KqGkoSQEE-MzC8ptbFxoypKKFpMMK8XQXdvkgkJghfP7sy4Q@mail.gmail.com>

On Fri, Mar 31, 2017 at 1:29 PM, praxeology_guy via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

>
> Change the fee policy to cause all fee/byte in a block to be reduced to
> the lowest included fee/byte. Change transactions to specify how/which
> outputs get what portions of [(TX_fee/TX_length - LIFB)*TX_length].
> Transactions of course could still offer the remainder to the miner if they
> don't want to modify some of the outputs and don't want to reveal their
> change output.
>

That would have the unfortunate effect of incentivizing miners to not
completely fill blocks, because low fee marginal transactions could cost
them money.

An alternate approach would be to incentivize miners to follow transaction
fees more by reducing mining rewards, which could be done by soft forking
in a requirement that a chunk of all mining rewards be sent to an
unspendable address.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170331/0fc61bb9/attachment.html>

From sergio.d.lerner at gmail.com  Fri Mar 31 21:09:18 2017
From: sergio.d.lerner at gmail.com (Sergio Demian Lerner)
Date: Fri, 31 Mar 2017 18:09:18 -0300
Subject: [bitcoin-dev] Segwit2Mb - combined soft/hard fork - Request For
	Comments
Message-ID: <CAKzdR-oN6tGvGSb04_awCf=Jsf3wgKJN5xUhCr8G2D2W9YgJww@mail.gmail.com>

Hi everyone,

Segwit2Mb is the project to merge into Bitcoin a minimal patch that aims to
untangle the current conflict between different political positions
regarding segwit activation vs. an increase of the on-chain blockchain
space through a standard block size increase. It is not a new solution, but
it should be seen more as a least common denominator.

Segwit2Mb combines segwit as it is today in Bitcoin 0.14+ with a 2MB block
size hard-fork activated ONLY if segwit activates (95% of miners
signaling), but at a fixed future date.

The sole objective of this proposal is to re-unite the Bitcoin community
and avoid a cryptocurrency split. Segwit2Mb does not aim to be best
possible technical solution to solve Bitcoin technical limitations.
However, this proposal does not imply a compromise to the future
scalability or decentralization of Bitcoin, as a small increase in block
size has been proven by several core and non-core developers not to affect
Bitcoin value propositions.

In the worst case, a 2X block size increase has much lower economic impact
than the last bitcoin halving (<10%), which succeeded without problem.

On the other side, Segwit2Mb primary goal is to be minimalistic: in this
patch some choices have been made to reduce the number of lines modified in
the current Bitcoin Core state (master branch), instead of implementing the
most elegant solution. This is because I want to reduce the time it takes
for core programmers and reviewers to check the correctness of the code,
and to report and correct bugs.

The patch was built by forking the master branch of Bitcoin Core, mixing a
few lines of code from Jeff Garzik's BIP102,  and defining a second
versionbits activation bit (bit 2) for the combined activation.

The combined activation of segwit and 2Mb hard-fork nVersion bit is 2
(DEPLOYMENT_SEGWIT_AND_2MB_BLOCKS).

This means that segwit can still be activated without the 2MB hard-fork by
signaling bit 1 in nVersion  (DEPLOYMENT_SEGWIT).

The tentative lock-in and hard-fork dates are the following:

Bit 2 signaling StartTime = 1493424000; // April 29th, 2017

Bit 2 signaling Timeout = 1503964800; // August 29th, 2017

HardForkTime = 1513209600; // Thu, 14 Dec 2017 00:00:00 GMT


The hard-fork is conditional to 95% of the hashing power has approved the
segwit2mb soft-fork and the segwit soft-fork has been activated (which
should occur 2016 blocks after its lock-in time)

For more information on how soft-forks are signaled and activated, see
https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki

This means that segwit would be activated before 2Mb: this is inevitable,
as versionbits have been designed to have fixed activation periods and
thresholds for all bits. Making segwit and 2Mb fork activate together at a
delayed date would have required a major re-write of this code, which would
contradict the premise of creating a minimalistic patch. However, once
segwit is activated, the hard-fork is unavoidable.

Although I have coded a first version of the segwit2mb patch (which
modifies 120 lines of code, and adds 220 lines of testing code), I would
prefer to wait to publish the source code until more comments have been
received from the community.

To prevent worsening block verification time because of the O(N^2) hashing
problem, the simple restriction that transactions cannot be larger than 1Mb
has been kept. Therefore the worse-case of block verification time has only
doubled.

Regarding the hard-fork activation date, I want to give enough time to all
active economic nodes to upgrade. As of Fri Mar 31 2017,
https://bitnodes.21.co/nodes/ reports that 6332 out of 6955 nodes (91%)
have upgraded to post 0.12 versions. Upgrade to post 0.12 versions can be
used to identify economic active nodes, because in the 0.12 release dynamic
fees were introduced, and currently no Bitcoin automatic payment system can
operate without automatic discovery of the current fee rate. A pre-0.12
would require constant manual intervention.
Therefore I conclude that no more than 91% of the network nodes reported by
bitnodes are active economic nodes.

As Bitcoin Core 0.12 was released on February 2016, the time for this 91%
to upgrade has been around one year (under a moderate pressure of
operational problems with unconfirmed transactions).
Therefore we can expect a similar or lower time to upgrade for a hard-fork,
after developers have discussed and approved the patch, and it has been
reviewed and merged and 95% of the hashing power has signaled for it (the
pressure not to upgrade being a complete halt of the operations). However I
suggest that we discuss the hard-fork date and delay it if there is a real
need to.

Currently time works against the Bitcoin community, and so is delaying a
compromise solution. Most of the community agree that halting the
innovation for several years is a very bad option.

After the comments collected by the community, a BIP will be written
describing the resulting proposal details.

If segwit2mb locks-in, before hard-fork occurs all bitcoin nodes should be
updated to a Segwit2Mb enabled node to prevent them to be forked-away in a
chain with almost no hashing-power.

The proof of concept patch was made for Bitcoin Core but should be easily
ported to other Bitcoin protocol implementations that already support
versionbits. Lightweight (SPV) wallets should not be affected as they
generally do not check the block size.

I personally want to see the Lightning Network in action this year, use the
non-malleability features in segwit, see the community discussing other
exciting soft-forks in the scaling roadmap, Schnorr sigs, drivechains and
MAST.

I want to see miners, developers and industry side-by-side pushing Bitcoin
forward, to increase the value of Bitcoin and prevent high transaction fees
to put out of business use-cases that could have high positive social
impact.

I believe in the strength of a unified Bitcoin community. If you're a
developer, please give your opinion, suggest changes, audit it, and take a
stand with me to unlock the current Bitcoin deadlock.

Contributions to the segwit2mb project are welcomed and awaited. The only
limitation is to stick to the principle that the patch should be as simple
to audit as possible. As an example, I wouldn't feel confident if the patch
modified more than ~150 lines of code.

Improvements unrelated to a 2 Mb increase or segwit, as beneficial as it
may be to Bitcoin, should not be part of segwit2Mb.

This proposal should not prevent other consensus proposals to be
simultaneously merged: segwit2mb is a last resort solution in case we can
not reach consensus on anything better.

Again, the proposal is only a starting point: community feedback is
expected and welcomed.

Regards,
Sergio Demian Lerner
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170331/c55dafa8/attachment-0001.html>

From lf-lists at mattcorallo.com  Fri Mar 31 21:22:10 2017
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Fri, 31 Mar 2017 21:22:10 +0000
Subject: [bitcoin-dev] Segwit2Mb - combined soft/hard fork - Request
	For	Comments
In-Reply-To: <CAKzdR-oN6tGvGSb04_awCf=Jsf3wgKJN5xUhCr8G2D2W9YgJww@mail.gmail.com>
References: <CAKzdR-oN6tGvGSb04_awCf=Jsf3wgKJN5xUhCr8G2D2W9YgJww@mail.gmail.com>
Message-ID: <1CF1FD5D-8D29-4783-823F-B3F588D5C5CE@mattcorallo.com>

Hey Sergio,

You appear to have ignored the last two years of Bitcoin hardfork
research and understanding, recycling instead BIP 102 from 2015. There
are many proposals which have pushed the state of hard fork research
much further since then, and you may wish to read some of the posts on
this mailing list listed at https://bitcoinhardforkresearch.github.io/
and make further edits based on what you learn. Your goal of "avoid
technical changes" appears to not have any basis outside of perceived
compromise for compromise sake, only making such a hardfork riskier
instead.

At a minimum, in terms of pure technical changes, you should probably
consider (probably among others):

a) Utilizing the "hard fork signaling bit" in the nVersion of the block.
b) Either limiting non-SegWit transactions in some way to fix the n**2
sighash and FindAndDelete runtime and memory usage issues or fix them by
utilizing the new sighash type which many wallets and projects have
already implemented for SegWit in the spending of non-SegWit outputs.
c) Your really should have replay protection in any HF. The clever fix from
Spoonnet for poor scaling of optionally allowing non-SegWit outputs to
be spent with SegWit's sighash provides this all in one go.
d) You may wish to consider the possibility of tweaking the witness
discount and possibly discounting other parts of the input - SegWit went
a long ways towards making removal of elements from the UTXO set cheaper
than adding them, but didn't quite get there, you should probably finish
that job. This also provides additional tuneable parameters to allow you
to increase the block size while not having a blowup in the worst-case
block size.
e) Additional commitments at the top of the merkle root - both for
SegWit transactions and as additional space for merged mining and other
commitments which we may wish to add in the future, this should likely
be implemented an "additional header" ala Johnson Lau's Spoonnet proposal.

Additionally, I think your parameters here pose very significant risk to
the Bitcoin ecosystem broadly.

a) Activating a hard fork with less than 18/24 months (and even then...)
from a fully-audited and supported release of full node software to
activation date poses significant risks to many large software projects
and users. I've repeatedly received feedback from various folks that a
year or more is likely required in any hard fork to limit this risk, and
limited pushback on that given the large increase which SegWit provides
itself buying a ton of time.

b) Having a significant discontinuity in block size increase only serves
to confuse and mislead users and businesses, forcing them to rapidly
adapt to a Bitcoin which changed overnight both by hardforking, and by
fees changing suddenly. Instead, having the hard fork activate technical
changes, and then slowly increasing the block size over the following
several years keeps things nice and continuous and also keeps us from
having to revisit ye old blocksize debate again six months after activation.

c) You should likely consider the effect of the many technological
innovations coming down the pipe in the coming months. Technologies like
Lightning, TumbleBit, and even your own RootStock could significantly
reduce fee pressure as transactions move to much faster and more
featureful systems.

Commitments to aggressive hard fork parameters now may leave miners
without much revenue as far out as the next halving (which current
transaction growth trends are indicating we'd just only barely reach 2MB
of transaction volume, let alone if you consider the effects of users
moving to systems which provide more features for Bitcoin transactions).
This could lead to a precipitous drop in hashrate as miners are no
longer sufficiently compensated.

Remember that the "hashpower required to secure bitcoin" is determined
as a percentage of total Bitcoins transacted on-chain in each block, so
as subsidy goes down, miners need to be paid with fees, not just price
increases. Even if we were OK with hashpower going down compared to the
value it is securing, betting the security of Bitcoin on its price
rising exponentially to match decreasing subsidy does not strike me as a
particularly inspiring tradeoff.

There aren't many great technical solutions to some of these issues, as
far as I'm aware, but it's something that needs to be incredibly
carefully considered before betting the continued security of Bitcoin on
exponential on-chain growth, something which we have historically never
seen.

Matt


On March 31, 2017 5:09:18 PM EDT, Sergio Demian Lerner via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>Hi everyone,
>
>Segwit2Mb is the project to merge into Bitcoin a minimal patch that
>aims to
>untangle the current conflict between different political positions
>regarding segwit activation vs. an increase of the on-chain blockchain
>space through a standard block size increase. It is not a new solution,
>but
>it should be seen more as a least common denominator.
>
>Segwit2Mb combines segwit as it is today in Bitcoin 0.14+ with a 2MB
>block
>size hard-fork activated ONLY if segwit activates (95% of miners
>signaling), but at a fixed future date.
>
>The sole objective of this proposal is to re-unite the Bitcoin
>community
>and avoid a cryptocurrency split. Segwit2Mb does not aim to be best
>possible technical solution to solve Bitcoin technical limitations.
>However, this proposal does not imply a compromise to the future
>scalability or decentralization of Bitcoin, as a small increase in
>block
>size has been proven by several core and non-core developers not to
>affect
>Bitcoin value propositions.
>
>In the worst case, a 2X block size increase has much lower economic
>impact
>than the last bitcoin halving (<10%), which succeeded without problem.
>
>On the other side, Segwit2Mb primary goal is to be minimalistic: in
>this
>patch some choices have been made to reduce the number of lines
>modified in
>the current Bitcoin Core state (master branch), instead of implementing
>the
>most elegant solution. This is because I want to reduce the time it
>takes
>for core programmers and reviewers to check the correctness of the
>code,
>and to report and correct bugs.
>
>The patch was built by forking the master branch of Bitcoin Core,
>mixing a
>few lines of code from Jeff Garzik's BIP102,  and defining a second
>versionbits activation bit (bit 2) for the combined activation.
>
>The combined activation of segwit and 2Mb hard-fork nVersion bit is 2
>(DEPLOYMENT_SEGWIT_AND_2MB_BLOCKS).
>
>This means that segwit can still be activated without the 2MB hard-fork
>by
>signaling bit 1 in nVersion  (DEPLOYMENT_SEGWIT).
>
>The tentative lock-in and hard-fork dates are the following:
>
>Bit 2 signaling StartTime = 1493424000; // April 29th, 2017
>
>Bit 2 signaling Timeout = 1503964800; // August 29th, 2017
>
>HardForkTime = 1513209600; // Thu, 14 Dec 2017 00:00:00 GMT
>
>
>The hard-fork is conditional to 95% of the hashing power has approved
>the
>segwit2mb soft-fork and the segwit soft-fork has been activated (which
>should occur 2016 blocks after its lock-in time)
>
>For more information on how soft-forks are signaled and activated, see
>https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki
>
>This means that segwit would be activated before 2Mb: this is
>inevitable,
>as versionbits have been designed to have fixed activation periods and
>thresholds for all bits. Making segwit and 2Mb fork activate together
>at a
>delayed date would have required a major re-write of this code, which
>would
>contradict the premise of creating a minimalistic patch. However, once
>segwit is activated, the hard-fork is unavoidable.
>
>Although I have coded a first version of the segwit2mb patch (which
>modifies 120 lines of code, and adds 220 lines of testing code), I
>would
>prefer to wait to publish the source code until more comments have been
>received from the community.
>
>To prevent worsening block verification time because of the O(N^2)
>hashing
>problem, the simple restriction that transactions cannot be larger than
>1Mb
>has been kept. Therefore the worse-case of block verification time has
>only
>doubled.
>
>Regarding the hard-fork activation date, I want to give enough time to
>all
>active economic nodes to upgrade. As of Fri Mar 31 2017,
>https://bitnodes.21.co/nodes/ reports that 6332 out of 6955 nodes (91%)
>have upgraded to post 0.12 versions. Upgrade to post 0.12 versions can
>be
>used to identify economic active nodes, because in the 0.12 release
>dynamic
>fees were introduced, and currently no Bitcoin automatic payment system
>can
>operate without automatic discovery of the current fee rate. A pre-0.12
>would require constant manual intervention.
>Therefore I conclude that no more than 91% of the network nodes
>reported by
>bitnodes are active economic nodes.
>
>As Bitcoin Core 0.12 was released on February 2016, the time for this
>91%
>to upgrade has been around one year (under a moderate pressure of
>operational problems with unconfirmed transactions).
>Therefore we can expect a similar or lower time to upgrade for a
>hard-fork,
>after developers have discussed and approved the patch, and it has been
>reviewed and merged and 95% of the hashing power has signaled for it
>(the
>pressure not to upgrade being a complete halt of the operations).
>However I
>suggest that we discuss the hard-fork date and delay it if there is a
>real
>need to.
>
>Currently time works against the Bitcoin community, and so is delaying
>a
>compromise solution. Most of the community agree that halting the
>innovation for several years is a very bad option.
>
>After the comments collected by the community, a BIP will be written
>describing the resulting proposal details.
>
>If segwit2mb locks-in, before hard-fork occurs all bitcoin nodes should
>be
>updated to a Segwit2Mb enabled node to prevent them to be forked-away
>in a
>chain with almost no hashing-power.
>
>The proof of concept patch was made for Bitcoin Core but should be
>easily
>ported to other Bitcoin protocol implementations that already support
>versionbits. Lightweight (SPV) wallets should not be affected as they
>generally do not check the block size.
>
>I personally want to see the Lightning Network in action this year, use
>the
>non-malleability features in segwit, see the community discussing other
>exciting soft-forks in the scaling roadmap, Schnorr sigs, drivechains
>and
>MAST.
>
>I want to see miners, developers and industry side-by-side pushing
>Bitcoin
>forward, to increase the value of Bitcoin and prevent high transaction
>fees
>to put out of business use-cases that could have high positive social
>impact.
>
>I believe in the strength of a unified Bitcoin community. If you're a
>developer, please give your opinion, suggest changes, audit it, and
>take a
>stand with me to unlock the current Bitcoin deadlock.
>
>Contributions to the segwit2mb project are welcomed and awaited. The
>only
>limitation is to stick to the principle that the patch should be as
>simple
>to audit as possible. As an example, I wouldn't feel confident if the
>patch
>modified more than ~150 lines of code.
>
>Improvements unrelated to a 2 Mb increase or segwit, as beneficial as
>it
>may be to Bitcoin, should not be part of segwit2Mb.
>
>This proposal should not prevent other consensus proposals to be
>simultaneously merged: segwit2mb is a last resort solution in case we
>can
>not reach consensus on anything better.
>
>Again, the proposal is only a starting point: community feedback is
>expected and welcomed.
>
>Regards,
>Sergio Demian Lerner

From lf-lists at mattcorallo.com  Fri Mar 31 21:18:25 2017
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Fri, 31 Mar 2017 21:18:25 +0000
Subject: [bitcoin-dev] Segwit2Mb - combined soft/hard fork - Request
	For	Comments
In-Reply-To: <CAKzdR-oN6tGvGSb04_awCf=Jsf3wgKJN5xUhCr8G2D2W9YgJww@mail.gmail.com>
References: <CAKzdR-oN6tGvGSb04_awCf=Jsf3wgKJN5xUhCr8G2D2W9YgJww@mail.gmail.com>
Message-ID: <4D0BA749-96DF-4DB2-8E27-61DEFED51507@mattcorallo.com>

Hey Sergio,

You appear to have ignored the last two years of Bitcoin hardfork
research and understanding, recycling instead BIP 102 from 2015. There
are many proposals which have pushed the state of hard fork research
much further since then, and you may wish to read some of the posts on
this mailing list listed at https://bitcoinhardforkresearch.github.io/
and make further edits based on what you learn. It seems your goal of
"avoid any technical changes" doesn't have any foundation aside from a
perceived compromise for compromise sake, only making for fork riskier
in the process.

At a minimum, in terms of pure technical changes, you should probably
consider (probably among others):

a) Utilizing the "hard fork signaling bit" in the nVersion of the block.
b) Either limiting non-SegWit transactions in some way to fix the n**2
sighash and FindAndDelete runtime and memory usage issues or fix them by
utilizing the new sighash type which many wallets and projects have
already implemented for SegWit in the spending of non-SegWit outputs.
c) Your replay protection isn't really ideal - XXX. The clever fix from
Spoonnet for poor scaling of optionally allowing non-SegWit outputs to
be spent with SegWit's sighash provides this all in one go.
d) You may wish to consider the possibility of tweaking the witness
discount and possibly discounting other parts of the input - SegWit went
a long ways towards making removal of elements from the UTXO set cheaper
than adding them, but didn't quite get there, you should probably finish
that job. This also provides additional tuneable parameters to allow you
to increase the block size while not having a blowup in the worst-case
block size.
e) Additional commitments at the top of the merkle root - both for
SegWit transactions and as additional space for merged mining and other
commitments which we may wish to add in the future, this should likely
be implemented an "additional header" ala Johnson Lau's Spoonnet proposal.

Additionally, I think your parameters here pose very significant risk to
the Bitcoin ecosystem broadly.

a) Activating a hard fork with less than 18/24 months (and even then...)
from a fully-audited and supported release of full node software to
activation date poses significant risks to many large software projects
and users. I've repeatedly received feedback from various folks that a
year or more is likely required in any hard fork to limit this risk, and
limited pushback on that given the large increase which SegWit provides
itself buying a ton of time.

b) Having a significant discontinuity in block size increase only serves
to confuse and mislead users and businesses, forcing them to rapidly
adapt to a Bitcoin which changed overnight both by hardforking, and by
fees changing suddenly. Instead, having the hard fork activate technical
changes, and then slowly increasing the block size over the following
several years keeps things nice and continuous and also keeps us from
having to revisit ye old blocksize debate again six months after activation.

c) You should likely consider the effect of the many technological
innovations coming down the pipe in the coming months. Technologies like
Lightning, TumbleBit, and even your own RootStock could significantly
reduce fee pressure as transactions move to much faster and more
featureful systems.

Commitments to aggressive hard fork parameters now may leave miners
without much revenue as far out as the next halving (which current
transaction growth trends are indicating we'd just only barely reach 2MB
of transaction volume, let alone if you consider the effects of users
moving to systems which provide more features for Bitcoin transactions).
This could lead to a precipitous drop in hashrate as miners are no
longer sufficiently compensated.

Remember that the "hashpower required to secure bitcoin" is determined
as a percentage of total Bitcoins transacted on-chain in each block, so
as subsidy goes down, miners need to be paid with fees, not just price
increases. Even if we were OK with hashpower going down compared to the
value it is securing, betting the security of Bitcoin on its price
rising exponentially to match decreasing subsidy does not strike me as a
particularly inspiring tradeoff.

There aren't many great technical solutions to some of these issues, as
far as I'm aware, but it's something that needs to be incredibly
carefully considered before betting the continued security of Bitcoin on
exponential on-chain growth, something which we have historically never
seen.

Matt


On March 31, 2017 5:09:18 PM EDT, Sergio Demian Lerner via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>Hi everyone,
>
>Segwit2Mb is the project to merge into Bitcoin a minimal patch that
>aims to
>untangle the current conflict between different political positions
>regarding segwit activation vs. an increase of the on-chain blockchain
>space through a standard block size increase. It is not a new solution,
>but
>it should be seen more as a least common denominator.
>
>Segwit2Mb combines segwit as it is today in Bitcoin 0.14+ with a 2MB
>block
>size hard-fork activated ONLY if segwit activates (95% of miners
>signaling), but at a fixed future date.
>
>The sole objective of this proposal is to re-unite the Bitcoin
>community
>and avoid a cryptocurrency split. Segwit2Mb does not aim to be best
>possible technical solution to solve Bitcoin technical limitations.
>However, this proposal does not imply a compromise to the future
>scalability or decentralization of Bitcoin, as a small increase in
>block
>size has been proven by several core and non-core developers not to
>affect
>Bitcoin value propositions.
>
>In the worst case, a 2X block size increase has much lower economic
>impact
>than the last bitcoin halving (<10%), which succeeded without problem.
>
>On the other side, Segwit2Mb primary goal is to be minimalistic: in
>this
>patch some choices have been made to reduce the number of lines
>modified in
>the current Bitcoin Core state (master branch), instead of implementing
>the
>most elegant solution. This is because I want to reduce the time it
>takes
>for core programmers and reviewers to check the correctness of the
>code,
>and to report and correct bugs.
>
>The patch was built by forking the master branch of Bitcoin Core,
>mixing a
>few lines of code from Jeff Garzik's BIP102,  and defining a second
>versionbits activation bit (bit 2) for the combined activation.
>
>The combined activation of segwit and 2Mb hard-fork nVersion bit is 2
>(DEPLOYMENT_SEGWIT_AND_2MB_BLOCKS).
>
>This means that segwit can still be activated without the 2MB hard-fork
>by
>signaling bit 1 in nVersion  (DEPLOYMENT_SEGWIT).
>
>The tentative lock-in and hard-fork dates are the following:
>
>Bit 2 signaling StartTime = 1493424000; // April 29th, 2017
>
>Bit 2 signaling Timeout = 1503964800; // August 29th, 2017
>
>HardForkTime = 1513209600; // Thu, 14 Dec 2017 00:00:00 GMT
>
>
>The hard-fork is conditional to 95% of the hashing power has approved
>the
>segwit2mb soft-fork and the segwit soft-fork has been activated (which
>should occur 2016 blocks after its lock-in time)
>
>For more information on how soft-forks are signaled and activated, see
>https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki
>
>This means that segwit would be activated before 2Mb: this is
>inevitable,
>as versionbits have been designed to have fixed activation periods and
>thresholds for all bits. Making segwit and 2Mb fork activate together
>at a
>delayed date would have required a major re-write of this code, which
>would
>contradict the premise of creating a minimalistic patch. However, once
>segwit is activated, the hard-fork is unavoidable.
>
>Although I have coded a first version of the segwit2mb patch (which
>modifies 120 lines of code, and adds 220 lines of testing code), I
>would
>prefer to wait to publish the source code until more comments have been
>received from the community.
>
>To prevent worsening block verification time because of the O(N^2)
>hashing
>problem, the simple restriction that transactions cannot be larger than
>1Mb
>has been kept. Therefore the worse-case of block verification time has
>only
>doubled.
>
>Regarding the hard-fork activation date, I want to give enough time to
>all
>active economic nodes to upgrade. As of Fri Mar 31 2017,
>https://bitnodes.21.co/nodes/ reports that 6332 out of 6955 nodes (91%)
>have upgraded to post 0.12 versions. Upgrade to post 0.12 versions can
>be
>used to identify economic active nodes, because in the 0.12 release
>dynamic
>fees were introduced, and currently no Bitcoin automatic payment system
>can
>operate without automatic discovery of the current fee rate. A pre-0.12
>would require constant manual intervention.
>Therefore I conclude that no more than 91% of the network nodes
>reported by
>bitnodes are active economic nodes.
>
>As Bitcoin Core 0.12 was released on February 2016, the time for this
>91%
>to upgrade has been around one year (under a moderate pressure of
>operational problems with unconfirmed transactions).
>Therefore we can expect a similar or lower time to upgrade for a
>hard-fork,
>after developers have discussed and approved the patch, and it has been
>reviewed and merged and 95% of the hashing power has signaled for it
>(the
>pressure not to upgrade being a complete halt of the operations).
>However I
>suggest that we discuss the hard-fork date and delay it if there is a
>real
>need to.
>
>Currently time works against the Bitcoin community, and so is delaying
>a
>compromise solution. Most of the community agree that halting the
>innovation for several years is a very bad option.
>
>After the comments collected by the community, a BIP will be written
>describing the resulting proposal details.
>
>If segwit2mb locks-in, before hard-fork occurs all bitcoin nodes should
>be
>updated to a Segwit2Mb enabled node to prevent them to be forked-away
>in a
>chain with almost no hashing-power.
>
>The proof of concept patch was made for Bitcoin Core but should be
>easily
>ported to other Bitcoin protocol implementations that already support
>versionbits. Lightweight (SPV) wallets should not be affected as they
>generally do not check the block size.
>
>I personally want to see the Lightning Network in action this year, use
>the
>non-malleability features in segwit, see the community discussing other
>exciting soft-forks in the scaling roadmap, Schnorr sigs, drivechains
>and
>MAST.
>
>I want to see miners, developers and industry side-by-side pushing
>Bitcoin
>forward, to increase the value of Bitcoin and prevent high transaction
>fees
>to put out of business use-cases that could have high positive social
>impact.
>
>I believe in the strength of a unified Bitcoin community. If you're a
>developer, please give your opinion, suggest changes, audit it, and
>take a
>stand with me to unlock the current Bitcoin deadlock.
>
>Contributions to the segwit2mb project are welcomed and awaited. The
>only
>limitation is to stick to the principle that the patch should be as
>simple
>to audit as possible. As an example, I wouldn't feel confident if the
>patch
>modified more than ~150 lines of code.
>
>Improvements unrelated to a 2 Mb increase or segwit, as beneficial as
>it
>may be to Bitcoin, should not be part of segwit2Mb.
>
>This proposal should not prevent other consensus proposals to be
>simultaneously merged: segwit2mb is a last resort solution in case we
>can
>not reach consensus on anything better.
>
>Again, the proposal is only a starting point: community feedback is
>expected and welcomed.
>
>Regards,
>Sergio Demian Lerner

From rodney.morris at gmail.com  Fri Mar 31 21:23:01 2017
From: rodney.morris at gmail.com (Rodney Morris)
Date: Sat, 1 Apr 2017 08:23:01 +1100
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
Message-ID: <CABerxhFY8NoA6sSiz1oZ=01Di8n9+QR1xE6NNtxvm=Ov1bGhWQ@mail.gmail.com>

You guessed wrong. Multiple data centres are as much about redundancy and
resiliency, and latency.

As for the cost, data centre space, business grade communication lines, and
staff are orders of magnitude more expensive than the physical hardware
they support.

I'd like to call you out on your continuing reduction to absurdity and
slippery slope arguments. Just because we can't handle 4GB blocks today,
doesn't mean we shouldn't aim in that direction. Doesn't mean we shouldn't
be taking our first second and third baby steps in that direction.

If the obsession with every personal computer being able to run a fill node
continues then bitcoin will be consigned to the dustbin of history, a
footnote to the story of the global crypto currency that eventually took
over the world.

Thanks
Rodney


Date: Fri, 31 Mar 2017 12:14:42 -0400
From: David Vorick <david.vorick at gmail.com>
To: Jared Lee Richardson <jaredr26 at gmail.com>
Cc: Bitcoin Dev <bitcoin-dev at lists.linuxfoundation.org>
Subject: Re: [bitcoin-dev] Hard fork proposal from last week's meeting
Message-ID:
        <CAFVRnyqSMVj2Ttc4_5vuk73Z5yRJdxeSodvkdjqsrHbgghcmUQ at mail.gmail.com>
Content-Type: text/plain; charset="utf-8"


Then explain why PayPal has multiple datacenters. And why Visa has multiple
datacenters. And why the banking systems have multiple datacenters each.

I'm guessing it's because you need that much juice to run a global payment
system at the transaction volumes that they run at.



Unless you have professional experience working directly with transaction
processors handling tens of millions of financial transactions per day, I
think we can fully discount your assessment that it would be a rounding
error in the budget of a major exchange or Bitcoin processor to handle that
much load. And even if it was, it wouldn't matter because it's extremely
important to Bitcoin's security that it's everyday users are able to and
are actively running full nodes.

I'm not going to take the time to refute everything you've been saying but
I will say that most of your comments have demonstrated a similar level of
ignorance as the one above.

This whole thread has been absurdly low quality.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170401/54de6975/attachment-0001.html>

From praxeology_guy at protonmail.com  Fri Mar 31 21:17:16 2017
From: praxeology_guy at protonmail.com (praxeology_guy)
Date: Fri, 31 Mar 2017 17:17:16 -0400
Subject: [bitcoin-dev] Refund Excesss Fee Hard Fork Proposal
In-Reply-To: <CA+KqGkoSQEE-MzC8ptbFxoypKKFpMMK8XQXdvkgkJghfP7sy4Q@mail.gmail.com>
References: <1dvInLVM9fq2GjQVacau8gDyslYCCx_6dm2Sbi1IiIyPaXy1C8-Ip3CSICVal_VO_FKzVaQCfRVUImQmKuNuNXfKzqhnwAM1Cw_lyQVL8ew=@protonmail.com>
	<CA+KqGkoSQEE-MzC8ptbFxoypKKFpMMK8XQXdvkgkJghfP7sy4Q@mail.gmail.com>
Message-ID: <rrMTVqlEe7A5uHTOaUIuIlQ17uo9BOswBiDDtG_73l3hWbTyWHDxZ-3oSIceyHOddBu83XbQrsEPcTy7A-v75pf6hLeu5pRbO6k7qAuYLS0=@protonmail.com>

> That would have the unfortunate effect of incentivizing miners to not completely fill blocks, because low fee marginal transactions could cost them money.

Look at the fee distribution. The vast majority of fee income comes from txs w/ fees near the LIFB. The blocks will be full... but I guess this would make Child Pays For Parent undesirable. CPFP would need a flag saying it is CPFP so that the parent fee isn't considered the LIFB.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170331/d725ac3f/attachment.html>

From praxeology_guy at protonmail.com  Fri Mar 31 21:22:02 2017
From: praxeology_guy at protonmail.com (praxeology_guy)
Date: Fri, 31 Mar 2017 17:22:02 -0400
Subject: [bitcoin-dev] Segwit2Mb - combined soft/hard fork - Request For
	Comments
In-Reply-To: <CAKzdR-oN6tGvGSb04_awCf=Jsf3wgKJN5xUhCr8G2D2W9YgJww@mail.gmail.com>
References: <CAKzdR-oN6tGvGSb04_awCf=Jsf3wgKJN5xUhCr8G2D2W9YgJww@mail.gmail.com>
Message-ID: <1OG7g5mI5q4lJn4f-aIWx9lRYYzKuhGB5pyBBMYz68_ngSfY6uHVduHYzCPKwIFQx3spKOf1gAG447AzPZEbXCCECHwziTse1ItmZgapvCQ=@protonmail.com>

Sergio Demian Lerner: Please confirm that you understand that:

The current SegWit being proposed comes bundled with an effective 2MB block size increase.

Are you proposing the remove this bundled policy change, and then have a different BIP that increases the block size? Not quite clear if you understand what the current proposal is.

Cheers,
Praxeology
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170331/3e54dfdb/attachment.html>

From sergio.d.lerner at gmail.com  Fri Mar 31 21:50:05 2017
From: sergio.d.lerner at gmail.com (Sergio Demian Lerner)
Date: Fri, 31 Mar 2017 18:50:05 -0300
Subject: [bitcoin-dev] Segwit2Mb - combined soft/hard fork - Request For
	Comments
In-Reply-To: <1OG7g5mI5q4lJn4f-aIWx9lRYYzKuhGB5pyBBMYz68_ngSfY6uHVduHYzCPKwIFQx3spKOf1gAG447AzPZEbXCCECHwziTse1ItmZgapvCQ=@protonmail.com>
References: <CAKzdR-oN6tGvGSb04_awCf=Jsf3wgKJN5xUhCr8G2D2W9YgJww@mail.gmail.com>
	<1OG7g5mI5q4lJn4f-aIWx9lRYYzKuhGB5pyBBMYz68_ngSfY6uHVduHYzCPKwIFQx3spKOf1gAG447AzPZEbXCCECHwziTse1ItmZgapvCQ=@protonmail.com>
Message-ID: <CAKzdR-o74VT1Of5MmDO5OKyKKU9bQhb6TywkOt0gRAYyF=Ht_Q@mail.gmail.com>

Praxelogy_guy,
Yes I understand that segwit2mb represents a "potential" 4Mb block size
increase.
But Segwit does not immediately lead to 2 Mb blocks, but can only achieve
close to a 2Mb increase if all Bitcoin wallets switch to segwit, which will
take a couple of years.
Therefore I don't expect transactions per block to quadruple from one day
to another.


On Fri, Mar 31, 2017 at 6:22 PM, praxeology_guy <
praxeology_guy at protonmail.com> wrote:

> Sergio Demian Lerner: Please confirm that you understand that:
>
> The current SegWit being proposed comes bundled with an effective 2MB
> block size increase.
>
> Are you proposing the remove this bundled policy change, and then have a
> different BIP that increases the block size?  Not quite clear if you
> understand what the current proposal is.
>
> Cheers,
> Praxeology
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170331/f17d5dc2/attachment.html>

From bram at bittorrent.com  Fri Mar 31 22:05:07 2017
From: bram at bittorrent.com (Bram Cohen)
Date: Fri, 31 Mar 2017 15:05:07 -0700
Subject: [bitcoin-dev] The TXO bitfield
Message-ID: <CA+KqGkpa0=O-ob6SsxST6bHwHu9hTnS16wnpNusrbc8nXVEouA@mail.gmail.com>

Looking forward in node scaling we can envision a future in which blocks
are required to come with proofs of their validity and nodes can be run
entirely in memory and never have to hit disk. Ideally we'd like for proofs
to be able to be stored in client wallets which plan to spend their utxos
later, or at least be able to have a full node make a single not terribly
expensive disk access to form the proof which can then be passed along to
other peers.

Such proofs will probably be significantly larger than the blocks they
prove (this is merkle root stuff, not zero knowledge stuff), but if we
accept that as a given then this should be doable, although the details of
how to do it aren't obvious.

This vision can be implemented simply and efficiently by playing some games
with the semantics of the term 'proof'. A proof is a thing which convinces
someone of something. What we've discussed in the past for such proofs
mostly has to do with maintaining a hash root of everything and having
proofs lead to that. This is an extrema of complexity of the proof and
simplicity of the checker, at the expense of forcing the root to be
maintained at all times and the proof to be reasonably fresh. Some tricks
can be applied to keep that problem under control, but there's an
alternative approach where the amount of data necessary to do validation is
much larger but still entirely reasonable to keep in memory, and the sizes
of proofs and their required freshness is much smaller.

In the previous discussion on Merkle sets I commented that insertion
ordering's main practical utility may be that it allows for compression. It
turns out that a constant factor of 256 makes a big difference. Since
there's only really one bit stored for each txo (stored or not) once you
have an insertion ordering you can simply store a bitfield of all txos so
far, which is entirely reasonable to hold in memory, and can be made even
more reasonable by compactifying down the older, mostly spent portions of
it (how best to compress a bitfield while maintaining random access is an
interesting problem but entirely doable).

This approach meets all the design goals, even allowing wallets to remember
their own 'proofs', which are just proofs of insertion ordering. Those
don't even change once the risk of reorgs has passed, so they can be stored
for years without being maintained.

Proofs of insertion ordering can be made by having a canonical way of
calculating a root of position commitments for each block, and nodes
calculate those roots when evaluating the block history and store them all
in memory. A proof of position is a path to one of those roots.

I've intentionally skipped over most of the details here, because it's
probably best to have a high level discussion of this as a general approach
before getting lost in the weeds.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170331/d7516c3d/attachment.html>

From sergio.d.lerner at gmail.com  Fri Mar 31 22:13:35 2017
From: sergio.d.lerner at gmail.com (Sergio Demian Lerner)
Date: Fri, 31 Mar 2017 19:13:35 -0300
Subject: [bitcoin-dev] Segwit2Mb - combined soft/hard fork - Request For
	Comments
In-Reply-To: <1CF1FD5D-8D29-4783-823F-B3F588D5C5CE@mattcorallo.com>
References: <CAKzdR-oN6tGvGSb04_awCf=Jsf3wgKJN5xUhCr8G2D2W9YgJww@mail.gmail.com>
	<1CF1FD5D-8D29-4783-823F-B3F588D5C5CE@mattcorallo.com>
Message-ID: <CAKzdR-o0_CK1RPDKSV869Tk5JCo9KOmEoAyXYRAOphu00K8KkQ@mail.gmail.com>

On Fri, Mar 31, 2017 at 6:22 PM, Matt Corallo <lf-lists at mattcorallo.com>
wrote:

> Hey Sergio,
>
> You appear to have ignored the last two years of Bitcoin hardfork
> research and understanding, recycling instead BIP 102 from 2015. There
> are many proposals which have pushed the state of hard fork research
> much further since then, and you may wish to read some of the posts on
> this mailing list listed at https://bitcoinhardforkresearch.github.io/
> and make further edits based on what you learn.


I've read every proposal that was published in the last two years and the
choice for NOT implementing any of the super cool research you cite is
intentional.

We're in a deadlock and it seems we can't go forward adding more
functionality to segwit without the community approval (which include
miners). This is obvious to me.Then we have to go back.

If this last resort solution is merged, we could go back to discuss
improvements with the

Your goal of "avoid
> technical changes" appears to not have any basis outside of perceived
> compromise for compromise sake, only making such a hardfork riskier
> instead.
>
> You're are totally correct. It's a compromise for the compromise sake. I
couldn't have expressed it more clearly. However the only "riskier" element
is the hard forking date. We can move the date forward.


> At a minimum, in terms of pure technical changes, you should probably
> consider (probably among others):
>
a) Utilizing the "hard fork signaling bit" in the nVersion of the block.
>

This I could consider, as it requires probably a single line of code. Which
BIP specifies this?


> b) Either limiting non-SegWit transactions in some way to fix the n**2
> sighash and FindAndDelete runtime and memory usage issues or fix them by
> utilizing the new sighash type which many wallets and projects have
> already implemented for SegWit in the spending of non-SegWit outputs.
>

The Seghash problem has already been addressed by limiting the maximum size
of a transaction to 1 Mb.
The FindAndDelete problem has already been solved by the Core Developers,
so we don't have to worry about it anymore.


> c) Your really should have replay protection in any HF.


We could add a simple protection, although if we reach community consensus
and 95% of hashing power, does we really need to? Can the old chain still
be alive?
If more people ask for replay protection, I will merge Spoonet scheme or
develop the minimum possible replay protection (a simple signaling bit in
transaction version)


> d) You may wish to consider the possibility of tweaking the witness
> discount and possibly discounting other parts of the input - SegWit went
> a long ways towards making removal of elements from the UTXO set cheaper
> than adding them, but didn't quite get there, you should probably finish
> that job. This also provides additional tuneable parameters to allow you
> to increase the block size while not having a blowup in the worst-case
> block size.
>

That is an interesting economic change and would be out of the scope of
segwit2mb.


> e) Additional commitments at the top of the merkle root - both for
> SegWit transactions and as additional space for merged mining and other
> commitments which we may wish to add in the future, this should likely
> be implemented an "additional header" ala Johnson Lau's Spoonnet proposal.
>
> That is an interesting technical improvement that is out of the scope of
segwit2mb.
We can keep discussing spoonet while we merge segwit2mb, as spoonnet
includes most of technical innovations.


> Additionally, I think your parameters here pose very significant risk to
> the Bitcoin ecosystem broadly.
>
> a) Activating a hard fork with less than 18/24 months (and even then...)
> from a fully-audited and supported release of full node software to
> activation date poses significant risks to many large software projects
> and users. I've repeatedly received feedback from various folks that a
> year or more is likely required in any hard fork to limit this risk, and
> limited pushback on that given the large increase which SegWit provides
> itself buying a ton of time.
>
> The feedback I received is slightly different from your feedback. Many
company CTOs have expressed that one year for a Bitcoin hard-fork was
period they could schedule a secure upgrade.



> b) Having a significant discontinuity in block size increase only serves
> to confuse and mislead users and businesses, forcing them to rapidly
> adapt to a Bitcoin which changed overnight both by hardforking, and by
> fees changing suddenly. Instead, having the hard fork activate technical
> changes, and then slowly increasing the block size over the following
> several years keeps things nice and continuous and also keeps us from
> having to revisit ye old blocksize debate again six months after
> activation.
>
> This is something worth considering. There is the old Pieter BIP103
proposal has good parameters (17.7% per year).

c) You should likely consider the effect of the many technological
> innovations coming down the pipe in the coming months. Technologies like
> Lightning, TumbleBit, and even your own RootStock could significantly
> reduce fee pressure as transactions move to much faster and more
> featureful systems.
>
> RSK sidechain team would have to take very tough decisions if Bitcoin
splits, as RSK platform cannot be pegged to two different cryptocurrencies.
We could launch two platforms, but RSK value proposition is "supporting the
advance of Bitcoin, the cryptocurrecy with highest network effect". You
understand that if Bitcoin splits Bitcoin BTC/BTU separately may cease to
be the cryptocurrencies with higher volume/market cap/network effect.

Therefore all RSK people that I talked too would prefer to avoid a split at
all cost, reather that to be the winners of the scaling war.



> On March 31, 2017 5:09:18 PM EDT, Sergio Demian Lerner via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
> >Hi everyone,
> >
> >Segwit2Mb is the project to merge into Bitcoin a minimal patch that
> >aims to
> >untangle the current conflict between different political positions
> >regarding segwit activation vs. an increase of the on-chain blockchain
> >space through a standard block size increase. It is not a new solution,
> >but
> >it should be seen more as a least common denominator.
> >
> >Segwit2Mb combines segwit as it is today in Bitcoin 0.14+ with a 2MB
> >block
> >size hard-fork activated ONLY if segwit activates (95% of miners
> >signaling), but at a fixed future date.
> >
> >The sole objective of this proposal is to re-unite the Bitcoin
> >community
> >and avoid a cryptocurrency split. Segwit2Mb does not aim to be best
> >possible technical solution to solve Bitcoin technical limitations.
> >However, this proposal does not imply a compromise to the future
> >scalability or decentralization of Bitcoin, as a small increase in
> >block
> >size has been proven by several core and non-core developers not to
> >affect
> >Bitcoin value propositions.
> >
> >In the worst case, a 2X block size increase has much lower economic
> >impact
> >than the last bitcoin halving (<10%), which succeeded without problem.
> >
> >On the other side, Segwit2Mb primary goal is to be minimalistic: in
> >this
> >patch some choices have been made to reduce the number of lines
> >modified in
> >the current Bitcoin Core state (master branch), instead of implementing
> >the
> >most elegant solution. This is because I want to reduce the time it
> >takes
> >for core programmers and reviewers to check the correctness of the
> >code,
> >and to report and correct bugs.
> >
> >The patch was built by forking the master branch of Bitcoin Core,
> >mixing a
> >few lines of code from Jeff Garzik's BIP102,  and defining a second
> >versionbits activation bit (bit 2) for the combined activation.
> >
> >The combined activation of segwit and 2Mb hard-fork nVersion bit is 2
> >(DEPLOYMENT_SEGWIT_AND_2MB_BLOCKS).
> >
> >This means that segwit can still be activated without the 2MB hard-fork
> >by
> >signaling bit 1 in nVersion  (DEPLOYMENT_SEGWIT).
> >
> >The tentative lock-in and hard-fork dates are the following:
> >
> >Bit 2 signaling StartTime = 1493424000; // April 29th, 2017
> >
> >Bit 2 signaling Timeout = 1503964800; // August 29th, 2017
> >
> >HardForkTime = 1513209600; // Thu, 14 Dec 2017 00:00:00 GMT
> >
> >
> >The hard-fork is conditional to 95% of the hashing power has approved
> >the
> >segwit2mb soft-fork and the segwit soft-fork has been activated (which
> >should occur 2016 blocks after its lock-in time)
> >
> >For more information on how soft-forks are signaled and activated, see
> >https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki
> >
> >This means that segwit would be activated before 2Mb: this is
> >inevitable,
> >as versionbits have been designed to have fixed activation periods and
> >thresholds for all bits. Making segwit and 2Mb fork activate together
> >at a
> >delayed date would have required a major re-write of this code, which
> >would
> >contradict the premise of creating a minimalistic patch. However, once
> >segwit is activated, the hard-fork is unavoidable.
> >
> >Although I have coded a first version of the segwit2mb patch (which
> >modifies 120 lines of code, and adds 220 lines of testing code), I
> >would
> >prefer to wait to publish the source code until more comments have been
> >received from the community.
> >
> >To prevent worsening block verification time because of the O(N^2)
> >hashing
> >problem, the simple restriction that transactions cannot be larger than
> >1Mb
> >has been kept. Therefore the worse-case of block verification time has
> >only
> >doubled.
> >
> >Regarding the hard-fork activation date, I want to give enough time to
> >all
> >active economic nodes to upgrade. As of Fri Mar 31 2017,
> >https://bitnodes.21.co/nodes/ reports that 6332 out of 6955 nodes (91%)
> >have upgraded to post 0.12 versions. Upgrade to post 0.12 versions can
> >be
> >used to identify economic active nodes, because in the 0.12 release
> >dynamic
> >fees were introduced, and currently no Bitcoin automatic payment system
> >can
> >operate without automatic discovery of the current fee rate. A pre-0.12
> >would require constant manual intervention.
> >Therefore I conclude that no more than 91% of the network nodes
> >reported by
> >bitnodes are active economic nodes.
> >
> >As Bitcoin Core 0.12 was released on February 2016, the time for this
> >91%
> >to upgrade has been around one year (under a moderate pressure of
> >operational problems with unconfirmed transactions).
> >Therefore we can expect a similar or lower time to upgrade for a
> >hard-fork,
> >after developers have discussed and approved the patch, and it has been
> >reviewed and merged and 95% of the hashing power has signaled for it
> >(the
> >pressure not to upgrade being a complete halt of the operations).
> >However I
> >suggest that we discuss the hard-fork date and delay it if there is a
> >real
> >need to.
> >
> >Currently time works against the Bitcoin community, and so is delaying
> >a
> >compromise solution. Most of the community agree that halting the
> >innovation for several years is a very bad option.
> >
> >After the comments collected by the community, a BIP will be written
> >describing the resulting proposal details.
> >
> >If segwit2mb locks-in, before hard-fork occurs all bitcoin nodes should
> >be
> >updated to a Segwit2Mb enabled node to prevent them to be forked-away
> >in a
> >chain with almost no hashing-power.
> >
> >The proof of concept patch was made for Bitcoin Core but should be
> >easily
> >ported to other Bitcoin protocol implementations that already support
> >versionbits. Lightweight (SPV) wallets should not be affected as they
> >generally do not check the block size.
> >
> >I personally want to see the Lightning Network in action this year, use
> >the
> >non-malleability features in segwit, see the community discussing other
> >exciting soft-forks in the scaling roadmap, Schnorr sigs, drivechains
> >and
> >MAST.
> >
> >I want to see miners, developers and industry side-by-side pushing
> >Bitcoin
> >forward, to increase the value of Bitcoin and prevent high transaction
> >fees
> >to put out of business use-cases that could have high positive social
> >impact.
> >
> >I believe in the strength of a unified Bitcoin community. If you're a
> >developer, please give your opinion, suggest changes, audit it, and
> >take a
> >stand with me to unlock the current Bitcoin deadlock.
> >
> >Contributions to the segwit2mb project are welcomed and awaited. The
> >only
> >limitation is to stick to the principle that the patch should be as
> >simple
> >to audit as possible. As an example, I wouldn't feel confident if the
> >patch
> >modified more than ~150 lines of code.
> >
> >Improvements unrelated to a 2 Mb increase or segwit, as beneficial as
> >it
> >may be to Bitcoin, should not be part of segwit2Mb.
> >
> >This proposal should not prevent other consensus proposals to be
> >simultaneously merged: segwit2mb is a last resort solution in case we
> >can
> >not reach consensus on anything better.
> >
> >Again, the proposal is only a starting point: community feedback is
> >expected and welcomed.
> >
> >Regards,
> >Sergio Demian Lerner
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170331/21fb6e3f/attachment-0001.html>

From eric at voskuil.org  Fri Mar 31 23:13:09 2017
From: eric at voskuil.org (Eric Voskuil)
Date: Fri, 31 Mar 2017 16:13:09 -0700
Subject: [bitcoin-dev] Hard fork proposal from last week's meeting
In-Reply-To: <CABerxhFY8NoA6sSiz1oZ=01Di8n9+QR1xE6NNtxvm=Ov1bGhWQ@mail.gmail.com>
References: <CABerxhFY8NoA6sSiz1oZ=01Di8n9+QR1xE6NNtxvm=Ov1bGhWQ@mail.gmail.com>
Message-ID: <9eb001f8-7623-3c79-41bb-7ed6e45b43ae@voskuil.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

On 03/31/2017 02:23 PM, Rodney Morris via bitcoin-dev wrote:
> If the obsession with every personal computer being able to run a
> fill node continues then bitcoin will be consigned to the dustbin
> of history,

The cause of the block size debate is the failure to understand the
Bitcoin security model. This failure is perfectly exemplified by the
above statement. If a typical personal computer cannot run a node
there is no security.

e
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)

iQEcBAEBCAAGBQJY3uJ8AAoJEDzYwH8LXOFOrBoH/1VdXQObKZ2JPHL387Sd8qT4
zzWt8tKFD+6/uCS8re97h1lZcbwb3EzBOB1J15mJ3fqTOU/rPCitN+JZAMgpw/z9
NGNp4KQDHo3vLiWWOq2GhJzyVAOcDKYLsY8/NrHK91OtABD2XIq9gERwRoZZE4rb
OPSjSAGvDK8cki72O7HpyEKX5WEyHsHNK/JmBDdTjlzkMcNEbBlYMgO24RC6x+UA
8Fh17rOcfGv6amIbmS7mK3EMkkGL83WmsgJKXNl4inI1R8z5hVKRqOFMPxmTDXVc
dEHtw8poHOX1Ld85m0+Tk2S7IdH66PCnhsKL9l6vlH02uAvLNfKxb+291q2g3YU=
=HPCK
-----END PGP SIGNATURE-----

